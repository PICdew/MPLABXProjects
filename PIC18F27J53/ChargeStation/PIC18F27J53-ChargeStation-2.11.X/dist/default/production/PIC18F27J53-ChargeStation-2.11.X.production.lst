

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Nov 11 00:58:51 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    15                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,delta=1
   140                           	psect	text121,global,reloc=2,class=CODE,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,delta=1
   149                           	psect	text130,global,reloc=2,class=CODE,delta=1
   150                           	psect	text131,global,reloc=2,class=CODE,delta=1
   151                           	psect	text132,global,reloc=2,class=CODE,delta=1
   152                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   153                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   154                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   155                           	dabs	1,0xD00,48,_BDT
   156                           	dabs	1,0xD38,8,_CtrlTrfData
   157                           	dabs	1,0xD30,8,_SetupPkt
   158  0000                     
   159                           	psect	idataBANK1
   160  016CAC                     __pidataBANK1:
   161                           	opt stack 0
   162                           
   163                           ;initializer for I2C_LCD_SetCursor@F8630
   164  016CAC  00                 	db	0
   165  016CAD  40                 	db	64
   166                           
   167                           ;initializer for epoch_to_caltime@month_cache
   168  016CAE  01                 	db	1
   169                           
   170                           	psect	mediumconst
   171  00FA50                     __pmediumconst:
   172                           	opt stack 0
   173  00FA50  00                 	db	0
   174  00FA51                     _dpowers:
   175                           	opt stack 0
   176  00FA51  0001               	dw	1
   177  00FA53  0000               	dw	0
   178  00FA55  000A               	dw	10
   179  00FA57  0000               	dw	0
   180  00FA59  0064               	dw	100
   181  00FA5B  0000               	dw	0
   182  00FA5D  03E8               	dw	1000
   183  00FA5F  0000               	dw	0
   184  00FA61  2710               	dw	10000
   185  00FA63  0000               	dw	0
   186  00FA65  86A0               	dw	34464
   187  00FA67  0001               	dw	1
   188  00FA69  4240               	dw	16960
   189  00FA6B  000F               	dw	15
   190  00FA6D  9680               	dw	38528
   191  00FA6F  0098               	dw	152
   192  00FA71  E100               	dw	57600
   193  00FA73  05F5               	dw	1525
   194  00FA75  CA00               	dw	51712
   195  00FA77  3B9A               	dw	15258
   196  00FA79                     __end_of_dpowers:
   197                           	opt stack 0
   198  00FA79                     _USB_SD_Ptr:
   199                           	opt stack 0
   200  00FA79  E2                 	db	low _sd000
   201  00FA7A  FB                 	db	high _sd000
   202  00FA7B  3C                 	db	low _sd001
   203  00FA7C  FB                 	db	high _sd001
   204  00FA7D  70                 	db	low _sd002
   205  00FA7E  FB                 	db	high _sd002
   206  00FA7F                     __end_of_USB_SD_Ptr:
   207                           	opt stack 0
   208  00FA7F                     _USB_CD_Ptr:
   209                           	opt stack 0
   210  00FA7F  F9                 	db	low _configDescriptor1
   211  00FA80  FA                 	db	high _configDescriptor1
   212  00FA81                     __end_of_USB_CD_Ptr:
   213                           	opt stack 0
   214  00FA81                     display_LCD@port_char:
   215                           	opt stack 0
   216  00FA81  4C                 	db	76
   217  00FA82  45                 	db	69
   218  00FA83  46                 	db	70
   219  00FA84  54                 	db	84
   220  00FA85  20                 	db	32
   221  00FA86  20                 	db	32
   222  00FA87  20                 	db	32
   223  00FA88  50                 	db	80
   224  00FA89  4F                 	db	79
   225  00FA8A  52                 	db	82
   226  00FA8B  54                 	db	84
   227  00FA8C  00                 	db	0
   228  00FA8D  00                 	db	0
   229  00FA8E  00                 	db	0
   230  00FA8F  00                 	db	0
   231  00FA90  00                 	db	0
   232  00FA91  00                 	db	0
   233  00FA92  00                 	db	0
   234  00FA93  00                 	db	0
   235  00FA94  00                 	db	0
   236  00FA95  43                 	db	67
   237  00FA96  45                 	db	69
   238  00FA97  4E                 	db	78
   239  00FA98  54                 	db	84
   240  00FA99  45                 	db	69
   241  00FA9A  52                 	db	82
   242  00FA9B  20                 	db	32
   243  00FA9C  50                 	db	80
   244  00FA9D  4F                 	db	79
   245  00FA9E  52                 	db	82
   246  00FA9F  54                 	db	84
   247  00FAA0  00                 	db	0
   248  00FAA1  00                 	db	0
   249  00FAA2  00                 	db	0
   250  00FAA3  00                 	db	0
   251  00FAA4  00                 	db	0
   252  00FAA5  00                 	db	0
   253  00FAA6  00                 	db	0
   254  00FAA7  00                 	db	0
   255  00FAA8  00                 	db	0
   256  00FAA9  52                 	db	82
   257  00FAAA  49                 	db	73
   258  00FAAB  47                 	db	71
   259  00FAAC  48                 	db	72
   260  00FAAD  54                 	db	84
   261  00FAAE  20                 	db	32
   262  00FAAF  20                 	db	32
   263  00FAB0  50                 	db	80
   264  00FAB1  4F                 	db	79
   265  00FAB2  52                 	db	82
   266  00FAB3  54                 	db	84
   267  00FAB4  00                 	db	0
   268  00FAB5  00                 	db	0
   269  00FAB6  00                 	db	0
   270  00FAB7  00                 	db	0
   271  00FAB8  00                 	db	0
   272  00FAB9  00                 	db	0
   273  00FABA  00                 	db	0
   274  00FABB  00                 	db	0
   275  00FABC  00                 	db	0
   276  00FABD  4C                 	db	76
   277  00FABE  65                 	db	101
   278  00FABF  66                 	db	102
   279  00FAC0  74                 	db	116
   280  00FAC1  20                 	db	32
   281  00FAC2  20                 	db	32
   282  00FAC3  20                 	db	32
   283  00FAC4  50                 	db	80
   284  00FAC5  6F                 	db	111
   285  00FAC6  72                 	db	114
   286  00FAC7  74                 	db	116
   287  00FAC8  00                 	db	0
   288  00FAC9  00                 	db	0
   289  00FACA  00                 	db	0
   290  00FACB  00                 	db	0
   291  00FACC  00                 	db	0
   292  00FACD  00                 	db	0
   293  00FACE  00                 	db	0
   294  00FACF  00                 	db	0
   295  00FAD0  00                 	db	0
   296  00FAD1  43                 	db	67
   297  00FAD2  65                 	db	101
   298  00FAD3  6E                 	db	110
   299  00FAD4  74                 	db	116
   300  00FAD5  65                 	db	101
   301  00FAD6  72                 	db	114
   302  00FAD7  20                 	db	32
   303  00FAD8  50                 	db	80
   304  00FAD9  6F                 	db	111
   305  00FADA  72                 	db	114
   306  00FADB  74                 	db	116
   307  00FADC  00                 	db	0
   308  00FADD  00                 	db	0
   309  00FADE  00                 	db	0
   310  00FADF  00                 	db	0
   311  00FAE0  00                 	db	0
   312  00FAE1  00                 	db	0
   313  00FAE2  00                 	db	0
   314  00FAE3  00                 	db	0
   315  00FAE4  00                 	db	0
   316  00FAE5  52                 	db	82
   317  00FAE6  69                 	db	105
   318  00FAE7  67                 	db	103
   319  00FAE8  68                 	db	104
   320  00FAE9  74                 	db	116
   321  00FAEA  20                 	db	32
   322  00FAEB  20                 	db	32
   323  00FAEC  50                 	db	80
   324  00FAED  6F                 	db	111
   325  00FAEE  72                 	db	114
   326  00FAEF  74                 	db	116
   327  00FAF0  00                 	db	0
   328  00FAF1  00                 	db	0
   329  00FAF2  00                 	db	0
   330  00FAF3  00                 	db	0
   331  00FAF4  00                 	db	0
   332  00FAF5  00                 	db	0
   333  00FAF6  00                 	db	0
   334  00FAF7  00                 	db	0
   335  00FAF8  00                 	db	0
   336  00FAF9                     __end_ofdisplay_LCD@port_char:
   337                           	opt stack 0
   338  00FAF9                     _configDescriptor1:
   339                           	opt stack 0
   340  00FAF9  09                 	db	9
   341  00FAFA  02                 	db	2
   342  00FAFB  43                 	db	67
   343  00FAFC  00                 	db	0
   344  00FAFD  02                 	db	2
   345  00FAFE  01                 	db	1
   346  00FAFF  00                 	db	0
   347  00FB00  C0                 	db	192
   348  00FB01  32                 	db	50
   349  00FB02  09                 	db	9
   350  00FB03  04                 	db	4
   351  00FB04  00                 	db	0
   352  00FB05  00                 	db	0
   353  00FB06  01                 	db	1
   354  00FB07  02                 	db	2
   355  00FB08  02                 	db	2
   356  00FB09  01                 	db	1
   357  00FB0A  00                 	db	0
   358  00FB0B  05                 	db	5
   359  00FB0C  24                 	db	36
   360  00FB0D  00                 	db	0
   361  00FB0E  10                 	db	16
   362  00FB0F  01                 	db	1
   363  00FB10  04                 	db	4
   364  00FB11  24                 	db	36
   365  00FB12  02                 	db	2
   366  00FB13  02                 	db	2
   367  00FB14  05                 	db	5
   368  00FB15  24                 	db	36
   369  00FB16  06                 	db	6
   370  00FB17  00                 	db	0
   371  00FB18  01                 	db	1
   372  00FB19  05                 	db	5
   373  00FB1A  24                 	db	36
   374  00FB1B  01                 	db	1
   375  00FB1C  00                 	db	0
   376  00FB1D  01                 	db	1
   377  00FB1E  07                 	db	7
   378  00FB1F  05                 	db	5
   379  00FB20  81                 	db	129
   380  00FB21  03                 	db	3
   381  00FB22  08                 	db	8
   382  00FB23  00                 	db	0
   383  00FB24  02                 	db	2
   384  00FB25  09                 	db	9
   385  00FB26  04                 	db	4
   386  00FB27  01                 	db	1
   387  00FB28  00                 	db	0
   388  00FB29  02                 	db	2
   389  00FB2A  0A                 	db	10
   390  00FB2B  00                 	db	0
   391  00FB2C  00                 	db	0
   392  00FB2D  00                 	db	0
   393  00FB2E  07                 	db	7
   394  00FB2F  05                 	db	5
   395  00FB30  02                 	db	2
   396  00FB31  02                 	db	2
   397  00FB32  40                 	db	64
   398  00FB33  00                 	db	0
   399  00FB34  00                 	db	0
   400  00FB35  07                 	db	7
   401  00FB36  05                 	db	5
   402  00FB37  82                 	db	130
   403  00FB38  02                 	db	2
   404  00FB39  40                 	db	64
   405  00FB3A  00                 	db	0
   406  00FB3B  00                 	db	0
   407  00FB3C                     __end_of_configDescriptor1:
   408                           	opt stack 0
   409  00FB3C                     _sd001:
   410                           	opt stack 0
   411  00FB3C  34                 	db	52
   412  00FB3D  03                 	db	3
   413  00FB3E  004D               	dw	77
   414  00FB40  0069               	dw	105
   415  00FB42  0063               	dw	99
   416  00FB44  0072               	dw	114
   417  00FB46  006F               	dw	111
   418  00FB48  0063               	dw	99
   419  00FB4A  0068               	dw	104
   420  00FB4C  0069               	dw	105
   421  00FB4E  0070               	dw	112
   422  00FB50  0020               	dw	32
   423  00FB52  0054               	dw	84
   424  00FB54  0065               	dw	101
   425  00FB56  0063               	dw	99
   426  00FB58  0068               	dw	104
   427  00FB5A  006E               	dw	110
   428  00FB5C  006F               	dw	111
   429  00FB5E  006C               	dw	108
   430  00FB60  006F               	dw	111
   431  00FB62  0067               	dw	103
   432  00FB64  0079               	dw	121
   433  00FB66  0020               	dw	32
   434  00FB68  0049               	dw	73
   435  00FB6A  006E               	dw	110
   436  00FB6C  0063               	dw	99
   437  00FB6E  002E               	dw	46
   438  00FB70                     __end_of_sd001:
   439                           	opt stack 0
   440  00FB70                     _sd002:
   441                           	opt stack 0
   442  00FB70  34                 	db	52
   443  00FB71  03                 	db	3
   444  00FB72  0043               	dw	67
   445  00FB74  0044               	dw	68
   446  00FB76  0043               	dw	67
   447  00FB78  0020               	dw	32
   448  00FB7A  0052               	dw	82
   449  00FB7C  0053               	dw	83
   450  00FB7E  002D               	dw	45
   451  00FB80  0032               	dw	50
   452  00FB82  0033               	dw	51
   453  00FB84  0032               	dw	50
   454  00FB86  0020               	dw	32
   455  00FB88  0045               	dw	69
   456  00FB8A  006D               	dw	109
   457  00FB8C  0075               	dw	117
   458  00FB8E  006C               	dw	108
   459  00FB90  0061               	dw	97
   460  00FB92  0074               	dw	116
   461  00FB94  0069               	dw	105
   462  00FB96  006F               	dw	111
   463  00FB98  006E               	dw	110
   464  00FB9A  0020               	dw	32
   465  00FB9C  0044               	dw	68
   466  00FB9E  0065               	dw	101
   467  00FBA0  006D               	dw	109
   468  00FBA2  006F               	dw	111
   469  00FBA4                     __end_of_sd002:
   470                           	opt stack 0
   471  00FBA4                     _weekday_3char:
   472                           	opt stack 0
   473  00FBA4  53                 	db	83
   474  00FBA5  55                 	db	85
   475  00FBA6  4E                 	db	78
   476  00FBA7  00                 	db	0
   477  00FBA8  4D                 	db	77
   478  00FBA9  4F                 	db	79
   479  00FBAA  4E                 	db	78
   480  00FBAB  00                 	db	0
   481  00FBAC  54                 	db	84
   482  00FBAD  55                 	db	85
   483  00FBAE  45                 	db	69
   484  00FBAF  00                 	db	0
   485  00FBB0  57                 	db	87
   486  00FBB1  45                 	db	69
   487  00FBB2  44                 	db	68
   488  00FBB3  00                 	db	0
   489  00FBB4  54                 	db	84
   490  00FBB5  48                 	db	72
   491  00FBB6  55                 	db	85
   492  00FBB7  00                 	db	0
   493  00FBB8  46                 	db	70
   494  00FBB9  52                 	db	82
   495  00FBBA  49                 	db	73
   496  00FBBB  00                 	db	0
   497  00FBBC  53                 	db	83
   498  00FBBD  41                 	db	65
   499  00FBBE  54                 	db	84
   500  00FBBF  00                 	db	0
   501  00FBC0                     __end_of_weekday_3char:
   502                           	opt stack 0
   503  00FBC0                     _device_dsc:
   504                           	opt stack 0
   505  00FBC0  12                 	db	18
   506  00FBC1  01                 	db	1
   507  00FBC2  0200               	dw	512
   508  00FBC4  02                 	db	2
   509  00FBC5  00                 	db	0
   510  00FBC6  00                 	db	0
   511  00FBC7  08                 	db	8
   512  00FBC8  04D8               	dw	1240
   513  00FBCA  000A               	dw	10
   514  00FBCC  0100               	dw	256
   515  00FBCE  01                 	db	1
   516  00FBCF  02                 	db	2
   517  00FBD0  00                 	db	0
   518  00FBD1  01                 	db	1
   519  00FBD2                     __end_of_device_dsc:
   520                           	opt stack 0
   521  00FBD2                     display_LCD@onoff:
   522                           	opt stack 0
   523  00FBD2  20                 	db	32
   524  00FBD3  4F                 	db	79
   525  00FBD4  46                 	db	70
   526  00FBD5  46                 	db	70
   527  00FBD6  00                 	db	0
   528  00FBD7  20                 	db	32
   529  00FBD8  4F                 	db	79
   530  00FBD9  4E                 	db	78
   531  00FBDA  20                 	db	32
   532  00FBDB  00                 	db	0
   533  00FBDC                     __end_ofdisplay_LCD@onoff:
   534                           	opt stack 0
   535  00FBDC                     data_out@p:
   536                           	opt stack 0
   537  00FBDC  4C                 	db	76
   538  00FBDD  00                 	db	0
   539  00FBDE  43                 	db	67
   540  00FBDF  00                 	db	0
   541  00FBE0  52                 	db	82
   542  00FBE1  00                 	db	0
   543  00FBE2                     __end_ofdata_out@p:
   544                           	opt stack 0
   545  00FBE2                     _sd000:
   546                           	opt stack 0
   547  00FBE2  04                 	db	4
   548  00FBE3  03                 	db	3
   549  00FBE4  0409               	dw	1033
   550  00FBE6                     __end_of_sd000:
   551                           	opt stack 0
   552  0000                     _ANCON0	set	3912
   553  0000                     _ANCON1	set	3913
   554  0000                     _PADCFG1bits	set	3900
   555  0000                     _RTCCAL	set	3902
   556  0000                     _RTCCFGbits	set	3903
   557  0000                     _RTCVALH	set	3899
   558  0000                     _RTCVALL	set	3898
   559  0000                     _T5CONbits	set	3874
   560  0000                     _UADDR	set	3896
   561  0000                     _UCFG	set	3897
   562  0000                     _UEIE	set	3895
   563  0000                     _UEP0bits	set	3878
   564  0000                     _UIE	set	3894
   565  0000                     _UIEbits	set	3894
   566  0000                     _UEP0	set	3878
   567  0000                     _UEP1	set	3879
   568  0000                     _ADRES	set	4035
   569  0000                     _ADCON0bits	set	4034
   570  0000                     _ADCON1bits	set	4033
   571  0000                     _BAUDCON1bits	set	3966
   572  0000                     _CTMUCONH	set	4019
   573  0000                     _CTMUCONHbits	set	4019
   574  0000                     _CTMUCONL	set	4018
   575  0000                     _CTMUCONLbits	set	4018
   576  0000                     _CTMUICON	set	4017
   577  0000                     _EECON2	set	4007
   578  0000                     _INTCON2bits	set	4081
   579  0000                     _INTCONbits	set	4082
   580  0000                     _IPR1bits	set	3999
   581  0000                     _IPR2bits	set	4002
   582  0000                     _IPR5bits	set	3993
   583  0000                     _OSCCONbits	set	4051
   584  0000                     _OSCTUNEbits	set	3995
   585  0000                     _PIE1bits	set	3997
   586  0000                     _PIE2bits	set	4000
   587  0000                     _PIE5bits	set	3985
   588  0000                     _PIR1bits	set	3998
   589  0000                     _PIR2bits	set	4001
   590  0000                     _PIR5bits	set	3992
   591  0000                     _RCONbits	set	4048
   592  0000                     _RCREG1	set	4015
   593  0000                     _RCSTA1bits	set	4012
   594  0000                     _SPBRG1	set	4016
   595  0000                     _SPBRGH1	set	3967
   596  0000                     _SSP1ADD	set	4040
   597  0000                     _SSP1BUF	set	4041
   598  0000                     _SSP1CON1	set	4038
   599  0000                     _SSP1CON1bits	set	4038
   600  0000                     _SSP1CON2	set	4037
   601  0000                     _SSP1CON2bits	set	4037
   602  0000                     _SSP1STAT	set	4039
   603  0000                     _SSP1STATbits	set	4039
   604  0000                     _T0CONbits	set	4053
   605  0000                     _T1CONbits	set	4045
   606  0000                     _T3CONbits	set	3961
   607  0000                     _TMR1H	set	4047
   608  0000                     _TRISA	set	3986
   609  0000                     _TRISB	set	3987
   610  0000                     _TRISC	set	3988
   611  0000                     _TXREG1	set	4014
   612  0000                     _TXSTA1bits	set	4013
   613  0000                     _UCON	set	3941
   614  0000                     _UCONbits	set	3941
   615  0000                     _UEIR	set	3939
   616  0000                     _UIR	set	3938
   617  0000                     _UIRbits	set	3938
   618  0000                     _USTAT	set	3940
   619  0000                     _BCL1IF	set	32011
   620  0000                     _LATA5	set	31821
   621  0000                     _LATA6	set	31822
   622  0000                     _LATA7	set	31823
   623  0000                     _LATB2	set	31826
   624  0000                     _LATB6	set	31830
   625  0000                     _LATB7	set	31831
   626  0000                     _LATC2	set	31834
   627  0000                     _SSP1IF	set	31987
   628  00FBE6                     STR_13:
   629  00FBE6  09                 	db	9
   630  00FBE7  2A                 	db	42
   631  00FBE8  2A                 	db	42
   632  00FBE9  2A                 	db	42
   633  00FBEA  2A                 	db	42
   634  00FBEB  2A                 	db	42
   635  00FBEC  2A                 	db	42
   636  00FBED  2A                 	db	42
   637  00FBEE  2A                 	db	42
   638  00FBEF  2A                 	db	42
   639  00FBF0  2A                 	db	42
   640  00FBF1  2A                 	db	42
   641  00FBF2  2A                 	db	42
   642  00FBF3  2A                 	db	42
   643  00FBF4  2A                 	db	42
   644  00FBF5  2A                 	db	42
   645  00FBF6  2A                 	db	42
   646  00FBF7  2A                 	db	42
   647  00FBF8  2A                 	db	42
   648  00FBF9  2A                 	db	42
   649  00FBFA  2A                 	db	42
   650  00FBFB  2A                 	db	42
   651  00FBFC  2A                 	db	42
   652  00FBFD  2A                 	db	42
   653  00FBFE  2A                 	db	42
   654  00FBFF  2A                 	db	42
   655  00FC00  2A                 	db	42
   656  00FC01  2A                 	db	42
   657  00FC02  2A                 	db	42
   658  00FC03  2A                 	db	42
   659  00FC04  0A                 	db	10
   660  00FC05  09                 	db	9
   661  00FC06  2A                 	db	42
   662  00FC07  2A                 	db	42
   663  00FC08  2A                 	db	42
   664  00FC09  2A                 	db	42
   665  00FC0A  20                 	db	32
   666  00FC0B  43                 	db	67	;'C'
   667  00FC0C  68                 	db	104	;'h'
   668  00FC0D  61                 	db	97	;'a'
   669  00FC0E  72                 	db	114	;'r'
   670  00FC0F  67                 	db	103	;'g'
   671  00FC10  65                 	db	101	;'e'
   672  00FC11  20                 	db	32
   673  00FC12  53                 	db	83	;'S'
   674  00FC13  74                 	db	116	;'t'
   675  00FC14  61                 	db	97	;'a'
   676  00FC15  74                 	db	116	;'t'
   677  00FC16  69                 	db	105	;'i'
   678  00FC17  6F                 	db	111	;'o'
   679  00FC18  6E                 	db	110	;'n'
   680  00FC19  20                 	db	32
   681  00FC1A  36                 	db	54	;'6'
   682  00FC1B  2E                 	db	46
   683  00FC1C  31                 	db	49	;'1'
   684  00FC1D  32                 	db	50	;'2'
   685  00FC1E  20                 	db	32
   686  00FC1F  2A                 	db	42
   687  00FC20  2A                 	db	42
   688  00FC21  2A                 	db	42
   689  00FC22  2A                 	db	42
   690  00FC23  0A                 	db	10
   691  00FC24  09                 	db	9
   692  00FC25  2A                 	db	42
   693  00FC26  2A                 	db	42
   694  00FC27  2A                 	db	42
   695  00FC28  2A                 	db	42
   696  00FC29  20                 	db	32
   697  00FC2A  4D                 	db	77	;'M'
   698  00FC2B  61                 	db	97	;'a'
   699  00FC2C  64                 	db	100	;'d'
   700  00FC2D  65                 	db	101	;'e'
   701  00FC2E  20                 	db	32
   702  00FC2F  62                 	db	98	;'b'
   703  00FC30  79                 	db	121	;'y'
   704  00FC31  20                 	db	32
   705  00FC32  40                 	db	64	;'@'
   706  00FC33  52                 	db	82	;'R'
   707  00FC34  79                 	db	121	;'y'
   708  00FC35  6F                 	db	111	;'o'
   709  00FC36  6B                 	db	107	;'k'
   710  00FC37  65                 	db	101	;'e'
   711  00FC38  72                 	db	114	;'r'
   712  00FC39  69                 	db	105	;'i'
   713  00FC3A  31                 	db	49	;'1'
   714  00FC3B  34                 	db	52	;'4'
   715  00FC3C  20                 	db	32
   716  00FC3D  20                 	db	32
   717  00FC3E  2A                 	db	42
   718  00FC3F  2A                 	db	42
   719  00FC40  2A                 	db	42
   720  00FC41  2A                 	db	42
   721  00FC42  0A                 	db	10
   722  00FC43  09                 	db	9
   723  00FC44  2A                 	db	42
   724  00FC45  2A                 	db	42
   725  00FC46  2A                 	db	42
   726  00FC47  2A                 	db	42
   727  00FC48  2A                 	db	42
   728  00FC49  2A                 	db	42
   729  00FC4A  2A                 	db	42
   730  00FC4B  2A                 	db	42
   731  00FC4C  2A                 	db	42
   732  00FC4D  2A                 	db	42
   733  00FC4E  2A                 	db	42
   734  00FC4F  2A                 	db	42
   735  00FC50  2A                 	db	42
   736  00FC51  2A                 	db	42
   737  00FC52  2A                 	db	42
   738  00FC53  2A                 	db	42
   739  00FC54  2A                 	db	42
   740  00FC55  2A                 	db	42
   741  00FC56  2A                 	db	42
   742  00FC57  2A                 	db	42
   743  00FC58  2A                 	db	42
   744  00FC59  2A                 	db	42
   745  00FC5A  2A                 	db	42
   746  00FC5B  2A                 	db	42
   747  00FC5C  2A                 	db	42
   748  00FC5D  2A                 	db	42
   749  00FC5E  2A                 	db	42
   750  00FC5F  2A                 	db	42
   751  00FC60  2A                 	db	42
   752  00FC61  0A                 	db	10
   753  00FC62  0A                 	db	10
   754  00FC63  09                 	db	9
   755  00FC64  70                 	db	112	;'p'
   756  00FC65  72                 	db	114	;'r'
   757  00FC66  69                 	db	105	;'i'
   758  00FC67  6E                 	db	110	;'n'
   759  00FC68  74                 	db	116	;'t'
   760  00FC69  5F                 	db	95	;'_'
   761  00FC6A  74                 	db	116	;'t'
   762  00FC6B  69                 	db	105	;'i'
   763  00FC6C  6D                 	db	109	;'m'
   764  00FC6D  65                 	db	101	;'e'
   765  00FC6E  28                 	db	40
   766  00FC6F  74                 	db	116	;'t'
   767  00FC70  29                 	db	41
   768  00FC71  0A                 	db	10
   769  00FC72  09                 	db	9
   770  00FC73  61                 	db	97	;'a'
   771  00FC74  64                 	db	100	;'d'
   772  00FC75  6A                 	db	106	;'j'
   773  00FC76  75                 	db	117	;'u'
   774  00FC77  73                 	db	115	;'s'
   775  00FC78  74                 	db	116	;'t'
   776  00FC79  5F                 	db	95	;'_'
   777  00FC7A  74                 	db	116	;'t'
   778  00FC7B  69                 	db	105	;'i'
   779  00FC7C  6D                 	db	109	;'m'
   780  00FC7D  65                 	db	101	;'e'
   781  00FC7E  28                 	db	40
   782  00FC7F  61                 	db	97	;'a'
   783  00FC80  74                 	db	116	;'t'
   784  00FC81  29                 	db	41
   785  00FC82  20                 	db	32
   786  00FC83  5B                 	db	91	;'['
   787  00FC84  68                 	db	104	;'h'
   788  00FC85  61                 	db	97	;'a'
   789  00FC86  6E                 	db	110	;'n'
   790  00FC87  64                 	db	100	;'d'
   791  00FC88  3A                 	db	58	;':'
   792  00FC89  79                 	db	121	;'y'
   793  00FC8A  2C                 	db	44
   794  00FC8B  4D                 	db	77	;'M'
   795  00FC8C  2C                 	db	44
   796  00FC8D  64                 	db	100	;'d'
   797  00FC8E  2C                 	db	44
   798  00FC8F  68                 	db	104	;'h'
   799  00FC90  2C                 	db	44
   800  00FC91  6D                 	db	109	;'m'
   801  00FC92  2C                 	db	44
   802  00FC93  73                 	db	115	;'s'
   803  00FC94  5D                 	db	93	;']'
   804  00FC95  20                 	db	32
   805  00FC96  5B                 	db	91	;'['
   806  00FC97  76                 	db	118	;'v'
   807  00FC98  61                 	db	97	;'a'
   808  00FC99  6C                 	db	108	;'l'
   809  00FC9A  75                 	db	117	;'u'
   810  00FC9B  65                 	db	101	;'e'
   811  00FC9C  28                 	db	40
   812  00FC9D  64                 	db	100	;'d'
   813  00FC9E  65                 	db	101	;'e'
   814  00FC9F  63                 	db	99	;'c'
   815  00FCA0  69                 	db	105	;'i'
   816  00FCA1  6D                 	db	109	;'m'
   817  00FCA2  61                 	db	97	;'a'
   818  00FCA3  6C                 	db	108	;'l'
   819  00FCA4  29                 	db	41
   820  00FCA5  5D                 	db	93	;']'
   821  00FCA6  0A                 	db	10
   822  00FCA7  09                 	db	9
   823  00FCA8  73                 	db	115	;'s'
   824  00FCA9  65                 	db	101	;'e'
   825  00FCAA  74                 	db	116	;'t'
   826  00FCAB  74                 	db	116	;'t'
   827  00FCAC  69                 	db	105	;'i'
   828  00FCAD  6E                 	db	110	;'n'
   829  00FCAE  67                 	db	103	;'g'
   830  00FCAF  73                 	db	115	;'s'
   831  00FCB0  28                 	db	40
   832  00FCB1  73                 	db	115	;'s'
   833  00FCB2  65                 	db	101	;'e'
   834  00FCB3  74                 	db	116	;'t'
   835  00FCB4  29                 	db	41
   836  00FCB5  20                 	db	32
   837  00FCB6  5B                 	db	91	;'['
   838  00FCB7  70                 	db	112	;'p'
   839  00FCB8  6F                 	db	111	;'o'
   840  00FCB9  72                 	db	114	;'r'
   841  00FCBA  74                 	db	116	;'t'
   842  00FCBB  3A                 	db	58	;':'
   843  00FCBC  6C                 	db	108	;'l'
   844  00FCBD  65                 	db	101	;'e'
   845  00FCBE  66                 	db	102	;'f'
   846  00FCBF  74                 	db	116	;'t'
   847  00FCC0  28                 	db	40
   848  00FCC1  6C                 	db	108	;'l'
   849  00FCC2  29                 	db	41
   850  00FCC3  2C                 	db	44
   851  00FCC4  63                 	db	99	;'c'
   852  00FCC5  65                 	db	101	;'e'
   853  00FCC6  6E                 	db	110	;'n'
   854  00FCC7  74                 	db	116	;'t'
   855  00FCC8  65                 	db	101	;'e'
   856  00FCC9  72                 	db	114	;'r'
   857  00FCCA  28                 	db	40
   858  00FCCB  63                 	db	99	;'c'
   859  00FCCC  29                 	db	41
   860  00FCCD  2C                 	db	44
   861  00FCCE  72                 	db	114	;'r'
   862  00FCCF  69                 	db	105	;'i'
   863  00FCD0  67                 	db	103	;'g'
   864  00FCD1  68                 	db	104	;'h'
   865  00FCD2  74                 	db	116	;'t'
   866  00FCD3  28                 	db	40
   867  00FCD4  72                 	db	114	;'r'
   868  00FCD5  29                 	db	41
   869  00FCD6  5D                 	db	93	;']'
   870  00FCD7  0A                 	db	10
   871  00FCD8  09                 	db	9
   872  00FCD9  09                 	db	9
   873  00FCDA  5B                 	db	91	;'['
   874  00FCDB  61                 	db	97	;'a'
   875  00FCDC  75                 	db	117	;'u'
   876  00FCDD  74                 	db	116	;'t'
   877  00FCDE  6F                 	db	111	;'o'
   878  00FCDF  5F                 	db	95	;'_'
   879  00FCE0  73                 	db	115	;'s'
   880  00FCE1  74                 	db	116	;'t'
   881  00FCE2  6F                 	db	111	;'o'
   882  00FCE3  70                 	db	112	;'p'
   883  00FCE4  28                 	db	40
   884  00FCE5  61                 	db	97	;'a'
   885  00FCE6  73                 	db	115	;'s'
   886  00FCE7  29                 	db	41
   887  00FCE8  2C                 	db	44
   888  00FCE9  61                 	db	97	;'a'
   889  00FCEA  6C                 	db	108	;'l'
   890  00FCEB  77                 	db	119	;'w'
   891  00FCEC  61                 	db	97	;'a'
   892  00FCED  79                 	db	121	;'y'
   893  00FCEE  73                 	db	115	;'s'
   894  00FCEF  5F                 	db	95	;'_'
   895  00FCF0  6F                 	db	111	;'o'
   896  00FCF1  6E                 	db	110	;'n'
   897  00FCF2  28                 	db	40
   898  00FCF3  61                 	db	97	;'a'
   899  00FCF4  6F                 	db	111	;'o'
   900  00FCF5  29                 	db	41
   901  00FCF6  2C                 	db	44
   902  00FCF7  69                 	db	105	;'i'
   903  00FCF8  6E                 	db	110	;'n'
   904  00FCF9  74                 	db	116	;'t'
   905  00FCFA  65                 	db	101	;'e'
   906  00FCFB  67                 	db	103	;'g'
   907  00FCFC  72                 	db	114	;'r'
   908  00FCFD  61                 	db	97	;'a'
   909  00FCFE  74                 	db	116	;'t'
   910  00FCFF  69                 	db	105	;'i'
   911  00FD00  6E                 	db	110	;'n'
   912  00FD01  67                 	db	103	;'g'
   913  00FD02  5F                 	db	95	;'_'
   914  00FD03  72                 	db	114	;'r'
   915  00FD04  65                 	db	101	;'e'
   916  00FD05  73                 	db	115	;'s'
   917  00FD06  65                 	db	101	;'e'
   918  00FD07  74                 	db	116	;'t'
   919  00FD08  28                 	db	40
   920  00FD09  69                 	db	105	;'i'
   921  00FD0A  72                 	db	114	;'r'
   922  00FD0B  29                 	db	41
   923  00FD0C  5D                 	db	93	;']'
   924  00FD0D  0A                 	db	10
   925  00FD0E  09                 	db	9
   926  00FD0F  6F                 	db	111	;'o'
   927  00FD10  75                 	db	117	;'u'
   928  00FD11  74                 	db	116	;'t'
   929  00FD12  70                 	db	112	;'p'
   930  00FD13  75                 	db	117	;'u'
   931  00FD14  74                 	db	116	;'t'
   932  00FD15  5F                 	db	95	;'_'
   933  00FD16  64                 	db	100	;'d'
   934  00FD17  61                 	db	97	;'a'
   935  00FD18  74                 	db	116	;'t'
   936  00FD19  61                 	db	97	;'a'
   937  00FD1A  28                 	db	40
   938  00FD1B  6F                 	db	111	;'o'
   939  00FD1C  64                 	db	100	;'d'
   940  00FD1D  29                 	db	41
   941  00FD1E  20                 	db	32
   942  00FD1F  3C                 	db	60	;'<'
   943  00FD20  2D                 	db	45
   944  00FD21  20                 	db	32
   945  00FD22  73                 	db	115	;'s'
   946  00FD23  74                 	db	116	;'t'
   947  00FD24  6F                 	db	111	;'o'
   948  00FD25  70                 	db	112	;'p'
   949  00FD26  70                 	db	112	;'p'
   950  00FD27  65                 	db	101	;'e'
   951  00FD28  64                 	db	100	;'d'
   952  00FD29  20                 	db	32
   953  00FD2A  62                 	db	98	;'b'
   954  00FD2B  79                 	db	121	;'y'
   955  00FD2C  20                 	db	32
   956  00FD2D  70                 	db	112	;'p'
   957  00FD2E  72                 	db	114	;'r'
   958  00FD2F  65                 	db	101	;'e'
   959  00FD30  73                 	db	115	;'s'
   960  00FD31  73                 	db	115	;'s'
   961  00FD32  69                 	db	105	;'i'
   962  00FD33  6E                 	db	110	;'n'
   963  00FD34  67                 	db	103	;'g'
   964  00FD35  20                 	db	32
   965  00FD36  74                 	db	116	;'t'
   966  00FD37  68                 	db	104	;'h'
   967  00FD38  65                 	db	101	;'e'
   968  00FD39  20                 	db	32
   969  00FD3A  45                 	db	69	;'E'
   970  00FD3B  6E                 	db	110	;'n'
   971  00FD3C  74                 	db	116	;'t'
   972  00FD3D  65                 	db	101	;'e'
   973  00FD3E  72                 	db	114	;'r'
   974  00FD3F  20                 	db	32
   975  00FD40  6B                 	db	107	;'k'
   976  00FD41  65                 	db	101	;'e'
   977  00FD42  79                 	db	121	;'y'
   978  00FD43  0A                 	db	10
   979  00FD44  09                 	db	9
   980  00FD45  74                 	db	116	;'t'
   981  00FD46  6F                 	db	111	;'o'
   982  00FD47  75                 	db	117	;'u'
   983  00FD48  63                 	db	99	;'c'
   984  00FD49  68                 	db	104	;'h'
   985  00FD4A  20                 	db	32
   986  00FD4B  5B                 	db	91	;'['
   987  00FD4C  72                 	db	114	;'r'
   988  00FD4D  65                 	db	101	;'e'
   989  00FD4E  73                 	db	115	;'s'
   990  00FD4F  65                 	db	101	;'e'
   991  00FD50  74                 	db	116	;'t'
   992  00FD51  28                 	db	40
   993  00FD52  72                 	db	114	;'r'
   994  00FD53  29                 	db	41
   995  00FD54  2C                 	db	44
   996  00FD55  69                 	db	105	;'i'
   997  00FD56  6E                 	db	110	;'n'
   998  00FD57  69                 	db	105	;'i'
   999  00FD58  74                 	db	116	;'t'
  1000  00FD59  69                 	db	105	;'i'
  1001  00FD5A  61                 	db	97	;'a'
  1002  00FD5B  6C                 	db	108	;'l'
  1003  00FD5C  69                 	db	105	;'i'
  1004  00FD5D  7A                 	db	122	;'z'
  1005  00FD5E  65                 	db	101	;'e'
  1006  00FD5F  28                 	db	40
  1007  00FD60  69                 	db	105	;'i'
  1008  00FD61  6E                 	db	110	;'n'
  1009  00FD62  69                 	db	105	;'i'
  1010  00FD63  74                 	db	116	;'t'
  1011  00FD64  29                 	db	41
  1012  00FD65  5D                 	db	93	;']'
  1013  00FD66  20                 	db	32
  1014  00FD67  5B                 	db	91	;'['
  1015  00FD68  76                 	db	118	;'v'
  1016  00FD69  61                 	db	97	;'a'
  1017  00FD6A  6C                 	db	108	;'l'
  1018  00FD6B  75                 	db	117	;'u'
  1019  00FD6C  65                 	db	101	;'e'
  1020  00FD6D  28                 	db	40
  1021  00FD6E  25                 	db	37
  1022  00FD6F  29                 	db	41
  1023  00FD70  5D                 	db	93	;']'
  1024  00FD71  0A                 	db	10
  1025  00FD72  0A                 	db	10
  1026  00FD73  09                 	db	9
  1027  00FD74  66                 	db	102	;'f'
  1028  00FD75  6F                 	db	111	;'o'
  1029  00FD76  72                 	db	114	;'r'
  1030  00FD77  20                 	db	32
  1031  00FD78  44                 	db	68	;'D'
  1032  00FD79  65                 	db	101	;'e'
  1033  00FD7A  76                 	db	118	;'v'
  1034  00FD7B  65                 	db	101	;'e'
  1035  00FD7C  6C                 	db	108	;'l'
  1036  00FD7D  6F                 	db	111	;'o'
  1037  00FD7E  70                 	db	112	;'p'
  1038  00FD7F  70                 	db	112	;'p'
  1039  00FD80  65                 	db	101	;'e'
  1040  00FD81  72                 	db	114	;'r'
  1041  00FD82  0A                 	db	10
  1042  00FD83  09                 	db	9
  1043  00FD84  52                 	db	82	;'R'
  1044  00FD85  45                 	db	69	;'E'
  1045  00FD86  53                 	db	83	;'S'
  1046  00FD87  45                 	db	69	;'E'
  1047  00FD88  54                 	db	84	;'T'
  1048  00FD89  28                 	db	40
  1049  00FD8A  29                 	db	41
  1050  00FD8B  3B                 	db	59	;';'
  1051  00FD8C  0A                 	db	10
  1052  00FD8D  09                 	db	9
  1053  00FD8E  62                 	db	98	;'b'
  1054  00FD8F  6F                 	db	111	;'o'
  1055  00FD90  6F                 	db	111	;'o'
  1056  00FD91  74                 	db	116	;'t'
  1057  00FD92  6C                 	db	108	;'l'
  1058  00FD93  6F                 	db	111	;'o'
  1059  00FD94  61                 	db	97	;'a'
  1060  00FD95  64                 	db	100	;'d'
  1061  00FD96  0A                 	db	10
  1062  00FD97  00                 	db	0
  1063  00FD98                     STR_100:
  1064  00FD98  09                 	db	9
  1065  00FD99  32                 	db	50	;'2'
  1066  00FD9A  30                 	db	48	;'0'
  1067  00FD9B  25                 	db	37
  1068  00FD9C  30                 	db	48	;'0'
  1069  00FD9D  32                 	db	50	;'2'
  1070  00FD9E  64                 	db	100	;'d'
  1071  00FD9F  2F                 	db	47
  1072  00FDA0  25                 	db	37
  1073  00FDA1  30                 	db	48	;'0'
  1074  00FDA2  32                 	db	50	;'2'
  1075  00FDA3  64                 	db	100	;'d'
  1076  00FDA4  2F                 	db	47
  1077  00FDA5  25                 	db	37
  1078  00FDA6  30                 	db	48	;'0'
  1079  00FDA7  32                 	db	50	;'2'
  1080  00FDA8  64                 	db	100	;'d'
  1081  00FDA9  28                 	db	40
  1082  00FDAA  25                 	db	37
  1083  00FDAB  73                 	db	115	;'s'
  1084  00FDAC  29                 	db	41
  1085  00FDAD  25                 	db	37
  1086  00FDAE  30                 	db	48	;'0'
  1087  00FDAF  32                 	db	50	;'2'
  1088  00FDB0  64                 	db	100	;'d'
  1089  00FDB1  3A                 	db	58	;':'
  1090  00FDB2  25                 	db	37
  1091  00FDB3  30                 	db	48	;'0'
  1092  00FDB4  32                 	db	50	;'2'
  1093  00FDB5  64                 	db	100	;'d'
  1094  00FDB6  2D                 	db	45
  1095  00FDB7  25                 	db	37
  1096  00FDB8  30                 	db	48	;'0'
  1097  00FDB9  32                 	db	50	;'2'
  1098  00FDBA  64                 	db	100	;'d'
  1099  00FDBB  0A                 	db	10
  1100  00FDBC  00                 	db	0
  1101  00FDBD                     STR_23:
  1102  00FDBD  09                 	db	9
  1103  00FDBE  69                 	db	105	;'i'
  1104  00FDBF  6E                 	db	110	;'n'
  1105  00FDC0  76                 	db	118	;'v'
  1106  00FDC1  61                 	db	97	;'a'
  1107  00FDC2  6C                 	db	108	;'l'
  1108  00FDC3  69                 	db	105	;'i'
  1109  00FDC4  64                 	db	100	;'d'
  1110  00FDC5  20                 	db	32
  1111  00FDC6  64                 	db	100	;'d'
  1112  00FDC7  61                 	db	97	;'a'
  1113  00FDC8  74                 	db	116	;'t'
  1114  00FDC9  61                 	db	97	;'a'
  1115  00FDCA  0A                 	db	10
  1116  00FDCB  09                 	db	9
  1117  00FDCC  69                 	db	105	;'i'
  1118  00FDCD  6E                 	db	110	;'n'
  1119  00FDCE  69                 	db	105	;'i'
  1120  00FDCF  74                 	db	116	;'t'
  1121  00FDD0  69                 	db	105	;'i'
  1122  00FDD1  61                 	db	97	;'a'
  1123  00FDD2  6C                 	db	108	;'l'
  1124  00FDD3  69                 	db	105	;'i'
  1125  00FDD4  7A                 	db	122	;'z'
  1126  00FDD5  69                 	db	105	;'i'
  1127  00FDD6  6E                 	db	110	;'n'
  1128  00FDD7  67                 	db	103	;'g'
  1129  00FDD8  20                 	db	32
  1130  00FDD9  66                 	db	102	;'f'
  1131  00FDDA  61                 	db	97	;'a'
  1132  00FDDB  69                 	db	105	;'i'
  1133  00FDDC  6C                 	db	108	;'l'
  1134  00FDDD  65                 	db	101	;'e'
  1135  00FDDE  64                 	db	100	;'d'
  1136  00FDDF  0A                 	db	10
  1137  00FDE0  00                 	db	0
  1138  00FDE1                     STR_27:
  1139  00FDE1  32                 	db	50	;'2'
  1140  00FDE2  30                 	db	48	;'0'
  1141  00FDE3  25                 	db	37
  1142  00FDE4  30                 	db	48	;'0'
  1143  00FDE5  32                 	db	50	;'2'
  1144  00FDE6  64                 	db	100	;'d'
  1145  00FDE7  2F                 	db	47
  1146  00FDE8  25                 	db	37
  1147  00FDE9  30                 	db	48	;'0'
  1148  00FDEA  32                 	db	50	;'2'
  1149  00FDEB  64                 	db	100	;'d'
  1150  00FDEC  2F                 	db	47
  1151  00FDED  25                 	db	37
  1152  00FDEE  30                 	db	48	;'0'
  1153  00FDEF  32                 	db	50	;'2'
  1154  00FDF0  64                 	db	100	;'d'
  1155  00FDF1  2D                 	db	45
  1156  00FDF2  25                 	db	37
  1157  00FDF3  30                 	db	48	;'0'
  1158  00FDF4  32                 	db	50	;'2'
  1159  00FDF5  64                 	db	100	;'d'
  1160  00FDF6  3A                 	db	58	;':'
  1161  00FDF7  25                 	db	37
  1162  00FDF8  30                 	db	48	;'0'
  1163  00FDF9  32                 	db	50	;'2'
  1164  00FDFA  64                 	db	100	;'d'
  1165  00FDFB  2D                 	db	45
  1166  00FDFC  25                 	db	37
  1167  00FDFD  30                 	db	48	;'0'
  1168  00FDFE  32                 	db	50	;'2'
  1169  00FDFF  64                 	db	100	;'d'
  1170  00FE00  00                 	db	0
  1171  00FE01                     STR_33:
  1172  00FE01  25                 	db	37
  1173  00FE02  30                 	db	48	;'0'
  1174  00FE03  32                 	db	50	;'2'
  1175  00FE04  6C                 	db	108	;'l'
  1176  00FE05  64                 	db	100	;'d'
  1177  00FE06  64                 	db	100	;'d'
  1178  00FE07  20                 	db	32
  1179  00FE08  25                 	db	37
  1180  00FE09  30                 	db	48	;'0'
  1181  00FE0A  32                 	db	50	;'2'
  1182  00FE0B  6C                 	db	108	;'l'
  1183  00FE0C  64                 	db	100	;'d'
  1184  00FE0D  68                 	db	104	;'h'
  1185  00FE0E  20                 	db	32
  1186  00FE0F  25                 	db	37
  1187  00FE10  30                 	db	48	;'0'
  1188  00FE11  32                 	db	50	;'2'
  1189  00FE12  6C                 	db	108	;'l'
  1190  00FE13  64                 	db	100	;'d'
  1191  00FE14  6D                 	db	109	;'m'
  1192  00FE15  20                 	db	32
  1193  00FE16  25                 	db	37
  1194  00FE17  30                 	db	48	;'0'
  1195  00FE18  32                 	db	50	;'2'
  1196  00FE19  6C                 	db	108	;'l'
  1197  00FE1A  64                 	db	100	;'d'
  1198  00FE1B  73                 	db	115	;'s'
  1199  00FE1C  00                 	db	0
  1200  00FE1D                     STR_22:
  1201  00FE1D  09                 	db	9
  1202  00FE1E  69                 	db	105	;'i'
  1203  00FE1F  6E                 	db	110	;'n'
  1204  00FE20  69                 	db	105	;'i'
  1205  00FE21  74                 	db	116	;'t'
  1206  00FE22  69                 	db	105	;'i'
  1207  00FE23  61                 	db	97	;'a'
  1208  00FE24  6C                 	db	108	;'l'
  1209  00FE25  69                 	db	105	;'i'
  1210  00FE26  7A                 	db	122	;'z'
  1211  00FE27  69                 	db	105	;'i'
  1212  00FE28  6E                 	db	110	;'n'
  1213  00FE29  67                 	db	103	;'g'
  1214  00FE2A  20                 	db	32
  1215  00FE2B  63                 	db	99	;'c'
  1216  00FE2C  6F                 	db	111	;'o'
  1217  00FE2D  6D                 	db	109	;'m'
  1218  00FE2E  70                 	db	112	;'p'
  1219  00FE2F  6C                 	db	108	;'l'
  1220  00FE30  65                 	db	101	;'e'
  1221  00FE31  74                 	db	116	;'t'
  1222  00FE32  65                 	db	101	;'e'
  1223  00FE33  0A                 	db	10
  1224  00FE34  00                 	db	0
  1225  00FE35                     STR_28:
  1226  00FE35  20                 	db	32
  1227  00FE36  25                 	db	37
  1228  00FE37  73                 	db	115	;'s'
  1229  00FE38  3A                 	db	58	;':'
  1230  00FE39  25                 	db	37
  1231  00FE3A  30                 	db	48	;'0'
  1232  00FE3B  31                 	db	49	;'1'
  1233  00FE3C  64                 	db	100	;'d'
  1234  00FE3D  2E                 	db	46
  1235  00FE3E  25                 	db	37
  1236  00FE3F  30                 	db	48	;'0'
  1237  00FE40  33                 	db	51	;'3'
  1238  00FE41  64                 	db	100	;'d'
  1239  00FE42  41                 	db	65	;'A'
  1240  00FE43  2C                 	db	44
  1241  00FE44  25                 	db	37
  1242  00FE45  30                 	db	48	;'0'
  1243  00FE46  36                 	db	54	;'6'
  1244  00FE47  6C                 	db	108	;'l'
  1245  00FE48  64                 	db	100	;'d'
  1246  00FE49  6D                 	db	109	;'m'
  1247  00FE4A  41                 	db	65	;'A'
  1248  00FE4B  68                 	db	104	;'h'
  1249  00FE4C  00                 	db	0
  1250  00FE4D                     STR_26:
  1251  00FE4D  09                 	db	9
  1252  00FE4E  73                 	db	115	;'s'
  1253  00FE4F  65                 	db	101	;'e'
  1254  00FE50  74                 	db	116	;'t'
  1255  00FE51  69                 	db	105	;'i'
  1256  00FE52  6E                 	db	110	;'n'
  1257  00FE53  67                 	db	103	;'g'
  1258  00FE54  20                 	db	32
  1259  00FE55  63                 	db	99	;'c'
  1260  00FE56  6F                 	db	111	;'o'
  1261  00FE57  6D                 	db	109	;'m'
  1262  00FE58  70                 	db	112	;'p'
  1263  00FE59  6C                 	db	108	;'l'
  1264  00FE5A  65                 	db	101	;'e'
  1265  00FE5B  74                 	db	116	;'t'
  1266  00FE5C  65                 	db	101	;'e'
  1267  00FE5D  0A                 	db	10
  1268  00FE5E  00                 	db	0
  1269  00FE5F                     STR_65:
  1270  00FE5F  3C                 	db	60	;'<'
  1271  00FE60  2D                 	db	45
  1272  00FE61  20                 	db	32
  1273  00FE62  20                 	db	32
  1274  00FE63  20                 	db	32
  1275  00FE64  53                 	db	83	;'S'
  1276  00FE65  65                 	db	101	;'e'
  1277  00FE66  6C                 	db	108	;'l'
  1278  00FE67  65                 	db	101	;'e'
  1279  00FE68  63                 	db	99	;'c'
  1280  00FE69  74                 	db	116	;'t'
  1281  00FE6A  20                 	db	32
  1282  00FE6B  20                 	db	32
  1283  00FE6C  20                 	db	32
  1284  00FE6D  2D                 	db	45
  1285  00FE6E  3E                 	db	62	;'>'
  1286  00FE6F  00                 	db	0
  1287  00FE70                     STR_71:
  1288  00FE70  54                 	db	84	;'T'
  1289  00FE71  6F                 	db	111	;'o'
  1290  00FE72  67                 	db	103	;'g'
  1291  00FE73  67                 	db	103	;'g'
  1292  00FE74  6C                 	db	108	;'l'
  1293  00FE75  65                 	db	101	;'e'
  1294  00FE76  20                 	db	32
  1295  00FE77  41                 	db	65	;'A'
  1296  00FE78  75                 	db	117	;'u'
  1297  00FE79  74                 	db	116	;'t'
  1298  00FE7A  6F                 	db	111	;'o'
  1299  00FE7B  20                 	db	32
  1300  00FE7C  53                 	db	83	;'S'
  1301  00FE7D  74                 	db	116	;'t'
  1302  00FE7E  6F                 	db	111	;'o'
  1303  00FE7F  70                 	db	112	;'p'
  1304  00FE80  00                 	db	0
  1305  00FE81                     STR_42:
  1306  00FE81  4C                 	db	76	;'L'
  1307  00FE82  65                 	db	101	;'e'
  1308  00FE83  66                 	db	102	;'f'
  1309  00FE84  74                 	db	116	;'t'
  1310  00FE85  20                 	db	32
  1311  00FE86  43                 	db	67	;'C'
  1312  00FE87  65                 	db	101	;'e'
  1313  00FE88  6E                 	db	110	;'n'
  1314  00FE89  74                 	db	116	;'t'
  1315  00FE8A  72                 	db	114	;'r'
  1316  00FE8B  20                 	db	32
  1317  00FE8C  52                 	db	82	;'R'
  1318  00FE8D  69                 	db	105	;'i'
  1319  00FE8E  67                 	db	103	;'g'
  1320  00FE8F  68                 	db	104	;'h'
  1321  00FE90  74                 	db	116	;'t'
  1322  00FE91  00                 	db	0
  1323  00FE92                     STR_5:
  1324  00FE92  43                 	db	67	;'C'
  1325  00FE93  68                 	db	104	;'h'
  1326  00FE94  61                 	db	97	;'a'
  1327  00FE95  72                 	db	114	;'r'
  1328  00FE96  67                 	db	103	;'g'
  1329  00FE97  65                 	db	101	;'e'
  1330  00FE98  20                 	db	32
  1331  00FE99  53                 	db	83	;'S'
  1332  00FE9A  74                 	db	116	;'t'
  1333  00FE9B  61                 	db	97	;'a'
  1334  00FE9C  74                 	db	116	;'t'
  1335  00FE9D  69                 	db	105	;'i'
  1336  00FE9E  6F                 	db	111	;'o'
  1337  00FE9F  6E                 	db	110	;'n'
  1338  00FEA0  20                 	db	32
  1339  00FEA1  36                 	db	54	;'6'
  1340  00FEA2  00                 	db	0
  1341  00FEA3                     STR_69:
  1342  00FEA3  41                 	db	65	;'A'
  1343  00FEA4  64                 	db	100	;'d'
  1344  00FEA5  6A                 	db	106	;'j'
  1345  00FEA6  75                 	db	117	;'u'
  1346  00FEA7  73                 	db	115	;'s'
  1347  00FEA8  74                 	db	116	;'t'
  1348  00FEA9  20                 	db	32
  1349  00FEAA  74                 	db	116	;'t'
  1350  00FEAB  68                 	db	104	;'h'
  1351  00FEAC  65                 	db	101	;'e'
  1352  00FEAD  20                 	db	32
  1353  00FEAE  54                 	db	84	;'T'
  1354  00FEAF  69                 	db	105	;'i'
  1355  00FEB0  6D                 	db	109	;'m'
  1356  00FEB1  65                 	db	101	;'e'
  1357  00FEB2  00                 	db	0
  1358  00FEB3                     STR_73:
  1359  00FEB3  54                 	db	84	;'T'
  1360  00FEB4  6F                 	db	111	;'o'
  1361  00FEB5  67                 	db	103	;'g'
  1362  00FEB6  67                 	db	103	;'g'
  1363  00FEB7  6C                 	db	108	;'l'
  1364  00FEB8  65                 	db	101	;'e'
  1365  00FEB9  20                 	db	32
  1366  00FEBA  4C                 	db	76	;'L'
  1367  00FEBB  45                 	db	69	;'E'
  1368  00FEBC  44                 	db	68	;'D'
  1369  00FEBD  20                 	db	32
  1370  00FEBE  4C                 	db	76	;'L'
  1371  00FEBF  61                 	db	97	;'a'
  1372  00FEC0  6D                 	db	109	;'m'
  1373  00FEC1  70                 	db	112	;'p'
  1374  00FEC2  00                 	db	0
  1375  00FEC3                     STR_10:
  1376  00FEC3  42                 	db	66	;'B'
  1377  00FEC4  6F                 	db	111	;'o'
  1378  00FEC5  6F                 	db	111	;'o'
  1379  00FEC6  74                 	db	116	;'t'
  1380  00FEC7  6C                 	db	108	;'l'
  1381  00FEC8  6F                 	db	111	;'o'
  1382  00FEC9  61                 	db	97	;'a'
  1383  00FECA  64                 	db	100	;'d'
  1384  00FECB  65                 	db	101	;'e'
  1385  00FECC  72                 	db	114	;'r'
  1386  00FECD  20                 	db	32
  1387  00FECE  6D                 	db	109	;'m'
  1388  00FECF  6F                 	db	111	;'o'
  1389  00FED0  64                 	db	100	;'d'
  1390  00FED1  65                 	db	101	;'e'
  1391  00FED2  00                 	db	0
  1392  00FED3                     STR_75:
  1393  00FED3  49                 	db	73	;'I'
  1394  00FED4  6E                 	db	110	;'n'
  1395  00FED5  74                 	db	116	;'t'
  1396  00FED6  65                 	db	101	;'e'
  1397  00FED7  67                 	db	103	;'g'
  1398  00FED8  72                 	db	114	;'r'
  1399  00FED9  61                 	db	97	;'a'
  1400  00FEDA  74                 	db	116	;'t'
  1401  00FEDB  20                 	db	32
  1402  00FEDC  52                 	db	82	;'R'
  1403  00FEDD  65                 	db	101	;'e'
  1404  00FEDE  73                 	db	115	;'s'
  1405  00FEDF  65                 	db	101	;'e'
  1406  00FEE0  74                 	db	116	;'t'
  1407  00FEE1  00                 	db	0
  1408  00FEE2                     STR_7:
  1409  00FEE2  43                 	db	67	;'C'
  1410  00FEE3  68                 	db	104	;'h'
  1411  00FEE4  61                 	db	97	;'a'
  1412  00FEE5  72                 	db	114	;'r'
  1413  00FEE6  67                 	db	103	;'g'
  1414  00FEE7  65                 	db	101	;'e'
  1415  00FEE8  20                 	db	32
  1416  00FEE9  53                 	db	83	;'S'
  1417  00FEEA  74                 	db	116	;'t'
  1418  00FEEB  61                 	db	97	;'a'
  1419  00FEEC  74                 	db	116	;'t'
  1420  00FEED  69                 	db	105	;'i'
  1421  00FEEE  6F                 	db	111	;'o'
  1422  00FEEF  6E                 	db	110	;'n'
  1423  00FEF0  00                 	db	0
  1424  00FEF1                     STR_8:
  1425  00FEF1  57                 	db	87	;'W'
  1426  00FEF2  65                 	db	101	;'e'
  1427  00FEF3  6C                 	db	108	;'l'
  1428  00FEF4  63                 	db	99	;'c'
  1429  00FEF5  6F                 	db	111	;'o'
  1430  00FEF6  6D                 	db	109	;'m'
  1431  00FEF7  65                 	db	101	;'e'
  1432  00FEF8  20                 	db	32
  1433  00FEF9  62                 	db	98	;'b'
  1434  00FEFA  61                 	db	97	;'a'
  1435  00FEFB  63                 	db	99	;'c'
  1436  00FEFC  6B                 	db	107	;'k'
  1437  00FEFD  21                 	db	33
  1438  00FEFE  00                 	db	0
  1439  00FEFF                     STR_35:
  1440  00FEFF  4D                 	db	77	;'M'
  1441  00FF00  61                 	db	97	;'a'
  1442  00FF01  64                 	db	100	;'d'
  1443  00FF02  65                 	db	101	;'e'
  1444  00FF03  20                 	db	32
  1445  00FF04  62                 	db	98	;'b'
  1446  00FF05  79                 	db	121	;'y'
  1447  00FF06  20                 	db	32
  1448  00FF07  4B                 	db	75	;'K'
  1449  00FF08  45                 	db	69	;'E'
  1450  00FF09  52                 	db	82	;'R'
  1451  00FF0A  49                 	db	73	;'I'
  1452  00FF0B  00                 	db	0
  1453  00FF0C                     STR_6:
  1454  00FF0C  53                 	db	83	;'S'
  1455  00FF0D  4C                 	db	76	;'L'
  1456  00FF0E  45                 	db	69	;'E'
  1457  00FF0F  45                 	db	69	;'E'
  1458  00FF10  50                 	db	80	;'P'
  1459  00FF11  49                 	db	73	;'I'
  1460  00FF12  4E                 	db	78	;'N'
  1461  00FF13  47                 	db	71	;'G'
  1462  00FF14  20                 	db	32
  1463  00FF15  4E                 	db	78	;'N'
  1464  00FF16  4F                 	db	79	;'O'
  1465  00FF17  57                 	db	87	;'W'
  1466  00FF18  00                 	db	0
  1467  00FF19                     STR_105:
  1468  00FF19  61                 	db	97	;'a'
  1469  00FF1A  64                 	db	100	;'d'
  1470  00FF1B  6A                 	db	106	;'j'
  1471  00FF1C  75                 	db	117	;'u'
  1472  00FF1D  73                 	db	115	;'s'
  1473  00FF1E  74                 	db	116	;'t'
  1474  00FF1F  5F                 	db	95	;'_'
  1475  00FF20  74                 	db	116	;'t'
  1476  00FF21  69                 	db	105	;'i'
  1477  00FF22  6D                 	db	109	;'m'
  1478  00FF23  65                 	db	101	;'e'
  1479  00FF24  00                 	db	0
  1480  00FF25                     STR_9:
  1481  00FF25  50                 	db	80	;'P'
  1482  00FF26  49                 	db	73	;'I'
  1483  00FF27  43                 	db	67	;'C'
  1484  00FF28  31                 	db	49	;'1'
  1485  00FF29  38                 	db	56	;'8'
  1486  00FF2A  46                 	db	70	;'F'
  1487  00FF2B  32                 	db	50	;'2'
  1488  00FF2C  37                 	db	55	;'7'
  1489  00FF2D  4A                 	db	74	;'J'
  1490  00FF2E  35                 	db	53	;'5'
  1491  00FF2F  33                 	db	51	;'3'
  1492  00FF30  00                 	db	0
  1493  00FF31                     STR_17:
  1494  00FF31  6F                 	db	111	;'o'
  1495  00FF32  75                 	db	117	;'u'
  1496  00FF33  74                 	db	116	;'t'
  1497  00FF34  70                 	db	112	;'p'
  1498  00FF35  75                 	db	117	;'u'
  1499  00FF36  74                 	db	116	;'t'
  1500  00FF37  5F                 	db	95	;'_'
  1501  00FF38  64                 	db	100	;'d'
  1502  00FF39  61                 	db	97	;'a'
  1503  00FF3A  74                 	db	116	;'t'
  1504  00FF3B  61                 	db	97	;'a'
  1505  00FF3C  00                 	db	0
  1506  00FF3D                     STR_102:
  1507  00FF3D  70                 	db	112	;'p'
  1508  00FF3E  72                 	db	114	;'r'
  1509  00FF3F  69                 	db	105	;'i'
  1510  00FF40  6E                 	db	110	;'n'
  1511  00FF41  74                 	db	116	;'t'
  1512  00FF42  5F                 	db	95	;'_'
  1513  00FF43  74                 	db	116	;'t'
  1514  00FF44  69                 	db	105	;'i'
  1515  00FF45  6D                 	db	109	;'m'
  1516  00FF46  65                 	db	101	;'e'
  1517  00FF47  00                 	db	0
  1518  00FF48                     STR_31:
  1519  00FF48  25                 	db	37
  1520  00FF49  30                 	db	48	;'0'
  1521  00FF4A  31                 	db	49	;'1'
  1522  00FF4B  64                 	db	100	;'d'
  1523  00FF4C  2E                 	db	46
  1524  00FF4D  25                 	db	37
  1525  00FF4E  30                 	db	48	;'0'
  1526  00FF4F  33                 	db	51	;'3'
  1527  00FF50  64                 	db	100	;'d'
  1528  00FF51  41                 	db	65	;'A'
  1529  00FF52  00                 	db	0
  1530  00FF53                     STR_20:
  1531  00FF53  69                 	db	105	;'i'
  1532  00FF54  6E                 	db	110	;'n'
  1533  00FF55  69                 	db	105	;'i'
  1534  00FF56  74                 	db	116	;'t'
  1535  00FF57  69                 	db	105	;'i'
  1536  00FF58  61                 	db	97	;'a'
  1537  00FF59  6C                 	db	108	;'l'
  1538  00FF5A  69                 	db	105	;'i'
  1539  00FF5B  7A                 	db	122	;'z'
  1540  00FF5C  65                 	db	101	;'e'
  1541  00FF5D  00                 	db	0
  1542  00FF5E                     STR_92:
  1543  00FF5E  20                 	db	32
  1544  00FF5F  20                 	db	32
  1545  00FF60  20                 	db	32
  1546  00FF61  20                 	db	32
  1547  00FF62  20                 	db	32
  1548  00FF63  20                 	db	32
  1549  00FF64  20                 	db	32
  1550  00FF65  20                 	db	32
  1551  00FF66  00                 	db	0
  1552  00FF67                     STR_64:
  1553  00FF67  53                 	db	83	;'S'
  1554  00FF68  65                 	db	101	;'e'
  1555  00FF69  74                 	db	116	;'t'
  1556  00FF6A  74                 	db	116	;'t'
  1557  00FF6B  69                 	db	105	;'i'
  1558  00FF6C  6E                 	db	110	;'n'
  1559  00FF6D  67                 	db	103	;'g'
  1560  00FF6E  73                 	db	115	;'s'
  1561  00FF6F  00                 	db	0
  1562  00FF70                     STR_14:
  1563  00FF70  52                 	db	82	;'R'
  1564  00FF71  45                 	db	69	;'E'
  1565  00FF72  53                 	db	83	;'S'
  1566  00FF73  45                 	db	69	;'E'
  1567  00FF74  54                 	db	84	;'T'
  1568  00FF75  28                 	db	40
  1569  00FF76  29                 	db	41
  1570  00FF77  3B                 	db	59	;';'
  1571  00FF78  00                 	db	0
  1572  00FF79                     STR_15:
  1573  00FF79  62                 	db	98	;'b'
  1574  00FF7A  6F                 	db	111	;'o'
  1575  00FF7B  6F                 	db	111	;'o'
  1576  00FF7C  74                 	db	116	;'t'
  1577  00FF7D  6C                 	db	108	;'l'
  1578  00FF7E  6F                 	db	111	;'o'
  1579  00FF7F  61                 	db	97	;'a'
  1580  00FF80  64                 	db	100	;'d'
  1581  00FF81  00                 	db	0
  1582  00FF82                     STR_101:
  1583  00FF82  09                 	db	9
  1584  00FF83  65                 	db	101	;'e'
  1585  00FF84  72                 	db	114	;'r'
  1586  00FF85  72                 	db	114	;'r'
  1587  00FF86  6F                 	db	111	;'o'
  1588  00FF87  72                 	db	114	;'r'
  1589  00FF88  0A                 	db	10
  1590  00FF89  00                 	db	0
  1591  00FF8A                     STR_118:
  1592  00FF8A  28                 	db	40
  1593  00FF8B  6E                 	db	110	;'n'
  1594  00FF8C  75                 	db	117	;'u'
  1595  00FF8D  6C                 	db	108	;'l'
  1596  00FF8E  6C                 	db	108	;'l'
  1597  00FF8F  29                 	db	41
  1598  00FF90  00                 	db	0
  1599  00FF91                     STR_117:
  1600  00FF91  73                 	db	115	;'s'
  1601  00FF92  65                 	db	101	;'e'
  1602  00FF93  63                 	db	99	;'c'
  1603  00FF94  6F                 	db	111	;'o'
  1604  00FF95  6E                 	db	110	;'n'
  1605  00FF96  64                 	db	100	;'d'
  1606  00FF97  00                 	db	0
  1607  00FF98                     STR_115:
  1608  00FF98  6D                 	db	109	;'m'
  1609  00FF99  69                 	db	105	;'i'
  1610  00FF9A  6E                 	db	110	;'n'
  1611  00FF9B  75                 	db	117	;'u'
  1612  00FF9C  74                 	db	116	;'t'
  1613  00FF9D  65                 	db	101	;'e'
  1614  00FF9E  00                 	db	0
  1615  00FF9F                     STR_109:
  1616  00FF9F  6D                 	db	109	;'m'
  1617  00FFA0  6F                 	db	111	;'o'
  1618  00FFA1  6E                 	db	110	;'n'
  1619  00FFA2  74                 	db	116	;'t'
  1620  00FFA3  68                 	db	104	;'h'
  1621  00FFA4  00                 	db	0
  1622  00FFA5                     STR_57:
  1623  00FFA5  20                 	db	32
  1624  00FFA6  20                 	db	32
  1625  00FFA7  30                 	db	48	;'0'
  1626  00FFA8  20                 	db	32
  1627  00FFA9  20                 	db	32
  1628  00FFAA  00                 	db	0
  1629  00FFAB                     STR_40:
  1630  00FFAB  20                 	db	32
  1631  00FFAC  4F                 	db	79	;'O'
  1632  00FFAD  4E                 	db	78	;'N'
  1633  00FFAE  20                 	db	32
  1634  00FFAF  20                 	db	32
  1635  00FFB0  00                 	db	0
  1636  00FFB1                     STR_41:
  1637  00FFB1  20                 	db	32
  1638  00FFB2  4F                 	db	79	;'O'
  1639  00FFB3  46                 	db	70	;'F'
  1640  00FFB4  46                 	db	70	;'F'
  1641  00FFB5  20                 	db	32
  1642  00FFB6  00                 	db	0
  1643  00FFB7                     STR_56:
  1644  00FFB7  20                 	db	32
  1645  00FFB8  79                 	db	121	;'y'
  1646  00FFB9  65                 	db	101	;'e'
  1647  00FFBA  74                 	db	116	;'t'
  1648  00FFBB  20                 	db	32
  1649  00FFBC  00                 	db	0
  1650  00FFBD                     STR_30:
  1651  00FFBD  25                 	db	37
  1652  00FFBE  73                 	db	115	;'s'
  1653  00FFBF  20                 	db	32
  1654  00FFC0  25                 	db	37
  1655  00FFC1  73                 	db	115	;'s'
  1656  00FFC2  00                 	db	0
  1657  00FFC3                     STR_19:
  1658  00FFC3  74                 	db	116	;'t'
  1659  00FFC4  6F                 	db	111	;'o'
  1660  00FFC5  75                 	db	117	;'u'
  1661  00FFC6  63                 	db	99	;'c'
  1662  00FFC7  68                 	db	104	;'h'
  1663  00FFC8  00                 	db	0
  1664  00FFC9                     STR_24:
  1665  00FFC9  72                 	db	114	;'r'
  1666  00FFCA  65                 	db	101	;'e'
  1667  00FFCB  73                 	db	115	;'s'
  1668  00FFCC  65                 	db	101	;'e'
  1669  00FFCD  74                 	db	116	;'t'
  1670  00FFCE  00                 	db	0
  1671  00FFCF                     STR_107:
  1672  00FFCF  79                 	db	121	;'y'
  1673  00FFD0  65                 	db	101	;'e'
  1674  00FFD1  61                 	db	97	;'a'
  1675  00FFD2  72                 	db	114	;'r'
  1676  00FFD3  00                 	db	0
  1677  00FFD4                     STR_113:
  1678  00FFD4  68                 	db	104	;'h'
  1679  00FFD5  6F                 	db	111	;'o'
  1680  00FFD6  75                 	db	117	;'u'
  1681  00FFD7  72                 	db	114	;'r'
  1682  00FFD8  00                 	db	0
  1683  00FFD9                     STR_11:
  1684  00FFD9  68                 	db	104	;'h'
  1685  00FFDA  65                 	db	101	;'e'
  1686  00FFDB  6C                 	db	108	;'l'
  1687  00FFDC  70                 	db	112	;'p'
  1688  00FFDD  00                 	db	0
  1689  00FFDE                     STR_21:
  1690  00FFDE  69                 	db	105	;'i'
  1691  00FFDF  6E                 	db	110	;'n'
  1692  00FFE0  69                 	db	105	;'i'
  1693  00FFE1  74                 	db	116	;'t'
  1694  00FFE2  00                 	db	0
  1695  00FFE3                     STR_96:
  1696  00FFE3  08                 	db	8
  1697  00FFE4  20                 	db	32
  1698  00FFE5  08                 	db	8
  1699  00FFE6  00                 	db	0
  1700  00FFE7                     STR_111:
  1701  00FFE7  64                 	db	100	;'d'
  1702  00FFE8  61                 	db	97	;'a'
  1703  00FFE9  79                 	db	121	;'y'
  1704  00FFEA  00                 	db	0
  1705  00FFEB                     STR_104:
  1706  00FFEB  61                 	db	97	;'a'
  1707  00FFEC  74                 	db	116	;'t'
  1708  00FFED  00                 	db	0
  1709  00FFEE                     STR_16:
  1710  00FFEE  6F                 	db	111	;'o'
  1711  00FFEF  64                 	db	100	;'d'
  1712  00FFF0  00                 	db	0
  1713  00FFF1                     STR_108:
  1714  00FFF1  4D                 	db	77	;'M'
  1715  00FFF2  00                 	db	0
  1716  00FFF3                     STR_114:
  1717  00FFF3  6D                 	db	109	;'m'
  1718  00FFF4  00                 	db	0
  1719  00FFF5                     STR_90:
  1720  00FFF5  28                 	db	40
  1721  00FFF6  00                 	db	0
  1722  00FFF7                     STR_86:
  1723  00FFF7  2D                 	db	45
  1724  00FFF8  00                 	db	0
  1725  00FFF9                     STR_81:
  1726  00FFF9  2F                 	db	47
  1727  00FFFA  00                 	db	0
  1728  00FFFB                     STR_84:
  1729  00FFFB  3A                 	db	58	;':'
  1730  00FFFC  00                 	db	0
  1731  00FFFD                     STR_12:
  1732  00FFFD  3F                 	db	63	;'?'
  1733  00FFFE  00                 	db	0
  1734  0000                     
  1735                           ; #config settings
  1736  00FFFF  00                 	db	0	; dummy byte at the end
  1737  0000                     
  1738                           	psect	cinit
  1739  015E16                     __pcinit:
  1740                           	opt stack 0
  1741  015E16                     start_initialization:
  1742                           	opt stack 0
  1743  015E16                     __initialization:
  1744                           	opt stack 0
  1745                           
  1746                           ; Clear objects allocated to BIGRAMl (2000 bytes)
  1747  015E16  EE04  F069         	lfsr	0,__pbssBIGRAMl
  1748  015E1A  EE17 F0D0          	lfsr	1,2000
  1749  015E1E                     clear_0:
  1750  015E1E  6AEE               	clrf	postinc0,c
  1751  015E20  50E5               	movf	postdec1,w,c
  1752  015E22  50E1               	movf	fsr1l,w,c
  1753  015E24  E1FC               	bnz	clear_0
  1754  015E26  50E2               	movf	fsr1h,w,c
  1755  015E28  E1FA               	bnz	clear_0
  1756                           
  1757                           ; Clear objects allocated to BANK3 (228 bytes)
  1758  015E2A  EE03  F000         	lfsr	0,__pbssBANK3
  1759  015E2E  0EE4               	movlw	228
  1760  015E30                     clear_1:
  1761  015E30  6AEE               	clrf	postinc0,c
  1762  015E32  06E8               	decf	wreg,f,c
  1763  015E34  E1FD               	bnz	clear_1
  1764                           
  1765                           ; Clear objects allocated to BANK2 (194 bytes)
  1766  015E36  EE02  F000         	lfsr	0,__pbssBANK2
  1767  015E3A  0EC2               	movlw	194
  1768  015E3C                     clear_2:
  1769  015E3C  6AEE               	clrf	postinc0,c
  1770  015E3E  06E8               	decf	wreg,f,c
  1771  015E40  E1FD               	bnz	clear_2
  1772                           
  1773                           ; Clear objects allocated to BANK1 (145 bytes)
  1774  015E42  EE01  F000         	lfsr	0,__pbssBANK1
  1775  015E46  0E91               	movlw	145
  1776  015E48                     clear_3:
  1777  015E48  6AEE               	clrf	postinc0,c
  1778  015E4A  06E8               	decf	wreg,f,c
  1779  015E4C  E1FD               	bnz	clear_3
  1780                           
  1781                           ; Clear objects allocated to BANK0 (26 bytes)
  1782  015E4E  EE00  F0E6         	lfsr	0,__pbssBANK0
  1783  015E52  0E1A               	movlw	26
  1784  015E54                     clear_4:
  1785  015E54  6AEE               	clrf	postinc0,c
  1786  015E56  06E8               	decf	wreg,f,c
  1787  015E58  E1FD               	bnz	clear_4
  1788                           
  1789                           ; Clear objects allocated to COMRAM (44 bytes)
  1790  015E5A  EE00  F001         	lfsr	0,__pbssCOMRAM
  1791  015E5E  0E2C               	movlw	44
  1792  015E60                     clear_5:
  1793  015E60  6AEE               	clrf	postinc0,c
  1794  015E62  06E8               	decf	wreg,f,c
  1795  015E64  E1FD               	bnz	clear_5
  1796                           
  1797                           ; Initialize objects allocated to BANK1 (3 bytes)
  1798                           ; load TBLPTR registers with __pidataBANK1
  1799  015E66  0EAC               	movlw	low __pidataBANK1
  1800  015E68  6EF6               	movwf	tblptrl,c
  1801  015E6A  0E6C               	movlw	high __pidataBANK1
  1802  015E6C  6EF7               	movwf	tblptrh,c
  1803  015E6E  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1804  015E70  6EF8               	movwf	tblptru,c
  1805  015E72  0009               	tblrd		*+	;fetch initializer
  1806  015E74  CFF5 F1E1          	movff	tablat,__pdataBANK1
  1807  015E78  0009               	tblrd		*+	;fetch initializer
  1808  015E7A  CFF5 F1E2          	movff	tablat,__pdataBANK1+1
  1809  015E7E  0009               	tblrd		*+	;fetch initializer
  1810  015E80  CFF5 F1E3          	movff	tablat,__pdataBANK1+2
  1811  015E84                     end_of_initialization:
  1812                           	opt stack 0
  1813  015E84                     __end_of__initialization:
  1814                           	opt stack 0
  1815  015E84  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1816  015E86  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1817  015E88  0100               	movlb	0
  1818  015E8A  EF68  F0B0         	goto	_main	;jump to C main() function
  1819                           tblptru	equ	0xFF8
  1820                           tblptrh	equ	0xFF7
  1821                           tblptrl	equ	0xFF6
  1822                           tablat	equ	0xFF5
  1823                           postinc0	equ	0xFEE
  1824                           wreg	equ	0xFE8
  1825                           postdec1	equ	0xFE5
  1826                           fsr1h	equ	0xFE2
  1827                           fsr1l	equ	0xFE1
  1828                           
  1829                           	psect	bssCOMRAM
  1830  000001                     __pbssCOMRAM:
  1831                           	opt stack 0
  1832  000001                     _ep_data_in:
  1833                           	opt stack 0
  1834  000001                     	ds	3
  1835  000004                     _ep_data_out:
  1836                           	opt stack 0
  1837  000004                     	ds	3
  1838  000007                     _CDCDataOutHandle:
  1839                           	opt stack 0
  1840  000007                     	ds	2
  1841  000009                     _pBDTEntryEP0OutCurrent:
  1842                           	opt stack 0
  1843  000009                     	ds	2
  1844  00000B                     _pBDTEntryEP0OutNext:
  1845                           	opt stack 0
  1846  00000B                     	ds	2
  1847  00000D                     ISR@cnt:
  1848                           	opt stack 0
  1849  00000D                     	ds	1
  1850  00000E                     ISR@cnt_t1:
  1851                           	opt stack 0
  1852  00000E                     	ds	1
  1853  00000F                     _BothEP0OutUOWNsSet:
  1854                           	opt stack 0
  1855  00000F                     	ds	1
  1856  000010                     _RemoteWakeup:
  1857                           	opt stack 0
  1858  000010                     	ds	1
  1859  000011                     _USBDeferINDataStagePackets:
  1860                           	opt stack 0
  1861  000011                     	ds	1
  1862  000012                     _USBDeferOUTDataStagePackets:
  1863                           	opt stack 0
  1864  000012                     	ds	1
  1865  000013                     _USBDeferStatusStagePacket:
  1866                           	opt stack 0
  1867  000013                     	ds	1
  1868  000014                     _USBDeviceState:
  1869                           	opt stack 0
  1870  000014                     	ds	1
  1871  000015                     _USBStatusStageEnabledFlag1:
  1872                           	opt stack 0
  1873  000015                     	ds	1
  1874  000016                     _USBStatusStageEnabledFlag2:
  1875                           	opt stack 0
  1876  000016                     	ds	1
  1877  000017                     _USBStatusStageTimeoutCounter:
  1878                           	opt stack 0
  1879  000017                     	ds	1
  1880  000018                     _controlTransferState:
  1881                           	opt stack 0
  1882  000018                     	ds	1
  1883  000019                     _ctmu_ratio:
  1884                           	opt stack 0
  1885  000019                     	ds	1
  1886  00001A                     _ctmu_sampling_flag:
  1887                           	opt stack 0
  1888  00001A                     	ds	1
  1889  00001B                     _cut_time_flag:
  1890                           	opt stack 0
  1891  00001B                     	ds	1
  1892  00001C                     _data_item:
  1893                           	opt stack 0
  1894  00001C                     	ds	1
  1895  00001D                     _display_flag:
  1896                           	opt stack 0
  1897  00001D                     	ds	1
  1898  00001E                     _endpoint_number:
  1899                           	opt stack 0
  1900  00001E                     	ds	1
  1901  00001F                     _integrate_flag:
  1902                           	opt stack 0
  1903  00001F                     	ds	1
  1904  000020                     _print_item:
  1905                           	opt stack 0
  1906  000020                     	ds	1
  1907  000021                     _settings_flag:
  1908                           	opt stack 0
  1909  000021                     	ds	1
  1910  000022                     _shortPacketStatus:
  1911                           	opt stack 0
  1912  000022                     	ds	1
  1913  000023                     _terminal_data_out:
  1914                           	opt stack 0
  1915  000023                     	ds	1
  1916  000024                     _terminal_data_out_flag:
  1917                           	opt stack 0
  1918  000024                     	ds	1
  1919  000025                     _time_change_flag:
  1920                           	opt stack 0
  1921  000025                     	ds	1
  1922  000026                     sleep_task@sleep_flag:
  1923                           	opt stack 0
  1924  000026                     	ds	1
  1925  000027                     _ctmu_m:
  1926                           	opt stack 0
  1927  000027                     	ds	4
  1928  00002B                     _USBActiveConfiguration:
  1929                           	opt stack 0
  1930  00002B                     	ds	1
  1931  00002C                     _USTATcopy:
  1932                           	opt stack 0
  1933  00002C                     	ds	1
  1934                           tblptru	equ	0xFF8
  1935                           tblptrh	equ	0xFF7
  1936                           tblptrl	equ	0xFF6
  1937                           tablat	equ	0xFF5
  1938                           postinc0	equ	0xFEE
  1939                           wreg	equ	0xFE8
  1940                           postdec1	equ	0xFE5
  1941                           fsr1h	equ	0xFE2
  1942                           fsr1l	equ	0xFE1
  1943                           
  1944                           	psect	bssBANK0
  1945  0000E6                     __pbssBANK0:
  1946                           	opt stack 0
  1947  0000E6                     _outPipes:
  1948                           	opt stack 0
  1949  0000E6                     	ds	9
  1950  0000EF                     _inPipes:
  1951                           	opt stack 0
  1952  0000EF                     	ds	6
  1953  0000F5                     _pBDTEntryIn:
  1954                           	opt stack 0
  1955  0000F5                     	ds	6
  1956  0000FB                     _cdc_rx_len:
  1957                           	opt stack 0
  1958  0000FB                     	ds	1
  1959  0000FC                     _cdc_trf_state:
  1960                           	opt stack 0
  1961  0000FC                     	ds	1
  1962  0000FD                     _cdc_tx_len:
  1963                           	opt stack 0
  1964  0000FD                     	ds	1
  1965  0000FE                     _print_port:
  1966                           	opt stack 0
  1967  0000FE                     	ds	1
  1968  0000FF                     _settings_item:
  1969                           	opt stack 0
  1970  0000FF                     	ds	1
  1971                           tblptru	equ	0xFF8
  1972                           tblptrh	equ	0xFF7
  1973                           tblptrl	equ	0xFF6
  1974                           tablat	equ	0xFF5
  1975                           postinc0	equ	0xFEE
  1976                           wreg	equ	0xFE8
  1977                           postdec1	equ	0xFE5
  1978                           fsr1h	equ	0xFE2
  1979                           fsr1l	equ	0xFE1
  1980                           
  1981                           	psect	bssBANK1
  1982  000100                     __pbssBANK1:
  1983                           	opt stack 0
  1984  000100                     _pBDTEntryOut:
  1985                           	opt stack 0
  1986  000100                     	ds	6
  1987  000106                     _ms:
  1988                           	opt stack 0
  1989  000106                     	ds	4
  1990  00010A                     LED_indicator@cnt:
  1991                           	opt stack 0
  1992  00010A                     	ds	3
  1993  00010D                     LED_indicator@cntf:
  1994                           	opt stack 0
  1995  00010D                     	ds	3
  1996  000110                     _pCDCDst:
  1997                           	opt stack 0
  1998  000110                     	ds	3
  1999  000113                     _pCDCSrc:
  2000                           	opt stack 0
  2001  000113                     	ds	3
  2002  000116                     USBCBSendResume@delay_count:
  2003                           	opt stack 0
  2004  000116                     	ds	2
  2005  000118                     _CDCDataInHandle:
  2006                           	opt stack 0
  2007  000118                     	ds	2
  2008  00011A                     _ctmu_value_m:
  2009                           	opt stack 0
  2010  00011A                     	ds	2
  2011  00011C                     _pDst:
  2012                           	opt stack 0
  2013  00011C                     	ds	2
  2014  00011E                     epoch_to_caltime@day_cache:
  2015                           	opt stack 0
  2016  00011E                     	ds	2
  2017  000120                     millis_timer@cnt:
  2018                           	opt stack 0
  2019  000120                     	ds	2
  2020  000122                     RTCC_task@prev_halfsec:
  2021                           	opt stack 0
  2022  000122                     	ds	1
  2023  000123                     _USBBusIsSuspended:
  2024                           	opt stack 0
  2025  000123                     	ds	1
  2026  000124                     _cdc_mem_type:
  2027                           	opt stack 0
  2028  000124                     	ds	1
  2029  000125                     _control_signal_bitmap:
  2030                           	opt stack 0
  2031  000125                     	ds	1
  2032  000126                     epoch_to_caltime@year_cache:
  2033                           	opt stack 0
  2034  000126                     	ds	1
  2035  000127                     settings_adjust_time@state:
  2036                           	opt stack 0
  2037  000127                     	ds	1
  2038  000128                     settings_auto_stop@state:
  2039                           	opt stack 0
  2040  000128                     	ds	1
  2041  000129                     settings_integrating_reset@state:
  2042                           	opt stack 0
  2043  000129                     	ds	1
  2044  00012A                     settings_led_indicator@state:
  2045                           	opt stack 0
  2046  00012A                     	ds	1
  2047  00012B                     settings_task@settings_state:
  2048                           	opt stack 0
  2049  00012B                     	ds	1
  2050  00012C                     terminal_task@command_init:
  2051                           	opt stack 0
  2052  00012C                     	ds	1
  2053  00012D                     _port:
  2054                           	opt stack 0
  2055  00012D                     	ds	69
  2056  000172                     _now:
  2057                           	opt stack 0
  2058  000172                     	ds	14
  2059  000180                     terminal_task@command:
  2060                           	opt stack 0
  2061  000180                     	ds	8
  2062  000188                     _line_coding:
  2063                           	opt stack 0
  2064  000188                     	ds	7
  2065  00018F                     _USBAlternateInterface:
  2066                           	opt stack 0
  2067  00018F                     	ds	2
  2068                           tblptru	equ	0xFF8
  2069                           tblptrh	equ	0xFF7
  2070                           tblptrl	equ	0xFF6
  2071                           tablat	equ	0xFF5
  2072                           postinc0	equ	0xFEE
  2073                           wreg	equ	0xFE8
  2074                           postdec1	equ	0xFE5
  2075                           fsr1h	equ	0xFE2
  2076                           fsr1l	equ	0xFE1
  2077                           
  2078                           	psect	dataBANK1
  2079  0001E1                     __pdataBANK1:
  2080                           	opt stack 0
  2081  0001E1                     I2C_LCD_SetCursor@F8630:
  2082                           	opt stack 0
  2083  0001E1                     	ds	2
  2084  0001E3                     epoch_to_caltime@month_cache:
  2085                           	opt stack 0
  2086  0001E3                     	ds	1
  2087                           tblptru	equ	0xFF8
  2088                           tblptrh	equ	0xFF7
  2089                           tblptrl	equ	0xFF6
  2090                           tablat	equ	0xFF5
  2091                           postinc0	equ	0xFEE
  2092                           wreg	equ	0xFE8
  2093                           postdec1	equ	0xFE5
  2094                           fsr1h	equ	0xFE2
  2095                           fsr1l	equ	0xFE1
  2096                           
  2097                           	psect	bssBANK2
  2098  000200                     __pbssBANK2:
  2099                           	opt stack 0
  2100  000200                     _cdc_notice:
  2101                           	opt stack 0
  2102  000200                     	ds	10
  2103  00020A                     _BaudRateGen:
  2104                           	opt stack 0
  2105  00020A                     	ds	4
  2106  00020E                     _display_char:
  2107                           	opt stack 0
  2108  00020E                     	ds	40
  2109  000236                     terminal_task@op0:
  2110                           	opt stack 0
  2111  000236                     	ds	25
  2112  00024F                     terminal_task@op1:
  2113                           	opt stack 0
  2114  00024F                     	ds	25
  2115  000268                     terminal_task@op2:
  2116                           	opt stack 0
  2117  000268                     	ds	25
  2118  000281                     terminal_task@op3:
  2119                           	opt stack 0
  2120  000281                     	ds	25
  2121  00029A                     _dummy_encapsulated_cmd_response:
  2122                           	opt stack 0
  2123  00029A                     	ds	8
  2124  0002A2                     _uart_rx:
  2125                           	opt stack 0
  2126  0002A2                     	ds	8
  2127  0002AA                     _uart_tx:
  2128                           	opt stack 0
  2129  0002AA                     	ds	8
  2130  0002B2                     _usb_rx:
  2131                           	opt stack 0
  2132  0002B2                     	ds	8
  2133  0002BA                     _usb_tx:
  2134                           	opt stack 0
  2135  0002BA                     	ds	8
  2136                           tblptru	equ	0xFF8
  2137                           tblptrh	equ	0xFF7
  2138                           tblptrl	equ	0xFF6
  2139                           tablat	equ	0xFF5
  2140                           postinc0	equ	0xFEE
  2141                           wreg	equ	0xFE8
  2142                           postdec1	equ	0xFE5
  2143                           fsr1h	equ	0xFE2
  2144                           fsr1l	equ	0xFE1
  2145                           
  2146                           	psect	bssBANK3
  2147  000300                     __pbssBANK3:
  2148                           	opt stack 0
  2149  000300                     hardware_init@usbrx:
  2150                           	opt stack 0
  2151  000300                     	ds	100
  2152  000364                     _cdc_data_rx:
  2153                           	opt stack 0
  2154  000364                     	ds	64
  2155  0003A4                     _cdc_data_tx:
  2156                           	opt stack 0
  2157  0003A4                     	ds	64
  2158                           tblptru	equ	0xFF8
  2159                           tblptrh	equ	0xFF7
  2160                           tblptrl	equ	0xFF6
  2161                           tablat	equ	0xFF5
  2162                           postinc0	equ	0xFEE
  2163                           wreg	equ	0xFE8
  2164                           postdec1	equ	0xFE5
  2165                           fsr1h	equ	0xFE2
  2166                           fsr1l	equ	0xFE1
  2167                           
  2168                           	psect	bssBIGRAMl
  2169  000469                     __pbssBIGRAMl:
  2170                           	opt stack 0
  2171  000469                     hardware_init@usbtx:
  2172                           	opt stack 0
  2173  000469                     	ds	2000
  2174                           tblptru	equ	0xFF8
  2175                           tblptrh	equ	0xFF7
  2176                           tblptrl	equ	0xFF6
  2177                           tablat	equ	0xFF5
  2178                           postinc0	equ	0xFEE
  2179                           wreg	equ	0xFE8
  2180                           postdec1	equ	0xFE5
  2181                           fsr1h	equ	0xFE2
  2182                           fsr1l	equ	0xFE1
  2183                           
  2184                           	psect	cstackBANK4
  2185  000400                     __pcstackBANK4:
  2186                           	opt stack 0
  2187  000400                     terminal_task@buf:
  2188                           	opt stack 0
  2189                           
  2190                           ; 100 bytes @ 0x0
  2191  000400                     	ds	100
  2192  000464                     _terminal_task$6731:
  2193                           	opt stack 0
  2194                           
  2195                           ; 2 bytes @ 0x64
  2196  000464                     	ds	2
  2197  000466                     terminal_task@i_3917:
  2198                           	opt stack 0
  2199                           
  2200                           ; 1 bytes @ 0x66
  2201  000466                     	ds	1
  2202  000467                     terminal_task@ascii:
  2203                           	opt stack 0
  2204                           
  2205                           ; 1 bytes @ 0x67
  2206  000467                     	ds	1
  2207  000468                     terminal_task@i:
  2208                           	opt stack 0
  2209                           
  2210                           ; 1 bytes @ 0x68
  2211  000468                     	ds	1
  2212                           tblptru	equ	0xFF8
  2213                           tblptrh	equ	0xFF7
  2214                           tblptrl	equ	0xFF6
  2215                           tablat	equ	0xFF5
  2216                           postinc0	equ	0xFEE
  2217                           wreg	equ	0xFE8
  2218                           postdec1	equ	0xFE5
  2219                           fsr1h	equ	0xFE2
  2220                           fsr1l	equ	0xFE1
  2221                           
  2222                           	psect	cstackBANK1
  2223  000191                     __pcstackBANK1:
  2224                           	opt stack 0
  2225  000191                     terminal_task@tx:
  2226                           	opt stack 0
  2227  000191                     display_LCD@str:
  2228                           	opt stack 0
  2229                           
  2230                           ; 40 bytes @ 0x0
  2231  000191                     	ds	2
  2232  000193                     terminal_task@rx:
  2233                           	opt stack 0
  2234                           
  2235                           ; 2 bytes @ 0x2
  2236  000193                     	ds	2
  2237  000195                     ??_terminal_task:
  2238                           
  2239                           ; 0 bytes @ 0x4
  2240  000195                     	ds	36
  2241  0001B9                     display_LCD@str_575:
  2242                           	opt stack 0
  2243                           
  2244                           ; 20 bytes @ 0x28
  2245  0001B9                     	ds	20
  2246  0001CD                     _display_LCD$6726:
  2247                           	opt stack 0
  2248                           
  2249                           ; 4 bytes @ 0x3C
  2250  0001CD                     	ds	4
  2251  0001D1                     _display_LCD$6727:
  2252                           	opt stack 0
  2253                           
  2254                           ; 4 bytes @ 0x40
  2255  0001D1                     	ds	4
  2256  0001D5                     _display_LCD$6728:
  2257                           	opt stack 0
  2258                           
  2259                           ; 4 bytes @ 0x44
  2260  0001D5                     	ds	4
  2261  0001D9                     _display_LCD$6729:
  2262                           	opt stack 0
  2263                           
  2264                           ; 4 bytes @ 0x48
  2265  0001D9                     	ds	4
  2266  0001DD                     _display_LCD$6730:
  2267                           	opt stack 0
  2268                           
  2269                           ; 4 bytes @ 0x4C
  2270  0001DD                     	ds	4
  2271                           tblptru	equ	0xFF8
  2272                           tblptrh	equ	0xFF7
  2273                           tblptrl	equ	0xFF6
  2274                           tablat	equ	0xFF5
  2275                           postinc0	equ	0xFEE
  2276                           wreg	equ	0xFE8
  2277                           postdec1	equ	0xFE5
  2278                           fsr1h	equ	0xFE2
  2279                           fsr1l	equ	0xFE1
  2280                           
  2281                           	psect	cstackBANK0
  2282  000060                     __pcstackBANK0:
  2283                           	opt stack 0
  2284  000060                     ??_timer0_init:
  2285  000060                     ??_timer3_init:
  2286  000060                     ??_isdigit:
  2287  000060                     ??_I2C_IdleCheck:
  2288  000060                     ??_x_to_d:
  2289  000060                     ?_ADC:
  2290                           	opt stack 0
  2291  000060                     ?_strcmp:
  2292                           	opt stack 0
  2293  000060                     ?_ringbuf_num:
  2294                           	opt stack 0
  2295  000060                     ?_USBTransferOnePacket:
  2296                           	opt stack 0
  2297  000060                     ?___awdiv:
  2298                           	opt stack 0
  2299  000060                     ?___awmod:
  2300                           	opt stack 0
  2301  000060                     ?___lwmod:
  2302                           	opt stack 0
  2303  000060                     ?___lldiv:
  2304                           	opt stack 0
  2305  000060                     OUT@value:
  2306                           	opt stack 0
  2307  000060                     ANALOG_IN@b:
  2308                           	opt stack 0
  2309  000060                     LED_output@value:
  2310                           	opt stack 0
  2311  000060                     timer1_init@clock_select:
  2312                           	opt stack 0
  2313  000060                     ADC_init@p_ref:
  2314                           	opt stack 0
  2315  000060                     _is_usb_available$4110:
  2316                           	opt stack 0
  2317  000060                     USBTransferOnePacket@dir:
  2318                           	opt stack 0
  2319  000060                     display@str0:
  2320                           	opt stack 0
  2321  000060                     ringbuf_init@rb:
  2322                           	opt stack 0
  2323  000060                     ringbuf_num@rb:
  2324                           	opt stack 0
  2325  000060                     ringbuf_delete@rb:
  2326                           	opt stack 0
  2327  000060                     RTCC_adjust_time_toggle@tm:
  2328                           	opt stack 0
  2329  000060                     RTCC_adjust_time_cursor@tm:
  2330                           	opt stack 0
  2331  000060                     putUSBUSART@data:
  2332                           	opt stack 0
  2333  000060                     ___awdiv@dividend:
  2334                           	opt stack 0
  2335  000060                     ___awmod@dividend:
  2336                           	opt stack 0
  2337  000060                     ___lwmod@dividend:
  2338                           	opt stack 0
  2339  000060                     memset@p1:
  2340                           	opt stack 0
  2341  000060                     strcat@to:
  2342                           	opt stack 0
  2343  000060                     strcmp@s1:
  2344                           	opt stack 0
  2345  000060                     strcpy@to:
  2346                           	opt stack 0
  2347  000060                     ___lldiv@dividend:
  2348                           	opt stack 0
  2349                           
  2350                           ; 4 bytes @ 0x0
  2351  000060                     	ds	1
  2352  000061                     ??_timer1_init:
  2353  000061                     OUT@b:
  2354                           	opt stack 0
  2355  000061                     LED_output@b:
  2356                           	opt stack 0
  2357  000061                     I2C_IdleCheck@mask:
  2358                           	opt stack 0
  2359  000061                     timer0_init@prescaler:
  2360                           	opt stack 0
  2361  000061                     timer3_init@prescaler:
  2362                           	opt stack 0
  2363  000061                     x_to_d@hex:
  2364                           	opt stack 0
  2365  000061                     _isdigit$6228:
  2366                           	opt stack 0
  2367  000061                     USBTransferOnePacket@data:
  2368                           	opt stack 0
  2369                           
  2370                           ; 2 bytes @ 0x1
  2371  000061                     	ds	1
  2372  000062                     ??_ADC:
  2373  000062                     ??_ringbuf_num:
  2374  000062                     integrate_time@i:
  2375                           	opt stack 0
  2376  000062                     I2C_Start@rw:
  2377                           	opt stack 0
  2378  000062                     I2C_Send@data:
  2379                           	opt stack 0
  2380  000062                     timer1_init@prescaler:
  2381                           	opt stack 0
  2382  000062                     putUSBUSART@length:
  2383                           	opt stack 0
  2384  000062                     isdigit@c:
  2385                           	opt stack 0
  2386  000062                     display@str1:
  2387                           	opt stack 0
  2388  000062                     ringbuf_init@internal_buf:
  2389                           	opt stack 0
  2390  000062                     RTCC_to_caltime@tm:
  2391                           	opt stack 0
  2392  000062                     ___awdiv@divisor:
  2393                           	opt stack 0
  2394  000062                     ___awmod@divisor:
  2395                           	opt stack 0
  2396  000062                     ___lwmod@divisor:
  2397                           	opt stack 0
  2398  000062                     memset@c:
  2399                           	opt stack 0
  2400  000062                     strcat@from:
  2401                           	opt stack 0
  2402  000062                     strcmp@s2:
  2403                           	opt stack 0
  2404  000062                     strcpy@from:
  2405                           	opt stack 0
  2406                           
  2407                           ; 2 bytes @ 0x2
  2408  000062                     	ds	1
  2409  000063                     I2C_Start@adrs:
  2410                           	opt stack 0
  2411  000063                     ADC@ch:
  2412                           	opt stack 0
  2413  000063                     USBTransferOnePacket@len:
  2414                           	opt stack 0
  2415                           
  2416                           ; 1 bytes @ 0x3
  2417  000063                     	ds	1
  2418  000064                     ??_strcmp:
  2419  000064                     display@item:
  2420                           	opt stack 0
  2421  000064                     RTCC_to_caltime@dumy:
  2422                           	opt stack 0
  2423  000064                     I2C_LCD_Command@c:
  2424                           	opt stack 0
  2425  000064                     USBTransferOnePacket@ep:
  2426                           	opt stack 0
  2427  000064                     ___awdiv@counter:
  2428                           	opt stack 0
  2429  000064                     ___awmod@counter:
  2430                           	opt stack 0
  2431  000064                     ___lwmod@counter:
  2432                           	opt stack 0
  2433  000064                     ringbuf_init@bufsize:
  2434                           	opt stack 0
  2435  000064                     I2C_LCD_Puts@s:
  2436                           	opt stack 0
  2437  000064                     memset@n:
  2438                           	opt stack 0
  2439  000064                     strcat@cp:
  2440                           	opt stack 0
  2441  000064                     strcpy@cp:
  2442                           	opt stack 0
  2443  000064                     ___lldiv@divisor:
  2444                           	opt stack 0
  2445                           
  2446                           ; 4 bytes @ 0x4
  2447  000064                     	ds	1
  2448  000065                     display@i:
  2449                           	opt stack 0
  2450  000065                     I2C_LCD_Command@ans:
  2451                           	opt stack 0
  2452  000065                     ___awdiv@sign:
  2453                           	opt stack 0
  2454  000065                     ___awmod@sign:
  2455                           	opt stack 0
  2456  000065                     strcmp@r:
  2457                           	opt stack 0
  2458  000065                     USBTransferOnePacket@handle:
  2459                           	opt stack 0
  2460                           
  2461                           ; 2 bytes @ 0x5
  2462  000065                     	ds	1
  2463  000066                     ??_I2C_LCD_Clear:
  2464  000066                     ??_I2C_LCD_Puts:
  2465  000066                     ??_settings_auto_stop:
  2466  000066                     ??_settings_led_indicator:
  2467  000066                     port_button_task@i:
  2468                           	opt stack 0
  2469  000066                     month_length@month:
  2470                           	opt stack 0
  2471  000066                     I2C_LCD_SetCursor@row:
  2472                           	opt stack 0
  2473  000066                     ___awdiv@quotient:
  2474                           	opt stack 0
  2475  000066                     memset@p:
  2476                           	opt stack 0
  2477                           
  2478                           ; 2 bytes @ 0x6
  2479  000066                     	ds	1
  2480  000067                     ??_I2C_LCD_init:
  2481  000067                     ??_CDCTxService:
  2482  000067                     ??_month_length:
  2483  000067                     I2C_LCD_SetCursor@row_offsets:
  2484                           	opt stack 0
  2485  000067                     I2C_LCD_Puts@ans:
  2486                           	opt stack 0
  2487  000067                     getsUSBUSART@buffer:
  2488                           	opt stack 0
  2489  000067                     settings_auto_stop@str:
  2490                           	opt stack 0
  2491  000067                     settings_led_indicator@str:
  2492                           	opt stack 0
  2493                           
  2494                           ; 20 bytes @ 0x7
  2495  000067                     	ds	1
  2496  000068                     d_to_x@dec:
  2497                           	opt stack 0
  2498  000068                     I2C_LCD_init@i:
  2499                           	opt stack 0
  2500  000068                     USBDeviceInit@i:
  2501                           	opt stack 0
  2502  000068                     ringbuf_put@rb:
  2503                           	opt stack 0
  2504  000068                     ringbuf_pop@rb:
  2505                           	opt stack 0
  2506  000068                     ringbuf_backspace@rb:
  2507                           	opt stack 0
  2508  000068                     _CDCTxService$5975:
  2509                           	opt stack 0
  2510  000068                     ___lldiv@quotient:
  2511                           	opt stack 0
  2512                           
  2513                           ; 4 bytes @ 0x8
  2514  000068                     	ds	1
  2515  000069                     I2C_LCD_SetCursor@col:
  2516                           	opt stack 0
  2517  000069                     I2C_LCD_init@i_3848:
  2518                           	opt stack 0
  2519  000069                     getsUSBUSART@len:
  2520                           	opt stack 0
  2521  000069                     caltime_to_RTCC@tm:
  2522                           	opt stack 0
  2523                           
  2524                           ; 2 bytes @ 0x9
  2525  000069                     	ds	1
  2526  00006A                     ??_ringbuf_pop:
  2527  00006A                     ??_getsUSBUSART:
  2528  00006A                     ??_ringbuf_backspace:
  2529  00006A                     sleep_task@i:
  2530                           	opt stack 0
  2531  00006A                     ringbuf_put@asciicode:
  2532                           	opt stack 0
  2533  00006A                     CDCTxService@i:
  2534                           	opt stack 0
  2535  00006A                     settings_integrating_reset@str:
  2536                           	opt stack 0
  2537                           
  2538                           ; 20 bytes @ 0xA
  2539  00006A                     	ds	1
  2540  00006B                     ??_ringbuf_put:
  2541  00006B                     month_length@year:
  2542                           	opt stack 0
  2543  00006B                     CDCTxService@byte_to_send:
  2544                           	opt stack 0
  2545  00006B                     _getsUSBUSART$5927:
  2546                           	opt stack 0
  2547                           
  2548                           ; 2 bytes @ 0xB
  2549  00006B                     	ds	1
  2550  00006C                     ___lldiv@counter:
  2551                           	opt stack 0
  2552  00006C                     put_string_usb@s:
  2553                           	opt stack 0
  2554                           
  2555                           ; 2 bytes @ 0xC
  2556  00006C                     	ds	1
  2557  00006D                     ??_integrate_current:
  2558  00006D                     ?_CTMU_read:
  2559                           	opt stack 0
  2560  00006D                     ?_get_string_usb:
  2561                           	opt stack 0
  2562  00006D                     ?___lmul:
  2563                           	opt stack 0
  2564  00006D                     ?___llmod:
  2565                           	opt stack 0
  2566  00006D                     get_string_usb@s:
  2567                           	opt stack 0
  2568  00006D                     ___lmul@multiplier:
  2569                           	opt stack 0
  2570  00006D                     ___llmod@dividend:
  2571                           	opt stack 0
  2572                           
  2573                           ; 4 bytes @ 0xD
  2574  00006D                     	ds	1
  2575  00006E                     ringbuf_pop@ret:
  2576                           	opt stack 0
  2577  00006E                     put_string_usb@len:
  2578                           	opt stack 0
  2579                           
  2580                           ; 2 bytes @ 0xE
  2581  00006E                     	ds	1
  2582  00006F                     ??_CTMU_read:
  2583  00006F                     integrate_current@i:
  2584                           	opt stack 0
  2585  00006F                     ringbuf_put_str@rb:
  2586                           	opt stack 0
  2587  00006F                     get_string_usb@len:
  2588                           	opt stack 0
  2589                           
  2590                           ; 2 bytes @ 0xF
  2591  00006F                     	ds	1
  2592  000070                     CTMU_read@ch:
  2593                           	opt stack 0
  2594                           
  2595                           ; 1 bytes @ 0x10
  2596  000070                     	ds	1
  2597  000071                     ??_get_string_usb:
  2598  000071                     ringbuf_put_str@str:
  2599                           	opt stack 0
  2600  000071                     CTMU_read@sum:
  2601                           	opt stack 0
  2602  000071                     ___lmul@multiplicand:
  2603                           	opt stack 0
  2604  000071                     ___llmod@divisor:
  2605                           	opt stack 0
  2606                           
  2607                           ; 4 bytes @ 0x11
  2608  000071                     	ds	1
  2609  000072                     get_string_usb@rx_len:
  2610                           	opt stack 0
  2611                           
  2612                           ; 2 bytes @ 0x12
  2613  000072                     	ds	1
  2614  000073                     
  2615                           ; 0 bytes @ 0x13
  2616  000073                     	ds	1
  2617  000074                     USB_task@rx_len:
  2618                           	opt stack 0
  2619                           
  2620                           ; 2 bytes @ 0x14
  2621  000074                     	ds	1
  2622  000075                     CTMU_read@i:
  2623                           	opt stack 0
  2624  000075                     ___llmod@counter:
  2625                           	opt stack 0
  2626  000075                     ___lmul@product:
  2627                           	opt stack 0
  2628                           
  2629                           ; 4 bytes @ 0x15
  2630  000075                     	ds	1
  2631  000076                     ?___wmul:
  2632                           	opt stack 0
  2633  000076                     USB_task@data:
  2634                           	opt stack 0
  2635  000076                     ___wmul@multiplier:
  2636                           	opt stack 0
  2637                           
  2638                           ; 2 bytes @ 0x16
  2639  000076                     	ds	2
  2640  000078                     ___wmul@multiplicand:
  2641                           	opt stack 0
  2642                           
  2643                           ; 2 bytes @ 0x18
  2644  000078                     	ds	1
  2645  000079                     ?_get_quot_rem:
  2646                           	opt stack 0
  2647  000079                     get_quot_rem@quot:
  2648                           	opt stack 0
  2649  000079                     caltime_to_epoch@tm:
  2650                           	opt stack 0
  2651                           
  2652                           ; 2 bytes @ 0x19
  2653  000079                     	ds	1
  2654  00007A                     ___wmul@product:
  2655                           	opt stack 0
  2656                           
  2657                           ; 2 bytes @ 0x1A
  2658  00007A                     	ds	1
  2659  00007B                     ??_caltime_to_epoch:
  2660  00007B                     get_quot_rem@div:
  2661                           	opt stack 0
  2662  00007B                     settings_auto_stop@str_1345:
  2663                           	opt stack 0
  2664  00007B                     settings_led_indicator@str_1362:
  2665                           	opt stack 0
  2666                           
  2667                           ; 20 bytes @ 0x1B
  2668  00007B                     	ds	1
  2669  00007C                     ??_Auto_cut:
  2670  00007C                     ?_atoi:
  2671                           	opt stack 0
  2672  00007C                     ?___lwdiv:
  2673                           	opt stack 0
  2674  00007C                     atoi@s:
  2675                           	opt stack 0
  2676  00007C                     ___lwdiv@dividend:
  2677                           	opt stack 0
  2678                           
  2679                           ; 2 bytes @ 0x1C
  2680  00007C                     	ds	1
  2681  00007D                     get_quot_rem@num:
  2682                           	opt stack 0
  2683                           
  2684                           ; 4 bytes @ 0x1D
  2685  00007D                     	ds	1
  2686  00007E                     ??_atoi:
  2687  00007E                     Auto_cut@i:
  2688                           	opt stack 0
  2689  00007E                     ___lwdiv@divisor:
  2690                           	opt stack 0
  2691  00007E                     settings_integrating_reset@str_1379:
  2692                           	opt stack 0
  2693                           
  2694                           ; 20 bytes @ 0x1E
  2695  00007E                     	ds	1
  2696  00007F                     caltime_to_epoch@year:
  2697                           	opt stack 0
  2698                           
  2699                           ; 1 bytes @ 0x1F
  2700  00007F                     	ds	1
  2701  000080                     caltime_to_epoch@month_3099:
  2702                           	opt stack 0
  2703  000080                     atoi@sign:
  2704                           	opt stack 0
  2705  000080                     ___lwdiv@counter:
  2706                           	opt stack 0
  2707                           
  2708                           ; 1 bytes @ 0x20
  2709  000080                     	ds	1
  2710  000081                     epoch_to_caltime@tm:
  2711                           	opt stack 0
  2712  000081                     atoi@a:
  2713                           	opt stack 0
  2714  000081                     ___lwdiv@quotient:
  2715                           	opt stack 0
  2716  000081                     caltime_to_epoch@epoch:
  2717                           	opt stack 0
  2718                           
  2719                           ; 4 bytes @ 0x21
  2720  000081                     	ds	2
  2721  000083                     ??_epoch_to_caltime:
  2722  000083                     ?_sprintf:
  2723                           	opt stack 0
  2724  000083                     ctmu_set_ratio@percentage:
  2725                           	opt stack 0
  2726  000083                     button_timer_interrupt@bt:
  2727                           	opt stack 0
  2728  000083                     ringbuf_put_num@rb:
  2729                           	opt stack 0
  2730  000083                     sprintf@sp:
  2731                           	opt stack 0
  2732                           
  2733                           ; 2 bytes @ 0x23
  2734  000083                     	ds	2
  2735  000085                     button_timer_interrupt@sw_value:
  2736                           	opt stack 0
  2737  000085                     caltime_to_epoch@month:
  2738                           	opt stack 0
  2739  000085                     ringbuf_put_num@value:
  2740                           	opt stack 0
  2741  000085                     epoch_to_caltime@day_since_epoch:
  2742                           	opt stack 0
  2743  000085                     sprintf@f:
  2744                           	opt stack 0
  2745                           
  2746                           ; 2 bytes @ 0x25
  2747  000085                     	ds	1
  2748  000086                     RTCC_from_RTCC@tm:
  2749                           	opt stack 0
  2750                           
  2751                           ; 2 bytes @ 0x26
  2752  000086                     	ds	1
  2753  000087                     ringbuf_put_num@digits:
  2754                           	opt stack 0
  2755  000087                     epoch_to_caltime@day:
  2756                           	opt stack 0
  2757                           
  2758                           ; 2 bytes @ 0x27
  2759  000087                     	ds	1
  2760  000088                     ringbuf_put_num@i:
  2761                           	opt stack 0
  2762                           
  2763                           ; 1 bytes @ 0x28
  2764  000088                     	ds	1
  2765  000089                     epoch_to_caltime@year:
  2766                           	opt stack 0
  2767  000089                     ringbuf_put_num@temp:
  2768                           	opt stack 0
  2769                           
  2770                           ; 2 bytes @ 0x29
  2771  000089                     	ds	1
  2772  00008A                     epoch_to_caltime@month:
  2773                           	opt stack 0
  2774                           
  2775                           ; 1 bytes @ 0x2A
  2776  00008A                     	ds	1
  2777  00008B                     epoch_to_caltime@num:
  2778                           	opt stack 0
  2779                           
  2780                           ; 4 bytes @ 0x2B
  2781  00008B                     	ds	4
  2782  00008F                     settings_auto_stop@strp:
  2783                           	opt stack 0
  2784  00008F                     settings_led_indicator@strp:
  2785                           	opt stack 0
  2786  00008F                     RTCC_from_caltime@tm:
  2787                           	opt stack 0
  2788  00008F                     RTCC_from_epoch@tm:
  2789                           	opt stack 0
  2790                           
  2791                           ; 2 bytes @ 0x2F
  2792  00008F                     	ds	2
  2793  000091                     software_init@i:
  2794                           	opt stack 0
  2795  000091                     settings_auto_stop@strp_1346:
  2796                           	opt stack 0
  2797  000091                     settings_led_indicator@strp_1363:
  2798                           	opt stack 0
  2799  000091                     RTCC_adjust_time_inc@tm:
  2800                           	opt stack 0
  2801  000091                     RTCC_adjust_time_dec@tm:
  2802                           	opt stack 0
  2803                           
  2804                           ; 2 bytes @ 0x31
  2805  000091                     	ds	1
  2806  000092                     settings_integrating_reset@strp:
  2807                           	opt stack 0
  2808                           
  2809                           ; 2 bytes @ 0x32
  2810  000092                     	ds	1
  2811  000093                     ??_RTCC_adjust_time_inc:
  2812  000093                     ??_RTCC_adjust_time_dec:
  2813  000093                     settings_auto_stop@i:
  2814                           	opt stack 0
  2815  000093                     settings_led_indicator@i:
  2816                           	opt stack 0
  2817                           
  2818                           ; 1 bytes @ 0x33
  2819  000093                     	ds	1
  2820  000094                     settings_auto_stop@i_1347:
  2821                           	opt stack 0
  2822  000094                     settings_led_indicator@i_1364:
  2823                           	opt stack 0
  2824  000094                     settings_integrating_reset@strp_1380:
  2825                           	opt stack 0
  2826                           
  2827                           ; 2 bytes @ 0x34
  2828  000094                     	ds	1
  2829  000095                     settings_auto_stop@j:
  2830                           	opt stack 0
  2831  000095                     settings_led_indicator@j:
  2832                           	opt stack 0
  2833                           
  2834                           ; 1 bytes @ 0x35
  2835  000095                     	ds	1
  2836  000096                     settings_integrating_reset@i:
  2837                           	opt stack 0
  2838                           
  2839                           ; 1 bytes @ 0x36
  2840  000096                     	ds	1
  2841  000097                     ??_sprintf:
  2842  000097                     settings_integrating_reset@i_1381:
  2843                           	opt stack 0
  2844  000097                     RTCC_adjust_time_inc@i_3279:
  2845                           	opt stack 0
  2846  000097                     RTCC_adjust_time_dec@i_3309:
  2847                           	opt stack 0
  2848                           
  2849                           ; 1 bytes @ 0x37
  2850  000097                     	ds	1
  2851  000098                     settings_integrating_reset@j:
  2852                           	opt stack 0
  2853  000098                     RTCC_adjust_time_inc@i:
  2854                           	opt stack 0
  2855  000098                     RTCC_adjust_time_dec@i:
  2856                           	opt stack 0
  2857                           
  2858                           ; 1 bytes @ 0x38
  2859  000098                     	ds	1
  2860  000099                     settings_task@item_change_flag:
  2861                           	opt stack 0
  2862                           
  2863                           ; 1 bytes @ 0x39
  2864  000099                     	ds	2
  2865  00009B                     sprintf@prec:
  2866                           	opt stack 0
  2867                           
  2868                           ; 2 bytes @ 0x3B
  2869  00009B                     	ds	2
  2870  00009D                     sprintf@cp:
  2871                           	opt stack 0
  2872                           
  2873                           ; 2 bytes @ 0x3D
  2874  00009D                     	ds	2
  2875  00009F                     sprintf@ap:
  2876                           	opt stack 0
  2877                           
  2878                           ; 2 bytes @ 0x3F
  2879  00009F                     	ds	2
  2880  0000A1                     sprintf@len:
  2881                           	opt stack 0
  2882                           
  2883                           ; 2 bytes @ 0x41
  2884  0000A1                     	ds	2
  2885  0000A3                     sprintf@val:
  2886                           	opt stack 0
  2887                           
  2888                           ; 4 bytes @ 0x43
  2889  0000A3                     	ds	4
  2890  0000A7                     sprintf@flag:
  2891                           	opt stack 0
  2892                           
  2893                           ; 1 bytes @ 0x47
  2894  0000A7                     	ds	1
  2895  0000A8                     sprintf@c:
  2896                           	opt stack 0
  2897                           
  2898                           ; 1 bytes @ 0x48
  2899  0000A8                     	ds	1
  2900  0000A9                     sprintf@width:
  2901                           	opt stack 0
  2902                           
  2903                           ; 2 bytes @ 0x49
  2904  0000A9                     	ds	2
  2905  0000AB                     data_out@tx:
  2906                           	opt stack 0
  2907  0000AB                     display_dec@str:
  2908                           	opt stack 0
  2909  0000AB                     print_time@tx:
  2910                           	opt stack 0
  2911                           
  2912                           ; 2 bytes @ 0x4B
  2913  0000AB                     	ds	2
  2914  0000AD                     display_dec@dec:
  2915                           	opt stack 0
  2916  0000AD                     data_out@str:
  2917                           	opt stack 0
  2918  0000AD                     print_time@str:
  2919                           	opt stack 0
  2920                           
  2921                           ; 30 bytes @ 0x4D
  2922  0000AD                     	ds	1
  2923  0000AE                     display_dec@edit:
  2924                           	opt stack 0
  2925                           
  2926                           ; 1 bytes @ 0x4E
  2927  0000AE                     	ds	1
  2928  0000AF                     display_dec@s:
  2929                           	opt stack 0
  2930                           
  2931                           ; 4 bytes @ 0x4F
  2932  0000AF                     	ds	4
  2933  0000B3                     display_time_1602@tm:
  2934                           	opt stack 0
  2935                           
  2936                           ; 2 bytes @ 0x53
  2937  0000B3                     	ds	2
  2938  0000B5                     display_time_1602@line0:
  2939                           	opt stack 0
  2940                           
  2941                           ; 2 bytes @ 0x55
  2942  0000B5                     	ds	2
  2943  0000B7                     display_time_1602@line1:
  2944                           	opt stack 0
  2945                           
  2946                           ; 2 bytes @ 0x57
  2947  0000B7                     	ds	2
  2948  0000B9                     ??_display_time_1602:
  2949                           
  2950                           ; 0 bytes @ 0x59
  2951  0000B9                     	ds	1
  2952  0000BA                     ??_display_LCD:
  2953                           
  2954                           ; 0 bytes @ 0x5A
  2955  0000BA                     	ds	17
  2956  0000CB                     data_out@i:
  2957                           	opt stack 0
  2958  0000CB                     terminal_at_hand@tx:
  2959                           	opt stack 0
  2960                           
  2961                           ; 2 bytes @ 0x6B
  2962  0000CB                     	ds	1
  2963  0000CC                     
  2964                           ; 0 bytes @ 0x6C
  2965  0000CC                     	ds	1
  2966  0000CD                     terminal_at_hand@hand:
  2967                           	opt stack 0
  2968                           
  2969                           ; 2 bytes @ 0x6D
  2970  0000CD                     	ds	2
  2971  0000CF                     terminal_at_hand@min:
  2972                           	opt stack 0
  2973                           
  2974                           ; 1 bytes @ 0x6F
  2975  0000CF                     	ds	1
  2976  0000D0                     terminal_at_hand@max:
  2977                           	opt stack 0
  2978                           
  2979                           ; 1 bytes @ 0x70
  2980  0000D0                     	ds	1
  2981  0000D1                     terminal_at_hand@value:
  2982                           	opt stack 0
  2983                           
  2984                           ; 1 bytes @ 0x71
  2985  0000D1                     	ds	1
  2986  0000D2                     terminal_time@tx:
  2987                           	opt stack 0
  2988                           
  2989                           ; 2 bytes @ 0x72
  2990  0000D2                     	ds	2
  2991  0000D4                     terminal_time@op0:
  2992                           	opt stack 0
  2993                           
  2994                           ; 2 bytes @ 0x74
  2995  0000D4                     	ds	2
  2996  0000D6                     terminal_time@op1:
  2997                           	opt stack 0
  2998                           
  2999                           ; 2 bytes @ 0x76
  3000  0000D6                     	ds	2
  3001  0000D8                     terminal_time@op2:
  3002                           	opt stack 0
  3003                           
  3004                           ; 2 bytes @ 0x78
  3005  0000D8                     	ds	2
  3006  0000DA                     _terminal_time$6732:
  3007                           	opt stack 0
  3008                           
  3009                           ; 1 bytes @ 0x7A
  3010  0000DA                     	ds	1
  3011  0000DB                     terminal_operation@tx:
  3012                           	opt stack 0
  3013                           
  3014                           ; 2 bytes @ 0x7B
  3015  0000DB                     	ds	2
  3016  0000DD                     terminal_operation@op0:
  3017                           	opt stack 0
  3018                           
  3019                           ; 2 bytes @ 0x7D
  3020  0000DD                     	ds	2
  3021  0000DF                     terminal_operation@op1:
  3022                           	opt stack 0
  3023                           
  3024                           ; 2 bytes @ 0x7F
  3025  0000DF                     	ds	2
  3026  0000E1                     terminal_operation@op2:
  3027                           	opt stack 0
  3028                           
  3029                           ; 2 bytes @ 0x81
  3030  0000E1                     	ds	2
  3031  0000E3                     terminal_operation@op3:
  3032                           	opt stack 0
  3033                           
  3034                           ; 2 bytes @ 0x83
  3035  0000E3                     	ds	2
  3036  0000E5                     terminal_operation@percentage:
  3037                           	opt stack 0
  3038                           
  3039                           ; 1 bytes @ 0x85
  3040  0000E5                     	ds	1
  3041  0000E6                     tblptru	equ	0xFF8
  3042                           tblptrh	equ	0xFF7
  3043                           tblptrl	equ	0xFF6
  3044                           tablat	equ	0xFF5
  3045                           postinc0	equ	0xFEE
  3046                           wreg	equ	0xFE8
  3047                           postdec1	equ	0xFE5
  3048                           fsr1h	equ	0xFE2
  3049                           fsr1l	equ	0xFE1
  3050                           
  3051                           ; 0 bytes @ 0x86
  3052                           
  3053                           	psect	cstackCOMRAM
  3054  00002D                     __pcstackCOMRAM:
  3055                           	opt stack 0
  3056  00002D                     ??_USBStdGetDscHandler:
  3057  00002D                     ??_USBStdGetStatusHandler:
  3058  00002D                     ?i2_USBTransferOnePacket:
  3059                           	opt stack 0
  3060  00002D                     ?i2___awdiv:
  3061                           	opt stack 0
  3062  00002D                     ?i2___lwdiv:
  3063                           	opt stack 0
  3064  00002D                     USBConfigureEndpoint@direction:
  3065                           	opt stack 0
  3066  00002D                     USBCtrlTrfTxService@byteToSend:
  3067                           	opt stack 0
  3068  00002D                     USBCtrlTrfRxService@i:
  3069                           	opt stack 0
  3070  00002D                     i2LED_output@value:
  3071                           	opt stack 0
  3072  00002D                     i2USBTransferOnePacket@dir:
  3073                           	opt stack 0
  3074  00002D                     i2___awdiv@dividend:
  3075                           	opt stack 0
  3076  00002D                     i2___lwdiv@dividend:
  3077                           	opt stack 0
  3078  00002D                     i2memset@p1:
  3079                           	opt stack 0
  3080                           
  3081                           ; 2 bytes @ 0x0
  3082  00002D                     	ds	1
  3083  00002E                     ??_USBConfigureEndpoint:
  3084  00002E                     USBCtrlTrfRxService@byteToRead:
  3085                           	opt stack 0
  3086  00002E                     USBCtrlTrfInHandler@lastDTS:
  3087                           	opt stack 0
  3088  00002E                     i2LED_output@b:
  3089                           	opt stack 0
  3090  00002E                     USBStdGetStatusHandler@p:
  3091                           	opt stack 0
  3092  00002E                     i2USBTransferOnePacket@data:
  3093                           	opt stack 0
  3094                           
  3095                           ; 2 bytes @ 0x1
  3096  00002E                     	ds	1
  3097  00002F                     i2___awdiv@divisor:
  3098                           	opt stack 0
  3099  00002F                     i2___lwdiv@divisor:
  3100                           	opt stack 0
  3101  00002F                     i2memset@c:
  3102                           	opt stack 0
  3103                           
  3104                           ; 2 bytes @ 0x2
  3105  00002F                     	ds	1
  3106  000030                     i2USBTransferOnePacket@len:
  3107                           	opt stack 0
  3108                           
  3109                           ; 1 bytes @ 0x3
  3110  000030                     	ds	1
  3111  000031                     i2USBTransferOnePacket@ep:
  3112                           	opt stack 0
  3113  000031                     i2___awdiv@counter:
  3114                           	opt stack 0
  3115  000031                     i2___lwdiv@quotient:
  3116                           	opt stack 0
  3117  000031                     i2memset@n:
  3118                           	opt stack 0
  3119                           
  3120                           ; 2 bytes @ 0x4
  3121  000031                     	ds	1
  3122  000032                     USBConfigureEndpoint@EPNum:
  3123                           	opt stack 0
  3124  000032                     i2___awdiv@sign:
  3125                           	opt stack 0
  3126  000032                     i2USBTransferOnePacket@handle:
  3127                           	opt stack 0
  3128                           
  3129                           ; 2 bytes @ 0x5
  3130  000032                     	ds	1
  3131  000033                     i2___lwdiv@counter:
  3132                           	opt stack 0
  3133  000033                     USBConfigureEndpoint@handle:
  3134                           	opt stack 0
  3135  000033                     i2___awdiv@quotient:
  3136                           	opt stack 0
  3137  000033                     i2memset@p:
  3138                           	opt stack 0
  3139                           
  3140                           ; 2 bytes @ 0x6
  3141  000033                     	ds	2
  3142  000035                     ??_LED_indicator:
  3143  000035                     USBEnableEndpoint@options:
  3144                           	opt stack 0
  3145  000035                     i2USBDeviceInit@i:
  3146                           	opt stack 0
  3147                           
  3148                           ; 1 bytes @ 0x8
  3149  000035                     	ds	1
  3150  000036                     USBEnableEndpoint@p:
  3151                           	opt stack 0
  3152                           
  3153                           ; 2 bytes @ 0x9
  3154  000036                     	ds	2
  3155  000038                     LED_indicator@i:
  3156                           	opt stack 0
  3157  000038                     USBEnableEndpoint@ep:
  3158                           	opt stack 0
  3159                           
  3160                           ; 1 bytes @ 0xB
  3161  000038                     	ds	1
  3162  000039                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3163                           	opt stack 0
  3164                           
  3165                           ; 2 bytes @ 0xC
  3166  000039                     	ds	2
  3167  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3168                           	opt stack 0
  3169                           
  3170                           ; 2 bytes @ 0xE
  3171  00003B                     	ds	2
  3172  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3173                           	opt stack 0
  3174                           
  3175                           ; 2 bytes @ 0x10
  3176  00003D                     	ds	2
  3177  00003F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3178                           
  3179                           ; 0 bytes @ 0x12
  3180  00003F                     	ds	2
  3181  000041                     ??_USBStdFeatureReqHandler:
  3182  000041                     USBStdSetCfgHandler@i:
  3183                           	opt stack 0
  3184                           
  3185                           ; 1 bytes @ 0x14
  3186  000041                     	ds	1
  3187  000042                     USBStdFeatureReqHandler@pUEP:
  3188                           	opt stack 0
  3189                           
  3190                           ; 2 bytes @ 0x15
  3191  000042                     	ds	2
  3192  000044                     USBStdFeatureReqHandler@current_ep_data:
  3193                           	opt stack 0
  3194                           
  3195                           ; 1 bytes @ 0x17
  3196  000044                     	ds	1
  3197  000045                     USBStdFeatureReqHandler@p:
  3198                           	opt stack 0
  3199                           
  3200                           ; 2 bytes @ 0x18
  3201  000045                     	ds	2
  3202  000047                     ??_USBCtrlEPService:
  3203  000047                     
  3204                           ; 0 bytes @ 0x1A
  3205  000047                     	ds	2
  3206  000049                     USBCtrlEPService@setup_cnt:
  3207                           	opt stack 0
  3208                           
  3209                           ; 1 bytes @ 0x1C
  3210  000049                     	ds	1
  3211  00004A                     USBDeviceTasks@i:
  3212                           	opt stack 0
  3213                           
  3214                           ; 1 bytes @ 0x1D
  3215  00004A                     	ds	1
  3216  00004B                     ??_ISR:
  3217                           
  3218                           ; 0 bytes @ 0x1E
  3219  00004B                     	ds	14
  3220                           tblptru	equ	0xFF8
  3221                           tblptrh	equ	0xFF7
  3222                           tblptrl	equ	0xFF6
  3223                           tablat	equ	0xFF5
  3224                           postinc0	equ	0xFEE
  3225                           wreg	equ	0xFE8
  3226                           postdec1	equ	0xFE5
  3227                           fsr1h	equ	0xFE2
  3228                           fsr1l	equ	0xFE1
  3229                           
  3230 ;;
  3231 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3232 ;;
  3233 ;; *************** function _main *****************
  3234 ;; Defined at:
  3235 ;;		line 135 in file "main.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;		None
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;		None
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  2  432[None  ] int 
  3242 ;; Registers used:
  3243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3253 ;;Total ram usage:        0 bytes
  3254 ;; Hardware stack levels required when called:   20
  3255 ;; This function calls:
  3256 ;;		_RTCC_task
  3257 ;;		_USB_task
  3258 ;;		_bootload
  3259 ;;		_ctmu_task
  3260 ;;		_hardware_init
  3261 ;;		_normal_task
  3262 ;;		_sleep_task
  3263 ;;		_software_init
  3264 ;;		_terminal_task
  3265 ;; This function is called by:
  3266 ;;		Startup code after reset
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text0
  3271  0160D0                     __ptext0:
  3272                           	opt stack 0
  3273  0160D0                     _main:
  3274                           	opt stack 11
  3275                           
  3276                           ;main.c: 137: hardware_init();
  3277                           
  3278                           ;incstack = 0
  3279  0160D0  EC56  F0AB         	call	_hardware_init	;wreg free
  3280                           
  3281                           ;main.c: 139: software_init();
  3282  0160D4  ECBE  F09F         	call	_software_init	;wreg free
  3283  0160D8  D02F               	goto	l12355
  3284  0160DA                     l12313:
  3285                           
  3286                           ;main.c: 145: INTCONbits.GIE = 0;
  3287  0160DA  9EF2               	bcf	intcon,7,c	;volatile
  3288                           
  3289                           ;main.c: 146: RTCC_task();
  3290  0160DC  EC94  F0B3         	call	_RTCC_task	;wreg free
  3291                           
  3292                           ;main.c: 147: INTCONbits.GIE = 1;
  3293  0160E0  8EF2               	bsf	intcon,7,c	;volatile
  3294                           
  3295                           ;main.c: 148: INTCONbits.GIE = 0;
  3296  0160E2  9EF2               	bcf	intcon,7,c	;volatile
  3297                           
  3298                           ;main.c: 149: USB_task();
  3299  0160E4  EC6E  F0AD         	call	_USB_task	;wreg free
  3300                           
  3301                           ;main.c: 150: INTCONbits.GIE = 1;
  3302  0160E8  8EF2               	bsf	intcon,7,c	;volatile
  3303                           
  3304                           ;main.c: 151: INTCONbits.GIE = 0;
  3305  0160EA  9EF2               	bcf	intcon,7,c	;volatile
  3306                           
  3307                           ;main.c: 152: terminal_task(&usb_tx, &usb_rx);
  3308  0160EC  0EBA               	movlw	low _usb_tx
  3309  0160EE  0101               	movlb	1	; () banked
  3310  0160F0  6F91               	movwf	terminal_task@tx& (0+255),b
  3311  0160F2  0E02               	movlw	high _usb_tx
  3312  0160F4  0101               	movlb	1	; () banked
  3313  0160F6  6F92               	movwf	(terminal_task@tx+1)& (0+255),b
  3314  0160F8  0EB2               	movlw	low _usb_rx
  3315  0160FA  0101               	movlb	1	; () banked
  3316  0160FC  6F93               	movwf	terminal_task@rx& (0+255),b
  3317  0160FE  0E02               	movlw	high _usb_rx
  3318  016100  0101               	movlb	1	; () banked
  3319  016102  6F94               	movwf	(terminal_task@rx+1)& (0+255),b
  3320  016104  ECC6  F086         	call	_terminal_task	;wreg free
  3321                           
  3322                           ;main.c: 153: INTCONbits.GIE = 1;
  3323  016108  8EF2               	bsf	intcon,7,c	;volatile
  3324                           
  3325                           ;main.c: 154: INTCONbits.GIE = 0;
  3326  01610A  9EF2               	bcf	intcon,7,c	;volatile
  3327                           
  3328                           ;main.c: 155: normal_task();
  3329  01610C  ECFF  F0AA         	call	_normal_task	;wreg free
  3330                           
  3331                           ;main.c: 156: INTCONbits.GIE = 1;
  3332  016110  8EF2               	bsf	intcon,7,c	;volatile
  3333                           
  3334                           ;main.c: 158: INTCONbits.GIE = 0;
  3335  016112  9EF2               	bcf	intcon,7,c	;volatile
  3336                           
  3337                           ;main.c: 159: ctmu_task();
  3338  016114  EC46  F0B6         	call	_ctmu_task	;wreg free
  3339                           
  3340                           ;main.c: 160: if (ctmu_m.flag.pressing &&
  3341                           ;main.c: 161: port[0].ctmu.flag.pressing &&
  3342                           ;main.c: 162: port[1].ctmu.flag.pressing &&
  3343                           ;main.c: 163: port[2].ctmu.flag.pressing) {
  3344  016118  A02A               	btfss	_ctmu_m+3,0,c
  3345  01611A  D00A               	goto	l12351
  3346  01611C  0101               	movlb	1	; () banked
  3347  01611E  A130               	btfss	(_port+3)& (0+255),0,b
  3348  016120  D007               	goto	l12351
  3349                           
  3350                           ; BSR set to: 1
  3351  016122  0101               	movlb	1	; () banked
  3352  016124  A147               	btfss	(_port+26)& (0+255),0,b
  3353  016126  D004               	goto	l12351
  3354                           
  3355                           ; BSR set to: 1
  3356  016128  0101               	movlb	1	; () banked
  3357  01612A  B15E               	btfsc	(_port+49)& (0+255),0,b
  3358                           
  3359                           ; BSR set to: 1
  3360                           ;main.c: 164: bootload();
  3361  01612C  EC1A  F0B3         	call	_bootload	;wreg free
  3362  016130                     l12351:
  3363                           
  3364                           ;main.c: 165: }
  3365                           ;main.c: 166: INTCONbits.GIE = 1;
  3366  016130  8EF2               	bsf	intcon,7,c	;volatile
  3367                           
  3368                           ;main.c: 168: INTCONbits.GIE = 0;
  3369  016132  9EF2               	bcf	intcon,7,c	;volatile
  3370                           
  3371                           ;main.c: 169: sleep_task();
  3372  016134  ECA0  F0A7         	call	_sleep_task	;wreg free
  3373  016138                     l12355:
  3374                           
  3375                           ;main.c: 170: INTCONbits.GIE = 1;
  3376  016138  8EF2               	bsf	intcon,7,c	;volatile
  3377  01613A  D7CF               	goto	l12313
  3378  01613C                     __end_of_main:
  3379                           	opt stack 0
  3380                           tblptru	equ	0xFF8
  3381                           tblptrh	equ	0xFF7
  3382                           tblptrl	equ	0xFF6
  3383                           tablat	equ	0xFF5
  3384                           intcon	equ	0xFF2
  3385                           postinc0	equ	0xFEE
  3386                           wreg	equ	0xFE8
  3387                           postdec1	equ	0xFE5
  3388                           fsr1h	equ	0xFE2
  3389                           fsr1l	equ	0xFE1
  3390                           
  3391 ;; *************** function _terminal_task *****************
  3392 ;; Defined at:
  3393 ;;		line 8 in file "../../../My_library/My_terminal.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  3396 ;;		 -> usb_tx(8), 
  3397 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
  3398 ;;		 -> usb_rx(8), 
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;  i               1  102[BANK4 ] unsigned char 
  3401 ;;  i               1  104[BANK4 ] unsigned char 
  3402 ;;  ascii           1  103[BANK4 ] unsigned char 
  3403 ;;  buf           100    0[BANK4 ] unsigned char [100]
  3404 ;; Return value:  Size  Location     Type
  3405 ;;		None               void
  3406 ;; Registers used:
  3407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3413 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0     105       0       0       0       0       0       0       
      +0       0       0       0
  3415 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3416 ;;      Totals:         0       0       6       0       0     105       0       0       0       0       0       0       
      +0       0       0       0
  3417 ;;Total ram usage:      111 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:   19
  3420 ;; This function calls:
  3421 ;;		_ringbuf_backspace
  3422 ;;		_ringbuf_delete
  3423 ;;		_ringbuf_init
  3424 ;;		_ringbuf_num
  3425 ;;		_ringbuf_pop
  3426 ;;		_ringbuf_put
  3427 ;;		_ringbuf_put_num
  3428 ;;		_ringbuf_put_str
  3429 ;;		_terminal_operation
  3430 ;; This function is called by:
  3431 ;;		_main
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           	psect	text1
  3436  010D8C                     __ptext1:
  3437                           	opt stack 0
  3438  010D8C                     _terminal_task:
  3439                           	opt stack 11
  3440                           
  3441                           ;My_terminal.c: 9: static ringbuf_t command;
  3442                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  3443                           ;My_terminal.c: 11: if (command_init == 0) {
  3444                           
  3445                           ;incstack = 0
  3446  010D8C  0101               	movlb	1	; () banked
  3447  010D8E  512C               	movf	terminal_task@command_init& (0+255),w,b
  3448  010D90  0101               	movlb	1	; () banked
  3449  010D92  A4D8               	btfss	status,2,c
  3450  010D94  D016               	goto	l12241
  3451                           
  3452                           ; BSR set to: 1
  3453                           ;My_terminal.c: 12: command_init = 1;
  3454  010D96  0E01               	movlw	1
  3455  010D98  0101               	movlb	1	; () banked
  3456  010D9A  6F2C               	movwf	terminal_task@command_init& (0+255),b
  3457                           
  3458                           ; BSR set to: 1
  3459                           ;My_terminal.c: 13: char buf[100];
  3460                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  3461  010D9C  0E80               	movlw	low terminal_task@command
  3462  010D9E  0100               	movlb	0	; () banked
  3463  010DA0  6F60               	movwf	ringbuf_init@rb& (0+255),b
  3464  010DA2  0E01               	movlw	high terminal_task@command
  3465  010DA4  0100               	movlb	0	; () banked
  3466  010DA6  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  3467  010DA8  0E00               	movlw	low terminal_task@buf
  3468  010DAA  0100               	movlb	0	; () banked
  3469  010DAC  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  3470  010DAE  0E04               	movlw	high terminal_task@buf
  3471  010DB0  0100               	movlb	0	; () banked
  3472  010DB2  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  3473  010DB4  0E00               	movlw	0
  3474  010DB6  0100               	movlb	0	; () banked
  3475  010DB8  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  3476  010DBA  0E64               	movlw	100
  3477  010DBC  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  3478  010DBE  EC55  F0B2         	call	_ringbuf_init	;wreg free
  3479  010DC2                     l12241:
  3480                           
  3481                           ;My_terminal.c: 15: }
  3482                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  3483  010DC2  C193  F060         	movff	terminal_task@rx,ringbuf_num@rb
  3484  010DC6  C194  F061         	movff	terminal_task@rx+1,ringbuf_num@rb+1
  3485  010DCA  ECA6  F0A1         	call	_ringbuf_num	;wreg free
  3486  010DCE  0100               	movlb	0	; () banked
  3487  010DD0  5160               	movf	?_ringbuf_num& (0+255),w,b
  3488  010DD2  0100               	movlb	0	; () banked
  3489  010DD4  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  3490  010DD6  B4D8               	btfsc	status,2,c
  3491  010DD8  0012               	return	
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  3495  010DDA  C193  F068         	movff	terminal_task@rx,ringbuf_pop@rb
  3496  010DDE  C194  F069         	movff	terminal_task@rx+1,ringbuf_pop@rb+1
  3497  010DE2  EC3A  F0A7         	call	_ringbuf_pop	;wreg free
  3498  010DE6  0104               	movlb	4	; () banked
  3499  010DE8  6F67               	movwf	terminal_task@ascii& (0+255),b
  3500                           
  3501                           ;My_terminal.c: 18: switch (ascii) {
  3502  010DEA  D176               	goto	l12305
  3503  010DEC                     l12245:
  3504                           
  3505                           ; BSR set to: 4
  3506                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  3507  010DEC  0E80               	movlw	low terminal_task@command
  3508  010DEE  0100               	movlb	0	; () banked
  3509  010DF0  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3510  010DF2  0E01               	movlw	high terminal_task@command
  3511  010DF4  0100               	movlb	0	; () banked
  3512  010DF6  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3513  010DF8  0E00               	movlw	0
  3514  010DFA  0100               	movlb	0	; () banked
  3515  010DFC  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3516  010DFE  EC69  F0A6         	call	_ringbuf_put	;wreg free
  3517                           
  3518                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  3519  010E02  C191  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3520  010E06  C192  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3521  010E0A  0E09               	movlw	9
  3522  010E0C  0100               	movlb	0	; () banked
  3523  010E0E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3524  010E10  EC69  F0A6         	call	_ringbuf_put	;wreg free
  3525                           
  3526                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3527  010E14  0E80               	movlw	low terminal_task@command
  3528  010E16  0100               	movlb	0	; () banked
  3529  010E18  6F60               	movwf	ringbuf_num@rb& (0+255),b
  3530  010E1A  0E01               	movlw	high terminal_task@command
  3531  010E1C  0100               	movlb	0	; () banked
  3532  010E1E  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3533  010E20  ECA6  F0A1         	call	_ringbuf_num	;wreg free
  3534  010E24  0EFF               	movlw	255
  3535  010E26  0100               	movlb	0	; () banked
  3536  010E28  2560               	addwf	?_ringbuf_num& (0+255),w,b
  3537  010E2A  0104               	movlb	4	; () banked
  3538  010E2C  6F64               	movwf	_terminal_task$6731& (0+255),b
  3539  010E2E  0EFF               	movlw	255
  3540  010E30  0100               	movlb	0	; () banked
  3541  010E32  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  3542  010E34  0104               	movlb	4	; () banked
  3543  010E36  6F65               	movwf	(_terminal_task$6731+1)& (0+255),b
  3544                           
  3545                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3546  010E38  C191  F083         	movff	terminal_task@tx,ringbuf_put_num@rb
  3547  010E3C  C192  F084         	movff	terminal_task@tx+1,ringbuf_put_num@rb+1
  3548  010E40  C464  F085         	movff	_terminal_task$6731,ringbuf_put_num@value
  3549  010E44  C465  F086         	movff	_terminal_task$6731+1,ringbuf_put_num@value+1
  3550  010E48  0E02               	movlw	2
  3551  010E4A  0100               	movlb	0	; () banked
  3552  010E4C  6F87               	movwf	ringbuf_put_num@digits& (0+255),b
  3553  010E4E  ECCA  F0AE         	call	_ringbuf_put_num	;wreg free
  3554                           
  3555                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  3556  010E52  C191  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3557  010E56  C192  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3558  010E5A  0E0A               	movlw	10
  3559  010E5C  0100               	movlb	0	; () banked
  3560  010E5E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3561  010E60  EC69  F0A6         	call	_ringbuf_put	;wreg free
  3562                           
  3563                           ;My_terminal.c: 24: static char op0[25];
  3564                           ;My_terminal.c: 25: static char op1[25];
  3565                           ;My_terminal.c: 26: static char op2[25];
  3566                           ;My_terminal.c: 27: static char op3[25];
  3567                           ;My_terminal.c: 28: uint8_t i;
  3568                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  3569  010E64  0E00               	movlw	0
  3570  010E66  0104               	movlb	4	; () banked
  3571  010E68  6F68               	movwf	terminal_task@i& (0+255),b
  3572  010E6A  D002               	goto	l12251
  3573  010E6C                     l12249:
  3574                           
  3575                           ; BSR set to: 4
  3576  010E6C  0104               	movlb	4	; () banked
  3577  010E6E  2B68               	incf	terminal_task@i& (0+255),f,b
  3578  010E70                     l12251:
  3579                           
  3580                           ; BSR set to: 4
  3581  010E70  0E80               	movlw	low terminal_task@command
  3582  010E72  0100               	movlb	0	; () banked
  3583  010E74  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3584  010E76  0E01               	movlw	high terminal_task@command
  3585  010E78  0100               	movlb	0	; () banked
  3586  010E7A  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3587  010E7C  EC3A  F0A7         	call	_ringbuf_pop	;wreg free
  3588  010E80  0101               	movlb	1	; () banked
  3589  010E82  6F95               	movwf	??_terminal_task& (0+255),b
  3590  010E84  0104               	movlb	4	; () banked
  3591  010E86  5168               	movf	terminal_task@i& (0+255),w,b
  3592  010E88  0D01               	mullw	1
  3593  010E8A  0E36               	movlw	low terminal_task@op0
  3594  010E8C  24F3               	addwf	prodl,w,c
  3595  010E8E  6ED9               	movwf	fsr2l,c
  3596  010E90  0E02               	movlw	high terminal_task@op0
  3597  010E92  20F4               	addwfc	prodh,w,c
  3598  010E94  6EDA               	movwf	fsr2h,c
  3599  010E96  C195  FFDF         	movff	??_terminal_task,indf2
  3600  010E9A  50DF               	movf	indf2,w,c
  3601  010E9C  A4D8               	btfss	status,2,c
  3602  010E9E  D7E6               	goto	l12249
  3603                           
  3604                           ; BSR set to: 4
  3605                           ;My_terminal.c: 30: op0[i] = '\0';
  3606                           
  3607                           ; BSR set to: 4
  3608  010EA0  0104               	movlb	4	; () banked
  3609  010EA2  5168               	movf	terminal_task@i& (0+255),w,b
  3610  010EA4  0D01               	mullw	1
  3611  010EA6  0E36               	movlw	low terminal_task@op0
  3612  010EA8  24F3               	addwf	prodl,w,c
  3613  010EAA  6ED9               	movwf	fsr2l,c
  3614  010EAC  0E02               	movlw	high terminal_task@op0
  3615  010EAE  20F4               	addwfc	prodh,w,c
  3616  010EB0  6EDA               	movwf	fsr2h,c
  3617  010EB2  0E00               	movlw	0
  3618  010EB4  6EDF               	movwf	indf2,c
  3619                           
  3620                           ; BSR set to: 4
  3621                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  3622  010EB6  0E00               	movlw	0
  3623  010EB8  0104               	movlb	4	; () banked
  3624  010EBA  6F68               	movwf	terminal_task@i& (0+255),b
  3625  010EBC  D002               	goto	l12259
  3626  010EBE                     l12257:
  3627                           
  3628                           ; BSR set to: 4
  3629  010EBE  0104               	movlb	4	; () banked
  3630  010EC0  2B68               	incf	terminal_task@i& (0+255),f,b
  3631  010EC2                     l12259:
  3632                           
  3633                           ; BSR set to: 4
  3634  010EC2  0E80               	movlw	low terminal_task@command
  3635  010EC4  0100               	movlb	0	; () banked
  3636  010EC6  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3637  010EC8  0E01               	movlw	high terminal_task@command
  3638  010ECA  0100               	movlb	0	; () banked
  3639  010ECC  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3640  010ECE  EC3A  F0A7         	call	_ringbuf_pop	;wreg free
  3641  010ED2  0101               	movlb	1	; () banked
  3642  010ED4  6F95               	movwf	??_terminal_task& (0+255),b
  3643  010ED6  0104               	movlb	4	; () banked
  3644  010ED8  5168               	movf	terminal_task@i& (0+255),w,b
  3645  010EDA  0D01               	mullw	1
  3646  010EDC  0E4F               	movlw	low terminal_task@op1
  3647  010EDE  24F3               	addwf	prodl,w,c
  3648  010EE0  6ED9               	movwf	fsr2l,c
  3649  010EE2  0E02               	movlw	high terminal_task@op1
  3650  010EE4  20F4               	addwfc	prodh,w,c
  3651  010EE6  6EDA               	movwf	fsr2h,c
  3652  010EE8  C195  FFDF         	movff	??_terminal_task,indf2
  3653  010EEC  50DF               	movf	indf2,w,c
  3654  010EEE  A4D8               	btfss	status,2,c
  3655  010EF0  D7E6               	goto	l12257
  3656                           
  3657                           ; BSR set to: 4
  3658                           ;My_terminal.c: 32: op1[i] = '\0';
  3659                           
  3660                           ; BSR set to: 4
  3661  010EF2  0104               	movlb	4	; () banked
  3662  010EF4  5168               	movf	terminal_task@i& (0+255),w,b
  3663  010EF6  0D01               	mullw	1
  3664  010EF8  0E4F               	movlw	low terminal_task@op1
  3665  010EFA  24F3               	addwf	prodl,w,c
  3666  010EFC  6ED9               	movwf	fsr2l,c
  3667  010EFE  0E02               	movlw	high terminal_task@op1
  3668  010F00  20F4               	addwfc	prodh,w,c
  3669  010F02  6EDA               	movwf	fsr2h,c
  3670  010F04  0E00               	movlw	0
  3671  010F06  6EDF               	movwf	indf2,c
  3672                           
  3673                           ; BSR set to: 4
  3674                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  3675  010F08  0E00               	movlw	0
  3676  010F0A  0104               	movlb	4	; () banked
  3677  010F0C  6F68               	movwf	terminal_task@i& (0+255),b
  3678  010F0E  D002               	goto	l12267
  3679  010F10                     l12265:
  3680                           
  3681                           ; BSR set to: 4
  3682  010F10  0104               	movlb	4	; () banked
  3683  010F12  2B68               	incf	terminal_task@i& (0+255),f,b
  3684  010F14                     l12267:
  3685                           
  3686                           ; BSR set to: 4
  3687  010F14  0E80               	movlw	low terminal_task@command
  3688  010F16  0100               	movlb	0	; () banked
  3689  010F18  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3690  010F1A  0E01               	movlw	high terminal_task@command
  3691  010F1C  0100               	movlb	0	; () banked
  3692  010F1E  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3693  010F20  EC3A  F0A7         	call	_ringbuf_pop	;wreg free
  3694  010F24  0101               	movlb	1	; () banked
  3695  010F26  6F95               	movwf	??_terminal_task& (0+255),b
  3696  010F28  0104               	movlb	4	; () banked
  3697  010F2A  5168               	movf	terminal_task@i& (0+255),w,b
  3698  010F2C  0D01               	mullw	1
  3699  010F2E  0E68               	movlw	low terminal_task@op2
  3700  010F30  24F3               	addwf	prodl,w,c
  3701  010F32  6ED9               	movwf	fsr2l,c
  3702  010F34  0E02               	movlw	high terminal_task@op2
  3703  010F36  20F4               	addwfc	prodh,w,c
  3704  010F38  6EDA               	movwf	fsr2h,c
  3705  010F3A  C195  FFDF         	movff	??_terminal_task,indf2
  3706  010F3E  50DF               	movf	indf2,w,c
  3707  010F40  A4D8               	btfss	status,2,c
  3708  010F42  D7E6               	goto	l12265
  3709                           
  3710                           ; BSR set to: 4
  3711                           ;My_terminal.c: 34: op2[i] = '\0';
  3712                           
  3713                           ; BSR set to: 4
  3714  010F44  0104               	movlb	4	; () banked
  3715  010F46  5168               	movf	terminal_task@i& (0+255),w,b
  3716  010F48  0D01               	mullw	1
  3717  010F4A  0E68               	movlw	low terminal_task@op2
  3718  010F4C  24F3               	addwf	prodl,w,c
  3719  010F4E  6ED9               	movwf	fsr2l,c
  3720  010F50  0E02               	movlw	high terminal_task@op2
  3721  010F52  20F4               	addwfc	prodh,w,c
  3722  010F54  6EDA               	movwf	fsr2h,c
  3723  010F56  0E00               	movlw	0
  3724  010F58  6EDF               	movwf	indf2,c
  3725                           
  3726                           ; BSR set to: 4
  3727                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  3728  010F5A  0E00               	movlw	0
  3729  010F5C  0104               	movlb	4	; () banked
  3730  010F5E  6F68               	movwf	terminal_task@i& (0+255),b
  3731  010F60  D002               	goto	l12275
  3732  010F62                     l12273:
  3733                           
  3734                           ; BSR set to: 4
  3735  010F62  0104               	movlb	4	; () banked
  3736  010F64  2B68               	incf	terminal_task@i& (0+255),f,b
  3737  010F66                     l12275:
  3738                           
  3739                           ; BSR set to: 4
  3740  010F66  0E80               	movlw	low terminal_task@command
  3741  010F68  0100               	movlb	0	; () banked
  3742  010F6A  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3743  010F6C  0E01               	movlw	high terminal_task@command
  3744  010F6E  0100               	movlb	0	; () banked
  3745  010F70  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3746  010F72  EC3A  F0A7         	call	_ringbuf_pop	;wreg free
  3747  010F76  0101               	movlb	1	; () banked
  3748  010F78  6F95               	movwf	??_terminal_task& (0+255),b
  3749  010F7A  0104               	movlb	4	; () banked
  3750  010F7C  5168               	movf	terminal_task@i& (0+255),w,b
  3751  010F7E  0D01               	mullw	1
  3752  010F80  0E81               	movlw	low terminal_task@op3
  3753  010F82  24F3               	addwf	prodl,w,c
  3754  010F84  6ED9               	movwf	fsr2l,c
  3755  010F86  0E02               	movlw	high terminal_task@op3
  3756  010F88  20F4               	addwfc	prodh,w,c
  3757  010F8A  6EDA               	movwf	fsr2h,c
  3758  010F8C  C195  FFDF         	movff	??_terminal_task,indf2
  3759  010F90  50DF               	movf	indf2,w,c
  3760  010F92  A4D8               	btfss	status,2,c
  3761  010F94  D7E6               	goto	l12273
  3762                           
  3763                           ; BSR set to: 4
  3764                           ;My_terminal.c: 36: op3[i] = '\0';
  3765                           
  3766                           ; BSR set to: 4
  3767  010F96  0104               	movlb	4	; () banked
  3768  010F98  5168               	movf	terminal_task@i& (0+255),w,b
  3769  010F9A  0D01               	mullw	1
  3770  010F9C  0E81               	movlw	low terminal_task@op3
  3771  010F9E  24F3               	addwf	prodl,w,c
  3772  010FA0  6ED9               	movwf	fsr2l,c
  3773  010FA2  0E02               	movlw	high terminal_task@op3
  3774  010FA4  20F4               	addwfc	prodh,w,c
  3775  010FA6  6EDA               	movwf	fsr2h,c
  3776  010FA8  0E00               	movlw	0
  3777  010FAA  6EDF               	movwf	indf2,c
  3778                           
  3779                           ; BSR set to: 4
  3780                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  3781  010FAC  C191  F0DB         	movff	terminal_task@tx,terminal_operation@tx
  3782  010FB0  C192  F0DC         	movff	terminal_task@tx+1,terminal_operation@tx+1
  3783  010FB4  0E36               	movlw	low terminal_task@op0
  3784  010FB6  0100               	movlb	0	; () banked
  3785  010FB8  6FDD               	movwf	terminal_operation@op0& (0+255),b
  3786  010FBA  0E02               	movlw	high terminal_task@op0
  3787  010FBC  0100               	movlb	0	; () banked
  3788  010FBE  6FDE               	movwf	(terminal_operation@op0+1)& (0+255),b
  3789  010FC0  0E4F               	movlw	low terminal_task@op1
  3790  010FC2  0100               	movlb	0	; () banked
  3791  010FC4  6FDF               	movwf	terminal_operation@op1& (0+255),b
  3792  010FC6  0E02               	movlw	high terminal_task@op1
  3793  010FC8  0100               	movlb	0	; () banked
  3794  010FCA  6FE0               	movwf	(terminal_operation@op1+1)& (0+255),b
  3795  010FCC  0E68               	movlw	low terminal_task@op2
  3796  010FCE  0100               	movlb	0	; () banked
  3797  010FD0  6FE1               	movwf	terminal_operation@op2& (0+255),b
  3798  010FD2  0E02               	movlw	high terminal_task@op2
  3799  010FD4  0100               	movlb	0	; () banked
  3800  010FD6  6FE2               	movwf	(terminal_operation@op2+1)& (0+255),b
  3801  010FD8  0E81               	movlw	low terminal_task@op3
  3802  010FDA  0100               	movlb	0	; () banked
  3803  010FDC  6FE3               	movwf	terminal_operation@op3& (0+255),b
  3804  010FDE  0E02               	movlw	high terminal_task@op3
  3805  010FE0  0100               	movlb	0	; () banked
  3806  010FE2  6FE4               	movwf	(terminal_operation@op3+1)& (0+255),b
  3807  010FE4  EC62  F090         	call	_terminal_operation	;wreg free
  3808                           
  3809                           ;My_terminal.c: 38: break;
  3810  010FE8  0012               	return	
  3811  010FEA                     l12281:
  3812                           
  3813                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  3814  010FEA  0E80               	movlw	low terminal_task@command
  3815  010FEC  0100               	movlb	0	; () banked
  3816  010FEE  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3817  010FF0  0E01               	movlw	high terminal_task@command
  3818  010FF2  0100               	movlb	0	; () banked
  3819  010FF4  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3820  010FF6  0E00               	movlw	0
  3821  010FF8  0100               	movlb	0	; () banked
  3822  010FFA  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3823  010FFC  EC69  F0A6         	call	_ringbuf_put	;wreg free
  3824                           
  3825                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  3826  011000  C191  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3827  011004  C192  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3828  011008  0E20               	movlw	32
  3829  01100A  0100               	movlb	0	; () banked
  3830  01100C  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3831  01100E  EC69  F0A6         	call	_ringbuf_put	;wreg free
  3832                           
  3833                           ;My_terminal.c: 42: break;
  3834  011012  0012               	return	
  3835  011014                     l12283:
  3836                           
  3837                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  3838  011014  0E80               	movlw	low terminal_task@command
  3839  011016  0100               	movlb	0	; () banked
  3840  011018  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  3841  01101A  0E01               	movlw	high terminal_task@command
  3842  01101C  0100               	movlb	0	; () banked
  3843  01101E  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  3844  011020  ECE0  F0AC         	call	_ringbuf_backspace	;wreg free
  3845                           
  3846                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  3847  011024  C191  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  3848  011028  C192  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  3849  01102C  0EE3               	movlw	low STR_96
  3850  01102E  0100               	movlb	0	; () banked
  3851  011030  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3852  011032  0EFF               	movlw	high STR_96
  3853  011034  0100               	movlb	0	; () banked
  3854  011036  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3855  011038  ECD3  F0B0         	call	_ringbuf_put_str	;wreg free
  3856                           
  3857                           ;My_terminal.c: 46: break;
  3858  01103C  0012               	return	
  3859  01103E                     l12287:
  3860                           
  3861                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  3862  01103E  0E00               	movlw	0
  3863  011040  0104               	movlb	4	; () banked
  3864  011042  6F66               	movwf	terminal_task@i_3917& (0+255),b
  3865  011044  D00E               	goto	l12293
  3866  011046                     l12289:
  3867  011046  C191  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  3868  01104A  C192  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  3869  01104E  0EE3               	movlw	low STR_96
  3870  011050  0100               	movlb	0	; () banked
  3871  011052  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3872  011054  0EFF               	movlw	high STR_96
  3873  011056  0100               	movlb	0	; () banked
  3874  011058  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3875  01105A  ECD3  F0B0         	call	_ringbuf_put_str	;wreg free
  3876  01105E  0104               	movlb	4	; () banked
  3877  011060  2B66               	incf	terminal_task@i_3917& (0+255),f,b
  3878  011062                     l12293:
  3879                           
  3880                           ; BSR set to: 4
  3881  011062  0E80               	movlw	low terminal_task@command
  3882  011064  0100               	movlb	0	; () banked
  3883  011066  6F60               	movwf	ringbuf_num@rb& (0+255),b
  3884  011068  0E01               	movlw	high terminal_task@command
  3885  01106A  0100               	movlb	0	; () banked
  3886  01106C  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3887  01106E  ECA6  F0A1         	call	_ringbuf_num	;wreg free
  3888  011072  0104               	movlb	4	; () banked
  3889  011074  5166               	movf	terminal_task@i_3917& (0+255),w,b
  3890  011076  0101               	movlb	1	; () banked
  3891  011078  6F95               	movwf	??_terminal_task& (0+255),b
  3892  01107A  6B96               	clrf	(??_terminal_task+1)& (0+255),b
  3893  01107C  0100               	movlb	0	; () banked
  3894  01107E  5160               	movf	?_ringbuf_num& (0+255),w,b
  3895  011080  0101               	movlb	1	; () banked
  3896  011082  5D95               	subwf	??_terminal_task& (0+255),w,b
  3897  011084  0100               	movlb	0	; () banked
  3898  011086  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  3899  011088  0101               	movlb	1	; () banked
  3900  01108A  5996               	subwfb	(??_terminal_task+1)& (0+255),w,b
  3901  01108C  A0D8               	btfss	status,0,c
  3902  01108E  D7DB               	goto	l12289
  3903                           
  3904                           ; BSR set to: 1
  3905                           ;My_terminal.c: 49: ringbuf_delete(&command);
  3906                           
  3907                           ; BSR set to: 1
  3908  011090  0E80               	movlw	low terminal_task@command
  3909  011092  0100               	movlb	0	; () banked
  3910  011094  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  3911  011096  0E01               	movlw	high terminal_task@command
  3912  011098  0100               	movlb	0	; () banked
  3913  01109A  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  3914  01109C  EC86  F0B5         	call	_ringbuf_delete	;wreg free
  3915                           
  3916                           ;My_terminal.c: 50: break;
  3917  0110A0  0012               	return	
  3918  0110A2                     l12297:
  3919                           
  3920                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  3921  0110A2  0E1F               	movlw	31
  3922  0110A4  0104               	movlb	4	; () banked
  3923  0110A6  6567               	cpfsgt	terminal_task@ascii& (0+255),b
  3924  0110A8  0012               	return	
  3925                           
  3926                           ; BSR set to: 4
  3927  0110AA  0E7F               	movlw	127
  3928  0110AC  0104               	movlb	4	; () banked
  3929  0110AE  6167               	cpfslt	terminal_task@ascii& (0+255),b
  3930  0110B0  0012               	return	
  3931                           
  3932                           ; BSR set to: 4
  3933                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  3934  0110B2  0E80               	movlw	low terminal_task@command
  3935  0110B4  0100               	movlb	0	; () banked
  3936  0110B6  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3937  0110B8  0E01               	movlw	high terminal_task@command
  3938  0110BA  0100               	movlb	0	; () banked
  3939  0110BC  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3940  0110BE  C467  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  3941  0110C2  EC69  F0A6         	call	_ringbuf_put	;wreg free
  3942                           
  3943                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  3944  0110C6  C191  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3945  0110CA  C192  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3946  0110CE  C467  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  3947  0110D2  EC69  F0A6         	call	_ringbuf_put	;wreg free
  3948                           
  3949                           ;My_terminal.c: 57: }
  3950                           
  3951                           ;My_terminal.c: 55: }
  3952                           ;My_terminal.c: 56: break;
  3953  0110D6  0012               	return	
  3954  0110D8                     l12305:
  3955  0110D8  0104               	movlb	4	; () banked
  3956  0110DA  5167               	movf	terminal_task@ascii& (0+255),w,b
  3957                           
  3958                           ; Switch size 1, requested type "space"
  3959                           ; Number of cases is 4, Range of values is 8 to 127
  3960                           ; switch strategies available:
  3961                           ; Name         Instructions Cycles
  3962                           ; simple_byte           13     7 (average)
  3963                           ;	Chosen strategy is simple_byte
  3964  0110DC  0A08               	xorlw	8	; case 8
  3965  0110DE  B4D8               	btfsc	status,2,c
  3966  0110E0  D799               	goto	l12283
  3967  0110E2  0A05               	xorlw	5	; case 13
  3968  0110E4  B4D8               	btfsc	status,2,c
  3969  0110E6  D682               	goto	l12245
  3970  0110E8  0A2D               	xorlw	45	; case 32
  3971  0110EA  B4D8               	btfsc	status,2,c
  3972  0110EC  D77E               	goto	l12281
  3973  0110EE  0A5F               	xorlw	95	; case 127
  3974  0110F0  B4D8               	btfsc	status,2,c
  3975  0110F2  D7A5               	goto	l12287
  3976  0110F4  D7D6               	goto	l12297
  3977  0110F6                     __end_of_terminal_task:
  3978                           	opt stack 0
  3979                           tblptru	equ	0xFF8
  3980                           tblptrh	equ	0xFF7
  3981                           tblptrl	equ	0xFF6
  3982                           tablat	equ	0xFF5
  3983                           prodh	equ	0xFF4
  3984                           prodl	equ	0xFF3
  3985                           intcon	equ	0xFF2
  3986                           postinc0	equ	0xFEE
  3987                           wreg	equ	0xFE8
  3988                           postdec1	equ	0xFE5
  3989                           fsr1h	equ	0xFE2
  3990                           fsr1l	equ	0xFE1
  3991                           indf2	equ	0xFDF
  3992                           fsr2h	equ	0xFDA
  3993                           fsr2l	equ	0xFD9
  3994                           status	equ	0xFD8
  3995                           
  3996 ;; *************** function _terminal_operation *****************
  3997 ;; Defined at:
  3998 ;;		line 200 in file "ChargeStation_task.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  tx              2  123[BANK0 ] PTR struct ringbuf
  4001 ;;		 -> usb_tx(8), 
  4002 ;;  op0             2  125[BANK0 ] PTR unsigned char 
  4003 ;;		 -> terminal_task@op0(25), 
  4004 ;;  op1             2  127[BANK0 ] PTR unsigned char 
  4005 ;;		 -> terminal_task@op1(25), 
  4006 ;;  op2             2  129[BANK0 ] PTR unsigned char 
  4007 ;;		 -> terminal_task@op2(25), 
  4008 ;;  op3             2  131[BANK0 ] PTR unsigned char 
  4009 ;;		 -> terminal_task@op3(25), 
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;  percentage      1  133[BANK0 ] unsigned char 
  4012 ;; Return value:  Size  Location     Type
  4013 ;;		None               void
  4014 ;; Registers used:
  4015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4021 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4022 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4024 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4025 ;;Total ram usage:       11 bytes
  4026 ;; Hardware stack levels used:    1
  4027 ;; Hardware stack levels required when called:   18
  4028 ;; This function calls:
  4029 ;;		_atoi
  4030 ;;		_bootload
  4031 ;;		_ctmu_set_ratio
  4032 ;;		_ringbuf_put_str
  4033 ;;		_strcmp
  4034 ;;		_terminal_time
  4035 ;; This function is called by:
  4036 ;;		_terminal_task
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           	psect	text2
  4041  0120C4                     __ptext2:
  4042                           	opt stack 0
  4043  0120C4                     _terminal_operation:
  4044                           	opt stack 11
  4045                           
  4046                           ;ChargeStation_task.c: 201: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  4047                           
  4048                           ;incstack = 0
  4049  0120C4  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4050  0120C8  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4051  0120CC  0ED9               	movlw	low STR_11
  4052  0120CE  0100               	movlb	0	; () banked
  4053  0120D0  6F62               	movwf	strcmp@s2& (0+255),b
  4054  0120D2  0EFF               	movlw	high STR_11
  4055  0120D4  0100               	movlb	0	; () banked
  4056  0120D6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4057  0120D8  ECF9  F0B1         	call	_strcmp	;wreg free
  4058  0120DC  0100               	movlb	0	; () banked
  4059  0120DE  5160               	movf	?_strcmp& (0+255),w,b
  4060  0120E0  0100               	movlb	0	; () banked
  4061  0120E2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4062  0120E4  B4D8               	btfsc	status,2,c
  4063  0120E6  D012               	goto	l11803
  4064                           
  4065                           ; BSR set to: 0
  4066  0120E8  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4067  0120EC  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4068  0120F0  0EFD               	movlw	low STR_12
  4069  0120F2  0100               	movlb	0	; () banked
  4070  0120F4  6F62               	movwf	strcmp@s2& (0+255),b
  4071  0120F6  0EFF               	movlw	high STR_12
  4072  0120F8  0100               	movlb	0	; () banked
  4073  0120FA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4074  0120FC  ECF9  F0B1         	call	_strcmp	;wreg free
  4075  012100  0100               	movlb	0	; () banked
  4076  012102  5160               	movf	?_strcmp& (0+255),w,b
  4077  012104  0100               	movlb	0	; () banked
  4078  012106  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4079  012108  A4D8               	btfss	status,2,c
  4080  01210A  D00C               	goto	l11805
  4081  01210C                     l11803:
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;ChargeStation_task.c: 202: ringbuf_put_str(tx,
  4085                           ;ChargeStation_task.c: 203: "\t*****************************\n"
  4086                           ;ChargeStation_task.c: 204: "\t**** Charge Station 6.12 ****\n"
  4087                           ;ChargeStation_task.c: 205: "\t**** Made by @Ryokeri14  ****\n"
  4088                           ;ChargeStation_task.c: 206: "\t*****************************\n\n"
  4089                           ;ChargeStation_task.c: 207: "\tprint_time(t)\n"
  4090                           ;ChargeStation_task.c: 208: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
  4091                           ;ChargeStation_task.c: 209: "\tsettings(set) [port:left(l),center(c),right(r)]\n\t\t[aut
      +                          o_stop(as),always_on(ao),integrating_reset(ir)]\n"
  4092  01210C  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4093  012110  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4094  012114  0EE6               	movlw	low STR_13
  4095  012116  0100               	movlb	0	; () banked
  4096  012118  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4097  01211A  0EFB               	movlw	high STR_13
  4098  01211C  0100               	movlb	0	; () banked
  4099  01211E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4100  012120  ECD3  F0B0         	call	_ringbuf_put_str	;wreg free
  4101  012124                     l11805:
  4102                           
  4103                           ;ChargeStation_task.c: 216: }
  4104                           ;ChargeStation_task.c: 217: terminal_time(tx, op0, op1, op2);
  4105  012124  C0DB  F0D2         	movff	terminal_operation@tx,terminal_time@tx
  4106  012128  C0DC  F0D3         	movff	terminal_operation@tx+1,terminal_time@tx+1
  4107  01212C  C0DD  F0D4         	movff	terminal_operation@op0,terminal_time@op0
  4108  012130  C0DE  F0D5         	movff	terminal_operation@op0+1,terminal_time@op0+1
  4109  012134  C0DF  F0D6         	movff	terminal_operation@op1,terminal_time@op1
  4110  012138  C0E0  F0D7         	movff	terminal_operation@op1+1,terminal_time@op1+1
  4111  01213C  C0E1  F0D8         	movff	terminal_operation@op2,terminal_time@op2
  4112  012140  C0E2  F0D9         	movff	terminal_operation@op2+1,terminal_time@op2+1
  4113  012144  ECF0  F084         	call	_terminal_time	;wreg free
  4114                           
  4115                           ;ChargeStation_task.c: 218: if (!strcmp(op0, "RESET();")) {
  4116  012148  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4117  01214C  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4118  012150  0E70               	movlw	low STR_14
  4119  012152  0100               	movlb	0	; () banked
  4120  012154  6F62               	movwf	strcmp@s2& (0+255),b
  4121  012156  0EFF               	movlw	high STR_14
  4122  012158  0100               	movlb	0	; () banked
  4123  01215A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4124  01215C  ECF9  F0B1         	call	_strcmp	;wreg free
  4125  012160  0100               	movlb	0	; () banked
  4126  012162  5160               	movf	?_strcmp& (0+255),w,b
  4127  012164  0100               	movlb	0	; () banked
  4128  012166  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4129  012168  B4D8               	btfsc	status,2,c
  4130                           
  4131                           ; BSR set to: 0
  4132  01216A  00FF               	reset		;# 
  4133                           
  4134                           ;ChargeStation_task.c: 220: }
  4135                           ;ChargeStation_task.c: 221: if (!strcmp(op0, "bootload")) {
  4136  01216C  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4137  012170  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4138  012174  0E79               	movlw	low STR_15
  4139  012176  0100               	movlb	0	; () banked
  4140  012178  6F62               	movwf	strcmp@s2& (0+255),b
  4141  01217A  0EFF               	movlw	high STR_15
  4142  01217C  0100               	movlb	0	; () banked
  4143  01217E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4144  012180  ECF9  F0B1         	call	_strcmp	;wreg free
  4145  012184  0100               	movlb	0	; () banked
  4146  012186  5160               	movf	?_strcmp& (0+255),w,b
  4147  012188  0100               	movlb	0	; () banked
  4148  01218A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4149  01218C  B4D8               	btfsc	status,2,c
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;ChargeStation_task.c: 222: bootload();
  4153  01218E  EC1A  F0B3         	call	_bootload	;wreg free
  4154                           
  4155                           ;ChargeStation_task.c: 223: }
  4156                           ;ChargeStation_task.c: 224: if (!strcmp(op0, "od") || !strcmp(op0, "output_data")) {
  4157  012192  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4158  012196  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4159  01219A  0EEE               	movlw	low STR_16
  4160  01219C  0100               	movlb	0	; () banked
  4161  01219E  6F62               	movwf	strcmp@s2& (0+255),b
  4162  0121A0  0EFF               	movlw	high STR_16
  4163  0121A2  0100               	movlb	0	; () banked
  4164  0121A4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4165  0121A6  ECF9  F0B1         	call	_strcmp	;wreg free
  4166  0121AA  0100               	movlb	0	; () banked
  4167  0121AC  5160               	movf	?_strcmp& (0+255),w,b
  4168  0121AE  0100               	movlb	0	; () banked
  4169  0121B0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4170  0121B2  B4D8               	btfsc	status,2,c
  4171  0121B4  D012               	goto	l11819
  4172                           
  4173                           ; BSR set to: 0
  4174  0121B6  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4175  0121BA  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4176  0121BE  0E31               	movlw	low STR_17
  4177  0121C0  0100               	movlb	0	; () banked
  4178  0121C2  6F62               	movwf	strcmp@s2& (0+255),b
  4179  0121C4  0EFF               	movlw	high STR_17
  4180  0121C6  0100               	movlb	0	; () banked
  4181  0121C8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4182  0121CA  ECF9  F0B1         	call	_strcmp	;wreg free
  4183  0121CE  0100               	movlb	0	; () banked
  4184  0121D0  5160               	movf	?_strcmp& (0+255),w,b
  4185  0121D2  0100               	movlb	0	; () banked
  4186  0121D4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4187  0121D6  A4D8               	btfss	status,2,c
  4188  0121D8  D002               	goto	l11821
  4189  0121DA                     l11819:
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;ChargeStation_task.c: 225: terminal_data_out = 1;
  4193  0121DA  0E01               	movlw	1
  4194  0121DC  6E23               	movwf	_terminal_data_out,c
  4195  0121DE                     l11821:
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;ChargeStation_task.c: 226: }
  4199                           ;ChargeStation_task.c: 227: if (!strcmp(op0, "")) {
  4200  0121DE  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4201  0121E2  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4202  0121E6  0EE6               	movlw	low (STR_96+3)
  4203  0121E8  0100               	movlb	0	; () banked
  4204  0121EA  6F62               	movwf	strcmp@s2& (0+255),b
  4205  0121EC  0EFF               	movlw	high (STR_96+3)
  4206  0121EE  0100               	movlb	0	; () banked
  4207  0121F0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4208  0121F2  ECF9  F0B1         	call	_strcmp	;wreg free
  4209  0121F6  0100               	movlb	0	; () banked
  4210  0121F8  5160               	movf	?_strcmp& (0+255),w,b
  4211  0121FA  0100               	movlb	0	; () banked
  4212  0121FC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4213  0121FE  A4D8               	btfss	status,2,c
  4214  012200  D002               	goto	l11825
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;ChargeStation_task.c: 228: terminal_data_out = 0;
  4218  012202  0E00               	movlw	0
  4219  012204  6E23               	movwf	_terminal_data_out,c
  4220  012206                     l11825:
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;ChargeStation_task.c: 229: }
  4224                           ;ChargeStation_task.c: 230: if (!strcmp(op0, "touch")) {
  4225  012206  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4226  01220A  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4227  01220E  0EC3               	movlw	low STR_19
  4228  012210  0100               	movlb	0	; () banked
  4229  012212  6F62               	movwf	strcmp@s2& (0+255),b
  4230  012214  0EFF               	movlw	high STR_19
  4231  012216  0100               	movlb	0	; () banked
  4232  012218  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4233  01221A  ECF9  F0B1         	call	_strcmp	;wreg free
  4234  01221E  0100               	movlb	0	; () banked
  4235  012220  5160               	movf	?_strcmp& (0+255),w,b
  4236  012222  0100               	movlb	0	; () banked
  4237  012224  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4238  012226  A4D8               	btfss	status,2,c
  4239  012228  0012               	return	
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;ChargeStation_task.c: 231: if (!strcmp(op1, "initialize") || !strcmp(op1, "init")) {
  4243  01222A  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4244  01222E  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4245  012232  0E53               	movlw	low STR_20
  4246  012234  0100               	movlb	0	; () banked
  4247  012236  6F62               	movwf	strcmp@s2& (0+255),b
  4248  012238  0EFF               	movlw	high STR_20
  4249  01223A  0100               	movlb	0	; () banked
  4250  01223C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4251  01223E  ECF9  F0B1         	call	_strcmp	;wreg free
  4252  012242  0100               	movlb	0	; () banked
  4253  012244  5160               	movf	?_strcmp& (0+255),w,b
  4254  012246  0100               	movlb	0	; () banked
  4255  012248  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4256  01224A  B4D8               	btfsc	status,2,c
  4257  01224C  D012               	goto	l11831
  4258                           
  4259                           ; BSR set to: 0
  4260  01224E  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4261  012252  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4262  012256  0EDE               	movlw	low STR_21
  4263  012258  0100               	movlb	0	; () banked
  4264  01225A  6F62               	movwf	strcmp@s2& (0+255),b
  4265  01225C  0EFF               	movlw	high STR_21
  4266  01225E  0100               	movlb	0	; () banked
  4267  012260  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4268  012262  ECF9  F0B1         	call	_strcmp	;wreg free
  4269  012266  0100               	movlb	0	; () banked
  4270  012268  5160               	movf	?_strcmp& (0+255),w,b
  4271  01226A  0100               	movlb	0	; () banked
  4272  01226C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4273  01226E  A4D8               	btfss	status,2,c
  4274  012270  D02C               	goto	l11843
  4275  012272                     l11831:
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;ChargeStation_task.c: 232: uint8_t percentage = atoi(op2);
  4279  012272  C0E1  F07C         	movff	terminal_operation@op2,atoi@s
  4280  012276  C0E2  F07D         	movff	terminal_operation@op2+1,atoi@s+1
  4281  01227A  ECB4  F0A0         	call	_atoi	;wreg free
  4282  01227E  0100               	movlb	0	; () banked
  4283  012280  517C               	movf	?_atoi& (0+255),w,b
  4284  012282  0100               	movlb	0	; () banked
  4285  012284  6FE5               	movwf	terminal_operation@percentage& (0+255),b
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;ChargeStation_task.c: 233: if (percentage <= 100) {
  4289  012286  0E65               	movlw	101
  4290  012288  0100               	movlb	0	; () banked
  4291  01228A  61E5               	cpfslt	terminal_operation@percentage& (0+255),b
  4292  01228C  D012               	goto	l11841
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;ChargeStation_task.c: 234: ctmu_ratio = percentage;
  4296  01228E  C0E5  F019         	movff	terminal_operation@percentage,_ctmu_ratio
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;ChargeStation_task.c: 235: ctmu_set_ratio(ctmu_ratio);
  4300  012292  5019               	movf	_ctmu_ratio,w,c
  4301  012294  EC1D  F0A2         	call	_ctmu_set_ratio
  4302                           
  4303                           ;ChargeStation_task.c: 236: ringbuf_put_str(tx, "\tinitializing complete\n");
  4304  012298  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4305  01229C  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4306  0122A0  0E1D               	movlw	low STR_22
  4307  0122A2  0100               	movlb	0	; () banked
  4308  0122A4  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4309  0122A6  0EFE               	movlw	high STR_22
  4310  0122A8  0100               	movlb	0	; () banked
  4311  0122AA  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4312  0122AC  ECD3  F0B0         	call	_ringbuf_put_str	;wreg free
  4313                           
  4314                           ;ChargeStation_task.c: 237: } else {
  4315  0122B0  D00C               	goto	l11843
  4316  0122B2                     l11841:
  4317                           
  4318                           ;ChargeStation_task.c: 238: ringbuf_put_str(tx, "\tinvalid data\n\tinitializing failed\n
      +                          ");
  4319  0122B2  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4320  0122B6  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4321  0122BA  0EBD               	movlw	low STR_23
  4322  0122BC  0100               	movlb	0	; () banked
  4323  0122BE  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4324  0122C0  0EFD               	movlw	high STR_23
  4325  0122C2  0100               	movlb	0	; () banked
  4326  0122C4  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4327  0122C6  ECD3  F0B0         	call	_ringbuf_put_str	;wreg free
  4328  0122CA                     l11843:
  4329                           
  4330                           ;ChargeStation_task.c: 239: }
  4331                           ;ChargeStation_task.c: 240: }
  4332                           ;ChargeStation_task.c: 241: if (!strcmp(op1, "reset") || !strcmp(op1, "r")) {
  4333  0122CA  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4334  0122CE  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4335  0122D2  0EC9               	movlw	low STR_24
  4336  0122D4  0100               	movlb	0	; () banked
  4337  0122D6  6F62               	movwf	strcmp@s2& (0+255),b
  4338  0122D8  0EFF               	movlw	high STR_24
  4339  0122DA  0100               	movlb	0	; () banked
  4340  0122DC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4341  0122DE  ECF9  F0B1         	call	_strcmp	;wreg free
  4342  0122E2  0100               	movlb	0	; () banked
  4343  0122E4  5160               	movf	?_strcmp& (0+255),w,b
  4344  0122E6  0100               	movlb	0	; () banked
  4345  0122E8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4346  0122EA  B4D8               	btfsc	status,2,c
  4347  0122EC  D012               	goto	l11847
  4348                           
  4349                           ; BSR set to: 0
  4350  0122EE  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4351  0122F2  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4352  0122F6  0ED2               	movlw	low (STR_107+3)
  4353  0122F8  0100               	movlb	0	; () banked
  4354  0122FA  6F62               	movwf	strcmp@s2& (0+255),b
  4355  0122FC  0EFF               	movlw	high (STR_107+3)
  4356  0122FE  0100               	movlb	0	; () banked
  4357  012300  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4358  012302  ECF9  F0B1         	call	_strcmp	;wreg free
  4359  012306  0100               	movlb	0	; () banked
  4360  012308  5160               	movf	?_strcmp& (0+255),w,b
  4361  01230A  0100               	movlb	0	; () banked
  4362  01230C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4363  01230E  A4D8               	btfss	status,2,c
  4364  012310  0012               	return	
  4365  012312                     l11847:
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;ChargeStation_task.c: 242: ctmu_set_ratio(ctmu_ratio);
  4369  012312  5019               	movf	_ctmu_ratio,w,c
  4370  012314  EC1D  F0A2         	call	_ctmu_set_ratio
  4371                           
  4372                           ;ChargeStation_task.c: 243: ringbuf_put_str(tx, "\tseting complete\n");
  4373  012318  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4374  01231C  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4375  012320  0E4D               	movlw	low STR_26
  4376  012322  0100               	movlb	0	; () banked
  4377  012324  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4378  012326  0EFE               	movlw	high STR_26
  4379  012328  0100               	movlb	0	; () banked
  4380  01232A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4381  01232C  ECD3  F0B0         	call	_ringbuf_put_str	;wreg free
  4382  012330  0012               	return	
  4383  012332                     __end_of_terminal_operation:
  4384                           	opt stack 0
  4385                           tblptru	equ	0xFF8
  4386                           tblptrh	equ	0xFF7
  4387                           tblptrl	equ	0xFF6
  4388                           tablat	equ	0xFF5
  4389                           prodh	equ	0xFF4
  4390                           prodl	equ	0xFF3
  4391                           intcon	equ	0xFF2
  4392                           postinc0	equ	0xFEE
  4393                           wreg	equ	0xFE8
  4394                           postdec1	equ	0xFE5
  4395                           fsr1h	equ	0xFE2
  4396                           fsr1l	equ	0xFE1
  4397                           indf2	equ	0xFDF
  4398                           fsr2h	equ	0xFDA
  4399                           fsr2l	equ	0xFD9
  4400                           status	equ	0xFD8
  4401                           
  4402 ;; *************** function _terminal_time *****************
  4403 ;; Defined at:
  4404 ;;		line 93 in file "../../../My_library/My_terminal.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;  tx              2  114[BANK0 ] PTR struct ringbuf
  4407 ;;		 -> usb_tx(8), 
  4408 ;;  op0             2  116[BANK0 ] PTR unsigned char 
  4409 ;;		 -> terminal_task@op0(25), 
  4410 ;;  op1             2  118[BANK0 ] PTR unsigned char 
  4411 ;;		 -> terminal_task@op1(25), 
  4412 ;;  op2             2  120[BANK0 ] PTR unsigned char 
  4413 ;;		 -> terminal_task@op2(25), 
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;		None
  4416 ;; Return value:  Size  Location     Type
  4417 ;;		None               void
  4418 ;; Registers used:
  4419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4425 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4426 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4428 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4429 ;;Total ram usage:        9 bytes
  4430 ;; Hardware stack levels used:    1
  4431 ;; Hardware stack levels required when called:   17
  4432 ;; This function calls:
  4433 ;;		_atoi
  4434 ;;		_month_length
  4435 ;;		_print_time
  4436 ;;		_strcmp
  4437 ;;		_terminal_at_hand
  4438 ;; This function is called by:
  4439 ;;		_terminal_operation
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443                           	psect	text3
  4444  0109E0                     __ptext3:
  4445                           	opt stack 0
  4446  0109E0                     _terminal_time:
  4447                           	opt stack 11
  4448                           
  4449                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  4450                           
  4451                           ;incstack = 0
  4452  0109E0  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4453  0109E4  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4454  0109E8  0E3D               	movlw	low STR_102
  4455  0109EA  0100               	movlb	0	; () banked
  4456  0109EC  6F62               	movwf	strcmp@s2& (0+255),b
  4457  0109EE  0EFF               	movlw	high STR_102
  4458  0109F0  0100               	movlb	0	; () banked
  4459  0109F2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4460  0109F4  ECF9  F0B1         	call	_strcmp	;wreg free
  4461  0109F8  0100               	movlb	0	; () banked
  4462  0109FA  5160               	movf	?_strcmp& (0+255),w,b
  4463  0109FC  0100               	movlb	0	; () banked
  4464  0109FE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4465  010A00  B4D8               	btfsc	status,2,c
  4466  010A02  D012               	goto	l10965
  4467                           
  4468                           ; BSR set to: 0
  4469  010A04  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4470  010A08  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4471  010A0C  0EEC               	movlw	low (STR_104+1)
  4472  010A0E  0100               	movlb	0	; () banked
  4473  010A10  6F62               	movwf	strcmp@s2& (0+255),b
  4474  010A12  0EFF               	movlw	high (STR_104+1)
  4475  010A14  0100               	movlb	0	; () banked
  4476  010A16  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4477  010A18  ECF9  F0B1         	call	_strcmp	;wreg free
  4478  010A1C  0100               	movlb	0	; () banked
  4479  010A1E  5160               	movf	?_strcmp& (0+255),w,b
  4480  010A20  0100               	movlb	0	; () banked
  4481  010A22  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4482  010A24  A4D8               	btfss	status,2,c
  4483  010A26  D006               	goto	l10967
  4484  010A28                     l10965:
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;My_terminal.c: 95: print_time(tx);
  4488  010A28  C0D2  F0AB         	movff	terminal_time@tx,print_time@tx
  4489  010A2C  C0D3  F0AC         	movff	terminal_time@tx+1,print_time@tx+1
  4490  010A30  ECFC  F0AD         	call	_print_time	;wreg free
  4491  010A34                     l10967:
  4492                           
  4493                           ;My_terminal.c: 96: }
  4494                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  4495  010A34  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4496  010A38  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4497  010A3C  0EEB               	movlw	low STR_104
  4498  010A3E  0100               	movlb	0	; () banked
  4499  010A40  6F62               	movwf	strcmp@s2& (0+255),b
  4500  010A42  0EFF               	movlw	high STR_104
  4501  010A44  0100               	movlb	0	; () banked
  4502  010A46  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4503  010A48  ECF9  F0B1         	call	_strcmp	;wreg free
  4504  010A4C  0100               	movlb	0	; () banked
  4505  010A4E  5160               	movf	?_strcmp& (0+255),w,b
  4506  010A50  0100               	movlb	0	; () banked
  4507  010A52  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4508  010A54  B4D8               	btfsc	status,2,c
  4509  010A56  D012               	goto	l10971
  4510                           
  4511                           ; BSR set to: 0
  4512  010A58  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4513  010A5C  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4514  010A60  0E19               	movlw	low STR_105
  4515  010A62  0100               	movlb	0	; () banked
  4516  010A64  6F62               	movwf	strcmp@s2& (0+255),b
  4517  010A66  0EFF               	movlw	high STR_105
  4518  010A68  0100               	movlb	0	; () banked
  4519  010A6A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4520  010A6C  ECF9  F0B1         	call	_strcmp	;wreg free
  4521  010A70  0100               	movlb	0	; () banked
  4522  010A72  5160               	movf	?_strcmp& (0+255),w,b
  4523  010A74  0100               	movlb	0	; () banked
  4524  010A76  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4525  010A78  A4D8               	btfss	status,2,c
  4526  010A7A  0012               	return	
  4527  010A7C                     l10971:
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  4531  010A7C  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4532  010A80  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4533  010A84  0EE9               	movlw	low (STR_111+2)
  4534  010A86  0100               	movlb	0	; () banked
  4535  010A88  6F62               	movwf	strcmp@s2& (0+255),b
  4536  010A8A  0EFF               	movlw	high (STR_111+2)
  4537  010A8C  0100               	movlb	0	; () banked
  4538  010A8E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4539  010A90  ECF9  F0B1         	call	_strcmp	;wreg free
  4540  010A94  0100               	movlb	0	; () banked
  4541  010A96  5160               	movf	?_strcmp& (0+255),w,b
  4542  010A98  0100               	movlb	0	; () banked
  4543  010A9A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4544  010A9C  B4D8               	btfsc	status,2,c
  4545  010A9E  D012               	goto	l10975
  4546                           
  4547                           ; BSR set to: 0
  4548  010AA0  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4549  010AA4  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4550  010AA8  0ECF               	movlw	low STR_107
  4551  010AAA  0100               	movlb	0	; () banked
  4552  010AAC  6F62               	movwf	strcmp@s2& (0+255),b
  4553  010AAE  0EFF               	movlw	high STR_107
  4554  010AB0  0100               	movlb	0	; () banked
  4555  010AB2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4556  010AB4  ECF9  F0B1         	call	_strcmp	;wreg free
  4557  010AB8  0100               	movlb	0	; () banked
  4558  010ABA  5160               	movf	?_strcmp& (0+255),w,b
  4559  010ABC  0100               	movlb	0	; () banked
  4560  010ABE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4561  010AC0  A4D8               	btfss	status,2,c
  4562  010AC2  D01C               	goto	l10977
  4563  010AC4                     l10975:
  4564                           
  4565                           ; BSR set to: 0
  4566                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  4567  010AC4  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4568  010AC8  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4569  010ACC  0E7C               	movlw	low (_now+10)
  4570  010ACE  0100               	movlb	0	; () banked
  4571  010AD0  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4572  010AD2  0E01               	movlw	high (_now+10)
  4573  010AD4  0100               	movlb	0	; () banked
  4574  010AD6  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4575  010AD8  0E00               	movlw	0
  4576  010ADA  0100               	movlb	0	; () banked
  4577  010ADC  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4578  010ADE  0E63               	movlw	99
  4579  010AE0  0100               	movlb	0	; () banked
  4580  010AE2  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4581  010AE4  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4582  010AE8  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4583  010AEC  ECB4  F0A0         	call	_atoi	;wreg free
  4584  010AF0  0100               	movlb	0	; () banked
  4585  010AF2  517C               	movf	?_atoi& (0+255),w,b
  4586  010AF4  0100               	movlb	0	; () banked
  4587  010AF6  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4588  010AF8  EC99  F0B1         	call	_terminal_at_hand	;wreg free
  4589  010AFC                     l10977:
  4590                           
  4591                           ;My_terminal.c: 100: }
  4592                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  4593  010AFC  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4594  010B00  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4595  010B04  0EF1               	movlw	low STR_108
  4596  010B06  0100               	movlb	0	; () banked
  4597  010B08  6F62               	movwf	strcmp@s2& (0+255),b
  4598  010B0A  0EFF               	movlw	high STR_108
  4599  010B0C  0100               	movlb	0	; () banked
  4600  010B0E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4601  010B10  ECF9  F0B1         	call	_strcmp	;wreg free
  4602  010B14  0100               	movlb	0	; () banked
  4603  010B16  5160               	movf	?_strcmp& (0+255),w,b
  4604  010B18  0100               	movlb	0	; () banked
  4605  010B1A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4606  010B1C  B4D8               	btfsc	status,2,c
  4607  010B1E  D012               	goto	l10981
  4608                           
  4609                           ; BSR set to: 0
  4610  010B20  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4611  010B24  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4612  010B28  0E9F               	movlw	low STR_109
  4613  010B2A  0100               	movlb	0	; () banked
  4614  010B2C  6F62               	movwf	strcmp@s2& (0+255),b
  4615  010B2E  0EFF               	movlw	high STR_109
  4616  010B30  0100               	movlb	0	; () banked
  4617  010B32  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4618  010B34  ECF9  F0B1         	call	_strcmp	;wreg free
  4619  010B38  0100               	movlb	0	; () banked
  4620  010B3A  5160               	movf	?_strcmp& (0+255),w,b
  4621  010B3C  0100               	movlb	0	; () banked
  4622  010B3E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4623  010B40  A4D8               	btfss	status,2,c
  4624  010B42  D01C               	goto	l10983
  4625  010B44                     l10981:
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  4629  010B44  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4630  010B48  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4631  010B4C  0E7B               	movlw	low (_now+9)
  4632  010B4E  0100               	movlb	0	; () banked
  4633  010B50  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4634  010B52  0E01               	movlw	high (_now+9)
  4635  010B54  0100               	movlb	0	; () banked
  4636  010B56  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4637  010B58  0E01               	movlw	1
  4638  010B5A  0100               	movlb	0	; () banked
  4639  010B5C  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4640  010B5E  0E0C               	movlw	12
  4641  010B60  0100               	movlb	0	; () banked
  4642  010B62  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4643  010B64  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4644  010B68  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4645  010B6C  ECB4  F0A0         	call	_atoi	;wreg free
  4646  010B70  0100               	movlb	0	; () banked
  4647  010B72  517C               	movf	?_atoi& (0+255),w,b
  4648  010B74  0100               	movlb	0	; () banked
  4649  010B76  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4650  010B78  EC99  F0B1         	call	_terminal_at_hand	;wreg free
  4651  010B7C                     l10983:
  4652                           
  4653                           ;My_terminal.c: 103: }
  4654                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  4655  010B7C  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4656  010B80  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4657  010B84  0EFF               	movlw	low (STR_27+30)
  4658  010B86  0100               	movlb	0	; () banked
  4659  010B88  6F62               	movwf	strcmp@s2& (0+255),b
  4660  010B8A  0EFD               	movlw	high (STR_27+30)
  4661  010B8C  0100               	movlb	0	; () banked
  4662  010B8E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4663  010B90  ECF9  F0B1         	call	_strcmp	;wreg free
  4664  010B94  0100               	movlb	0	; () banked
  4665  010B96  5160               	movf	?_strcmp& (0+255),w,b
  4666  010B98  0100               	movlb	0	; () banked
  4667  010B9A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4668  010B9C  B4D8               	btfsc	status,2,c
  4669  010B9E  D012               	goto	l10987
  4670                           
  4671                           ; BSR set to: 0
  4672  010BA0  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4673  010BA4  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4674  010BA8  0EE7               	movlw	low STR_111
  4675  010BAA  0100               	movlb	0	; () banked
  4676  010BAC  6F62               	movwf	strcmp@s2& (0+255),b
  4677  010BAE  0EFF               	movlw	high STR_111
  4678  010BB0  0100               	movlb	0	; () banked
  4679  010BB2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4680  010BB4  ECF9  F0B1         	call	_strcmp	;wreg free
  4681  010BB8  0100               	movlb	0	; () banked
  4682  010BBA  5160               	movf	?_strcmp& (0+255),w,b
  4683  010BBC  0100               	movlb	0	; () banked
  4684  010BBE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4685  010BC0  A4D8               	btfss	status,2,c
  4686  010BC2  D023               	goto	l10991
  4687  010BC4                     l10987:
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4691  010BC4  C17B  F066         	movff	_now+9,month_length@month
  4692  010BC8  0101               	movlb	1	; () banked
  4693  010BCA  517C               	movf	(_now+10)& (0+255),w,b
  4694  010BCC  ECE1  F0A3         	call	_month_length
  4695  010BD0  0100               	movlb	0	; () banked
  4696  010BD2  6FDA               	movwf	_terminal_time$6732& (0+255),b
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4700  010BD4  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4701  010BD8  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4702  010BDC  0E7A               	movlw	low (_now+8)
  4703  010BDE  0100               	movlb	0	; () banked
  4704  010BE0  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4705  010BE2  0E01               	movlw	high (_now+8)
  4706  010BE4  0100               	movlb	0	; () banked
  4707  010BE6  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4708  010BE8  0E01               	movlw	1
  4709  010BEA  0100               	movlb	0	; () banked
  4710  010BEC  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4711  010BEE  C0DA  F0D0         	movff	_terminal_time$6732,terminal_at_hand@max
  4712  010BF2  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4713  010BF6  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4714  010BFA  ECB4  F0A0         	call	_atoi	;wreg free
  4715  010BFE  0100               	movlb	0	; () banked
  4716  010C00  517C               	movf	?_atoi& (0+255),w,b
  4717  010C02  0100               	movlb	0	; () banked
  4718  010C04  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4719  010C06  EC99  F0B1         	call	_terminal_at_hand	;wreg free
  4720  010C0A                     l10991:
  4721                           
  4722                           ;My_terminal.c: 106: }
  4723                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  4724  010C0A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4725  010C0E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4726  010C12  0E4B               	movlw	low (STR_28+22)
  4727  010C14  0100               	movlb	0	; () banked
  4728  010C16  6F62               	movwf	strcmp@s2& (0+255),b
  4729  010C18  0EFE               	movlw	high (STR_28+22)
  4730  010C1A  0100               	movlb	0	; () banked
  4731  010C1C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4732  010C1E  ECF9  F0B1         	call	_strcmp	;wreg free
  4733  010C22  0100               	movlb	0	; () banked
  4734  010C24  5160               	movf	?_strcmp& (0+255),w,b
  4735  010C26  0100               	movlb	0	; () banked
  4736  010C28  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4737  010C2A  B4D8               	btfsc	status,2,c
  4738  010C2C  D012               	goto	l10995
  4739                           
  4740                           ; BSR set to: 0
  4741  010C2E  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4742  010C32  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4743  010C36  0ED4               	movlw	low STR_113
  4744  010C38  0100               	movlb	0	; () banked
  4745  010C3A  6F62               	movwf	strcmp@s2& (0+255),b
  4746  010C3C  0EFF               	movlw	high STR_113
  4747  010C3E  0100               	movlb	0	; () banked
  4748  010C40  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4749  010C42  ECF9  F0B1         	call	_strcmp	;wreg free
  4750  010C46  0100               	movlb	0	; () banked
  4751  010C48  5160               	movf	?_strcmp& (0+255),w,b
  4752  010C4A  0100               	movlb	0	; () banked
  4753  010C4C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4754  010C4E  A4D8               	btfss	status,2,c
  4755  010C50  D01C               	goto	l10997
  4756  010C52                     l10995:
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  4760  010C52  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4761  010C56  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4762  010C5A  0E78               	movlw	low (_now+6)
  4763  010C5C  0100               	movlb	0	; () banked
  4764  010C5E  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4765  010C60  0E01               	movlw	high (_now+6)
  4766  010C62  0100               	movlb	0	; () banked
  4767  010C64  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4768  010C66  0E00               	movlw	0
  4769  010C68  0100               	movlb	0	; () banked
  4770  010C6A  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4771  010C6C  0E17               	movlw	23
  4772  010C6E  0100               	movlb	0	; () banked
  4773  010C70  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4774  010C72  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4775  010C76  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4776  010C7A  ECB4  F0A0         	call	_atoi	;wreg free
  4777  010C7E  0100               	movlb	0	; () banked
  4778  010C80  517C               	movf	?_atoi& (0+255),w,b
  4779  010C82  0100               	movlb	0	; () banked
  4780  010C84  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4781  010C86  EC99  F0B1         	call	_terminal_at_hand	;wreg free
  4782  010C8A                     l10997:
  4783                           
  4784                           ;My_terminal.c: 109: }
  4785                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  4786  010C8A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4787  010C8E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4788  010C92  0EF3               	movlw	low STR_114
  4789  010C94  0100               	movlb	0	; () banked
  4790  010C96  6F62               	movwf	strcmp@s2& (0+255),b
  4791  010C98  0EFF               	movlw	high STR_114
  4792  010C9A  0100               	movlb	0	; () banked
  4793  010C9C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4794  010C9E  ECF9  F0B1         	call	_strcmp	;wreg free
  4795  010CA2  0100               	movlb	0	; () banked
  4796  010CA4  5160               	movf	?_strcmp& (0+255),w,b
  4797  010CA6  0100               	movlb	0	; () banked
  4798  010CA8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4799  010CAA  B4D8               	btfsc	status,2,c
  4800  010CAC  D012               	goto	l11001
  4801                           
  4802                           ; BSR set to: 0
  4803  010CAE  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4804  010CB2  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4805  010CB6  0E98               	movlw	low STR_115
  4806  010CB8  0100               	movlb	0	; () banked
  4807  010CBA  6F62               	movwf	strcmp@s2& (0+255),b
  4808  010CBC  0EFF               	movlw	high STR_115
  4809  010CBE  0100               	movlb	0	; () banked
  4810  010CC0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4811  010CC2  ECF9  F0B1         	call	_strcmp	;wreg free
  4812  010CC6  0100               	movlb	0	; () banked
  4813  010CC8  5160               	movf	?_strcmp& (0+255),w,b
  4814  010CCA  0100               	movlb	0	; () banked
  4815  010CCC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4816  010CCE  A4D8               	btfss	status,2,c
  4817  010CD0  D01C               	goto	l11003
  4818  010CD2                     l11001:
  4819                           
  4820                           ; BSR set to: 0
  4821                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  4822  010CD2  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4823  010CD6  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4824  010CDA  0E77               	movlw	low (_now+5)
  4825  010CDC  0100               	movlb	0	; () banked
  4826  010CDE  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4827  010CE0  0E01               	movlw	high (_now+5)
  4828  010CE2  0100               	movlb	0	; () banked
  4829  010CE4  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4830  010CE6  0E00               	movlw	0
  4831  010CE8  0100               	movlb	0	; () banked
  4832  010CEA  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4833  010CEC  0E3B               	movlw	59
  4834  010CEE  0100               	movlb	0	; () banked
  4835  010CF0  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4836  010CF2  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4837  010CF6  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4838  010CFA  ECB4  F0A0         	call	_atoi	;wreg free
  4839  010CFE  0100               	movlb	0	; () banked
  4840  010D00  517C               	movf	?_atoi& (0+255),w,b
  4841  010D02  0100               	movlb	0	; () banked
  4842  010D04  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4843  010D06  EC99  F0B1         	call	_terminal_at_hand	;wreg free
  4844  010D0A                     l11003:
  4845                           
  4846                           ;My_terminal.c: 112: }
  4847                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  4848  010D0A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4849  010D0E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4850  010D12  0EC1               	movlw	low (STR_30+4)
  4851  010D14  0100               	movlb	0	; () banked
  4852  010D16  6F62               	movwf	strcmp@s2& (0+255),b
  4853  010D18  0EFF               	movlw	high (STR_30+4)
  4854  010D1A  0100               	movlb	0	; () banked
  4855  010D1C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4856  010D1E  ECF9  F0B1         	call	_strcmp	;wreg free
  4857  010D22  0100               	movlb	0	; () banked
  4858  010D24  5160               	movf	?_strcmp& (0+255),w,b
  4859  010D26  0100               	movlb	0	; () banked
  4860  010D28  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4861  010D2A  B4D8               	btfsc	status,2,c
  4862  010D2C  D012               	goto	l11007
  4863                           
  4864                           ; BSR set to: 0
  4865  010D2E  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4866  010D32  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4867  010D36  0E91               	movlw	low STR_117
  4868  010D38  0100               	movlb	0	; () banked
  4869  010D3A  6F62               	movwf	strcmp@s2& (0+255),b
  4870  010D3C  0EFF               	movlw	high STR_117
  4871  010D3E  0100               	movlb	0	; () banked
  4872  010D40  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4873  010D42  ECF9  F0B1         	call	_strcmp	;wreg free
  4874  010D46  0100               	movlb	0	; () banked
  4875  010D48  5160               	movf	?_strcmp& (0+255),w,b
  4876  010D4A  0100               	movlb	0	; () banked
  4877  010D4C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4878  010D4E  A4D8               	btfss	status,2,c
  4879  010D50  0012               	return	
  4880  010D52                     l11007:
  4881                           
  4882                           ; BSR set to: 0
  4883                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  4884  010D52  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4885  010D56  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4886  010D5A  0E76               	movlw	low (_now+4)
  4887  010D5C  0100               	movlb	0	; () banked
  4888  010D5E  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4889  010D60  0E01               	movlw	high (_now+4)
  4890  010D62  0100               	movlb	0	; () banked
  4891  010D64  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4892  010D66  0E00               	movlw	0
  4893  010D68  0100               	movlb	0	; () banked
  4894  010D6A  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4895  010D6C  0E3B               	movlw	59
  4896  010D6E  0100               	movlb	0	; () banked
  4897  010D70  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4898  010D72  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4899  010D76  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4900  010D7A  ECB4  F0A0         	call	_atoi	;wreg free
  4901  010D7E  0100               	movlb	0	; () banked
  4902  010D80  517C               	movf	?_atoi& (0+255),w,b
  4903  010D82  0100               	movlb	0	; () banked
  4904  010D84  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4905  010D86  EC99  F0B1         	call	_terminal_at_hand	;wreg free
  4906  010D8A  0012               	return	
  4907  010D8C                     __end_of_terminal_time:
  4908                           	opt stack 0
  4909                           tblptru	equ	0xFF8
  4910                           tblptrh	equ	0xFF7
  4911                           tblptrl	equ	0xFF6
  4912                           tablat	equ	0xFF5
  4913                           prodh	equ	0xFF4
  4914                           prodl	equ	0xFF3
  4915                           intcon	equ	0xFF2
  4916                           postinc0	equ	0xFEE
  4917                           wreg	equ	0xFE8
  4918                           postdec1	equ	0xFE5
  4919                           fsr1h	equ	0xFE2
  4920                           fsr1l	equ	0xFE1
  4921                           indf2	equ	0xFDF
  4922                           fsr2h	equ	0xFDA
  4923                           fsr2l	equ	0xFD9
  4924                           status	equ	0xFD8
  4925                           
  4926 ;; *************** function _terminal_at_hand *****************
  4927 ;; Defined at:
  4928 ;;		line 82 in file "../../../My_library/My_terminal.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;  tx              2  107[BANK0 ] PTR struct ringbuf
  4931 ;;		 -> usb_tx(8), 
  4932 ;;  hand            2  109[BANK0 ] PTR unsigned char 
  4933 ;;		 -> now(14), 
  4934 ;;  min             1  111[BANK0 ] unsigned char 
  4935 ;;  max             1  112[BANK0 ] unsigned char 
  4936 ;;  value           1  113[BANK0 ] unsigned char 
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;		None
  4939 ;; Return value:  Size  Location     Type
  4940 ;;		None               void
  4941 ;; Registers used:
  4942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4948 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4951 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4952 ;;Total ram usage:        7 bytes
  4953 ;; Hardware stack levels used:    1
  4954 ;; Hardware stack levels required when called:   16
  4955 ;; This function calls:
  4956 ;;		_RTCC_from_caltime
  4957 ;;		_print_time
  4958 ;;		_ringbuf_put_str
  4959 ;; This function is called by:
  4960 ;;		_terminal_time
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           	psect	text4
  4965  016332                     __ptext4:
  4966                           	opt stack 0
  4967  016332                     _terminal_at_hand:
  4968                           	opt stack 11
  4969                           
  4970                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  4971                           
  4972                           ;incstack = 0
  4973  016332  0100               	movlb	0	; () banked
  4974  016334  51CF               	movf	terminal_at_hand@min& (0+255),w,b
  4975  016336  0100               	movlb	0	; () banked
  4976  016338  5DD1               	subwf	terminal_at_hand@value& (0+255),w,b
  4977  01633A  A0D8               	btfss	status,0,c
  4978  01633C  D01D               	goto	l10853
  4979                           
  4980                           ; BSR set to: 0
  4981  01633E  0100               	movlb	0	; () banked
  4982  016340  51D1               	movf	terminal_at_hand@value& (0+255),w,b
  4983  016342  0100               	movlb	0	; () banked
  4984  016344  5DD0               	subwf	terminal_at_hand@max& (0+255),w,b
  4985  016346  A0D8               	btfss	status,0,c
  4986  016348  D017               	goto	l10853
  4987                           
  4988                           ; BSR set to: 0
  4989                           ;My_terminal.c: 84: *hand = value;
  4990  01634A  C0CD  FFD9         	movff	terminal_at_hand@hand,fsr2l
  4991  01634E  C0CE  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  4992  016352  C0D1  FFDF         	movff	terminal_at_hand@value,indf2
  4993                           
  4994                           ; BSR set to: 0
  4995                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  4996  016356  0E72               	movlw	low _now
  4997  016358  0100               	movlb	0	; () banked
  4998  01635A  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  4999  01635C  0E01               	movlw	high _now
  5000  01635E  0100               	movlb	0	; () banked
  5001  016360  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  5002  016362  EC73  F0B5         	call	_RTCC_from_caltime	;wreg free
  5003                           
  5004                           ;My_terminal.c: 86: time_change_flag = 1;
  5005  016366  0E01               	movlw	1
  5006  016368  6E25               	movwf	_time_change_flag,c
  5007                           
  5008                           ;My_terminal.c: 87: print_time(tx);
  5009  01636A  C0CB  F0AB         	movff	terminal_at_hand@tx,print_time@tx
  5010  01636E  C0CC  F0AC         	movff	terminal_at_hand@tx+1,print_time@tx+1
  5011  016372  ECFC  F0AD         	call	_print_time	;wreg free
  5012                           
  5013                           ;My_terminal.c: 88: } else {
  5014  016376  0012               	return	
  5015  016378                     l10853:
  5016                           
  5017                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  5018  016378  C0CB  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  5019  01637C  C0CC  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  5020  016380  0E82               	movlw	low STR_101
  5021  016382  0100               	movlb	0	; () banked
  5022  016384  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  5023  016386  0EFF               	movlw	high STR_101
  5024  016388  0100               	movlb	0	; () banked
  5025  01638A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  5026  01638C  ECD3  F0B0         	call	_ringbuf_put_str	;wreg free
  5027  016390  0012               	return	
  5028  016392                     __end_of_terminal_at_hand:
  5029                           	opt stack 0
  5030                           tblptru	equ	0xFF8
  5031                           tblptrh	equ	0xFF7
  5032                           tblptrl	equ	0xFF6
  5033                           tablat	equ	0xFF5
  5034                           prodh	equ	0xFF4
  5035                           prodl	equ	0xFF3
  5036                           intcon	equ	0xFF2
  5037                           postinc0	equ	0xFEE
  5038                           wreg	equ	0xFE8
  5039                           postdec1	equ	0xFE5
  5040                           fsr1h	equ	0xFE2
  5041                           fsr1l	equ	0xFE1
  5042                           indf2	equ	0xFDF
  5043                           fsr2h	equ	0xFDA
  5044                           fsr2l	equ	0xFD9
  5045                           status	equ	0xFD8
  5046                           
  5047 ;; *************** function _print_time *****************
  5048 ;; Defined at:
  5049 ;;		line 68 in file "../../../My_library/My_terminal.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;  tx              2   75[BANK0 ] PTR struct ringbuf
  5052 ;;		 -> usb_tx(8), 
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;  str            30   77[BANK0 ] unsigned char [30]
  5055 ;; Return value:  Size  Location     Type
  5056 ;;		None               void
  5057 ;; Registers used:
  5058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5064 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5065 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5067 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5068 ;;Total ram usage:       32 bytes
  5069 ;; Hardware stack levels used:    1
  5070 ;; Hardware stack levels required when called:   15
  5071 ;; This function calls:
  5072 ;;		_RTCC_from_RTCC
  5073 ;;		_ringbuf_put_str
  5074 ;;		_sprintf
  5075 ;; This function is called by:
  5076 ;;		_terminal_at_hand
  5077 ;;		_terminal_time
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text5
  5082  015BF8                     __ptext5:
  5083                           	opt stack 0
  5084  015BF8                     _print_time:
  5085                           	opt stack 11
  5086                           
  5087                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  5088                           
  5089                           ;incstack = 0
  5090  015BF8  0E72               	movlw	low _now
  5091  015BFA  0100               	movlb	0	; () banked
  5092  015BFC  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  5093  015BFE  0E01               	movlw	high _now
  5094  015C00  0100               	movlb	0	; () banked
  5095  015C02  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  5096  015C04  EC24  F0B6         	call	_RTCC_from_RTCC	;wreg free
  5097                           
  5098                           ;My_terminal.c: 70: char str[30];
  5099                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  5100                           ;My_terminal.c: 72: now.YY,
  5101                           ;My_terminal.c: 73: now.MM,
  5102                           ;My_terminal.c: 74: now.DD,
  5103                           ;My_terminal.c: 75: weekday_3char[now.EE],
  5104                           ;My_terminal.c: 76: now.hh,
  5105                           ;My_terminal.c: 77: now.mm,
  5106                           ;My_terminal.c: 78: now.ss);
  5107  015C08  0EAD               	movlw	low print_time@str
  5108  015C0A  0100               	movlb	0	; () banked
  5109  015C0C  6F83               	movwf	sprintf@sp& (0+255),b
  5110  015C0E  0E00               	movlw	high print_time@str
  5111  015C10  0100               	movlb	0	; () banked
  5112  015C12  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  5113  015C14  0E98               	movlw	low STR_100
  5114  015C16  0100               	movlb	0	; () banked
  5115  015C18  6F85               	movwf	sprintf@f& (0+255),b
  5116  015C1A  0EFD               	movlw	high STR_100
  5117  015C1C  0100               	movlb	0	; () banked
  5118  015C1E  6F86               	movwf	(sprintf@f+1)& (0+255),b
  5119  015C20  C17C  F087         	movff	_now+10,?_sprintf+4
  5120  015C24  0100               	movlb	0	; () banked
  5121  015C26  6B88               	clrf	(?_sprintf+5)& (0+255),b
  5122  015C28  C17B  F089         	movff	_now+9,?_sprintf+6
  5123  015C2C  0100               	movlb	0	; () banked
  5124  015C2E  6B8A               	clrf	(?_sprintf+7)& (0+255),b
  5125  015C30  C17A  F08B         	movff	_now+8,?_sprintf+8
  5126  015C34  0100               	movlb	0	; () banked
  5127  015C36  6B8C               	clrf	(?_sprintf+9)& (0+255),b
  5128  015C38  0101               	movlb	1	; () banked
  5129  015C3A  5179               	movf	(_now+7)& (0+255),w,b
  5130  015C3C  0D04               	mullw	4
  5131  015C3E  0EA4               	movlw	low _weekday_3char
  5132  015C40  24F3               	addwf	prodl,w,c
  5133  015C42  0100               	movlb	0	; () banked
  5134  015C44  6F8D               	movwf	(?_sprintf+10)& (0+255),b
  5135  015C46  0EFB               	movlw	high _weekday_3char
  5136  015C48  20F4               	addwfc	prodh,w,c
  5137  015C4A  0100               	movlb	0	; () banked
  5138  015C4C  6F8E               	movwf	(?_sprintf+11)& (0+255),b
  5139  015C4E  C178  F08F         	movff	_now+6,?_sprintf+12
  5140  015C52  0100               	movlb	0	; () banked
  5141  015C54  6B90               	clrf	(?_sprintf+13)& (0+255),b
  5142  015C56  C177  F091         	movff	_now+5,?_sprintf+14
  5143  015C5A  0100               	movlb	0	; () banked
  5144  015C5C  6B92               	clrf	(?_sprintf+15)& (0+255),b
  5145  015C5E  C176  F093         	movff	_now+4,?_sprintf+16
  5146  015C62  0100               	movlb	0	; () banked
  5147  015C64  6B94               	clrf	(?_sprintf+17)& (0+255),b
  5148  015C66  EC00  F080         	call	_sprintf	;wreg free
  5149                           
  5150                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  5151  015C6A  C0AB  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  5152  015C6E  C0AC  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  5153  015C72  0EAD               	movlw	low print_time@str
  5154  015C74  0100               	movlb	0	; () banked
  5155  015C76  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  5156  015C78  0E00               	movlw	high print_time@str
  5157  015C7A  0100               	movlb	0	; () banked
  5158  015C7C  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  5159  015C7E  ECD3  F0B0         	call	_ringbuf_put_str	;wreg free
  5160  015C82  0012               	return		;funcret
  5161  015C84                     __end_of_print_time:
  5162                           	opt stack 0
  5163                           tblptru	equ	0xFF8
  5164                           tblptrh	equ	0xFF7
  5165                           tblptrl	equ	0xFF6
  5166                           tablat	equ	0xFF5
  5167                           prodh	equ	0xFF4
  5168                           prodl	equ	0xFF3
  5169                           intcon	equ	0xFF2
  5170                           postinc0	equ	0xFEE
  5171                           wreg	equ	0xFE8
  5172                           postdec1	equ	0xFE5
  5173                           fsr1h	equ	0xFE2
  5174                           fsr1l	equ	0xFE1
  5175                           indf2	equ	0xFDF
  5176                           fsr2h	equ	0xFDA
  5177                           fsr2l	equ	0xFD9
  5178                           status	equ	0xFD8
  5179                           
  5180 ;; *************** function _RTCC_from_caltime *****************
  5181 ;; Defined at:
  5182 ;;		line 198 in file "../../../My_library/My_RTCC.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  tm              2   47[BANK0 ] PTR struct .
  5185 ;;		 -> now(14), 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;		None
  5188 ;; Return value:  Size  Location     Type
  5189 ;;		None               void
  5190 ;; Registers used:
  5191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5197 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5200 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5201 ;;Total ram usage:        2 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:   14
  5204 ;; This function calls:
  5205 ;;		_caltime_to_RTCC
  5206 ;;		_caltime_to_epoch
  5207 ;;		_epoch_to_caltime
  5208 ;; This function is called by:
  5209 ;;		_terminal_at_hand
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           	psect	text6
  5214  016AE6                     __ptext6:
  5215                           	opt stack 0
  5216  016AE6                     _RTCC_from_caltime:
  5217                           	opt stack 12
  5218                           
  5219                           ;My_RTCC.c: 199: caltime_to_epoch(tm);
  5220                           
  5221                           ;incstack = 0
  5222  016AE6  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  5223  016AEA  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  5224  016AEE  ECDB  F08D         	call	_caltime_to_epoch	;wreg free
  5225                           
  5226                           ;My_RTCC.c: 200: epoch_to_caltime(tm);
  5227  016AF2  C08F  F081         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  5228  016AF6  C090  F082         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  5229  016AFA  EC21  F096         	call	_epoch_to_caltime	;wreg free
  5230                           
  5231                           ;My_RTCC.c: 201: caltime_to_RTCC(tm);
  5232  016AFE  C08F  F069         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  5233  016B02  C090  F06A         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  5234  016B06  EC29  F0A5         	call	_caltime_to_RTCC	;wreg free
  5235  016B0A  0012               	return		;funcret
  5236  016B0C                     __end_of_RTCC_from_caltime:
  5237                           	opt stack 0
  5238                           tblptru	equ	0xFF8
  5239                           tblptrh	equ	0xFF7
  5240                           tblptrl	equ	0xFF6
  5241                           tablat	equ	0xFF5
  5242                           prodh	equ	0xFF4
  5243                           prodl	equ	0xFF3
  5244                           intcon	equ	0xFF2
  5245                           postinc0	equ	0xFEE
  5246                           wreg	equ	0xFE8
  5247                           postdec1	equ	0xFE5
  5248                           fsr1h	equ	0xFE2
  5249                           fsr1l	equ	0xFE1
  5250                           indf2	equ	0xFDF
  5251                           fsr2h	equ	0xFDA
  5252                           fsr2l	equ	0xFD9
  5253                           status	equ	0xFD8
  5254                           
  5255 ;; *************** function _strcmp *****************
  5256 ;; Defined at:
  5257 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  5260 ;;		 -> terminal_task@op1(25), terminal_task@op0(25), 
  5261 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  5262 ;;		 -> STR_117(7), STR_116(2), STR_115(7), STR_114(2), 
  5263 ;;		 -> STR_113(5), STR_112(2), STR_111(4), STR_110(2), 
  5264 ;;		 -> STR_109(6), STR_108(2), STR_107(5), STR_106(2), 
  5265 ;;		 -> STR_105(12), STR_104(3), STR_103(2), STR_102(11), 
  5266 ;;		 -> STR_25(2), STR_24(6), STR_21(5), STR_20(11), 
  5267 ;;		 -> STR_19(6), STR_18(1), STR_17(12), STR_16(3), 
  5268 ;;		 -> STR_15(9), STR_14(9), STR_12(2), STR_11(5), 
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;  r               1    5[BANK0 ] char 
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  2    0[BANK0 ] int 
  5273 ;; Registers used:
  5274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5280 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5281 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5282 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5283 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5284 ;;Total ram usage:        6 bytes
  5285 ;; Hardware stack levels used:    1
  5286 ;; Hardware stack levels required when called:   11
  5287 ;; This function calls:
  5288 ;;		Nothing
  5289 ;; This function is called by:
  5290 ;;		_terminal_operation
  5291 ;;		_terminal_time
  5292 ;; This function uses a non-reentrant model
  5293 ;;
  5294                           
  5295                           	psect	text7
  5296  0163F2                     __ptext7:
  5297                           	opt stack 0
  5298  0163F2                     _strcmp:
  5299                           	opt stack 16
  5300                           
  5301                           ;incstack = 0
  5302  0163F2  D006               	goto	l10619
  5303  0163F4                     l10617:
  5304  0163F4  0100               	movlb	0	; () banked
  5305  0163F6  4B60               	infsnz	strcmp@s1& (0+255),f,b
  5306  0163F8  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  5307  0163FA  0100               	movlb	0	; () banked
  5308  0163FC  4B62               	infsnz	strcmp@s2& (0+255),f,b
  5309  0163FE  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  5310  016400                     l10619:
  5311  016400  C060  FFD9         	movff	strcmp@s1,fsr2l
  5312  016404  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5313  016408  50DF               	movf	indf2,w,c
  5314  01640A  0100               	movlb	0	; () banked
  5315  01640C  6F64               	movwf	??_strcmp& (0+255),b
  5316  01640E  C062  FFF6         	movff	strcmp@s2,tblptrl
  5317  016412  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  5318  016416                     	if	0	;tblptru may be non-zero
  5319  016416                     	endif
  5320  016416                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5321  016416  0E00               	movlw	low (__mediumconst shr (0+16))
  5322  016418  6EF8               	movwf	tblptru,c
  5323  01641A                     	endif
  5324  01641A  0008               	tblrd		*
  5325  01641C  50F5               	movf	tablat,w,c
  5326  01641E  0800               	sublw	0
  5327  016420  0100               	movlb	0	; () banked
  5328  016422  2564               	addwf	??_strcmp& (0+255),w,b
  5329  016424  0100               	movlb	0	; () banked
  5330  016426  6F65               	movwf	strcmp@r& (0+255),b
  5331  016428  0100               	movlb	0	; () banked
  5332  01642A  5165               	movf	strcmp@r& (0+255),w,b
  5333  01642C  A4D8               	btfss	status,2,c
  5334  01642E  D007               	goto	l10623
  5335                           
  5336                           ; BSR set to: 0
  5337  016430  C060  FFD9         	movff	strcmp@s1,fsr2l
  5338  016434  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5339  016438  50DF               	movf	indf2,w,c
  5340  01643A  A4D8               	btfss	status,2,c
  5341  01643C  D7DB               	goto	l10617
  5342  01643E                     l10623:
  5343                           
  5344                           ; BSR set to: 0
  5345  01643E  0100               	movlb	0	; () banked
  5346  016440  5165               	movf	strcmp@r& (0+255),w,b
  5347  016442  0100               	movlb	0	; () banked
  5348  016444  6F60               	movwf	?_strcmp& (0+255),b
  5349  016446  6B61               	clrf	(?_strcmp+1)& (0+255),b
  5350  016448  BF60               	btfsc	?_strcmp& (0+255),7,b
  5351  01644A  0761               	decf	(?_strcmp+1)& (0+255),f,b
  5352  01644C  0012               	return	
  5353  01644E                     __end_of_strcmp:
  5354                           	opt stack 0
  5355                           tblptru	equ	0xFF8
  5356                           tblptrh	equ	0xFF7
  5357                           tblptrl	equ	0xFF6
  5358                           tablat	equ	0xFF5
  5359                           prodh	equ	0xFF4
  5360                           prodl	equ	0xFF3
  5361                           intcon	equ	0xFF2
  5362                           postinc0	equ	0xFEE
  5363                           wreg	equ	0xFE8
  5364                           postdec1	equ	0xFE5
  5365                           fsr1h	equ	0xFE2
  5366                           fsr1l	equ	0xFE1
  5367                           indf2	equ	0xFDF
  5368                           fsr2h	equ	0xFDA
  5369                           fsr2l	equ	0xFD9
  5370                           status	equ	0xFD8
  5371                           
  5372 ;; *************** function _atoi *****************
  5373 ;; Defined at:
  5374 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;  s               2   28[BANK0 ] PTR const unsigned char 
  5377 ;;		 -> terminal_task@op2(25), 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  a               2   33[BANK0 ] int 
  5380 ;;  sign            1   32[BANK0 ] unsigned char 
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  2   28[BANK0 ] int 
  5383 ;; Registers used:
  5384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5390 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5391 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5392 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5393 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5394 ;;Total ram usage:        7 bytes
  5395 ;; Hardware stack levels used:    1
  5396 ;; Hardware stack levels required when called:   12
  5397 ;; This function calls:
  5398 ;;		___wmul
  5399 ;;		_isdigit
  5400 ;; This function is called by:
  5401 ;;		_terminal_operation
  5402 ;;		_terminal_time
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           	psect	text8
  5407  014168                     __ptext8:
  5408                           	opt stack 0
  5409  014168                     _atoi:
  5410                           	opt stack 15
  5411                           
  5412                           ; BSR set to: 0
  5413                           ;incstack = 0
  5414  014168  D003               	goto	l10631
  5415  01416A                     l10629:
  5416  01416A  0100               	movlb	0	; () banked
  5417  01416C  4B7C               	infsnz	atoi@s& (0+255),f,b
  5418  01416E  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5419  014170                     l10631:
  5420  014170  C07C  FFD9         	movff	atoi@s,fsr2l
  5421  014174  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5422  014178  0E20               	movlw	32
  5423  01417A  18DE               	xorwf	postinc2,w,c
  5424  01417C  B4D8               	btfsc	status,2,c
  5425  01417E  D7F5               	goto	l10629
  5426  014180  C07C  FFD9         	movff	atoi@s,fsr2l
  5427  014184  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5428  014188  0E09               	movlw	9
  5429  01418A  18DE               	xorwf	postinc2,w,c
  5430  01418C  B4D8               	btfsc	status,2,c
  5431  01418E  D7ED               	goto	l10629
  5432  014190  0E00               	movlw	0
  5433  014192  0100               	movlb	0	; () banked
  5434  014194  6F82               	movwf	(atoi@a+1)& (0+255),b
  5435  014196  0E00               	movlw	0
  5436  014198  6F81               	movwf	atoi@a& (0+255),b
  5437  01419A  0E00               	movlw	0
  5438  01419C  0100               	movlb	0	; () banked
  5439  01419E  6F80               	movwf	atoi@sign& (0+255),b
  5440                           
  5441                           ; BSR set to: 0
  5442  0141A0  C07C  FFD9         	movff	atoi@s,fsr2l
  5443  0141A4  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5444  0141A8  0E2D               	movlw	45
  5445  0141AA  18DE               	xorwf	postinc2,w,c
  5446  0141AC  A4D8               	btfss	status,2,c
  5447  0141AE  D003               	goto	l10641
  5448                           
  5449                           ; BSR set to: 0
  5450  0141B0  0100               	movlb	0	; () banked
  5451  0141B2  2B80               	incf	atoi@sign& (0+255),f,b
  5452  0141B4  D02E               	goto	l10647
  5453  0141B6                     l10641:
  5454                           
  5455                           ; BSR set to: 0
  5456  0141B6  C07C  FFD9         	movff	atoi@s,fsr2l
  5457  0141BA  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5458  0141BE  0E2B               	movlw	43
  5459  0141C0  18DE               	xorwf	postinc2,w,c
  5460  0141C2  A4D8               	btfss	status,2,c
  5461  0141C4  D029               	goto	l10649
  5462  0141C6  D025               	goto	l10647
  5463  0141C8                     l10645:
  5464  0141C8  C081  F076         	movff	atoi@a,___wmul@multiplier
  5465  0141CC  C082  F077         	movff	atoi@a+1,___wmul@multiplier+1
  5466  0141D0  0E00               	movlw	0
  5467  0141D2  0100               	movlb	0	; () banked
  5468  0141D4  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5469  0141D6  0E0A               	movlw	10
  5470  0141D8  6F78               	movwf	___wmul@multiplicand& (0+255),b
  5471  0141DA  EC05  F0B4         	call	___wmul	;wreg free
  5472  0141DE  C07C  FFD9         	movff	atoi@s,fsr2l
  5473  0141E2  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5474  0141E6  50DF               	movf	indf2,w,c
  5475  0141E8  0100               	movlb	0	; () banked
  5476  0141EA  6F7E               	movwf	??_atoi& (0+255),b
  5477  0141EC  6B7F               	clrf	(??_atoi+1)& (0+255),b
  5478  0141EE  0100               	movlb	0	; () banked
  5479  0141F0  5176               	movf	?___wmul& (0+255),w,b
  5480  0141F2  0100               	movlb	0	; () banked
  5481  0141F4  277E               	addwf	??_atoi& (0+255),f,b
  5482  0141F6  0100               	movlb	0	; () banked
  5483  0141F8  5177               	movf	(?___wmul+1)& (0+255),w,b
  5484  0141FA  0100               	movlb	0	; () banked
  5485  0141FC  237F               	addwfc	(??_atoi+1)& (0+255),f,b
  5486  0141FE  0ED0               	movlw	208
  5487  014200  0100               	movlb	0	; () banked
  5488  014202  257E               	addwf	??_atoi& (0+255),w,b
  5489  014204  0100               	movlb	0	; () banked
  5490  014206  6F81               	movwf	atoi@a& (0+255),b
  5491  014208  0EFF               	movlw	255
  5492  01420A  0100               	movlb	0	; () banked
  5493  01420C  217F               	addwfc	(??_atoi+1)& (0+255),w,b
  5494  01420E  0100               	movlb	0	; () banked
  5495  014210  6F82               	movwf	(atoi@a+1)& (0+255),b
  5496  014212                     l10647:
  5497                           
  5498                           ; BSR set to: 0
  5499  014212  0100               	movlb	0	; () banked
  5500  014214  4B7C               	infsnz	atoi@s& (0+255),f,b
  5501  014216  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5502  014218                     l10649:
  5503                           
  5504                           ; BSR set to: 0
  5505  014218  C07C  FFD9         	movff	atoi@s,fsr2l
  5506  01421C  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5507  014220  50DF               	movf	indf2,w,c
  5508  014222  EC36  F0B5         	call	_isdigit
  5509  014226  B0D8               	btfsc	status,0,c
  5510  014228  D7CF               	goto	l10645
  5511  01422A  0100               	movlb	0	; () banked
  5512  01422C  5180               	movf	atoi@sign& (0+255),w,b
  5513  01422E  0100               	movlb	0	; () banked
  5514  014230  B4D8               	btfsc	status,2,c
  5515  014232  D00E               	goto	l2049
  5516                           
  5517                           ; BSR set to: 0
  5518  014234  C081  F07E         	movff	atoi@a,??_atoi
  5519  014238  C082  F07F         	movff	atoi@a+1,??_atoi+1
  5520  01423C  0100               	movlb	0	; () banked
  5521  01423E  1F7E               	comf	??_atoi& (0+255),f,b
  5522  014240  1F7F               	comf	(??_atoi+1)& (0+255),f,b
  5523  014242  4B7E               	infsnz	??_atoi& (0+255),f,b
  5524  014244  2B7F               	incf	(??_atoi+1)& (0+255),f,b
  5525  014246  C07E  F07C         	movff	??_atoi,?_atoi
  5526  01424A  C07F  F07D         	movff	??_atoi+1,?_atoi+1
  5527  01424E  0012               	return	
  5528  014250                     l2049:
  5529                           
  5530                           ; BSR set to: 0
  5531  014250  C081  F07C         	movff	atoi@a,?_atoi
  5532  014254  C082  F07D         	movff	atoi@a+1,?_atoi+1
  5533                           
  5534                           ; BSR set to: 0
  5535  014258  0012               	return		;funcret
  5536  01425A                     __end_of_atoi:
  5537                           	opt stack 0
  5538                           tblptru	equ	0xFF8
  5539                           tblptrh	equ	0xFF7
  5540                           tblptrl	equ	0xFF6
  5541                           tablat	equ	0xFF5
  5542                           prodh	equ	0xFF4
  5543                           prodl	equ	0xFF3
  5544                           intcon	equ	0xFF2
  5545                           postinc0	equ	0xFEE
  5546                           wreg	equ	0xFE8
  5547                           postdec1	equ	0xFE5
  5548                           fsr1h	equ	0xFE2
  5549                           fsr1l	equ	0xFE1
  5550                           indf2	equ	0xFDF
  5551                           postinc2	equ	0xFDE
  5552                           fsr2h	equ	0xFDA
  5553                           fsr2l	equ	0xFD9
  5554                           status	equ	0xFD8
  5555                           
  5556 ;; *************** function _bootload *****************
  5557 ;; Defined at:
  5558 ;;		line 191 in file "ChargeStation_task.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;		None
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;		None
  5563 ;; Return value:  Size  Location     Type
  5564 ;;		None               void
  5565 ;; Registers used:
  5566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5567 ;; Tracked objects:
  5568 ;;		On entry : 0/0
  5569 ;;		On exit  : 0/0
  5570 ;;		Unchanged: 0/0
  5571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5576 ;;Total ram usage:        0 bytes
  5577 ;; Hardware stack levels used:    1
  5578 ;; Hardware stack levels required when called:   15
  5579 ;; This function calls:
  5580 ;;		_I2C_LCD_Clear
  5581 ;;		_I2C_LCD_Puts
  5582 ;;		_I2C_LCD_SetCursor
  5583 ;; This function is called by:
  5584 ;;		_terminal_operation
  5585 ;;		_main
  5586 ;; This function uses a non-reentrant model
  5587 ;;
  5588                           
  5589                           	psect	text9
  5590  016634                     __ptext9:
  5591                           	opt stack 0
  5592  016634                     _bootload:
  5593                           	opt stack 13
  5594                           
  5595                           ;ChargeStation_task.c: 192: I2C_LCD_Clear();
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;incstack = 0
  5599  016634  EC17  F0B6         	call	_I2C_LCD_Clear	;wreg free
  5600                           
  5601                           ;ChargeStation_task.c: 193: I2C_LCD_SetCursor(0, 0);
  5602  016638  0E00               	movlw	0
  5603  01663A  0100               	movlb	0	; () banked
  5604  01663C  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5605  01663E  0E00               	movlw	0
  5606  016640  ECC8  F0B4         	call	_I2C_LCD_SetCursor
  5607                           
  5608                           ;ChargeStation_task.c: 194: I2C_LCD_Puts("PIC18F27J53");
  5609  016644  0E25               	movlw	low STR_9
  5610  016646  0100               	movlb	0	; () banked
  5611  016648  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5612  01664A  0EFF               	movlw	high STR_9
  5613  01664C  0100               	movlb	0	; () banked
  5614  01664E  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5615  016650  EC27  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5616                           
  5617                           ;ChargeStation_task.c: 195: I2C_LCD_SetCursor(0, 1);
  5618  016654  0E01               	movlw	1
  5619  016656  0100               	movlb	0	; () banked
  5620  016658  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5621  01665A  0E00               	movlw	0
  5622  01665C  ECC8  F0B4         	call	_I2C_LCD_SetCursor
  5623                           
  5624                           ;ChargeStation_task.c: 196: I2C_LCD_Puts("Bootloader mode");
  5625  016660  0EC3               	movlw	low STR_10
  5626  016662  0100               	movlb	0	; () banked
  5627  016664  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5628  016666  0EFE               	movlw	high STR_10
  5629  016668  0100               	movlb	0	; () banked
  5630  01666A  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5631  01666C  EC27  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5632  016670  EF0E F000          	goto	28	;# 
  5633  016674  0012               	return		;funcret
  5634  016676                     __end_of_bootload:
  5635                           	opt stack 0
  5636                           tblptru	equ	0xFF8
  5637                           tblptrh	equ	0xFF7
  5638                           tblptrl	equ	0xFF6
  5639                           tablat	equ	0xFF5
  5640                           prodh	equ	0xFF4
  5641                           prodl	equ	0xFF3
  5642                           intcon	equ	0xFF2
  5643                           postinc0	equ	0xFEE
  5644                           wreg	equ	0xFE8
  5645                           postdec1	equ	0xFE5
  5646                           fsr1h	equ	0xFE2
  5647                           fsr1l	equ	0xFE1
  5648                           indf2	equ	0xFDF
  5649                           postinc2	equ	0xFDE
  5650                           fsr2h	equ	0xFDA
  5651                           fsr2l	equ	0xFD9
  5652                           status	equ	0xFD8
  5653                           
  5654 ;; *************** function _ringbuf_put_num *****************
  5655 ;; Defined at:
  5656 ;;		line 28 in file "../../../My_library/My_ringbuf.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;  rb              2   35[BANK0 ] PTR struct ringbuf
  5659 ;;		 -> usb_tx(8), 
  5660 ;;  value           2   37[BANK0 ] const unsigned int 
  5661 ;;  digits          1   39[BANK0 ] unsigned char 
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;  i               1   40[BANK0 ] unsigned char 
  5664 ;;  temp            2   41[BANK0 ] unsigned int 
  5665 ;; Return value:  Size  Location     Type
  5666 ;;		None               void
  5667 ;; Registers used:
  5668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5674 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5675 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5677 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5678 ;;Total ram usage:        8 bytes
  5679 ;; Hardware stack levels used:    1
  5680 ;; Hardware stack levels required when called:   13
  5681 ;; This function calls:
  5682 ;;		___lwdiv
  5683 ;;		___lwmod
  5684 ;;		_ringbuf_put
  5685 ;; This function is called by:
  5686 ;;		_terminal_task
  5687 ;; This function uses a non-reentrant model
  5688 ;;
  5689                           
  5690                           	psect	text10
  5691  015D94                     __ptext10:
  5692                           	opt stack 0
  5693  015D94                     _ringbuf_put_num:
  5694                           	opt stack 16
  5695                           
  5696                           ;My_ringbuf.c: 29: while (digits--) {
  5697                           
  5698                           ;incstack = 0
  5699  015D94  D039               	goto	l12023
  5700  015D96                     l822:
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;My_ringbuf.c: 30: uint16_t temp = value;
  5704  015D96  C085  F089         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  5705  015D9A  C086  F08A         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  5709  015D9E  0E00               	movlw	0
  5710  015DA0  0100               	movlb	0	; () banked
  5711  015DA2  6F88               	movwf	ringbuf_put_num@i& (0+255),b
  5712  015DA4  D011               	goto	l12017
  5713  015DA6                     l12013:
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;My_ringbuf.c: 32: temp /= 10;
  5717  015DA6  C089  F07C         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  5718  015DAA  C08A  F07D         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  5719  015DAE  0E00               	movlw	0
  5720  015DB0  0100               	movlb	0	; () banked
  5721  015DB2  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5722  015DB4  0E0A               	movlw	10
  5723  015DB6  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  5724  015DB8  EC47  F0AF         	call	___lwdiv	;wreg free
  5725  015DBC  C07C  F089         	movff	?___lwdiv,ringbuf_put_num@temp
  5726  015DC0  C07D  F08A         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  5727  015DC4  0100               	movlb	0	; () banked
  5728  015DC6  2B88               	incf	ringbuf_put_num@i& (0+255),f,b
  5729  015DC8                     l12017:
  5730                           
  5731                           ; BSR set to: 0
  5732  015DC8  0100               	movlb	0	; () banked
  5733  015DCA  5187               	movf	ringbuf_put_num@digits& (0+255),w,b
  5734  015DCC  0100               	movlb	0	; () banked
  5735  015DCE  5D88               	subwf	ringbuf_put_num@i& (0+255),w,b
  5736  015DD0  A0D8               	btfss	status,0,c
  5737  015DD2  D7E9               	goto	l12013
  5738                           
  5739                           ; BSR set to: 0
  5740                           ;My_ringbuf.c: 33: }
  5741                           ;My_ringbuf.c: 34: temp %= 10;
  5742                           
  5743                           ; BSR set to: 0
  5744  015DD4  C089  F060         	movff	ringbuf_put_num@temp,___lwmod@dividend
  5745  015DD8  C08A  F061         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  5746  015DDC  0E00               	movlw	0
  5747  015DDE  0100               	movlb	0	; () banked
  5748  015DE0  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  5749  015DE2  0E0A               	movlw	10
  5750  015DE4  6F62               	movwf	___lwmod@divisor& (0+255),b
  5751  015DE6  EC68  F0B1         	call	___lwmod	;wreg free
  5752  015DEA  C060  F089         	movff	?___lwmod,ringbuf_put_num@temp
  5753  015DEE  C061  F08A         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  5754                           
  5755                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  5756  015DF2  C083  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  5757  015DF6  C084  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  5758  015DFA  0100               	movlb	0	; () banked
  5759  015DFC  5189               	movf	ringbuf_put_num@temp& (0+255),w,b
  5760  015DFE  0F30               	addlw	48
  5761  015E00  0100               	movlb	0	; () banked
  5762  015E02  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  5763  015E04  EC69  F0A6         	call	_ringbuf_put	;wreg free
  5764  015E08                     l12023:
  5765  015E08  0100               	movlb	0	; () banked
  5766  015E0A  0787               	decf	ringbuf_put_num@digits& (0+255),f,b
  5767  015E0C  0100               	movlb	0	; () banked
  5768  015E0E  2987               	incf	ringbuf_put_num@digits& (0+255),w,b
  5769  015E10  B4D8               	btfsc	status,2,c
  5770  015E12  0012               	return	
  5771  015E14  D7C0               	goto	l822
  5772  015E16                     __end_of_ringbuf_put_num:
  5773                           	opt stack 0
  5774                           tblptru	equ	0xFF8
  5775                           tblptrh	equ	0xFF7
  5776                           tblptrl	equ	0xFF6
  5777                           tablat	equ	0xFF5
  5778                           prodh	equ	0xFF4
  5779                           prodl	equ	0xFF3
  5780                           intcon	equ	0xFF2
  5781                           postinc0	equ	0xFEE
  5782                           wreg	equ	0xFE8
  5783                           postdec1	equ	0xFE5
  5784                           fsr1h	equ	0xFE2
  5785                           fsr1l	equ	0xFE1
  5786                           indf2	equ	0xFDF
  5787                           postinc2	equ	0xFDE
  5788                           fsr2h	equ	0xFDA
  5789                           fsr2l	equ	0xFD9
  5790                           status	equ	0xFD8
  5791                           
  5792 ;; *************** function _ringbuf_delete *****************
  5793 ;; Defined at:
  5794 ;;		line 66 in file "../../../My_library/My_ringbuf.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  5797 ;;		 -> terminal_task@command(8), 
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;		None
  5800 ;; Return value:  Size  Location     Type
  5801 ;;		None               void
  5802 ;; Registers used:
  5803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5804 ;; Tracked objects:
  5805 ;;		On entry : 0/0
  5806 ;;		On exit  : 0/0
  5807 ;;		Unchanged: 0/0
  5808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5809 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5812 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5813 ;;Total ram usage:        2 bytes
  5814 ;; Hardware stack levels used:    1
  5815 ;; Hardware stack levels required when called:   11
  5816 ;; This function calls:
  5817 ;;		Nothing
  5818 ;; This function is called by:
  5819 ;;		_terminal_task
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822                           
  5823                           	psect	text11
  5824  016B0C                     __ptext11:
  5825                           	opt stack 0
  5826  016B0C                     _ringbuf_delete:
  5827                           	opt stack 18
  5828                           
  5829                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  5830                           
  5831                           ; BSR set to: 0
  5832                           ;incstack = 0
  5833  016B0C  0100               	movlb	0	; () banked
  5834  016B0E  EE20 F006          	lfsr	2,6
  5835  016B12  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5836  016B14  26D9               	addwf	fsr2l,f,c
  5837  016B16  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5838  016B18  22DA               	addwfc	fsr2h,f,c
  5839  016B1A  0100               	movlb	0	; () banked
  5840  016B1C  EE10 F004          	lfsr	1,4
  5841  016B20  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5842  016B22  26E1               	addwf	fsr1l,f,c
  5843  016B24  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5844  016B26  22E2               	addwfc	fsr1h,f,c
  5845  016B28  CFDE FFE6          	movff	postinc2,postinc1
  5846  016B2C  CFDD FFE5          	movff	postdec2,postdec1
  5847                           
  5848                           ; BSR set to: 0
  5849  016B30  0012               	return		;funcret
  5850  016B32                     __end_of_ringbuf_delete:
  5851                           	opt stack 0
  5852                           tblptru	equ	0xFF8
  5853                           tblptrh	equ	0xFF7
  5854                           tblptrl	equ	0xFF6
  5855                           tablat	equ	0xFF5
  5856                           prodh	equ	0xFF4
  5857                           prodl	equ	0xFF3
  5858                           intcon	equ	0xFF2
  5859                           postinc0	equ	0xFEE
  5860                           wreg	equ	0xFE8
  5861                           postinc1	equ	0xFE6
  5862                           postdec1	equ	0xFE5
  5863                           fsr1h	equ	0xFE2
  5864                           fsr1l	equ	0xFE1
  5865                           indf2	equ	0xFDF
  5866                           postinc2	equ	0xFDE
  5867                           postdec2	equ	0xFDD
  5868                           fsr2h	equ	0xFDA
  5869                           fsr2l	equ	0xFD9
  5870                           status	equ	0xFD8
  5871                           
  5872 ;; *************** function _ringbuf_backspace *****************
  5873 ;; Defined at:
  5874 ;;		line 59 in file "../../../My_library/My_ringbuf.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  5877 ;;		 -> terminal_task@command(8), 
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;		None
  5880 ;; Return value:  Size  Location     Type
  5881 ;;		None               void
  5882 ;; Registers used:
  5883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5889 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5891 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5892 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5893 ;;Total ram usage:        6 bytes
  5894 ;; Hardware stack levels used:    1
  5895 ;; Hardware stack levels required when called:   12
  5896 ;; This function calls:
  5897 ;;		_ringbuf_num
  5898 ;; This function is called by:
  5899 ;;		_terminal_task
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           	psect	text12
  5904  0159C0                     __ptext12:
  5905                           	opt stack 0
  5906  0159C0                     _ringbuf_backspace:
  5907                           	opt stack 17
  5908                           
  5909                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;incstack = 0
  5913  0159C0  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  5914  0159C4  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  5915  0159C8  ECA6  F0A1         	call	_ringbuf_num	;wreg free
  5916  0159CC  0100               	movlb	0	; () banked
  5917  0159CE  5160               	movf	?_ringbuf_num& (0+255),w,b
  5918  0159D0  0100               	movlb	0	; () banked
  5919  0159D2  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  5920  0159D4  B4D8               	btfsc	status,2,c
  5921  0159D6  0012               	return	
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  5925  0159D8  0100               	movlb	0	; () banked
  5926  0159DA  EE20 F004          	lfsr	2,4
  5927  0159DE  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5928  0159E0  26D9               	addwf	fsr2l,f,c
  5929  0159E2  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5930  0159E4  22DA               	addwfc	fsr2h,f,c
  5931  0159E6  50DE               	movf	postinc2,w,c
  5932  0159E8  10DE               	iorwf	postinc2,w,c
  5933  0159EA  B4D8               	btfsc	status,2,c
  5934  0159EC  D00B               	goto	l12031
  5935                           
  5936                           ; BSR set to: 0
  5937  0159EE  0100               	movlb	0	; () banked
  5938  0159F0  EE20 F004          	lfsr	2,4
  5939  0159F4  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5940  0159F6  26D9               	addwf	fsr2l,f,c
  5941  0159F8  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5942  0159FA  22DA               	addwfc	fsr2h,f,c
  5943  0159FC  06DE               	decf	postinc2,f,c
  5944  0159FE  0E00               	movlw	0
  5945  015A00  5ADD               	subwfb	postdec2,f,c
  5946  015A02  0012               	return	
  5947  015A04                     l12031:
  5948                           
  5949                           ; BSR set to: 0
  5950                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  5951  015A04  0EFF               	movlw	255
  5952  015A06  0100               	movlb	0	; () banked
  5953  015A08  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  5954  015A0A  0EFF               	movlw	255
  5955  015A0C  0100               	movlb	0	; () banked
  5956  015A0E  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  5957  015A10  0100               	movlb	0	; () banked
  5958  015A12  EE20 F002          	lfsr	2,2
  5959  015A16  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5960  015A18  26D9               	addwf	fsr2l,f,c
  5961  015A1A  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5962  015A1C  22DA               	addwfc	fsr2h,f,c
  5963  015A1E  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  5964  015A22  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  5965  015A26  0100               	movlb	0	; () banked
  5966  015A28  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  5967  015A2A  0100               	movlb	0	; () banked
  5968  015A2C  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  5969  015A2E  0100               	movlb	0	; () banked
  5970  015A30  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  5971  015A32  0100               	movlb	0	; () banked
  5972  015A34  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  5973  015A36  0100               	movlb	0	; () banked
  5974  015A38  EE20 F004          	lfsr	2,4
  5975  015A3C  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5976  015A3E  26D9               	addwf	fsr2l,f,c
  5977  015A40  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5978  015A42  22DA               	addwfc	fsr2h,f,c
  5979  015A44  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  5980  015A48  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  5981                           
  5982                           ; BSR set to: 0
  5983  015A4C  0012               	return	
  5984  015A4E                     __end_of_ringbuf_backspace:
  5985                           	opt stack 0
  5986                           tblptru	equ	0xFF8
  5987                           tblptrh	equ	0xFF7
  5988                           tblptrl	equ	0xFF6
  5989                           tablat	equ	0xFF5
  5990                           prodh	equ	0xFF4
  5991                           prodl	equ	0xFF3
  5992                           intcon	equ	0xFF2
  5993                           postinc0	equ	0xFEE
  5994                           wreg	equ	0xFE8
  5995                           postinc1	equ	0xFE6
  5996                           postdec1	equ	0xFE5
  5997                           fsr1h	equ	0xFE2
  5998                           fsr1l	equ	0xFE1
  5999                           indf2	equ	0xFDF
  6000                           postinc2	equ	0xFDE
  6001                           postdec2	equ	0xFDD
  6002                           fsr2h	equ	0xFDA
  6003                           fsr2l	equ	0xFD9
  6004                           status	equ	0xFD8
  6005                           
  6006 ;; *************** function _software_init *****************
  6007 ;; Defined at:
  6008 ;;		line 109 in file "main.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;		None
  6011 ;; Auto vars:     Size  Location     Type
  6012 ;;  i               1   49[BANK0 ] unsigned char 
  6013 ;; Return value:  Size  Location     Type
  6014 ;;		None               void
  6015 ;; Registers used:
  6016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6017 ;; Tracked objects:
  6018 ;;		On entry : 0/0
  6019 ;;		On exit  : 0/0
  6020 ;;		Unchanged: 0/0
  6021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6023 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6025 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6026 ;;Total ram usage:        1 bytes
  6027 ;; Hardware stack levels used:    1
  6028 ;; Hardware stack levels required when called:   15
  6029 ;; This function calls:
  6030 ;;		_LED_output
  6031 ;;		_OUT
  6032 ;;		_RTCC_from_RTCC
  6033 ;;		_RTCC_from_epoch
  6034 ;;		_ctmu_set_ratio
  6035 ;;		_display
  6036 ;; This function is called by:
  6037 ;;		_main
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           	psect	text13
  6042  013F7C                     __ptext13:
  6043                           	opt stack 0
  6044  013F7C                     _software_init:
  6045                           	opt stack 15
  6046                           
  6047                           ;main.c: 111: ctmu_ratio = 90;
  6048                           
  6049                           ; BSR set to: 0
  6050                           ;incstack = 0
  6051  013F7C  0E5A               	movlw	90
  6052  013F7E  6E19               	movwf	_ctmu_ratio,c
  6053                           
  6054                           ;main.c: 112: ctmu_set_ratio(ctmu_ratio);
  6055  013F80  5019               	movf	_ctmu_ratio,w,c
  6056  013F82  EC1D  F0A2         	call	_ctmu_set_ratio
  6057                           
  6058                           ;main.c: 115: RTCC_from_RTCC(&now);
  6059  013F86  0E72               	movlw	low _now
  6060  013F88  0100               	movlb	0	; () banked
  6061  013F8A  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  6062  013F8C  0E01               	movlw	high _now
  6063  013F8E  0100               	movlb	0	; () banked
  6064  013F90  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  6065  013F92  EC24  F0B6         	call	_RTCC_from_RTCC	;wreg free
  6066                           
  6067                           ;main.c: 116: if (now.DD == 0) {
  6068  013F96  0101               	movlb	1	; () banked
  6069  013F98  517A               	movf	(_now+8)& (0+255),w,b
  6070  013F9A  A4D8               	btfss	status,2,c
  6071  013F9C  D011               	goto	l12191
  6072                           
  6073                           ; BSR set to: 1
  6074                           ;main.c: 117: now.epoch = 0;
  6075  013F9E  0E00               	movlw	0
  6076  013FA0  0101               	movlb	1	; () banked
  6077  013FA2  6F72               	movwf	_now& (0+255),b
  6078  013FA4  0E00               	movlw	0
  6079  013FA6  6F73               	movwf	(_now+1)& (0+255),b
  6080  013FA8  0E00               	movlw	0
  6081  013FAA  6F74               	movwf	(_now+2)& (0+255),b
  6082  013FAC  0E00               	movlw	0
  6083  013FAE  6F75               	movwf	(_now+3)& (0+255),b
  6084                           
  6085                           ; BSR set to: 1
  6086                           ;main.c: 118: RTCC_from_epoch(&now);
  6087  013FB0  0E72               	movlw	low _now
  6088  013FB2  0100               	movlb	0	; () banked
  6089  013FB4  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  6090  013FB6  0E01               	movlw	high _now
  6091  013FB8  0100               	movlb	0	; () banked
  6092  013FBA  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  6093  013FBC  EC0A  F0B6         	call	_RTCC_from_epoch	;wreg free
  6094  013FC0                     l12191:
  6095                           
  6096                           ;main.c: 119: }
  6097                           ;main.c: 121: display(LOGO, "Charge Station", "Made by KERI");
  6098  013FC0  0EE2               	movlw	low STR_7
  6099  013FC2  0100               	movlb	0	; () banked
  6100  013FC4  6F60               	movwf	display@str0& (0+255),b
  6101  013FC6  0EFE               	movlw	high STR_7
  6102  013FC8  0100               	movlb	0	; () banked
  6103  013FCA  6F61               	movwf	(display@str0+1)& (0+255),b
  6104  013FCC  0EFF               	movlw	low STR_35
  6105  013FCE  0100               	movlb	0	; () banked
  6106  013FD0  6F62               	movwf	display@str1& (0+255),b
  6107  013FD2  0EFE               	movlw	high STR_35
  6108  013FD4  0100               	movlb	0	; () banked
  6109  013FD6  6F63               	movwf	(display@str1+1)& (0+255),b
  6110  013FD8  0E00               	movlw	0
  6111  013FDA  ECEA  F09B         	call	_display
  6112                           
  6113                           ;main.c: 124: for (uint8_t i = 0; i < 3; i++) {
  6114  013FDE  0E00               	movlw	0
  6115  013FE0  0100               	movlb	0	; () banked
  6116  013FE2  6F91               	movwf	software_init@i& (0+255),b
  6117  013FE4                     l12195:
  6118                           
  6119                           ; BSR set to: 0
  6120  013FE4  0E02               	movlw	2
  6121  013FE6  0100               	movlb	0	; () banked
  6122  013FE8  6591               	cpfsgt	software_init@i& (0+255),b
  6123  013FEA  D001               	goto	l12199
  6124  013FEC  D040               	goto	l12211
  6125  013FEE                     l12199:
  6126                           
  6127                           ; BSR set to: 0
  6128                           ;main.c: 125: OUT(i, 0);
  6129  013FEE  0E00               	movlw	0
  6130  013FF0  0100               	movlb	0	; () banked
  6131  013FF2  6F60               	movwf	OUT@value& (0+255),b
  6132  013FF4  0100               	movlb	0	; () banked
  6133  013FF6  5191               	movf	software_init@i& (0+255),w,b
  6134  013FF8  ECF7  F0AF         	call	_OUT
  6135                           
  6136                           ;main.c: 126: LED_output(i, 0);
  6137  013FFC  0E00               	movlw	0
  6138  013FFE  0100               	movlb	0	; () banked
  6139  014000  6F60               	movwf	LED_output@value& (0+255),b
  6140  014002  0100               	movlb	0	; () banked
  6141  014004  5191               	movf	software_init@i& (0+255),w,b
  6142  014006  ECBE  F0AF         	call	_LED_output
  6143                           
  6144                           ;main.c: 127: port[i].cut_cnt = 0;
  6145  01400A  0100               	movlb	0	; () banked
  6146  01400C  5191               	movf	software_init@i& (0+255),w,b
  6147  01400E  0D17               	mullw	23
  6148  014010  0E14               	movlw	20
  6149  014012  26F3               	addwf	prodl,f,c
  6150  014014  0E00               	movlw	0
  6151  014016  22F4               	addwfc	prodh,f,c
  6152  014018  0E2D               	movlw	low _port
  6153  01401A  24F3               	addwf	prodl,w,c
  6154  01401C  6ED9               	movwf	fsr2l,c
  6155  01401E  0E01               	movlw	high _port
  6156  014020  20F4               	addwfc	prodh,w,c
  6157  014022  6EDA               	movwf	fsr2h,c
  6158  014024  0E00               	movlw	0
  6159  014026  6EDE               	movwf	postinc2,c
  6160  014028  0E00               	movlw	0
  6161  01402A  6EDD               	movwf	postdec2,c
  6162                           
  6163                           ; BSR set to: 0
  6164                           ;main.c: 128: port[i].flag.auto_cut_ON = 1;
  6165  01402C  0100               	movlb	0	; () banked
  6166  01402E  5191               	movf	software_init@i& (0+255),w,b
  6167  014030  0D17               	mullw	23
  6168  014032  0E16               	movlw	22
  6169  014034  26F3               	addwf	prodl,f,c
  6170  014036  0E00               	movlw	0
  6171  014038  22F4               	addwfc	prodh,f,c
  6172  01403A  0E2D               	movlw	low _port
  6173  01403C  24F3               	addwf	prodl,w,c
  6174  01403E  6ED9               	movwf	fsr2l,c
  6175  014040  0E01               	movlw	high _port
  6176  014042  20F4               	addwfc	prodh,w,c
  6177  014044  6EDA               	movwf	fsr2h,c
  6178  014046  0101               	movlb	1	; () banked
  6179  014048  80DF               	bsf	indf2,0,c
  6180                           
  6181                           ; BSR set to: 1
  6182                           ;main.c: 129: port[i].flag.led_indicator_ON = 1;
  6183  01404A  0100               	movlb	0	; () banked
  6184  01404C  5191               	movf	software_init@i& (0+255),w,b
  6185  01404E  0D17               	mullw	23
  6186  014050  0E16               	movlw	22
  6187  014052  26F3               	addwf	prodl,f,c
  6188  014054  0E00               	movlw	0
  6189  014056  22F4               	addwfc	prodh,f,c
  6190  014058  0E2D               	movlw	low _port
  6191  01405A  24F3               	addwf	prodl,w,c
  6192  01405C  6ED9               	movwf	fsr2l,c
  6193  01405E  0E01               	movlw	high _port
  6194  014060  20F4               	addwfc	prodh,w,c
  6195  014062  6EDA               	movwf	fsr2h,c
  6196  014064  0101               	movlb	1	; () banked
  6197  014066  82DF               	bsf	indf2,1,c
  6198                           
  6199                           ; BSR set to: 1
  6200  014068  0100               	movlb	0	; () banked
  6201  01406A  2B91               	incf	software_init@i& (0+255),f,b
  6202  01406C  D7BB               	goto	l12195
  6203  01406E                     l12211:
  6204                           
  6205                           ; BSR set to: 0
  6206                           ;main.c: 130: }
  6207                           ;main.c: 132: settings_flag = 0;
  6208  01406E  0E00               	movlw	0
  6209  014070  6E21               	movwf	_settings_flag,c
  6210                           
  6211                           ; BSR set to: 0
  6212  014072  0012               	return		;funcret
  6213  014074                     __end_of_software_init:
  6214                           	opt stack 0
  6215                           tblptru	equ	0xFF8
  6216                           tblptrh	equ	0xFF7
  6217                           tblptrl	equ	0xFF6
  6218                           tablat	equ	0xFF5
  6219                           prodh	equ	0xFF4
  6220                           prodl	equ	0xFF3
  6221                           intcon	equ	0xFF2
  6222                           postinc0	equ	0xFEE
  6223                           wreg	equ	0xFE8
  6224                           postinc1	equ	0xFE6
  6225                           postdec1	equ	0xFE5
  6226                           fsr1h	equ	0xFE2
  6227                           fsr1l	equ	0xFE1
  6228                           indf2	equ	0xFDF
  6229                           postinc2	equ	0xFDE
  6230                           postdec2	equ	0xFDD
  6231                           fsr2h	equ	0xFDA
  6232                           fsr2l	equ	0xFD9
  6233                           status	equ	0xFD8
  6234                           
  6235 ;; *************** function _ctmu_set_ratio *****************
  6236 ;; Defined at:
  6237 ;;		line 14 in file "ctmu.c"
  6238 ;; Parameters:    Size  Location     Type
  6239 ;;  percentage      1    wreg     unsigned char 
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;  percentage      1   35[BANK0 ] unsigned char 
  6242 ;; Return value:  Size  Location     Type
  6243 ;;		None               void
  6244 ;; Registers used:
  6245 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6246 ;; Tracked objects:
  6247 ;;		On entry : 0/0
  6248 ;;		On exit  : 0/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6252 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6254 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6255 ;;Total ram usage:        1 bytes
  6256 ;; Hardware stack levels used:    1
  6257 ;; Hardware stack levels required when called:   13
  6258 ;; This function calls:
  6259 ;;		_CTMU_read
  6260 ;;		___lwdiv
  6261 ;;		___wmul
  6262 ;; This function is called by:
  6263 ;;		_terminal_operation
  6264 ;;		_software_init
  6265 ;; This function uses a non-reentrant model
  6266 ;;
  6267                           
  6268                           	psect	text14
  6269  01443A                     __ptext14:
  6270                           	opt stack 0
  6271  01443A                     _ctmu_set_ratio:
  6272                           	opt stack 15
  6273                           
  6274                           ; BSR set to: 0
  6275                           ;incstack = 0
  6276                           ;ctmu_set_ratio@percentage stored from wreg
  6277  01443A  0100               	movlb	0	; () banked
  6278  01443C  6F83               	movwf	ctmu_set_ratio@percentage& (0+255),b
  6279                           
  6280                           ;ctmu.c: 15: port[0].ctmu_value = (uint16_t) percentage * CTMU_read(0) / 100;
  6281  01443E  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6282  014442  0100               	movlb	0	; () banked
  6283  014444  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6284  014446  0E00               	movlw	0
  6285  014448  ECC9  F0A8         	call	_CTMU_read
  6286  01444C  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6287  014450  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6288  014454  EC05  F0B4         	call	___wmul	;wreg free
  6289  014458  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6290  01445C  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6291  014460  0E00               	movlw	0
  6292  014462  0100               	movlb	0	; () banked
  6293  014464  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6294  014466  0E64               	movlw	100
  6295  014468  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6296  01446A  EC47  F0AF         	call	___lwdiv	;wreg free
  6297  01446E  C07C  F131         	movff	?___lwdiv,_port+4
  6298  014472  C07D  F132         	movff	?___lwdiv+1,_port+5
  6299                           
  6300                           ;ctmu.c: 16: port[1].ctmu_value = (uint16_t) percentage * CTMU_read(1) / 100;
  6301  014476  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6302  01447A  0100               	movlb	0	; () banked
  6303  01447C  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6304  01447E  0E01               	movlw	1
  6305  014480  ECC9  F0A8         	call	_CTMU_read
  6306  014484  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6307  014488  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6308  01448C  EC05  F0B4         	call	___wmul	;wreg free
  6309  014490  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6310  014494  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6311  014498  0E00               	movlw	0
  6312  01449A  0100               	movlb	0	; () banked
  6313  01449C  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6314  01449E  0E64               	movlw	100
  6315  0144A0  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6316  0144A2  EC47  F0AF         	call	___lwdiv	;wreg free
  6317  0144A6  C07C  F148         	movff	?___lwdiv,_port+27
  6318  0144AA  C07D  F149         	movff	?___lwdiv+1,_port+28
  6319                           
  6320                           ;ctmu.c: 17: port[2].ctmu_value = (uint16_t) percentage * CTMU_read(2) / 100;
  6321  0144AE  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6322  0144B2  0100               	movlb	0	; () banked
  6323  0144B4  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6324  0144B6  0E02               	movlw	2
  6325  0144B8  ECC9  F0A8         	call	_CTMU_read
  6326  0144BC  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6327  0144C0  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6328  0144C4  EC05  F0B4         	call	___wmul	;wreg free
  6329  0144C8  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6330  0144CC  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6331  0144D0  0E00               	movlw	0
  6332  0144D2  0100               	movlb	0	; () banked
  6333  0144D4  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6334  0144D6  0E64               	movlw	100
  6335  0144D8  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6336  0144DA  EC47  F0AF         	call	___lwdiv	;wreg free
  6337  0144DE  C07C  F15F         	movff	?___lwdiv,_port+50
  6338  0144E2  C07D  F160         	movff	?___lwdiv+1,_port+51
  6339                           
  6340                           ;ctmu.c: 18: ctmu_value_m = (uint16_t) percentage * CTMU_read(3) / 100;
  6341  0144E6  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6342  0144EA  0100               	movlb	0	; () banked
  6343  0144EC  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6344  0144EE  0E03               	movlw	3
  6345  0144F0  ECC9  F0A8         	call	_CTMU_read
  6346  0144F4  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6347  0144F8  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6348  0144FC  EC05  F0B4         	call	___wmul	;wreg free
  6349  014500  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6350  014504  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6351  014508  0E00               	movlw	0
  6352  01450A  0100               	movlb	0	; () banked
  6353  01450C  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6354  01450E  0E64               	movlw	100
  6355  014510  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6356  014512  EC47  F0AF         	call	___lwdiv	;wreg free
  6357  014516  C07C  F11A         	movff	?___lwdiv,_ctmu_value_m
  6358  01451A  C07D  F11B         	movff	?___lwdiv+1,_ctmu_value_m+1
  6359  01451E  0012               	return		;funcret
  6360  014520                     __end_of_ctmu_set_ratio:
  6361                           	opt stack 0
  6362                           tblptru	equ	0xFF8
  6363                           tblptrh	equ	0xFF7
  6364                           tblptrl	equ	0xFF6
  6365                           tablat	equ	0xFF5
  6366                           prodh	equ	0xFF4
  6367                           prodl	equ	0xFF3
  6368                           intcon	equ	0xFF2
  6369                           postinc0	equ	0xFEE
  6370                           wreg	equ	0xFE8
  6371                           postinc1	equ	0xFE6
  6372                           postdec1	equ	0xFE5
  6373                           fsr1h	equ	0xFE2
  6374                           fsr1l	equ	0xFE1
  6375                           indf2	equ	0xFDF
  6376                           postinc2	equ	0xFDE
  6377                           postdec2	equ	0xFDD
  6378                           fsr2h	equ	0xFDA
  6379                           fsr2l	equ	0xFD9
  6380                           status	equ	0xFD8
  6381                           
  6382 ;; *************** function _sleep_task *****************
  6383 ;; Defined at:
  6384 ;;		line 164 in file "ChargeStation_task.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;		None
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;  i               1   10[BANK0 ] unsigned char 
  6389 ;; Return value:  Size  Location     Type
  6390 ;;		None               void
  6391 ;; Registers used:
  6392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6399 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6401 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6402 ;;Total ram usage:        1 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; Hardware stack levels required when called:   15
  6405 ;; This function calls:
  6406 ;;		_ADC
  6407 ;;		_I2C_LCD_Clear
  6408 ;;		_I2C_LCD_Puts
  6409 ;;		_I2C_LCD_SetCursor
  6410 ;;		_LED_output
  6411 ;;		_OUT
  6412 ;;		_display
  6413 ;; This function is called by:
  6414 ;;		_main
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           	psect	text15
  6419  014F40                     __ptext15:
  6420                           	opt stack 0
  6421  014F40                     _sleep_task:
  6422                           	opt stack 15
  6423                           
  6424                           ;ChargeStation_task.c: 165: static uint8_t sleep_flag = 0;
  6425                           ;ChargeStation_task.c: 166: if (ADC(12) < 2048) {
  6426                           
  6427                           ;incstack = 0
  6428  014F40  0E0C               	movlw	12
  6429  014F42  EC83  F0B4         	call	_ADC
  6430  014F46  0E08               	movlw	8
  6431  014F48  0100               	movlb	0	; () banked
  6432  014F4A  5D61               	subwf	(?_ADC+1)& (0+255),w,b
  6433  014F4C  B0D8               	btfsc	status,0,c
  6434  014F4E  D059               	goto	l12143
  6435                           
  6436                           ; BSR set to: 0
  6437                           ;ChargeStation_task.c: 167: sleep_flag = 1;
  6438  014F50  0E01               	movlw	1
  6439  014F52  6E26               	movwf	sleep_task@sleep_flag,c
  6440                           
  6441                           ; BSR set to: 0
  6442                           ;ChargeStation_task.c: 168: INTCONbits.GIE = 0;
  6443  014F54  9EF2               	bcf	intcon,7,c	;volatile
  6444                           
  6445                           ;ChargeStation_task.c: 169: for (uint8_t i = 0; i < 3; i++) {
  6446  014F56  0E00               	movlw	0
  6447  014F58  0100               	movlb	0	; () banked
  6448  014F5A  6F6A               	movwf	sleep_task@i& (0+255),b
  6449  014F5C                     l12117:
  6450                           
  6451                           ; BSR set to: 0
  6452  014F5C  0E02               	movlw	2
  6453  014F5E  0100               	movlb	0	; () banked
  6454  014F60  656A               	cpfsgt	sleep_task@i& (0+255),b
  6455  014F62  D001               	goto	l12121
  6456  014F64  D011               	goto	l12127
  6457  014F66                     l12121:
  6458                           
  6459                           ; BSR set to: 0
  6460                           ;ChargeStation_task.c: 170: OUT(i, 0);
  6461  014F66  0E00               	movlw	0
  6462  014F68  0100               	movlb	0	; () banked
  6463  014F6A  6F60               	movwf	OUT@value& (0+255),b
  6464  014F6C  0100               	movlb	0	; () banked
  6465  014F6E  516A               	movf	sleep_task@i& (0+255),w,b
  6466  014F70  ECF7  F0AF         	call	_OUT
  6467                           
  6468                           ;ChargeStation_task.c: 171: LED_output(i, 0);
  6469  014F74  0E00               	movlw	0
  6470  014F76  0100               	movlb	0	; () banked
  6471  014F78  6F60               	movwf	LED_output@value& (0+255),b
  6472  014F7A  0100               	movlb	0	; () banked
  6473  014F7C  516A               	movf	sleep_task@i& (0+255),w,b
  6474  014F7E  ECBE  F0AF         	call	_LED_output
  6475  014F82  0100               	movlb	0	; () banked
  6476  014F84  2B6A               	incf	sleep_task@i& (0+255),f,b
  6477  014F86  D7EA               	goto	l12117
  6478  014F88                     l12127:
  6479                           
  6480                           ; BSR set to: 0
  6481                           ;ChargeStation_task.c: 172: }
  6482                           ;ChargeStation_task.c: 173: I2C_LCD_Clear();
  6483  014F88  EC17  F0B6         	call	_I2C_LCD_Clear	;wreg free
  6484                           
  6485                           ;ChargeStation_task.c: 174: I2C_LCD_SetCursor(0, 0);
  6486  014F8C  0E00               	movlw	0
  6487  014F8E  0100               	movlb	0	; () banked
  6488  014F90  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  6489  014F92  0E00               	movlw	0
  6490  014F94  ECC8  F0B4         	call	_I2C_LCD_SetCursor
  6491                           
  6492                           ;ChargeStation_task.c: 175: I2C_LCD_Puts("Charge Station 6");
  6493  014F98  0E92               	movlw	low STR_5
  6494  014F9A  0100               	movlb	0	; () banked
  6495  014F9C  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  6496  014F9E  0EFE               	movlw	high STR_5
  6497  014FA0  0100               	movlb	0	; () banked
  6498  014FA2  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  6499  014FA4  EC27  F0AD         	call	_I2C_LCD_Puts	;wreg free
  6500                           
  6501                           ;ChargeStation_task.c: 176: I2C_LCD_SetCursor(0, 1);
  6502  014FA8  0E01               	movlw	1
  6503  014FAA  0100               	movlb	0	; () banked
  6504  014FAC  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  6505  014FAE  0E00               	movlw	0
  6506  014FB0  ECC8  F0B4         	call	_I2C_LCD_SetCursor
  6507                           
  6508                           ;ChargeStation_task.c: 177: I2C_LCD_Puts("SLEEPING NOW");
  6509  014FB4  0E0C               	movlw	low STR_6
  6510  014FB6  0100               	movlb	0	; () banked
  6511  014FB8  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  6512  014FBA  0EFF               	movlw	high STR_6
  6513  014FBC  0100               	movlb	0	; () banked
  6514  014FBE  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  6515  014FC0  EC27  F0AD         	call	_I2C_LCD_Puts	;wreg free
  6516                           
  6517                           ;ChargeStation_task.c: 178: }
  6518                           ;ChargeStation_task.c: 179: while (sleep_flag) {
  6519  014FC4  D01E               	goto	l12143
  6520  014FC6                     l12137:
  6521                           
  6522                           ;ChargeStation_task.c: 180: if (ADC(12) > 2048) {
  6523  014FC6  0E0C               	movlw	12
  6524  014FC8  EC83  F0B4         	call	_ADC
  6525  014FCC  0100               	movlb	0	; () banked
  6526  014FCE  0560               	decf	?_ADC& (0+255),w,b
  6527  014FD0  0E08               	movlw	8
  6528  014FD2  0100               	movlb	0	; () banked
  6529  014FD4  5961               	subwfb	(?_ADC+1)& (0+255),w,b
  6530  014FD6  A0D8               	btfss	status,0,c
  6531  014FD8  D012               	goto	l144
  6532                           
  6533                           ; BSR set to: 0
  6534                           ;ChargeStation_task.c: 181: sleep_flag = 0;
  6535  014FDA  0E00               	movlw	0
  6536  014FDC  6E26               	movwf	sleep_task@sleep_flag,c
  6537                           
  6538                           ; BSR set to: 0
  6539                           ;ChargeStation_task.c: 182: display(LOGO, "Charge Station", "Welcome back!");
  6540  014FDE  0EE2               	movlw	low STR_7
  6541  014FE0  0100               	movlb	0	; () banked
  6542  014FE2  6F60               	movwf	display@str0& (0+255),b
  6543  014FE4  0EFE               	movlw	high STR_7
  6544  014FE6  0100               	movlb	0	; () banked
  6545  014FE8  6F61               	movwf	(display@str0+1)& (0+255),b
  6546  014FEA  0EF1               	movlw	low STR_8
  6547  014FEC  0100               	movlb	0	; () banked
  6548  014FEE  6F62               	movwf	display@str1& (0+255),b
  6549  014FF0  0EFE               	movlw	high STR_8
  6550  014FF2  0100               	movlb	0	; () banked
  6551  014FF4  6F63               	movwf	(display@str1+1)& (0+255),b
  6552  014FF6  0E00               	movlw	0
  6553  014FF8  ECEA  F09B         	call	_display
  6554                           
  6555                           ;ChargeStation_task.c: 183: break;
  6556  014FFC  0012               	return	
  6557  014FFE                     l144:
  6558                           
  6559                           ; BSR set to: 0
  6560  014FFE  0003               	sleep		;# 
  6561                           
  6562                           ;ChargeStation_task.c: 186: __nop();
  6563  015000  F000               	nop	
  6564  015002                     l12143:
  6565  015002  5026               	movf	sleep_task@sleep_flag,w,c
  6566  015004  B4D8               	btfsc	status,2,c
  6567  015006  0012               	return	
  6568  015008  D7DE               	goto	l12137
  6569  01500A                     __end_of_sleep_task:
  6570                           	opt stack 0
  6571                           tblptru	equ	0xFF8
  6572                           tblptrh	equ	0xFF7
  6573                           tblptrl	equ	0xFF6
  6574                           tablat	equ	0xFF5
  6575                           prodh	equ	0xFF4
  6576                           prodl	equ	0xFF3
  6577                           intcon	equ	0xFF2
  6578                           postinc0	equ	0xFEE
  6579                           wreg	equ	0xFE8
  6580                           postinc1	equ	0xFE6
  6581                           postdec1	equ	0xFE5
  6582                           fsr1h	equ	0xFE2
  6583                           fsr1l	equ	0xFE1
  6584                           indf2	equ	0xFDF
  6585                           postinc2	equ	0xFDE
  6586                           postdec2	equ	0xFDD
  6587                           fsr2h	equ	0xFDA
  6588                           fsr2l	equ	0xFD9
  6589                           status	equ	0xFD8
  6590                           
  6591 ;; *************** function _normal_task *****************
  6592 ;; Defined at:
  6593 ;;		line 121 in file "ChargeStation_task.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;		None
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;		None
  6598 ;; Return value:  Size  Location     Type
  6599 ;;		None               void
  6600 ;; Registers used:
  6601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6602 ;; Tracked objects:
  6603 ;;		On entry : 0/0
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6611 ;;Total ram usage:        0 bytes
  6612 ;; Hardware stack levels used:    1
  6613 ;; Hardware stack levels required when called:   18
  6614 ;; This function calls:
  6615 ;;		_Auto_cut
  6616 ;;		_data_out
  6617 ;;		_display
  6618 ;;		_display_LCD
  6619 ;;		_integrate_current
  6620 ;;		_integrate_time
  6621 ;;		_port_button_task
  6622 ;;		_settings_task
  6623 ;; This function is called by:
  6624 ;;		_main
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628                           	psect	text16
  6629  0155FE                     __ptext16:
  6630                           	opt stack 0
  6631  0155FE                     _normal_task:
  6632                           	opt stack 12
  6633                           
  6634                           ;ChargeStation_task.c: 123: if (settings_flag) {
  6635                           
  6636                           ;incstack = 0
  6637  0155FE  5021               	movf	_settings_flag,w,c
  6638  015600  B4D8               	btfsc	status,2,c
  6639  015602  D003               	goto	l124
  6640                           
  6641                           ;ChargeStation_task.c: 124: settings_task();
  6642  015604  EC0A  F095         	call	_settings_task	;wreg free
  6643                           
  6644                           ;ChargeStation_task.c: 125: } else {
  6645  015608  D01F               	goto	l12079
  6646  01560A                     l124:
  6647                           
  6648                           ;ChargeStation_task.c: 126: if (ctmu_m.flag.press) {
  6649  01560A  A029               	btfss	_ctmu_m+2,0,c
  6650  01560C  D013               	goto	l12073
  6651                           
  6652                           ;ChargeStation_task.c: 127: ctmu_m.flags = 0;
  6653  01560E  0E00               	movlw	0
  6654  015610  6E2A               	movwf	_ctmu_m+3,c
  6655  015612  0E00               	movlw	0
  6656  015614  6E29               	movwf	_ctmu_m+2,c
  6657                           
  6658                           ;ChargeStation_task.c: 128: display(PRINT_TIME, "", "");
  6659  015616  0EE6               	movlw	low (STR_96+3)
  6660  015618  0100               	movlb	0	; () banked
  6661  01561A  6F60               	movwf	display@str0& (0+255),b
  6662  01561C  0EFF               	movlw	high (STR_96+3)
  6663  01561E  0100               	movlb	0	; () banked
  6664  015620  6F61               	movwf	(display@str0+1)& (0+255),b
  6665  015622  0EE6               	movlw	low (STR_96+3)
  6666  015624  0100               	movlb	0	; () banked
  6667  015626  6F62               	movwf	display@str1& (0+255),b
  6668  015628  0EFF               	movlw	high (STR_96+3)
  6669  01562A  0100               	movlb	0	; () banked
  6670  01562C  6F63               	movwf	(display@str1+1)& (0+255),b
  6671  01562E  0E01               	movlw	1
  6672  015630  ECEA  F09B         	call	_display
  6673  015634                     l12073:
  6674                           
  6675                           ;ChargeStation_task.c: 129: }
  6676                           ;ChargeStation_task.c: 130: if (ctmu_m.flag.long_holding_2) {
  6677  015634  A42A               	btfss	_ctmu_m+3,2,c
  6678  015636  D006               	goto	l12077
  6679                           
  6680                           ;ChargeStation_task.c: 131: ctmu_m.flags = 0;
  6681  015638  0E00               	movlw	0
  6682  01563A  6E2A               	movwf	_ctmu_m+3,c
  6683  01563C  0E00               	movlw	0
  6684  01563E  6E29               	movwf	_ctmu_m+2,c
  6685                           
  6686                           ;ChargeStation_task.c: 132: settings_flag = 1;
  6687  015640  0E01               	movlw	1
  6688  015642  6E21               	movwf	_settings_flag,c
  6689  015644                     l12077:
  6690                           
  6691                           ;ChargeStation_task.c: 133: }
  6692                           ;ChargeStation_task.c: 134: port_button_task();
  6693  015644  EC9C  F098         	call	_port_button_task	;wreg free
  6694  015648                     l12079:
  6695                           
  6696                           ;ChargeStation_task.c: 135: }
  6697                           ;ChargeStation_task.c: 137: if (cut_time_flag) {
  6698  015648  501B               	movf	_cut_time_flag,w,c
  6699  01564A  B4D8               	btfsc	status,2,c
  6700  01564C  D004               	goto	l12085
  6701                           
  6702                           ;ChargeStation_task.c: 138: cut_time_flag = 0;
  6703  01564E  0E00               	movlw	0
  6704  015650  6E1B               	movwf	_cut_time_flag,c
  6705                           
  6706                           ;ChargeStation_task.c: 139: Auto_cut();
  6707  015652  EC84  F09C         	call	_Auto_cut	;wreg free
  6708  015656                     l12085:
  6709                           
  6710                           ;ChargeStation_task.c: 140: }
  6711                           ;ChargeStation_task.c: 142: if (integrate_flag) {
  6712  015656  501F               	movf	_integrate_flag,w,c
  6713  015658  B4D8               	btfsc	status,2,c
  6714  01565A  D006               	goto	l129
  6715                           
  6716                           ;ChargeStation_task.c: 143: integrate_flag = 0;
  6717  01565C  0E00               	movlw	0
  6718  01565E  6E1F               	movwf	_integrate_flag,c
  6719                           
  6720                           ;ChargeStation_task.c: 144: integrate_current();
  6721  015660  EC40  F09F         	call	_integrate_current	;wreg free
  6722                           
  6723                           ;ChargeStation_task.c: 145: integrate_time();
  6724  015664  EC37  F0B1         	call	_integrate_time	;wreg free
  6725  015668                     l129:
  6726                           
  6727                           ;ChargeStation_task.c: 146: }
  6728                           ;ChargeStation_task.c: 148: if (time_change_flag) {
  6729  015668  5025               	movf	_time_change_flag,w,c
  6730  01566A  B4D8               	btfsc	status,2,c
  6731  01566C  D007               	goto	l130
  6732                           
  6733                           ;ChargeStation_task.c: 149: time_change_flag = 0;
  6734  01566E  0E00               	movlw	0
  6735  015670  6E25               	movwf	_time_change_flag,c
  6736                           
  6737                           ;ChargeStation_task.c: 150: if (print_item == PRINT_TIME)display_flag = 1;
  6738  015672  0420               	decf	_print_item,w,c
  6739  015674  A4D8               	btfss	status,2,c
  6740  015676  D002               	goto	l130
  6741  015678  0E01               	movlw	1
  6742  01567A  6E1D               	movwf	_display_flag,c
  6743  01567C                     l130:
  6744                           
  6745                           ;ChargeStation_task.c: 151: }
  6746                           ;ChargeStation_task.c: 153: if (display_flag) {
  6747  01567C  501D               	movf	_display_flag,w,c
  6748  01567E  B4D8               	btfsc	status,2,c
  6749  015680  D004               	goto	l12103
  6750                           
  6751                           ;ChargeStation_task.c: 154: display_flag = 0;
  6752  015682  0E00               	movlw	0
  6753  015684  6E1D               	movwf	_display_flag,c
  6754                           
  6755                           ;ChargeStation_task.c: 155: display_LCD();
  6756  015686  EC8E  F082         	call	_display_LCD	;wreg free
  6757  01568A                     l12103:
  6758                           
  6759                           ;ChargeStation_task.c: 156: }
  6760                           ;ChargeStation_task.c: 158: if (terminal_data_out && terminal_data_out_flag) {
  6761  01568A  5023               	movf	_terminal_data_out,w,c
  6762  01568C  B4D8               	btfsc	status,2,c
  6763  01568E  0012               	return	
  6764  015690  5024               	movf	_terminal_data_out_flag,w,c
  6765  015692  B4D8               	btfsc	status,2,c
  6766  015694  0012               	return	
  6767                           
  6768                           ;ChargeStation_task.c: 159: terminal_data_out_flag = 0;
  6769  015696  0E00               	movlw	0
  6770  015698  6E24               	movwf	_terminal_data_out_flag,c
  6771                           
  6772                           ;ChargeStation_task.c: 160: data_out(&usb_tx);
  6773  01569A  0EBA               	movlw	low _usb_tx
  6774  01569C  0100               	movlb	0	; () banked
  6775  01569E  6FAB               	movwf	data_out@tx& (0+255),b
  6776  0156A0  0E02               	movlw	high _usb_tx
  6777  0156A2  0100               	movlb	0	; () banked
  6778  0156A4  6FAC               	movwf	(data_out@tx+1)& (0+255),b
  6779  0156A6  ECE0  F097         	call	_data_out	;wreg free
  6780  0156AA  0012               	return	
  6781  0156AC                     __end_of_normal_task:
  6782                           	opt stack 0
  6783                           tblptru	equ	0xFF8
  6784                           tblptrh	equ	0xFF7
  6785                           tblptrl	equ	0xFF6
  6786                           tablat	equ	0xFF5
  6787                           prodh	equ	0xFF4
  6788                           prodl	equ	0xFF3
  6789                           intcon	equ	0xFF2
  6790                           postinc0	equ	0xFEE
  6791                           wreg	equ	0xFE8
  6792                           postinc1	equ	0xFE6
  6793                           postdec1	equ	0xFE5
  6794                           fsr1h	equ	0xFE2
  6795                           fsr1l	equ	0xFE1
  6796                           indf2	equ	0xFDF
  6797                           postinc2	equ	0xFDE
  6798                           postdec2	equ	0xFDD
  6799                           fsr2h	equ	0xFDA
  6800                           fsr2l	equ	0xFD9
  6801                           status	equ	0xFD8
  6802                           
  6803 ;; *************** function _settings_task *****************
  6804 ;; Defined at:
  6805 ;;		line 193 in file "settings.c"
  6806 ;; Parameters:    Size  Location     Type
  6807 ;;		None
  6808 ;; Auto vars:     Size  Location     Type
  6809 ;;  item_change_    1   57[BANK0 ] unsigned char 
  6810 ;; Return value:  Size  Location     Type
  6811 ;;		None               void
  6812 ;; Registers used:
  6813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6820 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6822 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6823 ;;Total ram usage:        1 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; Hardware stack levels required when called:   17
  6826 ;; This function calls:
  6827 ;;		_display
  6828 ;;		_settings_adjust_time
  6829 ;;		_settings_auto_stop
  6830 ;;		_settings_integrating_reset
  6831 ;;		_settings_led_indicator
  6832 ;; This function is called by:
  6833 ;;		_normal_task
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           	psect	text17
  6838  012A14                     __ptext17:
  6839                           	opt stack 0
  6840  012A14                     _settings_task:
  6841                           	opt stack 12
  6842                           
  6843                           ;settings.c: 194: static uint8_t settings_state = 0;
  6844                           ;settings.c: 195: switch (settings_state) {
  6845                           
  6846                           ;incstack = 0
  6847  012A14  D10A               	goto	l11725
  6848  012A16                     l11643:
  6849                           
  6850                           ;settings.c: 197: settings_item = SELECT;
  6851  012A16  0E00               	movlw	0
  6852  012A18  0100               	movlb	0	; () banked
  6853  012A1A  6FFF               	movwf	_settings_item& (0+255),b
  6854                           
  6855                           ; BSR set to: 0
  6856                           ;settings.c: 198: display(SETTINGS, "Settings", "<-   Select   ->");
  6857  012A1C  0E67               	movlw	low STR_64
  6858  012A1E  0100               	movlb	0	; () banked
  6859  012A20  6F60               	movwf	display@str0& (0+255),b
  6860  012A22  0EFF               	movlw	high STR_64
  6861  012A24  0100               	movlb	0	; () banked
  6862  012A26  6F61               	movwf	(display@str0+1)& (0+255),b
  6863  012A28  0E5F               	movlw	low STR_65
  6864  012A2A  0100               	movlb	0	; () banked
  6865  012A2C  6F62               	movwf	display@str1& (0+255),b
  6866  012A2E  0EFE               	movlw	high STR_65
  6867  012A30  0100               	movlb	0	; () banked
  6868  012A32  6F63               	movwf	(display@str1+1)& (0+255),b
  6869  012A34  0E03               	movlw	3
  6870  012A36  ECEA  F09B         	call	_display
  6871                           
  6872                           ;settings.c: 199: settings_state += 1;
  6873  012A3A  0101               	movlb	1	; () banked
  6874  012A3C  2B2B               	incf	settings_task@settings_state& (0+255),f,b
  6875                           
  6876                           ;settings.c: 200: break;
  6877  012A3E  0012               	return	
  6878  012A40                     l11649:
  6879                           
  6880                           ; BSR set to: 1
  6881                           ;settings.c: 202: {
  6882                           ;settings.c: 203: uint8_t item_change_flag = 0;
  6883  012A40  0E00               	movlw	0
  6884  012A42  0100               	movlb	0	; () banked
  6885  012A44  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  6886                           
  6887                           ; BSR set to: 0
  6888                           ;settings.c: 204: if (port[2].ctmu.flag.press) {
  6889  012A46  0101               	movlb	1	; () banked
  6890  012A48  A15D               	btfss	(_port+48)& (0+255),0,b
  6891  012A4A  D013               	goto	l11663
  6892                           
  6893                           ; BSR set to: 1
  6894                           ;settings.c: 205: port[2].ctmu.flags = 0;
  6895  012A4C  0E00               	movlw	0
  6896  012A4E  0101               	movlb	1	; () banked
  6897  012A50  6F5E               	movwf	(_port+49)& (0+255),b
  6898  012A52  0E00               	movlw	0
  6899  012A54  6F5D               	movwf	(_port+48)& (0+255),b
  6900                           
  6901                           ; BSR set to: 1
  6902                           ;settings.c: 206: if (settings_item == INTEGRATING_RESET)settings_item = SELECT;
  6903  012A56  0E04               	movlw	4
  6904  012A58  0100               	movlb	0	; () banked
  6905  012A5A  19FF               	xorwf	_settings_item& (0+255),w,b
  6906  012A5C  A4D8               	btfss	status,2,c
  6907  012A5E  D004               	goto	l11659
  6908                           
  6909                           ; BSR set to: 0
  6910  012A60  0E00               	movlw	0
  6911  012A62  0100               	movlb	0	; () banked
  6912  012A64  6FFF               	movwf	_settings_item& (0+255),b
  6913  012A66  D002               	goto	l11661
  6914  012A68                     l11659:
  6915                           
  6916                           ; BSR set to: 0
  6917                           ;settings.c: 207: else settings_item++;
  6918  012A68  0100               	movlb	0	; () banked
  6919  012A6A  2BFF               	incf	_settings_item& (0+255),f,b
  6920  012A6C                     l11661:
  6921                           
  6922                           ; BSR set to: 0
  6923                           ;settings.c: 208: item_change_flag = 1;
  6924  012A6C  0E01               	movlw	1
  6925  012A6E  0100               	movlb	0	; () banked
  6926  012A70  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  6927  012A72                     l11663:
  6928                           
  6929                           ;settings.c: 209: }
  6930                           ;settings.c: 210: if (port[0].ctmu.flag.press) {
  6931  012A72  0101               	movlb	1	; () banked
  6932  012A74  A12F               	btfss	(_port+2)& (0+255),0,b
  6933  012A76  D013               	goto	l11673
  6934                           
  6935                           ; BSR set to: 1
  6936                           ;settings.c: 211: port[0].ctmu.flags = 0;
  6937  012A78  0E00               	movlw	0
  6938  012A7A  0101               	movlb	1	; () banked
  6939  012A7C  6F30               	movwf	(_port+3)& (0+255),b
  6940  012A7E  0E00               	movlw	0
  6941  012A80  6F2F               	movwf	(_port+2)& (0+255),b
  6942                           
  6943                           ;settings.c: 212: if (settings_item == SELECT)settings_item = INTEGRATING_RESET;
  6944  012A82  0100               	movlb	0	; () banked
  6945  012A84  51FF               	movf	_settings_item& (0+255),w,b
  6946  012A86  0100               	movlb	0	; () banked
  6947  012A88  A4D8               	btfss	status,2,c
  6948  012A8A  D004               	goto	l11669
  6949                           
  6950                           ; BSR set to: 0
  6951  012A8C  0E04               	movlw	4
  6952  012A8E  0100               	movlb	0	; () banked
  6953  012A90  6FFF               	movwf	_settings_item& (0+255),b
  6954  012A92  D002               	goto	l11671
  6955  012A94                     l11669:
  6956                           
  6957                           ; BSR set to: 0
  6958                           ;settings.c: 213: else settings_item--;
  6959  012A94  0100               	movlb	0	; () banked
  6960  012A96  07FF               	decf	_settings_item& (0+255),f,b
  6961  012A98                     l11671:
  6962                           
  6963                           ; BSR set to: 0
  6964                           ;settings.c: 214: item_change_flag = 1;
  6965  012A98  0E01               	movlw	1
  6966  012A9A  0100               	movlb	0	; () banked
  6967  012A9C  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  6968  012A9E                     l11673:
  6969                           
  6970                           ;settings.c: 215: }
  6971                           ;settings.c: 216: if (item_change_flag) {
  6972  012A9E  0100               	movlb	0	; () banked
  6973  012AA0  5199               	movf	settings_task@item_change_flag& (0+255),w,b
  6974  012AA2  0100               	movlb	0	; () banked
  6975  012AA4  A4D8               	btfss	status,2,c
  6976  012AA6  D051               	goto	l11689
  6977  012AA8  D061               	goto	l556
  6978  012AAA                     l11677:
  6979                           
  6980                           ; BSR set to: 0
  6981                           ;settings.c: 219: display(SETTINGS, "Settings", "<-   Select   ->");
  6982  012AAA  0E67               	movlw	low STR_64
  6983  012AAC  0100               	movlb	0	; () banked
  6984  012AAE  6F60               	movwf	display@str0& (0+255),b
  6985  012AB0  0EFF               	movlw	high STR_64
  6986  012AB2  0100               	movlb	0	; () banked
  6987  012AB4  6F61               	movwf	(display@str0+1)& (0+255),b
  6988  012AB6  0E5F               	movlw	low STR_65
  6989  012AB8  0100               	movlb	0	; () banked
  6990  012ABA  6F62               	movwf	display@str1& (0+255),b
  6991  012ABC  0EFE               	movlw	high STR_65
  6992  012ABE  0100               	movlb	0	; () banked
  6993  012AC0  6F63               	movwf	(display@str1+1)& (0+255),b
  6994  012AC2  0E03               	movlw	3
  6995  012AC4  ECEA  F09B         	call	_display
  6996                           
  6997                           ;settings.c: 220: break;
  6998  012AC8  D051               	goto	l556
  6999  012ACA                     l11679:
  7000                           
  7001                           ;settings.c: 222: display(SETTINGS, "Settings", "Adjust the Time");
  7002  012ACA  0E67               	movlw	low STR_64
  7003  012ACC  0100               	movlb	0	; () banked
  7004  012ACE  6F60               	movwf	display@str0& (0+255),b
  7005  012AD0  0EFF               	movlw	high STR_64
  7006  012AD2  0100               	movlb	0	; () banked
  7007  012AD4  6F61               	movwf	(display@str0+1)& (0+255),b
  7008  012AD6  0EA3               	movlw	low STR_69
  7009  012AD8  0100               	movlb	0	; () banked
  7010  012ADA  6F62               	movwf	display@str1& (0+255),b
  7011  012ADC  0EFE               	movlw	high STR_69
  7012  012ADE  0100               	movlb	0	; () banked
  7013  012AE0  6F63               	movwf	(display@str1+1)& (0+255),b
  7014  012AE2  0E03               	movlw	3
  7015  012AE4  ECEA  F09B         	call	_display
  7016                           
  7017                           ;settings.c: 223: break;
  7018  012AE8  D041               	goto	l556
  7019  012AEA                     l11681:
  7020                           
  7021                           ;settings.c: 225: display(SETTINGS, "Settings", "Toggle Auto Stop");
  7022  012AEA  0E67               	movlw	low STR_64
  7023  012AEC  0100               	movlb	0	; () banked
  7024  012AEE  6F60               	movwf	display@str0& (0+255),b
  7025  012AF0  0EFF               	movlw	high STR_64
  7026  012AF2  0100               	movlb	0	; () banked
  7027  012AF4  6F61               	movwf	(display@str0+1)& (0+255),b
  7028  012AF6  0E70               	movlw	low STR_71
  7029  012AF8  0100               	movlb	0	; () banked
  7030  012AFA  6F62               	movwf	display@str1& (0+255),b
  7031  012AFC  0EFE               	movlw	high STR_71
  7032  012AFE  0100               	movlb	0	; () banked
  7033  012B00  6F63               	movwf	(display@str1+1)& (0+255),b
  7034  012B02  0E03               	movlw	3
  7035  012B04  ECEA  F09B         	call	_display
  7036                           
  7037                           ;settings.c: 226: break;
  7038  012B08  D031               	goto	l556
  7039  012B0A                     l11683:
  7040                           
  7041                           ;settings.c: 228: display(SETTINGS, "Settings", "Toggle LED Lamp");
  7042  012B0A  0E67               	movlw	low STR_64
  7043  012B0C  0100               	movlb	0	; () banked
  7044  012B0E  6F60               	movwf	display@str0& (0+255),b
  7045  012B10  0EFF               	movlw	high STR_64
  7046  012B12  0100               	movlb	0	; () banked
  7047  012B14  6F61               	movwf	(display@str0+1)& (0+255),b
  7048  012B16  0EB3               	movlw	low STR_73
  7049  012B18  0100               	movlb	0	; () banked
  7050  012B1A  6F62               	movwf	display@str1& (0+255),b
  7051  012B1C  0EFE               	movlw	high STR_73
  7052  012B1E  0100               	movlb	0	; () banked
  7053  012B20  6F63               	movwf	(display@str1+1)& (0+255),b
  7054  012B22  0E03               	movlw	3
  7055  012B24  ECEA  F09B         	call	_display
  7056                           
  7057                           ;settings.c: 229: break;
  7058  012B28  D021               	goto	l556
  7059  012B2A                     l11685:
  7060                           
  7061                           ;settings.c: 231: display(SETTINGS, "Settings", "Integrat Reset");
  7062  012B2A  0E67               	movlw	low STR_64
  7063  012B2C  0100               	movlb	0	; () banked
  7064  012B2E  6F60               	movwf	display@str0& (0+255),b
  7065  012B30  0EFF               	movlw	high STR_64
  7066  012B32  0100               	movlb	0	; () banked
  7067  012B34  6F61               	movwf	(display@str0+1)& (0+255),b
  7068  012B36  0ED3               	movlw	low STR_75
  7069  012B38  0100               	movlb	0	; () banked
  7070  012B3A  6F62               	movwf	display@str1& (0+255),b
  7071  012B3C  0EFE               	movlw	high STR_75
  7072  012B3E  0100               	movlb	0	; () banked
  7073  012B40  6F63               	movwf	(display@str1+1)& (0+255),b
  7074  012B42  0E03               	movlw	3
  7075  012B44  ECEA  F09B         	call	_display
  7076                           
  7077                           ;settings.c: 233: }
  7078                           
  7079                           ;settings.c: 232: break;
  7080  012B48  D011               	goto	l556
  7081  012B4A                     l11689:
  7082  012B4A  0100               	movlb	0	; () banked
  7083  012B4C  51FF               	movf	_settings_item& (0+255),w,b
  7084                           
  7085                           ; Switch size 1, requested type "space"
  7086                           ; Number of cases is 5, Range of values is 0 to 4
  7087                           ; switch strategies available:
  7088                           ; Name         Instructions Cycles
  7089                           ; simple_byte           16     9 (average)
  7090                           ;	Chosen strategy is simple_byte
  7091  012B4E  0A00               	xorlw	0	; case 0
  7092  012B50  B4D8               	btfsc	status,2,c
  7093  012B52  D7AB               	goto	l11677
  7094  012B54  0A01               	xorlw	1	; case 1
  7095  012B56  B4D8               	btfsc	status,2,c
  7096  012B58  D7B8               	goto	l11679
  7097  012B5A  0A03               	xorlw	3	; case 2
  7098  012B5C  B4D8               	btfsc	status,2,c
  7099  012B5E  D7C5               	goto	l11681
  7100  012B60  0A01               	xorlw	1	; case 3
  7101  012B62  B4D8               	btfsc	status,2,c
  7102  012B64  D7D2               	goto	l11683
  7103  012B66  0A07               	xorlw	7	; case 4
  7104  012B68  B4D8               	btfsc	status,2,c
  7105  012B6A  D7DF               	goto	l11685
  7106  012B6C                     l556:
  7107                           
  7108                           ;settings.c: 234: }
  7109                           ;settings.c: 235: if (port[1].ctmu.flag.press) {
  7110  012B6C  0101               	movlb	1	; () banked
  7111  012B6E  A146               	btfss	(_port+25)& (0+255),0,b
  7112  012B70  D007               	goto	l11695
  7113                           
  7114                           ; BSR set to: 1
  7115                           ;settings.c: 236: port[1].ctmu.flags = 0;
  7116  012B72  0E00               	movlw	0
  7117  012B74  0101               	movlb	1	; () banked
  7118  012B76  6F47               	movwf	(_port+26)& (0+255),b
  7119  012B78  0E00               	movlw	0
  7120  012B7A  6F46               	movwf	(_port+25)& (0+255),b
  7121                           
  7122                           ; BSR set to: 1
  7123                           ;settings.c: 237: settings_state += 1;
  7124  012B7C  0101               	movlb	1	; () banked
  7125  012B7E  2B2B               	incf	settings_task@settings_state& (0+255),f,b
  7126  012B80                     l11695:
  7127                           
  7128                           ; BSR set to: 1
  7129                           ;settings.c: 238: }
  7130                           ;settings.c: 239: if (ctmu_m.flag.press) {
  7131  012B80  A029               	btfss	_ctmu_m+2,0,c
  7132  012B82  0012               	return	
  7133                           
  7134                           ; BSR set to: 1
  7135                           ;settings.c: 240: ctmu_m.flags = 0;
  7136  012B84  0E00               	movlw	0
  7137  012B86  6E2A               	movwf	_ctmu_m+3,c
  7138  012B88  0E00               	movlw	0
  7139  012B8A  6E29               	movwf	_ctmu_m+2,c
  7140                           
  7141                           ;settings.c: 241: settings_state = 0;
  7142  012B8C  0E00               	movlw	0
  7143  012B8E  0101               	movlb	1	; () banked
  7144  012B90  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7145                           
  7146                           ;settings.c: 242: settings_flag = 0;
  7147  012B92  0E00               	movlw	0
  7148  012B94  6E21               	movwf	_settings_flag,c
  7149                           
  7150                           ; BSR set to: 1
  7151                           ;settings.c: 243: display(PRINT_TIME, "", "");
  7152  012B96  0EE6               	movlw	low (STR_96+3)
  7153  012B98  0100               	movlb	0	; () banked
  7154  012B9A  6F60               	movwf	display@str0& (0+255),b
  7155  012B9C  0EFF               	movlw	high (STR_96+3)
  7156  012B9E  0100               	movlb	0	; () banked
  7157  012BA0  6F61               	movwf	(display@str0+1)& (0+255),b
  7158  012BA2  0EE6               	movlw	low (STR_96+3)
  7159  012BA4  0100               	movlb	0	; () banked
  7160  012BA6  6F62               	movwf	display@str1& (0+255),b
  7161  012BA8  0EFF               	movlw	high (STR_96+3)
  7162  012BAA  0100               	movlb	0	; () banked
  7163  012BAC  6F63               	movwf	(display@str1+1)& (0+255),b
  7164  012BAE  0E01               	movlw	1
  7165  012BB0  ECEA  F09B         	call	_display
  7166                           
  7167                           ;settings.c: 244: }
  7168                           ;settings.c: 245: }
  7169                           ;settings.c: 246: break;
  7170  012BB4  0012               	return	
  7171  012BB6                     l11701:
  7172                           
  7173                           ;settings.c: 250: settings_state = 1;
  7174  012BB6  0E01               	movlw	1
  7175  012BB8  0101               	movlb	1	; () banked
  7176  012BBA  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7177                           
  7178                           ;settings.c: 251: break;
  7179  012BBC  0012               	return	
  7180  012BBE                     l11703:
  7181                           
  7182                           ;settings.c: 253: if (settings_adjust_time()) {
  7183  012BBE  EC50  F0A4         	call	_settings_adjust_time	;wreg free
  7184  012BC2  0900               	iorlw	0
  7185  012BC4  B4D8               	btfsc	status,2,c
  7186  012BC6  0012               	return	
  7187                           
  7188                           ;settings.c: 254: settings_state = 0;
  7189  012BC8  0E00               	movlw	0
  7190  012BCA  0101               	movlb	1	; () banked
  7191  012BCC  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7192                           
  7193                           ; BSR set to: 1
  7194                           ;settings.c: 255: }
  7195                           ;settings.c: 256: break;
  7196  012BCE  0012               	return	
  7197  012BD0                     l11707:
  7198                           
  7199                           ;settings.c: 258: if (settings_auto_stop()) {
  7200  012BD0  ECEC  F093         	call	_settings_auto_stop	;wreg free
  7201  012BD4  0900               	iorlw	0
  7202  012BD6  B4D8               	btfsc	status,2,c
  7203  012BD8  0012               	return	
  7204                           
  7205                           ;settings.c: 259: settings_state = 0;
  7206  012BDA  0E00               	movlw	0
  7207  012BDC  0101               	movlb	1	; () banked
  7208  012BDE  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7209                           
  7210                           ; BSR set to: 1
  7211                           ;settings.c: 260: }
  7212                           ;settings.c: 261: break;
  7213  012BE0  0012               	return	
  7214  012BE2                     l11711:
  7215                           
  7216                           ;settings.c: 263: if (settings_led_indicator()) {
  7217  012BE2  ECC5  F092         	call	_settings_led_indicator	;wreg free
  7218  012BE6  0900               	iorlw	0
  7219  012BE8  B4D8               	btfsc	status,2,c
  7220  012BEA  0012               	return	
  7221                           
  7222                           ;settings.c: 264: settings_state = 0;
  7223  012BEC  0E00               	movlw	0
  7224  012BEE  0101               	movlb	1	; () banked
  7225  012BF0  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7226                           
  7227                           ; BSR set to: 1
  7228                           ;settings.c: 265: }
  7229                           ;settings.c: 266: break;
  7230  012BF2  0012               	return	
  7231  012BF4                     l11715:
  7232                           
  7233                           ;settings.c: 268: if (settings_integrating_reset()) {
  7234  012BF4  EC99  F091         	call	_settings_integrating_reset	;wreg free
  7235  012BF8  0900               	iorlw	0
  7236  012BFA  B4D8               	btfsc	status,2,c
  7237  012BFC  0012               	return	
  7238                           
  7239                           ;settings.c: 269: settings_state = 0;
  7240  012BFE  0E00               	movlw	0
  7241  012C00  0101               	movlb	1	; () banked
  7242  012C02  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7243                           
  7244                           ; BSR set to: 1
  7245                           ;settings.c: 274: }
  7246                           
  7247                           ; BSR set to: 1
  7248                           ;settings.c: 273: break;
  7249                           
  7250                           ;settings.c: 272: default:
  7251                           
  7252                           ; BSR set to: 1
  7253                           ;settings.c: 270: }
  7254                           ;settings.c: 271: break;
  7255  012C04  0012               	return	
  7256  012C06                     l11721:
  7257  012C06  0100               	movlb	0	; () banked
  7258  012C08  51FF               	movf	_settings_item& (0+255),w,b
  7259                           
  7260                           ; Switch size 1, requested type "space"
  7261                           ; Number of cases is 5, Range of values is 0 to 4
  7262                           ; switch strategies available:
  7263                           ; Name         Instructions Cycles
  7264                           ; simple_byte           16     9 (average)
  7265                           ;	Chosen strategy is simple_byte
  7266  012C0A  0A00               	xorlw	0	; case 0
  7267  012C0C  B4D8               	btfsc	status,2,c
  7268  012C0E  D7D3               	goto	l11701
  7269  012C10  0A01               	xorlw	1	; case 1
  7270  012C12  B4D8               	btfsc	status,2,c
  7271  012C14  D7D4               	goto	l11703
  7272  012C16  0A03               	xorlw	3	; case 2
  7273  012C18  B4D8               	btfsc	status,2,c
  7274  012C1A  D7DA               	goto	l11707
  7275  012C1C  0A01               	xorlw	1	; case 3
  7276  012C1E  B4D8               	btfsc	status,2,c
  7277  012C20  D7E0               	goto	l11711
  7278  012C22  0A07               	xorlw	7	; case 4
  7279  012C24  A4D8               	btfss	status,2,c
  7280                           
  7281                           ; BSR set to: 0
  7282                           ;settings.c: 276: }
  7283                           
  7284                           ; BSR set to: 0
  7285                           ;settings.c: 275: break;
  7286  012C26  0012               	return	
  7287  012C28  D7E5               	goto	l11715
  7288  012C2A                     l11725:
  7289  012C2A  0101               	movlb	1	; () banked
  7290  012C2C  512B               	movf	settings_task@settings_state& (0+255),w,b
  7291                           
  7292                           ; Switch size 1, requested type "space"
  7293                           ; Number of cases is 3, Range of values is 0 to 2
  7294                           ; switch strategies available:
  7295                           ; Name         Instructions Cycles
  7296                           ; simple_byte           10     6 (average)
  7297                           ;	Chosen strategy is simple_byte
  7298  012C2E  0A00               	xorlw	0	; case 0
  7299  012C30  B4D8               	btfsc	status,2,c
  7300  012C32  D6F1               	goto	l11643
  7301  012C34  0A01               	xorlw	1	; case 1
  7302  012C36  B4D8               	btfsc	status,2,c
  7303  012C38  D703               	goto	l11649
  7304  012C3A  0A03               	xorlw	3	; case 2
  7305  012C3C  A4D8               	btfss	status,2,c
  7306  012C3E  0012               	return	
  7307  012C40  D7E2               	goto	l11721
  7308  012C42                     __end_of_settings_task:
  7309                           	opt stack 0
  7310                           tblptru	equ	0xFF8
  7311                           tblptrh	equ	0xFF7
  7312                           tblptrl	equ	0xFF6
  7313                           tablat	equ	0xFF5
  7314                           prodh	equ	0xFF4
  7315                           prodl	equ	0xFF3
  7316                           intcon	equ	0xFF2
  7317                           postinc0	equ	0xFEE
  7318                           wreg	equ	0xFE8
  7319                           postinc1	equ	0xFE6
  7320                           postdec1	equ	0xFE5
  7321                           fsr1h	equ	0xFE2
  7322                           fsr1l	equ	0xFE1
  7323                           indf2	equ	0xFDF
  7324                           postinc2	equ	0xFDE
  7325                           postdec2	equ	0xFDD
  7326                           fsr2h	equ	0xFDA
  7327                           fsr2l	equ	0xFD9
  7328                           status	equ	0xFD8
  7329                           
  7330 ;; *************** function _settings_led_indicator *****************
  7331 ;; Defined at:
  7332 ;;		line 96 in file "settings.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;		None
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;  i               1   52[BANK0 ] unsigned char 
  7337 ;;  str            20   27[BANK0 ] unsigned char [20]
  7338 ;;  strp            2   49[BANK0 ] PTR unsigned char 
  7339 ;;		 -> settings_led_indicator@str_1362(20), 
  7340 ;;  i               1   51[BANK0 ] unsigned char 
  7341 ;;  j               1   53[BANK0 ] unsigned char 
  7342 ;;  str            20    7[BANK0 ] unsigned char [20]
  7343 ;;  strp            2   47[BANK0 ] PTR unsigned char 
  7344 ;;		 -> settings_led_indicator@str(20), 
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  1    wreg      unsigned char 
  7347 ;; Registers used:
  7348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/0
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7355 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7356 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7357 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7358 ;;Total ram usage:       48 bytes
  7359 ;; Hardware stack levels used:    1
  7360 ;; Hardware stack levels required when called:   12
  7361 ;; This function calls:
  7362 ;;		_LED_output
  7363 ;;		_display
  7364 ;;		_strcpy
  7365 ;; This function is called by:
  7366 ;;		_settings_task
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370                           	psect	text18
  7371  01258A                     __ptext18:
  7372                           	opt stack 0
  7373  01258A                     _settings_led_indicator:
  7374                           	opt stack 16
  7375                           
  7376                           ;settings.c: 97: static uint8_t state = 0;
  7377                           ;settings.c: 98: switch (state) {
  7378                           
  7379                           ;incstack = 0
  7380  01258A  D100               	goto	l11231
  7381  01258C                     l11167:
  7382                           
  7383                           ;settings.c: 100: {
  7384                           ;settings.c: 101: char str[20];
  7385                           ;settings.c: 102: char *strp;
  7386                           ;settings.c: 103: strp = str;
  7387  01258C  0E67               	movlw	low settings_led_indicator@str
  7388  01258E  0100               	movlb	0	; () banked
  7389  012590  6F8F               	movwf	settings_led_indicator@strp& (0+255),b
  7390  012592  0E00               	movlw	high settings_led_indicator@str
  7391  012594  0100               	movlb	0	; () banked
  7392  012596  6F90               	movwf	(settings_led_indicator@strp+1)& (0+255),b
  7393                           
  7394                           ; BSR set to: 0
  7395                           ;settings.c: 104: for (uint8_t i = 0; i < 3; i++) {
  7396  012598  0E00               	movlw	0
  7397  01259A  0100               	movlb	0	; () banked
  7398  01259C  6F93               	movwf	settings_led_indicator@i& (0+255),b
  7399  01259E                     l11171:
  7400                           
  7401                           ; BSR set to: 0
  7402  01259E  0E02               	movlw	2
  7403  0125A0  0100               	movlb	0	; () banked
  7404  0125A2  6593               	cpfsgt	settings_led_indicator@i& (0+255),b
  7405  0125A4  D001               	goto	l11175
  7406  0125A6  D031               	goto	l11187
  7407  0125A8                     l11175:
  7408                           
  7409                           ; BSR set to: 0
  7410                           ;settings.c: 105: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7411  0125A8  0100               	movlb	0	; () banked
  7412  0125AA  5193               	movf	settings_led_indicator@i& (0+255),w,b
  7413  0125AC  0D17               	mullw	23
  7414  0125AE  0E16               	movlw	22
  7415  0125B0  26F3               	addwf	prodl,f,c
  7416  0125B2  0E00               	movlw	0
  7417  0125B4  22F4               	addwfc	prodh,f,c
  7418  0125B6  0E2D               	movlw	low _port
  7419  0125B8  24F3               	addwf	prodl,w,c
  7420  0125BA  6ED9               	movwf	fsr2l,c
  7421  0125BC  0E01               	movlw	high _port
  7422  0125BE  20F4               	addwfc	prodh,w,c
  7423  0125C0  6EDA               	movwf	fsr2h,c
  7424  0125C2  0101               	movlb	1	; () banked
  7425  0125C4  A2DF               	btfss	indf2,1,c
  7426  0125C6  D00D               	goto	l11179
  7427                           
  7428                           ; BSR set to: 1
  7429  0125C8  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7430  0125CC  C090  F061         	movff	settings_led_indicator@strp+1,strcpy@to+1
  7431  0125D0  0EAB               	movlw	low STR_40
  7432  0125D2  0100               	movlb	0	; () banked
  7433  0125D4  6F62               	movwf	strcpy@from& (0+255),b
  7434  0125D6  0EFF               	movlw	high STR_40
  7435  0125D8  0100               	movlb	0	; () banked
  7436  0125DA  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7437  0125DC  ECB1  F0B3         	call	_strcpy	;wreg free
  7438  0125E0  D00C               	goto	l11181
  7439  0125E2                     l11179:
  7440                           
  7441                           ;settings.c: 106: else strcpy(strp, " OFF ");
  7442  0125E2  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7443  0125E6  C090  F061         	movff	settings_led_indicator@strp+1,strcpy@to+1
  7444  0125EA  0EB1               	movlw	low STR_41
  7445  0125EC  0100               	movlb	0	; () banked
  7446  0125EE  6F62               	movwf	strcpy@from& (0+255),b
  7447  0125F0  0EFF               	movlw	high STR_41
  7448  0125F2  0100               	movlb	0	; () banked
  7449  0125F4  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7450  0125F6  ECB1  F0B3         	call	_strcpy	;wreg free
  7451  0125FA                     l11181:
  7452                           
  7453                           ;settings.c: 107: strp += 5;
  7454  0125FA  0E05               	movlw	5
  7455  0125FC  0100               	movlb	0	; () banked
  7456  0125FE  278F               	addwf	settings_led_indicator@strp& (0+255),f,b
  7457  012600  0E00               	movlw	0
  7458  012602  2390               	addwfc	(settings_led_indicator@strp+1)& (0+255),f,b
  7459                           
  7460                           ; BSR set to: 0
  7461  012604  0100               	movlb	0	; () banked
  7462  012606  2B93               	incf	settings_led_indicator@i& (0+255),f,b
  7463  012608  D7CA               	goto	l11171
  7464  01260A                     l11187:
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;settings.c: 108: }
  7468                           ;settings.c: 109: display(SETTINGS, "Left Centr Right", str);
  7469  01260A  0E81               	movlw	low STR_42
  7470  01260C  0100               	movlb	0	; () banked
  7471  01260E  6F60               	movwf	display@str0& (0+255),b
  7472  012610  0EFE               	movlw	high STR_42
  7473  012612  0100               	movlb	0	; () banked
  7474  012614  6F61               	movwf	(display@str0+1)& (0+255),b
  7475  012616  0E67               	movlw	low settings_led_indicator@str
  7476  012618  0100               	movlb	0	; () banked
  7477  01261A  6F62               	movwf	display@str1& (0+255),b
  7478  01261C  0E00               	movlw	high settings_led_indicator@str
  7479  01261E  0100               	movlb	0	; () banked
  7480  012620  6F63               	movwf	(display@str1+1)& (0+255),b
  7481  012622  0E03               	movlw	3
  7482  012624  ECEA  F09B         	call	_display
  7483                           
  7484                           ;settings.c: 110: state = 1;
  7485  012628  0E01               	movlw	1
  7486  01262A  0101               	movlb	1	; () banked
  7487  01262C  6F2A               	movwf	settings_led_indicator@state& (0+255),b
  7488                           
  7489                           ;settings.c: 111: }
  7490                           ;settings.c: 112: break;
  7491  01262E  D0B6               	goto	l508
  7492  012630                     l11191:
  7493                           
  7494                           ; BSR set to: 1
  7495                           ;settings.c: 114: for (uint8_t j = 0; j < 3; j++) {
  7496  012630  0E00               	movlw	0
  7497  012632  0100               	movlb	0	; () banked
  7498  012634  6F95               	movwf	settings_led_indicator@j& (0+255),b
  7499  012636                     l11193:
  7500                           
  7501                           ; BSR set to: 0
  7502  012636  0E02               	movlw	2
  7503  012638  0100               	movlb	0	; () banked
  7504  01263A  6595               	cpfsgt	settings_led_indicator@j& (0+255),b
  7505  01263C  D001               	goto	l11197
  7506  01263E  D0AE               	goto	l508
  7507  012640                     l11197:
  7508                           
  7509                           ; BSR set to: 0
  7510                           ;settings.c: 115: if (port[j].ctmu.flag.press) {
  7511  012640  0100               	movlb	0	; () banked
  7512  012642  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7513  012644  0D17               	mullw	23
  7514  012646  0E02               	movlw	2
  7515  012648  26F3               	addwf	prodl,f,c
  7516  01264A  0E00               	movlw	0
  7517  01264C  22F4               	addwfc	prodh,f,c
  7518  01264E  0E2D               	movlw	low _port
  7519  012650  24F3               	addwf	prodl,w,c
  7520  012652  6ED9               	movwf	fsr2l,c
  7521  012654  0E01               	movlw	high _port
  7522  012656  20F4               	addwfc	prodh,w,c
  7523  012658  6EDA               	movwf	fsr2h,c
  7524  01265A  0101               	movlb	1	; () banked
  7525  01265C  A0DF               	btfss	indf2,0,c
  7526  01265E  D093               	goto	l11225
  7527                           
  7528                           ; BSR set to: 1
  7529                           ;settings.c: 116: port[j].ctmu.flags = 0;
  7530  012660  0100               	movlb	0	; () banked
  7531  012662  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7532  012664  0D17               	mullw	23
  7533  012666  0E02               	movlw	2
  7534  012668  26F3               	addwf	prodl,f,c
  7535  01266A  0E00               	movlw	0
  7536  01266C  22F4               	addwfc	prodh,f,c
  7537  01266E  0E2D               	movlw	low _port
  7538  012670  24F3               	addwf	prodl,w,c
  7539  012672  6ED9               	movwf	fsr2l,c
  7540  012674  0E01               	movlw	high _port
  7541  012676  20F4               	addwfc	prodh,w,c
  7542  012678  6EDA               	movwf	fsr2h,c
  7543  01267A  0E00               	movlw	0
  7544  01267C  6EDE               	movwf	postinc2,c
  7545  01267E  0E00               	movlw	0
  7546  012680  6EDD               	movwf	postdec2,c
  7547                           
  7548                           ;settings.c: 117: port[j].flag.led_indicator_ON = !port[j].flag.led_indicator_ON;
  7549  012682  0100               	movlb	0	; () banked
  7550  012684  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7551  012686  0D17               	mullw	23
  7552  012688  0E16               	movlw	22
  7553  01268A  26F3               	addwf	prodl,f,c
  7554  01268C  0E00               	movlw	0
  7555  01268E  22F4               	addwfc	prodh,f,c
  7556  012690  0E2D               	movlw	low _port
  7557  012692  24F3               	addwf	prodl,w,c
  7558  012694  6ED9               	movwf	fsr2l,c
  7559  012696  0E01               	movlw	high _port
  7560  012698  20F4               	addwfc	prodh,w,c
  7561  01269A  6EDA               	movwf	fsr2h,c
  7562  01269C  0101               	movlb	1	; () banked
  7563  01269E  B2DF               	btfsc	indf2,1,c
  7564  0126A0  D004               	goto	u13040
  7565  0126A2  0100               	movlb	0	; () banked
  7566  0126A4  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7567  0126A6  2B66               	incf	??_settings_led_indicator& (0+255),f,b
  7568  0126A8  D002               	goto	u13058
  7569  0126AA                     u13040:
  7570  0126AA  0100               	movlb	0	; () banked
  7571  0126AC  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7572  0126AE                     u13058:
  7573  0126AE  0100               	movlb	0	; () banked
  7574  0126B0  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7575  0126B2  0D17               	mullw	23
  7576  0126B4  0E16               	movlw	22
  7577  0126B6  26F3               	addwf	prodl,f,c
  7578  0126B8  0E00               	movlw	0
  7579  0126BA  22F4               	addwfc	prodh,f,c
  7580  0126BC  0E2D               	movlw	low _port
  7581  0126BE  24F3               	addwf	prodl,w,c
  7582  0126C0  6ED9               	movwf	fsr2l,c
  7583  0126C2  0E01               	movlw	high _port
  7584  0126C4  20F4               	addwfc	prodh,w,c
  7585  0126C6  6EDA               	movwf	fsr2h,c
  7586  0126C8  0100               	movlb	0	; () banked
  7587  0126CA  4766               	rlncf	??_settings_led_indicator& (0+255),f,b
  7588  0126CC  0101               	movlb	1	; () banked
  7589  0126CE  50DF               	movf	223,w,c
  7590  0126D0  0100               	movlb	0	; () banked
  7591  0126D2  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7592  0126D4  0BFD               	andlw	-3
  7593  0126D6  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7594  0126D8  0101               	movlb	1	; () banked
  7595  0126DA  6EDF               	movwf	223,c
  7596                           
  7597                           ; BSR set to: 1
  7598                           ;settings.c: 118: LED_output(j, 0);
  7599  0126DC  0E00               	movlw	0
  7600  0126DE  0100               	movlb	0	; () banked
  7601  0126E0  6F60               	movwf	LED_output@value& (0+255),b
  7602  0126E2  0100               	movlb	0	; () banked
  7603  0126E4  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7604  0126E6  ECBE  F0AF         	call	_LED_output
  7605                           
  7606                           ;settings.c: 119: char str[20];
  7607                           ;settings.c: 120: char *strp;
  7608                           ;settings.c: 121: strp = str;
  7609  0126EA  0E7B               	movlw	low settings_led_indicator@str_1362
  7610  0126EC  0100               	movlb	0	; () banked
  7611  0126EE  6F91               	movwf	settings_led_indicator@strp_1363& (0+255),b
  7612  0126F0  0E00               	movlw	high settings_led_indicator@str_1362
  7613  0126F2  0100               	movlb	0	; () banked
  7614  0126F4  6F92               	movwf	(settings_led_indicator@strp_1363+1)& (0+255),b
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;settings.c: 122: for (uint8_t i = 0; i < 3; i++) {
  7618  0126F6  0E00               	movlw	0
  7619  0126F8  0100               	movlb	0	; () banked
  7620  0126FA  6F94               	movwf	settings_led_indicator@i_1364& (0+255),b
  7621  0126FC                     l11207:
  7622                           
  7623                           ; BSR set to: 0
  7624  0126FC  0E02               	movlw	2
  7625  0126FE  0100               	movlb	0	; () banked
  7626  012700  6594               	cpfsgt	settings_led_indicator@i_1364& (0+255),b
  7627  012702  D001               	goto	l11211
  7628  012704  D031               	goto	l11223
  7629  012706                     l11211:
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;settings.c: 123: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7633  012706  0100               	movlb	0	; () banked
  7634  012708  5194               	movf	settings_led_indicator@i_1364& (0+255),w,b
  7635  01270A  0D17               	mullw	23
  7636  01270C  0E16               	movlw	22
  7637  01270E  26F3               	addwf	prodl,f,c
  7638  012710  0E00               	movlw	0
  7639  012712  22F4               	addwfc	prodh,f,c
  7640  012714  0E2D               	movlw	low _port
  7641  012716  24F3               	addwf	prodl,w,c
  7642  012718  6ED9               	movwf	fsr2l,c
  7643  01271A  0E01               	movlw	high _port
  7644  01271C  20F4               	addwfc	prodh,w,c
  7645  01271E  6EDA               	movwf	fsr2h,c
  7646  012720  0101               	movlb	1	; () banked
  7647  012722  A2DF               	btfss	indf2,1,c
  7648  012724  D00D               	goto	l11215
  7649                           
  7650                           ; BSR set to: 1
  7651  012726  C091  F060         	movff	settings_led_indicator@strp_1363,strcpy@to
  7652  01272A  C092  F061         	movff	settings_led_indicator@strp_1363+1,strcpy@to+1
  7653  01272E  0EAB               	movlw	low STR_40
  7654  012730  0100               	movlb	0	; () banked
  7655  012732  6F62               	movwf	strcpy@from& (0+255),b
  7656  012734  0EFF               	movlw	high STR_40
  7657  012736  0100               	movlb	0	; () banked
  7658  012738  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7659  01273A  ECB1  F0B3         	call	_strcpy	;wreg free
  7660  01273E  D00C               	goto	l11217
  7661  012740                     l11215:
  7662                           
  7663                           ;settings.c: 124: else strcpy(strp, " OFF ");
  7664  012740  C091  F060         	movff	settings_led_indicator@strp_1363,strcpy@to
  7665  012744  C092  F061         	movff	settings_led_indicator@strp_1363+1,strcpy@to+1
  7666  012748  0EB1               	movlw	low STR_41
  7667  01274A  0100               	movlb	0	; () banked
  7668  01274C  6F62               	movwf	strcpy@from& (0+255),b
  7669  01274E  0EFF               	movlw	high STR_41
  7670  012750  0100               	movlb	0	; () banked
  7671  012752  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7672  012754  ECB1  F0B3         	call	_strcpy	;wreg free
  7673  012758                     l11217:
  7674                           
  7675                           ;settings.c: 125: strp += 5;
  7676  012758  0E05               	movlw	5
  7677  01275A  0100               	movlb	0	; () banked
  7678  01275C  2791               	addwf	settings_led_indicator@strp_1363& (0+255),f,b
  7679  01275E  0E00               	movlw	0
  7680  012760  2392               	addwfc	(settings_led_indicator@strp_1363+1)& (0+255),f,b
  7681                           
  7682                           ; BSR set to: 0
  7683  012762  0100               	movlb	0	; () banked
  7684  012764  2B94               	incf	settings_led_indicator@i_1364& (0+255),f,b
  7685  012766  D7CA               	goto	l11207
  7686  012768                     l11223:
  7687                           
  7688                           ; BSR set to: 0
  7689                           ;settings.c: 126: }
  7690                           ;settings.c: 127: display(SETTINGS, "", str);
  7691  012768  0EE6               	movlw	low (STR_96+3)
  7692  01276A  0100               	movlb	0	; () banked
  7693  01276C  6F60               	movwf	display@str0& (0+255),b
  7694  01276E  0EFF               	movlw	high (STR_96+3)
  7695  012770  0100               	movlb	0	; () banked
  7696  012772  6F61               	movwf	(display@str0+1)& (0+255),b
  7697  012774  0E7B               	movlw	low settings_led_indicator@str_1362
  7698  012776  0100               	movlb	0	; () banked
  7699  012778  6F62               	movwf	display@str1& (0+255),b
  7700  01277A  0E00               	movlw	high settings_led_indicator@str_1362
  7701  01277C  0100               	movlb	0	; () banked
  7702  01277E  6F63               	movwf	(display@str1+1)& (0+255),b
  7703  012780  0E03               	movlw	3
  7704  012782  ECEA  F09B         	call	_display
  7705  012786                     l11225:
  7706  012786  0100               	movlb	0	; () banked
  7707  012788  2B95               	incf	settings_led_indicator@j& (0+255),f,b
  7708  01278A  D755               	goto	l11193
  7709  01278C                     l11231:
  7710  01278C  0101               	movlb	1	; () banked
  7711  01278E  512A               	movf	settings_led_indicator@state& (0+255),w,b
  7712                           
  7713                           ; Switch size 1, requested type "space"
  7714                           ; Number of cases is 2, Range of values is 0 to 1
  7715                           ; switch strategies available:
  7716                           ; Name         Instructions Cycles
  7717                           ; simple_byte            7     4 (average)
  7718                           ;	Chosen strategy is simple_byte
  7719  012790  0A00               	xorlw	0	; case 0
  7720  012792  B4D8               	btfsc	status,2,c
  7721  012794  D6FB               	goto	l11167
  7722  012796  0A01               	xorlw	1	; case 1
  7723  012798  B4D8               	btfsc	status,2,c
  7724  01279A  D74A               	goto	l11191
  7725  01279C                     l508:
  7726                           
  7727                           ;settings.c: 134: if (ctmu_m.flag.press) {
  7728  01279C  A029               	btfss	_ctmu_m+2,0,c
  7729  01279E  D01A               	goto	l11241
  7730                           
  7731                           ;settings.c: 135: ctmu_m.flags = 0;
  7732  0127A0  0E00               	movlw	0
  7733  0127A2  6E2A               	movwf	_ctmu_m+3,c
  7734  0127A4  0E00               	movlw	0
  7735  0127A6  6E29               	movwf	_ctmu_m+2,c
  7736                           
  7737                           ;settings.c: 136: state = 0;
  7738  0127A8  0E00               	movlw	0
  7739  0127AA  0101               	movlb	1	; () banked
  7740  0127AC  6F2A               	movwf	settings_led_indicator@state& (0+255),b
  7741                           
  7742                           ;settings.c: 137: settings_flag = 0;
  7743  0127AE  0E00               	movlw	0
  7744  0127B0  6E21               	movwf	_settings_flag,c
  7745                           
  7746                           ; BSR set to: 1
  7747                           ;settings.c: 138: display(PRINT_TIME, "", "");
  7748  0127B2  0EE6               	movlw	low (STR_96+3)
  7749  0127B4  0100               	movlb	0	; () banked
  7750  0127B6  6F60               	movwf	display@str0& (0+255),b
  7751  0127B8  0EFF               	movlw	high (STR_96+3)
  7752  0127BA  0100               	movlb	0	; () banked
  7753  0127BC  6F61               	movwf	(display@str0+1)& (0+255),b
  7754  0127BE  0EE6               	movlw	low (STR_96+3)
  7755  0127C0  0100               	movlb	0	; () banked
  7756  0127C2  6F62               	movwf	display@str1& (0+255),b
  7757  0127C4  0EFF               	movlw	high (STR_96+3)
  7758  0127C6  0100               	movlb	0	; () banked
  7759  0127C8  6F63               	movwf	(display@str1+1)& (0+255),b
  7760  0127CA  0E01               	movlw	1
  7761  0127CC  ECEA  F09B         	call	_display
  7762                           
  7763                           ;settings.c: 139: return 1;
  7764  0127D0  0E01               	movlw	1
  7765  0127D2  0012               	return	
  7766  0127D4                     l11241:
  7767                           
  7768                           ;settings.c: 140: }
  7769                           ;settings.c: 141: return 0;
  7770  0127D4  0E00               	movlw	0
  7771  0127D6  0012               	return	
  7772  0127D8                     __end_of_settings_led_indicator:
  7773                           	opt stack 0
  7774                           tblptru	equ	0xFF8
  7775                           tblptrh	equ	0xFF7
  7776                           tblptrl	equ	0xFF6
  7777                           tablat	equ	0xFF5
  7778                           prodh	equ	0xFF4
  7779                           prodl	equ	0xFF3
  7780                           intcon	equ	0xFF2
  7781                           postinc0	equ	0xFEE
  7782                           wreg	equ	0xFE8
  7783                           postinc1	equ	0xFE6
  7784                           postdec1	equ	0xFE5
  7785                           fsr1h	equ	0xFE2
  7786                           fsr1l	equ	0xFE1
  7787                           indf2	equ	0xFDF
  7788                           postinc2	equ	0xFDE
  7789                           postdec2	equ	0xFDD
  7790                           fsr2h	equ	0xFDA
  7791                           fsr2l	equ	0xFD9
  7792                           status	equ	0xFD8
  7793                           
  7794 ;; *************** function _settings_integrating_reset *****************
  7795 ;; Defined at:
  7796 ;;		line 144 in file "settings.c"
  7797 ;; Parameters:    Size  Location     Type
  7798 ;;		None
  7799 ;; Auto vars:     Size  Location     Type
  7800 ;;  i               1   55[BANK0 ] unsigned char 
  7801 ;;  str            20   30[BANK0 ] unsigned char [20]
  7802 ;;  strp            2   52[BANK0 ] PTR unsigned char 
  7803 ;;		 -> settings_integrating_reset@str_1379(20), 
  7804 ;;  i               1   54[BANK0 ] unsigned char 
  7805 ;;  j               1   56[BANK0 ] unsigned char 
  7806 ;;  str            20   10[BANK0 ] unsigned char [20]
  7807 ;;  strp            2   50[BANK0 ] PTR unsigned char 
  7808 ;;		 -> settings_integrating_reset@str(20), 
  7809 ;; Return value:  Size  Location     Type
  7810 ;;                  1    wreg      unsigned char 
  7811 ;; Registers used:
  7812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7813 ;; Tracked objects:
  7814 ;;		On entry : 0/0
  7815 ;;		On exit  : 0/0
  7816 ;;		Unchanged: 0/0
  7817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7819 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7820 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7821 ;;      Totals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7822 ;;Total ram usage:       51 bytes
  7823 ;; Hardware stack levels used:    1
  7824 ;; Hardware stack levels required when called:   12
  7825 ;; This function calls:
  7826 ;;		_display
  7827 ;;		_strcpy
  7828 ;; This function is called by:
  7829 ;;		_settings_task
  7830 ;; This function uses a non-reentrant model
  7831 ;;
  7832                           
  7833                           	psect	text19
  7834  012332                     __ptext19:
  7835                           	opt stack 0
  7836  012332                     _settings_integrating_reset:
  7837                           	opt stack 16
  7838                           
  7839                           ;settings.c: 145: static uint8_t state = 0;
  7840                           ;settings.c: 146: switch (state) {
  7841                           
  7842                           ;incstack = 0
  7843  012332  D105               	goto	l11309
  7844  012334                     l11247:
  7845                           
  7846                           ;settings.c: 148: {
  7847                           ;settings.c: 149: char str[20];
  7848                           ;settings.c: 150: char *strp;
  7849                           ;settings.c: 151: strp = str;
  7850  012334  0E6A               	movlw	low settings_integrating_reset@str
  7851  012336  0100               	movlb	0	; () banked
  7852  012338  6F92               	movwf	settings_integrating_reset@strp& (0+255),b
  7853  01233A  0E00               	movlw	high settings_integrating_reset@str
  7854  01233C  0100               	movlb	0	; () banked
  7855  01233E  6F93               	movwf	(settings_integrating_reset@strp+1)& (0+255),b
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;settings.c: 152: for (uint8_t i = 0; i < 3; i++) {
  7859  012340  0E00               	movlw	0
  7860  012342  0100               	movlb	0	; () banked
  7861  012344  6F96               	movwf	settings_integrating_reset@i& (0+255),b
  7862  012346                     l11251:
  7863                           
  7864                           ; BSR set to: 0
  7865  012346  0E02               	movlw	2
  7866  012348  0100               	movlb	0	; () banked
  7867  01234A  6596               	cpfsgt	settings_integrating_reset@i& (0+255),b
  7868  01234C  D001               	goto	l11255
  7869  01234E  D034               	goto	l11267
  7870  012350                     l11255:
  7871                           
  7872                           ; BSR set to: 0
  7873                           ;settings.c: 153: if (port[i].integrated_current)strcpy(strp, " yet ");
  7874  012350  0100               	movlb	0	; () banked
  7875  012352  5196               	movf	settings_integrating_reset@i& (0+255),w,b
  7876  012354  0D17               	mullw	23
  7877  012356  0E0C               	movlw	12
  7878  012358  26F3               	addwf	prodl,f,c
  7879  01235A  0E00               	movlw	0
  7880  01235C  22F4               	addwfc	prodh,f,c
  7881  01235E  0E2D               	movlw	low _port
  7882  012360  24F3               	addwf	prodl,w,c
  7883  012362  6ED9               	movwf	fsr2l,c
  7884  012364  0E01               	movlw	high _port
  7885  012366  20F4               	addwfc	prodh,w,c
  7886  012368  6EDA               	movwf	fsr2h,c
  7887  01236A  50DE               	movf	postinc2,w,c
  7888  01236C  10DE               	iorwf	postinc2,w,c
  7889  01236E  10DE               	iorwf	postinc2,w,c
  7890  012370  10DE               	iorwf	postinc2,w,c
  7891  012372  B4D8               	btfsc	status,2,c
  7892  012374  D00D               	goto	l11259
  7893                           
  7894                           ; BSR set to: 0
  7895  012376  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  7896  01237A  C093  F061         	movff	settings_integrating_reset@strp+1,strcpy@to+1
  7897  01237E  0EB7               	movlw	low STR_56
  7898  012380  0100               	movlb	0	; () banked
  7899  012382  6F62               	movwf	strcpy@from& (0+255),b
  7900  012384  0EFF               	movlw	high STR_56
  7901  012386  0100               	movlb	0	; () banked
  7902  012388  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7903  01238A  ECB1  F0B3         	call	_strcpy	;wreg free
  7904  01238E  D00C               	goto	l11261
  7905  012390                     l11259:
  7906                           
  7907                           ;settings.c: 154: else strcpy(strp, "  0  ");
  7908  012390  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  7909  012394  C093  F061         	movff	settings_integrating_reset@strp+1,strcpy@to+1
  7910  012398  0EA5               	movlw	low STR_57
  7911  01239A  0100               	movlb	0	; () banked
  7912  01239C  6F62               	movwf	strcpy@from& (0+255),b
  7913  01239E  0EFF               	movlw	high STR_57
  7914  0123A0  0100               	movlb	0	; () banked
  7915  0123A2  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7916  0123A4  ECB1  F0B3         	call	_strcpy	;wreg free
  7917  0123A8                     l11261:
  7918                           
  7919                           ;settings.c: 155: strp += 5;
  7920  0123A8  0E05               	movlw	5
  7921  0123AA  0100               	movlb	0	; () banked
  7922  0123AC  2792               	addwf	settings_integrating_reset@strp& (0+255),f,b
  7923  0123AE  0E00               	movlw	0
  7924  0123B0  2393               	addwfc	(settings_integrating_reset@strp+1)& (0+255),f,b
  7925                           
  7926                           ; BSR set to: 0
  7927  0123B2  0100               	movlb	0	; () banked
  7928  0123B4  2B96               	incf	settings_integrating_reset@i& (0+255),f,b
  7929  0123B6  D7C7               	goto	l11251
  7930  0123B8                     l11267:
  7931                           
  7932                           ; BSR set to: 0
  7933                           ;settings.c: 156: }
  7934                           ;settings.c: 157: display(SETTINGS, "Left Centr Right", str);
  7935  0123B8  0E81               	movlw	low STR_42
  7936  0123BA  0100               	movlb	0	; () banked
  7937  0123BC  6F60               	movwf	display@str0& (0+255),b
  7938  0123BE  0EFE               	movlw	high STR_42
  7939  0123C0  0100               	movlb	0	; () banked
  7940  0123C2  6F61               	movwf	(display@str0+1)& (0+255),b
  7941  0123C4  0E6A               	movlw	low settings_integrating_reset@str
  7942  0123C6  0100               	movlb	0	; () banked
  7943  0123C8  6F62               	movwf	display@str1& (0+255),b
  7944  0123CA  0E00               	movlw	high settings_integrating_reset@str
  7945  0123CC  0100               	movlb	0	; () banked
  7946  0123CE  6F63               	movwf	(display@str1+1)& (0+255),b
  7947  0123D0  0E03               	movlw	3
  7948  0123D2  ECEA  F09B         	call	_display
  7949                           
  7950                           ;settings.c: 158: state = 1;
  7951  0123D6  0E01               	movlw	1
  7952  0123D8  0101               	movlb	1	; () banked
  7953  0123DA  6F29               	movwf	settings_integrating_reset@state& (0+255),b
  7954                           
  7955                           ;settings.c: 159: }
  7956                           ;settings.c: 160: break;
  7957  0123DC  D0B8               	goto	l530
  7958  0123DE                     l11271:
  7959                           
  7960                           ; BSR set to: 1
  7961                           ;settings.c: 162: for (uint8_t j = 0; j < 3; j++) {
  7962  0123DE  0E00               	movlw	0
  7963  0123E0  0100               	movlb	0	; () banked
  7964  0123E2  6F98               	movwf	settings_integrating_reset@j& (0+255),b
  7965  0123E4                     l11273:
  7966                           
  7967                           ; BSR set to: 0
  7968  0123E4  0E02               	movlw	2
  7969  0123E6  0100               	movlb	0	; () banked
  7970  0123E8  6598               	cpfsgt	settings_integrating_reset@j& (0+255),b
  7971  0123EA  D001               	goto	l11277
  7972  0123EC  D0B0               	goto	l530
  7973  0123EE                     l11277:
  7974                           
  7975                           ; BSR set to: 0
  7976                           ;settings.c: 163: if (port[j].ctmu.flag.press) {
  7977  0123EE  0100               	movlb	0	; () banked
  7978  0123F0  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  7979  0123F2  0D17               	mullw	23
  7980  0123F4  0E02               	movlw	2
  7981  0123F6  26F3               	addwf	prodl,f,c
  7982  0123F8  0E00               	movlw	0
  7983  0123FA  22F4               	addwfc	prodh,f,c
  7984  0123FC  0E2D               	movlw	low _port
  7985  0123FE  24F3               	addwf	prodl,w,c
  7986  012400  6ED9               	movwf	fsr2l,c
  7987  012402  0E01               	movlw	high _port
  7988  012404  20F4               	addwfc	prodh,w,c
  7989  012406  6EDA               	movwf	fsr2h,c
  7990  012408  0101               	movlb	1	; () banked
  7991  01240A  A0DF               	btfss	indf2,0,c
  7992  01240C  D095               	goto	l11303
  7993                           
  7994                           ; BSR set to: 1
  7995                           ;settings.c: 164: port[j].ctmu.flags = 0;
  7996  01240E  0100               	movlb	0	; () banked
  7997  012410  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  7998  012412  0D17               	mullw	23
  7999  012414  0E02               	movlw	2
  8000  012416  26F3               	addwf	prodl,f,c
  8001  012418  0E00               	movlw	0
  8002  01241A  22F4               	addwfc	prodh,f,c
  8003  01241C  0E2D               	movlw	low _port
  8004  01241E  24F3               	addwf	prodl,w,c
  8005  012420  6ED9               	movwf	fsr2l,c
  8006  012422  0E01               	movlw	high _port
  8007  012424  20F4               	addwfc	prodh,w,c
  8008  012426  6EDA               	movwf	fsr2h,c
  8009  012428  0E00               	movlw	0
  8010  01242A  6EDE               	movwf	postinc2,c
  8011  01242C  0E00               	movlw	0
  8012  01242E  6EDD               	movwf	postdec2,c
  8013                           
  8014                           ;settings.c: 165: port[j].integrated_current_sec = 0;
  8015  012430  0100               	movlb	0	; () banked
  8016  012432  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8017  012434  0D17               	mullw	23
  8018  012436  0E08               	movlw	8
  8019  012438  26F3               	addwf	prodl,f,c
  8020  01243A  0E00               	movlw	0
  8021  01243C  22F4               	addwfc	prodh,f,c
  8022  01243E  0E2D               	movlw	low _port
  8023  012440  24F3               	addwf	prodl,w,c
  8024  012442  6ED9               	movwf	fsr2l,c
  8025  012444  0E01               	movlw	high _port
  8026  012446  20F4               	addwfc	prodh,w,c
  8027  012448  6EDA               	movwf	fsr2h,c
  8028  01244A  6ADE               	clrf	postinc2,c
  8029  01244C  6ADE               	clrf	postinc2,c
  8030  01244E  6ADE               	clrf	postinc2,c
  8031  012450  6ADD               	clrf	postdec2,c
  8032                           
  8033                           ;settings.c: 166: port[j].integrated_current = 0;
  8034  012452  0100               	movlb	0	; () banked
  8035  012454  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8036  012456  0D17               	mullw	23
  8037  012458  0E0C               	movlw	12
  8038  01245A  26F3               	addwf	prodl,f,c
  8039  01245C  0E00               	movlw	0
  8040  01245E  22F4               	addwfc	prodh,f,c
  8041  012460  0E2D               	movlw	low _port
  8042  012462  24F3               	addwf	prodl,w,c
  8043  012464  6ED9               	movwf	fsr2l,c
  8044  012466  0E01               	movlw	high _port
  8045  012468  20F4               	addwfc	prodh,w,c
  8046  01246A  6EDA               	movwf	fsr2h,c
  8047  01246C  6ADE               	clrf	postinc2,c
  8048  01246E  6ADE               	clrf	postinc2,c
  8049  012470  6ADE               	clrf	postinc2,c
  8050  012472  6ADD               	clrf	postdec2,c
  8051                           
  8052                           ;settings.c: 167: port[j].integrated_time = 0;
  8053  012474  0100               	movlb	0	; () banked
  8054  012476  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8055  012478  0D17               	mullw	23
  8056  01247A  0E10               	movlw	16
  8057  01247C  26F3               	addwf	prodl,f,c
  8058  01247E  0E00               	movlw	0
  8059  012480  22F4               	addwfc	prodh,f,c
  8060  012482  0E2D               	movlw	low _port
  8061  012484  24F3               	addwf	prodl,w,c
  8062  012486  6ED9               	movwf	fsr2l,c
  8063  012488  0E01               	movlw	high _port
  8064  01248A  20F4               	addwfc	prodh,w,c
  8065  01248C  6EDA               	movwf	fsr2h,c
  8066  01248E  6ADE               	clrf	postinc2,c
  8067  012490  6ADE               	clrf	postinc2,c
  8068  012492  6ADE               	clrf	postinc2,c
  8069  012494  6ADD               	clrf	postdec2,c
  8070                           
  8071                           ; BSR set to: 0
  8072                           ;settings.c: 168: char str[20];
  8073                           ;settings.c: 169: char *strp;
  8074                           ;settings.c: 170: strp = str;
  8075  012496  0E7E               	movlw	low settings_integrating_reset@str_1379
  8076  012498  0100               	movlb	0	; () banked
  8077  01249A  6F94               	movwf	settings_integrating_reset@strp_1380& (0+255),b
  8078  01249C  0E00               	movlw	high settings_integrating_reset@str_1379
  8079  01249E  0100               	movlb	0	; () banked
  8080  0124A0  6F95               	movwf	(settings_integrating_reset@strp_1380+1)& (0+255),b
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;settings.c: 171: for (uint8_t i = 0; i < 3; i++) {
  8084  0124A2  0E00               	movlw	0
  8085  0124A4  0100               	movlb	0	; () banked
  8086  0124A6  6F97               	movwf	settings_integrating_reset@i_1381& (0+255),b
  8087  0124A8                     l11285:
  8088                           
  8089                           ; BSR set to: 0
  8090  0124A8  0E02               	movlw	2
  8091  0124AA  0100               	movlb	0	; () banked
  8092  0124AC  6597               	cpfsgt	settings_integrating_reset@i_1381& (0+255),b
  8093  0124AE  D001               	goto	l11289
  8094  0124B0  D034               	goto	l11301
  8095  0124B2                     l11289:
  8096                           
  8097                           ; BSR set to: 0
  8098                           ;settings.c: 172: if (port[i].integrated_current)strcpy(strp, " yet ");
  8099  0124B2  0100               	movlb	0	; () banked
  8100  0124B4  5197               	movf	settings_integrating_reset@i_1381& (0+255),w,b
  8101  0124B6  0D17               	mullw	23
  8102  0124B8  0E0C               	movlw	12
  8103  0124BA  26F3               	addwf	prodl,f,c
  8104  0124BC  0E00               	movlw	0
  8105  0124BE  22F4               	addwfc	prodh,f,c
  8106  0124C0  0E2D               	movlw	low _port
  8107  0124C2  24F3               	addwf	prodl,w,c
  8108  0124C4  6ED9               	movwf	fsr2l,c
  8109  0124C6  0E01               	movlw	high _port
  8110  0124C8  20F4               	addwfc	prodh,w,c
  8111  0124CA  6EDA               	movwf	fsr2h,c
  8112  0124CC  50DE               	movf	postinc2,w,c
  8113  0124CE  10DE               	iorwf	postinc2,w,c
  8114  0124D0  10DE               	iorwf	postinc2,w,c
  8115  0124D2  10DE               	iorwf	postinc2,w,c
  8116  0124D4  B4D8               	btfsc	status,2,c
  8117  0124D6  D00D               	goto	l11293
  8118                           
  8119                           ; BSR set to: 0
  8120  0124D8  C094  F060         	movff	settings_integrating_reset@strp_1380,strcpy@to
  8121  0124DC  C095  F061         	movff	settings_integrating_reset@strp_1380+1,strcpy@to+1
  8122  0124E0  0EB7               	movlw	low STR_56
  8123  0124E2  0100               	movlb	0	; () banked
  8124  0124E4  6F62               	movwf	strcpy@from& (0+255),b
  8125  0124E6  0EFF               	movlw	high STR_56
  8126  0124E8  0100               	movlb	0	; () banked
  8127  0124EA  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8128  0124EC  ECB1  F0B3         	call	_strcpy	;wreg free
  8129  0124F0  D00C               	goto	l11295
  8130  0124F2                     l11293:
  8131                           
  8132                           ;settings.c: 173: else strcpy(strp, "  0  ");
  8133  0124F2  C094  F060         	movff	settings_integrating_reset@strp_1380,strcpy@to
  8134  0124F6  C095  F061         	movff	settings_integrating_reset@strp_1380+1,strcpy@to+1
  8135  0124FA  0EA5               	movlw	low STR_57
  8136  0124FC  0100               	movlb	0	; () banked
  8137  0124FE  6F62               	movwf	strcpy@from& (0+255),b
  8138  012500  0EFF               	movlw	high STR_57
  8139  012502  0100               	movlb	0	; () banked
  8140  012504  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8141  012506  ECB1  F0B3         	call	_strcpy	;wreg free
  8142  01250A                     l11295:
  8143                           
  8144                           ;settings.c: 174: strp += 5;
  8145  01250A  0E05               	movlw	5
  8146  01250C  0100               	movlb	0	; () banked
  8147  01250E  2794               	addwf	settings_integrating_reset@strp_1380& (0+255),f,b
  8148  012510  0E00               	movlw	0
  8149  012512  2395               	addwfc	(settings_integrating_reset@strp_1380+1)& (0+255),f,b
  8150                           
  8151                           ; BSR set to: 0
  8152  012514  0100               	movlb	0	; () banked
  8153  012516  2B97               	incf	settings_integrating_reset@i_1381& (0+255),f,b
  8154  012518  D7C7               	goto	l11285
  8155  01251A                     l11301:
  8156                           
  8157                           ; BSR set to: 0
  8158                           ;settings.c: 175: }
  8159                           ;settings.c: 176: display(SETTINGS, "", str);
  8160  01251A  0EE6               	movlw	low (STR_96+3)
  8161  01251C  0100               	movlb	0	; () banked
  8162  01251E  6F60               	movwf	display@str0& (0+255),b
  8163  012520  0EFF               	movlw	high (STR_96+3)
  8164  012522  0100               	movlb	0	; () banked
  8165  012524  6F61               	movwf	(display@str0+1)& (0+255),b
  8166  012526  0E7E               	movlw	low settings_integrating_reset@str_1379
  8167  012528  0100               	movlb	0	; () banked
  8168  01252A  6F62               	movwf	display@str1& (0+255),b
  8169  01252C  0E00               	movlw	high settings_integrating_reset@str_1379
  8170  01252E  0100               	movlb	0	; () banked
  8171  012530  6F63               	movwf	(display@str1+1)& (0+255),b
  8172  012532  0E03               	movlw	3
  8173  012534  ECEA  F09B         	call	_display
  8174  012538                     l11303:
  8175  012538  0100               	movlb	0	; () banked
  8176  01253A  2B98               	incf	settings_integrating_reset@j& (0+255),f,b
  8177  01253C  D753               	goto	l11273
  8178  01253E                     l11309:
  8179  01253E  0101               	movlb	1	; () banked
  8180  012540  5129               	movf	settings_integrating_reset@state& (0+255),w,b
  8181                           
  8182                           ; Switch size 1, requested type "space"
  8183                           ; Number of cases is 2, Range of values is 0 to 1
  8184                           ; switch strategies available:
  8185                           ; Name         Instructions Cycles
  8186                           ; simple_byte            7     4 (average)
  8187                           ;	Chosen strategy is simple_byte
  8188  012542  0A00               	xorlw	0	; case 0
  8189  012544  B4D8               	btfsc	status,2,c
  8190  012546  D6F6               	goto	l11247
  8191  012548  0A01               	xorlw	1	; case 1
  8192  01254A  B4D8               	btfsc	status,2,c
  8193  01254C  D748               	goto	l11271
  8194  01254E                     l530:
  8195                           
  8196                           ;settings.c: 183: if (ctmu_m.flag.press) {
  8197  01254E  A029               	btfss	_ctmu_m+2,0,c
  8198  012550  D01A               	goto	l11319
  8199                           
  8200                           ;settings.c: 184: ctmu_m.flags = 0;
  8201  012552  0E00               	movlw	0
  8202  012554  6E2A               	movwf	_ctmu_m+3,c
  8203  012556  0E00               	movlw	0
  8204  012558  6E29               	movwf	_ctmu_m+2,c
  8205                           
  8206                           ;settings.c: 185: state = 0;
  8207  01255A  0E00               	movlw	0
  8208  01255C  0101               	movlb	1	; () banked
  8209  01255E  6F29               	movwf	settings_integrating_reset@state& (0+255),b
  8210                           
  8211                           ;settings.c: 186: settings_flag = 0;
  8212  012560  0E00               	movlw	0
  8213  012562  6E21               	movwf	_settings_flag,c
  8214                           
  8215                           ; BSR set to: 1
  8216                           ;settings.c: 187: display(PRINT_TIME, "", "");
  8217  012564  0EE6               	movlw	low (STR_96+3)
  8218  012566  0100               	movlb	0	; () banked
  8219  012568  6F60               	movwf	display@str0& (0+255),b
  8220  01256A  0EFF               	movlw	high (STR_96+3)
  8221  01256C  0100               	movlb	0	; () banked
  8222  01256E  6F61               	movwf	(display@str0+1)& (0+255),b
  8223  012570  0EE6               	movlw	low (STR_96+3)
  8224  012572  0100               	movlb	0	; () banked
  8225  012574  6F62               	movwf	display@str1& (0+255),b
  8226  012576  0EFF               	movlw	high (STR_96+3)
  8227  012578  0100               	movlb	0	; () banked
  8228  01257A  6F63               	movwf	(display@str1+1)& (0+255),b
  8229  01257C  0E01               	movlw	1
  8230  01257E  ECEA  F09B         	call	_display
  8231                           
  8232                           ;settings.c: 188: return 1;
  8233  012582  0E01               	movlw	1
  8234  012584  0012               	return	
  8235  012586                     l11319:
  8236                           
  8237                           ;settings.c: 189: }
  8238                           ;settings.c: 190: return 0;
  8239  012586  0E00               	movlw	0
  8240  012588  0012               	return	
  8241  01258A                     __end_of_settings_integrating_reset:
  8242                           	opt stack 0
  8243                           tblptru	equ	0xFF8
  8244                           tblptrh	equ	0xFF7
  8245                           tblptrl	equ	0xFF6
  8246                           tablat	equ	0xFF5
  8247                           prodh	equ	0xFF4
  8248                           prodl	equ	0xFF3
  8249                           intcon	equ	0xFF2
  8250                           postinc0	equ	0xFEE
  8251                           wreg	equ	0xFE8
  8252                           postinc1	equ	0xFE6
  8253                           postdec1	equ	0xFE5
  8254                           fsr1h	equ	0xFE2
  8255                           fsr1l	equ	0xFE1
  8256                           indf2	equ	0xFDF
  8257                           postinc2	equ	0xFDE
  8258                           postdec2	equ	0xFDD
  8259                           fsr2h	equ	0xFDA
  8260                           fsr2l	equ	0xFD9
  8261                           status	equ	0xFD8
  8262                           
  8263 ;; *************** function _settings_auto_stop *****************
  8264 ;; Defined at:
  8265 ;;		line 49 in file "settings.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;		None
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;  i               1   52[BANK0 ] unsigned char 
  8270 ;;  str            20   27[BANK0 ] unsigned char [20]
  8271 ;;  strp            2   49[BANK0 ] PTR unsigned char 
  8272 ;;		 -> settings_auto_stop@str_1345(20), 
  8273 ;;  i               1   51[BANK0 ] unsigned char 
  8274 ;;  j               1   53[BANK0 ] unsigned char 
  8275 ;;  str            20    7[BANK0 ] unsigned char [20]
  8276 ;;  strp            2   47[BANK0 ] PTR unsigned char 
  8277 ;;		 -> settings_auto_stop@str(20), 
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  1    wreg      unsigned char 
  8280 ;; Registers used:
  8281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8288 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8289 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8290 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8291 ;;Total ram usage:       48 bytes
  8292 ;; Hardware stack levels used:    1
  8293 ;; Hardware stack levels required when called:   12
  8294 ;; This function calls:
  8295 ;;		_display
  8296 ;;		_strcpy
  8297 ;; This function is called by:
  8298 ;;		_settings_task
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302                           	psect	text20
  8303  0127D8                     __ptext20:
  8304                           	opt stack 0
  8305  0127D8                     _settings_auto_stop:
  8306                           	opt stack 16
  8307                           
  8308                           ;settings.c: 50: static uint8_t state = 0;
  8309                           ;settings.c: 51: switch (state) {
  8310                           
  8311                           ;incstack = 0
  8312  0127D8  D0F7               	goto	l11151
  8313  0127DA                     l11089:
  8314                           
  8315                           ;settings.c: 53: {
  8316                           ;settings.c: 54: char str[20];
  8317                           ;settings.c: 55: char *strp;
  8318                           ;settings.c: 56: strp = str;
  8319  0127DA  0E67               	movlw	low settings_auto_stop@str
  8320  0127DC  0100               	movlb	0	; () banked
  8321  0127DE  6F8F               	movwf	settings_auto_stop@strp& (0+255),b
  8322  0127E0  0E00               	movlw	high settings_auto_stop@str
  8323  0127E2  0100               	movlb	0	; () banked
  8324  0127E4  6F90               	movwf	(settings_auto_stop@strp+1)& (0+255),b
  8325                           
  8326                           ; BSR set to: 0
  8327                           ;settings.c: 57: for (uint8_t i = 0; i < 3; i++) {
  8328  0127E6  0E00               	movlw	0
  8329  0127E8  0100               	movlb	0	; () banked
  8330  0127EA  6F93               	movwf	settings_auto_stop@i& (0+255),b
  8331  0127EC                     l11093:
  8332                           
  8333                           ; BSR set to: 0
  8334  0127EC  0E02               	movlw	2
  8335  0127EE  0100               	movlb	0	; () banked
  8336  0127F0  6593               	cpfsgt	settings_auto_stop@i& (0+255),b
  8337  0127F2  D001               	goto	l11097
  8338  0127F4  D031               	goto	l11109
  8339  0127F6                     l11097:
  8340                           
  8341                           ; BSR set to: 0
  8342                           ;settings.c: 58: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  8343  0127F6  0100               	movlb	0	; () banked
  8344  0127F8  5193               	movf	settings_auto_stop@i& (0+255),w,b
  8345  0127FA  0D17               	mullw	23
  8346  0127FC  0E16               	movlw	22
  8347  0127FE  26F3               	addwf	prodl,f,c
  8348  012800  0E00               	movlw	0
  8349  012802  22F4               	addwfc	prodh,f,c
  8350  012804  0E2D               	movlw	low _port
  8351  012806  24F3               	addwf	prodl,w,c
  8352  012808  6ED9               	movwf	fsr2l,c
  8353  01280A  0E01               	movlw	high _port
  8354  01280C  20F4               	addwfc	prodh,w,c
  8355  01280E  6EDA               	movwf	fsr2h,c
  8356  012810  0101               	movlb	1	; () banked
  8357  012812  A0DF               	btfss	indf2,0,c
  8358  012814  D00D               	goto	l11101
  8359                           
  8360                           ; BSR set to: 1
  8361  012816  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  8362  01281A  C090  F061         	movff	settings_auto_stop@strp+1,strcpy@to+1
  8363  01281E  0EAB               	movlw	low STR_40
  8364  012820  0100               	movlb	0	; () banked
  8365  012822  6F62               	movwf	strcpy@from& (0+255),b
  8366  012824  0EFF               	movlw	high STR_40
  8367  012826  0100               	movlb	0	; () banked
  8368  012828  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8369  01282A  ECB1  F0B3         	call	_strcpy	;wreg free
  8370  01282E  D00C               	goto	l11103
  8371  012830                     l11101:
  8372                           
  8373                           ;settings.c: 59: else strcpy(strp, " OFF ");
  8374  012830  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  8375  012834  C090  F061         	movff	settings_auto_stop@strp+1,strcpy@to+1
  8376  012838  0EB1               	movlw	low STR_41
  8377  01283A  0100               	movlb	0	; () banked
  8378  01283C  6F62               	movwf	strcpy@from& (0+255),b
  8379  01283E  0EFF               	movlw	high STR_41
  8380  012840  0100               	movlb	0	; () banked
  8381  012842  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8382  012844  ECB1  F0B3         	call	_strcpy	;wreg free
  8383  012848                     l11103:
  8384                           
  8385                           ;settings.c: 60: strp += 5;
  8386  012848  0E05               	movlw	5
  8387  01284A  0100               	movlb	0	; () banked
  8388  01284C  278F               	addwf	settings_auto_stop@strp& (0+255),f,b
  8389  01284E  0E00               	movlw	0
  8390  012850  2390               	addwfc	(settings_auto_stop@strp+1)& (0+255),f,b
  8391                           
  8392                           ; BSR set to: 0
  8393  012852  0100               	movlb	0	; () banked
  8394  012854  2B93               	incf	settings_auto_stop@i& (0+255),f,b
  8395  012856  D7CA               	goto	l11093
  8396  012858                     l11109:
  8397                           
  8398                           ; BSR set to: 0
  8399                           ;settings.c: 61: }
  8400                           ;settings.c: 62: display(SETTINGS, "Left Centr Right", str);
  8401  012858  0E81               	movlw	low STR_42
  8402  01285A  0100               	movlb	0	; () banked
  8403  01285C  6F60               	movwf	display@str0& (0+255),b
  8404  01285E  0EFE               	movlw	high STR_42
  8405  012860  0100               	movlb	0	; () banked
  8406  012862  6F61               	movwf	(display@str0+1)& (0+255),b
  8407  012864  0E67               	movlw	low settings_auto_stop@str
  8408  012866  0100               	movlb	0	; () banked
  8409  012868  6F62               	movwf	display@str1& (0+255),b
  8410  01286A  0E00               	movlw	high settings_auto_stop@str
  8411  01286C  0100               	movlb	0	; () banked
  8412  01286E  6F63               	movwf	(display@str1+1)& (0+255),b
  8413  012870  0E03               	movlw	3
  8414  012872  ECEA  F09B         	call	_display
  8415                           
  8416                           ;settings.c: 63: state = 1;
  8417  012876  0E01               	movlw	1
  8418  012878  0101               	movlb	1	; () banked
  8419  01287A  6F28               	movwf	settings_auto_stop@state& (0+255),b
  8420                           
  8421                           ;settings.c: 64: }
  8422                           ;settings.c: 65: break;
  8423  01287C  D0AD               	goto	l486
  8424  01287E                     l11113:
  8425                           
  8426                           ; BSR set to: 1
  8427                           ;settings.c: 67: for (uint8_t j = 0; j < 3; j++) {
  8428  01287E  0E00               	movlw	0
  8429  012880  0100               	movlb	0	; () banked
  8430  012882  6F95               	movwf	settings_auto_stop@j& (0+255),b
  8431  012884                     l11115:
  8432                           
  8433                           ; BSR set to: 0
  8434  012884  0E02               	movlw	2
  8435  012886  0100               	movlb	0	; () banked
  8436  012888  6595               	cpfsgt	settings_auto_stop@j& (0+255),b
  8437  01288A  D001               	goto	l11119
  8438  01288C  D0A5               	goto	l486
  8439  01288E                     l11119:
  8440                           
  8441                           ; BSR set to: 0
  8442                           ;settings.c: 68: if (port[j].ctmu.flag.press) {
  8443  01288E  0100               	movlb	0	; () banked
  8444  012890  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8445  012892  0D17               	mullw	23
  8446  012894  0E02               	movlw	2
  8447  012896  26F3               	addwf	prodl,f,c
  8448  012898  0E00               	movlw	0
  8449  01289A  22F4               	addwfc	prodh,f,c
  8450  01289C  0E2D               	movlw	low _port
  8451  01289E  24F3               	addwf	prodl,w,c
  8452  0128A0  6ED9               	movwf	fsr2l,c
  8453  0128A2  0E01               	movlw	high _port
  8454  0128A4  20F4               	addwfc	prodh,w,c
  8455  0128A6  6EDA               	movwf	fsr2h,c
  8456  0128A8  0101               	movlb	1	; () banked
  8457  0128AA  A0DF               	btfss	indf2,0,c
  8458  0128AC  D08A               	goto	l11145
  8459                           
  8460                           ; BSR set to: 1
  8461                           ;settings.c: 69: port[j].ctmu.flags = 0;
  8462  0128AE  0100               	movlb	0	; () banked
  8463  0128B0  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8464  0128B2  0D17               	mullw	23
  8465  0128B4  0E02               	movlw	2
  8466  0128B6  26F3               	addwf	prodl,f,c
  8467  0128B8  0E00               	movlw	0
  8468  0128BA  22F4               	addwfc	prodh,f,c
  8469  0128BC  0E2D               	movlw	low _port
  8470  0128BE  24F3               	addwf	prodl,w,c
  8471  0128C0  6ED9               	movwf	fsr2l,c
  8472  0128C2  0E01               	movlw	high _port
  8473  0128C4  20F4               	addwfc	prodh,w,c
  8474  0128C6  6EDA               	movwf	fsr2h,c
  8475  0128C8  0E00               	movlw	0
  8476  0128CA  6EDE               	movwf	postinc2,c
  8477  0128CC  0E00               	movlw	0
  8478  0128CE  6EDD               	movwf	postdec2,c
  8479                           
  8480                           ;settings.c: 70: port[j].flag.auto_cut_ON = !port[j].flag.auto_cut_ON;
  8481  0128D0  0100               	movlb	0	; () banked
  8482  0128D2  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8483  0128D4  0D17               	mullw	23
  8484  0128D6  0E16               	movlw	22
  8485  0128D8  26F3               	addwf	prodl,f,c
  8486  0128DA  0E00               	movlw	0
  8487  0128DC  22F4               	addwfc	prodh,f,c
  8488  0128DE  0E2D               	movlw	low _port
  8489  0128E0  24F3               	addwf	prodl,w,c
  8490  0128E2  6ED9               	movwf	fsr2l,c
  8491  0128E4  0E01               	movlw	high _port
  8492  0128E6  20F4               	addwfc	prodh,w,c
  8493  0128E8  6EDA               	movwf	fsr2h,c
  8494  0128EA  0101               	movlb	1	; () banked
  8495  0128EC  B0DF               	btfsc	indf2,0,c
  8496  0128EE  D004               	goto	u12920
  8497  0128F0  0100               	movlb	0	; () banked
  8498  0128F2  6B66               	clrf	??_settings_auto_stop& (0+255),b
  8499  0128F4  2B66               	incf	??_settings_auto_stop& (0+255),f,b
  8500  0128F6  D002               	goto	u12938
  8501  0128F8                     u12920:
  8502  0128F8  0100               	movlb	0	; () banked
  8503  0128FA  6B66               	clrf	??_settings_auto_stop& (0+255),b
  8504  0128FC                     u12938:
  8505  0128FC  0100               	movlb	0	; () banked
  8506  0128FE  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8507  012900  0D17               	mullw	23
  8508  012902  0E16               	movlw	22
  8509  012904  26F3               	addwf	prodl,f,c
  8510  012906  0E00               	movlw	0
  8511  012908  22F4               	addwfc	prodh,f,c
  8512  01290A  0E2D               	movlw	low _port
  8513  01290C  24F3               	addwf	prodl,w,c
  8514  01290E  6ED9               	movwf	fsr2l,c
  8515  012910  0E01               	movlw	high _port
  8516  012912  20F4               	addwfc	prodh,w,c
  8517  012914  6EDA               	movwf	fsr2h,c
  8518  012916  0101               	movlb	1	; () banked
  8519  012918  50DF               	movf	223,w,c
  8520  01291A  0100               	movlb	0	; () banked
  8521  01291C  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  8522  01291E  0BFE               	andlw	-2
  8523  012920  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  8524  012922  0101               	movlb	1	; () banked
  8525  012924  6EDF               	movwf	223,c
  8526                           
  8527                           ; BSR set to: 1
  8528                           ;settings.c: 71: char str[20];
  8529                           ;settings.c: 72: char *strp;
  8530                           ;settings.c: 73: strp = str;
  8531  012926  0E7B               	movlw	low settings_auto_stop@str_1345
  8532  012928  0100               	movlb	0	; () banked
  8533  01292A  6F91               	movwf	settings_auto_stop@strp_1346& (0+255),b
  8534  01292C  0E00               	movlw	high settings_auto_stop@str_1345
  8535  01292E  0100               	movlb	0	; () banked
  8536  012930  6F92               	movwf	(settings_auto_stop@strp_1346+1)& (0+255),b
  8537                           
  8538                           ; BSR set to: 0
  8539                           ;settings.c: 74: for (uint8_t i = 0; i < 3; i++) {
  8540  012932  0E00               	movlw	0
  8541  012934  0100               	movlb	0	; () banked
  8542  012936  6F94               	movwf	settings_auto_stop@i_1347& (0+255),b
  8543  012938                     l11127:
  8544                           
  8545                           ; BSR set to: 0
  8546  012938  0E02               	movlw	2
  8547  01293A  0100               	movlb	0	; () banked
  8548  01293C  6594               	cpfsgt	settings_auto_stop@i_1347& (0+255),b
  8549  01293E  D001               	goto	l11131
  8550  012940  D031               	goto	l11143
  8551  012942                     l11131:
  8552                           
  8553                           ; BSR set to: 0
  8554                           ;settings.c: 75: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  8555  012942  0100               	movlb	0	; () banked
  8556  012944  5194               	movf	settings_auto_stop@i_1347& (0+255),w,b
  8557  012946  0D17               	mullw	23
  8558  012948  0E16               	movlw	22
  8559  01294A  26F3               	addwf	prodl,f,c
  8560  01294C  0E00               	movlw	0
  8561  01294E  22F4               	addwfc	prodh,f,c
  8562  012950  0E2D               	movlw	low _port
  8563  012952  24F3               	addwf	prodl,w,c
  8564  012954  6ED9               	movwf	fsr2l,c
  8565  012956  0E01               	movlw	high _port
  8566  012958  20F4               	addwfc	prodh,w,c
  8567  01295A  6EDA               	movwf	fsr2h,c
  8568  01295C  0101               	movlb	1	; () banked
  8569  01295E  A0DF               	btfss	indf2,0,c
  8570  012960  D00D               	goto	l11135
  8571                           
  8572                           ; BSR set to: 1
  8573  012962  C091  F060         	movff	settings_auto_stop@strp_1346,strcpy@to
  8574  012966  C092  F061         	movff	settings_auto_stop@strp_1346+1,strcpy@to+1
  8575  01296A  0EAB               	movlw	low STR_40
  8576  01296C  0100               	movlb	0	; () banked
  8577  01296E  6F62               	movwf	strcpy@from& (0+255),b
  8578  012970  0EFF               	movlw	high STR_40
  8579  012972  0100               	movlb	0	; () banked
  8580  012974  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8581  012976  ECB1  F0B3         	call	_strcpy	;wreg free
  8582  01297A  D00C               	goto	l11137
  8583  01297C                     l11135:
  8584                           
  8585                           ;settings.c: 76: else strcpy(strp, " OFF ");
  8586  01297C  C091  F060         	movff	settings_auto_stop@strp_1346,strcpy@to
  8587  012980  C092  F061         	movff	settings_auto_stop@strp_1346+1,strcpy@to+1
  8588  012984  0EB1               	movlw	low STR_41
  8589  012986  0100               	movlb	0	; () banked
  8590  012988  6F62               	movwf	strcpy@from& (0+255),b
  8591  01298A  0EFF               	movlw	high STR_41
  8592  01298C  0100               	movlb	0	; () banked
  8593  01298E  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8594  012990  ECB1  F0B3         	call	_strcpy	;wreg free
  8595  012994                     l11137:
  8596                           
  8597                           ;settings.c: 77: strp += 5;
  8598  012994  0E05               	movlw	5
  8599  012996  0100               	movlb	0	; () banked
  8600  012998  2791               	addwf	settings_auto_stop@strp_1346& (0+255),f,b
  8601  01299A  0E00               	movlw	0
  8602  01299C  2392               	addwfc	(settings_auto_stop@strp_1346+1)& (0+255),f,b
  8603                           
  8604                           ; BSR set to: 0
  8605  01299E  0100               	movlb	0	; () banked
  8606  0129A0  2B94               	incf	settings_auto_stop@i_1347& (0+255),f,b
  8607  0129A2  D7CA               	goto	l11127
  8608  0129A4                     l11143:
  8609                           
  8610                           ; BSR set to: 0
  8611                           ;settings.c: 78: }
  8612                           ;settings.c: 79: display(SETTINGS, "", str);
  8613  0129A4  0EE6               	movlw	low (STR_96+3)
  8614  0129A6  0100               	movlb	0	; () banked
  8615  0129A8  6F60               	movwf	display@str0& (0+255),b
  8616  0129AA  0EFF               	movlw	high (STR_96+3)
  8617  0129AC  0100               	movlb	0	; () banked
  8618  0129AE  6F61               	movwf	(display@str0+1)& (0+255),b
  8619  0129B0  0E7B               	movlw	low settings_auto_stop@str_1345
  8620  0129B2  0100               	movlb	0	; () banked
  8621  0129B4  6F62               	movwf	display@str1& (0+255),b
  8622  0129B6  0E00               	movlw	high settings_auto_stop@str_1345
  8623  0129B8  0100               	movlb	0	; () banked
  8624  0129BA  6F63               	movwf	(display@str1+1)& (0+255),b
  8625  0129BC  0E03               	movlw	3
  8626  0129BE  ECEA  F09B         	call	_display
  8627  0129C2                     l11145:
  8628  0129C2  0100               	movlb	0	; () banked
  8629  0129C4  2B95               	incf	settings_auto_stop@j& (0+255),f,b
  8630  0129C6  D75E               	goto	l11115
  8631  0129C8                     l11151:
  8632  0129C8  0101               	movlb	1	; () banked
  8633  0129CA  5128               	movf	settings_auto_stop@state& (0+255),w,b
  8634                           
  8635                           ; Switch size 1, requested type "space"
  8636                           ; Number of cases is 2, Range of values is 0 to 1
  8637                           ; switch strategies available:
  8638                           ; Name         Instructions Cycles
  8639                           ; simple_byte            7     4 (average)
  8640                           ;	Chosen strategy is simple_byte
  8641  0129CC  0A00               	xorlw	0	; case 0
  8642  0129CE  B4D8               	btfsc	status,2,c
  8643  0129D0  D704               	goto	l11089
  8644  0129D2  0A01               	xorlw	1	; case 1
  8645  0129D4  B4D8               	btfsc	status,2,c
  8646  0129D6  D753               	goto	l11113
  8647  0129D8                     l486:
  8648                           
  8649                           ;settings.c: 86: if (ctmu_m.flag.press) {
  8650  0129D8  A029               	btfss	_ctmu_m+2,0,c
  8651  0129DA  D01A               	goto	l11161
  8652                           
  8653                           ;settings.c: 87: ctmu_m.flags = 0;
  8654  0129DC  0E00               	movlw	0
  8655  0129DE  6E2A               	movwf	_ctmu_m+3,c
  8656  0129E0  0E00               	movlw	0
  8657  0129E2  6E29               	movwf	_ctmu_m+2,c
  8658                           
  8659                           ;settings.c: 88: state = 0;
  8660  0129E4  0E00               	movlw	0
  8661  0129E6  0101               	movlb	1	; () banked
  8662  0129E8  6F28               	movwf	settings_auto_stop@state& (0+255),b
  8663                           
  8664                           ;settings.c: 89: settings_flag = 0;
  8665  0129EA  0E00               	movlw	0
  8666  0129EC  6E21               	movwf	_settings_flag,c
  8667                           
  8668                           ; BSR set to: 1
  8669                           ;settings.c: 90: display(PRINT_TIME, "", "");
  8670  0129EE  0EE6               	movlw	low (STR_96+3)
  8671  0129F0  0100               	movlb	0	; () banked
  8672  0129F2  6F60               	movwf	display@str0& (0+255),b
  8673  0129F4  0EFF               	movlw	high (STR_96+3)
  8674  0129F6  0100               	movlb	0	; () banked
  8675  0129F8  6F61               	movwf	(display@str0+1)& (0+255),b
  8676  0129FA  0EE6               	movlw	low (STR_96+3)
  8677  0129FC  0100               	movlb	0	; () banked
  8678  0129FE  6F62               	movwf	display@str1& (0+255),b
  8679  012A00  0EFF               	movlw	high (STR_96+3)
  8680  012A02  0100               	movlb	0	; () banked
  8681  012A04  6F63               	movwf	(display@str1+1)& (0+255),b
  8682  012A06  0E01               	movlw	1
  8683  012A08  ECEA  F09B         	call	_display
  8684                           
  8685                           ;settings.c: 91: return 1;
  8686  012A0C  0E01               	movlw	1
  8687  012A0E  0012               	return	
  8688  012A10                     l11161:
  8689                           
  8690                           ;settings.c: 92: }
  8691                           ;settings.c: 93: return 0;
  8692  012A10  0E00               	movlw	0
  8693  012A12  0012               	return	
  8694  012A14                     __end_of_settings_auto_stop:
  8695                           	opt stack 0
  8696                           tblptru	equ	0xFF8
  8697                           tblptrh	equ	0xFF7
  8698                           tblptrl	equ	0xFF6
  8699                           tablat	equ	0xFF5
  8700                           prodh	equ	0xFF4
  8701                           prodl	equ	0xFF3
  8702                           intcon	equ	0xFF2
  8703                           postinc0	equ	0xFEE
  8704                           wreg	equ	0xFE8
  8705                           postinc1	equ	0xFE6
  8706                           postdec1	equ	0xFE5
  8707                           fsr1h	equ	0xFE2
  8708                           fsr1l	equ	0xFE1
  8709                           indf2	equ	0xFDF
  8710                           postinc2	equ	0xFDE
  8711                           postdec2	equ	0xFDD
  8712                           fsr2h	equ	0xFDA
  8713                           fsr2l	equ	0xFD9
  8714                           status	equ	0xFD8
  8715                           
  8716 ;; *************** function _settings_adjust_time *****************
  8717 ;; Defined at:
  8718 ;;		line 13 in file "settings.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;		None
  8721 ;; Auto vars:     Size  Location     Type
  8722 ;;		None
  8723 ;; Return value:  Size  Location     Type
  8724 ;;                  1    wreg      unsigned char 
  8725 ;; Registers used:
  8726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8727 ;; Tracked objects:
  8728 ;;		On entry : 0/0
  8729 ;;		On exit  : 0/0
  8730 ;;		Unchanged: 0/0
  8731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8736 ;;Total ram usage:        0 bytes
  8737 ;; Hardware stack levels used:    1
  8738 ;; Hardware stack levels required when called:   16
  8739 ;; This function calls:
  8740 ;;		_RTCC_adjust_time_cursor
  8741 ;;		_RTCC_adjust_time_dec
  8742 ;;		_RTCC_adjust_time_inc
  8743 ;;		_RTCC_adjust_time_toggle
  8744 ;;		_display
  8745 ;; This function is called by:
  8746 ;;		_settings_task
  8747 ;; This function uses a non-reentrant model
  8748 ;;
  8749                           
  8750                           	psect	text21
  8751  0148A0                     __ptext21:
  8752                           	opt stack 0
  8753  0148A0                     _settings_adjust_time:
  8754                           	opt stack 12
  8755                           
  8756                           ;settings.c: 14: static uint8_t state = 0;
  8757                           ;settings.c: 15: switch (state) {
  8758                           
  8759                           ;incstack = 0
  8760  0148A0  D043               	goto	l11073
  8761  0148A2                     l11049:
  8762                           
  8763                           ;settings.c: 17: display(PRINT_TIME, "", "");
  8764  0148A2  0EE6               	movlw	low (STR_96+3)
  8765  0148A4  0100               	movlb	0	; () banked
  8766  0148A6  6F60               	movwf	display@str0& (0+255),b
  8767  0148A8  0EFF               	movlw	high (STR_96+3)
  8768  0148AA  0100               	movlb	0	; () banked
  8769  0148AC  6F61               	movwf	(display@str0+1)& (0+255),b
  8770  0148AE  0EE6               	movlw	low (STR_96+3)
  8771  0148B0  0100               	movlb	0	; () banked
  8772  0148B2  6F62               	movwf	display@str1& (0+255),b
  8773  0148B4  0EFF               	movlw	high (STR_96+3)
  8774  0148B6  0100               	movlb	0	; () banked
  8775  0148B8  6F63               	movwf	(display@str1+1)& (0+255),b
  8776  0148BA  0E01               	movlw	1
  8777  0148BC  ECEA  F09B         	call	_display
  8778                           
  8779                           ;settings.c: 18: RTCC_adjust_time_toggle(&now);
  8780  0148C0  0E72               	movlw	low _now
  8781  0148C2  0100               	movlb	0	; () banked
  8782  0148C4  6F60               	movwf	RTCC_adjust_time_toggle@tm& (0+255),b
  8783  0148C6  0E01               	movlw	high _now
  8784  0148C8  0100               	movlb	0	; () banked
  8785  0148CA  6F61               	movwf	(RTCC_adjust_time_toggle@tm+1)& (0+255),b
  8786  0148CC  EC3B  F0B3         	call	_RTCC_adjust_time_toggle	;wreg free
  8787                           
  8788                           ;settings.c: 19: state = 1;
  8789  0148D0  0E01               	movlw	1
  8790  0148D2  0101               	movlb	1	; () banked
  8791  0148D4  6F27               	movwf	settings_adjust_time@state& (0+255),b
  8792                           
  8793                           ;settings.c: 20: break;
  8794  0148D6  D030               	goto	l468
  8795  0148D8                     l469:
  8796                           
  8797                           ; BSR set to: 1
  8798                           ;settings.c: 22: if (port[1].ctmu.flag.press) {
  8799  0148D8  0101               	movlb	1	; () banked
  8800  0148DA  A146               	btfss	(_port+25)& (0+255),0,b
  8801  0148DC  D00A               	goto	l11059
  8802                           
  8803                           ; BSR set to: 1
  8804                           ;settings.c: 23: port[1].ctmu.flag.press = 0;
  8805  0148DE  0101               	movlb	1	; () banked
  8806  0148E0  9146               	bcf	(_port+25)& (0+255),0,b
  8807                           
  8808                           ; BSR set to: 1
  8809                           ;settings.c: 24: RTCC_adjust_time_cursor(&now);
  8810  0148E2  0E72               	movlw	low _now
  8811  0148E4  0100               	movlb	0	; () banked
  8812  0148E6  6F60               	movwf	RTCC_adjust_time_cursor@tm& (0+255),b
  8813  0148E8  0E01               	movlw	high _now
  8814  0148EA  0100               	movlb	0	; () banked
  8815  0148EC  6F61               	movwf	(RTCC_adjust_time_cursor@tm+1)& (0+255),b
  8816  0148EE  EC3D  F09E         	call	_RTCC_adjust_time_cursor	;wreg free
  8817  0148F2                     l11059:
  8818                           
  8819                           ;settings.c: 25: }
  8820                           ;settings.c: 26: if (port[2].ctmu.flag.press) {
  8821  0148F2  0101               	movlb	1	; () banked
  8822  0148F4  A15D               	btfss	(_port+48)& (0+255),0,b
  8823  0148F6  D00A               	goto	l11065
  8824                           
  8825                           ; BSR set to: 1
  8826                           ;settings.c: 27: port[2].ctmu.flag.press = 0;
  8827  0148F8  0101               	movlb	1	; () banked
  8828  0148FA  915D               	bcf	(_port+48)& (0+255),0,b
  8829                           
  8830                           ; BSR set to: 1
  8831                           ;settings.c: 28: RTCC_adjust_time_inc(&now);
  8832  0148FC  0E72               	movlw	low _now
  8833  0148FE  0100               	movlb	0	; () banked
  8834  014900  6F91               	movwf	RTCC_adjust_time_inc@tm& (0+255),b
  8835  014902  0E01               	movlw	high _now
  8836  014904  0100               	movlb	0	; () banked
  8837  014906  6F92               	movwf	(RTCC_adjust_time_inc@tm+1)& (0+255),b
  8838  014908  EC37  F08B         	call	_RTCC_adjust_time_inc	;wreg free
  8839  01490C                     l11065:
  8840                           
  8841                           ;settings.c: 29: }
  8842                           ;settings.c: 30: if (port[0].ctmu.flag.press) {
  8843  01490C  0101               	movlb	1	; () banked
  8844  01490E  A12F               	btfss	(_port+2)& (0+255),0,b
  8845  014910  D013               	goto	l468
  8846                           
  8847                           ; BSR set to: 1
  8848                           ;settings.c: 31: port[0].ctmu.flag.press = 0;
  8849  014912  0101               	movlb	1	; () banked
  8850  014914  912F               	bcf	(_port+2)& (0+255),0,b
  8851                           
  8852                           ; BSR set to: 1
  8853                           ;settings.c: 32: RTCC_adjust_time_dec(&now);
  8854  014916  0E72               	movlw	low _now
  8855  014918  0100               	movlb	0	; () banked
  8856  01491A  6F91               	movwf	RTCC_adjust_time_dec@tm& (0+255),b
  8857  01491C  0E01               	movlw	high _now
  8858  01491E  0100               	movlb	0	; () banked
  8859  014920  6F92               	movwf	(RTCC_adjust_time_dec@tm+1)& (0+255),b
  8860  014922  EC89  F08C         	call	_RTCC_adjust_time_dec	;wreg free
  8861                           
  8862                           ;settings.c: 37: }
  8863                           
  8864                           ;settings.c: 36: break;
  8865                           
  8866                           ;settings.c: 35: default:
  8867                           
  8868                           ;settings.c: 33: }
  8869                           ;settings.c: 34: break;
  8870  014926  D008               	goto	l468
  8871  014928                     l11073:
  8872  014928  0101               	movlb	1	; () banked
  8873  01492A  5127               	movf	settings_adjust_time@state& (0+255),w,b
  8874                           
  8875                           ; Switch size 1, requested type "space"
  8876                           ; Number of cases is 2, Range of values is 0 to 1
  8877                           ; switch strategies available:
  8878                           ; Name         Instructions Cycles
  8879                           ; simple_byte            7     4 (average)
  8880                           ;	Chosen strategy is simple_byte
  8881  01492C  0A00               	xorlw	0	; case 0
  8882  01492E  B4D8               	btfsc	status,2,c
  8883  014930  D7B8               	goto	l11049
  8884  014932  0A01               	xorlw	1	; case 1
  8885  014934  B4D8               	btfsc	status,2,c
  8886  014936  D7D0               	goto	l469
  8887  014938                     l468:
  8888                           
  8889                           ;settings.c: 38: if (ctmu_m.flag.press) {
  8890  014938  A029               	btfss	_ctmu_m+2,0,c
  8891  01493A  D01D               	goto	l11083
  8892                           
  8893                           ;settings.c: 39: ctmu_m.flags = 0;
  8894  01493C  0E00               	movlw	0
  8895  01493E  6E2A               	movwf	_ctmu_m+3,c
  8896  014940  0E00               	movlw	0
  8897  014942  6E29               	movwf	_ctmu_m+2,c
  8898                           
  8899                           ;settings.c: 40: now.edit.flags = 0;
  8900  014944  0E00               	movlw	0
  8901  014946  0101               	movlb	1	; () banked
  8902  014948  6F7F               	movwf	(_now+13)& (0+255),b
  8903                           
  8904                           ;settings.c: 41: state = 0;
  8905  01494A  0E00               	movlw	0
  8906  01494C  0101               	movlb	1	; () banked
  8907  01494E  6F27               	movwf	settings_adjust_time@state& (0+255),b
  8908                           
  8909                           ;settings.c: 42: settings_flag = 0;
  8910  014950  0E00               	movlw	0
  8911  014952  6E21               	movwf	_settings_flag,c
  8912                           
  8913                           ; BSR set to: 1
  8914                           ;settings.c: 43: display(PRINT_TIME, "", "");
  8915  014954  0EE6               	movlw	low (STR_96+3)
  8916  014956  0100               	movlb	0	; () banked
  8917  014958  6F60               	movwf	display@str0& (0+255),b
  8918  01495A  0EFF               	movlw	high (STR_96+3)
  8919  01495C  0100               	movlb	0	; () banked
  8920  01495E  6F61               	movwf	(display@str0+1)& (0+255),b
  8921  014960  0EE6               	movlw	low (STR_96+3)
  8922  014962  0100               	movlb	0	; () banked
  8923  014964  6F62               	movwf	display@str1& (0+255),b
  8924  014966  0EFF               	movlw	high (STR_96+3)
  8925  014968  0100               	movlb	0	; () banked
  8926  01496A  6F63               	movwf	(display@str1+1)& (0+255),b
  8927  01496C  0E01               	movlw	1
  8928  01496E  ECEA  F09B         	call	_display
  8929                           
  8930                           ;settings.c: 44: return 1;
  8931  014972  0E01               	movlw	1
  8932  014974  0012               	return	
  8933  014976                     l11083:
  8934                           
  8935                           ;settings.c: 45: }
  8936                           ;settings.c: 46: return 0;
  8937  014976  0E00               	movlw	0
  8938  014978  0012               	return	
  8939  01497A                     __end_of_settings_adjust_time:
  8940                           	opt stack 0
  8941                           tblptru	equ	0xFF8
  8942                           tblptrh	equ	0xFF7
  8943                           tblptrl	equ	0xFF6
  8944                           tablat	equ	0xFF5
  8945                           prodh	equ	0xFF4
  8946                           prodl	equ	0xFF3
  8947                           intcon	equ	0xFF2
  8948                           postinc0	equ	0xFEE
  8949                           wreg	equ	0xFE8
  8950                           postinc1	equ	0xFE6
  8951                           postdec1	equ	0xFE5
  8952                           fsr1h	equ	0xFE2
  8953                           fsr1l	equ	0xFE1
  8954                           indf2	equ	0xFDF
  8955                           postinc2	equ	0xFDE
  8956                           postdec2	equ	0xFDD
  8957                           fsr2h	equ	0xFDA
  8958                           fsr2l	equ	0xFD9
  8959                           status	equ	0xFD8
  8960                           
  8961 ;; *************** function _RTCC_adjust_time_toggle *****************
  8962 ;; Defined at:
  8963 ;;		line 262 in file "../../../My_library/My_RTCC.c"
  8964 ;; Parameters:    Size  Location     Type
  8965 ;;  tm              2    0[BANK0 ] PTR struct .
  8966 ;;		 -> now(14), 
  8967 ;; Auto vars:     Size  Location     Type
  8968 ;;		None
  8969 ;; Return value:  Size  Location     Type
  8970 ;;		None               void
  8971 ;; Registers used:
  8972 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8973 ;; Tracked objects:
  8974 ;;		On entry : 0/0
  8975 ;;		On exit  : 0/0
  8976 ;;		Unchanged: 0/0
  8977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8978 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8981 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8982 ;;Total ram usage:        2 bytes
  8983 ;; Hardware stack levels used:    1
  8984 ;; Hardware stack levels required when called:   11
  8985 ;; This function calls:
  8986 ;;		Nothing
  8987 ;; This function is called by:
  8988 ;;		_settings_adjust_time
  8989 ;;		_RTCC_adjust_time_button
  8990 ;; This function uses a non-reentrant model
  8991 ;;
  8992                           
  8993                           	psect	text22
  8994  016676                     __ptext22:
  8995                           	opt stack 0
  8996  016676                     _RTCC_adjust_time_toggle:
  8997                           	opt stack 16
  8998                           
  8999                           ;My_RTCC.c: 263: if (tm->edit.flags) {
  9000                           
  9001                           ;incstack = 0
  9002  016676  0100               	movlb	0	; () banked
  9003  016678  EE20 F00D          	lfsr	2,13
  9004  01667C  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9005  01667E  26D9               	addwf	fsr2l,f,c
  9006  016680  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9007  016682  22DA               	addwfc	fsr2h,f,c
  9008  016684  50DF               	movf	indf2,w,c
  9009  016686  B4D8               	btfsc	status,2,c
  9010  016688  D00A               	goto	l10697
  9011                           
  9012                           ; BSR set to: 0
  9013                           ;My_RTCC.c: 264: tm->edit.flags = 0;
  9014  01668A  0100               	movlb	0	; () banked
  9015  01668C  EE20 F00D          	lfsr	2,13
  9016  016690  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9017  016692  26D9               	addwf	fsr2l,f,c
  9018  016694  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9019  016696  22DA               	addwfc	fsr2h,f,c
  9020  016698  0E00               	movlw	0
  9021  01669A  6EDF               	movwf	indf2,c
  9022                           
  9023                           ;My_RTCC.c: 265: } else {
  9024  01669C  0012               	return	
  9025  01669E                     l10697:
  9026                           
  9027                           ; BSR set to: 0
  9028                           ;My_RTCC.c: 266: tm->edit.flag.ss = 1;
  9029  01669E  0100               	movlb	0	; () banked
  9030  0166A0  EE20 F00D          	lfsr	2,13
  9031  0166A4  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9032  0166A6  26D9               	addwf	fsr2l,f,c
  9033  0166A8  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9034  0166AA  22DA               	addwfc	fsr2h,f,c
  9035  0166AC  0100               	movlb	0	; () banked
  9036  0166AE  80DF               	bsf	indf2,0,c
  9037  0166B0  0012               	return	
  9038  0166B2                     __end_of_RTCC_adjust_time_toggle:
  9039                           	opt stack 0
  9040                           tblptru	equ	0xFF8
  9041                           tblptrh	equ	0xFF7
  9042                           tblptrl	equ	0xFF6
  9043                           tablat	equ	0xFF5
  9044                           prodh	equ	0xFF4
  9045                           prodl	equ	0xFF3
  9046                           intcon	equ	0xFF2
  9047                           postinc0	equ	0xFEE
  9048                           wreg	equ	0xFE8
  9049                           postinc1	equ	0xFE6
  9050                           postdec1	equ	0xFE5
  9051                           fsr1h	equ	0xFE2
  9052                           fsr1l	equ	0xFE1
  9053                           indf2	equ	0xFDF
  9054                           postinc2	equ	0xFDE
  9055                           postdec2	equ	0xFDD
  9056                           fsr2h	equ	0xFDA
  9057                           fsr2l	equ	0xFD9
  9058                           status	equ	0xFD8
  9059                           
  9060 ;; *************** function _RTCC_adjust_time_inc *****************
  9061 ;; Defined at:
  9062 ;;		line 280 in file "../../../My_library/My_RTCC.c"
  9063 ;; Parameters:    Size  Location     Type
  9064 ;;  tm              2   49[BANK0 ] PTR struct .
  9065 ;;		 -> now(14), 
  9066 ;; Auto vars:     Size  Location     Type
  9067 ;;  i               1   55[BANK0 ] unsigned char 
  9068 ;;  i               1   56[BANK0 ] unsigned char 
  9069 ;; Return value:  Size  Location     Type
  9070 ;;		None               void
  9071 ;; Registers used:
  9072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9073 ;; Tracked objects:
  9074 ;;		On entry : 0/0
  9075 ;;		On exit  : 0/0
  9076 ;;		Unchanged: 0/0
  9077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9078 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9079 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9080 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9081 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9082 ;;Total ram usage:        8 bytes
  9083 ;; Hardware stack levels used:    1
  9084 ;; Hardware stack levels required when called:   15
  9085 ;; This function calls:
  9086 ;;		_RTCC_from_RTCC
  9087 ;;		_RTCC_from_epoch
  9088 ;;		___lmul
  9089 ;;		_month_length
  9090 ;; This function is called by:
  9091 ;;		_settings_adjust_time
  9092 ;;		_RTCC_adjust_time_button
  9093 ;; This function uses a non-reentrant model
  9094 ;;
  9095                           
  9096                           	psect	text23
  9097  01166E                     __ptext23:
  9098                           	opt stack 0
  9099  01166E                     _RTCC_adjust_time_inc:
  9100                           	opt stack 12
  9101                           
  9102                           ;My_RTCC.c: 281: RTCC_from_RTCC(tm);
  9103                           
  9104                           ; BSR set to: 0
  9105                           ;incstack = 0
  9106  01166E  C091  F086         	movff	RTCC_adjust_time_inc@tm,RTCC_from_RTCC@tm
  9107  011672  C092  F087         	movff	RTCC_adjust_time_inc@tm+1,RTCC_from_RTCC@tm+1
  9108  011676  EC24  F0B6         	call	_RTCC_from_RTCC	;wreg free
  9109                           
  9110                           ;My_RTCC.c: 282: if (tm->edit.flag.ss) tm->epoch += 1;
  9111  01167A  0100               	movlb	0	; () banked
  9112  01167C  EE20 F00D          	lfsr	2,13
  9113  011680  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9114  011682  26D9               	addwf	fsr2l,f,c
  9115  011684  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9116  011686  22DA               	addwfc	fsr2h,f,c
  9117  011688  0100               	movlb	0	; () banked
  9118  01168A  A0DF               	btfss	indf2,0,c
  9119  01168C  D009               	goto	l980
  9120                           
  9121                           ; BSR set to: 0
  9122  01168E  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9123  011692  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9124  011696  2ADE               	incf	postinc2,f,c
  9125  011698  0E00               	movlw	0
  9126  01169A  22DE               	addwfc	postinc2,f,c
  9127  01169C  22DE               	addwfc	postinc2,f,c
  9128  01169E  22DE               	addwfc	postinc2,f,c
  9129  0116A0                     l980:
  9130                           
  9131                           ; BSR set to: 0
  9132                           ;My_RTCC.c: 283: if (tm->edit.flag.mm) tm->epoch += ((epoch_t)60);
  9133  0116A0  0100               	movlb	0	; () banked
  9134  0116A2  EE20 F00D          	lfsr	2,13
  9135  0116A6  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9136  0116A8  26D9               	addwf	fsr2l,f,c
  9137  0116AA  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9138  0116AC  22DA               	addwfc	fsr2h,f,c
  9139  0116AE  0100               	movlb	0	; () banked
  9140  0116B0  A2DF               	btfss	indf2,1,c
  9141  0116B2  D00A               	goto	l10733
  9142                           
  9143                           ; BSR set to: 0
  9144  0116B4  0E3C               	movlw	60
  9145  0116B6  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9146  0116BA  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9147  0116BE  26DE               	addwf	postinc2,f,c
  9148  0116C0  0E00               	movlw	0
  9149  0116C2  22DE               	addwfc	postinc2,f,c
  9150  0116C4  22DE               	addwfc	postinc2,f,c
  9151  0116C6  22DE               	addwfc	postinc2,f,c
  9152  0116C8                     l10733:
  9153                           
  9154                           ; BSR set to: 0
  9155                           ;My_RTCC.c: 284: if (tm->edit.flag.hh) tm->epoch += ((epoch_t)60*60);
  9156  0116C8  0100               	movlb	0	; () banked
  9157  0116CA  EE20 F00D          	lfsr	2,13
  9158  0116CE  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9159  0116D0  26D9               	addwf	fsr2l,f,c
  9160  0116D2  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9161  0116D4  22DA               	addwfc	fsr2h,f,c
  9162  0116D6  0100               	movlb	0	; () banked
  9163  0116D8  A4DF               	btfss	indf2,2,c
  9164  0116DA  D00C               	goto	l10737
  9165                           
  9166                           ; BSR set to: 0
  9167  0116DC  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9168  0116E0  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9169  0116E4  0E10               	movlw	16
  9170  0116E6  26DE               	addwf	postinc2,f,c
  9171  0116E8  0E0E               	movlw	14
  9172  0116EA  22DE               	addwfc	postinc2,f,c
  9173  0116EC  0E00               	movlw	0
  9174  0116EE  22DE               	addwfc	postinc2,f,c
  9175  0116F0  0E00               	movlw	0
  9176  0116F2  22DE               	addwfc	postinc2,f,c
  9177  0116F4                     l10737:
  9178                           
  9179                           ; BSR set to: 0
  9180                           ;My_RTCC.c: 285: if (tm->edit.flag.DD) tm->epoch += ((epoch_t)60*60*24);
  9181  0116F4  0100               	movlb	0	; () banked
  9182  0116F6  EE20 F00D          	lfsr	2,13
  9183  0116FA  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9184  0116FC  26D9               	addwf	fsr2l,f,c
  9185  0116FE  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9186  011700  22DA               	addwfc	fsr2h,f,c
  9187  011702  0100               	movlb	0	; () banked
  9188  011704  A6DF               	btfss	indf2,3,c
  9189  011706  D00C               	goto	l10741
  9190                           
  9191                           ; BSR set to: 0
  9192  011708  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9193  01170C  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9194  011710  0E80               	movlw	128
  9195  011712  26DE               	addwf	postinc2,f,c
  9196  011714  0E51               	movlw	81
  9197  011716  22DE               	addwfc	postinc2,f,c
  9198  011718  0E01               	movlw	1
  9199  01171A  22DE               	addwfc	postinc2,f,c
  9200  01171C  0E00               	movlw	0
  9201  01171E  22DE               	addwfc	postinc2,f,c
  9202  011720                     l10741:
  9203                           
  9204                           ; BSR set to: 0
  9205                           ;My_RTCC.c: 286: if (tm->edit.flag.MM) tm->epoch += ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  9206  011720  0100               	movlb	0	; () banked
  9207  011722  EE20 F00D          	lfsr	2,13
  9208  011726  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9209  011728  26D9               	addwf	fsr2l,f,c
  9210  01172A  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9211  01172C  22DA               	addwfc	fsr2h,f,c
  9212  01172E  0100               	movlb	0	; () banked
  9213  011730  A8DF               	btfss	indf2,4,c
  9214  011732  D038               	goto	l10745
  9215                           
  9216                           ; BSR set to: 0
  9217  011734  0100               	movlb	0	; () banked
  9218  011736  EE20 F009          	lfsr	2,9
  9219  01173A  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9220  01173C  26D9               	addwf	fsr2l,f,c
  9221  01173E  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9222  011740  22DA               	addwfc	fsr2h,f,c
  9223  011742  50DF               	movf	indf2,w,c
  9224  011744  0100               	movlb	0	; () banked
  9225  011746  6F66               	movwf	month_length@month& (0+255),b
  9226  011748  0100               	movlb	0	; () banked
  9227  01174A  EE20 F00A          	lfsr	2,10
  9228  01174E  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9229  011750  26D9               	addwf	fsr2l,f,c
  9230  011752  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9231  011754  22DA               	addwfc	fsr2h,f,c
  9232  011756  50DF               	movf	indf2,w,c
  9233  011758  ECE1  F0A3         	call	_month_length
  9234  01175C  0100               	movlb	0	; () banked
  9235  01175E  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9236  011760  0100               	movlb	0	; () banked
  9237  011762  5193               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  9238  011764  0100               	movlb	0	; () banked
  9239  011766  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9240  011768  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9241  01176A  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9242  01176C  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9243  01176E  0E80               	movlw	128
  9244  011770  0100               	movlb	0	; () banked
  9245  011772  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9246  011774  0E51               	movlw	81
  9247  011776  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9248  011778  0E01               	movlw	1
  9249  01177A  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9250  01177C  0E00               	movlw	0
  9251  01177E  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9252  011780  EC83  F0AF         	call	___lmul	;wreg free
  9253  011784  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9254  011788  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9255  01178C  0100               	movlb	0	; () banked
  9256  01178E  516D               	movf	?___lmul& (0+255),w,b
  9257  011790  26DE               	addwf	postinc2,f,c
  9258  011792  0100               	movlb	0	; () banked
  9259  011794  516E               	movf	(?___lmul+1)& (0+255),w,b
  9260  011796  22DE               	addwfc	postinc2,f,c
  9261  011798  0100               	movlb	0	; () banked
  9262  01179A  516F               	movf	(?___lmul+2)& (0+255),w,b
  9263  01179C  22DE               	addwfc	postinc2,f,c
  9264  01179E  0100               	movlb	0	; () banked
  9265  0117A0  5170               	movf	(?___lmul+3)& (0+255),w,b
  9266  0117A2  22DE               	addwfc	postinc2,f,c
  9267  0117A4                     l10745:
  9268                           
  9269                           ; BSR set to: 0
  9270                           ;My_RTCC.c: 287: if (tm->edit.flag.YY) {
  9271  0117A4  0100               	movlb	0	; () banked
  9272  0117A6  EE20 F00D          	lfsr	2,13
  9273  0117AA  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9274  0117AC  26D9               	addwf	fsr2l,f,c
  9275  0117AE  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9276  0117B0  22DA               	addwfc	fsr2h,f,c
  9277  0117B2  0100               	movlb	0	; () banked
  9278  0117B4  AADF               	btfss	indf2,5,c
  9279  0117B6  D088               	goto	l10767
  9280                           
  9281                           ; BSR set to: 0
  9282                           ;My_RTCC.c: 288: for (uint8_t i = tm->MM; i <= 12; i++) {
  9283  0117B8  0100               	movlb	0	; () banked
  9284  0117BA  EE20 F009          	lfsr	2,9
  9285  0117BE  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9286  0117C0  26D9               	addwf	fsr2l,f,c
  9287  0117C2  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9288  0117C4  22DA               	addwfc	fsr2h,f,c
  9289  0117C6  50DF               	movf	indf2,w,c
  9290  0117C8  0100               	movlb	0	; () banked
  9291  0117CA  6F98               	movwf	RTCC_adjust_time_inc@i& (0+255),b
  9292  0117CC                     l10749:
  9293                           
  9294                           ; BSR set to: 0
  9295  0117CC  0E0C               	movlw	12
  9296  0117CE  0100               	movlb	0	; () banked
  9297  0117D0  6598               	cpfsgt	RTCC_adjust_time_inc@i& (0+255),b
  9298  0117D2  D001               	goto	l10753
  9299  0117D4  D033               	goto	l10759
  9300  0117D6                     l10753:
  9301                           
  9302                           ; BSR set to: 0
  9303                           ;My_RTCC.c: 289: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY, i);
  9304  0117D6  C098  F066         	movff	RTCC_adjust_time_inc@i,month_length@month
  9305  0117DA  0100               	movlb	0	; () banked
  9306  0117DC  EE20 F00A          	lfsr	2,10
  9307  0117E0  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9308  0117E2  26D9               	addwf	fsr2l,f,c
  9309  0117E4  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9310  0117E6  22DA               	addwfc	fsr2h,f,c
  9311  0117E8  50DF               	movf	indf2,w,c
  9312  0117EA  ECE1  F0A3         	call	_month_length
  9313  0117EE  0100               	movlb	0	; () banked
  9314  0117F0  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9315  0117F2  0100               	movlb	0	; () banked
  9316  0117F4  5193               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  9317  0117F6  0100               	movlb	0	; () banked
  9318  0117F8  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9319  0117FA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9320  0117FC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9321  0117FE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9322  011800  0E80               	movlw	128
  9323  011802  0100               	movlb	0	; () banked
  9324  011804  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9325  011806  0E51               	movlw	81
  9326  011808  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9327  01180A  0E01               	movlw	1
  9328  01180C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9329  01180E  0E00               	movlw	0
  9330  011810  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9331  011812  EC83  F0AF         	call	___lmul	;wreg free
  9332  011816  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9333  01181A  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9334  01181E  0100               	movlb	0	; () banked
  9335  011820  516D               	movf	?___lmul& (0+255),w,b
  9336  011822  26DE               	addwf	postinc2,f,c
  9337  011824  0100               	movlb	0	; () banked
  9338  011826  516E               	movf	(?___lmul+1)& (0+255),w,b
  9339  011828  22DE               	addwfc	postinc2,f,c
  9340  01182A  0100               	movlb	0	; () banked
  9341  01182C  516F               	movf	(?___lmul+2)& (0+255),w,b
  9342  01182E  22DE               	addwfc	postinc2,f,c
  9343  011830  0100               	movlb	0	; () banked
  9344  011832  5170               	movf	(?___lmul+3)& (0+255),w,b
  9345  011834  22DE               	addwfc	postinc2,f,c
  9346                           
  9347                           ; BSR set to: 0
  9348  011836  0100               	movlb	0	; () banked
  9349  011838  2B98               	incf	RTCC_adjust_time_inc@i& (0+255),f,b
  9350  01183A  D7C8               	goto	l10749
  9351  01183C                     l10759:
  9352                           
  9353                           ; BSR set to: 0
  9354                           ;My_RTCC.c: 290: }
  9355                           ;My_RTCC.c: 291: for (uint8_t i = 1; i < tm->MM; i++) {
  9356  01183C  0E01               	movlw	1
  9357  01183E  0100               	movlb	0	; () banked
  9358  011840  6F97               	movwf	RTCC_adjust_time_inc@i_3279& (0+255),b
  9359  011842  D036               	goto	l10765
  9360  011844                     l10761:
  9361                           
  9362                           ; BSR set to: 0
  9363                           ;My_RTCC.c: 292: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY + 1, i);
  9364  011844  C097  F066         	movff	RTCC_adjust_time_inc@i_3279,month_length@month
  9365  011848  0100               	movlb	0	; () banked
  9366  01184A  EE20 F00A          	lfsr	2,10
  9367  01184E  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9368  011850  26D9               	addwf	fsr2l,f,c
  9369  011852  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9370  011854  22DA               	addwfc	fsr2h,f,c
  9371  011856  50DF               	movf	indf2,w,c
  9372  011858  0100               	movlb	0	; () banked
  9373  01185A  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9374  01185C  0100               	movlb	0	; () banked
  9375  01185E  2993               	incf	??_RTCC_adjust_time_inc& (0+255),w,b
  9376  011860  ECE1  F0A3         	call	_month_length
  9377  011864  0100               	movlb	0	; () banked
  9378  011866  6F94               	movwf	(??_RTCC_adjust_time_inc+1)& (0+255),b
  9379  011868  0100               	movlb	0	; () banked
  9380  01186A  5194               	movf	(??_RTCC_adjust_time_inc+1)& (0+255),w,b
  9381  01186C  0100               	movlb	0	; () banked
  9382  01186E  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9383  011870  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9384  011872  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9385  011874  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9386  011876  0E80               	movlw	128
  9387  011878  0100               	movlb	0	; () banked
  9388  01187A  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9389  01187C  0E51               	movlw	81
  9390  01187E  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9391  011880  0E01               	movlw	1
  9392  011882  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9393  011884  0E00               	movlw	0
  9394  011886  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9395  011888  EC83  F0AF         	call	___lmul	;wreg free
  9396  01188C  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9397  011890  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9398  011894  0100               	movlb	0	; () banked
  9399  011896  516D               	movf	?___lmul& (0+255),w,b
  9400  011898  26DE               	addwf	postinc2,f,c
  9401  01189A  0100               	movlb	0	; () banked
  9402  01189C  516E               	movf	(?___lmul+1)& (0+255),w,b
  9403  01189E  22DE               	addwfc	postinc2,f,c
  9404  0118A0  0100               	movlb	0	; () banked
  9405  0118A2  516F               	movf	(?___lmul+2)& (0+255),w,b
  9406  0118A4  22DE               	addwfc	postinc2,f,c
  9407  0118A6  0100               	movlb	0	; () banked
  9408  0118A8  5170               	movf	(?___lmul+3)& (0+255),w,b
  9409  0118AA  22DE               	addwfc	postinc2,f,c
  9410                           
  9411                           ; BSR set to: 0
  9412  0118AC  0100               	movlb	0	; () banked
  9413  0118AE  2B97               	incf	RTCC_adjust_time_inc@i_3279& (0+255),f,b
  9414  0118B0                     l10765:
  9415                           
  9416                           ; BSR set to: 0
  9417  0118B0  0100               	movlb	0	; () banked
  9418  0118B2  EE20 F009          	lfsr	2,9
  9419  0118B6  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9420  0118B8  26D9               	addwf	fsr2l,f,c
  9421  0118BA  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9422  0118BC  22DA               	addwfc	fsr2h,f,c
  9423  0118BE  50DE               	movf	postinc2,w,c
  9424  0118C0  0100               	movlb	0	; () banked
  9425  0118C2  5D97               	subwf	RTCC_adjust_time_inc@i_3279& (0+255),w,b
  9426  0118C4  A0D8               	btfss	status,0,c
  9427  0118C6  D7BE               	goto	l10761
  9428  0118C8                     l10767:
  9429                           
  9430                           ; BSR set to: 0
  9431                           ;My_RTCC.c: 293: }
  9432                           ;My_RTCC.c: 294: }
  9433                           ;My_RTCC.c: 296: if (tm->epoch >= 3155760000)tm->epoch -= 3155760000;
  9434  0118C8  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9435  0118CC  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9436  0118D0  0E80               	movlw	128
  9437  0118D2  5CDE               	subwf	postinc2,w,c
  9438  0118D4  0E13               	movlw	19
  9439  0118D6  58DE               	subwfb	postinc2,w,c
  9440  0118D8  0E19               	movlw	25
  9441  0118DA  58DE               	subwfb	postinc2,w,c
  9442  0118DC  0EBC               	movlw	188
  9443  0118DE  58DE               	subwfb	postinc2,w,c
  9444  0118E0  A0D8               	btfss	status,0,c
  9445  0118E2  D00C               	goto	l10771
  9446                           
  9447                           ; BSR set to: 0
  9448  0118E4  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9449  0118E8  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9450  0118EC  0E80               	movlw	128
  9451  0118EE  5EDE               	subwf	postinc2,f,c
  9452  0118F0  0E13               	movlw	19
  9453  0118F2  5ADE               	subwfb	postinc2,f,c
  9454  0118F4  0E19               	movlw	25
  9455  0118F6  5ADE               	subwfb	postinc2,f,c
  9456  0118F8  0EBC               	movlw	188
  9457  0118FA  5ADE               	subwfb	postinc2,f,c
  9458  0118FC                     l10771:
  9459                           
  9460                           ; BSR set to: 0
  9461                           ;My_RTCC.c: 297: RTCC_from_epoch(&now);
  9462  0118FC  0E72               	movlw	low _now
  9463  0118FE  0100               	movlb	0	; () banked
  9464  011900  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  9465  011902  0E01               	movlw	high _now
  9466  011904  0100               	movlb	0	; () banked
  9467  011906  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  9468  011908  EC0A  F0B6         	call	_RTCC_from_epoch	;wreg free
  9469                           
  9470                           ;My_RTCC.c: 298: time_change_flag = 1;
  9471  01190C  0E01               	movlw	1
  9472  01190E  6E25               	movwf	_time_change_flag,c
  9473  011910  0012               	return		;funcret
  9474  011912                     __end_of_RTCC_adjust_time_inc:
  9475                           	opt stack 0
  9476                           tblptru	equ	0xFF8
  9477                           tblptrh	equ	0xFF7
  9478                           tblptrl	equ	0xFF6
  9479                           tablat	equ	0xFF5
  9480                           prodh	equ	0xFF4
  9481                           prodl	equ	0xFF3
  9482                           intcon	equ	0xFF2
  9483                           postinc0	equ	0xFEE
  9484                           wreg	equ	0xFE8
  9485                           postinc1	equ	0xFE6
  9486                           postdec1	equ	0xFE5
  9487                           fsr1h	equ	0xFE2
  9488                           fsr1l	equ	0xFE1
  9489                           indf2	equ	0xFDF
  9490                           postinc2	equ	0xFDE
  9491                           postdec2	equ	0xFDD
  9492                           fsr2h	equ	0xFDA
  9493                           fsr2l	equ	0xFD9
  9494                           status	equ	0xFD8
  9495                           
  9496 ;; *************** function _RTCC_adjust_time_dec *****************
  9497 ;; Defined at:
  9498 ;;		line 301 in file "../../../My_library/My_RTCC.c"
  9499 ;; Parameters:    Size  Location     Type
  9500 ;;  tm              2   49[BANK0 ] PTR struct .
  9501 ;;		 -> now(14), 
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;  i               1   55[BANK0 ] unsigned char 
  9504 ;;  i               1   56[BANK0 ] unsigned char 
  9505 ;; Return value:  Size  Location     Type
  9506 ;;		None               void
  9507 ;; Registers used:
  9508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9509 ;; Tracked objects:
  9510 ;;		On entry : 0/0
  9511 ;;		On exit  : 0/0
  9512 ;;		Unchanged: 0/0
  9513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9514 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9515 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9516 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9517 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9518 ;;Total ram usage:        8 bytes
  9519 ;; Hardware stack levels used:    1
  9520 ;; Hardware stack levels required when called:   15
  9521 ;; This function calls:
  9522 ;;		_RTCC_from_RTCC
  9523 ;;		_RTCC_from_epoch
  9524 ;;		___lmul
  9525 ;;		_month_length
  9526 ;; This function is called by:
  9527 ;;		_settings_adjust_time
  9528 ;;		_RTCC_adjust_time_button
  9529 ;; This function uses a non-reentrant model
  9530 ;;
  9531                           
  9532                           	psect	text24
  9533  011912                     __ptext24:
  9534                           	opt stack 0
  9535  011912                     _RTCC_adjust_time_dec:
  9536                           	opt stack 12
  9537                           
  9538                           ;My_RTCC.c: 302: RTCC_from_RTCC(tm);
  9539                           
  9540                           ;incstack = 0
  9541  011912  C091  F086         	movff	RTCC_adjust_time_dec@tm,RTCC_from_RTCC@tm
  9542  011916  C092  F087         	movff	RTCC_adjust_time_dec@tm+1,RTCC_from_RTCC@tm+1
  9543  01191A  EC24  F0B6         	call	_RTCC_from_RTCC	;wreg free
  9544                           
  9545                           ;My_RTCC.c: 303: if (tm->edit.flag.ss) tm->epoch -= 1;
  9546  01191E  0100               	movlb	0	; () banked
  9547  011920  EE20 F00D          	lfsr	2,13
  9548  011924  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9549  011926  26D9               	addwf	fsr2l,f,c
  9550  011928  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9551  01192A  22DA               	addwfc	fsr2h,f,c
  9552  01192C  0100               	movlb	0	; () banked
  9553  01192E  A0DF               	btfss	indf2,0,c
  9554  011930  D009               	goto	l995
  9555                           
  9556                           ; BSR set to: 0
  9557  011932  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9558  011936  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9559  01193A  06DE               	decf	postinc2,f,c
  9560  01193C  0E00               	movlw	0
  9561  01193E  5ADE               	subwfb	postinc2,f,c
  9562  011940  5ADE               	subwfb	postinc2,f,c
  9563  011942  5ADE               	subwfb	postinc2,f,c
  9564  011944                     l995:
  9565                           
  9566                           ; BSR set to: 0
  9567                           ;My_RTCC.c: 304: if (tm->edit.flag.mm) tm->epoch -= ((epoch_t)60);
  9568  011944  0100               	movlb	0	; () banked
  9569  011946  EE20 F00D          	lfsr	2,13
  9570  01194A  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9571  01194C  26D9               	addwf	fsr2l,f,c
  9572  01194E  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9573  011950  22DA               	addwfc	fsr2h,f,c
  9574  011952  0100               	movlb	0	; () banked
  9575  011954  A2DF               	btfss	indf2,1,c
  9576  011956  D00A               	goto	l10783
  9577                           
  9578                           ; BSR set to: 0
  9579  011958  0E3C               	movlw	60
  9580  01195A  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9581  01195E  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9582  011962  5EDE               	subwf	postinc2,f,c
  9583  011964  0E00               	movlw	0
  9584  011966  5ADE               	subwfb	postinc2,f,c
  9585  011968  5ADE               	subwfb	postinc2,f,c
  9586  01196A  5ADE               	subwfb	postinc2,f,c
  9587  01196C                     l10783:
  9588                           
  9589                           ; BSR set to: 0
  9590                           ;My_RTCC.c: 305: if (tm->edit.flag.hh) tm->epoch -= ((epoch_t)60*60);
  9591  01196C  0100               	movlb	0	; () banked
  9592  01196E  EE20 F00D          	lfsr	2,13
  9593  011972  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9594  011974  26D9               	addwf	fsr2l,f,c
  9595  011976  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9596  011978  22DA               	addwfc	fsr2h,f,c
  9597  01197A  0100               	movlb	0	; () banked
  9598  01197C  A4DF               	btfss	indf2,2,c
  9599  01197E  D00C               	goto	l10787
  9600                           
  9601                           ; BSR set to: 0
  9602  011980  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9603  011984  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9604  011988  0E10               	movlw	16
  9605  01198A  5EDE               	subwf	postinc2,f,c
  9606  01198C  0E0E               	movlw	14
  9607  01198E  5ADE               	subwfb	postinc2,f,c
  9608  011990  0E00               	movlw	0
  9609  011992  5ADE               	subwfb	postinc2,f,c
  9610  011994  0E00               	movlw	0
  9611  011996  5ADE               	subwfb	postinc2,f,c
  9612  011998                     l10787:
  9613                           
  9614                           ; BSR set to: 0
  9615                           ;My_RTCC.c: 306: if (tm->edit.flag.DD) tm->epoch -= ((epoch_t)60*60*24);
  9616  011998  0100               	movlb	0	; () banked
  9617  01199A  EE20 F00D          	lfsr	2,13
  9618  01199E  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9619  0119A0  26D9               	addwf	fsr2l,f,c
  9620  0119A2  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9621  0119A4  22DA               	addwfc	fsr2h,f,c
  9622  0119A6  0100               	movlb	0	; () banked
  9623  0119A8  A6DF               	btfss	indf2,3,c
  9624  0119AA  D00C               	goto	l10791
  9625                           
  9626                           ; BSR set to: 0
  9627  0119AC  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9628  0119B0  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9629  0119B4  0E80               	movlw	128
  9630  0119B6  5EDE               	subwf	postinc2,f,c
  9631  0119B8  0E51               	movlw	81
  9632  0119BA  5ADE               	subwfb	postinc2,f,c
  9633  0119BC  0E01               	movlw	1
  9634  0119BE  5ADE               	subwfb	postinc2,f,c
  9635  0119C0  0E00               	movlw	0
  9636  0119C2  5ADE               	subwfb	postinc2,f,c
  9637  0119C4                     l10791:
  9638                           
  9639                           ; BSR set to: 0
  9640                           ;My_RTCC.c: 307: if (tm->edit.flag.MM) tm->epoch -= ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  9641  0119C4  0100               	movlb	0	; () banked
  9642  0119C6  EE20 F00D          	lfsr	2,13
  9643  0119CA  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9644  0119CC  26D9               	addwf	fsr2l,f,c
  9645  0119CE  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9646  0119D0  22DA               	addwfc	fsr2h,f,c
  9647  0119D2  0100               	movlb	0	; () banked
  9648  0119D4  A8DF               	btfss	indf2,4,c
  9649  0119D6  D038               	goto	l10795
  9650                           
  9651                           ; BSR set to: 0
  9652  0119D8  0100               	movlb	0	; () banked
  9653  0119DA  EE20 F009          	lfsr	2,9
  9654  0119DE  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9655  0119E0  26D9               	addwf	fsr2l,f,c
  9656  0119E2  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9657  0119E4  22DA               	addwfc	fsr2h,f,c
  9658  0119E6  50DF               	movf	indf2,w,c
  9659  0119E8  0100               	movlb	0	; () banked
  9660  0119EA  6F66               	movwf	month_length@month& (0+255),b
  9661  0119EC  0100               	movlb	0	; () banked
  9662  0119EE  EE20 F00A          	lfsr	2,10
  9663  0119F2  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9664  0119F4  26D9               	addwf	fsr2l,f,c
  9665  0119F6  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9666  0119F8  22DA               	addwfc	fsr2h,f,c
  9667  0119FA  50DF               	movf	indf2,w,c
  9668  0119FC  ECE1  F0A3         	call	_month_length
  9669  011A00  0100               	movlb	0	; () banked
  9670  011A02  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9671  011A04  0100               	movlb	0	; () banked
  9672  011A06  5193               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  9673  011A08  0100               	movlb	0	; () banked
  9674  011A0A  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9675  011A0C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9676  011A0E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9677  011A10  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9678  011A12  0E80               	movlw	128
  9679  011A14  0100               	movlb	0	; () banked
  9680  011A16  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9681  011A18  0E51               	movlw	81
  9682  011A1A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9683  011A1C  0E01               	movlw	1
  9684  011A1E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9685  011A20  0E00               	movlw	0
  9686  011A22  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9687  011A24  EC83  F0AF         	call	___lmul	;wreg free
  9688  011A28  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9689  011A2C  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9690  011A30  0100               	movlb	0	; () banked
  9691  011A32  516D               	movf	?___lmul& (0+255),w,b
  9692  011A34  5EDE               	subwf	postinc2,f,c
  9693  011A36  0100               	movlb	0	; () banked
  9694  011A38  516E               	movf	(?___lmul+1)& (0+255),w,b
  9695  011A3A  5ADE               	subwfb	postinc2,f,c
  9696  011A3C  0100               	movlb	0	; () banked
  9697  011A3E  516F               	movf	(?___lmul+2)& (0+255),w,b
  9698  011A40  5ADE               	subwfb	postinc2,f,c
  9699  011A42  0100               	movlb	0	; () banked
  9700  011A44  5170               	movf	(?___lmul+3)& (0+255),w,b
  9701  011A46  5ADE               	subwfb	postinc2,f,c
  9702  011A48                     l10795:
  9703                           
  9704                           ; BSR set to: 0
  9705                           ;My_RTCC.c: 308: if (tm->edit.flag.YY) {
  9706  011A48  0100               	movlb	0	; () banked
  9707  011A4A  EE20 F00D          	lfsr	2,13
  9708  011A4E  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9709  011A50  26D9               	addwf	fsr2l,f,c
  9710  011A52  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9711  011A54  22DA               	addwfc	fsr2h,f,c
  9712  011A56  0100               	movlb	0	; () banked
  9713  011A58  AADF               	btfss	indf2,5,c
  9714  011A5A  D088               	goto	l10817
  9715                           
  9716                           ; BSR set to: 0
  9717                           ;My_RTCC.c: 309: for (uint8_t i = tm->MM; i >= 1; i--) {
  9718  011A5C  0100               	movlb	0	; () banked
  9719  011A5E  EE20 F009          	lfsr	2,9
  9720  011A62  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9721  011A64  26D9               	addwf	fsr2l,f,c
  9722  011A66  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9723  011A68  22DA               	addwfc	fsr2h,f,c
  9724  011A6A  50DF               	movf	indf2,w,c
  9725  011A6C  0100               	movlb	0	; () banked
  9726  011A6E  6F98               	movwf	RTCC_adjust_time_dec@i& (0+255),b
  9727  011A70                     l10799:
  9728                           
  9729                           ; BSR set to: 0
  9730  011A70  0100               	movlb	0	; () banked
  9731  011A72  5198               	movf	RTCC_adjust_time_dec@i& (0+255),w,b
  9732  011A74  0100               	movlb	0	; () banked
  9733  011A76  B4D8               	btfsc	status,2,c
  9734  011A78  D033               	goto	l10809
  9735                           
  9736                           ; BSR set to: 0
  9737                           ;My_RTCC.c: 310: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY, i);
  9738                           
  9739                           ; BSR set to: 0
  9740                           
  9741                           ; BSR set to: 0
  9742  011A7A  C098  F066         	movff	RTCC_adjust_time_dec@i,month_length@month
  9743  011A7E  0100               	movlb	0	; () banked
  9744  011A80  EE20 F00A          	lfsr	2,10
  9745  011A84  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9746  011A86  26D9               	addwf	fsr2l,f,c
  9747  011A88  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9748  011A8A  22DA               	addwfc	fsr2h,f,c
  9749  011A8C  50DF               	movf	indf2,w,c
  9750  011A8E  ECE1  F0A3         	call	_month_length
  9751  011A92  0100               	movlb	0	; () banked
  9752  011A94  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9753  011A96  0100               	movlb	0	; () banked
  9754  011A98  5193               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  9755  011A9A  0100               	movlb	0	; () banked
  9756  011A9C  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9757  011A9E  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9758  011AA0  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9759  011AA2  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9760  011AA4  0E80               	movlw	128
  9761  011AA6  0100               	movlb	0	; () banked
  9762  011AA8  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9763  011AAA  0E51               	movlw	81
  9764  011AAC  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9765  011AAE  0E01               	movlw	1
  9766  011AB0  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9767  011AB2  0E00               	movlw	0
  9768  011AB4  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9769  011AB6  EC83  F0AF         	call	___lmul	;wreg free
  9770  011ABA  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9771  011ABE  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9772  011AC2  0100               	movlb	0	; () banked
  9773  011AC4  516D               	movf	?___lmul& (0+255),w,b
  9774  011AC6  5EDE               	subwf	postinc2,f,c
  9775  011AC8  0100               	movlb	0	; () banked
  9776  011ACA  516E               	movf	(?___lmul+1)& (0+255),w,b
  9777  011ACC  5ADE               	subwfb	postinc2,f,c
  9778  011ACE  0100               	movlb	0	; () banked
  9779  011AD0  516F               	movf	(?___lmul+2)& (0+255),w,b
  9780  011AD2  5ADE               	subwfb	postinc2,f,c
  9781  011AD4  0100               	movlb	0	; () banked
  9782  011AD6  5170               	movf	(?___lmul+3)& (0+255),w,b
  9783  011AD8  5ADE               	subwfb	postinc2,f,c
  9784                           
  9785                           ; BSR set to: 0
  9786  011ADA  0100               	movlb	0	; () banked
  9787  011ADC  0798               	decf	RTCC_adjust_time_dec@i& (0+255),f,b
  9788  011ADE  D7C8               	goto	l10799
  9789  011AE0                     l10809:
  9790                           
  9791                           ; BSR set to: 0
  9792                           ;My_RTCC.c: 311: }
  9793                           ;My_RTCC.c: 312: for (uint8_t i = 12; i > tm->MM; i--) {
  9794  011AE0  0E0C               	movlw	12
  9795  011AE2  0100               	movlb	0	; () banked
  9796  011AE4  6F97               	movwf	RTCC_adjust_time_dec@i_3309& (0+255),b
  9797  011AE6  D036               	goto	l10815
  9798  011AE8                     l10811:
  9799                           
  9800                           ; BSR set to: 0
  9801                           ;My_RTCC.c: 313: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY - 1, i);
  9802  011AE8  C097  F066         	movff	RTCC_adjust_time_dec@i_3309,month_length@month
  9803  011AEC  0100               	movlb	0	; () banked
  9804  011AEE  EE20 F00A          	lfsr	2,10
  9805  011AF2  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9806  011AF4  26D9               	addwf	fsr2l,f,c
  9807  011AF6  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9808  011AF8  22DA               	addwfc	fsr2h,f,c
  9809  011AFA  50DF               	movf	indf2,w,c
  9810  011AFC  0100               	movlb	0	; () banked
  9811  011AFE  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9812  011B00  0100               	movlb	0	; () banked
  9813  011B02  0593               	decf	??_RTCC_adjust_time_dec& (0+255),w,b
  9814  011B04  ECE1  F0A3         	call	_month_length
  9815  011B08  0100               	movlb	0	; () banked
  9816  011B0A  6F94               	movwf	(??_RTCC_adjust_time_dec+1)& (0+255),b
  9817  011B0C  0100               	movlb	0	; () banked
  9818  011B0E  5194               	movf	(??_RTCC_adjust_time_dec+1)& (0+255),w,b
  9819  011B10  0100               	movlb	0	; () banked
  9820  011B12  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9821  011B14  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9822  011B16  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9823  011B18  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9824  011B1A  0E80               	movlw	128
  9825  011B1C  0100               	movlb	0	; () banked
  9826  011B1E  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9827  011B20  0E51               	movlw	81
  9828  011B22  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9829  011B24  0E01               	movlw	1
  9830  011B26  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9831  011B28  0E00               	movlw	0
  9832  011B2A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9833  011B2C  EC83  F0AF         	call	___lmul	;wreg free
  9834  011B30  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9835  011B34  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9836  011B38  0100               	movlb	0	; () banked
  9837  011B3A  516D               	movf	?___lmul& (0+255),w,b
  9838  011B3C  5EDE               	subwf	postinc2,f,c
  9839  011B3E  0100               	movlb	0	; () banked
  9840  011B40  516E               	movf	(?___lmul+1)& (0+255),w,b
  9841  011B42  5ADE               	subwfb	postinc2,f,c
  9842  011B44  0100               	movlb	0	; () banked
  9843  011B46  516F               	movf	(?___lmul+2)& (0+255),w,b
  9844  011B48  5ADE               	subwfb	postinc2,f,c
  9845  011B4A  0100               	movlb	0	; () banked
  9846  011B4C  5170               	movf	(?___lmul+3)& (0+255),w,b
  9847  011B4E  5ADE               	subwfb	postinc2,f,c
  9848                           
  9849                           ; BSR set to: 0
  9850  011B50  0100               	movlb	0	; () banked
  9851  011B52  0797               	decf	RTCC_adjust_time_dec@i_3309& (0+255),f,b
  9852  011B54                     l10815:
  9853                           
  9854                           ; BSR set to: 0
  9855  011B54  0100               	movlb	0	; () banked
  9856  011B56  EE20 F009          	lfsr	2,9
  9857  011B5A  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9858  011B5C  26D9               	addwf	fsr2l,f,c
  9859  011B5E  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9860  011B60  22DA               	addwfc	fsr2h,f,c
  9861  011B62  0100               	movlb	0	; () banked
  9862  011B64  5197               	movf	RTCC_adjust_time_dec@i_3309& (0+255),w,b
  9863  011B66  5CDE               	subwf	postinc2,w,c
  9864  011B68  A0D8               	btfss	status,0,c
  9865  011B6A  D7BE               	goto	l10811
  9866  011B6C                     l10817:
  9867                           
  9868                           ; BSR set to: 0
  9869                           ;My_RTCC.c: 314: }
  9870                           ;My_RTCC.c: 315: }
  9871                           ;My_RTCC.c: 317: if (tm->epoch >= 3155760000)tm->epoch += 3155760000;
  9872  011B6C  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9873  011B70  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9874  011B74  0E80               	movlw	128
  9875  011B76  5CDE               	subwf	postinc2,w,c
  9876  011B78  0E13               	movlw	19
  9877  011B7A  58DE               	subwfb	postinc2,w,c
  9878  011B7C  0E19               	movlw	25
  9879  011B7E  58DE               	subwfb	postinc2,w,c
  9880  011B80  0EBC               	movlw	188
  9881  011B82  58DE               	subwfb	postinc2,w,c
  9882  011B84  A0D8               	btfss	status,0,c
  9883  011B86  D00C               	goto	l10821
  9884                           
  9885                           ; BSR set to: 0
  9886  011B88  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9887  011B8C  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9888  011B90  0E80               	movlw	128
  9889  011B92  26DE               	addwf	postinc2,f,c
  9890  011B94  0E13               	movlw	19
  9891  011B96  22DE               	addwfc	postinc2,f,c
  9892  011B98  0E19               	movlw	25
  9893  011B9A  22DE               	addwfc	postinc2,f,c
  9894  011B9C  0EBC               	movlw	188
  9895  011B9E  22DE               	addwfc	postinc2,f,c
  9896  011BA0                     l10821:
  9897                           
  9898                           ; BSR set to: 0
  9899                           ;My_RTCC.c: 318: RTCC_from_epoch(&now);
  9900  011BA0  0E72               	movlw	low _now
  9901  011BA2  0100               	movlb	0	; () banked
  9902  011BA4  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  9903  011BA6  0E01               	movlw	high _now
  9904  011BA8  0100               	movlb	0	; () banked
  9905  011BAA  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  9906  011BAC  EC0A  F0B6         	call	_RTCC_from_epoch	;wreg free
  9907                           
  9908                           ;My_RTCC.c: 319: time_change_flag = 1;
  9909  011BB0  0E01               	movlw	1
  9910  011BB2  6E25               	movwf	_time_change_flag,c
  9911  011BB4  0012               	return		;funcret
  9912  011BB6                     __end_of_RTCC_adjust_time_dec:
  9913                           	opt stack 0
  9914                           tblptru	equ	0xFF8
  9915                           tblptrh	equ	0xFF7
  9916                           tblptrl	equ	0xFF6
  9917                           tablat	equ	0xFF5
  9918                           prodh	equ	0xFF4
  9919                           prodl	equ	0xFF3
  9920                           intcon	equ	0xFF2
  9921                           postinc0	equ	0xFEE
  9922                           wreg	equ	0xFE8
  9923                           postinc1	equ	0xFE6
  9924                           postdec1	equ	0xFE5
  9925                           fsr1h	equ	0xFE2
  9926                           fsr1l	equ	0xFE1
  9927                           indf2	equ	0xFDF
  9928                           postinc2	equ	0xFDE
  9929                           postdec2	equ	0xFDD
  9930                           fsr2h	equ	0xFDA
  9931                           fsr2l	equ	0xFD9
  9932                           status	equ	0xFD8
  9933                           
  9934 ;; *************** function _RTCC_from_epoch *****************
  9935 ;; Defined at:
  9936 ;;		line 204 in file "../../../My_library/My_RTCC.c"
  9937 ;; Parameters:    Size  Location     Type
  9938 ;;  tm              2   47[BANK0 ] PTR struct .
  9939 ;;		 -> now(14), 
  9940 ;; Auto vars:     Size  Location     Type
  9941 ;;		None
  9942 ;; Return value:  Size  Location     Type
  9943 ;;		None               void
  9944 ;; Registers used:
  9945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9946 ;; Tracked objects:
  9947 ;;		On entry : 0/0
  9948 ;;		On exit  : 0/0
  9949 ;;		Unchanged: 0/0
  9950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9951 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9954 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9955 ;;Total ram usage:        2 bytes
  9956 ;; Hardware stack levels used:    1
  9957 ;; Hardware stack levels required when called:   14
  9958 ;; This function calls:
  9959 ;;		_caltime_to_RTCC
  9960 ;;		_epoch_to_caltime
  9961 ;; This function is called by:
  9962 ;;		_software_init
  9963 ;;		_RTCC_adjust_time_inc
  9964 ;;		_RTCC_adjust_time_dec
  9965 ;; This function uses a non-reentrant model
  9966 ;;
  9967                           
  9968                           	psect	text25
  9969  016C14                     __ptext25:
  9970                           	opt stack 0
  9971  016C14                     _RTCC_from_epoch:
  9972                           	opt stack 15
  9973                           
  9974                           ;My_RTCC.c: 205: epoch_to_caltime(tm);
  9975                           
  9976                           ;incstack = 0
  9977  016C14  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
  9978  016C18  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
  9979  016C1C  EC21  F096         	call	_epoch_to_caltime	;wreg free
  9980                           
  9981                           ;My_RTCC.c: 206: caltime_to_RTCC(tm);
  9982  016C20  C08F  F069         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
  9983  016C24  C090  F06A         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
  9984  016C28  EC29  F0A5         	call	_caltime_to_RTCC	;wreg free
  9985  016C2C  0012               	return		;funcret
  9986  016C2E                     __end_of_RTCC_from_epoch:
  9987                           	opt stack 0
  9988                           tblptru	equ	0xFF8
  9989                           tblptrh	equ	0xFF7
  9990                           tblptrl	equ	0xFF6
  9991                           tablat	equ	0xFF5
  9992                           prodh	equ	0xFF4
  9993                           prodl	equ	0xFF3
  9994                           intcon	equ	0xFF2
  9995                           postinc0	equ	0xFEE
  9996                           wreg	equ	0xFE8
  9997                           postinc1	equ	0xFE6
  9998                           postdec1	equ	0xFE5
  9999                           fsr1h	equ	0xFE2
 10000                           fsr1l	equ	0xFE1
 10001                           indf2	equ	0xFDF
 10002                           postinc2	equ	0xFDE
 10003                           postdec2	equ	0xFDD
 10004                           fsr2h	equ	0xFDA
 10005                           fsr2l	equ	0xFD9
 10006                           status	equ	0xFD8
 10007                           
 10008 ;; *************** function _epoch_to_caltime *****************
 10009 ;; Defined at:
 10010 ;;		line 119 in file "../../../My_library/My_RTCC.c"
 10011 ;; Parameters:    Size  Location     Type
 10012 ;;  tm              2   33[BANK0 ] PTR struct .
 10013 ;;		 -> now(14), 
 10014 ;; Auto vars:     Size  Location     Type
 10015 ;;  num             4   43[BANK0 ] unsigned long 
 10016 ;;  day             2   39[BANK0 ] unsigned int 
 10017 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
 10018 ;;  month           1   42[BANK0 ] unsigned char 
 10019 ;;  year            1   41[BANK0 ] unsigned char 
 10020 ;; Return value:  Size  Location     Type
 10021 ;;		None               void
 10022 ;; Registers used:
 10023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10024 ;; Tracked objects:
 10025 ;;		On entry : 0/0
 10026 ;;		On exit  : 0/0
 10027 ;;		Unchanged: 0/0
 10028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10029 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10030 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10031 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10032 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10033 ;;Total ram usage:       14 bytes
 10034 ;; Hardware stack levels used:    1
 10035 ;; Hardware stack levels required when called:   13
 10036 ;; This function calls:
 10037 ;;		_get_quot_rem
 10038 ;;		_month_length
 10039 ;; This function is called by:
 10040 ;;		_RTCC_from_caltime
 10041 ;;		_RTCC_from_epoch
 10042 ;; This function uses a non-reentrant model
 10043 ;;
 10044                           
 10045                           	psect	text26
 10046  012C42                     __ptext26:
 10047                           	opt stack 0
 10048  012C42                     _epoch_to_caltime:
 10049                           	opt stack 12
 10050                           
 10051                           ;My_RTCC.c: 122: static uint16_t day_cache = 0;
 10052                           ;My_RTCC.c: 123: static uint8_t month_cache = 1;
 10053                           ;My_RTCC.c: 124: static uint8_t year_cache = 0;
 10054                           ;My_RTCC.c: 125: uint16_t day_since_epoch;
 10055                           ;My_RTCC.c: 126: uint16_t day;
 10056                           ;My_RTCC.c: 127: uint8_t year = 0;
 10057                           
 10058                           ;incstack = 0
 10059  012C42  0E00               	movlw	0
 10060  012C44  0100               	movlb	0	; () banked
 10061  012C46  6F89               	movwf	epoch_to_caltime@year& (0+255),b
 10062                           
 10063                           ;My_RTCC.c: 128: uint8_t month = 1;
 10064  012C48  0E01               	movlw	1
 10065  012C4A  0100               	movlb	0	; () banked
 10066  012C4C  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 10067                           
 10068                           ; BSR set to: 0
 10069                           ;My_RTCC.c: 129: epoch_t num;
 10070                           ;My_RTCC.c: 131: num = tm->epoch;
 10071  012C4E  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 10072  012C52  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 10073  012C56  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
 10074  012C5A  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
 10075  012C5E  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
 10076  012C62  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
 10077                           
 10078                           ; BSR set to: 0
 10079                           ;My_RTCC.c: 132: tm->ss = get_quot_rem(&num, 60);
 10080  012C66  0E8B               	movlw	low epoch_to_caltime@num
 10081  012C68  0100               	movlb	0	; () banked
 10082  012C6A  6F79               	movwf	get_quot_rem@quot& (0+255),b
 10083  012C6C  0E00               	movlw	high epoch_to_caltime@num
 10084  012C6E  0100               	movlb	0	; () banked
 10085  012C70  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 10086  012C72  0E3C               	movlw	60
 10087  012C74  0100               	movlb	0	; () banked
 10088  012C76  6F7B               	movwf	get_quot_rem@div& (0+255),b
 10089  012C78  ECFF  F0A5         	call	_get_quot_rem	;wreg free
 10090  012C7C  0100               	movlb	0	; () banked
 10091  012C7E  EE20 F004          	lfsr	2,4
 10092  012C82  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 10093  012C84  26D9               	addwf	fsr2l,f,c
 10094  012C86  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 10095  012C88  22DA               	addwfc	fsr2h,f,c
 10096  012C8A  0100               	movlb	0	; () banked
 10097  012C8C  C079  FFDF         	movff	?_get_quot_rem,indf2
 10098                           
 10099                           ; BSR set to: 0
 10100                           ;My_RTCC.c: 133: tm->mm = get_quot_rem(&num, 60);
 10101  012C90  0E8B               	movlw	low epoch_to_caltime@num
 10102  012C92  0100               	movlb	0	; () banked
 10103  012C94  6F79               	movwf	get_quot_rem@quot& (0+255),b
 10104  012C96  0E00               	movlw	high epoch_to_caltime@num
 10105  012C98  0100               	movlb	0	; () banked
 10106  012C9A  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 10107  012C9C  0E3C               	movlw	60
 10108  012C9E  0100               	movlb	0	; () banked
 10109  012CA0  6F7B               	movwf	get_quot_rem@div& (0+255),b
 10110  012CA2  ECFF  F0A5         	call	_get_quot_rem	;wreg free
 10111  012CA6  0100               	movlb	0	; () banked
 10112  012CA8  EE20 F005          	lfsr	2,5
 10113  012CAC  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 10114  012CAE  26D9               	addwf	fsr2l,f,c
 10115  012CB0  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 10116  012CB2  22DA               	addwfc	fsr2h,f,c
 10117  012CB4  0100               	movlb	0	; () banked
 10118  012CB6  C079  FFDF         	movff	?_get_quot_rem,indf2
 10119                           
 10120                           ; BSR set to: 0
 10121                           ;My_RTCC.c: 134: tm->hh = get_quot_rem(&num, 24);
 10122  012CBA  0E8B               	movlw	low epoch_to_caltime@num
 10123  012CBC  0100               	movlb	0	; () banked
 10124  012CBE  6F79               	movwf	get_quot_rem@quot& (0+255),b
 10125  012CC0  0E00               	movlw	high epoch_to_caltime@num
 10126  012CC2  0100               	movlb	0	; () banked
 10127  012CC4  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 10128  012CC6  0E18               	movlw	24
 10129  012CC8  0100               	movlb	0	; () banked
 10130  012CCA  6F7B               	movwf	get_quot_rem@div& (0+255),b
 10131  012CCC  ECFF  F0A5         	call	_get_quot_rem	;wreg free
 10132  012CD0  0100               	movlb	0	; () banked
 10133  012CD2  EE20 F006          	lfsr	2,6
 10134  012CD6  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 10135  012CD8  26D9               	addwf	fsr2l,f,c
 10136  012CDA  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 10137  012CDC  22DA               	addwfc	fsr2h,f,c
 10138  012CDE  0100               	movlb	0	; () banked
 10139  012CE0  C079  FFDF         	movff	?_get_quot_rem,indf2
 10140                           
 10141                           ; BSR set to: 0
 10142                           ;My_RTCC.c: 135: day = num;
 10143  012CE4  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
 10144  012CE8  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
 10145                           
 10146                           ; BSR set to: 0
 10147                           ;My_RTCC.c: 136: day_since_epoch = day;
 10148  012CEC  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
 10149  012CF0  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
 10150                           
 10151                           ; BSR set to: 0
 10152                           ;My_RTCC.c: 138: num += 6;
 10153  012CF4  0E06               	movlw	6
 10154  012CF6  0100               	movlb	0	; () banked
 10155  012CF8  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
 10156  012CFA  0E00               	movlw	0
 10157  012CFC  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
 10158  012CFE  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
 10159  012D00  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
 10160                           
 10161                           ; BSR set to: 0
 10162                           ;My_RTCC.c: 139: tm->EE = get_quot_rem(&num, 7);
 10163  012D02  0E8B               	movlw	low epoch_to_caltime@num
 10164  012D04  0100               	movlb	0	; () banked
 10165  012D06  6F79               	movwf	get_quot_rem@quot& (0+255),b
 10166  012D08  0E00               	movlw	high epoch_to_caltime@num
 10167  012D0A  0100               	movlb	0	; () banked
 10168  012D0C  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 10169  012D0E  0E07               	movlw	7
 10170  012D10  0100               	movlb	0	; () banked
 10171  012D12  6F7B               	movwf	get_quot_rem@div& (0+255),b
 10172  012D14  ECFF  F0A5         	call	_get_quot_rem	;wreg free
 10173  012D18  0100               	movlb	0	; () banked
 10174  012D1A  EE20 F007          	lfsr	2,7
 10175  012D1E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 10176  012D20  26D9               	addwf	fsr2l,f,c
 10177  012D22  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 10178  012D24  22DA               	addwfc	fsr2h,f,c
 10179  012D26  0100               	movlb	0	; () banked
 10180  012D28  C079  FFDF         	movff	?_get_quot_rem,indf2
 10181                           
 10182                           ;My_RTCC.c: 148: while (day >= month_length(year, month)) {
 10183  012D2C  D03F               	goto	l10509
 10184  012D2E                     l917:
 10185                           
 10186                           ; BSR set to: 0
 10187                           ;My_RTCC.c: 149: LATB2 = 1;
 10188  012D2E  848A               	bsf	3978,2,c	;volatile
 10189                           
 10190                           ; BSR set to: 0
 10191                           ;My_RTCC.c: 150: day = day - month_length(year, month);
 10192  012D30  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
 10193  012D34  0100               	movlb	0	; () banked
 10194  012D36  5189               	movf	epoch_to_caltime@year& (0+255),w,b
 10195  012D38  ECE1  F0A3         	call	_month_length
 10196  012D3C  0100               	movlb	0	; () banked
 10197  012D3E  6F83               	movwf	??_epoch_to_caltime& (0+255),b
 10198  012D40  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
 10199  012D42  0100               	movlb	0	; () banked
 10200  012D44  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
 10201  012D46  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 10202  012D48  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
 10203  012D4A  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 10204  012D4C  0100               	movlb	0	; () banked
 10205  012D4E  5187               	movf	epoch_to_caltime@day& (0+255),w,b
 10206  012D50  0100               	movlb	0	; () banked
 10207  012D52  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
 10208  012D54  0100               	movlb	0	; () banked
 10209  012D56  6F87               	movwf	epoch_to_caltime@day& (0+255),b
 10210  012D58  0100               	movlb	0	; () banked
 10211  012D5A  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
 10212  012D5C  0100               	movlb	0	; () banked
 10213  012D5E  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 10214  012D60  0100               	movlb	0	; () banked
 10215  012D62  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
 10216                           
 10217                           ; BSR set to: 0
 10218                           ;My_RTCC.c: 151: if (month == 12) {
 10219  012D64  0E0C               	movlw	12
 10220  012D66  0100               	movlb	0	; () banked
 10221  012D68  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
 10222  012D6A  A4D8               	btfss	status,2,c
 10223  012D6C  D019               	goto	l10503
 10224                           
 10225                           ; BSR set to: 0
 10226                           ;My_RTCC.c: 152: month = 1;
 10227  012D6E  0E01               	movlw	1
 10228  012D70  0100               	movlb	0	; () banked
 10229  012D72  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 10230                           
 10231                           ; BSR set to: 0
 10232                           ;My_RTCC.c: 153: year++;
 10233  012D74  0100               	movlb	0	; () banked
 10234  012D76  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
 10235                           
 10236                           ; BSR set to: 0
 10237                           ;My_RTCC.c: 155: if (year >= 100) {
 10238  012D78  0E63               	movlw	99
 10239  012D7A  0100               	movlb	0	; () banked
 10240  012D7C  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
 10241  012D7E  D012               	goto	l10505
 10242                           
 10243                           ; BSR set to: 0
 10244                           ;My_RTCC.c: 156: tm->epoch -= 3155760000;
 10245  012D80  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 10246  012D84  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 10247  012D88  0E80               	movlw	128
 10248  012D8A  5EDE               	subwf	postinc2,f,c
 10249  012D8C  0E13               	movlw	19
 10250  012D8E  5ADE               	subwfb	postinc2,f,c
 10251  012D90  0E19               	movlw	25
 10252  012D92  5ADE               	subwfb	postinc2,f,c
 10253  012D94  0EBC               	movlw	188
 10254  012D96  5ADE               	subwfb	postinc2,f,c
 10255                           
 10256                           ; BSR set to: 0
 10257                           ;My_RTCC.c: 157: year = 0;
 10258  012D98  0E00               	movlw	0
 10259  012D9A  0100               	movlb	0	; () banked
 10260  012D9C  6F89               	movwf	epoch_to_caltime@year& (0+255),b
 10261                           
 10262                           ; BSR set to: 0
 10263                           ;My_RTCC.c: 158: }
 10264                           ;My_RTCC.c: 159: } else {
 10265  012D9E  D002               	goto	l10505
 10266  012DA0                     l10503:
 10267                           
 10268                           ; BSR set to: 0
 10269                           ;My_RTCC.c: 160: month++;
 10270  012DA0  0100               	movlb	0	; () banked
 10271  012DA2  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
 10272  012DA4                     l10505:
 10273                           
 10274                           ; BSR set to: 0
 10275                           ;My_RTCC.c: 161: }
 10276                           ;My_RTCC.c: 162: month_cache = month;
 10277  012DA4  C08A  F1E3         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
 10278                           
 10279                           ; BSR set to: 0
 10280                           ;My_RTCC.c: 163: year_cache = year;
 10281  012DA8  C089  F126         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
 10282  012DAC                     l10509:
 10283                           
 10284                           ; BSR set to: 0
 10285  012DAC  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
 10286  012DB0  0100               	movlb	0	; () banked
 10287  012DB2  5189               	movf	epoch_to_caltime@year& (0+255),w,b
 10288  012DB4  ECE1  F0A3         	call	_month_length
 10289  012DB8  0100               	movlb	0	; () banked
 10290  012DBA  6F83               	movwf	??_epoch_to_caltime& (0+255),b
 10291  012DBC  0100               	movlb	0	; () banked
 10292  012DBE  5183               	movf	??_epoch_to_caltime& (0+255),w,b
 10293  012DC0  0100               	movlb	0	; () banked
 10294  012DC2  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
 10295  012DC4  0E00               	movlw	0
 10296  012DC6  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
 10297  012DC8  B0D8               	btfsc	status,0,c
 10298  012DCA  D7B1               	goto	l917
 10299                           
 10300                           ; BSR set to: 0
 10301                           ;My_RTCC.c: 164: }
 10302                           ;My_RTCC.c: 165: day_cache = day_since_epoch - day;
 10303                           
 10304                           ; BSR set to: 0
 10305  012DCC  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
 10306  012DD0  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
 10307  012DD4  0100               	movlb	0	; () banked
 10308  012DD6  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
 10309  012DD8  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 10310  012DDA  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
 10311  012DDC  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 10312  012DDE  0100               	movlb	0	; () banked
 10313  012DE0  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
 10314  012DE2  0100               	movlb	0	; () banked
 10315  012DE4  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
 10316  012DE6  0101               	movlb	1	; () banked
 10317  012DE8  6F1E               	movwf	epoch_to_caltime@day_cache& (0+255),b
 10318  012DEA  0100               	movlb	0	; () banked
 10319  012DEC  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
 10320  012DEE  0100               	movlb	0	; () banked
 10321  012DF0  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 10322  012DF2  0101               	movlb	1	; () banked
 10323  012DF4  6F1F               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
 10324                           
 10325                           ; BSR set to: 1
 10326                           ;My_RTCC.c: 166: day++;
 10327  012DF6  0100               	movlb	0	; () banked
 10328  012DF8  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
 10329  012DFA  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
 10330                           
 10331                           ; BSR set to: 0
 10332                           ;My_RTCC.c: 168: tm->YY = year;
 10333  012DFC  0100               	movlb	0	; () banked
 10334  012DFE  EE20 F00A          	lfsr	2,10
 10335  012E02  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 10336  012E04  26D9               	addwf	fsr2l,f,c
 10337  012E06  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 10338  012E08  22DA               	addwfc	fsr2h,f,c
 10339  012E0A  C089  FFDF         	movff	epoch_to_caltime@year,indf2
 10340                           
 10341                           ; BSR set to: 0
 10342                           ;My_RTCC.c: 169: tm->MM = month;
 10343  012E0E  0100               	movlb	0	; () banked
 10344  012E10  EE20 F009          	lfsr	2,9
 10345  012E14  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 10346  012E16  26D9               	addwf	fsr2l,f,c
 10347  012E18  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 10348  012E1A  22DA               	addwfc	fsr2h,f,c
 10349  012E1C  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
 10350                           
 10351                           ; BSR set to: 0
 10352                           ;My_RTCC.c: 170: tm->DD = day;
 10353  012E20  0100               	movlb	0	; () banked
 10354  012E22  EE20 F008          	lfsr	2,8
 10355  012E26  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 10356  012E28  26D9               	addwf	fsr2l,f,c
 10357  012E2A  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 10358  012E2C  22DA               	addwfc	fsr2h,f,c
 10359  012E2E  C087  FFDF         	movff	epoch_to_caltime@day,indf2
 10360                           
 10361                           ; BSR set to: 0
 10362  012E32  0012               	return		;funcret
 10363  012E34                     __end_of_epoch_to_caltime:
 10364                           	opt stack 0
 10365                           tblptru	equ	0xFF8
 10366                           tblptrh	equ	0xFF7
 10367                           tblptrl	equ	0xFF6
 10368                           tablat	equ	0xFF5
 10369                           prodh	equ	0xFF4
 10370                           prodl	equ	0xFF3
 10371                           intcon	equ	0xFF2
 10372                           postinc0	equ	0xFEE
 10373                           wreg	equ	0xFE8
 10374                           postinc1	equ	0xFE6
 10375                           postdec1	equ	0xFE5
 10376                           fsr1h	equ	0xFE2
 10377                           fsr1l	equ	0xFE1
 10378                           indf2	equ	0xFDF
 10379                           postinc2	equ	0xFDE
 10380                           postdec2	equ	0xFDD
 10381                           fsr2h	equ	0xFDA
 10382                           fsr2l	equ	0xFD9
 10383                           status	equ	0xFD8
 10384                           
 10385 ;; *************** function _get_quot_rem *****************
 10386 ;; Defined at:
 10387 ;;		line 74 in file "../../../My_library/My_RTCC.c"
 10388 ;; Parameters:    Size  Location     Type
 10389 ;;  quot            2   25[BANK0 ] PTR unsigned long 
 10390 ;;		 -> epoch_to_caltime@num(4), 
 10391 ;;  div             1   27[BANK0 ] unsigned char 
 10392 ;; Auto vars:     Size  Location     Type
 10393 ;;  num             4   29[BANK0 ] unsigned long 
 10394 ;; Return value:  Size  Location     Type
 10395 ;;                  4   25[BANK0 ] unsigned long 
 10396 ;; Registers used:
 10397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10398 ;; Tracked objects:
 10399 ;;		On entry : 0/0
 10400 ;;		On exit  : 0/0
 10401 ;;		Unchanged: 0/0
 10402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10403 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10404 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10406 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10407 ;;Total ram usage:        8 bytes
 10408 ;; Hardware stack levels used:    1
 10409 ;; Hardware stack levels required when called:   12
 10410 ;; This function calls:
 10411 ;;		___lldiv
 10412 ;;		___lmul
 10413 ;; This function is called by:
 10414 ;;		_epoch_to_caltime
 10415 ;; This function uses a non-reentrant model
 10416 ;;
 10417                           
 10418                           	psect	text27
 10419  014BFE                     __ptext27:
 10420                           	opt stack 0
 10421  014BFE                     _get_quot_rem:
 10422                           	opt stack 12
 10423                           
 10424                           ;My_RTCC.c: 77: epoch_t num = *quot;
 10425                           
 10426                           ; BSR set to: 0
 10427                           ;incstack = 0
 10428  014BFE  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 10429  014C02  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 10430  014C06  CFDE F07D          	movff	postinc2,get_quot_rem@num
 10431  014C0A  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
 10432  014C0E  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
 10433  014C12  CFDE F080          	movff	postinc2,get_quot_rem@num+3
 10434                           
 10435                           ;My_RTCC.c: 78: return num - (*quot = num / div) * div;
 10436  014C16  0100               	movlb	0	; () banked
 10437  014C18  517B               	movf	get_quot_rem@div& (0+255),w,b
 10438  014C1A  0100               	movlb	0	; () banked
 10439  014C1C  6F64               	movwf	___lldiv@divisor& (0+255),b
 10440  014C1E  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
 10441  014C20  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 10442  014C22  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 10443  014C24  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
 10444  014C28  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 10445  014C2C  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 10446  014C30  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 10447  014C34  EC89  F0A9         	call	___lldiv	;wreg free
 10448  014C38  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 10449  014C3C  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 10450  014C40  0100               	movlb	0	; () banked
 10451  014C42  C060  FFDE         	movff	?___lldiv,postinc2
 10452  014C46  0100               	movlb	0	; () banked
 10453  014C48  C061  FFDE         	movff	?___lldiv+1,postinc2
 10454  014C4C  0100               	movlb	0	; () banked
 10455  014C4E  C062  FFDE         	movff	?___lldiv+2,postinc2
 10456  014C52  0100               	movlb	0	; () banked
 10457  014C54  C063  FFDD         	movff	?___lldiv+3,postdec2
 10458  014C58  52DD               	movf	postdec2,f,c
 10459  014C5A  52DD               	movf	postdec2,f,c
 10460  014C5C  CFDE F06D          	movff	postinc2,___lmul@multiplier
 10461  014C60  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
 10462  014C64  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
 10463  014C68  CFDE F070          	movff	postinc2,___lmul@multiplier+3
 10464  014C6C  0100               	movlb	0	; () banked
 10465  014C6E  517B               	movf	get_quot_rem@div& (0+255),w,b
 10466  014C70  0100               	movlb	0	; () banked
 10467  014C72  6F71               	movwf	___lmul@multiplicand& (0+255),b
 10468  014C74  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
 10469  014C76  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
 10470  014C78  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
 10471  014C7A  EC83  F0AF         	call	___lmul	;wreg free
 10472  014C7E  0100               	movlb	0	; () banked
 10473  014C80  1F6D               	comf	?___lmul& (0+255),f,b
 10474  014C82  0100               	movlb	0	; () banked
 10475  014C84  1F6E               	comf	(?___lmul+1)& (0+255),f,b
 10476  014C86  0100               	movlb	0	; () banked
 10477  014C88  1F6F               	comf	(?___lmul+2)& (0+255),f,b
 10478  014C8A  0100               	movlb	0	; () banked
 10479  014C8C  1F70               	comf	(?___lmul+3)& (0+255),f,b
 10480  014C8E  0100               	movlb	0	; () banked
 10481  014C90  2B6D               	incf	?___lmul& (0+255),f,b
 10482  014C92  0E00               	movlw	0
 10483  014C94  0100               	movlb	0	; () banked
 10484  014C96  236E               	addwfc	(?___lmul+1)& (0+255),f,b
 10485  014C98  0100               	movlb	0	; () banked
 10486  014C9A  236F               	addwfc	(?___lmul+2)& (0+255),f,b
 10487  014C9C  0100               	movlb	0	; () banked
 10488  014C9E  2370               	addwfc	(?___lmul+3)& (0+255),f,b
 10489  014CA0  0100               	movlb	0	; () banked
 10490  014CA2  517D               	movf	get_quot_rem@num& (0+255),w,b
 10491  014CA4  0100               	movlb	0	; () banked
 10492  014CA6  256D               	addwf	?___lmul& (0+255),w,b
 10493  014CA8  0100               	movlb	0	; () banked
 10494  014CAA  6F79               	movwf	?_get_quot_rem& (0+255),b
 10495  014CAC  0100               	movlb	0	; () banked
 10496  014CAE  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
 10497  014CB0  0100               	movlb	0	; () banked
 10498  014CB2  216E               	addwfc	(?___lmul+1)& (0+255),w,b
 10499  014CB4  0100               	movlb	0	; () banked
 10500  014CB6  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
 10501  014CB8  0100               	movlb	0	; () banked
 10502  014CBA  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
 10503  014CBC  0100               	movlb	0	; () banked
 10504  014CBE  216F               	addwfc	(?___lmul+2)& (0+255),w,b
 10505  014CC0  0100               	movlb	0	; () banked
 10506  014CC2  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
 10507  014CC4  0100               	movlb	0	; () banked
 10508  014CC6  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
 10509  014CC8  0100               	movlb	0	; () banked
 10510  014CCA  2170               	addwfc	(?___lmul+3)& (0+255),w,b
 10511  014CCC  0100               	movlb	0	; () banked
 10512  014CCE  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
 10513  014CD0  0012               	return	
 10514  014CD2                     __end_of_get_quot_rem:
 10515                           	opt stack 0
 10516                           tblptru	equ	0xFF8
 10517                           tblptrh	equ	0xFF7
 10518                           tblptrl	equ	0xFF6
 10519                           tablat	equ	0xFF5
 10520                           prodh	equ	0xFF4
 10521                           prodl	equ	0xFF3
 10522                           intcon	equ	0xFF2
 10523                           postinc0	equ	0xFEE
 10524                           wreg	equ	0xFE8
 10525                           postinc1	equ	0xFE6
 10526                           postdec1	equ	0xFE5
 10527                           fsr1h	equ	0xFE2
 10528                           fsr1l	equ	0xFE1
 10529                           indf2	equ	0xFDF
 10530                           postinc2	equ	0xFDE
 10531                           postdec2	equ	0xFDD
 10532                           fsr2h	equ	0xFDA
 10533                           fsr2l	equ	0xFD9
 10534                           status	equ	0xFD8
 10535                           
 10536 ;; *************** function _caltime_to_RTCC *****************
 10537 ;; Defined at:
 10538 ;;		line 99 in file "../../../My_library/My_RTCC.c"
 10539 ;; Parameters:    Size  Location     Type
 10540 ;;  tm              2    9[BANK0 ] PTR struct .
 10541 ;;		 -> now(14), 
 10542 ;; Auto vars:     Size  Location     Type
 10543 ;;		None
 10544 ;; Return value:  Size  Location     Type
 10545 ;;		None               void
 10546 ;; Registers used:
 10547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10548 ;; Tracked objects:
 10549 ;;		On entry : 0/0
 10550 ;;		On exit  : 0/0
 10551 ;;		Unchanged: 0/0
 10552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10553 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10556 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10557 ;;Total ram usage:        2 bytes
 10558 ;; Hardware stack levels used:    1
 10559 ;; Hardware stack levels required when called:   13
 10560 ;; This function calls:
 10561 ;;		_d_to_x
 10562 ;; This function is called by:
 10563 ;;		_RTCC_from_caltime
 10564 ;;		_RTCC_from_epoch
 10565 ;; This function uses a non-reentrant model
 10566 ;;
 10567                           
 10568                           	psect	text28
 10569  014A52                     __ptext28:
 10570                           	opt stack 0
 10571  014A52                     _caltime_to_RTCC:
 10572                           	opt stack 12
 10573  014A52                     l904:
 10574  014A52  010F               	movlb	15	; () banked
 10575  014A54  B93F               	btfsc	63,4,b	;volatile
 10576  014A56  D7FD               	goto	l904
 10577                           
 10578                           ; BSR set to: 15
 10579                           ;My_RTCC.c: 101: RTCCFGbits.RTCPTR0 = 1;
 10580  014A58  010F               	movlb	15	; () banked
 10581  014A5A  813F               	bsf	63,0,b	;volatile
 10582                           
 10583                           ;My_RTCC.c: 102: RTCCFGbits.RTCPTR1 = 1;
 10584  014A5C  010F               	movlb	15	; () banked
 10585  014A5E  833F               	bsf	63,1,b	;volatile
 10586                           
 10587                           ; BSR set to: 15
 10588                           ;My_RTCC.c: 103: RTCVALL = d_to_x(tm->YY);
 10589  014A60  0100               	movlb	0	; () banked
 10590  014A62  EE20 F00A          	lfsr	2,10
 10591  014A66  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10592  014A68  26D9               	addwf	fsr2l,f,c
 10593  014A6A  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10594  014A6C  22DA               	addwfc	fsr2h,f,c
 10595  014A6E  50DF               	movf	indf2,w,c
 10596  014A70  EC4B  F0B5         	call	_d_to_x
 10597  014A74  010F               	movlb	15	; () banked
 10598  014A76  6F3A               	movwf	58,b	;volatile
 10599                           
 10600                           ; BSR set to: 15
 10601                           ;My_RTCC.c: 104: RTCVALH = 0x00;
 10602  014A78  0E00               	movlw	0
 10603  014A7A  010F               	movlb	15	; () banked
 10604  014A7C  6F3B               	movwf	59,b	;volatile
 10605                           
 10606                           ; BSR set to: 15
 10607                           ;My_RTCC.c: 105: RTCCFGbits.RTCPTR0 = 0;
 10608  014A7E  010F               	movlb	15	; () banked
 10609  014A80  913F               	bcf	63,0,b	;volatile
 10610                           
 10611                           ; BSR set to: 15
 10612                           ;My_RTCC.c: 106: RTCCFGbits.RTCPTR1 = 1;
 10613  014A82  010F               	movlb	15	; () banked
 10614  014A84  833F               	bsf	63,1,b	;volatile
 10615                           
 10616                           ; BSR set to: 15
 10617                           ;My_RTCC.c: 107: RTCVALL = d_to_x(tm->DD);
 10618  014A86  0100               	movlb	0	; () banked
 10619  014A88  EE20 F008          	lfsr	2,8
 10620  014A8C  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10621  014A8E  26D9               	addwf	fsr2l,f,c
 10622  014A90  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10623  014A92  22DA               	addwfc	fsr2h,f,c
 10624  014A94  50DF               	movf	indf2,w,c
 10625  014A96  EC4B  F0B5         	call	_d_to_x
 10626  014A9A  010F               	movlb	15	; () banked
 10627  014A9C  6F3A               	movwf	58,b	;volatile
 10628                           
 10629                           ; BSR set to: 15
 10630                           ;My_RTCC.c: 108: RTCVALH = d_to_x(tm->MM);
 10631  014A9E  0100               	movlb	0	; () banked
 10632  014AA0  EE20 F009          	lfsr	2,9
 10633  014AA4  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10634  014AA6  26D9               	addwf	fsr2l,f,c
 10635  014AA8  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10636  014AAA  22DA               	addwfc	fsr2h,f,c
 10637  014AAC  50DF               	movf	indf2,w,c
 10638  014AAE  EC4B  F0B5         	call	_d_to_x
 10639  014AB2  010F               	movlb	15	; () banked
 10640  014AB4  6F3B               	movwf	59,b	;volatile
 10641                           
 10642                           ; BSR set to: 15
 10643                           ;My_RTCC.c: 109: RTCCFGbits.RTCPTR0 = 1;
 10644  014AB6  010F               	movlb	15	; () banked
 10645  014AB8  813F               	bsf	63,0,b	;volatile
 10646                           
 10647                           ; BSR set to: 15
 10648                           ;My_RTCC.c: 110: RTCCFGbits.RTCPTR1 = 0;
 10649  014ABA  010F               	movlb	15	; () banked
 10650  014ABC  933F               	bcf	63,1,b	;volatile
 10651                           
 10652                           ; BSR set to: 15
 10653                           ;My_RTCC.c: 111: RTCVALL = d_to_x(tm->hh);
 10654  014ABE  0100               	movlb	0	; () banked
 10655  014AC0  EE20 F006          	lfsr	2,6
 10656  014AC4  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10657  014AC6  26D9               	addwf	fsr2l,f,c
 10658  014AC8  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10659  014ACA  22DA               	addwfc	fsr2h,f,c
 10660  014ACC  50DF               	movf	indf2,w,c
 10661  014ACE  EC4B  F0B5         	call	_d_to_x
 10662  014AD2  010F               	movlb	15	; () banked
 10663  014AD4  6F3A               	movwf	58,b	;volatile
 10664                           
 10665                           ; BSR set to: 15
 10666                           ;My_RTCC.c: 112: RTCVALH = d_to_x(tm->EE);
 10667  014AD6  0100               	movlb	0	; () banked
 10668  014AD8  EE20 F007          	lfsr	2,7
 10669  014ADC  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10670  014ADE  26D9               	addwf	fsr2l,f,c
 10671  014AE0  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10672  014AE2  22DA               	addwfc	fsr2h,f,c
 10673  014AE4  50DF               	movf	indf2,w,c
 10674  014AE6  EC4B  F0B5         	call	_d_to_x
 10675  014AEA  010F               	movlb	15	; () banked
 10676  014AEC  6F3B               	movwf	59,b	;volatile
 10677                           
 10678                           ; BSR set to: 15
 10679                           ;My_RTCC.c: 113: RTCCFGbits.RTCPTR0 = 0;
 10680  014AEE  010F               	movlb	15	; () banked
 10681  014AF0  913F               	bcf	63,0,b	;volatile
 10682                           
 10683                           ; BSR set to: 15
 10684                           ;My_RTCC.c: 114: RTCCFGbits.RTCPTR1 = 0;
 10685  014AF2  010F               	movlb	15	; () banked
 10686  014AF4  933F               	bcf	63,1,b	;volatile
 10687                           
 10688                           ; BSR set to: 15
 10689                           ;My_RTCC.c: 115: RTCVALL = d_to_x(tm->ss);
 10690  014AF6  0100               	movlb	0	; () banked
 10691  014AF8  EE20 F004          	lfsr	2,4
 10692  014AFC  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10693  014AFE  26D9               	addwf	fsr2l,f,c
 10694  014B00  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10695  014B02  22DA               	addwfc	fsr2h,f,c
 10696  014B04  50DF               	movf	indf2,w,c
 10697  014B06  EC4B  F0B5         	call	_d_to_x
 10698  014B0A  010F               	movlb	15	; () banked
 10699  014B0C  6F3A               	movwf	58,b	;volatile
 10700                           
 10701                           ; BSR set to: 15
 10702                           ;My_RTCC.c: 116: RTCVALH = d_to_x(tm->mm);
 10703  014B0E  0100               	movlb	0	; () banked
 10704  014B10  EE20 F005          	lfsr	2,5
 10705  014B14  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10706  014B16  26D9               	addwf	fsr2l,f,c
 10707  014B18  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10708  014B1A  22DA               	addwfc	fsr2h,f,c
 10709  014B1C  50DF               	movf	indf2,w,c
 10710  014B1E  EC4B  F0B5         	call	_d_to_x
 10711  014B22  010F               	movlb	15	; () banked
 10712  014B24  6F3B               	movwf	59,b	;volatile
 10713                           
 10714                           ; BSR set to: 15
 10715  014B26  0012               	return		;funcret
 10716  014B28                     __end_of_caltime_to_RTCC:
 10717                           	opt stack 0
 10718                           tblptru	equ	0xFF8
 10719                           tblptrh	equ	0xFF7
 10720                           tblptrl	equ	0xFF6
 10721                           tablat	equ	0xFF5
 10722                           prodh	equ	0xFF4
 10723                           prodl	equ	0xFF3
 10724                           intcon	equ	0xFF2
 10725                           postinc0	equ	0xFEE
 10726                           wreg	equ	0xFE8
 10727                           postinc1	equ	0xFE6
 10728                           postdec1	equ	0xFE5
 10729                           fsr1h	equ	0xFE2
 10730                           fsr1l	equ	0xFE1
 10731                           indf2	equ	0xFDF
 10732                           postinc2	equ	0xFDE
 10733                           postdec2	equ	0xFDD
 10734                           fsr2h	equ	0xFDA
 10735                           fsr2l	equ	0xFD9
 10736                           status	equ	0xFD8
 10737                           
 10738 ;; *************** function _d_to_x *****************
 10739 ;; Defined at:
 10740 ;;		line 39 in file "../../../My_library/My_RTCC.c"
 10741 ;; Parameters:    Size  Location     Type
 10742 ;;  dec             1    wreg     unsigned char 
 10743 ;; Auto vars:     Size  Location     Type
 10744 ;;  dec             1    8[BANK0 ] unsigned char 
 10745 ;; Return value:  Size  Location     Type
 10746 ;;                  1    wreg      unsigned char 
 10747 ;; Registers used:
 10748 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10749 ;; Tracked objects:
 10750 ;;		On entry : 0/0
 10751 ;;		On exit  : 0/0
 10752 ;;		Unchanged: 0/0
 10753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10755 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10757 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10758 ;;Total ram usage:        1 bytes
 10759 ;; Hardware stack levels used:    1
 10760 ;; Hardware stack levels required when called:   12
 10761 ;; This function calls:
 10762 ;;		___awdiv
 10763 ;; This function is called by:
 10764 ;;		_caltime_to_RTCC
 10765 ;; This function uses a non-reentrant model
 10766 ;;
 10767                           
 10768                           	psect	text29
 10769  016A96                     __ptext29:
 10770                           	opt stack 0
 10771  016A96                     _d_to_x:
 10772                           	opt stack 12
 10773                           
 10774                           ; BSR set to: 15
 10775                           ;incstack = 0
 10776                           ;d_to_x@dec stored from wreg
 10777  016A96  0100               	movlb	0	; () banked
 10778  016A98  6F68               	movwf	d_to_x@dec& (0+255),b
 10779                           
 10780                           ;My_RTCC.c: 42: return dec / 10 * 6 + dec;
 10781  016A9A  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
 10782  016A9E  0100               	movlb	0	; () banked
 10783  016AA0  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 10784  016AA2  0E00               	movlw	0
 10785  016AA4  0100               	movlb	0	; () banked
 10786  016AA6  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 10787  016AA8  0E0A               	movlw	10
 10788  016AAA  6F62               	movwf	___awdiv@divisor& (0+255),b
 10789  016AAC  EC2A  F0A9         	call	___awdiv	;wreg free
 10790  016AB0  0100               	movlb	0	; () banked
 10791  016AB2  5160               	movf	?___awdiv& (0+255),w,b
 10792  016AB4  0D06               	mullw	6
 10793  016AB6  50F3               	movf	prodl,w,c
 10794  016AB8  0100               	movlb	0	; () banked
 10795  016ABA  2568               	addwf	d_to_x@dec& (0+255),w,b
 10796  016ABC  0012               	return	
 10797  016ABE                     __end_of_d_to_x:
 10798                           	opt stack 0
 10799                           tblptru	equ	0xFF8
 10800                           tblptrh	equ	0xFF7
 10801                           tblptrl	equ	0xFF6
 10802                           tablat	equ	0xFF5
 10803                           prodh	equ	0xFF4
 10804                           prodl	equ	0xFF3
 10805                           intcon	equ	0xFF2
 10806                           postinc0	equ	0xFEE
 10807                           wreg	equ	0xFE8
 10808                           postinc1	equ	0xFE6
 10809                           postdec1	equ	0xFE5
 10810                           fsr1h	equ	0xFE2
 10811                           fsr1l	equ	0xFE1
 10812                           indf2	equ	0xFDF
 10813                           postinc2	equ	0xFDE
 10814                           postdec2	equ	0xFDD
 10815                           fsr2h	equ	0xFDA
 10816                           fsr2l	equ	0xFD9
 10817                           status	equ	0xFD8
 10818                           
 10819 ;; *************** function ___awdiv *****************
 10820 ;; Defined at:
 10821 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 10822 ;; Parameters:    Size  Location     Type
 10823 ;;  dividend        2    0[BANK0 ] int 
 10824 ;;  divisor         2    2[BANK0 ] int 
 10825 ;; Auto vars:     Size  Location     Type
 10826 ;;  quotient        2    6[BANK0 ] int 
 10827 ;;  sign            1    5[BANK0 ] unsigned char 
 10828 ;;  counter         1    4[BANK0 ] unsigned char 
 10829 ;; Return value:  Size  Location     Type
 10830 ;;                  2    0[BANK0 ] int 
 10831 ;; Registers used:
 10832 ;;		wreg, status,2, status,0
 10833 ;; Tracked objects:
 10834 ;;		On entry : 0/0
 10835 ;;		On exit  : 0/0
 10836 ;;		Unchanged: 0/0
 10837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10838 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10839 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10841 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10842 ;;Total ram usage:        8 bytes
 10843 ;; Hardware stack levels used:    1
 10844 ;; Hardware stack levels required when called:   11
 10845 ;; This function calls:
 10846 ;;		Nothing
 10847 ;; This function is called by:
 10848 ;;		_d_to_x
 10849 ;; This function uses a non-reentrant model
 10850 ;;
 10851                           
 10852                           	psect	text30
 10853  015254                     __ptext30:
 10854                           	opt stack 0
 10855  015254                     ___awdiv:
 10856                           	opt stack 12
 10857                           
 10858                           ; BSR set to: 0
 10859                           ;incstack = 0
 10860  015254  0E00               	movlw	0
 10861  015256  0100               	movlb	0	; () banked
 10862  015258  6F65               	movwf	___awdiv@sign& (0+255),b
 10863                           
 10864                           ; BSR set to: 0
 10865  01525A  0100               	movlb	0	; () banked
 10866  01525C  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10867  01525E  D008               	goto	l10095
 10868                           
 10869                           ; BSR set to: 0
 10870  015260  0100               	movlb	0	; () banked
 10871  015262  6D62               	negf	___awdiv@divisor& (0+255),b
 10872  015264  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10873  015266  B0D8               	btfsc	status,0,c
 10874  015268  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10875                           
 10876                           ; BSR set to: 0
 10877  01526A  0E01               	movlw	1
 10878  01526C  0100               	movlb	0	; () banked
 10879  01526E  6F65               	movwf	___awdiv@sign& (0+255),b
 10880  015270                     l10095:
 10881                           
 10882                           ; BSR set to: 0
 10883  015270  0100               	movlb	0	; () banked
 10884  015272  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10885  015274  D008               	goto	l10101
 10886                           
 10887                           ; BSR set to: 0
 10888  015276  0100               	movlb	0	; () banked
 10889  015278  6D60               	negf	___awdiv@dividend& (0+255),b
 10890  01527A  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10891  01527C  B0D8               	btfsc	status,0,c
 10892  01527E  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10893                           
 10894                           ; BSR set to: 0
 10895  015280  0E01               	movlw	1
 10896  015282  0100               	movlb	0	; () banked
 10897  015284  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 10898  015286                     l10101:
 10899                           
 10900                           ; BSR set to: 0
 10901  015286  0E00               	movlw	0
 10902  015288  0100               	movlb	0	; () banked
 10903  01528A  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 10904  01528C  0E00               	movlw	0
 10905  01528E  6F66               	movwf	___awdiv@quotient& (0+255),b
 10906                           
 10907                           ; BSR set to: 0
 10908  015290  0100               	movlb	0	; () banked
 10909  015292  5162               	movf	___awdiv@divisor& (0+255),w,b
 10910  015294  0100               	movlb	0	; () banked
 10911  015296  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10912  015298  B4D8               	btfsc	status,2,c
 10913  01529A  D02C               	goto	l10123
 10914                           
 10915                           ; BSR set to: 0
 10916  01529C  0E01               	movlw	1
 10917  01529E  0100               	movlb	0	; () banked
 10918  0152A0  6F64               	movwf	___awdiv@counter& (0+255),b
 10919  0152A2  D006               	goto	l10109
 10920  0152A4                     l10107:
 10921                           
 10922                           ; BSR set to: 0
 10923  0152A4  0100               	movlb	0	; () banked
 10924  0152A6  90D8               	bcf	status,0,c
 10925  0152A8  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 10926  0152AA  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10927  0152AC  0100               	movlb	0	; () banked
 10928  0152AE  2B64               	incf	___awdiv@counter& (0+255),f,b
 10929  0152B0                     l10109:
 10930                           
 10931                           ; BSR set to: 0
 10932  0152B0  0100               	movlb	0	; () banked
 10933  0152B2  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10934  0152B4  D7F7               	goto	l10107
 10935  0152B6                     l10111:
 10936                           
 10937                           ; BSR set to: 0
 10938  0152B6  0100               	movlb	0	; () banked
 10939  0152B8  90D8               	bcf	status,0,c
 10940  0152BA  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 10941  0152BC  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10942                           
 10943                           ; BSR set to: 0
 10944  0152BE  0100               	movlb	0	; () banked
 10945  0152C0  5162               	movf	___awdiv@divisor& (0+255),w,b
 10946  0152C2  0100               	movlb	0	; () banked
 10947  0152C4  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 10948  0152C6  0100               	movlb	0	; () banked
 10949  0152C8  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10950  0152CA  0100               	movlb	0	; () banked
 10951  0152CC  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10952  0152CE  A0D8               	btfss	status,0,c
 10953  0152D0  D00A               	goto	l10119
 10954                           
 10955                           ; BSR set to: 0
 10956  0152D2  0100               	movlb	0	; () banked
 10957  0152D4  5162               	movf	___awdiv@divisor& (0+255),w,b
 10958  0152D6  0100               	movlb	0	; () banked
 10959  0152D8  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 10960  0152DA  0100               	movlb	0	; () banked
 10961  0152DC  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10962  0152DE  0100               	movlb	0	; () banked
 10963  0152E0  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10964                           
 10965                           ; BSR set to: 0
 10966  0152E2  0100               	movlb	0	; () banked
 10967  0152E4  8166               	bsf	___awdiv@quotient& (0+255),0,b
 10968  0152E6                     l10119:
 10969                           
 10970                           ; BSR set to: 0
 10971  0152E6  0100               	movlb	0	; () banked
 10972  0152E8  90D8               	bcf	status,0,c
 10973  0152EA  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10974  0152EC  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 10975                           
 10976                           ; BSR set to: 0
 10977  0152EE  0100               	movlb	0	; () banked
 10978  0152F0  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 10979  0152F2  D7E1               	goto	l10111
 10980  0152F4                     l10123:
 10981                           
 10982                           ; BSR set to: 0
 10983  0152F4  0100               	movlb	0	; () banked
 10984  0152F6  5165               	movf	___awdiv@sign& (0+255),w,b
 10985  0152F8  0100               	movlb	0	; () banked
 10986  0152FA  B4D8               	btfsc	status,2,c
 10987  0152FC  D005               	goto	l10127
 10988                           
 10989                           ; BSR set to: 0
 10990  0152FE  0100               	movlb	0	; () banked
 10991  015300  6D66               	negf	___awdiv@quotient& (0+255),b
 10992  015302  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10993  015304  B0D8               	btfsc	status,0,c
 10994  015306  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10995  015308                     l10127:
 10996                           
 10997                           ; BSR set to: 0
 10998  015308  C066  F060         	movff	___awdiv@quotient,?___awdiv
 10999  01530C  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 11000  015310  0012               	return	
 11001  015312                     __end_of___awdiv:
 11002                           	opt stack 0
 11003                           tblptru	equ	0xFF8
 11004                           tblptrh	equ	0xFF7
 11005                           tblptrl	equ	0xFF6
 11006                           tablat	equ	0xFF5
 11007                           prodh	equ	0xFF4
 11008                           prodl	equ	0xFF3
 11009                           intcon	equ	0xFF2
 11010                           postinc0	equ	0xFEE
 11011                           wreg	equ	0xFE8
 11012                           postinc1	equ	0xFE6
 11013                           postdec1	equ	0xFE5
 11014                           fsr1h	equ	0xFE2
 11015                           fsr1l	equ	0xFE1
 11016                           indf2	equ	0xFDF
 11017                           postinc2	equ	0xFDE
 11018                           postdec2	equ	0xFDD
 11019                           fsr2h	equ	0xFDA
 11020                           fsr2l	equ	0xFD9
 11021                           status	equ	0xFD8
 11022                           
 11023 ;; *************** function _RTCC_adjust_time_cursor *****************
 11024 ;; Defined at:
 11025 ;;		line 270 in file "../../../My_library/My_RTCC.c"
 11026 ;; Parameters:    Size  Location     Type
 11027 ;;  tm              2    0[BANK0 ] PTR struct .
 11028 ;;		 -> now(14), 
 11029 ;; Auto vars:     Size  Location     Type
 11030 ;;		None
 11031 ;; Return value:  Size  Location     Type
 11032 ;;		None               void
 11033 ;; Registers used:
 11034 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11035 ;; Tracked objects:
 11036 ;;		On entry : 0/0
 11037 ;;		On exit  : 0/0
 11038 ;;		Unchanged: 0/0
 11039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11040 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11043 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11044 ;;Total ram usage:        2 bytes
 11045 ;; Hardware stack levels used:    1
 11046 ;; Hardware stack levels required when called:   11
 11047 ;; This function calls:
 11048 ;;		Nothing
 11049 ;; This function is called by:
 11050 ;;		_settings_adjust_time
 11051 ;;		_RTCC_adjust_time_button
 11052 ;; This function uses a non-reentrant model
 11053 ;;
 11054                           
 11055                           	psect	text31
 11056  013C7A                     __ptext31:
 11057                           	opt stack 0
 11058  013C7A                     _RTCC_adjust_time_cursor:
 11059                           	opt stack 16
 11060                           
 11061                           ;My_RTCC.c: 271: if (tm->edit.flag.ss)tm->edit.flags = 0x02;
 11062                           
 11063                           ; BSR set to: 0
 11064                           ;incstack = 0
 11065  013C7A  0100               	movlb	0	; () banked
 11066  013C7C  EE20 F00D          	lfsr	2,13
 11067  013C80  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11068  013C82  26D9               	addwf	fsr2l,f,c
 11069  013C84  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11070  013C86  22DA               	addwfc	fsr2h,f,c
 11071  013C88  0100               	movlb	0	; () banked
 11072  013C8A  A0DF               	btfss	indf2,0,c
 11073  013C8C  D00A               	goto	l10703
 11074                           
 11075                           ; BSR set to: 0
 11076  013C8E  0100               	movlb	0	; () banked
 11077  013C90  EE20 F00D          	lfsr	2,13
 11078  013C94  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11079  013C96  26D9               	addwf	fsr2l,f,c
 11080  013C98  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11081  013C9A  22DA               	addwfc	fsr2h,f,c
 11082  013C9C  0E02               	movlw	2
 11083  013C9E  6EDF               	movwf	indf2,c
 11084  013CA0  0012               	return	
 11085  013CA2                     l10703:
 11086                           
 11087                           ; BSR set to: 0
 11088                           ;My_RTCC.c: 272: else if (tm->edit.flag.mm)tm->edit.flags = 0x04;
 11089  013CA2  0100               	movlb	0	; () banked
 11090  013CA4  EE20 F00D          	lfsr	2,13
 11091  013CA8  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11092  013CAA  26D9               	addwf	fsr2l,f,c
 11093  013CAC  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11094  013CAE  22DA               	addwfc	fsr2h,f,c
 11095  013CB0  0100               	movlb	0	; () banked
 11096  013CB2  A2DF               	btfss	indf2,1,c
 11097  013CB4  D00A               	goto	l10707
 11098                           
 11099                           ; BSR set to: 0
 11100  013CB6  0100               	movlb	0	; () banked
 11101  013CB8  EE20 F00D          	lfsr	2,13
 11102  013CBC  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11103  013CBE  26D9               	addwf	fsr2l,f,c
 11104  013CC0  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11105  013CC2  22DA               	addwfc	fsr2h,f,c
 11106  013CC4  0E04               	movlw	4
 11107  013CC6  6EDF               	movwf	indf2,c
 11108  013CC8  0012               	return	
 11109  013CCA                     l10707:
 11110                           
 11111                           ; BSR set to: 0
 11112                           ;My_RTCC.c: 273: else if (tm->edit.flag.hh)tm->edit.flags = 0x08;
 11113  013CCA  0100               	movlb	0	; () banked
 11114  013CCC  EE20 F00D          	lfsr	2,13
 11115  013CD0  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11116  013CD2  26D9               	addwf	fsr2l,f,c
 11117  013CD4  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11118  013CD6  22DA               	addwfc	fsr2h,f,c
 11119  013CD8  0100               	movlb	0	; () banked
 11120  013CDA  A4DF               	btfss	indf2,2,c
 11121  013CDC  D00A               	goto	l10711
 11122                           
 11123                           ; BSR set to: 0
 11124  013CDE  0100               	movlb	0	; () banked
 11125  013CE0  EE20 F00D          	lfsr	2,13
 11126  013CE4  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11127  013CE6  26D9               	addwf	fsr2l,f,c
 11128  013CE8  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11129  013CEA  22DA               	addwfc	fsr2h,f,c
 11130  013CEC  0E08               	movlw	8
 11131  013CEE  6EDF               	movwf	indf2,c
 11132  013CF0  0012               	return	
 11133  013CF2                     l10711:
 11134                           
 11135                           ; BSR set to: 0
 11136                           ;My_RTCC.c: 274: else if (tm->edit.flag.DD)tm->edit.flags = 0x10;
 11137  013CF2  0100               	movlb	0	; () banked
 11138  013CF4  EE20 F00D          	lfsr	2,13
 11139  013CF8  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11140  013CFA  26D9               	addwf	fsr2l,f,c
 11141  013CFC  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11142  013CFE  22DA               	addwfc	fsr2h,f,c
 11143  013D00  0100               	movlb	0	; () banked
 11144  013D02  A6DF               	btfss	indf2,3,c
 11145  013D04  D00A               	goto	l10715
 11146                           
 11147                           ; BSR set to: 0
 11148  013D06  0100               	movlb	0	; () banked
 11149  013D08  EE20 F00D          	lfsr	2,13
 11150  013D0C  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11151  013D0E  26D9               	addwf	fsr2l,f,c
 11152  013D10  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11153  013D12  22DA               	addwfc	fsr2h,f,c
 11154  013D14  0E10               	movlw	16
 11155  013D16  6EDF               	movwf	indf2,c
 11156  013D18  0012               	return	
 11157  013D1A                     l10715:
 11158                           
 11159                           ; BSR set to: 0
 11160                           ;My_RTCC.c: 275: else if (tm->edit.flag.MM)tm->edit.flags = 0x20;
 11161  013D1A  0100               	movlb	0	; () banked
 11162  013D1C  EE20 F00D          	lfsr	2,13
 11163  013D20  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11164  013D22  26D9               	addwf	fsr2l,f,c
 11165  013D24  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11166  013D26  22DA               	addwfc	fsr2h,f,c
 11167  013D28  0100               	movlb	0	; () banked
 11168  013D2A  A8DF               	btfss	indf2,4,c
 11169  013D2C  D00A               	goto	l10719
 11170                           
 11171                           ; BSR set to: 0
 11172  013D2E  0100               	movlb	0	; () banked
 11173  013D30  EE20 F00D          	lfsr	2,13
 11174  013D34  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11175  013D36  26D9               	addwf	fsr2l,f,c
 11176  013D38  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11177  013D3A  22DA               	addwfc	fsr2h,f,c
 11178  013D3C  0E20               	movlw	32
 11179  013D3E  6EDF               	movwf	indf2,c
 11180  013D40  0012               	return	
 11181  013D42                     l10719:
 11182                           
 11183                           ; BSR set to: 0
 11184                           ;My_RTCC.c: 276: else if (tm->edit.flag.YY)tm->edit.flags = 0x01;
 11185  013D42  0100               	movlb	0	; () banked
 11186  013D44  EE20 F00D          	lfsr	2,13
 11187  013D48  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11188  013D4A  26D9               	addwf	fsr2l,f,c
 11189  013D4C  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11190  013D4E  22DA               	addwfc	fsr2h,f,c
 11191  013D50  0100               	movlb	0	; () banked
 11192  013D52  AADF               	btfss	indf2,5,c
 11193  013D54  D00A               	goto	l10723
 11194                           
 11195                           ; BSR set to: 0
 11196  013D56  0100               	movlb	0	; () banked
 11197  013D58  EE20 F00D          	lfsr	2,13
 11198  013D5C  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11199  013D5E  26D9               	addwf	fsr2l,f,c
 11200  013D60  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11201  013D62  22DA               	addwfc	fsr2h,f,c
 11202  013D64  0E01               	movlw	1
 11203  013D66  6EDF               	movwf	indf2,c
 11204  013D68  0012               	return	
 11205  013D6A                     l10723:
 11206                           
 11207                           ; BSR set to: 0
 11208                           ;My_RTCC.c: 277: else tm->edit.flags = 0x00;
 11209  013D6A  0100               	movlb	0	; () banked
 11210  013D6C  EE20 F00D          	lfsr	2,13
 11211  013D70  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11212  013D72  26D9               	addwf	fsr2l,f,c
 11213  013D74  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11214  013D76  22DA               	addwfc	fsr2h,f,c
 11215  013D78  0E00               	movlw	0
 11216  013D7A  6EDF               	movwf	indf2,c
 11217                           
 11218                           ; BSR set to: 0
 11219                           
 11220                           ; BSR set to: 0
 11221                           
 11222                           ; BSR set to: 0
 11223                           
 11224                           ; BSR set to: 0
 11225                           
 11226                           ; BSR set to: 0
 11227  013D7C  0012               	return	
 11228  013D7E                     __end_of_RTCC_adjust_time_cursor:
 11229                           	opt stack 0
 11230                           tblptru	equ	0xFF8
 11231                           tblptrh	equ	0xFF7
 11232                           tblptrl	equ	0xFF6
 11233                           tablat	equ	0xFF5
 11234                           prodh	equ	0xFF4
 11235                           prodl	equ	0xFF3
 11236                           intcon	equ	0xFF2
 11237                           postinc0	equ	0xFEE
 11238                           wreg	equ	0xFE8
 11239                           postinc1	equ	0xFE6
 11240                           postdec1	equ	0xFE5
 11241                           fsr1h	equ	0xFE2
 11242                           fsr1l	equ	0xFE1
 11243                           indf2	equ	0xFDF
 11244                           postinc2	equ	0xFDE
 11245                           postdec2	equ	0xFDD
 11246                           fsr2h	equ	0xFDA
 11247                           fsr2l	equ	0xFD9
 11248                           status	equ	0xFD8
 11249                           
 11250 ;; *************** function _port_button_task *****************
 11251 ;; Defined at:
 11252 ;;		line 82 in file "ChargeStation_task.c"
 11253 ;; Parameters:    Size  Location     Type
 11254 ;;		None
 11255 ;; Auto vars:     Size  Location     Type
 11256 ;;  i               1    6[BANK0 ] unsigned char 
 11257 ;; Return value:  Size  Location     Type
 11258 ;;		None               void
 11259 ;; Registers used:
 11260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11261 ;; Tracked objects:
 11262 ;;		On entry : 0/0
 11263 ;;		On exit  : 0/0
 11264 ;;		Unchanged: 0/0
 11265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11267 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11269 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11270 ;;Total ram usage:        1 bytes
 11271 ;; Hardware stack levels used:    1
 11272 ;; Hardware stack levels required when called:   12
 11273 ;; This function calls:
 11274 ;;		_LED_output
 11275 ;;		_OUT
 11276 ;;		_display
 11277 ;; This function is called by:
 11278 ;;		_normal_task
 11279 ;; This function uses a non-reentrant model
 11280 ;;
 11281                           
 11282                           	psect	text32
 11283  013138                     __ptext32:
 11284                           	opt stack 0
 11285  013138                     _port_button_task:
 11286                           	opt stack 17
 11287                           
 11288                           ;ChargeStation_task.c: 83: uint8_t i;
 11289                           ;ChargeStation_task.c: 84: for (i = 0; i < 3; i++) {
 11290                           
 11291                           ; BSR set to: 0
 11292                           ;incstack = 0
 11293  013138  0E00               	movlw	0
 11294  01313A  0100               	movlb	0	; () banked
 11295  01313C  6F66               	movwf	port_button_task@i& (0+255),b
 11296  01313E                     l11597:
 11297                           
 11298                           ; BSR set to: 0
 11299  01313E  0E02               	movlw	2
 11300  013140  0100               	movlb	0	; () banked
 11301  013142  6566               	cpfsgt	port_button_task@i& (0+255),b
 11302  013144  D001               	goto	l11601
 11303  013146  0012               	return	
 11304  013148                     l11601:
 11305                           
 11306                           ; BSR set to: 0
 11307                           ;ChargeStation_task.c: 86: if (port[i].ctmu.flag.pressing) {
 11308  013148  0100               	movlb	0	; () banked
 11309  01314A  5166               	movf	port_button_task@i& (0+255),w,b
 11310  01314C  0D17               	mullw	23
 11311  01314E  0E03               	movlw	3
 11312  013150  26F3               	addwf	prodl,f,c
 11313  013152  0E00               	movlw	0
 11314  013154  22F4               	addwfc	prodh,f,c
 11315  013156  0E2D               	movlw	low _port
 11316  013158  24F3               	addwf	prodl,w,c
 11317  01315A  6ED9               	movwf	fsr2l,c
 11318  01315C  0E01               	movlw	high _port
 11319  01315E  20F4               	addwfc	prodh,w,c
 11320  013160  6EDA               	movwf	fsr2h,c
 11321  013162  0101               	movlb	1	; () banked
 11322  013164  A0DF               	btfss	indf2,0,c
 11323  013166  D008               	goto	l11605
 11324                           
 11325                           ; BSR set to: 1
 11326                           ;ChargeStation_task.c: 87: LED_output(i, 1);
 11327  013168  0E01               	movlw	1
 11328  01316A  0100               	movlb	0	; () banked
 11329  01316C  6F60               	movwf	LED_output@value& (0+255),b
 11330  01316E  0100               	movlb	0	; () banked
 11331  013170  5166               	movf	port_button_task@i& (0+255),w,b
 11332  013172  ECBE  F0AF         	call	_LED_output
 11333                           
 11334                           ;ChargeStation_task.c: 88: } else if (port[i].flag.led_indicator_ON == 0 && port[i].flag
      +                          .led_flag == 1) {
 11335  013176  D027               	goto	l11611
 11336  013178                     l11605:
 11337  013178  0100               	movlb	0	; () banked
 11338  01317A  5166               	movf	port_button_task@i& (0+255),w,b
 11339  01317C  0D17               	mullw	23
 11340  01317E  0E16               	movlw	22
 11341  013180  26F3               	addwf	prodl,f,c
 11342  013182  0E00               	movlw	0
 11343  013184  22F4               	addwfc	prodh,f,c
 11344  013186  0E2D               	movlw	low _port
 11345  013188  24F3               	addwf	prodl,w,c
 11346  01318A  6ED9               	movwf	fsr2l,c
 11347  01318C  0E01               	movlw	high _port
 11348  01318E  20F4               	addwfc	prodh,w,c
 11349  013190  6EDA               	movwf	fsr2h,c
 11350  013192  0101               	movlb	1	; () banked
 11351  013194  B2DF               	btfsc	indf2,1,c
 11352  013196  D017               	goto	l11611
 11353                           
 11354                           ; BSR set to: 1
 11355  013198  0100               	movlb	0	; () banked
 11356  01319A  5166               	movf	port_button_task@i& (0+255),w,b
 11357  01319C  0D17               	mullw	23
 11358  01319E  0E16               	movlw	22
 11359  0131A0  26F3               	addwf	prodl,f,c
 11360  0131A2  0E00               	movlw	0
 11361  0131A4  22F4               	addwfc	prodh,f,c
 11362  0131A6  0E2D               	movlw	low _port
 11363  0131A8  24F3               	addwf	prodl,w,c
 11364  0131AA  6ED9               	movwf	fsr2l,c
 11365  0131AC  0E01               	movlw	high _port
 11366  0131AE  20F4               	addwfc	prodh,w,c
 11367  0131B0  6EDA               	movwf	fsr2h,c
 11368  0131B2  0101               	movlb	1	; () banked
 11369  0131B4  A6DF               	btfss	indf2,3,c
 11370  0131B6  D007               	goto	l11611
 11371                           
 11372                           ; BSR set to: 1
 11373                           ;ChargeStation_task.c: 89: LED_output(i, 0);
 11374  0131B8  0E00               	movlw	0
 11375  0131BA  0100               	movlb	0	; () banked
 11376  0131BC  6F60               	movwf	LED_output@value& (0+255),b
 11377  0131BE  0100               	movlb	0	; () banked
 11378  0131C0  5166               	movf	port_button_task@i& (0+255),w,b
 11379  0131C2  ECBE  F0AF         	call	_LED_output
 11380  0131C6                     l11611:
 11381                           
 11382                           ;ChargeStation_task.c: 90: }
 11383                           ;ChargeStation_task.c: 92: if (port[i].ctmu.flag.press) {
 11384  0131C6  0100               	movlb	0	; () banked
 11385  0131C8  5166               	movf	port_button_task@i& (0+255),w,b
 11386  0131CA  0D17               	mullw	23
 11387  0131CC  0E02               	movlw	2
 11388  0131CE  26F3               	addwf	prodl,f,c
 11389  0131D0  0E00               	movlw	0
 11390  0131D2  22F4               	addwfc	prodh,f,c
 11391  0131D4  0E2D               	movlw	low _port
 11392  0131D6  24F3               	addwf	prodl,w,c
 11393  0131D8  6ED9               	movwf	fsr2l,c
 11394  0131DA  0E01               	movlw	high _port
 11395  0131DC  20F4               	addwfc	prodh,w,c
 11396  0131DE  6EDA               	movwf	fsr2h,c
 11397  0131E0  0101               	movlb	1	; () banked
 11398  0131E2  A0DF               	btfss	indf2,0,c
 11399  0131E4  D058               	goto	l11637
 11400                           
 11401                           ; BSR set to: 1
 11402                           ;ChargeStation_task.c: 93: port[i].ctmu.flags = 0;
 11403  0131E6  0100               	movlb	0	; () banked
 11404  0131E8  5166               	movf	port_button_task@i& (0+255),w,b
 11405  0131EA  0D17               	mullw	23
 11406  0131EC  0E02               	movlw	2
 11407  0131EE  26F3               	addwf	prodl,f,c
 11408  0131F0  0E00               	movlw	0
 11409  0131F2  22F4               	addwfc	prodh,f,c
 11410  0131F4  0E2D               	movlw	low _port
 11411  0131F6  24F3               	addwf	prodl,w,c
 11412  0131F8  6ED9               	movwf	fsr2l,c
 11413  0131FA  0E01               	movlw	high _port
 11414  0131FC  20F4               	addwfc	prodh,w,c
 11415  0131FE  6EDA               	movwf	fsr2h,c
 11416  013200  0E00               	movlw	0
 11417  013202  6EDE               	movwf	postinc2,c
 11418  013204  0E00               	movlw	0
 11419  013206  6EDD               	movwf	postdec2,c
 11420                           
 11421                           ; BSR set to: 0
 11422                           ;ChargeStation_task.c: 94: LED_output(i, 0);
 11423  013208  0E00               	movlw	0
 11424  01320A  0100               	movlb	0	; () banked
 11425  01320C  6F60               	movwf	LED_output@value& (0+255),b
 11426  01320E  0100               	movlb	0	; () banked
 11427  013210  5166               	movf	port_button_task@i& (0+255),w,b
 11428  013212  ECBE  F0AF         	call	_LED_output
 11429                           
 11430                           ;ChargeStation_task.c: 97: if (print_port == i) {
 11431  013216  0100               	movlb	0	; () banked
 11432  013218  5166               	movf	port_button_task@i& (0+255),w,b
 11433  01321A  0100               	movlb	0	; () banked
 11434  01321C  19FE               	xorwf	_print_port& (0+255),w,b
 11435  01321E  B4D8               	btfsc	status,2,c
 11436  013220  D008               	goto	l11629
 11437  013222  D010               	goto	l113
 11438  013224                     l11621:
 11439                           
 11440                           ;ChargeStation_task.c: 100: data_item = INTEGRATED_CURRENT;
 11441  013224  0E01               	movlw	1
 11442  013226  D003               	goto	L2
 11443  013228                     l11623:
 11444                           
 11445                           ;ChargeStation_task.c: 103: data_item = INTEGRATED_TIME;
 11446  013228  0E02               	movlw	2
 11447  01322A  D001               	goto	L2
 11448  01322C                     l11625:
 11449                           
 11450                           ;ChargeStation_task.c: 107: data_item = CURRENT;
 11451  01322C  0E00               	movlw	0
 11452  01322E                     L2:
 11453  01322E  6E1C               	movwf	_data_item,c
 11454                           
 11455                           ;ChargeStation_task.c: 109: }
 11456                           
 11457                           ;ChargeStation_task.c: 108: break;
 11458  013230  D00B               	goto	l11631
 11459  013232                     l11629:
 11460  013232  501C               	movf	_data_item,w,c
 11461                           
 11462                           ; Switch size 1, requested type "space"
 11463                           ; Number of cases is 3, Range of values is 0 to 2
 11464                           ; switch strategies available:
 11465                           ; Name         Instructions Cycles
 11466                           ; simple_byte           10     6 (average)
 11467                           ;	Chosen strategy is simple_byte
 11468  013234  0A00               	xorlw	0	; case 0
 11469  013236  B4D8               	btfsc	status,2,c
 11470  013238  D7F5               	goto	l11621
 11471  01323A  0A01               	xorlw	1	; case 1
 11472  01323C  B4D8               	btfsc	status,2,c
 11473  01323E  D7F4               	goto	l11623
 11474  013240  0A03               	xorlw	3	; case 2
 11475  013242  D7F4               	goto	l11625
 11476  013244                     l113:
 11477                           
 11478                           ; BSR set to: 0
 11479                           ;ChargeStation_task.c: 111: print_port = i;
 11480  013244  C066  F0FE         	movff	port_button_task@i,_print_port
 11481  013248                     l11631:
 11482                           
 11483                           ;ChargeStation_task.c: 112: }
 11484                           ;ChargeStation_task.c: 113: display(PRINT_DATA, "", "");
 11485  013248  0EE6               	movlw	low (STR_96+3)
 11486  01324A  0100               	movlb	0	; () banked
 11487  01324C  6F60               	movwf	display@str0& (0+255),b
 11488  01324E  0EFF               	movlw	high (STR_96+3)
 11489  013250  0100               	movlb	0	; () banked
 11490  013252  6F61               	movwf	(display@str0+1)& (0+255),b
 11491  013254  0EE6               	movlw	low (STR_96+3)
 11492  013256  0100               	movlb	0	; () banked
 11493  013258  6F62               	movwf	display@str1& (0+255),b
 11494  01325A  0EFF               	movlw	high (STR_96+3)
 11495  01325C  0100               	movlb	0	; () banked
 11496  01325E  6F63               	movwf	(display@str1+1)& (0+255),b
 11497  013260  0E02               	movlw	2
 11498  013262  ECEA  F09B         	call	_display
 11499                           
 11500                           ;ChargeStation_task.c: 115: OUT(i, 1);
 11501  013266  0E01               	movlw	1
 11502  013268  0100               	movlb	0	; () banked
 11503  01326A  6F60               	movwf	OUT@value& (0+255),b
 11504  01326C  0100               	movlb	0	; () banked
 11505  01326E  5166               	movf	port_button_task@i& (0+255),w,b
 11506  013270  ECF7  F0AF         	call	_OUT
 11507                           
 11508                           ;ChargeStation_task.c: 116: port[i].cut_cnt = 0;
 11509  013274  0100               	movlb	0	; () banked
 11510  013276  5166               	movf	port_button_task@i& (0+255),w,b
 11511  013278  0D17               	mullw	23
 11512  01327A  0E14               	movlw	20
 11513  01327C  26F3               	addwf	prodl,f,c
 11514  01327E  0E00               	movlw	0
 11515  013280  22F4               	addwfc	prodh,f,c
 11516  013282  0E2D               	movlw	low _port
 11517  013284  24F3               	addwf	prodl,w,c
 11518  013286  6ED9               	movwf	fsr2l,c
 11519  013288  0E01               	movlw	high _port
 11520  01328A  20F4               	addwfc	prodh,w,c
 11521  01328C  6EDA               	movwf	fsr2h,c
 11522  01328E  0E00               	movlw	0
 11523  013290  6EDE               	movwf	postinc2,c
 11524  013292  0E00               	movlw	0
 11525  013294  6EDD               	movwf	postdec2,c
 11526  013296                     l11637:
 11527  013296  0100               	movlb	0	; () banked
 11528  013298  2B66               	incf	port_button_task@i& (0+255),f,b
 11529  01329A  D751               	goto	l11597
 11530  01329C                     __end_of_port_button_task:
 11531                           	opt stack 0
 11532                           tblptru	equ	0xFF8
 11533                           tblptrh	equ	0xFF7
 11534                           tblptrl	equ	0xFF6
 11535                           tablat	equ	0xFF5
 11536                           prodh	equ	0xFF4
 11537                           prodl	equ	0xFF3
 11538                           intcon	equ	0xFF2
 11539                           postinc0	equ	0xFEE
 11540                           wreg	equ	0xFE8
 11541                           postinc1	equ	0xFE6
 11542                           postdec1	equ	0xFE5
 11543                           fsr1h	equ	0xFE2
 11544                           fsr1l	equ	0xFE1
 11545                           indf2	equ	0xFDF
 11546                           postinc2	equ	0xFDE
 11547                           postdec2	equ	0xFDD
 11548                           fsr2h	equ	0xFDA
 11549                           fsr2l	equ	0xFD9
 11550                           status	equ	0xFD8
 11551                           
 11552 ;; *************** function _display *****************
 11553 ;; Defined at:
 11554 ;;		line 15 in file "LCD_print.c"
 11555 ;; Parameters:    Size  Location     Type
 11556 ;;  item            1    wreg     enum E8527
 11557 ;;  str0            2    0[BANK0 ] PTR const unsigned char 
 11558 ;;		 -> STR_76(1), STR_74(9), STR_72(9), STR_70(9), 
 11559 ;;		 -> STR_68(9), STR_66(9), STR_64(9), STR_62(1), 
 11560 ;;		 -> STR_61(1), STR_58(17), STR_54(1), STR_53(1), 
 11561 ;;		 -> STR_50(17), STR_46(1), STR_45(1), STR_42(17), 
 11562 ;;		 -> STR_38(1), STR_36(1), STR_34(15), STR_7(15), 
 11563 ;;		 -> STR_3(1), STR_1(1), 
 11564 ;;  str1            2    2[BANK0 ] PTR const unsigned char 
 11565 ;;		 -> STR_77(1), STR_75(15), STR_73(16), STR_71(17), 
 11566 ;;		 -> STR_69(16), STR_67(17), STR_65(17), STR_63(1), 
 11567 ;;		 -> settings_integrating_reset@str_1379(20), settings_integrating_reset@str(20), STR_55(1), settings_led_indicator@s
      +tr_1362(20), 
 11568 ;;		 -> settings_led_indicator@str(20), STR_47(1), settings_auto_stop@str_1345(20), settings_auto_stop@str(20), 
 11569 ;;		 -> STR_39(1), STR_37(1), STR_35(13), STR_8(14), 
 11570 ;;		 -> STR_4(1), STR_2(1), 
 11571 ;; Auto vars:     Size  Location     Type
 11572 ;;  item            1    4[BANK0 ] enum E8527
 11573 ;;  i               1    5[BANK0 ] unsigned char 
 11574 ;; Return value:  Size  Location     Type
 11575 ;;		None               void
 11576 ;; Registers used:
 11577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 11578 ;; Tracked objects:
 11579 ;;		On entry : 0/0
 11580 ;;		On exit  : 0/0
 11581 ;;		Unchanged: 0/0
 11582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11583 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11584 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11586 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11587 ;;Total ram usage:        6 bytes
 11588 ;; Hardware stack levels used:    1
 11589 ;; Hardware stack levels required when called:   11
 11590 ;; This function calls:
 11591 ;;		Nothing
 11592 ;; This function is called by:
 11593 ;;		_port_button_task
 11594 ;;		_normal_task
 11595 ;;		_sleep_task
 11596 ;;		_software_init
 11597 ;;		_settings_adjust_time
 11598 ;;		_settings_auto_stop
 11599 ;;		_settings_led_indicator
 11600 ;;		_settings_integrating_reset
 11601 ;;		_settings_task
 11602 ;; This function uses a non-reentrant model
 11603 ;;
 11604                           
 11605                           	psect	text33
 11606  0137D4                     __ptext33:
 11607                           	opt stack 0
 11608  0137D4                     _display:
 11609                           	opt stack 18
 11610                           
 11611                           ; BSR set to: 0
 11612                           ;incstack = 0
 11613                           ;display@item stored from wreg
 11614  0137D4  0100               	movlb	0	; () banked
 11615  0137D6  6F64               	movwf	display@item& (0+255),b
 11616                           
 11617                           ;LCD_print.c: 16: print_item = item;
 11618  0137D8  C064  F020         	movff	display@item,_print_item
 11619                           
 11620                           ;LCD_print.c: 17: uint8_t i;
 11621                           ;LCD_print.c: 18: if (*str0) {
 11622  0137DC  C060  FFF6         	movff	display@str0,tblptrl
 11623  0137E0  C061  FFF7         	movff	display@str0+1,tblptrh
 11624  0137E4                     	if	0	;tblptru may be non-zero
 11625  0137E4                     	endif
 11626  0137E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11627  0137E4  0E00               	movlw	low (__mediumconst shr (0+16))
 11628  0137E6  6EF8               	movwf	tblptru,c
 11629  0137E8                     	endif
 11630  0137E8  0008               	tblrd		*
 11631  0137EA  50F5               	movf	tablat,w,c
 11632  0137EC  0900               	iorlw	0
 11633  0137EE  B4D8               	btfsc	status,2,c
 11634  0137F0  D031               	goto	l10575
 11635                           
 11636                           ;LCD_print.c: 19: for (i = 0; *str0; i++) {
 11637  0137F2  0E00               	movlw	0
 11638  0137F4  0100               	movlb	0	; () banked
 11639  0137F6  6F65               	movwf	display@i& (0+255),b
 11640  0137F8  D017               	goto	l10571
 11641  0137FA                     l10565:
 11642                           
 11643                           ; BSR set to: 0
 11644                           ;LCD_print.c: 20: display_char[0][i] = *str0++;
 11645  0137FA  C060  FFF6         	movff	display@str0,tblptrl
 11646  0137FE  C061  FFF7         	movff	display@str0+1,tblptrh
 11647  013802                     	if	0	;tblptru may be non-zero
 11648  013802                     	endif
 11649  013802                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11650  013802  0E00               	movlw	low (__mediumconst shr (0+16))
 11651  013804  6EF8               	movwf	tblptru,c
 11652  013806                     	endif
 11653  013806  0100               	movlb	0	; () banked
 11654  013808  5165               	movf	display@i& (0+255),w,b
 11655  01380A  0D01               	mullw	1
 11656  01380C  0E0E               	movlw	low _display_char
 11657  01380E  24F3               	addwf	prodl,w,c
 11658  013810  6ED9               	movwf	fsr2l,c
 11659  013812  0E02               	movlw	high _display_char
 11660  013814  20F4               	addwfc	prodh,w,c
 11661  013816  6EDA               	movwf	fsr2h,c
 11662  013818  0008               	tblrd		*
 11663  01381A  CFF5 FFDF          	movff	tablat,indf2
 11664                           
 11665                           ; BSR set to: 0
 11666  01381E  0100               	movlb	0	; () banked
 11667  013820  4B60               	infsnz	display@str0& (0+255),f,b
 11668  013822  2B61               	incf	(display@str0+1)& (0+255),f,b
 11669                           
 11670                           ; BSR set to: 0
 11671  013824  0100               	movlb	0	; () banked
 11672  013826  2B65               	incf	display@i& (0+255),f,b
 11673  013828                     l10571:
 11674                           
 11675                           ; BSR set to: 0
 11676  013828  C060  FFF6         	movff	display@str0,tblptrl
 11677  01382C  C061  FFF7         	movff	display@str0+1,tblptrh
 11678  013830                     	if	0	;tblptru may be non-zero
 11679  013830                     	endif
 11680  013830                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11681  013830  0E00               	movlw	low (__mediumconst shr (0+16))
 11682  013832  6EF8               	movwf	tblptru,c
 11683  013834                     	endif
 11684  013834  0008               	tblrd		*
 11685  013836  50F5               	movf	tablat,w,c
 11686  013838  0900               	iorlw	0
 11687  01383A  A4D8               	btfss	status,2,c
 11688  01383C  D7DE               	goto	l10565
 11689                           
 11690                           ; BSR set to: 0
 11691                           ;LCD_print.c: 21: }
 11692                           ;LCD_print.c: 22: display_char[0][i] = '\0';
 11693                           
 11694                           ; BSR set to: 0
 11695  01383E  0100               	movlb	0	; () banked
 11696  013840  5165               	movf	display@i& (0+255),w,b
 11697  013842  0D01               	mullw	1
 11698  013844  0E0E               	movlw	low _display_char
 11699  013846  24F3               	addwf	prodl,w,c
 11700  013848  6ED9               	movwf	fsr2l,c
 11701  01384A  0E02               	movlw	high _display_char
 11702  01384C  20F4               	addwfc	prodh,w,c
 11703  01384E  6EDA               	movwf	fsr2h,c
 11704  013850  0E00               	movlw	0
 11705  013852  6EDF               	movwf	indf2,c
 11706  013854                     l10575:
 11707                           
 11708                           ;LCD_print.c: 23: }
 11709                           ;LCD_print.c: 24: if (*str1) {
 11710  013854  C062  FFF6         	movff	display@str1,tblptrl
 11711  013858  C063  FFF7         	movff	display@str1+1,tblptrh
 11712  01385C  0E00               	movlw	low (__mediumconst shr (0+16))
 11713  01385E  6EF8               	movwf	tblptru,c
 11714  013860  0E0E               	movlw	(high __ramtop+-1)
 11715  013862  64F7               	cpfsgt	tblptrh,c
 11716  013864  D003               	bra	u11987
 11717  013866  0008               	tblrd		*
 11718  013868  50F5               	movf	tablat,w,c
 11719  01386A  D005               	bra	u11980
 11720  01386C                     u11987:
 11721  01386C  CFF6 FFE1          	movff	tblptrl,fsr1l
 11722  013870  CFF7 FFE2          	movff	tblptrh,fsr1h
 11723  013874  50E7               	movf	indf1,w,c
 11724  013876                     u11980:
 11725  013876  0900               	iorlw	0
 11726  013878  B4D8               	btfsc	status,2,c
 11727  01387A  D043               	goto	l10589
 11728                           
 11729                           ;LCD_print.c: 25: for (i = 0; *str1; i++) {
 11730  01387C  0E00               	movlw	0
 11731  01387E  0100               	movlb	0	; () banked
 11732  013880  6F65               	movwf	display@i& (0+255),b
 11733  013882  D020               	goto	l10585
 11734  013884                     l10579:
 11735                           
 11736                           ;LCD_print.c: 26: display_char[1][i] = *str1++;
 11737  013884  C062  FFF6         	movff	display@str1,tblptrl
 11738  013888  C063  FFF7         	movff	display@str1+1,tblptrh
 11739  01388C  0E00               	movlw	low (__mediumconst shr (0+16))
 11740  01388E  6EF8               	movwf	tblptru,c
 11741  013890  0100               	movlb	0	; () banked
 11742  013892  5165               	movf	display@i& (0+255),w,b
 11743  013894  0D01               	mullw	1
 11744  013896  0E22               	movlw	low (_display_char+20)
 11745  013898  24F3               	addwf	prodl,w,c
 11746  01389A  6ED9               	movwf	fsr2l,c
 11747  01389C  0E02               	movlw	high (_display_char+20)
 11748  01389E  20F4               	addwfc	prodh,w,c
 11749  0138A0  6EDA               	movwf	fsr2h,c
 11750  0138A2  0E0E               	movlw	(high __ramtop+-1)
 11751  0138A4  64F7               	cpfsgt	tblptrh,c
 11752  0138A6  D003               	bra	u12007
 11753  0138A8  0008               	tblrd		*
 11754  0138AA  50F5               	movf	tablat,w,c
 11755  0138AC  D005               	bra	u12000
 11756  0138AE                     u12007:
 11757  0138AE  CFF6 FFE1          	movff	tblptrl,fsr1l
 11758  0138B2  CFF7 FFE2          	movff	tblptrh,fsr1h
 11759  0138B6  50E7               	movf	indf1,w,c
 11760  0138B8                     u12000:
 11761  0138B8  6EDF               	movwf	indf2,c
 11762  0138BA  0100               	movlb	0	; () banked
 11763  0138BC  4B62               	infsnz	display@str1& (0+255),f,b
 11764  0138BE  2B63               	incf	(display@str1+1)& (0+255),f,b
 11765                           
 11766                           ; BSR set to: 0
 11767  0138C0  0100               	movlb	0	; () banked
 11768  0138C2  2B65               	incf	display@i& (0+255),f,b
 11769  0138C4                     l10585:
 11770                           
 11771                           ; BSR set to: 0
 11772  0138C4  C062  FFF6         	movff	display@str1,tblptrl
 11773  0138C8  C063  FFF7         	movff	display@str1+1,tblptrh
 11774  0138CC  0E00               	movlw	low (__mediumconst shr (0+16))
 11775  0138CE  6EF8               	movwf	tblptru,c
 11776  0138D0  0E0E               	movlw	(high __ramtop+-1)
 11777  0138D2  64F7               	cpfsgt	tblptrh,c
 11778  0138D4  D003               	bra	u12017
 11779  0138D6  0008               	tblrd		*
 11780  0138D8  50F5               	movf	tablat,w,c
 11781  0138DA  D005               	bra	u12010
 11782  0138DC                     u12017:
 11783  0138DC  CFF6 FFE1          	movff	tblptrl,fsr1l
 11784  0138E0  CFF7 FFE2          	movff	tblptrh,fsr1h
 11785  0138E4  50E7               	movf	indf1,w,c
 11786  0138E6                     u12010:
 11787  0138E6  0900               	iorlw	0
 11788  0138E8  A4D8               	btfss	status,2,c
 11789  0138EA  D7CC               	goto	l10579
 11790                           
 11791                           ;LCD_print.c: 27: }
 11792                           ;LCD_print.c: 28: display_char[1][i] = '\0';
 11793  0138EC  0100               	movlb	0	; () banked
 11794  0138EE  5165               	movf	display@i& (0+255),w,b
 11795  0138F0  0D01               	mullw	1
 11796  0138F2  0E22               	movlw	low (_display_char+20)
 11797  0138F4  24F3               	addwf	prodl,w,c
 11798  0138F6  6ED9               	movwf	fsr2l,c
 11799  0138F8  0E02               	movlw	high (_display_char+20)
 11800  0138FA  20F4               	addwfc	prodh,w,c
 11801  0138FC  6EDA               	movwf	fsr2h,c
 11802  0138FE  0E00               	movlw	0
 11803  013900  6EDF               	movwf	indf2,c
 11804  013902                     l10589:
 11805                           
 11806                           ;LCD_print.c: 29: }
 11807                           ;LCD_print.c: 30: display_flag = 1;
 11808  013902  0E01               	movlw	1
 11809  013904  6E1D               	movwf	_display_flag,c
 11810  013906  0012               	return		;funcret
 11811  013908                     __end_of_display:
 11812                           	opt stack 0
 11813                           tblptru	equ	0xFF8
 11814                           tblptrh	equ	0xFF7
 11815                           tblptrl	equ	0xFF6
 11816                           tablat	equ	0xFF5
 11817                           prodh	equ	0xFF4
 11818                           prodl	equ	0xFF3
 11819                           intcon	equ	0xFF2
 11820                           postinc0	equ	0xFEE
 11821                           wreg	equ	0xFE8
 11822                           indf1	equ	0xFE7
 11823                           postinc1	equ	0xFE6
 11824                           postdec1	equ	0xFE5
 11825                           fsr1h	equ	0xFE2
 11826                           fsr1l	equ	0xFE1
 11827                           indf2	equ	0xFDF
 11828                           postinc2	equ	0xFDE
 11829                           postdec2	equ	0xFDD
 11830                           fsr2h	equ	0xFDA
 11831                           fsr2l	equ	0xFD9
 11832                           status	equ	0xFD8
 11833                           
 11834 ;; *************** function _LED_output *****************
 11835 ;; Defined at:
 11836 ;;		line 36 in file "io.c"
 11837 ;; Parameters:    Size  Location     Type
 11838 ;;  b               1    wreg     unsigned char 
 11839 ;;  value           1    0[BANK0 ] unsigned char 
 11840 ;; Auto vars:     Size  Location     Type
 11841 ;;  b               1    1[BANK0 ] unsigned char 
 11842 ;; Return value:  Size  Location     Type
 11843 ;;		None               void
 11844 ;; Registers used:
 11845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11846 ;; Tracked objects:
 11847 ;;		On entry : 0/0
 11848 ;;		On exit  : 0/0
 11849 ;;		Unchanged: 0/0
 11850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11851 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11852 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11854 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11855 ;;Total ram usage:        2 bytes
 11856 ;; Hardware stack levels used:    1
 11857 ;; Hardware stack levels required when called:   11
 11858 ;; This function calls:
 11859 ;;		Nothing
 11860 ;; This function is called by:
 11861 ;;		_port_button_task
 11862 ;;		_sleep_task
 11863 ;;		_software_init
 11864 ;;		_settings_led_indicator
 11865 ;; This function uses a non-reentrant model
 11866 ;;
 11867                           
 11868                           	psect	text34
 11869  015F7C                     __ptext34:
 11870                           	opt stack 0
 11871  015F7C                     _LED_output:
 11872                           	opt stack 18
 11873                           
 11874                           ;incstack = 0
 11875                           ;LED_output@b stored from wreg
 11876  015F7C  0100               	movlb	0	; () banked
 11877  015F7E  6F61               	movwf	LED_output@b& (0+255),b
 11878                           
 11879                           ;io.c: 37: port[b].flag.led_flag = value;
 11880  015F80  0100               	movlb	0	; () banked
 11881  015F82  5161               	movf	LED_output@b& (0+255),w,b
 11882  015F84  0D17               	mullw	23
 11883  015F86  0E16               	movlw	22
 11884  015F88  26F3               	addwf	prodl,f,c
 11885  015F8A  0E00               	movlw	0
 11886  015F8C  22F4               	addwfc	prodh,f,c
 11887  015F8E  0E2D               	movlw	low _port
 11888  015F90  24F3               	addwf	prodl,w,c
 11889  015F92  6ED9               	movwf	fsr2l,c
 11890  015F94  0E01               	movlw	high _port
 11891  015F96  20F4               	addwfc	prodh,w,c
 11892  015F98  6EDA               	movwf	fsr2h,c
 11893  015F9A  0100               	movlb	0	; () banked
 11894  015F9C  B160               	btfsc	LED_output@value& (0+255),0,b
 11895  015F9E  D003               	bra	u11895
 11896  015FA0  0101               	movlb	1	; () banked
 11897  015FA2  96DF               	bcf	indf2,3,c
 11898  015FA4  D002               	bra	u11896
 11899  015FA6                     u11895:
 11900  015FA6  0101               	movlb	1	; () banked
 11901  015FA8  86DF               	bsf	indf2,3,c
 11902  015FAA                     u11896:
 11903                           
 11904                           ;io.c: 38: switch (b) {
 11905  015FAA  D015               	goto	l10557
 11906  015FAC                     l292:
 11907                           
 11908                           ; BSR set to: 0
 11909                           ;io.c: 40: LATB7 = value;
 11910  015FAC  0100               	movlb	0	; () banked
 11911  015FAE  A160               	btfss	LED_output@value& (0+255),0,b
 11912  015FB0  D002               	goto	u11900
 11913  015FB2  8E8A               	bsf	3978,7,c	;volatile
 11914  015FB4  0012               	return	
 11915  015FB6                     u11900:
 11916  015FB6  9E8A               	bcf	3978,7,c	;volatile
 11917                           
 11918                           ;io.c: 41: break;
 11919  015FB8  0012               	return	
 11920  015FBA                     l294:
 11921                           
 11922                           ; BSR set to: 0
 11923                           ;io.c: 43: LATB6 = value;
 11924  015FBA  0100               	movlb	0	; () banked
 11925  015FBC  A160               	btfss	LED_output@value& (0+255),0,b
 11926  015FBE  D002               	goto	u11920
 11927  015FC0  8C8A               	bsf	3978,6,c	;volatile
 11928  015FC2  0012               	return	
 11929  015FC4                     u11920:
 11930  015FC4  9C8A               	bcf	3978,6,c	;volatile
 11931                           
 11932                           ;io.c: 44: break;
 11933  015FC6  0012               	return	
 11934  015FC8                     l295:
 11935                           
 11936                           ; BSR set to: 0
 11937                           ;io.c: 46: LATC2 = value;
 11938  015FC8  0100               	movlb	0	; () banked
 11939  015FCA  A160               	btfss	LED_output@value& (0+255),0,b
 11940  015FCC  D002               	goto	u11940
 11941  015FCE  848B               	bsf	3979,2,c	;volatile
 11942  015FD0  0012               	return	
 11943  015FD2                     u11940:
 11944  015FD2  948B               	bcf	3979,2,c	;volatile
 11945                           
 11946                           ;io.c: 48: }
 11947                           
 11948                           ;io.c: 47: break;
 11949  015FD4  0012               	return	
 11950  015FD6                     l10557:
 11951  015FD6  0100               	movlb	0	; () banked
 11952  015FD8  5161               	movf	LED_output@b& (0+255),w,b
 11953                           
 11954                           ; Switch size 1, requested type "space"
 11955                           ; Number of cases is 3, Range of values is 0 to 2
 11956                           ; switch strategies available:
 11957                           ; Name         Instructions Cycles
 11958                           ; simple_byte           10     6 (average)
 11959                           ;	Chosen strategy is simple_byte
 11960  015FDA  0A00               	xorlw	0	; case 0
 11961  015FDC  B4D8               	btfsc	status,2,c
 11962  015FDE  D7E6               	goto	l292
 11963  015FE0  0A01               	xorlw	1	; case 1
 11964  015FE2  B4D8               	btfsc	status,2,c
 11965  015FE4  D7EA               	goto	l294
 11966  015FE6  0A03               	xorlw	3	; case 2
 11967  015FE8  A4D8               	btfss	status,2,c
 11968  015FEA  0012               	return	
 11969  015FEC  D7ED               	goto	l295
 11970  015FEE                     __end_of_LED_output:
 11971                           	opt stack 0
 11972                           tblptru	equ	0xFF8
 11973                           tblptrh	equ	0xFF7
 11974                           tblptrl	equ	0xFF6
 11975                           tablat	equ	0xFF5
 11976                           prodh	equ	0xFF4
 11977                           prodl	equ	0xFF3
 11978                           intcon	equ	0xFF2
 11979                           postinc0	equ	0xFEE
 11980                           wreg	equ	0xFE8
 11981                           indf1	equ	0xFE7
 11982                           postinc1	equ	0xFE6
 11983                           postdec1	equ	0xFE5
 11984                           fsr1h	equ	0xFE2
 11985                           fsr1l	equ	0xFE1
 11986                           indf2	equ	0xFDF
 11987                           postinc2	equ	0xFDE
 11988                           postdec2	equ	0xFDD
 11989                           fsr2h	equ	0xFDA
 11990                           fsr2l	equ	0xFD9
 11991                           status	equ	0xFD8
 11992                           
 11993 ;; *************** function _integrate_time *****************
 11994 ;; Defined at:
 11995 ;;		line 76 in file "ChargeStation_task.c"
 11996 ;; Parameters:    Size  Location     Type
 11997 ;;		None
 11998 ;; Auto vars:     Size  Location     Type
 11999 ;;  i               1    2[BANK0 ] unsigned char 
 12000 ;; Return value:  Size  Location     Type
 12001 ;;		None               void
 12002 ;; Registers used:
 12003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12004 ;; Tracked objects:
 12005 ;;		On entry : 0/0
 12006 ;;		On exit  : 0/0
 12007 ;;		Unchanged: 0/0
 12008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12010 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12011 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12012 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12013 ;;Total ram usage:        3 bytes
 12014 ;; Hardware stack levels used:    1
 12015 ;; Hardware stack levels required when called:   11
 12016 ;; This function calls:
 12017 ;;		Nothing
 12018 ;; This function is called by:
 12019 ;;		_normal_task
 12020 ;; This function uses a non-reentrant model
 12021 ;;
 12022                           
 12023                           	psect	text35
 12024  01626E                     __ptext35:
 12025                           	opt stack 0
 12026  01626E                     _integrate_time:
 12027                           	opt stack 18
 12028                           
 12029                           ;ChargeStation_task.c: 77: for (uint8_t i = 0; i < 3; i++) {
 12030                           
 12031                           ;incstack = 0
 12032  01626E  0E00               	movlw	0
 12033  016270  0100               	movlb	0	; () banked
 12034  016272  6F62               	movwf	integrate_time@i& (0+255),b
 12035  016274                     l11583:
 12036                           
 12037                           ; BSR set to: 0
 12038  016274  0E02               	movlw	2
 12039  016276  0100               	movlb	0	; () banked
 12040  016278  6562               	cpfsgt	integrate_time@i& (0+255),b
 12041  01627A  D001               	goto	l11587
 12042  01627C  0012               	return	
 12043  01627E                     l11587:
 12044                           
 12045                           ; BSR set to: 0
 12046                           ;ChargeStation_task.c: 78: if (port[i].current > 100)port[i].integrated_time++;
 12047  01627E  0100               	movlb	0	; () banked
 12048  016280  5162               	movf	integrate_time@i& (0+255),w,b
 12049  016282  0D17               	mullw	23
 12050  016284  0E06               	movlw	6
 12051  016286  26F3               	addwf	prodl,f,c
 12052  016288  0E00               	movlw	0
 12053  01628A  22F4               	addwfc	prodh,f,c
 12054  01628C  0E2D               	movlw	low _port
 12055  01628E  24F3               	addwf	prodl,w,c
 12056  016290  6ED9               	movwf	fsr2l,c
 12057  016292  0E01               	movlw	high _port
 12058  016294  20F4               	addwfc	prodh,w,c
 12059  016296  6EDA               	movwf	fsr2h,c
 12060  016298  0E01               	movlw	1
 12061  01629A  50DB               	movf	plusw2,w,c
 12062  01629C  E104               	bnz	u13620
 12063  01629E  0E65               	movlw	101
 12064  0162A0  5CDE               	subwf	postinc2,w,c
 12065  0162A2  A0D8               	btfss	status,0,c
 12066  0162A4  D012               	goto	l11591
 12067  0162A6                     u13620:
 12068                           
 12069                           ; BSR set to: 0
 12070  0162A6  0100               	movlb	0	; () banked
 12071  0162A8  5162               	movf	integrate_time@i& (0+255),w,b
 12072  0162AA  0D17               	mullw	23
 12073  0162AC  0E10               	movlw	16
 12074  0162AE  26F3               	addwf	prodl,f,c
 12075  0162B0  0E00               	movlw	0
 12076  0162B2  22F4               	addwfc	prodh,f,c
 12077  0162B4  0E2D               	movlw	low _port
 12078  0162B6  24F3               	addwf	prodl,w,c
 12079  0162B8  6ED9               	movwf	fsr2l,c
 12080  0162BA  0E01               	movlw	high _port
 12081  0162BC  20F4               	addwfc	prodh,w,c
 12082  0162BE  6EDA               	movwf	fsr2h,c
 12083  0162C0  2ADE               	incf	postinc2,f,c
 12084  0162C2  0E00               	movlw	0
 12085  0162C4  22DE               	addwfc	postinc2,f,c
 12086  0162C6  22DE               	addwfc	postinc2,f,c
 12087  0162C8  22DE               	addwfc	postinc2,f,c
 12088  0162CA                     l11591:
 12089                           
 12090                           ; BSR set to: 0
 12091  0162CA  0100               	movlb	0	; () banked
 12092  0162CC  2B62               	incf	integrate_time@i& (0+255),f,b
 12093  0162CE  D7D2               	goto	l11583
 12094  0162D0                     __end_of_integrate_time:
 12095                           	opt stack 0
 12096                           tblptru	equ	0xFF8
 12097                           tblptrh	equ	0xFF7
 12098                           tblptrl	equ	0xFF6
 12099                           tablat	equ	0xFF5
 12100                           prodh	equ	0xFF4
 12101                           prodl	equ	0xFF3
 12102                           intcon	equ	0xFF2
 12103                           postinc0	equ	0xFEE
 12104                           wreg	equ	0xFE8
 12105                           indf1	equ	0xFE7
 12106                           postinc1	equ	0xFE6
 12107                           postdec1	equ	0xFE5
 12108                           fsr1h	equ	0xFE2
 12109                           fsr1l	equ	0xFE1
 12110                           indf2	equ	0xFDF
 12111                           postinc2	equ	0xFDE
 12112                           postdec2	equ	0xFDD
 12113                           plusw2	equ	0xFDB
 12114                           fsr2h	equ	0xFDA
 12115                           fsr2l	equ	0xFD9
 12116                           status	equ	0xFD8
 12117                           
 12118 ;; *************** function _integrate_current *****************
 12119 ;; Defined at:
 12120 ;;		line 67 in file "ChargeStation_task.c"
 12121 ;; Parameters:    Size  Location     Type
 12122 ;;		None
 12123 ;; Auto vars:     Size  Location     Type
 12124 ;;  i               1   15[BANK0 ] unsigned char 
 12125 ;; Return value:  Size  Location     Type
 12126 ;;		None               void
 12127 ;; Registers used:
 12128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12129 ;; Tracked objects:
 12130 ;;		On entry : 0/0
 12131 ;;		On exit  : 0/0
 12132 ;;		Unchanged: 0/0
 12133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12135 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12136 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12137 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12138 ;;Total ram usage:        3 bytes
 12139 ;; Hardware stack levels used:    1
 12140 ;; Hardware stack levels required when called:   12
 12141 ;; This function calls:
 12142 ;;		___lldiv
 12143 ;; This function is called by:
 12144 ;;		_normal_task
 12145 ;; This function uses a non-reentrant model
 12146 ;;
 12147                           
 12148                           	psect	text36
 12149  013E80                     __ptext36:
 12150                           	opt stack 0
 12151  013E80                     _integrate_current:
 12152                           	opt stack 17
 12153                           
 12154                           ;ChargeStation_task.c: 68: for (uint8_t i = 0; i < 3; i++) {
 12155                           
 12156                           ; BSR set to: 0
 12157                           ;incstack = 0
 12158  013E80  0E00               	movlw	0
 12159  013E82  0100               	movlb	0	; () banked
 12160  013E84  6F6F               	movwf	integrate_current@i& (0+255),b
 12161  013E86                     l11567:
 12162                           
 12163                           ; BSR set to: 0
 12164  013E86  0E02               	movlw	2
 12165  013E88  0100               	movlb	0	; () banked
 12166  013E8A  656F               	cpfsgt	integrate_current@i& (0+255),b
 12167  013E8C  D001               	goto	l11571
 12168  013E8E  0012               	return	
 12169  013E90                     l11571:
 12170                           
 12171                           ; BSR set to: 0
 12172                           ;ChargeStation_task.c: 69: if (port[i].current > 100) {
 12173  013E90  0100               	movlb	0	; () banked
 12174  013E92  516F               	movf	integrate_current@i& (0+255),w,b
 12175  013E94  0D17               	mullw	23
 12176  013E96  0E06               	movlw	6
 12177  013E98  26F3               	addwf	prodl,f,c
 12178  013E9A  0E00               	movlw	0
 12179  013E9C  22F4               	addwfc	prodh,f,c
 12180  013E9E  0E2D               	movlw	low _port
 12181  013EA0  24F3               	addwf	prodl,w,c
 12182  013EA2  6ED9               	movwf	fsr2l,c
 12183  013EA4  0E01               	movlw	high _port
 12184  013EA6  20F4               	addwfc	prodh,w,c
 12185  013EA8  6EDA               	movwf	fsr2h,c
 12186  013EAA  0E01               	movlw	1
 12187  013EAC  50DB               	movf	plusw2,w,c
 12188  013EAE  E104               	bnz	u13590
 12189  013EB0  0E65               	movlw	101
 12190  013EB2  5CDE               	subwf	postinc2,w,c
 12191  013EB4  A0D8               	btfss	status,0,c
 12192  013EB6  D05F               	goto	l11577
 12193  013EB8                     u13590:
 12194                           
 12195                           ; BSR set to: 0
 12196                           ;ChargeStation_task.c: 70: port[i].integrated_current_sec += (uint32_t) (port[i].current
      +                          );
 12197  013EB8  0100               	movlb	0	; () banked
 12198  013EBA  516F               	movf	integrate_current@i& (0+255),w,b
 12199  013EBC  0D17               	mullw	23
 12200  013EBE  0E06               	movlw	6
 12201  013EC0  26F3               	addwf	prodl,f,c
 12202  013EC2  0E00               	movlw	0
 12203  013EC4  22F4               	addwfc	prodh,f,c
 12204  013EC6  0E2D               	movlw	low _port
 12205  013EC8  24F3               	addwf	prodl,w,c
 12206  013ECA  6ED9               	movwf	fsr2l,c
 12207  013ECC  0E01               	movlw	high _port
 12208  013ECE  20F4               	addwfc	prodh,w,c
 12209  013ED0  6EDA               	movwf	fsr2h,c
 12210  013ED2  CFDE F06D          	movff	postinc2,??_integrate_current
 12211  013ED6  CFDD F06E          	movff	postdec2,??_integrate_current+1
 12212  013EDA  0100               	movlb	0	; () banked
 12213  013EDC  516F               	movf	integrate_current@i& (0+255),w,b
 12214  013EDE  0D17               	mullw	23
 12215  013EE0  0E08               	movlw	8
 12216  013EE2  26F3               	addwf	prodl,f,c
 12217  013EE4  0E00               	movlw	0
 12218  013EE6  22F4               	addwfc	prodh,f,c
 12219  013EE8  0E2D               	movlw	low _port
 12220  013EEA  24F3               	addwf	prodl,w,c
 12221  013EEC  6ED9               	movwf	fsr2l,c
 12222  013EEE  0E01               	movlw	high _port
 12223  013EF0  20F4               	addwfc	prodh,w,c
 12224  013EF2  6EDA               	movwf	fsr2h,c
 12225  013EF4  0100               	movlb	0	; () banked
 12226  013EF6  516D               	movf	??_integrate_current& (0+255),w,b
 12227  013EF8  26DE               	addwf	postinc2,f,c
 12228  013EFA  516E               	movf	(??_integrate_current+1)& (0+255),w,b
 12229  013EFC  22DE               	addwfc	postinc2,f,c
 12230  013EFE  0E00               	movlw	0
 12231  013F00  22DE               	addwfc	postinc2,f,c
 12232  013F02  22DE               	addwfc	postinc2,f,c
 12233                           
 12234                           ; BSR set to: 0
 12235                           ;ChargeStation_task.c: 71: port[i].integrated_current = (uint32_t) (port[i].integrated_c
      +                          urrent_sec) / 3600;
 12236  013F04  0100               	movlb	0	; () banked
 12237  013F06  516F               	movf	integrate_current@i& (0+255),w,b
 12238  013F08  0D17               	mullw	23
 12239  013F0A  0E08               	movlw	8
 12240  013F0C  26F3               	addwf	prodl,f,c
 12241  013F0E  0E00               	movlw	0
 12242  013F10  22F4               	addwfc	prodh,f,c
 12243  013F12  0E2D               	movlw	low _port
 12244  013F14  24F3               	addwf	prodl,w,c
 12245  013F16  6ED9               	movwf	fsr2l,c
 12246  013F18  0E01               	movlw	high _port
 12247  013F1A  20F4               	addwfc	prodh,w,c
 12248  013F1C  6EDA               	movwf	fsr2h,c
 12249  013F1E  CFDE F060          	movff	postinc2,___lldiv@dividend
 12250  013F22  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 12251  013F26  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 12252  013F2A  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 12253  013F2E  0E10               	movlw	16
 12254  013F30  0100               	movlb	0	; () banked
 12255  013F32  6F64               	movwf	___lldiv@divisor& (0+255),b
 12256  013F34  0E0E               	movlw	14
 12257  013F36  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12258  013F38  0E00               	movlw	0
 12259  013F3A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12260  013F3C  0E00               	movlw	0
 12261  013F3E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12262  013F40  EC89  F0A9         	call	___lldiv	;wreg free
 12263  013F44  0100               	movlb	0	; () banked
 12264  013F46  516F               	movf	integrate_current@i& (0+255),w,b
 12265  013F48  0D17               	mullw	23
 12266  013F4A  0E0C               	movlw	12
 12267  013F4C  26F3               	addwf	prodl,f,c
 12268  013F4E  0E00               	movlw	0
 12269  013F50  22F4               	addwfc	prodh,f,c
 12270  013F52  0E2D               	movlw	low _port
 12271  013F54  24F3               	addwf	prodl,w,c
 12272  013F56  6ED9               	movwf	fsr2l,c
 12273  013F58  0E01               	movlw	high _port
 12274  013F5A  20F4               	addwfc	prodh,w,c
 12275  013F5C  6EDA               	movwf	fsr2h,c
 12276  013F5E  0100               	movlb	0	; () banked
 12277  013F60  C060  FFDE         	movff	?___lldiv,postinc2
 12278  013F64  0100               	movlb	0	; () banked
 12279  013F66  C061  FFDE         	movff	?___lldiv+1,postinc2
 12280  013F6A  0100               	movlb	0	; () banked
 12281  013F6C  C062  FFDE         	movff	?___lldiv+2,postinc2
 12282  013F70  0100               	movlb	0	; () banked
 12283  013F72  C063  FFDE         	movff	?___lldiv+3,postinc2
 12284  013F76                     l11577:
 12285                           
 12286                           ; BSR set to: 0
 12287  013F76  0100               	movlb	0	; () banked
 12288  013F78  2B6F               	incf	integrate_current@i& (0+255),f,b
 12289  013F7A  D785               	goto	l11567
 12290  013F7C                     __end_of_integrate_current:
 12291                           	opt stack 0
 12292                           tblptru	equ	0xFF8
 12293                           tblptrh	equ	0xFF7
 12294                           tblptrl	equ	0xFF6
 12295                           tablat	equ	0xFF5
 12296                           prodh	equ	0xFF4
 12297                           prodl	equ	0xFF3
 12298                           intcon	equ	0xFF2
 12299                           postinc0	equ	0xFEE
 12300                           wreg	equ	0xFE8
 12301                           indf1	equ	0xFE7
 12302                           postinc1	equ	0xFE6
 12303                           postdec1	equ	0xFE5
 12304                           fsr1h	equ	0xFE2
 12305                           fsr1l	equ	0xFE1
 12306                           indf2	equ	0xFDF
 12307                           postinc2	equ	0xFDE
 12308                           postdec2	equ	0xFDD
 12309                           plusw2	equ	0xFDB
 12310                           fsr2h	equ	0xFDA
 12311                           fsr2l	equ	0xFD9
 12312                           status	equ	0xFD8
 12313                           
 12314 ;; *************** function _display_LCD *****************
 12315 ;; Defined at:
 12316 ;;		line 33 in file "LCD_print.c"
 12317 ;; Parameters:    Size  Location     Type
 12318 ;;		None
 12319 ;; Auto vars:     Size  Location     Type
 12320 ;;  str            20   40[BANK1 ] unsigned char [20]
 12321 ;;  str            40    0[BANK1 ] unsigned char [20][2]
 12322 ;; Return value:  Size  Location     Type
 12323 ;;		None               void
 12324 ;; Registers used:
 12325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12326 ;; Tracked objects:
 12327 ;;		On entry : 0/0
 12328 ;;		On exit  : 0/0
 12329 ;;		Unchanged: 0/0
 12330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12332 ;;      Locals:         0       0      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12333 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12334 ;;      Totals:         0       5      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12335 ;;Total ram usage:       85 bytes
 12336 ;; Hardware stack levels used:    1
 12337 ;; Hardware stack levels required when called:   16
 12338 ;; This function calls:
 12339 ;;		_I2C_LCD_Clear
 12340 ;;		_I2C_LCD_Puts
 12341 ;;		_I2C_LCD_SetCursor
 12342 ;;		___lldiv
 12343 ;;		___llmod
 12344 ;;		___lwdiv
 12345 ;;		___lwmod
 12346 ;;		_display_time_1602
 12347 ;;		_sprintf
 12348 ;; This function is called by:
 12349 ;;		_normal_task
 12350 ;; This function uses a non-reentrant model
 12351 ;;
 12352                           
 12353                           	psect	text37
 12354  01051C                     __ptext37:
 12355                           	opt stack 0
 12356  01051C                     _display_LCD:
 12357                           	opt stack 13
 12358                           
 12359                           ;LCD_print.c: 34: I2C_LCD_Clear();
 12360                           
 12361                           ; BSR set to: 0
 12362                           ;incstack = 0
 12363  01051C  EC17  F0B6         	call	_I2C_LCD_Clear	;wreg free
 12364                           
 12365                           ;LCD_print.c: 35: switch (print_item) {
 12366  010520  D251               	goto	l11777
 12367  010522                     l11729:
 12368                           
 12369                           ;LCD_print.c: 37: case SETTINGS:
 12370                           ;LCD_print.c: 38: I2C_LCD_SetCursor(0, 0);
 12371  010522  0E00               	movlw	0
 12372  010524  0100               	movlb	0	; () banked
 12373  010526  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 12374  010528  0E00               	movlw	0
 12375  01052A  ECC8  F0B4         	call	_I2C_LCD_SetCursor
 12376                           
 12377                           ;LCD_print.c: 39: I2C_LCD_Puts(display_char[0]);
 12378  01052E  0E0E               	movlw	low _display_char
 12379  010530  0100               	movlb	0	; () banked
 12380  010532  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 12381  010534  0E02               	movlw	high _display_char
 12382  010536  0100               	movlb	0	; () banked
 12383  010538  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 12384  01053A  EC27  F0AD         	call	_I2C_LCD_Puts	;wreg free
 12385                           
 12386                           ;LCD_print.c: 40: I2C_LCD_SetCursor(0, 1);
 12387  01053E  0E01               	movlw	1
 12388  010540  0100               	movlb	0	; () banked
 12389  010542  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 12390  010544  0E00               	movlw	0
 12391  010546  ECC8  F0B4         	call	_I2C_LCD_SetCursor
 12392                           
 12393                           ;LCD_print.c: 41: I2C_LCD_Puts(display_char[1]);
 12394  01054A  0E22               	movlw	low (_display_char+20)
 12395  01054C  0100               	movlb	0	; () banked
 12396  01054E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 12397  010550  0E02               	movlw	high (_display_char+20)
 12398  010552  0100               	movlb	0	; () banked
 12399  010554  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 12400  010556  EC27  F0AD         	call	_I2C_LCD_Puts	;wreg free
 12401                           
 12402                           ;LCD_print.c: 42: break;
 12403  01055A  0012               	return	
 12404  01055C                     l11735:
 12405                           
 12406                           ;LCD_print.c: 44: {
 12407                           ;LCD_print.c: 45: char str[2][20];
 12408                           ;LCD_print.c: 46: display_time_1602(&now, str[0], str[1]);
 12409  01055C  0E72               	movlw	low _now
 12410  01055E  0100               	movlb	0	; () banked
 12411  010560  6FB3               	movwf	display_time_1602@tm& (0+255),b
 12412  010562  0E01               	movlw	high _now
 12413  010564  0100               	movlb	0	; () banked
 12414  010566  6FB4               	movwf	(display_time_1602@tm+1)& (0+255),b
 12415  010568  0E91               	movlw	low display_LCD@str
 12416  01056A  0100               	movlb	0	; () banked
 12417  01056C  6FB5               	movwf	display_time_1602@line0& (0+255),b
 12418  01056E  0E01               	movlw	high display_LCD@str
 12419  010570  0100               	movlb	0	; () banked
 12420  010572  6FB6               	movwf	(display_time_1602@line0+1)& (0+255),b
 12421  010574  0EA5               	movlw	low (display_LCD@str+20)
 12422  010576  0100               	movlb	0	; () banked
 12423  010578  6FB7               	movwf	display_time_1602@line1& (0+255),b
 12424  01057A  0E01               	movlw	high (display_LCD@str+20)
 12425  01057C  0100               	movlb	0	; () banked
 12426  01057E  6FB8               	movwf	(display_time_1602@line1+1)& (0+255),b
 12427  010580  ECDF  F089         	call	_display_time_1602	;wreg free
 12428                           
 12429                           ;LCD_print.c: 47: I2C_LCD_SetCursor(0, 0);
 12430  010584  0E00               	movlw	0
 12431  010586  0100               	movlb	0	; () banked
 12432  010588  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 12433  01058A  0E00               	movlw	0
 12434  01058C  ECC8  F0B4         	call	_I2C_LCD_SetCursor
 12435                           
 12436                           ;LCD_print.c: 48: I2C_LCD_Puts(str[0]);
 12437  010590  0E91               	movlw	low display_LCD@str
 12438  010592  0100               	movlb	0	; () banked
 12439  010594  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 12440  010596  0E01               	movlw	high display_LCD@str
 12441  010598  0100               	movlb	0	; () banked
 12442  01059A  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 12443  01059C  EC27  F0AD         	call	_I2C_LCD_Puts	;wreg free
 12444                           
 12445                           ;LCD_print.c: 49: I2C_LCD_SetCursor(0, 1);
 12446  0105A0  0E01               	movlw	1
 12447  0105A2  0100               	movlb	0	; () banked
 12448  0105A4  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 12449  0105A6  0E00               	movlw	0
 12450  0105A8  ECC8  F0B4         	call	_I2C_LCD_SetCursor
 12451                           
 12452                           ;LCD_print.c: 50: I2C_LCD_Puts(str[1]);
 12453  0105AC  0EA5               	movlw	low (display_LCD@str+20)
 12454  0105AE  0100               	movlb	0	; () banked
 12455  0105B0  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 12456  0105B2  0E01               	movlw	high (display_LCD@str+20)
 12457  0105B4  0100               	movlb	0	; () banked
 12458  0105B6  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 12459  0105B8  EC27  F0AD         	call	_I2C_LCD_Puts	;wreg free
 12460                           
 12461                           ;LCD_print.c: 51: }
 12462                           ;LCD_print.c: 52: break;
 12463  0105BC  0012               	return	
 12464  0105BE                     l11745:
 12465                           
 12466                           ;LCD_print.c: 54: {
 12467                           ;LCD_print.c: 55: char str[20];
 12468                           ;LCD_print.c: 56: static const char port_char[2][3][20] = {
 12469                           ;LCD_print.c: 57: {"LEFT   PORT", "CENTER PORT", "RIGHT  PORT"},
 12470                           ;LCD_print.c: 58: {"Left   Port", "Center Port", "Right  Port"}
 12471                           ;LCD_print.c: 59: };
 12472                           ;LCD_print.c: 60: static const char onoff[2][5] = {" OFF", " ON "};
 12473                           ;LCD_print.c: 61: sprintf(str, "%s %s", port_char[port[print_port].flag.auto_cut_ON][pri
      +                          nt_port],
 12474                           ;LCD_print.c: 62: onoff[(port[print_port].current > 100)]);
 12475  0105BE  0EB9               	movlw	low display_LCD@str_575
 12476  0105C0  0100               	movlb	0	; () banked
 12477  0105C2  6F83               	movwf	sprintf@sp& (0+255),b
 12478  0105C4  0E01               	movlw	high display_LCD@str_575
 12479  0105C6  0100               	movlb	0	; () banked
 12480  0105C8  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 12481  0105CA  0EBD               	movlw	low STR_30
 12482  0105CC  0100               	movlb	0	; () banked
 12483  0105CE  6F85               	movwf	sprintf@f& (0+255),b
 12484  0105D0  0EFF               	movlw	high STR_30
 12485  0105D2  0100               	movlb	0	; () banked
 12486  0105D4  6F86               	movwf	(sprintf@f+1)& (0+255),b
 12487  0105D6  0100               	movlb	0	; () banked
 12488  0105D8  51FE               	movf	_print_port& (0+255),w,b
 12489  0105DA  0D17               	mullw	23
 12490  0105DC  0E16               	movlw	22
 12491  0105DE  26F3               	addwf	prodl,f,c
 12492  0105E0  0E00               	movlw	0
 12493  0105E2  22F4               	addwfc	prodh,f,c
 12494  0105E4  0E2D               	movlw	low _port
 12495  0105E6  24F3               	addwf	prodl,w,c
 12496  0105E8  6ED9               	movwf	fsr2l,c
 12497  0105EA  0E01               	movlw	high _port
 12498  0105EC  20F4               	addwfc	prodh,w,c
 12499  0105EE  6EDA               	movwf	fsr2h,c
 12500  0105F0  0101               	movlb	1	; () banked
 12501  0105F2  A0DF               	btfss	indf2,0,c
 12502  0105F4  D004               	goto	u13820
 12503  0105F6  0100               	movlb	0	; () banked
 12504  0105F8  6BBA               	clrf	??_display_LCD& (0+255),b
 12505  0105FA  2BBA               	incf	??_display_LCD& (0+255),f,b
 12506  0105FC  D002               	goto	u13828
 12507  0105FE                     u13820:
 12508  0105FE  0100               	movlb	0	; () banked
 12509  010600  6BBA               	clrf	??_display_LCD& (0+255),b
 12510  010602                     u13828:
 12511  010602  0100               	movlb	0	; () banked
 12512  010604  51BA               	movf	??_display_LCD& (0+255),w,b
 12513  010606  0D3C               	mullw	60
 12514  010608  0E81               	movlw	low display_LCD@port_char
 12515  01060A  0100               	movlb	0	; () banked
 12516  01060C  6FBB               	movwf	(??_display_LCD+1)& (0+255),b
 12517  01060E  0EFA               	movlw	high display_LCD@port_char
 12518  010610  0100               	movlb	0	; () banked
 12519  010612  6FBC               	movwf	(??_display_LCD+2)& (0+255),b
 12520  010614  50F3               	movf	prodl,w,c
 12521  010616  0100               	movlb	0	; () banked
 12522  010618  27BB               	addwf	(??_display_LCD+1)& (0+255),f,b
 12523  01061A  50F4               	movf	prodh,w,c
 12524  01061C  0100               	movlb	0	; () banked
 12525  01061E  23BC               	addwfc	(??_display_LCD+2)& (0+255),f,b
 12526  010620  0100               	movlb	0	; () banked
 12527  010622  51FE               	movf	_print_port& (0+255),w,b
 12528  010624  0D14               	mullw	20
 12529  010626  50F3               	movf	prodl,w,c
 12530  010628  0100               	movlb	0	; () banked
 12531  01062A  25BB               	addwf	(??_display_LCD+1)& (0+255),w,b
 12532  01062C  0100               	movlb	0	; () banked
 12533  01062E  6F87               	movwf	(?_sprintf+4)& (0+255),b
 12534  010630  50F4               	movf	prodh,w,c
 12535  010632  0100               	movlb	0	; () banked
 12536  010634  21BC               	addwfc	(??_display_LCD+2)& (0+255),w,b
 12537  010636  0100               	movlb	0	; () banked
 12538  010638  6F88               	movwf	(?_sprintf+5)& (0+255),b
 12539  01063A  0100               	movlb	0	; () banked
 12540  01063C  51FE               	movf	_print_port& (0+255),w,b
 12541  01063E  0D17               	mullw	23
 12542  010640  0E06               	movlw	6
 12543  010642  26F3               	addwf	prodl,f,c
 12544  010644  0E00               	movlw	0
 12545  010646  22F4               	addwfc	prodh,f,c
 12546  010648  0E2D               	movlw	low _port
 12547  01064A  24F3               	addwf	prodl,w,c
 12548  01064C  6ED9               	movwf	fsr2l,c
 12549  01064E  0E01               	movlw	high _port
 12550  010650  20F4               	addwfc	prodh,w,c
 12551  010652  6EDA               	movwf	fsr2h,c
 12552  010654  0E01               	movlw	1
 12553  010656  50DB               	movf	plusw2,w,c
 12554  010658  E104               	bnz	u13831
 12555  01065A  0E65               	movlw	101
 12556  01065C  5CDE               	subwf	postinc2,w,c
 12557  01065E  A0D8               	btfss	status,0,c
 12558  010660  D002               	goto	u13830
 12559  010662                     u13831:
 12560  010662  0E01               	movlw	1
 12561  010664  D001               	goto	u13840
 12562  010666                     u13830:
 12563  010666  0E00               	movlw	0
 12564  010668                     u13840:
 12565  010668  0D05               	mullw	5
 12566  01066A  0ED2               	movlw	low display_LCD@onoff
 12567  01066C  24F3               	addwf	prodl,w,c
 12568  01066E  0100               	movlb	0	; () banked
 12569  010670  6F89               	movwf	(?_sprintf+6)& (0+255),b
 12570  010672  0EFB               	movlw	high display_LCD@onoff
 12571  010674  20F4               	addwfc	prodh,w,c
 12572  010676  0100               	movlb	0	; () banked
 12573  010678  6F8A               	movwf	(?_sprintf+7)& (0+255),b
 12574  01067A  EC00  F080         	call	_sprintf	;wreg free
 12575                           
 12576                           ;LCD_print.c: 63: I2C_LCD_SetCursor(0, 0);
 12577  01067E  0E00               	movlw	0
 12578  010680  0100               	movlb	0	; () banked
 12579  010682  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 12580  010684  0E00               	movlw	0
 12581  010686  ECC8  F0B4         	call	_I2C_LCD_SetCursor
 12582                           
 12583                           ;LCD_print.c: 64: I2C_LCD_Puts(str);
 12584  01068A  0EB9               	movlw	low display_LCD@str_575
 12585  01068C  0100               	movlb	0	; () banked
 12586  01068E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 12587  010690  0E01               	movlw	high display_LCD@str_575
 12588  010692  0100               	movlb	0	; () banked
 12589  010694  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 12590  010696  EC27  F0AD         	call	_I2C_LCD_Puts	;wreg free
 12591                           
 12592                           ;LCD_print.c: 65: switch (data_item) {
 12593  01069A  D17B               	goto	l11769
 12594  01069C                     l11751:
 12595                           
 12596                           ;LCD_print.c: 67: sprintf(str, "%01d.%03dA", port[print_port].current / 1000, port[print
      +                          _port].current % 1000);
 12597  01069C  0EB9               	movlw	low display_LCD@str_575
 12598  01069E  0100               	movlb	0	; () banked
 12599  0106A0  6F83               	movwf	sprintf@sp& (0+255),b
 12600  0106A2  0E01               	movlw	high display_LCD@str_575
 12601  0106A4  0100               	movlb	0	; () banked
 12602  0106A6  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 12603  0106A8  0E48               	movlw	low STR_31
 12604  0106AA  0100               	movlb	0	; () banked
 12605  0106AC  6F85               	movwf	sprintf@f& (0+255),b
 12606  0106AE  0EFF               	movlw	high STR_31
 12607  0106B0  0100               	movlb	0	; () banked
 12608  0106B2  6F86               	movwf	(sprintf@f+1)& (0+255),b
 12609  0106B4  0100               	movlb	0	; () banked
 12610  0106B6  51FE               	movf	_print_port& (0+255),w,b
 12611  0106B8  0D17               	mullw	23
 12612  0106BA  0E06               	movlw	6
 12613  0106BC  26F3               	addwf	prodl,f,c
 12614  0106BE  0E00               	movlw	0
 12615  0106C0  22F4               	addwfc	prodh,f,c
 12616  0106C2  0E2D               	movlw	low _port
 12617  0106C4  24F3               	addwf	prodl,w,c
 12618  0106C6  6ED9               	movwf	fsr2l,c
 12619  0106C8  0E01               	movlw	high _port
 12620  0106CA  20F4               	addwfc	prodh,w,c
 12621  0106CC  6EDA               	movwf	fsr2h,c
 12622  0106CE  CFDE F07C          	movff	postinc2,___lwdiv@dividend
 12623  0106D2  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
 12624  0106D6  0E03               	movlw	3
 12625  0106D8  0100               	movlb	0	; () banked
 12626  0106DA  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12627  0106DC  0EE8               	movlw	232
 12628  0106DE  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 12629  0106E0  EC47  F0AF         	call	___lwdiv	;wreg free
 12630  0106E4  C07C  F087         	movff	?___lwdiv,?_sprintf+4
 12631  0106E8  C07D  F088         	movff	?___lwdiv+1,?_sprintf+5
 12632  0106EC  0100               	movlb	0	; () banked
 12633  0106EE  51FE               	movf	_print_port& (0+255),w,b
 12634  0106F0  0D17               	mullw	23
 12635  0106F2  0E06               	movlw	6
 12636  0106F4  26F3               	addwf	prodl,f,c
 12637  0106F6  0E00               	movlw	0
 12638  0106F8  22F4               	addwfc	prodh,f,c
 12639  0106FA  0E2D               	movlw	low _port
 12640  0106FC  24F3               	addwf	prodl,w,c
 12641  0106FE  6ED9               	movwf	fsr2l,c
 12642  010700  0E01               	movlw	high _port
 12643  010702  20F4               	addwfc	prodh,w,c
 12644  010704  6EDA               	movwf	fsr2h,c
 12645  010706  CFDE F060          	movff	postinc2,___lwmod@dividend
 12646  01070A  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 12647  01070E  0E03               	movlw	3
 12648  010710  0100               	movlb	0	; () banked
 12649  010712  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 12650  010714  0EE8               	movlw	232
 12651  010716  6F62               	movwf	___lwmod@divisor& (0+255),b
 12652  010718  EC68  F0B1         	call	___lwmod	;wreg free
 12653  01071C  C060  F089         	movff	?___lwmod,?_sprintf+6
 12654  010720  C061  F08A         	movff	?___lwmod+1,?_sprintf+7
 12655  010724  EC00  F080         	call	_sprintf	;wreg free
 12656                           
 12657                           ;LCD_print.c: 68: break;
 12658  010728  D13E               	goto	l11771
 12659  01072A                     l11753:
 12660                           
 12661                           ;LCD_print.c: 70: sprintf(str, "%06ldmAh", port[print_port].integrated_current);
 12662  01072A  0EB9               	movlw	low display_LCD@str_575
 12663  01072C  0100               	movlb	0	; () banked
 12664  01072E  6F83               	movwf	sprintf@sp& (0+255),b
 12665  010730  0E01               	movlw	high display_LCD@str_575
 12666  010732  0100               	movlb	0	; () banked
 12667  010734  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 12668  010736  0E44               	movlw	low (STR_28+15)
 12669  010738  0100               	movlb	0	; () banked
 12670  01073A  6F85               	movwf	sprintf@f& (0+255),b
 12671  01073C  0EFE               	movlw	high (STR_28+15)
 12672  01073E  0100               	movlb	0	; () banked
 12673  010740  6F86               	movwf	(sprintf@f+1)& (0+255),b
 12674  010742  0100               	movlb	0	; () banked
 12675  010744  51FE               	movf	_print_port& (0+255),w,b
 12676  010746  0D17               	mullw	23
 12677  010748  0E0C               	movlw	12
 12678  01074A  26F3               	addwf	prodl,f,c
 12679  01074C  0E00               	movlw	0
 12680  01074E  22F4               	addwfc	prodh,f,c
 12681  010750  0E2D               	movlw	low _port
 12682  010752  24F3               	addwf	prodl,w,c
 12683  010754  6ED9               	movwf	fsr2l,c
 12684  010756  0E01               	movlw	high _port
 12685  010758  20F4               	addwfc	prodh,w,c
 12686  01075A  6EDA               	movwf	fsr2h,c
 12687  01075C  CFDE F087          	movff	postinc2,?_sprintf+4
 12688  010760  CFDE F088          	movff	postinc2,?_sprintf+5
 12689  010764  CFDE F089          	movff	postinc2,?_sprintf+6
 12690  010768  CFDE F08A          	movff	postinc2,?_sprintf+7
 12691  01076C  EC00  F080         	call	_sprintf	;wreg free
 12692                           
 12693                           ;LCD_print.c: 71: break;
 12694  010770  D11A               	goto	l11771
 12695  010772                     l11755:
 12696                           
 12697                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 12698                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 12699                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 12700                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 12701                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 12702  010772  0E10               	movlw	16
 12703  010774  0100               	movlb	0	; () banked
 12704  010776  6F64               	movwf	___lldiv@divisor& (0+255),b
 12705  010778  0E0E               	movlw	14
 12706  01077A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12707  01077C  0E00               	movlw	0
 12708  01077E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12709  010780  0E00               	movlw	0
 12710  010782  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12711  010784  0100               	movlb	0	; () banked
 12712  010786  51FE               	movf	_print_port& (0+255),w,b
 12713  010788  0D17               	mullw	23
 12714  01078A  0E10               	movlw	16
 12715  01078C  26F3               	addwf	prodl,f,c
 12716  01078E  0E00               	movlw	0
 12717  010790  22F4               	addwfc	prodh,f,c
 12718  010792  0E2D               	movlw	low _port
 12719  010794  24F3               	addwf	prodl,w,c
 12720  010796  6ED9               	movwf	fsr2l,c
 12721  010798  0E01               	movlw	high _port
 12722  01079A  20F4               	addwfc	prodh,w,c
 12723  01079C  6EDA               	movwf	fsr2h,c
 12724  01079E  CFDE F060          	movff	postinc2,___lldiv@dividend
 12725  0107A2  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 12726  0107A6  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 12727  0107AA  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 12728  0107AE  EC89  F0A9         	call	___lldiv	;wreg free
 12729  0107B2  C060  F1CD         	movff	?___lldiv,_display_LCD$6726
 12730  0107B6  C061  F1CE         	movff	?___lldiv+1,_display_LCD$6726+1
 12731  0107BA  C062  F1CF         	movff	?___lldiv+2,_display_LCD$6726+2
 12732  0107BE  C063  F1D0         	movff	?___lldiv+3,_display_LCD$6726+3
 12733                           
 12734                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 12735                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 12736                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 12737                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 12738                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 12739  0107C2  C1CD  F060         	movff	_display_LCD$6726,___lldiv@dividend
 12740  0107C6  C1CE  F061         	movff	_display_LCD$6726+1,___lldiv@dividend+1
 12741  0107CA  C1CF  F062         	movff	_display_LCD$6726+2,___lldiv@dividend+2
 12742  0107CE  C1D0  F063         	movff	_display_LCD$6726+3,___lldiv@dividend+3
 12743  0107D2  0E18               	movlw	24
 12744  0107D4  0100               	movlb	0	; () banked
 12745  0107D6  6F64               	movwf	___lldiv@divisor& (0+255),b
 12746  0107D8  0E00               	movlw	0
 12747  0107DA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12748  0107DC  0E00               	movlw	0
 12749  0107DE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12750  0107E0  0E00               	movlw	0
 12751  0107E2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12752  0107E4  EC89  F0A9         	call	___lldiv	;wreg free
 12753  0107E8  C060  F1D1         	movff	?___lldiv,_display_LCD$6727
 12754  0107EC  C061  F1D2         	movff	?___lldiv+1,_display_LCD$6727+1
 12755  0107F0  C062  F1D3         	movff	?___lldiv+2,_display_LCD$6727+2
 12756  0107F4  C063  F1D4         	movff	?___lldiv+3,_display_LCD$6727+3
 12757                           
 12758                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 12759                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 12760                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 12761                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 12762                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 12763  0107F8  0E10               	movlw	16
 12764  0107FA  0100               	movlb	0	; () banked
 12765  0107FC  6F64               	movwf	___lldiv@divisor& (0+255),b
 12766  0107FE  0E0E               	movlw	14
 12767  010800  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12768  010802  0E00               	movlw	0
 12769  010804  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12770  010806  0E00               	movlw	0
 12771  010808  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12772  01080A  0100               	movlb	0	; () banked
 12773  01080C  51FE               	movf	_print_port& (0+255),w,b
 12774  01080E  0D17               	mullw	23
 12775  010810  0E10               	movlw	16
 12776  010812  26F3               	addwf	prodl,f,c
 12777  010814  0E00               	movlw	0
 12778  010816  22F4               	addwfc	prodh,f,c
 12779  010818  0E2D               	movlw	low _port
 12780  01081A  24F3               	addwf	prodl,w,c
 12781  01081C  6ED9               	movwf	fsr2l,c
 12782  01081E  0E01               	movlw	high _port
 12783  010820  20F4               	addwfc	prodh,w,c
 12784  010822  6EDA               	movwf	fsr2h,c
 12785  010824  CFDE F060          	movff	postinc2,___lldiv@dividend
 12786  010828  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 12787  01082C  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 12788  010830  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 12789  010834  EC89  F0A9         	call	___lldiv	;wreg free
 12790  010838  C060  F06D         	movff	?___lldiv,___llmod@dividend
 12791  01083C  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 12792  010840  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 12793  010844  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 12794  010848  0E18               	movlw	24
 12795  01084A  0100               	movlb	0	; () banked
 12796  01084C  6F71               	movwf	___llmod@divisor& (0+255),b
 12797  01084E  0E00               	movlw	0
 12798  010850  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 12799  010852  0E00               	movlw	0
 12800  010854  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 12801  010856  0E00               	movlw	0
 12802  010858  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 12803  01085A  EC49  F0AC         	call	___llmod	;wreg free
 12804  01085E  C06D  F1D5         	movff	?___llmod,_display_LCD$6728
 12805  010862  C06E  F1D6         	movff	?___llmod+1,_display_LCD$6728+1
 12806  010866  C06F  F1D7         	movff	?___llmod+2,_display_LCD$6728+2
 12807  01086A  C070  F1D8         	movff	?___llmod+3,_display_LCD$6728+3
 12808                           
 12809                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 12810                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 12811                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 12812                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 12813                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 12814  01086E  0E3C               	movlw	60
 12815  010870  0100               	movlb	0	; () banked
 12816  010872  6F64               	movwf	___lldiv@divisor& (0+255),b
 12817  010874  0E00               	movlw	0
 12818  010876  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12819  010878  0E00               	movlw	0
 12820  01087A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12821  01087C  0E00               	movlw	0
 12822  01087E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12823  010880  0100               	movlb	0	; () banked
 12824  010882  51FE               	movf	_print_port& (0+255),w,b
 12825  010884  0D17               	mullw	23
 12826  010886  0E10               	movlw	16
 12827  010888  26F3               	addwf	prodl,f,c
 12828  01088A  0E00               	movlw	0
 12829  01088C  22F4               	addwfc	prodh,f,c
 12830  01088E  0E2D               	movlw	low _port
 12831  010890  24F3               	addwf	prodl,w,c
 12832  010892  6ED9               	movwf	fsr2l,c
 12833  010894  0E01               	movlw	high _port
 12834  010896  20F4               	addwfc	prodh,w,c
 12835  010898  6EDA               	movwf	fsr2h,c
 12836  01089A  CFDE F060          	movff	postinc2,___lldiv@dividend
 12837  01089E  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 12838  0108A2  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 12839  0108A6  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 12840  0108AA  EC89  F0A9         	call	___lldiv	;wreg free
 12841  0108AE  C060  F06D         	movff	?___lldiv,___llmod@dividend
 12842  0108B2  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 12843  0108B6  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 12844  0108BA  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 12845  0108BE  0E3C               	movlw	60
 12846  0108C0  0100               	movlb	0	; () banked
 12847  0108C2  6F71               	movwf	___llmod@divisor& (0+255),b
 12848  0108C4  0E00               	movlw	0
 12849  0108C6  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 12850  0108C8  0E00               	movlw	0
 12851  0108CA  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 12852  0108CC  0E00               	movlw	0
 12853  0108CE  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 12854  0108D0  EC49  F0AC         	call	___llmod	;wreg free
 12855  0108D4  C06D  F1D9         	movff	?___llmod,_display_LCD$6729
 12856  0108D8  C06E  F1DA         	movff	?___llmod+1,_display_LCD$6729+1
 12857  0108DC  C06F  F1DB         	movff	?___llmod+2,_display_LCD$6729+2
 12858  0108E0  C070  F1DC         	movff	?___llmod+3,_display_LCD$6729+3
 12859                           
 12860                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 12861                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 12862                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 12863                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 12864                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 12865  0108E4  0100               	movlb	0	; () banked
 12866  0108E6  51FE               	movf	_print_port& (0+255),w,b
 12867  0108E8  0D17               	mullw	23
 12868  0108EA  0E10               	movlw	16
 12869  0108EC  26F3               	addwf	prodl,f,c
 12870  0108EE  0E00               	movlw	0
 12871  0108F0  22F4               	addwfc	prodh,f,c
 12872  0108F2  0E2D               	movlw	low _port
 12873  0108F4  24F3               	addwf	prodl,w,c
 12874  0108F6  6ED9               	movwf	fsr2l,c
 12875  0108F8  0E01               	movlw	high _port
 12876  0108FA  20F4               	addwfc	prodh,w,c
 12877  0108FC  6EDA               	movwf	fsr2h,c
 12878  0108FE  CFDE F06D          	movff	postinc2,___llmod@dividend
 12879  010902  CFDE F06E          	movff	postinc2,___llmod@dividend+1
 12880  010906  CFDE F06F          	movff	postinc2,___llmod@dividend+2
 12881  01090A  CFDE F070          	movff	postinc2,___llmod@dividend+3
 12882  01090E  0E3C               	movlw	60
 12883  010910  0100               	movlb	0	; () banked
 12884  010912  6F71               	movwf	___llmod@divisor& (0+255),b
 12885  010914  0E00               	movlw	0
 12886  010916  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 12887  010918  0E00               	movlw	0
 12888  01091A  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 12889  01091C  0E00               	movlw	0
 12890  01091E  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 12891  010920  EC49  F0AC         	call	___llmod	;wreg free
 12892  010924  C06D  F1DD         	movff	?___llmod,_display_LCD$6730
 12893  010928  C06E  F1DE         	movff	?___llmod+1,_display_LCD$6730+1
 12894  01092C  C06F  F1DF         	movff	?___llmod+2,_display_LCD$6730+2
 12895  010930  C070  F1E0         	movff	?___llmod+3,_display_LCD$6730+3
 12896                           
 12897                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 12898                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 12899                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 12900                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 12901                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 12902  010934  0EB9               	movlw	low display_LCD@str_575
 12903  010936  0100               	movlb	0	; () banked
 12904  010938  6F83               	movwf	sprintf@sp& (0+255),b
 12905  01093A  0E01               	movlw	high display_LCD@str_575
 12906  01093C  0100               	movlb	0	; () banked
 12907  01093E  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 12908  010940  0E01               	movlw	low STR_33
 12909  010942  0100               	movlb	0	; () banked
 12910  010944  6F85               	movwf	sprintf@f& (0+255),b
 12911  010946  0EFE               	movlw	high STR_33
 12912  010948  0100               	movlb	0	; () banked
 12913  01094A  6F86               	movwf	(sprintf@f+1)& (0+255),b
 12914  01094C  C1D1  F087         	movff	_display_LCD$6727,?_sprintf+4
 12915  010950  C1D2  F088         	movff	_display_LCD$6727+1,?_sprintf+5
 12916  010954  C1D3  F089         	movff	_display_LCD$6727+2,?_sprintf+6
 12917  010958  C1D4  F08A         	movff	_display_LCD$6727+3,?_sprintf+7
 12918  01095C  C1D5  F08B         	movff	_display_LCD$6728,?_sprintf+8
 12919  010960  C1D6  F08C         	movff	_display_LCD$6728+1,?_sprintf+9
 12920  010964  C1D7  F08D         	movff	_display_LCD$6728+2,?_sprintf+10
 12921  010968  C1D8  F08E         	movff	_display_LCD$6728+3,?_sprintf+11
 12922  01096C  C1D9  F08F         	movff	_display_LCD$6729,?_sprintf+12
 12923  010970  C1DA  F090         	movff	_display_LCD$6729+1,?_sprintf+13
 12924  010974  C1DB  F091         	movff	_display_LCD$6729+2,?_sprintf+14
 12925  010978  C1DC  F092         	movff	_display_LCD$6729+3,?_sprintf+15
 12926  01097C  C1DD  F093         	movff	_display_LCD$6730,?_sprintf+16
 12927  010980  C1DE  F094         	movff	_display_LCD$6730+1,?_sprintf+17
 12928  010984  C1DF  F095         	movff	_display_LCD$6730+2,?_sprintf+18
 12929  010988  C1E0  F096         	movff	_display_LCD$6730+3,?_sprintf+19
 12930  01098C  EC00  F080         	call	_sprintf	;wreg free
 12931                           
 12932                           ;LCD_print.c: 79: }
 12933                           
 12934                           ;LCD_print.c: 78: break;
 12935  010990  D00A               	goto	l11771
 12936  010992                     l11769:
 12937  010992  501C               	movf	_data_item,w,c
 12938                           
 12939                           ; Switch size 1, requested type "space"
 12940                           ; Number of cases is 3, Range of values is 0 to 2
 12941                           ; switch strategies available:
 12942                           ; Name         Instructions Cycles
 12943                           ; simple_byte           10     6 (average)
 12944                           ;	Chosen strategy is simple_byte
 12945  010994  0A00               	xorlw	0	; case 0
 12946  010996  B4D8               	btfsc	status,2,c
 12947  010998  D681               	goto	l11751
 12948  01099A  0A01               	xorlw	1	; case 1
 12949  01099C  B4D8               	btfsc	status,2,c
 12950  01099E  D6C5               	goto	l11753
 12951  0109A0  0A03               	xorlw	3	; case 2
 12952  0109A2  B4D8               	btfsc	status,2,c
 12953  0109A4  D6E6               	goto	l11755
 12954  0109A6                     l11771:
 12955                           
 12956                           ;LCD_print.c: 80: I2C_LCD_SetCursor(0, 1);
 12957  0109A6  0E01               	movlw	1
 12958  0109A8  0100               	movlb	0	; () banked
 12959  0109AA  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 12960  0109AC  0E00               	movlw	0
 12961  0109AE  ECC8  F0B4         	call	_I2C_LCD_SetCursor
 12962                           
 12963                           ;LCD_print.c: 81: I2C_LCD_Puts(str);
 12964  0109B2  0EB9               	movlw	low display_LCD@str_575
 12965  0109B4  0100               	movlb	0	; () banked
 12966  0109B6  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 12967  0109B8  0E01               	movlw	high display_LCD@str_575
 12968  0109BA  0100               	movlb	0	; () banked
 12969  0109BC  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 12970  0109BE  EC27  F0AD         	call	_I2C_LCD_Puts	;wreg free
 12971                           
 12972                           ;LCD_print.c: 84: }
 12973                           
 12974                           ;LCD_print.c: 82: }
 12975                           ;LCD_print.c: 83: break;
 12976  0109C2  0012               	return	
 12977  0109C4                     l11777:
 12978  0109C4  5020               	movf	_print_item,w,c
 12979                           
 12980                           ; Switch size 1, requested type "space"
 12981                           ; Number of cases is 4, Range of values is 0 to 3
 12982                           ; switch strategies available:
 12983                           ; Name         Instructions Cycles
 12984                           ; simple_byte           13     7 (average)
 12985                           ;	Chosen strategy is simple_byte
 12986  0109C6  0A00               	xorlw	0	; case 0
 12987  0109C8  B4D8               	btfsc	status,2,c
 12988  0109CA  D5AB               	goto	l11729
 12989  0109CC  0A01               	xorlw	1	; case 1
 12990  0109CE  B4D8               	btfsc	status,2,c
 12991  0109D0  D5C5               	goto	l11735
 12992  0109D2  0A03               	xorlw	3	; case 2
 12993  0109D4  B4D8               	btfsc	status,2,c
 12994  0109D6  D5F3               	goto	l11745
 12995  0109D8  0A01               	xorlw	1	; case 3
 12996  0109DA  A4D8               	btfss	status,2,c
 12997  0109DC  0012               	return	
 12998  0109DE  D5A1               	goto	l11729
 12999  0109E0                     __end_of_display_LCD:
 13000                           	opt stack 0
 13001                           tblptru	equ	0xFF8
 13002                           tblptrh	equ	0xFF7
 13003                           tblptrl	equ	0xFF6
 13004                           tablat	equ	0xFF5
 13005                           prodh	equ	0xFF4
 13006                           prodl	equ	0xFF3
 13007                           intcon	equ	0xFF2
 13008                           postinc0	equ	0xFEE
 13009                           wreg	equ	0xFE8
 13010                           indf1	equ	0xFE7
 13011                           postinc1	equ	0xFE6
 13012                           postdec1	equ	0xFE5
 13013                           fsr1h	equ	0xFE2
 13014                           fsr1l	equ	0xFE1
 13015                           indf2	equ	0xFDF
 13016                           postinc2	equ	0xFDE
 13017                           postdec2	equ	0xFDD
 13018                           plusw2	equ	0xFDB
 13019                           fsr2h	equ	0xFDA
 13020                           fsr2l	equ	0xFD9
 13021                           status	equ	0xFD8
 13022                           
 13023 ;; *************** function _display_time_1602 *****************
 13024 ;; Defined at:
 13025 ;;		line 237 in file "../../../My_library/My_RTCC.c"
 13026 ;; Parameters:    Size  Location     Type
 13027 ;;  tm              2   83[BANK0 ] PTR struct .
 13028 ;;		 -> now(14), 
 13029 ;;  line0           2   85[BANK0 ] PTR unsigned char 
 13030 ;;		 -> display_LCD@str(40), 
 13031 ;;  line1           2   87[BANK0 ] PTR unsigned char 
 13032 ;;		 -> display_LCD@str(40), 
 13033 ;; Auto vars:     Size  Location     Type
 13034 ;;		None
 13035 ;; Return value:  Size  Location     Type
 13036 ;;		None               void
 13037 ;; Registers used:
 13038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13039 ;; Tracked objects:
 13040 ;;		On entry : 0/0
 13041 ;;		On exit  : 0/0
 13042 ;;		Unchanged: 0/0
 13043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13044 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13046 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13047 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13048 ;;Total ram usage:        7 bytes
 13049 ;; Hardware stack levels used:    1
 13050 ;; Hardware stack levels required when called:   15
 13051 ;; This function calls:
 13052 ;;		_RTCC_from_RTCC
 13053 ;;		_display_dec
 13054 ;;		_strcat
 13055 ;;		_strcpy
 13056 ;; This function is called by:
 13057 ;;		_display_LCD
 13058 ;; This function uses a non-reentrant model
 13059 ;;
 13060                           
 13061                           	psect	text38
 13062  0113BE                     __ptext38:
 13063                           	opt stack 0
 13064  0113BE                     _display_time_1602:
 13065                           	opt stack 13
 13066                           
 13067                           ;My_RTCC.c: 238: RTCC_from_RTCC(&now);
 13068                           
 13069                           ;incstack = 0
 13070  0113BE  0E72               	movlw	low _now
 13071  0113C0  0100               	movlb	0	; () banked
 13072  0113C2  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 13073  0113C4  0E01               	movlw	high _now
 13074  0113C6  0100               	movlb	0	; () banked
 13075  0113C8  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 13076  0113CA  EC24  F0B6         	call	_RTCC_from_RTCC	;wreg free
 13077                           
 13078                           ;My_RTCC.c: 240: strcpy(line0, "");
 13079  0113CE  C0B5  F060         	movff	display_time_1602@line0,strcpy@to
 13080  0113D2  C0B6  F061         	movff	display_time_1602@line0+1,strcpy@to+1
 13081  0113D6  0EE6               	movlw	low (STR_96+3)
 13082  0113D8  0100               	movlb	0	; () banked
 13083  0113DA  6F62               	movwf	strcpy@from& (0+255),b
 13084  0113DC  0EFF               	movlw	high (STR_96+3)
 13085  0113DE  0100               	movlb	0	; () banked
 13086  0113E0  6F63               	movwf	(strcpy@from+1)& (0+255),b
 13087  0113E2  ECB1  F0B3         	call	_strcpy	;wreg free
 13088                           
 13089                           ;My_RTCC.c: 241: display_dec(line0, 20, tm->edit.flag.YY);
 13090  0113E6  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 13091  0113EA  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 13092  0113EE  0E14               	movlw	20
 13093  0113F0  0100               	movlb	0	; () banked
 13094  0113F2  6FAD               	movwf	display_dec@dec& (0+255),b
 13095  0113F4  0100               	movlb	0	; () banked
 13096  0113F6  EE20 F00D          	lfsr	2,13
 13097  0113FA  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13098  0113FC  26D9               	addwf	fsr2l,f,c
 13099  0113FE  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13100  011400  22DA               	addwfc	fsr2h,f,c
 13101  011402  0E00               	movlw	0
 13102  011404  BADF               	btfsc	indf2,5,c
 13103  011406  0E01               	movlw	1
 13104  011408  0100               	movlb	0	; () banked
 13105  01140A  6FAE               	movwf	display_dec@edit& (0+255),b
 13106  01140C  EC9E  F0B0         	call	_display_dec	;wreg free
 13107                           
 13108                           ;My_RTCC.c: 242: display_dec(line0, tm->YY, tm->edit.flag.YY);
 13109  011410  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 13110  011414  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 13111  011418  0100               	movlb	0	; () banked
 13112  01141A  EE20 F00A          	lfsr	2,10
 13113  01141E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13114  011420  26D9               	addwf	fsr2l,f,c
 13115  011422  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13116  011424  22DA               	addwfc	fsr2h,f,c
 13117  011426  50DF               	movf	indf2,w,c
 13118  011428  0100               	movlb	0	; () banked
 13119  01142A  6FAD               	movwf	display_dec@dec& (0+255),b
 13120  01142C  0100               	movlb	0	; () banked
 13121  01142E  EE20 F00D          	lfsr	2,13
 13122  011432  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13123  011434  26D9               	addwf	fsr2l,f,c
 13124  011436  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13125  011438  22DA               	addwfc	fsr2h,f,c
 13126  01143A  0E00               	movlw	0
 13127  01143C  BADF               	btfsc	indf2,5,c
 13128  01143E  0E01               	movlw	1
 13129  011440  0100               	movlb	0	; () banked
 13130  011442  6FAE               	movwf	display_dec@edit& (0+255),b
 13131  011444  EC9E  F0B0         	call	_display_dec	;wreg free
 13132                           
 13133                           ;My_RTCC.c: 243: strcat(line0, "/");
 13134  011448  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 13135  01144C  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 13136  011450  0EF9               	movlw	low STR_81
 13137  011452  0100               	movlb	0	; () banked
 13138  011454  6F62               	movwf	strcat@from& (0+255),b
 13139  011456  0EFF               	movlw	high STR_81
 13140  011458  0100               	movlb	0	; () banked
 13141  01145A  6F63               	movwf	(strcat@from+1)& (0+255),b
 13142  01145C  ECC9  F0B1         	call	_strcat	;wreg free
 13143                           
 13144                           ;My_RTCC.c: 244: display_dec(line0, tm->MM, tm->edit.flag.MM);
 13145  011460  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 13146  011464  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 13147  011468  0100               	movlb	0	; () banked
 13148  01146A  EE20 F009          	lfsr	2,9
 13149  01146E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13150  011470  26D9               	addwf	fsr2l,f,c
 13151  011472  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13152  011474  22DA               	addwfc	fsr2h,f,c
 13153  011476  50DF               	movf	indf2,w,c
 13154  011478  0100               	movlb	0	; () banked
 13155  01147A  6FAD               	movwf	display_dec@dec& (0+255),b
 13156  01147C  0100               	movlb	0	; () banked
 13157  01147E  EE20 F00D          	lfsr	2,13
 13158  011482  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13159  011484  26D9               	addwf	fsr2l,f,c
 13160  011486  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13161  011488  22DA               	addwfc	fsr2h,f,c
 13162  01148A  0E00               	movlw	0
 13163  01148C  B8DF               	btfsc	indf2,4,c
 13164  01148E  0E01               	movlw	1
 13165  011490  0100               	movlb	0	; () banked
 13166  011492  6FAE               	movwf	display_dec@edit& (0+255),b
 13167  011494  EC9E  F0B0         	call	_display_dec	;wreg free
 13168                           
 13169                           ;My_RTCC.c: 245: strcat(line0, "/");
 13170  011498  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 13171  01149C  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 13172  0114A0  0EF9               	movlw	low STR_81
 13173  0114A2  0100               	movlb	0	; () banked
 13174  0114A4  6F62               	movwf	strcat@from& (0+255),b
 13175  0114A6  0EFF               	movlw	high STR_81
 13176  0114A8  0100               	movlb	0	; () banked
 13177  0114AA  6F63               	movwf	(strcat@from+1)& (0+255),b
 13178  0114AC  ECC9  F0B1         	call	_strcat	;wreg free
 13179                           
 13180                           ;My_RTCC.c: 246: display_dec(line0, tm->DD, tm->edit.flag.DD);
 13181  0114B0  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 13182  0114B4  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 13183  0114B8  0100               	movlb	0	; () banked
 13184  0114BA  EE20 F008          	lfsr	2,8
 13185  0114BE  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13186  0114C0  26D9               	addwf	fsr2l,f,c
 13187  0114C2  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13188  0114C4  22DA               	addwfc	fsr2h,f,c
 13189  0114C6  50DF               	movf	indf2,w,c
 13190  0114C8  0100               	movlb	0	; () banked
 13191  0114CA  6FAD               	movwf	display_dec@dec& (0+255),b
 13192  0114CC  0100               	movlb	0	; () banked
 13193  0114CE  EE20 F00D          	lfsr	2,13
 13194  0114D2  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13195  0114D4  26D9               	addwf	fsr2l,f,c
 13196  0114D6  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13197  0114D8  22DA               	addwfc	fsr2h,f,c
 13198  0114DA  0E00               	movlw	0
 13199  0114DC  B6DF               	btfsc	indf2,3,c
 13200  0114DE  0E01               	movlw	1
 13201  0114E0  0100               	movlb	0	; () banked
 13202  0114E2  6FAE               	movwf	display_dec@edit& (0+255),b
 13203  0114E4  EC9E  F0B0         	call	_display_dec	;wreg free
 13204                           
 13205                           ;My_RTCC.c: 247: strcat(line0, "(");
 13206  0114E8  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 13207  0114EC  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 13208  0114F0  0EF5               	movlw	low STR_90
 13209  0114F2  0100               	movlb	0	; () banked
 13210  0114F4  6F62               	movwf	strcat@from& (0+255),b
 13211  0114F6  0EFF               	movlw	high STR_90
 13212  0114F8  0100               	movlb	0	; () banked
 13213  0114FA  6F63               	movwf	(strcat@from+1)& (0+255),b
 13214  0114FC  ECC9  F0B1         	call	_strcat	;wreg free
 13215                           
 13216                           ;My_RTCC.c: 248: strcat(line0, weekday_3char[tm->EE]);
 13217  011500  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 13218  011504  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 13219  011508  0100               	movlb	0	; () banked
 13220  01150A  EE20 F007          	lfsr	2,7
 13221  01150E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13222  011510  26D9               	addwf	fsr2l,f,c
 13223  011512  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13224  011514  22DA               	addwfc	fsr2h,f,c
 13225  011516  50DF               	movf	indf2,w,c
 13226  011518  0100               	movlb	0	; () banked
 13227  01151A  6FB9               	movwf	??_display_time_1602& (0+255),b
 13228  01151C  0100               	movlb	0	; () banked
 13229  01151E  51B9               	movf	??_display_time_1602& (0+255),w,b
 13230  011520  0D04               	mullw	4
 13231  011522  0EA4               	movlw	low _weekday_3char
 13232  011524  24F3               	addwf	prodl,w,c
 13233  011526  0100               	movlb	0	; () banked
 13234  011528  6F62               	movwf	strcat@from& (0+255),b
 13235  01152A  0EFB               	movlw	high _weekday_3char
 13236  01152C  20F4               	addwfc	prodh,w,c
 13237  01152E  0100               	movlb	0	; () banked
 13238  011530  6F63               	movwf	(strcat@from+1)& (0+255),b
 13239  011532  ECC9  F0B1         	call	_strcat	;wreg free
 13240                           
 13241                           ;My_RTCC.c: 249: strcat(line0, ")");
 13242  011536  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 13243  01153A  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 13244  01153E  0E8F               	movlw	low (STR_118+5)
 13245  011540  0100               	movlb	0	; () banked
 13246  011542  6F62               	movwf	strcat@from& (0+255),b
 13247  011544  0EFF               	movlw	high (STR_118+5)
 13248  011546  0100               	movlb	0	; () banked
 13249  011548  6F63               	movwf	(strcat@from+1)& (0+255),b
 13250  01154A  ECC9  F0B1         	call	_strcat	;wreg free
 13251                           
 13252                           ;My_RTCC.c: 251: strcpy(line1, "        ");
 13253  01154E  C0B7  F060         	movff	display_time_1602@line1,strcpy@to
 13254  011552  C0B8  F061         	movff	display_time_1602@line1+1,strcpy@to+1
 13255  011556  0E5E               	movlw	low STR_92
 13256  011558  0100               	movlb	0	; () banked
 13257  01155A  6F62               	movwf	strcpy@from& (0+255),b
 13258  01155C  0EFF               	movlw	high STR_92
 13259  01155E  0100               	movlb	0	; () banked
 13260  011560  6F63               	movwf	(strcpy@from+1)& (0+255),b
 13261  011562  ECB1  F0B3         	call	_strcpy	;wreg free
 13262                           
 13263                           ;My_RTCC.c: 252: display_dec(line1, tm->hh, tm->edit.flag.hh);
 13264  011566  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 13265  01156A  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 13266  01156E  0100               	movlb	0	; () banked
 13267  011570  EE20 F006          	lfsr	2,6
 13268  011574  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13269  011576  26D9               	addwf	fsr2l,f,c
 13270  011578  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13271  01157A  22DA               	addwfc	fsr2h,f,c
 13272  01157C  50DF               	movf	indf2,w,c
 13273  01157E  0100               	movlb	0	; () banked
 13274  011580  6FAD               	movwf	display_dec@dec& (0+255),b
 13275  011582  0100               	movlb	0	; () banked
 13276  011584  EE20 F00D          	lfsr	2,13
 13277  011588  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13278  01158A  26D9               	addwf	fsr2l,f,c
 13279  01158C  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13280  01158E  22DA               	addwfc	fsr2h,f,c
 13281  011590  0E00               	movlw	0
 13282  011592  B4DF               	btfsc	indf2,2,c
 13283  011594  0E01               	movlw	1
 13284  011596  0100               	movlb	0	; () banked
 13285  011598  6FAE               	movwf	display_dec@edit& (0+255),b
 13286  01159A  EC9E  F0B0         	call	_display_dec	;wreg free
 13287                           
 13288                           ;My_RTCC.c: 253: if (tm->colon) strcat(line1, ":");
 13289  01159E  0100               	movlb	0	; () banked
 13290  0115A0  EE20 F00B          	lfsr	2,11
 13291  0115A4  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13292  0115A6  26D9               	addwf	fsr2l,f,c
 13293  0115A8  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13294  0115AA  22DA               	addwfc	fsr2h,f,c
 13295  0115AC  50DF               	movf	indf2,w,c
 13296  0115AE  B4D8               	btfsc	status,2,c
 13297  0115B0  D00D               	goto	l11041
 13298                           
 13299                           ; BSR set to: 0
 13300  0115B2  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 13301  0115B6  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 13302  0115BA  0EFB               	movlw	low STR_84
 13303  0115BC  0100               	movlb	0	; () banked
 13304  0115BE  6F62               	movwf	strcat@from& (0+255),b
 13305  0115C0  0EFF               	movlw	high STR_84
 13306  0115C2  0100               	movlb	0	; () banked
 13307  0115C4  6F63               	movwf	(strcat@from+1)& (0+255),b
 13308  0115C6  ECC9  F0B1         	call	_strcat	;wreg free
 13309  0115CA  D00C               	goto	l11043
 13310  0115CC                     l11041:
 13311                           
 13312                           ;My_RTCC.c: 254: else strcat(line1, " ");
 13313  0115CC  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 13314  0115D0  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 13315  0115D4  0E65               	movlw	low (STR_92+7)
 13316  0115D6  0100               	movlb	0	; () banked
 13317  0115D8  6F62               	movwf	strcat@from& (0+255),b
 13318  0115DA  0EFF               	movlw	high (STR_92+7)
 13319  0115DC  0100               	movlb	0	; () banked
 13320  0115DE  6F63               	movwf	(strcat@from+1)& (0+255),b
 13321  0115E0  ECC9  F0B1         	call	_strcat	;wreg free
 13322  0115E4                     l11043:
 13323                           
 13324                           ;My_RTCC.c: 255: display_dec(line1, tm->mm, tm->edit.flag.mm);
 13325  0115E4  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 13326  0115E8  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 13327  0115EC  0100               	movlb	0	; () banked
 13328  0115EE  EE20 F005          	lfsr	2,5
 13329  0115F2  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13330  0115F4  26D9               	addwf	fsr2l,f,c
 13331  0115F6  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13332  0115F8  22DA               	addwfc	fsr2h,f,c
 13333  0115FA  50DF               	movf	indf2,w,c
 13334  0115FC  0100               	movlb	0	; () banked
 13335  0115FE  6FAD               	movwf	display_dec@dec& (0+255),b
 13336  011600  0100               	movlb	0	; () banked
 13337  011602  EE20 F00D          	lfsr	2,13
 13338  011606  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13339  011608  26D9               	addwf	fsr2l,f,c
 13340  01160A  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13341  01160C  22DA               	addwfc	fsr2h,f,c
 13342  01160E  0E00               	movlw	0
 13343  011610  B2DF               	btfsc	indf2,1,c
 13344  011612  0E01               	movlw	1
 13345  011614  0100               	movlb	0	; () banked
 13346  011616  6FAE               	movwf	display_dec@edit& (0+255),b
 13347  011618  EC9E  F0B0         	call	_display_dec	;wreg free
 13348                           
 13349                           ;My_RTCC.c: 256: strcat(line1, "-");
 13350  01161C  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 13351  011620  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 13352  011624  0EF7               	movlw	low STR_86
 13353  011626  0100               	movlb	0	; () banked
 13354  011628  6F62               	movwf	strcat@from& (0+255),b
 13355  01162A  0EFF               	movlw	high STR_86
 13356  01162C  0100               	movlb	0	; () banked
 13357  01162E  6F63               	movwf	(strcat@from+1)& (0+255),b
 13358  011630  ECC9  F0B1         	call	_strcat	;wreg free
 13359                           
 13360                           ;My_RTCC.c: 257: display_dec(line1, tm->ss, tm->edit.flag.ss);
 13361  011634  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 13362  011638  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 13363  01163C  0100               	movlb	0	; () banked
 13364  01163E  EE20 F004          	lfsr	2,4
 13365  011642  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13366  011644  26D9               	addwf	fsr2l,f,c
 13367  011646  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13368  011648  22DA               	addwfc	fsr2h,f,c
 13369  01164A  50DF               	movf	indf2,w,c
 13370  01164C  0100               	movlb	0	; () banked
 13371  01164E  6FAD               	movwf	display_dec@dec& (0+255),b
 13372  011650  0100               	movlb	0	; () banked
 13373  011652  EE20 F00D          	lfsr	2,13
 13374  011656  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13375  011658  26D9               	addwf	fsr2l,f,c
 13376  01165A  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13377  01165C  22DA               	addwfc	fsr2h,f,c
 13378  01165E  0E00               	movlw	0
 13379  011660  B0DF               	btfsc	indf2,0,c
 13380  011662  0E01               	movlw	1
 13381  011664  0100               	movlb	0	; () banked
 13382  011666  6FAE               	movwf	display_dec@edit& (0+255),b
 13383  011668  EC9E  F0B0         	call	_display_dec	;wreg free
 13384  01166C  0012               	return		;funcret
 13385  01166E                     __end_of_display_time_1602:
 13386                           	opt stack 0
 13387                           tblptru	equ	0xFF8
 13388                           tblptrh	equ	0xFF7
 13389                           tblptrl	equ	0xFF6
 13390                           tablat	equ	0xFF5
 13391                           prodh	equ	0xFF4
 13392                           prodl	equ	0xFF3
 13393                           intcon	equ	0xFF2
 13394                           postinc0	equ	0xFEE
 13395                           wreg	equ	0xFE8
 13396                           indf1	equ	0xFE7
 13397                           postinc1	equ	0xFE6
 13398                           postdec1	equ	0xFE5
 13399                           fsr1h	equ	0xFE2
 13400                           fsr1l	equ	0xFE1
 13401                           indf2	equ	0xFDF
 13402                           postinc2	equ	0xFDE
 13403                           postdec2	equ	0xFDD
 13404                           plusw2	equ	0xFDB
 13405                           fsr2h	equ	0xFDA
 13406                           fsr2l	equ	0xFD9
 13407                           status	equ	0xFD8
 13408                           
 13409 ;; *************** function _strcpy *****************
 13410 ;; Defined at:
 13411 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
 13412 ;; Parameters:    Size  Location     Type
 13413 ;;  to              2    0[BANK0 ] PTR unsigned char 
 13414 ;;		 -> settings_integrating_reset@str_1379(20), settings_integrating_reset@str(20), settings_led_indicator@str_1362(20)
      +, settings_led_indicator@str(20), 
 13415 ;;		 -> settings_auto_stop@str_1345(20), settings_auto_stop@str(20), display_LCD@str(40), 
 13416 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 13417 ;;		 -> STR_92(9), STR_87(1), STR_83(1), STR_80(1), 
 13418 ;;		 -> STR_60(6), STR_59(6), STR_57(6), STR_56(6), 
 13419 ;;		 -> STR_52(6), STR_51(6), STR_49(6), STR_48(6), 
 13420 ;;		 -> STR_44(6), STR_43(6), STR_41(6), STR_40(6), 
 13421 ;; Auto vars:     Size  Location     Type
 13422 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 13423 ;;		 -> settings_integrating_reset@str_1379(20), settings_integrating_reset@str(20), settings_led_indicator@str_1362(20)
      +, settings_led_indicator@str(20), 
 13424 ;;		 -> settings_auto_stop@str_1345(20), settings_auto_stop@str(20), display_LCD@str(40), 
 13425 ;; Return value:  Size  Location     Type
 13426 ;;                  2    0[BANK0 ] PTR unsigned char 
 13427 ;; Registers used:
 13428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13429 ;; Tracked objects:
 13430 ;;		On entry : 0/0
 13431 ;;		On exit  : 0/0
 13432 ;;		Unchanged: 0/0
 13433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13434 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13435 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13437 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13438 ;;Total ram usage:        6 bytes
 13439 ;; Hardware stack levels used:    1
 13440 ;; Hardware stack levels required when called:   11
 13441 ;; This function calls:
 13442 ;;		Nothing
 13443 ;; This function is called by:
 13444 ;;		_settings_auto_stop
 13445 ;;		_settings_led_indicator
 13446 ;;		_settings_integrating_reset
 13447 ;;		_display_time_1602
 13448 ;;		_display_time_0802
 13449 ;; This function uses a non-reentrant model
 13450 ;;
 13451                           
 13452                           	psect	text39
 13453  016762                     __ptext39:
 13454                           	opt stack 0
 13455  016762                     _strcpy:
 13456                           	opt stack 16
 13457                           
 13458                           ;incstack = 0
 13459  016762  C060  F064         	movff	strcpy@to,strcpy@cp
 13460  016766  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
 13461  01676A  D006               	goto	l10829
 13462  01676C                     l10827:
 13463  01676C  0100               	movlb	0	; () banked
 13464  01676E  4B64               	infsnz	strcpy@cp& (0+255),f,b
 13465  016770  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
 13466  016772  0100               	movlb	0	; () banked
 13467  016774  4B62               	infsnz	strcpy@from& (0+255),f,b
 13468  016776  2B63               	incf	(strcpy@from+1)& (0+255),f,b
 13469  016778                     l10829:
 13470  016778  C062  FFF6         	movff	strcpy@from,tblptrl
 13471  01677C  C063  FFF7         	movff	strcpy@from+1,tblptrh
 13472  016780                     	if	0	;tblptru may be non-zero
 13473  016780                     	endif
 13474  016780                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13475  016780  0E00               	movlw	low (__mediumconst shr (0+16))
 13476  016782  6EF8               	movwf	tblptru,c
 13477  016784                     	endif
 13478  016784  C064  FFD9         	movff	strcpy@cp,fsr2l
 13479  016788  C065  FFDA         	movff	strcpy@cp+1,fsr2h
 13480  01678C  0008               	tblrd		*
 13481  01678E  CFF5 FFDF          	movff	tablat,indf2
 13482  016792  50DF               	movf	indf2,w,c
 13483  016794  B4D8               	btfsc	status,2,c
 13484  016796  0012               	return	
 13485  016798  D7E9               	goto	l10827
 13486  01679A                     __end_of_strcpy:
 13487                           	opt stack 0
 13488                           tblptru	equ	0xFF8
 13489                           tblptrh	equ	0xFF7
 13490                           tblptrl	equ	0xFF6
 13491                           tablat	equ	0xFF5
 13492                           prodh	equ	0xFF4
 13493                           prodl	equ	0xFF3
 13494                           intcon	equ	0xFF2
 13495                           postinc0	equ	0xFEE
 13496                           wreg	equ	0xFE8
 13497                           indf1	equ	0xFE7
 13498                           postinc1	equ	0xFE6
 13499                           postdec1	equ	0xFE5
 13500                           fsr1h	equ	0xFE2
 13501                           fsr1l	equ	0xFE1
 13502                           indf2	equ	0xFDF
 13503                           postinc2	equ	0xFDE
 13504                           postdec2	equ	0xFDD
 13505                           plusw2	equ	0xFDB
 13506                           fsr2h	equ	0xFDA
 13507                           fsr2l	equ	0xFD9
 13508                           status	equ	0xFD8
 13509                           
 13510 ;; *************** function _display_dec *****************
 13511 ;; Defined at:
 13512 ;;		line 211 in file "../../../My_library/My_RTCC.c"
 13513 ;; Parameters:    Size  Location     Type
 13514 ;;  str             2   75[BANK0 ] PTR unsigned char 
 13515 ;;		 -> display_LCD@str(40), 
 13516 ;;  dec             1   77[BANK0 ] unsigned char 
 13517 ;;  edit            1   78[BANK0 ] unsigned char 
 13518 ;; Auto vars:     Size  Location     Type
 13519 ;;  s               4   79[BANK0 ] unsigned char [4]
 13520 ;; Return value:  Size  Location     Type
 13521 ;;		None               void
 13522 ;; Registers used:
 13523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13524 ;; Tracked objects:
 13525 ;;		On entry : 0/0
 13526 ;;		On exit  : 0/0
 13527 ;;		Unchanged: 0/0
 13528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13529 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13530 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13532 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13533 ;;Total ram usage:        8 bytes
 13534 ;; Hardware stack levels used:    1
 13535 ;; Hardware stack levels required when called:   13
 13536 ;; This function calls:
 13537 ;;		_sprintf
 13538 ;;		_strcat
 13539 ;; This function is called by:
 13540 ;;		_display_time_1602
 13541 ;;		_display_time_0802
 13542 ;; This function uses a non-reentrant model
 13543 ;;
 13544                           
 13545                           	psect	text40
 13546  01613C                     __ptext40:
 13547                           	opt stack 0
 13548  01613C                     _display_dec:
 13549                           	opt stack 14
 13550                           
 13551                           ;My_RTCC.c: 212: char s[4];
 13552                           ;My_RTCC.c: 213: sprintf(s, "%02d", dec);
 13553                           
 13554                           ;incstack = 0
 13555  01613C  0EAF               	movlw	low display_dec@s
 13556  01613E  0100               	movlb	0	; () banked
 13557  016140  6F83               	movwf	sprintf@sp& (0+255),b
 13558  016142  0E00               	movlw	high display_dec@s
 13559  016144  0100               	movlb	0	; () banked
 13560  016146  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 13561  016148  0EFC               	movlw	low (STR_27+27)
 13562  01614A  0100               	movlb	0	; () banked
 13563  01614C  6F85               	movwf	sprintf@f& (0+255),b
 13564  01614E  0EFD               	movlw	high (STR_27+27)
 13565  016150  0100               	movlb	0	; () banked
 13566  016152  6F86               	movwf	(sprintf@f+1)& (0+255),b
 13567  016154  C0AD  F087         	movff	display_dec@dec,?_sprintf+4
 13568  016158  0100               	movlb	0	; () banked
 13569  01615A  6B88               	clrf	(?_sprintf+5)& (0+255),b
 13570  01615C  EC00  F080         	call	_sprintf	;wreg free
 13571                           
 13572                           ;My_RTCC.c: 214: if (edit && now.halfsec)strcat(str, "  ");
 13573  016160  0100               	movlb	0	; () banked
 13574  016162  51AE               	movf	display_dec@edit& (0+255),w,b
 13575  016164  0100               	movlb	0	; () banked
 13576  016166  B4D8               	btfsc	status,2,c
 13577  016168  D011               	goto	l10839
 13578                           
 13579                           ; BSR set to: 0
 13580  01616A  0101               	movlb	1	; () banked
 13581  01616C  517E               	movf	(_now+12)& (0+255),w,b
 13582  01616E  B4D8               	btfsc	status,2,c
 13583  016170  D00D               	goto	l10839
 13584                           
 13585                           ; BSR set to: 1
 13586  016172  C0AB  F060         	movff	display_dec@str,strcat@to
 13587  016176  C0AC  F061         	movff	display_dec@str+1,strcat@to+1
 13588  01617A  0E64               	movlw	low (STR_92+6)
 13589  01617C  0100               	movlb	0	; () banked
 13590  01617E  6F62               	movwf	strcat@from& (0+255),b
 13591  016180  0EFF               	movlw	high (STR_92+6)
 13592  016182  0100               	movlb	0	; () banked
 13593  016184  6F63               	movwf	(strcat@from+1)& (0+255),b
 13594  016186  ECC9  F0B1         	call	_strcat	;wreg free
 13595  01618A  0012               	return	
 13596  01618C                     l10839:
 13597                           
 13598                           ;My_RTCC.c: 215: else strcat(str, s);
 13599  01618C  C0AB  F060         	movff	display_dec@str,strcat@to
 13600  016190  C0AC  F061         	movff	display_dec@str+1,strcat@to+1
 13601  016194  0EAF               	movlw	low display_dec@s
 13602  016196  0100               	movlb	0	; () banked
 13603  016198  6F62               	movwf	strcat@from& (0+255),b
 13604  01619A  0E00               	movlw	high display_dec@s
 13605  01619C  0100               	movlb	0	; () banked
 13606  01619E  6F63               	movwf	(strcat@from+1)& (0+255),b
 13607  0161A0  ECC9  F0B1         	call	_strcat	;wreg free
 13608  0161A4  0012               	return	
 13609  0161A6                     __end_of_display_dec:
 13610                           	opt stack 0
 13611                           tblptru	equ	0xFF8
 13612                           tblptrh	equ	0xFF7
 13613                           tblptrl	equ	0xFF6
 13614                           tablat	equ	0xFF5
 13615                           prodh	equ	0xFF4
 13616                           prodl	equ	0xFF3
 13617                           intcon	equ	0xFF2
 13618                           postinc0	equ	0xFEE
 13619                           wreg	equ	0xFE8
 13620                           indf1	equ	0xFE7
 13621                           postinc1	equ	0xFE6
 13622                           postdec1	equ	0xFE5
 13623                           fsr1h	equ	0xFE2
 13624                           fsr1l	equ	0xFE1
 13625                           indf2	equ	0xFDF
 13626                           postinc2	equ	0xFDE
 13627                           postdec2	equ	0xFDD
 13628                           plusw2	equ	0xFDB
 13629                           fsr2h	equ	0xFDA
 13630                           fsr2l	equ	0xFD9
 13631                           status	equ	0xFD8
 13632                           
 13633 ;; *************** function _strcat *****************
 13634 ;; Defined at:
 13635 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcat.c"
 13636 ;; Parameters:    Size  Location     Type
 13637 ;;  to              2    0[BANK0 ] PTR unsigned char 
 13638 ;;		 -> display_LCD@str(40), 
 13639 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 13640 ;;		 -> STR_95(2), STR_94(2), STR_93(2), STR_91(2), 
 13641 ;;		 -> weekday_3char(28), STR_90(2), STR_89(2), STR_88(2), 
 13642 ;;		 -> STR_86(2), STR_85(2), STR_84(2), STR_82(2), 
 13643 ;;		 -> STR_81(2), STR_79(3), display_dec@s(4), 
 13644 ;; Auto vars:     Size  Location     Type
 13645 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 13646 ;;		 -> display_LCD@str(40), 
 13647 ;; Return value:  Size  Location     Type
 13648 ;;                  2    0[BANK0 ] PTR unsigned char 
 13649 ;; Registers used:
 13650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13651 ;; Tracked objects:
 13652 ;;		On entry : 0/0
 13653 ;;		On exit  : 0/0
 13654 ;;		Unchanged: 0/0
 13655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13656 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13657 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13659 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13660 ;;Total ram usage:        6 bytes
 13661 ;; Hardware stack levels used:    1
 13662 ;; Hardware stack levels required when called:   11
 13663 ;; This function calls:
 13664 ;;		Nothing
 13665 ;; This function is called by:
 13666 ;;		_display_dec
 13667 ;;		_display_time_1602
 13668 ;;		_display_time_0802
 13669 ;; This function uses a non-reentrant model
 13670 ;;
 13671                           
 13672                           	psect	text41
 13673  016392                     __ptext41:
 13674                           	opt stack 0
 13675  016392                     _strcat:
 13676                           	opt stack 16
 13677                           
 13678                           ;incstack = 0
 13679  016392  C060  F064         	movff	strcat@to,strcat@cp
 13680  016396  C061  F065         	movff	strcat@to+1,strcat@cp+1
 13681  01639A  D003               	goto	l10533
 13682  01639C                     l10531:
 13683  01639C  0100               	movlb	0	; () banked
 13684  01639E  4B64               	infsnz	strcat@cp& (0+255),f,b
 13685  0163A0  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 13686  0163A2                     l10533:
 13687  0163A2  C064  FFD9         	movff	strcat@cp,fsr2l
 13688  0163A6  C065  FFDA         	movff	strcat@cp+1,fsr2h
 13689  0163AA  50DF               	movf	indf2,w,c
 13690  0163AC  B4D8               	btfsc	status,2,c
 13691  0163AE  D007               	goto	l10537
 13692  0163B0  D7F5               	goto	l10531
 13693  0163B2                     l10535:
 13694  0163B2  0100               	movlb	0	; () banked
 13695  0163B4  4B64               	infsnz	strcat@cp& (0+255),f,b
 13696  0163B6  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 13697  0163B8  0100               	movlb	0	; () banked
 13698  0163BA  4B62               	infsnz	strcat@from& (0+255),f,b
 13699  0163BC  2B63               	incf	(strcat@from+1)& (0+255),f,b
 13700  0163BE                     l10537:
 13701  0163BE  C062  FFF6         	movff	strcat@from,tblptrl
 13702  0163C2  C063  FFF7         	movff	strcat@from+1,tblptrh
 13703  0163C6  0E00               	movlw	low (__mediumconst shr (0+16))
 13704  0163C8  6EF8               	movwf	tblptru,c
 13705  0163CA  C064  FFD9         	movff	strcat@cp,fsr2l
 13706  0163CE  C065  FFDA         	movff	strcat@cp+1,fsr2h
 13707  0163D2  0E0E               	movlw	(high __ramtop+-1)
 13708  0163D4  64F7               	cpfsgt	tblptrh,c
 13709  0163D6  D003               	bra	u11867
 13710  0163D8  0008               	tblrd		*
 13711  0163DA  50F5               	movf	tablat,w,c
 13712  0163DC  D005               	bra	u11860
 13713  0163DE                     u11867:
 13714  0163DE  CFF6 FFE1          	movff	tblptrl,fsr1l
 13715  0163E2  CFF7 FFE2          	movff	tblptrh,fsr1h
 13716  0163E6  50E7               	movf	indf1,w,c
 13717  0163E8                     u11860:
 13718  0163E8  6EDF               	movwf	indf2,c
 13719  0163EA  50DF               	movf	indf2,w,c
 13720  0163EC  B4D8               	btfsc	status,2,c
 13721  0163EE  0012               	return	
 13722  0163F0  D7E0               	goto	l10535
 13723  0163F2                     __end_of_strcat:
 13724                           	opt stack 0
 13725                           tblptru	equ	0xFF8
 13726                           tblptrh	equ	0xFF7
 13727                           tblptrl	equ	0xFF6
 13728                           tablat	equ	0xFF5
 13729                           prodh	equ	0xFF4
 13730                           prodl	equ	0xFF3
 13731                           intcon	equ	0xFF2
 13732                           postinc0	equ	0xFEE
 13733                           wreg	equ	0xFE8
 13734                           indf1	equ	0xFE7
 13735                           postinc1	equ	0xFE6
 13736                           postdec1	equ	0xFE5
 13737                           fsr1h	equ	0xFE2
 13738                           fsr1l	equ	0xFE1
 13739                           indf2	equ	0xFDF
 13740                           postinc2	equ	0xFDE
 13741                           postdec2	equ	0xFDD
 13742                           plusw2	equ	0xFDB
 13743                           fsr2h	equ	0xFDA
 13744                           fsr2l	equ	0xFD9
 13745                           status	equ	0xFD8
 13746                           
 13747 ;; *************** function _I2C_LCD_SetCursor *****************
 13748 ;; Defined at:
 13749 ;;		line 26 in file "../../../My_library/My_ST7032.c"
 13750 ;; Parameters:    Size  Location     Type
 13751 ;;  col             1    wreg     unsigned char 
 13752 ;;  row             1    6[BANK0 ] unsigned char 
 13753 ;; Auto vars:     Size  Location     Type
 13754 ;;  col             1    9[BANK0 ] unsigned char 
 13755 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
 13756 ;; Return value:  Size  Location     Type
 13757 ;;		None               void
 13758 ;; Registers used:
 13759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13760 ;; Tracked objects:
 13761 ;;		On entry : 0/0
 13762 ;;		On exit  : 0/0
 13763 ;;		Unchanged: 0/0
 13764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13765 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13766 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13768 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13769 ;;Total ram usage:        4 bytes
 13770 ;; Hardware stack levels used:    1
 13771 ;; Hardware stack levels required when called:   14
 13772 ;; This function calls:
 13773 ;;		_I2C_LCD_Command
 13774 ;; This function is called by:
 13775 ;;		_sleep_task
 13776 ;;		_bootload
 13777 ;;		_display_LCD
 13778 ;; This function uses a non-reentrant model
 13779 ;;
 13780                           
 13781                           	psect	text42
 13782  016990                     __ptext42:
 13783                           	opt stack 0
 13784  016990                     _I2C_LCD_SetCursor:
 13785                           	opt stack 13
 13786                           
 13787                           ;incstack = 0
 13788                           ;I2C_LCD_SetCursor@col stored from wreg
 13789  016990  0100               	movlb	0	; () banked
 13790  016992  6F69               	movwf	I2C_LCD_SetCursor@col& (0+255),b
 13791                           
 13792                           ;My_ST7032.c: 27: uint8_t row_offsets[] = {0x00, 0x40};
 13793  016994  C1E1  F067         	movff	I2C_LCD_SetCursor@F8630,I2C_LCD_SetCursor@row_offsets
 13794  016998  C1E2  F068         	movff	I2C_LCD_SetCursor@F8630+1,I2C_LCD_SetCursor@row_offsets+1
 13795                           
 13796                           ;My_ST7032.c: 29: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
 13797  01699C  0100               	movlb	0	; () banked
 13798  01699E  5166               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
 13799  0169A0  0D01               	mullw	1
 13800  0169A2  0E67               	movlw	low I2C_LCD_SetCursor@row_offsets
 13801  0169A4  24F3               	addwf	prodl,w,c
 13802  0169A6  6ED9               	movwf	fsr2l,c
 13803  0169A8  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
 13804  0169AA  20F4               	addwfc	prodh,w,c
 13805  0169AC  6EDA               	movwf	fsr2h,c
 13806  0169AE  50DF               	movf	indf2,w,c
 13807  0169B0  0100               	movlb	0	; () banked
 13808  0169B2  2569               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
 13809  0169B4  0980               	iorlw	128
 13810  0169B6  ECE9  F0B3         	call	_I2C_LCD_Command
 13811  0169BA  0012               	return		;funcret
 13812  0169BC                     __end_of_I2C_LCD_SetCursor:
 13813                           	opt stack 0
 13814                           tblptru	equ	0xFF8
 13815                           tblptrh	equ	0xFF7
 13816                           tblptrl	equ	0xFF6
 13817                           tablat	equ	0xFF5
 13818                           prodh	equ	0xFF4
 13819                           prodl	equ	0xFF3
 13820                           intcon	equ	0xFF2
 13821                           postinc0	equ	0xFEE
 13822                           wreg	equ	0xFE8
 13823                           indf1	equ	0xFE7
 13824                           postinc1	equ	0xFE6
 13825                           postdec1	equ	0xFE5
 13826                           fsr1h	equ	0xFE2
 13827                           fsr1l	equ	0xFE1
 13828                           indf2	equ	0xFDF
 13829                           postinc2	equ	0xFDE
 13830                           postdec2	equ	0xFDD
 13831                           plusw2	equ	0xFDB
 13832                           fsr2h	equ	0xFDA
 13833                           fsr2l	equ	0xFD9
 13834                           status	equ	0xFD8
 13835                           
 13836 ;; *************** function _I2C_LCD_Puts *****************
 13837 ;; Defined at:
 13838 ;;		line 45 in file "../../../My_library/My_ST7032.c"
 13839 ;; Parameters:    Size  Location     Type
 13840 ;;  s               2    4[BANK0 ] PTR const unsigned char 
 13841 ;;		 -> display_LCD@str_575(20), display_LCD@str(40), display_char(40), STR_10(16), 
 13842 ;;		 -> STR_9(12), STR_6(13), STR_5(17), 
 13843 ;; Auto vars:     Size  Location     Type
 13844 ;;  ans             2    7[BANK0 ] int 
 13845 ;; Return value:  Size  Location     Type
 13846 ;;		None               void
 13847 ;; Registers used:
 13848 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13849 ;; Tracked objects:
 13850 ;;		On entry : 0/0
 13851 ;;		On exit  : 0/0
 13852 ;;		Unchanged: 0/0
 13853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13854 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13855 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13856 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13857 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13858 ;;Total ram usage:        5 bytes
 13859 ;; Hardware stack levels used:    1
 13860 ;; Hardware stack levels required when called:   13
 13861 ;; This function calls:
 13862 ;;		_I2C_Send
 13863 ;;		_I2C_Start
 13864 ;;		_I2C_Stop
 13865 ;; This function is called by:
 13866 ;;		_sleep_task
 13867 ;;		_bootload
 13868 ;;		_display_LCD
 13869 ;; This function uses a non-reentrant model
 13870 ;;
 13871                           
 13872                           	psect	text43
 13873  015A4E                     __ptext43:
 13874                           	opt stack 0
 13875  015A4E                     _I2C_LCD_Puts:
 13876                           	opt stack 14
 13877                           
 13878                           ;My_ST7032.c: 46: int ans;
 13879                           ;My_ST7032.c: 48: ans = I2C_Start(0x3E, 0);
 13880                           
 13881                           ;incstack = 0
 13882  015A4E  0E00               	movlw	0
 13883  015A50  0100               	movlb	0	; () banked
 13884  015A52  6F62               	movwf	I2C_Start@rw& (0+255),b
 13885  015A54  0E3E               	movlw	62
 13886  015A56  EC6B  F0B4         	call	_I2C_Start
 13887  015A5A  0100               	movlb	0	; () banked
 13888  015A5C  6F66               	movwf	??_I2C_LCD_Puts& (0+255),b
 13889  015A5E  0100               	movlb	0	; () banked
 13890  015A60  5166               	movf	??_I2C_LCD_Puts& (0+255),w,b
 13891  015A62  0100               	movlb	0	; () banked
 13892  015A64  6F67               	movwf	I2C_LCD_Puts@ans& (0+255),b
 13893  015A66  6B68               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
 13894                           
 13895                           ; BSR set to: 0
 13896                           ;My_ST7032.c: 49: if (ans == 0) {
 13897  015A68  0100               	movlb	0	; () banked
 13898  015A6A  5167               	movf	I2C_LCD_Puts@ans& (0+255),w,b
 13899  015A6C  0100               	movlb	0	; () banked
 13900  015A6E  1168               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
 13901  015A70  A4D8               	btfss	status,2,c
 13902  015A72  D031               	goto	l10613
 13903                           
 13904                           ; BSR set to: 0
 13905                           ;My_ST7032.c: 50: I2C_Send(0b01000000);
 13906  015A74  0E40               	movlw	64
 13907  015A76  EC31  F0B6         	call	_I2C_Send
 13908                           
 13909                           ;My_ST7032.c: 51: while (*s) {
 13910  015A7A  D019               	goto	l10611
 13911  015A7C                     l10605:
 13912                           
 13913                           ;My_ST7032.c: 52: I2C_Send(*s++);
 13914  015A7C  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 13915  015A80  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 13916  015A84  0E00               	movlw	low (__mediumconst shr (0+16))
 13917  015A86  6EF8               	movwf	tblptru,c
 13918  015A88  0E0E               	movlw	(high __ramtop+-1)
 13919  015A8A  64F7               	cpfsgt	tblptrh,c
 13920  015A8C  D003               	bra	u12047
 13921  015A8E  0008               	tblrd		*
 13922  015A90  50F5               	movf	tablat,w,c
 13923  015A92  D005               	bra	u12040
 13924  015A94                     u12047:
 13925  015A94  CFF6 FFE1          	movff	tblptrl,fsr1l
 13926  015A98  CFF7 FFE2          	movff	tblptrh,fsr1h
 13927  015A9C  50E7               	movf	indf1,w,c
 13928  015A9E                     u12040:
 13929  015A9E  EC31  F0B6         	call	_I2C_Send
 13930  015AA2  0100               	movlb	0	; () banked
 13931  015AA4  4B64               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
 13932  015AA6  2B65               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
 13933                           
 13934                           ; BSR set to: 0
 13935                           ;My_ST7032.c: 53: _delay((unsigned long)((26)*(48000000/4000000.0)));
 13936  015AA8  0E68               	movlw	104
 13937  015AAA                     u14847:
 13938  015AAA  2EE8               	decfsz	wreg,f,c
 13939  015AAC  D7FE               	goto	u14847
 13940  015AAE                     l10611:
 13941  015AAE  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 13942  015AB2  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 13943  015AB6  0E00               	movlw	low (__mediumconst shr (0+16))
 13944  015AB8  6EF8               	movwf	tblptru,c
 13945  015ABA  0E0E               	movlw	(high __ramtop+-1)
 13946  015ABC  64F7               	cpfsgt	tblptrh,c
 13947  015ABE  D003               	bra	u12057
 13948  015AC0  0008               	tblrd		*
 13949  015AC2  50F5               	movf	tablat,w,c
 13950  015AC4  D005               	bra	u12050
 13951  015AC6                     u12057:
 13952  015AC6  CFF6 FFE1          	movff	tblptrl,fsr1l
 13953  015ACA  CFF7 FFE2          	movff	tblptrh,fsr1h
 13954  015ACE  50E7               	movf	indf1,w,c
 13955  015AD0                     u12050:
 13956  015AD0  0900               	iorlw	0
 13957  015AD2  A4D8               	btfss	status,2,c
 13958  015AD4  D7D3               	goto	l10605
 13959  015AD6                     l10613:
 13960                           
 13961                           ;My_ST7032.c: 54: }
 13962                           ;My_ST7032.c: 55: }
 13963                           ;My_ST7032.c: 56: I2C_Stop();
 13964  015AD6  EC4E  F0B6         	call	_I2C_Stop	;wreg free
 13965  015ADA  0012               	return		;funcret
 13966  015ADC                     __end_of_I2C_LCD_Puts:
 13967                           	opt stack 0
 13968                           tblptru	equ	0xFF8
 13969                           tblptrh	equ	0xFF7
 13970                           tblptrl	equ	0xFF6
 13971                           tablat	equ	0xFF5
 13972                           prodh	equ	0xFF4
 13973                           prodl	equ	0xFF3
 13974                           intcon	equ	0xFF2
 13975                           postinc0	equ	0xFEE
 13976                           wreg	equ	0xFE8
 13977                           indf1	equ	0xFE7
 13978                           postinc1	equ	0xFE6
 13979                           postdec1	equ	0xFE5
 13980                           fsr1h	equ	0xFE2
 13981                           fsr1l	equ	0xFE1
 13982                           indf2	equ	0xFDF
 13983                           postinc2	equ	0xFDE
 13984                           postdec2	equ	0xFDD
 13985                           plusw2	equ	0xFDB
 13986                           fsr2h	equ	0xFDA
 13987                           fsr2l	equ	0xFD9
 13988                           status	equ	0xFD8
 13989                           
 13990 ;; *************** function _data_out *****************
 13991 ;; Defined at:
 13992 ;;		line 248 in file "ChargeStation_task.c"
 13993 ;; Parameters:    Size  Location     Type
 13994 ;;  tx              2   75[BANK0 ] PTR struct ringbuf
 13995 ;;		 -> usb_tx(8), 
 13996 ;; Auto vars:     Size  Location     Type
 13997 ;;  i               1  107[BANK0 ] unsigned char 
 13998 ;;  str            30   77[BANK0 ] unsigned char [30]
 13999 ;; Return value:  Size  Location     Type
 14000 ;;		None               void
 14001 ;; Registers used:
 14002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14003 ;; Tracked objects:
 14004 ;;		On entry : 0/0
 14005 ;;		On exit  : 0/0
 14006 ;;		Unchanged: 0/0
 14007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14008 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14009 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14011 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14012 ;;Total ram usage:       33 bytes
 14013 ;; Hardware stack levels used:    1
 14014 ;; Hardware stack levels required when called:   14
 14015 ;; This function calls:
 14016 ;;		___lwdiv
 14017 ;;		___lwmod
 14018 ;;		_ringbuf_put_str
 14019 ;;		_sprintf
 14020 ;; This function is called by:
 14021 ;;		_normal_task
 14022 ;; This function uses a non-reentrant model
 14023 ;;
 14024                           
 14025                           	psect	text44
 14026  012FC0                     __ptext44:
 14027                           	opt stack 0
 14028  012FC0                     _data_out:
 14029                           	opt stack 15
 14030                           
 14031                           ;ChargeStation_task.c: 249: char str[30];
 14032                           ;ChargeStation_task.c: 250: sprintf(str, "20%02d/%02d/%02d-%02d:%02d-%02d",
 14033                           ;ChargeStation_task.c: 251: now.YY,
 14034                           ;ChargeStation_task.c: 252: now.MM,
 14035                           ;ChargeStation_task.c: 253: now.DD,
 14036                           ;ChargeStation_task.c: 254: now.hh,
 14037                           ;ChargeStation_task.c: 255: now.mm,
 14038                           ;ChargeStation_task.c: 256: now.ss
 14039                           ;ChargeStation_task.c: 257: );
 14040                           
 14041                           ;incstack = 0
 14042  012FC0  0EAD               	movlw	low data_out@str
 14043  012FC2  0100               	movlb	0	; () banked
 14044  012FC4  6F83               	movwf	sprintf@sp& (0+255),b
 14045  012FC6  0E00               	movlw	high data_out@str
 14046  012FC8  0100               	movlb	0	; () banked
 14047  012FCA  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 14048  012FCC  0EE1               	movlw	low STR_27
 14049  012FCE  0100               	movlb	0	; () banked
 14050  012FD0  6F85               	movwf	sprintf@f& (0+255),b
 14051  012FD2  0EFD               	movlw	high STR_27
 14052  012FD4  0100               	movlb	0	; () banked
 14053  012FD6  6F86               	movwf	(sprintf@f+1)& (0+255),b
 14054  012FD8  C17C  F087         	movff	_now+10,?_sprintf+4
 14055  012FDC  0100               	movlb	0	; () banked
 14056  012FDE  6B88               	clrf	(?_sprintf+5)& (0+255),b
 14057  012FE0  C17B  F089         	movff	_now+9,?_sprintf+6
 14058  012FE4  0100               	movlb	0	; () banked
 14059  012FE6  6B8A               	clrf	(?_sprintf+7)& (0+255),b
 14060  012FE8  C17A  F08B         	movff	_now+8,?_sprintf+8
 14061  012FEC  0100               	movlb	0	; () banked
 14062  012FEE  6B8C               	clrf	(?_sprintf+9)& (0+255),b
 14063  012FF0  C178  F08D         	movff	_now+6,?_sprintf+10
 14064  012FF4  0100               	movlb	0	; () banked
 14065  012FF6  6B8E               	clrf	(?_sprintf+11)& (0+255),b
 14066  012FF8  C177  F08F         	movff	_now+5,?_sprintf+12
 14067  012FFC  0100               	movlb	0	; () banked
 14068  012FFE  6B90               	clrf	(?_sprintf+13)& (0+255),b
 14069  013000  C176  F091         	movff	_now+4,?_sprintf+14
 14070  013004  0100               	movlb	0	; () banked
 14071  013006  6B92               	clrf	(?_sprintf+15)& (0+255),b
 14072  013008  EC00  F080         	call	_sprintf	;wreg free
 14073                           
 14074                           ;ChargeStation_task.c: 258: ringbuf_put_str(tx, str);
 14075  01300C  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 14076  013010  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 14077  013014  0EAD               	movlw	low data_out@str
 14078  013016  0100               	movlb	0	; () banked
 14079  013018  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 14080  01301A  0E00               	movlw	high data_out@str
 14081  01301C  0100               	movlb	0	; () banked
 14082  01301E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 14083  013020  ECD3  F0B0         	call	_ringbuf_put_str	;wreg free
 14084                           
 14085                           ;ChargeStation_task.c: 259: for (uint8_t i = 0; i < 3; i++) {
 14086  013024  0E00               	movlw	0
 14087  013026  0100               	movlb	0	; () banked
 14088  013028  6FCB               	movwf	data_out@i& (0+255),b
 14089  01302A                     l11785:
 14090                           
 14091                           ; BSR set to: 0
 14092  01302A  0E02               	movlw	2
 14093  01302C  0100               	movlb	0	; () banked
 14094  01302E  65CB               	cpfsgt	data_out@i& (0+255),b
 14095  013030  D001               	goto	l11789
 14096  013032  D075               	goto	l11797
 14097  013034                     l11789:
 14098                           
 14099                           ; BSR set to: 0
 14100                           ;ChargeStation_task.c: 260: static const char p[3][2] = {"L", "C", "R"};
 14101                           ;ChargeStation_task.c: 261: sprintf(str, " %s:%01d.%03dA,%06ldmAh",
 14102                           ;ChargeStation_task.c: 262: p[i],
 14103                           ;ChargeStation_task.c: 263: port[i].current / 1000,
 14104                           ;ChargeStation_task.c: 264: port[i].current % 1000,
 14105                           ;ChargeStation_task.c: 265: port[i].integrated_current
 14106                           ;ChargeStation_task.c: 266: );
 14107  013034  0EAD               	movlw	low data_out@str
 14108  013036  0100               	movlb	0	; () banked
 14109  013038  6F83               	movwf	sprintf@sp& (0+255),b
 14110  01303A  0E00               	movlw	high data_out@str
 14111  01303C  0100               	movlb	0	; () banked
 14112  01303E  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 14113  013040  0E35               	movlw	low STR_28
 14114  013042  0100               	movlb	0	; () banked
 14115  013044  6F85               	movwf	sprintf@f& (0+255),b
 14116  013046  0EFE               	movlw	high STR_28
 14117  013048  0100               	movlb	0	; () banked
 14118  01304A  6F86               	movwf	(sprintf@f+1)& (0+255),b
 14119  01304C  0100               	movlb	0	; () banked
 14120  01304E  51CB               	movf	data_out@i& (0+255),w,b
 14121  013050  0D02               	mullw	2
 14122  013052  0EDC               	movlw	low data_out@p
 14123  013054  24F3               	addwf	prodl,w,c
 14124  013056  0100               	movlb	0	; () banked
 14125  013058  6F87               	movwf	(?_sprintf+4)& (0+255),b
 14126  01305A  0EFB               	movlw	high data_out@p
 14127  01305C  20F4               	addwfc	prodh,w,c
 14128  01305E  0100               	movlb	0	; () banked
 14129  013060  6F88               	movwf	(?_sprintf+5)& (0+255),b
 14130  013062  0100               	movlb	0	; () banked
 14131  013064  51CB               	movf	data_out@i& (0+255),w,b
 14132  013066  0D17               	mullw	23
 14133  013068  0E06               	movlw	6
 14134  01306A  26F3               	addwf	prodl,f,c
 14135  01306C  0E00               	movlw	0
 14136  01306E  22F4               	addwfc	prodh,f,c
 14137  013070  0E2D               	movlw	low _port
 14138  013072  24F3               	addwf	prodl,w,c
 14139  013074  6ED9               	movwf	fsr2l,c
 14140  013076  0E01               	movlw	high _port
 14141  013078  20F4               	addwfc	prodh,w,c
 14142  01307A  6EDA               	movwf	fsr2h,c
 14143  01307C  CFDE F07C          	movff	postinc2,___lwdiv@dividend
 14144  013080  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
 14145  013084  0E03               	movlw	3
 14146  013086  0100               	movlb	0	; () banked
 14147  013088  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 14148  01308A  0EE8               	movlw	232
 14149  01308C  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 14150  01308E  EC47  F0AF         	call	___lwdiv	;wreg free
 14151  013092  C07C  F089         	movff	?___lwdiv,?_sprintf+6
 14152  013096  C07D  F08A         	movff	?___lwdiv+1,?_sprintf+7
 14153  01309A  0100               	movlb	0	; () banked
 14154  01309C  51CB               	movf	data_out@i& (0+255),w,b
 14155  01309E  0D17               	mullw	23
 14156  0130A0  0E06               	movlw	6
 14157  0130A2  26F3               	addwf	prodl,f,c
 14158  0130A4  0E00               	movlw	0
 14159  0130A6  22F4               	addwfc	prodh,f,c
 14160  0130A8  0E2D               	movlw	low _port
 14161  0130AA  24F3               	addwf	prodl,w,c
 14162  0130AC  6ED9               	movwf	fsr2l,c
 14163  0130AE  0E01               	movlw	high _port
 14164  0130B0  20F4               	addwfc	prodh,w,c
 14165  0130B2  6EDA               	movwf	fsr2h,c
 14166  0130B4  CFDE F060          	movff	postinc2,___lwmod@dividend
 14167  0130B8  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 14168  0130BC  0E03               	movlw	3
 14169  0130BE  0100               	movlb	0	; () banked
 14170  0130C0  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 14171  0130C2  0EE8               	movlw	232
 14172  0130C4  6F62               	movwf	___lwmod@divisor& (0+255),b
 14173  0130C6  EC68  F0B1         	call	___lwmod	;wreg free
 14174  0130CA  C060  F08B         	movff	?___lwmod,?_sprintf+8
 14175  0130CE  C061  F08C         	movff	?___lwmod+1,?_sprintf+9
 14176  0130D2  0100               	movlb	0	; () banked
 14177  0130D4  51CB               	movf	data_out@i& (0+255),w,b
 14178  0130D6  0D17               	mullw	23
 14179  0130D8  0E0C               	movlw	12
 14180  0130DA  26F3               	addwf	prodl,f,c
 14181  0130DC  0E00               	movlw	0
 14182  0130DE  22F4               	addwfc	prodh,f,c
 14183  0130E0  0E2D               	movlw	low _port
 14184  0130E2  24F3               	addwf	prodl,w,c
 14185  0130E4  6ED9               	movwf	fsr2l,c
 14186  0130E6  0E01               	movlw	high _port
 14187  0130E8  20F4               	addwfc	prodh,w,c
 14188  0130EA  6EDA               	movwf	fsr2h,c
 14189  0130EC  CFDE F08D          	movff	postinc2,?_sprintf+10
 14190  0130F0  CFDE F08E          	movff	postinc2,?_sprintf+11
 14191  0130F4  CFDE F08F          	movff	postinc2,?_sprintf+12
 14192  0130F8  CFDE F090          	movff	postinc2,?_sprintf+13
 14193  0130FC  EC00  F080         	call	_sprintf	;wreg free
 14194                           
 14195                           ;ChargeStation_task.c: 267: ringbuf_put_str(tx, str);
 14196  013100  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 14197  013104  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 14198  013108  0EAD               	movlw	low data_out@str
 14199  01310A  0100               	movlb	0	; () banked
 14200  01310C  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 14201  01310E  0E00               	movlw	high data_out@str
 14202  013110  0100               	movlb	0	; () banked
 14203  013112  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 14204  013114  ECD3  F0B0         	call	_ringbuf_put_str	;wreg free
 14205  013118  0100               	movlb	0	; () banked
 14206  01311A  2BCB               	incf	data_out@i& (0+255),f,b
 14207  01311C  D786               	goto	l11785
 14208  01311E                     l11797:
 14209                           
 14210                           ; BSR set to: 0
 14211                           ;ChargeStation_task.c: 268: }
 14212                           ;ChargeStation_task.c: 269: ringbuf_put_str(tx, "\n");
 14213  01311E  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 14214  013122  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 14215  013126  0EBB               	movlw	low (STR_100+35)
 14216  013128  0100               	movlb	0	; () banked
 14217  01312A  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 14218  01312C  0EFD               	movlw	high (STR_100+35)
 14219  01312E  0100               	movlb	0	; () banked
 14220  013130  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 14221  013132  ECD3  F0B0         	call	_ringbuf_put_str	;wreg free
 14222  013136  0012               	return		;funcret
 14223  013138                     __end_of_data_out:
 14224                           	opt stack 0
 14225                           tblptru	equ	0xFF8
 14226                           tblptrh	equ	0xFF7
 14227                           tblptrl	equ	0xFF6
 14228                           tablat	equ	0xFF5
 14229                           prodh	equ	0xFF4
 14230                           prodl	equ	0xFF3
 14231                           intcon	equ	0xFF2
 14232                           postinc0	equ	0xFEE
 14233                           wreg	equ	0xFE8
 14234                           indf1	equ	0xFE7
 14235                           postinc1	equ	0xFE6
 14236                           postdec1	equ	0xFE5
 14237                           fsr1h	equ	0xFE2
 14238                           fsr1l	equ	0xFE1
 14239                           indf2	equ	0xFDF
 14240                           postinc2	equ	0xFDE
 14241                           postdec2	equ	0xFDD
 14242                           plusw2	equ	0xFDB
 14243                           fsr2h	equ	0xFDA
 14244                           fsr2l	equ	0xFD9
 14245                           status	equ	0xFD8
 14246                           
 14247 ;; *************** function _sprintf *****************
 14248 ;; Defined at:
 14249 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 14250 ;; Parameters:    Size  Location     Type
 14251 ;;  sp              2   35[BANK0 ] PTR unsigned char 
 14252 ;;		 -> print_time@str(30), print_time_dec@str(10), display_dec@s(4), display_LCD@str_575(20), 
 14253 ;;		 -> data_out@str(30), 
 14254 ;;  f               2   37[BANK0 ] PTR const unsigned char 
 14255 ;;		 -> STR_100(37), STR_98(5), STR_78(5), STR_33(28), 
 14256 ;;		 -> STR_32(9), STR_31(11), STR_30(6), STR_28(24), 
 14257 ;;		 -> STR_27(32), 
 14258 ;; Auto vars:     Size  Location     Type
 14259 ;;  val             4   67[BANK0 ] unsigned long 
 14260 ;;  tmpval          4    0        struct .
 14261 ;;  width           2   73[BANK0 ] int 
 14262 ;;  len             2   65[BANK0 ] unsigned int 
 14263 ;;  ap              2   63[BANK0 ] PTR void [1]
 14264 ;;		 -> ?_sprintf(2), 
 14265 ;;  cp              2   61[BANK0 ] PTR const unsigned char 
 14266 ;;		 -> STR_118(7), weekday_3char(28), display_LCD@onoff(10), display_LCD@port_char(120), 
 14267 ;;		 -> data_out@p(6), sp__ADC(2), 
 14268 ;;  prec            2   59[BANK0 ] int 
 14269 ;;  c               1   72[BANK0 ] char 
 14270 ;;  flag            1   71[BANK0 ] unsigned char 
 14271 ;; Return value:  Size  Location     Type
 14272 ;;                  2   35[BANK0 ] int 
 14273 ;; Registers used:
 14274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14275 ;; Tracked objects:
 14276 ;;		On entry : 0/0
 14277 ;;		On exit  : 0/0
 14278 ;;		Unchanged: 0/0
 14279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14280 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14281 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14282 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14283 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14284 ;;Total ram usage:       40 bytes
 14285 ;; Hardware stack levels used:    1
 14286 ;; Hardware stack levels required when called:   12
 14287 ;; This function calls:
 14288 ;;		___lldiv
 14289 ;;		___llmod
 14290 ;;		___wmul
 14291 ;;		_isdigit
 14292 ;; This function is called by:
 14293 ;;		_data_out
 14294 ;;		_display_LCD
 14295 ;;		_display_dec
 14296 ;;		_print_time
 14297 ;;		_print_time_dec
 14298 ;; This function uses a non-reentrant model
 14299 ;;
 14300                           
 14301                           	psect	text45
 14302  010000                     __ptext45:
 14303                           	opt stack 0
 14304  010000                     _sprintf:
 14305                           	opt stack 13
 14306                           
 14307                           ;doprnt.c: 494: va_list ap;
 14308                           ;doprnt.c: 499: signed char c;
 14309                           ;doprnt.c: 501: int width;
 14310                           ;doprnt.c: 504: int prec;
 14311                           ;doprnt.c: 508: unsigned char flag;
 14312                           ;doprnt.c: 523: union {
 14313                           ;doprnt.c: 524: unsigned long vd;
 14314                           ;doprnt.c: 525: double integ;
 14315                           ;doprnt.c: 526: } tmpval;
 14316                           ;doprnt.c: 528: unsigned long val;
 14317                           ;doprnt.c: 529: unsigned len;
 14318                           ;doprnt.c: 530: const char * cp;
 14319                           ;doprnt.c: 533: *ap = __va_start();
 14320                           
 14321                           ;incstack = 0
 14322  010000  0E87               	movlw	low (?_sprintf+4)
 14323  010002  0100               	movlb	0	; () banked
 14324  010004  6F9F               	movwf	sprintf@ap& (0+255),b
 14325  010006  0E00               	movlw	high (?_sprintf+4)
 14326  010008  0100               	movlb	0	; () banked
 14327  01000A  6FA0               	movwf	(sprintf@ap+1)& (0+255),b
 14328                           
 14329                           ;doprnt.c: 536: while(c = *f++) {
 14330  01000C  D270               	goto	l10405
 14331  01000E                     l10259:
 14332                           
 14333                           ; BSR set to: 0
 14334                           ;doprnt.c: 538: if(c != '%')
 14335  01000E  0E25               	movlw	37
 14336  010010  0100               	movlb	0	; () banked
 14337  010012  19A8               	xorwf	sprintf@c& (0+255),w,b
 14338  010014  B4D8               	btfsc	status,2,c
 14339  010016  D00A               	goto	l10265
 14340                           
 14341                           ; BSR set to: 0
 14342                           ;doprnt.c: 540: {
 14343                           ;doprnt.c: 541: ((*sp++ = (c)));
 14344  010018  C083  FFD9         	movff	sprintf@sp,fsr2l
 14345  01001C  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14346  010020  C0A8  FFDF         	movff	sprintf@c,indf2
 14347                           
 14348                           ; BSR set to: 0
 14349  010024  0100               	movlb	0	; () banked
 14350  010026  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14351  010028  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14352                           
 14353                           ;doprnt.c: 542: continue;
 14354  01002A  D261               	goto	l10405
 14355  01002C                     l10265:
 14356                           
 14357                           ; BSR set to: 0
 14358                           ;doprnt.c: 543: }
 14359                           ;doprnt.c: 546: width = 0;
 14360  01002C  0E00               	movlw	0
 14361  01002E  0100               	movlb	0	; () banked
 14362  010030  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 14363  010032  0E00               	movlw	0
 14364  010034  6FA9               	movwf	sprintf@width& (0+255),b
 14365                           
 14366                           ;doprnt.c: 548: flag = 0;
 14367  010036  0E00               	movlw	0
 14368  010038  0100               	movlb	0	; () banked
 14369  01003A  6FA7               	movwf	sprintf@flag& (0+255),b
 14370                           
 14371                           ; BSR set to: 0
 14372                           ;doprnt.c: 551: switch(*f) {
 14373                           
 14374                           ;doprnt.c: 550: for(;;) {
 14375  01003C  D005               	goto	l10271
 14376  01003E                     l10267:
 14377                           
 14378                           ;doprnt.c: 580: flag |= 0x04;
 14379  01003E  0100               	movlb	0	; () banked
 14380  010040  85A7               	bsf	sprintf@flag& (0+255),2,b
 14381                           
 14382                           ;doprnt.c: 581: f++;
 14383  010042  0100               	movlb	0	; () banked
 14384  010044  4B85               	infsnz	sprintf@f& (0+255),f,b
 14385  010046  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 14386  010048                     l10271:
 14387  010048  C085  FFF6         	movff	sprintf@f,tblptrl
 14388  01004C  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14389  010050                     	if	0	;tblptru may be non-zero
 14390  010050                     	endif
 14391  010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14392  010050  0E00               	movlw	low (__mediumconst shr (0+16))
 14393  010052  6EF8               	movwf	tblptru,c
 14394  010054                     	endif
 14395  010054  0008               	tblrd		*
 14396  010056  50F5               	movf	tablat,w,c
 14397                           
 14398                           ; Switch size 1, requested type "space"
 14399                           ; Number of cases is 1, Range of values is 48 to 48
 14400                           ; switch strategies available:
 14401                           ; Name         Instructions Cycles
 14402                           ; simple_byte            4     3 (average)
 14403                           ;	Chosen strategy is simple_byte
 14404  010058  0A30               	xorlw	48	; case 48
 14405  01005A  B4D8               	btfsc	status,2,c
 14406  01005C  D7F0               	goto	l10267
 14407                           
 14408                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 14409                           
 14410                           ;doprnt.c: 586: }
 14411                           
 14412                           ;doprnt.c: 585: break;
 14413  01005E  C085  FFF6         	movff	sprintf@f,tblptrl
 14414  010062  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14415  010066                     	if	0	;tblptru may be non-zero
 14416  010066                     	endif
 14417  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14418  010066  0E00               	movlw	low (__mediumconst shr (0+16))
 14419  010068  6EF8               	movwf	tblptru,c
 14420  01006A                     	endif
 14421  01006A  0008               	tblrd		*
 14422  01006C  50F5               	movf	tablat,w,c
 14423  01006E  EC36  F0B5         	call	_isdigit
 14424  010072  A0D8               	btfss	status,0,c
 14425  010074  D0E0               	goto	l10323
 14426                           
 14427                           ;doprnt.c: 598: width = 0;
 14428  010076  0E00               	movlw	0
 14429  010078  0100               	movlb	0	; () banked
 14430  01007A  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 14431  01007C  0E00               	movlw	0
 14432  01007E  6FA9               	movwf	sprintf@width& (0+255),b
 14433  010080                     l10277:
 14434                           
 14435                           ;doprnt.c: 600: width *= 10;
 14436  010080  C0A9  F076         	movff	sprintf@width,___wmul@multiplier
 14437  010084  C0AA  F077         	movff	sprintf@width+1,___wmul@multiplier+1
 14438  010088  0E00               	movlw	0
 14439  01008A  0100               	movlb	0	; () banked
 14440  01008C  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14441  01008E  0E0A               	movlw	10
 14442  010090  6F78               	movwf	___wmul@multiplicand& (0+255),b
 14443  010092  EC05  F0B4         	call	___wmul	;wreg free
 14444  010096  C076  F0A9         	movff	?___wmul,sprintf@width
 14445  01009A  C077  F0AA         	movff	?___wmul+1,sprintf@width+1
 14446                           
 14447                           ;doprnt.c: 601: width += *f++ - '0';
 14448  01009E  0ED0               	movlw	208
 14449  0100A0  0100               	movlb	0	; () banked
 14450  0100A2  6F97               	movwf	??_sprintf& (0+255),b
 14451  0100A4  0EFF               	movlw	255
 14452  0100A6  0100               	movlb	0	; () banked
 14453  0100A8  6F98               	movwf	(??_sprintf+1)& (0+255),b
 14454  0100AA  C085  FFF6         	movff	sprintf@f,tblptrl
 14455  0100AE  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14456  0100B2                     	if	0	;tblptru may be non-zero
 14457  0100B2                     	endif
 14458  0100B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14459  0100B2  0E00               	movlw	low (__mediumconst shr (0+16))
 14460  0100B4  6EF8               	movwf	tblptru,c
 14461  0100B6                     	endif
 14462  0100B6  0008               	tblrd		*
 14463  0100B8  50F5               	movf	tablat,w,c
 14464  0100BA  0100               	movlb	0	; () banked
 14465  0100BC  6F99               	movwf	(??_sprintf+2)& (0+255),b
 14466  0100BE  6B9A               	clrf	(??_sprintf+3)& (0+255),b
 14467  0100C0  0100               	movlb	0	; () banked
 14468  0100C2  5197               	movf	??_sprintf& (0+255),w,b
 14469  0100C4  0100               	movlb	0	; () banked
 14470  0100C6  2799               	addwf	(??_sprintf+2)& (0+255),f,b
 14471  0100C8  0100               	movlb	0	; () banked
 14472  0100CA  5198               	movf	(??_sprintf+1)& (0+255),w,b
 14473  0100CC  0100               	movlb	0	; () banked
 14474  0100CE  239A               	addwfc	(??_sprintf+3)& (0+255),f,b
 14475  0100D0  0100               	movlb	0	; () banked
 14476  0100D2  5199               	movf	(??_sprintf+2)& (0+255),w,b
 14477  0100D4  0100               	movlb	0	; () banked
 14478  0100D6  27A9               	addwf	sprintf@width& (0+255),f,b
 14479  0100D8  0100               	movlb	0	; () banked
 14480  0100DA  519A               	movf	(??_sprintf+3)& (0+255),w,b
 14481  0100DC  0100               	movlb	0	; () banked
 14482  0100DE  23AA               	addwfc	(sprintf@width+1)& (0+255),f,b
 14483                           
 14484                           ; BSR set to: 0
 14485  0100E0  0100               	movlb	0	; () banked
 14486  0100E2  4B85               	infsnz	sprintf@f& (0+255),f,b
 14487  0100E4  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 14488                           
 14489                           ; BSR set to: 0
 14490                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 14491  0100E6  C085  FFF6         	movff	sprintf@f,tblptrl
 14492  0100EA  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14493  0100EE                     	if	0	;tblptru may be non-zero
 14494  0100EE                     	endif
 14495  0100EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14496  0100EE  0E00               	movlw	low (__mediumconst shr (0+16))
 14497  0100F0  6EF8               	movwf	tblptru,c
 14498  0100F2                     	endif
 14499  0100F2  0008               	tblrd		*
 14500  0100F4  50F5               	movf	tablat,w,c
 14501  0100F6  EC36  F0B5         	call	_isdigit
 14502  0100FA  A0D8               	btfss	status,0,c
 14503  0100FC  D09C               	goto	l10323
 14504  0100FE  D7C0               	goto	l10277
 14505  010100                     l10285:
 14506                           
 14507                           ;doprnt.c: 643: flag |= 0x10;
 14508  010100  0100               	movlb	0	; () banked
 14509  010102  89A7               	bsf	sprintf@flag& (0+255),4,b
 14510                           
 14511                           ;doprnt.c: 644: goto loop;
 14512  010104  D098               	goto	l10323
 14513  010106                     l10287:
 14514                           
 14515                           ; BSR set to: 0
 14516                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14517  010106  C09F  FFD9         	movff	sprintf@ap,fsr2l
 14518  01010A  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 14519  01010E  CFDE F09D          	movff	postinc2,sprintf@cp
 14520  010112  CFDD F09E          	movff	postdec2,sprintf@cp+1
 14521                           
 14522                           ; BSR set to: 0
 14523  010116  0E02               	movlw	2
 14524  010118  0100               	movlb	0	; () banked
 14525  01011A  279F               	addwf	sprintf@ap& (0+255),f,b
 14526  01011C  0E00               	movlw	0
 14527  01011E  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14528                           
 14529                           ; BSR set to: 0
 14530                           ;doprnt.c: 740: if(!cp)
 14531  010120  0100               	movlb	0	; () banked
 14532  010122  519D               	movf	sprintf@cp& (0+255),w,b
 14533  010124  0100               	movlb	0	; () banked
 14534  010126  119E               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14535  010128  A4D8               	btfss	status,2,c
 14536  01012A  D006               	goto	l10295
 14537                           
 14538                           ; BSR set to: 0
 14539                           ;doprnt.c: 741: cp = "(null)";
 14540  01012C  0E8A               	movlw	low STR_118
 14541  01012E  0100               	movlb	0	; () banked
 14542  010130  6F9D               	movwf	sprintf@cp& (0+255),b
 14543  010132  0EFF               	movlw	high STR_118
 14544  010134  0100               	movlb	0	; () banked
 14545  010136  6F9E               	movwf	(sprintf@cp+1)& (0+255),b
 14546  010138                     l10295:
 14547                           
 14548                           ; BSR set to: 0
 14549                           ;doprnt.c: 745: len = 0;
 14550  010138  0E00               	movlw	0
 14551  01013A  0100               	movlb	0	; () banked
 14552  01013C  6FA2               	movwf	(sprintf@len+1)& (0+255),b
 14553  01013E  0E00               	movlw	0
 14554  010140  6FA1               	movwf	sprintf@len& (0+255),b
 14555                           
 14556                           ;doprnt.c: 746: while(cp[len])
 14557  010142  D003               	goto	l10299
 14558  010144                     l10297:
 14559                           
 14560                           ;doprnt.c: 747: len++;
 14561  010144  0100               	movlb	0	; () banked
 14562  010146  4BA1               	infsnz	sprintf@len& (0+255),f,b
 14563  010148  2BA2               	incf	(sprintf@len+1)& (0+255),f,b
 14564  01014A                     l10299:
 14565                           
 14566                           ; BSR set to: 0
 14567  01014A  0100               	movlb	0	; () banked
 14568  01014C  51A1               	movf	sprintf@len& (0+255),w,b
 14569  01014E  0100               	movlb	0	; () banked
 14570  010150  259D               	addwf	sprintf@cp& (0+255),w,b
 14571  010152  0100               	movlb	0	; () banked
 14572  010154  6F97               	movwf	??_sprintf& (0+255),b
 14573  010156  0100               	movlb	0	; () banked
 14574  010158  51A2               	movf	(sprintf@len+1)& (0+255),w,b
 14575  01015A  0100               	movlb	0	; () banked
 14576  01015C  219E               	addwfc	(sprintf@cp+1)& (0+255),w,b
 14577  01015E  0100               	movlb	0	; () banked
 14578  010160  6F98               	movwf	(??_sprintf+1)& (0+255),b
 14579  010162  C097  FFF6         	movff	??_sprintf,tblptrl
 14580  010166  C098  FFF7         	movff	??_sprintf+1,tblptrh
 14581  01016A  0E00               	movlw	low (__mediumconst shr (0+16))
 14582  01016C  6EF8               	movwf	tblptru,c
 14583  01016E  0E0E               	movlw	(high __ramtop+-1)
 14584  010170  64F7               	cpfsgt	tblptrh,c
 14585  010172  D003               	bra	u11557
 14586  010174  0008               	tblrd		*
 14587  010176  50F5               	movf	tablat,w,c
 14588  010178  D005               	bra	u11550
 14589  01017A                     u11557:
 14590  01017A  CFF6 FFE1          	movff	tblptrl,fsr1l
 14591  01017E  CFF7 FFE2          	movff	tblptrh,fsr1h
 14592  010182  50E7               	movf	indf1,w,c
 14593  010184                     u11550:
 14594  010184  0900               	iorlw	0
 14595  010186  A4D8               	btfss	status,2,c
 14596  010188  D7DD               	goto	l10297
 14597                           
 14598                           ;doprnt.c: 757: if(width > len)
 14599  01018A  0100               	movlb	0	; () banked
 14600  01018C  51A9               	movf	sprintf@width& (0+255),w,b
 14601  01018E  0100               	movlb	0	; () banked
 14602  010190  5DA1               	subwf	sprintf@len& (0+255),w,b
 14603  010192  0100               	movlb	0	; () banked
 14604  010194  51AA               	movf	(sprintf@width+1)& (0+255),w,b
 14605  010196  0100               	movlb	0	; () banked
 14606  010198  59A2               	subwfb	(sprintf@len+1)& (0+255),w,b
 14607  01019A  B0D8               	btfsc	status,0,c
 14608  01019C  D009               	goto	l10305
 14609                           
 14610                           ; BSR set to: 0
 14611                           ;doprnt.c: 758: width -= len;
 14612  01019E  0100               	movlb	0	; () banked
 14613  0101A0  51A1               	movf	sprintf@len& (0+255),w,b
 14614  0101A2  0100               	movlb	0	; () banked
 14615  0101A4  5FA9               	subwf	sprintf@width& (0+255),f,b
 14616  0101A6  0100               	movlb	0	; () banked
 14617  0101A8  51A2               	movf	(sprintf@len+1)& (0+255),w,b
 14618  0101AA  0100               	movlb	0	; () banked
 14619  0101AC  5BAA               	subwfb	(sprintf@width+1)& (0+255),f,b
 14620  0101AE  D00F               	goto	l10311
 14621  0101B0                     l10305:
 14622                           
 14623                           ; BSR set to: 0
 14624                           ;doprnt.c: 759: else
 14625                           ;doprnt.c: 760: width = 0;
 14626  0101B0  0E00               	movlw	0
 14627  0101B2  0100               	movlb	0	; () banked
 14628  0101B4  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 14629  0101B6  0E00               	movlw	0
 14630  0101B8  6FA9               	movwf	sprintf@width& (0+255),b
 14631                           
 14632                           ; BSR set to: 0
 14633                           ;doprnt.c: 764: while(width--)
 14634  0101BA  D009               	goto	l10311
 14635  0101BC                     l10307:
 14636                           
 14637                           ; BSR set to: 0
 14638                           ;doprnt.c: 765: ((*sp++ = (' ')));
 14639  0101BC  C083  FFD9         	movff	sprintf@sp,fsr2l
 14640  0101C0  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14641  0101C4  0E20               	movlw	32
 14642  0101C6  6EDF               	movwf	indf2,c
 14643                           
 14644                           ; BSR set to: 0
 14645  0101C8  0100               	movlb	0	; () banked
 14646  0101CA  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14647  0101CC  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14648  0101CE                     l10311:
 14649                           
 14650                           ; BSR set to: 0
 14651  0101CE  0100               	movlb	0	; () banked
 14652  0101D0  07A9               	decf	sprintf@width& (0+255),f,b
 14653  0101D2  A0D8               	btfss	status,0,c
 14654  0101D4  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 14655  0101D6  0100               	movlb	0	; () banked
 14656  0101D8  29A9               	incf	sprintf@width& (0+255),w,b
 14657  0101DA  E1F0               	bnz	l10307
 14658  0101DC  0100               	movlb	0	; () banked
 14659  0101DE  29AA               	incf	(sprintf@width+1)& (0+255),w,b
 14660  0101E0  B4D8               	btfsc	status,2,c
 14661  0101E2  D01D               	goto	l10319
 14662  0101E4  D7EB               	goto	l10307
 14663  0101E6                     l10313:
 14664                           
 14665                           ; BSR set to: 0
 14666                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 14667  0101E6  C09D  FFF6         	movff	sprintf@cp,tblptrl
 14668  0101EA  C09E  FFF7         	movff	sprintf@cp+1,tblptrh
 14669  0101EE  0E00               	movlw	low (__mediumconst shr (0+16))
 14670  0101F0  6EF8               	movwf	tblptru,c
 14671  0101F2  C083  FFD9         	movff	sprintf@sp,fsr2l
 14672  0101F6  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14673  0101FA  0E0E               	movlw	(high __ramtop+-1)
 14674  0101FC  64F7               	cpfsgt	tblptrh,c
 14675  0101FE  D003               	bra	u11597
 14676  010200  0008               	tblrd		*
 14677  010202  50F5               	movf	tablat,w,c
 14678  010204  D005               	bra	u11590
 14679  010206                     u11597:
 14680  010206  CFF6 FFE1          	movff	tblptrl,fsr1l
 14681  01020A  CFF7 FFE2          	movff	tblptrh,fsr1h
 14682  01020E  50E7               	movf	indf1,w,c
 14683  010210                     u11590:
 14684  010210  6EDF               	movwf	indf2,c
 14685  010212  0100               	movlb	0	; () banked
 14686  010214  4B9D               	infsnz	sprintf@cp& (0+255),f,b
 14687  010216  2B9E               	incf	(sprintf@cp+1)& (0+255),f,b
 14688                           
 14689                           ; BSR set to: 0
 14690  010218  0100               	movlb	0	; () banked
 14691  01021A  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14692  01021C  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14693  01021E                     l10319:
 14694                           
 14695                           ; BSR set to: 0
 14696  01021E  0100               	movlb	0	; () banked
 14697  010220  07A1               	decf	sprintf@len& (0+255),f,b
 14698  010222  A0D8               	btfss	status,0,c
 14699  010224  07A2               	decf	(sprintf@len+1)& (0+255),f,b
 14700  010226  0100               	movlb	0	; () banked
 14701  010228  29A1               	incf	sprintf@len& (0+255),w,b
 14702  01022A  E1DD               	bnz	l10313
 14703  01022C  0100               	movlb	0	; () banked
 14704  01022E  29A2               	incf	(sprintf@len+1)& (0+255),w,b
 14705  010230  B4D8               	btfsc	status,2,c
 14706  010232  D15D               	goto	l10405
 14707  010234  D7D8               	goto	l10313
 14708  010236                     l10323:
 14709  010236  C085  FFF6         	movff	sprintf@f,tblptrl
 14710  01023A  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14711  01023E  0100               	movlb	0	; () banked
 14712  010240  4B85               	infsnz	sprintf@f& (0+255),f,b
 14713  010242  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 14714  010244                     	if	0	;tblptru may be non-zero
 14715  010244                     	endif
 14716  010244                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14717  010244  0E00               	movlw	low (__mediumconst shr (0+16))
 14718  010246  6EF8               	movwf	tblptru,c
 14719  010248                     	endif
 14720  010248  0008               	tblrd		*
 14721  01024A  CFF5 F0A8          	movff	tablat,sprintf@c
 14722  01024E  0100               	movlb	0	; () banked
 14723  010250  51A8               	movf	sprintf@c& (0+255),w,b
 14724                           
 14725                           ; Switch size 1, requested type "space"
 14726                           ; Number of cases is 5, Range of values is 0 to 115
 14727                           ; switch strategies available:
 14728                           ; Name         Instructions Cycles
 14729                           ; simple_byte           16     9 (average)
 14730                           ;	Chosen strategy is simple_byte
 14731  010252  0A00               	xorlw	0	; case 0
 14732  010254  B4D8               	btfsc	status,2,c
 14733  010256  D15B               	goto	l10407
 14734  010258  0A64               	xorlw	100	; case 100
 14735  01025A  B4D8               	btfsc	status,2,c
 14736  01025C  D00A               	goto	l1838
 14737  01025E  0A0D               	xorlw	13	; case 105
 14738  010260  B4D8               	btfsc	status,2,c
 14739  010262  D007               	goto	l1838
 14740  010264  0A05               	xorlw	5	; case 108
 14741  010266  B4D8               	btfsc	status,2,c
 14742  010268  D74B               	goto	l10285
 14743  01026A  0A1F               	xorlw	31	; case 115
 14744  01026C  B4D8               	btfsc	status,2,c
 14745  01026E  D74B               	goto	l10287
 14746  010270  D13E               	goto	l10405
 14747  010272                     l1838:
 14748                           
 14749                           ; BSR set to: 0
 14750                           ;doprnt.c: 1253: {
 14751                           ;doprnt.c: 1255: if(flag & 0x10)
 14752  010272  0100               	movlb	0	; () banked
 14753  010274  A9A7               	btfss	sprintf@flag& (0+255),4,b
 14754  010276  D00E               	goto	l10329
 14755                           
 14756                           ; BSR set to: 0
 14757                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 14758  010278  C09F  FFD9         	movff	sprintf@ap,fsr2l
 14759  01027C  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 14760  010280  CFDE F0A3          	movff	postinc2,sprintf@val
 14761  010284  CFDE F0A4          	movff	postinc2,sprintf@val+1
 14762  010288  CFDE F0A5          	movff	postinc2,sprintf@val+2
 14763  01028C  CFDE F0A6          	movff	postinc2,sprintf@val+3
 14764                           
 14765                           ; BSR set to: 0
 14766  010290  0E04               	movlw	4
 14767  010292  D00F               	goto	L3
 14768  010294                     l10329:
 14769                           
 14770                           ; BSR set to: 0
 14771                           ;doprnt.c: 1257: else
 14772                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 14773  010294  C09F  FFD9         	movff	sprintf@ap,fsr2l
 14774  010298  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 14775  01029C  CFDE F0A3          	movff	postinc2,sprintf@val
 14776  0102A0  CFDD F0A4          	movff	postdec2,sprintf@val+1
 14777  0102A4  0100               	movlb	0	; () banked
 14778  0102A6  0E00               	movlw	0
 14779  0102A8  BFA4               	btfsc	(sprintf@val+1)& (0+255),7,b
 14780  0102AA  0EFF               	movlw	-1
 14781  0102AC  6FA5               	movwf	(sprintf@val+2)& (0+255),b
 14782  0102AE  6FA6               	movwf	(sprintf@val+3)& (0+255),b
 14783                           
 14784                           ; BSR set to: 0
 14785  0102B0  0E02               	movlw	2
 14786  0102B2                     L3:
 14787  0102B2  0100               	movlb	0	; () banked
 14788  0102B4  279F               	addwf	sprintf@ap& (0+255),f,b
 14789  0102B6  0E00               	movlw	0
 14790  0102B8  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14791                           
 14792                           ; BSR set to: 0
 14793                           ;doprnt.c: 1261: if((long)val < 0) {
 14794                           
 14795                           ; BSR set to: 0
 14796  0102BA  0100               	movlb	0	; () banked
 14797  0102BC  AFA6               	btfss	(sprintf@val+3)& (0+255),7,b
 14798  0102BE  D00C               	goto	l10339
 14799                           
 14800                           ; BSR set to: 0
 14801                           ;doprnt.c: 1262: flag |= 0x03;
 14802  0102C0  0E03               	movlw	3
 14803  0102C2  0100               	movlb	0	; () banked
 14804  0102C4  13A7               	iorwf	sprintf@flag& (0+255),f,b
 14805                           
 14806                           ; BSR set to: 0
 14807                           ;doprnt.c: 1263: val = -val;
 14808  0102C6  0100               	movlb	0	; () banked
 14809  0102C8  1FA6               	comf	(sprintf@val+3)& (0+255),f,b
 14810  0102CA  1FA5               	comf	(sprintf@val+2)& (0+255),f,b
 14811  0102CC  1FA4               	comf	(sprintf@val+1)& (0+255),f,b
 14812  0102CE  6DA3               	negf	sprintf@val& (0+255),b
 14813  0102D0  0E00               	movlw	0
 14814  0102D2  23A4               	addwfc	(sprintf@val+1)& (0+255),f,b
 14815  0102D4  23A5               	addwfc	(sprintf@val+2)& (0+255),f,b
 14816  0102D6  23A6               	addwfc	(sprintf@val+3)& (0+255),f,b
 14817  0102D8                     l10339:
 14818                           
 14819                           ; BSR set to: 0
 14820                           ;doprnt.c: 1264: }
 14821                           ;doprnt.c: 1266: }
 14822                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 14823  0102D8  0E01               	movlw	1
 14824  0102DA  0100               	movlb	0	; () banked
 14825  0102DC  6FA8               	movwf	sprintf@c& (0+255),b
 14826  0102DE                     l10341:
 14827                           
 14828                           ; BSR set to: 0
 14829  0102DE  0E0A               	movlw	10
 14830  0102E0  0100               	movlb	0	; () banked
 14831  0102E2  19A8               	xorwf	sprintf@c& (0+255),w,b
 14832  0102E4  B4D8               	btfsc	status,2,c
 14833  0102E6  D021               	goto	l10353
 14834                           
 14835                           ; BSR set to: 0
 14836                           ;doprnt.c: 1306: if(val < dpowers[c])
 14837                           
 14838                           ; BSR set to: 0
 14839                           
 14840                           ; BSR set to: 0
 14841  0102E8  0100               	movlb	0	; () banked
 14842  0102EA  51A8               	movf	sprintf@c& (0+255),w,b
 14843  0102EC  0D04               	mullw	4
 14844  0102EE  0E51               	movlw	low _dpowers
 14845  0102F0  24F3               	addwf	prodl,w,c
 14846  0102F2  6EF6               	movwf	tblptrl,c
 14847  0102F4  0EFA               	movlw	high _dpowers
 14848  0102F6  20F4               	addwfc	prodh,w,c
 14849  0102F8  6EF7               	movwf	tblptrh,c
 14850  0102FA                     	if	1	;There are 3 active tblptr bytes
 14851  0102FA  6AF8               	clrf	tblptru,c
 14852  0102FC  0E00               	movlw	low (__mediumconst shr (0+16))
 14853  0102FE  22F8               	addwfc	tblptru,f,c
 14854  010300                     	endif
 14855  010300  0009               	tblrd		*+
 14856  010302  50F5               	movf	tablat,w,c
 14857  010304  0100               	movlb	0	; () banked
 14858  010306  5DA3               	subwf	sprintf@val& (0+255),w,b
 14859  010308  0009               	tblrd		*+
 14860  01030A  50F5               	movf	tablat,w,c
 14861  01030C  0100               	movlb	0	; () banked
 14862  01030E  59A4               	subwfb	(sprintf@val+1)& (0+255),w,b
 14863  010310  0009               	tblrd		*+
 14864  010312  50F5               	movf	tablat,w,c
 14865  010314  0100               	movlb	0	; () banked
 14866  010316  59A5               	subwfb	(sprintf@val+2)& (0+255),w,b
 14867  010318  0009               	tblrd		*+
 14868  01031A  50F5               	movf	tablat,w,c
 14869  01031C  0100               	movlb	0	; () banked
 14870  01031E  59A6               	subwfb	(sprintf@val+3)& (0+255),w,b
 14871  010320  A0D8               	btfss	status,0,c
 14872  010322  D003               	goto	l10353
 14873                           
 14874                           ; BSR set to: 0
 14875                           
 14876                           ; BSR set to: 0
 14877                           
 14878                           ; BSR set to: 0
 14879                           ;doprnt.c: 1307: break;
 14880  010324  0100               	movlb	0	; () banked
 14881  010326  2BA8               	incf	sprintf@c& (0+255),f,b
 14882  010328  D7DA               	goto	l10341
 14883  01032A                     l10353:
 14884                           
 14885                           ; BSR set to: 0
 14886                           ;doprnt.c: 1345: if(width && flag & 0x03)
 14887  01032A  0100               	movlb	0	; () banked
 14888  01032C  51A9               	movf	sprintf@width& (0+255),w,b
 14889  01032E  0100               	movlb	0	; () banked
 14890  010330  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14891  010332  B4D8               	btfsc	status,2,c
 14892  010334  D00B               	goto	l10359
 14893                           
 14894                           ; BSR set to: 0
 14895  010336  C0A7  F097         	movff	sprintf@flag,??_sprintf
 14896  01033A  0E03               	movlw	3
 14897  01033C  0100               	movlb	0	; () banked
 14898  01033E  1797               	andwf	??_sprintf& (0+255),f,b
 14899  010340  B4D8               	btfsc	status,2,c
 14900  010342  D004               	goto	l10359
 14901                           
 14902                           ; BSR set to: 0
 14903                           ;doprnt.c: 1346: width--;
 14904  010344  0100               	movlb	0	; () banked
 14905  010346  07A9               	decf	sprintf@width& (0+255),f,b
 14906  010348  A0D8               	btfss	status,0,c
 14907  01034A  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 14908  01034C                     l10359:
 14909                           
 14910                           ; BSR set to: 0
 14911                           ;doprnt.c: 1381: if(width > c)
 14912  01034C  0E80               	movlw	128
 14913  01034E  0100               	movlb	0	; () banked
 14914  010350  BFA8               	btfsc	sprintf@c& (0+255),7,b
 14915  010352  0E7F               	movlw	127
 14916  010354  0100               	movlb	0	; () banked
 14917  010356  6F97               	movwf	??_sprintf& (0+255),b
 14918  010358  0100               	movlb	0	; () banked
 14919  01035A  51A9               	movf	sprintf@width& (0+255),w,b
 14920  01035C  0100               	movlb	0	; () banked
 14921  01035E  5DA8               	subwf	sprintf@c& (0+255),w,b
 14922  010360  0100               	movlb	0	; () banked
 14923  010362  51AA               	movf	(sprintf@width+1)& (0+255),w,b
 14924  010364  0A80               	xorlw	128
 14925  010366  0100               	movlb	0	; () banked
 14926  010368  5997               	subwfb	??_sprintf& (0+255),w,b
 14927  01036A  B0D8               	btfsc	status,0,c
 14928  01036C  D00B               	goto	l10363
 14929                           
 14930                           ; BSR set to: 0
 14931                           ;doprnt.c: 1382: width -= c;
 14932  01036E  0100               	movlb	0	; () banked
 14933  010370  51A8               	movf	sprintf@c& (0+255),w,b
 14934  010372  0100               	movlb	0	; () banked
 14935  010374  5FA9               	subwf	sprintf@width& (0+255),f,b
 14936  010376  0E00               	movlw	0
 14937  010378  0100               	movlb	0	; () banked
 14938  01037A  BFA8               	btfsc	sprintf@c& (0+255),7,b
 14939  01037C  0EFF               	movlw	255
 14940  01037E  0100               	movlb	0	; () banked
 14941  010380  5BAA               	subwfb	(sprintf@width+1)& (0+255),f,b
 14942  010382  D005               	goto	l10365
 14943  010384                     l10363:
 14944                           
 14945                           ; BSR set to: 0
 14946                           ;doprnt.c: 1383: else
 14947                           ;doprnt.c: 1384: width = 0;
 14948  010384  0E00               	movlw	0
 14949  010386  0100               	movlb	0	; () banked
 14950  010388  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 14951  01038A  0E00               	movlw	0
 14952  01038C  6FA9               	movwf	sprintf@width& (0+255),b
 14953  01038E                     l10365:
 14954                           
 14955                           ; BSR set to: 0
 14956                           ;doprnt.c: 1387: if(flag & 0x04) {
 14957  01038E  0100               	movlb	0	; () banked
 14958  010390  A5A7               	btfss	sprintf@flag& (0+255),2,b
 14959  010392  D024               	goto	l10381
 14960                           
 14961                           ; BSR set to: 0
 14962                           ;doprnt.c: 1392: if(flag & 0x03)
 14963  010394  C0A7  F097         	movff	sprintf@flag,??_sprintf
 14964  010398  0E03               	movlw	3
 14965  01039A  0100               	movlb	0	; () banked
 14966  01039C  1797               	andwf	??_sprintf& (0+255),f,b
 14967  01039E  B4D8               	btfsc	status,2,c
 14968  0103A0  D009               	goto	l10373
 14969                           
 14970                           ; BSR set to: 0
 14971                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 14972  0103A2  C083  FFD9         	movff	sprintf@sp,fsr2l
 14973  0103A6  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14974  0103AA  0E2D               	movlw	45
 14975  0103AC  6EDF               	movwf	indf2,c
 14976                           
 14977                           ; BSR set to: 0
 14978  0103AE  0100               	movlb	0	; () banked
 14979  0103B0  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14980  0103B2  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14981  0103B4                     l10373:
 14982                           
 14983                           ; BSR set to: 0
 14984                           ;doprnt.c: 1415: if(width)
 14985  0103B4  0100               	movlb	0	; () banked
 14986  0103B6  51A9               	movf	sprintf@width& (0+255),w,b
 14987  0103B8  0100               	movlb	0	; () banked
 14988  0103BA  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14989  0103BC  B4D8               	btfsc	status,2,c
 14990  0103BE  D037               	goto	l10395
 14991                           
 14992                           ; BSR set to: 0
 14993                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 14994                           
 14995                           ; BSR set to: 0
 14996                           
 14997                           ;doprnt.c: 1416: do
 14998  0103C0  C083  FFD9         	movff	sprintf@sp,fsr2l
 14999  0103C4  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 15000  0103C8  0E30               	movlw	48
 15001  0103CA  6EDF               	movwf	indf2,c
 15002                           
 15003                           ; BSR set to: 0
 15004  0103CC  0100               	movlb	0	; () banked
 15005  0103CE  4B83               	infsnz	sprintf@sp& (0+255),f,b
 15006  0103D0  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 15007                           
 15008                           ; BSR set to: 0
 15009                           ;doprnt.c: 1418: while(--width);
 15010  0103D2  0100               	movlb	0	; () banked
 15011  0103D4  07A9               	decf	sprintf@width& (0+255),f,b
 15012  0103D6  A0D8               	btfss	status,0,c
 15013  0103D8  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 15014  0103DA  D7EC               	goto	l10373
 15015  0103DC                     l10381:
 15016                           
 15017                           ; BSR set to: 0
 15018                           ;doprnt.c: 1422: {
 15019                           ;doprnt.c: 1424: if(width
 15020                           ;doprnt.c: 1428: )
 15021  0103DC  0100               	movlb	0	; () banked
 15022  0103DE  51A9               	movf	sprintf@width& (0+255),w,b
 15023  0103E0  0100               	movlb	0	; () banked
 15024  0103E2  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 15025  0103E4  B4D8               	btfsc	status,2,c
 15026  0103E6  D013               	goto	l10389
 15027  0103E8                     l10383:
 15028                           
 15029                           ; BSR set to: 0
 15030                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 15031  0103E8  C083  FFD9         	movff	sprintf@sp,fsr2l
 15032  0103EC  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 15033  0103F0  0E20               	movlw	32
 15034  0103F2  6EDF               	movwf	indf2,c
 15035                           
 15036                           ; BSR set to: 0
 15037  0103F4  0100               	movlb	0	; () banked
 15038  0103F6  4B83               	infsnz	sprintf@sp& (0+255),f,b
 15039  0103F8  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 15040                           
 15041                           ; BSR set to: 0
 15042                           ;doprnt.c: 1431: while(--width);
 15043  0103FA  0100               	movlb	0	; () banked
 15044  0103FC  07A9               	decf	sprintf@width& (0+255),f,b
 15045  0103FE  A0D8               	btfss	status,0,c
 15046  010400  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 15047  010402  0100               	movlb	0	; () banked
 15048  010404  51A9               	movf	sprintf@width& (0+255),w,b
 15049  010406  0100               	movlb	0	; () banked
 15050  010408  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 15051  01040A  A4D8               	btfss	status,2,c
 15052  01040C  D7ED               	goto	l10383
 15053  01040E                     l10389:
 15054                           
 15055                           ; BSR set to: 0
 15056                           ;doprnt.c: 1438: if(flag & 0x03)
 15057  01040E  C0A7  F097         	movff	sprintf@flag,??_sprintf
 15058  010412  0E03               	movlw	3
 15059  010414  0100               	movlb	0	; () banked
 15060  010416  1797               	andwf	??_sprintf& (0+255),f,b
 15061  010418  B4D8               	btfsc	status,2,c
 15062  01041A  D009               	goto	l10395
 15063                           
 15064                           ; BSR set to: 0
 15065                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 15066  01041C  C083  FFD9         	movff	sprintf@sp,fsr2l
 15067  010420  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 15068  010424  0E2D               	movlw	45
 15069  010426  6EDF               	movwf	indf2,c
 15070                           
 15071                           ; BSR set to: 0
 15072  010428  0100               	movlb	0	; () banked
 15073  01042A  4B83               	infsnz	sprintf@sp& (0+255),f,b
 15074  01042C  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 15075  01042E                     l10395:
 15076                           
 15077                           ; BSR set to: 0
 15078                           ;doprnt.c: 1469: }
 15079                           ;doprnt.c: 1472: prec = c;
 15080  01042E  0100               	movlb	0	; () banked
 15081  010430  51A8               	movf	sprintf@c& (0+255),w,b
 15082  010432  0100               	movlb	0	; () banked
 15083  010434  6F9B               	movwf	sprintf@prec& (0+255),b
 15084  010436  6B9C               	clrf	(sprintf@prec+1)& (0+255),b
 15085  010438  BF9B               	btfsc	sprintf@prec& (0+255),7,b
 15086  01043A  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 15087                           
 15088                           ;doprnt.c: 1474: while(prec--) {
 15089  01043C  D04D               	goto	l10403
 15090  01043E                     l10397:
 15091                           
 15092                           ; BSR set to: 0
 15093                           ;doprnt.c: 1478: {
 15094                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 15095  01043E  C09B  F097         	movff	sprintf@prec,??_sprintf
 15096  010442  C09C  F098         	movff	sprintf@prec+1,??_sprintf+1
 15097  010446  0100               	movlb	0	; () banked
 15098  010448  90D8               	bcf	status,0,c
 15099  01044A  3797               	rlcf	??_sprintf& (0+255),f,b
 15100  01044C  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 15101  01044E  0100               	movlb	0	; () banked
 15102  010450  90D8               	bcf	status,0,c
 15103  010452  3797               	rlcf	??_sprintf& (0+255),f,b
 15104  010454  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 15105  010456  0E51               	movlw	low _dpowers
 15106  010458  0100               	movlb	0	; () banked
 15107  01045A  2597               	addwf	??_sprintf& (0+255),w,b
 15108  01045C  6EF6               	movwf	tblptrl,c
 15109  01045E  0EFA               	movlw	high _dpowers
 15110  010460  2198               	addwfc	(??_sprintf+1)& (0+255),w,b
 15111  010462  6EF7               	movwf	tblptrh,c
 15112  010464                     	if	1	;There are 3 active tblptr bytes
 15113  010464  6AF8               	clrf	tblptru,c
 15114  010466  0E00               	movlw	low (__mediumconst shr (0+16))
 15115  010468  22F8               	addwfc	tblptru,f,c
 15116  01046A                     	endif
 15117  01046A  0009               	tblrd		*+
 15118  01046C  CFF5 F064          	movff	tablat,___lldiv@divisor
 15119  010470  0009               	tblrd		*+
 15120  010472  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 15121  010476  0009               	tblrd		*+
 15122  010478  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 15123  01047C  000A               	tblrd		*-
 15124  01047E  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 15125  010482  C0A3  F060         	movff	sprintf@val,___lldiv@dividend
 15126  010486  C0A4  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 15127  01048A  C0A5  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 15128  01048E  C0A6  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 15129  010492  EC89  F0A9         	call	___lldiv	;wreg free
 15130  010496  C060  F06D         	movff	?___lldiv,___llmod@dividend
 15131  01049A  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 15132  01049E  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 15133  0104A2  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 15134  0104A6  0E0A               	movlw	10
 15135  0104A8  0100               	movlb	0	; () banked
 15136  0104AA  6F71               	movwf	___llmod@divisor& (0+255),b
 15137  0104AC  0E00               	movlw	0
 15138  0104AE  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 15139  0104B0  0E00               	movlw	0
 15140  0104B2  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 15141  0104B4  0E00               	movlw	0
 15142  0104B6  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 15143  0104B8  EC49  F0AC         	call	___llmod	;wreg free
 15144  0104BC  0100               	movlb	0	; () banked
 15145  0104BE  516D               	movf	?___llmod& (0+255),w,b
 15146  0104C0  0F30               	addlw	48
 15147  0104C2  0100               	movlb	0	; () banked
 15148  0104C4  6FA8               	movwf	sprintf@c& (0+255),b
 15149                           
 15150                           ; BSR set to: 0
 15151                           ;doprnt.c: 1523: }
 15152                           ;doprnt.c: 1524: ((*sp++ = (c)));
 15153  0104C6  C083  FFD9         	movff	sprintf@sp,fsr2l
 15154  0104CA  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 15155  0104CE  C0A8  FFDF         	movff	sprintf@c,indf2
 15156                           
 15157                           ; BSR set to: 0
 15158  0104D2  0100               	movlb	0	; () banked
 15159  0104D4  4B83               	infsnz	sprintf@sp& (0+255),f,b
 15160  0104D6  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 15161  0104D8                     l10403:
 15162                           
 15163                           ; BSR set to: 0
 15164  0104D8  0100               	movlb	0	; () banked
 15165  0104DA  079B               	decf	sprintf@prec& (0+255),f,b
 15166  0104DC  A0D8               	btfss	status,0,c
 15167  0104DE  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 15168  0104E0  0100               	movlb	0	; () banked
 15169  0104E2  299B               	incf	sprintf@prec& (0+255),w,b
 15170  0104E4  E1AC               	bnz	l10397
 15171  0104E6  0100               	movlb	0	; () banked
 15172  0104E8  299C               	incf	(sprintf@prec+1)& (0+255),w,b
 15173  0104EA  A4D8               	btfss	status,2,c
 15174  0104EC  D7A8               	goto	l10397
 15175  0104EE                     l10405:
 15176                           
 15177                           ; BSR set to: 0
 15178  0104EE  C085  FFF6         	movff	sprintf@f,tblptrl
 15179  0104F2  C086  FFF7         	movff	sprintf@f+1,tblptrh
 15180  0104F6  0100               	movlb	0	; () banked
 15181  0104F8  4B85               	infsnz	sprintf@f& (0+255),f,b
 15182  0104FA  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 15183  0104FC                     	if	0	;tblptru may be non-zero
 15184  0104FC                     	endif
 15185  0104FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15186  0104FC  0E00               	movlw	low (__mediumconst shr (0+16))
 15187  0104FE  6EF8               	movwf	tblptru,c
 15188  010500                     	endif
 15189  010500  0008               	tblrd		*
 15190  010502  CFF5 F0A8          	movff	tablat,sprintf@c
 15191  010506  0100               	movlb	0	; () banked
 15192  010508  51A8               	movf	sprintf@c& (0+255),w,b
 15193  01050A  A4D8               	btfss	status,2,c
 15194  01050C  D580               	goto	l10259
 15195  01050E                     l10407:
 15196                           
 15197                           ;doprnt.c: 1538: *sp = 0;
 15198  01050E  C083  FFD9         	movff	sprintf@sp,fsr2l
 15199  010512  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 15200  010516  0E00               	movlw	0
 15201  010518  6EDF               	movwf	indf2,c
 15202  01051A  0012               	return	
 15203  01051C                     __end_of_sprintf:
 15204                           	opt stack 0
 15205                           tblptru	equ	0xFF8
 15206                           tblptrh	equ	0xFF7
 15207                           tblptrl	equ	0xFF6
 15208                           tablat	equ	0xFF5
 15209                           prodh	equ	0xFF4
 15210                           prodl	equ	0xFF3
 15211                           intcon	equ	0xFF2
 15212                           postinc0	equ	0xFEE
 15213                           wreg	equ	0xFE8
 15214                           indf1	equ	0xFE7
 15215                           postinc1	equ	0xFE6
 15216                           postdec1	equ	0xFE5
 15217                           fsr1h	equ	0xFE2
 15218                           fsr1l	equ	0xFE1
 15219                           indf2	equ	0xFDF
 15220                           postinc2	equ	0xFDE
 15221                           postdec2	equ	0xFDD
 15222                           plusw2	equ	0xFDB
 15223                           fsr2h	equ	0xFDA
 15224                           fsr2l	equ	0xFD9
 15225                           status	equ	0xFD8
 15226                           
 15227 ;; *************** function _isdigit *****************
 15228 ;; Defined at:
 15229 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
 15230 ;; Parameters:    Size  Location     Type
 15231 ;;  c               1    wreg     unsigned char 
 15232 ;; Auto vars:     Size  Location     Type
 15233 ;;  c               1    2[BANK0 ] unsigned char 
 15234 ;; Return value:  Size  Location     Type
 15235 ;;		None               void
 15236 ;; Registers used:
 15237 ;;		wreg, status,2, status,0
 15238 ;; Tracked objects:
 15239 ;;		On entry : 0/0
 15240 ;;		On exit  : 0/0
 15241 ;;		Unchanged: 0/0
 15242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15244 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15245 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15246 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15247 ;;Total ram usage:        3 bytes
 15248 ;; Hardware stack levels used:    1
 15249 ;; Hardware stack levels required when called:   11
 15250 ;; This function calls:
 15251 ;;		Nothing
 15252 ;; This function is called by:
 15253 ;;		_sprintf
 15254 ;;		_atoi
 15255 ;; This function uses a non-reentrant model
 15256 ;;
 15257                           
 15258                           	psect	text46
 15259  016A6C                     __ptext46:
 15260                           	opt stack 0
 15261  016A6C                     _isdigit:
 15262                           	opt stack 13
 15263                           
 15264                           ;incstack = 0
 15265                           ;isdigit@c stored from wreg
 15266  016A6C  0100               	movlb	0	; () banked
 15267  016A6E  6F62               	movwf	isdigit@c& (0+255),b
 15268  016A70  0E00               	movlw	0
 15269  016A72  0100               	movlb	0	; () banked
 15270  016A74  6F61               	movwf	_isdigit$6228& (0+255),b
 15271                           
 15272                           ; BSR set to: 0
 15273  016A76  0E3A               	movlw	58
 15274  016A78  0100               	movlb	0	; () banked
 15275  016A7A  6162               	cpfslt	isdigit@c& (0+255),b
 15276  016A7C  D007               	goto	l10223
 15277                           
 15278                           ; BSR set to: 0
 15279  016A7E  0E2F               	movlw	47
 15280  016A80  0100               	movlb	0	; () banked
 15281  016A82  6562               	cpfsgt	isdigit@c& (0+255),b
 15282  016A84  D003               	goto	l10223
 15283                           
 15284                           ; BSR set to: 0
 15285  016A86  0E01               	movlw	1
 15286  016A88  0100               	movlb	0	; () banked
 15287  016A8A  6F61               	movwf	_isdigit$6228& (0+255),b
 15288  016A8C                     l10223:
 15289                           
 15290                           ; BSR set to: 0
 15291  016A8C  C061  F060         	movff	_isdigit$6228,??_isdigit
 15292  016A90  0100               	movlb	0	; () banked
 15293  016A92  3160               	rrcf	??_isdigit& (0+255),w,b
 15294  016A94  0012               	return	
 15295  016A96                     __end_of_isdigit:
 15296                           	opt stack 0
 15297                           tblptru	equ	0xFF8
 15298                           tblptrh	equ	0xFF7
 15299                           tblptrl	equ	0xFF6
 15300                           tablat	equ	0xFF5
 15301                           prodh	equ	0xFF4
 15302                           prodl	equ	0xFF3
 15303                           intcon	equ	0xFF2
 15304                           postinc0	equ	0xFEE
 15305                           wreg	equ	0xFE8
 15306                           indf1	equ	0xFE7
 15307                           postinc1	equ	0xFE6
 15308                           postdec1	equ	0xFE5
 15309                           fsr1h	equ	0xFE2
 15310                           fsr1l	equ	0xFE1
 15311                           indf2	equ	0xFDF
 15312                           postinc2	equ	0xFDE
 15313                           postdec2	equ	0xFDD
 15314                           plusw2	equ	0xFDB
 15315                           fsr2h	equ	0xFDA
 15316                           fsr2l	equ	0xFD9
 15317                           status	equ	0xFD8
 15318                           
 15319 ;; *************** function ___llmod *****************
 15320 ;; Defined at:
 15321 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 15322 ;; Parameters:    Size  Location     Type
 15323 ;;  dividend        4   13[BANK0 ] unsigned long 
 15324 ;;  divisor         4   17[BANK0 ] unsigned long 
 15325 ;; Auto vars:     Size  Location     Type
 15326 ;;  counter         1   21[BANK0 ] unsigned char 
 15327 ;; Return value:  Size  Location     Type
 15328 ;;                  4   13[BANK0 ] unsigned long 
 15329 ;; Registers used:
 15330 ;;		wreg, status,2, status,0
 15331 ;; Tracked objects:
 15332 ;;		On entry : 0/0
 15333 ;;		On exit  : 0/0
 15334 ;;		Unchanged: 0/0
 15335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15336 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15337 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15339 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15340 ;;Total ram usage:        9 bytes
 15341 ;; Hardware stack levels used:    1
 15342 ;; Hardware stack levels required when called:   11
 15343 ;; This function calls:
 15344 ;;		Nothing
 15345 ;; This function is called by:
 15346 ;;		_display_LCD
 15347 ;;		_sprintf
 15348 ;; This function uses a non-reentrant model
 15349 ;;
 15350                           
 15351                           	psect	text47
 15352  015892                     __ptext47:
 15353                           	opt stack 0
 15354  015892                     ___llmod:
 15355                           	opt stack 13
 15356                           
 15357                           ; BSR set to: 0
 15358                           ;incstack = 0
 15359  015892  0100               	movlb	0	; () banked
 15360  015894  5171               	movf	___llmod@divisor& (0+255),w,b
 15361  015896  0100               	movlb	0	; () banked
 15362  015898  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 15363  01589A  0100               	movlb	0	; () banked
 15364  01589C  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 15365  01589E  0100               	movlb	0	; () banked
 15366  0158A0  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 15367  0158A2  B4D8               	btfsc	status,2,c
 15368  0158A4  D03A               	goto	l2256
 15369                           
 15370                           ; BSR set to: 0
 15371  0158A6  0E01               	movlw	1
 15372  0158A8  0100               	movlb	0	; () banked
 15373  0158AA  6F75               	movwf	___llmod@counter& (0+255),b
 15374  0158AC  D008               	goto	l10239
 15375  0158AE                     l10237:
 15376                           
 15377                           ; BSR set to: 0
 15378  0158AE  0100               	movlb	0	; () banked
 15379  0158B0  90D8               	bcf	status,0,c
 15380  0158B2  3771               	rlcf	___llmod@divisor& (0+255),f,b
 15381  0158B4  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 15382  0158B6  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 15383  0158B8  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 15384  0158BA  0100               	movlb	0	; () banked
 15385  0158BC  2B75               	incf	___llmod@counter& (0+255),f,b
 15386  0158BE                     l10239:
 15387                           
 15388                           ; BSR set to: 0
 15389  0158BE  0100               	movlb	0	; () banked
 15390  0158C0  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 15391  0158C2  D7F5               	goto	l10237
 15392  0158C4                     l10241:
 15393                           
 15394                           ; BSR set to: 0
 15395  0158C4  0100               	movlb	0	; () banked
 15396  0158C6  5171               	movf	___llmod@divisor& (0+255),w,b
 15397  0158C8  0100               	movlb	0	; () banked
 15398  0158CA  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 15399  0158CC  0100               	movlb	0	; () banked
 15400  0158CE  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 15401  0158D0  0100               	movlb	0	; () banked
 15402  0158D2  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 15403  0158D4  0100               	movlb	0	; () banked
 15404  0158D6  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 15405  0158D8  0100               	movlb	0	; () banked
 15406  0158DA  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 15407  0158DC  0100               	movlb	0	; () banked
 15408  0158DE  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 15409  0158E0  0100               	movlb	0	; () banked
 15410  0158E2  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 15411  0158E4  A0D8               	btfss	status,0,c
 15412  0158E6  D010               	goto	l10245
 15413                           
 15414                           ; BSR set to: 0
 15415  0158E8  0100               	movlb	0	; () banked
 15416  0158EA  5171               	movf	___llmod@divisor& (0+255),w,b
 15417  0158EC  0100               	movlb	0	; () banked
 15418  0158EE  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 15419  0158F0  0100               	movlb	0	; () banked
 15420  0158F2  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 15421  0158F4  0100               	movlb	0	; () banked
 15422  0158F6  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 15423  0158F8  0100               	movlb	0	; () banked
 15424  0158FA  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 15425  0158FC  0100               	movlb	0	; () banked
 15426  0158FE  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 15427  015900  0100               	movlb	0	; () banked
 15428  015902  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 15429  015904  0100               	movlb	0	; () banked
 15430  015906  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 15431  015908                     l10245:
 15432                           
 15433                           ; BSR set to: 0
 15434  015908  0100               	movlb	0	; () banked
 15435  01590A  90D8               	bcf	status,0,c
 15436  01590C  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 15437  01590E  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 15438  015910  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 15439  015912  3371               	rrcf	___llmod@divisor& (0+255),f,b
 15440                           
 15441                           ; BSR set to: 0
 15442  015914  0100               	movlb	0	; () banked
 15443  015916  2F75               	decfsz	___llmod@counter& (0+255),f,b
 15444  015918  D7D5               	goto	l10241
 15445  01591A                     l2256:
 15446                           
 15447                           ; BSR set to: 0
 15448  01591A  C06D  F06D         	movff	___llmod@dividend,?___llmod
 15449  01591E  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 15450  015922  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 15451  015926  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 15452                           
 15453                           ; BSR set to: 0
 15454  01592A  0012               	return		;funcret
 15455  01592C                     __end_of___llmod:
 15456                           	opt stack 0
 15457                           tblptru	equ	0xFF8
 15458                           tblptrh	equ	0xFF7
 15459                           tblptrl	equ	0xFF6
 15460                           tablat	equ	0xFF5
 15461                           prodh	equ	0xFF4
 15462                           prodl	equ	0xFF3
 15463                           intcon	equ	0xFF2
 15464                           postinc0	equ	0xFEE
 15465                           wreg	equ	0xFE8
 15466                           indf1	equ	0xFE7
 15467                           postinc1	equ	0xFE6
 15468                           postdec1	equ	0xFE5
 15469                           fsr1h	equ	0xFE2
 15470                           fsr1l	equ	0xFE1
 15471                           indf2	equ	0xFDF
 15472                           postinc2	equ	0xFDE
 15473                           postdec2	equ	0xFDD
 15474                           plusw2	equ	0xFDB
 15475                           fsr2h	equ	0xFDA
 15476                           fsr2l	equ	0xFD9
 15477                           status	equ	0xFD8
 15478                           
 15479 ;; *************** function _ringbuf_put_str *****************
 15480 ;; Defined at:
 15481 ;;		line 39 in file "../../../My_library/My_ringbuf.c"
 15482 ;; Parameters:    Size  Location     Type
 15483 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
 15484 ;;		 -> usb_tx(8), 
 15485 ;;  str             2   17[BANK0 ] PTR const unsigned char 
 15486 ;;		 -> STR_101(8), print_time@str(30), STR_99(3), print_time_dec@str(10), 
 15487 ;;		 -> STR_97(4), STR_96(4), STR_29(2), data_out@str(30), 
 15488 ;;		 -> STR_26(18), STR_23(36), STR_22(24), STR_13(434), 
 15489 ;; Auto vars:     Size  Location     Type
 15490 ;;		None
 15491 ;; Return value:  Size  Location     Type
 15492 ;;		None               void
 15493 ;; Registers used:
 15494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15495 ;; Tracked objects:
 15496 ;;		On entry : 0/0
 15497 ;;		On exit  : 0/0
 15498 ;;		Unchanged: 0/0
 15499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15500 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15503 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15504 ;;Total ram usage:        4 bytes
 15505 ;; Hardware stack levels used:    1
 15506 ;; Hardware stack levels required when called:   13
 15507 ;; This function calls:
 15508 ;;		_ringbuf_put
 15509 ;; This function is called by:
 15510 ;;		_terminal_operation
 15511 ;;		_data_out
 15512 ;;		_terminal_task
 15513 ;;		_print_time
 15514 ;;		_terminal_at_hand
 15515 ;;		_print_time_dec
 15516 ;; This function uses a non-reentrant model
 15517 ;;
 15518                           
 15519                           	psect	text48
 15520  0161A6                     __ptext48:
 15521                           	opt stack 0
 15522  0161A6                     _ringbuf_put_str:
 15523                           	opt stack 13
 15524                           
 15525                           ;My_ringbuf.c: 40: while (*str) {
 15526                           
 15527                           ; BSR set to: 0
 15528                           ;incstack = 0
 15529  0161A6  D01C               	goto	l10255
 15530  0161A8                     l10251:
 15531                           
 15532                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
 15533  0161A8  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
 15534  0161AC  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
 15535  0161B0  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
 15536  0161B4  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 15537  0161B8  0E00               	movlw	low (__mediumconst shr (0+16))
 15538  0161BA  6EF8               	movwf	tblptru,c
 15539  0161BC  0E0E               	movlw	(high __ramtop+-1)
 15540  0161BE  64F7               	cpfsgt	tblptrh,c
 15541  0161C0  D003               	bra	u11487
 15542  0161C2  0008               	tblrd		*
 15543  0161C4  50F5               	movf	tablat,w,c
 15544  0161C6  D005               	bra	u11480
 15545  0161C8                     u11487:
 15546  0161C8  CFF6 FFE1          	movff	tblptrl,fsr1l
 15547  0161CC  CFF7 FFE2          	movff	tblptrh,fsr1h
 15548  0161D0  50E7               	movf	indf1,w,c
 15549  0161D2                     u11480:
 15550  0161D2  0100               	movlb	0	; () banked
 15551  0161D4  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 15552  0161D6  EC69  F0A6         	call	_ringbuf_put	;wreg free
 15553  0161DA  0100               	movlb	0	; () banked
 15554  0161DC  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
 15555  0161DE  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
 15556  0161E0                     l10255:
 15557  0161E0  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
 15558  0161E4  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 15559  0161E8  0E00               	movlw	low (__mediumconst shr (0+16))
 15560  0161EA  6EF8               	movwf	tblptru,c
 15561  0161EC  0E0E               	movlw	(high __ramtop+-1)
 15562  0161EE  64F7               	cpfsgt	tblptrh,c
 15563  0161F0  D003               	bra	u11497
 15564  0161F2  0008               	tblrd		*
 15565  0161F4  50F5               	movf	tablat,w,c
 15566  0161F6  D005               	bra	u11490
 15567  0161F8                     u11497:
 15568  0161F8  CFF6 FFE1          	movff	tblptrl,fsr1l
 15569  0161FC  CFF7 FFE2          	movff	tblptrh,fsr1h
 15570  016200  50E7               	movf	indf1,w,c
 15571  016202                     u11490:
 15572  016202  0900               	iorlw	0
 15573  016204  B4D8               	btfsc	status,2,c
 15574  016206  0012               	return	
 15575  016208  D7CF               	goto	l10251
 15576  01620A                     __end_of_ringbuf_put_str:
 15577                           	opt stack 0
 15578                           tblptru	equ	0xFF8
 15579                           tblptrh	equ	0xFF7
 15580                           tblptrl	equ	0xFF6
 15581                           tablat	equ	0xFF5
 15582                           prodh	equ	0xFF4
 15583                           prodl	equ	0xFF3
 15584                           intcon	equ	0xFF2
 15585                           postinc0	equ	0xFEE
 15586                           wreg	equ	0xFE8
 15587                           indf1	equ	0xFE7
 15588                           postinc1	equ	0xFE6
 15589                           postdec1	equ	0xFE5
 15590                           fsr1h	equ	0xFE2
 15591                           fsr1l	equ	0xFE1
 15592                           indf2	equ	0xFDF
 15593                           postinc2	equ	0xFDE
 15594                           postdec2	equ	0xFDD
 15595                           plusw2	equ	0xFDB
 15596                           fsr2h	equ	0xFDA
 15597                           fsr2l	equ	0xFD9
 15598                           status	equ	0xFD8
 15599                           
 15600 ;; *************** function ___lwmod *****************
 15601 ;; Defined at:
 15602 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 15603 ;; Parameters:    Size  Location     Type
 15604 ;;  dividend        2    0[BANK0 ] unsigned int 
 15605 ;;  divisor         2    2[BANK0 ] unsigned int 
 15606 ;; Auto vars:     Size  Location     Type
 15607 ;;  counter         1    4[BANK0 ] unsigned char 
 15608 ;; Return value:  Size  Location     Type
 15609 ;;                  2    0[BANK0 ] unsigned int 
 15610 ;; Registers used:
 15611 ;;		wreg, status,2, status,0
 15612 ;; Tracked objects:
 15613 ;;		On entry : 0/0
 15614 ;;		On exit  : 0/0
 15615 ;;		Unchanged: 0/0
 15616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15617 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15618 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15620 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15621 ;;Total ram usage:        5 bytes
 15622 ;; Hardware stack levels used:    1
 15623 ;; Hardware stack levels required when called:   11
 15624 ;; This function calls:
 15625 ;;		Nothing
 15626 ;; This function is called by:
 15627 ;;		_data_out
 15628 ;;		_display_LCD
 15629 ;;		_ringbuf_put_num
 15630 ;; This function uses a non-reentrant model
 15631 ;;
 15632                           
 15633                           	psect	text49
 15634  0162D0                     __ptext49:
 15635                           	opt stack 0
 15636  0162D0                     ___lwmod:
 15637                           	opt stack 17
 15638                           
 15639                           ;incstack = 0
 15640  0162D0  0100               	movlb	0	; () banked
 15641  0162D2  5162               	movf	___lwmod@divisor& (0+255),w,b
 15642  0162D4  0100               	movlb	0	; () banked
 15643  0162D6  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 15644  0162D8  B4D8               	btfsc	status,2,c
 15645  0162DA  D026               	goto	l2309
 15646                           
 15647                           ; BSR set to: 0
 15648  0162DC  0E01               	movlw	1
 15649  0162DE  0100               	movlb	0	; () banked
 15650  0162E0  6F64               	movwf	___lwmod@counter& (0+255),b
 15651  0162E2  D006               	goto	l11533
 15652  0162E4                     l11531:
 15653                           
 15654                           ; BSR set to: 0
 15655  0162E4  0100               	movlb	0	; () banked
 15656  0162E6  90D8               	bcf	status,0,c
 15657  0162E8  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 15658  0162EA  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 15659  0162EC  0100               	movlb	0	; () banked
 15660  0162EE  2B64               	incf	___lwmod@counter& (0+255),f,b
 15661  0162F0                     l11533:
 15662                           
 15663                           ; BSR set to: 0
 15664  0162F0  0100               	movlb	0	; () banked
 15665  0162F2  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 15666  0162F4  D7F7               	goto	l11531
 15667  0162F6                     l11535:
 15668                           
 15669                           ; BSR set to: 0
 15670  0162F6  0100               	movlb	0	; () banked
 15671  0162F8  5162               	movf	___lwmod@divisor& (0+255),w,b
 15672  0162FA  0100               	movlb	0	; () banked
 15673  0162FC  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 15674  0162FE  0100               	movlb	0	; () banked
 15675  016300  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 15676  016302  0100               	movlb	0	; () banked
 15677  016304  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 15678  016306  A0D8               	btfss	status,0,c
 15679  016308  D008               	goto	l11539
 15680                           
 15681                           ; BSR set to: 0
 15682  01630A  0100               	movlb	0	; () banked
 15683  01630C  5162               	movf	___lwmod@divisor& (0+255),w,b
 15684  01630E  0100               	movlb	0	; () banked
 15685  016310  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 15686  016312  0100               	movlb	0	; () banked
 15687  016314  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 15688  016316  0100               	movlb	0	; () banked
 15689  016318  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 15690  01631A                     l11539:
 15691                           
 15692                           ; BSR set to: 0
 15693  01631A  0100               	movlb	0	; () banked
 15694  01631C  90D8               	bcf	status,0,c
 15695  01631E  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 15696  016320  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 15697                           
 15698                           ; BSR set to: 0
 15699  016322  0100               	movlb	0	; () banked
 15700  016324  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 15701  016326  D7E7               	goto	l11535
 15702  016328                     l2309:
 15703                           
 15704                           ; BSR set to: 0
 15705  016328  C060  F060         	movff	___lwmod@dividend,?___lwmod
 15706  01632C  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 15707                           
 15708                           ; BSR set to: 0
 15709  016330  0012               	return		;funcret
 15710  016332                     __end_of___lwmod:
 15711                           	opt stack 0
 15712                           tblptru	equ	0xFF8
 15713                           tblptrh	equ	0xFF7
 15714                           tblptrl	equ	0xFF6
 15715                           tablat	equ	0xFF5
 15716                           prodh	equ	0xFF4
 15717                           prodl	equ	0xFF3
 15718                           intcon	equ	0xFF2
 15719                           postinc0	equ	0xFEE
 15720                           wreg	equ	0xFE8
 15721                           indf1	equ	0xFE7
 15722                           postinc1	equ	0xFE6
 15723                           postdec1	equ	0xFE5
 15724                           fsr1h	equ	0xFE2
 15725                           fsr1l	equ	0xFE1
 15726                           indf2	equ	0xFDF
 15727                           postinc2	equ	0xFDE
 15728                           postdec2	equ	0xFDD
 15729                           plusw2	equ	0xFDB
 15730                           fsr2h	equ	0xFDA
 15731                           fsr2l	equ	0xFD9
 15732                           status	equ	0xFD8
 15733                           
 15734 ;; *************** function _Auto_cut *****************
 15735 ;; Defined at:
 15736 ;;		line 49 in file "ChargeStation_task.c"
 15737 ;; Parameters:    Size  Location     Type
 15738 ;;		None
 15739 ;; Auto vars:     Size  Location     Type
 15740 ;;  i               1   30[BANK0 ] unsigned char 
 15741 ;; Return value:  Size  Location     Type
 15742 ;;		None               void
 15743 ;; Registers used:
 15744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15745 ;; Tracked objects:
 15746 ;;		On entry : 0/0
 15747 ;;		On exit  : 0/0
 15748 ;;		Unchanged: 0/0
 15749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15751 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15752 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15753 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15754 ;;Total ram usage:        3 bytes
 15755 ;; Hardware stack levels used:    1
 15756 ;; Hardware stack levels required when called:   12
 15757 ;; This function calls:
 15758 ;;		_ADC
 15759 ;;		_ANALOG_IN
 15760 ;;		_OUT
 15761 ;;		___wmul
 15762 ;; This function is called by:
 15763 ;;		_normal_task
 15764 ;; This function uses a non-reentrant model
 15765 ;;
 15766                           
 15767                           	psect	text50
 15768  013908                     __ptext50:
 15769                           	opt stack 0
 15770  013908                     _Auto_cut:
 15771                           	opt stack 17
 15772                           
 15773                           ;ChargeStation_task.c: 50: for (uint8_t i = 0; i < 3; i++) {
 15774                           
 15775                           ; BSR set to: 0
 15776                           ;incstack = 0
 15777  013908  0E00               	movlw	0
 15778  01390A  0100               	movlb	0	; () banked
 15779  01390C  6F7E               	movwf	Auto_cut@i& (0+255),b
 15780  01390E                     l11545:
 15781                           
 15782                           ; BSR set to: 0
 15783  01390E  0E02               	movlw	2
 15784  013910  0100               	movlb	0	; () banked
 15785  013912  657E               	cpfsgt	Auto_cut@i& (0+255),b
 15786  013914  D001               	goto	l11549
 15787  013916  0012               	return	
 15788  013918                     l11549:
 15789                           
 15790                           ; BSR set to: 0
 15791                           ;ChargeStation_task.c: 52: port[i].current = 13 * ADC(ANALOG_IN(i)) / 16;
 15792  013918  0100               	movlb	0	; () banked
 15793  01391A  517E               	movf	Auto_cut@i& (0+255),w,b
 15794  01391C  ECDE  F0B4         	call	_ANALOG_IN
 15795  013920  EC83  F0B4         	call	_ADC
 15796  013924  C060  F076         	movff	?_ADC,___wmul@multiplier
 15797  013928  C061  F077         	movff	?_ADC+1,___wmul@multiplier+1
 15798  01392C  0E00               	movlw	0
 15799  01392E  0100               	movlb	0	; () banked
 15800  013930  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15801  013932  0E0D               	movlw	13
 15802  013934  6F78               	movwf	___wmul@multiplicand& (0+255),b
 15803  013936  EC05  F0B4         	call	___wmul	;wreg free
 15804  01393A  0E04               	movlw	4
 15805  01393C  0100               	movlb	0	; () banked
 15806  01393E  6F7C               	movwf	??_Auto_cut& (0+255),b
 15807  013940                     u13535:
 15808  013940  0100               	movlb	0	; () banked
 15809  013942  90D8               	bcf	status,0,c
 15810  013944  3377               	rrcf	(?___wmul+1)& (0+255),f,b
 15811  013946  3376               	rrcf	?___wmul& (0+255),f,b
 15812  013948  0100               	movlb	0	; () banked
 15813  01394A  2F7C               	decfsz	??_Auto_cut& (0+255),f,b
 15814  01394C  D7F9               	goto	u13535
 15815  01394E  0100               	movlb	0	; () banked
 15816  013950  517E               	movf	Auto_cut@i& (0+255),w,b
 15817  013952  0D17               	mullw	23
 15818  013954  0E06               	movlw	6
 15819  013956  26F3               	addwf	prodl,f,c
 15820  013958  0E00               	movlw	0
 15821  01395A  22F4               	addwfc	prodh,f,c
 15822  01395C  0E2D               	movlw	low _port
 15823  01395E  24F3               	addwf	prodl,w,c
 15824  013960  6ED9               	movwf	fsr2l,c
 15825  013962  0E01               	movlw	high _port
 15826  013964  20F4               	addwfc	prodh,w,c
 15827  013966  6EDA               	movwf	fsr2h,c
 15828  013968  0100               	movlb	0	; () banked
 15829  01396A  C076  FFDE         	movff	?___wmul,postinc2
 15830  01396E  0100               	movlb	0	; () banked
 15831  013970  C077  FFDD         	movff	?___wmul+1,postdec2
 15832                           
 15833                           ; BSR set to: 0
 15834                           ;ChargeStation_task.c: 53: if (port[i].flag.auto_cut_ON) {
 15835  013974  0100               	movlb	0	; () banked
 15836  013976  517E               	movf	Auto_cut@i& (0+255),w,b
 15837  013978  0D17               	mullw	23
 15838  01397A  0E16               	movlw	22
 15839  01397C  26F3               	addwf	prodl,f,c
 15840  01397E  0E00               	movlw	0
 15841  013980  22F4               	addwfc	prodh,f,c
 15842  013982  0E2D               	movlw	low _port
 15843  013984  24F3               	addwf	prodl,w,c
 15844  013986  6ED9               	movwf	fsr2l,c
 15845  013988  0E01               	movlw	high _port
 15846  01398A  20F4               	addwfc	prodh,w,c
 15847  01398C  6EDA               	movwf	fsr2h,c
 15848  01398E  0101               	movlb	1	; () banked
 15849  013990  A0DF               	btfss	indf2,0,c
 15850  013992  D051               	goto	l11561
 15851                           
 15852                           ; BSR set to: 1
 15853                           ;ChargeStation_task.c: 54: if (port[i].current < 100) {
 15854  013994  0100               	movlb	0	; () banked
 15855  013996  517E               	movf	Auto_cut@i& (0+255),w,b
 15856  013998  0D17               	mullw	23
 15857  01399A  0E06               	movlw	6
 15858  01399C  26F3               	addwf	prodl,f,c
 15859  01399E  0E00               	movlw	0
 15860  0139A0  22F4               	addwfc	prodh,f,c
 15861  0139A2  0E2D               	movlw	low _port
 15862  0139A4  24F3               	addwf	prodl,w,c
 15863  0139A6  6ED9               	movwf	fsr2l,c
 15864  0139A8  0E01               	movlw	high _port
 15865  0139AA  20F4               	addwfc	prodh,w,c
 15866  0139AC  6EDA               	movwf	fsr2h,c
 15867  0139AE  0E01               	movlw	1
 15868  0139B0  50DB               	movf	plusw2,w,c
 15869  0139B2  E130               	bnz	l11559
 15870  0139B4  0E64               	movlw	100
 15871  0139B6  5CDE               	subwf	postinc2,w,c
 15872  0139B8  B0D8               	btfsc	status,0,c
 15873  0139BA  D02C               	goto	l11559
 15874                           
 15875                           ; BSR set to: 0
 15876                           ;ChargeStation_task.c: 55: port[i].cut_cnt++;
 15877  0139BC  0100               	movlb	0	; () banked
 15878  0139BE  517E               	movf	Auto_cut@i& (0+255),w,b
 15879  0139C0  0D17               	mullw	23
 15880  0139C2  0E14               	movlw	20
 15881  0139C4  26F3               	addwf	prodl,f,c
 15882  0139C6  0E00               	movlw	0
 15883  0139C8  22F4               	addwfc	prodh,f,c
 15884  0139CA  0E2D               	movlw	low _port
 15885  0139CC  24F3               	addwf	prodl,w,c
 15886  0139CE  6ED9               	movwf	fsr2l,c
 15887  0139D0  0E01               	movlw	high _port
 15888  0139D2  20F4               	addwfc	prodh,w,c
 15889  0139D4  6EDA               	movwf	fsr2h,c
 15890  0139D6  2ADE               	incf	postinc2,f,c
 15891  0139D8  0E00               	movlw	0
 15892  0139DA  22DD               	addwfc	postdec2,f,c
 15893                           
 15894                           ;ChargeStation_task.c: 56: if (port[i].cut_cnt > 6) {
 15895  0139DC  0100               	movlb	0	; () banked
 15896  0139DE  517E               	movf	Auto_cut@i& (0+255),w,b
 15897  0139E0  0D17               	mullw	23
 15898  0139E2  0E14               	movlw	20
 15899  0139E4  26F3               	addwf	prodl,f,c
 15900  0139E6  0E00               	movlw	0
 15901  0139E8  22F4               	addwfc	prodh,f,c
 15902  0139EA  0E2D               	movlw	low _port
 15903  0139EC  24F3               	addwf	prodl,w,c
 15904  0139EE  6ED9               	movwf	fsr2l,c
 15905  0139F0  0E01               	movlw	high _port
 15906  0139F2  20F4               	addwfc	prodh,w,c
 15907  0139F4  6EDA               	movwf	fsr2h,c
 15908  0139F6  0E01               	movlw	1
 15909  0139F8  50DB               	movf	plusw2,w,c
 15910  0139FA  E104               	bnz	u13560
 15911  0139FC  0E07               	movlw	7
 15912  0139FE  5CDE               	subwf	postinc2,w,c
 15913  013A00  A0D8               	btfss	status,0,c
 15914  013A02  D019               	goto	l11561
 15915  013A04                     u13560:
 15916                           
 15917                           ; BSR set to: 0
 15918                           ;ChargeStation_task.c: 57: OUT(i, 0);
 15919  013A04  0E00               	movlw	0
 15920  013A06  0100               	movlb	0	; () banked
 15921  013A08  6F60               	movwf	OUT@value& (0+255),b
 15922  013A0A  0100               	movlb	0	; () banked
 15923  013A0C  517E               	movf	Auto_cut@i& (0+255),w,b
 15924  013A0E  ECF7  F0AF         	call	_OUT
 15925                           
 15926                           ;ChargeStation_task.c: 58: }
 15927                           ;ChargeStation_task.c: 59: } else {
 15928  013A12  D011               	goto	l11561
 15929  013A14                     l11559:
 15930                           
 15931                           ;ChargeStation_task.c: 60: port[i].cut_cnt = 0;
 15932  013A14  0100               	movlb	0	; () banked
 15933  013A16  517E               	movf	Auto_cut@i& (0+255),w,b
 15934  013A18  0D17               	mullw	23
 15935  013A1A  0E14               	movlw	20
 15936  013A1C  26F3               	addwf	prodl,f,c
 15937  013A1E  0E00               	movlw	0
 15938  013A20  22F4               	addwfc	prodh,f,c
 15939  013A22  0E2D               	movlw	low _port
 15940  013A24  24F3               	addwf	prodl,w,c
 15941  013A26  6ED9               	movwf	fsr2l,c
 15942  013A28  0E01               	movlw	high _port
 15943  013A2A  20F4               	addwfc	prodh,w,c
 15944  013A2C  6EDA               	movwf	fsr2h,c
 15945  013A2E  0E00               	movlw	0
 15946  013A30  6EDE               	movwf	postinc2,c
 15947  013A32  0E00               	movlw	0
 15948  013A34  6EDD               	movwf	postdec2,c
 15949  013A36                     l11561:
 15950  013A36  0100               	movlb	0	; () banked
 15951  013A38  2B7E               	incf	Auto_cut@i& (0+255),f,b
 15952  013A3A  D769               	goto	l11545
 15953  013A3C                     __end_of_Auto_cut:
 15954                           	opt stack 0
 15955                           tblptru	equ	0xFF8
 15956                           tblptrh	equ	0xFF7
 15957                           tblptrl	equ	0xFF6
 15958                           tablat	equ	0xFF5
 15959                           prodh	equ	0xFF4
 15960                           prodl	equ	0xFF3
 15961                           intcon	equ	0xFF2
 15962                           postinc0	equ	0xFEE
 15963                           wreg	equ	0xFE8
 15964                           indf1	equ	0xFE7
 15965                           postinc1	equ	0xFE6
 15966                           postdec1	equ	0xFE5
 15967                           fsr1h	equ	0xFE2
 15968                           fsr1l	equ	0xFE1
 15969                           indf2	equ	0xFDF
 15970                           postinc2	equ	0xFDE
 15971                           postdec2	equ	0xFDD
 15972                           plusw2	equ	0xFDB
 15973                           fsr2h	equ	0xFDA
 15974                           fsr2l	equ	0xFD9
 15975                           status	equ	0xFD8
 15976                           
 15977 ;; *************** function ___wmul *****************
 15978 ;; Defined at:
 15979 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 15980 ;; Parameters:    Size  Location     Type
 15981 ;;  multiplier      2   22[BANK0 ] unsigned int 
 15982 ;;  multiplicand    2   24[BANK0 ] unsigned int 
 15983 ;; Auto vars:     Size  Location     Type
 15984 ;;  product         2   26[BANK0 ] unsigned int 
 15985 ;; Return value:  Size  Location     Type
 15986 ;;                  2   22[BANK0 ] unsigned int 
 15987 ;; Registers used:
 15988 ;;		wreg, status,2, status,0, prodl, prodh
 15989 ;; Tracked objects:
 15990 ;;		On entry : 0/0
 15991 ;;		On exit  : 0/0
 15992 ;;		Unchanged: 0/0
 15993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15994 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15995 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15997 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15998 ;;Total ram usage:        6 bytes
 15999 ;; Hardware stack levels used:    1
 16000 ;; Hardware stack levels required when called:   11
 16001 ;; This function calls:
 16002 ;;		Nothing
 16003 ;; This function is called by:
 16004 ;;		_Auto_cut
 16005 ;;		_ctmu_set_ratio
 16006 ;;		_sprintf
 16007 ;;		_atoi
 16008 ;; This function uses a non-reentrant model
 16009 ;;
 16010                           
 16011                           	psect	text51
 16012  01680A                     __ptext51:
 16013                           	opt stack 0
 16014  01680A                     ___wmul:
 16015                           	opt stack 13
 16016                           
 16017                           ; BSR set to: 0
 16018                           ;incstack = 0
 16019  01680A  0100               	movlb	0	; () banked
 16020  01680C  5176               	movf	___wmul@multiplier& (0+255),w,b
 16021  01680E  0100               	movlb	0	; () banked
 16022  016810  0378               	mulwf	___wmul@multiplicand& (0+255),b
 16023  016812  CFF3 F07A          	movff	prodl,___wmul@product
 16024  016816  CFF4 F07B          	movff	prodh,___wmul@product+1
 16025  01681A  0100               	movlb	0	; () banked
 16026  01681C  5176               	movf	___wmul@multiplier& (0+255),w,b
 16027  01681E  0100               	movlb	0	; () banked
 16028  016820  0379               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 16029  016822  50F3               	movf	prodl,w,c
 16030  016824  0100               	movlb	0	; () banked
 16031  016826  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 16032  016828  0100               	movlb	0	; () banked
 16033  01682A  5177               	movf	(___wmul@multiplier+1)& (0+255),w,b
 16034  01682C  0100               	movlb	0	; () banked
 16035  01682E  0378               	mulwf	___wmul@multiplicand& (0+255),b
 16036  016830  50F3               	movf	prodl,w,c
 16037  016832  0100               	movlb	0	; () banked
 16038  016834  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 16039                           
 16040                           ; BSR set to: 0
 16041  016836  C07A  F076         	movff	___wmul@product,?___wmul
 16042  01683A  C07B  F077         	movff	___wmul@product+1,?___wmul+1
 16043  01683E  0012               	return	
 16044  016840                     __end_of___wmul:
 16045                           	opt stack 0
 16046                           tblptru	equ	0xFF8
 16047                           tblptrh	equ	0xFF7
 16048                           tblptrl	equ	0xFF6
 16049                           tablat	equ	0xFF5
 16050                           prodh	equ	0xFF4
 16051                           prodl	equ	0xFF3
 16052                           intcon	equ	0xFF2
 16053                           postinc0	equ	0xFEE
 16054                           wreg	equ	0xFE8
 16055                           indf1	equ	0xFE7
 16056                           postinc1	equ	0xFE6
 16057                           postdec1	equ	0xFE5
 16058                           fsr1h	equ	0xFE2
 16059                           fsr1l	equ	0xFE1
 16060                           indf2	equ	0xFDF
 16061                           postinc2	equ	0xFDE
 16062                           postdec2	equ	0xFDD
 16063                           plusw2	equ	0xFDB
 16064                           fsr2h	equ	0xFDA
 16065                           fsr2l	equ	0xFD9
 16066                           status	equ	0xFD8
 16067                           
 16068 ;; *************** function _OUT *****************
 16069 ;; Defined at:
 16070 ;;		line 7 in file "io.c"
 16071 ;; Parameters:    Size  Location     Type
 16072 ;;  b               1    wreg     unsigned char 
 16073 ;;  value           1    0[BANK0 ] unsigned char 
 16074 ;; Auto vars:     Size  Location     Type
 16075 ;;  b               1    1[BANK0 ] unsigned char 
 16076 ;; Return value:  Size  Location     Type
 16077 ;;		None               void
 16078 ;; Registers used:
 16079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16080 ;; Tracked objects:
 16081 ;;		On entry : 0/0
 16082 ;;		On exit  : 0/0
 16083 ;;		Unchanged: 0/0
 16084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16085 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16086 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16088 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16089 ;;Total ram usage:        2 bytes
 16090 ;; Hardware stack levels used:    1
 16091 ;; Hardware stack levels required when called:   11
 16092 ;; This function calls:
 16093 ;;		Nothing
 16094 ;; This function is called by:
 16095 ;;		_Auto_cut
 16096 ;;		_port_button_task
 16097 ;;		_sleep_task
 16098 ;;		_software_init
 16099 ;; This function uses a non-reentrant model
 16100 ;;
 16101                           
 16102                           	psect	text52
 16103  015FEE                     __ptext52:
 16104                           	opt stack 0
 16105  015FEE                     _OUT:
 16106                           	opt stack 18
 16107                           
 16108                           ; BSR set to: 0
 16109                           ;incstack = 0
 16110                           ;OUT@b stored from wreg
 16111  015FEE  0100               	movlb	0	; () banked
 16112  015FF0  6F61               	movwf	OUT@b& (0+255),b
 16113                           
 16114                           ;io.c: 8: port[b].flag.out_flag = value;
 16115  015FF2  0100               	movlb	0	; () banked
 16116  015FF4  5161               	movf	OUT@b& (0+255),w,b
 16117  015FF6  0D17               	mullw	23
 16118  015FF8  0E16               	movlw	22
 16119  015FFA  26F3               	addwf	prodl,f,c
 16120  015FFC  0E00               	movlw	0
 16121  015FFE  22F4               	addwfc	prodh,f,c
 16122  016000  0E2D               	movlw	low _port
 16123  016002  24F3               	addwf	prodl,w,c
 16124  016004  6ED9               	movwf	fsr2l,c
 16125  016006  0E01               	movlw	high _port
 16126  016008  20F4               	addwfc	prodh,w,c
 16127  01600A  6EDA               	movwf	fsr2h,c
 16128  01600C  0100               	movlb	0	; () banked
 16129  01600E  B160               	btfsc	OUT@value& (0+255),0,b
 16130  016010  D003               	bra	u12595
 16131  016012  0101               	movlb	1	; () banked
 16132  016014  94DF               	bcf	indf2,2,c
 16133  016016  D002               	bra	u12596
 16134  016018                     u12595:
 16135  016018  0101               	movlb	1	; () banked
 16136  01601A  84DF               	bsf	indf2,2,c
 16137  01601C                     u12596:
 16138                           
 16139                           ;io.c: 9: switch (b) {
 16140  01601C  D015               	goto	l10949
 16141  01601E                     l276:
 16142                           
 16143                           ; BSR set to: 0
 16144                           ;io.c: 11: LATA5 = value;
 16145  01601E  0100               	movlb	0	; () banked
 16146  016020  A160               	btfss	OUT@value& (0+255),0,b
 16147  016022  D002               	goto	u12600
 16148  016024  8A89               	bsf	3977,5,c	;volatile
 16149  016026  0012               	return	
 16150  016028                     u12600:
 16151  016028  9A89               	bcf	3977,5,c	;volatile
 16152                           
 16153                           ;io.c: 12: break;
 16154  01602A  0012               	return	
 16155  01602C                     l278:
 16156                           
 16157                           ; BSR set to: 0
 16158                           ;io.c: 14: LATA6 = value;
 16159  01602C  0100               	movlb	0	; () banked
 16160  01602E  A160               	btfss	OUT@value& (0+255),0,b
 16161  016030  D002               	goto	u12620
 16162  016032  8C89               	bsf	3977,6,c	;volatile
 16163  016034  0012               	return	
 16164  016036                     u12620:
 16165  016036  9C89               	bcf	3977,6,c	;volatile
 16166                           
 16167                           ;io.c: 15: break;
 16168  016038  0012               	return	
 16169  01603A                     l279:
 16170                           
 16171                           ; BSR set to: 0
 16172                           ;io.c: 17: LATA7 = value;
 16173  01603A  0100               	movlb	0	; () banked
 16174  01603C  A160               	btfss	OUT@value& (0+255),0,b
 16175  01603E  D002               	goto	u12640
 16176  016040  8E89               	bsf	3977,7,c	;volatile
 16177  016042  0012               	return	
 16178  016044                     u12640:
 16179  016044  9E89               	bcf	3977,7,c	;volatile
 16180                           
 16181                           ;io.c: 19: }
 16182                           
 16183                           ;io.c: 18: break;
 16184  016046  0012               	return	
 16185  016048                     l10949:
 16186  016048  0100               	movlb	0	; () banked
 16187  01604A  5161               	movf	OUT@b& (0+255),w,b
 16188                           
 16189                           ; Switch size 1, requested type "space"
 16190                           ; Number of cases is 3, Range of values is 0 to 2
 16191                           ; switch strategies available:
 16192                           ; Name         Instructions Cycles
 16193                           ; simple_byte           10     6 (average)
 16194                           ;	Chosen strategy is simple_byte
 16195  01604C  0A00               	xorlw	0	; case 0
 16196  01604E  B4D8               	btfsc	status,2,c
 16197  016050  D7E6               	goto	l276
 16198  016052  0A01               	xorlw	1	; case 1
 16199  016054  B4D8               	btfsc	status,2,c
 16200  016056  D7EA               	goto	l278
 16201  016058  0A03               	xorlw	3	; case 2
 16202  01605A  A4D8               	btfss	status,2,c
 16203  01605C  0012               	return	
 16204  01605E  D7ED               	goto	l279
 16205  016060                     __end_of_OUT:
 16206                           	opt stack 0
 16207                           tblptru	equ	0xFF8
 16208                           tblptrh	equ	0xFF7
 16209                           tblptrl	equ	0xFF6
 16210                           tablat	equ	0xFF5
 16211                           prodh	equ	0xFF4
 16212                           prodl	equ	0xFF3
 16213                           intcon	equ	0xFF2
 16214                           postinc0	equ	0xFEE
 16215                           wreg	equ	0xFE8
 16216                           indf1	equ	0xFE7
 16217                           postinc1	equ	0xFE6
 16218                           postdec1	equ	0xFE5
 16219                           fsr1h	equ	0xFE2
 16220                           fsr1l	equ	0xFE1
 16221                           indf2	equ	0xFDF
 16222                           postinc2	equ	0xFDE
 16223                           postdec2	equ	0xFDD
 16224                           plusw2	equ	0xFDB
 16225                           fsr2h	equ	0xFDA
 16226                           fsr2l	equ	0xFD9
 16227                           status	equ	0xFD8
 16228                           
 16229 ;; *************** function _ANALOG_IN *****************
 16230 ;; Defined at:
 16231 ;;		line 23 in file "io.c"
 16232 ;; Parameters:    Size  Location     Type
 16233 ;;  b               1    wreg     unsigned char 
 16234 ;; Auto vars:     Size  Location     Type
 16235 ;;  b               1    0[BANK0 ] unsigned char 
 16236 ;; Return value:  Size  Location     Type
 16237 ;;                  1    wreg      unsigned char 
 16238 ;; Registers used:
 16239 ;;		wreg, status,2, status,0
 16240 ;; Tracked objects:
 16241 ;;		On entry : 0/0
 16242 ;;		On exit  : 0/0
 16243 ;;		Unchanged: 0/0
 16244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16246 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16248 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16249 ;;Total ram usage:        1 bytes
 16250 ;; Hardware stack levels used:    1
 16251 ;; Hardware stack levels required when called:   11
 16252 ;; This function calls:
 16253 ;;		Nothing
 16254 ;; This function is called by:
 16255 ;;		_Auto_cut
 16256 ;; This function uses a non-reentrant model
 16257 ;;
 16258                           
 16259                           	psect	text53
 16260  0169BC                     __ptext53:
 16261                           	opt stack 0
 16262  0169BC                     _ANALOG_IN:
 16263                           	opt stack 17
 16264                           
 16265                           ;incstack = 0
 16266                           ;ANALOG_IN@b stored from wreg
 16267  0169BC  0100               	movlb	0	; () banked
 16268  0169BE  6F60               	movwf	ANALOG_IN@b& (0+255),b
 16269                           
 16270                           ;io.c: 24: switch (b) {
 16271  0169C0  D006               	goto	l10931
 16272  0169C2                     l10917:
 16273                           
 16274                           ;io.c: 26: return 8;
 16275  0169C2  0E08               	movlw	8
 16276  0169C4  0012               	return	
 16277  0169C6                     l10921:
 16278                           
 16279                           ;io.c: 28: return 9;
 16280  0169C6  0E09               	movlw	9
 16281  0169C8  0012               	return	
 16282  0169CA                     l10925:
 16283                           
 16284                           ;io.c: 30: return 10;
 16285  0169CA  0E0A               	movlw	10
 16286  0169CC  0012               	return	
 16287  0169CE                     l10931:
 16288  0169CE  0100               	movlb	0	; () banked
 16289  0169D0  5160               	movf	ANALOG_IN@b& (0+255),w,b
 16290                           
 16291                           ; Switch size 1, requested type "space"
 16292                           ; Number of cases is 3, Range of values is 0 to 2
 16293                           ; switch strategies available:
 16294                           ; Name         Instructions Cycles
 16295                           ; simple_byte           10     6 (average)
 16296                           ;	Chosen strategy is simple_byte
 16297  0169D2  0A00               	xorlw	0	; case 0
 16298  0169D4  B4D8               	btfsc	status,2,c
 16299  0169D6  D7F5               	goto	l10917
 16300  0169D8  0A01               	xorlw	1	; case 1
 16301  0169DA  B4D8               	btfsc	status,2,c
 16302  0169DC  D7F4               	goto	l10921
 16303  0169DE  0A03               	xorlw	3	; case 2
 16304  0169E0  B4D8               	btfsc	status,2,c
 16305  0169E2  D7F3               	goto	l10925
 16306                           
 16307                           ;io.c: 32: return 0;
 16308                           
 16309                           ; BSR set to: 0
 16310  0169E4  0E00               	movlw	0
 16311  0169E6  0012               	return	
 16312  0169E8                     __end_of_ANALOG_IN:
 16313                           	opt stack 0
 16314                           tblptru	equ	0xFF8
 16315                           tblptrh	equ	0xFF7
 16316                           tblptrl	equ	0xFF6
 16317                           tablat	equ	0xFF5
 16318                           prodh	equ	0xFF4
 16319                           prodl	equ	0xFF3
 16320                           intcon	equ	0xFF2
 16321                           postinc0	equ	0xFEE
 16322                           wreg	equ	0xFE8
 16323                           indf1	equ	0xFE7
 16324                           postinc1	equ	0xFE6
 16325                           postdec1	equ	0xFE5
 16326                           fsr1h	equ	0xFE2
 16327                           fsr1l	equ	0xFE1
 16328                           indf2	equ	0xFDF
 16329                           postinc2	equ	0xFDE
 16330                           postdec2	equ	0xFDD
 16331                           plusw2	equ	0xFDB
 16332                           fsr2h	equ	0xFDA
 16333                           fsr2l	equ	0xFD9
 16334                           status	equ	0xFD8
 16335                           
 16336 ;; *************** function _ADC *****************
 16337 ;; Defined at:
 16338 ;;		line 155 in file "../../../My_library/My_PIC.c"
 16339 ;; Parameters:    Size  Location     Type
 16340 ;;  ch              1    wreg     unsigned char 
 16341 ;; Auto vars:     Size  Location     Type
 16342 ;;  ch              1    3[BANK0 ] unsigned char 
 16343 ;; Return value:  Size  Location     Type
 16344 ;;                  2    0[BANK0 ] unsigned int 
 16345 ;; Registers used:
 16346 ;;		wreg, status,2, status,0
 16347 ;; Tracked objects:
 16348 ;;		On entry : 0/0
 16349 ;;		On exit  : 0/0
 16350 ;;		Unchanged: 0/0
 16351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16352 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16353 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16354 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16355 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16356 ;;Total ram usage:        4 bytes
 16357 ;; Hardware stack levels used:    1
 16358 ;; Hardware stack levels required when called:   11
 16359 ;; This function calls:
 16360 ;;		Nothing
 16361 ;; This function is called by:
 16362 ;;		_Auto_cut
 16363 ;;		_sleep_task
 16364 ;; This function uses a non-reentrant model
 16365 ;;
 16366                           
 16367                           	psect	text54
 16368  016906                     __ptext54:
 16369                           	opt stack 0
 16370  016906                     _ADC:
 16371                           	opt stack 18
 16372                           
 16373                           ;incstack = 0
 16374                           ;ADC@ch stored from wreg
 16375  016906  0100               	movlb	0	; () banked
 16376  016908  6F63               	movwf	ADC@ch& (0+255),b
 16377                           
 16378                           ;My_PIC.c: 156: ADCON0bits.CHS = ch;
 16379  01690A  C063  F062         	movff	ADC@ch,??_ADC
 16380  01690E  0100               	movlb	0	; () banked
 16381  016910  4762               	rlncf	??_ADC& (0+255),f,b
 16382  016912  4762               	rlncf	??_ADC& (0+255),f,b
 16383  016914  50C2               	movf	4034,w,c	;volatile
 16384  016916  0100               	movlb	0	; () banked
 16385  016918  1962               	xorwf	??_ADC& (0+255),w,b
 16386  01691A  0BC3               	andlw	-61
 16387  01691C  1962               	xorwf	??_ADC& (0+255),w,b
 16388  01691E  6EC2               	movwf	4034,c	;volatile
 16389                           
 16390                           ; BSR set to: 0
 16391                           ;My_PIC.c: 157: ADCON0bits.ADON = 1;
 16392  016920  80C2               	bsf	4034,0,c	;volatile
 16393                           
 16394                           ; BSR set to: 0
 16395                           ;My_PIC.c: 159: PIR1bits.ADIF = 0;
 16396  016922  9C9E               	bcf	3998,6,c	;volatile
 16397                           
 16398                           ; BSR set to: 0
 16399                           ;My_PIC.c: 160: ADCON0bits.GO_nDONE = 1;
 16400  016924  82C2               	bsf	4034,1,c	;volatile
 16401  016926                     l754:
 16402  016926  AC9E               	btfss	3998,6,c	;volatile
 16403  016928  D7FE               	goto	l754
 16404                           
 16405                           ;My_PIC.c: 162: return ADRES;
 16406  01692A  CFC3 F060          	movff	4035,?_ADC	;volatile
 16407  01692E  CFC4 F061          	movff	4036,?_ADC+1	;volatile
 16408  016932  0012               	return		;funcret
 16409  016934                     __end_of_ADC:
 16410                           	opt stack 0
 16411                           tblptru	equ	0xFF8
 16412                           tblptrh	equ	0xFF7
 16413                           tblptrl	equ	0xFF6
 16414                           tablat	equ	0xFF5
 16415                           prodh	equ	0xFF4
 16416                           prodl	equ	0xFF3
 16417                           intcon	equ	0xFF2
 16418                           postinc0	equ	0xFEE
 16419                           wreg	equ	0xFE8
 16420                           indf1	equ	0xFE7
 16421                           postinc1	equ	0xFE6
 16422                           postdec1	equ	0xFE5
 16423                           fsr1h	equ	0xFE2
 16424                           fsr1l	equ	0xFE1
 16425                           indf2	equ	0xFDF
 16426                           postinc2	equ	0xFDE
 16427                           postdec2	equ	0xFDD
 16428                           plusw2	equ	0xFDB
 16429                           fsr2h	equ	0xFDA
 16430                           fsr2l	equ	0xFD9
 16431                           status	equ	0xFD8
 16432                           
 16433 ;; *************** function _hardware_init *****************
 16434 ;; Defined at:
 16435 ;;		line 82 in file "main.c"
 16436 ;; Parameters:    Size  Location     Type
 16437 ;;		None
 16438 ;; Auto vars:     Size  Location     Type
 16439 ;;		None
 16440 ;; Return value:  Size  Location     Type
 16441 ;;		None               void
 16442 ;; Registers used:
 16443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16444 ;; Tracked objects:
 16445 ;;		On entry : 0/0
 16446 ;;		On exit  : 0/0
 16447 ;;		Unchanged: 0/0
 16448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16453 ;;Total ram usage:        0 bytes
 16454 ;; Hardware stack levels used:    1
 16455 ;; Hardware stack levels required when called:   16
 16456 ;; This function calls:
 16457 ;;		_ADC_init
 16458 ;;		_CTMU_init
 16459 ;;		_I2C_LCD_init
 16460 ;;		_I2C_init
 16461 ;;		_RTCC_init
 16462 ;;		_USB_init
 16463 ;;		_ringbuf_init
 16464 ;;		_timer0_init
 16465 ;;		_timer1_init
 16466 ;;		_timer3_init
 16467 ;; This function is called by:
 16468 ;;		_main
 16469 ;; This function uses a non-reentrant model
 16470 ;;
 16471                           
 16472                           	psect	text55
 16473  0156AC                     __ptext55:
 16474                           	opt stack 0
 16475  0156AC                     _hardware_init:
 16476                           	opt stack 14
 16477                           
 16478                           ;main.c: 83: OSCCONbits.IRCF = 7;
 16479                           
 16480                           ;incstack = 0
 16481  0156AC  88D3               	bsf	4051,4,c	;volatile
 16482  0156AE  8AD3               	bsf	4051,5,c	;volatile
 16483  0156B0  8CD3               	bsf	4051,6,c	;volatile
 16484                           
 16485                           ;main.c: 84: OSCTUNEbits.PLLEN = 1;
 16486  0156B2  8C9B               	bsf	3995,6,c	;volatile
 16487                           
 16488                           ;main.c: 85: OSCCONbits.SCS = 0;
 16489  0156B4  0EFC               	movlw	-4
 16490  0156B6  16D3               	andwf	4051,f,c	;volatile
 16491                           
 16492                           ;main.c: 86: TRISA = 0b00011111;
 16493  0156B8  0E1F               	movlw	31
 16494  0156BA  6E92               	movwf	3986,c	;volatile
 16495                           
 16496                           ;main.c: 87: TRISB = 0b00111111;
 16497  0156BC  0E3F               	movlw	63
 16498  0156BE  6E93               	movwf	3987,c	;volatile
 16499                           
 16500                           ;main.c: 88: TRISC = 0b10110010;
 16501  0156C0  0EB2               	movlw	178
 16502  0156C2  6E94               	movwf	3988,c	;volatile
 16503                           
 16504                           ;main.c: 89: ANCON0 = 0b11110000;
 16505  0156C4  0EF0               	movlw	240
 16506  0156C6  010F               	movlb	15	; () banked
 16507  0156C8  6F48               	movwf	72,b	;volatile
 16508                           
 16509                           ;main.c: 90: ANCON1 = 0b00001000;
 16510  0156CA  0E08               	movlw	8
 16511  0156CC  010F               	movlb	15	; () banked
 16512  0156CE  6F49               	movwf	73,b	;volatile
 16513                           
 16514                           ; BSR set to: 15
 16515                           ;main.c: 91: INTCON2bits.RBPU = 0;
 16516  0156D0  9EF1               	bcf	intcon2,7,c	;volatile
 16517                           
 16518                           ; BSR set to: 15
 16519                           ;main.c: 93: timer0_init(0);
 16520  0156D2  0E00               	movlw	0
 16521  0156D4  EC77  F0B3         	call	_timer0_init
 16522                           
 16523                           ;main.c: 94: timer1_init(0, 2);
 16524  0156D8  0E02               	movlw	2
 16525  0156DA  0100               	movlb	0	; () banked
 16526  0156DC  6F60               	movwf	timer1_init@clock_select& (0+255),b
 16527  0156DE  0E00               	movlw	0
 16528  0156E0  ECA8  F0B2         	call	_timer1_init
 16529                           
 16530                           ;main.c: 95: timer3_init(2);
 16531  0156E4  0E02               	movlw	2
 16532  0156E6  ECF4  F0B4         	call	_timer3_init
 16533                           
 16534                           ;main.c: 96: I2C_init();
 16535  0156EA  EC3D  F0B6         	call	_I2C_init	;wreg free
 16536                           
 16537                           ;main.c: 97: I2C_LCD_init();
 16538  0156EE  EC42  F0AE         	call	_I2C_LCD_init	;wreg free
 16539                           
 16540                           ;main.c: 98: RTCC_init();
 16541  0156F2  EC53  F0B4         	call	_RTCC_init	;wreg free
 16542                           
 16543                           ;main.c: 99: ADC_init(0);
 16544  0156F6  0E00               	movlw	0
 16545  0156F8  ECBF  F0B5         	call	_ADC_init
 16546                           
 16547                           ;main.c: 100: CTMU_init();
 16548  0156FC  EC5F  F0B5         	call	_CTMU_init	;wreg free
 16549                           
 16550                           ;main.c: 102: USB_init();
 16551  015700  ECEE  F0B5         	call	_USB_init	;wreg free
 16552                           
 16553                           ;main.c: 103: static uint8_t usbtx[2000];
 16554                           ;main.c: 104: ringbuf_init(&usb_tx, usbtx, sizeof (usbtx));
 16555  015704  0EBA               	movlw	low _usb_tx
 16556  015706  0100               	movlb	0	; () banked
 16557  015708  6F60               	movwf	ringbuf_init@rb& (0+255),b
 16558  01570A  0E02               	movlw	high _usb_tx
 16559  01570C  0100               	movlb	0	; () banked
 16560  01570E  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 16561  015710  0E69               	movlw	low hardware_init@usbtx
 16562  015712  0100               	movlb	0	; () banked
 16563  015714  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 16564  015716  0E04               	movlw	high hardware_init@usbtx
 16565  015718  0100               	movlb	0	; () banked
 16566  01571A  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 16567  01571C  0E07               	movlw	7
 16568  01571E  0100               	movlb	0	; () banked
 16569  015720  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 16570  015722  0ED0               	movlw	208
 16571  015724  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 16572  015726  EC55  F0B2         	call	_ringbuf_init	;wreg free
 16573                           
 16574                           ;main.c: 105: static uint8_t usbrx[100];
 16575                           ;main.c: 106: ringbuf_init(&usb_rx, usbrx, sizeof (usbrx));
 16576  01572A  0EB2               	movlw	low _usb_rx
 16577  01572C  0100               	movlb	0	; () banked
 16578  01572E  6F60               	movwf	ringbuf_init@rb& (0+255),b
 16579  015730  0E02               	movlw	high _usb_rx
 16580  015732  0100               	movlb	0	; () banked
 16581  015734  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 16582  015736  0E00               	movlw	low hardware_init@usbrx
 16583  015738  0100               	movlb	0	; () banked
 16584  01573A  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 16585  01573C  0E03               	movlw	high hardware_init@usbrx
 16586  01573E  0100               	movlb	0	; () banked
 16587  015740  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 16588  015742  0E00               	movlw	0
 16589  015744  0100               	movlb	0	; () banked
 16590  015746  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 16591  015748  0E64               	movlw	100
 16592  01574A  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 16593  01574C  EC55  F0B2         	call	_ringbuf_init	;wreg free
 16594  015750  0012               	return		;funcret
 16595  015752                     __end_of_hardware_init:
 16596                           	opt stack 0
 16597                           tblptru	equ	0xFF8
 16598                           tblptrh	equ	0xFF7
 16599                           tblptrl	equ	0xFF6
 16600                           tablat	equ	0xFF5
 16601                           prodh	equ	0xFF4
 16602                           prodl	equ	0xFF3
 16603                           intcon	equ	0xFF2
 16604                           intcon2	equ	0xFF1
 16605                           postinc0	equ	0xFEE
 16606                           wreg	equ	0xFE8
 16607                           indf1	equ	0xFE7
 16608                           postinc1	equ	0xFE6
 16609                           postdec1	equ	0xFE5
 16610                           fsr1h	equ	0xFE2
 16611                           fsr1l	equ	0xFE1
 16612                           indf2	equ	0xFDF
 16613                           postinc2	equ	0xFDE
 16614                           postdec2	equ	0xFDD
 16615                           plusw2	equ	0xFDB
 16616                           fsr2h	equ	0xFDA
 16617                           fsr2l	equ	0xFD9
 16618                           status	equ	0xFD8
 16619                           
 16620 ;; *************** function _timer3_init *****************
 16621 ;; Defined at:
 16622 ;;		line 72 in file "../../../My_library/My_PIC.c"
 16623 ;; Parameters:    Size  Location     Type
 16624 ;;  prescaler       1    wreg     unsigned char 
 16625 ;; Auto vars:     Size  Location     Type
 16626 ;;  prescaler       1    1[BANK0 ] unsigned char 
 16627 ;; Return value:  Size  Location     Type
 16628 ;;		None               void
 16629 ;; Registers used:
 16630 ;;		wreg, status,2, status,0
 16631 ;; Tracked objects:
 16632 ;;		On entry : 0/0
 16633 ;;		On exit  : 0/0
 16634 ;;		Unchanged: 0/0
 16635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16637 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16638 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16639 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16640 ;;Total ram usage:        2 bytes
 16641 ;; Hardware stack levels used:    1
 16642 ;; Hardware stack levels required when called:   11
 16643 ;; This function calls:
 16644 ;;		Nothing
 16645 ;; This function is called by:
 16646 ;;		_hardware_init
 16647 ;; This function uses a non-reentrant model
 16648 ;;
 16649                           
 16650                           	psect	text56
 16651  0169E8                     __ptext56:
 16652                           	opt stack 0
 16653  0169E8                     _timer3_init:
 16654                           	opt stack 18
 16655                           
 16656                           ;incstack = 0
 16657                           ;timer3_init@prescaler stored from wreg
 16658  0169E8  0100               	movlb	0	; () banked
 16659  0169EA  6F61               	movwf	timer3_init@prescaler& (0+255),b
 16660                           
 16661                           ;My_PIC.c: 73: T3CONbits.TMR3CS = 0;
 16662  0169EC  0E3F               	movlw	-193
 16663  0169EE  1679               	andwf	3961,f,c	;volatile
 16664                           
 16665                           ;My_PIC.c: 74: T3CONbits.T3OSCEN = 0;
 16666  0169F0  9679               	bcf	3961,3,c	;volatile
 16667                           
 16668                           ;My_PIC.c: 75: T3CONbits.T3CKPS = prescaler;
 16669  0169F2  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
 16670  0169F6  0100               	movlb	0	; () banked
 16671  0169F8  3B60               	swapf	??_timer3_init& (0+255),f,b
 16672  0169FA  5079               	movf	3961,w,c	;volatile
 16673  0169FC  0100               	movlb	0	; () banked
 16674  0169FE  1960               	xorwf	??_timer3_init& (0+255),w,b
 16675  016A00  0BCF               	andlw	-49
 16676  016A02  1960               	xorwf	??_timer3_init& (0+255),w,b
 16677  016A04  6E79               	movwf	3961,c	;volatile
 16678                           
 16679                           ; BSR set to: 0
 16680                           ;My_PIC.c: 76: T3CONbits.RD163 = 0;
 16681  016A06  9E79               	bcf	3961,7,c	;volatile
 16682                           
 16683                           ; BSR set to: 0
 16684                           ;My_PIC.c: 77: T3CONbits.TMR3ON = 1;
 16685  016A08  8079               	bsf	3961,0,c	;volatile
 16686                           
 16687                           ; BSR set to: 0
 16688                           ;My_PIC.c: 78: IPR2bits.TMR3IP = 0;
 16689  016A0A  92A2               	bcf	4002,1,c	;volatile
 16690                           
 16691                           ; BSR set to: 0
 16692                           ;My_PIC.c: 79: PIR2bits.TMR3IF = 0;
 16693  016A0C  92A1               	bcf	4001,1,c	;volatile
 16694                           
 16695                           ; BSR set to: 0
 16696                           ;My_PIC.c: 80: PIE2bits.TMR3IE = 1;
 16697  016A0E  82A0               	bsf	4000,1,c	;volatile
 16698                           
 16699                           ; BSR set to: 0
 16700                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
 16701  016A10  8CF2               	bsf	intcon,6,c	;volatile
 16702                           
 16703                           ; BSR set to: 0
 16704  016A12  0012               	return		;funcret
 16705  016A14                     __end_of_timer3_init:
 16706                           	opt stack 0
 16707                           tblptru	equ	0xFF8
 16708                           tblptrh	equ	0xFF7
 16709                           tblptrl	equ	0xFF6
 16710                           tablat	equ	0xFF5
 16711                           prodh	equ	0xFF4
 16712                           prodl	equ	0xFF3
 16713                           intcon	equ	0xFF2
 16714                           intcon2	equ	0xFF1
 16715                           postinc0	equ	0xFEE
 16716                           wreg	equ	0xFE8
 16717                           indf1	equ	0xFE7
 16718                           postinc1	equ	0xFE6
 16719                           postdec1	equ	0xFE5
 16720                           fsr1h	equ	0xFE2
 16721                           fsr1l	equ	0xFE1
 16722                           indf2	equ	0xFDF
 16723                           postinc2	equ	0xFDE
 16724                           postdec2	equ	0xFDD
 16725                           plusw2	equ	0xFDB
 16726                           fsr2h	equ	0xFDA
 16727                           fsr2l	equ	0xFD9
 16728                           status	equ	0xFD8
 16729                           
 16730 ;; *************** function _timer1_init *****************
 16731 ;; Defined at:
 16732 ;;		line 41 in file "../../../My_library/My_PIC.c"
 16733 ;; Parameters:    Size  Location     Type
 16734 ;;  prescaler       1    wreg     unsigned char 
 16735 ;;  clock_select    1    0[BANK0 ] unsigned char 
 16736 ;; Auto vars:     Size  Location     Type
 16737 ;;  prescaler       1    2[BANK0 ] unsigned char 
 16738 ;; Return value:  Size  Location     Type
 16739 ;;		None               void
 16740 ;; Registers used:
 16741 ;;		wreg, status,2, status,0
 16742 ;; Tracked objects:
 16743 ;;		On entry : 0/0
 16744 ;;		On exit  : 0/0
 16745 ;;		Unchanged: 0/0
 16746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16747 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16748 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16749 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16750 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16751 ;;Total ram usage:        3 bytes
 16752 ;; Hardware stack levels used:    1
 16753 ;; Hardware stack levels required when called:   11
 16754 ;; This function calls:
 16755 ;;		Nothing
 16756 ;; This function is called by:
 16757 ;;		_hardware_init
 16758 ;; This function uses a non-reentrant model
 16759 ;;
 16760                           
 16761                           	psect	text57
 16762  016550                     __ptext57:
 16763                           	opt stack 0
 16764  016550                     _timer1_init:
 16765                           	opt stack 18
 16766                           
 16767                           ; BSR set to: 0
 16768                           ;incstack = 0
 16769                           ;timer1_init@prescaler stored from wreg
 16770  016550  0100               	movlb	0	; () banked
 16771  016552  6F62               	movwf	timer1_init@prescaler& (0+255),b
 16772                           
 16773                           ;My_PIC.c: 42: T1CONbits.TMR1CS = clock_select;
 16774  016554  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
 16775  016558  0100               	movlb	0	; () banked
 16776  01655A  3B61               	swapf	??_timer1_init& (0+255),f,b
 16777  01655C  4761               	rlncf	??_timer1_init& (0+255),f,b
 16778  01655E  4761               	rlncf	??_timer1_init& (0+255),f,b
 16779  016560  50CD               	movf	4045,w,c	;volatile
 16780  016562  0100               	movlb	0	; () banked
 16781  016564  1961               	xorwf	??_timer1_init& (0+255),w,b
 16782  016566  0B3F               	andlw	-193
 16783  016568  1961               	xorwf	??_timer1_init& (0+255),w,b
 16784  01656A  6ECD               	movwf	4045,c	;volatile
 16785                           
 16786                           ;My_PIC.c: 43: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
 16787  01656C  0E02               	movlw	2
 16788  01656E  0100               	movlb	0	; () banked
 16789  016570  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
 16790  016572  A4D8               	btfss	status,2,c
 16791  016574  D002               	goto	l737
 16792                           
 16793                           ; BSR set to: 0
 16794  016576  86CD               	bsf	4045,3,c	;volatile
 16795  016578  D001               	goto	l11873
 16796  01657A                     l737:
 16797                           
 16798                           ; BSR set to: 0
 16799                           ;My_PIC.c: 44: else T1CONbits.T1OSCEN = 0;
 16800  01657A  96CD               	bcf	4045,3,c	;volatile
 16801  01657C                     l11873:
 16802                           
 16803                           ; BSR set to: 0
 16804                           ;My_PIC.c: 45: T1CONbits.T1CKPS = prescaler;
 16805  01657C  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
 16806  016580  0100               	movlb	0	; () banked
 16807  016582  3B61               	swapf	??_timer1_init& (0+255),f,b
 16808  016584  50CD               	movf	4045,w,c	;volatile
 16809  016586  0100               	movlb	0	; () banked
 16810  016588  1961               	xorwf	??_timer1_init& (0+255),w,b
 16811  01658A  0BCF               	andlw	-49
 16812  01658C  1961               	xorwf	??_timer1_init& (0+255),w,b
 16813  01658E  6ECD               	movwf	4045,c	;volatile
 16814                           
 16815                           ; BSR set to: 0
 16816                           ;My_PIC.c: 46: T1CONbits.nT1SYNC = 1;
 16817  016590  84CD               	bsf	4045,2,c	;volatile
 16818                           
 16819                           ; BSR set to: 0
 16820                           ;My_PIC.c: 47: T1CONbits.RD16 = 0;
 16821  016592  92CD               	bcf	4045,1,c	;volatile
 16822                           
 16823                           ; BSR set to: 0
 16824                           ;My_PIC.c: 48: T1CONbits.TMR1ON = 1;
 16825  016594  80CD               	bsf	4045,0,c	;volatile
 16826                           
 16827                           ; BSR set to: 0
 16828                           ;My_PIC.c: 49: IPR1bits.TMR1IP = 0;
 16829  016596  909F               	bcf	3999,0,c	;volatile
 16830                           
 16831                           ; BSR set to: 0
 16832                           ;My_PIC.c: 50: PIR1bits.TMR1IF = 0;
 16833  016598  909E               	bcf	3998,0,c	;volatile
 16834                           
 16835                           ; BSR set to: 0
 16836                           ;My_PIC.c: 51: PIE1bits.TMR1IE = 1;
 16837  01659A  809D               	bsf	3997,0,c	;volatile
 16838                           
 16839                           ; BSR set to: 0
 16840                           ;My_PIC.c: 52: INTCONbits.PEIE = 1;
 16841  01659C  8CF2               	bsf	intcon,6,c	;volatile
 16842                           
 16843                           ; BSR set to: 0
 16844  01659E  0012               	return		;funcret
 16845  0165A0                     __end_of_timer1_init:
 16846                           	opt stack 0
 16847                           tblptru	equ	0xFF8
 16848                           tblptrh	equ	0xFF7
 16849                           tblptrl	equ	0xFF6
 16850                           tablat	equ	0xFF5
 16851                           prodh	equ	0xFF4
 16852                           prodl	equ	0xFF3
 16853                           intcon	equ	0xFF2
 16854                           intcon2	equ	0xFF1
 16855                           postinc0	equ	0xFEE
 16856                           wreg	equ	0xFE8
 16857                           indf1	equ	0xFE7
 16858                           postinc1	equ	0xFE6
 16859                           postdec1	equ	0xFE5
 16860                           fsr1h	equ	0xFE2
 16861                           fsr1l	equ	0xFE1
 16862                           indf2	equ	0xFDF
 16863                           postinc2	equ	0xFDE
 16864                           postdec2	equ	0xFDD
 16865                           plusw2	equ	0xFDB
 16866                           fsr2h	equ	0xFDA
 16867                           fsr2l	equ	0xFD9
 16868                           status	equ	0xFD8
 16869                           
 16870 ;; *************** function _timer0_init *****************
 16871 ;; Defined at:
 16872 ;;		line 6 in file "../../../My_library/My_PIC.c"
 16873 ;; Parameters:    Size  Location     Type
 16874 ;;  prescaler       1    wreg     unsigned char 
 16875 ;; Auto vars:     Size  Location     Type
 16876 ;;  prescaler       1    1[BANK0 ] unsigned char 
 16877 ;; Return value:  Size  Location     Type
 16878 ;;		None               void
 16879 ;; Registers used:
 16880 ;;		wreg, status,2, status,0
 16881 ;; Tracked objects:
 16882 ;;		On entry : 0/0
 16883 ;;		On exit  : 0/0
 16884 ;;		Unchanged: 0/0
 16885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16887 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16888 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16889 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16890 ;;Total ram usage:        2 bytes
 16891 ;; Hardware stack levels used:    1
 16892 ;; Hardware stack levels required when called:   11
 16893 ;; This function calls:
 16894 ;;		Nothing
 16895 ;; This function is called by:
 16896 ;;		_hardware_init
 16897 ;; This function uses a non-reentrant model
 16898 ;;
 16899                           
 16900                           	psect	text58
 16901  0166EE                     __ptext58:
 16902                           	opt stack 0
 16903  0166EE                     _timer0_init:
 16904                           	opt stack 18
 16905                           
 16906                           ; BSR set to: 0
 16907                           ;incstack = 0
 16908                           ;timer0_init@prescaler stored from wreg
 16909  0166EE  0100               	movlb	0	; () banked
 16910  0166F0  6F61               	movwf	timer0_init@prescaler& (0+255),b
 16911                           
 16912                           ;My_PIC.c: 7: T0CONbits.TMR0ON = 1;
 16913  0166F2  8ED5               	bsf	4053,7,c	;volatile
 16914                           
 16915                           ;My_PIC.c: 8: T0CONbits.T08BIT = 1;
 16916  0166F4  8CD5               	bsf	4053,6,c	;volatile
 16917                           
 16918                           ;My_PIC.c: 9: T0CONbits.T0CS = 0;
 16919  0166F6  9AD5               	bcf	4053,5,c	;volatile
 16920                           
 16921                           ;My_PIC.c: 10: if (prescaler == 0) {
 16922  0166F8  0100               	movlb	0	; () banked
 16923  0166FA  5161               	movf	timer0_init@prescaler& (0+255),w,b
 16924  0166FC  0100               	movlb	0	; () banked
 16925  0166FE  A4D8               	btfss	status,2,c
 16926  016700  D002               	goto	l732
 16927                           
 16928                           ; BSR set to: 0
 16929                           ;My_PIC.c: 11: T0CONbits.PSA = 1;
 16930  016702  86D5               	bsf	4053,3,c	;volatile
 16931                           
 16932                           ;My_PIC.c: 12: } else {
 16933  016704  D00C               	goto	l11861
 16934  016706                     l732:
 16935                           
 16936                           ; BSR set to: 0
 16937                           ;My_PIC.c: 13: T0CONbits.PSA = 0;
 16938  016706  96D5               	bcf	4053,3,c	;volatile
 16939                           
 16940                           ; BSR set to: 0
 16941                           ;My_PIC.c: 14: T0CONbits.T0PS = prescaler - 1;
 16942  016708  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
 16943  01670C  0EFF               	movlw	255
 16944  01670E  0100               	movlb	0	; () banked
 16945  016710  2760               	addwf	??_timer0_init& (0+255),f,b
 16946  016712  50D5               	movf	4053,w,c	;volatile
 16947  016714  0100               	movlb	0	; () banked
 16948  016716  1960               	xorwf	??_timer0_init& (0+255),w,b
 16949  016718  0BF8               	andlw	-8
 16950  01671A  1960               	xorwf	??_timer0_init& (0+255),w,b
 16951  01671C  6ED5               	movwf	4053,c	;volatile
 16952  01671E                     l11861:
 16953                           
 16954                           ; BSR set to: 0
 16955                           ;My_PIC.c: 15: }
 16956                           ;My_PIC.c: 16: INTCONbits.T0IE = 1;
 16957  01671E  8AF2               	bsf	intcon,5,c	;volatile
 16958                           
 16959                           ; BSR set to: 0
 16960                           ;My_PIC.c: 17: INTCONbits.TMR0IF = 0;
 16961  016720  94F2               	bcf	intcon,2,c	;volatile
 16962                           
 16963                           ; BSR set to: 0
 16964                           ;My_PIC.c: 18: INTCON2bits.TMR0IP = 0;
 16965  016722  94F1               	bcf	intcon2,2,c	;volatile
 16966                           
 16967                           ; BSR set to: 0
 16968                           ;My_PIC.c: 19: INTCONbits.PEIE = 1;
 16969  016724  8CF2               	bsf	intcon,6,c	;volatile
 16970                           
 16971                           ; BSR set to: 0
 16972  016726  0012               	return		;funcret
 16973  016728                     __end_of_timer0_init:
 16974                           	opt stack 0
 16975                           tblptru	equ	0xFF8
 16976                           tblptrh	equ	0xFF7
 16977                           tblptrl	equ	0xFF6
 16978                           tablat	equ	0xFF5
 16979                           prodh	equ	0xFF4
 16980                           prodl	equ	0xFF3
 16981                           intcon	equ	0xFF2
 16982                           intcon2	equ	0xFF1
 16983                           postinc0	equ	0xFEE
 16984                           wreg	equ	0xFE8
 16985                           indf1	equ	0xFE7
 16986                           postinc1	equ	0xFE6
 16987                           postdec1	equ	0xFE5
 16988                           fsr1h	equ	0xFE2
 16989                           fsr1l	equ	0xFE1
 16990                           indf2	equ	0xFDF
 16991                           postinc2	equ	0xFDE
 16992                           postdec2	equ	0xFDD
 16993                           plusw2	equ	0xFDB
 16994                           fsr2h	equ	0xFDA
 16995                           fsr2l	equ	0xFD9
 16996                           status	equ	0xFD8
 16997                           
 16998 ;; *************** function _ringbuf_init *****************
 16999 ;; Defined at:
 17000 ;;		line 5 in file "../../../My_library/My_ringbuf.c"
 17001 ;; Parameters:    Size  Location     Type
 17002 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 17003 ;;		 -> terminal_task@command(8), usb_rx(8), usb_tx(8), 
 17004 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
 17005 ;;		 -> terminal_task@buf(100), hardware_init@usbrx(100), hardware_init@usbtx(2000), 
 17006 ;;  bufsize         2    4[BANK0 ] unsigned int 
 17007 ;; Auto vars:     Size  Location     Type
 17008 ;;		None
 17009 ;; Return value:  Size  Location     Type
 17010 ;;		None               void
 17011 ;; Registers used:
 17012 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17013 ;; Tracked objects:
 17014 ;;		On entry : 0/0
 17015 ;;		On exit  : 0/0
 17016 ;;		Unchanged: 0/0
 17017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17018 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17021 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17022 ;;Total ram usage:        6 bytes
 17023 ;; Hardware stack levels used:    1
 17024 ;; Hardware stack levels required when called:   11
 17025 ;; This function calls:
 17026 ;;		Nothing
 17027 ;; This function is called by:
 17028 ;;		_hardware_init
 17029 ;;		_terminal_task
 17030 ;; This function uses a non-reentrant model
 17031 ;;
 17032                           
 17033                           	psect	text59
 17034  0164AA                     __ptext59:
 17035                           	opt stack 0
 17036  0164AA                     _ringbuf_init:
 17037                           	opt stack 18
 17038                           
 17039                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
 17040                           
 17041                           ; BSR set to: 0
 17042                           ;incstack = 0
 17043  0164AA  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
 17044  0164AE  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
 17045  0164B2  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
 17046  0164B6  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
 17047                           
 17048                           ;My_ringbuf.c: 7: rb->size = bufsize;
 17049  0164BA  0100               	movlb	0	; () banked
 17050  0164BC  EE20 F002          	lfsr	2,2
 17051  0164C0  5160               	movf	ringbuf_init@rb& (0+255),w,b
 17052  0164C2  26D9               	addwf	fsr2l,f,c
 17053  0164C4  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 17054  0164C6  22DA               	addwfc	fsr2h,f,c
 17055  0164C8  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
 17056  0164CC  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
 17057                           
 17058                           ; BSR set to: 0
 17059                           ;My_ringbuf.c: 8: rb->head = 0;
 17060  0164D0  0100               	movlb	0	; () banked
 17061  0164D2  EE20 F004          	lfsr	2,4
 17062  0164D6  5160               	movf	ringbuf_init@rb& (0+255),w,b
 17063  0164D8  26D9               	addwf	fsr2l,f,c
 17064  0164DA  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 17065  0164DC  22DA               	addwfc	fsr2h,f,c
 17066  0164DE  0E00               	movlw	0
 17067  0164E0  6EDE               	movwf	postinc2,c
 17068  0164E2  0E00               	movlw	0
 17069  0164E4  6EDD               	movwf	postdec2,c
 17070                           
 17071                           ; BSR set to: 0
 17072                           ;My_ringbuf.c: 9: rb->tail = 0;
 17073  0164E6  0100               	movlb	0	; () banked
 17074  0164E8  EE20 F006          	lfsr	2,6
 17075  0164EC  5160               	movf	ringbuf_init@rb& (0+255),w,b
 17076  0164EE  26D9               	addwf	fsr2l,f,c
 17077  0164F0  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 17078  0164F2  22DA               	addwfc	fsr2h,f,c
 17079  0164F4  0E00               	movlw	0
 17080  0164F6  6EDE               	movwf	postinc2,c
 17081  0164F8  0E00               	movlw	0
 17082  0164FA  6EDD               	movwf	postdec2,c
 17083                           
 17084                           ; BSR set to: 0
 17085  0164FC  0012               	return		;funcret
 17086  0164FE                     __end_of_ringbuf_init:
 17087                           	opt stack 0
 17088                           tblptru	equ	0xFF8
 17089                           tblptrh	equ	0xFF7
 17090                           tblptrl	equ	0xFF6
 17091                           tablat	equ	0xFF5
 17092                           prodh	equ	0xFF4
 17093                           prodl	equ	0xFF3
 17094                           intcon	equ	0xFF2
 17095                           intcon2	equ	0xFF1
 17096                           postinc0	equ	0xFEE
 17097                           wreg	equ	0xFE8
 17098                           indf1	equ	0xFE7
 17099                           postinc1	equ	0xFE6
 17100                           postdec1	equ	0xFE5
 17101                           fsr1h	equ	0xFE2
 17102                           fsr1l	equ	0xFE1
 17103                           indf2	equ	0xFDF
 17104                           postinc2	equ	0xFDE
 17105                           postdec2	equ	0xFDD
 17106                           plusw2	equ	0xFDB
 17107                           fsr2h	equ	0xFDA
 17108                           fsr2l	equ	0xFD9
 17109                           status	equ	0xFD8
 17110                           
 17111 ;; *************** function _USB_init *****************
 17112 ;; Defined at:
 17113 ;;		line 11 in file "../../../My_library/My_usb_cdc.c"
 17114 ;; Parameters:    Size  Location     Type
 17115 ;;		None
 17116 ;; Auto vars:     Size  Location     Type
 17117 ;;		None
 17118 ;; Return value:  Size  Location     Type
 17119 ;;		None               void
 17120 ;; Registers used:
 17121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17122 ;; Tracked objects:
 17123 ;;		On entry : 0/0
 17124 ;;		On exit  : 0/0
 17125 ;;		Unchanged: 0/0
 17126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17131 ;;Total ram usage:        0 bytes
 17132 ;; Hardware stack levels used:    1
 17133 ;; Hardware stack levels required when called:   13
 17134 ;; This function calls:
 17135 ;;		_USBDeviceAttach
 17136 ;;		_USBDeviceInit
 17137 ;; This function is called by:
 17138 ;;		_hardware_init
 17139 ;; This function uses a non-reentrant model
 17140 ;;
 17141                           
 17142                           	psect	text60
 17143  016BDC                     __ptext60:
 17144                           	opt stack 0
 17145  016BDC                     _USB_init:
 17146                           	opt stack 16
 17147                           
 17148                           ;My_usb_cdc.c: 12: USBDeviceInit();
 17149                           
 17150                           ; BSR set to: 0
 17151                           ;incstack = 0
 17152  016BDC  EC4E  F099         	call	_USBDeviceInit	;wreg free
 17153                           
 17154                           ;My_usb_cdc.c: 13: USBDeviceAttach();
 17155  016BE0  ECCD  F0B3         	call	_USBDeviceAttach	;wreg free
 17156                           
 17157                           ;My_usb_cdc.c: 14: {line_coding.dwDTERate=115200;};
 17158  016BE4  0E00               	movlw	0
 17159  016BE6  0101               	movlb	1	; () banked
 17160  016BE8  6F88               	movwf	_line_coding& (0+255),b
 17161  016BEA  0EC2               	movlw	194
 17162  016BEC  6F89               	movwf	(_line_coding+1)& (0+255),b
 17163  016BEE  0E01               	movlw	1
 17164  016BF0  6F8A               	movwf	(_line_coding+2)& (0+255),b
 17165  016BF2  0E00               	movlw	0
 17166  016BF4  6F8B               	movwf	(_line_coding+3)& (0+255),b
 17167                           
 17168                           ; BSR set to: 1
 17169  016BF6  0012               	return		;funcret
 17170  016BF8                     __end_of_USB_init:
 17171                           	opt stack 0
 17172                           tblptru	equ	0xFF8
 17173                           tblptrh	equ	0xFF7
 17174                           tblptrl	equ	0xFF6
 17175                           tablat	equ	0xFF5
 17176                           prodh	equ	0xFF4
 17177                           prodl	equ	0xFF3
 17178                           intcon	equ	0xFF2
 17179                           intcon2	equ	0xFF1
 17180                           postinc0	equ	0xFEE
 17181                           wreg	equ	0xFE8
 17182                           indf1	equ	0xFE7
 17183                           postinc1	equ	0xFE6
 17184                           postdec1	equ	0xFE5
 17185                           fsr1h	equ	0xFE2
 17186                           fsr1l	equ	0xFE1
 17187                           indf2	equ	0xFDF
 17188                           postinc2	equ	0xFDE
 17189                           postdec2	equ	0xFDD
 17190                           plusw2	equ	0xFDB
 17191                           fsr2h	equ	0xFDA
 17192                           fsr2l	equ	0xFD9
 17193                           status	equ	0xFD8
 17194                           
 17195 ;; *************** function _USBDeviceInit *****************
 17196 ;; Defined at:
 17197 ;;		line 298 in file "../../../My_library/usb/usb_device.c"
 17198 ;; Parameters:    Size  Location     Type
 17199 ;;		None
 17200 ;; Auto vars:     Size  Location     Type
 17201 ;;  i               1    8[BANK0 ] unsigned char 
 17202 ;; Return value:  Size  Location     Type
 17203 ;;		None               void
 17204 ;; Registers used:
 17205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17206 ;; Tracked objects:
 17207 ;;		On entry : 0/0
 17208 ;;		On exit  : 0/0
 17209 ;;		Unchanged: 0/0
 17210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17212 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17214 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17215 ;;Total ram usage:        1 bytes
 17216 ;; Hardware stack levels used:    1
 17217 ;; Hardware stack levels required when called:   12
 17218 ;; This function calls:
 17219 ;;		_memset
 17220 ;; This function is called by:
 17221 ;;		_USB_init
 17222 ;; This function uses a non-reentrant model
 17223 ;;
 17224                           
 17225                           	psect	text61
 17226  01329C                     __ptext61:
 17227                           	opt stack 0
 17228  01329C                     _USBDeviceInit:
 17229                           	opt stack 16
 17230                           
 17231                           ;usb_device.c: 300: uint8_t i;
 17232                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 17233                           
 17234                           ; BSR set to: 1
 17235                           ;incstack = 0
 17236  01329C  98A0               	bcf	4000,4,c	;volatile
 17237                           
 17238                           ;usb_device.c: 305: {UEIR = 0;};
 17239  01329E  0E00               	movlw	0
 17240  0132A0  6E63               	movwf	3939,c	;volatile
 17241                           
 17242                           ;usb_device.c: 308: {UIR = 0;};
 17243  0132A2  0E00               	movlw	0
 17244  0132A4  6E62               	movwf	3938,c	;volatile
 17245                           
 17246                           ;usb_device.c: 311: UEP0 = 0;
 17247  0132A6  0E00               	movlw	0
 17248  0132A8  010F               	movlb	15	; () banked
 17249  0132AA  6F26               	movwf	38,b	;volatile
 17250                           
 17251                           ; BSR set to: 15
 17252                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 17253  0132AC  0E27               	movlw	39
 17254  0132AE  0100               	movlb	0	; () banked
 17255  0132B0  6F60               	movwf	memset@p1& (0+255),b
 17256  0132B2  0E0F               	movlw	15
 17257  0132B4  0100               	movlb	0	; () banked
 17258  0132B6  6F61               	movwf	(memset@p1+1)& (0+255),b
 17259  0132B8  0E00               	movlw	0
 17260  0132BA  0100               	movlb	0	; () banked
 17261  0132BC  6F63               	movwf	(memset@c+1)& (0+255),b
 17262  0132BE  0E00               	movlw	0
 17263  0132C0  6F62               	movwf	memset@c& (0+255),b
 17264  0132C2  0E00               	movlw	0
 17265  0132C4  0100               	movlb	0	; () banked
 17266  0132C6  6F65               	movwf	(memset@n+1)& (0+255),b
 17267  0132C8  0E02               	movlw	2
 17268  0132CA  6F64               	movwf	memset@n& (0+255),b
 17269  0132CC  EC20  F0B4         	call	_memset	;wreg free
 17270                           
 17271                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 17272  0132D0  0E16               	movlw	22
 17273  0132D2  010F               	movlb	15	; () banked
 17274  0132D4  6F39               	movwf	57,b	;volatile
 17275                           
 17276                           ; BSR set to: 15
 17277  0132D6  0E9F               	movlw	159
 17278  0132D8  010F               	movlb	15	; () banked
 17279  0132DA  6F37               	movwf	55,b	;volatile
 17280                           
 17281                           ; BSR set to: 15
 17282  0132DC  0E7B               	movlw	123
 17283  0132DE  010F               	movlb	15	; () banked
 17284  0132E0  6F36               	movwf	54,b	;volatile
 17285                           
 17286                           ; BSR set to: 15
 17287                           ;usb_device.c: 318: ;
 17288                           ;usb_device.c: 321: ;
 17289                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 17290  0132E2  0E00               	movlw	0
 17291  0132E4  0100               	movlb	0	; () banked
 17292  0132E6  6F68               	movwf	USBDeviceInit@i& (0+255),b
 17293  0132E8                     l11337:
 17294                           
 17295                           ; BSR set to: 0
 17296  0132E8  0E0B               	movlw	11
 17297  0132EA  0100               	movlb	0	; () banked
 17298  0132EC  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 17299  0132EE  D001               	goto	l11341
 17300  0132F0  D010               	goto	l1433
 17301  0132F2                     l11341:
 17302                           
 17303                           ; BSR set to: 0
 17304                           ;usb_device.c: 325: {
 17305                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 17306  0132F2  0100               	movlb	0	; () banked
 17307  0132F4  5168               	movf	USBDeviceInit@i& (0+255),w,b
 17308  0132F6  0D04               	mullw	4
 17309  0132F8  0E00               	movlw	0
 17310  0132FA  24F3               	addwf	prodl,w,c
 17311  0132FC  6ED9               	movwf	fsr2l,c
 17312  0132FE  0E0D               	movlw	13
 17313  013300  20F4               	addwfc	prodh,w,c
 17314  013302  6EDA               	movwf	fsr2h,c
 17315  013304  6ADE               	clrf	postinc2,c
 17316  013306  6ADE               	clrf	postinc2,c
 17317  013308  6ADE               	clrf	postinc2,c
 17318  01330A  6ADD               	clrf	postdec2,c
 17319                           
 17320                           ; BSR set to: 0
 17321  01330C  0100               	movlb	0	; () banked
 17322  01330E  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 17323  013310  D7EB               	goto	l11337
 17324  013312                     l1433:
 17325                           
 17326                           ; BSR set to: 0
 17327                           ;usb_device.c: 327: }
 17328                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 17329  013312  8C65               	bsf	3941,6,c	;volatile
 17330                           
 17331                           ; BSR set to: 0
 17332                           ;usb_device.c: 333: UADDR = 0x00;
 17333  013314  0E00               	movlw	0
 17334  013316  010F               	movlb	15	; () banked
 17335  013318  6F38               	movwf	56,b	;volatile
 17336                           
 17337                           ; BSR set to: 15
 17338                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 17339  01331A  9865               	bcf	3941,4,c	;volatile
 17340                           
 17341                           ; BSR set to: 15
 17342                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 17343  01331C  9C65               	bcf	3941,6,c	;volatile
 17344                           
 17345                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 17346  01331E  D00C               	goto	l11361
 17347  013320                     l11353:
 17348                           
 17349                           ;usb_device.c: 343: {
 17350                           ;usb_device.c: 344: (UIR &= 0xF7);
 17351  013320  9662               	bcf	3938,3,c	;volatile
 17352                           
 17353                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 17354  013322  0E00               	movlw	0
 17355  013324  0100               	movlb	0	; () banked
 17356  013326  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 17357                           
 17358                           ; BSR set to: 0
 17359                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 17360  013328  0E00               	movlw	0
 17361  01332A  0100               	movlb	0	; () banked
 17362  01332C  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 17363                           
 17364                           ; BSR set to: 0
 17365                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 17366  01332E  0E00               	movlw	0
 17367  013330  0100               	movlb	0	; () banked
 17368  013332  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 17369  013334  0E00               	movlw	0
 17370  013336  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 17371  013338                     l11361:
 17372  013338  B662               	btfsc	3938,3,c	;volatile
 17373  01333A  D7F2               	goto	l11353
 17374                           
 17375                           ;usb_device.c: 349: }
 17376                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 17377  01333C  0E01               	movlw	1
 17378  01333E  6E15               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 17379                           
 17380                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 17381  013340  0E01               	movlw	1
 17382  013342  6E16               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 17383                           
 17384                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 17385  013344  0E00               	movlw	0
 17386  013346  6E11               	movwf	_USBDeferINDataStagePackets,c	;volatile
 17387                           
 17388                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 17389  013348  0E00               	movlw	0
 17390  01334A  6E12               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 17391                           
 17392                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 17393  01334C  0E00               	movlw	0
 17394  01334E  0101               	movlb	1	; () banked
 17395  013350  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 17396                           
 17397                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 17398  013352  0E00               	movlw	0
 17399  013354  0100               	movlb	0	; () banked
 17400  013356  6F68               	movwf	USBDeviceInit@i& (0+255),b
 17401  013358                     l11365:
 17402                           
 17403                           ; BSR set to: 0
 17404  013358  0E02               	movlw	2
 17405  01335A  0100               	movlb	0	; () banked
 17406  01335C  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 17407  01335E  D001               	goto	l11369
 17408  013360  D033               	goto	l11375
 17409  013362                     l11369:
 17410                           
 17411                           ; BSR set to: 0
 17412                           ;usb_device.c: 363: {
 17413                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 17414  013362  0100               	movlb	0	; () banked
 17415  013364  5168               	movf	USBDeviceInit@i& (0+255),w,b
 17416  013366  0D02               	mullw	2
 17417  013368  0EF5               	movlw	low _pBDTEntryIn
 17418  01336A  24F3               	addwf	prodl,w,c
 17419  01336C  6ED9               	movwf	fsr2l,c
 17420  01336E  0E00               	movlw	high _pBDTEntryIn
 17421  013370  20F4               	addwfc	prodh,w,c
 17422  013372  6EDA               	movwf	fsr2h,c
 17423  013374  0E00               	movlw	0
 17424  013376  6EDE               	movwf	postinc2,c
 17425  013378  0E00               	movlw	0
 17426  01337A  6EDD               	movwf	postdec2,c
 17427                           
 17428                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 17429  01337C  0100               	movlb	0	; () banked
 17430  01337E  5168               	movf	USBDeviceInit@i& (0+255),w,b
 17431  013380  0D02               	mullw	2
 17432  013382  0E00               	movlw	low _pBDTEntryOut
 17433  013384  24F3               	addwf	prodl,w,c
 17434  013386  6ED9               	movwf	fsr2l,c
 17435  013388  0E01               	movlw	high _pBDTEntryOut
 17436  01338A  20F4               	addwfc	prodh,w,c
 17437  01338C  6EDA               	movwf	fsr2h,c
 17438  01338E  0E00               	movlw	0
 17439  013390  6EDE               	movwf	postinc2,c
 17440  013392  0E00               	movlw	0
 17441  013394  6EDD               	movwf	postdec2,c
 17442                           
 17443                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 17444  013396  0100               	movlb	0	; () banked
 17445  013398  5168               	movf	USBDeviceInit@i& (0+255),w,b
 17446  01339A  0D01               	mullw	1
 17447  01339C  0E01               	movlw	low _ep_data_in
 17448  01339E  24F3               	addwf	prodl,w,c
 17449  0133A0  6ED9               	movwf	fsr2l,c
 17450  0133A2  0E00               	movlw	high _ep_data_in
 17451  0133A4  20F4               	addwfc	prodh,w,c
 17452  0133A6  6EDA               	movwf	fsr2h,c
 17453  0133A8  0E00               	movlw	0
 17454  0133AA  6EDF               	movwf	indf2,c
 17455                           
 17456                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 17457  0133AC  0100               	movlb	0	; () banked
 17458  0133AE  5168               	movf	USBDeviceInit@i& (0+255),w,b
 17459  0133B0  0D01               	mullw	1
 17460  0133B2  0E04               	movlw	low _ep_data_out
 17461  0133B4  24F3               	addwf	prodl,w,c
 17462  0133B6  6ED9               	movwf	fsr2l,c
 17463  0133B8  0E00               	movlw	high _ep_data_out
 17464  0133BA  20F4               	addwfc	prodh,w,c
 17465  0133BC  6EDA               	movwf	fsr2h,c
 17466  0133BE  0E00               	movlw	0
 17467  0133C0  6EDF               	movwf	indf2,c
 17468                           
 17469                           ; BSR set to: 0
 17470  0133C2  0100               	movlb	0	; () banked
 17471  0133C4  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 17472  0133C6  D7C8               	goto	l11365
 17473  0133C8                     l11375:
 17474                           
 17475                           ; BSR set to: 0
 17476                           ;usb_device.c: 368: }
 17477                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 17478  0133C8  0E08               	movlw	8
 17479  0133CA  0100               	movlb	0	; () banked
 17480  0133CC  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 17481  0133CE  0E0D               	movlw	13
 17482  0133D0  0100               	movlb	0	; () banked
 17483  0133D2  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 17484                           
 17485                           ; BSR set to: 0
 17486                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 17487  0133D4  0E16               	movlw	22
 17488  0133D6  010F               	movlb	15	; () banked
 17489  0133D8  6F26               	movwf	38,b	;volatile
 17490                           
 17491                           ; BSR set to: 15
 17492                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 17493  0133DA  0E0D               	movlw	13
 17494  0133DC  010D               	movlb	13	; () banked
 17495  0133DE  6F03               	movwf	3,b	;volatile
 17496  0133E0  0E30               	movlw	48
 17497  0133E2  6F02               	movwf	2,b	;volatile
 17498                           
 17499                           ; BSR set to: 13
 17500                           ;usb_device.c: 376: BDT[0].CNT = 8;
 17501  0133E4  0E08               	movlw	8
 17502  0133E6  010D               	movlb	13	; () banked
 17503  0133E8  6F01               	movwf	1,b	;volatile
 17504                           
 17505                           ; BSR set to: 13
 17506                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 17507  0133EA  0E04               	movlw	4
 17508  0133EC  010D               	movlb	13	; () banked
 17509  0133EE  6F00               	movwf	0,b	;volatile
 17510                           
 17511                           ; BSR set to: 13
 17512                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 17513  0133F0  010D               	movlb	13	; () banked
 17514  0133F2  8F00               	bsf	0,7,b	;volatile
 17515                           
 17516                           ; BSR set to: 13
 17517                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 17518  0133F4  0E00               	movlw	0
 17519  0133F6  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 17520                           
 17521                           ; BSR set to: 13
 17522                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 17523  0133F8  0E00               	movlw	0
 17524  0133FA  6E14               	movwf	_USBDeviceState,c	;volatile
 17525                           
 17526                           ; BSR set to: 13
 17527  0133FC  0012               	return		;funcret
 17528  0133FE                     __end_of_USBDeviceInit:
 17529                           	opt stack 0
 17530                           tblptru	equ	0xFF8
 17531                           tblptrh	equ	0xFF7
 17532                           tblptrl	equ	0xFF6
 17533                           tablat	equ	0xFF5
 17534                           prodh	equ	0xFF4
 17535                           prodl	equ	0xFF3
 17536                           intcon	equ	0xFF2
 17537                           intcon2	equ	0xFF1
 17538                           postinc0	equ	0xFEE
 17539                           wreg	equ	0xFE8
 17540                           indf1	equ	0xFE7
 17541                           postinc1	equ	0xFE6
 17542                           postdec1	equ	0xFE5
 17543                           fsr1h	equ	0xFE2
 17544                           fsr1l	equ	0xFE1
 17545                           indf2	equ	0xFDF
 17546                           postinc2	equ	0xFDE
 17547                           postdec2	equ	0xFDD
 17548                           plusw2	equ	0xFDB
 17549                           fsr2h	equ	0xFDA
 17550                           fsr2l	equ	0xFD9
 17551                           status	equ	0xFD8
 17552                           
 17553 ;; *************** function _memset *****************
 17554 ;; Defined at:
 17555 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 17556 ;; Parameters:    Size  Location     Type
 17557 ;;  p1              2    0[BANK0 ] PTR void 
 17558 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17559 ;;  c               2    2[BANK0 ] int 
 17560 ;;  n               2    4[BANK0 ] unsigned int 
 17561 ;; Auto vars:     Size  Location     Type
 17562 ;;  p               2    6[BANK0 ] PTR unsigned char 
 17563 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17564 ;; Return value:  Size  Location     Type
 17565 ;;                  2    0[BANK0 ] PTR void 
 17566 ;; Registers used:
 17567 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17568 ;; Tracked objects:
 17569 ;;		On entry : 0/0
 17570 ;;		On exit  : 0/0
 17571 ;;		Unchanged: 0/0
 17572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17573 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17574 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17576 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17577 ;;Total ram usage:        8 bytes
 17578 ;; Hardware stack levels used:    1
 17579 ;; Hardware stack levels required when called:   11
 17580 ;; This function calls:
 17581 ;;		Nothing
 17582 ;; This function is called by:
 17583 ;;		_USBDeviceInit
 17584 ;; This function uses a non-reentrant model
 17585 ;;
 17586                           
 17587                           	psect	text62
 17588  016840                     __ptext62:
 17589                           	opt stack 0
 17590  016840                     _memset:
 17591                           	opt stack 16
 17592                           
 17593                           ; BSR set to: 13
 17594                           ;incstack = 0
 17595  016840  C060  F066         	movff	memset@p1,memset@p
 17596  016844  C061  F067         	movff	memset@p1+1,memset@p+1
 17597  016848  D009               	goto	l10861
 17598  01684A                     l10857:
 17599  01684A  C066  FFD9         	movff	memset@p,fsr2l
 17600  01684E  C067  FFDA         	movff	memset@p+1,fsr2h
 17601  016852  C062  FFDF         	movff	memset@c,indf2
 17602  016856  0100               	movlb	0	; () banked
 17603  016858  4B66               	infsnz	memset@p& (0+255),f,b
 17604  01685A  2B67               	incf	(memset@p+1)& (0+255),f,b
 17605  01685C                     l10861:
 17606  01685C  0100               	movlb	0	; () banked
 17607  01685E  0764               	decf	memset@n& (0+255),f,b
 17608  016860  A0D8               	btfss	status,0,c
 17609  016862  0765               	decf	(memset@n+1)& (0+255),f,b
 17610  016864  0100               	movlb	0	; () banked
 17611  016866  2964               	incf	memset@n& (0+255),w,b
 17612  016868  E1F0               	bnz	l10857
 17613  01686A  0100               	movlb	0	; () banked
 17614  01686C  2965               	incf	(memset@n+1)& (0+255),w,b
 17615  01686E  B4D8               	btfsc	status,2,c
 17616  016870  0012               	return	
 17617  016872  D7EB               	goto	l10857
 17618  016874                     __end_of_memset:
 17619                           	opt stack 0
 17620                           tblptru	equ	0xFF8
 17621                           tblptrh	equ	0xFF7
 17622                           tblptrl	equ	0xFF6
 17623                           tablat	equ	0xFF5
 17624                           prodh	equ	0xFF4
 17625                           prodl	equ	0xFF3
 17626                           intcon	equ	0xFF2
 17627                           intcon2	equ	0xFF1
 17628                           postinc0	equ	0xFEE
 17629                           wreg	equ	0xFE8
 17630                           indf1	equ	0xFE7
 17631                           postinc1	equ	0xFE6
 17632                           postdec1	equ	0xFE5
 17633                           fsr1h	equ	0xFE2
 17634                           fsr1l	equ	0xFE1
 17635                           indf2	equ	0xFDF
 17636                           postinc2	equ	0xFDE
 17637                           postdec2	equ	0xFDD
 17638                           plusw2	equ	0xFDB
 17639                           fsr2h	equ	0xFDA
 17640                           fsr2l	equ	0xFD9
 17641                           status	equ	0xFD8
 17642                           
 17643 ;; *************** function _USBDeviceAttach *****************
 17644 ;; Defined at:
 17645 ;;		line 1352 in file "../../../My_library/usb/usb_device.c"
 17646 ;; Parameters:    Size  Location     Type
 17647 ;;		None
 17648 ;; Auto vars:     Size  Location     Type
 17649 ;;		None
 17650 ;; Return value:  Size  Location     Type
 17651 ;;		None               void
 17652 ;; Registers used:
 17653 ;;		wreg, status,2
 17654 ;; Tracked objects:
 17655 ;;		On entry : 0/0
 17656 ;;		On exit  : 0/0
 17657 ;;		Unchanged: 0/0
 17658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17663 ;;Total ram usage:        0 bytes
 17664 ;; Hardware stack levels used:    1
 17665 ;; Hardware stack levels required when called:   11
 17666 ;; This function calls:
 17667 ;;		Nothing
 17668 ;; This function is called by:
 17669 ;;		_USB_init
 17670 ;; This function uses a non-reentrant model
 17671 ;;
 17672                           
 17673                           	psect	text63
 17674  01679A                     __ptext63:
 17675                           	opt stack 0
 17676  01679A                     _USBDeviceAttach:
 17677                           	opt stack 17
 17678                           
 17679                           ;usb_device.c: 1356: {
 17680                           ;usb_device.c: 1357: if(1 == 1)
 17681                           
 17682                           ; BSR set to: 0
 17683                           ;incstack = 0
 17684  01679A  5014               	movf	_USBDeviceState,w,c	;volatile
 17685  01679C  A4D8               	btfss	status,2,c
 17686  01679E  0012               	return	
 17687                           
 17688                           ;usb_device.c: 1358: {
 17689                           ;usb_device.c: 1360: UCON = 0;
 17690  0167A0  0E00               	movlw	0
 17691  0167A2  6E65               	movwf	3941,c	;volatile
 17692                           
 17693                           ;usb_device.c: 1363: UIE = 0;
 17694  0167A4  0E00               	movlw	0
 17695  0167A6  010F               	movlb	15	; () banked
 17696  0167A8  6F36               	movwf	54,b	;volatile
 17697                           
 17698                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 17699  0167AA  0E16               	movlw	22
 17700  0167AC  010F               	movlb	15	; () banked
 17701  0167AE  6F39               	movwf	57,b	;volatile
 17702  0167B0  0E9F               	movlw	159
 17703  0167B2  010F               	movlb	15	; () banked
 17704  0167B4  6F37               	movwf	55,b	;volatile
 17705  0167B6  0E7B               	movlw	123
 17706  0167B8  010F               	movlb	15	; () banked
 17707  0167BA  6F36               	movwf	54,b	;volatile
 17708                           
 17709                           ; BSR set to: 15
 17710                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 17711  0167BC  8ED0               	bsf	4048,7,c	;volatile
 17712                           
 17713                           ; BSR set to: 15
 17714  0167BE  88A2               	bsf	4002,4,c	;volatile
 17715                           
 17716                           ; BSR set to: 15
 17717  0167C0  88A0               	bsf	4000,4,c	;volatile
 17718                           
 17719                           ; BSR set to: 15
 17720  0167C2  8EF2               	bsf	intcon,7,c	;volatile
 17721                           
 17722                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 17723  0167C4  D001               	goto	l1494
 17724  0167C6                     l1495:
 17725  0167C6  8665               	bsf	3941,3,c	;volatile
 17726  0167C8                     l1494:
 17727  0167C8  A665               	btfss	3941,3,c	;volatile
 17728  0167CA  D7FD               	goto	l1495
 17729                           
 17730                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
 17731  0167CC  0E01               	movlw	1
 17732  0167CE  6E14               	movwf	_USBDeviceState,c	;volatile
 17733  0167D0  0012               	return	
 17734  0167D2                     __end_of_USBDeviceAttach:
 17735                           	opt stack 0
 17736                           tblptru	equ	0xFF8
 17737                           tblptrh	equ	0xFF7
 17738                           tblptrl	equ	0xFF6
 17739                           tablat	equ	0xFF5
 17740                           prodh	equ	0xFF4
 17741                           prodl	equ	0xFF3
 17742                           intcon	equ	0xFF2
 17743                           intcon2	equ	0xFF1
 17744                           postinc0	equ	0xFEE
 17745                           wreg	equ	0xFE8
 17746                           indf1	equ	0xFE7
 17747                           postinc1	equ	0xFE6
 17748                           postdec1	equ	0xFE5
 17749                           fsr1h	equ	0xFE2
 17750                           fsr1l	equ	0xFE1
 17751                           indf2	equ	0xFDF
 17752                           postinc2	equ	0xFDE
 17753                           postdec2	equ	0xFDD
 17754                           plusw2	equ	0xFDB
 17755                           fsr2h	equ	0xFDA
 17756                           fsr2l	equ	0xFD9
 17757                           status	equ	0xFD8
 17758                           
 17759 ;; *************** function _RTCC_init *****************
 17760 ;; Defined at:
 17761 ;;		line 22 in file "../../../My_library/My_RTCC.c"
 17762 ;; Parameters:    Size  Location     Type
 17763 ;;		None
 17764 ;; Auto vars:     Size  Location     Type
 17765 ;;		None
 17766 ;; Return value:  Size  Location     Type
 17767 ;;		None               void
 17768 ;; Registers used:
 17769 ;;		wreg, status,2
 17770 ;; Tracked objects:
 17771 ;;		On entry : 0/0
 17772 ;;		On exit  : 0/0
 17773 ;;		Unchanged: 0/0
 17774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17779 ;;Total ram usage:        0 bytes
 17780 ;; Hardware stack levels used:    1
 17781 ;; Hardware stack levels required when called:   11
 17782 ;; This function calls:
 17783 ;;		Nothing
 17784 ;; This function is called by:
 17785 ;;		_hardware_init
 17786 ;; This function uses a non-reentrant model
 17787 ;;
 17788                           
 17789                           	psect	text64
 17790  0168A6                     __ptext64:
 17791                           	opt stack 0
 17792  0168A6                     _RTCC_init:
 17793                           	opt stack 18
 17794                           
 17795                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
 17796                           
 17797                           ;incstack = 0
 17798  0168A6  010F               	movlb	15	; () banked
 17799  0168A8  8B3F               	bsf	63,5,b	;volatile
 17800                           
 17801                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
 17802  0168AA  010F               	movlb	15	; () banked
 17803  0168AC  BB3F               	btfsc	63,5,b	;volatile
 17804  0168AE  D006               	goto	l11943
 17805                           
 17806                           ; BSR set to: 15
 17807                           ;My_RTCC.c: 25: EECON2 = 0x55;
 17808  0168B0  0E55               	movlw	85
 17809  0168B2  6EA7               	movwf	4007,c	;volatile
 17810                           
 17811                           ;My_RTCC.c: 26: EECON2 = 0xAA;
 17812  0168B4  0EAA               	movlw	170
 17813  0168B6  6EA7               	movwf	4007,c	;volatile
 17814                           
 17815                           ; BSR set to: 15
 17816                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
 17817  0168B8  010F               	movlb	15	; () banked
 17818  0168BA  8B3F               	bsf	63,5,b	;volatile
 17819  0168BC                     l11943:
 17820                           
 17821                           ; BSR set to: 15
 17822                           ;My_RTCC.c: 28: }
 17823                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
 17824  0168BC  010F               	movlb	15	; () banked
 17825  0168BE  8F3F               	bsf	63,7,b	;volatile
 17826                           
 17827                           ; BSR set to: 15
 17828                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
 17829  0168C0  010F               	movlb	15	; () banked
 17830  0168C2  953F               	bcf	63,2,b	;volatile
 17831                           
 17832                           ; BSR set to: 15
 17833                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
 17834  0168C4  010F               	movlb	15	; () banked
 17835  0168C6  833C               	bsf	60,1,b	;volatile
 17836                           
 17837                           ; BSR set to: 15
 17838                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
 17839  0168C8  010F               	movlb	15	; () banked
 17840  0168CA  853C               	bsf	60,2,b	;volatile
 17841                           
 17842                           ;My_RTCC.c: 33: RTCCAL = 0x00;
 17843  0168CC  0E00               	movlw	0
 17844  0168CE  010F               	movlb	15	; () banked
 17845  0168D0  6F3E               	movwf	62,b	;volatile
 17846                           
 17847                           ; BSR set to: 15
 17848                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
 17849  0168D2  86CD               	bsf	4045,3,c	;volatile
 17850                           
 17851                           ; BSR set to: 15
 17852  0168D4  0012               	return		;funcret
 17853  0168D6                     __end_of_RTCC_init:
 17854                           	opt stack 0
 17855                           tblptru	equ	0xFF8
 17856                           tblptrh	equ	0xFF7
 17857                           tblptrl	equ	0xFF6
 17858                           tablat	equ	0xFF5
 17859                           prodh	equ	0xFF4
 17860                           prodl	equ	0xFF3
 17861                           intcon	equ	0xFF2
 17862                           intcon2	equ	0xFF1
 17863                           postinc0	equ	0xFEE
 17864                           wreg	equ	0xFE8
 17865                           indf1	equ	0xFE7
 17866                           postinc1	equ	0xFE6
 17867                           postdec1	equ	0xFE5
 17868                           fsr1h	equ	0xFE2
 17869                           fsr1l	equ	0xFE1
 17870                           indf2	equ	0xFDF
 17871                           postinc2	equ	0xFDE
 17872                           postdec2	equ	0xFDD
 17873                           plusw2	equ	0xFDB
 17874                           fsr2h	equ	0xFDA
 17875                           fsr2l	equ	0xFD9
 17876                           status	equ	0xFD8
 17877                           
 17878 ;; *************** function _I2C_init *****************
 17879 ;; Defined at:
 17880 ;;		line 11 in file "../../../My_library/My_I2C.c"
 17881 ;; Parameters:    Size  Location     Type
 17882 ;;		None
 17883 ;; Auto vars:     Size  Location     Type
 17884 ;;		None
 17885 ;; Return value:  Size  Location     Type
 17886 ;;		None               void
 17887 ;; Registers used:
 17888 ;;		wreg, status,2
 17889 ;; Tracked objects:
 17890 ;;		On entry : 0/0
 17891 ;;		On exit  : 0/0
 17892 ;;		Unchanged: 0/0
 17893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17898 ;;Total ram usage:        0 bytes
 17899 ;; Hardware stack levels used:    1
 17900 ;; Hardware stack levels required when called:   11
 17901 ;; This function calls:
 17902 ;;		Nothing
 17903 ;; This function is called by:
 17904 ;;		_hardware_init
 17905 ;; This function uses a non-reentrant model
 17906 ;;
 17907                           
 17908                           	psect	text65
 17909  016C7A                     __ptext65:
 17910                           	opt stack 0
 17911  016C7A                     _I2C_init:
 17912                           	opt stack 18
 17913                           
 17914                           ;My_I2C.c: 12: SSP1STAT = 0b10000000;
 17915                           
 17916                           ; BSR set to: 15
 17917                           ;incstack = 0
 17918  016C7A  0E80               	movlw	128
 17919  016C7C  6EC7               	movwf	4039,c	;volatile
 17920                           
 17921                           ;My_I2C.c: 13: SSP1CON1 = 0b00101000;
 17922  016C7E  0E28               	movlw	40
 17923  016C80  6EC6               	movwf	4038,c	;volatile
 17924                           
 17925                           ;My_I2C.c: 14: SSP1ADD = 0x13;
 17926  016C82  0E13               	movlw	19
 17927  016C84  6EC8               	movwf	4040,c	;volatile
 17928                           
 17929                           ;My_I2C.c: 17: SSP1IF = 0;
 17930  016C86  969E               	bcf	3998,3,c	;volatile
 17931                           
 17932                           ;My_I2C.c: 18: BCL1IF = 0;
 17933  016C88  96A1               	bcf	4001,3,c	;volatile
 17934  016C8A  0012               	return		;funcret
 17935  016C8C                     __end_of_I2C_init:
 17936                           	opt stack 0
 17937                           tblptru	equ	0xFF8
 17938                           tblptrh	equ	0xFF7
 17939                           tblptrl	equ	0xFF6
 17940                           tablat	equ	0xFF5
 17941                           prodh	equ	0xFF4
 17942                           prodl	equ	0xFF3
 17943                           intcon	equ	0xFF2
 17944                           intcon2	equ	0xFF1
 17945                           postinc0	equ	0xFEE
 17946                           wreg	equ	0xFE8
 17947                           indf1	equ	0xFE7
 17948                           postinc1	equ	0xFE6
 17949                           postdec1	equ	0xFE5
 17950                           fsr1h	equ	0xFE2
 17951                           fsr1l	equ	0xFE1
 17952                           indf2	equ	0xFDF
 17953                           postinc2	equ	0xFDE
 17954                           postdec2	equ	0xFDD
 17955                           plusw2	equ	0xFDB
 17956                           fsr2h	equ	0xFDA
 17957                           fsr2l	equ	0xFD9
 17958                           status	equ	0xFD8
 17959                           
 17960 ;; *************** function _I2C_LCD_init *****************
 17961 ;; Defined at:
 17962 ;;		line 78 in file "../../../My_library/My_ST7032.c"
 17963 ;; Parameters:    Size  Location     Type
 17964 ;;		None
 17965 ;; Auto vars:     Size  Location     Type
 17966 ;;  i               1    9[BANK0 ] unsigned char 
 17967 ;;  i               1    8[BANK0 ] unsigned char 
 17968 ;; Return value:  Size  Location     Type
 17969 ;;		None               void
 17970 ;; Registers used:
 17971 ;;		wreg, status,2, status,0, cstack
 17972 ;; Tracked objects:
 17973 ;;		On entry : 0/0
 17974 ;;		On exit  : 0/0
 17975 ;;		Unchanged: 0/0
 17976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17978 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17979 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17980 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17981 ;;Total ram usage:        3 bytes
 17982 ;; Hardware stack levels used:    1
 17983 ;; Hardware stack levels required when called:   15
 17984 ;; This function calls:
 17985 ;;		_I2C_LCD_Clear
 17986 ;;		_I2C_LCD_Command
 17987 ;; This function is called by:
 17988 ;;		_hardware_init
 17989 ;; This function uses a non-reentrant model
 17990 ;;
 17991                           
 17992                           	psect	text66
 17993  015C84                     __ptext66:
 17994                           	opt stack 0
 17995  015C84                     _I2C_LCD_init:
 17996                           	opt stack 14
 17997                           
 17998                           ;My_ST7032.c: 79: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000/
      +                          4000.0)));
 17999                           
 18000                           ;incstack = 0
 18001  015C84  0E00               	movlw	0
 18002  015C86  0100               	movlb	0	; () banked
 18003  015C88  6F68               	movwf	I2C_LCD_init@i& (0+255),b
 18004  015C8A                     l11915:
 18005                           
 18006                           ; BSR set to: 0
 18007  015C8A  0E27               	movlw	39
 18008  015C8C  0100               	movlb	0	; () banked
 18009  015C8E  6568               	cpfsgt	I2C_LCD_init@i& (0+255),b
 18010  015C90  D001               	goto	l11919
 18011  015C92  D00C               	goto	l11923
 18012  015C94                     l11919:
 18013                           
 18014                           ; BSR set to: 0
 18015  015C94  0E10               	movlw	16
 18016  015C96  0100               	movlb	0	; () banked
 18017  015C98  6F67               	movwf	??_I2C_LCD_init& (0+255),b
 18018  015C9A  0E94               	movlw	148
 18019  015C9C                     u14857:
 18020  015C9C  2EE8               	decfsz	wreg,f,c
 18021  015C9E  D7FE               	goto	u14857
 18022  015CA0  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
 18023  015CA2  D7FC               	goto	u14857
 18024  015CA4  D000               	nop2	
 18025  015CA6  0100               	movlb	0	; () banked
 18026  015CA8  2B68               	incf	I2C_LCD_init@i& (0+255),f,b
 18027  015CAA  D7EF               	goto	l11915
 18028  015CAC                     l11923:
 18029                           
 18030                           ; BSR set to: 0
 18031                           ;My_ST7032.c: 80: I2C_LCD_Command(0x38);
 18032  015CAC  0E38               	movlw	56
 18033  015CAE  ECE9  F0B3         	call	_I2C_LCD_Command
 18034                           
 18035                           ;My_ST7032.c: 81: I2C_LCD_Command(0x39);
 18036  015CB2  0E39               	movlw	57
 18037  015CB4  ECE9  F0B3         	call	_I2C_LCD_Command
 18038                           
 18039                           ;My_ST7032.c: 82: I2C_LCD_Command(0x14);
 18040  015CB8  0E14               	movlw	20
 18041  015CBA  ECE9  F0B3         	call	_I2C_LCD_Command
 18042                           
 18043                           ;My_ST7032.c: 83: I2C_LCD_Command(0x70);
 18044  015CBE  0E70               	movlw	112
 18045  015CC0  ECE9  F0B3         	call	_I2C_LCD_Command
 18046                           
 18047                           ;My_ST7032.c: 84: I2C_LCD_Command(0x56);
 18048  015CC4  0E56               	movlw	86
 18049  015CC6  ECE9  F0B3         	call	_I2C_LCD_Command
 18050                           
 18051                           ;My_ST7032.c: 85: I2C_LCD_Command(0x6C);
 18052  015CCA  0E6C               	movlw	108
 18053  015CCC  ECE9  F0B3         	call	_I2C_LCD_Command
 18054                           
 18055                           ;My_ST7032.c: 86: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000/
      +                          4000.0)));
 18056  015CD0  0E00               	movlw	0
 18057  015CD2  0100               	movlb	0	; () banked
 18058  015CD4  6F69               	movwf	I2C_LCD_init@i_3848& (0+255),b
 18059  015CD6                     l11927:
 18060                           
 18061                           ; BSR set to: 0
 18062  015CD6  0E27               	movlw	39
 18063  015CD8  0100               	movlb	0	; () banked
 18064  015CDA  6569               	cpfsgt	I2C_LCD_init@i_3848& (0+255),b
 18065  015CDC  D001               	goto	l11931
 18066  015CDE  D00C               	goto	l11935
 18067  015CE0                     l11931:
 18068                           
 18069                           ; BSR set to: 0
 18070  015CE0  0E10               	movlw	16
 18071  015CE2  0100               	movlb	0	; () banked
 18072  015CE4  6F67               	movwf	??_I2C_LCD_init& (0+255),b
 18073  015CE6  0E94               	movlw	148
 18074  015CE8                     u14867:
 18075  015CE8  2EE8               	decfsz	wreg,f,c
 18076  015CEA  D7FE               	goto	u14867
 18077  015CEC  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
 18078  015CEE  D7FC               	goto	u14867
 18079  015CF0  D000               	nop2	
 18080  015CF2  0100               	movlb	0	; () banked
 18081  015CF4  2B69               	incf	I2C_LCD_init@i_3848& (0+255),f,b
 18082  015CF6  D7EF               	goto	l11927
 18083  015CF8                     l11935:
 18084                           
 18085                           ; BSR set to: 0
 18086                           ;My_ST7032.c: 87: I2C_LCD_Command(0x38);
 18087  015CF8  0E38               	movlw	56
 18088  015CFA  ECE9  F0B3         	call	_I2C_LCD_Command
 18089                           
 18090                           ;My_ST7032.c: 88: I2C_LCD_Command(0x0C);
 18091  015CFE  0E0C               	movlw	12
 18092  015D00  ECE9  F0B3         	call	_I2C_LCD_Command
 18093                           
 18094                           ;My_ST7032.c: 89: I2C_LCD_Command(0x06);
 18095  015D04  0E06               	movlw	6
 18096  015D06  ECE9  F0B3         	call	_I2C_LCD_Command
 18097                           
 18098                           ;My_ST7032.c: 90: I2C_LCD_Clear();
 18099  015D0A  EC17  F0B6         	call	_I2C_LCD_Clear	;wreg free
 18100  015D0E  0012               	return		;funcret
 18101  015D10                     __end_of_I2C_LCD_init:
 18102                           	opt stack 0
 18103                           tblptru	equ	0xFF8
 18104                           tblptrh	equ	0xFF7
 18105                           tblptrl	equ	0xFF6
 18106                           tablat	equ	0xFF5
 18107                           prodh	equ	0xFF4
 18108                           prodl	equ	0xFF3
 18109                           intcon	equ	0xFF2
 18110                           intcon2	equ	0xFF1
 18111                           postinc0	equ	0xFEE
 18112                           wreg	equ	0xFE8
 18113                           indf1	equ	0xFE7
 18114                           postinc1	equ	0xFE6
 18115                           postdec1	equ	0xFE5
 18116                           fsr1h	equ	0xFE2
 18117                           fsr1l	equ	0xFE1
 18118                           indf2	equ	0xFDF
 18119                           postinc2	equ	0xFDE
 18120                           postdec2	equ	0xFDD
 18121                           plusw2	equ	0xFDB
 18122                           fsr2h	equ	0xFDA
 18123                           fsr2l	equ	0xFD9
 18124                           status	equ	0xFD8
 18125                           
 18126 ;; *************** function _I2C_LCD_Clear *****************
 18127 ;; Defined at:
 18128 ;;		line 21 in file "../../../My_library/My_ST7032.c"
 18129 ;; Parameters:    Size  Location     Type
 18130 ;;		None
 18131 ;; Auto vars:     Size  Location     Type
 18132 ;;		None
 18133 ;; Return value:  Size  Location     Type
 18134 ;;		None               void
 18135 ;; Registers used:
 18136 ;;		wreg, status,2, status,0, cstack
 18137 ;; Tracked objects:
 18138 ;;		On entry : 0/0
 18139 ;;		On exit  : 0/0
 18140 ;;		Unchanged: 0/0
 18141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18144 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18145 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18146 ;;Total ram usage:        1 bytes
 18147 ;; Hardware stack levels used:    1
 18148 ;; Hardware stack levels required when called:   14
 18149 ;; This function calls:
 18150 ;;		_I2C_LCD_Command
 18151 ;; This function is called by:
 18152 ;;		_sleep_task
 18153 ;;		_bootload
 18154 ;;		_display_LCD
 18155 ;;		_I2C_LCD_init
 18156 ;; This function uses a non-reentrant model
 18157 ;;
 18158                           
 18159                           	psect	text67
 18160  016C2E                     __ptext67:
 18161                           	opt stack 0
 18162  016C2E                     _I2C_LCD_Clear:
 18163                           	opt stack 13
 18164                           
 18165                           ;My_ST7032.c: 22: I2C_LCD_Command(0x01);
 18166                           
 18167                           ;incstack = 0
 18168  016C2E  0E01               	movlw	1
 18169  016C30  ECE9  F0B3         	call	_I2C_LCD_Command
 18170                           
 18171                           ;My_ST7032.c: 23: _delay((unsigned long)((1100)*(48000000/4000000.0)));
 18172  016C34  0E12               	movlw	18
 18173  016C36  0100               	movlb	0	; () banked
 18174  016C38  6F66               	movwf	??_I2C_LCD_Clear& (0+255),b
 18175  016C3A  0E23               	movlw	35
 18176  016C3C                     u14877:
 18177  016C3C  2EE8               	decfsz	wreg,f,c
 18178  016C3E  D7FE               	goto	u14877
 18179  016C40  2F66               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
 18180  016C42  D7FC               	goto	u14877
 18181  016C44  F000               	nop	
 18182  016C46  0012               	return		;funcret
 18183  016C48                     __end_of_I2C_LCD_Clear:
 18184                           	opt stack 0
 18185                           tblptru	equ	0xFF8
 18186                           tblptrh	equ	0xFF7
 18187                           tblptrl	equ	0xFF6
 18188                           tablat	equ	0xFF5
 18189                           prodh	equ	0xFF4
 18190                           prodl	equ	0xFF3
 18191                           intcon	equ	0xFF2
 18192                           intcon2	equ	0xFF1
 18193                           postinc0	equ	0xFEE
 18194                           wreg	equ	0xFE8
 18195                           indf1	equ	0xFE7
 18196                           postinc1	equ	0xFE6
 18197                           postdec1	equ	0xFE5
 18198                           fsr1h	equ	0xFE2
 18199                           fsr1l	equ	0xFE1
 18200                           indf2	equ	0xFDF
 18201                           postinc2	equ	0xFDE
 18202                           postdec2	equ	0xFDD
 18203                           plusw2	equ	0xFDB
 18204                           fsr2h	equ	0xFDA
 18205                           fsr2l	equ	0xFD9
 18206                           status	equ	0xFD8
 18207                           
 18208 ;; *************** function _I2C_LCD_Command *****************
 18209 ;; Defined at:
 18210 ;;		line 8 in file "../../../My_library/My_ST7032.c"
 18211 ;; Parameters:    Size  Location     Type
 18212 ;;  c               1    wreg     unsigned char 
 18213 ;; Auto vars:     Size  Location     Type
 18214 ;;  c               1    4[BANK0 ] unsigned char 
 18215 ;;  ans             1    5[BANK0 ] unsigned char 
 18216 ;; Return value:  Size  Location     Type
 18217 ;;		None               void
 18218 ;; Registers used:
 18219 ;;		wreg, status,2, status,0, cstack
 18220 ;; Tracked objects:
 18221 ;;		On entry : 0/0
 18222 ;;		On exit  : 0/0
 18223 ;;		Unchanged: 0/0
 18224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18226 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18228 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18229 ;;Total ram usage:        2 bytes
 18230 ;; Hardware stack levels used:    1
 18231 ;; Hardware stack levels required when called:   13
 18232 ;; This function calls:
 18233 ;;		_I2C_Send
 18234 ;;		_I2C_Start
 18235 ;;		_I2C_Stop
 18236 ;; This function is called by:
 18237 ;;		_I2C_LCD_Clear
 18238 ;;		_I2C_LCD_SetCursor
 18239 ;;		_I2C_LCD_init
 18240 ;; This function uses a non-reentrant model
 18241 ;;
 18242                           
 18243                           	psect	text68
 18244  0167D2                     __ptext68:
 18245                           	opt stack 0
 18246  0167D2                     _I2C_LCD_Command:
 18247                           	opt stack 13
 18248                           
 18249                           ;incstack = 0
 18250                           ;I2C_LCD_Command@c stored from wreg
 18251  0167D2  0100               	movlb	0	; () banked
 18252  0167D4  6F64               	movwf	I2C_LCD_Command@c& (0+255),b
 18253                           
 18254                           ;My_ST7032.c: 9: uint8_t ans;
 18255                           ;My_ST7032.c: 11: ans = I2C_Start(0x3E, 0);
 18256  0167D6  0E00               	movlw	0
 18257  0167D8  0100               	movlb	0	; () banked
 18258  0167DA  6F62               	movwf	I2C_Start@rw& (0+255),b
 18259  0167DC  0E3E               	movlw	62
 18260  0167DE  EC6B  F0B4         	call	_I2C_Start
 18261  0167E2  0100               	movlb	0	; () banked
 18262  0167E4  6F65               	movwf	I2C_LCD_Command@ans& (0+255),b
 18263                           
 18264                           ; BSR set to: 0
 18265                           ;My_ST7032.c: 12: if (ans == 0) {
 18266  0167E6  0100               	movlb	0	; () banked
 18267  0167E8  5165               	movf	I2C_LCD_Command@ans& (0+255),w,b
 18268  0167EA  0100               	movlb	0	; () banked
 18269  0167EC  A4D8               	btfss	status,2,c
 18270  0167EE  D007               	goto	l1060
 18271                           
 18272                           ; BSR set to: 0
 18273                           ;My_ST7032.c: 14: I2C_Send(0b10000000);
 18274  0167F0  0E80               	movlw	128
 18275  0167F2  EC31  F0B6         	call	_I2C_Send
 18276                           
 18277                           ;My_ST7032.c: 15: I2C_Send(c);
 18278  0167F6  0100               	movlb	0	; () banked
 18279  0167F8  5164               	movf	I2C_LCD_Command@c& (0+255),w,b
 18280  0167FA  EC31  F0B6         	call	_I2C_Send
 18281  0167FE                     l1060:
 18282                           
 18283                           ;My_ST7032.c: 16: }
 18284                           ;My_ST7032.c: 17: I2C_Stop();
 18285  0167FE  EC4E  F0B6         	call	_I2C_Stop	;wreg free
 18286                           
 18287                           ;My_ST7032.c: 18: _delay((unsigned long)((26)*(48000000/4000000.0)));
 18288  016802  0E68               	movlw	104
 18289  016804                     u14887:
 18290  016804  2EE8               	decfsz	wreg,f,c
 18291  016806  D7FE               	goto	u14887
 18292  016808  0012               	return		;funcret
 18293  01680A                     __end_of_I2C_LCD_Command:
 18294                           	opt stack 0
 18295                           tblptru	equ	0xFF8
 18296                           tblptrh	equ	0xFF7
 18297                           tblptrl	equ	0xFF6
 18298                           tablat	equ	0xFF5
 18299                           prodh	equ	0xFF4
 18300                           prodl	equ	0xFF3
 18301                           intcon	equ	0xFF2
 18302                           intcon2	equ	0xFF1
 18303                           postinc0	equ	0xFEE
 18304                           wreg	equ	0xFE8
 18305                           indf1	equ	0xFE7
 18306                           postinc1	equ	0xFE6
 18307                           postdec1	equ	0xFE5
 18308                           fsr1h	equ	0xFE2
 18309                           fsr1l	equ	0xFE1
 18310                           indf2	equ	0xFDF
 18311                           postinc2	equ	0xFDE
 18312                           postdec2	equ	0xFDD
 18313                           plusw2	equ	0xFDB
 18314                           fsr2h	equ	0xFDA
 18315                           fsr2l	equ	0xFD9
 18316                           status	equ	0xFD8
 18317                           
 18318 ;; *************** function _I2C_Stop *****************
 18319 ;; Defined at:
 18320 ;;		line 45 in file "../../../My_library/My_I2C.c"
 18321 ;; Parameters:    Size  Location     Type
 18322 ;;		None
 18323 ;; Auto vars:     Size  Location     Type
 18324 ;;		None
 18325 ;; Return value:  Size  Location     Type
 18326 ;;		None               void
 18327 ;; Registers used:
 18328 ;;		wreg, status,2, status,0, cstack
 18329 ;; Tracked objects:
 18330 ;;		On entry : 0/0
 18331 ;;		On exit  : 0/0
 18332 ;;		Unchanged: 0/0
 18333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18338 ;;Total ram usage:        0 bytes
 18339 ;; Hardware stack levels used:    1
 18340 ;; Hardware stack levels required when called:   12
 18341 ;; This function calls:
 18342 ;;		_I2C_IdleCheck
 18343 ;; This function is called by:
 18344 ;;		_I2C_LCD_Command
 18345 ;;		_I2C_LCD_Puts
 18346 ;;		_I2C_LCD_Putc
 18347 ;;		_I2C_LCD_CreateChar
 18348 ;; This function uses a non-reentrant model
 18349 ;;
 18350                           
 18351                           	psect	text69
 18352  016C9C                     __ptext69:
 18353                           	opt stack 0
 18354  016C9C                     _I2C_Stop:
 18355                           	opt stack 13
 18356                           
 18357                           ;My_I2C.c: 47: I2C_IdleCheck(0x5);
 18358                           
 18359                           ;incstack = 0
 18360  016C9C  0E05               	movlw	5
 18361  016C9E  ECDF  F0B5         	call	_I2C_IdleCheck
 18362                           
 18363                           ;My_I2C.c: 48: SSP1CON2bits.PEN = 1;
 18364  016CA2  84C5               	bsf	4037,2,c	;volatile
 18365  016CA4  0012               	return		;funcret
 18366  016CA6                     __end_of_I2C_Stop:
 18367                           	opt stack 0
 18368                           tblptru	equ	0xFF8
 18369                           tblptrh	equ	0xFF7
 18370                           tblptrl	equ	0xFF6
 18371                           tablat	equ	0xFF5
 18372                           prodh	equ	0xFF4
 18373                           prodl	equ	0xFF3
 18374                           intcon	equ	0xFF2
 18375                           intcon2	equ	0xFF1
 18376                           postinc0	equ	0xFEE
 18377                           wreg	equ	0xFE8
 18378                           indf1	equ	0xFE7
 18379                           postinc1	equ	0xFE6
 18380                           postdec1	equ	0xFE5
 18381                           fsr1h	equ	0xFE2
 18382                           fsr1l	equ	0xFE1
 18383                           indf2	equ	0xFDF
 18384                           postinc2	equ	0xFDE
 18385                           postdec2	equ	0xFDD
 18386                           plusw2	equ	0xFDB
 18387                           fsr2h	equ	0xFDA
 18388                           fsr2l	equ	0xFD9
 18389                           status	equ	0xFD8
 18390                           
 18391 ;; *************** function _I2C_Start *****************
 18392 ;; Defined at:
 18393 ;;		line 21 in file "../../../My_library/My_I2C.c"
 18394 ;; Parameters:    Size  Location     Type
 18395 ;;  adrs            1    wreg     unsigned char 
 18396 ;;  rw              1    2[BANK0 ] unsigned char 
 18397 ;; Auto vars:     Size  Location     Type
 18398 ;;  adrs            1    3[BANK0 ] unsigned char 
 18399 ;; Return value:  Size  Location     Type
 18400 ;;                  1    wreg      unsigned char 
 18401 ;; Registers used:
 18402 ;;		wreg, status,2, status,0, cstack
 18403 ;; Tracked objects:
 18404 ;;		On entry : 0/0
 18405 ;;		On exit  : 0/0
 18406 ;;		Unchanged: 0/0
 18407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18408 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18409 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18411 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18412 ;;Total ram usage:        2 bytes
 18413 ;; Hardware stack levels used:    1
 18414 ;; Hardware stack levels required when called:   12
 18415 ;; This function calls:
 18416 ;;		_I2C_IdleCheck
 18417 ;; This function is called by:
 18418 ;;		_I2C_LCD_Command
 18419 ;;		_I2C_LCD_Puts
 18420 ;;		_I2C_LCD_Putc
 18421 ;;		_I2C_LCD_CreateChar
 18422 ;; This function uses a non-reentrant model
 18423 ;;
 18424                           
 18425                           	psect	text70
 18426  0168D6                     __ptext70:
 18427                           	opt stack 0
 18428  0168D6                     _I2C_Start:
 18429                           	opt stack 13
 18430                           
 18431                           ;incstack = 0
 18432                           ;I2C_Start@adrs stored from wreg
 18433  0168D6  0100               	movlb	0	; () banked
 18434  0168D8  6F63               	movwf	I2C_Start@adrs& (0+255),b
 18435                           
 18436                           ;My_I2C.c: 23: I2C_IdleCheck(0x5);
 18437  0168DA  0E05               	movlw	5
 18438  0168DC  ECDF  F0B5         	call	_I2C_IdleCheck
 18439                           
 18440                           ;My_I2C.c: 24: SSP1CON2bits.SEN = 1;
 18441  0168E0  80C5               	bsf	4037,0,c	;volatile
 18442                           
 18443                           ;My_I2C.c: 26: I2C_IdleCheck(0x5);
 18444  0168E2  0E05               	movlw	5
 18445  0168E4  ECDF  F0B5         	call	_I2C_IdleCheck
 18446                           
 18447                           ;My_I2C.c: 27: SSP1IF = 0;
 18448  0168E8  969E               	bcf	3998,3,c	;volatile
 18449                           
 18450                           ;My_I2C.c: 28: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
 18451  0168EA  0100               	movlb	0	; () banked
 18452  0168EC  5163               	movf	I2C_Start@adrs& (0+255),w,b
 18453  0168EE  2563               	addwf	I2C_Start@adrs& (0+255),w,b
 18454  0168F0  0100               	movlb	0	; () banked
 18455  0168F2  2562               	addwf	I2C_Start@rw& (0+255),w,b
 18456  0168F4  6EC9               	movwf	4041,c	;volatile
 18457  0168F6                     l636:
 18458  0168F6  A69E               	btfss	3998,3,c	;volatile
 18459  0168F8  D7FE               	goto	l636
 18460                           
 18461                           ;My_I2C.c: 30: return SSP1CON2bits.ACKSTAT;
 18462  0168FA  ACC5               	btfss	4037,6,c	;volatile
 18463  0168FC  D002               	goto	u11790
 18464  0168FE  0E01               	movlw	1
 18465  016900  0012               	return	
 18466  016902                     u11790:
 18467  016902  0E00               	movlw	0
 18468  016904  0012               	return	
 18469  016906                     __end_of_I2C_Start:
 18470                           	opt stack 0
 18471                           tblptru	equ	0xFF8
 18472                           tblptrh	equ	0xFF7
 18473                           tblptrl	equ	0xFF6
 18474                           tablat	equ	0xFF5
 18475                           prodh	equ	0xFF4
 18476                           prodl	equ	0xFF3
 18477                           intcon	equ	0xFF2
 18478                           intcon2	equ	0xFF1
 18479                           postinc0	equ	0xFEE
 18480                           wreg	equ	0xFE8
 18481                           indf1	equ	0xFE7
 18482                           postinc1	equ	0xFE6
 18483                           postdec1	equ	0xFE5
 18484                           fsr1h	equ	0xFE2
 18485                           fsr1l	equ	0xFE1
 18486                           indf2	equ	0xFDF
 18487                           postinc2	equ	0xFDE
 18488                           postdec2	equ	0xFDD
 18489                           plusw2	equ	0xFDB
 18490                           fsr2h	equ	0xFDA
 18491                           fsr2l	equ	0xFD9
 18492                           status	equ	0xFD8
 18493                           
 18494 ;; *************** function _I2C_Send *****************
 18495 ;; Defined at:
 18496 ;;		line 51 in file "../../../My_library/My_I2C.c"
 18497 ;; Parameters:    Size  Location     Type
 18498 ;;  data            1    wreg     unsigned char 
 18499 ;; Auto vars:     Size  Location     Type
 18500 ;;  data            1    2[BANK0 ] unsigned char 
 18501 ;; Return value:  Size  Location     Type
 18502 ;;                  1    wreg      unsigned char 
 18503 ;; Registers used:
 18504 ;;		wreg, status,2, status,0, cstack
 18505 ;; Tracked objects:
 18506 ;;		On entry : 0/0
 18507 ;;		On exit  : 0/0
 18508 ;;		Unchanged: 0/0
 18509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18511 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18513 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18514 ;;Total ram usage:        1 bytes
 18515 ;; Hardware stack levels used:    1
 18516 ;; Hardware stack levels required when called:   12
 18517 ;; This function calls:
 18518 ;;		_I2C_IdleCheck
 18519 ;; This function is called by:
 18520 ;;		_I2C_LCD_Command
 18521 ;;		_I2C_LCD_Puts
 18522 ;;		_I2C_LCD_Putc
 18523 ;;		_I2C_LCD_CreateChar
 18524 ;; This function uses a non-reentrant model
 18525 ;;
 18526                           
 18527                           	psect	text71
 18528  016C62                     __ptext71:
 18529                           	opt stack 0
 18530  016C62                     _I2C_Send:
 18531                           	opt stack 13
 18532                           
 18533                           ;incstack = 0
 18534                           ;I2C_Send@data stored from wreg
 18535  016C62  0100               	movlb	0	; () banked
 18536  016C64  6F62               	movwf	I2C_Send@data& (0+255),b
 18537                           
 18538                           ;My_I2C.c: 52: I2C_IdleCheck(0x5);
 18539  016C66  0E05               	movlw	5
 18540  016C68  ECDF  F0B5         	call	_I2C_IdleCheck
 18541                           
 18542                           ;My_I2C.c: 53: SSP1IF = 0;
 18543  016C6C  969E               	bcf	3998,3,c	;volatile
 18544                           
 18545                           ;My_I2C.c: 54: SSP1BUF = data;
 18546  016C6E  C062  FFC9         	movff	I2C_Send@data,4041	;volatile
 18547  016C72                     l651:
 18548  016C72  A69E               	btfss	3998,3,c	;volatile
 18549  016C74  D7FE               	goto	l651
 18550                           
 18551                           ;My_I2C.c: 56: return SSP1CON2bits.ACKSTAT;
 18552                           ;	Return value of _I2C_Send is never used
 18553  016C76  50C5               	movf	4037,w,c	;volatile
 18554  016C78  0012               	return	
 18555  016C7A                     __end_of_I2C_Send:
 18556                           	opt stack 0
 18557                           tblptru	equ	0xFF8
 18558                           tblptrh	equ	0xFF7
 18559                           tblptrl	equ	0xFF6
 18560                           tablat	equ	0xFF5
 18561                           prodh	equ	0xFF4
 18562                           prodl	equ	0xFF3
 18563                           intcon	equ	0xFF2
 18564                           intcon2	equ	0xFF1
 18565                           postinc0	equ	0xFEE
 18566                           wreg	equ	0xFE8
 18567                           indf1	equ	0xFE7
 18568                           postinc1	equ	0xFE6
 18569                           postdec1	equ	0xFE5
 18570                           fsr1h	equ	0xFE2
 18571                           fsr1l	equ	0xFE1
 18572                           indf2	equ	0xFDF
 18573                           postinc2	equ	0xFDE
 18574                           postdec2	equ	0xFDD
 18575                           plusw2	equ	0xFDB
 18576                           fsr2h	equ	0xFDA
 18577                           fsr2l	equ	0xFD9
 18578                           status	equ	0xFD8
 18579                           
 18580 ;; *************** function _I2C_IdleCheck *****************
 18581 ;; Defined at:
 18582 ;;		line 7 in file "../../../My_library/My_I2C.c"
 18583 ;; Parameters:    Size  Location     Type
 18584 ;;  mask            1    wreg     unsigned char 
 18585 ;; Auto vars:     Size  Location     Type
 18586 ;;  mask            1    1[BANK0 ] unsigned char 
 18587 ;; Return value:  Size  Location     Type
 18588 ;;		None               void
 18589 ;; Registers used:
 18590 ;;		wreg, status,2, status,0
 18591 ;; Tracked objects:
 18592 ;;		On entry : 0/0
 18593 ;;		On exit  : 0/0
 18594 ;;		Unchanged: 0/0
 18595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18597 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18598 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18599 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18600 ;;Total ram usage:        2 bytes
 18601 ;; Hardware stack levels used:    1
 18602 ;; Hardware stack levels required when called:   11
 18603 ;; This function calls:
 18604 ;;		Nothing
 18605 ;; This function is called by:
 18606 ;;		_I2C_Start
 18607 ;;		_I2C_Stop
 18608 ;;		_I2C_Send
 18609 ;;		_I2C_rStart
 18610 ;;		_I2C_Receive
 18611 ;; This function uses a non-reentrant model
 18612 ;;
 18613                           
 18614                           	psect	text72
 18615  016BBE                     __ptext72:
 18616                           	opt stack 0
 18617  016BBE                     _I2C_IdleCheck:
 18618                           	opt stack 13
 18619                           
 18620                           ;incstack = 0
 18621                           ;I2C_IdleCheck@mask stored from wreg
 18622  016BBE  0100               	movlb	0	; () banked
 18623  016BC0  6F61               	movwf	I2C_IdleCheck@mask& (0+255),b
 18624  016BC2                     l10155:
 18625  016BC2  50C7               	movf	4039,w,c	;volatile
 18626  016BC4  0100               	movlb	0	; () banked
 18627  016BC6  1561               	andwf	I2C_IdleCheck@mask& (0+255),w,b
 18628  016BC8  0100               	movlb	0	; () banked
 18629  016BCA  6F60               	movwf	??_I2C_IdleCheck& (0+255),b
 18630  016BCC  50C5               	movf	4037,w,c	;volatile
 18631  016BCE  0B1F               	andlw	31
 18632  016BD0  0100               	movlb	0	; () banked
 18633  016BD2  1160               	iorwf	??_I2C_IdleCheck& (0+255),w,b
 18634  016BD4  0900               	iorlw	0
 18635  016BD6  B4D8               	btfsc	status,2,c
 18636  016BD8  0012               	return	
 18637  016BDA  D7F3               	goto	l10155
 18638  016BDC                     __end_of_I2C_IdleCheck:
 18639                           	opt stack 0
 18640                           tblptru	equ	0xFF8
 18641                           tblptrh	equ	0xFF7
 18642                           tblptrl	equ	0xFF6
 18643                           tablat	equ	0xFF5
 18644                           prodh	equ	0xFF4
 18645                           prodl	equ	0xFF3
 18646                           intcon	equ	0xFF2
 18647                           intcon2	equ	0xFF1
 18648                           postinc0	equ	0xFEE
 18649                           wreg	equ	0xFE8
 18650                           indf1	equ	0xFE7
 18651                           postinc1	equ	0xFE6
 18652                           postdec1	equ	0xFE5
 18653                           fsr1h	equ	0xFE2
 18654                           fsr1l	equ	0xFE1
 18655                           indf2	equ	0xFDF
 18656                           postinc2	equ	0xFDE
 18657                           postdec2	equ	0xFDD
 18658                           plusw2	equ	0xFDB
 18659                           fsr2h	equ	0xFDA
 18660                           fsr2l	equ	0xFD9
 18661                           status	equ	0xFD8
 18662                           
 18663 ;; *************** function _CTMU_init *****************
 18664 ;; Defined at:
 18665 ;;		line 252 in file "../../../My_library/My_PIC.c"
 18666 ;; Parameters:    Size  Location     Type
 18667 ;;		None
 18668 ;; Auto vars:     Size  Location     Type
 18669 ;;		None
 18670 ;; Return value:  Size  Location     Type
 18671 ;;		None               void
 18672 ;; Registers used:
 18673 ;;		wreg, status,2
 18674 ;; Tracked objects:
 18675 ;;		On entry : 0/0
 18676 ;;		On exit  : 0/0
 18677 ;;		Unchanged: 0/0
 18678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18683 ;;Total ram usage:        0 bytes
 18684 ;; Hardware stack levels used:    1
 18685 ;; Hardware stack levels required when called:   11
 18686 ;; This function calls:
 18687 ;;		Nothing
 18688 ;; This function is called by:
 18689 ;;		_hardware_init
 18690 ;; This function uses a non-reentrant model
 18691 ;;
 18692                           
 18693                           	psect	text73
 18694  016ABE                     __ptext73:
 18695                           	opt stack 0
 18696  016ABE                     _CTMU_init:
 18697                           	opt stack 18
 18698                           
 18699                           ;My_PIC.c: 253: CTMUCONH = 0x00;
 18700                           
 18701                           ; BSR set to: 0
 18702                           ;incstack = 0
 18703  016ABE  0E00               	movlw	0
 18704  016AC0  6EB3               	movwf	4019,c	;volatile
 18705                           
 18706                           ;My_PIC.c: 254: CTMUCONL = 0x90;
 18707  016AC2  0E90               	movlw	144
 18708  016AC4  6EB2               	movwf	4018,c	;volatile
 18709                           
 18710                           ;My_PIC.c: 255: CTMUICON = 0x01;
 18711  016AC6  0E01               	movlw	1
 18712  016AC8  6EB1               	movwf	4017,c	;volatile
 18713                           
 18714                           ;My_PIC.c: 257: ADCON1bits.ADFM = 1;
 18715  016ACA  8EC1               	bsf	4033,7,c	;volatile
 18716                           
 18717                           ;My_PIC.c: 258: ADCON1bits.ADCAL = 0;
 18718  016ACC  9CC1               	bcf	4033,6,c	;volatile
 18719                           
 18720                           ;My_PIC.c: 259: ADCON1bits.ACQT = 1;
 18721  016ACE  50C1               	movf	4033,w,c	;volatile
 18722  016AD0  0BC7               	andlw	-57
 18723  016AD2  0908               	iorlw	8
 18724  016AD4  6EC1               	movwf	4033,c	;volatile
 18725                           
 18726                           ;My_PIC.c: 260: ADCON1bits.ADCS = 6;
 18727  016AD6  50C1               	movf	4033,w,c	;volatile
 18728  016AD8  0BF8               	andlw	-8
 18729  016ADA  0906               	iorlw	6
 18730  016ADC  6EC1               	movwf	4033,c	;volatile
 18731                           
 18732                           ;My_PIC.c: 262: ADCON0bits.VCFG0 = 0;
 18733  016ADE  9CC2               	bcf	4034,6,c	;volatile
 18734                           
 18735                           ;My_PIC.c: 263: ADCON0bits.VCFG1 = 0;
 18736  016AE0  9EC2               	bcf	4034,7,c	;volatile
 18737                           
 18738                           ;My_PIC.c: 264: ADCON0bits.ADON = 1;
 18739  016AE2  80C2               	bsf	4034,0,c	;volatile
 18740  016AE4  0012               	return		;funcret
 18741  016AE6                     __end_of_CTMU_init:
 18742                           	opt stack 0
 18743                           tblptru	equ	0xFF8
 18744                           tblptrh	equ	0xFF7
 18745                           tblptrl	equ	0xFF6
 18746                           tablat	equ	0xFF5
 18747                           prodh	equ	0xFF4
 18748                           prodl	equ	0xFF3
 18749                           intcon	equ	0xFF2
 18750                           intcon2	equ	0xFF1
 18751                           postinc0	equ	0xFEE
 18752                           wreg	equ	0xFE8
 18753                           indf1	equ	0xFE7
 18754                           postinc1	equ	0xFE6
 18755                           postdec1	equ	0xFE5
 18756                           fsr1h	equ	0xFE2
 18757                           fsr1l	equ	0xFE1
 18758                           indf2	equ	0xFDF
 18759                           postinc2	equ	0xFDE
 18760                           postdec2	equ	0xFDD
 18761                           plusw2	equ	0xFDB
 18762                           fsr2h	equ	0xFDA
 18763                           fsr2l	equ	0xFD9
 18764                           status	equ	0xFD8
 18765                           
 18766 ;; *************** function _ADC_init *****************
 18767 ;; Defined at:
 18768 ;;		line 132 in file "../../../My_library/My_PIC.c"
 18769 ;; Parameters:    Size  Location     Type
 18770 ;;  p_ref           1    wreg     unsigned char 
 18771 ;; Auto vars:     Size  Location     Type
 18772 ;;  p_ref           1    0[BANK0 ] unsigned char 
 18773 ;; Return value:  Size  Location     Type
 18774 ;;		None               void
 18775 ;; Registers used:
 18776 ;;		wreg, status,2
 18777 ;; Tracked objects:
 18778 ;;		On entry : 0/0
 18779 ;;		On exit  : 0/0
 18780 ;;		Unchanged: 0/0
 18781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18783 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18785 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18786 ;;Total ram usage:        1 bytes
 18787 ;; Hardware stack levels used:    1
 18788 ;; Hardware stack levels required when called:   11
 18789 ;; This function calls:
 18790 ;;		Nothing
 18791 ;; This function is called by:
 18792 ;;		_hardware_init
 18793 ;; This function uses a non-reentrant model
 18794 ;;
 18795                           
 18796                           	psect	text74
 18797  016B7E                     __ptext74:
 18798                           	opt stack 0
 18799  016B7E                     _ADC_init:
 18800                           	opt stack 18
 18801                           
 18802                           ;incstack = 0
 18803                           ;ADC_init@p_ref stored from wreg
 18804  016B7E  0100               	movlb	0	; () banked
 18805  016B80  6F60               	movwf	ADC_init@p_ref& (0+255),b
 18806                           
 18807                           ;My_PIC.c: 133: ADCON0bits.VCFG1 = 0;
 18808  016B82  9EC2               	bcf	4034,7,c	;volatile
 18809                           
 18810                           ;My_PIC.c: 134: ADCON0bits.VCFG0 = p_ref;
 18811  016B84  0100               	movlb	0	; () banked
 18812  016B86  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
 18813  016B88  D002               	bra	u14155
 18814  016B8A  9CC2               	bcf	4034,6,c	;volatile
 18815  016B8C  D001               	bra	u14156
 18816  016B8E                     u14155:
 18817  016B8E  8CC2               	bsf	4034,6,c	;volatile
 18818  016B90                     u14156:
 18819                           
 18820                           ;My_PIC.c: 136: ADCON1bits.ADFM = 1;
 18821  016B90  8EC1               	bsf	4033,7,c	;volatile
 18822                           
 18823                           ;My_PIC.c: 137: ADCON1bits.ADCAL = 0;
 18824  016B92  9CC1               	bcf	4033,6,c	;volatile
 18825                           
 18826                           ;My_PIC.c: 138: ADCON1bits.ADCS = 6;
 18827  016B94  50C1               	movf	4033,w,c	;volatile
 18828  016B96  0BF8               	andlw	-8
 18829  016B98  0906               	iorlw	6
 18830  016B9A  6EC1               	movwf	4033,c	;volatile
 18831  016B9C  0012               	return		;funcret
 18832  016B9E                     __end_of_ADC_init:
 18833                           	opt stack 0
 18834                           tblptru	equ	0xFF8
 18835                           tblptrh	equ	0xFF7
 18836                           tblptrl	equ	0xFF6
 18837                           tablat	equ	0xFF5
 18838                           prodh	equ	0xFF4
 18839                           prodl	equ	0xFF3
 18840                           intcon	equ	0xFF2
 18841                           intcon2	equ	0xFF1
 18842                           postinc0	equ	0xFEE
 18843                           wreg	equ	0xFE8
 18844                           indf1	equ	0xFE7
 18845                           postinc1	equ	0xFE6
 18846                           postdec1	equ	0xFE5
 18847                           fsr1h	equ	0xFE2
 18848                           fsr1l	equ	0xFE1
 18849                           indf2	equ	0xFDF
 18850                           postinc2	equ	0xFDE
 18851                           postdec2	equ	0xFDD
 18852                           plusw2	equ	0xFDB
 18853                           fsr2h	equ	0xFDA
 18854                           fsr2l	equ	0xFD9
 18855                           status	equ	0xFD8
 18856                           
 18857 ;; *************** function _ctmu_task *****************
 18858 ;; Defined at:
 18859 ;;		line 29 in file "ctmu.c"
 18860 ;; Parameters:    Size  Location     Type
 18861 ;;		None
 18862 ;; Auto vars:     Size  Location     Type
 18863 ;;		None
 18864 ;; Return value:  Size  Location     Type
 18865 ;;		None               void
 18866 ;; Registers used:
 18867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18868 ;; Tracked objects:
 18869 ;;		On entry : 0/0
 18870 ;;		On exit  : 0/0
 18871 ;;		Unchanged: 0/0
 18872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18877 ;;Total ram usage:        0 bytes
 18878 ;; Hardware stack levels used:    1
 18879 ;; Hardware stack levels required when called:   14
 18880 ;; This function calls:
 18881 ;;		_ctmu_sampling
 18882 ;; This function is called by:
 18883 ;;		_main
 18884 ;; This function uses a non-reentrant model
 18885 ;;
 18886                           
 18887                           	psect	text75
 18888  016C8C                     __ptext75:
 18889                           	opt stack 0
 18890  016C8C                     _ctmu_task:
 18891                           	opt stack 16
 18892                           
 18893                           ;ctmu.c: 30: if (ctmu_sampling_flag) {
 18894                           
 18895                           ;incstack = 0
 18896  016C8C  501A               	movf	_ctmu_sampling_flag,w,c
 18897  016C8E  B4D8               	btfsc	status,2,c
 18898  016C90  0012               	return	
 18899                           
 18900                           ;ctmu.c: 31: ctmu_sampling_flag = 0;
 18901  016C92  0E00               	movlw	0
 18902  016C94  6E1A               	movwf	_ctmu_sampling_flag,c
 18903                           
 18904                           ;ctmu.c: 32: ctmu_sampling();
 18905  016C96  ECBF  F09E         	call	_ctmu_sampling	;wreg free
 18906  016C9A  0012               	return	
 18907  016C9C                     __end_of_ctmu_task:
 18908                           	opt stack 0
 18909                           tblptru	equ	0xFF8
 18910                           tblptrh	equ	0xFF7
 18911                           tblptrl	equ	0xFF6
 18912                           tablat	equ	0xFF5
 18913                           prodh	equ	0xFF4
 18914                           prodl	equ	0xFF3
 18915                           intcon	equ	0xFF2
 18916                           intcon2	equ	0xFF1
 18917                           postinc0	equ	0xFEE
 18918                           wreg	equ	0xFE8
 18919                           indf1	equ	0xFE7
 18920                           postinc1	equ	0xFE6
 18921                           postdec1	equ	0xFE5
 18922                           fsr1h	equ	0xFE2
 18923                           fsr1l	equ	0xFE1
 18924                           indf2	equ	0xFDF
 18925                           postinc2	equ	0xFDE
 18926                           postdec2	equ	0xFDD
 18927                           plusw2	equ	0xFDB
 18928                           fsr2h	equ	0xFDA
 18929                           fsr2l	equ	0xFD9
 18930                           status	equ	0xFD8
 18931                           
 18932 ;; *************** function _ctmu_sampling *****************
 18933 ;; Defined at:
 18934 ;;		line 22 in file "ctmu.c"
 18935 ;; Parameters:    Size  Location     Type
 18936 ;;		None
 18937 ;; Auto vars:     Size  Location     Type
 18938 ;;		None
 18939 ;; Return value:  Size  Location     Type
 18940 ;;		None               void
 18941 ;; Registers used:
 18942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18943 ;; Tracked objects:
 18944 ;;		On entry : 0/0
 18945 ;;		On exit  : 0/0
 18946 ;;		Unchanged: 0/0
 18947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18952 ;;Total ram usage:        0 bytes
 18953 ;; Hardware stack levels used:    1
 18954 ;; Hardware stack levels required when called:   13
 18955 ;; This function calls:
 18956 ;;		_CTMU_read
 18957 ;;		___lwdiv
 18958 ;;		_button_timer_interrupt
 18959 ;; This function is called by:
 18960 ;;		_ctmu_task
 18961 ;; This function uses a non-reentrant model
 18962 ;;
 18963                           
 18964                           	psect	text76
 18965  013D7E                     __ptext76:
 18966                           	opt stack 0
 18967  013D7E                     _ctmu_sampling:
 18968                           	opt stack 16
 18969                           
 18970                           ;ctmu.c: 23: button_timer_interrupt(&port[0].ctmu, !(CTMU_read(0) / port[0].ctmu_value))
      +                          ;
 18971                           
 18972                           ;incstack = 0
 18973  013D7E  0E2D               	movlw	low _port
 18974  013D80  0100               	movlb	0	; () banked
 18975  013D82  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 18976  013D84  0E01               	movlw	high _port
 18977  013D86  0100               	movlb	0	; () banked
 18978  013D88  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 18979  013D8A  0E00               	movlw	0
 18980  013D8C  ECC9  F0A8         	call	_CTMU_read
 18981  013D90  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 18982  013D94  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 18983  013D98  C131  F07E         	movff	_port+4,___lwdiv@divisor
 18984  013D9C  C132  F07F         	movff	_port+5,___lwdiv@divisor+1
 18985  013DA0  EC47  F0AF         	call	___lwdiv	;wreg free
 18986  013DA4  0100               	movlb	0	; () banked
 18987  013DA6  517C               	movf	?___lwdiv& (0+255),w,b
 18988  013DA8  0100               	movlb	0	; () banked
 18989  013DAA  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 18990  013DAC  A4D8               	btfss	status,2,c
 18991  013DAE  D002               	goto	u14000
 18992  013DB0  0E01               	movlw	1
 18993  013DB2  D001               	goto	u14010
 18994  013DB4                     u14000:
 18995  013DB4  0E00               	movlw	0
 18996  013DB6                     u14010:
 18997  013DB6  0100               	movlb	0	; () banked
 18998  013DB8  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 18999  013DBA  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19000                           
 19001                           ;ctmu.c: 24: button_timer_interrupt(&port[1].ctmu, !(CTMU_read(1) / port[1].ctmu_value))
      +                          ;
 19002  013DBE  0E44               	movlw	low (_port+23)
 19003  013DC0  0100               	movlb	0	; () banked
 19004  013DC2  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19005  013DC4  0E01               	movlw	high (_port+23)
 19006  013DC6  0100               	movlb	0	; () banked
 19007  013DC8  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19008  013DCA  0E01               	movlw	1
 19009  013DCC  ECC9  F0A8         	call	_CTMU_read
 19010  013DD0  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19011  013DD4  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19012  013DD8  C148  F07E         	movff	_port+27,___lwdiv@divisor
 19013  013DDC  C149  F07F         	movff	_port+28,___lwdiv@divisor+1
 19014  013DE0  EC47  F0AF         	call	___lwdiv	;wreg free
 19015  013DE4  0100               	movlb	0	; () banked
 19016  013DE6  517C               	movf	?___lwdiv& (0+255),w,b
 19017  013DE8  0100               	movlb	0	; () banked
 19018  013DEA  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19019  013DEC  A4D8               	btfss	status,2,c
 19020  013DEE  D002               	goto	u14020
 19021  013DF0  0E01               	movlw	1
 19022  013DF2  D001               	goto	u14030
 19023  013DF4                     u14020:
 19024  013DF4  0E00               	movlw	0
 19025  013DF6                     u14030:
 19026  013DF6  0100               	movlb	0	; () banked
 19027  013DF8  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19028  013DFA  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19029                           
 19030                           ;ctmu.c: 25: button_timer_interrupt(&port[2].ctmu, !(CTMU_read(2) / port[2].ctmu_value))
      +                          ;
 19031  013DFE  0E5B               	movlw	low (_port+46)
 19032  013E00  0100               	movlb	0	; () banked
 19033  013E02  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19034  013E04  0E01               	movlw	high (_port+46)
 19035  013E06  0100               	movlb	0	; () banked
 19036  013E08  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19037  013E0A  0E02               	movlw	2
 19038  013E0C  ECC9  F0A8         	call	_CTMU_read
 19039  013E10  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19040  013E14  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19041  013E18  C15F  F07E         	movff	_port+50,___lwdiv@divisor
 19042  013E1C  C160  F07F         	movff	_port+51,___lwdiv@divisor+1
 19043  013E20  EC47  F0AF         	call	___lwdiv	;wreg free
 19044  013E24  0100               	movlb	0	; () banked
 19045  013E26  517C               	movf	?___lwdiv& (0+255),w,b
 19046  013E28  0100               	movlb	0	; () banked
 19047  013E2A  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19048  013E2C  A4D8               	btfss	status,2,c
 19049  013E2E  D002               	goto	u14040
 19050  013E30  0E01               	movlw	1
 19051  013E32  D001               	goto	u14050
 19052  013E34                     u14040:
 19053  013E34  0E00               	movlw	0
 19054  013E36                     u14050:
 19055  013E36  0100               	movlb	0	; () banked
 19056  013E38  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19057  013E3A  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19058                           
 19059                           ;ctmu.c: 26: button_timer_interrupt(&ctmu_m, !(CTMU_read(3) / ctmu_value_m));
 19060  013E3E  0E27               	movlw	low _ctmu_m
 19061  013E40  0100               	movlb	0	; () banked
 19062  013E42  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19063  013E44  0E00               	movlw	high _ctmu_m
 19064  013E46  0100               	movlb	0	; () banked
 19065  013E48  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19066  013E4A  0E03               	movlw	3
 19067  013E4C  ECC9  F0A8         	call	_CTMU_read
 19068  013E50  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19069  013E54  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19070  013E58  C11A  F07E         	movff	_ctmu_value_m,___lwdiv@divisor
 19071  013E5C  C11B  F07F         	movff	_ctmu_value_m+1,___lwdiv@divisor+1
 19072  013E60  EC47  F0AF         	call	___lwdiv	;wreg free
 19073  013E64  0100               	movlb	0	; () banked
 19074  013E66  517C               	movf	?___lwdiv& (0+255),w,b
 19075  013E68  0100               	movlb	0	; () banked
 19076  013E6A  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19077  013E6C  A4D8               	btfss	status,2,c
 19078  013E6E  D002               	goto	u14060
 19079  013E70  0E01               	movlw	1
 19080  013E72  D001               	goto	u14070
 19081  013E74                     u14060:
 19082  013E74  0E00               	movlw	0
 19083  013E76                     u14070:
 19084  013E76  0100               	movlb	0	; () banked
 19085  013E78  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19086  013E7A  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19087  013E7E  0012               	return		;funcret
 19088  013E80                     __end_of_ctmu_sampling:
 19089                           	opt stack 0
 19090                           tblptru	equ	0xFF8
 19091                           tblptrh	equ	0xFF7
 19092                           tblptrl	equ	0xFF6
 19093                           tablat	equ	0xFF5
 19094                           prodh	equ	0xFF4
 19095                           prodl	equ	0xFF3
 19096                           intcon	equ	0xFF2
 19097                           intcon2	equ	0xFF1
 19098                           postinc0	equ	0xFEE
 19099                           wreg	equ	0xFE8
 19100                           indf1	equ	0xFE7
 19101                           postinc1	equ	0xFE6
 19102                           postdec1	equ	0xFE5
 19103                           fsr1h	equ	0xFE2
 19104                           fsr1l	equ	0xFE1
 19105                           indf2	equ	0xFDF
 19106                           postinc2	equ	0xFDE
 19107                           postdec2	equ	0xFDD
 19108                           plusw2	equ	0xFDB
 19109                           fsr2h	equ	0xFDA
 19110                           fsr2l	equ	0xFD9
 19111                           status	equ	0xFD8
 19112                           
 19113 ;; *************** function _button_timer_interrupt *****************
 19114 ;; Defined at:
 19115 ;;		line 3 in file "../../../My_library/My_button.c"
 19116 ;; Parameters:    Size  Location     Type
 19117 ;;  bt              2   35[BANK0 ] PTR struct button
 19118 ;;		 -> ctmu_m(4), port(69), 
 19119 ;;  sw_value        1   37[BANK0 ] unsigned char 
 19120 ;; Auto vars:     Size  Location     Type
 19121 ;;		None
 19122 ;; Return value:  Size  Location     Type
 19123 ;;		None               void
 19124 ;; Registers used:
 19125 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19126 ;; Tracked objects:
 19127 ;;		On entry : 0/0
 19128 ;;		On exit  : 0/0
 19129 ;;		Unchanged: 0/0
 19130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19131 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19133 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19134 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19135 ;;Total ram usage:        5 bytes
 19136 ;; Hardware stack levels used:    1
 19137 ;; Hardware stack levels required when called:   11
 19138 ;; This function calls:
 19139 ;;		Nothing
 19140 ;; This function is called by:
 19141 ;;		_ctmu_sampling
 19142 ;; This function uses a non-reentrant model
 19143 ;;
 19144                           
 19145                           	psect	text77
 19146  0110F6                     __ptext77:
 19147                           	opt stack 0
 19148  0110F6                     _button_timer_interrupt:
 19149                           	opt stack 17
 19150                           
 19151                           ;My_button.c: 4: if (sw_value) {
 19152                           
 19153                           ;incstack = 0
 19154  0110F6  0100               	movlb	0	; () banked
 19155  0110F8  5185               	movf	button_timer_interrupt@sw_value& (0+255),w,b
 19156  0110FA  0100               	movlb	0	; () banked
 19157  0110FC  B4D8               	btfsc	status,2,c
 19158  0110FE  D0A8               	goto	l8005
 19159                           
 19160                           ; BSR set to: 0
 19161                           ;My_button.c: 5: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 19162  011100  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19163  011104  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19164  011108  0E84               	movlw	132
 19165  01110A  18DE               	xorwf	postinc2,w,c
 19166  01110C  E10D               	bnz	l583
 19167  01110E  0E03               	movlw	3
 19168  011110  18DE               	xorwf	postinc2,w,c
 19169  011112  A4D8               	btfss	status,2,c
 19170  011114  D009               	goto	l583
 19171                           
 19172                           ; BSR set to: 0
 19173  011116  0100               	movlb	0	; () banked
 19174  011118  EE20 F003          	lfsr	2,3
 19175  01111C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19176  01111E  26D9               	addwf	fsr2l,f,c
 19177  011120  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19178  011122  22DA               	addwfc	fsr2h,f,c
 19179  011124  0100               	movlb	0	; () banked
 19180  011126  8EDF               	bsf	indf2,7,c
 19181  011128                     l583:
 19182                           
 19183                           ; BSR set to: 0
 19184                           ;My_button.c: 6: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 19185  011128  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19186  01112C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19187  011130  0EBC               	movlw	188
 19188  011132  18DE               	xorwf	postinc2,w,c
 19189  011134  E10D               	bnz	l584
 19190  011136  0E02               	movlw	2
 19191  011138  18DE               	xorwf	postinc2,w,c
 19192  01113A  A4D8               	btfss	status,2,c
 19193  01113C  D009               	goto	l584
 19194                           
 19195                           ; BSR set to: 0
 19196  01113E  0100               	movlb	0	; () banked
 19197  011140  EE20 F003          	lfsr	2,3
 19198  011144  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19199  011146  26D9               	addwf	fsr2l,f,c
 19200  011148  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19201  01114A  22DA               	addwfc	fsr2h,f,c
 19202  01114C  0100               	movlb	0	; () banked
 19203  01114E  8CDF               	bsf	indf2,6,c
 19204  011150                     l584:
 19205                           
 19206                           ; BSR set to: 0
 19207                           ;My_button.c: 7: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 19208  011150  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19209  011154  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19210  011158  0EF4               	movlw	244
 19211  01115A  18DE               	xorwf	postinc2,w,c
 19212  01115C  E10C               	bnz	l585
 19213  01115E  04DE               	decf	postinc2,w,c
 19214  011160  A4D8               	btfss	status,2,c
 19215  011162  D009               	goto	l585
 19216                           
 19217                           ; BSR set to: 0
 19218  011164  0100               	movlb	0	; () banked
 19219  011166  EE20 F003          	lfsr	2,3
 19220  01116A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19221  01116C  26D9               	addwf	fsr2l,f,c
 19222  01116E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19223  011170  22DA               	addwfc	fsr2h,f,c
 19224  011172  0100               	movlb	0	; () banked
 19225  011174  8ADF               	bsf	indf2,5,c
 19226  011176                     l585:
 19227                           
 19228                           ; BSR set to: 0
 19229                           ;My_button.c: 8: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 19230  011176  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19231  01117A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19232  01117E  0E2C               	movlw	44
 19233  011180  18DE               	xorwf	postinc2,w,c
 19234  011182  E10C               	bnz	l586
 19235  011184  04DE               	decf	postinc2,w,c
 19236  011186  A4D8               	btfss	status,2,c
 19237  011188  D009               	goto	l586
 19238                           
 19239                           ; BSR set to: 0
 19240  01118A  0100               	movlb	0	; () banked
 19241  01118C  EE20 F003          	lfsr	2,3
 19242  011190  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19243  011192  26D9               	addwf	fsr2l,f,c
 19244  011194  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19245  011196  22DA               	addwfc	fsr2h,f,c
 19246  011198  0100               	movlb	0	; () banked
 19247  01119A  88DF               	bsf	indf2,4,c
 19248  01119C                     l586:
 19249                           
 19250                           ; BSR set to: 0
 19251                           ;My_button.c: 9: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 19252  01119C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19253  0111A0  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19254  0111A4  0E96               	movlw	150
 19255  0111A6  18DE               	xorwf	postinc2,w,c
 19256  0111A8  10DE               	iorwf	postinc2,w,c
 19257  0111AA  A4D8               	btfss	status,2,c
 19258  0111AC  D009               	goto	l587
 19259                           
 19260                           ; BSR set to: 0
 19261  0111AE  0100               	movlb	0	; () banked
 19262  0111B0  EE20 F003          	lfsr	2,3
 19263  0111B4  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19264  0111B6  26D9               	addwf	fsr2l,f,c
 19265  0111B8  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19266  0111BA  22DA               	addwfc	fsr2h,f,c
 19267  0111BC  0100               	movlb	0	; () banked
 19268  0111BE  86DF               	bsf	indf2,3,c
 19269  0111C0                     l587:
 19270                           
 19271                           ; BSR set to: 0
 19272                           ;My_button.c: 10: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 19273  0111C0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19274  0111C4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19275  0111C8  0E3C               	movlw	60
 19276  0111CA  18DE               	xorwf	postinc2,w,c
 19277  0111CC  10DE               	iorwf	postinc2,w,c
 19278  0111CE  A4D8               	btfss	status,2,c
 19279  0111D0  D009               	goto	l588
 19280                           
 19281                           ; BSR set to: 0
 19282  0111D2  0100               	movlb	0	; () banked
 19283  0111D4  EE20 F003          	lfsr	2,3
 19284  0111D8  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19285  0111DA  26D9               	addwf	fsr2l,f,c
 19286  0111DC  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19287  0111DE  22DA               	addwfc	fsr2h,f,c
 19288  0111E0  0100               	movlb	0	; () banked
 19289  0111E2  84DF               	bsf	indf2,2,c
 19290  0111E4                     l588:
 19291                           
 19292                           ; BSR set to: 0
 19293                           ;My_button.c: 11: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 19294  0111E4  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19295  0111E8  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19296  0111EC  0E10               	movlw	16
 19297  0111EE  18DE               	xorwf	postinc2,w,c
 19298  0111F0  10DE               	iorwf	postinc2,w,c
 19299  0111F2  A4D8               	btfss	status,2,c
 19300  0111F4  D009               	goto	l589
 19301                           
 19302                           ; BSR set to: 0
 19303  0111F6  0100               	movlb	0	; () banked
 19304  0111F8  EE20 F003          	lfsr	2,3
 19305  0111FC  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19306  0111FE  26D9               	addwf	fsr2l,f,c
 19307  011200  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19308  011202  22DA               	addwfc	fsr2h,f,c
 19309  011204  0100               	movlb	0	; () banked
 19310  011206  82DF               	bsf	indf2,1,c
 19311  011208                     l589:
 19312                           
 19313                           ; BSR set to: 0
 19314                           ;My_button.c: 12: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 19315  011208  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19316  01120C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19317  011210  0E02               	movlw	2
 19318  011212  18DE               	xorwf	postinc2,w,c
 19319  011214  10DE               	iorwf	postinc2,w,c
 19320  011216  A4D8               	btfss	status,2,c
 19321  011218  D009               	goto	l590
 19322                           
 19323                           ; BSR set to: 0
 19324  01121A  0100               	movlb	0	; () banked
 19325  01121C  EE20 F003          	lfsr	2,3
 19326  011220  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19327  011222  26D9               	addwf	fsr2l,f,c
 19328  011224  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19329  011226  22DA               	addwfc	fsr2h,f,c
 19330  011228  0100               	movlb	0	; () banked
 19331  01122A  80DF               	bsf	indf2,0,c
 19332  01122C                     l590:
 19333                           
 19334                           ; BSR set to: 0
 19335                           ;My_button.c: 13: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 19336  01122C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19337  011230  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19338  011234  0E85               	movlw	133
 19339  011236  5CDE               	subwf	postinc2,w,c
 19340  011238  0E03               	movlw	3
 19341  01123A  58DE               	subwfb	postinc2,w,c
 19342  01123C  B0D8               	btfsc	status,0,c
 19343  01123E  0012               	return	
 19344                           
 19345                           ; BSR set to: 0
 19346  011240  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19347  011244  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19348  011248  2ADE               	incf	postinc2,f,c
 19349  01124A  0E00               	movlw	0
 19350  01124C  22DD               	addwfc	postdec2,f,c
 19351                           
 19352                           ; BSR set to: 0
 19353                           ;My_button.c: 14: } else {
 19354  01124E  0012               	return	
 19355  011250                     l8005:
 19356                           
 19357                           ; BSR set to: 0
 19358                           ;My_button.c: 15: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 19359  011250  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19360  011254  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19361  011258  0E84               	movlw	132
 19362  01125A  5CDE               	subwf	postinc2,w,c
 19363  01125C  0E03               	movlw	3
 19364  01125E  58DE               	subwfb	postinc2,w,c
 19365  011260  A0D8               	btfss	status,0,c
 19366  011262  D00A               	goto	l8009
 19367                           
 19368                           ; BSR set to: 0
 19369  011264  0100               	movlb	0	; () banked
 19370  011266  EE20 F002          	lfsr	2,2
 19371  01126A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19372  01126C  26D9               	addwf	fsr2l,f,c
 19373  01126E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19374  011270  22DA               	addwfc	fsr2h,f,c
 19375  011272  0100               	movlb	0	; () banked
 19376  011274  8EDF               	bsf	indf2,7,c
 19377  011276  D08F               	goto	l8037
 19378  011278                     l8009:
 19379                           
 19380                           ; BSR set to: 0
 19381                           ;My_button.c: 16: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 19382  011278  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19383  01127C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19384  011280  0EBC               	movlw	188
 19385  011282  5CDE               	subwf	postinc2,w,c
 19386  011284  0E02               	movlw	2
 19387  011286  58DE               	subwfb	postinc2,w,c
 19388  011288  A0D8               	btfss	status,0,c
 19389  01128A  D00A               	goto	l8013
 19390                           
 19391                           ; BSR set to: 0
 19392  01128C  0100               	movlb	0	; () banked
 19393  01128E  EE20 F002          	lfsr	2,2
 19394  011292  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19395  011294  26D9               	addwf	fsr2l,f,c
 19396  011296  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19397  011298  22DA               	addwfc	fsr2h,f,c
 19398  01129A  0100               	movlb	0	; () banked
 19399  01129C  8CDF               	bsf	indf2,6,c
 19400  01129E  D07B               	goto	l8037
 19401  0112A0                     l8013:
 19402                           
 19403                           ; BSR set to: 0
 19404                           ;My_button.c: 17: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 19405  0112A0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19406  0112A4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19407  0112A8  0EF4               	movlw	244
 19408  0112AA  5CDE               	subwf	postinc2,w,c
 19409  0112AC  0E01               	movlw	1
 19410  0112AE  58DE               	subwfb	postinc2,w,c
 19411  0112B0  A0D8               	btfss	status,0,c
 19412  0112B2  D00A               	goto	l8017
 19413                           
 19414                           ; BSR set to: 0
 19415  0112B4  0100               	movlb	0	; () banked
 19416  0112B6  EE20 F002          	lfsr	2,2
 19417  0112BA  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19418  0112BC  26D9               	addwf	fsr2l,f,c
 19419  0112BE  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19420  0112C0  22DA               	addwfc	fsr2h,f,c
 19421  0112C2  0100               	movlb	0	; () banked
 19422  0112C4  8ADF               	bsf	indf2,5,c
 19423  0112C6  D067               	goto	l8037
 19424  0112C8                     l8017:
 19425                           
 19426                           ; BSR set to: 0
 19427                           ;My_button.c: 18: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 19428  0112C8  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19429  0112CC  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19430  0112D0  0E2C               	movlw	44
 19431  0112D2  5CDE               	subwf	postinc2,w,c
 19432  0112D4  0E01               	movlw	1
 19433  0112D6  58DE               	subwfb	postinc2,w,c
 19434  0112D8  A0D8               	btfss	status,0,c
 19435  0112DA  D00A               	goto	l8021
 19436                           
 19437                           ; BSR set to: 0
 19438  0112DC  0100               	movlb	0	; () banked
 19439  0112DE  EE20 F002          	lfsr	2,2
 19440  0112E2  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19441  0112E4  26D9               	addwf	fsr2l,f,c
 19442  0112E6  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19443  0112E8  22DA               	addwfc	fsr2h,f,c
 19444  0112EA  0100               	movlb	0	; () banked
 19445  0112EC  88DF               	bsf	indf2,4,c
 19446  0112EE  D053               	goto	l8037
 19447  0112F0                     l8021:
 19448                           
 19449                           ; BSR set to: 0
 19450                           ;My_button.c: 19: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 19451  0112F0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19452  0112F4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19453  0112F8  0E01               	movlw	1
 19454  0112FA  50DB               	movf	plusw2,w,c
 19455  0112FC  E104               	bnz	u8240
 19456  0112FE  0E96               	movlw	150
 19457  011300  5CDE               	subwf	postinc2,w,c
 19458  011302  A0D8               	btfss	status,0,c
 19459  011304  D00A               	goto	l8025
 19460  011306                     u8240:
 19461                           
 19462                           ; BSR set to: 0
 19463  011306  0100               	movlb	0	; () banked
 19464  011308  EE20 F002          	lfsr	2,2
 19465  01130C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19466  01130E  26D9               	addwf	fsr2l,f,c
 19467  011310  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19468  011312  22DA               	addwfc	fsr2h,f,c
 19469  011314  0100               	movlb	0	; () banked
 19470  011316  86DF               	bsf	indf2,3,c
 19471  011318  D03E               	goto	l8037
 19472  01131A                     l8025:
 19473                           
 19474                           ; BSR set to: 0
 19475                           ;My_button.c: 20: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 19476  01131A  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19477  01131E  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19478  011322  0E01               	movlw	1
 19479  011324  50DB               	movf	plusw2,w,c
 19480  011326  E104               	bnz	u8250
 19481  011328  0E3C               	movlw	60
 19482  01132A  5CDE               	subwf	postinc2,w,c
 19483  01132C  A0D8               	btfss	status,0,c
 19484  01132E  D00A               	goto	l8029
 19485  011330                     u8250:
 19486                           
 19487                           ; BSR set to: 0
 19488  011330  0100               	movlb	0	; () banked
 19489  011332  EE20 F002          	lfsr	2,2
 19490  011336  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19491  011338  26D9               	addwf	fsr2l,f,c
 19492  01133A  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19493  01133C  22DA               	addwfc	fsr2h,f,c
 19494  01133E  0100               	movlb	0	; () banked
 19495  011340  84DF               	bsf	indf2,2,c
 19496  011342  D029               	goto	l8037
 19497  011344                     l8029:
 19498                           
 19499                           ; BSR set to: 0
 19500                           ;My_button.c: 21: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 19501  011344  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19502  011348  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19503  01134C  0E01               	movlw	1
 19504  01134E  50DB               	movf	plusw2,w,c
 19505  011350  E104               	bnz	u8260
 19506  011352  0E10               	movlw	16
 19507  011354  5CDE               	subwf	postinc2,w,c
 19508  011356  A0D8               	btfss	status,0,c
 19509  011358  D00A               	goto	l8033
 19510  01135A                     u8260:
 19511                           
 19512                           ; BSR set to: 0
 19513  01135A  0100               	movlb	0	; () banked
 19514  01135C  EE20 F002          	lfsr	2,2
 19515  011360  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19516  011362  26D9               	addwf	fsr2l,f,c
 19517  011364  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19518  011366  22DA               	addwfc	fsr2h,f,c
 19519  011368  0100               	movlb	0	; () banked
 19520  01136A  82DF               	bsf	indf2,1,c
 19521  01136C  D014               	goto	l8037
 19522  01136E                     l8033:
 19523                           
 19524                           ; BSR set to: 0
 19525                           ;My_button.c: 22: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 19526  01136E  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19527  011372  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19528  011376  0E01               	movlw	1
 19529  011378  50DB               	movf	plusw2,w,c
 19530  01137A  E104               	bnz	u8270
 19531  01137C  0E02               	movlw	2
 19532  01137E  5CDE               	subwf	postinc2,w,c
 19533  011380  A0D8               	btfss	status,0,c
 19534  011382  D009               	goto	l8037
 19535  011384                     u8270:
 19536                           
 19537                           ; BSR set to: 0
 19538  011384  0100               	movlb	0	; () banked
 19539  011386  EE20 F002          	lfsr	2,2
 19540  01138A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19541  01138C  26D9               	addwf	fsr2l,f,c
 19542  01138E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19543  011390  22DA               	addwfc	fsr2h,f,c
 19544  011392  0100               	movlb	0	; () banked
 19545  011394  80DF               	bsf	indf2,0,c
 19546  011396                     l8037:
 19547                           
 19548                           ; BSR set to: 0
 19549                           ;My_button.c: 23: bt->cnt_sw = 0;
 19550  011396  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19551  01139A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19552  01139E  0E00               	movlw	0
 19553  0113A0  6EDE               	movwf	postinc2,c
 19554  0113A2  0E00               	movlw	0
 19555  0113A4  6EDD               	movwf	postdec2,c
 19556                           
 19557                           ; BSR set to: 0
 19558                           ;My_button.c: 24: bt->flags &= 0x00FF;
 19559  0113A6  0100               	movlb	0	; () banked
 19560  0113A8  EE20 F002          	lfsr	2,2
 19561  0113AC  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19562  0113AE  26D9               	addwf	fsr2l,f,c
 19563  0113B0  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19564  0113B2  22DA               	addwfc	fsr2h,f,c
 19565  0113B4  0EFF               	movlw	255
 19566  0113B6  16DE               	andwf	postinc2,f,c
 19567  0113B8  0E00               	movlw	0
 19568  0113BA  16DD               	andwf	postdec2,f,c
 19569  0113BC  0012               	return	
 19570  0113BE                     __end_of_button_timer_interrupt:
 19571                           	opt stack 0
 19572                           tblptru	equ	0xFF8
 19573                           tblptrh	equ	0xFF7
 19574                           tblptrl	equ	0xFF6
 19575                           tablat	equ	0xFF5
 19576                           prodh	equ	0xFF4
 19577                           prodl	equ	0xFF3
 19578                           intcon	equ	0xFF2
 19579                           intcon2	equ	0xFF1
 19580                           postinc0	equ	0xFEE
 19581                           wreg	equ	0xFE8
 19582                           indf1	equ	0xFE7
 19583                           postinc1	equ	0xFE6
 19584                           postdec1	equ	0xFE5
 19585                           fsr1h	equ	0xFE2
 19586                           fsr1l	equ	0xFE1
 19587                           indf2	equ	0xFDF
 19588                           postinc2	equ	0xFDE
 19589                           postdec2	equ	0xFDD
 19590                           plusw2	equ	0xFDB
 19591                           fsr2h	equ	0xFDA
 19592                           fsr2l	equ	0xFD9
 19593                           status	equ	0xFD8
 19594                           
 19595 ;; *************** function ___lwdiv *****************
 19596 ;; Defined at:
 19597 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 19598 ;; Parameters:    Size  Location     Type
 19599 ;;  dividend        2   28[BANK0 ] unsigned int 
 19600 ;;  divisor         2   30[BANK0 ] unsigned int 
 19601 ;; Auto vars:     Size  Location     Type
 19602 ;;  quotient        2   33[BANK0 ] unsigned int 
 19603 ;;  counter         1   32[BANK0 ] unsigned char 
 19604 ;; Return value:  Size  Location     Type
 19605 ;;                  2   28[BANK0 ] unsigned int 
 19606 ;; Registers used:
 19607 ;;		wreg, status,2, status,0
 19608 ;; Tracked objects:
 19609 ;;		On entry : 0/0
 19610 ;;		On exit  : 0/0
 19611 ;;		Unchanged: 0/0
 19612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19613 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19614 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19616 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19617 ;;Total ram usage:        7 bytes
 19618 ;; Hardware stack levels used:    1
 19619 ;; Hardware stack levels required when called:   11
 19620 ;; This function calls:
 19621 ;;		Nothing
 19622 ;; This function is called by:
 19623 ;;		_data_out
 19624 ;;		_display_LCD
 19625 ;;		_ctmu_set_ratio
 19626 ;;		_ctmu_sampling
 19627 ;;		_ringbuf_put_num
 19628 ;; This function uses a non-reentrant model
 19629 ;;
 19630                           
 19631                           	psect	text78
 19632  015E8E                     __ptext78:
 19633                           	opt stack 0
 19634  015E8E                     ___lwdiv:
 19635                           	opt stack 16
 19636                           
 19637                           ; BSR set to: 0
 19638                           ;incstack = 0
 19639  015E8E  0E00               	movlw	0
 19640  015E90  0100               	movlb	0	; () banked
 19641  015E92  6F82               	movwf	(___lwdiv@quotient+1)& (0+255),b
 19642  015E94  0E00               	movlw	0
 19643  015E96  6F81               	movwf	___lwdiv@quotient& (0+255),b
 19644                           
 19645                           ; BSR set to: 0
 19646  015E98  0100               	movlb	0	; () banked
 19647  015E9A  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19648  015E9C  0100               	movlb	0	; () banked
 19649  015E9E  117F               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 19650  015EA0  B4D8               	btfsc	status,2,c
 19651  015EA2  D02C               	goto	l2299
 19652                           
 19653                           ; BSR set to: 0
 19654  015EA4  0E01               	movlw	1
 19655  015EA6  0100               	movlb	0	; () banked
 19656  015EA8  6F80               	movwf	___lwdiv@counter& (0+255),b
 19657  015EAA  D006               	goto	l10901
 19658  015EAC                     l10899:
 19659                           
 19660                           ; BSR set to: 0
 19661  015EAC  0100               	movlb	0	; () banked
 19662  015EAE  90D8               	bcf	status,0,c
 19663  015EB0  377E               	rlcf	___lwdiv@divisor& (0+255),f,b
 19664  015EB2  377F               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 19665  015EB4  0100               	movlb	0	; () banked
 19666  015EB6  2B80               	incf	___lwdiv@counter& (0+255),f,b
 19667  015EB8                     l10901:
 19668                           
 19669                           ; BSR set to: 0
 19670  015EB8  0100               	movlb	0	; () banked
 19671  015EBA  AF7F               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 19672  015EBC  D7F7               	goto	l10899
 19673  015EBE                     l10903:
 19674                           
 19675                           ; BSR set to: 0
 19676  015EBE  0100               	movlb	0	; () banked
 19677  015EC0  90D8               	bcf	status,0,c
 19678  015EC2  3781               	rlcf	___lwdiv@quotient& (0+255),f,b
 19679  015EC4  3782               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 19680                           
 19681                           ; BSR set to: 0
 19682  015EC6  0100               	movlb	0	; () banked
 19683  015EC8  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19684  015ECA  0100               	movlb	0	; () banked
 19685  015ECC  5D7C               	subwf	___lwdiv@dividend& (0+255),w,b
 19686  015ECE  0100               	movlb	0	; () banked
 19687  015ED0  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 19688  015ED2  0100               	movlb	0	; () banked
 19689  015ED4  597D               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 19690  015ED6  A0D8               	btfss	status,0,c
 19691  015ED8  D00A               	goto	l10911
 19692                           
 19693                           ; BSR set to: 0
 19694  015EDA  0100               	movlb	0	; () banked
 19695  015EDC  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19696  015EDE  0100               	movlb	0	; () banked
 19697  015EE0  5F7C               	subwf	___lwdiv@dividend& (0+255),f,b
 19698  015EE2  0100               	movlb	0	; () banked
 19699  015EE4  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 19700  015EE6  0100               	movlb	0	; () banked
 19701  015EE8  5B7D               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 19702                           
 19703                           ; BSR set to: 0
 19704  015EEA  0100               	movlb	0	; () banked
 19705  015EEC  8181               	bsf	___lwdiv@quotient& (0+255),0,b
 19706  015EEE                     l10911:
 19707                           
 19708                           ; BSR set to: 0
 19709  015EEE  0100               	movlb	0	; () banked
 19710  015EF0  90D8               	bcf	status,0,c
 19711  015EF2  337F               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 19712  015EF4  337E               	rrcf	___lwdiv@divisor& (0+255),f,b
 19713                           
 19714                           ; BSR set to: 0
 19715  015EF6  0100               	movlb	0	; () banked
 19716  015EF8  2F80               	decfsz	___lwdiv@counter& (0+255),f,b
 19717  015EFA  D7E1               	goto	l10903
 19718  015EFC                     l2299:
 19719                           
 19720                           ; BSR set to: 0
 19721  015EFC  C081  F07C         	movff	___lwdiv@quotient,?___lwdiv
 19722  015F00  C082  F07D         	movff	___lwdiv@quotient+1,?___lwdiv+1
 19723                           
 19724                           ; BSR set to: 0
 19725  015F04  0012               	return		;funcret
 19726  015F06                     __end_of___lwdiv:
 19727                           	opt stack 0
 19728                           tblptru	equ	0xFF8
 19729                           tblptrh	equ	0xFF7
 19730                           tblptrl	equ	0xFF6
 19731                           tablat	equ	0xFF5
 19732                           prodh	equ	0xFF4
 19733                           prodl	equ	0xFF3
 19734                           intcon	equ	0xFF2
 19735                           intcon2	equ	0xFF1
 19736                           postinc0	equ	0xFEE
 19737                           wreg	equ	0xFE8
 19738                           indf1	equ	0xFE7
 19739                           postinc1	equ	0xFE6
 19740                           postdec1	equ	0xFE5
 19741                           fsr1h	equ	0xFE2
 19742                           fsr1l	equ	0xFE1
 19743                           indf2	equ	0xFDF
 19744                           postinc2	equ	0xFDE
 19745                           postdec2	equ	0xFDD
 19746                           plusw2	equ	0xFDB
 19747                           fsr2h	equ	0xFDA
 19748                           fsr2l	equ	0xFD9
 19749                           status	equ	0xFD8
 19750                           
 19751 ;; *************** function _CTMU_read *****************
 19752 ;; Defined at:
 19753 ;;		line 267 in file "../../../My_library/My_PIC.c"
 19754 ;; Parameters:    Size  Location     Type
 19755 ;;  ch              1    wreg     unsigned char 
 19756 ;; Auto vars:     Size  Location     Type
 19757 ;;  ch              1   16[BANK0 ] unsigned char 
 19758 ;;  i               1   21[BANK0 ] unsigned char 
 19759 ;;  sum             4   17[BANK0 ] unsigned long 
 19760 ;; Return value:  Size  Location     Type
 19761 ;;                  2   13[BANK0 ] unsigned int 
 19762 ;; Registers used:
 19763 ;;		wreg, status,2, status,0, cstack
 19764 ;; Tracked objects:
 19765 ;;		On entry : 0/0
 19766 ;;		On exit  : 0/0
 19767 ;;		Unchanged: 0/0
 19768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19769 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19770 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19771 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19772 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19773 ;;Total ram usage:        9 bytes
 19774 ;; Hardware stack levels used:    1
 19775 ;; Hardware stack levels required when called:   12
 19776 ;; This function calls:
 19777 ;;		___lldiv
 19778 ;; This function is called by:
 19779 ;;		_ctmu_set_ratio
 19780 ;;		_ctmu_sampling
 19781 ;; This function uses a non-reentrant model
 19782 ;;
 19783                           
 19784                           	psect	text79
 19785  015192                     __ptext79:
 19786                           	opt stack 0
 19787  015192                     _CTMU_read:
 19788                           	opt stack 15
 19789                           
 19790                           ; BSR set to: 0
 19791                           ;incstack = 0
 19792                           ;CTMU_read@ch stored from wreg
 19793  015192  0100               	movlb	0	; () banked
 19794  015194  6F70               	movwf	CTMU_read@ch& (0+255),b
 19795                           
 19796                           ;My_PIC.c: 268: uint32_t sum = 0;
 19797  015196  0E00               	movlw	0
 19798  015198  0100               	movlb	0	; () banked
 19799  01519A  6F71               	movwf	CTMU_read@sum& (0+255),b
 19800  01519C  0E00               	movlw	0
 19801  01519E  6F72               	movwf	(CTMU_read@sum+1)& (0+255),b
 19802  0151A0  0E00               	movlw	0
 19803  0151A2  6F73               	movwf	(CTMU_read@sum+2)& (0+255),b
 19804  0151A4  0E00               	movlw	0
 19805  0151A6  6F74               	movwf	(CTMU_read@sum+3)& (0+255),b
 19806                           
 19807                           ;My_PIC.c: 269: for (uint8_t i = 0; i < 10; i++) {
 19808  0151A8  0E00               	movlw	0
 19809  0151AA  0100               	movlb	0	; () banked
 19810  0151AC  6F75               	movwf	CTMU_read@i& (0+255),b
 19811  0151AE                     l10657:
 19812                           
 19813                           ; BSR set to: 0
 19814  0151AE  0E09               	movlw	9
 19815  0151B0  0100               	movlb	0	; () banked
 19816  0151B2  6575               	cpfsgt	CTMU_read@i& (0+255),b
 19817  0151B4  D001               	goto	l10661
 19818  0151B6  D02B               	goto	l10689
 19819  0151B8                     l10661:
 19820                           
 19821                           ; BSR set to: 0
 19822                           ;My_PIC.c: 270: ADCON0bits.CHS = ch;
 19823  0151B8  C070  F06F         	movff	CTMU_read@ch,??_CTMU_read
 19824  0151BC  0100               	movlb	0	; () banked
 19825  0151BE  476F               	rlncf	??_CTMU_read& (0+255),f,b
 19826  0151C0  476F               	rlncf	??_CTMU_read& (0+255),f,b
 19827  0151C2  50C2               	movf	4034,w,c	;volatile
 19828  0151C4  0100               	movlb	0	; () banked
 19829  0151C6  196F               	xorwf	??_CTMU_read& (0+255),w,b
 19830  0151C8  0BC3               	andlw	-61
 19831  0151CA  196F               	xorwf	??_CTMU_read& (0+255),w,b
 19832  0151CC  6EC2               	movwf	4034,c	;volatile
 19833                           
 19834                           ; BSR set to: 0
 19835                           ;My_PIC.c: 271: CTMUCONHbits.CTMUEN = 1;
 19836  0151CE  8EB3               	bsf	4019,7,c	;volatile
 19837                           
 19838                           ; BSR set to: 0
 19839                           ;My_PIC.c: 272: CTMUCONLbits.EDG1STAT = 0;
 19840  0151D0  90B2               	bcf	4018,0,c	;volatile
 19841                           
 19842                           ; BSR set to: 0
 19843                           ;My_PIC.c: 273: CTMUCONLbits.EDG2STAT = 0;
 19844  0151D2  92B2               	bcf	4018,1,c	;volatile
 19845                           
 19846                           ; BSR set to: 0
 19847                           ;My_PIC.c: 276: CTMUCONHbits.IDISSEN = 1;
 19848  0151D4  82B3               	bsf	4019,1,c	;volatile
 19849                           
 19850                           ; BSR set to: 0
 19851                           ;My_PIC.c: 277: _delay((unsigned long)((20)*(48000000/4000000.0)));
 19852  0151D6  0E50               	movlw	80
 19853  0151D8                     u14897:
 19854  0151D8  2EE8               	decfsz	wreg,f,c
 19855  0151DA  D7FE               	goto	u14897
 19856                           
 19857                           ;My_PIC.c: 278: CTMUCONHbits.IDISSEN = 0;
 19858  0151DC  92B3               	bcf	4019,1,c	;volatile
 19859                           
 19860                           ;My_PIC.c: 280: CTMUCONLbits.EDG1STAT = 1;
 19861  0151DE  80B2               	bsf	4018,0,c	;volatile
 19862                           
 19863                           ;My_PIC.c: 281: _delay((unsigned long)((5)*(48000000/4000000.0)));
 19864  0151E0  0E14               	movlw	20
 19865  0151E2                     u14907:
 19866  0151E2  2EE8               	decfsz	wreg,f,c
 19867  0151E4  D7FE               	goto	u14907
 19868                           
 19869                           ;My_PIC.c: 282: CTMUCONLbits.EDG1STAT = 0;
 19870  0151E6  90B2               	bcf	4018,0,c	;volatile
 19871                           
 19872                           ;My_PIC.c: 284: PIR1bits.ADIF = 0;
 19873  0151E8  9C9E               	bcf	3998,6,c	;volatile
 19874                           
 19875                           ;My_PIC.c: 285: ADCON0bits.GO = 1;
 19876  0151EA  82C2               	bsf	4034,1,c	;volatile
 19877  0151EC                     l783:
 19878  0151EC  AC9E               	btfss	3998,6,c	;volatile
 19879  0151EE  D7FE               	goto	l783
 19880                           
 19881                           ;My_PIC.c: 287: sum += ADRES;
 19882  0151F0  50C3               	movf	4035,w,c	;volatile
 19883  0151F2  0100               	movlb	0	; () banked
 19884  0151F4  2771               	addwf	CTMU_read@sum& (0+255),f,b
 19885  0151F6  50C4               	movf	4036,w,c	;volatile
 19886  0151F8  0100               	movlb	0	; () banked
 19887  0151FA  2372               	addwfc	(CTMU_read@sum+1)& (0+255),f,b
 19888  0151FC  0E00               	movlw	0
 19889  0151FE  0100               	movlb	0	; () banked
 19890  015200  2373               	addwfc	(CTMU_read@sum+2)& (0+255),f,b
 19891  015202  0E00               	movlw	0
 19892  015204  0100               	movlb	0	; () banked
 19893  015206  2374               	addwfc	(CTMU_read@sum+3)& (0+255),f,b
 19894  015208  0100               	movlb	0	; () banked
 19895  01520A  2B75               	incf	CTMU_read@i& (0+255),f,b
 19896  01520C  D7D0               	goto	l10657
 19897  01520E                     l10689:
 19898                           
 19899                           ; BSR set to: 0
 19900                           ;My_PIC.c: 288: }
 19901                           ;My_PIC.c: 289: return sum / 10 / 4;
 19902  01520E  C071  F060         	movff	CTMU_read@sum,___lldiv@dividend
 19903  015212  C072  F061         	movff	CTMU_read@sum+1,___lldiv@dividend+1
 19904  015216  C073  F062         	movff	CTMU_read@sum+2,___lldiv@dividend+2
 19905  01521A  C074  F063         	movff	CTMU_read@sum+3,___lldiv@dividend+3
 19906  01521E  0E0A               	movlw	10
 19907  015220  0100               	movlb	0	; () banked
 19908  015222  6F64               	movwf	___lldiv@divisor& (0+255),b
 19909  015224  0E00               	movlw	0
 19910  015226  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 19911  015228  0E00               	movlw	0
 19912  01522A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 19913  01522C  0E00               	movlw	0
 19914  01522E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 19915  015230  EC89  F0A9         	call	___lldiv	;wreg free
 19916  015234  0E03               	movlw	3
 19917  015236  D007               	goto	u12180
 19918  015238                     u12185:
 19919  015238  0100               	movlb	0	; () banked
 19920  01523A  90D8               	bcf	status,0,c
 19921  01523C  3363               	rrcf	(?___lldiv+3)& (0+255),f,b
 19922  01523E  3362               	rrcf	(?___lldiv+2)& (0+255),f,b
 19923  015240  0100               	movlb	0	; () banked
 19924  015242  3361               	rrcf	(?___lldiv+1)& (0+255),f,b
 19925  015244  3360               	rrcf	?___lldiv& (0+255),f,b
 19926  015246                     u12180:
 19927  015246  2EE8               	decfsz	wreg,f,c
 19928  015248  D7F7               	goto	u12185
 19929  01524A  C060  F06D         	movff	?___lldiv,?_CTMU_read
 19930  01524E  C061  F06E         	movff	?___lldiv+1,?_CTMU_read+1
 19931  015252  0012               	return	
 19932  015254                     __end_of_CTMU_read:
 19933                           	opt stack 0
 19934                           tblptru	equ	0xFF8
 19935                           tblptrh	equ	0xFF7
 19936                           tblptrl	equ	0xFF6
 19937                           tablat	equ	0xFF5
 19938                           prodh	equ	0xFF4
 19939                           prodl	equ	0xFF3
 19940                           intcon	equ	0xFF2
 19941                           intcon2	equ	0xFF1
 19942                           postinc0	equ	0xFEE
 19943                           wreg	equ	0xFE8
 19944                           indf1	equ	0xFE7
 19945                           postinc1	equ	0xFE6
 19946                           postdec1	equ	0xFE5
 19947                           fsr1h	equ	0xFE2
 19948                           fsr1l	equ	0xFE1
 19949                           indf2	equ	0xFDF
 19950                           postinc2	equ	0xFDE
 19951                           postdec2	equ	0xFDD
 19952                           plusw2	equ	0xFDB
 19953                           fsr2h	equ	0xFDA
 19954                           fsr2l	equ	0xFD9
 19955                           status	equ	0xFD8
 19956                           
 19957 ;; *************** function ___lldiv *****************
 19958 ;; Defined at:
 19959 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 19960 ;; Parameters:    Size  Location     Type
 19961 ;;  dividend        4    0[BANK0 ] unsigned long 
 19962 ;;  divisor         4    4[BANK0 ] unsigned long 
 19963 ;; Auto vars:     Size  Location     Type
 19964 ;;  quotient        4    8[BANK0 ] unsigned long 
 19965 ;;  counter         1   12[BANK0 ] unsigned char 
 19966 ;; Return value:  Size  Location     Type
 19967 ;;                  4    0[BANK0 ] unsigned long 
 19968 ;; Registers used:
 19969 ;;		wreg, status,2, status,0
 19970 ;; Tracked objects:
 19971 ;;		On entry : 0/0
 19972 ;;		On exit  : 0/0
 19973 ;;		Unchanged: 0/0
 19974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19975 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19976 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19978 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19979 ;;Total ram usage:       13 bytes
 19980 ;; Hardware stack levels used:    1
 19981 ;; Hardware stack levels required when called:   11
 19982 ;; This function calls:
 19983 ;;		Nothing
 19984 ;; This function is called by:
 19985 ;;		_integrate_current
 19986 ;;		_display_LCD
 19987 ;;		_CTMU_read
 19988 ;;		_get_quot_rem
 19989 ;;		_sprintf
 19990 ;; This function uses a non-reentrant model
 19991 ;;
 19992                           
 19993                           	psect	text80
 19994  015312                     __ptext80:
 19995                           	opt stack 0
 19996  015312                     ___lldiv:
 19997                           	opt stack 13
 19998                           
 19999                           ; BSR set to: 0
 20000                           ;incstack = 0
 20001  015312  0E00               	movlw	0
 20002  015314  0100               	movlb	0	; () banked
 20003  015316  6F68               	movwf	___lldiv@quotient& (0+255),b
 20004  015318  0E00               	movlw	0
 20005  01531A  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 20006  01531C  0E00               	movlw	0
 20007  01531E  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 20008  015320  0E00               	movlw	0
 20009  015322  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 20010                           
 20011                           ; BSR set to: 0
 20012  015324  0100               	movlb	0	; () banked
 20013  015326  5164               	movf	___lldiv@divisor& (0+255),w,b
 20014  015328  0100               	movlb	0	; () banked
 20015  01532A  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 20016  01532C  0100               	movlb	0	; () banked
 20017  01532E  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 20018  015330  0100               	movlb	0	; () banked
 20019  015332  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 20020  015334  B4D8               	btfsc	status,2,c
 20021  015336  D042               	goto	l2246
 20022                           
 20023                           ; BSR set to: 0
 20024  015338  0E01               	movlw	1
 20025  01533A  0100               	movlb	0	; () banked
 20026  01533C  6F6C               	movwf	___lldiv@counter& (0+255),b
 20027  01533E  D008               	goto	l10139
 20028  015340                     l10137:
 20029                           
 20030                           ; BSR set to: 0
 20031  015340  0100               	movlb	0	; () banked
 20032  015342  90D8               	bcf	status,0,c
 20033  015344  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 20034  015346  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 20035  015348  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 20036  01534A  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 20037  01534C  0100               	movlb	0	; () banked
 20038  01534E  2B6C               	incf	___lldiv@counter& (0+255),f,b
 20039  015350                     l10139:
 20040                           
 20041                           ; BSR set to: 0
 20042  015350  0100               	movlb	0	; () banked
 20043  015352  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 20044  015354  D7F5               	goto	l10137
 20045  015356                     l10141:
 20046                           
 20047                           ; BSR set to: 0
 20048  015356  0100               	movlb	0	; () banked
 20049  015358  90D8               	bcf	status,0,c
 20050  01535A  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 20051  01535C  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 20052  01535E  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 20053  015360  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 20054                           
 20055                           ; BSR set to: 0
 20056  015362  0100               	movlb	0	; () banked
 20057  015364  5164               	movf	___lldiv@divisor& (0+255),w,b
 20058  015366  0100               	movlb	0	; () banked
 20059  015368  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 20060  01536A  0100               	movlb	0	; () banked
 20061  01536C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20062  01536E  0100               	movlb	0	; () banked
 20063  015370  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 20064  015372  0100               	movlb	0	; () banked
 20065  015374  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20066  015376  0100               	movlb	0	; () banked
 20067  015378  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 20068  01537A  0100               	movlb	0	; () banked
 20069  01537C  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20070  01537E  0100               	movlb	0	; () banked
 20071  015380  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 20072  015382  A0D8               	btfss	status,0,c
 20073  015384  D012               	goto	l10149
 20074                           
 20075                           ; BSR set to: 0
 20076  015386  0100               	movlb	0	; () banked
 20077  015388  5164               	movf	___lldiv@divisor& (0+255),w,b
 20078  01538A  0100               	movlb	0	; () banked
 20079  01538C  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 20080  01538E  0100               	movlb	0	; () banked
 20081  015390  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20082  015392  0100               	movlb	0	; () banked
 20083  015394  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 20084  015396  0100               	movlb	0	; () banked
 20085  015398  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20086  01539A  0100               	movlb	0	; () banked
 20087  01539C  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 20088  01539E  0100               	movlb	0	; () banked
 20089  0153A0  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20090  0153A2  0100               	movlb	0	; () banked
 20091  0153A4  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 20092                           
 20093                           ; BSR set to: 0
 20094  0153A6  0100               	movlb	0	; () banked
 20095  0153A8  8168               	bsf	___lldiv@quotient& (0+255),0,b
 20096  0153AA                     l10149:
 20097                           
 20098                           ; BSR set to: 0
 20099  0153AA  0100               	movlb	0	; () banked
 20100  0153AC  90D8               	bcf	status,0,c
 20101  0153AE  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 20102  0153B0  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 20103  0153B2  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 20104  0153B4  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 20105                           
 20106                           ; BSR set to: 0
 20107  0153B6  0100               	movlb	0	; () banked
 20108  0153B8  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 20109  0153BA  D7CD               	goto	l10141
 20110  0153BC                     l2246:
 20111                           
 20112                           ; BSR set to: 0
 20113  0153BC  C068  F060         	movff	___lldiv@quotient,?___lldiv
 20114  0153C0  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 20115  0153C4  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 20116  0153C8  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 20117                           
 20118                           ; BSR set to: 0
 20119  0153CC  0012               	return		;funcret
 20120  0153CE                     __end_of___lldiv:
 20121                           	opt stack 0
 20122                           tblptru	equ	0xFF8
 20123                           tblptrh	equ	0xFF7
 20124                           tblptrl	equ	0xFF6
 20125                           tablat	equ	0xFF5
 20126                           prodh	equ	0xFF4
 20127                           prodl	equ	0xFF3
 20128                           intcon	equ	0xFF2
 20129                           intcon2	equ	0xFF1
 20130                           postinc0	equ	0xFEE
 20131                           wreg	equ	0xFE8
 20132                           indf1	equ	0xFE7
 20133                           postinc1	equ	0xFE6
 20134                           postdec1	equ	0xFE5
 20135                           fsr1h	equ	0xFE2
 20136                           fsr1l	equ	0xFE1
 20137                           indf2	equ	0xFDF
 20138                           postinc2	equ	0xFDE
 20139                           postdec2	equ	0xFDD
 20140                           plusw2	equ	0xFDB
 20141                           fsr2h	equ	0xFDA
 20142                           fsr2l	equ	0xFD9
 20143                           status	equ	0xFD8
 20144                           
 20145 ;; *************** function _USB_task *****************
 20146 ;; Defined at:
 20147 ;;		line 66 in file "../../../My_library/My_usb_cdc.c"
 20148 ;; Parameters:    Size  Location     Type
 20149 ;;		None
 20150 ;; Auto vars:     Size  Location     Type
 20151 ;;  rx_len          2   20[BANK0 ] int 
 20152 ;;  data            1   22[BANK0 ] unsigned char 
 20153 ;; Return value:  Size  Location     Type
 20154 ;;		None               void
 20155 ;; Registers used:
 20156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20157 ;; Tracked objects:
 20158 ;;		On entry : 0/0
 20159 ;;		On exit  : 0/0
 20160 ;;		Unchanged: 0/0
 20161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20163 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20165 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20166 ;;Total ram usage:        3 bytes
 20167 ;; Hardware stack levels used:    1
 20168 ;; Hardware stack levels required when called:   14
 20169 ;; This function calls:
 20170 ;;		_get_string_usb
 20171 ;;		_put_string_usb
 20172 ;;		_ringbuf_num
 20173 ;;		_ringbuf_pop
 20174 ;;		_ringbuf_put
 20175 ;; This function is called by:
 20176 ;;		_main
 20177 ;; This function uses a non-reentrant model
 20178 ;;
 20179                           
 20180                           	psect	text81
 20181  015ADC                     __ptext81:
 20182                           	opt stack 0
 20183  015ADC                     _USB_task:
 20184                           	opt stack 16
 20185                           
 20186                           ;My_usb_cdc.c: 67: char data;
 20187                           ;My_usb_cdc.c: 68: int rx_len;
 20188                           ;My_usb_cdc.c: 69: rx_len = get_string_usb(&data, 1);
 20189                           
 20190                           ; BSR set to: 0
 20191                           ;incstack = 0
 20192  015ADC  0E76               	movlw	low USB_task@data
 20193  015ADE  0100               	movlb	0	; () banked
 20194  015AE0  6F6D               	movwf	get_string_usb@s& (0+255),b
 20195  015AE2  0E00               	movlw	high USB_task@data
 20196  015AE4  0100               	movlb	0	; () banked
 20197  015AE6  6F6E               	movwf	(get_string_usb@s+1)& (0+255),b
 20198  015AE8  0E00               	movlw	0
 20199  015AEA  0100               	movlb	0	; () banked
 20200  015AEC  6F70               	movwf	(get_string_usb@len+1)& (0+255),b
 20201  015AEE  0E01               	movlw	1
 20202  015AF0  6F6F               	movwf	get_string_usb@len& (0+255),b
 20203  015AF2  ECD0  F0B2         	call	_get_string_usb	;wreg free
 20204  015AF6  C06D  F074         	movff	?_get_string_usb,USB_task@rx_len
 20205  015AFA  C06E  F075         	movff	?_get_string_usb+1,USB_task@rx_len+1
 20206                           
 20207                           ;My_usb_cdc.c: 70: if (rx_len) {
 20208  015AFE  0100               	movlb	0	; () banked
 20209  015B00  5174               	movf	USB_task@rx_len& (0+255),w,b
 20210  015B02  0100               	movlb	0	; () banked
 20211  015B04  1175               	iorwf	(USB_task@rx_len+1)& (0+255),w,b
 20212  015B06  B4D8               	btfsc	status,2,c
 20213  015B08  D00A               	goto	l1285
 20214                           
 20215                           ; BSR set to: 0
 20216                           ;My_usb_cdc.c: 71: ringbuf_put(&usb_rx, data);
 20217  015B0A  0EB2               	movlw	low _usb_rx
 20218  015B0C  0100               	movlb	0	; () banked
 20219  015B0E  6F68               	movwf	ringbuf_put@rb& (0+255),b
 20220  015B10  0E02               	movlw	high _usb_rx
 20221  015B12  0100               	movlb	0	; () banked
 20222  015B14  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 20223  015B16  C076  F06A         	movff	USB_task@data,ringbuf_put@asciicode
 20224  015B1A  EC69  F0A6         	call	_ringbuf_put	;wreg free
 20225  015B1E                     l1285:
 20226                           
 20227                           ;My_usb_cdc.c: 72: }
 20228                           ;My_usb_cdc.c: 73: if (ringbuf_num(&usb_tx)) {
 20229  015B1E  0EBA               	movlw	low _usb_tx
 20230  015B20  0100               	movlb	0	; () banked
 20231  015B22  6F60               	movwf	ringbuf_num@rb& (0+255),b
 20232  015B24  0E02               	movlw	high _usb_tx
 20233  015B26  0100               	movlb	0	; () banked
 20234  015B28  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 20235  015B2A  ECA6  F0A1         	call	_ringbuf_num	;wreg free
 20236  015B2E  0100               	movlb	0	; () banked
 20237  015B30  5160               	movf	?_ringbuf_num& (0+255),w,b
 20238  015B32  0100               	movlb	0	; () banked
 20239  015B34  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 20240  015B36  B4D8               	btfsc	status,2,c
 20241  015B38  0012               	return	
 20242                           
 20243                           ; BSR set to: 0
 20244                           ;My_usb_cdc.c: 74: data = ringbuf_pop(&usb_tx);
 20245  015B3A  0EBA               	movlw	low _usb_tx
 20246  015B3C  0100               	movlb	0	; () banked
 20247  015B3E  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 20248  015B40  0E02               	movlw	high _usb_tx
 20249  015B42  0100               	movlb	0	; () banked
 20250  015B44  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 20251  015B46  EC3A  F0A7         	call	_ringbuf_pop	;wreg free
 20252  015B4A  0100               	movlb	0	; () banked
 20253  015B4C  6F76               	movwf	USB_task@data& (0+255),b
 20254                           
 20255                           ; BSR set to: 0
 20256                           ;My_usb_cdc.c: 75: put_string_usb(&data, 1);
 20257  015B4E  0E76               	movlw	low USB_task@data
 20258  015B50  0100               	movlb	0	; () banked
 20259  015B52  6F6C               	movwf	put_string_usb@s& (0+255),b
 20260  015B54  0E00               	movlw	high USB_task@data
 20261  015B56  0100               	movlb	0	; () banked
 20262  015B58  6F6D               	movwf	(put_string_usb@s+1)& (0+255),b
 20263  015B5A  0E00               	movlw	0
 20264  015B5C  0100               	movlb	0	; () banked
 20265  015B5E  6F6F               	movwf	(put_string_usb@len+1)& (0+255),b
 20266  015B60  0E01               	movlw	1
 20267  015B62  6F6E               	movwf	put_string_usb@len& (0+255),b
 20268  015B64  EC9A  F0B4         	call	_put_string_usb	;wreg free
 20269  015B68  0012               	return	
 20270  015B6A                     __end_of_USB_task:
 20271                           	opt stack 0
 20272                           tblptru	equ	0xFF8
 20273                           tblptrh	equ	0xFF7
 20274                           tblptrl	equ	0xFF6
 20275                           tablat	equ	0xFF5
 20276                           prodh	equ	0xFF4
 20277                           prodl	equ	0xFF3
 20278                           intcon	equ	0xFF2
 20279                           intcon2	equ	0xFF1
 20280                           postinc0	equ	0xFEE
 20281                           wreg	equ	0xFE8
 20282                           indf1	equ	0xFE7
 20283                           postinc1	equ	0xFE6
 20284                           postdec1	equ	0xFE5
 20285                           fsr1h	equ	0xFE2
 20286                           fsr1l	equ	0xFE1
 20287                           indf2	equ	0xFDF
 20288                           postinc2	equ	0xFDE
 20289                           postdec2	equ	0xFDD
 20290                           plusw2	equ	0xFDB
 20291                           fsr2h	equ	0xFDA
 20292                           fsr2l	equ	0xFD9
 20293                           status	equ	0xFD8
 20294                           
 20295 ;; *************** function _ringbuf_put *****************
 20296 ;; Defined at:
 20297 ;;		line 20 in file "../../../My_library/My_ringbuf.c"
 20298 ;; Parameters:    Size  Location     Type
 20299 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 20300 ;;		 -> terminal_task@command(8), uart_rx(8), usb_rx(8), usb_tx(8), 
 20301 ;;  asciicode       1   10[BANK0 ] unsigned char 
 20302 ;; Auto vars:     Size  Location     Type
 20303 ;;		None
 20304 ;; Return value:  Size  Location     Type
 20305 ;;		None               void
 20306 ;; Registers used:
 20307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20308 ;; Tracked objects:
 20309 ;;		On entry : 0/0
 20310 ;;		On exit  : 0/0
 20311 ;;		Unchanged: 0/0
 20312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20313 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20315 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20316 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20317 ;;Total ram usage:        7 bytes
 20318 ;; Hardware stack levels used:    1
 20319 ;; Hardware stack levels required when called:   12
 20320 ;; This function calls:
 20321 ;;		_ringbuf_num
 20322 ;; This function is called by:
 20323 ;;		_ringbuf_put_num
 20324 ;;		_ringbuf_put_str
 20325 ;;		_terminal_task
 20326 ;;		_USB_task
 20327 ;;		_UART_ISR
 20328 ;; This function uses a non-reentrant model
 20329 ;;
 20330                           
 20331                           	psect	text82
 20332  014CD2                     __ptext82:
 20333                           	opt stack 0
 20334  014CD2                     _ringbuf_put:
 20335                           	opt stack 13
 20336                           
 20337                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 20338                           
 20339                           ;incstack = 0
 20340  014CD2  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 20341  014CD6  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 20342  014CDA  ECA6  F0A1         	call	_ringbuf_num	;wreg free
 20343  014CDE  0100               	movlb	0	; () banked
 20344  014CE0  EE20 F002          	lfsr	2,2
 20345  014CE4  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20346  014CE6  26D9               	addwf	fsr2l,f,c
 20347  014CE8  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20348  014CEA  22DA               	addwfc	fsr2h,f,c
 20349  014CEC  50DE               	movf	postinc2,w,c
 20350  014CEE  0100               	movlb	0	; () banked
 20351  014CF0  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 20352  014CF2  50DE               	movf	postinc2,w,c
 20353  014CF4  0100               	movlb	0	; () banked
 20354  014CF6  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 20355  014CF8  B0D8               	btfsc	status,0,c
 20356  014CFA  0012               	return	
 20357                           
 20358                           ; BSR set to: 0
 20359                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 20360  014CFC  0100               	movlb	0	; () banked
 20361  014CFE  EE20 F004          	lfsr	2,4
 20362  014D02  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20363  014D04  26D9               	addwf	fsr2l,f,c
 20364  014D06  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20365  014D08  22DA               	addwfc	fsr2h,f,c
 20366  014D0A  CFDE F06B          	movff	postinc2,??_ringbuf_put
 20367  014D0E  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
 20368  014D12  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
 20369  014D16  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 20370  014D1A  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
 20371  014D1E  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
 20372  014D22  0100               	movlb	0	; () banked
 20373  014D24  516B               	movf	??_ringbuf_put& (0+255),w,b
 20374  014D26  0100               	movlb	0	; () banked
 20375  014D28  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 20376  014D2A  6ED9               	movwf	fsr2l,c
 20377  014D2C  0100               	movlb	0	; () banked
 20378  014D2E  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
 20379  014D30  0100               	movlb	0	; () banked
 20380  014D32  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 20381  014D34  6EDA               	movwf	fsr2h,c
 20382  014D36  C06A  FFDF         	movff	ringbuf_put@asciicode,indf2
 20383                           
 20384                           ; BSR set to: 0
 20385                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 20386  014D3A  0100               	movlb	0	; () banked
 20387  014D3C  EE20 F002          	lfsr	2,2
 20388  014D40  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20389  014D42  26D9               	addwf	fsr2l,f,c
 20390  014D44  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20391  014D46  22DA               	addwfc	fsr2h,f,c
 20392  014D48  0100               	movlb	0	; () banked
 20393  014D4A  EE10 F004          	lfsr	1,4
 20394  014D4E  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20395  014D50  26E1               	addwf	fsr1l,f,c
 20396  014D52  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20397  014D54  22E2               	addwfc	fsr1h,f,c
 20398  014D56  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
 20399  014D5A  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
 20400  014D5E  0E01               	movlw	1
 20401  014D60  0100               	movlb	0	; () banked
 20402  014D62  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 20403  014D64  0E00               	movlw	0
 20404  014D66  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 20405  014D68  50DE               	movf	postinc2,w,c
 20406  014D6A  0100               	movlb	0	; () banked
 20407  014D6C  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 20408  014D6E  50DE               	movf	postinc2,w,c
 20409  014D70  0100               	movlb	0	; () banked
 20410  014D72  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 20411  014D74  B0D8               	btfsc	status,0,c
 20412  014D76  D00B               	goto	l10165
 20413                           
 20414                           ; BSR set to: 0
 20415  014D78  0100               	movlb	0	; () banked
 20416  014D7A  EE20 F004          	lfsr	2,4
 20417  014D7E  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20418  014D80  26D9               	addwf	fsr2l,f,c
 20419  014D82  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20420  014D84  22DA               	addwfc	fsr2h,f,c
 20421  014D86  2ADE               	incf	postinc2,f,c
 20422  014D88  0E00               	movlw	0
 20423  014D8A  22DD               	addwfc	postdec2,f,c
 20424  014D8C  0012               	return	
 20425  014D8E                     l10165:
 20426                           
 20427                           ; BSR set to: 0
 20428                           ;My_ringbuf.c: 24: else rb->head = 0;
 20429  014D8E  0100               	movlb	0	; () banked
 20430  014D90  EE20 F004          	lfsr	2,4
 20431  014D94  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20432  014D96  26D9               	addwf	fsr2l,f,c
 20433  014D98  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20434  014D9A  22DA               	addwfc	fsr2h,f,c
 20435  014D9C  0E00               	movlw	0
 20436  014D9E  6EDE               	movwf	postinc2,c
 20437  014DA0  0E00               	movlw	0
 20438  014DA2  6EDD               	movwf	postdec2,c
 20439                           
 20440                           ; BSR set to: 0
 20441  014DA4  0012               	return	
 20442  014DA6                     __end_of_ringbuf_put:
 20443                           	opt stack 0
 20444                           tblptru	equ	0xFF8
 20445                           tblptrh	equ	0xFF7
 20446                           tblptrl	equ	0xFF6
 20447                           tablat	equ	0xFF5
 20448                           prodh	equ	0xFF4
 20449                           prodl	equ	0xFF3
 20450                           intcon	equ	0xFF2
 20451                           intcon2	equ	0xFF1
 20452                           postinc0	equ	0xFEE
 20453                           wreg	equ	0xFE8
 20454                           indf1	equ	0xFE7
 20455                           postinc1	equ	0xFE6
 20456                           postdec1	equ	0xFE5
 20457                           fsr1h	equ	0xFE2
 20458                           fsr1l	equ	0xFE1
 20459                           indf2	equ	0xFDF
 20460                           postinc2	equ	0xFDE
 20461                           postdec2	equ	0xFDD
 20462                           plusw2	equ	0xFDB
 20463                           fsr2h	equ	0xFDA
 20464                           fsr2l	equ	0xFD9
 20465                           status	equ	0xFD8
 20466                           
 20467 ;; *************** function _ringbuf_pop *****************
 20468 ;; Defined at:
 20469 ;;		line 45 in file "../../../My_library/My_ringbuf.c"
 20470 ;; Parameters:    Size  Location     Type
 20471 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 20472 ;;		 -> terminal_task@command(8), uart_tx(8), usb_rx(8), usb_tx(8), 
 20473 ;; Auto vars:     Size  Location     Type
 20474 ;;  ret             1   14[BANK0 ] unsigned char 
 20475 ;; Return value:  Size  Location     Type
 20476 ;;                  1    wreg      unsigned char 
 20477 ;; Registers used:
 20478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20479 ;; Tracked objects:
 20480 ;;		On entry : 0/0
 20481 ;;		On exit  : 0/0
 20482 ;;		Unchanged: 0/0
 20483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20484 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20485 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20486 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20487 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20488 ;;Total ram usage:        7 bytes
 20489 ;; Hardware stack levels used:    1
 20490 ;; Hardware stack levels required when called:   12
 20491 ;; This function calls:
 20492 ;;		_ringbuf_num
 20493 ;; This function is called by:
 20494 ;;		_terminal_task
 20495 ;;		_USB_task
 20496 ;;		_UART_ISR
 20497 ;; This function uses a non-reentrant model
 20498 ;;
 20499                           
 20500                           	psect	text83
 20501  014E74                     __ptext83:
 20502                           	opt stack 0
 20503  014E74                     _ringbuf_pop:
 20504                           	opt stack 17
 20505                           
 20506                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 20507                           
 20508                           ; BSR set to: 0
 20509                           ;incstack = 0
 20510  014E74  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 20511  014E78  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 20512  014E7C  ECA6  F0A1         	call	_ringbuf_num	;wreg free
 20513  014E80  0100               	movlb	0	; () banked
 20514  014E82  5160               	movf	?_ringbuf_num& (0+255),w,b
 20515  014E84  0100               	movlb	0	; () banked
 20516  014E86  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 20517  014E88  B4D8               	btfsc	status,2,c
 20518  014E8A  D058               	goto	l12005
 20519                           
 20520                           ; BSR set to: 0
 20521                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 20522  014E8C  0100               	movlb	0	; () banked
 20523  014E8E  EE20 F006          	lfsr	2,6
 20524  014E92  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20525  014E94  26D9               	addwf	fsr2l,f,c
 20526  014E96  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20527  014E98  22DA               	addwfc	fsr2h,f,c
 20528  014E9A  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 20529  014E9E  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 20530  014EA2  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 20531  014EA6  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 20532  014EAA  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 20533  014EAE  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 20534  014EB2  0100               	movlb	0	; () banked
 20535  014EB4  516A               	movf	??_ringbuf_pop& (0+255),w,b
 20536  014EB6  0100               	movlb	0	; () banked
 20537  014EB8  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 20538  014EBA  6ED9               	movwf	fsr2l,c
 20539  014EBC  0100               	movlb	0	; () banked
 20540  014EBE  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 20541  014EC0  0100               	movlb	0	; () banked
 20542  014EC2  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 20543  014EC4  6EDA               	movwf	fsr2h,c
 20544  014EC6  50DF               	movf	indf2,w,c
 20545  014EC8  0100               	movlb	0	; () banked
 20546  014ECA  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 20547                           
 20548                           ; BSR set to: 0
 20549                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 20550  014ECC  0100               	movlb	0	; () banked
 20551  014ECE  EE20 F002          	lfsr	2,2
 20552  014ED2  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20553  014ED4  26D9               	addwf	fsr2l,f,c
 20554  014ED6  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20555  014ED8  22DA               	addwfc	fsr2h,f,c
 20556  014EDA  0100               	movlb	0	; () banked
 20557  014EDC  EE10 F006          	lfsr	1,6
 20558  014EE0  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20559  014EE2  26E1               	addwf	fsr1l,f,c
 20560  014EE4  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20561  014EE6  22E2               	addwfc	fsr1h,f,c
 20562  014EE8  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 20563  014EEC  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 20564  014EF0  0E01               	movlw	1
 20565  014EF2  0100               	movlb	0	; () banked
 20566  014EF4  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 20567  014EF6  0E00               	movlw	0
 20568  014EF8  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 20569  014EFA  50DE               	movf	postinc2,w,c
 20570  014EFC  0100               	movlb	0	; () banked
 20571  014EFE  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 20572  014F00  50DE               	movf	postinc2,w,c
 20573  014F02  0100               	movlb	0	; () banked
 20574  014F04  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 20575  014F06  B0D8               	btfsc	status,0,c
 20576  014F08  D00B               	goto	l11997
 20577                           
 20578                           ; BSR set to: 0
 20579                           ;My_ringbuf.c: 49: rb->tail++;
 20580  014F0A  0100               	movlb	0	; () banked
 20581  014F0C  EE20 F006          	lfsr	2,6
 20582  014F10  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20583  014F12  26D9               	addwf	fsr2l,f,c
 20584  014F14  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20585  014F16  22DA               	addwfc	fsr2h,f,c
 20586  014F18  2ADE               	incf	postinc2,f,c
 20587  014F1A  0E00               	movlw	0
 20588  014F1C  22DD               	addwfc	postdec2,f,c
 20589                           
 20590                           ;My_ringbuf.c: 50: } else {
 20591  014F1E  D00B               	goto	l11999
 20592  014F20                     l11997:
 20593                           
 20594                           ; BSR set to: 0
 20595                           ;My_ringbuf.c: 51: rb->tail = 0;
 20596  014F20  0100               	movlb	0	; () banked
 20597  014F22  EE20 F006          	lfsr	2,6
 20598  014F26  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20599  014F28  26D9               	addwf	fsr2l,f,c
 20600  014F2A  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20601  014F2C  22DA               	addwfc	fsr2h,f,c
 20602  014F2E  0E00               	movlw	0
 20603  014F30  6EDE               	movwf	postinc2,c
 20604  014F32  0E00               	movlw	0
 20605  014F34  6EDD               	movwf	postdec2,c
 20606  014F36                     l11999:
 20607                           
 20608                           ; BSR set to: 0
 20609                           ;My_ringbuf.c: 52: }
 20610                           ;My_ringbuf.c: 53: return ret;
 20611  014F36  0100               	movlb	0	; () banked
 20612  014F38  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 20613                           
 20614                           ; BSR set to: 0
 20615                           ;My_ringbuf.c: 54: } else {
 20616                           
 20617                           ; BSR set to: 0
 20618  014F3A  0012               	return	
 20619  014F3C                     l12005:
 20620                           
 20621                           ; BSR set to: 0
 20622                           ;My_ringbuf.c: 55: return 0;
 20623  014F3C  0E00               	movlw	0
 20624                           
 20625                           ; BSR set to: 0
 20626  014F3E  0012               	return	
 20627  014F40                     __end_of_ringbuf_pop:
 20628                           	opt stack 0
 20629                           tblptru	equ	0xFF8
 20630                           tblptrh	equ	0xFF7
 20631                           tblptrl	equ	0xFF6
 20632                           tablat	equ	0xFF5
 20633                           prodh	equ	0xFF4
 20634                           prodl	equ	0xFF3
 20635                           intcon	equ	0xFF2
 20636                           intcon2	equ	0xFF1
 20637                           postinc0	equ	0xFEE
 20638                           wreg	equ	0xFE8
 20639                           indf1	equ	0xFE7
 20640                           postinc1	equ	0xFE6
 20641                           postdec1	equ	0xFE5
 20642                           fsr1h	equ	0xFE2
 20643                           fsr1l	equ	0xFE1
 20644                           indf2	equ	0xFDF
 20645                           postinc2	equ	0xFDE
 20646                           postdec2	equ	0xFDD
 20647                           plusw2	equ	0xFDB
 20648                           fsr2h	equ	0xFDA
 20649                           fsr2l	equ	0xFD9
 20650                           status	equ	0xFD8
 20651                           
 20652 ;; *************** function _ringbuf_num *****************
 20653 ;; Defined at:
 20654 ;;		line 12 in file "../../../My_library/My_ringbuf.c"
 20655 ;; Parameters:    Size  Location     Type
 20656 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 20657 ;;		 -> terminal_task@command(8), uart_rx(8), uart_tx(8), usb_rx(8), 
 20658 ;;		 -> usb_tx(8), 
 20659 ;; Auto vars:     Size  Location     Type
 20660 ;;		None
 20661 ;; Return value:  Size  Location     Type
 20662 ;;                  2    0[BANK0 ] unsigned int 
 20663 ;; Registers used:
 20664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 20665 ;; Tracked objects:
 20666 ;;		On entry : 0/0
 20667 ;;		On exit  : 0/0
 20668 ;;		Unchanged: 0/0
 20669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20670 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20672 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20673 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20674 ;;Total ram usage:        8 bytes
 20675 ;; Hardware stack levels used:    1
 20676 ;; Hardware stack levels required when called:   11
 20677 ;; This function calls:
 20678 ;;		Nothing
 20679 ;; This function is called by:
 20680 ;;		_ringbuf_put
 20681 ;;		_ringbuf_pop
 20682 ;;		_ringbuf_backspace
 20683 ;;		_terminal_task
 20684 ;;		_USB_task
 20685 ;;		_UART_ISR
 20686 ;;		_UART_task
 20687 ;; This function uses a non-reentrant model
 20688 ;;
 20689                           
 20690                           	psect	text84
 20691  01434C                     __ptext84:
 20692                           	opt stack 0
 20693  01434C                     _ringbuf_num:
 20694                           	opt stack 13
 20695                           
 20696                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 20697                           
 20698                           ; BSR set to: 0
 20699                           ;incstack = 0
 20700  01434C  0100               	movlb	0	; () banked
 20701  01434E  EE20 F006          	lfsr	2,6
 20702  014352  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20703  014354  26D9               	addwf	fsr2l,f,c
 20704  014356  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20705  014358  22DA               	addwfc	fsr2h,f,c
 20706  01435A  0100               	movlb	0	; () banked
 20707  01435C  EE10 F004          	lfsr	1,4
 20708  014360  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20709  014362  26E1               	addwf	fsr1l,f,c
 20710  014364  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20711  014366  22E2               	addwfc	fsr1h,f,c
 20712  014368  50DE               	movf	postinc2,w,c
 20713  01436A  5CE6               	subwf	postinc1,w,c
 20714  01436C  50DE               	movf	postinc2,w,c
 20715  01436E  58E6               	subwfb	postinc1,w,c
 20716  014370  A0D8               	btfss	status,0,c
 20717  014372  D028               	goto	l10057
 20718                           
 20719                           ; BSR set to: 0
 20720                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 20721  014374  0100               	movlb	0	; () banked
 20722  014376  EE20 F004          	lfsr	2,4
 20723  01437A  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20724  01437C  26D9               	addwf	fsr2l,f,c
 20725  01437E  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20726  014380  22DA               	addwfc	fsr2h,f,c
 20727  014382  CFDE F062          	movff	postinc2,??_ringbuf_num
 20728  014386  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 20729  01438A  0100               	movlb	0	; () banked
 20730  01438C  EE20 F006          	lfsr	2,6
 20731  014390  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20732  014392  26D9               	addwf	fsr2l,f,c
 20733  014394  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20734  014396  22DA               	addwfc	fsr2h,f,c
 20735  014398  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 20736  01439C  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 20737  0143A0  0100               	movlb	0	; () banked
 20738  0143A2  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 20739  0143A4  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 20740  0143A6  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 20741  0143A8  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 20742  0143AA  0100               	movlb	0	; () banked
 20743  0143AC  5162               	movf	??_ringbuf_num& (0+255),w,b
 20744  0143AE  0100               	movlb	0	; () banked
 20745  0143B0  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 20746  0143B2  0100               	movlb	0	; () banked
 20747  0143B4  6F60               	movwf	?_ringbuf_num& (0+255),b
 20748  0143B6  0100               	movlb	0	; () banked
 20749  0143B8  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 20750  0143BA  0100               	movlb	0	; () banked
 20751  0143BC  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 20752  0143BE  0100               	movlb	0	; () banked
 20753  0143C0  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 20754                           
 20755                           ; BSR set to: 0
 20756                           ;My_ringbuf.c: 15: } else {
 20757                           
 20758                           ; BSR set to: 0
 20759  0143C2  0012               	return	
 20760  0143C4                     l10057:
 20761                           
 20762                           ; BSR set to: 0
 20763                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 20764  0143C4  0100               	movlb	0	; () banked
 20765  0143C6  EE20 F004          	lfsr	2,4
 20766  0143CA  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20767  0143CC  26D9               	addwf	fsr2l,f,c
 20768  0143CE  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20769  0143D0  22DA               	addwfc	fsr2h,f,c
 20770  0143D2  CFDE F062          	movff	postinc2,??_ringbuf_num
 20771  0143D6  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 20772  0143DA  0100               	movlb	0	; () banked
 20773  0143DC  EE20 F002          	lfsr	2,2
 20774  0143E0  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20775  0143E2  26D9               	addwf	fsr2l,f,c
 20776  0143E4  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20777  0143E6  22DA               	addwfc	fsr2h,f,c
 20778  0143E8  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 20779  0143EC  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 20780  0143F0  0100               	movlb	0	; () banked
 20781  0143F2  EE20 F006          	lfsr	2,6
 20782  0143F6  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20783  0143F8  26D9               	addwf	fsr2l,f,c
 20784  0143FA  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20785  0143FC  22DA               	addwfc	fsr2h,f,c
 20786  0143FE  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 20787  014402  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 20788  014406  0100               	movlb	0	; () banked
 20789  014408  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 20790  01440A  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 20791  01440C  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 20792  01440E  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 20793  014410  0100               	movlb	0	; () banked
 20794  014412  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 20795  014414  0100               	movlb	0	; () banked
 20796  014416  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 20797  014418  0100               	movlb	0	; () banked
 20798  01441A  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 20799  01441C  0100               	movlb	0	; () banked
 20800  01441E  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 20801  014420  0100               	movlb	0	; () banked
 20802  014422  5162               	movf	??_ringbuf_num& (0+255),w,b
 20803  014424  0100               	movlb	0	; () banked
 20804  014426  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 20805  014428  0100               	movlb	0	; () banked
 20806  01442A  6F60               	movwf	?_ringbuf_num& (0+255),b
 20807  01442C  0100               	movlb	0	; () banked
 20808  01442E  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 20809  014430  0100               	movlb	0	; () banked
 20810  014432  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 20811  014434  0100               	movlb	0	; () banked
 20812  014436  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 20813                           
 20814                           ; BSR set to: 0
 20815  014438  0012               	return	
 20816  01443A                     __end_of_ringbuf_num:
 20817                           	opt stack 0
 20818                           tblptru	equ	0xFF8
 20819                           tblptrh	equ	0xFF7
 20820                           tblptrl	equ	0xFF6
 20821                           tablat	equ	0xFF5
 20822                           prodh	equ	0xFF4
 20823                           prodl	equ	0xFF3
 20824                           intcon	equ	0xFF2
 20825                           intcon2	equ	0xFF1
 20826                           postinc0	equ	0xFEE
 20827                           wreg	equ	0xFE8
 20828                           indf1	equ	0xFE7
 20829                           postinc1	equ	0xFE6
 20830                           postdec1	equ	0xFE5
 20831                           fsr1h	equ	0xFE2
 20832                           fsr1l	equ	0xFE1
 20833                           indf2	equ	0xFDF
 20834                           postinc2	equ	0xFDE
 20835                           postdec2	equ	0xFDD
 20836                           plusw2	equ	0xFDB
 20837                           fsr2h	equ	0xFDA
 20838                           fsr2l	equ	0xFD9
 20839                           status	equ	0xFD8
 20840                           
 20841 ;; *************** function _put_string_usb *****************
 20842 ;; Defined at:
 20843 ;;		line 21 in file "../../../My_library/My_usb_cdc.c"
 20844 ;; Parameters:    Size  Location     Type
 20845 ;;  s               2   12[BANK0 ] PTR unsigned char 
 20846 ;;		 -> USB_task@data(1), 
 20847 ;;  len             2   14[BANK0 ] int 
 20848 ;; Auto vars:     Size  Location     Type
 20849 ;;		None
 20850 ;; Return value:  Size  Location     Type
 20851 ;;                  2   12[BANK0 ] int 
 20852 ;; Registers used:
 20853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20854 ;; Tracked objects:
 20855 ;;		On entry : 0/0
 20856 ;;		On exit  : 0/0
 20857 ;;		Unchanged: 0/0
 20858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20859 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20862 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20863 ;;Total ram usage:        4 bytes
 20864 ;; Hardware stack levels used:    1
 20865 ;; Hardware stack levels required when called:   13
 20866 ;; This function calls:
 20867 ;;		_CDCTxService
 20868 ;;		_is_usb_available
 20869 ;;		_putUSBUSART
 20870 ;; This function is called by:
 20871 ;;		_USB_task
 20872 ;; This function uses a non-reentrant model
 20873 ;;
 20874                           
 20875                           	psect	text85
 20876  016934                     __ptext85:
 20877                           	opt stack 0
 20878  016934                     _put_string_usb:
 20879                           	opt stack 16
 20880                           
 20881                           ;My_usb_cdc.c: 22: if (!is_usb_available()) {
 20882                           
 20883                           ; BSR set to: 0
 20884                           ;incstack = 0
 20885  016934  ECFC  F0B5         	call	_is_usb_available	;wreg free
 20886  016938  0900               	iorlw	0
 20887  01693A  B4D8               	btfsc	status,2,c
 20888  01693C  0012               	return	
 20889  01693E  D002               	goto	l12041
 20890  016940                     l12039:
 20891  016940  EC1A  F097         	call	_CDCTxService	;wreg free
 20892  016944                     l12041:
 20893  016944  0100               	movlb	0	; () banked
 20894  016946  51FC               	movf	_cdc_trf_state& (0+255),w,b
 20895  016948  A4D8               	btfss	status,2,c
 20896  01694A  D7FA               	goto	l12039
 20897                           
 20898                           ; BSR set to: 0
 20899                           ;My_usb_cdc.c: 27: putUSBUSART(s, len);
 20900                           
 20901                           ; BSR set to: 0
 20902  01694C  C06C  F060         	movff	put_string_usb@s,putUSBUSART@data
 20903  016950  C06D  F061         	movff	put_string_usb@s+1,putUSBUSART@data+1
 20904  016954  C06E  F062         	movff	put_string_usb@len,putUSBUSART@length
 20905  016958  EC99  F0B5         	call	_putUSBUSART	;wreg free
 20906                           
 20907                           ;My_usb_cdc.c: 28: CDCTxService();
 20908  01695C  EC1A  F097         	call	_CDCTxService	;wreg free
 20909  016960  0012               	return	
 20910  016962                     __end_of_put_string_usb:
 20911                           	opt stack 0
 20912                           tblptru	equ	0xFF8
 20913                           tblptrh	equ	0xFF7
 20914                           tblptrl	equ	0xFF6
 20915                           tablat	equ	0xFF5
 20916                           prodh	equ	0xFF4
 20917                           prodl	equ	0xFF3
 20918                           intcon	equ	0xFF2
 20919                           intcon2	equ	0xFF1
 20920                           postinc0	equ	0xFEE
 20921                           wreg	equ	0xFE8
 20922                           indf1	equ	0xFE7
 20923                           postinc1	equ	0xFE6
 20924                           postdec1	equ	0xFE5
 20925                           fsr1h	equ	0xFE2
 20926                           fsr1l	equ	0xFE1
 20927                           indf2	equ	0xFDF
 20928                           postinc2	equ	0xFDE
 20929                           postdec2	equ	0xFDD
 20930                           plusw2	equ	0xFDB
 20931                           fsr2h	equ	0xFDA
 20932                           fsr2l	equ	0xFD9
 20933                           status	equ	0xFD8
 20934                           
 20935 ;; *************** function _putUSBUSART *****************
 20936 ;; Defined at:
 20937 ;;		line 613 in file "../../../My_library/usb/usb_device_cdc.c"
 20938 ;; Parameters:    Size  Location     Type
 20939 ;;  data            2    0[BANK0 ] PTR unsigned char 
 20940 ;;		 -> USB_task@data(1), 
 20941 ;;  length          1    2[BANK0 ] unsigned char 
 20942 ;; Auto vars:     Size  Location     Type
 20943 ;;		None
 20944 ;; Return value:  Size  Location     Type
 20945 ;;		None               void
 20946 ;; Registers used:
 20947 ;;		wreg, status,2, status,0
 20948 ;; Tracked objects:
 20949 ;;		On entry : 0/0
 20950 ;;		On exit  : 0/0
 20951 ;;		Unchanged: 0/0
 20952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20953 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20956 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20957 ;;Total ram usage:        3 bytes
 20958 ;; Hardware stack levels used:    1
 20959 ;; Hardware stack levels required when called:   11
 20960 ;; This function calls:
 20961 ;;		Nothing
 20962 ;; This function is called by:
 20963 ;;		_put_string_usb
 20964 ;; This function uses a non-reentrant model
 20965 ;;
 20966                           
 20967                           	psect	text86
 20968  016B32                     __ptext86:
 20969                           	opt stack 0
 20970  016B32                     _putUSBUSART:
 20971                           	opt stack 17
 20972                           
 20973                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 20974                           
 20975                           ;incstack = 0
 20976  016B32  98A0               	bcf	4000,4,c	;volatile
 20977                           
 20978                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 20979  016B34  0100               	movlb	0	; () banked
 20980  016B36  51FC               	movf	_cdc_trf_state& (0+255),w,b
 20981  016B38  A4D8               	btfss	status,2,c
 20982  016B3A  D00C               	goto	l11497
 20983                           
 20984                           ; BSR set to: 0
 20985                           ;usb_device_cdc.c: 640: {
 20986                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 20987  016B3C  C060  F113         	movff	putUSBUSART@data,_pCDCSrc
 20988  016B40  C061  F114         	movff	putUSBUSART@data+1,_pCDCSrc+1
 20989                           
 20990                           ; BSR set to: 0
 20991  016B44  C062  F0FD         	movff	putUSBUSART@length,_cdc_tx_len
 20992                           
 20993                           ; BSR set to: 0
 20994  016B48  0E01               	movlw	1
 20995  016B4A  0101               	movlb	1	; () banked
 20996  016B4C  6F24               	movwf	_cdc_mem_type& (0+255),b
 20997                           
 20998                           ; BSR set to: 1
 20999  016B4E  0E01               	movlw	1
 21000  016B50  0100               	movlb	0	; () banked
 21001  016B52  6FFC               	movwf	_cdc_trf_state& (0+255),b
 21002  016B54                     l11497:
 21003                           
 21004                           ; BSR set to: 0
 21005                           ;usb_device_cdc.c: 642: }
 21006                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 21007  016B54  88A0               	bsf	4000,4,c	;volatile
 21008                           
 21009                           ; BSR set to: 0
 21010  016B56  0012               	return		;funcret
 21011  016B58                     __end_of_putUSBUSART:
 21012                           	opt stack 0
 21013                           tblptru	equ	0xFF8
 21014                           tblptrh	equ	0xFF7
 21015                           tblptrl	equ	0xFF6
 21016                           tablat	equ	0xFF5
 21017                           prodh	equ	0xFF4
 21018                           prodl	equ	0xFF3
 21019                           intcon	equ	0xFF2
 21020                           intcon2	equ	0xFF1
 21021                           postinc0	equ	0xFEE
 21022                           wreg	equ	0xFE8
 21023                           indf1	equ	0xFE7
 21024                           postinc1	equ	0xFE6
 21025                           postdec1	equ	0xFE5
 21026                           fsr1h	equ	0xFE2
 21027                           fsr1l	equ	0xFE1
 21028                           indf2	equ	0xFDF
 21029                           postinc2	equ	0xFDE
 21030                           postdec2	equ	0xFDD
 21031                           plusw2	equ	0xFDB
 21032                           fsr2h	equ	0xFDA
 21033                           fsr2l	equ	0xFD9
 21034                           status	equ	0xFD8
 21035                           
 21036 ;; *************** function _get_string_usb *****************
 21037 ;; Defined at:
 21038 ;;		line 32 in file "../../../My_library/My_usb_cdc.c"
 21039 ;; Parameters:    Size  Location     Type
 21040 ;;  s               2   13[BANK0 ] PTR unsigned char 
 21041 ;;		 -> USB_task@data(1), 
 21042 ;;  len             2   15[BANK0 ] int 
 21043 ;; Auto vars:     Size  Location     Type
 21044 ;;  rx_len          2   18[BANK0 ] int 
 21045 ;; Return value:  Size  Location     Type
 21046 ;;                  2   13[BANK0 ] int 
 21047 ;; Registers used:
 21048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21049 ;; Tracked objects:
 21050 ;;		On entry : 0/0
 21051 ;;		On exit  : 0/0
 21052 ;;		Unchanged: 0/0
 21053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21054 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21055 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21056 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21057 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21058 ;;Total ram usage:        7 bytes
 21059 ;; Hardware stack levels used:    1
 21060 ;; Hardware stack levels required when called:   13
 21061 ;; This function calls:
 21062 ;;		_CDCTxService
 21063 ;;		_getsUSBUSART
 21064 ;;		_is_usb_available
 21065 ;; This function is called by:
 21066 ;;		_USB_task
 21067 ;; This function uses a non-reentrant model
 21068 ;;
 21069                           
 21070                           	psect	text87
 21071  0165A0                     __ptext87:
 21072                           	opt stack 0
 21073  0165A0                     _get_string_usb:
 21074                           	opt stack 16
 21075                           
 21076                           ;My_usb_cdc.c: 33: int rx_len;
 21077                           ;My_usb_cdc.c: 34: if (!is_usb_available()) {
 21078                           
 21079                           ; BSR set to: 0
 21080                           ;incstack = 0
 21081  0165A0  ECFC  F0B5         	call	_is_usb_available	;wreg free
 21082  0165A4  0900               	iorlw	0
 21083  0165A6  A4D8               	btfss	status,2,c
 21084  0165A8  D008               	goto	l12057
 21085                           
 21086                           ;My_usb_cdc.c: 36: return 0;
 21087  0165AA  0E00               	movlw	0
 21088  0165AC  0100               	movlb	0	; () banked
 21089  0165AE  6F6E               	movwf	(?_get_string_usb+1)& (0+255),b
 21090  0165B0  0E00               	movlw	0
 21091  0165B2  6F6D               	movwf	?_get_string_usb& (0+255),b
 21092                           
 21093                           ; BSR set to: 0
 21094  0165B4  0012               	return	
 21095  0165B6                     l12055:
 21096                           
 21097                           ; BSR set to: 0
 21098  0165B6  EC1A  F097         	call	_CDCTxService	;wreg free
 21099  0165BA                     l12057:
 21100  0165BA  0100               	movlb	0	; () banked
 21101  0165BC  51FC               	movf	_cdc_trf_state& (0+255),w,b
 21102  0165BE  A4D8               	btfss	status,2,c
 21103  0165C0  D7FA               	goto	l12055
 21104                           
 21105                           ; BSR set to: 0
 21106                           ;My_usb_cdc.c: 39: rx_len = getsUSBUSART(s, len);
 21107                           
 21108                           ; BSR set to: 0
 21109  0165C2  C06D  F067         	movff	get_string_usb@s,getsUSBUSART@buffer
 21110  0165C6  C06E  F068         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
 21111  0165CA  C06F  F069         	movff	get_string_usb@len,getsUSBUSART@len
 21112  0165CE  EC01  F0A3         	call	_getsUSBUSART	;wreg free
 21113  0165D2  0100               	movlb	0	; () banked
 21114  0165D4  6F71               	movwf	??_get_string_usb& (0+255),b
 21115  0165D6  0100               	movlb	0	; () banked
 21116  0165D8  5171               	movf	??_get_string_usb& (0+255),w,b
 21117  0165DA  0100               	movlb	0	; () banked
 21118  0165DC  6F72               	movwf	get_string_usb@rx_len& (0+255),b
 21119  0165DE  6B73               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 21120                           
 21121                           ;My_usb_cdc.c: 40: CDCTxService();
 21122  0165E0  EC1A  F097         	call	_CDCTxService	;wreg free
 21123                           
 21124                           ;My_usb_cdc.c: 41: return rx_len;
 21125  0165E4  C072  F06D         	movff	get_string_usb@rx_len,?_get_string_usb
 21126  0165E8  C073  F06E         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 21127  0165EC  0012               	return	
 21128  0165EE                     __end_of_get_string_usb:
 21129                           	opt stack 0
 21130                           tblptru	equ	0xFF8
 21131                           tblptrh	equ	0xFF7
 21132                           tblptrl	equ	0xFF6
 21133                           tablat	equ	0xFF5
 21134                           prodh	equ	0xFF4
 21135                           prodl	equ	0xFF3
 21136                           intcon	equ	0xFF2
 21137                           intcon2	equ	0xFF1
 21138                           postinc0	equ	0xFEE
 21139                           wreg	equ	0xFE8
 21140                           indf1	equ	0xFE7
 21141                           postinc1	equ	0xFE6
 21142                           postdec1	equ	0xFE5
 21143                           fsr1h	equ	0xFE2
 21144                           fsr1l	equ	0xFE1
 21145                           indf2	equ	0xFDF
 21146                           postinc2	equ	0xFDE
 21147                           postdec2	equ	0xFDD
 21148                           plusw2	equ	0xFDB
 21149                           fsr2h	equ	0xFDA
 21150                           fsr2l	equ	0xFD9
 21151                           status	equ	0xFD8
 21152                           
 21153 ;; *************** function _is_usb_available *****************
 21154 ;; Defined at:
 21155 ;;		line 17 in file "../../../My_library/My_usb_cdc.c"
 21156 ;; Parameters:    Size  Location     Type
 21157 ;;		None
 21158 ;; Auto vars:     Size  Location     Type
 21159 ;;		None
 21160 ;; Return value:  Size  Location     Type
 21161 ;;                  1    wreg      unsigned char 
 21162 ;; Registers used:
 21163 ;;		wreg, status,2, status,0
 21164 ;; Tracked objects:
 21165 ;;		On entry : 0/0
 21166 ;;		On exit  : 0/0
 21167 ;;		Unchanged: 0/0
 21168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21170 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21172 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21173 ;;Total ram usage:        1 bytes
 21174 ;; Hardware stack levels used:    1
 21175 ;; Hardware stack levels required when called:   11
 21176 ;; This function calls:
 21177 ;;		Nothing
 21178 ;; This function is called by:
 21179 ;;		_put_string_usb
 21180 ;;		_get_string_usb
 21181 ;; This function uses a non-reentrant model
 21182 ;;
 21183                           
 21184                           	psect	text88
 21185  016BF8                     __ptext88:
 21186                           	opt stack 0
 21187  016BF8                     _is_usb_available:
 21188                           	opt stack 17
 21189                           
 21190                           ;My_usb_cdc.c: 18: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 21191                           
 21192                           ;incstack = 0
 21193  016BF8  0E00               	movlw	0
 21194  016BFA  0100               	movlb	0	; () banked
 21195  016BFC  6F60               	movwf	_is_usb_available$4110& (0+255),b
 21196                           
 21197                           ; BSR set to: 0
 21198  016BFE  0E1F               	movlw	31
 21199  016C00  6414               	cpfsgt	_USBDeviceState,c	;volatile
 21200  016C02  D005               	goto	l1253
 21201                           
 21202                           ; BSR set to: 0
 21203  016C04  B265               	btfsc	3941,1,c	;volatile
 21204  016C06  D003               	goto	l1253
 21205                           
 21206                           ; BSR set to: 0
 21207  016C08  0E01               	movlw	1
 21208  016C0A  0100               	movlb	0	; () banked
 21209  016C0C  6F60               	movwf	_is_usb_available$4110& (0+255),b
 21210  016C0E                     l1253:
 21211                           
 21212                           ; BSR set to: 0
 21213  016C0E  0100               	movlb	0	; () banked
 21214  016C10  5160               	movf	_is_usb_available$4110& (0+255),w,b
 21215  016C12  0012               	return	
 21216  016C14                     __end_of_is_usb_available:
 21217                           	opt stack 0
 21218                           tblptru	equ	0xFF8
 21219                           tblptrh	equ	0xFF7
 21220                           tblptrl	equ	0xFF6
 21221                           tablat	equ	0xFF5
 21222                           prodh	equ	0xFF4
 21223                           prodl	equ	0xFF3
 21224                           intcon	equ	0xFF2
 21225                           intcon2	equ	0xFF1
 21226                           postinc0	equ	0xFEE
 21227                           wreg	equ	0xFE8
 21228                           indf1	equ	0xFE7
 21229                           postinc1	equ	0xFE6
 21230                           postdec1	equ	0xFE5
 21231                           fsr1h	equ	0xFE2
 21232                           fsr1l	equ	0xFE1
 21233                           indf2	equ	0xFDF
 21234                           postinc2	equ	0xFDE
 21235                           postdec2	equ	0xFDD
 21236                           plusw2	equ	0xFDB
 21237                           fsr2h	equ	0xFDA
 21238                           fsr2l	equ	0xFD9
 21239                           status	equ	0xFD8
 21240                           
 21241 ;; *************** function _getsUSBUSART *****************
 21242 ;; Defined at:
 21243 ;;		line 542 in file "../../../My_library/usb/usb_device_cdc.c"
 21244 ;; Parameters:    Size  Location     Type
 21245 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 21246 ;;		 -> USB_task@data(1), 
 21247 ;;  len             1    9[BANK0 ] unsigned char 
 21248 ;; Auto vars:     Size  Location     Type
 21249 ;;		None
 21250 ;; Return value:  Size  Location     Type
 21251 ;;                  1    wreg      unsigned char 
 21252 ;; Registers used:
 21253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21254 ;; Tracked objects:
 21255 ;;		On entry : 0/0
 21256 ;;		On exit  : 0/0
 21257 ;;		Unchanged: 0/0
 21258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21259 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21260 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21261 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21262 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21263 ;;Total ram usage:        6 bytes
 21264 ;; Hardware stack levels used:    1
 21265 ;; Hardware stack levels required when called:   12
 21266 ;; This function calls:
 21267 ;;		_USBTransferOnePacket
 21268 ;; This function is called by:
 21269 ;;		_get_string_usb
 21270 ;; This function uses a non-reentrant model
 21271 ;;
 21272                           
 21273                           	psect	text89
 21274  014602                     __ptext89:
 21275                           	opt stack 0
 21276  014602                     _getsUSBUSART:
 21277                           	opt stack 16
 21278                           
 21279                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 21280                           
 21281                           ; BSR set to: 0
 21282                           ;incstack = 0
 21283  014602  0E00               	movlw	0
 21284  014604  0100               	movlb	0	; () banked
 21285  014606  6FFB               	movwf	_cdc_rx_len& (0+255),b
 21286                           
 21287                           ; BSR set to: 0
 21288                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 21289  014608  5007               	movf	_CDCDataOutHandle,w,c
 21290  01460A  1008               	iorwf	_CDCDataOutHandle+1,w,c
 21291  01460C  B4D8               	btfsc	status,2,c
 21292  01460E  D012               	goto	l11505
 21293                           
 21294                           ; BSR set to: 0
 21295  014610  C007  FFD9         	movff	_CDCDataOutHandle,fsr2l
 21296  014614  C008  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 21297  014618  AEDF               	btfss	indf2,7,c
 21298  01461A  D004               	goto	u13450
 21299  01461C  0100               	movlb	0	; () banked
 21300  01461E  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 21301  014620  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 21302  014622  D002               	goto	u13458
 21303  014624                     u13450:
 21304  014624  0100               	movlb	0	; () banked
 21305  014626  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 21306  014628                     u13458:
 21307  014628  0100               	movlb	0	; () banked
 21308  01462A  516A               	movf	??_getsUSBUSART& (0+255),w,b
 21309  01462C  0100               	movlb	0	; () banked
 21310  01462E  6F6B               	movwf	_getsUSBUSART$5927& (0+255),b
 21311  014630  6B6C               	clrf	(_getsUSBUSART$5927+1)& (0+255),b
 21312  014632  D005               	goto	l11507
 21313  014634                     l11505:
 21314                           
 21315                           ; BSR set to: 0
 21316  014634  0E00               	movlw	0
 21317  014636  0100               	movlb	0	; () banked
 21318  014638  6F6C               	movwf	(_getsUSBUSART$5927+1)& (0+255),b
 21319  01463A  0E00               	movlw	0
 21320  01463C  6F6B               	movwf	_getsUSBUSART$5927& (0+255),b
 21321  01463E                     l11507:
 21322                           
 21323                           ; BSR set to: 0
 21324  01463E  0100               	movlb	0	; () banked
 21325  014640  516B               	movf	_getsUSBUSART$5927& (0+255),w,b
 21326  014642  0100               	movlb	0	; () banked
 21327  014644  116C               	iorwf	(_getsUSBUSART$5927+1)& (0+255),w,b
 21328  014646  A4D8               	btfss	status,2,c
 21329  014648  D049               	goto	l11523
 21330                           
 21331                           ; BSR set to: 0
 21332                           ;usb_device_cdc.c: 547: {
 21333                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 21334  01464A  EE20 F001          	lfsr	2,1
 21335  01464E  5007               	movf	_CDCDataOutHandle,w,c
 21336  014650  26D9               	addwf	fsr2l,f,c
 21337  014652  5008               	movf	_CDCDataOutHandle+1,w,c
 21338  014654  22DA               	addwfc	fsr2h,f,c
 21339  014656  0100               	movlb	0	; () banked
 21340  014658  5169               	movf	getsUSBUSART@len& (0+255),w,b
 21341  01465A  5CDE               	subwf	postinc2,w,c
 21342  01465C  B0D8               	btfsc	status,0,c
 21343  01465E  D009               	goto	l11513
 21344                           
 21345                           ; BSR set to: 0
 21346                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 21347  014660  EE20 F001          	lfsr	2,1
 21348  014664  5007               	movf	_CDCDataOutHandle,w,c
 21349  014666  26D9               	addwf	fsr2l,f,c
 21350  014668  5008               	movf	_CDCDataOutHandle+1,w,c
 21351  01466A  22DA               	addwfc	fsr2h,f,c
 21352  01466C  50DF               	movf	indf2,w,c
 21353  01466E  0100               	movlb	0	; () banked
 21354  014670  6F69               	movwf	getsUSBUSART@len& (0+255),b
 21355  014672                     l11513:
 21356                           
 21357                           ; BSR set to: 0
 21358                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 21359  014672  0E00               	movlw	0
 21360  014674  0100               	movlb	0	; () banked
 21361  014676  6FFB               	movwf	_cdc_rx_len& (0+255),b
 21362  014678  D018               	goto	l11519
 21363  01467A                     l11515:
 21364                           
 21365                           ; BSR set to: 0
 21366                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 21367  01467A  0100               	movlb	0	; () banked
 21368  01467C  51FB               	movf	_cdc_rx_len& (0+255),w,b
 21369  01467E  0D01               	mullw	1
 21370  014680  0E64               	movlw	low _cdc_data_rx
 21371  014682  24F3               	addwf	prodl,w,c
 21372  014684  6ED9               	movwf	fsr2l,c
 21373  014686  0E03               	movlw	high _cdc_data_rx
 21374  014688  20F4               	addwfc	prodh,w,c
 21375  01468A  6EDA               	movwf	fsr2h,c
 21376  01468C  0100               	movlb	0	; () banked
 21377  01468E  51FB               	movf	_cdc_rx_len& (0+255),w,b
 21378  014690  0D01               	mullw	1
 21379  014692  50F3               	movf	prodl,w,c
 21380  014694  0100               	movlb	0	; () banked
 21381  014696  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 21382  014698  6EE1               	movwf	fsr1l,c
 21383  01469A  50F4               	movf	prodh,w,c
 21384  01469C  0100               	movlb	0	; () banked
 21385  01469E  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 21386  0146A0  6EE2               	movwf	fsr1h,c
 21387  0146A2  CFDF FFE7          	movff	indf2,indf1
 21388                           
 21389                           ; BSR set to: 0
 21390  0146A6  0100               	movlb	0	; () banked
 21391  0146A8  2BFB               	incf	_cdc_rx_len& (0+255),f,b
 21392  0146AA                     l11519:
 21393                           
 21394                           ; BSR set to: 0
 21395  0146AA  0100               	movlb	0	; () banked
 21396  0146AC  5169               	movf	getsUSBUSART@len& (0+255),w,b
 21397  0146AE  0100               	movlb	0	; () banked
 21398  0146B0  5DFB               	subwf	_cdc_rx_len& (0+255),w,b
 21399  0146B2  A0D8               	btfss	status,0,c
 21400  0146B4  D7E2               	goto	l11515
 21401                           
 21402                           ; BSR set to: 0
 21403                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 21404                           
 21405                           ; BSR set to: 0
 21406  0146B6  0E00               	movlw	0
 21407  0146B8  0100               	movlb	0	; () banked
 21408  0146BA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21409  0146BC  0E64               	movlw	low _cdc_data_rx
 21410  0146BE  0100               	movlb	0	; () banked
 21411  0146C0  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21412  0146C2  0E03               	movlw	high _cdc_data_rx
 21413  0146C4  0100               	movlb	0	; () banked
 21414  0146C6  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21415  0146C8  0E40               	movlw	64
 21416  0146CA  0100               	movlb	0	; () banked
 21417  0146CC  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 21418  0146CE  0E02               	movlw	2
 21419  0146D0  ECBD  F0A4         	call	_USBTransferOnePacket
 21420  0146D4  C060  F007         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 21421  0146D8  C061  F008         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 21422  0146DC                     l11523:
 21423                           
 21424                           ;usb_device_cdc.c: 567: }
 21425                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 21426  0146DC  0100               	movlb	0	; () banked
 21427  0146DE  51FB               	movf	_cdc_rx_len& (0+255),w,b
 21428  0146E0  0012               	return	
 21429  0146E2                     __end_of_getsUSBUSART:
 21430                           	opt stack 0
 21431                           tblptru	equ	0xFF8
 21432                           tblptrh	equ	0xFF7
 21433                           tblptrl	equ	0xFF6
 21434                           tablat	equ	0xFF5
 21435                           prodh	equ	0xFF4
 21436                           prodl	equ	0xFF3
 21437                           intcon	equ	0xFF2
 21438                           intcon2	equ	0xFF1
 21439                           postinc0	equ	0xFEE
 21440                           wreg	equ	0xFE8
 21441                           indf1	equ	0xFE7
 21442                           postinc1	equ	0xFE6
 21443                           postdec1	equ	0xFE5
 21444                           fsr1h	equ	0xFE2
 21445                           fsr1l	equ	0xFE1
 21446                           indf2	equ	0xFDF
 21447                           postinc2	equ	0xFDE
 21448                           postdec2	equ	0xFDD
 21449                           plusw2	equ	0xFDB
 21450                           fsr2h	equ	0xFDA
 21451                           fsr2l	equ	0xFD9
 21452                           status	equ	0xFD8
 21453                           
 21454 ;; *************** function _CDCTxService *****************
 21455 ;; Defined at:
 21456 ;;		line 893 in file "../../../My_library/usb/usb_device_cdc.c"
 21457 ;; Parameters:    Size  Location     Type
 21458 ;;		None
 21459 ;; Auto vars:     Size  Location     Type
 21460 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 21461 ;;  i               1   10[BANK0 ] unsigned char 
 21462 ;; Return value:  Size  Location     Type
 21463 ;;		None               void
 21464 ;; Registers used:
 21465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21466 ;; Tracked objects:
 21467 ;;		On entry : 0/0
 21468 ;;		On exit  : 0/0
 21469 ;;		Unchanged: 0/0
 21470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21472 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21473 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21474 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21475 ;;Total ram usage:        5 bytes
 21476 ;; Hardware stack levels used:    1
 21477 ;; Hardware stack levels required when called:   12
 21478 ;; This function calls:
 21479 ;;		_USBTransferOnePacket
 21480 ;; This function is called by:
 21481 ;;		_put_string_usb
 21482 ;;		_get_string_usb
 21483 ;; This function uses a non-reentrant model
 21484 ;;
 21485                           
 21486                           	psect	text90
 21487  012E34                     __ptext90:
 21488                           	opt stack 0
 21489  012E34                     _CDCTxService:
 21490                           	opt stack 16
 21491                           
 21492                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 21493                           ;usb_device_cdc.c: 896: uint8_t i;
 21494                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 21495                           
 21496                           ; BSR set to: 0
 21497                           ;incstack = 0
 21498  012E34  98A0               	bcf	4000,4,c	;volatile
 21499                           
 21500                           ;usb_device_cdc.c: 900: {};
 21501                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 21502  012E36  0101               	movlb	1	; () banked
 21503  012E38  5118               	movf	_CDCDataInHandle& (0+255),w,b
 21504  012E3A  0101               	movlb	1	; () banked
 21505  012E3C  1119               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 21506  012E3E  B4D8               	btfsc	status,2,c
 21507  012E40  D013               	goto	l11421
 21508                           
 21509                           ; BSR set to: 1
 21510  012E42  C118  FFD9         	movff	_CDCDataInHandle,fsr2l
 21511  012E46  C119  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 21512  012E4A  0101               	movlb	1	; () banked
 21513  012E4C  AEDF               	btfss	indf2,7,c
 21514  012E4E  D004               	goto	u13310
 21515  012E50  0100               	movlb	0	; () banked
 21516  012E52  6B67               	clrf	??_CDCTxService& (0+255),b
 21517  012E54  2B67               	incf	??_CDCTxService& (0+255),f,b
 21518  012E56  D002               	goto	u13318
 21519  012E58                     u13310:
 21520  012E58  0100               	movlb	0	; () banked
 21521  012E5A  6B67               	clrf	??_CDCTxService& (0+255),b
 21522  012E5C                     u13318:
 21523  012E5C  0100               	movlb	0	; () banked
 21524  012E5E  5167               	movf	??_CDCTxService& (0+255),w,b
 21525  012E60  0100               	movlb	0	; () banked
 21526  012E62  6F68               	movwf	_CDCTxService$5975& (0+255),b
 21527  012E64  6B69               	clrf	(_CDCTxService$5975+1)& (0+255),b
 21528  012E66  D005               	goto	l11423
 21529  012E68                     l11421:
 21530  012E68  0E00               	movlw	0
 21531  012E6A  0100               	movlb	0	; () banked
 21532  012E6C  6F69               	movwf	(_CDCTxService$5975+1)& (0+255),b
 21533  012E6E  0E00               	movlw	0
 21534  012E70  6F68               	movwf	_CDCTxService$5975& (0+255),b
 21535  012E72                     l11423:
 21536                           
 21537                           ; BSR set to: 0
 21538  012E72  0100               	movlb	0	; () banked
 21539  012E74  5168               	movf	_CDCTxService$5975& (0+255),w,b
 21540  012E76  0100               	movlb	0	; () banked
 21541  012E78  1169               	iorwf	(_CDCTxService$5975+1)& (0+255),w,b
 21542  012E7A  B4D8               	btfsc	status,2,c
 21543  012E7C  D002               	goto	l11427
 21544                           
 21545                           ; BSR set to: 0
 21546                           ;usb_device_cdc.c: 903: {
 21547                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 21548  012E7E  88A0               	bsf	4000,4,c	;volatile
 21549                           
 21550                           ;usb_device_cdc.c: 905: return;
 21551  012E80  0012               	return	
 21552  012E82                     l11427:
 21553                           
 21554                           ; BSR set to: 0
 21555                           ;usb_device_cdc.c: 906: }
 21556                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 21557  012E82  0E03               	movlw	3
 21558  012E84  0100               	movlb	0	; () banked
 21559  012E86  19FC               	xorwf	_cdc_trf_state& (0+255),w,b
 21560  012E88  A4D8               	btfss	status,2,c
 21561  012E8A  D003               	goto	l1791
 21562                           
 21563                           ; BSR set to: 0
 21564                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 21565  012E8C  0E00               	movlw	0
 21566  012E8E  0100               	movlb	0	; () banked
 21567  012E90  6FFC               	movwf	_cdc_trf_state& (0+255),b
 21568  012E92                     l1791:
 21569                           
 21570                           ; BSR set to: 0
 21571                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 21572  012E92  0100               	movlb	0	; () banked
 21573  012E94  51FC               	movf	_cdc_trf_state& (0+255),w,b
 21574  012E96  A4D8               	btfss	status,2,c
 21575  012E98  D002               	goto	l11433
 21576                           
 21577                           ; BSR set to: 0
 21578                           ;usb_device_cdc.c: 920: {
 21579                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 21580  012E9A  88A0               	bsf	4000,4,c	;volatile
 21581                           
 21582                           ;usb_device_cdc.c: 922: return;
 21583  012E9C  0012               	return	
 21584  012E9E                     l11433:
 21585                           
 21586                           ; BSR set to: 0
 21587                           ;usb_device_cdc.c: 923: }
 21588                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 21589  012E9E  0E02               	movlw	2
 21590  012EA0  0100               	movlb	0	; () banked
 21591  012EA2  19FC               	xorwf	_cdc_trf_state& (0+255),w,b
 21592  012EA4  A4D8               	btfss	status,2,c
 21593  012EA6  D017               	goto	l11439
 21594                           
 21595                           ; BSR set to: 0
 21596                           ;usb_device_cdc.c: 929: {
 21597                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 21598  012EA8  0E01               	movlw	1
 21599  012EAA  0100               	movlb	0	; () banked
 21600  012EAC  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21601  012EAE  0E00               	movlw	0
 21602  012EB0  0100               	movlb	0	; () banked
 21603  012EB2  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21604  012EB4  0E00               	movlw	0
 21605  012EB6  0100               	movlb	0	; () banked
 21606  012EB8  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21607  012EBA  0E00               	movlw	0
 21608  012EBC  0100               	movlb	0	; () banked
 21609  012EBE  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 21610  012EC0  0E02               	movlw	2
 21611  012EC2  ECBD  F0A4         	call	_USBTransferOnePacket
 21612  012EC6  C060  F118         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21613  012ECA  C061  F119         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21614                           
 21615                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 21616  012ECE  0E03               	movlw	3
 21617  012ED0  0100               	movlb	0	; () banked
 21618  012ED2  6FFC               	movwf	_cdc_trf_state& (0+255),b
 21619                           
 21620                           ;usb_device_cdc.c: 933: }
 21621  012ED4  D073               	goto	l11483
 21622  012ED6                     l11439:
 21623                           
 21624                           ; BSR set to: 0
 21625                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 21626  012ED6  0100               	movlb	0	; () banked
 21627  012ED8  05FC               	decf	_cdc_trf_state& (0+255),w,b
 21628  012EDA  A4D8               	btfss	status,2,c
 21629  012EDC  D06F               	goto	l11483
 21630                           
 21631                           ; BSR set to: 0
 21632                           ;usb_device_cdc.c: 935: {
 21633                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 21634  012EDE  0E40               	movlw	64
 21635  012EE0  0100               	movlb	0	; () banked
 21636  012EE2  65FD               	cpfsgt	_cdc_tx_len& (0+255),b
 21637  012EE4  D004               	goto	l1796
 21638                           
 21639                           ; BSR set to: 0
 21640                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 21641  012EE6  0E40               	movlw	64
 21642  012EE8  0100               	movlb	0	; () banked
 21643  012EEA  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 21644  012EEC  D002               	goto	l11445
 21645  012EEE                     l1796:
 21646                           
 21647                           ; BSR set to: 0
 21648                           ;usb_device_cdc.c: 941: else
 21649                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 21650  012EEE  C0FD  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 21651  012EF2                     l11445:
 21652                           
 21653                           ; BSR set to: 0
 21654                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 21655  012EF2  0100               	movlb	0	; () banked
 21656  012EF4  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 21657  012EF6  0800               	sublw	0
 21658  012EF8  0100               	movlb	0	; () banked
 21659  012EFA  25FD               	addwf	_cdc_tx_len& (0+255),w,b
 21660  012EFC  0100               	movlb	0	; () banked
 21661  012EFE  6FFD               	movwf	_cdc_tx_len& (0+255),b
 21662                           
 21663                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 21664  012F00  0EA4               	movlw	low _cdc_data_tx
 21665  012F02  0101               	movlb	1	; () banked
 21666  012F04  6F10               	movwf	_pCDCDst& (0+255),b
 21667  012F06  0E03               	movlw	high _cdc_data_tx
 21668  012F08  0101               	movlb	1	; () banked
 21669  012F0A  6F11               	movwf	(_pCDCDst+1)& (0+255),b
 21670                           
 21671                           ; BSR set to: 1
 21672                           ;usb_device_cdc.c: 951: i = byte_to_send;
 21673  012F0C  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 21674                           
 21675                           ; BSR set to: 1
 21676                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 21677  012F10  0101               	movlb	1	; () banked
 21678  012F12  5124               	movf	_cdc_mem_type& (0+255),w,b
 21679  012F14  0101               	movlb	1	; () banked
 21680  012F16  B4D8               	btfsc	status,2,c
 21681  012F18  D013               	goto	l11461
 21682  012F1A  D02A               	goto	l11471
 21683  012F1C                     l11453:
 21684                           
 21685                           ;usb_device_cdc.c: 955: {
 21686                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 21687  012F1C  C113  FFD9         	movff	_pCDCSrc,fsr2l
 21688  012F20  C114  FFDA         	movff	_pCDCSrc+1,fsr2h
 21689  012F24  C110  FFE1         	movff	_pCDCDst,fsr1l
 21690  012F28  C111  FFE2         	movff	_pCDCDst+1,fsr1h
 21691  012F2C  CFDF FFE7          	movff	indf2,indf1
 21692                           
 21693                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 21694  012F30  0101               	movlb	1	; () banked
 21695  012F32  4B10               	infsnz	_pCDCDst& (0+255),f,b
 21696  012F34  2B11               	incf	(_pCDCDst+1)& (0+255),f,b
 21697                           
 21698                           ; BSR set to: 1
 21699                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 21700  012F36  0101               	movlb	1	; () banked
 21701  012F38  4B13               	infsnz	_pCDCSrc& (0+255),f,b
 21702  012F3A  2B14               	incf	(_pCDCSrc+1)& (0+255),f,b
 21703                           
 21704                           ; BSR set to: 1
 21705                           ;usb_device_cdc.c: 959: i--;
 21706  012F3C  0100               	movlb	0	; () banked
 21707  012F3E  076A               	decf	CDCTxService@i& (0+255),f,b
 21708  012F40                     l11461:
 21709  012F40  0100               	movlb	0	; () banked
 21710  012F42  516A               	movf	CDCTxService@i& (0+255),w,b
 21711  012F44  0100               	movlb	0	; () banked
 21712  012F46  B4D8               	btfsc	status,2,c
 21713  012F48  D018               	goto	l11473
 21714  012F4A  D7E8               	goto	l11453
 21715  012F4C                     l11463:
 21716                           
 21717                           ; BSR set to: 0
 21718                           ;usb_device_cdc.c: 965: {
 21719                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 21720  012F4C  C113  FFD9         	movff	_pCDCSrc,fsr2l
 21721  012F50  C114  FFDA         	movff	_pCDCSrc+1,fsr2h
 21722  012F54  C110  FFE1         	movff	_pCDCDst,fsr1l
 21723  012F58  C111  FFE2         	movff	_pCDCDst+1,fsr1h
 21724  012F5C  CFDF FFE7          	movff	indf2,indf1
 21725                           
 21726                           ; BSR set to: 0
 21727                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 21728  012F60  0101               	movlb	1	; () banked
 21729  012F62  4B10               	infsnz	_pCDCDst& (0+255),f,b
 21730  012F64  2B11               	incf	(_pCDCDst+1)& (0+255),f,b
 21731                           
 21732                           ; BSR set to: 1
 21733                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 21734  012F66  0101               	movlb	1	; () banked
 21735  012F68  4B13               	infsnz	_pCDCSrc& (0+255),f,b
 21736  012F6A  2B14               	incf	(_pCDCSrc+1)& (0+255),f,b
 21737                           
 21738                           ; BSR set to: 1
 21739                           ;usb_device_cdc.c: 969: i--;
 21740  012F6C  0100               	movlb	0	; () banked
 21741  012F6E  076A               	decf	CDCTxService@i& (0+255),f,b
 21742  012F70                     l11471:
 21743  012F70  0100               	movlb	0	; () banked
 21744  012F72  516A               	movf	CDCTxService@i& (0+255),w,b
 21745  012F74  0100               	movlb	0	; () banked
 21746  012F76  A4D8               	btfss	status,2,c
 21747  012F78  D7E9               	goto	l11463
 21748  012F7A                     l11473:
 21749                           
 21750                           ; BSR set to: 0
 21751                           ;usb_device_cdc.c: 970: }
 21752                           ;usb_device_cdc.c: 971: }
 21753                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 21754  012F7A  0100               	movlb	0	; () banked
 21755  012F7C  51FD               	movf	_cdc_tx_len& (0+255),w,b
 21756  012F7E  0100               	movlb	0	; () banked
 21757  012F80  A4D8               	btfss	status,2,c
 21758  012F82  D00A               	goto	l11481
 21759                           
 21760                           ; BSR set to: 0
 21761                           ;usb_device_cdc.c: 978: {
 21762                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 21763  012F84  0E40               	movlw	64
 21764  012F86  0100               	movlb	0	; () banked
 21765  012F88  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 21766  012F8A  A4D8               	btfss	status,2,c
 21767  012F8C  D002               	goto	l11479
 21768                           
 21769                           ; BSR set to: 0
 21770                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 21771  012F8E  0E02               	movlw	2
 21772  012F90  D001               	goto	L4
 21773  012F92                     l11479:
 21774                           
 21775                           ; BSR set to: 0
 21776                           ;usb_device_cdc.c: 981: else
 21777                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 21778  012F92  0E03               	movlw	3
 21779  012F94                     L4:
 21780  012F94  0100               	movlb	0	; () banked
 21781  012F96  6FFC               	movwf	_cdc_trf_state& (0+255),b
 21782  012F98                     l11481:
 21783                           
 21784                           ; BSR set to: 0
 21785                           ;usb_device_cdc.c: 983: }
 21786                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 21787  012F98  0E01               	movlw	1
 21788  012F9A  0100               	movlb	0	; () banked
 21789  012F9C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21790  012F9E  0EA4               	movlw	low _cdc_data_tx
 21791  012FA0  0100               	movlb	0	; () banked
 21792  012FA2  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21793  012FA4  0E03               	movlw	high _cdc_data_tx
 21794  012FA6  0100               	movlb	0	; () banked
 21795  012FA8  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21796  012FAA  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 21797  012FAE  0E02               	movlw	2
 21798  012FB0  ECBD  F0A4         	call	_USBTransferOnePacket
 21799  012FB4  C060  F118         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21800  012FB8  C061  F119         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21801  012FBC                     l11483:
 21802                           
 21803                           ;usb_device_cdc.c: 986: }
 21804                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 21805  012FBC  88A0               	bsf	4000,4,c	;volatile
 21806  012FBE  0012               	return		;funcret
 21807  012FC0                     __end_of_CDCTxService:
 21808                           	opt stack 0
 21809                           tblptru	equ	0xFF8
 21810                           tblptrh	equ	0xFF7
 21811                           tblptrl	equ	0xFF6
 21812                           tablat	equ	0xFF5
 21813                           prodh	equ	0xFF4
 21814                           prodl	equ	0xFF3
 21815                           intcon	equ	0xFF2
 21816                           intcon2	equ	0xFF1
 21817                           postinc0	equ	0xFEE
 21818                           wreg	equ	0xFE8
 21819                           indf1	equ	0xFE7
 21820                           postinc1	equ	0xFE6
 21821                           postdec1	equ	0xFE5
 21822                           fsr1h	equ	0xFE2
 21823                           fsr1l	equ	0xFE1
 21824                           indf2	equ	0xFDF
 21825                           postinc2	equ	0xFDE
 21826                           postdec2	equ	0xFDD
 21827                           plusw2	equ	0xFDB
 21828                           fsr2h	equ	0xFDA
 21829                           fsr2l	equ	0xFD9
 21830                           status	equ	0xFD8
 21831                           
 21832 ;; *************** function _USBTransferOnePacket *****************
 21833 ;; Defined at:
 21834 ;;		line 995 in file "../../../My_library/usb/usb_device.c"
 21835 ;; Parameters:    Size  Location     Type
 21836 ;;  ep              1    wreg     unsigned char 
 21837 ;;  dir             1    0[BANK0 ] unsigned char 
 21838 ;;  data            2    1[BANK0 ] PTR unsigned char 
 21839 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 21840 ;;  len             1    3[BANK0 ] unsigned char 
 21841 ;; Auto vars:     Size  Location     Type
 21842 ;;  ep              1    4[BANK0 ] unsigned char 
 21843 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 21844 ;;		 -> NULL(0), BDT(48), 
 21845 ;; Return value:  Size  Location     Type
 21846 ;;                  2    0[BANK0 ] PTR void 
 21847 ;; Registers used:
 21848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21849 ;; Tracked objects:
 21850 ;;		On entry : 0/0
 21851 ;;		On exit  : 0/0
 21852 ;;		Unchanged: 0/0
 21853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21854 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21855 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21857 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21858 ;;Total ram usage:        7 bytes
 21859 ;; Hardware stack levels used:    1
 21860 ;; Hardware stack levels required when called:   11
 21861 ;; This function calls:
 21862 ;;		Nothing
 21863 ;; This function is called by:
 21864 ;;		_getsUSBUSART
 21865 ;;		_CDCTxService
 21866 ;;		_USBCDCEventHandler
 21867 ;; This function uses a non-reentrant model
 21868 ;;
 21869                           
 21870                           	psect	text91
 21871  01497A                     __ptext91:
 21872                           	opt stack 0
 21873  01497A                     _USBTransferOnePacket:
 21874                           	opt stack 16
 21875                           
 21876                           ;incstack = 0
 21877                           ;USBTransferOnePacket@ep stored from wreg
 21878  01497A  0100               	movlb	0	; () banked
 21879  01497C  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 21880                           
 21881                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 21882                           ;usb_device.c: 1000: if(dir != 0)
 21883  01497E  0100               	movlb	0	; () banked
 21884  014980  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21885  014982  0100               	movlb	0	; () banked
 21886  014984  B4D8               	btfsc	status,2,c
 21887  014986  D008               	goto	l10867
 21888                           
 21889                           ; BSR set to: 0
 21890                           ;usb_device.c: 1001: {
 21891                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 21892  014988  0100               	movlb	0	; () banked
 21893  01498A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21894  01498C  0D02               	mullw	2
 21895  01498E  0EF5               	movlw	low _pBDTEntryIn
 21896  014990  24F3               	addwf	prodl,w,c
 21897  014992  6ED9               	movwf	fsr2l,c
 21898  014994  0E00               	movlw	high _pBDTEntryIn
 21899  014996  D007               	goto	L5
 21900  014998                     l10867:
 21901                           
 21902                           ; BSR set to: 0
 21903                           ;usb_device.c: 1005: else
 21904                           ;usb_device.c: 1006: {
 21905                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 21906  014998  0100               	movlb	0	; () banked
 21907  01499A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21908  01499C  0D02               	mullw	2
 21909  01499E  0E00               	movlw	low _pBDTEntryOut
 21910  0149A0  24F3               	addwf	prodl,w,c
 21911  0149A2  6ED9               	movwf	fsr2l,c
 21912  0149A4  0E01               	movlw	high _pBDTEntryOut
 21913  0149A6                     L5:
 21914  0149A6  20F4               	addwfc	prodh,w,c
 21915  0149A8  6EDA               	movwf	fsr2h,c
 21916  0149AA  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 21917  0149AE  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 21918                           
 21919                           ; BSR set to: 0
 21920                           ;usb_device.c: 1009: }
 21921                           ;usb_device.c: 1013: if(handle == 0)
 21922                           
 21923                           ; BSR set to: 0
 21924  0149B2  0100               	movlb	0	; () banked
 21925  0149B4  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21926  0149B6  0100               	movlb	0	; () banked
 21927  0149B8  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21928  0149BA  A4D8               	btfss	status,2,c
 21929  0149BC  D007               	goto	l10875
 21930                           
 21931                           ; BSR set to: 0
 21932                           ;usb_device.c: 1014: {
 21933                           ;usb_device.c: 1015: return 0;
 21934  0149BE  0E00               	movlw	0
 21935  0149C0  0100               	movlb	0	; () banked
 21936  0149C2  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 21937  0149C4  0E00               	movlw	0
 21938  0149C6  0100               	movlb	0	; () banked
 21939  0149C8  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 21940                           
 21941                           ; BSR set to: 0
 21942  0149CA  0012               	return	
 21943  0149CC                     l10875:
 21944                           
 21945                           ; BSR set to: 0
 21946                           ;usb_device.c: 1016: }
 21947                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 21948  0149CC  0100               	movlb	0	; () banked
 21949  0149CE  EE20 F002          	lfsr	2,2
 21950  0149D2  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21951  0149D4  26D9               	addwf	fsr2l,f,c
 21952  0149D6  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21953  0149D8  22DA               	addwfc	fsr2h,f,c
 21954  0149DA  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 21955  0149DE  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 21956                           
 21957                           ;usb_device.c: 1030: handle->CNT = len;
 21958  0149E2  0100               	movlb	0	; () banked
 21959  0149E4  EE20 F001          	lfsr	2,1
 21960  0149E8  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21961  0149EA  26D9               	addwf	fsr2l,f,c
 21962  0149EC  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21963  0149EE  22DA               	addwfc	fsr2h,f,c
 21964  0149F0  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 21965                           
 21966                           ; BSR set to: 0
 21967                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 21968  0149F4  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21969  0149F8  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21970  0149FC  0E40               	movlw	64
 21971  0149FE  16DF               	andwf	indf2,f,c
 21972                           
 21973                           ; BSR set to: 0
 21974                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 21975  014A00  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21976  014A04  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21977  014A08  0E00               	movlw	0
 21978  014A0A  86DB               	bsf	plusw2,3,c
 21979                           
 21980                           ; BSR set to: 0
 21981                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 21982  014A0C  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21983  014A10  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21984  014A14  0E00               	movlw	0
 21985  014A16  8EDB               	bsf	plusw2,7,c
 21986                           
 21987                           ; BSR set to: 0
 21988                           ;usb_device.c: 1036: if(dir != 0)
 21989  014A18  0100               	movlb	0	; () banked
 21990  014A1A  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21991  014A1C  0100               	movlb	0	; () banked
 21992  014A1E  B4D8               	btfsc	status,2,c
 21993  014A20  D008               	goto	l10887
 21994                           
 21995                           ; BSR set to: 0
 21996                           ;usb_device.c: 1037: {
 21997                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 21998  014A22  0100               	movlb	0	; () banked
 21999  014A24  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22000  014A26  0D02               	mullw	2
 22001  014A28  0EF5               	movlw	low _pBDTEntryIn
 22002  014A2A  24F3               	addwf	prodl,w,c
 22003  014A2C  6ED9               	movwf	fsr2l,c
 22004  014A2E  0E00               	movlw	high _pBDTEntryIn
 22005  014A30  D007               	goto	L6
 22006  014A32                     l10887:
 22007                           
 22008                           ; BSR set to: 0
 22009                           ;usb_device.c: 1041: else
 22010                           ;usb_device.c: 1042: {
 22011                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 22012  014A32  0100               	movlb	0	; () banked
 22013  014A34  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22014  014A36  0D02               	mullw	2
 22015  014A38  0E00               	movlw	low _pBDTEntryOut
 22016  014A3A  24F3               	addwf	prodl,w,c
 22017  014A3C  6ED9               	movwf	fsr2l,c
 22018  014A3E  0E01               	movlw	high _pBDTEntryOut
 22019  014A40                     L6:
 22020  014A40  20F4               	addwfc	prodh,w,c
 22021  014A42  6EDA               	movwf	fsr2h,c
 22022  014A44  0E04               	movlw	4
 22023  014A46  1ADF               	xorwf	indf2,f,c
 22024                           
 22025                           ; BSR set to: 0
 22026                           ;usb_device.c: 1045: }
 22027                           ;usb_device.c: 1046: return (void*)handle;
 22028                           
 22029                           ; BSR set to: 0
 22030  014A48  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 22031  014A4C  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 22032  014A50  0012               	return	
 22033  014A52                     __end_of_USBTransferOnePacket:
 22034                           	opt stack 0
 22035                           tblptru	equ	0xFF8
 22036                           tblptrh	equ	0xFF7
 22037                           tblptrl	equ	0xFF6
 22038                           tablat	equ	0xFF5
 22039                           prodh	equ	0xFF4
 22040                           prodl	equ	0xFF3
 22041                           intcon	equ	0xFF2
 22042                           intcon2	equ	0xFF1
 22043                           postinc0	equ	0xFEE
 22044                           wreg	equ	0xFE8
 22045                           indf1	equ	0xFE7
 22046                           postinc1	equ	0xFE6
 22047                           postdec1	equ	0xFE5
 22048                           fsr1h	equ	0xFE2
 22049                           fsr1l	equ	0xFE1
 22050                           indf2	equ	0xFDF
 22051                           postinc2	equ	0xFDE
 22052                           postdec2	equ	0xFDD
 22053                           plusw2	equ	0xFDB
 22054                           fsr2h	equ	0xFDA
 22055                           fsr2l	equ	0xFD9
 22056                           status	equ	0xFD8
 22057                           
 22058 ;; *************** function _RTCC_task *****************
 22059 ;; Defined at:
 22060 ;;		line 346 in file "../../../My_library/My_RTCC.c"
 22061 ;; Parameters:    Size  Location     Type
 22062 ;;		None
 22063 ;; Auto vars:     Size  Location     Type
 22064 ;;		None
 22065 ;; Return value:  Size  Location     Type
 22066 ;;		None               void
 22067 ;; Registers used:
 22068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22069 ;; Tracked objects:
 22070 ;;		On entry : 0/0
 22071 ;;		On exit  : 0/0
 22072 ;;		Unchanged: 0/0
 22073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22078 ;;Total ram usage:        0 bytes
 22079 ;; Hardware stack levels used:    1
 22080 ;; Hardware stack levels required when called:   15
 22081 ;; This function calls:
 22082 ;;		_RTCC_from_RTCC
 22083 ;; This function is called by:
 22084 ;;		_main
 22085 ;; This function uses a non-reentrant model
 22086 ;;
 22087                           
 22088                           	psect	text92
 22089  016728                     __ptext92:
 22090                           	opt stack 0
 22091  016728                     _RTCC_task:
 22092                           	opt stack 15
 22093  016728                     l1020:
 22094  016728  010F               	movlb	15	; () banked
 22095  01672A  B93F               	btfsc	63,4,b	;volatile
 22096  01672C  D7FD               	goto	l1020
 22097                           
 22098                           ; BSR set to: 15
 22099                           ;My_RTCC.c: 349: now.halfsec = RTCCFGbits.HALFSEC;
 22100                           
 22101                           ; BSR set to: 15
 22102  01672E  0E00               	movlw	0
 22103  016730  B73F               	btfsc	63,3,b	;volatile
 22104  016732  0E01               	movlw	1
 22105  016734  0101               	movlb	1	; () banked
 22106  016736  6F7E               	movwf	(_now+12)& (0+255),b
 22107                           
 22108                           ; BSR set to: 1
 22109                           ;My_RTCC.c: 350: if (prev_halfsec != now.halfsec) {
 22110  016738  0101               	movlb	1	; () banked
 22111  01673A  5122               	movf	RTCC_task@prev_halfsec& (0+255),w,b
 22112  01673C  0101               	movlb	1	; () banked
 22113  01673E  197E               	xorwf	(_now+12)& (0+255),w,b
 22114  016740  B4D8               	btfsc	status,2,c
 22115  016742  0012               	return	
 22116                           
 22117                           ; BSR set to: 1
 22118                           ;My_RTCC.c: 351: prev_halfsec = now.halfsec;
 22119  016744  C17E  F122         	movff	_now+12,RTCC_task@prev_halfsec
 22120                           
 22121                           ;My_RTCC.c: 352: now.colon = now.halfsec;
 22122  016748  C17E  F17D         	movff	_now+12,_now+11
 22123                           
 22124                           ; BSR set to: 1
 22125                           ;My_RTCC.c: 353: time_change_flag = 1;
 22126  01674C  0E01               	movlw	1
 22127  01674E  6E25               	movwf	_time_change_flag,c
 22128                           
 22129                           ; BSR set to: 1
 22130                           ;My_RTCC.c: 354: RTCC_from_RTCC(&now);
 22131  016750  0E72               	movlw	low _now
 22132  016752  0100               	movlb	0	; () banked
 22133  016754  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 22134  016756  0E01               	movlw	high _now
 22135  016758  0100               	movlb	0	; () banked
 22136  01675A  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 22137  01675C  EC24  F0B6         	call	_RTCC_from_RTCC	;wreg free
 22138  016760  0012               	return	
 22139  016762                     __end_of_RTCC_task:
 22140                           	opt stack 0
 22141                           tblptru	equ	0xFF8
 22142                           tblptrh	equ	0xFF7
 22143                           tblptrl	equ	0xFF6
 22144                           tablat	equ	0xFF5
 22145                           prodh	equ	0xFF4
 22146                           prodl	equ	0xFF3
 22147                           intcon	equ	0xFF2
 22148                           intcon2	equ	0xFF1
 22149                           postinc0	equ	0xFEE
 22150                           wreg	equ	0xFE8
 22151                           indf1	equ	0xFE7
 22152                           postinc1	equ	0xFE6
 22153                           postdec1	equ	0xFE5
 22154                           fsr1h	equ	0xFE2
 22155                           fsr1l	equ	0xFE1
 22156                           indf2	equ	0xFDF
 22157                           postinc2	equ	0xFDE
 22158                           postdec2	equ	0xFDD
 22159                           plusw2	equ	0xFDB
 22160                           fsr2h	equ	0xFDA
 22161                           fsr2l	equ	0xFD9
 22162                           status	equ	0xFD8
 22163                           
 22164 ;; *************** function _RTCC_from_RTCC *****************
 22165 ;; Defined at:
 22166 ;;		line 193 in file "../../../My_library/My_RTCC.c"
 22167 ;; Parameters:    Size  Location     Type
 22168 ;;  tm              2   38[BANK0 ] PTR struct .
 22169 ;;		 -> now(14), 
 22170 ;; Auto vars:     Size  Location     Type
 22171 ;;		None
 22172 ;; Return value:  Size  Location     Type
 22173 ;;		None               void
 22174 ;; Registers used:
 22175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22176 ;; Tracked objects:
 22177 ;;		On entry : 0/0
 22178 ;;		On exit  : 0/0
 22179 ;;		Unchanged: 0/0
 22180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22181 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22184 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22185 ;;Total ram usage:        2 bytes
 22186 ;; Hardware stack levels used:    1
 22187 ;; Hardware stack levels required when called:   14
 22188 ;; This function calls:
 22189 ;;		_RTCC_to_caltime
 22190 ;;		_caltime_to_epoch
 22191 ;; This function is called by:
 22192 ;;		_software_init
 22193 ;;		_display_time_1602
 22194 ;;		_RTCC_adjust_time_inc
 22195 ;;		_RTCC_adjust_time_dec
 22196 ;;		_RTCC_task
 22197 ;;		_print_time
 22198 ;;		_display_time_0802
 22199 ;; This function uses a non-reentrant model
 22200 ;;
 22201                           
 22202                           	psect	text93
 22203  016C48                     __ptext93:
 22204                           	opt stack 0
 22205  016C48                     _RTCC_from_RTCC:
 22206                           	opt stack 11
 22207                           
 22208                           ;My_RTCC.c: 194: RTCC_to_caltime(tm);
 22209                           
 22210                           ;incstack = 0
 22211  016C48  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 22212  016C4C  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 22213  016C50  ECE7  F0A9         	call	_RTCC_to_caltime	;wreg free
 22214                           
 22215                           ;My_RTCC.c: 195: caltime_to_epoch(tm);
 22216  016C54  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 22217  016C58  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 22218  016C5C  ECDB  F08D         	call	_caltime_to_epoch	;wreg free
 22219  016C60  0012               	return		;funcret
 22220  016C62                     __end_of_RTCC_from_RTCC:
 22221                           	opt stack 0
 22222                           tblptru	equ	0xFF8
 22223                           tblptrh	equ	0xFF7
 22224                           tblptrl	equ	0xFF6
 22225                           tablat	equ	0xFF5
 22226                           prodh	equ	0xFF4
 22227                           prodl	equ	0xFF3
 22228                           intcon	equ	0xFF2
 22229                           intcon2	equ	0xFF1
 22230                           postinc0	equ	0xFEE
 22231                           wreg	equ	0xFE8
 22232                           indf1	equ	0xFE7
 22233                           postinc1	equ	0xFE6
 22234                           postdec1	equ	0xFE5
 22235                           fsr1h	equ	0xFE2
 22236                           fsr1l	equ	0xFE1
 22237                           indf2	equ	0xFDF
 22238                           postinc2	equ	0xFDE
 22239                           postdec2	equ	0xFDD
 22240                           plusw2	equ	0xFDB
 22241                           fsr2h	equ	0xFDA
 22242                           fsr2l	equ	0xFD9
 22243                           status	equ	0xFD8
 22244                           
 22245 ;; *************** function _caltime_to_epoch *****************
 22246 ;; Defined at:
 22247 ;;		line 173 in file "../../../My_library/My_RTCC.c"
 22248 ;; Parameters:    Size  Location     Type
 22249 ;;  tm              2   25[BANK0 ] PTR struct .
 22250 ;;		 -> now(14), 
 22251 ;; Auto vars:     Size  Location     Type
 22252 ;;  month           1   37[BANK0 ] unsigned char 
 22253 ;;  month           1   32[BANK0 ] unsigned char 
 22254 ;;  year            1   31[BANK0 ] unsigned char 
 22255 ;;  epoch           4   33[BANK0 ] unsigned long 
 22256 ;; Return value:  Size  Location     Type
 22257 ;;		None               void
 22258 ;; Registers used:
 22259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22260 ;; Tracked objects:
 22261 ;;		On entry : 0/0
 22262 ;;		On exit  : 0/0
 22263 ;;		Unchanged: 0/0
 22264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22265 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22266 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22267 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22268 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22269 ;;Total ram usage:       13 bytes
 22270 ;; Hardware stack levels used:    1
 22271 ;; Hardware stack levels required when called:   13
 22272 ;; This function calls:
 22273 ;;		___lmul
 22274 ;;		_month_length
 22275 ;; This function is called by:
 22276 ;;		_RTCC_from_RTCC
 22277 ;;		_RTCC_from_caltime
 22278 ;; This function uses a non-reentrant model
 22279 ;;
 22280                           
 22281                           	psect	text94
 22282  011BB6                     __ptext94:
 22283                           	opt stack 0
 22284  011BB6                     _caltime_to_epoch:
 22285                           	opt stack 11
 22286                           
 22287                           ;My_RTCC.c: 174: epoch_t epoch = 0;
 22288                           
 22289                           ;incstack = 0
 22290  011BB6  0E00               	movlw	0
 22291  011BB8  0100               	movlb	0	; () banked
 22292  011BBA  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 22293  011BBC  0E00               	movlw	0
 22294  011BBE  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 22295  011BC0  0E00               	movlw	0
 22296  011BC2  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 22297  011BC4  0E00               	movlw	0
 22298  011BC6  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 22299                           
 22300                           ;My_RTCC.c: 175: for (uint8_t year = 0; year < tm->YY; year++) {
 22301  011BC8  0E00               	movlw	0
 22302  011BCA  0100               	movlb	0	; () banked
 22303  011BCC  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 22304  011BCE  D037               	goto	l10199
 22305  011BD0                     l10185:
 22306                           
 22307                           ; BSR set to: 0
 22308                           ;My_RTCC.c: 176: for (uint8_t month = 1; month <= 12; month++) {
 22309  011BD0  0E01               	movlw	1
 22310  011BD2  0100               	movlb	0	; () banked
 22311  011BD4  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 22312  011BD6                     l10187:
 22313                           
 22314                           ; BSR set to: 0
 22315  011BD6  0E0C               	movlw	12
 22316  011BD8  0100               	movlb	0	; () banked
 22317  011BDA  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 22318  011BDC  D001               	goto	l10191
 22319  011BDE  D02D               	goto	l10197
 22320  011BE0                     l10191:
 22321                           
 22322                           ; BSR set to: 0
 22323                           ;My_RTCC.c: 177: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 22324  011BE0  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 22325  011BE4  0100               	movlb	0	; () banked
 22326  011BE6  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 22327  011BE8  ECE1  F0A3         	call	_month_length
 22328  011BEC  0100               	movlb	0	; () banked
 22329  011BEE  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22330  011BF0  0100               	movlb	0	; () banked
 22331  011BF2  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22332  011BF4  0100               	movlb	0	; () banked
 22333  011BF6  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22334  011BF8  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22335  011BFA  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22336  011BFC  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22337  011BFE  0E80               	movlw	128
 22338  011C00  0100               	movlb	0	; () banked
 22339  011C02  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22340  011C04  0E51               	movlw	81
 22341  011C06  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22342  011C08  0E01               	movlw	1
 22343  011C0A  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22344  011C0C  0E00               	movlw	0
 22345  011C0E  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22346  011C10  EC83  F0AF         	call	___lmul	;wreg free
 22347  011C14  0100               	movlb	0	; () banked
 22348  011C16  516D               	movf	?___lmul& (0+255),w,b
 22349  011C18  0100               	movlb	0	; () banked
 22350  011C1A  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22351  011C1C  0100               	movlb	0	; () banked
 22352  011C1E  516E               	movf	(?___lmul+1)& (0+255),w,b
 22353  011C20  0100               	movlb	0	; () banked
 22354  011C22  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22355  011C24  0100               	movlb	0	; () banked
 22356  011C26  516F               	movf	(?___lmul+2)& (0+255),w,b
 22357  011C28  0100               	movlb	0	; () banked
 22358  011C2A  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22359  011C2C  0100               	movlb	0	; () banked
 22360  011C2E  5170               	movf	(?___lmul+3)& (0+255),w,b
 22361  011C30  0100               	movlb	0	; () banked
 22362  011C32  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22363                           
 22364                           ; BSR set to: 0
 22365  011C34  0100               	movlb	0	; () banked
 22366  011C36  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 22367  011C38  D7CE               	goto	l10187
 22368  011C3A                     l10197:
 22369                           
 22370                           ; BSR set to: 0
 22371  011C3A  0100               	movlb	0	; () banked
 22372  011C3C  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 22373  011C3E                     l10199:
 22374                           
 22375                           ; BSR set to: 0
 22376  011C3E  0100               	movlb	0	; () banked
 22377  011C40  EE20 F00A          	lfsr	2,10
 22378  011C44  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22379  011C46  26D9               	addwf	fsr2l,f,c
 22380  011C48  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22381  011C4A  22DA               	addwfc	fsr2h,f,c
 22382  011C4C  50DE               	movf	postinc2,w,c
 22383  011C4E  0100               	movlb	0	; () banked
 22384  011C50  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 22385  011C52  A0D8               	btfss	status,0,c
 22386  011C54  D7BD               	goto	l10185
 22387                           
 22388                           ; BSR set to: 0
 22389                           ;My_RTCC.c: 178: }
 22390                           ;My_RTCC.c: 179: }
 22391                           ;My_RTCC.c: 180: for (uint8_t month = 1; month < tm->MM; month++) {
 22392                           
 22393                           ; BSR set to: 0
 22394  011C56  0E01               	movlw	1
 22395  011C58  0100               	movlb	0	; () banked
 22396  011C5A  6F80               	movwf	caltime_to_epoch@month_3099& (0+255),b
 22397  011C5C  D032               	goto	l10207
 22398  011C5E                     l10203:
 22399                           
 22400                           ; BSR set to: 0
 22401                           ;My_RTCC.c: 181: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 22402  011C5E  C080  F066         	movff	caltime_to_epoch@month_3099,month_length@month
 22403  011C62  0100               	movlb	0	; () banked
 22404  011C64  EE20 F00A          	lfsr	2,10
 22405  011C68  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22406  011C6A  26D9               	addwf	fsr2l,f,c
 22407  011C6C  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22408  011C6E  22DA               	addwfc	fsr2h,f,c
 22409  011C70  50DF               	movf	indf2,w,c
 22410  011C72  ECE1  F0A3         	call	_month_length
 22411  011C76  0100               	movlb	0	; () banked
 22412  011C78  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22413  011C7A  0100               	movlb	0	; () banked
 22414  011C7C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22415  011C7E  0100               	movlb	0	; () banked
 22416  011C80  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22417  011C82  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22418  011C84  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22419  011C86  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22420  011C88  0E80               	movlw	128
 22421  011C8A  0100               	movlb	0	; () banked
 22422  011C8C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22423  011C8E  0E51               	movlw	81
 22424  011C90  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22425  011C92  0E01               	movlw	1
 22426  011C94  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22427  011C96  0E00               	movlw	0
 22428  011C98  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22429  011C9A  EC83  F0AF         	call	___lmul	;wreg free
 22430  011C9E  0100               	movlb	0	; () banked
 22431  011CA0  516D               	movf	?___lmul& (0+255),w,b
 22432  011CA2  0100               	movlb	0	; () banked
 22433  011CA4  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22434  011CA6  0100               	movlb	0	; () banked
 22435  011CA8  516E               	movf	(?___lmul+1)& (0+255),w,b
 22436  011CAA  0100               	movlb	0	; () banked
 22437  011CAC  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22438  011CAE  0100               	movlb	0	; () banked
 22439  011CB0  516F               	movf	(?___lmul+2)& (0+255),w,b
 22440  011CB2  0100               	movlb	0	; () banked
 22441  011CB4  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22442  011CB6  0100               	movlb	0	; () banked
 22443  011CB8  5170               	movf	(?___lmul+3)& (0+255),w,b
 22444  011CBA  0100               	movlb	0	; () banked
 22445  011CBC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22446                           
 22447                           ; BSR set to: 0
 22448  011CBE  0100               	movlb	0	; () banked
 22449  011CC0  2B80               	incf	caltime_to_epoch@month_3099& (0+255),f,b
 22450  011CC2                     l10207:
 22451                           
 22452                           ; BSR set to: 0
 22453  011CC2  0100               	movlb	0	; () banked
 22454  011CC4  EE20 F009          	lfsr	2,9
 22455  011CC8  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22456  011CCA  26D9               	addwf	fsr2l,f,c
 22457  011CCC  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22458  011CCE  22DA               	addwfc	fsr2h,f,c
 22459  011CD0  50DE               	movf	postinc2,w,c
 22460  011CD2  0100               	movlb	0	; () banked
 22461  011CD4  5D80               	subwf	caltime_to_epoch@month_3099& (0+255),w,b
 22462  011CD6  A0D8               	btfss	status,0,c
 22463  011CD8  D7C2               	goto	l10203
 22464                           
 22465                           ; BSR set to: 0
 22466                           ;My_RTCC.c: 182: }
 22467                           ;My_RTCC.c: 183: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 22468                           
 22469                           ; BSR set to: 0
 22470  011CDA  0EFF               	movlw	255
 22471  011CDC  0100               	movlb	0	; () banked
 22472  011CDE  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22473  011CE0  0EFF               	movlw	255
 22474  011CE2  0100               	movlb	0	; () banked
 22475  011CE4  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 22476  011CE6  0100               	movlb	0	; () banked
 22477  011CE8  EE20 F008          	lfsr	2,8
 22478  011CEC  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22479  011CEE  26D9               	addwf	fsr2l,f,c
 22480  011CF0  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22481  011CF2  22DA               	addwfc	fsr2h,f,c
 22482  011CF4  50DF               	movf	indf2,w,c
 22483  011CF6  0100               	movlb	0	; () banked
 22484  011CF8  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 22485  011CFA  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 22486  011CFC  0100               	movlb	0	; () banked
 22487  011CFE  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22488  011D00  0100               	movlb	0	; () banked
 22489  011D02  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 22490  011D04  0100               	movlb	0	; () banked
 22491  011D06  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 22492  011D08  0100               	movlb	0	; () banked
 22493  011D0A  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 22494  011D0C  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 22495  011D10  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 22496  011D14  0100               	movlb	0	; () banked
 22497  011D16  0E00               	movlw	0
 22498  011D18  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 22499  011D1A  0EFF               	movlw	-1
 22500  011D1C  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 22501  011D1E  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 22502  011D20  0E80               	movlw	128
 22503  011D22  0100               	movlb	0	; () banked
 22504  011D24  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22505  011D26  0E51               	movlw	81
 22506  011D28  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22507  011D2A  0E01               	movlw	1
 22508  011D2C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22509  011D2E  0E00               	movlw	0
 22510  011D30  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22511  011D32  EC83  F0AF         	call	___lmul	;wreg free
 22512  011D36  0100               	movlb	0	; () banked
 22513  011D38  516D               	movf	?___lmul& (0+255),w,b
 22514  011D3A  0100               	movlb	0	; () banked
 22515  011D3C  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22516  011D3E  0100               	movlb	0	; () banked
 22517  011D40  516E               	movf	(?___lmul+1)& (0+255),w,b
 22518  011D42  0100               	movlb	0	; () banked
 22519  011D44  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22520  011D46  0100               	movlb	0	; () banked
 22521  011D48  516F               	movf	(?___lmul+2)& (0+255),w,b
 22522  011D4A  0100               	movlb	0	; () banked
 22523  011D4C  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22524  011D4E  0100               	movlb	0	; () banked
 22525  011D50  5170               	movf	(?___lmul+3)& (0+255),w,b
 22526  011D52  0100               	movlb	0	; () banked
 22527  011D54  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22528                           
 22529                           ;My_RTCC.c: 184: epoch += ((epoch_t)60*60) * tm->hh;
 22530  011D56  0100               	movlb	0	; () banked
 22531  011D58  EE20 F006          	lfsr	2,6
 22532  011D5C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22533  011D5E  26D9               	addwf	fsr2l,f,c
 22534  011D60  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22535  011D62  22DA               	addwfc	fsr2h,f,c
 22536  011D64  50DF               	movf	indf2,w,c
 22537  011D66  0100               	movlb	0	; () banked
 22538  011D68  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22539  011D6A  0100               	movlb	0	; () banked
 22540  011D6C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22541  011D6E  0100               	movlb	0	; () banked
 22542  011D70  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22543  011D72  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22544  011D74  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22545  011D76  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22546  011D78  0E10               	movlw	16
 22547  011D7A  0100               	movlb	0	; () banked
 22548  011D7C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22549  011D7E  0E0E               	movlw	14
 22550  011D80  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22551  011D82  0E00               	movlw	0
 22552  011D84  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22553  011D86  0E00               	movlw	0
 22554  011D88  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22555  011D8A  EC83  F0AF         	call	___lmul	;wreg free
 22556  011D8E  0100               	movlb	0	; () banked
 22557  011D90  516D               	movf	?___lmul& (0+255),w,b
 22558  011D92  0100               	movlb	0	; () banked
 22559  011D94  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22560  011D96  0100               	movlb	0	; () banked
 22561  011D98  516E               	movf	(?___lmul+1)& (0+255),w,b
 22562  011D9A  0100               	movlb	0	; () banked
 22563  011D9C  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22564  011D9E  0100               	movlb	0	; () banked
 22565  011DA0  516F               	movf	(?___lmul+2)& (0+255),w,b
 22566  011DA2  0100               	movlb	0	; () banked
 22567  011DA4  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22568  011DA6  0100               	movlb	0	; () banked
 22569  011DA8  5170               	movf	(?___lmul+3)& (0+255),w,b
 22570  011DAA  0100               	movlb	0	; () banked
 22571  011DAC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22572                           
 22573                           ;My_RTCC.c: 185: epoch += ((epoch_t)60) * tm->mm;
 22574  011DAE  0100               	movlb	0	; () banked
 22575  011DB0  EE20 F005          	lfsr	2,5
 22576  011DB4  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22577  011DB6  26D9               	addwf	fsr2l,f,c
 22578  011DB8  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22579  011DBA  22DA               	addwfc	fsr2h,f,c
 22580  011DBC  50DF               	movf	indf2,w,c
 22581  011DBE  0100               	movlb	0	; () banked
 22582  011DC0  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22583  011DC2  0100               	movlb	0	; () banked
 22584  011DC4  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22585  011DC6  0100               	movlb	0	; () banked
 22586  011DC8  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22587  011DCA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22588  011DCC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22589  011DCE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22590  011DD0  0E3C               	movlw	60
 22591  011DD2  0100               	movlb	0	; () banked
 22592  011DD4  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22593  011DD6  0E00               	movlw	0
 22594  011DD8  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22595  011DDA  0E00               	movlw	0
 22596  011DDC  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22597  011DDE  0E00               	movlw	0
 22598  011DE0  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22599  011DE2  EC83  F0AF         	call	___lmul	;wreg free
 22600  011DE6  0100               	movlb	0	; () banked
 22601  011DE8  516D               	movf	?___lmul& (0+255),w,b
 22602  011DEA  0100               	movlb	0	; () banked
 22603  011DEC  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22604  011DEE  0100               	movlb	0	; () banked
 22605  011DF0  516E               	movf	(?___lmul+1)& (0+255),w,b
 22606  011DF2  0100               	movlb	0	; () banked
 22607  011DF4  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22608  011DF6  0100               	movlb	0	; () banked
 22609  011DF8  516F               	movf	(?___lmul+2)& (0+255),w,b
 22610  011DFA  0100               	movlb	0	; () banked
 22611  011DFC  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22612  011DFE  0100               	movlb	0	; () banked
 22613  011E00  5170               	movf	(?___lmul+3)& (0+255),w,b
 22614  011E02  0100               	movlb	0	; () banked
 22615  011E04  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22616                           
 22617                           ; BSR set to: 0
 22618                           ;My_RTCC.c: 186: epoch += tm->ss;
 22619  011E06  0100               	movlb	0	; () banked
 22620  011E08  EE20 F004          	lfsr	2,4
 22621  011E0C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22622  011E0E  26D9               	addwf	fsr2l,f,c
 22623  011E10  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22624  011E12  22DA               	addwfc	fsr2h,f,c
 22625  011E14  50DF               	movf	indf2,w,c
 22626  011E16  0100               	movlb	0	; () banked
 22627  011E18  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22628  011E1A  0100               	movlb	0	; () banked
 22629  011E1C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22630  011E1E  0100               	movlb	0	; () banked
 22631  011E20  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22632  011E22  0E00               	movlw	0
 22633  011E24  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22634  011E26  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22635  011E28  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22636                           
 22637                           ; BSR set to: 0
 22638                           ;My_RTCC.c: 188: tm->epoch = epoch;
 22639  011E2A  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 22640  011E2E  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 22641  011E32  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 22642  011E36  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 22643  011E3A  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 22644  011E3E  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 22645                           
 22646                           ; BSR set to: 0
 22647  011E42  0012               	return		;funcret
 22648  011E44                     __end_of_caltime_to_epoch:
 22649                           	opt stack 0
 22650                           tblptru	equ	0xFF8
 22651                           tblptrh	equ	0xFF7
 22652                           tblptrl	equ	0xFF6
 22653                           tablat	equ	0xFF5
 22654                           prodh	equ	0xFF4
 22655                           prodl	equ	0xFF3
 22656                           intcon	equ	0xFF2
 22657                           intcon2	equ	0xFF1
 22658                           postinc0	equ	0xFEE
 22659                           wreg	equ	0xFE8
 22660                           indf1	equ	0xFE7
 22661                           postinc1	equ	0xFE6
 22662                           postdec1	equ	0xFE5
 22663                           fsr1h	equ	0xFE2
 22664                           fsr1l	equ	0xFE1
 22665                           indf2	equ	0xFDF
 22666                           postinc2	equ	0xFDE
 22667                           postdec2	equ	0xFDD
 22668                           plusw2	equ	0xFDB
 22669                           fsr2h	equ	0xFDA
 22670                           fsr2l	equ	0xFD9
 22671                           status	equ	0xFD8
 22672                           
 22673 ;; *************** function _month_length *****************
 22674 ;; Defined at:
 22675 ;;		line 49 in file "../../../My_library/My_RTCC.c"
 22676 ;; Parameters:    Size  Location     Type
 22677 ;;  year            1    wreg     unsigned char 
 22678 ;;  month           1    6[BANK0 ] unsigned char 
 22679 ;; Auto vars:     Size  Location     Type
 22680 ;;  year            1   11[BANK0 ] unsigned char 
 22681 ;; Return value:  Size  Location     Type
 22682 ;;                  1    wreg      unsigned char 
 22683 ;; Registers used:
 22684 ;;		wreg, status,2, status,0, cstack
 22685 ;; Tracked objects:
 22686 ;;		On entry : 0/0
 22687 ;;		On exit  : 0/0
 22688 ;;		Unchanged: 0/0
 22689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22690 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22691 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22692 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22693 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22694 ;;Total ram usage:        6 bytes
 22695 ;; Hardware stack levels used:    1
 22696 ;; Hardware stack levels required when called:   12
 22697 ;; This function calls:
 22698 ;;		___awmod
 22699 ;; This function is called by:
 22700 ;;		_epoch_to_caltime
 22701 ;;		_caltime_to_epoch
 22702 ;;		_RTCC_adjust_time_inc
 22703 ;;		_RTCC_adjust_time_dec
 22704 ;;		_terminal_time
 22705 ;; This function uses a non-reentrant model
 22706 ;;
 22707                           
 22708                           	psect	text95
 22709  0147C2                     __ptext95:
 22710                           	opt stack 0
 22711  0147C2                     _month_length:
 22712                           	opt stack 11
 22713                           
 22714                           ; BSR set to: 0
 22715                           ;incstack = 0
 22716                           ;month_length@year stored from wreg
 22717  0147C2  0100               	movlb	0	; () banked
 22718  0147C4  6F6B               	movwf	month_length@year& (0+255),b
 22719                           
 22720                           ;My_RTCC.c: 50: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 22721  0147C6  0E02               	movlw	2
 22722  0147C8  0100               	movlb	0	; () banked
 22723  0147CA  1966               	xorwf	month_length@month& (0+255),w,b
 22724  0147CC  A4D8               	btfss	status,2,c
 22725  0147CE  D03E               	goto	l10073
 22726                           
 22727                           ; BSR set to: 0
 22728  0147D0  C06B  F060         	movff	month_length@year,___awmod@dividend
 22729  0147D4  0100               	movlb	0	; () banked
 22730  0147D6  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 22731  0147D8  0E00               	movlw	0
 22732  0147DA  0100               	movlb	0	; () banked
 22733  0147DC  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 22734  0147DE  0E64               	movlw	100
 22735  0147E0  6F62               	movwf	___awmod@divisor& (0+255),b
 22736  0147E2  ECA9  F0AB         	call	___awmod	;wreg free
 22737  0147E6  0100               	movlb	0	; () banked
 22738  0147E8  5160               	movf	?___awmod& (0+255),w,b
 22739  0147EA  0100               	movlb	0	; () banked
 22740  0147EC  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 22741  0147EE  A4D8               	btfss	status,2,c
 22742  0147F0  D002               	goto	u11160
 22743  0147F2  0E01               	movlw	1
 22744  0147F4  D001               	goto	u11170
 22745  0147F6                     u11160:
 22746  0147F6  0E00               	movlw	0
 22747  0147F8                     u11170:
 22748  0147F8  0800               	sublw	0
 22749  0147FA  0100               	movlb	0	; () banked
 22750  0147FC  6F67               	movwf	??_month_length& (0+255),b
 22751  0147FE  C06B  F060         	movff	month_length@year,___awmod@dividend
 22752  014802  0100               	movlb	0	; () banked
 22753  014804  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 22754  014806  0E01               	movlw	1
 22755  014808  0100               	movlb	0	; () banked
 22756  01480A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 22757  01480C  0E90               	movlw	144
 22758  01480E  6F62               	movwf	___awmod@divisor& (0+255),b
 22759  014810  ECA9  F0AB         	call	___awmod	;wreg free
 22760  014814  0100               	movlb	0	; () banked
 22761  014816  5160               	movf	?___awmod& (0+255),w,b
 22762  014818  0100               	movlb	0	; () banked
 22763  01481A  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 22764  01481C  A4D8               	btfss	status,2,c
 22765  01481E  D004               	goto	u11180
 22766  014820  0100               	movlb	0	; () banked
 22767  014822  6B68               	clrf	(??_month_length+1)& (0+255),b
 22768  014824  2B68               	incf	(??_month_length+1)& (0+255),f,b
 22769  014826  D002               	goto	u11198
 22770  014828                     u11180:
 22771  014828  0100               	movlb	0	; () banked
 22772  01482A  6B68               	clrf	(??_month_length+1)& (0+255),b
 22773  01482C                     u11198:
 22774  01482C  C06B  F069         	movff	month_length@year,??_month_length+2
 22775  014830  0E03               	movlw	3
 22776  014832  0100               	movlb	0	; () banked
 22777  014834  1769               	andwf	(??_month_length+2)& (0+255),f,b
 22778  014836  A4D8               	btfss	status,2,c
 22779  014838  D002               	goto	u11200
 22780  01483A  0E01               	movlw	1
 22781  01483C  D001               	goto	u11210
 22782  01483E                     u11200:
 22783  01483E  0E00               	movlw	0
 22784  014840                     u11210:
 22785  014840  0100               	movlb	0	; () banked
 22786  014842  2568               	addwf	(??_month_length+1)& (0+255),w,b
 22787  014844  0100               	movlb	0	; () banked
 22788  014846  2567               	addwf	??_month_length& (0+255),w,b
 22789  014848  0F1C               	addlw	28
 22790                           
 22791                           ; BSR set to: 0
 22792                           
 22793                           ; BSR set to: 0
 22794  01484A  0012               	return	
 22795  01484C                     l10073:
 22796                           
 22797                           ; BSR set to: 0
 22798                           ;My_RTCC.c: 51: else return 31 - (((-(month & 1)^month)&13) == 4);
 22799  01484C  0100               	movlb	0	; () banked
 22800  01484E  5166               	movf	month_length@month& (0+255),w,b
 22801  014850  0B01               	andlw	1
 22802  014852  0100               	movlb	0	; () banked
 22803  014854  6F67               	movwf	??_month_length& (0+255),b
 22804  014856  6B68               	clrf	(??_month_length+1)& (0+255),b
 22805  014858  0100               	movlb	0	; () banked
 22806  01485A  1F67               	comf	??_month_length& (0+255),f,b
 22807  01485C  1F68               	comf	(??_month_length+1)& (0+255),f,b
 22808  01485E  4B67               	infsnz	??_month_length& (0+255),f,b
 22809  014860  2B68               	incf	(??_month_length+1)& (0+255),f,b
 22810  014862  0100               	movlb	0	; () banked
 22811  014864  5166               	movf	month_length@month& (0+255),w,b
 22812  014866  0100               	movlb	0	; () banked
 22813  014868  6F69               	movwf	(??_month_length+2)& (0+255),b
 22814  01486A  6B6A               	clrf	(??_month_length+3)& (0+255),b
 22815  01486C  0100               	movlb	0	; () banked
 22816  01486E  5167               	movf	??_month_length& (0+255),w,b
 22817  014870  0100               	movlb	0	; () banked
 22818  014872  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 22819  014874  0100               	movlb	0	; () banked
 22820  014876  5168               	movf	(??_month_length+1)& (0+255),w,b
 22821  014878  0100               	movlb	0	; () banked
 22822  01487A  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 22823  01487C  0E0D               	movlw	13
 22824  01487E  0100               	movlb	0	; () banked
 22825  014880  1769               	andwf	(??_month_length+2)& (0+255),f,b
 22826  014882  0E00               	movlw	0
 22827  014884  176A               	andwf	(??_month_length+3)& (0+255),f,b
 22828  014886  0E04               	movlw	4
 22829  014888  0100               	movlb	0	; () banked
 22830  01488A  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 22831  01488C  0100               	movlb	0	; () banked
 22832  01488E  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 22833  014890  A4D8               	btfss	status,2,c
 22834  014892  D002               	goto	u11220
 22835  014894  0E01               	movlw	1
 22836  014896  D001               	goto	u11230
 22837  014898                     u11220:
 22838  014898  0E00               	movlw	0
 22839  01489A                     u11230:
 22840  01489A  0800               	sublw	0
 22841  01489C  0F1F               	addlw	31
 22842                           
 22843                           ; BSR set to: 0
 22844  01489E  0012               	return	
 22845  0148A0                     __end_of_month_length:
 22846                           	opt stack 0
 22847                           tblptru	equ	0xFF8
 22848                           tblptrh	equ	0xFF7
 22849                           tblptrl	equ	0xFF6
 22850                           tablat	equ	0xFF5
 22851                           prodh	equ	0xFF4
 22852                           prodl	equ	0xFF3
 22853                           intcon	equ	0xFF2
 22854                           intcon2	equ	0xFF1
 22855                           postinc0	equ	0xFEE
 22856                           wreg	equ	0xFE8
 22857                           indf1	equ	0xFE7
 22858                           postinc1	equ	0xFE6
 22859                           postdec1	equ	0xFE5
 22860                           fsr1h	equ	0xFE2
 22861                           fsr1l	equ	0xFE1
 22862                           indf2	equ	0xFDF
 22863                           postinc2	equ	0xFDE
 22864                           postdec2	equ	0xFDD
 22865                           plusw2	equ	0xFDB
 22866                           fsr2h	equ	0xFDA
 22867                           fsr2l	equ	0xFD9
 22868                           status	equ	0xFD8
 22869                           
 22870 ;; *************** function ___awmod *****************
 22871 ;; Defined at:
 22872 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 22873 ;; Parameters:    Size  Location     Type
 22874 ;;  dividend        2    0[BANK0 ] int 
 22875 ;;  divisor         2    2[BANK0 ] int 
 22876 ;; Auto vars:     Size  Location     Type
 22877 ;;  sign            1    5[BANK0 ] unsigned char 
 22878 ;;  counter         1    4[BANK0 ] unsigned char 
 22879 ;; Return value:  Size  Location     Type
 22880 ;;                  2    0[BANK0 ] int 
 22881 ;; Registers used:
 22882 ;;		wreg, status,2, status,0
 22883 ;; Tracked objects:
 22884 ;;		On entry : 0/0
 22885 ;;		On exit  : 0/0
 22886 ;;		Unchanged: 0/0
 22887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22888 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22889 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22891 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22892 ;;Total ram usage:        6 bytes
 22893 ;; Hardware stack levels used:    1
 22894 ;; Hardware stack levels required when called:   11
 22895 ;; This function calls:
 22896 ;;		Nothing
 22897 ;; This function is called by:
 22898 ;;		_month_length
 22899 ;; This function uses a non-reentrant model
 22900 ;;
 22901                           
 22902                           	psect	text96
 22903  015752                     __ptext96:
 22904                           	opt stack 0
 22905  015752                     ___awmod:
 22906                           	opt stack 11
 22907                           
 22908                           ; BSR set to: 0
 22909                           ;incstack = 0
 22910  015752  0E00               	movlw	0
 22911  015754  0100               	movlb	0	; () banked
 22912  015756  6F65               	movwf	___awmod@sign& (0+255),b
 22913                           
 22914                           ; BSR set to: 0
 22915  015758  0100               	movlb	0	; () banked
 22916  01575A  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 22917  01575C  D008               	goto	l10021
 22918                           
 22919                           ; BSR set to: 0
 22920  01575E  0100               	movlb	0	; () banked
 22921  015760  6D60               	negf	___awmod@dividend& (0+255),b
 22922  015762  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 22923  015764  B0D8               	btfsc	status,0,c
 22924  015766  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 22925                           
 22926                           ; BSR set to: 0
 22927  015768  0E01               	movlw	1
 22928  01576A  0100               	movlb	0	; () banked
 22929  01576C  6F65               	movwf	___awmod@sign& (0+255),b
 22930  01576E                     l10021:
 22931                           
 22932                           ; BSR set to: 0
 22933  01576E  0100               	movlb	0	; () banked
 22934  015770  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 22935  015772  D005               	goto	l10025
 22936                           
 22937                           ; BSR set to: 0
 22938  015774  0100               	movlb	0	; () banked
 22939  015776  6D62               	negf	___awmod@divisor& (0+255),b
 22940  015778  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 22941  01577A  B0D8               	btfsc	status,0,c
 22942  01577C  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 22943  01577E                     l10025:
 22944                           
 22945                           ; BSR set to: 0
 22946  01577E  0100               	movlb	0	; () banked
 22947  015780  5162               	movf	___awmod@divisor& (0+255),w,b
 22948  015782  0100               	movlb	0	; () banked
 22949  015784  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 22950  015786  B4D8               	btfsc	status,2,c
 22951  015788  D026               	goto	l10041
 22952                           
 22953                           ; BSR set to: 0
 22954  01578A  0E01               	movlw	1
 22955  01578C  0100               	movlb	0	; () banked
 22956  01578E  6F64               	movwf	___awmod@counter& (0+255),b
 22957  015790  D006               	goto	l10031
 22958  015792                     l10029:
 22959                           
 22960                           ; BSR set to: 0
 22961  015792  0100               	movlb	0	; () banked
 22962  015794  90D8               	bcf	status,0,c
 22963  015796  3762               	rlcf	___awmod@divisor& (0+255),f,b
 22964  015798  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 22965  01579A  0100               	movlb	0	; () banked
 22966  01579C  2B64               	incf	___awmod@counter& (0+255),f,b
 22967  01579E                     l10031:
 22968                           
 22969                           ; BSR set to: 0
 22970  01579E  0100               	movlb	0	; () banked
 22971  0157A0  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 22972  0157A2  D7F7               	goto	l10029
 22973  0157A4                     l10033:
 22974                           
 22975                           ; BSR set to: 0
 22976  0157A4  0100               	movlb	0	; () banked
 22977  0157A6  5162               	movf	___awmod@divisor& (0+255),w,b
 22978  0157A8  0100               	movlb	0	; () banked
 22979  0157AA  5D60               	subwf	___awmod@dividend& (0+255),w,b
 22980  0157AC  0100               	movlb	0	; () banked
 22981  0157AE  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 22982  0157B0  0100               	movlb	0	; () banked
 22983  0157B2  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 22984  0157B4  A0D8               	btfss	status,0,c
 22985  0157B6  D008               	goto	l10037
 22986                           
 22987                           ; BSR set to: 0
 22988  0157B8  0100               	movlb	0	; () banked
 22989  0157BA  5162               	movf	___awmod@divisor& (0+255),w,b
 22990  0157BC  0100               	movlb	0	; () banked
 22991  0157BE  5F60               	subwf	___awmod@dividend& (0+255),f,b
 22992  0157C0  0100               	movlb	0	; () banked
 22993  0157C2  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 22994  0157C4  0100               	movlb	0	; () banked
 22995  0157C6  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 22996  0157C8                     l10037:
 22997                           
 22998                           ; BSR set to: 0
 22999  0157C8  0100               	movlb	0	; () banked
 23000  0157CA  90D8               	bcf	status,0,c
 23001  0157CC  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 23002  0157CE  3362               	rrcf	___awmod@divisor& (0+255),f,b
 23003                           
 23004                           ; BSR set to: 0
 23005  0157D0  0100               	movlb	0	; () banked
 23006  0157D2  2F64               	decfsz	___awmod@counter& (0+255),f,b
 23007  0157D4  D7E7               	goto	l10033
 23008  0157D6                     l10041:
 23009                           
 23010                           ; BSR set to: 0
 23011  0157D6  0100               	movlb	0	; () banked
 23012  0157D8  5165               	movf	___awmod@sign& (0+255),w,b
 23013  0157DA  0100               	movlb	0	; () banked
 23014  0157DC  B4D8               	btfsc	status,2,c
 23015  0157DE  D005               	goto	l10045
 23016                           
 23017                           ; BSR set to: 0
 23018  0157E0  0100               	movlb	0	; () banked
 23019  0157E2  6D60               	negf	___awmod@dividend& (0+255),b
 23020  0157E4  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 23021  0157E6  B0D8               	btfsc	status,0,c
 23022  0157E8  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 23023  0157EA                     l10045:
 23024                           
 23025                           ; BSR set to: 0
 23026  0157EA  C060  F060         	movff	___awmod@dividend,?___awmod
 23027  0157EE  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 23028  0157F2  0012               	return	
 23029  0157F4                     __end_of___awmod:
 23030                           	opt stack 0
 23031                           tblptru	equ	0xFF8
 23032                           tblptrh	equ	0xFF7
 23033                           tblptrl	equ	0xFF6
 23034                           tablat	equ	0xFF5
 23035                           prodh	equ	0xFF4
 23036                           prodl	equ	0xFF3
 23037                           intcon	equ	0xFF2
 23038                           intcon2	equ	0xFF1
 23039                           postinc0	equ	0xFEE
 23040                           wreg	equ	0xFE8
 23041                           indf1	equ	0xFE7
 23042                           postinc1	equ	0xFE6
 23043                           postdec1	equ	0xFE5
 23044                           fsr1h	equ	0xFE2
 23045                           fsr1l	equ	0xFE1
 23046                           indf2	equ	0xFDF
 23047                           postinc2	equ	0xFDE
 23048                           postdec2	equ	0xFDD
 23049                           plusw2	equ	0xFDB
 23050                           fsr2h	equ	0xFDA
 23051                           fsr2l	equ	0xFD9
 23052                           status	equ	0xFD8
 23053                           
 23054 ;; *************** function ___lmul *****************
 23055 ;; Defined at:
 23056 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 23057 ;; Parameters:    Size  Location     Type
 23058 ;;  multiplier      4   13[BANK0 ] unsigned long 
 23059 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 23060 ;; Auto vars:     Size  Location     Type
 23061 ;;  product         4   21[BANK0 ] unsigned long 
 23062 ;; Return value:  Size  Location     Type
 23063 ;;                  4   13[BANK0 ] unsigned long 
 23064 ;; Registers used:
 23065 ;;		wreg, status,2, status,0
 23066 ;; Tracked objects:
 23067 ;;		On entry : 0/0
 23068 ;;		On exit  : 0/0
 23069 ;;		Unchanged: 0/0
 23070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23071 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23072 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23074 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23075 ;;Total ram usage:       12 bytes
 23076 ;; Hardware stack levels used:    1
 23077 ;; Hardware stack levels required when called:   11
 23078 ;; This function calls:
 23079 ;;		Nothing
 23080 ;; This function is called by:
 23081 ;;		_get_quot_rem
 23082 ;;		_caltime_to_epoch
 23083 ;;		_RTCC_adjust_time_inc
 23084 ;;		_RTCC_adjust_time_dec
 23085 ;; This function uses a non-reentrant model
 23086 ;;
 23087                           
 23088                           	psect	text97
 23089  015F06                     __ptext97:
 23090                           	opt stack 0
 23091  015F06                     ___lmul:
 23092                           	opt stack 12
 23093                           
 23094                           ; BSR set to: 0
 23095                           ;incstack = 0
 23096  015F06  0E00               	movlw	0
 23097  015F08  0100               	movlb	0	; () banked
 23098  015F0A  6F75               	movwf	___lmul@product& (0+255),b
 23099  015F0C  0E00               	movlw	0
 23100  015F0E  6F76               	movwf	(___lmul@product+1)& (0+255),b
 23101  015F10  0E00               	movlw	0
 23102  015F12  6F77               	movwf	(___lmul@product+2)& (0+255),b
 23103  015F14  0E00               	movlw	0
 23104  015F16  6F78               	movwf	(___lmul@product+3)& (0+255),b
 23105  015F18                     l10079:
 23106                           
 23107                           ; BSR set to: 0
 23108  015F18  0100               	movlb	0	; () banked
 23109  015F1A  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 23110  015F1C  D010               	goto	l10083
 23111                           
 23112                           ; BSR set to: 0
 23113  015F1E  0100               	movlb	0	; () banked
 23114  015F20  5171               	movf	___lmul@multiplicand& (0+255),w,b
 23115  015F22  0100               	movlb	0	; () banked
 23116  015F24  2775               	addwf	___lmul@product& (0+255),f,b
 23117  015F26  0100               	movlb	0	; () banked
 23118  015F28  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 23119  015F2A  0100               	movlb	0	; () banked
 23120  015F2C  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 23121  015F2E  0100               	movlb	0	; () banked
 23122  015F30  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 23123  015F32  0100               	movlb	0	; () banked
 23124  015F34  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 23125  015F36  0100               	movlb	0	; () banked
 23126  015F38  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 23127  015F3A  0100               	movlb	0	; () banked
 23128  015F3C  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 23129  015F3E                     l10083:
 23130                           
 23131                           ; BSR set to: 0
 23132  015F3E  0100               	movlb	0	; () banked
 23133  015F40  90D8               	bcf	status,0,c
 23134  015F42  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 23135  015F44  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 23136  015F46  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 23137  015F48  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 23138                           
 23139                           ; BSR set to: 0
 23140  015F4A  0100               	movlb	0	; () banked
 23141  015F4C  90D8               	bcf	status,0,c
 23142  015F4E  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 23143  015F50  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 23144  015F52  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 23145  015F54  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 23146  015F56  0100               	movlb	0	; () banked
 23147  015F58  516D               	movf	___lmul@multiplier& (0+255),w,b
 23148  015F5A  0100               	movlb	0	; () banked
 23149  015F5C  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 23150  015F5E  0100               	movlb	0	; () banked
 23151  015F60  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 23152  015F62  0100               	movlb	0	; () banked
 23153  015F64  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 23154  015F66  A4D8               	btfss	status,2,c
 23155  015F68  D7D7               	goto	l10079
 23156                           
 23157                           ; BSR set to: 0
 23158  015F6A  C075  F06D         	movff	___lmul@product,?___lmul
 23159  015F6E  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 23160  015F72  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 23161  015F76  C078  F070         	movff	___lmul@product+3,?___lmul+3
 23162                           
 23163                           ; BSR set to: 0
 23164  015F7A  0012               	return		;funcret
 23165  015F7C                     __end_of___lmul:
 23166                           	opt stack 0
 23167                           tblptru	equ	0xFF8
 23168                           tblptrh	equ	0xFF7
 23169                           tblptrl	equ	0xFF6
 23170                           tablat	equ	0xFF5
 23171                           prodh	equ	0xFF4
 23172                           prodl	equ	0xFF3
 23173                           intcon	equ	0xFF2
 23174                           intcon2	equ	0xFF1
 23175                           postinc0	equ	0xFEE
 23176                           wreg	equ	0xFE8
 23177                           indf1	equ	0xFE7
 23178                           postinc1	equ	0xFE6
 23179                           postdec1	equ	0xFE5
 23180                           fsr1h	equ	0xFE2
 23181                           fsr1l	equ	0xFE1
 23182                           indf2	equ	0xFDF
 23183                           postinc2	equ	0xFDE
 23184                           postdec2	equ	0xFDD
 23185                           plusw2	equ	0xFDB
 23186                           fsr2h	equ	0xFDA
 23187                           fsr2l	equ	0xFD9
 23188                           status	equ	0xFD8
 23189                           
 23190 ;; *************** function _RTCC_to_caltime *****************
 23191 ;; Defined at:
 23192 ;;		line 83 in file "../../../My_library/My_RTCC.c"
 23193 ;; Parameters:    Size  Location     Type
 23194 ;;  tm              2    2[BANK0 ] PTR struct .
 23195 ;;		 -> now(14), 
 23196 ;; Auto vars:     Size  Location     Type
 23197 ;;  dumy            1    4[BANK0 ] unsigned char 
 23198 ;; Return value:  Size  Location     Type
 23199 ;;		None               void
 23200 ;; Registers used:
 23201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23202 ;; Tracked objects:
 23203 ;;		On entry : 0/0
 23204 ;;		On exit  : 0/0
 23205 ;;		Unchanged: 0/0
 23206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23207 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23208 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23210 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23211 ;;Total ram usage:        3 bytes
 23212 ;; Hardware stack levels used:    1
 23213 ;; Hardware stack levels required when called:   12
 23214 ;; This function calls:
 23215 ;;		_x_to_d
 23216 ;; This function is called by:
 23217 ;;		_RTCC_from_RTCC
 23218 ;; This function uses a non-reentrant model
 23219 ;;
 23220                           
 23221                           	psect	text98
 23222  0153CE                     __ptext98:
 23223                           	opt stack 0
 23224  0153CE                     _RTCC_to_caltime:
 23225                           	opt stack 12
 23226  0153CE                     l898:
 23227  0153CE  010F               	movlb	15	; () banked
 23228  0153D0  B93F               	btfsc	63,4,b	;volatile
 23229  0153D2  D7FD               	goto	l898
 23230                           
 23231                           ; BSR set to: 15
 23232                           ;My_RTCC.c: 86: RTCCFGbits.RTCPTR0 = 1;
 23233  0153D4  010F               	movlb	15	; () banked
 23234  0153D6  813F               	bsf	63,0,b	;volatile
 23235                           
 23236                           ;My_RTCC.c: 87: RTCCFGbits.RTCPTR1 = 1;
 23237  0153D8  010F               	movlb	15	; () banked
 23238  0153DA  833F               	bsf	63,1,b	;volatile
 23239                           
 23240                           ; BSR set to: 15
 23241                           ;My_RTCC.c: 89: tm->YY = x_to_d(RTCVALL);
 23242  0153DC  0100               	movlb	0	; () banked
 23243  0153DE  EE20 F00A          	lfsr	2,10
 23244  0153E2  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23245  0153E4  26D9               	addwf	fsr2l,f,c
 23246  0153E6  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23247  0153E8  22DA               	addwfc	fsr2h,f,c
 23248  0153EA  010F               	movlb	15	; () banked
 23249  0153EC  513A               	movf	58,w,b	;volatile
 23250  0153EE  ECCF  F0B5         	call	_x_to_d
 23251  0153F2  6EDF               	movwf	indf2,c
 23252                           
 23253                           ;My_RTCC.c: 90: uint8_t dumy = RTCVALH;
 23254  0153F4  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 23255                           
 23256                           ;My_RTCC.c: 91: tm->DD = x_to_d(RTCVALL);
 23257  0153F8  0100               	movlb	0	; () banked
 23258  0153FA  EE20 F008          	lfsr	2,8
 23259  0153FE  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23260  015400  26D9               	addwf	fsr2l,f,c
 23261  015402  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23262  015404  22DA               	addwfc	fsr2h,f,c
 23263  015406  010F               	movlb	15	; () banked
 23264  015408  513A               	movf	58,w,b	;volatile
 23265  01540A  ECCF  F0B5         	call	_x_to_d
 23266  01540E  6EDF               	movwf	indf2,c
 23267                           
 23268                           ;My_RTCC.c: 92: tm->MM = x_to_d(RTCVALH);
 23269  015410  0100               	movlb	0	; () banked
 23270  015412  EE20 F009          	lfsr	2,9
 23271  015416  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23272  015418  26D9               	addwf	fsr2l,f,c
 23273  01541A  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23274  01541C  22DA               	addwfc	fsr2h,f,c
 23275  01541E  010F               	movlb	15	; () banked
 23276  015420  513B               	movf	59,w,b	;volatile
 23277  015422  ECCF  F0B5         	call	_x_to_d
 23278  015426  6EDF               	movwf	indf2,c
 23279                           
 23280                           ;My_RTCC.c: 93: tm->hh = x_to_d(RTCVALL);
 23281  015428  0100               	movlb	0	; () banked
 23282  01542A  EE20 F006          	lfsr	2,6
 23283  01542E  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23284  015430  26D9               	addwf	fsr2l,f,c
 23285  015432  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23286  015434  22DA               	addwfc	fsr2h,f,c
 23287  015436  010F               	movlb	15	; () banked
 23288  015438  513A               	movf	58,w,b	;volatile
 23289  01543A  ECCF  F0B5         	call	_x_to_d
 23290  01543E  6EDF               	movwf	indf2,c
 23291                           
 23292                           ;My_RTCC.c: 94: tm->EE = x_to_d(RTCVALH);
 23293  015440  0100               	movlb	0	; () banked
 23294  015442  EE20 F007          	lfsr	2,7
 23295  015446  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23296  015448  26D9               	addwf	fsr2l,f,c
 23297  01544A  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23298  01544C  22DA               	addwfc	fsr2h,f,c
 23299  01544E  010F               	movlb	15	; () banked
 23300  015450  513B               	movf	59,w,b	;volatile
 23301  015452  ECCF  F0B5         	call	_x_to_d
 23302  015456  6EDF               	movwf	indf2,c
 23303                           
 23304                           ;My_RTCC.c: 95: tm->ss = x_to_d(RTCVALL);
 23305  015458  0100               	movlb	0	; () banked
 23306  01545A  EE20 F004          	lfsr	2,4
 23307  01545E  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23308  015460  26D9               	addwf	fsr2l,f,c
 23309  015462  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23310  015464  22DA               	addwfc	fsr2h,f,c
 23311  015466  010F               	movlb	15	; () banked
 23312  015468  513A               	movf	58,w,b	;volatile
 23313  01546A  ECCF  F0B5         	call	_x_to_d
 23314  01546E  6EDF               	movwf	indf2,c
 23315                           
 23316                           ;My_RTCC.c: 96: tm->mm = x_to_d(RTCVALH);
 23317  015470  0100               	movlb	0	; () banked
 23318  015472  EE20 F005          	lfsr	2,5
 23319  015476  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23320  015478  26D9               	addwf	fsr2l,f,c
 23321  01547A  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23322  01547C  22DA               	addwfc	fsr2h,f,c
 23323  01547E  010F               	movlb	15	; () banked
 23324  015480  513B               	movf	59,w,b	;volatile
 23325  015482  ECCF  F0B5         	call	_x_to_d
 23326  015486  6EDF               	movwf	indf2,c
 23327  015488  0012               	return		;funcret
 23328  01548A                     __end_of_RTCC_to_caltime:
 23329                           	opt stack 0
 23330                           tblptru	equ	0xFF8
 23331                           tblptrh	equ	0xFF7
 23332                           tblptrl	equ	0xFF6
 23333                           tablat	equ	0xFF5
 23334                           prodh	equ	0xFF4
 23335                           prodl	equ	0xFF3
 23336                           intcon	equ	0xFF2
 23337                           intcon2	equ	0xFF1
 23338                           postinc0	equ	0xFEE
 23339                           wreg	equ	0xFE8
 23340                           indf1	equ	0xFE7
 23341                           postinc1	equ	0xFE6
 23342                           postdec1	equ	0xFE5
 23343                           fsr1h	equ	0xFE2
 23344                           fsr1l	equ	0xFE1
 23345                           indf2	equ	0xFDF
 23346                           postinc2	equ	0xFDE
 23347                           postdec2	equ	0xFDD
 23348                           plusw2	equ	0xFDB
 23349                           fsr2h	equ	0xFDA
 23350                           fsr2l	equ	0xFD9
 23351                           status	equ	0xFD8
 23352                           
 23353 ;; *************** function _x_to_d *****************
 23354 ;; Defined at:
 23355 ;;		line 45 in file "../../../My_library/My_RTCC.c"
 23356 ;; Parameters:    Size  Location     Type
 23357 ;;  hex             1    wreg     unsigned char 
 23358 ;; Auto vars:     Size  Location     Type
 23359 ;;  hex             1    1[BANK0 ] unsigned char 
 23360 ;; Return value:  Size  Location     Type
 23361 ;;                  1    wreg      unsigned char 
 23362 ;; Registers used:
 23363 ;;		wreg, status,2, status,0, prodl, prodh
 23364 ;; Tracked objects:
 23365 ;;		On entry : 0/0
 23366 ;;		On exit  : 0/0
 23367 ;;		Unchanged: 0/0
 23368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23370 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23371 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23372 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23373 ;;Total ram usage:        2 bytes
 23374 ;; Hardware stack levels used:    1
 23375 ;; Hardware stack levels required when called:   11
 23376 ;; This function calls:
 23377 ;;		Nothing
 23378 ;; This function is called by:
 23379 ;;		_RTCC_to_caltime
 23380 ;; This function uses a non-reentrant model
 23381 ;;
 23382                           
 23383                           	psect	text99
 23384  016B9E                     __ptext99:
 23385                           	opt stack 0
 23386  016B9E                     _x_to_d:
 23387                           	opt stack 12
 23388                           
 23389                           ;incstack = 0
 23390                           ;x_to_d@hex stored from wreg
 23391  016B9E  0100               	movlb	0	; () banked
 23392  016BA0  6F61               	movwf	x_to_d@hex& (0+255),b
 23393                           
 23394                           ;My_RTCC.c: 46: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 23395  016BA2  C061  F060         	movff	x_to_d@hex,??_x_to_d
 23396  016BA6  0E0F               	movlw	15
 23397  016BA8  0100               	movlb	0	; () banked
 23398  016BAA  1760               	andwf	??_x_to_d& (0+255),f,b
 23399  016BAC  0100               	movlb	0	; () banked
 23400  016BAE  3961               	swapf	x_to_d@hex& (0+255),w,b
 23401  016BB0  0B0F               	andlw	15
 23402  016BB2  0B0F               	andlw	15
 23403  016BB4  0D0A               	mullw	10
 23404  016BB6  50F3               	movf	prodl,w,c
 23405  016BB8  0100               	movlb	0	; () banked
 23406  016BBA  2560               	addwf	??_x_to_d& (0+255),w,b
 23407  016BBC  0012               	return	
 23408  016BBE                     __end_of_x_to_d:
 23409                           	opt stack 0
 23410                           tblptru	equ	0xFF8
 23411                           tblptrh	equ	0xFF7
 23412                           tblptrl	equ	0xFF6
 23413                           tablat	equ	0xFF5
 23414                           prodh	equ	0xFF4
 23415                           prodl	equ	0xFF3
 23416                           intcon	equ	0xFF2
 23417                           intcon2	equ	0xFF1
 23418                           postinc0	equ	0xFEE
 23419                           wreg	equ	0xFE8
 23420                           indf1	equ	0xFE7
 23421                           postinc1	equ	0xFE6
 23422                           postdec1	equ	0xFE5
 23423                           fsr1h	equ	0xFE2
 23424                           fsr1l	equ	0xFE1
 23425                           indf2	equ	0xFDF
 23426                           postinc2	equ	0xFDE
 23427                           postdec2	equ	0xFDD
 23428                           plusw2	equ	0xFDB
 23429                           fsr2h	equ	0xFDA
 23430                           fsr2l	equ	0xFD9
 23431                           status	equ	0xFD8
 23432                           
 23433 ;; *************** function _ISR *****************
 23434 ;; Defined at:
 23435 ;;		line 49 in file "main.c"
 23436 ;; Parameters:    Size  Location     Type
 23437 ;;		None
 23438 ;; Auto vars:     Size  Location     Type
 23439 ;;		None
 23440 ;; Return value:  Size  Location     Type
 23441 ;;		None               void
 23442 ;; Registers used:
 23443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23444 ;; Tracked objects:
 23445 ;;		On entry : 0/0
 23446 ;;		On exit  : 0/0
 23447 ;;		Unchanged: 0/0
 23448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23451 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23452 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23453 ;;Total ram usage:       14 bytes
 23454 ;; Hardware stack levels used:    1
 23455 ;; Hardware stack levels required when called:   10
 23456 ;; This function calls:
 23457 ;;		_LED_indicator
 23458 ;;		_USB_ISR
 23459 ;;		_millis_timer
 23460 ;; This function is called by:
 23461 ;;		Interrupt level 2
 23462 ;; This function uses a non-reentrant model
 23463 ;;
 23464                           
 23465                           	psect	intcode
 23466  001008                     __pintcode:
 23467                           	opt stack 0
 23468  001008                     _ISR:
 23469                           	opt stack 11
 23470                           
 23471                           ; BSR set to: 0
 23472                           ;incstack = 0
 23473  001008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 23474  00100A  CFFA F04B          	movff	pclath,??_ISR
 23475  00100E  CFFB F04C          	movff	pclatu,??_ISR+1
 23476  001012  CFE9 F04D          	movff	fsr0l,??_ISR+2
 23477  001016  CFEA F04E          	movff	fsr0h,??_ISR+3
 23478  00101A  CFE1 F04F          	movff	fsr1l,??_ISR+4
 23479  00101E  CFE2 F050          	movff	fsr1h,??_ISR+5
 23480  001022  CFD9 F051          	movff	fsr2l,??_ISR+6
 23481  001026  CFDA F052          	movff	fsr2h,??_ISR+7
 23482  00102A  CFF3 F053          	movff	prodl,??_ISR+8
 23483  00102E  CFF4 F054          	movff	prodh,??_ISR+9
 23484  001032  CFF6 F055          	movff	tblptrl,??_ISR+10
 23485  001036  CFF7 F056          	movff	tblptrh,??_ISR+11
 23486  00103A  CFF8 F057          	movff	tblptru,??_ISR+12
 23487  00103E  CFF5 F058          	movff	tablat,??_ISR+13
 23488                           
 23489                           ;main.c: 50: USB_ISR();
 23490  001042  EC53  F0B6         	call	_USB_ISR	;wreg free
 23491                           
 23492                           ;main.c: 51: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 23493  001046  B4F2               	btfsc	intcon,2,c	;volatile
 23494  001048  AAF2               	btfss	intcon,5,c	;volatile
 23495  00104A  D003               	goto	i2l9663
 23496                           
 23497                           ;main.c: 52: INTCONbits.T0IF = 0;
 23498  00104C  94F2               	bcf	intcon,2,c	;volatile
 23499                           
 23500                           ;main.c: 53: millis_timer();
 23501  00104E  ECAC  F0B5         	call	_millis_timer	;wreg free
 23502  001052                     i2l9663:
 23503                           
 23504                           ;main.c: 54: }
 23505                           ;main.c: 55: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 23506  001052  B09E               	btfsc	3998,0,c	;volatile
 23507  001054  A09D               	btfss	3997,0,c	;volatile
 23508  001056  D017               	goto	i2l9679
 23509                           
 23510                           ;main.c: 56: PIR1bits.TMR1IF = 0;
 23511  001058  909E               	bcf	3998,0,c	;volatile
 23512                           
 23513                           ;main.c: 57: TMR1H = 0xC0;
 23514  00105A  0EC0               	movlw	192
 23515  00105C  6ECF               	movwf	4047,c	;volatile
 23516                           
 23517                           ;main.c: 58: cut_time_flag = 1;
 23518  00105E  0E01               	movlw	1
 23519  001060  6E1B               	movwf	_cut_time_flag,c
 23520                           
 23521                           ;main.c: 59: static uint8_t cnt_t1 = 0;
 23522                           ;main.c: 60: if (cnt_t1) {
 23523  001062  500E               	movf	ISR@cnt_t1,w,c
 23524  001064  B4D8               	btfsc	status,2,c
 23525  001066  D003               	goto	i2l9673
 23526                           
 23527                           ;main.c: 61: cnt_t1 = 0;
 23528  001068  0E00               	movlw	0
 23529  00106A  6E0E               	movwf	ISR@cnt_t1,c
 23530                           
 23531                           ;main.c: 62: } else {
 23532  00106C  D00C               	goto	i2l9679
 23533  00106E                     i2l9673:
 23534                           
 23535                           ;main.c: 63: cnt_t1 = 1;
 23536  00106E  0E01               	movlw	1
 23537  001070  6E0E               	movwf	ISR@cnt_t1,c
 23538                           
 23539                           ;main.c: 64: terminal_data_out_flag = 1;
 23540  001072  0E01               	movlw	1
 23541  001074  6E24               	movwf	_terminal_data_out_flag,c
 23542                           
 23543                           ;main.c: 65: integrate_flag = 1;
 23544  001076  0E01               	movlw	1
 23545  001078  6E1F               	movwf	_integrate_flag,c
 23546                           
 23547                           ;main.c: 66: if (print_item == PRINT_DATA)display_flag = 1;
 23548  00107A  0E02               	movlw	2
 23549  00107C  1820               	xorwf	_print_item,w,c
 23550  00107E  A4D8               	btfss	status,2,c
 23551  001080  D002               	goto	i2l9679
 23552  001082  0E01               	movlw	1
 23553  001084  6E1D               	movwf	_display_flag,c
 23554  001086                     i2l9679:
 23555                           
 23556                           ;main.c: 67: }
 23557                           ;main.c: 68: }
 23558                           ;main.c: 69: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 23559  001086  B2A1               	btfsc	4001,1,c	;volatile
 23560  001088  A2A0               	btfss	4000,1,c	;volatile
 23561  00108A  D00C               	goto	i2l417
 23562                           
 23563                           ;main.c: 70: PIR2bits.TMR3IF = 0;
 23564  00108C  92A1               	bcf	4001,1,c	;volatile
 23565                           
 23566                           ;main.c: 71: ctmu_sampling_flag = 1;
 23567  00108E  0E01               	movlw	1
 23568  001090  6E1A               	movwf	_ctmu_sampling_flag,c
 23569                           
 23570                           ;main.c: 72: static uint8_t cnt;
 23571                           ;main.c: 73: if (cnt) {
 23572  001092  500D               	movf	ISR@cnt,w,c
 23573  001094  B4D8               	btfsc	status,2,c
 23574  001096  D002               	goto	i2l9689
 23575                           
 23576                           ;main.c: 74: cnt--;
 23577  001098  060D               	decf	ISR@cnt,f,c
 23578                           
 23579                           ;main.c: 75: } else {
 23580  00109A  D004               	goto	i2l417
 23581  00109C                     i2l9689:
 23582                           
 23583                           ;main.c: 76: cnt = 8;
 23584  00109C  0E08               	movlw	8
 23585  00109E  6E0D               	movwf	ISR@cnt,c
 23586                           
 23587                           ;main.c: 77: LED_indicator();
 23588  0010A0  EC1E  F09D         	call	_LED_indicator	;wreg free
 23589  0010A4                     i2l417:
 23590  0010A4  C058  FFF5         	movff	??_ISR+13,tablat
 23591  0010A8  C057  FFF8         	movff	??_ISR+12,tblptru
 23592  0010AC  C056  FFF7         	movff	??_ISR+11,tblptrh
 23593  0010B0  C055  FFF6         	movff	??_ISR+10,tblptrl
 23594  0010B4  C054  FFF4         	movff	??_ISR+9,prodh
 23595  0010B8  C053  FFF3         	movff	??_ISR+8,prodl
 23596  0010BC  C052  FFDA         	movff	??_ISR+7,fsr2h
 23597  0010C0  C051  FFD9         	movff	??_ISR+6,fsr2l
 23598  0010C4  C050  FFE2         	movff	??_ISR+5,fsr1h
 23599  0010C8  C04F  FFE1         	movff	??_ISR+4,fsr1l
 23600  0010CC  C04E  FFEA         	movff	??_ISR+3,fsr0h
 23601  0010D0  C04D  FFE9         	movff	??_ISR+2,fsr0l
 23602  0010D4  C04C  FFFB         	movff	??_ISR+1,pclatu
 23603  0010D8  C04B  FFFA         	movff	??_ISR,pclath
 23604  0010DC  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 23605  0010DE  0011               	retfie		f
 23606  0010E0                     __end_of_ISR:
 23607                           	opt stack 0
 23608                           pclatu	equ	0xFFB
 23609                           pclath	equ	0xFFA
 23610                           tblptru	equ	0xFF8
 23611                           tblptrh	equ	0xFF7
 23612                           tblptrl	equ	0xFF6
 23613                           tablat	equ	0xFF5
 23614                           prodh	equ	0xFF4
 23615                           prodl	equ	0xFF3
 23616                           intcon	equ	0xFF2
 23617                           intcon2	equ	0xFF1
 23618                           postinc0	equ	0xFEE
 23619                           fsr0h	equ	0xFEA
 23620                           fsr0l	equ	0xFE9
 23621                           wreg	equ	0xFE8
 23622                           indf1	equ	0xFE7
 23623                           postinc1	equ	0xFE6
 23624                           postdec1	equ	0xFE5
 23625                           fsr1h	equ	0xFE2
 23626                           fsr1l	equ	0xFE1
 23627                           indf2	equ	0xFDF
 23628                           postinc2	equ	0xFDE
 23629                           postdec2	equ	0xFDD
 23630                           plusw2	equ	0xFDB
 23631                           fsr2h	equ	0xFDA
 23632                           fsr2l	equ	0xFD9
 23633                           status	equ	0xFD8
 23634                           
 23635 ;; *************** function _millis_timer *****************
 23636 ;; Defined at:
 23637 ;;		line 302 in file "../../../My_library/My_PIC.c"
 23638 ;; Parameters:    Size  Location     Type
 23639 ;;		None
 23640 ;; Auto vars:     Size  Location     Type
 23641 ;;		None
 23642 ;; Return value:  Size  Location     Type
 23643 ;;		None               void
 23644 ;; Registers used:
 23645 ;;		wreg, status,2, status,0
 23646 ;; Tracked objects:
 23647 ;;		On entry : 0/0
 23648 ;;		On exit  : 0/0
 23649 ;;		Unchanged: 0/0
 23650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23655 ;;Total ram usage:        0 bytes
 23656 ;; Hardware stack levels used:    1
 23657 ;; This function calls:
 23658 ;;		Nothing
 23659 ;; This function is called by:
 23660 ;;		_ISR
 23661 ;; This function uses a non-reentrant model
 23662 ;;
 23663                           
 23664                           	psect	text101
 23665  016B58                     __ptext101:
 23666                           	opt stack 0
 23667  016B58                     _millis_timer:
 23668                           	opt stack 20
 23669                           
 23670                           ;My_PIC.c: 303: static uint16_t cnt;
 23671                           ;My_PIC.c: 304: if (cnt) {
 23672                           
 23673                           ;incstack = 0
 23674  016B58  0101               	movlb	1	; () banked
 23675  016B5A  5120               	movf	millis_timer@cnt& (0+255),w,b
 23676  016B5C  0101               	movlb	1	; () banked
 23677  016B5E  1121               	iorwf	(millis_timer@cnt+1)& (0+255),w,b
 23678  016B60  A4D8               	btfss	status,2,c
 23679  016B62  0012               	return	
 23680                           
 23681                           ; BSR set to: 1
 23682                           ;My_PIC.c: 307: cnt = 47;
 23683                           
 23684                           ; BSR set to: 1
 23685                           
 23686                           ; BSR set to: 1
 23687                           ;My_PIC.c: 306: } else {
 23688  016B64  0E00               	movlw	0
 23689  016B66  0101               	movlb	1	; () banked
 23690  016B68  6F21               	movwf	(millis_timer@cnt+1)& (0+255),b
 23691  016B6A  0E2F               	movlw	47
 23692  016B6C  6F20               	movwf	millis_timer@cnt& (0+255),b
 23693                           
 23694                           ; BSR set to: 1
 23695                           ;My_PIC.c: 308: ms++;
 23696  016B6E  0E01               	movlw	1
 23697  016B70  0101               	movlb	1	; () banked
 23698  016B72  2706               	addwf	_ms& (0+255),f,b
 23699  016B74  0E00               	movlw	0
 23700  016B76  2307               	addwfc	(_ms+1)& (0+255),f,b
 23701  016B78  2308               	addwfc	(_ms+2)& (0+255),f,b
 23702  016B7A  2309               	addwfc	(_ms+3)& (0+255),f,b
 23703  016B7C  0012               	return	
 23704  016B7E                     __end_of_millis_timer:
 23705                           	opt stack 0
 23706                           pclatu	equ	0xFFB
 23707                           pclath	equ	0xFFA
 23708                           tblptru	equ	0xFF8
 23709                           tblptrh	equ	0xFF7
 23710                           tblptrl	equ	0xFF6
 23711                           tablat	equ	0xFF5
 23712                           prodh	equ	0xFF4
 23713                           prodl	equ	0xFF3
 23714                           intcon	equ	0xFF2
 23715                           intcon2	equ	0xFF1
 23716                           postinc0	equ	0xFEE
 23717                           fsr0h	equ	0xFEA
 23718                           fsr0l	equ	0xFE9
 23719                           wreg	equ	0xFE8
 23720                           indf1	equ	0xFE7
 23721                           postinc1	equ	0xFE6
 23722                           postdec1	equ	0xFE5
 23723                           fsr1h	equ	0xFE2
 23724                           fsr1l	equ	0xFE1
 23725                           indf2	equ	0xFDF
 23726                           postinc2	equ	0xFDE
 23727                           postdec2	equ	0xFDD
 23728                           plusw2	equ	0xFDB
 23729                           fsr2h	equ	0xFDA
 23730                           fsr2l	equ	0xFD9
 23731                           status	equ	0xFD8
 23732                           
 23733 ;; *************** function _USB_ISR *****************
 23734 ;; Defined at:
 23735 ;;		line 7 in file "../../../My_library/My_usb_cdc.c"
 23736 ;; Parameters:    Size  Location     Type
 23737 ;;		None
 23738 ;; Auto vars:     Size  Location     Type
 23739 ;;		None
 23740 ;; Return value:  Size  Location     Type
 23741 ;;		None               void
 23742 ;; Registers used:
 23743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23744 ;; Tracked objects:
 23745 ;;		On entry : 0/0
 23746 ;;		On exit  : 0/0
 23747 ;;		Unchanged: 0/0
 23748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23753 ;;Total ram usage:        0 bytes
 23754 ;; Hardware stack levels used:    1
 23755 ;; Hardware stack levels required when called:    9
 23756 ;; This function calls:
 23757 ;;		_USBDeviceTasks
 23758 ;; This function is called by:
 23759 ;;		_ISR
 23760 ;; This function uses a non-reentrant model
 23761 ;;
 23762                           
 23763                           	psect	text102
 23764  016CA6                     __ptext102:
 23765                           	opt stack 0
 23766  016CA6                     _USB_ISR:
 23767                           	opt stack 11
 23768                           
 23769                           ;My_usb_cdc.c: 8: USBDeviceTasks();
 23770                           
 23771                           ; BSR set to: 1
 23772                           ;incstack = 0
 23773  016CA6  ECA6  F09A         	call	_USBDeviceTasks	;wreg free
 23774  016CAA  0012               	return		;funcret
 23775  016CAC                     __end_of_USB_ISR:
 23776                           	opt stack 0
 23777                           pclatu	equ	0xFFB
 23778                           pclath	equ	0xFFA
 23779                           tblptru	equ	0xFF8
 23780                           tblptrh	equ	0xFF7
 23781                           tblptrl	equ	0xFF6
 23782                           tablat	equ	0xFF5
 23783                           prodh	equ	0xFF4
 23784                           prodl	equ	0xFF3
 23785                           intcon	equ	0xFF2
 23786                           intcon2	equ	0xFF1
 23787                           postinc0	equ	0xFEE
 23788                           fsr0h	equ	0xFEA
 23789                           fsr0l	equ	0xFE9
 23790                           wreg	equ	0xFE8
 23791                           indf1	equ	0xFE7
 23792                           postinc1	equ	0xFE6
 23793                           postdec1	equ	0xFE5
 23794                           fsr1h	equ	0xFE2
 23795                           fsr1l	equ	0xFE1
 23796                           indf2	equ	0xFDF
 23797                           postinc2	equ	0xFDE
 23798                           postdec2	equ	0xFDD
 23799                           plusw2	equ	0xFDB
 23800                           fsr2h	equ	0xFDA
 23801                           fsr2l	equ	0xFD9
 23802                           status	equ	0xFD8
 23803                           
 23804 ;; *************** function _USBDeviceTasks *****************
 23805 ;; Defined at:
 23806 ;;		line 489 in file "../../../My_library/usb/usb_device.c"
 23807 ;; Parameters:    Size  Location     Type
 23808 ;;		None
 23809 ;; Auto vars:     Size  Location     Type
 23810 ;;  i               1   29[COMRAM] unsigned char 
 23811 ;; Return value:  Size  Location     Type
 23812 ;;		None               void
 23813 ;; Registers used:
 23814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23815 ;; Tracked objects:
 23816 ;;		On entry : 0/0
 23817 ;;		On exit  : 0/0
 23818 ;;		Unchanged: 0/0
 23819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23821 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23823 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23824 ;;Total ram usage:        1 bytes
 23825 ;; Hardware stack levels used:    1
 23826 ;; Hardware stack levels required when called:    8
 23827 ;; This function calls:
 23828 ;;		_USBCtrlEPAllowStatusStage
 23829 ;;		_USBCtrlEPService
 23830 ;;		_USBStallHandler
 23831 ;;		_USBSuspend
 23832 ;;		_USBWakeFromSuspend
 23833 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23834 ;;		i2_USBDeviceInit
 23835 ;; This function is called by:
 23836 ;;		_USB_ISR
 23837 ;; This function uses a non-reentrant model
 23838 ;;
 23839                           
 23840                           	psect	text103
 23841  01354C                     __ptext103:
 23842                           	opt stack 0
 23843  01354C                     _USBDeviceTasks:
 23844                           	opt stack 11
 23845                           
 23846                           ;usb_device.c: 491: uint8_t i;
 23847                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 23848                           
 23849                           ;incstack = 0
 23850  01354C  0414               	decf	_USBDeviceState,w,c	;volatile
 23851  01354E  B4D8               	btfsc	status,2,c
 23852                           
 23853                           ;usb_device.c: 603: {
 23854                           ;usb_device.c: 613: if(!UCONbits.SE0)
 23855  013550  BA65               	btfsc	3941,5,c	;volatile
 23856  013552  D008               	goto	i2l9177
 23857                           
 23858                           ;usb_device.c: 614: {
 23859                           ;usb_device.c: 615: {UIR = 0;};
 23860  013554  0E00               	movlw	0
 23861  013556  6E62               	movwf	3938,c	;volatile
 23862                           
 23863                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 23864  013558  010F               	movlb	15	; () banked
 23865  01355A  8136               	bsf	54,0,b	;volatile
 23866                           
 23867                           ; BSR set to: 15
 23868                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 23869  01355C  010F               	movlb	15	; () banked
 23870  01355E  8936               	bsf	54,4,b	;volatile
 23871                           
 23872                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 23873  013560  0E02               	movlw	2
 23874  013562  6E14               	movwf	_USBDeviceState,c	;volatile
 23875  013564                     i2l9177:
 23876                           
 23877                           ;usb_device.c: 622: }
 23878                           ;usb_device.c: 623: }
 23879                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 23880  013564  A462               	btfss	3938,2,c	;volatile
 23881  013566  D006               	goto	i2l9185
 23882  013568  010F               	movlb	15	; () banked
 23883  01356A  A536               	btfss	54,2,b	;volatile
 23884  01356C  D003               	goto	i2l9185
 23885                           
 23886                           ; BSR set to: 15
 23887                           ;usb_device.c: 640: {
 23888                           ;usb_device.c: 641: (UIR &= 0xFB);
 23889  01356E  9462               	bcf	3938,2,c	;volatile
 23890                           
 23891                           ; BSR set to: 15
 23892                           ;usb_device.c: 645: USBWakeFromSuspend();
 23893  013570  EC3A  F0B4         	call	_USBWakeFromSuspend	;wreg free
 23894  013574                     i2l9185:
 23895                           
 23896                           ;usb_device.c: 647: }
 23897                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 23898  013574  A265               	btfss	3941,1,c	;volatile
 23899  013576  D002               	goto	i2l1445
 23900                           
 23901                           ;usb_device.c: 653: {
 23902                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 23903  013578  98A1               	bcf	4001,4,c	;volatile
 23904                           
 23905                           ;usb_device.c: 655: return;
 23906  01357A  0012               	return	
 23907  01357C                     i2l1445:
 23908                           
 23909                           ;usb_device.c: 656: }
 23910                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 23911  01357C  A062               	btfss	3938,0,c	;volatile
 23912  01357E  D009               	goto	i2l9199
 23913  013580  010F               	movlb	15	; () banked
 23914  013582  A136               	btfss	54,0,b	;volatile
 23915  013584  D006               	goto	i2l9199
 23916                           
 23917                           ; BSR set to: 15
 23918                           ;usb_device.c: 669: {
 23919                           ;usb_device.c: 670: USBDeviceInit();
 23920  013586  EC48  F09B         	call	i2_USBDeviceInit	;wreg free
 23921                           
 23922                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 23923  01358A  88A0               	bsf	4000,4,c	;volatile
 23924                           
 23925                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 23926  01358C  0E04               	movlw	4
 23927  01358E  6E14               	movwf	_USBDeviceState,c	;volatile
 23928                           
 23929                           ;usb_device.c: 686: (UIR &= 0xFE);
 23930  013590  9062               	bcf	3938,0,c	;volatile
 23931  013592                     i2l9199:
 23932                           
 23933                           ;usb_device.c: 687: }
 23934                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 23935  013592  A862               	btfss	3938,4,c	;volatile
 23936  013594  D006               	goto	i2l9207
 23937  013596  010F               	movlb	15	; () banked
 23938  013598  A936               	btfss	54,4,b	;volatile
 23939  01359A  D003               	goto	i2l9207
 23940                           
 23941                           ; BSR set to: 15
 23942                           ;usb_device.c: 693: {
 23943                           ;usb_device.c: 698: USBSuspend();
 23944  01359C  EC0A  F0B5         	call	_USBSuspend	;wreg free
 23945                           
 23946                           ;usb_device.c: 701: (UIR &= 0xEF);
 23947  0135A0  9862               	bcf	3938,4,c	;volatile
 23948  0135A2                     i2l9207:
 23949                           
 23950                           ;usb_device.c: 702: }
 23951                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 23952  0135A2  AC62               	btfss	3938,6,c	;volatile
 23953  0135A4  D019               	goto	i2l9223
 23954                           
 23955                           ;usb_device.c: 705: {
 23956                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 23957  0135A6  010F               	movlb	15	; () banked
 23958  0135A8  AD36               	btfss	54,6,b	;volatile
 23959  0135AA  D00E               	goto	i2l9213
 23960                           
 23961                           ; BSR set to: 15
 23962                           ;usb_device.c: 707: {
 23963                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 23964  0135AC  0E00               	movlw	0
 23965  0135AE  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23966  0135B0  0E73               	movlw	115
 23967  0135B2  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23968  0135B4  0E00               	movlw	0
 23969  0135B6  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 23970  0135B8  0E00               	movlw	0
 23971  0135BA  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 23972  0135BC  0E00               	movlw	0
 23973  0135BE  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23974  0135C0  0E01               	movlw	1
 23975  0135C2  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23976  0135C4  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23977  0135C8                     i2l9213:
 23978                           
 23979                           ;usb_device.c: 709: }
 23980                           ;usb_device.c: 710: (UIR &= 0xBF);
 23981  0135C8  9C62               	bcf	3938,6,c	;volatile
 23982                           
 23983                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 23984  0135CA  5017               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 23985  0135CC  A4D8               	btfss	status,2,c
 23986                           
 23987                           ;usb_device.c: 736: {
 23988                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 23989  0135CE  0617               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 23990                           
 23991                           ;usb_device.c: 738: }
 23992                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 23993  0135D0  5017               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 23994  0135D2  B4D8               	btfsc	status,2,c
 23995                           
 23996                           ;usb_device.c: 745: {
 23997                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 23998  0135D4  EC05  F0A8         	call	_USBCtrlEPAllowStatusStage	;wreg free
 23999  0135D8                     i2l9223:
 24000                           
 24001                           ;usb_device.c: 747: }
 24002                           ;usb_device.c: 749: }
 24003                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 24004  0135D8  AA62               	btfss	3938,5,c	;volatile
 24005  0135DA  D004               	goto	i2l9229
 24006  0135DC  010F               	movlb	15	; () banked
 24007  0135DE  BB36               	btfsc	54,5,b	;volatile
 24008                           
 24009                           ; BSR set to: 15
 24010                           ;usb_device.c: 752: {
 24011                           ;usb_device.c: 753: USBStallHandler();
 24012  0135E0  ECF7  F0B2         	call	_USBStallHandler	;wreg free
 24013  0135E4                     i2l9229:
 24014                           
 24015                           ;usb_device.c: 754: }
 24016                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 24017  0135E4  A262               	btfss	3938,1,c	;volatile
 24018  0135E6  D012               	goto	i2l9237
 24019  0135E8  010F               	movlb	15	; () banked
 24020  0135EA  A336               	btfss	54,1,b	;volatile
 24021  0135EC  D00F               	goto	i2l9237
 24022                           
 24023                           ; BSR set to: 15
 24024                           ;usb_device.c: 757: {
 24025                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 24026  0135EE  0E7F               	movlw	127
 24027  0135F0  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24028  0135F2  6839               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24029  0135F4  0E00               	movlw	0
 24030  0135F6  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24031  0135F8  0E00               	movlw	0
 24032  0135FA  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24033  0135FC  0E00               	movlw	0
 24034  0135FE  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24035  013600  0E01               	movlw	1
 24036  013602  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24037  013604  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24038                           
 24039                           ;usb_device.c: 759: {UEIR = 0;};
 24040  013608  0E00               	movlw	0
 24041  01360A  6E63               	movwf	3939,c	;volatile
 24042  01360C                     i2l9237:
 24043                           
 24044                           ;usb_device.c: 767: }
 24045                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 24046  01360C  0E04               	movlw	4
 24047  01360E  6014               	cpfslt	_USBDeviceState,c	;volatile
 24048  013610  D002               	goto	i2l1455
 24049                           
 24050                           ;usb_device.c: 775: {
 24051                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 24052  013612  98A1               	bcf	4001,4,c	;volatile
 24053                           
 24054                           ;usb_device.c: 777: return;
 24055  013614  0012               	return	
 24056  013616                     i2l1455:
 24057                           
 24058                           ;usb_device.c: 778: }
 24059                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 24060  013616  010F               	movlb	15	; () banked
 24061  013618  A736               	btfss	54,3,b	;volatile
 24062  01361A  D038               	goto	i2l1456
 24063                           
 24064                           ; BSR set to: 15
 24065                           ;usb_device.c: 784: {
 24066                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 24067  01361C  0E00               	movlw	0
 24068  01361E  6E4A               	movwf	USBDeviceTasks@i,c
 24069  013620                     i2l9243:
 24070                           
 24071                           ; BSR set to: 15
 24072  013620  0E03               	movlw	3
 24073  013622  644A               	cpfsgt	USBDeviceTasks@i,c
 24074  013624  D001               	goto	i2l1457
 24075  013626  D032               	goto	i2l1456
 24076  013628                     i2l1457:
 24077                           
 24078                           ;usb_device.c: 786: {
 24079                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 24080  013628  A662               	btfss	3938,3,c	;volatile
 24081  01362A  D030               	goto	i2l1456
 24082                           
 24083                           ;usb_device.c: 788: {
 24084                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 24085  01362C  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 24086                           
 24087                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 24088  013630  302C               	rrcf	_USTATcopy,w,c	;volatile
 24089  013632  32E8               	rrcf	wreg,f,c
 24090  013634  32E8               	rrcf	wreg,f,c
 24091  013636  0B0F               	andlw	15
 24092  013638  6E1E               	movwf	_endpoint_number,c	;volatile
 24093                           
 24094                           ;usb_device.c: 793: (UIR &= 0xF7);
 24095  01363A  9662               	bcf	3938,3,c	;volatile
 24096                           
 24097                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 24098  01363C  B42C               	btfsc	_USTATcopy,2,c	;volatile
 24099  01363E  D007               	goto	i2l9257
 24100                           
 24101                           ;usb_device.c: 799: {
 24102                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 24103  013640  501E               	movf	_endpoint_number,w,c	;volatile
 24104  013642  0D01               	mullw	1
 24105  013644  0E04               	movlw	low _ep_data_out
 24106  013646  24F3               	addwf	prodl,w,c
 24107  013648  6ED9               	movwf	fsr2l,c
 24108  01364A  0E00               	movlw	high _ep_data_out
 24109  01364C  D006               	goto	L7
 24110  01364E                     i2l9257:
 24111                           
 24112                           ;usb_device.c: 802: else
 24113                           ;usb_device.c: 803: {
 24114                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 24115  01364E  501E               	movf	_endpoint_number,w,c	;volatile
 24116  013650  0D01               	mullw	1
 24117  013652  0E01               	movlw	low _ep_data_in
 24118  013654  24F3               	addwf	prodl,w,c
 24119  013656  6ED9               	movwf	fsr2l,c
 24120  013658  0E00               	movlw	high _ep_data_in
 24121  01365A                     L7:
 24122  01365A  20F4               	addwfc	prodh,w,c
 24123  01365C  6EDA               	movwf	fsr2h,c
 24124  01365E  70DF               	btg	indf2,0,c
 24125                           
 24126                           ;usb_device.c: 805: }
 24127                           ;usb_device.c: 810: if(endpoint_number == 0)
 24128  013660  501E               	movf	_endpoint_number,w,c	;volatile
 24129  013662  A4D8               	btfss	status,2,c
 24130  013664  D003               	goto	i2l9263
 24131                           
 24132                           ;usb_device.c: 811: {
 24133                           ;usb_device.c: 812: USBCtrlEPService();
 24134  013666  ECD3  F0A6         	call	_USBCtrlEPService	;wreg free
 24135                           
 24136                           ;usb_device.c: 813: }
 24137  01366A  D00E               	goto	i2l9265
 24138  01366C                     i2l9263:
 24139                           
 24140                           ;usb_device.c: 814: else
 24141                           ;usb_device.c: 815: {
 24142                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 24143  01366C  0E00               	movlw	0
 24144  01366E  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24145  013670  0E72               	movlw	114
 24146  013672  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24147  013674  0E2C               	movlw	low _USTATcopy
 24148  013676  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24149  013678  0E00               	movlw	high _USTATcopy
 24150  01367A  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24151  01367C  0E00               	movlw	0
 24152  01367E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24153  013680  0E00               	movlw	0
 24154  013682  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24155  013684  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24156  013688                     i2l9265:
 24157  013688  2A4A               	incf	USBDeviceTasks@i,f,c
 24158  01368A  D7CA               	goto	i2l9243
 24159  01368C                     i2l1456:
 24160                           
 24161                           ;usb_device.c: 822: }
 24162                           ;usb_device.c: 823: }
 24163                           ;usb_device.c: 824: }
 24164                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 24165  01368C  98A1               	bcf	4001,4,c	;volatile
 24166  01368E  0012               	return		;funcret
 24167  013690                     __end_of_USBDeviceTasks:
 24168                           	opt stack 0
 24169                           pclatu	equ	0xFFB
 24170                           pclath	equ	0xFFA
 24171                           tblptru	equ	0xFF8
 24172                           tblptrh	equ	0xFF7
 24173                           tblptrl	equ	0xFF6
 24174                           tablat	equ	0xFF5
 24175                           prodh	equ	0xFF4
 24176                           prodl	equ	0xFF3
 24177                           intcon	equ	0xFF2
 24178                           intcon2	equ	0xFF1
 24179                           postinc0	equ	0xFEE
 24180                           fsr0h	equ	0xFEA
 24181                           fsr0l	equ	0xFE9
 24182                           wreg	equ	0xFE8
 24183                           indf1	equ	0xFE7
 24184                           postinc1	equ	0xFE6
 24185                           postdec1	equ	0xFE5
 24186                           fsr1h	equ	0xFE2
 24187                           fsr1l	equ	0xFE1
 24188                           indf2	equ	0xFDF
 24189                           postinc2	equ	0xFDE
 24190                           postdec2	equ	0xFDD
 24191                           plusw2	equ	0xFDB
 24192                           fsr2h	equ	0xFDA
 24193                           fsr2l	equ	0xFD9
 24194                           status	equ	0xFD8
 24195                           
 24196 ;; *************** function i2_USBDeviceInit *****************
 24197 ;; Defined at:
 24198 ;;		line 298 in file "../../../My_library/usb/usb_device.c"
 24199 ;; Parameters:    Size  Location     Type
 24200 ;;		None
 24201 ;; Auto vars:     Size  Location     Type
 24202 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 24203 ;; Return value:  Size  Location     Type
 24204 ;;		None               void
 24205 ;; Registers used:
 24206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24207 ;; Tracked objects:
 24208 ;;		On entry : 0/0
 24209 ;;		On exit  : 0/0
 24210 ;;		Unchanged: 0/0
 24211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24213 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24215 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24216 ;;Total ram usage:        1 bytes
 24217 ;; Hardware stack levels used:    1
 24218 ;; Hardware stack levels required when called:    1
 24219 ;; This function calls:
 24220 ;;		i2_memset
 24221 ;; This function is called by:
 24222 ;;		_USBDeviceTasks
 24223 ;; This function uses a non-reentrant model
 24224 ;;
 24225                           
 24226                           	psect	text104
 24227  013690                     __ptext104:
 24228                           	opt stack 0
 24229  013690                     i2_USBDeviceInit:
 24230                           	opt stack 17
 24231                           
 24232                           ;usb_device.c: 300: uint8_t i;
 24233                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 24234                           
 24235                           ;incstack = 0
 24236  013690  98A0               	bcf	4000,4,c	;volatile
 24237                           
 24238                           ;usb_device.c: 305: {UEIR = 0;};
 24239  013692  0E00               	movlw	0
 24240  013694  6E63               	movwf	3939,c	;volatile
 24241                           
 24242                           ;usb_device.c: 308: {UIR = 0;};
 24243  013696  0E00               	movlw	0
 24244  013698  6E62               	movwf	3938,c	;volatile
 24245                           
 24246                           ;usb_device.c: 311: UEP0 = 0;
 24247  01369A  0E00               	movlw	0
 24248  01369C  010F               	movlb	15	; () banked
 24249  01369E  6F26               	movwf	38,b	;volatile
 24250                           
 24251                           ; BSR set to: 15
 24252                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 24253  0136A0  0E27               	movlw	39
 24254  0136A2  6E2D               	movwf	i2memset@p1,c
 24255  0136A4  0E0F               	movlw	15
 24256  0136A6  6E2E               	movwf	i2memset@p1+1,c
 24257  0136A8  0E00               	movlw	0
 24258  0136AA  6E30               	movwf	i2memset@c+1,c
 24259  0136AC  0E00               	movlw	0
 24260  0136AE  6E2F               	movwf	i2memset@c,c
 24261  0136B0  0E00               	movlw	0
 24262  0136B2  6E32               	movwf	i2memset@n+1,c
 24263  0136B4  0E02               	movlw	2
 24264  0136B6  6E31               	movwf	i2memset@n,c
 24265  0136B8  EC20  F0B5         	call	i2_memset	;wreg free
 24266                           
 24267                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 24268  0136BC  0E16               	movlw	22
 24269  0136BE  010F               	movlb	15	; () banked
 24270  0136C0  6F39               	movwf	57,b	;volatile
 24271                           
 24272                           ; BSR set to: 15
 24273  0136C2  0E9F               	movlw	159
 24274  0136C4  010F               	movlb	15	; () banked
 24275  0136C6  6F37               	movwf	55,b	;volatile
 24276                           
 24277                           ; BSR set to: 15
 24278  0136C8  0E7B               	movlw	123
 24279  0136CA  010F               	movlb	15	; () banked
 24280  0136CC  6F36               	movwf	54,b	;volatile
 24281                           
 24282                           ; BSR set to: 15
 24283                           ;usb_device.c: 318: ;
 24284                           ;usb_device.c: 321: ;
 24285                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 24286  0136CE  0E00               	movlw	0
 24287  0136D0  6E35               	movwf	i2USBDeviceInit@i,c
 24288  0136D2                     i2l8621:
 24289                           
 24290                           ; BSR set to: 15
 24291  0136D2  0E0B               	movlw	11
 24292  0136D4  6435               	cpfsgt	i2USBDeviceInit@i,c
 24293  0136D6  D001               	goto	i2l8625
 24294  0136D8  D00E               	goto	i2l1433
 24295  0136DA                     i2l8625:
 24296                           
 24297                           ;usb_device.c: 325: {
 24298                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 24299  0136DA  5035               	movf	i2USBDeviceInit@i,w,c
 24300  0136DC  0D04               	mullw	4
 24301  0136DE  0E00               	movlw	0
 24302  0136E0  24F3               	addwf	prodl,w,c
 24303  0136E2  6ED9               	movwf	fsr2l,c
 24304  0136E4  0E0D               	movlw	13
 24305  0136E6  20F4               	addwfc	prodh,w,c
 24306  0136E8  6EDA               	movwf	fsr2h,c
 24307  0136EA  6ADE               	clrf	postinc2,c
 24308  0136EC  6ADE               	clrf	postinc2,c
 24309  0136EE  6ADE               	clrf	postinc2,c
 24310  0136F0  6ADD               	clrf	postdec2,c
 24311  0136F2  2A35               	incf	i2USBDeviceInit@i,f,c
 24312  0136F4  D7EE               	goto	i2l8621
 24313  0136F6                     i2l1433:
 24314                           
 24315                           ;usb_device.c: 327: }
 24316                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 24317  0136F6  8C65               	bsf	3941,6,c	;volatile
 24318                           
 24319                           ;usb_device.c: 333: UADDR = 0x00;
 24320  0136F8  0E00               	movlw	0
 24321  0136FA  010F               	movlb	15	; () banked
 24322  0136FC  6F38               	movwf	56,b	;volatile
 24323                           
 24324                           ; BSR set to: 15
 24325                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 24326  0136FE  9865               	bcf	3941,4,c	;volatile
 24327                           
 24328                           ; BSR set to: 15
 24329                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 24330  013700  9C65               	bcf	3941,6,c	;volatile
 24331                           
 24332                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 24333  013702  D00C               	goto	i2l8645
 24334  013704                     i2l8637:
 24335                           
 24336                           ;usb_device.c: 343: {
 24337                           ;usb_device.c: 344: (UIR &= 0xF7);
 24338  013704  9662               	bcf	3938,3,c	;volatile
 24339                           
 24340                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 24341  013706  0E00               	movlw	0
 24342  013708  0100               	movlb	0	; () banked
 24343  01370A  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24344                           
 24345                           ; BSR set to: 0
 24346                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 24347  01370C  0E00               	movlw	0
 24348  01370E  0100               	movlb	0	; () banked
 24349  013710  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 24350                           
 24351                           ; BSR set to: 0
 24352                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 24353  013712  0E00               	movlw	0
 24354  013714  0100               	movlb	0	; () banked
 24355  013716  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 24356  013718  0E00               	movlw	0
 24357  01371A  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 24358  01371C                     i2l8645:
 24359  01371C  B662               	btfsc	3938,3,c	;volatile
 24360  01371E  D7F2               	goto	i2l8637
 24361                           
 24362                           ;usb_device.c: 349: }
 24363                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 24364  013720  0E01               	movlw	1
 24365  013722  6E15               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 24366                           
 24367                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 24368  013724  0E01               	movlw	1
 24369  013726  6E16               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 24370                           
 24371                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 24372  013728  0E00               	movlw	0
 24373  01372A  6E11               	movwf	_USBDeferINDataStagePackets,c	;volatile
 24374                           
 24375                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 24376  01372C  0E00               	movlw	0
 24377  01372E  6E12               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 24378                           
 24379                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 24380  013730  0E00               	movlw	0
 24381  013732  0101               	movlb	1	; () banked
 24382  013734  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24383                           
 24384                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 24385  013736  0E00               	movlw	0
 24386  013738  6E35               	movwf	i2USBDeviceInit@i,c
 24387  01373A                     i2l8649:
 24388                           
 24389                           ; BSR set to: 1
 24390  01373A  0E02               	movlw	2
 24391  01373C  6435               	cpfsgt	i2USBDeviceInit@i,c
 24392  01373E  D001               	goto	i2l8653
 24393  013740  D02E               	goto	i2l8659
 24394  013742                     i2l8653:
 24395                           
 24396                           ;usb_device.c: 363: {
 24397                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 24398  013742  5035               	movf	i2USBDeviceInit@i,w,c
 24399  013744  0D02               	mullw	2
 24400  013746  0EF5               	movlw	low _pBDTEntryIn
 24401  013748  24F3               	addwf	prodl,w,c
 24402  01374A  6ED9               	movwf	fsr2l,c
 24403  01374C  0E00               	movlw	high _pBDTEntryIn
 24404  01374E  20F4               	addwfc	prodh,w,c
 24405  013750  6EDA               	movwf	fsr2h,c
 24406  013752  0E00               	movlw	0
 24407  013754  6EDE               	movwf	postinc2,c
 24408  013756  0E00               	movlw	0
 24409  013758  6EDD               	movwf	postdec2,c
 24410                           
 24411                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 24412  01375A  5035               	movf	i2USBDeviceInit@i,w,c
 24413  01375C  0D02               	mullw	2
 24414  01375E  0E00               	movlw	low _pBDTEntryOut
 24415  013760  24F3               	addwf	prodl,w,c
 24416  013762  6ED9               	movwf	fsr2l,c
 24417  013764  0E01               	movlw	high _pBDTEntryOut
 24418  013766  20F4               	addwfc	prodh,w,c
 24419  013768  6EDA               	movwf	fsr2h,c
 24420  01376A  0E00               	movlw	0
 24421  01376C  6EDE               	movwf	postinc2,c
 24422  01376E  0E00               	movlw	0
 24423  013770  6EDD               	movwf	postdec2,c
 24424                           
 24425                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 24426  013772  5035               	movf	i2USBDeviceInit@i,w,c
 24427  013774  0D01               	mullw	1
 24428  013776  0E01               	movlw	low _ep_data_in
 24429  013778  24F3               	addwf	prodl,w,c
 24430  01377A  6ED9               	movwf	fsr2l,c
 24431  01377C  0E00               	movlw	high _ep_data_in
 24432  01377E  20F4               	addwfc	prodh,w,c
 24433  013780  6EDA               	movwf	fsr2h,c
 24434  013782  0E00               	movlw	0
 24435  013784  6EDF               	movwf	indf2,c
 24436                           
 24437                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 24438  013786  5035               	movf	i2USBDeviceInit@i,w,c
 24439  013788  0D01               	mullw	1
 24440  01378A  0E04               	movlw	low _ep_data_out
 24441  01378C  24F3               	addwf	prodl,w,c
 24442  01378E  6ED9               	movwf	fsr2l,c
 24443  013790  0E00               	movlw	high _ep_data_out
 24444  013792  20F4               	addwfc	prodh,w,c
 24445  013794  6EDA               	movwf	fsr2h,c
 24446  013796  0E00               	movlw	0
 24447  013798  6EDF               	movwf	indf2,c
 24448  01379A  2A35               	incf	i2USBDeviceInit@i,f,c
 24449  01379C  D7CE               	goto	i2l8649
 24450  01379E                     i2l8659:
 24451                           
 24452                           ;usb_device.c: 368: }
 24453                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 24454  01379E  0E08               	movlw	8
 24455  0137A0  0100               	movlb	0	; () banked
 24456  0137A2  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 24457  0137A4  0E0D               	movlw	13
 24458  0137A6  0100               	movlb	0	; () banked
 24459  0137A8  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 24460                           
 24461                           ; BSR set to: 0
 24462                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 24463  0137AA  0E16               	movlw	22
 24464  0137AC  010F               	movlb	15	; () banked
 24465  0137AE  6F26               	movwf	38,b	;volatile
 24466                           
 24467                           ; BSR set to: 15
 24468                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 24469  0137B0  0E0D               	movlw	13
 24470  0137B2  010D               	movlb	13	; () banked
 24471  0137B4  6F03               	movwf	3,b	;volatile
 24472  0137B6  0E30               	movlw	48
 24473  0137B8  6F02               	movwf	2,b	;volatile
 24474                           
 24475                           ; BSR set to: 13
 24476                           ;usb_device.c: 376: BDT[0].CNT = 8;
 24477  0137BA  0E08               	movlw	8
 24478  0137BC  010D               	movlb	13	; () banked
 24479  0137BE  6F01               	movwf	1,b	;volatile
 24480                           
 24481                           ; BSR set to: 13
 24482                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 24483  0137C0  0E04               	movlw	4
 24484  0137C2  010D               	movlb	13	; () banked
 24485  0137C4  6F00               	movwf	0,b	;volatile
 24486                           
 24487                           ; BSR set to: 13
 24488                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 24489  0137C6  010D               	movlb	13	; () banked
 24490  0137C8  8F00               	bsf	0,7,b	;volatile
 24491                           
 24492                           ; BSR set to: 13
 24493                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 24494  0137CA  0E00               	movlw	0
 24495  0137CC  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 24496                           
 24497                           ; BSR set to: 13
 24498                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 24499  0137CE  0E00               	movlw	0
 24500  0137D0  6E14               	movwf	_USBDeviceState,c	;volatile
 24501                           
 24502                           ; BSR set to: 13
 24503  0137D2  0012               	return		;funcret
 24504  0137D4                     __end_ofi2_USBDeviceInit:
 24505                           	opt stack 0
 24506                           pclatu	equ	0xFFB
 24507                           pclath	equ	0xFFA
 24508                           tblptru	equ	0xFF8
 24509                           tblptrh	equ	0xFF7
 24510                           tblptrl	equ	0xFF6
 24511                           tablat	equ	0xFF5
 24512                           prodh	equ	0xFF4
 24513                           prodl	equ	0xFF3
 24514                           intcon	equ	0xFF2
 24515                           intcon2	equ	0xFF1
 24516                           postinc0	equ	0xFEE
 24517                           fsr0h	equ	0xFEA
 24518                           fsr0l	equ	0xFE9
 24519                           wreg	equ	0xFE8
 24520                           indf1	equ	0xFE7
 24521                           postinc1	equ	0xFE6
 24522                           postdec1	equ	0xFE5
 24523                           fsr1h	equ	0xFE2
 24524                           fsr1l	equ	0xFE1
 24525                           indf2	equ	0xFDF
 24526                           postinc2	equ	0xFDE
 24527                           postdec2	equ	0xFDD
 24528                           plusw2	equ	0xFDB
 24529                           fsr2h	equ	0xFDA
 24530                           fsr2l	equ	0xFD9
 24531                           status	equ	0xFD8
 24532                           
 24533 ;; *************** function _USBWakeFromSuspend *****************
 24534 ;; Defined at:
 24535 ;;		line 2302 in file "../../../My_library/usb/usb_device.c"
 24536 ;; Parameters:    Size  Location     Type
 24537 ;;		None
 24538 ;; Auto vars:     Size  Location     Type
 24539 ;;		None
 24540 ;; Return value:  Size  Location     Type
 24541 ;;		None               void
 24542 ;; Registers used:
 24543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24544 ;; Tracked objects:
 24545 ;;		On entry : 0/0
 24546 ;;		On exit  : 0/0
 24547 ;;		Unchanged: 0/0
 24548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24553 ;;Total ram usage:        0 bytes
 24554 ;; Hardware stack levels used:    1
 24555 ;; Hardware stack levels required when called:    4
 24556 ;; This function calls:
 24557 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24558 ;; This function is called by:
 24559 ;;		_USBDeviceTasks
 24560 ;; This function uses a non-reentrant model
 24561 ;;
 24562                           
 24563                           	psect	text105
 24564  016874                     __ptext105:
 24565                           	opt stack 0
 24566  016874                     _USBWakeFromSuspend:
 24567                           	opt stack 14
 24568                           
 24569                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 24570                           
 24571                           ; BSR set to: 13
 24572                           ;incstack = 0
 24573  016874  0E00               	movlw	0
 24574  016876  0101               	movlb	1	; () banked
 24575  016878  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24576                           
 24577                           ; BSR set to: 1
 24578                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 24579  01687A  0E00               	movlw	0
 24580  01687C  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24581  01687E  0E74               	movlw	116
 24582  016880  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24583  016882  0E00               	movlw	0
 24584  016884  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24585  016886  0E00               	movlw	0
 24586  016888  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24587  01688A  0E00               	movlw	0
 24588  01688C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24589  01688E  0E00               	movlw	0
 24590  016890  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24591  016892  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24592                           
 24593                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 24594  016896  9265               	bcf	3941,1,c	;volatile
 24595                           
 24596                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 24597  016898  010F               	movlb	15	; () banked
 24598  01689A  9536               	bcf	54,2,b	;volatile
 24599                           
 24600                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 24601  01689C  D001               	goto	i2l8531
 24602  01689E                     i2l8529:
 24603                           
 24604                           ;usb_device.c: 2342: {
 24605                           ;usb_device.c: 2343: (UIR &= 0xFB);
 24606  01689E  9462               	bcf	3938,2,c	;volatile
 24607  0168A0                     i2l8531:
 24608  0168A0  A462               	btfss	3938,2,c	;volatile
 24609  0168A2  0012               	return	
 24610  0168A4  D7FC               	goto	i2l8529
 24611  0168A6                     __end_of_USBWakeFromSuspend:
 24612                           	opt stack 0
 24613                           pclatu	equ	0xFFB
 24614                           pclath	equ	0xFFA
 24615                           tblptru	equ	0xFF8
 24616                           tblptrh	equ	0xFF7
 24617                           tblptrl	equ	0xFF6
 24618                           tablat	equ	0xFF5
 24619                           prodh	equ	0xFF4
 24620                           prodl	equ	0xFF3
 24621                           intcon	equ	0xFF2
 24622                           intcon2	equ	0xFF1
 24623                           postinc0	equ	0xFEE
 24624                           fsr0h	equ	0xFEA
 24625                           fsr0l	equ	0xFE9
 24626                           wreg	equ	0xFE8
 24627                           indf1	equ	0xFE7
 24628                           postinc1	equ	0xFE6
 24629                           postdec1	equ	0xFE5
 24630                           fsr1h	equ	0xFE2
 24631                           fsr1l	equ	0xFE1
 24632                           indf2	equ	0xFDF
 24633                           postinc2	equ	0xFDE
 24634                           postdec2	equ	0xFDD
 24635                           plusw2	equ	0xFDB
 24636                           fsr2h	equ	0xFDA
 24637                           fsr2l	equ	0xFD9
 24638                           status	equ	0xFD8
 24639                           
 24640 ;; *************** function _USBSuspend *****************
 24641 ;; Defined at:
 24642 ;;		line 2245 in file "../../../My_library/usb/usb_device.c"
 24643 ;; Parameters:    Size  Location     Type
 24644 ;;		None
 24645 ;; Auto vars:     Size  Location     Type
 24646 ;;		None
 24647 ;; Return value:  Size  Location     Type
 24648 ;;		None               void
 24649 ;; Registers used:
 24650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24651 ;; Tracked objects:
 24652 ;;		On entry : 0/0
 24653 ;;		On exit  : 0/0
 24654 ;;		Unchanged: 0/0
 24655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24660 ;;Total ram usage:        0 bytes
 24661 ;; Hardware stack levels used:    1
 24662 ;; Hardware stack levels required when called:    4
 24663 ;; This function calls:
 24664 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24665 ;; This function is called by:
 24666 ;;		_USBDeviceTasks
 24667 ;; This function uses a non-reentrant model
 24668 ;;
 24669                           
 24670                           	psect	text106
 24671  016A14                     __ptext106:
 24672                           	opt stack 0
 24673  016A14                     _USBSuspend:
 24674                           	opt stack 14
 24675                           
 24676                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 24677                           
 24678                           ;incstack = 0
 24679  016A14  010F               	movlb	15	; () banked
 24680  016A16  8536               	bsf	54,2,b	;volatile
 24681                           
 24682                           ; BSR set to: 15
 24683                           ;usb_device.c: 2271: (UIR &= 0xEF);
 24684  016A18  9862               	bcf	3938,4,c	;volatile
 24685                           
 24686                           ; BSR set to: 15
 24687                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 24688  016A1A  8265               	bsf	3941,1,c	;volatile
 24689                           
 24690                           ; BSR set to: 15
 24691                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 24692  016A1C  0E01               	movlw	1
 24693  016A1E  0101               	movlb	1	; () banked
 24694  016A20  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24695                           
 24696                           ; BSR set to: 1
 24697                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 24698  016A22  0E00               	movlw	0
 24699  016A24  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24700  016A26  0E75               	movlw	117
 24701  016A28  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24702  016A2A  0E00               	movlw	0
 24703  016A2C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24704  016A2E  0E00               	movlw	0
 24705  016A30  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24706  016A32  0E00               	movlw	0
 24707  016A34  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24708  016A36  0E00               	movlw	0
 24709  016A38  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24710  016A3A  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24711  016A3E  0012               	return		;funcret
 24712  016A40                     __end_of_USBSuspend:
 24713                           	opt stack 0
 24714                           pclatu	equ	0xFFB
 24715                           pclath	equ	0xFFA
 24716                           tblptru	equ	0xFF8
 24717                           tblptrh	equ	0xFF7
 24718                           tblptrl	equ	0xFF6
 24719                           tablat	equ	0xFF5
 24720                           prodh	equ	0xFF4
 24721                           prodl	equ	0xFF3
 24722                           intcon	equ	0xFF2
 24723                           intcon2	equ	0xFF1
 24724                           postinc0	equ	0xFEE
 24725                           fsr0h	equ	0xFEA
 24726                           fsr0l	equ	0xFE9
 24727                           wreg	equ	0xFE8
 24728                           indf1	equ	0xFE7
 24729                           postinc1	equ	0xFE6
 24730                           postdec1	equ	0xFE5
 24731                           fsr1h	equ	0xFE2
 24732                           fsr1l	equ	0xFE1
 24733                           indf2	equ	0xFDF
 24734                           postinc2	equ	0xFDE
 24735                           postdec2	equ	0xFDD
 24736                           plusw2	equ	0xFDB
 24737                           fsr2h	equ	0xFDA
 24738                           fsr2l	equ	0xFD9
 24739                           status	equ	0xFD8
 24740                           
 24741 ;; *************** function _USBStallHandler *****************
 24742 ;; Defined at:
 24743 ;;		line 2202 in file "../../../My_library/usb/usb_device.c"
 24744 ;; Parameters:    Size  Location     Type
 24745 ;;		None
 24746 ;; Auto vars:     Size  Location     Type
 24747 ;;		None
 24748 ;; Return value:  Size  Location     Type
 24749 ;;		None               void
 24750 ;; Registers used:
 24751 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24752 ;; Tracked objects:
 24753 ;;		On entry : 0/0
 24754 ;;		On exit  : 0/0
 24755 ;;		Unchanged: 0/0
 24756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24759 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24760 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24761 ;;Total ram usage:        1 bytes
 24762 ;; Hardware stack levels used:    1
 24763 ;; This function calls:
 24764 ;;		Nothing
 24765 ;; This function is called by:
 24766 ;;		_USBDeviceTasks
 24767 ;; This function uses a non-reentrant model
 24768 ;;
 24769                           
 24770                           	psect	text107
 24771  0165EE                     __ptext107:
 24772                           	opt stack 0
 24773  0165EE                     _USBStallHandler:
 24774                           	opt stack 18
 24775                           
 24776                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 24777                           
 24778                           ;incstack = 0
 24779  0165EE  010F               	movlb	15	; () banked
 24780  0165F0  A126               	btfss	38,0,b	;volatile
 24781  0165F2  D01E               	goto	i2l1595
 24782                           
 24783                           ; BSR set to: 15
 24784                           ;usb_device.c: 2215: {
 24785                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 24786  0165F4  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24787  0165F8  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24788  0165FC  0E80               	movlw	128
 24789  0165FE  18DE               	xorwf	postinc2,w,c
 24790  016600  A4D8               	btfss	status,2,c
 24791  016602  D014               	goto	i2l8553
 24792                           
 24793                           ; BSR set to: 15
 24794  016604  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 24795  016608  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24796  01660C  0E84               	movlw	132
 24797  01660E  18DE               	xorwf	postinc2,w,c
 24798  016610  A4D8               	btfss	status,2,c
 24799  016612  D00C               	goto	i2l8553
 24800                           
 24801                           ; BSR set to: 15
 24802                           ;usb_device.c: 2218: {
 24803                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 24804  016614  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24805  016618  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24806  01661C  0E0C               	movlw	12
 24807  01661E  6EDF               	movwf	indf2,c
 24808                           
 24809                           ; BSR set to: 15
 24810                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 24811  016620  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24812  016624  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24813  016628  0E00               	movlw	0
 24814  01662A  8EDB               	bsf	plusw2,7,c
 24815  01662C                     i2l8553:
 24816                           
 24817                           ; BSR set to: 15
 24818                           ;usb_device.c: 2222: }
 24819                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 24820  01662C  010F               	movlb	15	; () banked
 24821  01662E  9126               	bcf	38,0,b	;volatile
 24822  016630                     i2l1595:
 24823                           
 24824                           ; BSR set to: 15
 24825                           ;usb_device.c: 2224: }
 24826                           ;usb_device.c: 2226: (UIR &= 0xDF);
 24827  016630  9A62               	bcf	3938,5,c	;volatile
 24828                           
 24829                           ; BSR set to: 15
 24830  016632  0012               	return		;funcret
 24831  016634                     __end_of_USBStallHandler:
 24832                           	opt stack 0
 24833                           pclatu	equ	0xFFB
 24834                           pclath	equ	0xFFA
 24835                           tblptru	equ	0xFF8
 24836                           tblptrh	equ	0xFF7
 24837                           tblptrl	equ	0xFF6
 24838                           tablat	equ	0xFF5
 24839                           prodh	equ	0xFF4
 24840                           prodl	equ	0xFF3
 24841                           intcon	equ	0xFF2
 24842                           intcon2	equ	0xFF1
 24843                           postinc0	equ	0xFEE
 24844                           fsr0h	equ	0xFEA
 24845                           fsr0l	equ	0xFE9
 24846                           wreg	equ	0xFE8
 24847                           indf1	equ	0xFE7
 24848                           postinc1	equ	0xFE6
 24849                           postdec1	equ	0xFE5
 24850                           fsr1h	equ	0xFE2
 24851                           fsr1l	equ	0xFE1
 24852                           indf2	equ	0xFDF
 24853                           postinc2	equ	0xFDE
 24854                           postdec2	equ	0xFDD
 24855                           plusw2	equ	0xFDB
 24856                           fsr2h	equ	0xFDA
 24857                           fsr2l	equ	0xFD9
 24858                           status	equ	0xFD8
 24859                           
 24860 ;; *************** function _USBCtrlEPService *****************
 24861 ;; Defined at:
 24862 ;;		line 2369 in file "../../../My_library/usb/usb_device.c"
 24863 ;; Parameters:    Size  Location     Type
 24864 ;;		None
 24865 ;; Auto vars:     Size  Location     Type
 24866 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 24867 ;; Return value:  Size  Location     Type
 24868 ;;		None               void
 24869 ;; Registers used:
 24870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24871 ;; Tracked objects:
 24872 ;;		On entry : 0/0
 24873 ;;		On exit  : 0/0
 24874 ;;		Unchanged: 0/0
 24875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24877 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24878 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24879 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24880 ;;Total ram usage:        3 bytes
 24881 ;; Hardware stack levels used:    1
 24882 ;; Hardware stack levels required when called:    7
 24883 ;; This function calls:
 24884 ;;		_USBCtrlTrfInHandler
 24885 ;;		_USBCtrlTrfOutHandler
 24886 ;;		_USBCtrlTrfSetupHandler
 24887 ;; This function is called by:
 24888 ;;		_USBDeviceTasks
 24889 ;; This function uses a non-reentrant model
 24890 ;;
 24891                           
 24892                           	psect	text108
 24893  014DA6                     __ptext108:
 24894                           	opt stack 0
 24895  014DA6                     _USBCtrlEPService:
 24896                           	opt stack 11
 24897                           
 24898                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 24899                           
 24900                           ; BSR set to: 15
 24901                           ;incstack = 0
 24902  014DA6  0E2D               	movlw	45
 24903  014DA8  6E17               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 24904                           
 24905                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 24906  014DAA  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 24907  014DAE  0EFD               	movlw	253
 24908  014DB0  1647               	andwf	??_USBCtrlEPService,f,c
 24909  014DB2  A4D8               	btfss	status,2,c
 24910  014DB4  D057               	goto	i2l8587
 24911                           
 24912                           ;usb_device.c: 2380: {
 24913                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 24914  014DB6  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 24915  014DBA  90D8               	bcf	status,0,c
 24916  014DBC  3247               	rrcf	??_USBCtrlEPService,f,c
 24917  014DBE  0E3F               	movlw	63
 24918  014DC0  1647               	andwf	??_USBCtrlEPService,f,c
 24919  014DC2  5047               	movf	??_USBCtrlEPService,w,c
 24920  014DC4  0D04               	mullw	4
 24921  014DC6  0E00               	movlw	0
 24922  014DC8  24F3               	addwf	prodl,w,c
 24923  014DCA  6E09               	movwf	_pBDTEntryEP0OutCurrent,c
 24924  014DCC  0E0D               	movlw	13
 24925  014DCE  20F4               	addwfc	prodh,w,c
 24926  014DD0  6E0A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 24927                           
 24928                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 24929  014DD2  C009  F00B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 24930  014DD6  C00A  F00C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 24931                           
 24932                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 24933  014DDA  0E04               	movlw	4
 24934  014DDC  1A0B               	xorwf	_pBDTEntryEP0OutNext,f,c
 24935                           
 24936                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 24937  014DDE  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24938  014DE2  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24939  014DE6  30DF               	rrcf	indf2,w,c
 24940  014DE8  32E8               	rrcf	wreg,f,c
 24941  014DEA  0B0F               	andlw	15
 24942  014DEC  0A0D               	xorlw	13
 24943  014DEE  A4D8               	btfss	status,2,c
 24944  014DF0  D036               	goto	i2l8585
 24945                           
 24946                           ;usb_device.c: 2397: {
 24947                           ;usb_device.c: 2398: unsigned char setup_cnt;
 24948                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 24949  014DF2  0E00               	movlw	0
 24950  014DF4  6E49               	movwf	USBCtrlEPService@setup_cnt,c
 24951  014DF6                     i2l8569:
 24952  014DF6  0E07               	movlw	7
 24953  014DF8  6449               	cpfsgt	USBCtrlEPService@setup_cnt,c
 24954  014DFA  D001               	goto	i2l8573
 24955  014DFC  D023               	goto	i2l8581
 24956  014DFE                     i2l8573:
 24957                           
 24958                           ;usb_device.c: 2405: {
 24959                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 24960  014DFE  EE20 F002          	lfsr	2,2
 24961  014E02  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 24962  014E04  26D9               	addwf	fsr2l,f,c
 24963  014E06  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 24964  014E08  22DA               	addwfc	fsr2h,f,c
 24965  014E0A  CFDE F047          	movff	postinc2,??_USBCtrlEPService
 24966  014E0E  CFDD F048          	movff	postdec2,??_USBCtrlEPService+1
 24967  014E12  C047  FFD9         	movff	??_USBCtrlEPService,fsr2l
 24968  014E16  C048  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 24969  014E1A  5049               	movf	USBCtrlEPService@setup_cnt,w,c
 24970  014E1C  0D01               	mullw	1
 24971  014E1E  0E30               	movlw	48
 24972  014E20  24F3               	addwf	prodl,w,c
 24973  014E22  6EE1               	movwf	fsr1l,c
 24974  014E24  0E0D               	movlw	13
 24975  014E26  20F4               	addwfc	prodh,w,c
 24976  014E28  6EE2               	movwf	fsr1h,c
 24977  014E2A  CFDF FFE7          	movff	indf2,indf1
 24978                           
 24979                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 24980  014E2E  EE20 F002          	lfsr	2,2
 24981  014E32  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 24982  014E34  26D9               	addwf	fsr2l,f,c
 24983  014E36  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 24984  014E38  22DA               	addwfc	fsr2h,f,c
 24985  014E3A  2ADE               	incf	postinc2,f,c
 24986  014E3C  0E00               	movlw	0
 24987  014E3E  22DD               	addwfc	postdec2,f,c
 24988  014E40  2A49               	incf	USBCtrlEPService@setup_cnt,f,c
 24989  014E42  D7D9               	goto	i2l8569
 24990  014E44                     i2l8581:
 24991                           
 24992                           ;usb_device.c: 2408: }
 24993                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 24994  014E44  EE20 F002          	lfsr	2,2
 24995  014E48  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 24996  014E4A  26D9               	addwf	fsr2l,f,c
 24997  014E4C  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 24998  014E4E  22DA               	addwfc	fsr2h,f,c
 24999  014E50  0E30               	movlw	48
 25000  014E52  6EDE               	movwf	postinc2,c
 25001  014E54  0E0D               	movlw	13
 25002  014E56  6EDD               	movwf	postdec2,c
 25003                           
 25004                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 25005  014E58  ECB5  F0AD         	call	_USBCtrlTrfSetupHandler	;wreg free
 25006                           
 25007                           ;usb_device.c: 2413: }
 25008  014E5C  0012               	return	
 25009  014E5E                     i2l8585:
 25010                           
 25011                           ;usb_device.c: 2414: else
 25012                           ;usb_device.c: 2415: {
 25013                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 25014  014E5E  EC27  F0B2         	call	_USBCtrlTrfOutHandler	;wreg free
 25015                           
 25016                           ;usb_device.c: 2418: }
 25017                           ;usb_device.c: 2419: }
 25018  014E62  0012               	return	
 25019  014E64                     i2l8587:
 25020                           
 25021                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 25022  014E64  502C               	movf	_USTATcopy,w,c	;volatile
 25023  014E66  0BFD               	andlw	253
 25024  014E68  0A04               	xorlw	4
 25025  014E6A  A4D8               	btfss	status,2,c
 25026  014E6C  0012               	return	
 25027                           
 25028                           ;usb_device.c: 2421: {
 25029                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 25030  014E6E  EC67  F0A8         	call	_USBCtrlTrfInHandler	;wreg free
 25031  014E72  0012               	return	
 25032  014E74                     __end_of_USBCtrlEPService:
 25033                           	opt stack 0
 25034                           pclatu	equ	0xFFB
 25035                           pclath	equ	0xFFA
 25036                           tblptru	equ	0xFF8
 25037                           tblptrh	equ	0xFF7
 25038                           tblptrl	equ	0xFF6
 25039                           tablat	equ	0xFF5
 25040                           prodh	equ	0xFF4
 25041                           prodl	equ	0xFF3
 25042                           intcon	equ	0xFF2
 25043                           intcon2	equ	0xFF1
 25044                           postinc0	equ	0xFEE
 25045                           fsr0h	equ	0xFEA
 25046                           fsr0l	equ	0xFE9
 25047                           wreg	equ	0xFE8
 25048                           indf1	equ	0xFE7
 25049                           postinc1	equ	0xFE6
 25050                           postdec1	equ	0xFE5
 25051                           fsr1h	equ	0xFE2
 25052                           fsr1l	equ	0xFE1
 25053                           indf2	equ	0xFDF
 25054                           postinc2	equ	0xFDE
 25055                           postdec2	equ	0xFDD
 25056                           plusw2	equ	0xFDB
 25057                           fsr2h	equ	0xFDA
 25058                           fsr2l	equ	0xFD9
 25059                           status	equ	0xFD8
 25060                           
 25061 ;; *************** function _USBCtrlTrfSetupHandler *****************
 25062 ;; Defined at:
 25063 ;;		line 2469 in file "../../../My_library/usb/usb_device.c"
 25064 ;; Parameters:    Size  Location     Type
 25065 ;;		None
 25066 ;; Auto vars:     Size  Location     Type
 25067 ;;		None
 25068 ;; Return value:  Size  Location     Type
 25069 ;;		None               void
 25070 ;; Registers used:
 25071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25072 ;; Tracked objects:
 25073 ;;		On entry : 0/0
 25074 ;;		On exit  : 0/0
 25075 ;;		Unchanged: 0/0
 25076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25081 ;;Total ram usage:        0 bytes
 25082 ;; Hardware stack levels used:    1
 25083 ;; Hardware stack levels required when called:    6
 25084 ;; This function calls:
 25085 ;;		_USBCheckStdRequest
 25086 ;;		_USBCtrlEPServiceComplete
 25087 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25088 ;; This function is called by:
 25089 ;;		_USBCtrlEPService
 25090 ;; This function uses a non-reentrant model
 25091 ;;
 25092                           
 25093                           	psect	text109
 25094  015B6A                     __ptext109:
 25095                           	opt stack 0
 25096  015B6A                     _USBCtrlTrfSetupHandler:
 25097                           	opt stack 11
 25098                           
 25099                           ;usb_device.c: 2474: shortPacketStatus = 0;
 25100                           
 25101                           ;incstack = 0
 25102  015B6A  0E00               	movlw	0
 25103  015B6C  6E22               	movwf	_shortPacketStatus,c	;volatile
 25104                           
 25105                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 25106  015B6E  0E00               	movlw	0
 25107  015B70  6E13               	movwf	_USBDeferStatusStagePacket,c	;volatile
 25108                           
 25109                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 25110  015B72  0E00               	movlw	0
 25111  015B74  6E11               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25112                           
 25113                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 25114  015B76  0E00               	movlw	0
 25115  015B78  6E12               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25116                           
 25117                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 25118  015B7A  0E00               	movlw	0
 25119  015B7C  6E0F               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 25120                           
 25121                           ;usb_device.c: 2479: controlTransferState = 0;
 25122  015B7E  0E00               	movlw	0
 25123  015B80  6E18               	movwf	_controlTransferState,c	;volatile
 25124                           
 25125                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25126  015B82  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25127  015B86  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25128  015B8A  0E7F               	movlw	127
 25129  015B8C  16DF               	andwf	indf2,f,c
 25130                           
 25131                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25132  015B8E  0E04               	movlw	4
 25133  015B90  0100               	movlb	0	; () banked
 25134  015B92  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 25135                           
 25136                           ; BSR set to: 0
 25137                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25138  015B94  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25139  015B98  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25140  015B9C  0E7F               	movlw	127
 25141  015B9E  16DF               	andwf	indf2,f,c
 25142                           
 25143                           ; BSR set to: 0
 25144                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25145  015BA0  0E04               	movlw	4
 25146  015BA2  0100               	movlb	0	; () banked
 25147  015BA4  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 25148                           
 25149                           ; BSR set to: 0
 25150                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 25151  015BA6  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25152  015BAA  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25153  015BAE  0E7F               	movlw	127
 25154  015BB0  16DF               	andwf	indf2,f,c
 25155                           
 25156                           ; BSR set to: 0
 25157                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 25158  015BB2  0E00               	movlw	0
 25159  015BB4  0100               	movlb	0	; () banked
 25160  015BB6  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25161                           
 25162                           ; BSR set to: 0
 25163                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 25164  015BB8  0E00               	movlw	0
 25165  015BBA  0100               	movlb	0	; () banked
 25166  015BBC  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 25167  015BBE  0E00               	movlw	0
 25168  015BC0  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25169                           
 25170                           ; BSR set to: 0
 25171                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 25172  015BC2  0E00               	movlw	0
 25173  015BC4  0100               	movlb	0	; () banked
 25174  015BC6  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 25175                           
 25176                           ; BSR set to: 0
 25177                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 25178  015BC8  0E00               	movlw	0
 25179  015BCA  0100               	movlb	0	; () banked
 25180  015BCC  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 25181  015BCE  0E00               	movlw	0
 25182  015BD0  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 25183                           
 25184                           ; BSR set to: 0
 25185                           ;usb_device.c: 2503: USBCheckStdRequest();
 25186  015BD2  EC2D  F0A1         	call	_USBCheckStdRequest	;wreg free
 25187                           
 25188                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 25189  015BD6  0E00               	movlw	0
 25190  015BD8  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25191  015BDA  0E03               	movlw	3
 25192  015BDC  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25193  015BDE  0E00               	movlw	0
 25194  015BE0  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25195  015BE2  0E00               	movlw	0
 25196  015BE4  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25197  015BE6  0E00               	movlw	0
 25198  015BE8  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25199  015BEA  0E00               	movlw	0
 25200  015BEC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25201  015BEE  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25202                           
 25203                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 25204  015BF2  EC3A  F0A0         	call	_USBCtrlEPServiceComplete	;wreg free
 25205  015BF6  0012               	return		;funcret
 25206  015BF8                     __end_of_USBCtrlTrfSetupHandler:
 25207                           	opt stack 0
 25208                           pclatu	equ	0xFFB
 25209                           pclath	equ	0xFFA
 25210                           tblptru	equ	0xFF8
 25211                           tblptrh	equ	0xFF7
 25212                           tblptrl	equ	0xFF6
 25213                           tablat	equ	0xFF5
 25214                           prodh	equ	0xFF4
 25215                           prodl	equ	0xFF3
 25216                           intcon	equ	0xFF2
 25217                           intcon2	equ	0xFF1
 25218                           postinc0	equ	0xFEE
 25219                           fsr0h	equ	0xFEA
 25220                           fsr0l	equ	0xFE9
 25221                           wreg	equ	0xFE8
 25222                           indf1	equ	0xFE7
 25223                           postinc1	equ	0xFE6
 25224                           postdec1	equ	0xFE5
 25225                           fsr1h	equ	0xFE2
 25226                           fsr1l	equ	0xFE1
 25227                           indf2	equ	0xFDF
 25228                           postinc2	equ	0xFDE
 25229                           postdec2	equ	0xFDD
 25230                           plusw2	equ	0xFDB
 25231                           fsr2h	equ	0xFDA
 25232                           fsr2l	equ	0xFD9
 25233                           status	equ	0xFD8
 25234                           
 25235 ;; *************** function _USBCtrlEPServiceComplete *****************
 25236 ;; Defined at:
 25237 ;;		line 1616 in file "../../../My_library/usb/usb_device.c"
 25238 ;; Parameters:    Size  Location     Type
 25239 ;;		None
 25240 ;; Auto vars:     Size  Location     Type
 25241 ;;		None
 25242 ;; Return value:  Size  Location     Type
 25243 ;;		None               void
 25244 ;; Registers used:
 25245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25246 ;; Tracked objects:
 25247 ;;		On entry : 0/0
 25248 ;;		On exit  : 0/0
 25249 ;;		Unchanged: 0/0
 25250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25255 ;;Total ram usage:        0 bytes
 25256 ;; Hardware stack levels used:    1
 25257 ;; Hardware stack levels required when called:    2
 25258 ;; This function calls:
 25259 ;;		_USBCtrlEPAllowDataStage
 25260 ;;		_USBCtrlEPAllowStatusStage
 25261 ;; This function is called by:
 25262 ;;		_USBCtrlTrfSetupHandler
 25263 ;; This function uses a non-reentrant model
 25264 ;;
 25265                           
 25266                           	psect	text110
 25267  014074                     __ptext110:
 25268                           	opt stack 0
 25269  014074                     _USBCtrlEPServiceComplete:
 25270                           	opt stack 14
 25271                           
 25272                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 25273                           
 25274                           ;incstack = 0
 25275  014074  9865               	bcf	3941,4,c	;volatile
 25276                           
 25277                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 25278  014076  0100               	movlb	0	; () banked
 25279  014078  BFF2               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 25280  01407A  D039               	goto	i2l1519
 25281                           
 25282                           ; BSR set to: 0
 25283                           ;usb_device.c: 1629: {
 25284                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 25285  01407C  0100               	movlb	0	; () banked
 25286  01407E  AFE9               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 25287  014080  D00B               	goto	i2l7289
 25288                           
 25289                           ; BSR set to: 0
 25290                           ;usb_device.c: 1631: {
 25291                           ;usb_device.c: 1632: controlTransferState = 2;
 25292  014082  0E02               	movlw	2
 25293  014084  6E18               	movwf	_controlTransferState,c	;volatile
 25294                           
 25295                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 25296  014086  5012               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 25297  014088  B4D8               	btfsc	status,2,c
 25298                           
 25299                           ; BSR set to: 0
 25300                           ;usb_device.c: 1644: {
 25301                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 25302  01408A  ECFA  F0AB         	call	_USBCtrlEPAllowDataStage	;wreg free
 25303                           
 25304                           ;usb_device.c: 1646: }
 25305                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 25306  01408E  0E00               	movlw	0
 25307  014090  6E16               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25308                           
 25309                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 25310  014092  0E00               	movlw	0
 25311  014094  6E15               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25312                           
 25313                           ;usb_device.c: 1652: }
 25314  014096  0012               	return	
 25315  014098                     i2l7289:
 25316                           
 25317                           ;usb_device.c: 1653: else
 25318                           ;usb_device.c: 1654: {
 25319                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 25320  014098  EE20 F001          	lfsr	2,1
 25321  01409C  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25322  01409E  26D9               	addwf	fsr2l,f,c
 25323  0140A0  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25324  0140A2  22DA               	addwfc	fsr2h,f,c
 25325  0140A4  0E08               	movlw	8
 25326  0140A6  6EDF               	movwf	indf2,c
 25327                           
 25328                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25329  0140A8  EE20 F002          	lfsr	2,2
 25330  0140AC  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25331  0140AE  26D9               	addwf	fsr2l,f,c
 25332  0140B0  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25333  0140B2  22DA               	addwfc	fsr2h,f,c
 25334  0140B4  0E30               	movlw	48
 25335  0140B6  6EDE               	movwf	postinc2,c
 25336  0140B8  0E0D               	movlw	13
 25337  0140BA  6EDD               	movwf	postdec2,c
 25338                           
 25339                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25340  0140BC  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25341  0140C0  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25342  0140C4  0E0C               	movlw	12
 25343  0140C6  6EDF               	movwf	indf2,c
 25344                           
 25345                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25346  0140C8  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25347  0140CC  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25348  0140D0  0E00               	movlw	0
 25349  0140D2  8EDB               	bsf	plusw2,7,c
 25350                           
 25351                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 25352  0140D4  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25353  0140D8  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25354  0140DC  0E04               	movlw	4
 25355  0140DE  6EDF               	movwf	indf2,c
 25356                           
 25357                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25358  0140E0  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25359  0140E4  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25360  0140E8  0E00               	movlw	0
 25361  0140EA  8EDB               	bsf	plusw2,7,c
 25362                           
 25363                           ;usb_device.c: 1665: }
 25364                           ;usb_device.c: 1666: }
 25365  0140EC  0012               	return	
 25366  0140EE                     i2l1519:
 25367                           
 25368                           ; BSR set to: 0
 25369                           ;usb_device.c: 1667: else
 25370                           ;usb_device.c: 1668: {
 25371                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 25372  0140EE  010D               	movlb	13	; () banked
 25373  0140F0  AF30               	btfss	48,7,b	;volatile
 25374  0140F2  D010               	goto	i2l7309
 25375                           
 25376                           ; BSR set to: 13
 25377                           ;usb_device.c: 1670: {
 25378                           ;usb_device.c: 1671: controlTransferState = 1;
 25379  0140F4  0E01               	movlw	1
 25380  0140F6  6E18               	movwf	_controlTransferState,c	;volatile
 25381                           
 25382                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 25383  0140F8  5011               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 25384  0140FA  B4D8               	btfsc	status,2,c
 25385                           
 25386                           ; BSR set to: 13
 25387                           ;usb_device.c: 1686: {
 25388                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 25389  0140FC  ECFA  F0AB         	call	_USBCtrlEPAllowDataStage	;wreg free
 25390                           
 25391                           ;usb_device.c: 1688: }
 25392                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 25393  014100  0E00               	movlw	0
 25394  014102  6E16               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25395                           
 25396                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 25397  014104  0E00               	movlw	0
 25398  014106  6E15               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25399                           
 25400                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 25401  014108  5013               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25402  01410A  A4D8               	btfss	status,2,c
 25403  01410C  0012               	return	
 25404                           
 25405                           ;usb_device.c: 1713: {
 25406                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 25407  01410E  EC05  F0A8         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25408                           
 25409                           ;usb_device.c: 1715: }
 25410                           ;usb_device.c: 1716: }
 25411  014112  0012               	return	
 25412  014114                     i2l7309:
 25413                           
 25414                           ;usb_device.c: 1717: else
 25415                           ;usb_device.c: 1718: {
 25416                           ;usb_device.c: 1729: controlTransferState = 2;
 25417  014114  0E02               	movlw	2
 25418  014116  6E18               	movwf	_controlTransferState,c	;volatile
 25419                           
 25420                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 25421  014118  EE20 F001          	lfsr	2,1
 25422  01411C  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25423  01411E  26D9               	addwf	fsr2l,f,c
 25424  014120  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25425  014122  22DA               	addwfc	fsr2h,f,c
 25426  014124  0E08               	movlw	8
 25427  014126  6EDF               	movwf	indf2,c
 25428                           
 25429                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25430  014128  EE20 F002          	lfsr	2,2
 25431  01412C  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25432  01412E  26D9               	addwf	fsr2l,f,c
 25433  014130  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25434  014132  22DA               	addwfc	fsr2h,f,c
 25435  014134  0E30               	movlw	48
 25436  014136  6EDE               	movwf	postinc2,c
 25437  014138  0E0D               	movlw	13
 25438  01413A  6EDD               	movwf	postdec2,c
 25439                           
 25440                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 25441  01413C  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25442  014140  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25443  014144  0E04               	movlw	4
 25444  014146  6EDF               	movwf	indf2,c
 25445                           
 25446                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25447  014148  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25448  01414C  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25449  014150  0E00               	movlw	0
 25450  014152  8EDB               	bsf	plusw2,7,c
 25451                           
 25452                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 25453  014154  0E00               	movlw	0
 25454  014156  6E16               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25455                           
 25456                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 25457  014158  0E00               	movlw	0
 25458  01415A  6E15               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25459                           
 25460                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 25461  01415C  5013               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25462  01415E  A4D8               	btfss	status,2,c
 25463  014160  0012               	return	
 25464                           
 25465                           ;usb_device.c: 1741: {
 25466                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 25467  014162  EC05  F0A8         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25468  014166  0012               	return	
 25469  014168                     __end_of_USBCtrlEPServiceComplete:
 25470                           	opt stack 0
 25471                           pclatu	equ	0xFFB
 25472                           pclath	equ	0xFFA
 25473                           tblptru	equ	0xFF8
 25474                           tblptrh	equ	0xFF7
 25475                           tblptrl	equ	0xFF6
 25476                           tablat	equ	0xFF5
 25477                           prodh	equ	0xFF4
 25478                           prodl	equ	0xFF3
 25479                           intcon	equ	0xFF2
 25480                           intcon2	equ	0xFF1
 25481                           postinc0	equ	0xFEE
 25482                           fsr0h	equ	0xFEA
 25483                           fsr0l	equ	0xFE9
 25484                           wreg	equ	0xFE8
 25485                           indf1	equ	0xFE7
 25486                           postinc1	equ	0xFE6
 25487                           postdec1	equ	0xFE5
 25488                           fsr1h	equ	0xFE2
 25489                           fsr1l	equ	0xFE1
 25490                           indf2	equ	0xFDF
 25491                           postinc2	equ	0xFDE
 25492                           postdec2	equ	0xFDD
 25493                           plusw2	equ	0xFDB
 25494                           fsr2h	equ	0xFDA
 25495                           fsr2l	equ	0xFD9
 25496                           status	equ	0xFD8
 25497                           
 25498 ;; *************** function _USBCtrlEPAllowDataStage *****************
 25499 ;; Defined at:
 25500 ;;		line 1488 in file "../../../My_library/usb/usb_device.c"
 25501 ;; Parameters:    Size  Location     Type
 25502 ;;		None
 25503 ;; Auto vars:     Size  Location     Type
 25504 ;;		None
 25505 ;; Return value:  Size  Location     Type
 25506 ;;		None               void
 25507 ;; Registers used:
 25508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25509 ;; Tracked objects:
 25510 ;;		On entry : 0/0
 25511 ;;		On exit  : 0/0
 25512 ;;		Unchanged: 0/0
 25513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25518 ;;Total ram usage:        0 bytes
 25519 ;; Hardware stack levels used:    1
 25520 ;; Hardware stack levels required when called:    1
 25521 ;; This function calls:
 25522 ;;		_USBCtrlTrfTxService
 25523 ;; This function is called by:
 25524 ;;		_USBCtrlEPServiceComplete
 25525 ;; This function uses a non-reentrant model
 25526 ;;
 25527                           
 25528                           	psect	text111
 25529  0157F4                     __ptext111:
 25530                           	opt stack 0
 25531  0157F4                     _USBCtrlEPAllowDataStage:
 25532                           	opt stack 14
 25533                           
 25534                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 25535                           
 25536                           ;incstack = 0
 25537  0157F4  0E00               	movlw	0
 25538  0157F6  6E11               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25539                           
 25540                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 25541  0157F8  0E00               	movlw	0
 25542  0157FA  6E12               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25543                           
 25544                           ;usb_device.c: 1493: if(controlTransferState == 2)
 25545  0157FC  0E02               	movlw	2
 25546  0157FE  1818               	xorwf	_controlTransferState,w,c	;volatile
 25547  015800  A4D8               	btfss	status,2,c
 25548  015802  D01F               	goto	i2l7051
 25549                           
 25550                           ;usb_device.c: 1494: {
 25551                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 25552  015804  EE20 F001          	lfsr	2,1
 25553  015808  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25554  01580A  26D9               	addwf	fsr2l,f,c
 25555  01580C  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25556  01580E  22DA               	addwfc	fsr2h,f,c
 25557  015810  0E08               	movlw	8
 25558  015812  6EDF               	movwf	indf2,c
 25559                           
 25560                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 25561  015814  EE20 F002          	lfsr	2,2
 25562  015818  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25563  01581A  26D9               	addwf	fsr2l,f,c
 25564  01581C  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25565  01581E  22DA               	addwfc	fsr2h,f,c
 25566  015820  0E38               	movlw	56
 25567  015822  6EDE               	movwf	postinc2,c
 25568  015824  0E0D               	movlw	13
 25569  015826  6EDD               	movwf	postdec2,c
 25570                           
 25571                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 25572  015828  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25573  01582C  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25574  015830  0E48               	movlw	72
 25575  015832  6EDF               	movwf	indf2,c
 25576                           
 25577                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25578  015834  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25579  015838  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25580  01583C  0E00               	movlw	0
 25581  01583E  8EDB               	bsf	plusw2,7,c
 25582                           
 25583                           ;usb_device.c: 1500: }
 25584  015840  0012               	return	
 25585  015842                     i2l7051:
 25586                           
 25587                           ;usb_device.c: 1501: else
 25588                           ;usb_device.c: 1502: {
 25589                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 25590  015842  0100               	movlb	0	; () banked
 25591  015844  51F3               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 25592  015846  010D               	movlb	13	; () banked
 25593  015848  5D36               	subwf	54,w,b	;volatile
 25594  01584A  0100               	movlb	0	; () banked
 25595  01584C  51F4               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 25596  01584E  010D               	movlb	13	; () banked
 25597  015850  5937               	subwfb	55,w,b	;volatile
 25598  015852  B0D8               	btfsc	status,0,c
 25599  015854  D004               	goto	i2l7055
 25600                           
 25601                           ; BSR set to: 13
 25602                           ;usb_device.c: 1506: {
 25603                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 25604  015856  CD36 F0F3          	movff	3382,_inPipes+4	;volatile
 25605  01585A  CD37 F0F4          	movff	3383,_inPipes+5	;volatile
 25606  01585E                     i2l7055:
 25607                           
 25608                           ; BSR set to: 13
 25609                           ;usb_device.c: 1508: }
 25610                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 25611  01585E  EC71  F0A3         	call	_USBCtrlTrfTxService	;wreg free
 25612                           
 25613                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 25614  015862  0100               	movlb	0	; () banked
 25615  015864  EE20 F002          	lfsr	2,2
 25616  015868  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 25617  01586A  26D9               	addwf	fsr2l,f,c
 25618  01586C  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25619  01586E  22DA               	addwfc	fsr2h,f,c
 25620  015870  0E38               	movlw	56
 25621  015872  6EDE               	movwf	postinc2,c
 25622  015874  0E0D               	movlw	13
 25623  015876  6EDD               	movwf	postdec2,c
 25624                           
 25625                           ; BSR set to: 0
 25626                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 25627  015878  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25628  01587C  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25629  015880  0E48               	movlw	72
 25630  015882  6EDF               	movwf	indf2,c
 25631                           
 25632                           ; BSR set to: 0
 25633                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25634  015884  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25635  015888  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25636  01588C  0E00               	movlw	0
 25637  01588E  8EDB               	bsf	plusw2,7,c
 25638  015890  0012               	return	
 25639  015892                     __end_of_USBCtrlEPAllowDataStage:
 25640                           	opt stack 0
 25641                           pclatu	equ	0xFFB
 25642                           pclath	equ	0xFFA
 25643                           tblptru	equ	0xFF8
 25644                           tblptrh	equ	0xFF7
 25645                           tblptrl	equ	0xFF6
 25646                           tablat	equ	0xFF5
 25647                           prodh	equ	0xFF4
 25648                           prodl	equ	0xFF3
 25649                           intcon	equ	0xFF2
 25650                           intcon2	equ	0xFF1
 25651                           postinc0	equ	0xFEE
 25652                           fsr0h	equ	0xFEA
 25653                           fsr0l	equ	0xFE9
 25654                           wreg	equ	0xFE8
 25655                           indf1	equ	0xFE7
 25656                           postinc1	equ	0xFE6
 25657                           postdec1	equ	0xFE5
 25658                           fsr1h	equ	0xFE2
 25659                           fsr1l	equ	0xFE1
 25660                           indf2	equ	0xFDF
 25661                           postinc2	equ	0xFDE
 25662                           postdec2	equ	0xFDD
 25663                           plusw2	equ	0xFDB
 25664                           fsr2h	equ	0xFDA
 25665                           fsr2l	equ	0xFD9
 25666                           status	equ	0xFD8
 25667                           
 25668 ;; *************** function _USBCheckStdRequest *****************
 25669 ;; Defined at:
 25670 ;;		line 2689 in file "../../../My_library/usb/usb_device.c"
 25671 ;; Parameters:    Size  Location     Type
 25672 ;;		None
 25673 ;; Auto vars:     Size  Location     Type
 25674 ;;		None
 25675 ;; Return value:  Size  Location     Type
 25676 ;;		None               void
 25677 ;; Registers used:
 25678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25679 ;; Tracked objects:
 25680 ;;		On entry : 0/0
 25681 ;;		On exit  : 0/0
 25682 ;;		Unchanged: 0/0
 25683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25688 ;;Total ram usage:        0 bytes
 25689 ;; Hardware stack levels used:    1
 25690 ;; Hardware stack levels required when called:    5
 25691 ;; This function calls:
 25692 ;;		_USBStdFeatureReqHandler
 25693 ;;		_USBStdGetDscHandler
 25694 ;;		_USBStdGetStatusHandler
 25695 ;;		_USBStdSetCfgHandler
 25696 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25697 ;; This function is called by:
 25698 ;;		_USBCtrlTrfSetupHandler
 25699 ;; This function uses a non-reentrant model
 25700 ;;
 25701                           
 25702                           	psect	text112
 25703  01425A                     __ptext112:
 25704                           	opt stack 0
 25705  01425A                     _USBCheckStdRequest:
 25706                           	opt stack 11
 25707                           
 25708                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 25709                           
 25710                           ;incstack = 0
 25711  01425A  010D               	movlb	13	; () banked
 25712  01425C  3930               	swapf	48,w,b	;volatile
 25713  01425E  32E8               	rrcf	wreg,f,c
 25714  014260  0B03               	andlw	3
 25715  014262  0900               	iorlw	0
 25716  014264  A4D8               	btfss	status,2,c
 25717  014266  0012               	return	
 25718  014268  D04F               	goto	i2l7407
 25719  01426A                     i2l1646:
 25720                           
 25721                           ; BSR set to: 13
 25722                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 25723  01426A  0100               	movlb	0	; () banked
 25724  01426C  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25725                           
 25726                           ; BSR set to: 0
 25727                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 25728  01426E  0E08               	movlw	8
 25729  014270  6E14               	movwf	_USBDeviceState,c	;volatile
 25730                           
 25731                           ;usb_device.c: 2699: break;
 25732  014272  0012               	return	
 25733  014274                     i2l7377:
 25734                           
 25735                           ;usb_device.c: 2701: USBStdGetDscHandler();
 25736  014274  ECFF  F099         	call	_USBStdGetDscHandler	;wreg free
 25737                           
 25738                           ;usb_device.c: 2702: break;
 25739  014278  0012               	return	
 25740  01427A                     i2l7379:
 25741                           
 25742                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 25743  01427A  EC90  F0A2         	call	_USBStdSetCfgHandler	;wreg free
 25744                           
 25745                           ;usb_device.c: 2705: break;
 25746  01427E  0012               	return	
 25747  014280                     i2l7381:
 25748                           
 25749                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 25750  014280  0E2B               	movlw	low _USBActiveConfiguration
 25751  014282  0100               	movlb	0	; () banked
 25752  014284  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 25753  014286  0E00               	movlw	high _USBActiveConfiguration
 25754  014288  0100               	movlb	0	; () banked
 25755  01428A  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25756                           
 25757                           ; BSR set to: 0
 25758                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 25759  01428C  0100               	movlb	0	; () banked
 25760  01428E  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 25761                           
 25762                           ; BSR set to: 0
 25763                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 25764  014290  0E01               	movlw	1
 25765  014292  0100               	movlb	0	; () banked
 25766  014294  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25767                           
 25768                           ; BSR set to: 0
 25769                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 25770  014296  0100               	movlb	0	; () banked
 25771  014298  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25772                           
 25773                           ;usb_device.c: 2711: break;
 25774  01429A  0012               	return	
 25775  01429C                     i2l7389:
 25776                           
 25777                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 25778  01429C  EC45  F0AA         	call	_USBStdGetStatusHandler	;wreg free
 25779                           
 25780                           ;usb_device.c: 2714: break;
 25781  0142A0  0012               	return	
 25782  0142A2                     i2l7391:
 25783                           
 25784                           ;usb_device.c: 2716: case 3:
 25785                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 25786  0142A2  EC22  F08F         	call	_USBStdFeatureReqHandler	;wreg free
 25787                           
 25788                           ;usb_device.c: 2718: break;
 25789  0142A6  0012               	return	
 25790  0142A8                     i2l7393:
 25791                           
 25792                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 25793  0142A8  010D               	movlb	13	; () banked
 25794  0142AA  5134               	movf	52,w,b	;volatile
 25795  0142AC  0D01               	mullw	1
 25796  0142AE  0E8F               	movlw	low _USBAlternateInterface
 25797  0142B0  24F3               	addwf	prodl,w,c
 25798  0142B2  0100               	movlb	0	; () banked
 25799  0142B4  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 25800  0142B6  0E01               	movlw	high _USBAlternateInterface
 25801  0142B8  20F4               	addwfc	prodh,w,c
 25802  0142BA  0100               	movlb	0	; () banked
 25803  0142BC  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25804                           
 25805                           ; BSR set to: 0
 25806                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 25807  0142BE  0100               	movlb	0	; () banked
 25808  0142C0  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 25809                           
 25810                           ; BSR set to: 0
 25811                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 25812  0142C2  0E01               	movlw	1
 25813  0142C4  0100               	movlb	0	; () banked
 25814  0142C6  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25815                           
 25816                           ; BSR set to: 0
 25817                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 25818  0142C8  0100               	movlb	0	; () banked
 25819  0142CA  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25820                           
 25821                           ;usb_device.c: 2724: break;
 25822  0142CC  0012               	return	
 25823  0142CE                     i2l1655:
 25824                           
 25825                           ; BSR set to: 13
 25826                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 25827  0142CE  0100               	movlb	0	; () banked
 25828  0142D0  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25829                           
 25830                           ; BSR set to: 0
 25831                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 25832  0142D2  010D               	movlb	13	; () banked
 25833  0142D4  5134               	movf	52,w,b	;volatile
 25834  0142D6  0D01               	mullw	1
 25835  0142D8  0E8F               	movlw	low _USBAlternateInterface
 25836  0142DA  24F3               	addwf	prodl,w,c
 25837  0142DC  6ED9               	movwf	fsr2l,c
 25838  0142DE  0E01               	movlw	high _USBAlternateInterface
 25839  0142E0  20F4               	addwfc	prodh,w,c
 25840  0142E2  6EDA               	movwf	fsr2h,c
 25841  0142E4  CD32 FFDF          	movff	3378,indf2	;volatile
 25842                           
 25843                           ;usb_device.c: 2728: break;
 25844  0142E8  0012               	return	
 25845  0142EA                     i2l7403:
 25846                           
 25847                           ; BSR set to: 13
 25848                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 25849  0142EA  0E00               	movlw	0
 25850  0142EC  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25851  0142EE  0E02               	movlw	2
 25852  0142F0  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25853  0142F2  0E00               	movlw	0
 25854  0142F4  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25855  0142F6  0E00               	movlw	0
 25856  0142F8  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25857  0142FA  0E00               	movlw	0
 25858  0142FC  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25859  0142FE  0E00               	movlw	0
 25860  014300  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25861  014302  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25862                           
 25863                           ;usb_device.c: 2735: }
 25864                           
 25865                           ;usb_device.c: 2734: break;
 25866                           
 25867                           ;usb_device.c: 2733: default:
 25868                           
 25869                           ;usb_device.c: 2732: case 12:
 25870                           
 25871                           ;usb_device.c: 2731: break;
 25872  014306  0012               	return	
 25873  014308                     i2l7407:
 25874  014308  010D               	movlb	13	; () banked
 25875  01430A  5131               	movf	49,w,b	;volatile
 25876                           
 25877                           ; Switch size 1, requested type "space"
 25878                           ; Number of cases is 11, Range of values is 0 to 12
 25879                           ; switch strategies available:
 25880                           ; Name         Instructions Cycles
 25881                           ; simple_byte           34    18 (average)
 25882                           ;	Chosen strategy is simple_byte
 25883  01430C  0A00               	xorlw	0	; case 0
 25884  01430E  B4D8               	btfsc	status,2,c
 25885  014310  D7C5               	goto	i2l7389
 25886  014312  0A01               	xorlw	1	; case 1
 25887  014314  B4D8               	btfsc	status,2,c
 25888  014316  D7C5               	goto	i2l7391
 25889  014318  0A02               	xorlw	2	; case 3
 25890  01431A  B4D8               	btfsc	status,2,c
 25891  01431C  D7C2               	goto	i2l7391
 25892  01431E  0A06               	xorlw	6	; case 5
 25893  014320  B4D8               	btfsc	status,2,c
 25894  014322  D7A3               	goto	i2l1646
 25895  014324  0A03               	xorlw	3	; case 6
 25896  014326  B4D8               	btfsc	status,2,c
 25897  014328  D7A5               	goto	i2l7377
 25898  01432A  0A01               	xorlw	1	; case 7
 25899  01432C  B4D8               	btfsc	status,2,c
 25900  01432E  D7DD               	goto	i2l7403
 25901  014330  0A0F               	xorlw	15	; case 8
 25902  014332  B4D8               	btfsc	status,2,c
 25903  014334  D7A5               	goto	i2l7381
 25904  014336  0A01               	xorlw	1	; case 9
 25905  014338  B4D8               	btfsc	status,2,c
 25906  01433A  D79F               	goto	i2l7379
 25907  01433C  0A03               	xorlw	3	; case 10
 25908  01433E  B4D8               	btfsc	status,2,c
 25909  014340  D7B3               	goto	i2l7393
 25910  014342  0A01               	xorlw	1	; case 11
 25911  014344  B4D8               	btfsc	status,2,c
 25912  014346  D7C3               	goto	i2l1655
 25913  014348  0A07               	xorlw	7	; case 12
 25914  01434A  0012               	return	
 25915  01434C                     __end_of_USBCheckStdRequest:
 25916                           	opt stack 0
 25917                           pclatu	equ	0xFFB
 25918                           pclath	equ	0xFFA
 25919                           tblptru	equ	0xFF8
 25920                           tblptrh	equ	0xFF7
 25921                           tblptrl	equ	0xFF6
 25922                           tablat	equ	0xFF5
 25923                           prodh	equ	0xFF4
 25924                           prodl	equ	0xFF3
 25925                           intcon	equ	0xFF2
 25926                           intcon2	equ	0xFF1
 25927                           postinc0	equ	0xFEE
 25928                           fsr0h	equ	0xFEA
 25929                           fsr0l	equ	0xFE9
 25930                           wreg	equ	0xFE8
 25931                           indf1	equ	0xFE7
 25932                           postinc1	equ	0xFE6
 25933                           postdec1	equ	0xFE5
 25934                           fsr1h	equ	0xFE2
 25935                           fsr1l	equ	0xFE1
 25936                           indf2	equ	0xFDF
 25937                           postinc2	equ	0xFDE
 25938                           postdec2	equ	0xFDD
 25939                           plusw2	equ	0xFDB
 25940                           fsr2h	equ	0xFDA
 25941                           fsr2l	equ	0xFD9
 25942                           status	equ	0xFD8
 25943                           
 25944 ;; *************** function _USBStdSetCfgHandler *****************
 25945 ;; Defined at:
 25946 ;;		line 1968 in file "../../../My_library/usb/usb_device.c"
 25947 ;; Parameters:    Size  Location     Type
 25948 ;;		None
 25949 ;; Auto vars:     Size  Location     Type
 25950 ;;  i               1   20[COMRAM] unsigned char 
 25951 ;; Return value:  Size  Location     Type
 25952 ;;		None               void
 25953 ;; Registers used:
 25954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25955 ;; Tracked objects:
 25956 ;;		On entry : 0/0
 25957 ;;		On exit  : 0/0
 25958 ;;		Unchanged: 0/0
 25959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25961 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25963 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25964 ;;Total ram usage:        1 bytes
 25965 ;; Hardware stack levels used:    1
 25966 ;; Hardware stack levels required when called:    4
 25967 ;; This function calls:
 25968 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25969 ;;		i2_memset
 25970 ;; This function is called by:
 25971 ;;		_USBCheckStdRequest
 25972 ;; This function uses a non-reentrant model
 25973 ;;
 25974                           
 25975                           	psect	text113
 25976  014520                     __ptext113:
 25977                           	opt stack 0
 25978  014520                     _USBStdSetCfgHandler:
 25979                           	opt stack 11
 25980                           
 25981                           ;usb_device.c: 1970: uint8_t i;
 25982                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 25983                           
 25984                           ;incstack = 0
 25985  014520  0100               	movlb	0	; () banked
 25986  014522  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25987                           
 25988                           ; BSR set to: 0
 25989                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 25990  014524  0E27               	movlw	39
 25991  014526  6E2D               	movwf	i2memset@p1,c
 25992  014528  0E0F               	movlw	15
 25993  01452A  6E2E               	movwf	i2memset@p1+1,c
 25994  01452C  0E00               	movlw	0
 25995  01452E  6E30               	movwf	i2memset@c+1,c
 25996  014530  0E00               	movlw	0
 25997  014532  6E2F               	movwf	i2memset@c,c
 25998  014534  0E00               	movlw	0
 25999  014536  6E32               	movwf	i2memset@n+1,c
 26000  014538  0E02               	movlw	2
 26001  01453A  6E31               	movwf	i2memset@n,c
 26002  01453C  EC20  F0B5         	call	i2_memset	;wreg free
 26003                           
 26004                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 26005  014540  0E00               	movlw	0
 26006  014542  6E2D               	movwf	i2memset@p1,c
 26007  014544  0E0D               	movlw	13
 26008  014546  6E2E               	movwf	i2memset@p1+1,c
 26009  014548  0E00               	movlw	0
 26010  01454A  6E30               	movwf	i2memset@c+1,c
 26011  01454C  0E00               	movlw	0
 26012  01454E  6E2F               	movwf	i2memset@c,c
 26013  014550  0E00               	movlw	0
 26014  014552  6E32               	movwf	i2memset@n+1,c
 26015  014554  0E30               	movlw	48
 26016  014556  6E31               	movwf	i2memset@n,c
 26017  014558  EC20  F0B5         	call	i2_memset	;wreg free
 26018                           
 26019                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 26020  01455C  8C65               	bsf	3941,6,c	;volatile
 26021                           
 26022                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 26023  01455E  0E00               	movlw	0
 26024  014560  6E41               	movwf	USBStdSetCfgHandler@i,c
 26025  014562                     i2l7071:
 26026  014562  0E02               	movlw	2
 26027  014564  6441               	cpfsgt	USBStdSetCfgHandler@i,c
 26028  014566  D001               	goto	i2l7075
 26029  014568  D016               	goto	i2l7081
 26030  01456A                     i2l7075:
 26031                           
 26032                           ;usb_device.c: 1988: {
 26033                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 26034  01456A  5041               	movf	USBStdSetCfgHandler@i,w,c
 26035  01456C  0D01               	mullw	1
 26036  01456E  0E01               	movlw	low _ep_data_in
 26037  014570  24F3               	addwf	prodl,w,c
 26038  014572  6ED9               	movwf	fsr2l,c
 26039  014574  0E00               	movlw	high _ep_data_in
 26040  014576  20F4               	addwfc	prodh,w,c
 26041  014578  6EDA               	movwf	fsr2h,c
 26042  01457A  0E00               	movlw	0
 26043  01457C  6EDF               	movwf	indf2,c
 26044                           
 26045                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 26046  01457E  5041               	movf	USBStdSetCfgHandler@i,w,c
 26047  014580  0D01               	mullw	1
 26048  014582  0E04               	movlw	low _ep_data_out
 26049  014584  24F3               	addwf	prodl,w,c
 26050  014586  6ED9               	movwf	fsr2l,c
 26051  014588  0E00               	movlw	high _ep_data_out
 26052  01458A  20F4               	addwfc	prodh,w,c
 26053  01458C  6EDA               	movwf	fsr2h,c
 26054  01458E  0E00               	movlw	0
 26055  014590  6EDF               	movwf	indf2,c
 26056  014592  2A41               	incf	USBStdSetCfgHandler@i,f,c
 26057  014594  D7E6               	goto	i2l7071
 26058  014596                     i2l7081:
 26059                           
 26060                           ;usb_device.c: 1991: }
 26061                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 26062  014596  0E8F               	movlw	low _USBAlternateInterface
 26063  014598  6E2D               	movwf	i2memset@p1,c
 26064  01459A  0E01               	movlw	high _USBAlternateInterface
 26065  01459C  6E2E               	movwf	i2memset@p1+1,c
 26066  01459E  0E00               	movlw	0
 26067  0145A0  6E30               	movwf	i2memset@c+1,c
 26068  0145A2  0E00               	movlw	0
 26069  0145A4  6E2F               	movwf	i2memset@c,c
 26070  0145A6  0E00               	movlw	0
 26071  0145A8  6E32               	movwf	i2memset@n+1,c
 26072  0145AA  0E02               	movlw	2
 26073  0145AC  6E31               	movwf	i2memset@n,c
 26074  0145AE  EC20  F0B5         	call	i2_memset	;wreg free
 26075                           
 26076                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 26077  0145B2  9C65               	bcf	3941,6,c	;volatile
 26078                           
 26079                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 26080  0145B4  0E08               	movlw	8
 26081  0145B6  0100               	movlb	0	; () banked
 26082  0145B8  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 26083  0145BA  0E0D               	movlw	13
 26084  0145BC  0100               	movlb	0	; () banked
 26085  0145BE  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 26086                           
 26087                           ; BSR set to: 0
 26088                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 26089  0145C0  0E00               	movlw	0
 26090  0145C2  6E09               	movwf	_pBDTEntryEP0OutCurrent,c
 26091  0145C4  0E0D               	movlw	13
 26092  0145C6  6E0A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 26093                           
 26094                           ; BSR set to: 0
 26095                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 26096  0145C8  C009  F00B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 26097  0145CC  C00A  F00C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 26098                           
 26099                           ; BSR set to: 0
 26100                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 26101  0145D0  CD32 F02B          	movff	3378,_USBActiveConfiguration	;volatile
 26102                           
 26103                           ; BSR set to: 0
 26104                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 26105  0145D4  502B               	movf	_USBActiveConfiguration,w,c	;volatile
 26106  0145D6  A4D8               	btfss	status,2,c
 26107  0145D8  D003               	goto	i2l7097
 26108                           
 26109                           ; BSR set to: 0
 26110                           ;usb_device.c: 2010: {
 26111                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 26112  0145DA  0E10               	movlw	16
 26113  0145DC  6E14               	movwf	_USBDeviceState,c	;volatile
 26114                           
 26115                           ;usb_device.c: 2013: }
 26116  0145DE  0012               	return	
 26117  0145E0                     i2l7097:
 26118                           
 26119                           ; BSR set to: 0
 26120                           ;usb_device.c: 2014: else
 26121                           ;usb_device.c: 2015: {
 26122                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 26123  0145E0  0E00               	movlw	0
 26124  0145E2  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26125  0145E4  0E01               	movlw	1
 26126  0145E6  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26127  0145E8  0E2B               	movlw	low _USBActiveConfiguration
 26128  0145EA  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26129  0145EC  0E00               	movlw	high _USBActiveConfiguration
 26130  0145EE  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26131  0145F0  0E00               	movlw	0
 26132  0145F2  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26133  0145F4  0E01               	movlw	1
 26134  0145F6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26135  0145F8  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26136                           
 26137                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 26138  0145FC  0E20               	movlw	32
 26139  0145FE  6E14               	movwf	_USBDeviceState,c	;volatile
 26140  014600  0012               	return	
 26141  014602                     __end_of_USBStdSetCfgHandler:
 26142                           	opt stack 0
 26143                           pclatu	equ	0xFFB
 26144                           pclath	equ	0xFFA
 26145                           tblptru	equ	0xFF8
 26146                           tblptrh	equ	0xFF7
 26147                           tblptrl	equ	0xFF6
 26148                           tablat	equ	0xFF5
 26149                           prodh	equ	0xFF4
 26150                           prodl	equ	0xFF3
 26151                           intcon	equ	0xFF2
 26152                           intcon2	equ	0xFF1
 26153                           postinc0	equ	0xFEE
 26154                           fsr0h	equ	0xFEA
 26155                           fsr0l	equ	0xFE9
 26156                           wreg	equ	0xFE8
 26157                           indf1	equ	0xFE7
 26158                           postinc1	equ	0xFE6
 26159                           postdec1	equ	0xFE5
 26160                           fsr1h	equ	0xFE2
 26161                           fsr1l	equ	0xFE1
 26162                           indf2	equ	0xFDF
 26163                           postinc2	equ	0xFDE
 26164                           postdec2	equ	0xFDD
 26165                           plusw2	equ	0xFDB
 26166                           fsr2h	equ	0xFDA
 26167                           fsr2l	equ	0xFD9
 26168                           status	equ	0xFD8
 26169                           
 26170 ;; *************** function i2_memset *****************
 26171 ;; Defined at:
 26172 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 26173 ;; Parameters:    Size  Location     Type
 26174 ;;  p1              2    0[COMRAM] PTR void 
 26175 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26176 ;;  c               2    2[COMRAM] int 
 26177 ;;  n               2    4[COMRAM] unsigned int 
 26178 ;; Auto vars:     Size  Location     Type
 26179 ;;  memset          2    6[COMRAM] PTR unsigned char 
 26180 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26181 ;; Return value:  Size  Location     Type
 26182 ;;                  2    0[COMRAM] PTR void 
 26183 ;; Registers used:
 26184 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26185 ;; Tracked objects:
 26186 ;;		On entry : 0/0
 26187 ;;		On exit  : 0/0
 26188 ;;		Unchanged: 0/0
 26189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26190 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26191 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26193 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26194 ;;Total ram usage:        8 bytes
 26195 ;; Hardware stack levels used:    1
 26196 ;; This function calls:
 26197 ;;		Nothing
 26198 ;; This function is called by:
 26199 ;;		_USBStdSetCfgHandler
 26200 ;;		i2_USBDeviceInit
 26201 ;; This function uses a non-reentrant model
 26202 ;;
 26203                           
 26204                           	psect	text114
 26205  016A40                     __ptext114:
 26206                           	opt stack 0
 26207  016A40                     i2_memset:
 26208                           	opt stack 17
 26209                           
 26210                           ;incstack = 0
 26211  016A40  C02D  F033         	movff	i2memset@p1,i2memset@p
 26212  016A44  C02E  F034         	movff	i2memset@p1+1,i2memset@p+1
 26213  016A48  D008               	goto	i2l6733
 26214  016A4A                     i2l6729:
 26215  016A4A  C033  FFD9         	movff	i2memset@p,fsr2l
 26216  016A4E  C034  FFDA         	movff	i2memset@p+1,fsr2h
 26217  016A52  C02F  FFDF         	movff	i2memset@c,indf2
 26218  016A56  4A33               	infsnz	i2memset@p,f,c
 26219  016A58  2A34               	incf	i2memset@p+1,f,c
 26220  016A5A                     i2l6733:
 26221  016A5A  0631               	decf	i2memset@n,f,c
 26222  016A5C  A0D8               	btfss	status,0,c
 26223  016A5E  0632               	decf	i2memset@n+1,f,c
 26224  016A60  2831               	incf	i2memset@n,w,c
 26225  016A62  E1F3               	bnz	i2l6729
 26226  016A64  2832               	incf	i2memset@n+1,w,c
 26227  016A66  B4D8               	btfsc	status,2,c
 26228  016A68  0012               	return	
 26229  016A6A  D7EF               	goto	i2l6729
 26230  016A6C                     __end_ofi2_memset:
 26231                           	opt stack 0
 26232                           pclatu	equ	0xFFB
 26233                           pclath	equ	0xFFA
 26234                           tblptru	equ	0xFF8
 26235                           tblptrh	equ	0xFF7
 26236                           tblptrl	equ	0xFF6
 26237                           tablat	equ	0xFF5
 26238                           prodh	equ	0xFF4
 26239                           prodl	equ	0xFF3
 26240                           intcon	equ	0xFF2
 26241                           intcon2	equ	0xFF1
 26242                           postinc0	equ	0xFEE
 26243                           fsr0h	equ	0xFEA
 26244                           fsr0l	equ	0xFE9
 26245                           wreg	equ	0xFE8
 26246                           indf1	equ	0xFE7
 26247                           postinc1	equ	0xFE6
 26248                           postdec1	equ	0xFE5
 26249                           fsr1h	equ	0xFE2
 26250                           fsr1l	equ	0xFE1
 26251                           indf2	equ	0xFDF
 26252                           postinc2	equ	0xFDE
 26253                           postdec2	equ	0xFDD
 26254                           plusw2	equ	0xFDB
 26255                           fsr2h	equ	0xFDA
 26256                           fsr2l	equ	0xFD9
 26257                           status	equ	0xFD8
 26258                           
 26259 ;; *************** function _USBStdGetStatusHandler *****************
 26260 ;; Defined at:
 26261 ;;		line 2129 in file "../../../My_library/usb/usb_device.c"
 26262 ;; Parameters:    Size  Location     Type
 26263 ;;		None
 26264 ;; Auto vars:     Size  Location     Type
 26265 ;;  p               2    1[COMRAM] PTR struct __BDT
 26266 ;;		 -> NULL(0), BDT(48), 
 26267 ;; Return value:  Size  Location     Type
 26268 ;;		None               void
 26269 ;; Registers used:
 26270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26271 ;; Tracked objects:
 26272 ;;		On entry : 0/0
 26273 ;;		On exit  : 0/0
 26274 ;;		Unchanged: 0/0
 26275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26277 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26278 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26279 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26280 ;;Total ram usage:        3 bytes
 26281 ;; Hardware stack levels used:    1
 26282 ;; This function calls:
 26283 ;;		Nothing
 26284 ;; This function is called by:
 26285 ;;		_USBCheckStdRequest
 26286 ;; This function uses a non-reentrant model
 26287 ;;
 26288                           
 26289                           	psect	text115
 26290  01548A                     __ptext115:
 26291                           	opt stack 0
 26292  01548A                     _USBStdGetStatusHandler:
 26293                           	opt stack 15
 26294                           
 26295                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 26296                           
 26297                           ;incstack = 0
 26298  01548A  0E00               	movlw	0
 26299  01548C  010D               	movlb	13	; () banked
 26300  01548E  6F38               	movwf	56,b	;volatile
 26301                           
 26302                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 26303  015490  0E00               	movlw	0
 26304  015492  010D               	movlb	13	; () banked
 26305  015494  6F39               	movwf	57,b	;volatile
 26306                           
 26307                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 26308  015496  D03B               	goto	i2l7153
 26309  015498                     i2l1582:
 26310                           
 26311                           ; BSR set to: 13
 26312                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 26313  015498  0100               	movlb	0	; () banked
 26314  01549A  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26315                           
 26316                           ;usb_device.c: 2145: }
 26317                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 26318                           
 26319                           ; BSR set to: 13
 26320                           
 26321                           ; BSR set to: 0
 26322                           ;usb_device.c: 2143: {
 26323                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 26324                           
 26325                           ;usb_device.c: 2142: if(0 == 1)
 26326  01549C  0410               	decf	_RemoteWakeup,w,c	;volatile
 26327  01549E  A4D8               	btfss	status,2,c
 26328  0154A0  D042               	goto	i2l1585
 26329                           
 26330                           ;usb_device.c: 2148: {
 26331                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 26332  0154A2  010D               	movlb	13	; () banked
 26333  0154A4  8338               	bsf	56,1,b	;volatile
 26334                           
 26335                           ; BSR set to: 13
 26336                           ;usb_device.c: 2150: }
 26337                           ;usb_device.c: 2151: break;
 26338  0154A6  D03F               	goto	i2l1585
 26339  0154A8                     i2l1586:
 26340                           
 26341                           ; BSR set to: 13
 26342                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 26343  0154A8  0100               	movlb	0	; () banked
 26344  0154AA  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26345                           
 26346                           ;usb_device.c: 2154: break;
 26347  0154AC  D03C               	goto	i2l1585
 26348  0154AE                     i2l1587:
 26349                           
 26350                           ; BSR set to: 13
 26351                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 26352  0154AE  0100               	movlb	0	; () banked
 26353  0154B0  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26354                           
 26355                           ;usb_device.c: 2160: {
 26356                           ;usb_device.c: 2161: BDT_ENTRY *p;
 26357                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 26358  0154B2  010D               	movlb	13	; () banked
 26359  0154B4  BF34               	btfsc	52,7,b	;volatile
 26360  0154B6  D00B               	goto	i2l7143
 26361                           
 26362                           ; BSR set to: 13
 26363                           ;usb_device.c: 2164: {
 26364                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 26365  0154B8  010D               	movlb	13	; () banked
 26366  0154BA  5134               	movf	52,w,b	;volatile
 26367  0154BC  0B0F               	andlw	15
 26368  0154BE  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26369  0154C0  502D               	movf	??_USBStdGetStatusHandler,w,c
 26370  0154C2  0D02               	mullw	2
 26371  0154C4  0E00               	movlw	low _pBDTEntryOut
 26372  0154C6  24F3               	addwf	prodl,w,c
 26373  0154C8  6ED9               	movwf	fsr2l,c
 26374  0154CA  0E01               	movlw	high _pBDTEntryOut
 26375  0154CC  D00A               	goto	L8
 26376  0154CE                     i2l7143:
 26377                           
 26378                           ; BSR set to: 13
 26379                           ;usb_device.c: 2167: else
 26380                           ;usb_device.c: 2168: {
 26381                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 26382  0154CE  010D               	movlb	13	; () banked
 26383  0154D0  5134               	movf	52,w,b	;volatile
 26384  0154D2  0B0F               	andlw	15
 26385  0154D4  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26386  0154D6  502D               	movf	??_USBStdGetStatusHandler,w,c
 26387  0154D8  0D02               	mullw	2
 26388  0154DA  0EF5               	movlw	low _pBDTEntryIn
 26389  0154DC  24F3               	addwf	prodl,w,c
 26390  0154DE  6ED9               	movwf	fsr2l,c
 26391  0154E0  0E00               	movlw	high _pBDTEntryIn
 26392  0154E2                     L8:
 26393  0154E2  20F4               	addwfc	prodh,w,c
 26394  0154E4  6EDA               	movwf	fsr2h,c
 26395  0154E6  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 26396  0154EA  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 26397                           
 26398                           ; BSR set to: 13
 26399                           ;usb_device.c: 2170: }
 26400                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 26401                           
 26402                           ; BSR set to: 13
 26403  0154EE  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26404  0154F2  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26405  0154F6  AEDF               	btfss	indf2,7,c
 26406  0154F8  D016               	goto	i2l1585
 26407                           
 26408                           ; BSR set to: 13
 26409  0154FA  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26410  0154FE  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26411  015502  A4DF               	btfss	indf2,2,c
 26412  015504  D010               	goto	i2l1585
 26413                           
 26414                           ; BSR set to: 13
 26415                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 26416  015506  0E01               	movlw	1
 26417  015508  010D               	movlb	13	; () banked
 26418  01550A  6F38               	movwf	56,b	;volatile
 26419                           
 26420                           ; BSR set to: 13
 26421                           ;usb_device.c: 2175: }
 26422                           ;usb_device.c: 2176: }
 26423                           
 26424                           ; BSR set to: 13
 26425                           ;usb_device.c: 2174: break;
 26426  01550C  D00C               	goto	i2l1585
 26427  01550E                     i2l7153:
 26428                           
 26429                           ; BSR set to: 13
 26430  01550E  010D               	movlb	13	; () banked
 26431  015510  5130               	movf	48,w,b	;volatile
 26432  015512  0B1F               	andlw	31
 26433                           
 26434                           ; Switch size 1, requested type "space"
 26435                           ; Number of cases is 3, Range of values is 0 to 2
 26436                           ; switch strategies available:
 26437                           ; Name         Instructions Cycles
 26438                           ; simple_byte           10     6 (average)
 26439                           ;	Chosen strategy is simple_byte
 26440  015514  0A00               	xorlw	0	; case 0
 26441  015516  B4D8               	btfsc	status,2,c
 26442  015518  D7BF               	goto	i2l1582
 26443  01551A  0A01               	xorlw	1	; case 1
 26444  01551C  B4D8               	btfsc	status,2,c
 26445  01551E  D7C4               	goto	i2l1586
 26446  015520  0A03               	xorlw	3	; case 2
 26447  015522  B4D8               	btfsc	status,2,c
 26448  015524  D7C4               	goto	i2l1587
 26449  015526                     i2l1585:
 26450                           
 26451                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 26452  015526  0100               	movlb	0	; () banked
 26453  015528  AFF2               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 26454  01552A  0012               	return	
 26455                           
 26456                           ; BSR set to: 0
 26457                           ;usb_device.c: 2179: {
 26458                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 26459  01552C  0E38               	movlw	56
 26460  01552E  0100               	movlb	0	; () banked
 26461  015530  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 26462  015532  0E0D               	movlw	13
 26463  015534  0100               	movlb	0	; () banked
 26464  015536  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26465                           
 26466                           ; BSR set to: 0
 26467                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26468  015538  0100               	movlb	0	; () banked
 26469  01553A  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26470                           
 26471                           ; BSR set to: 0
 26472                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 26473  01553C  0E02               	movlw	2
 26474  01553E  0100               	movlb	0	; () banked
 26475  015540  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26476  015542  0012               	return	
 26477  015544                     __end_of_USBStdGetStatusHandler:
 26478                           	opt stack 0
 26479                           pclatu	equ	0xFFB
 26480                           pclath	equ	0xFFA
 26481                           tblptru	equ	0xFF8
 26482                           tblptrh	equ	0xFF7
 26483                           tblptrl	equ	0xFF6
 26484                           tablat	equ	0xFF5
 26485                           prodh	equ	0xFF4
 26486                           prodl	equ	0xFF3
 26487                           intcon	equ	0xFF2
 26488                           intcon2	equ	0xFF1
 26489                           postinc0	equ	0xFEE
 26490                           fsr0h	equ	0xFEA
 26491                           fsr0l	equ	0xFE9
 26492                           wreg	equ	0xFE8
 26493                           indf1	equ	0xFE7
 26494                           postinc1	equ	0xFE6
 26495                           postdec1	equ	0xFE5
 26496                           fsr1h	equ	0xFE2
 26497                           fsr1l	equ	0xFE1
 26498                           indf2	equ	0xFDF
 26499                           postinc2	equ	0xFDE
 26500                           postdec2	equ	0xFDD
 26501                           plusw2	equ	0xFDB
 26502                           fsr2h	equ	0xFDA
 26503                           fsr2l	equ	0xFD9
 26504                           status	equ	0xFD8
 26505                           
 26506 ;; *************** function _USBStdGetDscHandler *****************
 26507 ;; Defined at:
 26508 ;;		line 2043 in file "../../../My_library/usb/usb_device.c"
 26509 ;; Parameters:    Size  Location     Type
 26510 ;;		None
 26511 ;; Auto vars:     Size  Location     Type
 26512 ;;		None
 26513 ;; Return value:  Size  Location     Type
 26514 ;;		None               void
 26515 ;; Registers used:
 26516 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 26517 ;; Tracked objects:
 26518 ;;		On entry : 0/0
 26519 ;;		On exit  : 0/0
 26520 ;;		Unchanged: 0/0
 26521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26524 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26525 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26526 ;;Total ram usage:        2 bytes
 26527 ;; Hardware stack levels used:    1
 26528 ;; This function calls:
 26529 ;;		Nothing
 26530 ;; This function is called by:
 26531 ;;		_USBCheckStdRequest
 26532 ;; This function uses a non-reentrant model
 26533 ;;
 26534                           
 26535                           	psect	text116
 26536  0133FE                     __ptext116:
 26537                           	opt stack 0
 26538  0133FE                     _USBStdGetDscHandler:
 26539                           	opt stack 15
 26540                           
 26541                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 26542                           
 26543                           ; BSR set to: 0
 26544                           ;incstack = 0
 26545  0133FE  0E80               	movlw	128
 26546  013400  010D               	movlb	13	; () banked
 26547  013402  1930               	xorwf	48,w,b	;volatile
 26548  013404  A4D8               	btfss	status,2,c
 26549  013406  0012               	return	
 26550                           
 26551                           ; BSR set to: 13
 26552                           ;usb_device.c: 2046: {
 26553                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 26554  013408  0EC0               	movlw	192
 26555  01340A  0100               	movlb	0	; () banked
 26556  01340C  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26557                           
 26558                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 26559  01340E  D092               	goto	i2l7131
 26560  013410                     i2l7105:
 26561                           
 26562                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 26563  013410  0EC0               	movlw	low _device_dsc
 26564  013412  0100               	movlb	0	; () banked
 26565  013414  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 26566  013416  0EFB               	movlw	high _device_dsc
 26567  013418  0100               	movlb	0	; () banked
 26568  01341A  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26569                           
 26570                           ; BSR set to: 0
 26571                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 26572  01341C  0E00               	movlw	0
 26573  01341E  0100               	movlb	0	; () banked
 26574  013420  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 26575  013422  0E12               	movlw	18
 26576  013424  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26577                           
 26578                           ;usb_device.c: 2058: break;
 26579  013426  0012               	return	
 26580  013428                     i2l7109:
 26581                           
 26582                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 26583  013428  010D               	movlb	13	; () banked
 26584  01342A  5132               	movf	50,w,b	;volatile
 26585  01342C  A4D8               	btfss	status,2,c
 26586  01342E  D049               	goto	i2l7117
 26587                           
 26588                           ; BSR set to: 13
 26589                           ;usb_device.c: 2064: {
 26590                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 26591  013430  010D               	movlb	13	; () banked
 26592  013432  5132               	movf	50,w,b	;volatile
 26593  013434  0D02               	mullw	2
 26594  013436  0E7F               	movlw	low _USB_CD_Ptr
 26595  013438  24F3               	addwf	prodl,w,c
 26596  01343A  6EF6               	movwf	tblptrl,c
 26597  01343C  0EFA               	movlw	high _USB_CD_Ptr
 26598  01343E  20F4               	addwfc	prodh,w,c
 26599  013440  6EF7               	movwf	tblptrh,c
 26600  013442                     	if	1	;There are 3 active tblptr bytes
 26601  013442  6AF8               	clrf	tblptru,c
 26602  013444  0E00               	movlw	low (__mediumconst shr (0+16))
 26603  013446  22F8               	addwfc	tblptru,f,c
 26604  013448                     	endif
 26605  013448  0009               	tblrd		*+
 26606  01344A  CFF5 F0EF          	movff	tablat,_inPipes	;volatile
 26607  01344E  000A               	tblrd		*-
 26608  013450  CFF5 F0F0          	movff	tablat,_inPipes+1	;volatile
 26609                           
 26610                           ; BSR set to: 13
 26611                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 26612  013454  0E02               	movlw	2
 26613  013456  0100               	movlb	0	; () banked
 26614  013458  25EF               	addwf	_inPipes& (0+255),w,b	;volatile
 26615  01345A  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 26616  01345C  0E00               	movlw	0
 26617  01345E  0100               	movlb	0	; () banked
 26618  013460  21F0               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 26619  013462  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 26620  013464  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 26621  013468  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 26622  01346C  0E00               	movlw	low (__mediumconst shr (0+16))
 26623  01346E  6EF8               	movwf	tblptru,c
 26624  013470  0E0E               	movlw	(high __ramtop+-1)
 26625  013472  64F7               	cpfsgt	tblptrh,c
 26626  013474  D003               	bra	i2u664_47
 26627  013476  0008               	tblrd		*
 26628  013478  50F5               	movf	tablat,w,c
 26629  01347A  D005               	bra	i2u664_40
 26630  01347C                     i2u664_47:
 26631  01347C  CFF6 FFE1          	movff	tblptrl,fsr1l
 26632  013480  CFF7 FFE2          	movff	tblptrh,fsr1h
 26633  013484  50E7               	movf	indf1,w,c
 26634  013486                     i2u664_40:
 26635  013486  0100               	movlb	0	; () banked
 26636  013488  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26637                           
 26638                           ; BSR set to: 0
 26639                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 26640  01348A  0E03               	movlw	3
 26641  01348C  0100               	movlb	0	; () banked
 26642  01348E  25EF               	addwf	_inPipes& (0+255),w,b	;volatile
 26643  013490  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 26644  013492  0E00               	movlw	0
 26645  013494  0100               	movlb	0	; () banked
 26646  013496  21F0               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 26647  013498  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 26648  01349A  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 26649  01349E  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 26650  0134A2  0E00               	movlw	low (__mediumconst shr (0+16))
 26651  0134A4  6EF8               	movwf	tblptru,c
 26652  0134A6  0E0E               	movlw	(high __ramtop+-1)
 26653  0134A8  64F7               	cpfsgt	tblptrh,c
 26654  0134AA  D003               	bra	i2u665_47
 26655  0134AC  0008               	tblrd		*
 26656  0134AE  50F5               	movf	tablat,w,c
 26657  0134B0  D005               	bra	i2u665_40
 26658  0134B2                     i2u665_47:
 26659  0134B2  CFF6 FFE1          	movff	tblptrl,fsr1l
 26660  0134B6  CFF7 FFE2          	movff	tblptrh,fsr1h
 26661  0134BA  50E7               	movf	indf1,w,c
 26662  0134BC                     i2u665_40:
 26663  0134BC  0100               	movlb	0	; () banked
 26664  0134BE  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 26665                           
 26666                           ;usb_device.c: 2076: }
 26667  0134C0  0012               	return	
 26668  0134C2                     i2l7117:
 26669                           
 26670                           ;usb_device.c: 2077: else
 26671                           ;usb_device.c: 2078: {
 26672                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 26673  0134C2  0E00               	movlw	0
 26674  0134C4  0100               	movlb	0	; () banked
 26675  0134C6  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26676                           
 26677                           ; BSR set to: 0
 26678                           ;usb_device.c: 2080: }
 26679                           ;usb_device.c: 2081: break;
 26680  0134C8  0012               	return	
 26681  0134CA                     i2l7119:
 26682                           
 26683                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 26684  0134CA  0E03               	movlw	3
 26685  0134CC  010D               	movlb	13	; () banked
 26686  0134CE  6132               	cpfslt	50,b	;volatile
 26687  0134D0  D029               	goto	i2l7125
 26688                           
 26689                           ; BSR set to: 13
 26690                           ;usb_device.c: 2087: {
 26691                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 26692  0134D2  010D               	movlb	13	; () banked
 26693  0134D4  5132               	movf	50,w,b	;volatile
 26694  0134D6  0D02               	mullw	2
 26695  0134D8  0E79               	movlw	low _USB_SD_Ptr
 26696  0134DA  24F3               	addwf	prodl,w,c
 26697  0134DC  6EF6               	movwf	tblptrl,c
 26698  0134DE  0EFA               	movlw	high _USB_SD_Ptr
 26699  0134E0  20F4               	addwfc	prodh,w,c
 26700  0134E2  6EF7               	movwf	tblptrh,c
 26701  0134E4                     	if	1	;There are 3 active tblptr bytes
 26702  0134E4  6AF8               	clrf	tblptru,c
 26703  0134E6  0E00               	movlw	low (__mediumconst shr (0+16))
 26704  0134E8  22F8               	addwfc	tblptru,f,c
 26705  0134EA                     	endif
 26706  0134EA  0009               	tblrd		*+
 26707  0134EC  CFF5 F0EF          	movff	tablat,_inPipes	;volatile
 26708  0134F0  000A               	tblrd		*-
 26709  0134F2  CFF5 F0F0          	movff	tablat,_inPipes+1	;volatile
 26710                           
 26711                           ; BSR set to: 13
 26712                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 26713  0134F6  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 26714  0134FA  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 26715  0134FE  0E00               	movlw	low (__mediumconst shr (0+16))
 26716  013500  6EF8               	movwf	tblptru,c
 26717  013502  0E0E               	movlw	(high __ramtop+-1)
 26718  013504  64F7               	cpfsgt	tblptrh,c
 26719  013506  D003               	bra	i2u667_47
 26720  013508  0008               	tblrd		*
 26721  01350A  50F5               	movf	tablat,w,c
 26722  01350C  D005               	bra	i2u667_40
 26723  01350E                     i2u667_47:
 26724  01350E  CFF6 FFE1          	movff	tblptrl,fsr1l
 26725  013512  CFF7 FFE2          	movff	tblptrh,fsr1h
 26726  013516  50E7               	movf	indf1,w,c
 26727  013518                     i2u667_40:
 26728  013518  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 26729  01351A  502D               	movf	??_USBStdGetDscHandler,w,c
 26730  01351C  0100               	movlb	0	; () banked
 26731  01351E  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26732  013520  6BF4               	clrf	(_inPipes+5)& (0+255),b	;volatile
 26733                           
 26734                           ;usb_device.c: 2092: }
 26735  013522  0012               	return	
 26736  013524                     i2l7125:
 26737                           
 26738                           ;usb_device.c: 2102: else
 26739                           ;usb_device.c: 2103: {
 26740                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 26741  013524  0E00               	movlw	0
 26742  013526  0100               	movlb	0	; () banked
 26743  013528  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26744                           
 26745                           ; BSR set to: 0
 26746                           ;usb_device.c: 2105: }
 26747                           ;usb_device.c: 2106: break;
 26748  01352A  0012               	return	
 26749  01352C                     i2l7127:
 26750                           
 26751                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 26752  01352C  0E00               	movlw	0
 26753  01352E  0100               	movlb	0	; () banked
 26754  013530  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26755                           
 26756                           ; BSR set to: 0
 26757                           ;usb_device.c: 2110: }
 26758                           
 26759                           ;usb_device.c: 2109: break;
 26760  013532  0012               	return	
 26761  013534                     i2l7131:
 26762                           
 26763                           ; BSR set to: 0
 26764  013534  010D               	movlb	13	; () banked
 26765  013536  5133               	movf	51,w,b	;volatile
 26766                           
 26767                           ; Switch size 1, requested type "space"
 26768                           ; Number of cases is 3, Range of values is 1 to 3
 26769                           ; switch strategies available:
 26770                           ; Name         Instructions Cycles
 26771                           ; simple_byte           10     6 (average)
 26772                           ;	Chosen strategy is simple_byte
 26773  013538  0A01               	xorlw	1	; case 1
 26774  01353A  B4D8               	btfsc	status,2,c
 26775  01353C  D769               	goto	i2l7105
 26776  01353E  0A03               	xorlw	3	; case 2
 26777  013540  B4D8               	btfsc	status,2,c
 26778  013542  D772               	goto	i2l7109
 26779  013544  0A01               	xorlw	1	; case 3
 26780  013546  B4D8               	btfsc	status,2,c
 26781  013548  D7C0               	goto	i2l7119
 26782  01354A  D7F0               	goto	i2l7127
 26783  01354C                     __end_of_USBStdGetDscHandler:
 26784                           	opt stack 0
 26785                           pclatu	equ	0xFFB
 26786                           pclath	equ	0xFFA
 26787                           tblptru	equ	0xFF8
 26788                           tblptrh	equ	0xFF7
 26789                           tblptrl	equ	0xFF6
 26790                           tablat	equ	0xFF5
 26791                           prodh	equ	0xFF4
 26792                           prodl	equ	0xFF3
 26793                           intcon	equ	0xFF2
 26794                           intcon2	equ	0xFF1
 26795                           postinc0	equ	0xFEE
 26796                           fsr0h	equ	0xFEA
 26797                           fsr0l	equ	0xFE9
 26798                           wreg	equ	0xFE8
 26799                           indf1	equ	0xFE7
 26800                           postinc1	equ	0xFE6
 26801                           postdec1	equ	0xFE5
 26802                           fsr1h	equ	0xFE2
 26803                           fsr1l	equ	0xFE1
 26804                           indf2	equ	0xFDF
 26805                           postinc2	equ	0xFDE
 26806                           postdec2	equ	0xFDD
 26807                           plusw2	equ	0xFDB
 26808                           fsr2h	equ	0xFDA
 26809                           fsr2l	equ	0xFD9
 26810                           status	equ	0xFD8
 26811                           
 26812 ;; *************** function _USBStdFeatureReqHandler *****************
 26813 ;; Defined at:
 26814 ;;		line 2757 in file "../../../My_library/usb/usb_device.c"
 26815 ;; Parameters:    Size  Location     Type
 26816 ;;		None
 26817 ;; Auto vars:     Size  Location     Type
 26818 ;;  p               2   24[COMRAM] PTR struct __BDT
 26819 ;;		 -> NULL(0), BDT(48), 
 26820 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 26821 ;;		 -> UEP0(1), 
 26822 ;;  current_ep_d    1   23[COMRAM] struct .
 26823 ;; Return value:  Size  Location     Type
 26824 ;;		None               void
 26825 ;; Registers used:
 26826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26827 ;; Tracked objects:
 26828 ;;		On entry : 0/0
 26829 ;;		On exit  : 0/0
 26830 ;;		Unchanged: 0/0
 26831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26833 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26834 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26835 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26836 ;;Total ram usage:        6 bytes
 26837 ;; Hardware stack levels used:    1
 26838 ;; Hardware stack levels required when called:    4
 26839 ;; This function calls:
 26840 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26841 ;; This function is called by:
 26842 ;;		_USBCheckStdRequest
 26843 ;; This function uses a non-reentrant model
 26844 ;;
 26845                           
 26846                           	psect	text117
 26847  011E44                     __ptext117:
 26848                           	opt stack 0
 26849  011E44                     _USBStdFeatureReqHandler:
 26850                           	opt stack 11
 26851                           
 26852                           ;usb_device.c: 2759: BDT_ENTRY *p;
 26853                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 26854                           ;usb_device.c: 2764: unsigned char* pUEP;
 26855                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 26856                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 26857                           
 26858                           ;incstack = 0
 26859  011E44  010D               	movlb	13	; () banked
 26860  011E46  0532               	decf	50,w,b	;volatile
 26861  011E48  A4D8               	btfss	status,2,c
 26862  011E4A  D011               	goto	i2l1661
 26863                           
 26864                           ; BSR set to: 13
 26865  011E4C  010D               	movlb	13	; () banked
 26866  011E4E  5130               	movf	48,w,b	;volatile
 26867  011E50  0B1F               	andlw	31
 26868  011E52  0900               	iorlw	0
 26869  011E54  A4D8               	btfss	status,2,c
 26870  011E56  D00B               	goto	i2l1661
 26871                           
 26872                           ; BSR set to: 13
 26873                           ;usb_device.c: 2804: {
 26874                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 26875  011E58  0100               	movlb	0	; () banked
 26876  011E5A  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26877                           
 26878                           ; BSR set to: 0
 26879                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 26880  011E5C  0E03               	movlw	3
 26881  011E5E  010D               	movlb	13	; () banked
 26882  011E60  1931               	xorwf	49,w,b	;volatile
 26883  011E62  A4D8               	btfss	status,2,c
 26884  011E64  D002               	goto	i2l7171
 26885                           
 26886                           ; BSR set to: 13
 26887                           ;usb_device.c: 2807: RemoteWakeup = 1;
 26888  011E66  0E01               	movlw	1
 26889  011E68  D001               	goto	L9
 26890  011E6A                     i2l7171:
 26891                           
 26892                           ; BSR set to: 13
 26893                           ;usb_device.c: 2808: else
 26894                           ;usb_device.c: 2809: RemoteWakeup = 0;
 26895  011E6A  0E00               	movlw	0
 26896  011E6C                     L9:
 26897  011E6C  6E10               	movwf	_RemoteWakeup,c	;volatile
 26898  011E6E                     i2l1661:
 26899                           
 26900                           ; BSR set to: 13
 26901                           ;usb_device.c: 2810: }
 26902                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 26903                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 26904                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 26905                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 26906  011E6E  010D               	movlb	13	; () banked
 26907  011E70  5132               	movf	50,w,b	;volatile
 26908  011E72  A4D8               	btfss	status,2,c
 26909  011E74  0012               	return	
 26910                           
 26911                           ; BSR set to: 13
 26912  011E76  010D               	movlb	13	; () banked
 26913  011E78  5130               	movf	48,w,b	;volatile
 26914  011E7A  0B1F               	andlw	31
 26915  011E7C  0A02               	xorlw	2
 26916  011E7E  A4D8               	btfss	status,2,c
 26917  011E80  0012               	return	
 26918                           
 26919                           ; BSR set to: 13
 26920  011E82  010D               	movlb	13	; () banked
 26921  011E84  5134               	movf	52,w,b	;volatile
 26922  011E86  0B0F               	andlw	15
 26923  011E88  0900               	iorlw	0
 26924  011E8A  B4D8               	btfsc	status,2,c
 26925  011E8C  0012               	return	
 26926                           
 26927                           ; BSR set to: 13
 26928  011E8E  010D               	movlb	13	; () banked
 26929  011E90  5134               	movf	52,w,b	;volatile
 26930  011E92  0B0F               	andlw	15
 26931  011E94  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26932  011E96  0E03               	movlw	3
 26933  011E98  6041               	cpfslt	??_USBStdFeatureReqHandler,c
 26934  011E9A  0012               	return	
 26935                           
 26936                           ; BSR set to: 13
 26937  011E9C  0E20               	movlw	32
 26938  011E9E  1814               	xorwf	_USBDeviceState,w,c	;volatile
 26939  011EA0  A4D8               	btfss	status,2,c
 26940  011EA2  0012               	return	
 26941                           
 26942                           ; BSR set to: 13
 26943                           ;usb_device.c: 2817: {
 26944                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 26945  011EA4  0100               	movlb	0	; () banked
 26946  011EA6  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26947                           
 26948                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 26949  011EA8  010D               	movlb	13	; () banked
 26950  011EAA  BF34               	btfsc	52,7,b	;volatile
 26951  011EAC  D01B               	goto	i2l7185
 26952                           
 26953                           ; BSR set to: 13
 26954                           ;usb_device.c: 2824: {
 26955                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 26956  011EAE  010D               	movlb	13	; () banked
 26957  011EB0  5134               	movf	52,w,b	;volatile
 26958  011EB2  0B0F               	andlw	15
 26959  011EB4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26960  011EB6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 26961  011EB8  0D02               	mullw	2
 26962  011EBA  0E00               	movlw	low _pBDTEntryOut
 26963  011EBC  24F3               	addwf	prodl,w,c
 26964  011EBE  6ED9               	movwf	fsr2l,c
 26965  011EC0  0E01               	movlw	high _pBDTEntryOut
 26966  011EC2  20F4               	addwfc	prodh,w,c
 26967  011EC4  6EDA               	movwf	fsr2h,c
 26968  011EC6  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 26969  011ECA  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 26970                           
 26971                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 26972  011ECE  010D               	movlb	13	; () banked
 26973  011ED0  5134               	movf	52,w,b	;volatile
 26974  011ED2  0B0F               	andlw	15
 26975  011ED4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26976  011ED6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 26977  011ED8  0D01               	mullw	1
 26978  011EDA  0E04               	movlw	low _ep_data_out
 26979  011EDC  24F3               	addwf	prodl,w,c
 26980  011EDE  6ED9               	movwf	fsr2l,c
 26981  011EE0  0E00               	movlw	high _ep_data_out
 26982  011EE2  D01A               	goto	L10
 26983  011EE4                     i2l7185:
 26984                           
 26985                           ; BSR set to: 13
 26986                           ;usb_device.c: 2828: else
 26987                           ;usb_device.c: 2829: {
 26988                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 26989  011EE4  010D               	movlb	13	; () banked
 26990  011EE6  5134               	movf	52,w,b	;volatile
 26991  011EE8  0B0F               	andlw	15
 26992  011EEA  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26993  011EEC  5041               	movf	??_USBStdFeatureReqHandler,w,c
 26994  011EEE  0D02               	mullw	2
 26995  011EF0  0EF5               	movlw	low _pBDTEntryIn
 26996  011EF2  24F3               	addwf	prodl,w,c
 26997  011EF4  6ED9               	movwf	fsr2l,c
 26998  011EF6  0E00               	movlw	high _pBDTEntryIn
 26999  011EF8  20F4               	addwfc	prodh,w,c
 27000  011EFA  6EDA               	movwf	fsr2h,c
 27001  011EFC  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 27002  011F00  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27003                           
 27004                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 27005  011F04  010D               	movlb	13	; () banked
 27006  011F06  5134               	movf	52,w,b	;volatile
 27007  011F08  0B0F               	andlw	15
 27008  011F0A  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27009  011F0C  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27010  011F0E  0D01               	mullw	1
 27011  011F10  0E01               	movlw	low _ep_data_in
 27012  011F12  24F3               	addwf	prodl,w,c
 27013  011F14  6ED9               	movwf	fsr2l,c
 27014  011F16  0E00               	movlw	high _ep_data_in
 27015  011F18                     L10:
 27016  011F18  20F4               	addwfc	prodh,w,c
 27017  011F1A  6EDA               	movwf	fsr2h,c
 27018  011F1C  50DF               	movf	indf2,w,c
 27019  011F1E  6E44               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 27020                           
 27021                           ; BSR set to: 13
 27022                           ;usb_device.c: 2832: }
 27023                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 27024                           
 27025                           ; BSR set to: 13
 27026  011F20  B044               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 27027  011F22  D002               	goto	i2l7191
 27028                           
 27029                           ; BSR set to: 13
 27030                           ;usb_device.c: 2839: {
 27031                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 27032  011F24  9445               	bcf	USBStdFeatureReqHandler@p,2,c
 27033                           
 27034                           ;usb_device.c: 2841: }
 27035  011F26  D001               	goto	i2l7193
 27036  011F28                     i2l7191:
 27037                           
 27038                           ; BSR set to: 13
 27039                           ;usb_device.c: 2842: else
 27040                           ;usb_device.c: 2843: {
 27041                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 27042  011F28  8445               	bsf	USBStdFeatureReqHandler@p,2,c
 27043  011F2A                     i2l7193:
 27044                           
 27045                           ; BSR set to: 13
 27046                           ;usb_device.c: 2845: }
 27047                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 27048  011F2A  010D               	movlb	13	; () banked
 27049  011F2C  BF34               	btfsc	52,7,b	;volatile
 27050  011F2E  D00B               	goto	i2l7197
 27051                           
 27052                           ; BSR set to: 13
 27053                           ;usb_device.c: 2851: {
 27054                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27055  011F30  010D               	movlb	13	; () banked
 27056  011F32  5134               	movf	52,w,b	;volatile
 27057  011F34  0B0F               	andlw	15
 27058  011F36  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27059  011F38  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27060  011F3A  0D02               	mullw	2
 27061  011F3C  0E00               	movlw	low _pBDTEntryOut
 27062  011F3E  24F3               	addwf	prodl,w,c
 27063  011F40  6ED9               	movwf	fsr2l,c
 27064  011F42  0E01               	movlw	high _pBDTEntryOut
 27065  011F44  D00A               	goto	L11
 27066  011F46                     i2l7197:
 27067                           
 27068                           ; BSR set to: 13
 27069                           ;usb_device.c: 2854: else
 27070                           ;usb_device.c: 2855: {
 27071                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27072  011F46  010D               	movlb	13	; () banked
 27073  011F48  5134               	movf	52,w,b	;volatile
 27074  011F4A  0B0F               	andlw	15
 27075  011F4C  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27076  011F4E  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27077  011F50  0D02               	mullw	2
 27078  011F52  0EF5               	movlw	low _pBDTEntryIn
 27079  011F54  24F3               	addwf	prodl,w,c
 27080  011F56  6ED9               	movwf	fsr2l,c
 27081  011F58  0E00               	movlw	high _pBDTEntryIn
 27082  011F5A                     L11:
 27083  011F5A  20F4               	addwfc	prodh,w,c
 27084  011F5C  6EDA               	movwf	fsr2h,c
 27085  011F5E  C045  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 27086  011F62  C046  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 27087                           
 27088                           ; BSR set to: 13
 27089                           ;usb_device.c: 2857: }
 27090                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 27091                           
 27092                           ; BSR set to: 13
 27093  011F66  0E03               	movlw	3
 27094  011F68  010D               	movlb	13	; () banked
 27095  011F6A  1931               	xorwf	49,w,b	;volatile
 27096  011F6C  A4D8               	btfss	status,2,c
 27097  011F6E  D02E               	goto	i2l7213
 27098                           
 27099                           ; BSR set to: 13
 27100                           ;usb_device.c: 2861: {
 27101                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 27102  011F70  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27103  011F74  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27104  011F78  AEDF               	btfss	indf2,7,c
 27105  011F7A  D01B               	goto	i2l7209
 27106                           
 27107                           ; BSR set to: 13
 27108                           ;usb_device.c: 2863: {
 27109                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 27110  011F7C  010D               	movlb	13	; () banked
 27111  011F7E  BF34               	btfsc	52,7,b	;volatile
 27112  011F80  D00B               	goto	i2l7207
 27113                           
 27114                           ; BSR set to: 13
 27115                           ;usb_device.c: 2867: {
 27116                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27117  011F82  010D               	movlb	13	; () banked
 27118  011F84  5134               	movf	52,w,b	;volatile
 27119  011F86  0B0F               	andlw	15
 27120  011F88  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27121  011F8A  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27122  011F8C  0D01               	mullw	1
 27123  011F8E  0E04               	movlw	low _ep_data_out
 27124  011F90  24F3               	addwf	prodl,w,c
 27125  011F92  6ED9               	movwf	fsr2l,c
 27126  011F94  0E00               	movlw	high _ep_data_out
 27127  011F96  D00A               	goto	L12
 27128  011F98                     i2l7207:
 27129                           
 27130                           ; BSR set to: 13
 27131                           ;usb_device.c: 2870: else
 27132                           ;usb_device.c: 2871: {
 27133                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27134  011F98  010D               	movlb	13	; () banked
 27135  011F9A  5134               	movf	52,w,b	;volatile
 27136  011F9C  0B0F               	andlw	15
 27137  011F9E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27138  011FA0  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27139  011FA2  0D01               	mullw	1
 27140  011FA4  0E01               	movlw	low _ep_data_in
 27141  011FA6  24F3               	addwf	prodl,w,c
 27142  011FA8  6ED9               	movwf	fsr2l,c
 27143  011FAA  0E00               	movlw	high _ep_data_in
 27144  011FAC                     L12:
 27145  011FAC  20F4               	addwfc	prodh,w,c
 27146  011FAE  6EDA               	movwf	fsr2h,c
 27147  011FB0  82DF               	bsf	indf2,1,c
 27148  011FB2                     i2l7209:
 27149                           
 27150                           ; BSR set to: 13
 27151                           ;usb_device.c: 2873: }
 27152                           ;usb_device.c: 2874: }
 27153                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 27154  011FB2  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27155  011FB6  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27156  011FBA  0E00               	movlw	0
 27157  011FBC  84DB               	bsf	plusw2,2,c
 27158                           
 27159                           ; BSR set to: 13
 27160                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 27161  011FBE  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27162  011FC2  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27163  011FC6  0E00               	movlw	0
 27164  011FC8  8EDB               	bsf	plusw2,7,c
 27165                           
 27166                           ;usb_device.c: 2879: }
 27167  011FCA  0012               	return	
 27168  011FCC                     i2l7213:
 27169                           
 27170                           ; BSR set to: 13
 27171                           ;usb_device.c: 2880: else
 27172                           ;usb_device.c: 2881: {
 27173                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27174  011FCC  0E04               	movlw	4
 27175  011FCE  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 27176                           
 27177                           ; BSR set to: 13
 27178                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 27179  011FD0  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27180  011FD4  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27181  011FD8  AEDF               	btfss	indf2,7,c
 27182  011FDA  D01B               	goto	i2l7223
 27183                           
 27184                           ; BSR set to: 13
 27185                           ;usb_device.c: 2888: {
 27186                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 27187  011FDC  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27188  011FE0  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27189  011FE4  0E7F               	movlw	127
 27190  011FE6  16DF               	andwf	indf2,f,c
 27191                           
 27192                           ; BSR set to: 13
 27193                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 27194  011FE8  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27195  011FEC  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27196  011FF0  0E00               	movlw	0
 27197  011FF2  8CDB               	bsf	plusw2,6,c
 27198                           
 27199                           ; BSR set to: 13
 27200                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27201  011FF4  0E00               	movlw	0
 27202  011FF6  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27203  011FF8  0E05               	movlw	5
 27204  011FFA  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27205  011FFC  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27206  012000  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27207  012004  0E00               	movlw	0
 27208  012006  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27209  012008  0E02               	movlw	2
 27210  01200A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27211  01200C  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27212                           
 27213                           ;usb_device.c: 2894: }
 27214  012010  D006               	goto	i2l7225
 27215  012012                     i2l7223:
 27216                           
 27217                           ;usb_device.c: 2895: else
 27218                           ;usb_device.c: 2896: {
 27219                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 27220  012012  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27221  012016  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27222  01201A  0E00               	movlw	0
 27223  01201C  8CDB               	bsf	plusw2,6,c
 27224  01201E                     i2l7225:
 27225                           
 27226                           ;usb_device.c: 2899: }
 27227                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27228  01201E  0E04               	movlw	4
 27229  012020  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 27230                           
 27231                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 27232  012022  B244               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 27233  012024  D006               	goto	i2l1680
 27234  012026  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27235  01202A  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27236  01202E  AEDF               	btfss	indf2,7,c
 27237  012030  D030               	goto	i2l7239
 27238  012032                     i2l1680:
 27239                           
 27240                           ;usb_device.c: 2910: {
 27241                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 27242  012032  010D               	movlb	13	; () banked
 27243  012034  BF34               	btfsc	52,7,b	;volatile
 27244  012036  D00B               	goto	i2l7233
 27245                           
 27246                           ; BSR set to: 13
 27247                           ;usb_device.c: 2912: {
 27248                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27249  012038  010D               	movlb	13	; () banked
 27250  01203A  5134               	movf	52,w,b	;volatile
 27251  01203C  0B0F               	andlw	15
 27252  01203E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27253  012040  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27254  012042  0D01               	mullw	1
 27255  012044  0E04               	movlw	low _ep_data_out
 27256  012046  24F3               	addwf	prodl,w,c
 27257  012048  6ED9               	movwf	fsr2l,c
 27258  01204A  0E00               	movlw	high _ep_data_out
 27259  01204C  D00A               	goto	L13
 27260  01204E                     i2l7233:
 27261                           
 27262                           ; BSR set to: 13
 27263                           ;usb_device.c: 2915: else
 27264                           ;usb_device.c: 2916: {
 27265                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27266  01204E  010D               	movlb	13	; () banked
 27267  012050  5134               	movf	52,w,b	;volatile
 27268  012052  0B0F               	andlw	15
 27269  012054  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27270  012056  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27271  012058  0D01               	mullw	1
 27272  01205A  0E01               	movlw	low _ep_data_in
 27273  01205C  24F3               	addwf	prodl,w,c
 27274  01205E  6ED9               	movwf	fsr2l,c
 27275  012060  0E00               	movlw	high _ep_data_in
 27276  012062                     L13:
 27277  012062  20F4               	addwfc	prodh,w,c
 27278  012064  6EDA               	movwf	fsr2h,c
 27279  012066  92DF               	bcf	indf2,1,c
 27280                           
 27281                           ; BSR set to: 13
 27282                           ;usb_device.c: 2918: }
 27283                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27284                           
 27285                           ; BSR set to: 13
 27286  012068  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27287  01206C  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27288  012070  0E3B               	movlw	59
 27289  012072  16DF               	andwf	indf2,f,c
 27290                           
 27291                           ; BSR set to: 13
 27292                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27293  012074  0E00               	movlw	0
 27294  012076  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27295  012078  0E05               	movlw	5
 27296  01207A  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27297  01207C  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27298  012080  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27299  012084  0E00               	movlw	0
 27300  012086  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27301  012088  0E02               	movlw	2
 27302  01208A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27303  01208C  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27304                           
 27305                           ;usb_device.c: 2924: }
 27306  012090  D006               	goto	i2l7241
 27307  012092                     i2l7239:
 27308                           
 27309                           ;usb_device.c: 2925: else
 27310                           ;usb_device.c: 2926: {
 27311                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27312  012092  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27313  012096  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27314  01209A  0E3B               	movlw	59
 27315  01209C  16DF               	andwf	indf2,f,c
 27316  01209E                     i2l7241:
 27317                           
 27318                           ;usb_device.c: 2929: }
 27319                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 27320  01209E  010D               	movlb	13	; () banked
 27321  0120A0  5134               	movf	52,w,b	;volatile
 27322  0120A2  0B0F               	andlw	15
 27323  0120A4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27324  0120A6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27325  0120A8  0D01               	mullw	1
 27326  0120AA  0E26               	movlw	38
 27327  0120AC  24F3               	addwf	prodl,w,c
 27328  0120AE  6E42               	movwf	USBStdFeatureReqHandler@pUEP,c
 27329  0120B0  0E0F               	movlw	15
 27330  0120B2  20F4               	addwfc	prodh,w,c
 27331  0120B4  6E43               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 27332                           
 27333                           ; BSR set to: 13
 27334                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 27335  0120B6  C042  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 27336  0120BA  C043  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 27337  0120BE  0EFE               	movlw	254
 27338  0120C0  16DF               	andwf	indf2,f,c
 27339                           
 27340                           ; BSR set to: 13
 27341  0120C2  0012               	return	
 27342  0120C4                     __end_of_USBStdFeatureReqHandler:
 27343                           	opt stack 0
 27344                           pclatu	equ	0xFFB
 27345                           pclath	equ	0xFFA
 27346                           tblptru	equ	0xFF8
 27347                           tblptrh	equ	0xFF7
 27348                           tblptrl	equ	0xFF6
 27349                           tablat	equ	0xFF5
 27350                           prodh	equ	0xFF4
 27351                           prodl	equ	0xFF3
 27352                           intcon	equ	0xFF2
 27353                           intcon2	equ	0xFF1
 27354                           postinc0	equ	0xFEE
 27355                           fsr0h	equ	0xFEA
 27356                           fsr0l	equ	0xFE9
 27357                           wreg	equ	0xFE8
 27358                           indf1	equ	0xFE7
 27359                           postinc1	equ	0xFE6
 27360                           postdec1	equ	0xFE5
 27361                           fsr1h	equ	0xFE2
 27362                           fsr1l	equ	0xFE1
 27363                           indf2	equ	0xFDF
 27364                           postinc2	equ	0xFDE
 27365                           postdec2	equ	0xFDD
 27366                           plusw2	equ	0xFDB
 27367                           fsr2h	equ	0xFDA
 27368                           fsr2l	equ	0xFD9
 27369                           status	equ	0xFD8
 27370                           
 27371 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 27372 ;; Defined at:
 27373 ;;		line 44 in file "../../../My_library/My_usb_cdc.c"
 27374 ;; Parameters:    Size  Location     Type
 27375 ;;  event           2   12[COMRAM] enum E8545
 27376 ;;  pdata           2   14[COMRAM] PTR void 
 27377 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 27378 ;;  size            2   16[COMRAM] unsigned int 
 27379 ;; Auto vars:     Size  Location     Type
 27380 ;;		None
 27381 ;; Return value:  Size  Location     Type
 27382 ;;                  1    wreg      unsigned char 
 27383 ;; Registers used:
 27384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27385 ;; Tracked objects:
 27386 ;;		On entry : 0/0
 27387 ;;		On exit  : 0/0
 27388 ;;		Unchanged: 0/0
 27389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27390 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27392 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27393 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27394 ;;Total ram usage:        8 bytes
 27395 ;; Hardware stack levels used:    1
 27396 ;; Hardware stack levels required when called:    3
 27397 ;; This function calls:
 27398 ;;		_CDCInitEP
 27399 ;;		_USBCheckCDCRequest
 27400 ;; This function is called by:
 27401 ;;		_USBDeviceTasks
 27402 ;;		_USBStdSetCfgHandler
 27403 ;;		_USBSuspend
 27404 ;;		_USBWakeFromSuspend
 27405 ;;		_USBCtrlTrfSetupHandler
 27406 ;;		_USBCheckStdRequest
 27407 ;;		_USBStdFeatureReqHandler
 27408 ;; This function uses a non-reentrant model
 27409 ;;
 27410                           
 27411                           	psect	text118
 27412  016962                     __ptext118:
 27413                           	opt stack 0
 27414  016962                     _USER_USB_CALLBACK_EVENT_HANDLER:
 27415                           	opt stack 15
 27416                           
 27417                           ;My_usb_cdc.c: 45: switch ((int) event) {
 27418                           
 27419                           ; BSR set to: 13
 27420                           ;incstack = 0
 27421  016962  D006               	goto	i2l6643
 27422  016964                     i2l6637:
 27423                           
 27424                           ;My_usb_cdc.c: 47: CDCInitEP();
 27425  016964  EC30  F0B0         	call	_CDCInitEP	;wreg free
 27426                           
 27427                           ;My_usb_cdc.c: 48: break;
 27428  016968  0012               	return	
 27429  01696A                     i2l6639:
 27430                           
 27431                           ;My_usb_cdc.c: 50: USBCheckCDCRequest();
 27432  01696A  EC94  F0A5         	call	_USBCheckCDCRequest	;wreg free
 27433                           
 27434                           ;My_usb_cdc.c: 52: }
 27435                           
 27436                           ;My_usb_cdc.c: 51: break;
 27437  01696E  0012               	return	
 27438  016970                     i2l6643:
 27439  016970  C039  F03F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 27440  016974  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 27441                           
 27442                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27443                           ; Switch size 1, requested type "space"
 27444                           ; Number of cases is 1, Range of values is 0 to 0
 27445                           ; switch strategies available:
 27446                           ; Name         Instructions Cycles
 27447                           ; simple_byte            4     3 (average)
 27448                           ;	Chosen strategy is simple_byte
 27449  016978  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 27450  01697A  0A00               	xorlw	0	; case 0
 27451  01697C  A4D8               	btfss	status,2,c
 27452  01697E  0012               	return	
 27453                           
 27454                           ; Switch size 1, requested type "space"
 27455                           ; Number of cases is 2, Range of values is 1 to 3
 27456                           ; switch strategies available:
 27457                           ; Name         Instructions Cycles
 27458                           ; simple_byte            7     4 (average)
 27459                           ;	Chosen strategy is simple_byte
 27460  016980  503F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 27461  016982  0A01               	xorlw	1	; case 1
 27462  016984  B4D8               	btfsc	status,2,c
 27463  016986  D7EE               	goto	i2l6637
 27464  016988  0A02               	xorlw	2	; case 3
 27465  01698A  A4D8               	btfss	status,2,c
 27466  01698C  0012               	return	
 27467  01698E  D7ED               	goto	i2l6639
 27468  016990                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 27469                           	opt stack 0
 27470                           pclatu	equ	0xFFB
 27471                           pclath	equ	0xFFA
 27472                           tblptru	equ	0xFF8
 27473                           tblptrh	equ	0xFF7
 27474                           tblptrl	equ	0xFF6
 27475                           tablat	equ	0xFF5
 27476                           prodh	equ	0xFF4
 27477                           prodl	equ	0xFF3
 27478                           intcon	equ	0xFF2
 27479                           intcon2	equ	0xFF1
 27480                           postinc0	equ	0xFEE
 27481                           fsr0h	equ	0xFEA
 27482                           fsr0l	equ	0xFE9
 27483                           wreg	equ	0xFE8
 27484                           indf1	equ	0xFE7
 27485                           postinc1	equ	0xFE6
 27486                           postdec1	equ	0xFE5
 27487                           fsr1h	equ	0xFE2
 27488                           fsr1l	equ	0xFE1
 27489                           indf2	equ	0xFDF
 27490                           postinc2	equ	0xFDE
 27491                           postdec2	equ	0xFDD
 27492                           plusw2	equ	0xFDB
 27493                           fsr2h	equ	0xFDA
 27494                           fsr2l	equ	0xFD9
 27495                           status	equ	0xFD8
 27496                           
 27497 ;; *************** function _USBCheckCDCRequest *****************
 27498 ;; Defined at:
 27499 ;;		line 204 in file "../../../My_library/usb/usb_device_cdc.c"
 27500 ;; Parameters:    Size  Location     Type
 27501 ;;		None
 27502 ;; Auto vars:     Size  Location     Type
 27503 ;;		None
 27504 ;; Return value:  Size  Location     Type
 27505 ;;		None               void
 27506 ;; Registers used:
 27507 ;;		wreg, status,2, status,0
 27508 ;; Tracked objects:
 27509 ;;		On entry : 0/0
 27510 ;;		On exit  : 0/0
 27511 ;;		Unchanged: 0/0
 27512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27517 ;;Total ram usage:        0 bytes
 27518 ;; Hardware stack levels used:    1
 27519 ;; This function calls:
 27520 ;;		Nothing
 27521 ;; This function is called by:
 27522 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27523 ;; This function uses a non-reentrant model
 27524 ;;
 27525                           
 27526                           	psect	text119
 27527  014B28                     __ptext119:
 27528                           	opt stack 0
 27529  014B28                     _USBCheckCDCRequest:
 27530                           	opt stack 17
 27531                           
 27532                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 27533                           
 27534                           ;incstack = 0
 27535  014B28  010D               	movlb	13	; () banked
 27536  014B2A  5130               	movf	48,w,b	;volatile
 27537  014B2C  0B1F               	andlw	31
 27538  014B2E  06E8               	decf	wreg,f,c
 27539  014B30  A4D8               	btfss	status,2,c
 27540  014B32  0012               	return	
 27541                           
 27542                           ; BSR set to: 13
 27543                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 27544                           
 27545                           ; BSR set to: 13
 27546                           
 27547                           ; BSR set to: 13
 27548  014B34  010D               	movlb	13	; () banked
 27549  014B36  3930               	swapf	48,w,b	;volatile
 27550  014B38  32E8               	rrcf	wreg,f,c
 27551  014B3A  0B03               	andlw	3
 27552  014B3C  06E8               	decf	wreg,f,c
 27553  014B3E  A4D8               	btfss	status,2,c
 27554  014B40  0012               	return	
 27555                           
 27556                           ; BSR set to: 13
 27557                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 27558                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 27559                           
 27560                           ; BSR set to: 13
 27561                           
 27562                           ; BSR set to: 13
 27563  014B42  010D               	movlb	13	; () banked
 27564  014B44  5134               	movf	52,w,b	;volatile
 27565  014B46  B4D8               	btfsc	status,2,c
 27566  014B48  D048               	goto	i2l6495
 27567                           
 27568                           ; BSR set to: 13
 27569  014B4A  010D               	movlb	13	; () banked
 27570  014B4C  0534               	decf	52,w,b	;volatile
 27571  014B4E  A4D8               	btfss	status,2,c
 27572  014B50  0012               	return	
 27573  014B52  D043               	goto	i2l6495
 27574  014B54                     i2l6471:
 27575                           
 27576                           ; BSR set to: 13
 27577                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 27578  014B54  0E9A               	movlw	low _dummy_encapsulated_cmd_response
 27579  014B56  0100               	movlb	0	; () banked
 27580  014B58  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27581  014B5A  0E02               	movlw	high _dummy_encapsulated_cmd_response
 27582  014B5C  0100               	movlb	0	; () banked
 27583  014B5E  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27584                           
 27585                           ; BSR set to: 0
 27586                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 27587  014B60  0E00               	movlw	0
 27588  014B62  0100               	movlb	0	; () banked
 27589  014B64  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27590  014B66  0E08               	movlw	8
 27591  014B68  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27592                           
 27593                           ; BSR set to: 0
 27594                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27595  014B6A  0100               	movlb	0	; () banked
 27596  014B6C  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27597                           
 27598                           ; BSR set to: 0
 27599                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 27600  014B6E  0100               	movlb	0	; () banked
 27601  014B70  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27602                           
 27603                           ;usb_device_cdc.c: 232: break;
 27604  014B72  0012               	return	
 27605  014B74                     i2l6479:
 27606                           
 27607                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 27608  014B74  0E9A               	movlw	low _dummy_encapsulated_cmd_response
 27609  014B76  0100               	movlb	0	; () banked
 27610  014B78  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27611  014B7A  0E02               	movlw	high _dummy_encapsulated_cmd_response
 27612  014B7C  0100               	movlb	0	; () banked
 27613  014B7E  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27614                           
 27615                           ; BSR set to: 0
 27616                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 27617  014B80  0100               	movlb	0	; () banked
 27618  014B82  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27619                           
 27620                           ;usb_device_cdc.c: 237: break;
 27621  014B84  0012               	return	
 27622  014B86                     i2l1737:
 27623                           
 27624                           ; BSR set to: 13
 27625                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 27626  014B86  CD36 F0EA          	movff	3382,_outPipes+4	;volatile
 27627  014B8A  CD37 F0EB          	movff	3383,_outPipes+5	;volatile
 27628                           
 27629                           ; BSR set to: 13
 27630                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 27631  014B8E  0E88               	movlw	low _line_coding
 27632  014B90  0100               	movlb	0	; () banked
 27633  014B92  6FE6               	movwf	_outPipes& (0+255),b	;volatile
 27634  014B94  0E01               	movlw	high _line_coding
 27635  014B96  0100               	movlb	0	; () banked
 27636  014B98  6FE7               	movwf	(_outPipes+1)& (0+255),b	;volatile
 27637                           
 27638                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 27639  014B9A  0E00               	movlw	0
 27640  014B9C  0100               	movlb	0	; () banked
 27641  014B9E  6FEC               	movwf	(_outPipes+6)& (0+255),b	;volatile
 27642  014BA0  0E00               	movlw	0
 27643  014BA2  0100               	movlb	0	; () banked
 27644  014BA4  6FED               	movwf	(_outPipes+7)& (0+255),b	;volatile
 27645  014BA6  0E00               	movlw	0
 27646  014BA8  0100               	movlb	0	; () banked
 27647  014BAA  6FEE               	movwf	(_outPipes+8)& (0+255),b	;volatile
 27648                           
 27649                           ; BSR set to: 0
 27650                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 27651  014BAC  0100               	movlb	0	; () banked
 27652  014BAE  8FE9               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 27653                           
 27654                           ;usb_device_cdc.c: 246: break;
 27655  014BB0  0012               	return	
 27656  014BB2                     i2l6487:
 27657                           
 27658                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 27659  014BB2  0E88               	movlw	low _line_coding
 27660  014BB4  0100               	movlb	0	; () banked
 27661  014BB6  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27662  014BB8  0E01               	movlw	high _line_coding
 27663  014BBA  0100               	movlb	0	; () banked
 27664  014BBC  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27665                           
 27666                           ; BSR set to: 0
 27667  014BBE  0E00               	movlw	0
 27668  014BC0  0100               	movlb	0	; () banked
 27669  014BC2  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27670  014BC4  0E07               	movlw	7
 27671  014BC6  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27672                           
 27673                           ; BSR set to: 0
 27674  014BC8  0EC1               	movlw	193
 27675  014BCA  0100               	movlb	0	; () banked
 27676  014BCC  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27677                           
 27678                           ;usb_device_cdc.c: 253: break;
 27679  014BCE  0012               	return	
 27680  014BD0                     i2l1739:
 27681                           
 27682                           ; BSR set to: 13
 27683                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 27684  014BD0  CD32 F125          	movff	3378,_control_signal_bitmap	;volatile
 27685                           
 27686                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 27687  014BD4  0100               	movlb	0	; () banked
 27688  014BD6  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27689                           
 27690                           ; BSR set to: 0
 27691                           ;usb_device_cdc.c: 315: }
 27692                           
 27693                           ; BSR set to: 0
 27694                           ;usb_device_cdc.c: 314: break;
 27695                           
 27696                           ;usb_device_cdc.c: 313: default:
 27697                           
 27698                           ;usb_device_cdc.c: 289: break;
 27699  014BD8  0012               	return	
 27700  014BDA                     i2l6495:
 27701  014BDA  010D               	movlb	13	; () banked
 27702  014BDC  5131               	movf	49,w,b	;volatile
 27703                           
 27704                           ; Switch size 1, requested type "space"
 27705                           ; Number of cases is 5, Range of values is 0 to 34
 27706                           ; switch strategies available:
 27707                           ; Name         Instructions Cycles
 27708                           ; simple_byte           16     9 (average)
 27709                           ;	Chosen strategy is simple_byte
 27710  014BDE  0A00               	xorlw	0	; case 0
 27711  014BE0  B4D8               	btfsc	status,2,c
 27712  014BE2  D7B8               	goto	i2l6471
 27713  014BE4  0A01               	xorlw	1	; case 1
 27714  014BE6  B4D8               	btfsc	status,2,c
 27715  014BE8  D7C5               	goto	i2l6479
 27716  014BEA  0A21               	xorlw	33	; case 32
 27717  014BEC  B4D8               	btfsc	status,2,c
 27718  014BEE  D7CB               	goto	i2l1737
 27719  014BF0  0A01               	xorlw	1	; case 33
 27720  014BF2  B4D8               	btfsc	status,2,c
 27721  014BF4  D7DE               	goto	i2l6487
 27722  014BF6  0A03               	xorlw	3	; case 34
 27723  014BF8  A4D8               	btfss	status,2,c
 27724  014BFA  0012               	return	
 27725  014BFC  D7E9               	goto	i2l1739
 27726  014BFE                     __end_of_USBCheckCDCRequest:
 27727                           	opt stack 0
 27728                           pclatu	equ	0xFFB
 27729                           pclath	equ	0xFFA
 27730                           tblptru	equ	0xFF8
 27731                           tblptrh	equ	0xFF7
 27732                           tblptrl	equ	0xFF6
 27733                           tablat	equ	0xFF5
 27734                           prodh	equ	0xFF4
 27735                           prodl	equ	0xFF3
 27736                           intcon	equ	0xFF2
 27737                           intcon2	equ	0xFF1
 27738                           postinc0	equ	0xFEE
 27739                           fsr0h	equ	0xFEA
 27740                           fsr0l	equ	0xFE9
 27741                           wreg	equ	0xFE8
 27742                           indf1	equ	0xFE7
 27743                           postinc1	equ	0xFE6
 27744                           postdec1	equ	0xFE5
 27745                           fsr1h	equ	0xFE2
 27746                           fsr1l	equ	0xFE1
 27747                           indf2	equ	0xFDF
 27748                           postinc2	equ	0xFDE
 27749                           postdec2	equ	0xFDD
 27750                           plusw2	equ	0xFDB
 27751                           fsr2h	equ	0xFDA
 27752                           fsr2l	equ	0xFD9
 27753                           status	equ	0xFD8
 27754                           
 27755 ;; *************** function _CDCInitEP *****************
 27756 ;; Defined at:
 27757 ;;		line 351 in file "../../../My_library/usb/usb_device_cdc.c"
 27758 ;; Parameters:    Size  Location     Type
 27759 ;;		None
 27760 ;; Auto vars:     Size  Location     Type
 27761 ;;		None
 27762 ;; Return value:  Size  Location     Type
 27763 ;;		None               void
 27764 ;; Registers used:
 27765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27766 ;; Tracked objects:
 27767 ;;		On entry : 0/0
 27768 ;;		On exit  : 0/0
 27769 ;;		Unchanged: 0/0
 27770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27775 ;;Total ram usage:        0 bytes
 27776 ;; Hardware stack levels used:    1
 27777 ;; Hardware stack levels required when called:    2
 27778 ;; This function calls:
 27779 ;;		_USBEnableEndpoint
 27780 ;;		i2_USBTransferOnePacket
 27781 ;; This function is called by:
 27782 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27783 ;; This function uses a non-reentrant model
 27784 ;;
 27785                           
 27786                           	psect	text120
 27787  016060                     __ptext120:
 27788                           	opt stack 0
 27789  016060                     _CDCInitEP:
 27790                           	opt stack 15
 27791                           
 27792                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 27793                           
 27794                           ;incstack = 0
 27795  016060  0E00               	movlw	0
 27796  016062  0101               	movlb	1	; () banked
 27797  016064  6F88               	movwf	_line_coding& (0+255),b
 27798  016066  0E4B               	movlw	75
 27799  016068  6F89               	movwf	(_line_coding+1)& (0+255),b
 27800  01606A  0E00               	movlw	0
 27801  01606C  6F8A               	movwf	(_line_coding+2)& (0+255),b
 27802  01606E  0E00               	movlw	0
 27803  016070  6F8B               	movwf	(_line_coding+3)& (0+255),b
 27804                           
 27805                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 27806  016072  0E00               	movlw	0
 27807  016074  0101               	movlb	1	; () banked
 27808  016076  6F8C               	movwf	(_line_coding+4)& (0+255),b
 27809                           
 27810                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 27811  016078  0E00               	movlw	0
 27812  01607A  0101               	movlb	1	; () banked
 27813  01607C  6F8D               	movwf	(_line_coding+5)& (0+255),b
 27814                           
 27815                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 27816  01607E  0E08               	movlw	8
 27817  016080  0101               	movlb	1	; () banked
 27818  016082  6F8E               	movwf	(_line_coding+6)& (0+255),b
 27819                           
 27820                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 27821  016084  0E00               	movlw	0
 27822  016086  0100               	movlb	0	; () banked
 27823  016088  6FFB               	movwf	_cdc_rx_len& (0+255),b
 27824                           
 27825                           ; BSR set to: 0
 27826                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 27827  01608A  0E1A               	movlw	26
 27828  01608C  6E35               	movwf	USBEnableEndpoint@options,c
 27829  01608E  0E01               	movlw	1
 27830  016090  EC59  F0B3         	call	_USBEnableEndpoint
 27831                           
 27832                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 27833  016094  0E1E               	movlw	30
 27834  016096  6E35               	movwf	USBEnableEndpoint@options,c
 27835  016098  0E02               	movlw	2
 27836  01609A  EC59  F0B3         	call	_USBEnableEndpoint
 27837                           
 27838                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 27839  01609E  0E00               	movlw	0
 27840  0160A0  6E2D               	movwf	i2USBTransferOnePacket@dir,c
 27841  0160A2  0E64               	movlw	low _cdc_data_rx
 27842  0160A4  6E2E               	movwf	i2USBTransferOnePacket@data,c
 27843  0160A6  0E03               	movlw	high _cdc_data_rx
 27844  0160A8  6E2F               	movwf	i2USBTransferOnePacket@data+1,c
 27845  0160AA  0E40               	movlw	64
 27846  0160AC  6E30               	movwf	i2USBTransferOnePacket@len,c
 27847  0160AE  0E02               	movlw	2
 27848  0160B0  ECA2  F0AA         	call	i2_USBTransferOnePacket
 27849  0160B4  C02D  F007         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 27850  0160B8  C02E  F008         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 27851                           
 27852                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 27853  0160BC  0E00               	movlw	0
 27854  0160BE  0101               	movlb	1	; () banked
 27855  0160C0  6F18               	movwf	_CDCDataInHandle& (0+255),b
 27856  0160C2  0E00               	movlw	0
 27857  0160C4  0101               	movlb	1	; () banked
 27858  0160C6  6F19               	movwf	(_CDCDataInHandle+1)& (0+255),b
 27859                           
 27860                           ; BSR set to: 1
 27861                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 27862  0160C8  0E00               	movlw	0
 27863  0160CA  0100               	movlb	0	; () banked
 27864  0160CC  6FFC               	movwf	_cdc_trf_state& (0+255),b
 27865                           
 27866                           ; BSR set to: 0
 27867  0160CE  0012               	return		;funcret
 27868  0160D0                     __end_of_CDCInitEP:
 27869                           	opt stack 0
 27870                           pclatu	equ	0xFFB
 27871                           pclath	equ	0xFFA
 27872                           tblptru	equ	0xFF8
 27873                           tblptrh	equ	0xFF7
 27874                           tblptrl	equ	0xFF6
 27875                           tablat	equ	0xFF5
 27876                           prodh	equ	0xFF4
 27877                           prodl	equ	0xFF3
 27878                           intcon	equ	0xFF2
 27879                           intcon2	equ	0xFF1
 27880                           postinc0	equ	0xFEE
 27881                           fsr0h	equ	0xFEA
 27882                           fsr0l	equ	0xFE9
 27883                           wreg	equ	0xFE8
 27884                           indf1	equ	0xFE7
 27885                           postinc1	equ	0xFE6
 27886                           postdec1	equ	0xFE5
 27887                           fsr1h	equ	0xFE2
 27888                           fsr1l	equ	0xFE1
 27889                           indf2	equ	0xFDF
 27890                           postinc2	equ	0xFDE
 27891                           postdec2	equ	0xFDD
 27892                           plusw2	equ	0xFDB
 27893                           fsr2h	equ	0xFDA
 27894                           fsr2l	equ	0xFD9
 27895                           status	equ	0xFD8
 27896                           
 27897 ;; *************** function i2_USBTransferOnePacket *****************
 27898 ;; Defined at:
 27899 ;;		line 995 in file "../../../My_library/usb/usb_device.c"
 27900 ;; Parameters:    Size  Location     Type
 27901 ;;  ep              1    wreg     unsigned char 
 27902 ;;  dir             1    0[COMRAM] unsigned char 
 27903 ;;  data            2    1[COMRAM] PTR unsigned char 
 27904 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 27905 ;;  len             1    3[COMRAM] unsigned char 
 27906 ;; Auto vars:     Size  Location     Type
 27907 ;;  ep              1    4[COMRAM] unsigned char 
 27908 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 27909 ;;		 -> NULL(0), BDT(48), 
 27910 ;; Return value:  Size  Location     Type
 27911 ;;                  2    0[COMRAM] PTR void 
 27912 ;; Registers used:
 27913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27914 ;; Tracked objects:
 27915 ;;		On entry : 0/0
 27916 ;;		On exit  : 0/0
 27917 ;;		Unchanged: 0/0
 27918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27919 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27920 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27922 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27923 ;;Total ram usage:        7 bytes
 27924 ;; Hardware stack levels used:    1
 27925 ;; This function calls:
 27926 ;;		Nothing
 27927 ;; This function is called by:
 27928 ;;		_CDCInitEP
 27929 ;; This function uses a non-reentrant model
 27930 ;;
 27931                           
 27932                           	psect	text121
 27933  015544                     __ptext121:
 27934                           	opt stack 0
 27935  015544                     i2_USBTransferOnePacket:
 27936                           	opt stack 16
 27937                           
 27938                           ; BSR set to: 0
 27939                           ;incstack = 0
 27940                           ;i2USBTransferOnePacket@ep stored from wreg
 27941  015544  6E31               	movwf	i2USBTransferOnePacket@ep,c
 27942                           
 27943                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 27944                           ;usb_device.c: 1000: if(dir != 0)
 27945  015546  502D               	movf	i2USBTransferOnePacket@dir,w,c
 27946  015548  B4D8               	btfsc	status,2,c
 27947  01554A  D007               	goto	i2l6391
 27948                           
 27949                           ;usb_device.c: 1001: {
 27950                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 27951  01554C  5031               	movf	i2USBTransferOnePacket@ep,w,c
 27952  01554E  0D02               	mullw	2
 27953  015550  0EF5               	movlw	low _pBDTEntryIn
 27954  015552  24F3               	addwf	prodl,w,c
 27955  015554  6ED9               	movwf	fsr2l,c
 27956  015556  0E00               	movlw	high _pBDTEntryIn
 27957  015558  D006               	goto	L14
 27958  01555A                     i2l6391:
 27959                           
 27960                           ;usb_device.c: 1005: else
 27961                           ;usb_device.c: 1006: {
 27962                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 27963  01555A  5031               	movf	i2USBTransferOnePacket@ep,w,c
 27964  01555C  0D02               	mullw	2
 27965  01555E  0E00               	movlw	low _pBDTEntryOut
 27966  015560  24F3               	addwf	prodl,w,c
 27967  015562  6ED9               	movwf	fsr2l,c
 27968  015564  0E01               	movlw	high _pBDTEntryOut
 27969  015566                     L14:
 27970  015566  20F4               	addwfc	prodh,w,c
 27971  015568  6EDA               	movwf	fsr2h,c
 27972  01556A  CFDE F032          	movff	postinc2,i2USBTransferOnePacket@handle
 27973  01556E  CFDD F033          	movff	postdec2,i2USBTransferOnePacket@handle+1
 27974                           
 27975                           ;usb_device.c: 1009: }
 27976                           ;usb_device.c: 1013: if(handle == 0)
 27977  015572  5032               	movf	i2USBTransferOnePacket@handle,w,c
 27978  015574  1033               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 27979  015576  A4D8               	btfss	status,2,c
 27980  015578  D005               	goto	i2l6399
 27981                           
 27982                           ;usb_device.c: 1014: {
 27983                           ;usb_device.c: 1015: return 0;
 27984  01557A  0E00               	movlw	0
 27985  01557C  6E2D               	movwf	?i2_USBTransferOnePacket,c
 27986  01557E  0E00               	movlw	0
 27987  015580  6E2E               	movwf	?i2_USBTransferOnePacket+1,c
 27988  015582  0012               	return	
 27989  015584                     i2l6399:
 27990                           
 27991                           ;usb_device.c: 1016: }
 27992                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 27993  015584  EE20 F002          	lfsr	2,2
 27994  015588  5032               	movf	i2USBTransferOnePacket@handle,w,c
 27995  01558A  26D9               	addwf	fsr2l,f,c
 27996  01558C  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 27997  01558E  22DA               	addwfc	fsr2h,f,c
 27998  015590  C02E  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 27999  015594  C02F  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 28000                           
 28001                           ;usb_device.c: 1030: handle->CNT = len;
 28002  015598  EE20 F001          	lfsr	2,1
 28003  01559C  5032               	movf	i2USBTransferOnePacket@handle,w,c
 28004  01559E  26D9               	addwf	fsr2l,f,c
 28005  0155A0  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 28006  0155A2  22DA               	addwfc	fsr2h,f,c
 28007  0155A4  C030  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 28008                           
 28009                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 28010  0155A8  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28011  0155AC  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28012  0155B0  0E40               	movlw	64
 28013  0155B2  16DF               	andwf	indf2,f,c
 28014                           
 28015                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 28016  0155B4  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28017  0155B8  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28018  0155BC  0E00               	movlw	0
 28019  0155BE  86DB               	bsf	plusw2,3,c
 28020                           
 28021                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 28022  0155C0  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28023  0155C4  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28024  0155C8  0E00               	movlw	0
 28025  0155CA  8EDB               	bsf	plusw2,7,c
 28026                           
 28027                           ;usb_device.c: 1036: if(dir != 0)
 28028  0155CC  502D               	movf	i2USBTransferOnePacket@dir,w,c
 28029  0155CE  B4D8               	btfsc	status,2,c
 28030  0155D0  D007               	goto	i2l6411
 28031                           
 28032                           ;usb_device.c: 1037: {
 28033                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 28034  0155D2  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28035  0155D4  0D02               	mullw	2
 28036  0155D6  0EF5               	movlw	low _pBDTEntryIn
 28037  0155D8  24F3               	addwf	prodl,w,c
 28038  0155DA  6ED9               	movwf	fsr2l,c
 28039  0155DC  0E00               	movlw	high _pBDTEntryIn
 28040  0155DE  D006               	goto	L15
 28041  0155E0                     i2l6411:
 28042                           
 28043                           ;usb_device.c: 1041: else
 28044                           ;usb_device.c: 1042: {
 28045                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 28046  0155E0  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28047  0155E2  0D02               	mullw	2
 28048  0155E4  0E00               	movlw	low _pBDTEntryOut
 28049  0155E6  24F3               	addwf	prodl,w,c
 28050  0155E8  6ED9               	movwf	fsr2l,c
 28051  0155EA  0E01               	movlw	high _pBDTEntryOut
 28052  0155EC                     L15:
 28053  0155EC  20F4               	addwfc	prodh,w,c
 28054  0155EE  6EDA               	movwf	fsr2h,c
 28055  0155F0  0E04               	movlw	4
 28056  0155F2  1ADF               	xorwf	indf2,f,c
 28057                           
 28058                           ;usb_device.c: 1045: }
 28059                           ;usb_device.c: 1046: return (void*)handle;
 28060  0155F4  C032  F02D         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 28061  0155F8  C033  F02E         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 28062  0155FC  0012               	return	
 28063  0155FE                     __end_ofi2_USBTransferOnePacket:
 28064                           	opt stack 0
 28065                           pclatu	equ	0xFFB
 28066                           pclath	equ	0xFFA
 28067                           tblptru	equ	0xFF8
 28068                           tblptrh	equ	0xFF7
 28069                           tblptrl	equ	0xFF6
 28070                           tablat	equ	0xFF5
 28071                           prodh	equ	0xFF4
 28072                           prodl	equ	0xFF3
 28073                           intcon	equ	0xFF2
 28074                           intcon2	equ	0xFF1
 28075                           postinc0	equ	0xFEE
 28076                           fsr0h	equ	0xFEA
 28077                           fsr0l	equ	0xFE9
 28078                           wreg	equ	0xFE8
 28079                           indf1	equ	0xFE7
 28080                           postinc1	equ	0xFE6
 28081                           postdec1	equ	0xFE5
 28082                           fsr1h	equ	0xFE2
 28083                           fsr1l	equ	0xFE1
 28084                           indf2	equ	0xFDF
 28085                           postinc2	equ	0xFDE
 28086                           postdec2	equ	0xFDD
 28087                           plusw2	equ	0xFDB
 28088                           fsr2h	equ	0xFDA
 28089                           fsr2l	equ	0xFD9
 28090                           status	equ	0xFD8
 28091                           
 28092 ;; *************** function _USBEnableEndpoint *****************
 28093 ;; Defined at:
 28094 ;;		line 878 in file "../../../My_library/usb/usb_device.c"
 28095 ;; Parameters:    Size  Location     Type
 28096 ;;  ep              1    wreg     unsigned char 
 28097 ;;  options         1    8[COMRAM] unsigned char 
 28098 ;; Auto vars:     Size  Location     Type
 28099 ;;  ep              1   11[COMRAM] unsigned char 
 28100 ;;  p               2    9[COMRAM] PTR unsigned char 
 28101 ;;		 -> UEP0(1), 
 28102 ;; Return value:  Size  Location     Type
 28103 ;;		None               void
 28104 ;; Registers used:
 28105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28106 ;; Tracked objects:
 28107 ;;		On entry : 0/0
 28108 ;;		On exit  : 0/0
 28109 ;;		Unchanged: 0/0
 28110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28111 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28112 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28114 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28115 ;;Total ram usage:        4 bytes
 28116 ;; Hardware stack levels used:    1
 28117 ;; Hardware stack levels required when called:    1
 28118 ;; This function calls:
 28119 ;;		_USBConfigureEndpoint
 28120 ;; This function is called by:
 28121 ;;		_CDCInitEP
 28122 ;; This function uses a non-reentrant model
 28123 ;;
 28124                           
 28125                           	psect	text122
 28126  0166B2                     __ptext122:
 28127                           	opt stack 0
 28128  0166B2                     _USBEnableEndpoint:
 28129                           	opt stack 15
 28130                           
 28131                           ;incstack = 0
 28132                           ;USBEnableEndpoint@ep stored from wreg
 28133  0166B2  6E38               	movwf	USBEnableEndpoint@ep,c
 28134                           
 28135                           ;usb_device.c: 880: unsigned char* p;
 28136                           ;usb_device.c: 884: if(options & 0x04)
 28137  0166B4  A435               	btfss	USBEnableEndpoint@options,2,c
 28138  0166B6  D005               	goto	i2l6343
 28139                           
 28140                           ;usb_device.c: 885: {
 28141                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 28142  0166B8  0E00               	movlw	0
 28143  0166BA  6E2D               	movwf	USBConfigureEndpoint@direction,c
 28144  0166BC  5038               	movf	USBEnableEndpoint@ep,w,c
 28145  0166BE  EC96  F0AC         	call	_USBConfigureEndpoint
 28146  0166C2                     i2l6343:
 28147                           
 28148                           ;usb_device.c: 887: }
 28149                           ;usb_device.c: 888: if(options & 0x02)
 28150  0166C2  A235               	btfss	USBEnableEndpoint@options,1,c
 28151  0166C4  D005               	goto	i2l6347
 28152                           
 28153                           ;usb_device.c: 889: {
 28154                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 28155  0166C6  0E01               	movlw	1
 28156  0166C8  6E2D               	movwf	USBConfigureEndpoint@direction,c
 28157  0166CA  5038               	movf	USBEnableEndpoint@ep,w,c
 28158  0166CC  EC96  F0AC         	call	_USBConfigureEndpoint
 28159  0166D0                     i2l6347:
 28160                           
 28161                           ;usb_device.c: 891: }
 28162                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 28163  0166D0  5038               	movf	USBEnableEndpoint@ep,w,c
 28164  0166D2  0D01               	mullw	1
 28165  0166D4  0E26               	movlw	38
 28166  0166D6  24F3               	addwf	prodl,w,c
 28167  0166D8  6E36               	movwf	USBEnableEndpoint@p,c
 28168  0166DA  0E0F               	movlw	15
 28169  0166DC  20F4               	addwfc	prodh,w,c
 28170  0166DE  6E37               	movwf	USBEnableEndpoint@p+1,c
 28171                           
 28172                           ;usb_device.c: 901: *p = options;
 28173  0166E0  C036  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 28174  0166E4  C037  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 28175  0166E8  C035  FFDF         	movff	USBEnableEndpoint@options,indf2
 28176  0166EC  0012               	return		;funcret
 28177  0166EE                     __end_of_USBEnableEndpoint:
 28178                           	opt stack 0
 28179                           pclatu	equ	0xFFB
 28180                           pclath	equ	0xFFA
 28181                           tblptru	equ	0xFF8
 28182                           tblptrh	equ	0xFF7
 28183                           tblptrl	equ	0xFF6
 28184                           tablat	equ	0xFF5
 28185                           prodh	equ	0xFF4
 28186                           prodl	equ	0xFF3
 28187                           intcon	equ	0xFF2
 28188                           intcon2	equ	0xFF1
 28189                           postinc0	equ	0xFEE
 28190                           fsr0h	equ	0xFEA
 28191                           fsr0l	equ	0xFE9
 28192                           wreg	equ	0xFE8
 28193                           indf1	equ	0xFE7
 28194                           postinc1	equ	0xFE6
 28195                           postdec1	equ	0xFE5
 28196                           fsr1h	equ	0xFE2
 28197                           fsr1l	equ	0xFE1
 28198                           indf2	equ	0xFDF
 28199                           postinc2	equ	0xFDE
 28200                           postdec2	equ	0xFDD
 28201                           plusw2	equ	0xFDB
 28202                           fsr2h	equ	0xFDA
 28203                           fsr2l	equ	0xFD9
 28204                           status	equ	0xFD8
 28205                           
 28206 ;; *************** function _USBConfigureEndpoint *****************
 28207 ;; Defined at:
 28208 ;;		line 1543 in file "../../../My_library/usb/usb_device.c"
 28209 ;; Parameters:    Size  Location     Type
 28210 ;;  EPNum           1    wreg     unsigned char 
 28211 ;;  direction       1    0[COMRAM] unsigned char 
 28212 ;; Auto vars:     Size  Location     Type
 28213 ;;  EPNum           1    5[COMRAM] unsigned char 
 28214 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 28215 ;;		 -> BDT(48), 
 28216 ;; Return value:  Size  Location     Type
 28217 ;;		None               void
 28218 ;; Registers used:
 28219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28220 ;; Tracked objects:
 28221 ;;		On entry : 0/0
 28222 ;;		On exit  : 0/0
 28223 ;;		Unchanged: 0/0
 28224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28225 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28226 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28227 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28228 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28229 ;;Total ram usage:        8 bytes
 28230 ;; Hardware stack levels used:    1
 28231 ;; This function calls:
 28232 ;;		Nothing
 28233 ;; This function is called by:
 28234 ;;		_USBEnableEndpoint
 28235 ;; This function uses a non-reentrant model
 28236 ;;
 28237                           
 28238                           	psect	text123
 28239  01592C                     __ptext123:
 28240                           	opt stack 0
 28241  01592C                     _USBConfigureEndpoint:
 28242                           	opt stack 15
 28243                           
 28244                           ;incstack = 0
 28245                           ;USBConfigureEndpoint@EPNum stored from wreg
 28246  01592C  6E32               	movwf	USBConfigureEndpoint@EPNum,c
 28247                           
 28248                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 28249                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 28250  01592E  0E00               	movlw	0
 28251  015930  6E33               	movwf	USBConfigureEndpoint@handle,c
 28252  015932  0E0D               	movlw	13
 28253  015934  6E34               	movwf	USBConfigureEndpoint@handle+1,c
 28254                           
 28255                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 28256  015936  502D               	movf	USBConfigureEndpoint@direction,w,c
 28257  015938  6E2E               	movwf	??_USBConfigureEndpoint& (0+255),c
 28258  01593A  6A2F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 28259  01593C  90D8               	bcf	status,0,c
 28260  01593E  362E               	rlcf	??_USBConfigureEndpoint,f,c
 28261  015940  362F               	rlcf	??_USBConfigureEndpoint+1,f,c
 28262  015942  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28263  015944  6E30               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 28264  015946  6A31               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 28265  015948  90D8               	bcf	status,0,c
 28266  01594A  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28267  01594C  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28268  01594E  90D8               	bcf	status,0,c
 28269  015950  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28270  015952  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28271  015954  502E               	movf	??_USBConfigureEndpoint,w,c
 28272  015956  2630               	addwf	??_USBConfigureEndpoint+2,f,c
 28273  015958  502F               	movf	??_USBConfigureEndpoint+1,w,c
 28274  01595A  2231               	addwfc	??_USBConfigureEndpoint+3,f,c
 28275  01595C  90D8               	bcf	status,0,c
 28276  01595E  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28277  015960  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28278  015962  90D8               	bcf	status,0,c
 28279  015964  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28280  015966  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28281  015968  5030               	movf	??_USBConfigureEndpoint+2,w,c
 28282  01596A  2633               	addwf	USBConfigureEndpoint@handle,f,c
 28283  01596C  5031               	movf	??_USBConfigureEndpoint+3,w,c
 28284  01596E  2234               	addwfc	USBConfigureEndpoint@handle+1,f,c
 28285                           
 28286                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 28287  015970  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28288  015974  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28289  015978  9EDF               	bcf	indf2,7,c
 28290                           
 28291                           ;usb_device.c: 1557: if(direction == 0)
 28292  01597A  502D               	movf	USBConfigureEndpoint@direction,w,c
 28293  01597C  A4D8               	btfss	status,2,c
 28294  01597E  D007               	goto	i2l6333
 28295                           
 28296                           ;usb_device.c: 1558: {
 28297                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 28298  015980  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28299  015982  0D02               	mullw	2
 28300  015984  0E00               	movlw	low _pBDTEntryOut
 28301  015986  24F3               	addwf	prodl,w,c
 28302  015988  6ED9               	movwf	fsr2l,c
 28303  01598A  0E01               	movlw	high _pBDTEntryOut
 28304  01598C  D006               	goto	L16
 28305  01598E                     i2l6333:
 28306                           
 28307                           ;usb_device.c: 1561: else
 28308                           ;usb_device.c: 1562: {
 28309                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 28310  01598E  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28311  015990  0D02               	mullw	2
 28312  015992  0EF5               	movlw	low _pBDTEntryIn
 28313  015994  24F3               	addwf	prodl,w,c
 28314  015996  6ED9               	movwf	fsr2l,c
 28315  015998  0E00               	movlw	high _pBDTEntryIn
 28316  01599A                     L16:
 28317  01599A  20F4               	addwfc	prodh,w,c
 28318  01599C  6EDA               	movwf	fsr2h,c
 28319  01599E  C033  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 28320  0159A2  C034  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 28321                           
 28322                           ;usb_device.c: 1564: }
 28323                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 28324  0159A6  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28325  0159AA  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28326  0159AE  9CDF               	bcf	indf2,6,c
 28327                           
 28328                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 28329  0159B0  EE20 F004          	lfsr	2,4
 28330  0159B4  5033               	movf	USBConfigureEndpoint@handle,w,c
 28331  0159B6  26D9               	addwf	fsr2l,f,c
 28332  0159B8  5034               	movf	USBConfigureEndpoint@handle+1,w,c
 28333  0159BA  22DA               	addwfc	fsr2h,f,c
 28334  0159BC  8CDF               	bsf	indf2,6,c
 28335  0159BE  0012               	return		;funcret
 28336  0159C0                     __end_of_USBConfigureEndpoint:
 28337                           	opt stack 0
 28338                           pclatu	equ	0xFFB
 28339                           pclath	equ	0xFFA
 28340                           tblptru	equ	0xFF8
 28341                           tblptrh	equ	0xFF7
 28342                           tblptrl	equ	0xFF6
 28343                           tablat	equ	0xFF5
 28344                           prodh	equ	0xFF4
 28345                           prodl	equ	0xFF3
 28346                           intcon	equ	0xFF2
 28347                           intcon2	equ	0xFF1
 28348                           postinc0	equ	0xFEE
 28349                           fsr0h	equ	0xFEA
 28350                           fsr0l	equ	0xFE9
 28351                           wreg	equ	0xFE8
 28352                           indf1	equ	0xFE7
 28353                           postinc1	equ	0xFE6
 28354                           postdec1	equ	0xFE5
 28355                           fsr1h	equ	0xFE2
 28356                           fsr1l	equ	0xFE1
 28357                           indf2	equ	0xFDF
 28358                           postinc2	equ	0xFDE
 28359                           postdec2	equ	0xFDD
 28360                           plusw2	equ	0xFDB
 28361                           fsr2h	equ	0xFDA
 28362                           fsr2l	equ	0xFD9
 28363                           status	equ	0xFD8
 28364                           
 28365 ;; *************** function _USBCtrlTrfOutHandler *****************
 28366 ;; Defined at:
 28367 ;;		line 2541 in file "../../../My_library/usb/usb_device.c"
 28368 ;; Parameters:    Size  Location     Type
 28369 ;;		None
 28370 ;; Auto vars:     Size  Location     Type
 28371 ;;		None
 28372 ;; Return value:  Size  Location     Type
 28373 ;;		None               void
 28374 ;; Registers used:
 28375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28376 ;; Tracked objects:
 28377 ;;		On entry : 0/0
 28378 ;;		On exit  : 0/0
 28379 ;;		Unchanged: 0/0
 28380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28385 ;;Total ram usage:        0 bytes
 28386 ;; Hardware stack levels used:    1
 28387 ;; Hardware stack levels required when called:    2
 28388 ;; This function calls:
 28389 ;;		_USBCtrlTrfRxService
 28390 ;; This function is called by:
 28391 ;;		_USBCtrlEPService
 28392 ;; This function uses a non-reentrant model
 28393 ;;
 28394                           
 28395                           	psect	text124
 28396  01644E                     __ptext124:
 28397                           	opt stack 0
 28398  01644E                     _USBCtrlTrfOutHandler:
 28399                           	opt stack 15
 28400                           
 28401                           ;usb_device.c: 2543: if(controlTransferState == 2)
 28402                           
 28403                           ;incstack = 0
 28404  01644E  0E02               	movlw	2
 28405  016450  1818               	xorwf	_controlTransferState,w,c	;volatile
 28406  016452  A4D8               	btfss	status,2,c
 28407  016454  D003               	goto	i2l7779
 28408                           
 28409                           ;usb_device.c: 2544: {
 28410                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 28411  016456  ECB1  F09D         	call	_USBCtrlTrfRxService	;wreg free
 28412                           
 28413                           ;usb_device.c: 2546: }
 28414  01645A  0012               	return	
 28415  01645C                     i2l7779:
 28416                           
 28417                           ;usb_device.c: 2547: else
 28418                           ;usb_device.c: 2548: {
 28419                           ;usb_device.c: 2551: controlTransferState = 0;
 28420  01645C  0E00               	movlw	0
 28421  01645E  6E18               	movwf	_controlTransferState,c	;volatile
 28422                           
 28423                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 28424  016460  500F               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 28425  016462  A4D8               	btfss	status,2,c
 28426  016464  D01F               	goto	i2l7787
 28427                           
 28428                           ;usb_device.c: 2559: {
 28429                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 28430  016466  EE20 F001          	lfsr	2,1
 28431  01646A  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28432  01646C  26D9               	addwf	fsr2l,f,c
 28433  01646E  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28434  016470  22DA               	addwfc	fsr2h,f,c
 28435  016472  0E08               	movlw	8
 28436  016474  6EDF               	movwf	indf2,c
 28437                           
 28438                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28439  016476  EE20 F002          	lfsr	2,2
 28440  01647A  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28441  01647C  26D9               	addwf	fsr2l,f,c
 28442  01647E  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28443  016480  22DA               	addwfc	fsr2h,f,c
 28444  016482  0E30               	movlw	48
 28445  016484  6EDE               	movwf	postinc2,c
 28446  016486  0E0D               	movlw	13
 28447  016488  6EDD               	movwf	postdec2,c
 28448                           
 28449                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 28450  01648A  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28451  01648E  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28452  016492  0E0C               	movlw	12
 28453  016494  6EDF               	movwf	indf2,c
 28454                           
 28455                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28456  016496  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28457  01649A  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28458  01649E  0E00               	movlw	0
 28459  0164A0  8EDB               	bsf	plusw2,7,c
 28460                           
 28461                           ;usb_device.c: 2564: }
 28462  0164A2  0012               	return	
 28463  0164A4                     i2l7787:
 28464                           
 28465                           ;usb_device.c: 2565: else
 28466                           ;usb_device.c: 2566: {
 28467                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 28468  0164A4  0E00               	movlw	0
 28469  0164A6  6E0F               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 28470  0164A8  0012               	return	
 28471  0164AA                     __end_of_USBCtrlTrfOutHandler:
 28472                           	opt stack 0
 28473                           pclatu	equ	0xFFB
 28474                           pclath	equ	0xFFA
 28475                           tblptru	equ	0xFF8
 28476                           tblptrh	equ	0xFF7
 28477                           tblptrl	equ	0xFF6
 28478                           tablat	equ	0xFF5
 28479                           prodh	equ	0xFF4
 28480                           prodl	equ	0xFF3
 28481                           intcon	equ	0xFF2
 28482                           intcon2	equ	0xFF1
 28483                           postinc0	equ	0xFEE
 28484                           fsr0h	equ	0xFEA
 28485                           fsr0l	equ	0xFE9
 28486                           wreg	equ	0xFE8
 28487                           indf1	equ	0xFE7
 28488                           postinc1	equ	0xFE6
 28489                           postdec1	equ	0xFE5
 28490                           fsr1h	equ	0xFE2
 28491                           fsr1l	equ	0xFE1
 28492                           indf2	equ	0xFDF
 28493                           postinc2	equ	0xFDE
 28494                           postdec2	equ	0xFDD
 28495                           plusw2	equ	0xFDB
 28496                           fsr2h	equ	0xFDA
 28497                           fsr2l	equ	0xFD9
 28498                           status	equ	0xFD8
 28499                           
 28500 ;; *************** function _USBCtrlTrfRxService *****************
 28501 ;; Defined at:
 28502 ;;		line 1852 in file "../../../My_library/usb/usb_device.c"
 28503 ;; Parameters:    Size  Location     Type
 28504 ;;		None
 28505 ;; Auto vars:     Size  Location     Type
 28506 ;;  byteToRead      1    1[COMRAM] unsigned char 
 28507 ;;  i               1    0[COMRAM] unsigned char 
 28508 ;; Return value:  Size  Location     Type
 28509 ;;		None               void
 28510 ;; Registers used:
 28511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28512 ;; Tracked objects:
 28513 ;;		On entry : 0/0
 28514 ;;		On exit  : 0/0
 28515 ;;		Unchanged: 0/0
 28516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28518 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28520 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28521 ;;Total ram usage:        2 bytes
 28522 ;; Hardware stack levels used:    1
 28523 ;; Hardware stack levels required when called:    1
 28524 ;; This function calls:
 28525 ;;		_USBCtrlEPAllowStatusStage
 28526 ;; This function is called by:
 28527 ;;		_USBCtrlTrfOutHandler
 28528 ;; This function uses a non-reentrant model
 28529 ;;
 28530                           
 28531                           	psect	text125
 28532  013B62                     __ptext125:
 28533                           	opt stack 0
 28534  013B62                     _USBCtrlTrfRxService:
 28535                           	opt stack 15
 28536                           
 28537                           ;usb_device.c: 1854: uint8_t byteToRead;
 28538                           ;usb_device.c: 1855: uint8_t i;
 28539                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 28540                           
 28541                           ;incstack = 0
 28542  013B62  EE20 F001          	lfsr	2,1
 28543  013B66  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 28544  013B68  26D9               	addwf	fsr2l,f,c
 28545  013B6A  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28546  013B6C  22DA               	addwfc	fsr2h,f,c
 28547  013B6E  50DF               	movf	indf2,w,c
 28548  013B70  6E2E               	movwf	USBCtrlTrfRxService@byteToRead,c
 28549                           
 28550                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 28551  013B72  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 28552  013B74  0100               	movlb	0	; () banked
 28553  013B76  5DEA               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 28554  013B78  0E00               	movlw	0
 28555  013B7A  59EB               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 28556  013B7C  A0D8               	btfss	status,0,c
 28557                           
 28558                           ; BSR set to: 0
 28559                           ;usb_device.c: 1866: {
 28560                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 28561  013B7E  C0EA  F02E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 28562                           
 28563                           ; BSR set to: 0
 28564                           ;usb_device.c: 1868: }
 28565                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 28566                           
 28567                           ; BSR set to: 0
 28568  013B82  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 28569  013B84  0100               	movlb	0	; () banked
 28570  013B86  5FEA               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 28571  013B88  0E00               	movlw	0
 28572  013B8A  5BEB               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 28573                           
 28574                           ; BSR set to: 0
 28575                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 28576  013B8C  0E00               	movlw	0
 28577  013B8E  6E2D               	movwf	USBCtrlTrfRxService@i,c
 28578  013B90  D012               	goto	i2l7343
 28579  013B92                     i2l7337:
 28580                           
 28581                           ; BSR set to: 0
 28582                           ;usb_device.c: 1875: {
 28583                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 28584  013B92  502D               	movf	USBCtrlTrfRxService@i,w,c
 28585  013B94  0D01               	mullw	1
 28586  013B96  0E38               	movlw	56
 28587  013B98  24F3               	addwf	prodl,w,c
 28588  013B9A  6ED9               	movwf	fsr2l,c
 28589  013B9C  0E0D               	movlw	13
 28590  013B9E  20F4               	addwfc	prodh,w,c
 28591  013BA0  6EDA               	movwf	fsr2h,c
 28592  013BA2  C0E6  FFE1         	movff	_outPipes,fsr1l	;volatile
 28593  013BA6  C0E7  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 28594  013BAA  CFDF FFE7          	movff	indf2,indf1
 28595                           
 28596                           ; BSR set to: 0
 28597  013BAE  0100               	movlb	0	; () banked
 28598  013BB0  4BE6               	infsnz	_outPipes& (0+255),f,b	;volatile
 28599  013BB2  2BE7               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 28600                           
 28601                           ; BSR set to: 0
 28602  013BB4  2A2D               	incf	USBCtrlTrfRxService@i,f,c
 28603  013BB6                     i2l7343:
 28604                           
 28605                           ; BSR set to: 0
 28606  013BB6  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 28607  013BB8  5C2D               	subwf	USBCtrlTrfRxService@i,w,c
 28608  013BBA  A0D8               	btfss	status,0,c
 28609  013BBC  D7EA               	goto	i2l7337
 28610                           
 28611                           ; BSR set to: 0
 28612                           ;usb_device.c: 1877: }
 28613                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 28614                           
 28615                           ; BSR set to: 0
 28616  013BBE  0100               	movlb	0	; () banked
 28617  013BC0  51EA               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 28618  013BC2  0100               	movlb	0	; () banked
 28619  013BC4  11EB               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 28620  013BC6  B4D8               	btfsc	status,2,c
 28621  013BC8  D032               	goto	i2l7359
 28622                           
 28623                           ; BSR set to: 0
 28624                           ;usb_device.c: 1882: {
 28625                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 28626  013BCA  EE20 F001          	lfsr	2,1
 28627  013BCE  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28628  013BD0  26D9               	addwf	fsr2l,f,c
 28629  013BD2  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28630  013BD4  22DA               	addwfc	fsr2h,f,c
 28631  013BD6  0E08               	movlw	8
 28632  013BD8  6EDF               	movwf	indf2,c
 28633                           
 28634                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 28635  013BDA  EE20 F002          	lfsr	2,2
 28636  013BDE  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28637  013BE0  26D9               	addwf	fsr2l,f,c
 28638  013BE2  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28639  013BE4  22DA               	addwfc	fsr2h,f,c
 28640  013BE6  0E38               	movlw	56
 28641  013BE8  6EDE               	movwf	postinc2,c
 28642  013BEA  0E0D               	movlw	13
 28643  013BEC  6EDD               	movwf	postdec2,c
 28644                           
 28645                           ; BSR set to: 0
 28646                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 28647  013BEE  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28648  013BF2  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28649  013BF6  BCDF               	btfsc	indf2,6,c
 28650  013BF8  D00D               	goto	i2l7355
 28651                           
 28652                           ; BSR set to: 0
 28653                           ;usb_device.c: 1886: {
 28654                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 28655  013BFA  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28656  013BFE  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28657  013C02  0E48               	movlw	72
 28658  013C04  6EDF               	movwf	indf2,c
 28659                           
 28660                           ; BSR set to: 0
 28661                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28662  013C06  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28663  013C0A  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28664  013C0E  0E00               	movlw	0
 28665  013C10  8EDB               	bsf	plusw2,7,c
 28666                           
 28667                           ;usb_device.c: 1889: }
 28668  013C12  0012               	return	
 28669  013C14                     i2l7355:
 28670                           
 28671                           ; BSR set to: 0
 28672                           ;usb_device.c: 1890: else
 28673                           ;usb_device.c: 1891: {
 28674                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 28675  013C14  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28676  013C18  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28677  013C1C  0E08               	movlw	8
 28678  013C1E  6EDF               	movwf	indf2,c
 28679                           
 28680                           ; BSR set to: 0
 28681                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28682  013C20  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28683  013C24  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28684  013C28  0E00               	movlw	0
 28685  013C2A  8EDB               	bsf	plusw2,7,c
 28686                           
 28687                           ; BSR set to: 0
 28688                           ;usb_device.c: 1894: }
 28689                           ;usb_device.c: 1895: }
 28690  013C2C  0012               	return	
 28691  013C2E                     i2l7359:
 28692                           
 28693                           ; BSR set to: 0
 28694                           ;usb_device.c: 1896: else
 28695                           ;usb_device.c: 1897: {
 28696                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 28697  013C2E  EE20 F001          	lfsr	2,1
 28698  013C32  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28699  013C34  26D9               	addwf	fsr2l,f,c
 28700  013C36  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28701  013C38  22DA               	addwfc	fsr2h,f,c
 28702  013C3A  0E08               	movlw	8
 28703  013C3C  6EDF               	movwf	indf2,c
 28704                           
 28705                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28706  013C3E  EE20 F002          	lfsr	2,2
 28707  013C42  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28708  013C44  26D9               	addwf	fsr2l,f,c
 28709  013C46  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28710  013C48  22DA               	addwfc	fsr2h,f,c
 28711  013C4A  0E30               	movlw	48
 28712  013C4C  6EDE               	movwf	postinc2,c
 28713  013C4E  0E0D               	movlw	13
 28714  013C50  6EDD               	movwf	postdec2,c
 28715                           
 28716                           ; BSR set to: 0
 28717                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 28718  013C52  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28719  013C56  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28720  013C5A  0E04               	movlw	4
 28721  013C5C  6EDF               	movwf	indf2,c
 28722                           
 28723                           ; BSR set to: 0
 28724                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28725  013C5E  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28726  013C62  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28727  013C66  0E00               	movlw	0
 28728  013C68  8EDB               	bsf	plusw2,7,c
 28729                           
 28730                           ; BSR set to: 0
 28731                           ;usb_device.c: 1926: }
 28732                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 28733                           
 28734                           ; BSR set to: 0
 28735                           ;usb_device.c: 1915: {
 28736                           ;usb_device.c: 1921: outPipes[0].pFunc();
 28737  013C6A  0100               	movlb	0	; () banked
 28738  013C6C  9FE9               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 28739                           
 28740                           ; BSR set to: 0
 28741                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 28742  013C6E  5013               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 28743  013C70  A4D8               	btfss	status,2,c
 28744  013C72  0012               	return	
 28745                           
 28746                           ; BSR set to: 0
 28747                           ;usb_device.c: 1942: {
 28748                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 28749  013C74  EC05  F0A8         	call	_USBCtrlEPAllowStatusStage	;wreg free
 28750  013C78  0012               	return	
 28751  013C7A                     __end_of_USBCtrlTrfRxService:
 28752                           	opt stack 0
 28753                           pclatu	equ	0xFFB
 28754                           pclath	equ	0xFFA
 28755                           tblptru	equ	0xFF8
 28756                           tblptrh	equ	0xFF7
 28757                           tblptrl	equ	0xFF6
 28758                           tablat	equ	0xFF5
 28759                           prodh	equ	0xFF4
 28760                           prodl	equ	0xFF3
 28761                           intcon	equ	0xFF2
 28762                           intcon2	equ	0xFF1
 28763                           postinc0	equ	0xFEE
 28764                           fsr0h	equ	0xFEA
 28765                           fsr0l	equ	0xFE9
 28766                           wreg	equ	0xFE8
 28767                           indf1	equ	0xFE7
 28768                           postinc1	equ	0xFE6
 28769                           postdec1	equ	0xFE5
 28770                           fsr1h	equ	0xFE2
 28771                           fsr1l	equ	0xFE1
 28772                           indf2	equ	0xFDF
 28773                           postinc2	equ	0xFDE
 28774                           postdec2	equ	0xFDD
 28775                           plusw2	equ	0xFDB
 28776                           fsr2h	equ	0xFDA
 28777                           fsr2l	equ	0xFD9
 28778                           status	equ	0xFD8
 28779                           
 28780 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 28781 ;; Defined at:
 28782 ;;		line 1416 in file "../../../My_library/usb/usb_device.c"
 28783 ;; Parameters:    Size  Location     Type
 28784 ;;		None
 28785 ;; Auto vars:     Size  Location     Type
 28786 ;;		None
 28787 ;; Return value:  Size  Location     Type
 28788 ;;		None               void
 28789 ;; Registers used:
 28790 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28791 ;; Tracked objects:
 28792 ;;		On entry : 0/0
 28793 ;;		On exit  : 0/0
 28794 ;;		Unchanged: 0/0
 28795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28800 ;;Total ram usage:        0 bytes
 28801 ;; Hardware stack levels used:    1
 28802 ;; This function calls:
 28803 ;;		Nothing
 28804 ;; This function is called by:
 28805 ;;		_USBDeviceTasks
 28806 ;;		_USBCtrlEPServiceComplete
 28807 ;;		_USBCtrlTrfRxService
 28808 ;; This function uses a non-reentrant model
 28809 ;;
 28810                           
 28811                           	psect	text126
 28812  01500A                     __ptext126:
 28813                           	opt stack 0
 28814  01500A                     _USBCtrlEPAllowStatusStage:
 28815                           	opt stack 15
 28816                           
 28817                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 28818                           
 28819                           ;incstack = 0
 28820  01500A  5015               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 28821  01500C  A4D8               	btfss	status,2,c
 28822  01500E  0012               	return	
 28823                           
 28824                           ;usb_device.c: 1424: {
 28825                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 28826  015010  0E01               	movlw	1
 28827  015012  6E15               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 28828                           
 28829                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 28830  015014  5016               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 28831  015016  A4D8               	btfss	status,2,c
 28832  015018  0012               	return	
 28833                           
 28834                           ;usb_device.c: 1427: {
 28835                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 28836  01501A  0E01               	movlw	1
 28837  01501C  6E16               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 28838                           
 28839                           ;usb_device.c: 1432: if(controlTransferState == 2)
 28840  01501E  0E02               	movlw	2
 28841  015020  1818               	xorwf	_controlTransferState,w,c	;volatile
 28842  015022  A4D8               	btfss	status,2,c
 28843  015024  D016               	goto	i2l7021
 28844                           
 28845                           ;usb_device.c: 1433: {
 28846                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 28847  015026  0100               	movlb	0	; () banked
 28848  015028  EE20 F001          	lfsr	2,1
 28849  01502C  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 28850  01502E  26D9               	addwf	fsr2l,f,c
 28851  015030  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 28852  015032  22DA               	addwfc	fsr2h,f,c
 28853  015034  0E00               	movlw	0
 28854  015036  6EDF               	movwf	indf2,c
 28855                           
 28856                           ; BSR set to: 0
 28857                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 28858  015038  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 28859  01503C  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28860  015040  0E48               	movlw	72
 28861  015042  6EDF               	movwf	indf2,c
 28862                           
 28863                           ; BSR set to: 0
 28864                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 28865  015044  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 28866  015048  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28867  01504C  0E00               	movlw	0
 28868  01504E  8EDB               	bsf	plusw2,7,c
 28869                           
 28870                           ;usb_device.c: 1437: }
 28871  015050  0012               	return	
 28872  015052                     i2l7021:
 28873                           
 28874                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 28875  015052  0418               	decf	_controlTransferState,w,c	;volatile
 28876  015054  A4D8               	btfss	status,2,c
 28877  015056  0012               	return	
 28878                           
 28879                           ;usb_device.c: 1439: {
 28880                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 28881  015058  0E00               	movlw	0
 28882  01505A  6E0F               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 28883                           
 28884                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 28885  01505C  EE20 F001          	lfsr	2,1
 28886  015060  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 28887  015062  26D9               	addwf	fsr2l,f,c
 28888  015064  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28889  015066  22DA               	addwfc	fsr2h,f,c
 28890  015068  0E08               	movlw	8
 28891  01506A  6EDF               	movwf	indf2,c
 28892                           
 28893                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 28894  01506C  EE20 F002          	lfsr	2,2
 28895  015070  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 28896  015072  26D9               	addwf	fsr2l,f,c
 28897  015074  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28898  015076  22DA               	addwfc	fsr2h,f,c
 28899  015078  0E30               	movlw	48
 28900  01507A  6EDE               	movwf	postinc2,c
 28901  01507C  0E0D               	movlw	13
 28902  01507E  6EDD               	movwf	postdec2,c
 28903                           
 28904                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 28905  015080  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28906  015084  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28907  015088  0E04               	movlw	4
 28908  01508A  6EDF               	movwf	indf2,c
 28909                           
 28910                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 28911  01508C  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28912  015090  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28913  015094  0E00               	movlw	0
 28914  015096  8EDB               	bsf	plusw2,7,c
 28915                           
 28916                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 28917  015098  0E01               	movlw	1
 28918  01509A  6E0F               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 28919                           
 28920                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 28921  01509C  EE20 F001          	lfsr	2,1
 28922  0150A0  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28923  0150A2  26D9               	addwf	fsr2l,f,c
 28924  0150A4  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28925  0150A6  22DA               	addwfc	fsr2h,f,c
 28926  0150A8  0E08               	movlw	8
 28927  0150AA  6EDF               	movwf	indf2,c
 28928                           
 28929                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28930  0150AC  EE20 F002          	lfsr	2,2
 28931  0150B0  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28932  0150B2  26D9               	addwf	fsr2l,f,c
 28933  0150B4  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28934  0150B6  22DA               	addwfc	fsr2h,f,c
 28935  0150B8  0E30               	movlw	48
 28936  0150BA  6EDE               	movwf	postinc2,c
 28937  0150BC  0E0D               	movlw	13
 28938  0150BE  6EDD               	movwf	postdec2,c
 28939                           
 28940                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 28941  0150C0  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28942  0150C4  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28943  0150C8  0E80               	movlw	128
 28944  0150CA  6EDF               	movwf	indf2,c
 28945  0150CC  0012               	return	
 28946  0150CE                     __end_of_USBCtrlEPAllowStatusStage:
 28947                           	opt stack 0
 28948                           pclatu	equ	0xFFB
 28949                           pclath	equ	0xFFA
 28950                           tblptru	equ	0xFF8
 28951                           tblptrh	equ	0xFF7
 28952                           tblptrl	equ	0xFF6
 28953                           tablat	equ	0xFF5
 28954                           prodh	equ	0xFF4
 28955                           prodl	equ	0xFF3
 28956                           intcon	equ	0xFF2
 28957                           intcon2	equ	0xFF1
 28958                           postinc0	equ	0xFEE
 28959                           fsr0h	equ	0xFEA
 28960                           fsr0l	equ	0xFE9
 28961                           wreg	equ	0xFE8
 28962                           indf1	equ	0xFE7
 28963                           postinc1	equ	0xFE6
 28964                           postdec1	equ	0xFE5
 28965                           fsr1h	equ	0xFE2
 28966                           fsr1l	equ	0xFE1
 28967                           indf2	equ	0xFDF
 28968                           postinc2	equ	0xFDE
 28969                           postdec2	equ	0xFDD
 28970                           plusw2	equ	0xFDB
 28971                           fsr2h	equ	0xFDA
 28972                           fsr2l	equ	0xFD9
 28973                           status	equ	0xFD8
 28974                           
 28975 ;; *************** function _USBCtrlTrfInHandler *****************
 28976 ;; Defined at:
 28977 ;;		line 2595 in file "../../../My_library/usb/usb_device.c"
 28978 ;; Parameters:    Size  Location     Type
 28979 ;;		None
 28980 ;; Auto vars:     Size  Location     Type
 28981 ;;  lastDTS         1    1[COMRAM] unsigned char 
 28982 ;; Return value:  Size  Location     Type
 28983 ;;		None               void
 28984 ;; Registers used:
 28985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28986 ;; Tracked objects:
 28987 ;;		On entry : 0/0
 28988 ;;		On exit  : 0/0
 28989 ;;		Unchanged: 0/0
 28990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28994 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28995 ;;Total ram usage:        1 bytes
 28996 ;; Hardware stack levels used:    1
 28997 ;; Hardware stack levels required when called:    1
 28998 ;; This function calls:
 28999 ;;		_USBCtrlTrfTxService
 29000 ;; This function is called by:
 29001 ;;		_USBCtrlEPService
 29002 ;; This function uses a non-reentrant model
 29003 ;;
 29004                           
 29005                           	psect	text127
 29006  0150CE                     __ptext127:
 29007                           	opt stack 0
 29008  0150CE                     _USBCtrlTrfInHandler:
 29009                           	opt stack 16
 29010                           
 29011                           ;usb_device.c: 2597: uint8_t lastDTS;
 29012                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 29013                           
 29014                           ;incstack = 0
 29015  0150CE  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29016  0150D2  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29017  0150D6  0E00               	movlw	0
 29018  0150D8  BCDF               	btfsc	indf2,6,c
 29019  0150DA  0E01               	movlw	1
 29020  0150DC  6E2E               	movwf	USBCtrlTrfInHandler@lastDTS,c
 29021                           
 29022                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 29023  0150DE  0E04               	movlw	4
 29024  0150E0  0100               	movlb	0	; () banked
 29025  0150E2  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 29026                           
 29027                           ; BSR set to: 0
 29028                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 29029  0150E4  0E08               	movlw	8
 29030  0150E6  1814               	xorwf	_USBDeviceState,w,c	;volatile
 29031  0150E8  A4D8               	btfss	status,2,c
 29032  0150EA  D00D               	goto	i2l7803
 29033                           
 29034                           ; BSR set to: 0
 29035                           ;usb_device.c: 2608: {
 29036                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 29037  0150EC  010D               	movlb	13	; () banked
 29038  0150EE  5132               	movf	50,w,b	;volatile
 29039  0150F0  0B7F               	andlw	127
 29040  0150F2  010F               	movlb	15	; () banked
 29041  0150F4  6F38               	movwf	56,b	;volatile
 29042                           
 29043                           ; BSR set to: 15
 29044                           ;usb_device.c: 2610: if(UADDR != 0u)
 29045  0150F6  010F               	movlb	15	; () banked
 29046  0150F8  5138               	movf	56,w,b	;volatile
 29047  0150FA  B4D8               	btfsc	status,2,c
 29048  0150FC  D002               	goto	i2l7801
 29049                           
 29050                           ; BSR set to: 15
 29051                           ;usb_device.c: 2611: {
 29052                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 29053  0150FE  0E10               	movlw	16
 29054  015100  D001               	goto	L17
 29055  015102                     i2l7801:
 29056                           
 29057                           ; BSR set to: 15
 29058                           ;usb_device.c: 2614: else
 29059                           ;usb_device.c: 2615: {
 29060                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 29061  015102  0E04               	movlw	4
 29062  015104                     L17:
 29063  015104  6E14               	movwf	_USBDeviceState,c	;volatile
 29064  015106                     i2l7803:
 29065                           
 29066                           ;usb_device.c: 2617: }
 29067                           ;usb_device.c: 2618: }
 29068                           ;usb_device.c: 2621: if(controlTransferState == 1)
 29069  015106  0418               	decf	_controlTransferState,w,c	;volatile
 29070  015108  A4D8               	btfss	status,2,c
 29071  01510A  D03B               	goto	i2l1632
 29072                           
 29073                           ;usb_device.c: 2622: {
 29074                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 29075  01510C  0100               	movlb	0	; () banked
 29076  01510E  EE20 F002          	lfsr	2,2
 29077  015112  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 29078  015114  26D9               	addwf	fsr2l,f,c
 29079  015116  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29080  015118  22DA               	addwfc	fsr2h,f,c
 29081  01511A  0E38               	movlw	56
 29082  01511C  6EDE               	movwf	postinc2,c
 29083  01511E  0E0D               	movlw	13
 29084  015120  6EDD               	movwf	postdec2,c
 29085                           
 29086                           ; BSR set to: 0
 29087                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 29088  015122  EC71  F0A3         	call	_USBCtrlTrfTxService	;wreg free
 29089                           
 29090                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 29091  015126  0E02               	movlw	2
 29092  015128  1822               	xorwf	_shortPacketStatus,w,c	;volatile
 29093  01512A  A4D8               	btfss	status,2,c
 29094  01512C  D00D               	goto	i2l7815
 29095                           
 29096                           ;usb_device.c: 2631: {
 29097                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 29098  01512E  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29099  015132  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29100  015136  0E04               	movlw	4
 29101  015138  6EDF               	movwf	indf2,c
 29102                           
 29103                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29104  01513A  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29105  01513E  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29106  015142  0E00               	movlw	0
 29107  015144  8EDB               	bsf	plusw2,7,c
 29108                           
 29109                           ;usb_device.c: 2636: }
 29110  015146  0012               	return	
 29111  015148                     i2l7815:
 29112                           
 29113                           ;usb_device.c: 2637: else
 29114                           ;usb_device.c: 2638: {
 29115                           ;usb_device.c: 2639: if(lastDTS == 0)
 29116  015148  502E               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 29117  01514A  A4D8               	btfss	status,2,c
 29118  01514C  D00D               	goto	i2l7821
 29119                           
 29120                           ;usb_device.c: 2640: {
 29121                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29122  01514E  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29123  015152  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29124  015156  0E48               	movlw	72
 29125  015158  6EDF               	movwf	indf2,c
 29126                           
 29127                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29128  01515A  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29129  01515E  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29130  015162  0E00               	movlw	0
 29131  015164  8EDB               	bsf	plusw2,7,c
 29132                           
 29133                           ;usb_device.c: 2643: }
 29134  015166  0012               	return	
 29135  015168                     i2l7821:
 29136                           
 29137                           ;usb_device.c: 2644: else
 29138                           ;usb_device.c: 2645: {
 29139                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 29140  015168  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29141  01516C  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29142  015170  0E08               	movlw	8
 29143  015172  6EDF               	movwf	indf2,c
 29144                           
 29145                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29146  015174  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29147  015178  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29148  01517C  0E00               	movlw	0
 29149  01517E  8EDB               	bsf	plusw2,7,c
 29150                           
 29151                           ;usb_device.c: 2648: }
 29152                           ;usb_device.c: 2649: }
 29153                           ;usb_device.c: 2650: }
 29154  015180  0012               	return	
 29155  015182                     i2l1632:
 29156                           
 29157                           ;usb_device.c: 2651: else
 29158                           ;usb_device.c: 2652: {
 29159                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 29160  015182  0100               	movlb	0	; () banked
 29161  015184  AFE9               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 29162  015186  D002               	goto	i2l7827
 29163                           
 29164                           ; BSR set to: 0
 29165                           ;usb_device.c: 2661: }
 29166                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 29167                           
 29168                           ; BSR set to: 0
 29169                           ;usb_device.c: 2659: {
 29170                           ;usb_device.c: 2660: outPipes[0].pFunc();
 29171  015188  0100               	movlb	0	; () banked
 29172  01518A  9FE9               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 29173  01518C                     i2l7827:
 29174                           
 29175                           ; BSR set to: 0
 29176                           ;usb_device.c: 2663: }
 29177                           ;usb_device.c: 2665: controlTransferState = 0;
 29178  01518C  0E00               	movlw	0
 29179  01518E  6E18               	movwf	_controlTransferState,c	;volatile
 29180  015190  0012               	return	
 29181  015192                     __end_of_USBCtrlTrfInHandler:
 29182                           	opt stack 0
 29183                           pclatu	equ	0xFFB
 29184                           pclath	equ	0xFFA
 29185                           tblptru	equ	0xFF8
 29186                           tblptrh	equ	0xFF7
 29187                           tblptrl	equ	0xFF6
 29188                           tablat	equ	0xFF5
 29189                           prodh	equ	0xFF4
 29190                           prodl	equ	0xFF3
 29191                           intcon	equ	0xFF2
 29192                           intcon2	equ	0xFF1
 29193                           postinc0	equ	0xFEE
 29194                           fsr0h	equ	0xFEA
 29195                           fsr0l	equ	0xFE9
 29196                           wreg	equ	0xFE8
 29197                           indf1	equ	0xFE7
 29198                           postinc1	equ	0xFE6
 29199                           postdec1	equ	0xFE5
 29200                           fsr1h	equ	0xFE2
 29201                           fsr1l	equ	0xFE1
 29202                           indf2	equ	0xFDF
 29203                           postinc2	equ	0xFDE
 29204                           postdec2	equ	0xFDD
 29205                           plusw2	equ	0xFDB
 29206                           fsr2h	equ	0xFDA
 29207                           fsr2l	equ	0xFD9
 29208                           status	equ	0xFD8
 29209                           
 29210 ;; *************** function _USBCtrlTrfTxService *****************
 29211 ;; Defined at:
 29212 ;;		line 1771 in file "../../../My_library/usb/usb_device.c"
 29213 ;; Parameters:    Size  Location     Type
 29214 ;;		None
 29215 ;; Auto vars:     Size  Location     Type
 29216 ;;  byteToSend      1    0[COMRAM] unsigned char 
 29217 ;; Return value:  Size  Location     Type
 29218 ;;		None               void
 29219 ;; Registers used:
 29220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 29221 ;; Tracked objects:
 29222 ;;		On entry : 0/0
 29223 ;;		On exit  : 0/0
 29224 ;;		Unchanged: 0/0
 29225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29227 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29229 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29230 ;;Total ram usage:        1 bytes
 29231 ;; Hardware stack levels used:    1
 29232 ;; This function calls:
 29233 ;;		Nothing
 29234 ;; This function is called by:
 29235 ;;		_USBCtrlEPAllowDataStage
 29236 ;;		_USBCtrlTrfInHandler
 29237 ;; This function uses a non-reentrant model
 29238 ;;
 29239                           
 29240                           	psect	text128
 29241  0146E2                     __ptext128:
 29242                           	opt stack 0
 29243  0146E2                     _USBCtrlTrfTxService:
 29244                           	opt stack 14
 29245                           
 29246                           ;usb_device.c: 1773: uint8_t byteToSend;
 29247                           ;usb_device.c: 1777: byteToSend = 8;
 29248                           
 29249                           ;incstack = 0
 29250  0146E2  0E08               	movlw	8
 29251  0146E4  6E2D               	movwf	USBCtrlTrfTxService@byteToSend,c
 29252                           
 29253                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 29254  0146E6  0100               	movlb	0	; () banked
 29255  0146E8  51F4               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 29256  0146EA  E111               	bnz	i2l6663
 29257  0146EC  0E08               	movlw	8
 29258  0146EE  0100               	movlb	0	; () banked
 29259  0146F0  5DF3               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 29260  0146F2  B0D8               	btfsc	status,0,c
 29261  0146F4  D00C               	goto	i2l6663
 29262                           
 29263                           ; BSR set to: 0
 29264                           ;usb_device.c: 1779: {
 29265                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 29266  0146F6  C0F3  F02D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 29267                           
 29268                           ; BSR set to: 0
 29269                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 29270  0146FA  5022               	movf	_shortPacketStatus,w,c	;volatile
 29271  0146FC  A4D8               	btfss	status,2,c
 29272  0146FE  D002               	goto	i2l6659
 29273                           
 29274                           ; BSR set to: 0
 29275                           ;usb_device.c: 1788: {
 29276                           ;usb_device.c: 1789: shortPacketStatus = 1;
 29277  014700  0E01               	movlw	1
 29278  014702  D004               	goto	L18
 29279  014704                     i2l6659:
 29280                           
 29281                           ; BSR set to: 0
 29282                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 29283  014704  0422               	decf	_shortPacketStatus,w,c	;volatile
 29284  014706  A4D8               	btfss	status,2,c
 29285  014708  D002               	goto	i2l6663
 29286                           
 29287                           ; BSR set to: 0
 29288                           ;usb_device.c: 1792: {
 29289                           ;usb_device.c: 1793: shortPacketStatus = 2;
 29290  01470A  0E02               	movlw	2
 29291  01470C                     L18:
 29292  01470C  6E22               	movwf	_shortPacketStatus,c	;volatile
 29293  01470E                     i2l6663:
 29294                           
 29295                           ; BSR set to: 0
 29296                           ;usb_device.c: 1794: }
 29297                           ;usb_device.c: 1795: }
 29298                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 29299  01470E  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29300  014710  0100               	movlb	0	; () banked
 29301  014712  5FF3               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 29302  014714  0E00               	movlw	0
 29303  014716  5BF4               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 29304                           
 29305                           ; BSR set to: 0
 29306                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 29307  014718  0100               	movlb	0	; () banked
 29308  01471A  EE20 F001          	lfsr	2,1
 29309  01471E  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 29310  014720  26D9               	addwf	fsr2l,f,c
 29311  014722  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29312  014724  22DA               	addwfc	fsr2h,f,c
 29313  014726  C02D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 29314                           
 29315                           ; BSR set to: 0
 29316                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 29317  01472A  0E38               	movlw	56
 29318  01472C  0101               	movlb	1	; () banked
 29319  01472E  6F1C               	movwf	_pDst& (0+255),b
 29320  014730  0E0D               	movlw	13
 29321  014732  0101               	movlb	1	; () banked
 29322  014734  6F1D               	movwf	(_pDst+1)& (0+255),b
 29323                           
 29324                           ; BSR set to: 1
 29325                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 29326  014736  0100               	movlb	0	; () banked
 29327  014738  A1F2               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 29328  01473A  D01E               	goto	i2l6681
 29329  01473C  D03E               	goto	i2l6691
 29330  01473E                     i2l6673:
 29331                           
 29332                           ;usb_device.c: 1812: {
 29333                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 29334  01473E  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 29335  014742  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 29336  014746  0E00               	movlw	low (__mediumconst shr (0+16))
 29337  014748  6EF8               	movwf	tblptru,c
 29338  01474A  C11C  FFD9         	movff	_pDst,fsr2l
 29339  01474E  C11D  FFDA         	movff	_pDst+1,fsr2h
 29340  014752  0E0E               	movlw	(high __ramtop+-1)
 29341  014754  64F7               	cpfsgt	tblptrh,c
 29342  014756  D003               	bra	i2u606_47
 29343  014758  0008               	tblrd		*
 29344  01475A  50F5               	movf	tablat,w,c
 29345  01475C  D005               	bra	i2u606_40
 29346  01475E                     i2u606_47:
 29347  01475E  CFF6 FFE1          	movff	tblptrl,fsr1l
 29348  014762  CFF7 FFE2          	movff	tblptrh,fsr1h
 29349  014766  50E7               	movf	indf1,w,c
 29350  014768                     i2u606_40:
 29351  014768  6EDF               	movwf	indf2,c
 29352  01476A  0100               	movlb	0	; () banked
 29353  01476C  4BEF               	infsnz	_inPipes& (0+255),f,b	;volatile
 29354  01476E  2BF0               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 29355                           
 29356                           ; BSR set to: 0
 29357  014770  0101               	movlb	1	; () banked
 29358  014772  4B1C               	infsnz	_pDst& (0+255),f,b
 29359  014774  2B1D               	incf	(_pDst+1)& (0+255),f,b
 29360                           
 29361                           ; BSR set to: 1
 29362                           ;usb_device.c: 1814: byteToSend--;
 29363  014776  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 29364  014778                     i2l6681:
 29365  014778  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29366  01477A  B4D8               	btfsc	status,2,c
 29367  01477C  0012               	return	
 29368  01477E  D7DF               	goto	i2l6673
 29369  014780                     i2l6683:
 29370                           
 29371                           ;usb_device.c: 1820: {
 29372                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 29373  014780  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 29374  014784  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 29375  014788  0E00               	movlw	low (__mediumconst shr (0+16))
 29376  01478A  6EF8               	movwf	tblptru,c
 29377  01478C  C11C  FFD9         	movff	_pDst,fsr2l
 29378  014790  C11D  FFDA         	movff	_pDst+1,fsr2h
 29379  014794  0E0E               	movlw	(high __ramtop+-1)
 29380  014796  64F7               	cpfsgt	tblptrh,c
 29381  014798  D003               	bra	i2u608_47
 29382  01479A  0008               	tblrd		*
 29383  01479C  50F5               	movf	tablat,w,c
 29384  01479E  D005               	bra	i2u608_40
 29385  0147A0                     i2u608_47:
 29386  0147A0  CFF6 FFE1          	movff	tblptrl,fsr1l
 29387  0147A4  CFF7 FFE2          	movff	tblptrh,fsr1h
 29388  0147A8  50E7               	movf	indf1,w,c
 29389  0147AA                     i2u608_40:
 29390  0147AA  6EDF               	movwf	indf2,c
 29391  0147AC  0100               	movlb	0	; () banked
 29392  0147AE  4BEF               	infsnz	_inPipes& (0+255),f,b	;volatile
 29393  0147B0  2BF0               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 29394                           
 29395                           ; BSR set to: 0
 29396  0147B2  0101               	movlb	1	; () banked
 29397  0147B4  4B1C               	infsnz	_pDst& (0+255),f,b
 29398  0147B6  2B1D               	incf	(_pDst+1)& (0+255),f,b
 29399                           
 29400                           ; BSR set to: 1
 29401                           ;usb_device.c: 1822: byteToSend--;
 29402  0147B8  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 29403  0147BA                     i2l6691:
 29404  0147BA  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29405  0147BC  B4D8               	btfsc	status,2,c
 29406  0147BE  0012               	return	
 29407  0147C0  D7DF               	goto	i2l6683
 29408  0147C2                     __end_of_USBCtrlTrfTxService:
 29409                           	opt stack 0
 29410                           pclatu	equ	0xFFB
 29411                           pclath	equ	0xFFA
 29412                           tblptru	equ	0xFF8
 29413                           tblptrh	equ	0xFF7
 29414                           tblptrl	equ	0xFF6
 29415                           tablat	equ	0xFF5
 29416                           prodh	equ	0xFF4
 29417                           prodl	equ	0xFF3
 29418                           intcon	equ	0xFF2
 29419                           intcon2	equ	0xFF1
 29420                           postinc0	equ	0xFEE
 29421                           fsr0h	equ	0xFEA
 29422                           fsr0l	equ	0xFE9
 29423                           wreg	equ	0xFE8
 29424                           indf1	equ	0xFE7
 29425                           postinc1	equ	0xFE6
 29426                           postdec1	equ	0xFE5
 29427                           fsr1h	equ	0xFE2
 29428                           fsr1l	equ	0xFE1
 29429                           indf2	equ	0xFDF
 29430                           postinc2	equ	0xFDE
 29431                           postdec2	equ	0xFDD
 29432                           plusw2	equ	0xFDB
 29433                           fsr2h	equ	0xFDA
 29434                           fsr2l	equ	0xFD9
 29435                           status	equ	0xFD8
 29436                           
 29437 ;; *************** function _LED_indicator *****************
 29438 ;; Defined at:
 29439 ;;		line 22 in file "ChargeStation_task.c"
 29440 ;; Parameters:    Size  Location     Type
 29441 ;;		None
 29442 ;; Auto vars:     Size  Location     Type
 29443 ;;  i               1   11[COMRAM] unsigned char 
 29444 ;; Return value:  Size  Location     Type
 29445 ;;		None               void
 29446 ;; Registers used:
 29447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29448 ;; Tracked objects:
 29449 ;;		On entry : 0/0
 29450 ;;		On exit  : 0/0
 29451 ;;		Unchanged: 0/0
 29452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29454 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29455 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29456 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29457 ;;Total ram usage:        4 bytes
 29458 ;; Hardware stack levels used:    1
 29459 ;; Hardware stack levels required when called:    1
 29460 ;; This function calls:
 29461 ;;		i2_LED_output
 29462 ;;		i2___awdiv
 29463 ;;		i2___lwdiv
 29464 ;; This function is called by:
 29465 ;;		_ISR
 29466 ;; This function uses a non-reentrant model
 29467 ;;
 29468                           
 29469                           	psect	text129
 29470  013A3C                     __ptext129:
 29471                           	opt stack 0
 29472  013A3C                     _LED_indicator:
 29473                           	opt stack 19
 29474                           
 29475                           ;ChargeStation_task.c: 23: uint8_t i;
 29476                           ;ChargeStation_task.c: 24: static uint8_t cnt[3];
 29477                           ;ChargeStation_task.c: 25: static uint8_t cntf[3];
 29478                           ;ChargeStation_task.c: 26: for (i = 0; i < 3; i++) {
 29479                           
 29480                           ;incstack = 0
 29481  013A3C  0E00               	movlw	0
 29482  013A3E  6E38               	movwf	LED_indicator@i,c
 29483  013A40                     i2l9373:
 29484  013A40  0E02               	movlw	2
 29485  013A42  6438               	cpfsgt	LED_indicator@i,c
 29486  013A44  D001               	goto	i2l9377
 29487  013A46  0012               	return	
 29488  013A48                     i2l9377:
 29489                           
 29490                           ;ChargeStation_task.c: 28: if (port[i].flag.led_indicator_ON) {
 29491  013A48  5038               	movf	LED_indicator@i,w,c
 29492  013A4A  0D17               	mullw	23
 29493  013A4C  0E16               	movlw	22
 29494  013A4E  26F3               	addwf	prodl,f,c
 29495  013A50  0E00               	movlw	0
 29496  013A52  22F4               	addwfc	prodh,f,c
 29497  013A54  0E2D               	movlw	low _port
 29498  013A56  24F3               	addwf	prodl,w,c
 29499  013A58  6ED9               	movwf	fsr2l,c
 29500  013A5A  0E01               	movlw	high _port
 29501  013A5C  20F4               	addwfc	prodh,w,c
 29502  013A5E  6EDA               	movwf	fsr2h,c
 29503  013A60  0101               	movlb	1	; () banked
 29504  013A62  A2DF               	btfss	indf2,1,c
 29505  013A64  D07C               	goto	i2l9397
 29506                           
 29507                           ; BSR set to: 1
 29508                           ;ChargeStation_task.c: 29: cnt[i]++;
 29509  013A66  5038               	movf	LED_indicator@i,w,c
 29510  013A68  0D01               	mullw	1
 29511  013A6A  0E0A               	movlw	low LED_indicator@cnt
 29512  013A6C  24F3               	addwf	prodl,w,c
 29513  013A6E  6ED9               	movwf	fsr2l,c
 29514  013A70  0E01               	movlw	high LED_indicator@cnt
 29515  013A72  20F4               	addwfc	prodh,w,c
 29516  013A74  6EDA               	movwf	fsr2h,c
 29517  013A76  2ADF               	incf	indf2,f,c
 29518                           
 29519                           ;ChargeStation_task.c: 30: if (cnt[i] % 2 == 1) {
 29520  013A78  5038               	movf	LED_indicator@i,w,c
 29521  013A7A  0D01               	mullw	1
 29522  013A7C  0E0A               	movlw	low LED_indicator@cnt
 29523  013A7E  24F3               	addwf	prodl,w,c
 29524  013A80  6ED9               	movwf	fsr2l,c
 29525  013A82  0E01               	movlw	high LED_indicator@cnt
 29526  013A84  20F4               	addwfc	prodh,w,c
 29527  013A86  6EDA               	movwf	fsr2h,c
 29528  013A88  0101               	movlb	1	; () banked
 29529  013A8A  A0DF               	btfss	indf2,0,c
 29530  013A8C  D006               	goto	i2l9383
 29531                           
 29532                           ; BSR set to: 1
 29533                           ;ChargeStation_task.c: 31: LED_output(i, 0);
 29534  013A8E  0E00               	movlw	0
 29535  013A90  6E2D               	movwf	i2LED_output@value,c
 29536  013A92  5038               	movf	LED_indicator@i,w,c
 29537  013A94  EC05  F0B1         	call	i2_LED_output
 29538                           
 29539                           ;ChargeStation_task.c: 32: } else {
 29540  013A98  D062               	goto	i2l9397
 29541  013A9A                     i2l9383:
 29542                           
 29543                           ;ChargeStation_task.c: 33: if (cnt[i] / 2 <= port[i].current / 100) {
 29544  013A9A  5038               	movf	LED_indicator@i,w,c
 29545  013A9C  0D17               	mullw	23
 29546  013A9E  0E06               	movlw	6
 29547  013AA0  26F3               	addwf	prodl,f,c
 29548  013AA2  0E00               	movlw	0
 29549  013AA4  22F4               	addwfc	prodh,f,c
 29550  013AA6  0E2D               	movlw	low _port
 29551  013AA8  24F3               	addwf	prodl,w,c
 29552  013AAA  6ED9               	movwf	fsr2l,c
 29553  013AAC  0E01               	movlw	high _port
 29554  013AAE  20F4               	addwfc	prodh,w,c
 29555  013AB0  6EDA               	movwf	fsr2h,c
 29556  013AB2  CFDE F02D          	movff	postinc2,i2___lwdiv@dividend
 29557  013AB6  CFDD F02E          	movff	postdec2,i2___lwdiv@dividend+1
 29558  013ABA  0E00               	movlw	0
 29559  013ABC  6E30               	movwf	i2___lwdiv@divisor+1,c
 29560  013ABE  0E64               	movlw	100
 29561  013AC0  6E2F               	movwf	i2___lwdiv@divisor,c
 29562  013AC2  EC7F  F0B2         	call	i2___lwdiv	;wreg free
 29563  013AC6  C02D  F035         	movff	?i2___lwdiv,??_LED_indicator
 29564  013ACA  C02E  F036         	movff	?i2___lwdiv+1,??_LED_indicator+1
 29565  013ACE  5038               	movf	LED_indicator@i,w,c
 29566  013AD0  0D01               	mullw	1
 29567  013AD2  0E0A               	movlw	low LED_indicator@cnt
 29568  013AD4  24F3               	addwf	prodl,w,c
 29569  013AD6  6ED9               	movwf	fsr2l,c
 29570  013AD8  0E01               	movlw	high LED_indicator@cnt
 29571  013ADA  20F4               	addwfc	prodh,w,c
 29572  013ADC  6EDA               	movwf	fsr2h,c
 29573  013ADE  50DF               	movf	indf2,w,c
 29574  013AE0  6E37               	movwf	(??_LED_indicator+2)& (0+255),c
 29575  013AE2  5037               	movf	??_LED_indicator+2,w,c
 29576  013AE4  6E2D               	movwf	i2___awdiv@dividend,c
 29577  013AE6  6A2E               	clrf	i2___awdiv@dividend+1,c
 29578  013AE8  0E00               	movlw	0
 29579  013AEA  6E30               	movwf	i2___awdiv@divisor+1,c
 29580  013AEC  0E02               	movlw	2
 29581  013AEE  6E2F               	movwf	i2___awdiv@divisor,c
 29582  013AF0  EC88  F0AE         	call	i2___awdiv	;wreg free
 29583  013AF4  502D               	movf	?i2___awdiv,w,c
 29584  013AF6  5C35               	subwf	??_LED_indicator,w,c
 29585  013AF8  502E               	movf	?i2___awdiv+1,w,c
 29586  013AFA  5836               	subwfb	??_LED_indicator+1,w,c
 29587  013AFC  A0D8               	btfss	status,0,c
 29588  013AFE  D00C               	goto	i2l9389
 29589                           
 29590                           ;ChargeStation_task.c: 34: LED_output(i, 1);
 29591  013B00  0E01               	movlw	1
 29592  013B02  6E2D               	movwf	i2LED_output@value,c
 29593  013B04  5038               	movf	LED_indicator@i,w,c
 29594  013B06  EC05  F0B1         	call	i2_LED_output
 29595                           
 29596                           ;ChargeStation_task.c: 35: cntf[i] = 0;
 29597  013B0A  5038               	movf	LED_indicator@i,w,c
 29598  013B0C  0D01               	mullw	1
 29599  013B0E  0E0D               	movlw	low LED_indicator@cntf
 29600  013B10  24F3               	addwf	prodl,w,c
 29601  013B12  6ED9               	movwf	fsr2l,c
 29602  013B14  0E01               	movlw	high LED_indicator@cntf
 29603  013B16  D01F               	goto	L19
 29604  013B18                     i2l9389:
 29605                           
 29606                           ;ChargeStation_task.c: 37: cntf[i]++;
 29607  013B18  5038               	movf	LED_indicator@i,w,c
 29608  013B1A  0D01               	mullw	1
 29609  013B1C  0E0D               	movlw	low LED_indicator@cntf
 29610  013B1E  24F3               	addwf	prodl,w,c
 29611  013B20  6ED9               	movwf	fsr2l,c
 29612  013B22  0E01               	movlw	high LED_indicator@cntf
 29613  013B24  20F4               	addwfc	prodh,w,c
 29614  013B26  6EDA               	movwf	fsr2h,c
 29615  013B28  2ADF               	incf	indf2,f,c
 29616                           
 29617                           ;ChargeStation_task.c: 38: LED_output(i, 0);
 29618  013B2A  0E00               	movlw	0
 29619  013B2C  6E2D               	movwf	i2LED_output@value,c
 29620  013B2E  5038               	movf	LED_indicator@i,w,c
 29621  013B30  EC05  F0B1         	call	i2_LED_output
 29622                           
 29623                           ;ChargeStation_task.c: 39: if (cntf[i] >= 2) {
 29624  013B34  5038               	movf	LED_indicator@i,w,c
 29625  013B36  0D01               	mullw	1
 29626  013B38  0E0D               	movlw	low LED_indicator@cntf
 29627  013B3A  24F3               	addwf	prodl,w,c
 29628  013B3C  6ED9               	movwf	fsr2l,c
 29629  013B3E  0E01               	movlw	high LED_indicator@cntf
 29630  013B40  20F4               	addwfc	prodh,w,c
 29631  013B42  6EDA               	movwf	fsr2h,c
 29632  013B44  0E01               	movlw	1
 29633  013B46  64DF               	cpfsgt	indf2,c
 29634  013B48  D00A               	goto	i2l9397
 29635                           
 29636                           ;ChargeStation_task.c: 40: cnt[i] = 0;
 29637  013B4A  5038               	movf	LED_indicator@i,w,c
 29638  013B4C  0D01               	mullw	1
 29639  013B4E  0E0A               	movlw	low LED_indicator@cnt
 29640  013B50  24F3               	addwf	prodl,w,c
 29641  013B52  6ED9               	movwf	fsr2l,c
 29642  013B54  0E01               	movlw	high LED_indicator@cnt
 29643  013B56                     L19:
 29644  013B56  20F4               	addwfc	prodh,w,c
 29645  013B58  6EDA               	movwf	fsr2h,c
 29646  013B5A  0E00               	movlw	0
 29647  013B5C  6EDF               	movwf	indf2,c
 29648  013B5E                     i2l9397:
 29649  013B5E  2A38               	incf	LED_indicator@i,f,c
 29650  013B60  D76F               	goto	i2l9373
 29651  013B62                     __end_of_LED_indicator:
 29652                           	opt stack 0
 29653                           pclatu	equ	0xFFB
 29654                           pclath	equ	0xFFA
 29655                           tblptru	equ	0xFF8
 29656                           tblptrh	equ	0xFF7
 29657                           tblptrl	equ	0xFF6
 29658                           tablat	equ	0xFF5
 29659                           prodh	equ	0xFF4
 29660                           prodl	equ	0xFF3
 29661                           intcon	equ	0xFF2
 29662                           intcon2	equ	0xFF1
 29663                           postinc0	equ	0xFEE
 29664                           fsr0h	equ	0xFEA
 29665                           fsr0l	equ	0xFE9
 29666                           wreg	equ	0xFE8
 29667                           indf1	equ	0xFE7
 29668                           postinc1	equ	0xFE6
 29669                           postdec1	equ	0xFE5
 29670                           fsr1h	equ	0xFE2
 29671                           fsr1l	equ	0xFE1
 29672                           indf2	equ	0xFDF
 29673                           postinc2	equ	0xFDE
 29674                           postdec2	equ	0xFDD
 29675                           plusw2	equ	0xFDB
 29676                           fsr2h	equ	0xFDA
 29677                           fsr2l	equ	0xFD9
 29678                           status	equ	0xFD8
 29679                           
 29680 ;; *************** function i2___lwdiv *****************
 29681 ;; Defined at:
 29682 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 29683 ;; Parameters:    Size  Location     Type
 29684 ;;  dividend        2    0[COMRAM] unsigned int 
 29685 ;;  divisor         2    2[COMRAM] unsigned int 
 29686 ;; Auto vars:     Size  Location     Type
 29687 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 29688 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 29689 ;; Return value:  Size  Location     Type
 29690 ;;                  2    0[COMRAM] unsigned int 
 29691 ;; Registers used:
 29692 ;;		wreg, status,2, status,0
 29693 ;; Tracked objects:
 29694 ;;		On entry : 0/0
 29695 ;;		On exit  : 0/0
 29696 ;;		Unchanged: 0/0
 29697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29698 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29699 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29701 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29702 ;;Total ram usage:        7 bytes
 29703 ;; Hardware stack levels used:    1
 29704 ;; This function calls:
 29705 ;;		Nothing
 29706 ;; This function is called by:
 29707 ;;		_LED_indicator
 29708 ;; This function uses a non-reentrant model
 29709 ;;
 29710                           
 29711                           	psect	text130
 29712  0164FE                     __ptext130:
 29713                           	opt stack 0
 29714  0164FE                     i2___lwdiv:
 29715                           	opt stack 19
 29716                           
 29717                           ;incstack = 0
 29718  0164FE  0E00               	movlw	0
 29719  016500  6E32               	movwf	i2___lwdiv@quotient+1,c
 29720  016502  0E00               	movlw	0
 29721  016504  6E31               	movwf	i2___lwdiv@quotient,c
 29722  016506  502F               	movf	i2___lwdiv@divisor,w,c
 29723  016508  1030               	iorwf	i2___lwdiv@divisor+1,w,c
 29724  01650A  B4D8               	btfsc	status,2,c
 29725  01650C  D01C               	goto	i2l2299
 29726  01650E  0E01               	movlw	1
 29727  016510  6E33               	movwf	i2___lwdiv@counter,c
 29728  016512  D004               	goto	i2l9357
 29729  016514                     i2l9355:
 29730  016514  90D8               	bcf	status,0,c
 29731  016516  362F               	rlcf	i2___lwdiv@divisor,f,c
 29732  016518  3630               	rlcf	i2___lwdiv@divisor+1,f,c
 29733  01651A  2A33               	incf	i2___lwdiv@counter,f,c
 29734  01651C                     i2l9357:
 29735  01651C  AE30               	btfss	i2___lwdiv@divisor+1,7,c
 29736  01651E  D7FA               	goto	i2l9355
 29737  016520                     i2l9359:
 29738  016520  90D8               	bcf	status,0,c
 29739  016522  3631               	rlcf	i2___lwdiv@quotient,f,c
 29740  016524  3632               	rlcf	i2___lwdiv@quotient+1,f,c
 29741  016526  502F               	movf	i2___lwdiv@divisor,w,c
 29742  016528  5C2D               	subwf	i2___lwdiv@dividend,w,c
 29743  01652A  5030               	movf	i2___lwdiv@divisor+1,w,c
 29744  01652C  582E               	subwfb	i2___lwdiv@dividend+1,w,c
 29745  01652E  A0D8               	btfss	status,0,c
 29746  016530  D005               	goto	i2l9367
 29747  016532  502F               	movf	i2___lwdiv@divisor,w,c
 29748  016534  5E2D               	subwf	i2___lwdiv@dividend,f,c
 29749  016536  5030               	movf	i2___lwdiv@divisor+1,w,c
 29750  016538  5A2E               	subwfb	i2___lwdiv@dividend+1,f,c
 29751  01653A  8031               	bsf	i2___lwdiv@quotient,0,c
 29752  01653C                     i2l9367:
 29753  01653C  90D8               	bcf	status,0,c
 29754  01653E  3230               	rrcf	i2___lwdiv@divisor+1,f,c
 29755  016540  322F               	rrcf	i2___lwdiv@divisor,f,c
 29756  016542  2E33               	decfsz	i2___lwdiv@counter,f,c
 29757  016544  D7ED               	goto	i2l9359
 29758  016546                     i2l2299:
 29759  016546  C031  F02D         	movff	i2___lwdiv@quotient,?i2___lwdiv
 29760  01654A  C032  F02E         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 29761  01654E  0012               	return		;funcret
 29762  016550                     __end_ofi2___lwdiv:
 29763                           	opt stack 0
 29764                           pclatu	equ	0xFFB
 29765                           pclath	equ	0xFFA
 29766                           tblptru	equ	0xFF8
 29767                           tblptrh	equ	0xFF7
 29768                           tblptrl	equ	0xFF6
 29769                           tablat	equ	0xFF5
 29770                           prodh	equ	0xFF4
 29771                           prodl	equ	0xFF3
 29772                           intcon	equ	0xFF2
 29773                           intcon2	equ	0xFF1
 29774                           postinc0	equ	0xFEE
 29775                           fsr0h	equ	0xFEA
 29776                           fsr0l	equ	0xFE9
 29777                           wreg	equ	0xFE8
 29778                           indf1	equ	0xFE7
 29779                           postinc1	equ	0xFE6
 29780                           postdec1	equ	0xFE5
 29781                           fsr1h	equ	0xFE2
 29782                           fsr1l	equ	0xFE1
 29783                           indf2	equ	0xFDF
 29784                           postinc2	equ	0xFDE
 29785                           postdec2	equ	0xFDD
 29786                           plusw2	equ	0xFDB
 29787                           fsr2h	equ	0xFDA
 29788                           fsr2l	equ	0xFD9
 29789                           status	equ	0xFD8
 29790                           
 29791 ;; *************** function i2___awdiv *****************
 29792 ;; Defined at:
 29793 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 29794 ;; Parameters:    Size  Location     Type
 29795 ;;  dividend        2    0[COMRAM] int 
 29796 ;;  divisor         2    2[COMRAM] int 
 29797 ;; Auto vars:     Size  Location     Type
 29798 ;;  __awdiv         2    6[COMRAM] int 
 29799 ;;  __awdiv         1    5[COMRAM] unsigned char 
 29800 ;;  __awdiv         1    4[COMRAM] unsigned char 
 29801 ;; Return value:  Size  Location     Type
 29802 ;;                  2    0[COMRAM] int 
 29803 ;; Registers used:
 29804 ;;		wreg, status,2, status,0
 29805 ;; Tracked objects:
 29806 ;;		On entry : 0/0
 29807 ;;		On exit  : 0/0
 29808 ;;		Unchanged: 0/0
 29809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29810 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29811 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29813 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29814 ;;Total ram usage:        8 bytes
 29815 ;; Hardware stack levels used:    1
 29816 ;; This function calls:
 29817 ;;		Nothing
 29818 ;; This function is called by:
 29819 ;;		_LED_indicator
 29820 ;; This function uses a non-reentrant model
 29821 ;;
 29822                           
 29823                           	psect	text131
 29824  015D10                     __ptext131:
 29825                           	opt stack 0
 29826  015D10                     i2___awdiv:
 29827                           	opt stack 19
 29828                           
 29829                           ;incstack = 0
 29830  015D10  0E00               	movlw	0
 29831  015D12  6E32               	movwf	i2___awdiv@sign,c
 29832  015D14  AE30               	btfss	i2___awdiv@divisor+1,7,c
 29833  015D16  D006               	goto	i2l9313
 29834  015D18  6C2F               	negf	i2___awdiv@divisor,c
 29835  015D1A  1E30               	comf	i2___awdiv@divisor+1,f,c
 29836  015D1C  B0D8               	btfsc	status,0,c
 29837  015D1E  2A30               	incf	i2___awdiv@divisor+1,f,c
 29838  015D20  0E01               	movlw	1
 29839  015D22  6E32               	movwf	i2___awdiv@sign,c
 29840  015D24                     i2l9313:
 29841  015D24  AE2E               	btfss	i2___awdiv@dividend+1,7,c
 29842  015D26  D006               	goto	i2l9319
 29843  015D28  6C2D               	negf	i2___awdiv@dividend,c
 29844  015D2A  1E2E               	comf	i2___awdiv@dividend+1,f,c
 29845  015D2C  B0D8               	btfsc	status,0,c
 29846  015D2E  2A2E               	incf	i2___awdiv@dividend+1,f,c
 29847  015D30  0E01               	movlw	1
 29848  015D32  1A32               	xorwf	i2___awdiv@sign,f,c
 29849  015D34                     i2l9319:
 29850  015D34  0E00               	movlw	0
 29851  015D36  6E34               	movwf	i2___awdiv@quotient+1,c
 29852  015D38  0E00               	movlw	0
 29853  015D3A  6E33               	movwf	i2___awdiv@quotient,c
 29854  015D3C  502F               	movf	i2___awdiv@divisor,w,c
 29855  015D3E  1030               	iorwf	i2___awdiv@divisor+1,w,c
 29856  015D40  B4D8               	btfsc	status,2,c
 29857  015D42  D01C               	goto	i2l9341
 29858  015D44  0E01               	movlw	1
 29859  015D46  6E31               	movwf	i2___awdiv@counter,c
 29860  015D48  D004               	goto	i2l9327
 29861  015D4A                     i2l9325:
 29862  015D4A  90D8               	bcf	status,0,c
 29863  015D4C  362F               	rlcf	i2___awdiv@divisor,f,c
 29864  015D4E  3630               	rlcf	i2___awdiv@divisor+1,f,c
 29865  015D50  2A31               	incf	i2___awdiv@counter,f,c
 29866  015D52                     i2l9327:
 29867  015D52  AE30               	btfss	i2___awdiv@divisor+1,7,c
 29868  015D54  D7FA               	goto	i2l9325
 29869  015D56                     i2l9329:
 29870  015D56  90D8               	bcf	status,0,c
 29871  015D58  3633               	rlcf	i2___awdiv@quotient,f,c
 29872  015D5A  3634               	rlcf	i2___awdiv@quotient+1,f,c
 29873  015D5C  502F               	movf	i2___awdiv@divisor,w,c
 29874  015D5E  5C2D               	subwf	i2___awdiv@dividend,w,c
 29875  015D60  5030               	movf	i2___awdiv@divisor+1,w,c
 29876  015D62  582E               	subwfb	i2___awdiv@dividend+1,w,c
 29877  015D64  A0D8               	btfss	status,0,c
 29878  015D66  D005               	goto	i2l9337
 29879  015D68  502F               	movf	i2___awdiv@divisor,w,c
 29880  015D6A  5E2D               	subwf	i2___awdiv@dividend,f,c
 29881  015D6C  5030               	movf	i2___awdiv@divisor+1,w,c
 29882  015D6E  5A2E               	subwfb	i2___awdiv@dividend+1,f,c
 29883  015D70  8033               	bsf	i2___awdiv@quotient,0,c
 29884  015D72                     i2l9337:
 29885  015D72  90D8               	bcf	status,0,c
 29886  015D74  3230               	rrcf	i2___awdiv@divisor+1,f,c
 29887  015D76  322F               	rrcf	i2___awdiv@divisor,f,c
 29888  015D78  2E31               	decfsz	i2___awdiv@counter,f,c
 29889  015D7A  D7ED               	goto	i2l9329
 29890  015D7C                     i2l9341:
 29891  015D7C  5032               	movf	i2___awdiv@sign,w,c
 29892  015D7E  B4D8               	btfsc	status,2,c
 29893  015D80  D004               	goto	i2l9345
 29894  015D82  6C33               	negf	i2___awdiv@quotient,c
 29895  015D84  1E34               	comf	i2___awdiv@quotient+1,f,c
 29896  015D86  B0D8               	btfsc	status,0,c
 29897  015D88  2A34               	incf	i2___awdiv@quotient+1,f,c
 29898  015D8A                     i2l9345:
 29899  015D8A  C033  F02D         	movff	i2___awdiv@quotient,?i2___awdiv
 29900  015D8E  C034  F02E         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 29901  015D92  0012               	return	
 29902  015D94                     __end_ofi2___awdiv:
 29903                           	opt stack 0
 29904                           pclatu	equ	0xFFB
 29905                           pclath	equ	0xFFA
 29906                           tblptru	equ	0xFF8
 29907                           tblptrh	equ	0xFF7
 29908                           tblptrl	equ	0xFF6
 29909                           tablat	equ	0xFF5
 29910                           prodh	equ	0xFF4
 29911                           prodl	equ	0xFF3
 29912                           intcon	equ	0xFF2
 29913                           intcon2	equ	0xFF1
 29914                           postinc0	equ	0xFEE
 29915                           fsr0h	equ	0xFEA
 29916                           fsr0l	equ	0xFE9
 29917                           wreg	equ	0xFE8
 29918                           indf1	equ	0xFE7
 29919                           postinc1	equ	0xFE6
 29920                           postdec1	equ	0xFE5
 29921                           fsr1h	equ	0xFE2
 29922                           fsr1l	equ	0xFE1
 29923                           indf2	equ	0xFDF
 29924                           postinc2	equ	0xFDE
 29925                           postdec2	equ	0xFDD
 29926                           plusw2	equ	0xFDB
 29927                           fsr2h	equ	0xFDA
 29928                           fsr2l	equ	0xFD9
 29929                           status	equ	0xFD8
 29930                           
 29931 ;; *************** function i2_LED_output *****************
 29932 ;; Defined at:
 29933 ;;		line 36 in file "io.c"
 29934 ;; Parameters:    Size  Location     Type
 29935 ;;  b               1    wreg     unsigned char 
 29936 ;;  value           1    0[COMRAM] unsigned char 
 29937 ;; Auto vars:     Size  Location     Type
 29938 ;;  b               1    1[COMRAM] unsigned char 
 29939 ;; Return value:  Size  Location     Type
 29940 ;;		None               void
 29941 ;; Registers used:
 29942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29943 ;; Tracked objects:
 29944 ;;		On entry : 0/0
 29945 ;;		On exit  : 0/0
 29946 ;;		Unchanged: 0/0
 29947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29948 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29949 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29951 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29952 ;;Total ram usage:        2 bytes
 29953 ;; Hardware stack levels used:    1
 29954 ;; This function calls:
 29955 ;;		Nothing
 29956 ;; This function is called by:
 29957 ;;		_LED_indicator
 29958 ;; This function uses a non-reentrant model
 29959 ;;
 29960                           
 29961                           	psect	text132
 29962  01620A                     __ptext132:
 29963                           	opt stack 0
 29964  01620A                     i2_LED_output:
 29965                           	opt stack 19
 29966                           
 29967                           ;incstack = 0
 29968                           ;i2LED_output@b stored from wreg
 29969  01620A  6E2E               	movwf	i2LED_output@b,c
 29970                           
 29971                           ;io.c: 37: port[b].flag.led_flag = value;
 29972  01620C  502E               	movf	i2LED_output@b,w,c
 29973  01620E  0D17               	mullw	23
 29974  016210  0E16               	movlw	22
 29975  016212  26F3               	addwf	prodl,f,c
 29976  016214  0E00               	movlw	0
 29977  016216  22F4               	addwfc	prodh,f,c
 29978  016218  0E2D               	movlw	low _port
 29979  01621A  24F3               	addwf	prodl,w,c
 29980  01621C  6ED9               	movwf	fsr2l,c
 29981  01621E  0E01               	movlw	high _port
 29982  016220  20F4               	addwfc	prodh,w,c
 29983  016222  6EDA               	movwf	fsr2h,c
 29984  016224  B02D               	btfsc	i2LED_output@value,0,c
 29985  016226  D003               	bra	i2u1009_45
 29986  016228  0101               	movlb	1	; () banked
 29987  01622A  96DF               	bcf	indf2,3,c
 29988  01622C  D002               	bra	i2u1009_46
 29989  01622E                     i2u1009_45:
 29990  01622E  0101               	movlb	1	; () banked
 29991  016230  86DF               	bsf	indf2,3,c
 29992  016232                     i2u1009_46:
 29993                           
 29994                           ;io.c: 38: switch (b) {
 29995  016232  D012               	goto	i2l9303
 29996  016234                     i2l292:
 29997                           
 29998                           ;io.c: 40: LATB7 = value;
 29999  016234  A02D               	btfss	i2LED_output@value,0,c
 30000  016236  D002               	goto	i2u1010_40
 30001  016238  8E8A               	bsf	3978,7,c	;volatile
 30002  01623A  0012               	return	
 30003  01623C                     i2u1010_40:
 30004  01623C  9E8A               	bcf	3978,7,c	;volatile
 30005                           
 30006                           ;io.c: 41: break;
 30007  01623E  0012               	return	
 30008  016240                     i2l294:
 30009                           
 30010                           ;io.c: 43: LATB6 = value;
 30011  016240  A02D               	btfss	i2LED_output@value,0,c
 30012  016242  D002               	goto	i2u1012_40
 30013  016244  8C8A               	bsf	3978,6,c	;volatile
 30014  016246  0012               	return	
 30015  016248                     i2u1012_40:
 30016  016248  9C8A               	bcf	3978,6,c	;volatile
 30017                           
 30018                           ;io.c: 44: break;
 30019  01624A  0012               	return	
 30020  01624C                     i2l295:
 30021                           
 30022                           ;io.c: 46: LATC2 = value;
 30023  01624C  A02D               	btfss	i2LED_output@value,0,c
 30024  01624E  D002               	goto	i2u1014_40
 30025  016250  848B               	bsf	3979,2,c	;volatile
 30026  016252  0012               	return	
 30027  016254                     i2u1014_40:
 30028  016254  948B               	bcf	3979,2,c	;volatile
 30029                           
 30030                           ;io.c: 48: }
 30031                           
 30032                           ;io.c: 47: break;
 30033  016256  0012               	return	
 30034  016258                     i2l9303:
 30035  016258  502E               	movf	i2LED_output@b,w,c
 30036                           
 30037                           ; Switch size 1, requested type "space"
 30038                           ; Number of cases is 3, Range of values is 0 to 2
 30039                           ; switch strategies available:
 30040                           ; Name         Instructions Cycles
 30041                           ; simple_byte           10     6 (average)
 30042                           ;	Chosen strategy is simple_byte
 30043  01625A  0A00               	xorlw	0	; case 0
 30044  01625C  B4D8               	btfsc	status,2,c
 30045  01625E  D7EA               	goto	i2l292
 30046  016260  0A01               	xorlw	1	; case 1
 30047  016262  B4D8               	btfsc	status,2,c
 30048  016264  D7ED               	goto	i2l294
 30049  016266  0A03               	xorlw	3	; case 2
 30050  016268  A4D8               	btfss	status,2,c
 30051  01626A  0012               	return	
 30052  01626C  D7EF               	goto	i2l295
 30053  01626E                     __end_ofi2_LED_output:
 30054                           	opt stack 0
 30055                           pclatu	equ	0xFFB
 30056                           pclath	equ	0xFFA
 30057                           tblptru	equ	0xFF8
 30058                           tblptrh	equ	0xFF7
 30059                           tblptrl	equ	0xFF6
 30060                           tablat	equ	0xFF5
 30061                           prodh	equ	0xFF4
 30062                           prodl	equ	0xFF3
 30063                           intcon	equ	0xFF2
 30064                           intcon2	equ	0xFF1
 30065                           postinc0	equ	0xFEE
 30066                           fsr0h	equ	0xFEA
 30067                           fsr0l	equ	0xFE9
 30068                           wreg	equ	0xFE8
 30069                           indf1	equ	0xFE7
 30070                           postinc1	equ	0xFE6
 30071                           postdec1	equ	0xFE5
 30072                           fsr1h	equ	0xFE2
 30073                           fsr1l	equ	0xFE1
 30074                           indf2	equ	0xFDF
 30075                           postinc2	equ	0xFDE
 30076                           postdec2	equ	0xFDD
 30077                           plusw2	equ	0xFDB
 30078                           fsr2h	equ	0xFDA
 30079                           fsr2l	equ	0xFD9
 30080                           status	equ	0xFD8
 30081                           pclatu	equ	0xFFB
 30082                           pclath	equ	0xFFA
 30083                           tblptru	equ	0xFF8
 30084                           tblptrh	equ	0xFF7
 30085                           tblptrl	equ	0xFF6
 30086                           tablat	equ	0xFF5
 30087                           prodh	equ	0xFF4
 30088                           prodl	equ	0xFF3
 30089                           intcon	equ	0xFF2
 30090                           intcon2	equ	0xFF1
 30091                           postinc0	equ	0xFEE
 30092                           fsr0h	equ	0xFEA
 30093                           fsr0l	equ	0xFE9
 30094                           wreg	equ	0xFE8
 30095                           indf1	equ	0xFE7
 30096                           postinc1	equ	0xFE6
 30097                           postdec1	equ	0xFE5
 30098                           fsr1h	equ	0xFE2
 30099                           fsr1l	equ	0xFE1
 30100                           indf2	equ	0xFDF
 30101                           postinc2	equ	0xFDE
 30102                           postdec2	equ	0xFDD
 30103                           plusw2	equ	0xFDB
 30104                           fsr2h	equ	0xFDA
 30105                           fsr2l	equ	0xFD9
 30106                           status	equ	0xFD8
 30107                           
 30108                           	psect	rparam
 30109  0000                     pclatu	equ	0xFFB
 30110                           pclath	equ	0xFFA
 30111                           tblptru	equ	0xFF8
 30112                           tblptrh	equ	0xFF7
 30113                           tblptrl	equ	0xFF6
 30114                           tablat	equ	0xFF5
 30115                           prodh	equ	0xFF4
 30116                           prodl	equ	0xFF3
 30117                           intcon	equ	0xFF2
 30118                           intcon2	equ	0xFF1
 30119                           postinc0	equ	0xFEE
 30120                           fsr0h	equ	0xFEA
 30121                           fsr0l	equ	0xFE9
 30122                           wreg	equ	0xFE8
 30123                           indf1	equ	0xFE7
 30124                           postinc1	equ	0xFE6
 30125                           postdec1	equ	0xFE5
 30126                           fsr1h	equ	0xFE2
 30127                           fsr1l	equ	0xFE1
 30128                           indf2	equ	0xFDF
 30129                           postinc2	equ	0xFDE
 30130                           postdec2	equ	0xFDD
 30131                           plusw2	equ	0xFDB
 30132                           fsr2h	equ	0xFDA
 30133                           fsr2l	equ	0xFD9
 30134                           status	equ	0xFD8
 30135                           
 30136                           	psect	temp
 30137  000059                     btemp:
 30138                           	opt stack 0
 30139  000059                     	ds	1
 30140  0000                     int$flags	set	btemp
 30141                           pclatu	equ	0xFFB
 30142                           pclath	equ	0xFFA
 30143                           tblptru	equ	0xFF8
 30144                           tblptrh	equ	0xFF7
 30145                           tblptrl	equ	0xFF6
 30146                           tablat	equ	0xFF5
 30147                           prodh	equ	0xFF4
 30148                           prodl	equ	0xFF3
 30149                           intcon	equ	0xFF2
 30150                           intcon2	equ	0xFF1
 30151                           postinc0	equ	0xFEE
 30152                           fsr0h	equ	0xFEA
 30153                           fsr0l	equ	0xFE9
 30154                           wreg	equ	0xFE8
 30155                           indf1	equ	0xFE7
 30156                           postinc1	equ	0xFE6
 30157                           postdec1	equ	0xFE5
 30158                           fsr1h	equ	0xFE2
 30159                           fsr1l	equ	0xFE1
 30160                           indf2	equ	0xFDF
 30161                           postinc2	equ	0xFDE
 30162                           postdec2	equ	0xFDD
 30163                           plusw2	equ	0xFDB
 30164                           fsr2h	equ	0xFDA
 30165                           fsr2l	equ	0xFD9
 30166                           status	equ	0xFD8


Data Sizes:
    Strings     1049
    Constant    405
    Data        3
    BSS         2637
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      88
    BANK0           160    134     160
    BANK1           256     80     228
    BANK2           256      0     194
    BANK3           256      0     228
    BANK4           256    105     105
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK2[25]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_92(CODE[9]), STR_87(CODE[1]), STR_83(CODE[1]), STR_80(CODE[1]), 
		 -> STR_60(CODE[6]), STR_59(CODE[6]), STR_57(CODE[6]), STR_56(CODE[6]), 
		 -> STR_52(CODE[6]), STR_51(CODE[6]), STR_49(CODE[6]), STR_48(CODE[6]), 
		 -> STR_44(CODE[6]), STR_43(CODE[6]), STR_41(CODE[6]), STR_40(CODE[6]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_1379(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_1362(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_1345(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_1379(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_1362(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_1345(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_117(CODE[7]), STR_116(CODE[2]), STR_115(CODE[7]), STR_114(CODE[2]), 
		 -> STR_113(CODE[5]), STR_112(CODE[2]), STR_111(CODE[4]), STR_110(CODE[2]), 
		 -> STR_109(CODE[6]), STR_108(CODE[2]), STR_107(CODE[5]), STR_106(CODE[2]), 
		 -> STR_105(CODE[12]), STR_104(CODE[3]), STR_103(CODE[2]), STR_102(CODE[11]), 
		 -> STR_25(CODE[2]), STR_24(CODE[6]), STR_21(CODE[5]), STR_20(CODE[11]), 
		 -> STR_19(CODE[6]), STR_18(CODE[1]), STR_17(CODE[12]), STR_16(CODE[3]), 
		 -> STR_15(CODE[9]), STR_14(CODE[9]), STR_12(CODE[2]), STR_11(CODE[5]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), terminal_task@op0(BANK2[25]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_95(CODE[2]), STR_94(CODE[2]), STR_93(CODE[2]), STR_91(CODE[2]), 
		 -> weekday_3char(CODE[28]), STR_90(CODE[2]), STR_89(CODE[2]), STR_88(CODE[2]), 
		 -> STR_86(CODE[2]), STR_85(CODE[2]), STR_84(CODE[2]), STR_82(CODE[2]), 
		 -> STR_81(CODE[2]), STR_79(CODE[3]), display_dec@s(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 120
		 -> STR_118(CODE[7]), weekday_3char(CODE[28]), display_LCD@onoff(CODE[10]), display_LCD@port_char(CODE[120]), 
		 -> data_out@p(CODE[6]), sp__ADC(UNKNOWN), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_100(CODE[37]), STR_98(CODE[5]), STR_78(CODE[5]), STR_33(CODE[28]), 
		 -> STR_32(CODE[9]), STR_31(CODE[11]), STR_30(CODE[6]), STR_28(CODE[24]), 
		 -> STR_27(CODE[32]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), display_dec@s(BANK0[4]), display_LCD@str_575(BANK1[20]), 
		 -> data_out@str(BANK0[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5549_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5549_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5549_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5549_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK3[64]), cdc_data_rx(BANK3[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S4296$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S4286$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4286$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4262$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4262$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4262$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4262$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_task@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_task@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 40
		 -> display_LCD@str_575(BANK1[20]), display_LCD@str(BANK1[40]), display_char(BANK2[40]), STR_10(CODE[16]), 
		 -> STR_9(CODE[12]), STR_6(CODE[13]), STR_5(CODE[17]), 

    RTCC_adjust_time_dec@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_inc@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_cursor@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_toggle@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    display_time_1602@line1	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_time_1602@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    display_time_1602@line0	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_dec@str	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), uart_tx(BANK2[8]), usb_rx(BANK2[8]), usb_tx(BANK2[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 434
		 -> STR_101(CODE[8]), print_time@str(BANK0[30]), STR_99(CODE[3]), print_time_dec@str(COMRAM[10]), 
		 -> STR_97(CODE[4]), STR_96(CODE[4]), STR_29(CODE[2]), data_out@str(BANK0[30]), 
		 -> STR_26(CODE[18]), STR_23(CODE[36]), STR_22(CODE[24]), STR_13(CODE[434]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), uart_rx(BANK2[8]), usb_rx(BANK2[8]), usb_tx(BANK2[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), uart_rx(BANK2[8]), uart_tx(BANK2[8]), usb_rx(BANK2[8]), 
		 -> usb_tx(BANK2[8]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), usb_rx(BANK2[8]), usb_tx(BANK2[8]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 69
		 -> ctmu_m(COMRAM[4]), port(BANK1[69]), 

    settings_integrating_reset@strp_1380	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str_1379(BANK0[20]), 

    settings_integrating_reset@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str(BANK0[20]), 

    settings_led_indicator@strp_1363	PTR unsigned char  size(2) Largest target is 20
		 -> settings_led_indicator@str_1362(BANK0[20]), 

    settings_led_indicator@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_led_indicator@str(BANK0[20]), 

    settings_auto_stop@strp_1346	PTR unsigned char  size(2) Largest target is 20
		 -> settings_auto_stop@str_1345(BANK0[20]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_1379(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_1362(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_1345(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    settings_auto_stop@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_auto_stop@str(BANK0[20]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    display@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_77(CODE[1]), STR_75(CODE[15]), STR_73(CODE[16]), STR_71(CODE[17]), 
		 -> STR_69(CODE[16]), STR_67(CODE[17]), STR_65(CODE[17]), STR_63(CODE[1]), 
		 -> settings_integrating_reset@str_1379(BANK0[20]), settings_integrating_reset@str(BANK0[20]), STR_55(CODE[1]), settings_led_indicator@str_1362(BANK0[20]), 
		 -> settings_led_indicator@str(BANK0[20]), STR_47(CODE[1]), settings_auto_stop@str_1345(BANK0[20]), settings_auto_stop@str(BANK0[20]), 
		 -> STR_39(CODE[1]), STR_37(CODE[1]), STR_35(CODE[13]), STR_8(CODE[14]), 
		 -> STR_4(CODE[1]), STR_2(CODE[1]), 

    display@str0	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_76(CODE[1]), STR_74(CODE[9]), STR_72(CODE[9]), STR_70(CODE[9]), 
		 -> STR_68(CODE[9]), STR_66(CODE[9]), STR_64(CODE[9]), STR_62(CODE[1]), 
		 -> STR_61(CODE[1]), STR_58(CODE[17]), STR_54(CODE[1]), STR_53(CODE[1]), 
		 -> STR_50(CODE[17]), STR_46(CODE[1]), STR_45(CODE[1]), STR_42(CODE[17]), 
		 -> STR_38(CODE[1]), STR_36(CODE[1]), STR_34(CODE[15]), STR_7(CODE[15]), 
		 -> STR_3(CODE[1]), STR_1(CODE[1]), 

    data_out@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    S136ringbuf$buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_task@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _LED_indicator->i2___awdiv

Critical Paths under _main in BANK0

    _terminal_task->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _bootload->_I2C_LCD_SetCursor
    _ringbuf_put_num->___lwdiv
    _ringbuf_backspace->_ringbuf_num
    _software_init->_RTCC_from_epoch
    _ctmu_set_ratio->___lwdiv
    _sleep_task->_I2C_LCD_SetCursor
    _normal_task->_data_out
    _settings_task->_settings_integrating_reset
    _settings_led_indicator->_display
    _settings_led_indicator->_strcpy
    _settings_integrating_reset->_display
    _settings_integrating_reset->_strcpy
    _settings_auto_stop->_display
    _settings_auto_stop->_strcpy
    _settings_adjust_time->_RTCC_adjust_time_dec
    _settings_adjust_time->_RTCC_adjust_time_inc
    _RTCC_adjust_time_inc->_RTCC_from_epoch
    _RTCC_adjust_time_dec->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _port_button_task->_display
    _integrate_current->___lldiv
    _display_LCD->_display_time_1602
    _display_time_1602->_display_dec
    _display_dec->_sprintf
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Puts->_I2C_Start
    _data_out->_sprintf
    _sprintf->___lwdiv
    ___llmod->___lldiv
    _ringbuf_put_str->_ringbuf_put
    _Auto_cut->___wmul
    ___wmul->_CTMU_read
    _hardware_init->_I2C_LCD_init
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _ctmu_sampling->_button_timer_interrupt
    _button_timer_interrupt->___lwdiv
    ___lwdiv->___wmul
    _CTMU_read->___lldiv
    _USB_task->_get_string_usb
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _normal_task->_display_LCD

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_terminal_task

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  496371
                          _RTCC_task
                           _USB_task
                           _bootload
                          _ctmu_task
                      _hardware_init
                        _normal_task
                         _sleep_task
                      _software_init
                      _terminal_task
 ---------------------------------------------------------------------------------
 (1) _terminal_task                                      111   107      4  187093
                                              0 BANK1      6     2      4
                                              0 BANK4    105   105      0
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  11     1     10  159006
                                            123 BANK0     11     1     10
                               _atoi
                           _bootload
                     _ctmu_set_ratio
                    _ringbuf_put_str
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  112199
                                            114 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   58695
                                            107 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   31662
                                             75 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   15840
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    6797
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2   11232
                                             28 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _bootload                                             0     0      0    4694
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5    8778
                                             35 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1562
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _software_init                                        1     1      0   40373
                                             49 BANK0      1     1      0
                         _LED_output
                                _OUT
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                     _ctmu_set_ratio
                            _display
 ---------------------------------------------------------------------------------
 (3) _ctmu_set_ratio                                       1     1      0   15398
                                             35 BANK0      1     1      0
                          _CTMU_read
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _sleep_task                                           1     1      0   12264
                                             10 BANK0      1     1      0
                                _ADC
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                         _LED_output
                                _OUT
                            _display
 ---------------------------------------------------------------------------------
 (1) _normal_task                                          0     0      0  217419
                           _Auto_cut
                           _data_out
                            _display
                        _display_LCD
                  _integrate_current
                     _integrate_time
                   _port_button_task
                      _settings_task
 ---------------------------------------------------------------------------------
 (2) _settings_task                                        1     1      0   89840
                                             57 BANK0      1     1      0
                            _display
               _settings_adjust_time
                 _settings_auto_stop
         _settings_integrating_reset
             _settings_led_indicator
 ---------------------------------------------------------------------------------
 (3) _settings_led_indicator                              48    48      0   11375
                                              6 BANK0     48    48      0
                         _LED_output
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_integrating_reset                          51    51      0   10223
                                              6 BANK0     51    51      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_auto_stop                                  48    48      0   10192
                                              6 BANK0     48    48      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_adjust_time                                 0     0      0   52415
            _RTCC_adjust_time_cursor
               _RTCC_adjust_time_dec
               _RTCC_adjust_time_inc
            _RTCC_adjust_time_toggle
                            _display
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_toggle                              2     0      2     331
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_inc                                 8     6      2   22924
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_dec                                 8     6      2   22924
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (2) _RTCC_from_epoch                                      2     0      2   10780
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8993
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    5376
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    1368
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0     913
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     851
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_cursor                              2     0      2     641
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _port_button_task                                     1     1      0    7849
                                              6 BANK0      1     1      0
                         _LED_output
                                _OUT
                            _display
 ---------------------------------------------------------------------------------
 (2) _display                                              6     2      4    5595
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _LED_output                                           2     1      1    1152
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _integrate_time                                       3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _integrate_current                                    3     3      0    2368
                                             13 BANK0      3     3      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _display_LCD                                         85    85      0   71362
                                             90 BANK0      5     5      0
                                              0 BANK1     80    80      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                  _display_time_1602
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _display_time_1602                                    7     1      6   41472
                                             83 BANK0      7     1      6
                     _RTCC_from_RTCC
                        _display_dec
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     2      4    3917
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _display_dec                                          8     4      4   25930
                                             75 BANK0      8     4      4
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (4) _strcat                                               6     2      4    3713
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_SetCursor                                    4     3      1    2016
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Puts                                         5     3      2    1951
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _data_out                                            33    31      2   29269
                                             75 BANK0     33    31      2
                            ___lwdiv
                            ___lwmod
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             44    24     20   17333
                                             35 BANK0     40    20     20
                            ___lldiv
                            ___llmod
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8    1184
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4    7375
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     946
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _Auto_cut                                             3     3      0   11006
                                             28 BANK0      3     3      0
                                _ADC
                          _ANALOG_IN
                                _OUT
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    9966
                                             22 BANK0      6     2      4
                                _ADC (ARG)
                          _ANALOG_IN (ARG)
                          _CTMU_read (ARG)
 ---------------------------------------------------------------------------------
 (2) _OUT                                                  2     1      1     662
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _ANALOG_IN                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _hardware_init                                        0     0      0    4724
                           _ADC_init
                          _CTMU_init
                       _I2C_LCD_init
                           _I2C_init
                          _RTCC_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1257
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1541
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         3     3      0    1590
                                              7 BANK0      3     3      0
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Clear                                        1     1      0     727
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (5) _I2C_LCD_Command                                      2     2      0     727
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (6) _I2C_Start                                            2     1      1     569
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (6) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (7) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _CTMU_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ctmu_task                                            0     0      0    6946
                      _ctmu_sampling
 ---------------------------------------------------------------------------------
 (2) _ctmu_sampling                                        0     0      0    6946
                          _CTMU_read
                            ___lwdiv
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (3) _button_timer_interrupt                               5     2      3    1638
                                             35 BANK0      5     2      3
                          _CTMU_read (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    3027
                                             28 BANK0      7     3      4
                          _CTMU_read (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _CTMU_read                                            9     7      2    2281
                                             13 BANK0      9     7      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    2145
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _USB_task                                             3     3      0   16295
                                             20 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    4185
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2372
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1288
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    3026
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    5282
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    6563
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    6563
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    5267
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2090
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                14    14      0   33235
                                             30 COMRAM    14    14      0
                      _LED_indicator
                            _USB_ISR
                       _millis_timer
 ---------------------------------------------------------------------------------
 (11) _millis_timer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USB_ISR                                             0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _LED_indicator                                       4     4      0    1086
                                              8 COMRAM     4     4      0
                       i2_LED_output
                          i2___awdiv
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (12) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) i2_LED_output                                        2     1      1     210
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _USB_task
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _bootload
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
   _ctmu_task
     _ctmu_sampling
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _button_timer_interrupt
         _CTMU_read (ARG)
           ___lldiv
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
   _hardware_init
     _ADC_init
     _CTMU_init
     _I2C_LCD_init
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_init
     _RTCC_init
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _normal_task
     _Auto_cut
       _ADC
       _ANALOG_IN
       _OUT
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _data_out
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _display
     _display_LCD
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Puts
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_SetCursor
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _display_time_1602
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _display_dec
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
           _strcat
         _strcat
         _strcpy
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _integrate_current
       ___lldiv
     _integrate_time
     _port_button_task
       _LED_output
       _OUT
       _display
     _settings_task
       _display
       _settings_adjust_time
         _RTCC_adjust_time_cursor
         _RTCC_adjust_time_dec
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
         _RTCC_adjust_time_inc
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
         _RTCC_adjust_time_toggle
         _display
       _settings_auto_stop
         _display
         _strcpy
       _settings_integrating_reset
         _display
         _strcpy
       _settings_led_indicator
         _LED_output
         _display
         _strcpy
   _sleep_task
     _ADC
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _LED_output
     _OUT
     _display
   _software_init
     _LED_output
     _OUT
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     _RTCC_from_epoch
       _caltime_to_RTCC
         _d_to_x
           ___awdiv
       _epoch_to_caltime
         _get_quot_rem
           ___lldiv
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
         _month_length
           ___awmod
     _ctmu_set_ratio
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _display
   _terminal_task
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _atoi
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit
       _bootload
         _I2C_LCD_Clear
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
       _ctmu_set_ratio
         _CTMU_read
           ___lldiv
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _strcmp
       _terminal_time
         _atoi
           ___wmul
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___wmul (ARG)
                   _ADC (ARG)
                   _ANALOG_IN (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
               _isdigit (ARG)
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _LED_indicator
     i2_LED_output
     i2___awdiv
     i2___lwdiv
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _millis_timer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     7D0      36       60.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100     69      69      14       41.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      E4      12       89.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C2      10       75.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     50      E4       7       89.1%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     86      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      58       1       93.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3EB       8        0.0%
DATA                 0      0     BBB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Nov 11 00:58:51 2015

             ?_settings_integrating_reset 002D                           get_string_usb@s 006D  
                              _USB_SD_Ptr FA79                              ?_display_LCD 002D  
                  _settings_led_indicator 258A                  __end_of_port_button_task 329C  
                      __size_of_I2C_Start 0030                 settings_adjust_time@state 0127  
                         _ringbuf_put_num 5D94                              ?_display_dec 00AB  
                         _ringbuf_put_str 61A6                              ___awdiv@sign 0065  
                                      _ms 0106                        __size_of_ANALOG_IN 002C  
                           _USBDeviceInit 329C                       ___wmul@multiplicand 0078  
                      i2___lwdiv@dividend 002D                         ??_RTCC_from_epoch 0091  
                      __size_of_CDCInitEP 0070                              __CFG_CP0$OFF 000000  
             settings_led_indicator@state 012A      USER_USB_CALLBACK_EVENT_HANDLER@event 0039  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 003B                                       l113 3244  
                                     l130 567C                                       l124 560A  
                                     l144 4FFE                                       l129 5668  
             __end_of_USBStdGetDscHandler 354C                                       _ADC 6906  
                                     l530 254E                                       l276 601E  
                                     l292 5FAC                                       l508 279C  
                                     l278 602C                                       l294 5FBA  
                                     l279 603A                                       l295 5FC8  
                                     l651 6C72                                       l636 68F6  
                                     l732 6706                                       l468 4938  
                                     l556 2B6C                                       l469 48D8  
                                     l590 122C                                       l486 29D8  
                                     l822 5D96                                       l583 1128  
                                     l584 1150                                       l904 4A52  
                                     l585 1176                                       l737 657A  
                                     l586 119C                                       l754 6926  
                                     l587 11C0                                       l588 11E4  
                                     _BDT 000D00                                       l589 1208  
                                     l917 2D2E                                       l783 51EC  
                                     l980 16A0                                       l898 53CE  
                                     l995 1944                                       _ISR 1008  
                                     _UIE 000F36                                       _UIR 000F62  
                                     _OUT 5FEE                         get_string_usb@len 006F  
                           ?_get_quot_rem 0079                        caltime_to_epoch@tm 0079  
                              _USBSuspend 6A14                                       _now 0172  
                       _RTCC_from_caltime 6AE6                              ___awmod@sign 0065  
                    USBStdSetCfgHandler@i 0041                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 354C  
                              _TXSTA1bits 000FAD                            _USBDeviceState 0014  
              __end_of_settings_auto_stop 2A14                   _RTCC_adjust_time_cursor 3C7A  
                      ?_RTCC_from_caltime 008F                     ??_USBCtrlTrfRxService 002D  
                            _I2C_LCD_Puts 5A4E                  __size_ofi2_USBDeviceInit 0144  
                          ??_getsUSBUSART 006A                                      ?_ADC 0060  
                USBEnableEndpoint@options 0035                   _RTCC_adjust_time_toggle 6676  
                       ??_I2C_LCD_Command 0064                                      ?_ISR 002D  
                  __end_of_get_string_usb 65EE                          _terminal_at_hand 6332  
                                    ?_OUT 0060                              _I2C_LCD_init 5C84  
                             ?_LED_output 0060                                      l1020 6728  
                                    l1060 67FE                                      l1253 6C0E  
                                    l1433 3312                                      l2049 4250  
                                    l1285 5B1E                                      l2309 6328  
                                    l2246 53BC                                      l2256 591A  
              USBConfigureEndpoint@handle 0033                                      l1494 67C8  
                                    l1495 67C6                                      l2299 5EFC  
                                    l1838 0272                                      l1791 2E92  
                                    OUT@b 0061                                      l1796 2EEE  
                                    l8021 12F0                                      l8013 12A0  
                                    l8005 1250                                      l8033 136E  
                                    l8025 131A                                      l8017 12C8  
                                    l8009 1278                                      l8029 1344  
                                    l8037 1396                        __CFG_WPFP$PAGE_127 000000  
                                    STR_1 FFE6                                      STR_2 FFE6  
                                    STR_3 FFE6                                      STR_4 FFE6  
                                    STR_5 FE92                                      STR_6 FF0C  
                                    STR_7 FEE2                                      STR_8 FEF1  
                                    STR_9 FF25                     ??_USBCtrlTrfTxService 002D  
                                    u8240 1306                                      u8250 1330  
                                    u8260 135A                                      u8270 1384  
                                    _UCFG 000F39                                      _UEP0 000F26  
                                    _UEP1 000F27                                      _UEIE 000F37  
                                    _UEIR 000F63                                      _UCON 000F65  
                            __CFG_WDTPS$8 000000                           _CDCDataInHandle 0118  
                             display@item 0064                       ??_RTCC_from_caltime 0091  
                             display@str0 0060                               display@str1 0062  
  USBStdFeatureReqHandler@current_ep_data 0044                                      _pDst 011C  
                                    _atoi 4168                                      _main 60D0  
                ??i2_USBTransferOnePacket 0031                  button_timer_interrupt@bt 0083  
                           _software_init 3F7C                                      _port 012D  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                      i2___lwdiv@quotient 0031                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                             _BaudRateGen 020A                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                        __end_of_I2C_Send 6C7A                           _USBDeviceAttach 679A  
                                    btemp 0059                    __CFG_DSWDTOSC$T1OSCREF 000000  
                         __end_of_USB_ISR 6CAC                          __end_of_I2C_Stop 6CA6  
                                    pclat 000FFA                          __end_of_I2C_init 6C8C  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 10E0                          __end_of_ADC_init 6B9E  
                           __CFG_IESO$OFF 000000                RTCC_adjust_time_dec@i_3309 0097  
                      __size_of_CTMU_init 0028                        __size_of_CTMU_read 00C2  
              __end_of_USBCheckStdRequest 434C                    ??_USBCtrlTrfOutHandler 002F  
                          terminal_task@i 0468                              ___param_bank 000010  
               ??_USBStdFeatureReqHandler 0041                             _I2C_LCD_Clear 6C2E  
                         ??_terminal_task 0195                           ??_terminal_time 00DA  
                                   ??_ADC 0062                        terminal_task@ascii 0467  
                                   ADC@ch 0063                             ADC_init@p_ref 0060  
                                   ??_ISR 004B                    __size_of_I2C_IdleCheck 001E  
                                   ??_OUT 0061                  ??_USBStdGetStatusHandler 002D  
                            print_time@tx 00AB                         _terminal_data_out 0023  
                          ?_USBDeviceInit 002D                         ??_RTCC_to_caltime 0064  
                           __CFG_PLLDIV$2 000000                              _BAUDCON1bits 000F7E  
                                   l10021 576E                                     l10101 5286  
                                   l10031 579E                                     l10111 52B6  
                                   l10033 57A4                                     l10041 57D6  
                                   l10025 577E                                     l11001 0CD2  
                                   l10203 1C5E                                     l10107 52A4  
                                   l10123 52F4                                     l11003 0D0A  
                                   l10045 57EA                                     l10037 57C8  
                                   l10029 5792                                     l10141 5356  
                                   l10109 52B0                                     l11101 2830  
                                   l10207 1CC2                                     l10223 6A8C  
                                   l10311 01CE                                     l10127 5308  
                                   l10119 52E6                                     l11103 2848  
                                   l11007 0D52                                     l10073 484C  
                                   l10057 43C4                                     l10137 5340  
                                   l10241 58C4                                     l10313 01E6  
                                   l10305 01B0                                     l11041 15CC  
                                   l11113 287E                                     l10083 5F3E  
                                   l10139 5350                                     l10155 6BC2  
                                   l10251 61A8                                     l10403 04D8  
                                   l10307 01BC                                     l10323 0236  
                                   l11043 15E4                                     l11131 2942  
                                   l11115 2884                                     l11211 2706  
                                   l12005 4F3C                                     l10165 4D8E  
                                   l10149 53AA                                     l10245 5908  
                                   l10237 58AE                                     l10341 02DE  
                                   l10405 04EE                                     l11109 2858  
                                   l11301 251A                                     l12013 5DA6  
                                   l10079 5F18                                     l10191 1BE0  
                                   l10255 61E0                                     l10239 58BE  
                                   l10319 021E                                     l10407 050E  
                                   l10271 0048                                     l10095 5270  
                                   l10503 2DA0                                     l11135 297C  
                                   l11143 29A4                                     l11127 2938  
                                   l11119 288E                                     l11151 29C8  
                                   l11303 2538                                     l11215 2740  
                                   l11223 2768                                     l11207 26FC  
                                   l11231 278C                                     l12103 568A  
                                   l12031 5A04                                     l12023 5E08  
                                   l10185 1BD0                                     l12041 6944  
                                   l10353 032A                                     l10329 0294  
                                   l10265 002C                                     l10505 2DA4  
                                   l11065 490C                                     l11049 48A2  
                                   l11073 4928                                     l11161 2A10  
                                   l11137 2994                                     l11145 29C2  
                                   l11241 27D4                                     l11217 2758  
                                   l11225 2786                                     l12121 4F66  
                                   l12017 5DC8                                     l10187 1BD6  
                                   l10363 0384                                     l10339 02D8  
                                   l10267 003E                                     l10259 000E  
                                   l10611 5AAE                                     l10531 639C  
                                   l11083 4976                                     l11059 48F2  
                                   l11251 2346                                     l11171 259E  
                                   l12211 406E                                     l10197 1C3A  
                                   l11421 2E68                                     l11341 32F2  
                                   l10373 03B4                                     l10381 03DC  
                                   l10365 038E                                     l10285 0100  
                                   l10277 0080                                     l10605 5A7C  
                                   l10613 5AD6                                     l10533 63A2  
                                   l10509 2DAC                                     l11093 27EC  
                                   l11261 23A8                                     l11309 253E  
                                   l11181 25FA                                     l12117 4F5C  
                                   l10199 1C3E                                     l11423 2E72  
                                   l12055 65B6                                     l12039 6940  
                                   l10383 03E8                                     l10359 034C  
                                   l10295 0138                                     l10287 0106  
                                   l10535 63B2                                     l10711 3CF2  
                                   l10703 3CA2                                     l11319 2586  
                                   l11271 23DE                                     l11255 2350  
                                   l11247 2334                                     l11191 2630  
                                   l11175 25A8                                     l11167 258C  
                                   l12127 4F88                                     l12143 5002  
                                   l10631 4170                                     l10623 643E  
                                   l11433 2E9E                                     l11513 4672  
                                   l11505 4634                                     l12057 65BA  
                                   l11353 3320                                     l11361 3338  
                                   l11337 32E8                                     l10297 0144  
                                   l10537 63BE                                     l11601 3148  
                                   l11097 27F6                                     l11089 27DA  
                                   l11273 23E4                                     l11193 2636  
                                   l12073 5634                                     l12137 4FC6  
                                   l10641 41B6                                     l10617 63F4  
                                   l12305 10D8                                     l12241 0DC2  
                                   l12313 60DA                                     l11427 2E82  
                                   l11515 467A                                     l11523 46DC  
                                   l11507 463E                                     l11531 62E4  
                                   l10395 042E                                     l10299 014A  
                                   l10571 3828                                     l11611 31C6  
                                   l10723 3D6A                                     l10715 3D1A  
                                   l10707 3CCA                                     l10811 1AE8  
                                   l11259 2390                                     l11267 23B8  
                                   l11179 25E2                                     l11187 260A  
                                   l10619 6400                                     l12251 0E70  
                                   l11453 2F1C                                     l11461 2F40  
                                   l11445 2EF2                                     l10661 51B8  
                                   l10901 5EB8                                     l11365 3358  
                                   l11533 62F0                                     l10397 043E  
                                   l10389 040E                                     l10557 5FD6  
                                   l10565 37FA                                     l11621 3224  
                                   l11605 3178                                     l10821 1BA0  
                                   l10741 1720                                     l10733 16C8  
                                   l11293 24F2                                     l11285 24A8  
                                   l11277 23EE                                     l11197 2640  
                                   l11701 2BB6                                     l12085 5656  
                                   l12077 5644                                     l10645 41C8  
                                   l10629 416A                                     l12245 0DEC  
                                   l11463 2F4C                                     l11471 2F70  
                                   l11439 2ED6                                     l11519 46AA  
                                   l10911 5EEE                                     l10903 5EBE  
                                   l11375 33C8                                     l11535 62F6  
                                   l10575 3854                                     l11623 3228  
                                   l11631 3248                                     l10719 3D42  
                                   l10815 1B54                                     l11295 250A  
                                   l11711 2BE2                                     l11703 2BBE  
                                   l12079 5648                                     l12191 3FC0  
                                   l10647 4212                                     l12351 6130  
                                   l11481 2F98                                     l11473 2F7A  
                                   l10657 51AE                                     l11369 3362  
                                   l10921 69C6                                     l11561 3A36  
                                   l11545 390E                                     l10585 38C4  
                                   l11625 322C                                     l10809 1AE0  
                                   l10817 1B6C                                     l10761 1844  
                                   l10753 17D6                                     l10745 17A4  
                                   l10737 16F4                                     l11289 24B2  
                                   l11721 2C06                                     l10649 4218  
                                   l12281 0FEA                                     l12273 0F62  
                                   l12265 0F10                                     l12257 0EBE  
                                   l12249 0E6C                                     l11483 2FBC  
                                   l10931 69CE                                     l11539 631A  
                                   l10827 676C                                     l11571 3E90  
                                   l10579 3884                                     l10771 18FC  
                                   l11715 2BF4                                     l11707 2BD0  
                                   l11643 2A16                                     l12195 3FE4  
                                   l11803 210C                                     l12283 1014  
                                   l12275 0F66                                     l12267 0F14  
                                   l12259 0EC2                                     l12355 6138  
                                   l10861 685C                                     l10925 69CA  
                                   l10917 69C2                                     l11549 3918  
                                   l10829 6778                                     l10589 3902  
                                   l11629 3232                                     l11637 3296  
                                   l10765 18B0                                     l10749 17CC  
                                   l11661 2A6C                                     l11725 2C2A  
                                   l10853 6378                                     l11821 21DE  
                                   l11805 2124                                     l12293 1062  
                                   l11479 2F92                                     l11559 3A14  
                                   l10839 618C                                     l11751 069C  
                                   l11735 055C                                     l11567 3E86  
                                   l11591 62CA                                     l11583 6274  
                                   l10791 19C4                                     l10783 196C  
                                   l10759 183C                                     l10767 18C8  
                                   l11671 2A98                                     l11663 2A72  
                                   l12199 3FEE                                     l11831 2272  
                                   l12287 103E                                     l11497 6B54  
                                   l10689 520E                                     l10857 684A  
                                   l11753 072A                                     l11745 05BE  
                                   l11729 0522                                     l11577 3F76  
                                   l10697 669E                                     l11681 2AEA  
                                   l11673 2A9E                                     l11649 2A40  
                                   l11841 22B2                                     l11825 2206  
                                   l12297 10A2                                     l12289 1046  
                                   l10875 49CC                                     l10867 4998  
                                   l11931 5CE0                                     l11923 5CAC  
                                   l11915 5C8A                                     l11755 0772  
                                   l11771 09A6                                     l11587 627E  
                                   l10795 1A48                                     l10787 1998  
                                   l11683 2B0A                                     l11659 2A68  
                                   l10971 0A7C                                     l11843 22CA  
                                   l11819 21DA                                     l11861 671E  
                                   l10949 6048                                     l11597 313E  
                                   l11685 2B2A                                     l11677 2AAA  
                                   l11669 2A94                                     l10981 0B44  
                                   l10965 0A28                                     l10887 4A32  
                                   l11935 5CF8                                     l11927 5CD6  
                                   l11919 5C94                                     l11943 68BC  
                                   l10799 1A70                                     l11695 2B80  
                                   l11679 2ACA                                     l10991 0C0A  
                                   l10983 0B7C                                     l10975 0AC4  
                                   l10967 0A34                                     l11847 2312  
                                   l11873 657C                                     l11785 302A  
                                   l11769 0992                                     l11777 09C4  
                                   l11689 2B4A                                     l10977 0AFC  
                                   l10899 5EAC                                     l10995 0C52  
                                   l10987 0BC4                                     l11797 311E  
                                   l11789 3034                                     l10997 0C8A  
                                   l11997 4F20                                     l11999 4F36  
               __end_of_RTCC_from_caltime 6B0C                                     ?_atoi 007C  
                                   ?_main 002D                   __size_of_put_string_usb 002E  
                          ??_get_quot_rem 007D                           __end_of___awdiv 5312  
                                   _ADRES 000FC3                                     STR_10 FEC3  
                                   STR_11 FFD9                                     STR_12 FFFD  
                                   STR_20 FF53                                     STR_21 FFDE  
                                   STR_13 FBE6                                     STR_30 FFBD  
                                   STR_14 FF70                                     STR_22 FE1D  
                                   STR_15 FF79                                     STR_31 FF48  
                                   STR_23 FDBD                                     STR_32 FE44  
                                   STR_16 FFEE                                     STR_24 FFC9  
                                   STR_40 FFAB                                     STR_25 FFD2  
                                   STR_41 FFB1                                     STR_17 FF31  
                                   STR_33 FE01                                     STR_18 FFE6  
                                   STR_34 FEE2                                     STR_50 FE81  
                                   STR_42 FE81                                     STR_26 FE4D  
                                   STR_51 FFAB                                     STR_43 FFAB  
                                   STR_19 FFC3                                     STR_35 FEFF  
                                   STR_27 FDE1                                     STR_36 FFE6  
                                   STR_60 FFA5                                     STR_52 FFB1  
                                   STR_44 FFB1                                     STR_28 FE35  
                         __end_of___awmod 57F4                                     STR_61 FFE6  
                                   STR_53 FFE6                                     STR_45 FFE6  
                                   STR_37 FFE6                                     STR_29 FDBB  
                                   STR_62 FFE6                                     STR_54 FFE6  
                                   STR_46 FFE6                                     STR_38 FFE6  
                                   STR_70 FF67                                     STR_63 FFE6  
                                   STR_55 FFE6                                     STR_47 FFE6  
                                   STR_39 FFE6                                     STR_71 FE70  
                                   STR_48 FFAB                                     STR_72 FF67  
                                   STR_56 FFB7                                     STR_64 FF67  
                                   STR_49 FFB1                                     STR_81 FFF9  
                                   STR_57 FFA5                                     STR_73 FEB3  
                                   STR_65 FE5F                                     STR_74 FF67  
                                   STR_66 FF67                                     STR_58 FE81  
                                   STR_90 FFF5                                     STR_59 FFB7  
                                   STR_91 FF8F                                     STR_67 FE5F  
                                   STR_75 FED3                                     STR_76 FFE6  
                                   STR_68 FF67                                     STR_84 FFFB  
                                   STR_92 FF5E                                     STR_77 FFE6  
                                   STR_93 FFFB                                     STR_69 FEA3  
                                   STR_94 FF65                                     STR_78 FDFC  
                                   STR_86 FFF7                                     STR_87 FFE6  
                                   STR_79 FF64                                     STR_95 FFF7  
                                   STR_88 FFF9                                     STR_96 FFE3  
                                   STR_97 FFE3                                     STR_89 FFF9  
       __size_of_USBCtrlEPServiceComplete 00F4                           __end_of___lldiv 53CE  
                                   u11200 483E                                     u12000 38B8  
                                   u11210 4840                                     u12010 38E6  
                                   u11220 4898                                     u11230 489A  
                                   u12007 38AE                                     u11160 47F6  
                                   u12040 5A9E                                     u12017 38DC  
                                   u11170 47F8                                     u12050 5AD0  
                                   u11180 4828                           ___awdiv@divisor 0062  
                                   u12047 5A94                                     u14000 3DB4  
                                   u13040 26AA                           __end_of___llmod 592C  
                                   u12057 5AC6                    __end_of_USBDeviceTasks 3690  
                                   u14010 3DB6                                     u12180 5246  
                                   u14020 3DF4                                     u11198 482C  
                                   u13310 2E58                                     u14030 3DF6  
                                   u11550 0184                                     u14040 3E34  
                                   u12600 6028                                     u11480 61D2  
                                   u12185 5238                                     u14050 3E36  
                                   u11490 6202                                     u13058 26AE  
                                   u14060 3E74                                     u12620 6036  
                                   u11900 5FB6                                     u11557 017A  
                                   u13318 2E5C                                     u14070 3E76  
                                   u11590 0210                                     _LATB2 007C52  
                                   u11487 61C8                                     _LATA5 007C4D  
                                   u12640 6044                                     u11920 5FC4  
                                   _LATC2 007C5A                                     _LATA6 007C4E  
                                   u11497 61F8                                     _LATA7 007C4F  
                                   u13450 4624                                     _LATB6 007C56  
                                   u14155 6B8E                                     _LATB7 007C57  
                                   u14156 6B90                                     u11860 63E8  
                                   u13620 62A6                                     u11940 5FD2  
                                   u11597 0206                                     u11790 6902  
                                   u13535 3940                                     u13560 3A04  
                                   u12920 28F8                                     u13458 4628  
               ?_USBCtrlEPServiceComplete 002D                                     u12595 6018  
                                   u11867 63DE                                     u12596 601C  
                                   u13820 05FE                                     u11980 3876  
                                   u13830 0666                                     u13590 3EB8  
                                   u13831 0662                                     u11895 5FA6  
                                   u13840 0668                                     u11896 5FAA  
                                   u12938 28FC                                     u11987 386C  
                                   u13828 0602                                     u14907 51E2  
                                   u14847 5AAA                                     u14857 5C9C  
                                   u14867 5CE8                                     u14877 6C3C  
                                   u14887 6804                                     u14897 51D8  
                         __end_of___lwdiv 5F06                           __end_of___lwmod 6332  
                           __CFG_WDTEN$ON 000000                                     i2l417 10A4  
                                   i2l292 6234                                     i2l294 6240  
                                   i2l295 624C                                     _UADDR 000F38  
                         ___awdiv@counter 0064                           ??_hardware_init 006A  
                                   _TMR1H 000FCF                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _USTAT 000F64                    __size_of_ctmu_sampling 0102  
                  __size_of_LED_indicator 0126        __size_of_USBCtrlEPAllowStatusStage 00C4  
                     ___lmul@multiplicand 0071                            __CFG_FCMEN$OFF 000000  
         __end_of_USBCtrlEPAllowDataStage 5892                                     _sd000 FBE2  
                                   _sd001 FB3C                                     _sd002 FB70  
                         __end_of_display 3908                      caltime_to_epoch@year 007F  
                              i2memset@p1 002D                           __end_of_dpowers FA79  
                         ??_settings_task 0099                           __end_of_isdigit 6A96  
                      __size_of_RTCC_init 0030                           ?_get_string_usb 006D  
                      __size_of_RTCC_task 003A                          ringbuf_delete@rb 0060  
                                   atoi@a 0081                                     atoi@s 007C  
                       __end_of_I2C_Start 6906                 RTCC_adjust_time_cursor@tm 0060  
                            display_dec@s 00AF               settings_task@settings_state 012B  
                                   tablat 000FF5                         __end_of_ANALOG_IN 69E8  
                          ?_software_init 002D                                     plusw2 000FDB  
                       __end_of_CDCInitEP 60D0                          __end_of_USB_init 6BF8  
                        __end_of_USB_task 5B6A                __size_of_ringbuf_backspace 008E  
                                   status 000FD8                           __end_of_sprintf 051C  
                        __end_ofi2_memset 6A6C                        __size_ofi2___awdiv 0084  
                       month_length@month 0066                               CTMU_read@ch 0070  
                 __end_of_ringbuf_put_num 5E16                   __end_of_ringbuf_put_str 620A  
                      __size_ofi2___lwdiv 0052                       terminal_task@i_3917 0466  
                         putUSBUSART@data 0060              __size_of_USBStdSetCfgHandler 00E2  
                          ?_I2C_LCD_Clear 002D                           __initialization 5E16  
                         terminal_task@rx 0193                           terminal_task@tx 0191  
                         terminal_time@tx 00D2                              __end_of_atoi 425A  
                            __end_of_main 613C                     _control_signal_bitmap 0125  
                        __end_of_Auto_cut 3A3C                       ringbuf_init@bufsize 0064  
                        RTCC_from_RTCC@tm 0086                      _settings_adjust_time 48A0  
              RTCC_adjust_time_inc@i_3279 0097                       __size_of_LED_output 0072  
                ctmu_set_ratio@percentage 0083                 __size_of_USBCtrlEPService 00CE  
                           print_time@str 00AD                 RTCC_adjust_time_toggle@tm 0060  
                                  ??_atoi 007E                                    ??_main 00E6  
                         LED_output@value 0060           settings_led_indicator@strp_1363 0091  
                           __activetblptr 000003                           ?_USBDeviceTasks 002D  
               ??_RTCC_adjust_time_cursor 0062                               ?_USBSuspend 002D  
               ??_RTCC_adjust_time_toggle 0062                                    ISR@cnt 000D  
                       __end_of_CTMU_init 6AE6                         __end_of_CTMU_read 5254  
                            _cdc_mem_type 0124                                    _BCL1IF 007D0B  
                           _I2C_IdleCheck 6BBE                   __end_of_USBDeviceAttach 67D2  
                        _CDCDataOutHandle 0007                         _getsUSBUSART$5927 006B  
                        ___llmod@dividend 006D                                    STR_100 FD98  
                                  STR_101 FF82                                    STR_110 FDFF  
                                  STR_102 FF3D                                    STR_103 FFEC  
                                  STR_111 FFE7                         _I2C_LCD_SetCursor 6990  
                                  STR_112 FE4B                                    STR_104 FFEB  
                                  STR_113 FFD4                                    STR_105 FF19  
                                  STR_106 FFE9                                    STR_114 FFF3  
                                  STR_107 FFCF                                    STR_115 FF98  
                                  STR_116 FFC1                                    STR_108 FFF1  
                                  STR_109 FF9F                                    STR_117 FF91  
                                  STR_118 FF8A                                    _EECON2 000FA7  
                                  _ANCON0 000F48                                    _ANCON1 000F49  
                     display_time_1602@tm 00B3                          ___awdiv@dividend 0060  
                               ??_USB_ISR 004B                        I2C_LCD_Command@ans 0065  
                         getsUSBUSART@len 0069                     __size_of_CDCTxService 018C  
                                  i2l1433 36F6                                    i2l1445 357C  
                                  i2l1519 40EE                                    i2l1455 3616  
                                  i2l1632 5182                                    i2l1456 368C  
                                  i2l1457 3628                                    i2l1661 1E6E  
                                  i2l1582 5498                                    i2l1646 426A  
                                  i2l1655 42CE                                    i2l1680 2032  
                                  i2l1737 4B86                                    i2l1585 5526  
                                  i2l1586 54A8                                    i2l2299 6546  
                                  i2l1739 4BD0                                    i2l1587 54AE  
                                  i2l1595 6630                                    i2l7021 5052  
                                  i2l7105 3410                                    i2l6411 55E0  
                                  i2l7131 3534                                    i2l7051 5842  
                                  i2l6333 598E                                    i2l7213 1FCC  
                                  i2l7125 3524                                    i2l7117 34C2  
                                  i2l7109 3428                                    i2l6343 66C2  
                                  i2l7223 2012                                    i2l7207 1F98  
                                  i2l7127 352C                                    i2l7119 34CA  
                                  i2l7143 54CE                                    i2l7071 4562  
                                  i2l7055 585E                                    i2l7241 209E  
                                  i2l7233 204E                                    i2l7225 201E  
                                  i2l7209 1FB2                                    i2l7153 550E  
                                  i2l7081 4596                                    i2l6347 66D0  
                                  i2l7171 1E6A                                    i2l7075 456A  
                                  i2l7403 42EA                                    i2l7309 4114  
                                  i2l7343 3BB6                                    i2l6391 555A  
                                  i2l6471 4B54                                    i2l7239 2092  
                                  i2l7191 1F28                                    i2l7407 4308  
                                  i2l7337 3B92                                    i2l7193 1F2A  
                                  i2l7185 1EE4                                    i2l7097 45E0  
                                  i2l7355 3C14                                    i2l6643 6970  
                                  i2l6637 6964                                    i2l7197 1F46  
                                  i2l6733 6A5A                                    i2l7381 4280  
                                  i2l9213 35C8                                    i2l9303 6258  
                                  i2l6663 470E                                    i2l7359 3C2E  
                                  i2l6399 5584                                    i2l6487 4BB2  
                                  i2l6479 4B74                                    i2l6495 4BDA  
                                  i2l6639 696A                                    i2l7391 42A2  
                                  i2l9223 35D8                                    i2l9207 35A2  
                                  i2l9313 5D24                                    i2l6673 473E  
                                  i2l6681 4778                                    i2l7801 5102  
                                  i2l6729 6A4A                                    i2l7393 42A8  
                                  i2l7377 4274                                    i2l7289 4098  
                                  i2l6683 4780                                    i2l6691 47BA  
                                  i2l6659 4704                                    i2l7803 5106  
                                  i2l7379 427A                                    i2l8531 68A0  
                                  i2l9243 3620                                    i2l9325 5D4A  
                                  i2l9341 5D7C                                    i2l7821 5168  
                                  i2l7389 429C                                    i2l8621 36D2  
                                  i2l9237 360C                                    i2l9229 35E4  
                                  i2l9327 5D52                                    i2l9319 5D34  
                                  i2l7815 5148                                    i2l9263 366C  
                                  i2l9345 5D8A                                    i2l9337 5D72  
                                  i2l9329 5D56                                    i2l8553 662C  
                                  i2l8529 689E                                    i2l8625 36DA  
                                  i2l9265 3688                                    i2l9257 364E  
                                  i2l9185 3574                                    i2l9177 3564  
                                  i2l9355 6514                                    i2l7827 518C  
                                  i2l9357 651C                                    i2l9373 3A40  
                                  i2l8581 4E44                                    i2l8573 4DFE  
                                  i2l8653 3742                                    i2l8637 3704  
                                  i2l8645 371C                                    i2l9367 653C  
                                  i2l9359 6520                                    i2l9383 3A9A  
                                  i2l9199 3592                                    i2l9377 3A48  
                                  i2l8569 4DF6                                    i2l8585 4E5E  
                                  i2l8649 373A                                    i2l7787 64A4  
                                  i2l7779 645C                                    i2l8587 4E64  
                                  i2l8659 379E                                    i2l9389 3B18  
                                  i2l9397 3B5E                                    i2l9663 1052  
                                  i2l9673 106E                                    i2l9679 1086  
                                  i2l9689 109C                        ?_I2C_LCD_SetCursor 0066  
                                  _RCREG1 000FAF                             CDCTxService@i 006A  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SSP1IF 007CF3                            __CFG_WPCFG$OFF 000000  
      settings_integrating_reset@str_1379 007E                                    _TXREG1 000FAE  
                i2USBTransferOnePacket@ep 0031                         ??i2_USBDeviceInit 0035  
         __size_ofi2_USBTransferOnePacket 00BA                          __end_of_data_out 3138  
                          __CFG_WPDIS$OFF 000000                  __end_of_is_usb_available 6C14  
                           _ctmu_sampling 3D7E                             _LED_indicator 3A3C  
                      epoch_to_caltime@tm 0081                        _terminal_task$6731 0464  
                    get_string_usb@rx_len 0072                               LED_output@b 0061  
                       _shortPacketStatus 0022                       ??_I2C_LCD_SetCursor 0067  
                          __CFG_XINST$OFF 000000                         ?_epoch_to_caltime 0081  
                 __size_of_ctmu_set_ratio 00E6                          ringbuf_put_num@i 0088  
                         USBDeviceTasks@i 004A                     caltime_to_epoch@epoch 0081  
                        ??_integrate_time 0060               USBStdFeatureReqHandler@pUEP 0042  
                      _terminal_time$6732 00DA                  USBTransferOnePacket@data 0061  
              USBCtrlTrfInHandler@lastDTS 002E                           ??_USBDeviceInit 0068  
                            ?_ringbuf_pop 0068                              ?_ringbuf_num 0060  
                            ?_ringbuf_put 0068                     caltime_to_epoch@month 0085  
                        __end_of_bootload 6676                                    ___lmul 5F06  
                            ?_putUSBUSART 0060                           _caltime_to_RTCC 4A52  
                                  ___wmul 680A                        ??_epoch_to_caltime 0083  
                               ??___awdiv 0064                                 ??___awmod 0064  
            __end_of_RTCC_adjust_time_dec 1BB6                     ?_settings_adjust_time 002D  
            __end_of_RTCC_adjust_time_inc 1912                                    _d_to_x 6A96  
                               ??___lldiv 0068                      __end_of_getsUSBUSART 46E2  
                    ringbuf_put_num@value 0085                              ?_timer0_init 002D  
                               ??___llmod 0075                         __end_of_RTCC_init 68D6  
                            ?_timer1_init 0060                                 ??___lwdiv 0080  
                       __end_of_RTCC_task 6762                                 ??___lwmod 0064  
                            ?_timer3_init 002D                              ?_normal_task 002D  
                       _USBEnableEndpoint 66B2           __size_of_USBStdGetStatusHandler 00BA  
                                  _ctmu_m 0027                                    _memset 6840  
                                  clear_0 5E1E                                    clear_1 5E30  
                                  clear_2 5E3C                           put_string_usb@s 006C  
                                  clear_3 5E48                                    clear_4 5E54  
                                  clear_5 5E60                           __CFG_CLKOEC$OFF 000000  
                        ___awdiv@quotient 0066                           ___awmod@divisor 0062  
                    __size_of_display_LCD 04C4                           ___awmod@counter 0064  
                      _ctmu_sampling_flag 001A                                    _x_to_d 6B9E  
                      ?_USBEnableEndpoint 0035                __size_of_RTCC_from_caltime 0026  
                                  _usb_rx 02B2                                    _usb_tx 02BA  
                    __size_of_display_dec 006A                                    _strcat 6392  
                                  _strcmp 63F2                                    _strcpy 6762  
                               ??_display 0064                            i2___awdiv@sign 0032  
           __size_of_USBTransferOnePacket 00D8                 __size_of_caltime_to_epoch 028E  
                      _terminal_operation 20C4               settings_auto_stop@strp_1346 0091  
                               ??_isdigit 0060                         __end_ofi2___awdiv 5D94  
                               ?_I2C_Send 002D                              _CDCTxService 2E34  
                               ?_I2C_Stop 002D                         __end_ofi2___lwdiv 6550  
                            __mediumconst FA50                             _cut_time_flag 001B  
                               ?_I2C_init 002D                 __end_of_I2C_LCD_SetCursor 69BC  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                                 ?_ADC_init 002D  
                     ??_USBEnableEndpoint 0036                            ?_I2C_IdleCheck 002D  
                               ??_sprintf 0097                       ?_terminal_operation 00DB  
                           ?i2_LED_output 002D                               _CtrlTrfData 000D38  
                         ??_software_init 0091                      _controlTransferState 0018  
                    __CFG_LS48MHZ$SYS48X8 000000                                __accesstop 0060  
                 __end_of__initialization 5E84                              __pbssBIGRAMl 0469  
                            CTMU_read@sum 0071                             ?_millis_timer 002D  
                    __end_of_get_quot_rem 4CD2                            ?_ctmu_sampling 002D  
                          ?_LED_indicator 002D                             ___rparam_used 000001  
                         ??_I2C_LCD_Clear 0066                           _RTCC_from_epoch 6C14  
                __size_of_USBStallHandler 0046                          ?_ringbuf_put_num 0083  
                        ?_ringbuf_put_str 006F                   ?_settings_led_indicator 002D  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 002C  
                        LED_indicator@cnt 010A                          terminal_task@op0 0236  
                        terminal_task@op1 024F                          terminal_task@op2 0268  
                        terminal_task@op3 0281                          terminal_task@buf 0400  
                          __pcstackCOMRAM 002D                 __end_of_USBEnableEndpoint 66EE  
                           __end_of_sd000 FBE6                             __end_of_sd001 FB70  
                           __end_of_sd002 FBA4                          terminal_time@op0 00D4  
                        terminal_time@op1 00D6                          terminal_time@op2 00D8  
                            __pidataBANK1 6CAC            settings_led_indicator@str_1362 007B  
                    ??_terminal_operation 00E5                  __end_of_terminal_at_hand 6392  
        __size_of_USBCtrlEPAllowDataStage 009E             __size_of_USBConfigureEndpoint 0094  
                       ?_port_button_task 002D               __end_of_USBCtrlTrfInHandler 5192  
                         __CFG_DSWDTPS$G2 000000                           _I2C_LCD_Command 67D2  
                          _put_string_usb 6934                    i2_USBTransferOnePacket 5544  
                      ??_port_button_task 0066                      terminal_task@command 0180  
                               ?_USB_init 002D                                 ?_USB_task 002D  
                        I2C_LCD_Command@c 0064                                ??_I2C_Send 0062  
                       _CDCTxService$5975 0068                                ??_I2C_Stop 0062  
                              _cdc_notice 0200                   __size_of_ringbuf_delete 0026  
                               ?i2_memset 002D                                _cdc_rx_len 00FB  
                              ??_I2C_init 0060                                _cdc_tx_len 00FD  
                              ??_ADC_init 0060                caltime_to_epoch@month_3099 0080  
                ??_USBCtrlTrfSetupHandler 0047                            ??i2_LED_output 002E  
                            ??_LED_output 0061                    RTCC_adjust_time_dec@tm 0091  
                        ?_USBDeviceAttach 002D                    _USBStdGetStatusHandler 548A  
                            sprintf@width 00A9                    RTCC_adjust_time_inc@tm 0091  
                              __pbssBANK0 00E6                                __pbssBANK1 0100  
                              __pbssBANK2 0200                                __pbssBANK3 0300  
                               ?_Auto_cut 002D                            LED_indicator@i 0038  
                          ??_millis_timer 002D                        __size_of_ctmu_task 0010  
                               ISR@cnt_t1 000E                   __end_of_caltime_to_RTCC 4B28  
          __end_of_settings_led_indicator 27D8                           _RTCC_to_caltime 53CE  
                      _settings_auto_stop 27D8               __size_of_USBWakeFromSuspend 0032  
                             _pBDTEntryIn 00F5          __end_of_USBCtrlEPServiceComplete 4168  
             __size_of_USBCheckCDCRequest 00D6                     __end_of_weekday_3char FBC0  
                  ??_settings_adjust_time 0099                     RTCC_task@prev_halfsec 0122  
                    USBCtrlTrfRxService@i 002D                                   ?___lmul 006D  
                   settings_auto_stop@str 0067                                   ?___wmul 0076  
                     ?_settings_auto_stop 002D                                   ?_d_to_x 002D  
                  __end_of_put_string_usb 6962                                   ?_memset 0060  
                    I2C_LCD_SetCursor@col 0069                            ___lmul@product 0075  
                              _device_dsc FBC0                      I2C_LCD_SetCursor@row 0066  
                      __end_of_LED_output 5FEE                          _USBCtrlEPService 4DA6  
                                 ?_x_to_d 002D                              I2C_Send@data 0062  
                              _ep_data_in 0001                                   ?_strcat 0060  
                                 ?_strcmp 0060                                   ?_strcpy 0060  
                 settings_auto_stop@state 0128               __end_of_USBCtrlTrfRxService 3C7A  
                      _USBCheckStdRequest 425A                                ??_USB_init 0069  
                       _configDescriptor1 FAF9                                ??_USB_task 0074  
                        ??_get_string_usb 0071                        __CFG_OSC$INTOSCPLL 000000  
                         ??_I2C_IdleCheck 0060                                ANALOG_IN@b 0060  
                              ??i2_memset 0033                                 ?_data_out 00AB  
             __end_of_USBCtrlTrfTxService 47C2                       _USBStdSetCfgHandler 4520  
              __size_of_I2C_LCD_SetCursor 002C                    I2C_LCD_SetCursor@F8630 01E1  
                                 _SPBRGH1 000F7F                                   _SSP1ADD 000FC8  
                                 _SSP1BUF 000FC9                      terminal_operation@tx 00DB  
                                 _RTCVALH 000F3B                                   _RTCVALL 000F3A  
                    ??_settings_auto_stop 0066                       ?_USBCheckStdRequest 002D  
            __size_of_USBStdGetDscHandler 014E                                   _UIEbits 000F36  
                         integrate_time@i 0062                                   _USB_ISR 6CA6  
                 __end_of_RTCC_from_epoch 6C2E                                 ?_bootload 002D  
                    timer1_init@prescaler 0062                      _RTCC_adjust_time_dec 1912  
                                 _UIRbits 000F62                      _RTCC_adjust_time_inc 166E  
                              ??_Auto_cut 007C                          __CFG_CFGPLLEN$ON 000000  
                ??_button_timer_interrupt 0086                             _cdc_trf_state 00FC  
                         ??_ctmu_sampling 0088                           ??_LED_indicator 0035  
                           ?_month_length 0066                       epoch_to_caltime@day 0087  
                     epoch_to_caltime@num 008B                         RTCC_from_epoch@tm 008F  
                               _I2C_Start 68D6                                   _pCDCDst 0110  
                                 _pCDCSrc 0113                     __size_of_getsUSBUSART 00E0  
                  display_time_1602@line0 00B5                    display_time_1602@line1 00B7  
                               _ANALOG_IN 69BC       settings_integrating_reset@strp_1380 0094  
                                 __Hparam 0000                            _ctmu_set_ratio 443A  
                    ?_USBStdSetCfgHandler 002D                                 _CDCInitEP 6060  
                                 __Lparam 0000                                _ctmu_ratio 0019  
                 __end_of_I2C_LCD_Command 680A                         ringbuf_put_num@rb 0083  
                          display_LCD@str 0191                __size_of_USBEnableEndpoint 003C  
                       ringbuf_put_str@rb 006F                              USB_task@data 0076  
                    ??_USBCheckStdRequest 0047             __size_of_USBCtrlTrfOutHandler 005C  
                           ?_ringbuf_init 0060                                   ___awdiv 5254  
                         __size_of___lmul 0076                                   ___awmod 5752  
                                 ___lldiv 5312                          ??_USBDeviceTasks 004A  
                         __size_of___wmul 0036                                   ___llmod 5892  
                   ringbuf_put_num@digits 0087                                   ___lwdiv 5E8E  
                         ?_put_string_usb 006C                         ??_USBStallHandler 002D  
                                 ___lwmod 62D0                           __size_of_d_to_x 0028  
                   __end_of_terminal_task 10F6                     __end_of_terminal_time 0D8C  
             settings_integrating_reset@i 0096               settings_integrating_reset@j 0098  
                    __size_of_ringbuf_pop 00CC                      __size_of_ringbuf_num 00EE  
                    __size_of_ringbuf_put 00D4                           __CFG_STVREN$OFF 000000  
                      display_LCD@str_575 01B9                      __size_of_putUSBUSART 0026  
             epoch_to_caltime@month_cache 01E3                                   __pcinit 5E16  
                      getsUSBUSART@buffer 0067                           __size_of_memset 0034  
               __end_of_configDescriptor1 FB3C                                   __ramtop 0F00  
                    __size_of_timer0_init 003A                      __size_of_timer1_init 0050  
                                 __ptext0 60D0                                   __ptext1 0D8C  
                                 __ptext2 20C4                                   __ptext3 09E0  
                                 __ptext4 6332                                   __ptext5 5BF8  
                                 __ptext6 6AE6                                   __ptext7 63F2  
                                 __ptext8 4168                                   __ptext9 6634  
                                 _inPipes 00EF                      __size_of_timer3_init 002C  
                    __size_of_normal_task 00AE             settings_integrating_reset@str 006A  
                       __end_of_ctmu_task 6C9C                           __size_of_x_to_d 0020  
                           I2C_LCD_Puts@s 0064               _USBDeferOUTDataStagePackets 0012  
                       port_button_task@i 0066                                   _display 37D4  
                               _T0CONbits 000FD5                              __size_of_ADC 002E  
                         __size_of_strcat 0060                          _time_change_flag 0025  
                        _caltime_to_epoch 1BB6                           __size_of_strcmp 005C  
                         __size_of_strcpy 0038                              __size_of_ISR 00D8  
                               _T1CONbits 000FCD                              __size_of_OUT 0072  
                                 _dpowers FA51                              ??_USBSuspend 0041  
                 __size_of_RTCC_from_RTCC 001A                                data_out@tx 00AB  
                                 _isdigit 6A6C                                 _T3CONbits 000F79  
                        ___awmod@dividend 0060                        hardware_init@usbrx 0300  
                      hardware_init@usbtx 0469                                ??_data_out 00AD  
                           I2C_LCD_init@i 0068            settings_integrating_reset@strp 0092  
                               _T5CONbits 000F22                     __end_of_hardware_init 5752  
                         i2_USBDeviceInit 3690                          i2USBDeviceInit@i 0035  
                       __end_ofdata_out@p FBE2                                   _uart_rx 02A2  
                                 _uart_tx 02AA                        __end_of_USB_CD_Ptr FA81  
                                 _sprintf 0000           __size_of_USBCtrlTrfSetupHandler 008E  
                 __end_of_RTCC_to_caltime 548A                     ?_RTCC_adjust_time_dec 0091  
                   ?_RTCC_adjust_time_inc 0091                     __size_of_get_quot_rem 00D4  
                    end_of_initialization 5E84                              _getsUSBUSART 4602  
                              ??_bootload 006A                                 _CTMU_init 6ABE  
                               _CTMU_read 5192                     __end_of_settings_task 2C42  
                            _CTMUCONHbits 000FB3                        __end_of_USB_SD_Ptr FA7F  
                            _CTMUCONLbits 000FB2                       _pBDTEntryEP0OutNext 000B  
         settings_integrating_reset@state 0129                            ??_month_length 0067  
                          display_dec@dec 00AD                                   memset@c 0062  
                                 memset@n 0064                                   memset@p 0066  
                          display_dec@str 00AB           _dummy_encapsulated_cmd_response 029A  
                  _terminal_data_out_flag 0024              terminal_operation@percentage 00E5  
                               i2u1010_40 623C                                 i2u1012_40 6248  
                  __end_of_ctmu_set_ratio 4520                                 i2u1014_40 6254  
                               i2u1009_45 622E                                 i2u1009_46 6232  
                             sleep_task@i 006A                  ?_USBStdFeatureReqHandler 002D  
                        ?_caltime_to_RTCC 0069                                ?_I2C_Start 0062  
                   ??_USBStdSetCfgHandler 0041                           ___lldiv@divisor 0064  
                              ?_ANALOG_IN 002D                      timer3_init@prescaler 0061  
                              ?_CDCInitEP 002D                           ___lldiv@counter 006C  
                       ?_is_usb_available 002D                        __end_of_USBSuspend 6A40  
                          ??_ringbuf_init 0066                   _USBCtrlEPAllowDataStage 57F4  
                      ??_is_usb_available 0060                                   postdec1 000FE5  
                                 postdec2 000FDD                                _sleep_task 4F40  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                      __end_ofi2_LED_output 626E  
                _USBCtrlEPServiceComplete 4074                                   strcmp@r 0065  
              _USBStatusStageEnabledFlag1 0015                _USBStatusStageEnabledFlag2 0016  
                      USBEnableEndpoint@p 0036                          __CFG_DSBOREN$OFF 000000  
                               _RTCC_init 68A6                      __end_of_millis_timer 6B7E  
                               _RTCC_task 6728                              _display_char 020E  
                            _display_flag 001D                 epoch_to_caltime@day_cache 011E  
                              _print_item 0020                              _get_quot_rem 4BFE  
                              _print_time 5BF8                                _print_port 00FE  
                          _ringbuf_delete 6B0C              __end_ofdisplay_LCD@port_char FAF9  
               __size_of_epoch_to_caltime 01F2                          __CFG_CPUDIV$OSC1 000000  
                      _BothEP0OutUOWNsSet 000F                       RTCC_from_caltime@tm 008F  
                       __size_of_I2C_Send 0018                         __size_of_I2C_Stop 000A  
                               i2___awdiv 5D10                         __size_of_I2C_init 0012  
               USBConfigureEndpoint@EPNum 0032                         i2___lwdiv@divisor 002F  
                       __size_of_ADC_init 0020                ?_USBCtrlEPAllowStatusStage 002D  
              settings_led_indicator@strp 008F                                 i2___lwdiv 64FE  
                       i2___lwdiv@counter 0033                          ?_RTCC_from_epoch 008F  
                              ?_CTMU_init 002D                                ?_CTMU_read 006D  
     USER_USB_CALLBACK_EVENT_HANDLER@size 003D                                 _USTATcopy 002C  
                               Auto_cut@i 007E           __size_of_button_timer_interrupt 02C8  
                 timer1_init@clock_select 0060              __end_of_USBTransferOnePacket 4A52  
                         ?_ctmu_set_ratio 002D                          __CFG_IOL1WAY$OFF 000000  
                      i2___awdiv@dividend 002D                         putUSBUSART@length 0062  
                     __CFG_MSSP7B_EN$MSK7 000000                         LED_indicator@cntf 010D  
                        ?_I2C_LCD_Command 002D                            ringbuf_init@rb 0060  
                  _USBCtrlTrfSetupHandler 5B6A                             ??_display_LCD 00BA  
                          ringbuf_pop@ret 006E                             ??_display_dec 00AF  
                 ?i2_USBTransferOnePacket 002D              ??_settings_integrating_reset 0066  
                   __end_of_USBDeviceInit 33FE                         ?_terminal_at_hand 00CB  
                          __end_of___lmul 5F7C                  ?_RTCC_adjust_time_cursor 0060  
                          __end_of___wmul 6840                            __end_of_d_to_x 6ABE  
                ?_RTCC_adjust_time_toggle 0060                   __end_ofi2_USBDeviceInit 37D4  
                  __end_of_ringbuf_delete 6B32                        ??_terminal_at_hand 00D2  
                               i2memset@c 002F                                 i2memset@n 0031  
                               i2memset@p 0033                            __end_of_memset 6874  
                              ?_RTCC_init 002D                                ?_RTCC_task 002D  
                        __CFG_DSWDTEN$OFF 000000                         _USBBusIsSuspended 0123  
                          __end_of_x_to_d 6BBE                            __end_of_strcat 63F2  
                   epoch_to_caltime@month 008A                            __end_of_strcmp 644E  
                          __end_of_strcpy 679A                       start_initialization 5E16  
                              CTMU_read@i 0075                          month_length@year 006B  
                 ?_USBStdGetStatusHandler 002D                               __end_of_ADC 6934  
                      i2___awdiv@quotient 0033                               __end_of_ISR 10E0  
           USBCtrlTrfRxService@byteToRead 002E                               __end_of_OUT 6060  
                       __size_of_USB_init 001C                         __size_of_USB_task 008E  
                           ?_I2C_LCD_Puts 0064                    ??_RTCC_adjust_time_dec 0093  
                  ??_RTCC_adjust_time_inc 0093                             ?_I2C_LCD_init 002D  
                             _cdc_data_rx 0364                               _cdc_data_tx 03A4  
                       __size_ofi2_memset 002C                                ?i2___awdiv 002D  
            __end_of_USBConfigureEndpoint 59C0                          ?_RTCC_to_caltime 0062  
               __size_of_port_button_task 0164                                ?i2___lwdiv 002D  
         __end_of_USBStdFeatureReqHandler 20C4         __end_of_USBCtrlEPAllowStatusStage 50CE  
                   __end_of_software_init 4074                  __end_of_USBCtrlEPService 4E74  
                     settings_auto_stop@i 0093                       settings_auto_stop@j 0095  
                       _integrate_current 3E80                           ___llmod@divisor 0071  
     __size_of_settings_integrating_reset 0258                         __size_of_Auto_cut 0134  
                             ??_I2C_Start 0063                           ___llmod@counter 0075  
                 settings_led_indicator@i 0093                   settings_led_indicator@j 0095  
                      ?_integrate_current 002D                 ??_USBCtrlEPAllowDataStage 002E  
                             ??_ANALOG_IN 0060                               ??_CDCInitEP 0039  
                          USBDeviceInit@i 0068                     __end_of_I2C_LCD_Clear 6C48  
                  _pBDTEntryEP0OutCurrent 0009                              _ctmu_value_m 011A  
                 USBTransferOnePacket@dir 0060                   USBTransferOnePacket@len 0063  
          __end_ofi2_USBTransferOnePacket 55FE                          display_LCD@onoff FBD2  
              settings_auto_stop@str_1345 007B              settings_led_indicator@i_1364 0094  
                     ringbuf_put_num@temp 0089                                  ??___lmul 0075  
                             ?_sleep_task 002D                                  ??___wmul 007A  
                     _USBStdGetDscHandler 33FE                                  ??_d_to_x 0068  
                     ??_integrate_current 006D               __size_of_terminal_operation 026E  
                       __CFG_ADCSEL$BIT12 000000                               __pdataBANK1 01E1  
                                ??_memset 0066                  __size_of_ringbuf_put_num 0082  
                __size_of_ringbuf_put_str 0064                    _button_timer_interrupt 10F6  
                                ??_x_to_d 0060                           ?_ringbuf_delete 0060  
                                ??_strcat 0064                                  ??_strcmp 0064  
                                ??_strcpy 0064                      __end_of_month_length 48A0  
                          _RTCC_from_RTCC 6C48                       __end_of_display_LCD 09E0  
                  _USBActiveConfiguration 002B            __end_of_USBStdGetStatusHandler 5544  
                             ?_print_time 00AB                   __size_of_integrate_time 0062  
                     __end_of_display_dec 61A6                               __pbssCOMRAM 0001  
                          USB_task@rx_len 0074                       RTCC_to_caltime@dumy 0064  
                           __pcstackBANK0 0060                             __pcstackBANK1 0191  
            __size_of_USBCtrlTrfInHandler 00C4                             __pcstackBANK4 0400  
                          ??_I2C_LCD_Puts 0066                            ??_I2C_LCD_init 0067  
                            _isdigit$6228 0061                      __end_of_ringbuf_init 64FE  
                    ?_USBStdGetDscHandler 002D                         __size_of_data_out 0178  
                                ?_USB_ISR 002D                 __end_of_integrate_current 3F7C  
                    sleep_task@sleep_flag 0026                               ??_CTMU_init 0060  
                             ??_CTMU_read 006F                __end_of_USBWakeFromSuspend 68A6  
                             sprintf@flag 00A7                     RTCC_adjust_time_dec@i 0098  
                       __size_of_bootload 0042                               sprintf@prec 009B  
                         _USBStallHandler 65EE                              _pBDTEntryOut 0100  
                   RTCC_adjust_time_inc@i 0098                __end_of_USBCheckCDCRequest 4BFE  
                __end_of_caltime_to_epoch 1E44                           millis_timer@cnt 0120  
                               _data_item 001C                  __size_of_USBDeviceAttach 0038  
                   __size_ofi2_LED_output 0064                          ??_put_string_usb 0070  
                        ___lwdiv@dividend 007C           __end_of_RTCC_adjust_time_cursor 3D7E  
                    display_LCD@port_char FA81                                 __pintcode 1008  
         __end_of_RTCC_adjust_time_toggle 66B2                             __pmediumconst FA50  
                                ?___awdiv 0060                                 __ptext101 6B58  
                               __ptext110 4074                                 __ptext102 6CA6  
                               __ptext111 57F4                                 __ptext103 354C  
                               __ptext120 6060                                 __ptext112 425A  
                               __ptext104 3690                                 __ptext121 5544  
                               __ptext113 4520                                 __ptext105 6874  
                               __ptext130 64FE                                 __ptext122 66B2  
                               __ptext114 6A40                                 __ptext106 6A14  
                               __ptext131 5D10                                 __ptext123 592C  
                               __ptext115 548A                                 __ptext107 65EE  
                               __ptext132 620A                                 __ptext124 644E  
                               __ptext116 33FE                                 __ptext108 4DA6  
                               __ptext125 3B62                                 __ptext117 1E44  
                               __ptext109 5B6A                                 __ptext126 500A  
                               __ptext118 6962                                 __ptext127 50CE  
                               __ptext119 4B28                                 __ptext128 46E2  
                               __ptext129 3A3C                                  ?___awmod 0060  
                   __size_of_millis_timer 0026                                  ?___lldiv 0060  
                                ?___llmod 006D                                  ?___lwdiv 007C  
           __size_of_settings_adjust_time 00DA                                  ?___lwmod 0060  
                   _is_usb_available$4110 0060                    settings_auto_stop@strp 008F  
                  __end_of_RTCC_from_RTCC 6C62                           I2C_LCD_Puts@ans 0067  
                        ?i2_USBDeviceInit 002D                USBCBSendResume@delay_count 0116  
                settings_auto_stop@i_1347 0094                               ??_RTCC_init 0060  
                                ?_display 0060                               ??_RTCC_task 0088  
                    _USBTransferOnePacket 497A                               I2C_Start@rw 0062  
                                ?_isdigit 002D                          _epoch_to_caltime 2C42  
                                _I2C_Send 6C62                                  OUT@value 0060  
                                _I2C_Stop 6C9C                      __CFG_RTCOSC$T1OSCREF 000000  
                                _I2C_init 6C7A                          _display_LCD$6730 01DD  
                               _ctmu_task 6C8C                          _display_LCD$6726 01CD  
                        _display_LCD$6727 01D1                          _display_LCD$6728 01D5  
                        _display_LCD$6729 01D9                                  _ADC_init 6B7E  
                   __end_of_I2C_IdleCheck 6BDC                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 64AA                       ringbuf_backspace@rb 0068  
                   ??_USBStdGetDscHandler 002D                               _ep_data_out 0004  
                        ___lwdiv@quotient 0081                     terminal_at_hand@value 00D1  
                             ??i2___awdiv 0031                                  ?_sprintf 0083  
            __size_of_USBCtrlTrfRxService 0118               __size_of_settings_auto_stop 023C  
           USBConfigureEndpoint@direction 002D                               ??i2___lwdiv 0031  
                            i2_LED_output 620A                       __size_of_sleep_task 00CA  
                               data_out@i 00CB                                 data_out@p FBDC  
                               d_to_x@dec 0068                                  _CTMUCONH 000FB3  
                                _CTMUCONL 000FB2                                  _CTMUICON 000FB1  
            __size_of_USBCtrlTrfTxService 00E0                  ringbuf_init@internal_buf 0062  
                          ___wmul@product 007A                ??_USBCtrlEPServiceComplete 002E  
                   __end_of_ctmu_sampling 3E80                     __end_of_LED_indicator 3B62  
                            _millis_timer 6B58                                  _IPR1bits 000F9F  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _IPR5bits 000F99  
                                _PIE5bits 000F91                       __size_of_print_time 008C  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                i2u606_40 4768                                  i2u606_47 475E  
                                i2u608_40 47AA                                  i2u608_47 47A0  
                                _PIR5bits 000F98                epoch_to_caltime@year_cache 0126  
                                i2u664_40 3486                 USBCtrlEPService@setup_cnt 0049  
                                i2u664_47 347C                                  i2u665_40 34BC  
                                i2u665_47 34B2                                  i2u667_40 3518  
                                i2u667_47 350E                             ??_ringbuf_pop 006A  
                           ??_ringbuf_num 0062                             ??_ringbuf_put 006B  
                                _RCONbits 000FD0                         _display_time_1602 13BE  
                           ??_putUSBUSART 0063                                  _UEP0bits 000F26  
      __end_of_settings_integrating_reset 258A                _settings_integrating_reset 2332  
              _USBDeferINDataStagePackets 0011                     terminal_operation@op0 00DD  
                   terminal_operation@op1 00DF                     terminal_operation@op2 00E1  
                   terminal_operation@op3 00E3                                  _SSP1CON1 000FC6  
                                _SSP1CON2 000FC5                             ??_timer0_init 0060  
                           ??_timer1_init 0061               __size_of_USBCheckStdRequest 00F2  
                             _display_LCD 051C                             ??_timer3_init 0060  
                           ??_normal_task 00CC                                  _SSP1STAT 000FC7  
                                _UCONbits 000F65                        ?_display_time_1602 00B3  
                             _display_dec 613C                      _USBConfigureEndpoint 592C  
                         ?_RTCC_from_RTCC 0086          __size_of_USBStdFeatureReqHandler 0280  
                              _ADCON0bits 000FC2                                _ADCON1bits 000FC1  
                       ___wmul@multiplier 0076                     ?_USBTransferOnePacket 0060  
                        __CFG_SOSCSEL$LOW 000000                            software_init@i 0091  
          button_timer_interrupt@sw_value 0085                                  _USB_init 6BDC  
                                _USB_task 5ADC                 __size_of_is_usb_available 001C  
                           ?_CDCTxService 002D                       ??_display_time_1602 00B9  
                            _RemoteWakeup 0010                        I2C_LCD_init@i_3848 0069  
                       i2___awdiv@divisor 002F                                  i2_memset 6A40  
                       i2___awdiv@counter 0031                         ??_ringbuf_put_num 0088  
                              ?_ctmu_task 002D                         ??_ringbuf_put_str 0073  
                           ringbuf_pop@rb 0068                             ringbuf_num@rb 0060  
                 __end_of_USBStallHandler 6634                             I2C_Start@adrs 0063  
                           ringbuf_put@rb 0068                  ??_settings_led_indicator 0066  
                       ___lmul@multiplier 006D                          ??_ctmu_set_ratio 0083  
                             _INTCON2bits 000FF1                          _port_button_task 3138  
              __size_of_integrate_current 00FC               ??_USBCtrlEPAllowStatusStage 002D  
             __end_of_USBStdSetCfgHandler 4602                          __size_of_USB_ISR 0006  
                                _Auto_cut 3908                      epoch_to_caltime@year 0089  
           settings_task@item_change_flag 0099                    __size_of_terminal_task 036A  
                  __size_of_terminal_time 03AC                   __size_of_get_string_usb 004E  
                      __end_of_device_dsc FBD2                   ?_USBCtrlTrfSetupHandler 002D  
               __end_of_display_time_1602 166E                   USBStdGetStatusHandler@p 002E  
                                __Hrparam 0000                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0064                             i2LED_output@b 002E  
                    __end_of_I2C_LCD_Puts 5ADC                                  _SetupPkt 000D30  
                           _weekday_3char FBA4                    __size_of_hardware_init 00A6  
                    __end_of_I2C_LCD_init 5D10                     __size_of_month_length 00DE  
                      ringbuf_put_str@str 0071                     ?_USBConfigureEndpoint 002D  
                __size_of_caltime_to_RTCC 00D6                         ??_USBDeviceAttach 0060  
                        __size_of___awdiv 00BE                          __size_of___awmod 00A2  
                       I2C_IdleCheck@mask 0061                          __size_of___lldiv 00BC  
                        __size_of___llmod 009A                          __size_of___lwdiv 0078  
                        __size_of___lwmod 0062                    __size_of_settings_task 022E  
                     __end_of_ringbuf_pop 4F40                       __end_of_ringbuf_num 443A  
                     __end_of_ringbuf_put 4DA6                       __end_of_putUSBUSART 6B58  
                             _line_coding 0188                            _integrate_flag 001F  
                          ??_CDCTxService 0067                            _integrate_time 626E  
                     __end_of_timer0_init 6728                     __size_of_ringbuf_init 0054  
                     __end_of_timer1_init 65A0                          __size_of_display 0134  
                              sprintf@len 00A1                       __end_of_timer3_init 6A14  
                              sprintf@val 00A3                       __end_of_normal_task 56AC  
                       i2LED_output@value 002D                                strcat@from 0062  
                                _data_out 2FC0                          __size_of_isdigit 002A  
                 __size_of_USBDeviceTasks 0144                           ___lwdiv@divisor 007E  
                         ___lwdiv@counter 0080                      timer0_init@prescaler 0061  
                                __ptext10 5D94                                  __ptext11 6B0C  
                                __ptext20 27D8                                  __ptext12 59C0  
                                __ptext21 48A0                                  __ptext13 3F7C  
                __end_ofdisplay_LCD@onoff FBDC                                  __ptext30 5254  
                                __ptext22 6676                                  __ptext14 443A  
                                __ptext31 3C7A                                  __ptext23 166E  
                                __ptext15 4F40                                  __ptext40 613C  
                                __ptext32 3138                                  __ptext24 1912  
                                __ptext16 55FE                                  __ptext41 6392  
                                __ptext33 37D4                                  __ptext25 6C14  
                                __ptext17 2A14                                  __ptext50 3908  
                                __ptext42 6990                                  __ptext34 5F7C  
                                __ptext26 2C42                                  __ptext18 258A  
                                __ptext51 680A                                  __ptext43 5A4E  
                                __ptext35 626E                                  __ptext27 4BFE  
                                __ptext19 2332                                  __ptext60 6BDC  
                                __ptext52 5FEE                                  __ptext44 2FC0  
                                __ptext36 3E80                                  __ptext28 4A52  
                                __ptext61 329C                                  __ptext53 69BC  
                                __ptext45 0000                                  __ptext37 051C  
                                __ptext29 6A96                                  __ptext70 68D6  
                                __ptext62 6840                                  __ptext54 6906  
                                __ptext46 6A6C                                  __ptext38 13BE  
                                __ptext71 6C62                                  __ptext63 679A  
                                __ptext55 56AC                                  __ptext47 5892  
                                __ptext39 6762                                  __ptext80 5312  
                                __ptext72 6BBE                                  __ptext64 68A6  
                                __ptext56 69E8                                  __ptext48 61A6  
                                __ptext81 5ADC                                  __ptext73 6ABE  
                                __ptext65 6C7A                                  __ptext57 6550  
                                __ptext49 62D0                                  __ptext90 2E34  
                                __ptext82 4CD2                                  __ptext74 6B7E  
                                __ptext66 5C84                                  __ptext58 66EE  
                                __ptext91 497A                                  __ptext83 4E74  
                                __ptext75 6C8C                                  __ptext67 6C2E  
                                __ptext59 64AA                                  __ptext92 6728  
                                __ptext84 434C                                  __ptext76 3D7E  
                                __ptext68 67D2                                  __ptext93 6C48  
                                __ptext85 6934                                  __ptext77 10F6  
                                __ptext69 6C9C                                  __ptext94 1BB6  
                                __ptext86 6B32                                  __ptext78 5E8E  
                                __ptext95 47C2                                  __ptext87 65A0  
                                __ptext79 5192                                  __ptext96 5752  
                                __ptext88 6BF8                                  __ptext97 5F06  
                                __ptext89 4602                                  __ptext98 53CE  
                                __ptext99 6B9E                              _SSP1CON1bits 000FC6  
                            _SSP1CON2bits 000FC5          __size_of_RTCC_adjust_time_cursor 0104  
               __size_of_terminal_at_hand 0060          __size_of_RTCC_adjust_time_toggle 003C  
                                _bootload 6634                          __size_of_sprintf 051C  
                              strcpy@from 0062                      terminal_at_hand@hand 00CD  
                           __size_of_atoi 00F2            __end_of_USBCtrlTrfSetupHandler 5BF8  
                           __size_of_main 006C                         ?_USBCtrlEPService 002D  
                             data_out@str 00AD                              _month_length 47C2  
                       put_string_usb@len 006E                        ??_USBCtrlEPService 0047  
                __size_of_RTCC_from_epoch 001A                       _USBCtrlTrfInHandler 50CE  
                            ??_sleep_task 006A                                  _outPipes 00E6  
                        ??_ringbuf_delete 0062                   ?_button_timer_interrupt 0083  
                    _USBCtrlTrfOutHandler 644E                                  int$flags 0059  
                            _ringbuf_init 64AA                                  atoi@sign 0080  
               _USBCtrlEPAllowStatusStage 500A          settings_integrating_reset@i_1381 0097  
                               x_to_d@hex 0061                              _SSP1STATbits 000FC7  
                                display@i 0065                    ??_USBTransferOnePacket 0064  
                           _terminal_task 0D8C                             _terminal_time 09E0  
                  __end_of_integrate_time 62D0                  __size_of_I2C_LCD_Command 0038  
               _USBDeferStatusStagePacket 0013                              ??_print_time 00AD  
                CDCTxService@byte_to_send 006B                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                      ringbuf_put@asciicode 006A  
                    ?_USBCtrlTrfInHandler 002D                               ??_ctmu_task 0088  
           USBCtrlTrfTxService@byteToSend 002D              I2C_LCD_SetCursor@row_offsets 0067  
                         display_dec@edit 00AE                             _hardware_init 56AC  
                                isdigit@c 0062                                  memset@p1 0060  
                        ?_USBStallHandler 002D                  USBStdFeatureReqHandler@p 0045  
                        get_quot_rem@quot 0079                 terminal_task@command_init 012C  
                              _LED_output 5F7C                         RTCC_to_caltime@tm 0062  
         __size_of_settings_led_indicator 024E             __size_of_RTCC_adjust_time_dec 02A4  
           __size_of_RTCC_adjust_time_inc 02A4                                  intlevel2 0000  
                               sprintf@ap 009F                                 sprintf@cp 009D  
                               sprintf@sp 0083                        __end_of_sleep_task 500A  
                  __size_of_USBDeviceInit 0162                             _settings_flag 0021  
                           _settings_item 00FF   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 6990  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E         ??_USER_USB_CALLBACK_EVENT_HANDLER 003F  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0039           _USER_USB_CALLBACK_EVENT_HANDLER 6962  
                           _settings_task 2A14                          ___lwmod@dividend 0060  
            i2USBTransferOnePacket@handle 0032                          ___lldiv@dividend 0060  
                              _RCSTA1bits 000FAC                       terminal_at_hand@max 00D0  
                     terminal_at_hand@min 00CF                         ?_caltime_to_epoch 0079  
                       _ringbuf_backspace 59C0                __size_of_display_time_1602 02B0  
                __end_of_epoch_to_caltime 2E34                  __size_of_RTCC_to_caltime 00BC  
                              _OSCCONbits 000FD3            __end_of_button_timer_interrupt 13BE  
              __end_of_terminal_operation 2332                        __end_of_print_time 5C84  
              i2USBTransferOnePacket@data 002E                        ??_caltime_to_epoch 007B  
                      ?_ringbuf_backspace 0068                    ??_USBConfigureEndpoint 002E  
                   ?_USBCtrlTrfOutHandler 002D                               _ringbuf_pop 4E74  
                             _ringbuf_num 434C                               _ringbuf_put 4CD2  
                             _putUSBUSART 6B32                       _USBCtrlTrfRxService 3B62  
                             _timer0_init 66EE                        _USBWakeFromSuspend 6874  
                             _timer1_init 6550                               _timer3_init 69E8  
                             _normal_task 55FE                            ?_terminal_task 0191  
                          ?_terminal_time 00D2                   _USBStdFeatureReqHandler 1E44  
                      _USBCheckCDCRequest 4B28                       _USBCtrlTrfTxService 46E2  
                         ?_integrate_time 002D                       ??_ringbuf_backspace 006A  
                         get_quot_rem@div 007B                           get_quot_rem@num 007D  
                              _RTCCFGbits 000F3F                    __size_of_software_init 00F8  
                                sprintf@c 00A8                                  sprintf@f 0085  
                                strcat@cp 0064                                  strcat@to 0060  
                     ?_USBWakeFromSuspend 002D                                  strcmp@s1 0060  
                                strcmp@s2 0062                          _is_usb_available 6BF8  
               settings_led_indicator@str 0067                          ___lldiv@quotient 0068  
                         ___lwmod@divisor 0062                         caltime_to_RTCC@tm 0069  
                       ??_caltime_to_RTCC 006B                     ??_USBCtrlTrfInHandler 002E  
                                strcpy@cp 0064                                  strcpy@to 0060  
                   _USBAlternateInterface 018F                           ___lwmod@counter 0064  
                      terminal_at_hand@tx 00CB                       ?_USBCheckCDCRequest 002D  
                          ?_hardware_init 002D                 i2USBTransferOnePacket@dir 002D  
               i2USBTransferOnePacket@len 0030                       USBEnableEndpoint@ep 0038  
                         _endpoint_number 001E                    __size_of_I2C_LCD_Clear 001A  
            __end_of_settings_adjust_time 497A                      ?_USBCtrlTrfRxService 002D  
         epoch_to_caltime@day_since_epoch 0085                             ?_getsUSBUSART 0067  
                      integrate_current@i 006F                  ?_USBCtrlEPAllowDataStage 002D  
                          ?_settings_task 002D                            _get_string_usb 65A0  
                    ?_USBCtrlTrfTxService 002D                 __end_of_ringbuf_backspace 5A4E  
            _USBStatusStageTimeoutCounter 0017                     __size_of_I2C_LCD_Puts 008E  
                   __size_of_I2C_LCD_init 008C                      ??_USBWakeFromSuspend 0041  
              USBTransferOnePacket@handle 0065                      __end_of_CDCTxService 2FC0  
                    ??_USBCheckCDCRequest 002D                                _USB_CD_Ptr FA7F  
                        ??_RTCC_from_RTCC 0088  
