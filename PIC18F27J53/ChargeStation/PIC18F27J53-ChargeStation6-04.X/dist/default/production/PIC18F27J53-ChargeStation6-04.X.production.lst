

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Jun 06 00:07:54 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    98                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    99  0000                     
   100                           	psect	idataCOMRAM
   101  013394                     __pidataCOMRAM:
   102                           	opt stack 0
   103                           
   104                           ;initializer for I2C_LCD_SetCursor@F9847
   105  013394  00                 	db	0
   106  013395  40                 	db	64
   107                           
   108                           ;initializer for ISR@cnt_t1
   109  013396  02                 	db	2
   110                           
   111                           	psect	idataBANK0
   112  0132AA                     __pidataBANK0:
   113                           	opt stack 0
   114                           
   115                           ;initializer for _weekday_char
   116  0132AA  E1                 	db	low STR_1
   117  0132AB  FF                 	db	high STR_1
   118  0132AC  DD                 	db	low STR_2
   119  0132AD  FF                 	db	high STR_2
   120  0132AE  D5                 	db	low STR_3
   121  0132AF  FF                 	db	high STR_3
   122  0132B0  D1                 	db	low STR_4
   123  0132B1  FF                 	db	high STR_4
   124  0132B2  E9                 	db	low STR_5
   125  0132B3  FF                 	db	high STR_5
   126  0132B4  D9                 	db	low STR_6
   127  0132B5  FF                 	db	high STR_6
   128  0132B6  E5                 	db	low STR_7
   129  0132B7  FF                 	db	high STR_7
   130                           
   131                           ;initializer for _weekday_char_full
   132  0132B8  C3                 	db	low STR_8
   133  0132B9  FF                 	db	high STR_8
   134  0132BA  BC                 	db	low STR_9
   135  0132BB  FF                 	db	high STR_9
   136  0132BC  B4                 	db	low STR_10
   137  0132BD  FF                 	db	high STR_10
   138  0132BE  8F                 	db	low STR_11
   139  0132BF  FF                 	db	high STR_11
   140  0132C0  AB                 	db	low STR_12
   141  0132C1  FF                 	db	high STR_12
   142  0132C2  CA                 	db	low STR_13
   143  0132C3  FF                 	db	high STR_13
   144  0132C4  A2                 	db	low STR_14
   145  0132C5  FF                 	db	high STR_14
   146                           
   147                           ;initializer for epoch_to_caltime@month_cache
   148  0132C6  01                 	db	1
   149                           
   150                           ;initializer for sleep_loop@prev_power_sw
   151  0132C7  01                 	db	1
   152  0000                     _ANCON0	set	3912
   153  0000                     _ANCON1	set	3913
   154  0000                     _PADCFG1bits	set	3900
   155  0000                     _RTCCAL	set	3902
   156  0000                     _RTCCFGbits	set	3903
   157  0000                     _RTCVALH	set	3899
   158  0000                     _RTCVALL	set	3898
   159  0000                     _T5CONbits	set	3874
   160  0000                     _ADRES	set	4035
   161  0000                     _ADCON0	set	4034
   162  0000                     _ADCON0bits	set	4034
   163  0000                     _ADCON1	set	4033
   164  0000                     _ADCON1bits	set	4033
   165  0000                     _BAUDCON1bits	set	3966
   166  0000                     _CTMUCONH	set	4019
   167  0000                     _CTMUCONHbits	set	4019
   168  0000                     _CTMUCONL	set	4018
   169  0000                     _CTMUCONLbits	set	4018
   170  0000                     _CTMUICON	set	4017
   171  0000                     _EECON2	set	4007
   172  0000                     _INTCON2bits	set	4081
   173  0000                     _INTCONbits	set	4082
   174  0000                     _IPR1bits	set	3999
   175  0000                     _IPR2bits	set	4002
   176  0000                     _IPR5bits	set	3993
   177  0000                     _OSCCONbits	set	4051
   178  0000                     _OSCTUNEbits	set	3995
   179  0000                     _PIE1bits	set	3997
   180  0000                     _PIE2bits	set	4000
   181  0000                     _PIE5bits	set	3985
   182  0000                     _PIR1bits	set	3998
   183  0000                     _PIR2bits	set	4001
   184  0000                     _PIR5bits	set	3992
   185  0000                     _PORTBbits	set	3969
   186  0000                     _RCREG1	set	4015
   187  0000                     _RCSTA1bits	set	4012
   188  0000                     _SPBRG1	set	4016
   189  0000                     _SPBRGH1	set	3967
   190  0000                     _SSP1ADD	set	4040
   191  0000                     _SSP1BUF	set	4041
   192  0000                     _SSP1CON1	set	4038
   193  0000                     _SSP1CON2	set	4037
   194  0000                     _SSP1CON2bits	set	4037
   195  0000                     _SSP1STAT	set	4039
   196  0000                     _T0CONbits	set	4053
   197  0000                     _T1CONbits	set	4045
   198  0000                     _T3CONbits	set	3961
   199  0000                     _TMR1H	set	4047
   200  0000                     _TRISA	set	3986
   201  0000                     _TRISB	set	3987
   202  0000                     _TRISC	set	3988
   203  0000                     _TXREG1	set	4014
   204  0000                     _TXSTA1bits	set	4013
   205  0000                     _BCL1IF	set	32011
   206  0000                     _LATA5	set	31821
   207  0000                     _LATA6	set	31822
   208  0000                     _LATA7	set	31823
   209  0000                     _LATB2	set	31826
   210  0000                     _LATB6	set	31830
   211  0000                     _LATB7	set	31831
   212  0000                     _LATC2	set	31834
   213  0000                     _SSP1IF	set	31987
   214                           
   215                           	psect	mediumconst
   216  00FEEA                     __pmediumconst:
   217                           	opt stack 0
   218  00FEEA  00                 	db	0
   219  00FEEB                     STR_30:
   220  00FEEB  49                 	db	73	;'I'
   221  00FEEC  6E                 	db	110	;'n'
   222  00FEED  74                 	db	116	;'t'
   223  00FEEE  65                 	db	101	;'e'
   224  00FEEF  67                 	db	103	;'g'
   225  00FEF0  72                 	db	114	;'r'
   226  00FEF1  61                 	db	97	;'a'
   227  00FEF2  74                 	db	116	;'t'
   228  00FEF3  69                 	db	105	;'i'
   229  00FEF4  6E                 	db	110	;'n'
   230  00FEF5  67                 	db	103	;'g'
   231  00FEF6  20                 	db	32
   232  00FEF7  52                 	db	82	;'R'
   233  00FEF8  65                 	db	101	;'e'
   234  00FEF9  73                 	db	115	;'s'
   235  00FEFA  65                 	db	101	;'e'
   236  00FEFB  74                 	db	116	;'t'
   237  00FEFC  65                 	db	101	;'e'
   238  00FEFD  64                 	db	100	;'d'
   239  00FEFE  00                 	db	0
   240  00FEFF                     STR_29:
   241  00FEFF  49                 	db	73	;'I'
   242  00FF00  6E                 	db	110	;'n'
   243  00FF01  74                 	db	116	;'t'
   244  00FF02  65                 	db	101	;'e'
   245  00FF03  67                 	db	103	;'g'
   246  00FF04  72                 	db	114	;'r'
   247  00FF05  61                 	db	97	;'a'
   248  00FF06  74                 	db	116	;'t'
   249  00FF07  69                 	db	105	;'i'
   250  00FF08  6E                 	db	110	;'n'
   251  00FF09  67                 	db	103	;'g'
   252  00FF0A  20                 	db	32
   253  00FF0B  52                 	db	82	;'R'
   254  00FF0C  65                 	db	101	;'e'
   255  00FF0D  73                 	db	115	;'s'
   256  00FF0E  65                 	db	101	;'e'
   257  00FF0F  74                 	db	116	;'t'
   258  00FF10  3F                 	db	63	;'?'
   259  00FF11  00                 	db	0
   260  00FF12                     STR_22:
   261  00FF12  43                 	db	67	;'C'
   262  00FF13  68                 	db	104	;'h'
   263  00FF14  61                 	db	97	;'a'
   264  00FF15  72                 	db	114	;'r'
   265  00FF16  67                 	db	103	;'g'
   266  00FF17  65                 	db	101	;'e'
   267  00FF18  20                 	db	32
   268  00FF19  53                 	db	83	;'S'
   269  00FF1A  74                 	db	116	;'t'
   270  00FF1B  61                 	db	97	;'a'
   271  00FF1C  74                 	db	116	;'t'
   272  00FF1D  69                 	db	105	;'i'
   273  00FF1E  6F                 	db	111	;'o'
   274  00FF1F  6E                 	db	110	;'n'
   275  00FF20  20                 	db	32
   276  00FF21  36                 	db	54	;'6'
   277  00FF22  00                 	db	0
   278  00FF23                     STR_31:
   279  00FF23  41                 	db	65	;'A'
   280  00FF24  6C                 	db	108	;'l'
   281  00FF25  77                 	db	119	;'w'
   282  00FF26  61                 	db	97	;'a'
   283  00FF27  79                 	db	121	;'y'
   284  00FF28  73                 	db	115	;'s'
   285  00FF29  20                 	db	32
   286  00FF2A  43                 	db	67	;'C'
   287  00FF2B  68                 	db	104	;'h'
   288  00FF2C  61                 	db	97	;'a'
   289  00FF2D  72                 	db	114	;'r'
   290  00FF2E  67                 	db	103	;'g'
   291  00FF2F  69                 	db	105	;'i'
   292  00FF30  6E                 	db	110	;'n'
   293  00FF31  67                 	db	103	;'g'
   294  00FF32  00                 	db	0
   295  00FF33                     STR_23:
   296  00FF33  4D                 	db	77	;'M'
   297  00FF34  61                 	db	97	;'a'
   298  00FF35  64                 	db	100	;'d'
   299  00FF36  65                 	db	101	;'e'
   300  00FF37  20                 	db	32
   301  00FF38  62                 	db	98	;'b'
   302  00FF39  79                 	db	121	;'y'
   303  00FF3A  20                 	db	32
   304  00FF3B  4B                 	db	75	;'K'
   305  00FF3C  45                 	db	69	;'E'
   306  00FF3D  52                 	db	82	;'R'
   307  00FF3E  49                 	db	73	;'I'
   308  00FF3F  00                 	db	0
   309  00FF40                     STR_32:
   310  00FF40  41                 	db	65	;'A'
   311  00FF41  75                 	db	117	;'u'
   312  00FF42  74                 	db	116	;'t'
   313  00FF43  6F                 	db	111	;'o'
   314  00FF44  20                 	db	32
   315  00FF45  53                 	db	83	;'S'
   316  00FF46  74                 	db	116	;'t'
   317  00FF47  6F                 	db	111	;'o'
   318  00FF48  70                 	db	112	;'p'
   319  00FF49  20                 	db	32
   320  00FF4A  4F                 	db	79	;'O'
   321  00FF4B  4E                 	db	78	;'N'
   322  00FF4C  00                 	db	0
   323  00FF4D                     STR_19:
   324  00FF4D  43                 	db	67	;'C'
   325  00FF4E  45                 	db	69	;'E'
   326  00FF4F  4E                 	db	78	;'N'
   327  00FF50  54                 	db	84	;'T'
   328  00FF51  45                 	db	69	;'E'
   329  00FF52  52                 	db	82	;'R'
   330  00FF53  20                 	db	32
   331  00FF54  50                 	db	80	;'P'
   332  00FF55  4F                 	db	79	;'O'
   333  00FF56  52                 	db	82	;'R'
   334  00FF57  54                 	db	84	;'T'
   335  00FF58  00                 	db	0
   336  00FF59                     STR_18:
   337  00FF59  43                 	db	67	;'C'
   338  00FF5A  65                 	db	101	;'e'
   339  00FF5B  6E                 	db	110	;'n'
   340  00FF5C  74                 	db	116	;'t'
   341  00FF5D  65                 	db	101	;'e'
   342  00FF5E  72                 	db	114	;'r'
   343  00FF5F  20                 	db	32
   344  00FF60  50                 	db	80	;'P'
   345  00FF61  6F                 	db	111	;'o'
   346  00FF62  72                 	db	114	;'r'
   347  00FF63  74                 	db	116	;'t'
   348  00FF64  00                 	db	0
   349  00FF65                     STR_21:
   350  00FF65  52                 	db	82	;'R'
   351  00FF66  49                 	db	73	;'I'
   352  00FF67  47                 	db	71	;'G'
   353  00FF68  48                 	db	72	;'H'
   354  00FF69  54                 	db	84	;'T'
   355  00FF6A  20                 	db	32
   356  00FF6B  50                 	db	80	;'P'
   357  00FF6C  4F                 	db	79	;'O'
   358  00FF6D  52                 	db	82	;'R'
   359  00FF6E  54                 	db	84	;'T'
   360  00FF6F  00                 	db	0
   361  00FF70                     STR_20:
   362  00FF70  52                 	db	82	;'R'
   363  00FF71  69                 	db	105	;'i'
   364  00FF72  67                 	db	103	;'g'
   365  00FF73  68                 	db	104	;'h'
   366  00FF74  74                 	db	116	;'t'
   367  00FF75  20                 	db	32
   368  00FF76  50                 	db	80	;'P'
   369  00FF77  6F                 	db	111	;'o'
   370  00FF78  72                 	db	114	;'r'
   371  00FF79  74                 	db	116	;'t'
   372  00FF7A  00                 	db	0
   373  00FF7B                     STR_17:
   374  00FF7B  4C                 	db	76	;'L'
   375  00FF7C  45                 	db	69	;'E'
   376  00FF7D  46                 	db	70	;'F'
   377  00FF7E  54                 	db	84	;'T'
   378  00FF7F  20                 	db	32
   379  00FF80  50                 	db	80	;'P'
   380  00FF81  4F                 	db	79	;'O'
   381  00FF82  52                 	db	82	;'R'
   382  00FF83  54                 	db	84	;'T'
   383  00FF84  00                 	db	0
   384  00FF85                     STR_16:
   385  00FF85  4C                 	db	76	;'L'
   386  00FF86  65                 	db	101	;'e'
   387  00FF87  66                 	db	102	;'f'
   388  00FF88  74                 	db	116	;'t'
   389  00FF89  20                 	db	32
   390  00FF8A  50                 	db	80	;'P'
   391  00FF8B  6F                 	db	111	;'o'
   392  00FF8C  72                 	db	114	;'r'
   393  00FF8D  74                 	db	116	;'t'
   394  00FF8E  00                 	db	0
   395  00FF8F                     STR_11:
   396  00FF8F  57                 	db	87	;'W'
   397  00FF90  65                 	db	101	;'e'
   398  00FF91  64                 	db	100	;'d'
   399  00FF92  6E                 	db	110	;'n'
   400  00FF93  65                 	db	101	;'e'
   401  00FF94  73                 	db	115	;'s'
   402  00FF95  64                 	db	100	;'d'
   403  00FF96  61                 	db	97	;'a'
   404  00FF97  79                 	db	121	;'y'
   405  00FF98  00                 	db	0
   406  00FF99                     STR_34:
   407  00FF99  53                 	db	83	;'S'
   408  00FF9A  4C                 	db	76	;'L'
   409  00FF9B  45                 	db	69	;'E'
   410  00FF9C  45                 	db	69	;'E'
   411  00FF9D  50                 	db	80	;'P'
   412  00FF9E  49                 	db	73	;'I'
   413  00FF9F  4E                 	db	78	;'N'
   414  00FFA0  47                 	db	71	;'G'
   415  00FFA1  00                 	db	0
   416  00FFA2                     STR_14:
   417  00FFA2  53                 	db	83	;'S'
   418  00FFA3  61                 	db	97	;'a'
   419  00FFA4  74                 	db	116	;'t'
   420  00FFA5  75                 	db	117	;'u'
   421  00FFA6  72                 	db	114	;'r'
   422  00FFA7  64                 	db	100	;'d'
   423  00FFA8  61                 	db	97	;'a'
   424  00FFA9  79                 	db	121	;'y'
   425  00FFAA  00                 	db	0
   426  00FFAB                     STR_12:
   427  00FFAB  54                 	db	84	;'T'
   428  00FFAC  68                 	db	104	;'h'
   429  00FFAD  75                 	db	117	;'u'
   430  00FFAE  72                 	db	114	;'r'
   431  00FFAF  73                 	db	115	;'s'
   432  00FFB0  64                 	db	100	;'d'
   433  00FFB1  61                 	db	97	;'a'
   434  00FFB2  79                 	db	121	;'y'
   435  00FFB3  00                 	db	0
   436  00FFB4                     STR_10:
   437  00FFB4  54                 	db	84	;'T'
   438  00FFB5  75                 	db	117	;'u'
   439  00FFB6  65                 	db	101	;'e'
   440  00FFB7  73                 	db	115	;'s'
   441  00FFB8  64                 	db	100	;'d'
   442  00FFB9  61                 	db	97	;'a'
   443  00FFBA  79                 	db	121	;'y'
   444  00FFBB  00                 	db	0
   445  00FFBC                     STR_9:
   446  00FFBC  4D                 	db	77	;'M'
   447  00FFBD  6F                 	db	111	;'o'
   448  00FFBE  6E                 	db	110	;'n'
   449  00FFBF  64                 	db	100	;'d'
   450  00FFC0  61                 	db	97	;'a'
   451  00FFC1  79                 	db	121	;'y'
   452  00FFC2  00                 	db	0
   453  00FFC3                     STR_8:
   454  00FFC3  53                 	db	83	;'S'
   455  00FFC4  75                 	db	117	;'u'
   456  00FFC5  6E                 	db	110	;'n'
   457  00FFC6  64                 	db	100	;'d'
   458  00FFC7  61                 	db	97	;'a'
   459  00FFC8  79                 	db	121	;'y'
   460  00FFC9  00                 	db	0
   461  00FFCA                     STR_13:
   462  00FFCA  46                 	db	70	;'F'
   463  00FFCB  72                 	db	114	;'r'
   464  00FFCC  79                 	db	121	;'y'
   465  00FFCD  64                 	db	100	;'d'
   466  00FFCE  61                 	db	97	;'a'
   467  00FFCF  79                 	db	121	;'y'
   468  00FFD0  00                 	db	0
   469  00FFD1                     STR_4:
   470  00FFD1  57                 	db	87	;'W'
   471  00FFD2  45                 	db	69	;'E'
   472  00FFD3  44                 	db	68	;'D'
   473  00FFD4  00                 	db	0
   474  00FFD5                     STR_3:
   475  00FFD5  54                 	db	84	;'T'
   476  00FFD6  55                 	db	85	;'U'
   477  00FFD7  45                 	db	69	;'E'
   478  00FFD8  00                 	db	0
   479  00FFD9                     STR_6:
   480  00FFD9  46                 	db	70	;'F'
   481  00FFDA  52                 	db	82	;'R'
   482  00FFDB  49                 	db	73	;'I'
   483  00FFDC  00                 	db	0
   484  00FFDD                     STR_2:
   485  00FFDD  4D                 	db	77	;'M'
   486  00FFDE  4F                 	db	79	;'O'
   487  00FFDF  4E                 	db	78	;'N'
   488  00FFE0  00                 	db	0
   489  00FFE1                     STR_1:
   490  00FFE1  53                 	db	83	;'S'
   491  00FFE2  55                 	db	85	;'U'
   492  00FFE3  4E                 	db	78	;'N'
   493  00FFE4  00                 	db	0
   494  00FFE5                     STR_7:
   495  00FFE5  53                 	db	83	;'S'
   496  00FFE6  41                 	db	65	;'A'
   497  00FFE7  54                 	db	84	;'T'
   498  00FFE8  00                 	db	0
   499  00FFE9                     STR_5:
   500  00FFE9  54                 	db	84	;'T'
   501  00FFEA  48                 	db	72	;'H'
   502  00FFEB  55                 	db	85	;'U'
   503  00FFEC  00                 	db	0
   504  00FFED                     STR_24:
   505  00FFED  6D                 	db	109	;'m'
   506  00FFEE  41                 	db	65	;'A'
   507  00FFEF  68                 	db	104	;'h'
   508  00FFF0  00                 	db	0
   509  00FFF1                     STR_15:
   510  00FFF1  20                 	db	32
   511  00FFF2  20                 	db	32
   512  00FFF3  00                 	db	0
   513  00FFF4                     STR_25:
   514  00FFF4  64                 	db	100	;'d'
   515  00FFF5  20                 	db	32
   516  00FFF6  00                 	db	0
   517  00FFF7                     STR_26:
   518  00FFF7  68                 	db	104	;'h'
   519  00FFF8  20                 	db	32
   520  00FFF9  00                 	db	0
   521  00FFFA                     STR_27:
   522  00FFFA  6D                 	db	109	;'m'
   523  00FFFB  20                 	db	32
   524  00FFFC  00                 	db	0
   525  00FFFD                     STR_28:
   526  00FFFD  73                 	db	115	;'s'
   527  00FFFE  00                 	db	0
   528  0000                     
   529                           ; #config settings
   530  00FFFF  00                 	db	0	; dummy byte at the end
   531  0000                     
   532                           	psect	cinit
   533  012A5E                     __pcinit:
   534                           	opt stack 0
   535  012A5E                     start_initialization:
   536                           	opt stack 0
   537  012A5E                     __initialization:
   538                           	opt stack 0
   539                           
   540                           ; Clear objects allocated to BANK1 (10 bytes)
   541  012A5E  EE01  F0C9         	lfsr	0,__pbssBANK1
   542  012A62  0E0A               	movlw	10
   543  012A64                     clear_0:
   544  012A64  6AEE               	clrf	postinc0,c
   545  012A66  06E8               	decf	wreg,f,c
   546  012A68  E1FD               	bnz	clear_0
   547                           
   548                           ; Clear objects allocated to BANK0 (89 bytes)
   549  012A6A  EE00  F060         	lfsr	0,__pbssBANK0
   550  012A6E  0E59               	movlw	89
   551  012A70                     clear_1:
   552  012A70  6AEE               	clrf	postinc0,c
   553  012A72  06E8               	decf	wreg,f,c
   554  012A74  E1FD               	bnz	clear_1
   555                           
   556                           ; Clear objects allocated to COMRAM (27 bytes)
   557  012A76  EE00  F023         	lfsr	0,__pbssCOMRAM
   558  012A7A  0E1B               	movlw	27
   559  012A7C                     clear_2:
   560  012A7C  6AEE               	clrf	postinc0,c
   561  012A7E  06E8               	decf	wreg,f,c
   562  012A80  E1FD               	bnz	clear_2
   563                           
   564                           ; Initialize objects allocated to BANK0 (30 bytes)
   565                           ; load TBLPTR registers with __pidataBANK0
   566  012A82  0EAA               	movlw	low __pidataBANK0
   567  012A84  6EF6               	movwf	tblptrl,c
   568  012A86  0E32               	movlw	high __pidataBANK0
   569  012A88  6EF7               	movwf	tblptrh,c
   570  012A8A  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   571  012A8C  6EF8               	movwf	tblptru,c
   572  012A8E  EE00  F0E2         	lfsr	0,__pdataBANK0
   573  012A92  EE10 F01E          	lfsr	1,30
   574  012A96                     copy_data0:
   575  012A96  0009               	tblrd		*+
   576  012A98  CFF5 FFEE          	movff	tablat,postinc0
   577  012A9C  50E5               	movf	postdec1,w,c
   578  012A9E  50E1               	movf	fsr1l,w,c
   579  012AA0  E1FA               	bnz	copy_data0
   580                           
   581                           ; Initialize objects allocated to COMRAM (3 bytes)
   582                           ; load TBLPTR registers with __pidataCOMRAM
   583  012AA2  0E94               	movlw	low __pidataCOMRAM
   584  012AA4  6EF6               	movwf	tblptrl,c
   585  012AA6  0E33               	movlw	high __pidataCOMRAM
   586  012AA8  6EF7               	movwf	tblptrh,c
   587  012AAA  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   588  012AAC  6EF8               	movwf	tblptru,c
   589  012AAE  0009               	tblrd		*+	;fetch initializer
   590  012AB0  CFF5 F03E          	movff	tablat,__pdataCOMRAM
   591  012AB4  0009               	tblrd		*+	;fetch initializer
   592  012AB6  CFF5 F03F          	movff	tablat,__pdataCOMRAM+1
   593  012ABA  0009               	tblrd		*+	;fetch initializer
   594  012ABC  CFF5 F040          	movff	tablat,__pdataCOMRAM+2
   595  012AC0                     end_of_initialization:
   596                           	opt stack 0
   597  012AC0                     __end_of__initialization:
   598                           	opt stack 0
   599  012AC0  0100               	movlb	0
   600  012AC2  EFE1  F089         	goto	_main	;jump to C main() function
   601                           tblptru	equ	0xFF8
   602                           tblptrh	equ	0xFF7
   603                           tblptrl	equ	0xFF6
   604                           tablat	equ	0xFF5
   605                           postinc0	equ	0xFEE
   606                           wreg	equ	0xFE8
   607                           postdec1	equ	0xFE5
   608                           fsr1l	equ	0xFE1
   609                           
   610                           	psect	bssCOMRAM
   611  000023                     __pbssCOMRAM:
   612                           	opt stack 0
   613  000023                     _I:
   614                           	opt stack 0
   615  000023                     	ds	6
   616  000029                     _auto_cut_ON:
   617                           	opt stack 0
   618  000029                     	ds	3
   619  00002C                     ISR@cnt_t0:
   620                           	opt stack 0
   621  00002C                     	ds	2
   622  00002E                     _ctmu_value0:
   623                           	opt stack 0
   624  00002E                     	ds	2
   625  000030                     _ctmu_value1:
   626                           	opt stack 0
   627  000030                     	ds	2
   628  000032                     _ctmu_value2:
   629                           	opt stack 0
   630  000032                     	ds	2
   631  000034                     _ctmu_valuem:
   632                           	opt stack 0
   633  000034                     	ds	2
   634  000036                     _ctmu_flag:
   635                           	opt stack 0
   636  000036                     	ds	1
   637  000037                     _cut_time_flag:
   638                           	opt stack 0
   639  000037                     	ds	1
   640  000038                     _display_flag:
   641                           	opt stack 0
   642  000038                     	ds	1
   643  000039                     _print_port:
   644                           	opt stack 0
   645  000039                     	ds	1
   646  00003A                     _time_change_flag:
   647                           	opt stack 0
   648  00003A                     	ds	1
   649  00003B                     _delay_display:
   650                           	opt stack 0
   651  00003B                     	ds	3
   652                           tblptru	equ	0xFF8
   653                           tblptrh	equ	0xFF7
   654                           tblptrl	equ	0xFF6
   655                           tablat	equ	0xFF5
   656                           postinc0	equ	0xFEE
   657                           wreg	equ	0xFE8
   658                           postdec1	equ	0xFE5
   659                           fsr1l	equ	0xFE1
   660                           
   661                           	psect	dataCOMRAM
   662  00003E                     __pdataCOMRAM:
   663                           	opt stack 0
   664  00003E                     I2C_LCD_SetCursor@F9847:
   665                           	opt stack 0
   666  00003E                     	ds	2
   667  000040                     ISR@cnt_t1:
   668                           	opt stack 0
   669  000040                     	ds	1
   670                           tblptru	equ	0xFF8
   671                           tblptrh	equ	0xFF7
   672                           tblptrl	equ	0xFF6
   673                           tablat	equ	0xFF5
   674                           postinc0	equ	0xFEE
   675                           wreg	equ	0xFE8
   676                           postdec1	equ	0xFE5
   677                           fsr1l	equ	0xFE1
   678                           
   679                           	psect	bssBANK0
   680  000060                     __pbssBANK0:
   681                           	opt stack 0
   682  000060                     _S:
   683                           	opt stack 0
   684  000060                     	ds	12
   685  00006C                     _charge_time:
   686                           	opt stack 0
   687  00006C                     	ds	12
   688  000078                     _s:
   689                           	opt stack 0
   690  000078                     	ds	12
   691  000084                     _cut_cnt:
   692                           	opt stack 0
   693  000084                     	ds	6
   694  00008A                     _d1:
   695                           	opt stack 0
   696  00008A                     	ds	3
   697  00008D                     _out_flag:
   698                           	opt stack 0
   699  00008D                     	ds	3
   700  000090                     lchika@cnt:
   701                           	opt stack 0
   702  000090                     	ds	3
   703  000093                     lchika@cntf:
   704                           	opt stack 0
   705  000093                     	ds	3
   706  000096                     epoch_to_caltime@day_cache:
   707                           	opt stack 0
   708  000096                     	ds	2
   709  000098                     RTCC_loop@prev_halfsec:
   710                           	opt stack 0
   711  000098                     	ds	1
   712  000099                     _colon:
   713                           	opt stack 0
   714  000099                     	ds	1
   715  00009A                     _edit_flag:
   716                           	opt stack 0
   717  00009A                     	ds	1
   718  00009B                     _print_content:
   719                           	opt stack 0
   720  00009B                     	ds	1
   721  00009C                     _sleep_flag:
   722                           	opt stack 0
   723  00009C                     	ds	1
   724  00009D                     epoch_to_caltime@year_cache:
   725                           	opt stack 0
   726  00009D                     	ds	1
   727  00009E                     _caltime_now:
   728                           	opt stack 0
   729  00009E                     	ds	7
   730  0000A5                     _ct0:
   731                           	opt stack 0
   732  0000A5                     	ds	4
   733  0000A9                     _ct1:
   734                           	opt stack 0
   735  0000A9                     	ds	4
   736  0000AD                     _ct2:
   737                           	opt stack 0
   738  0000AD                     	ds	4
   739  0000B1                     _ctm:
   740                           	opt stack 0
   741  0000B1                     	ds	4
   742  0000B5                     _epoch_now:
   743                           	opt stack 0
   744  0000B5                     	ds	4
   745                           tblptru	equ	0xFF8
   746                           tblptrh	equ	0xFF7
   747                           tblptrl	equ	0xFF6
   748                           tablat	equ	0xFF5
   749                           postinc0	equ	0xFEE
   750                           wreg	equ	0xFE8
   751                           postdec1	equ	0xFE5
   752                           fsr1l	equ	0xFE1
   753                           
   754                           	psect	dataBANK0
   755  0000E2                     __pdataBANK0:
   756                           	opt stack 0
   757  0000E2                     _weekday_char:
   758                           	opt stack 0
   759  0000E2                     	ds	14
   760  0000F0                     _weekday_char_full:
   761                           	opt stack 0
   762  0000F0                     	ds	14
   763  0000FE                     epoch_to_caltime@month_cache:
   764                           	opt stack 0
   765  0000FE                     	ds	1
   766  0000FF                     sleep_loop@prev_power_sw:
   767                           	opt stack 0
   768  0000FF                     	ds	1
   769                           tblptru	equ	0xFF8
   770                           tblptrh	equ	0xFF7
   771                           tblptrl	equ	0xFF6
   772                           tablat	equ	0xFF5
   773                           postinc0	equ	0xFEE
   774                           wreg	equ	0xFE8
   775                           postdec1	equ	0xFE5
   776                           fsr1l	equ	0xFE1
   777                           
   778                           	psect	bssBANK1
   779  0001C9                     __pbssBANK1:
   780                           	opt stack 0
   781  0001C9                     _rx_buf:
   782                           	opt stack 0
   783  0001C9                     	ds	5
   784  0001CE                     _tx_buf:
   785                           	opt stack 0
   786  0001CE                     	ds	5
   787                           tblptru	equ	0xFF8
   788                           tblptrh	equ	0xFF7
   789                           tblptrl	equ	0xFF6
   790                           tablat	equ	0xFF5
   791                           postinc0	equ	0xFEE
   792                           wreg	equ	0xFE8
   793                           postdec1	equ	0xFE5
   794                           fsr1l	equ	0xFE1
   795                           
   796                           	psect	cstackBANK2
   797  000200                     __pcstackBANK2:
   798                           	opt stack 0
   799  000200                     main_init@rxbuf:
   800                           	opt stack 0
   801                           
   802                           ; 200 bytes @ 0x0
   803  000200                     	ds	200
   804                           tblptru	equ	0xFF8
   805                           tblptrh	equ	0xFF7
   806                           tblptrl	equ	0xFF6
   807                           tablat	equ	0xFF5
   808                           postinc0	equ	0xFEE
   809                           wreg	equ	0xFE8
   810                           postdec1	equ	0xFE5
   811                           fsr1l	equ	0xFE1
   812                           
   813                           	psect	cstackBANK1
   814  000100                     __pcstackBANK1:
   815                           	opt stack 0
   816  000100                     epoch_to_caltime@day_since_epoch:
   817                           	opt stack 0
   818  000100                     RTCC_from_RTCC@ct:
   819                           	opt stack 0
   820  000100                     display_dec@str:
   821                           	opt stack 0
   822  000100                     main_init@txbuf:
   823                           	opt stack 0
   824                           
   825                           ; 200 bytes @ 0x0
   826  000100                     	ds	2
   827  000102                     epoch_to_caltime@day:
   828                           	opt stack 0
   829  000102                     RTCC_from_RTCC@ep:
   830                           	opt stack 0
   831                           
   832                           ; 2 bytes @ 0x2
   833  000102                     	ds	2
   834  000104                     epoch_to_caltime@year:
   835                           	opt stack 0
   836                           
   837                           ; 1 bytes @ 0x4
   838  000104                     	ds	1
   839  000105                     epoch_to_caltime@month:
   840                           	opt stack 0
   841                           
   842                           ; 1 bytes @ 0x5
   843  000105                     	ds	1
   844  000106                     epoch_to_caltime@num:
   845                           	opt stack 0
   846                           
   847                           ; 4 bytes @ 0x6
   848  000106                     	ds	4
   849  00010A                     display_dec@dec:
   850                           	opt stack 0
   851  00010A                     RTCC_from_epoch@ct:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0xA
   855  00010A                     	ds	1
   856  00010B                     display_time_1602@ct:
   857                           	opt stack 0
   858                           
   859                           ; 2 bytes @ 0xB
   860  00010B                     	ds	1
   861  00010C                     RTCC_from_epoch@ep:
   862                           	opt stack 0
   863                           
   864                           ; 2 bytes @ 0xC
   865  00010C                     	ds	1
   866  00010D                     display_time_1602@ep:
   867                           	opt stack 0
   868                           
   869                           ; 2 bytes @ 0xD
   870  00010D                     	ds	1
   871  00010E                     RTCC_time_set_inc@ct:
   872                           	opt stack 0
   873  00010E                     RTCC_time_set_dec@ct:
   874                           	opt stack 0
   875                           
   876                           ; 2 bytes @ 0xE
   877  00010E                     	ds	1
   878  00010F                     display_LCD@str:
   879                           	opt stack 0
   880                           
   881                           ; 10 bytes @ 0xF
   882  00010F                     	ds	1
   883  000110                     RTCC_time_set_inc@ep:
   884                           	opt stack 0
   885  000110                     RTCC_time_set_dec@ep:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x10
   889  000110                     	ds	2
   890  000112                     ??_RTCC_time_set_inc:
   891  000112                     ??_RTCC_time_set_dec:
   892                           
   893                           ; 0 bytes @ 0x12
   894  000112                     	ds	4
   895  000116                     RTCC_time_set_inc@i_2064:
   896                           	opt stack 0
   897  000116                     RTCC_time_set_dec@i_2077:
   898                           	opt stack 0
   899                           
   900                           ; 1 bytes @ 0x16
   901  000116                     	ds	1
   902  000117                     RTCC_time_set_inc@i:
   903                           	opt stack 0
   904  000117                     RTCC_time_set_dec@i:
   905                           	opt stack 0
   906                           
   907                           ; 1 bytes @ 0x17
   908  000117                     	ds	1
   909  000118                     RTCC_time_set@mode:
   910                           	opt stack 0
   911                           
   912                           ; 2 bytes @ 0x18
   913  000118                     	ds	1
   914  000119                     _display_LCD$3082:
   915                           	opt stack 0
   916                           
   917                           ; 4 bytes @ 0x19
   918  000119                     	ds	1
   919  00011A                     RTCC_time_set@cnt_inc:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x1A
   923  00011A                     	ds	2
   924  00011C                     RTCC_time_set@cnt_dec:
   925                           	opt stack 0
   926                           
   927                           ; 2 bytes @ 0x1C
   928  00011C                     	ds	172
   929  0001C8                     main@i:
   930                           	opt stack 0
   931                           
   932                           ; 1 bytes @ 0xC8
   933  0001C8                     	ds	1
   934                           tblptru	equ	0xFF8
   935                           tblptrh	equ	0xFF7
   936                           tblptrl	equ	0xFF6
   937                           tablat	equ	0xFF5
   938                           postinc0	equ	0xFEE
   939                           wreg	equ	0xFE8
   940                           postdec1	equ	0xFE5
   941                           fsr1l	equ	0xFE1
   942                           
   943                           	psect	cstackBANK0
   944  0000B9                     __pcstackBANK0:
   945                           	opt stack 0
   946  0000B9                     ?___awdiv:
   947                           	opt stack 0
   948  0000B9                     ?___awmod:
   949                           	opt stack 0
   950  0000B9                     ?___lwmod:
   951                           	opt stack 0
   952  0000B9                     ?___lldiv:
   953                           	opt stack 0
   954  0000B9                     ADC@ch:
   955                           	opt stack 0
   956  0000B9                     I2C_Start@adrs:
   957                           	opt stack 0
   958  0000B9                     ringbuf_init@rb:
   959                           	opt stack 0
   960  0000B9                     delay_set@d:
   961                           	opt stack 0
   962  0000B9                     RTCC_to_caltime@ct:
   963                           	opt stack 0
   964  0000B9                     ___awdiv@dividend:
   965                           	opt stack 0
   966  0000B9                     ___awmod@dividend:
   967                           	opt stack 0
   968  0000B9                     ___lwmod@dividend:
   969                           	opt stack 0
   970  0000B9                     ___lldiv@dividend:
   971                           	opt stack 0
   972                           
   973                           ; 4 bytes @ 0x0
   974  0000B9                     	ds	1
   975  0000BA                     ?___wmul:
   976                           	opt stack 0
   977  0000BA                     I2C_LCD_Command@c:
   978                           	opt stack 0
   979  0000BA                     I2C_LCD_Putc@c:
   980                           	opt stack 0
   981  0000BA                     I2C_LCD_Puts@s:
   982                           	opt stack 0
   983  0000BA                     ___wmul@multiplier:
   984                           	opt stack 0
   985                           
   986                           ; 2 bytes @ 0x1
   987  0000BA                     	ds	1
   988  0000BB                     I2C_LCD_Command@ans:
   989                           	opt stack 0
   990  0000BB                     I2C_LCD_Putc@ans:
   991                           	opt stack 0
   992  0000BB                     ringbuf_init@internal_buf:
   993                           	opt stack 0
   994  0000BB                     delay_set@value:
   995                           	opt stack 0
   996  0000BB                     ___awdiv@divisor:
   997                           	opt stack 0
   998  0000BB                     ___awmod@divisor:
   999                           	opt stack 0
  1000  0000BB                     ___lwmod@divisor:
  1001                           	opt stack 0
  1002                           
  1003                           ; 2 bytes @ 0x2
  1004  0000BB                     	ds	1
  1005  0000BC                     ??_I2C_LCD_Clear:
  1006  0000BC                     ??_I2C_LCD_Puts:
  1007  0000BC                     I2C_LCD_SetCursor@row:
  1008                           	opt stack 0
  1009  0000BC                     ___wmul@multiplicand:
  1010                           	opt stack 0
  1011                           
  1012                           ; 2 bytes @ 0x3
  1013  0000BC                     	ds	1
  1014  0000BD                     ??_month_length:
  1015  0000BD                     ringbuf_init@bufsize:
  1016                           	opt stack 0
  1017  0000BD                     port_loop@i:
  1018                           	opt stack 0
  1019  0000BD                     ___awdiv@counter:
  1020                           	opt stack 0
  1021  0000BD                     I2C_LCD_SetCursor@row_offsets:
  1022                           	opt stack 0
  1023  0000BD                     I2C_LCD_Puts@ans:
  1024                           	opt stack 0
  1025  0000BD                     ___lldiv@divisor:
  1026                           	opt stack 0
  1027                           
  1028                           ; 4 bytes @ 0x4
  1029  0000BD                     	ds	1
  1030  0000BE                     ___awdiv@sign:
  1031                           	opt stack 0
  1032  0000BE                     ___wmul@product:
  1033                           	opt stack 0
  1034                           
  1035                           ; 2 bytes @ 0x5
  1036  0000BE                     	ds	1
  1037  0000BF                     I2C_LCD_SetCursor@col:
  1038                           	opt stack 0
  1039  0000BF                     ___awdiv@quotient:
  1040                           	opt stack 0
  1041                           
  1042                           ; 2 bytes @ 0x6
  1043  0000BF                     	ds	1
  1044  0000C0                     ??_Auto_cut:
  1045                           
  1046                           ; 0 bytes @ 0x7
  1047  0000C0                     	ds	1
  1048  0000C1                     month_length@year:
  1049                           	opt stack 0
  1050  0000C1                     ___lldiv@quotient:
  1051                           	opt stack 0
  1052                           
  1053                           ; 4 bytes @ 0x8
  1054  0000C1                     	ds	1
  1055  0000C2                     Auto_cut@i:
  1056                           	opt stack 0
  1057                           
  1058                           ; 1 bytes @ 0x9
  1059  0000C2                     	ds	3
  1060  0000C5                     ___lldiv@counter:
  1061                           	opt stack 0
  1062                           
  1063                           ; 1 bytes @ 0xC
  1064  0000C5                     	ds	1
  1065  0000C6                     ?___lmul:
  1066                           	opt stack 0
  1067  0000C6                     ?___llmod:
  1068                           	opt stack 0
  1069  0000C6                     CTMU_read@ch:
  1070                           	opt stack 0
  1071  0000C6                     ___lmul@multiplier:
  1072                           	opt stack 0
  1073  0000C6                     ___llmod@dividend:
  1074                           	opt stack 0
  1075                           
  1076                           ; 4 bytes @ 0xD
  1077  0000C6                     	ds	1
  1078  0000C7                     CTMU_read@sum:
  1079                           	opt stack 0
  1080                           
  1081                           ; 4 bytes @ 0xE
  1082  0000C7                     	ds	3
  1083  0000CA                     ___lmul@multiplicand:
  1084                           	opt stack 0
  1085  0000CA                     ___llmod@divisor:
  1086                           	opt stack 0
  1087                           
  1088                           ; 4 bytes @ 0x11
  1089  0000CA                     	ds	1
  1090  0000CB                     CTMU_read@i:
  1091                           	opt stack 0
  1092                           
  1093                           ; 1 bytes @ 0x12
  1094  0000CB                     	ds	1
  1095  0000CC                     ?___lwdiv:
  1096                           	opt stack 0
  1097  0000CC                     ___lwdiv@dividend:
  1098                           	opt stack 0
  1099                           
  1100                           ; 2 bytes @ 0x13
  1101  0000CC                     	ds	2
  1102  0000CE                     ___lwdiv@divisor:
  1103                           	opt stack 0
  1104  0000CE                     ___lmul@product:
  1105                           	opt stack 0
  1106                           
  1107                           ; 4 bytes @ 0x15
  1108  0000CE                     	ds	2
  1109  0000D0                     ___lwdiv@counter:
  1110                           	opt stack 0
  1111                           
  1112                           ; 1 bytes @ 0x17
  1113  0000D0                     	ds	1
  1114  0000D1                     ___lwdiv@quotient:
  1115                           	opt stack 0
  1116                           
  1117                           ; 2 bytes @ 0x18
  1118  0000D1                     	ds	1
  1119  0000D2                     ?_get_quot_rem:
  1120                           	opt stack 0
  1121  0000D2                     get_quot_rem@quot:
  1122                           	opt stack 0
  1123  0000D2                     caltime_to_epoch@ct:
  1124                           	opt stack 0
  1125                           
  1126                           ; 2 bytes @ 0x19
  1127  0000D2                     	ds	1
  1128  0000D3                     utoa@str:
  1129                           	opt stack 0
  1130  0000D3                     button_timer_interrupt@bt:
  1131                           	opt stack 0
  1132                           
  1133                           ; 2 bytes @ 0x1A
  1134  0000D3                     	ds	1
  1135  0000D4                     get_quot_rem@div:
  1136                           	opt stack 0
  1137  0000D4                     caltime_to_epoch@ep:
  1138                           	opt stack 0
  1139                           
  1140                           ; 2 bytes @ 0x1B
  1141  0000D4                     	ds	1
  1142  0000D5                     button_timer_interrupt@sw_value:
  1143                           	opt stack 0
  1144  0000D5                     utoa@value:
  1145                           	opt stack 0
  1146                           
  1147                           ; 2 bytes @ 0x1C
  1148  0000D5                     	ds	1
  1149  0000D6                     ??_caltime_to_epoch:
  1150  0000D6                     get_quot_rem@num:
  1151                           	opt stack 0
  1152                           
  1153                           ; 4 bytes @ 0x1D
  1154  0000D6                     	ds	1
  1155  0000D7                     utoa@digits:
  1156                           	opt stack 0
  1157                           
  1158                           ; 1 bytes @ 0x1E
  1159  0000D7                     	ds	1
  1160  0000D8                     utoa@d:
  1161                           	opt stack 0
  1162                           
  1163                           ; 1 bytes @ 0x1F
  1164  0000D8                     	ds	1
  1165  0000D9                     utoa@v:
  1166                           	opt stack 0
  1167                           
  1168                           ; 2 bytes @ 0x20
  1169  0000D9                     	ds	1
  1170  0000DA                     caltime_to_epoch@year:
  1171                           	opt stack 0
  1172  0000DA                     epoch_to_caltime@ct:
  1173                           	opt stack 0
  1174                           
  1175                           ; 2 bytes @ 0x21
  1176  0000DA                     	ds	1
  1177  0000DB                     caltime_to_epoch@month_2000:
  1178                           	opt stack 0
  1179  0000DB                     display_dec@edit:
  1180                           	opt stack 0
  1181                           
  1182                           ; 1 bytes @ 0x22
  1183  0000DB                     	ds	1
  1184  0000DC                     epoch_to_caltime@ep:
  1185                           	opt stack 0
  1186  0000DC                     caltime_to_epoch@epoch:
  1187                           	opt stack 0
  1188                           
  1189                           ; 4 bytes @ 0x23
  1190  0000DC                     	ds	2
  1191  0000DE                     ??_epoch_to_caltime:
  1192                           
  1193                           ; 0 bytes @ 0x25
  1194  0000DE                     	ds	2
  1195  0000E0                     caltime_to_epoch@month:
  1196                           	opt stack 0
  1197                           
  1198                           ; 1 bytes @ 0x27
  1199  0000E0                     	ds	1
  1200  0000E1                     ??_display_time_1602:
  1201  0000E1                     sleep_loop@i:
  1202                           	opt stack 0
  1203                           
  1204                           ; 1 bytes @ 0x28
  1205  0000E1                     	ds	1
  1206                           tblptru	equ	0xFF8
  1207                           tblptrh	equ	0xFF7
  1208                           tblptrl	equ	0xFF6
  1209                           tablat	equ	0xFF5
  1210                           postinc0	equ	0xFEE
  1211                           wreg	equ	0xFE8
  1212                           postdec1	equ	0xFE5
  1213                           fsr1l	equ	0xFE1
  1214                           
  1215                           	psect	cstackCOMRAM
  1216  000001                     __pcstackCOMRAM:
  1217                           	opt stack 0
  1218  000001                     ?i2___awdiv:
  1219                           	opt stack 0
  1220  000001                     ?i2___lwdiv:
  1221                           	opt stack 0
  1222  000001                     ?i2___lldiv:
  1223                           	opt stack 0
  1224  000001                     i2LED@value:
  1225                           	opt stack 0
  1226  000001                     ringbuf_num@rb:
  1227                           	opt stack 0
  1228  000001                     delay_timer_interrupt@d:
  1229                           	opt stack 0
  1230  000001                     i2___awdiv@dividend:
  1231                           	opt stack 0
  1232  000001                     i2___lwdiv@dividend:
  1233                           	opt stack 0
  1234  000001                     i2___lldiv@dividend:
  1235                           	opt stack 0
  1236                           
  1237                           ; 4 bytes @ 0x0
  1238  000001                     	ds	1
  1239  000002                     i2LED@b:
  1240                           	opt stack 0
  1241                           
  1242                           ; 1 bytes @ 0x1
  1243  000002                     	ds	1
  1244  000003                     ??_ringbuf_num:
  1245  000003                     charge_time_count@i:
  1246                           	opt stack 0
  1247  000003                     i2___awdiv@divisor:
  1248                           	opt stack 0
  1249  000003                     i2___lwdiv@divisor:
  1250                           	opt stack 0
  1251                           
  1252                           ; 2 bytes @ 0x2
  1253  000003                     	ds	2
  1254  000005                     i2___awdiv@counter:
  1255                           	opt stack 0
  1256  000005                     ringbuf_push@rb:
  1257                           	opt stack 0
  1258  000005                     ringbuf_pop@rb:
  1259                           	opt stack 0
  1260  000005                     i2___lwdiv@quotient:
  1261                           	opt stack 0
  1262  000005                     i2___lldiv@divisor:
  1263                           	opt stack 0
  1264                           
  1265                           ; 4 bytes @ 0x4
  1266  000005                     	ds	1
  1267  000006                     i2___awdiv@sign:
  1268                           	opt stack 0
  1269                           
  1270                           ; 1 bytes @ 0x5
  1271  000006                     	ds	1
  1272  000007                     ??_ringbuf_pop:
  1273  000007                     ringbuf_push@asciicode:
  1274                           	opt stack 0
  1275  000007                     i2___lwdiv@counter:
  1276                           	opt stack 0
  1277  000007                     i2___awdiv@quotient:
  1278                           	opt stack 0
  1279                           
  1280                           ; 2 bytes @ 0x6
  1281  000007                     	ds	1
  1282  000008                     ??_ringbuf_push:
  1283                           
  1284                           ; 0 bytes @ 0x7
  1285  000008                     	ds	1
  1286  000009                     ??_lchika:
  1287  000009                     i2___lldiv@quotient:
  1288                           	opt stack 0
  1289                           
  1290                           ; 4 bytes @ 0x8
  1291  000009                     	ds	1
  1292  00000A                     ringbuf_pop@ret:
  1293                           	opt stack 0
  1294                           
  1295                           ; 1 bytes @ 0x9
  1296  00000A                     	ds	2
  1297  00000C                     lchika@i:
  1298                           	opt stack 0
  1299                           
  1300                           ; 1 bytes @ 0xB
  1301  00000C                     	ds	1
  1302  00000D                     tx_send@asciicode:
  1303                           	opt stack 0
  1304  00000D                     i2___lldiv@counter:
  1305                           	opt stack 0
  1306                           
  1307                           ; 1 bytes @ 0xC
  1308  00000D                     	ds	1
  1309  00000E                     ??_integrating:
  1310                           
  1311                           ; 0 bytes @ 0xD
  1312  00000E                     	ds	2
  1313  000010                     integrating@port:
  1314                           	opt stack 0
  1315                           
  1316                           ; 1 bytes @ 0xF
  1317  000010                     	ds	1
  1318  000011                     ??_ISR:
  1319                           
  1320                           ; 0 bytes @ 0x10
  1321  000011                     	ds	14
  1322  00001F                     ISR@ascii:
  1323                           	opt stack 0
  1324                           
  1325                           ; 1 bytes @ 0x1E
  1326  00001F                     	ds	1
  1327  000020                     ??_timer0_init:
  1328  000020                     ??_timer3_init:
  1329  000020                     ??_I2C_IdleCheck:
  1330  000020                     ??_x_to_d:
  1331  000020                     ?_ADC:
  1332                           	opt stack 0
  1333  000020                     ?_CTMU_read:
  1334                           	opt stack 0
  1335  000020                     ?_sw_flag_read:
  1336                           	opt stack 0
  1337  000020                     timer1_init@clock_select:
  1338                           	opt stack 0
  1339  000020                     ADC_init@p_ref:
  1340                           	opt stack 0
  1341  000020                     d_to_x@dec:
  1342                           	opt stack 0
  1343  000020                     OUT@value:
  1344                           	opt stack 0
  1345  000020                     IN@b:
  1346                           	opt stack 0
  1347  000020                     LED@value:
  1348                           	opt stack 0
  1349  000020                     ___awmod@counter:
  1350                           	opt stack 0
  1351  000020                     ___llmod@counter:
  1352                           	opt stack 0
  1353  000020                     ___lwmod@counter:
  1354                           	opt stack 0
  1355  000020                     Delay_ms@ms:
  1356                           	opt stack 0
  1357  000020                     sw_flag_read@bit_and:
  1358                           	opt stack 0
  1359  000020                     sw_flag_clear@bit_and:
  1360                           	opt stack 0
  1361                           
  1362                           ; 2 bytes @ 0x1F
  1363  000020                     	ds	1
  1364  000021                     ??_timer1_init:
  1365  000021                     timer0_init@prescaler:
  1366                           	opt stack 0
  1367  000021                     timer3_init@prescaler:
  1368                           	opt stack 0
  1369  000021                     I2C_IdleCheck@mask:
  1370                           	opt stack 0
  1371  000021                     x_to_d@hex:
  1372                           	opt stack 0
  1373  000021                     OUT@b:
  1374                           	opt stack 0
  1375  000021                     LED@b:
  1376                           	opt stack 0
  1377  000021                     ___awmod@sign:
  1378                           	opt stack 0
  1379  000021                     caltime_to_RTCC@ct:
  1380                           	opt stack 0
  1381                           
  1382                           ; 2 bytes @ 0x20
  1383  000021                     	ds	1
  1384  000022                     ??_ADC:
  1385  000022                     ??_CTMU_read:
  1386  000022                     ??_Delay_ms:
  1387  000022                     timer1_init@prescaler:
  1388                           	opt stack 0
  1389  000022                     I2C_Start@rw:
  1390                           	opt stack 0
  1391  000022                     I2C_Send@data:
  1392                           	opt stack 0
  1393  000022                     month_length@month:
  1394                           	opt stack 0
  1395  000022                     RTCC_to_caltime@dumy:
  1396                           	opt stack 0
  1397  000022                     sw_flag_read@port:
  1398                           	opt stack 0
  1399  000022                     sw_flag_clear@port:
  1400                           	opt stack 0
  1401                           
  1402                           ; 1 bytes @ 0x21
  1403  000022                     	ds	1
  1404  000023                     tblptru	equ	0xFF8
  1405                           tblptrh	equ	0xFF7
  1406                           tblptrl	equ	0xFF6
  1407                           tablat	equ	0xFF5
  1408                           postinc0	equ	0xFEE
  1409                           wreg	equ	0xFE8
  1410                           postdec1	equ	0xFE5
  1411                           fsr1l	equ	0xFE1
  1412                           
  1413                           ; 0 bytes @ 0x22
  1414 ;;
  1415 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1416 ;;
  1417 ;; *************** function _main *****************
  1418 ;; Defined at:
  1419 ;;		line 104 in file "PIC18F27J53-ChargeStation6-04.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;		None
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;  i               1  200[BANK1 ] unsigned char 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  2  737[None  ] int 
  1426 ;; Registers used:
  1427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1434 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1436 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1437 ;;Total ram usage:        1 bytes
  1438 ;; Hardware stack levels required when called:   11
  1439 ;; This function calls:
  1440 ;;		_CTMU_read
  1441 ;;		_LED
  1442 ;;		_OUT
  1443 ;;		_RTCC_from_RTCC
  1444 ;;		_RTCC_from_epoch
  1445 ;;		_RTCC_loop
  1446 ;;		___lwdiv
  1447 ;;		_main_init
  1448 ;;		_normal_mode_loop
  1449 ;;		_sleep_loop
  1450 ;; This function is called by:
  1451 ;;		Startup code after reset
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           	psect	text0
  1456  0113C2                     __ptext0:
  1457                           	opt stack 0
  1458  0113C2                     _main:
  1459                           	opt stack 20
  1460                           
  1461                           ;PIC18F27J53-ChargeStation6-04.c: 105: main_init();
  1462                           
  1463                           ;incstack = 0
  1464  0113C2  ECBE  F092         	call	_main_init	;wreg free
  1465                           
  1466                           ;PIC18F27J53-ChargeStation6-04.c: 106: INTCONbits.GIE = 1;
  1467  0113C6  8EF2               	bsf	intcon,7,c	;volatile
  1468                           
  1469                           ;PIC18F27J53-ChargeStation6-04.c: 108: ctmu_value0 = 4 * CTMU_read(0) / 5;
  1470  0113C8  0E00               	movlw	0
  1471  0113CA  EC74  F091         	call	_CTMU_read
  1472  0113CE  90D8               	bcf	status,0,c
  1473  0113D0  3620               	rlcf	?_CTMU_read,f,c
  1474  0113D2  3621               	rlcf	?_CTMU_read+1,f,c
  1475  0113D4  90D8               	bcf	status,0,c
  1476  0113D6  3620               	rlcf	?_CTMU_read,f,c
  1477  0113D8  3621               	rlcf	?_CTMU_read+1,f,c
  1478  0113DA  C020  F0CC         	movff	?_CTMU_read,___lwdiv@dividend
  1479  0113DE  C021  F0CD         	movff	?_CTMU_read+1,___lwdiv@dividend+1
  1480  0113E2  0E00               	movlw	0
  1481  0113E4  0100               	movlb	0	; () banked
  1482  0113E6  6FCF               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1483  0113E8  0E05               	movlw	5
  1484  0113EA  6FCE               	movwf	___lwdiv@divisor& (0+255),b
  1485  0113EC  EC73  F094         	call	___lwdiv	;wreg free
  1486  0113F0  C0CC  F02E         	movff	?___lwdiv,_ctmu_value0
  1487  0113F4  C0CD  F02F         	movff	?___lwdiv+1,_ctmu_value0+1
  1488                           
  1489                           ;PIC18F27J53-ChargeStation6-04.c: 109: ctmu_value1 = 4 * CTMU_read(1) / 5;
  1490  0113F8  0E01               	movlw	1
  1491  0113FA  EC74  F091         	call	_CTMU_read
  1492  0113FE  90D8               	bcf	status,0,c
  1493  011400  3620               	rlcf	?_CTMU_read,f,c
  1494  011402  3621               	rlcf	?_CTMU_read+1,f,c
  1495  011404  90D8               	bcf	status,0,c
  1496  011406  3620               	rlcf	?_CTMU_read,f,c
  1497  011408  3621               	rlcf	?_CTMU_read+1,f,c
  1498  01140A  C020  F0CC         	movff	?_CTMU_read,___lwdiv@dividend
  1499  01140E  C021  F0CD         	movff	?_CTMU_read+1,___lwdiv@dividend+1
  1500  011412  0E00               	movlw	0
  1501  011414  0100               	movlb	0	; () banked
  1502  011416  6FCF               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1503  011418  0E05               	movlw	5
  1504  01141A  6FCE               	movwf	___lwdiv@divisor& (0+255),b
  1505  01141C  EC73  F094         	call	___lwdiv	;wreg free
  1506  011420  C0CC  F030         	movff	?___lwdiv,_ctmu_value1
  1507  011424  C0CD  F031         	movff	?___lwdiv+1,_ctmu_value1+1
  1508                           
  1509                           ;PIC18F27J53-ChargeStation6-04.c: 110: ctmu_value2 = 4 * CTMU_read(2) / 5;
  1510  011428  0E02               	movlw	2
  1511  01142A  EC74  F091         	call	_CTMU_read
  1512  01142E  90D8               	bcf	status,0,c
  1513  011430  3620               	rlcf	?_CTMU_read,f,c
  1514  011432  3621               	rlcf	?_CTMU_read+1,f,c
  1515  011434  90D8               	bcf	status,0,c
  1516  011436  3620               	rlcf	?_CTMU_read,f,c
  1517  011438  3621               	rlcf	?_CTMU_read+1,f,c
  1518  01143A  C020  F0CC         	movff	?_CTMU_read,___lwdiv@dividend
  1519  01143E  C021  F0CD         	movff	?_CTMU_read+1,___lwdiv@dividend+1
  1520  011442  0E00               	movlw	0
  1521  011444  0100               	movlb	0	; () banked
  1522  011446  6FCF               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1523  011448  0E05               	movlw	5
  1524  01144A  6FCE               	movwf	___lwdiv@divisor& (0+255),b
  1525  01144C  EC73  F094         	call	___lwdiv	;wreg free
  1526  011450  C0CC  F032         	movff	?___lwdiv,_ctmu_value2
  1527  011454  C0CD  F033         	movff	?___lwdiv+1,_ctmu_value2+1
  1528                           
  1529                           ;PIC18F27J53-ChargeStation6-04.c: 111: ctmu_valuem = 4 * CTMU_read(3) / 5;
  1530  011458  0E03               	movlw	3
  1531  01145A  EC74  F091         	call	_CTMU_read
  1532  01145E  90D8               	bcf	status,0,c
  1533  011460  3620               	rlcf	?_CTMU_read,f,c
  1534  011462  3621               	rlcf	?_CTMU_read+1,f,c
  1535  011464  90D8               	bcf	status,0,c
  1536  011466  3620               	rlcf	?_CTMU_read,f,c
  1537  011468  3621               	rlcf	?_CTMU_read+1,f,c
  1538  01146A  C020  F0CC         	movff	?_CTMU_read,___lwdiv@dividend
  1539  01146E  C021  F0CD         	movff	?_CTMU_read+1,___lwdiv@dividend+1
  1540  011472  0E00               	movlw	0
  1541  011474  0100               	movlb	0	; () banked
  1542  011476  6FCF               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1543  011478  0E05               	movlw	5
  1544  01147A  6FCE               	movwf	___lwdiv@divisor& (0+255),b
  1545  01147C  EC73  F094         	call	___lwdiv	;wreg free
  1546  011480  C0CC  F034         	movff	?___lwdiv,_ctmu_valuem
  1547  011484  C0CD  F035         	movff	?___lwdiv+1,_ctmu_valuem+1
  1548                           
  1549                           ;PIC18F27J53-ChargeStation6-04.c: 113: RTCC_from_RTCC(&caltime_now, &epoch_now);
  1550  011488  0E9E               	movlw	low _caltime_now
  1551  01148A  0101               	movlb	1	; () banked
  1552  01148C  6F00               	movwf	RTCC_from_RTCC@ct& (0+255),b
  1553  01148E  0E00               	movlw	high _caltime_now
  1554  011490  0101               	movlb	1	; () banked
  1555  011492  6F01               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  1556  011494  0EB5               	movlw	low _epoch_now
  1557  011496  0101               	movlb	1	; () banked
  1558  011498  6F02               	movwf	RTCC_from_RTCC@ep& (0+255),b
  1559  01149A  0E00               	movlw	high _epoch_now
  1560  01149C  0101               	movlb	1	; () banked
  1561  01149E  6F03               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  1562  0114A0  EC34  F099         	call	_RTCC_from_RTCC	;wreg free
  1563                           
  1564                           ;PIC18F27J53-ChargeStation6-04.c: 114: if (caltime_now.DD == 0) {
  1565  0114A4  0100               	movlb	0	; () banked
  1566  0114A6  51A2               	movf	(_caltime_now+4)& (0+255),w,b
  1567  0114A8  A4D8               	btfss	status,2,c
  1568  0114AA  D018               	goto	l6171
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;PIC18F27J53-ChargeStation6-04.c: 115: epoch_now = 0;
  1572  0114AC  0E00               	movlw	0
  1573  0114AE  0100               	movlb	0	; () banked
  1574  0114B0  6FB5               	movwf	_epoch_now& (0+255),b
  1575  0114B2  0E00               	movlw	0
  1576  0114B4  6FB6               	movwf	(_epoch_now+1)& (0+255),b
  1577  0114B6  0E00               	movlw	0
  1578  0114B8  6FB7               	movwf	(_epoch_now+2)& (0+255),b
  1579  0114BA  0E00               	movlw	0
  1580  0114BC  6FB8               	movwf	(_epoch_now+3)& (0+255),b
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;PIC18F27J53-ChargeStation6-04.c: 116: RTCC_from_epoch(&caltime_now, &epoch_now);
  1584  0114BE  0E9E               	movlw	low _caltime_now
  1585  0114C0  0101               	movlb	1	; () banked
  1586  0114C2  6F0A               	movwf	RTCC_from_epoch@ct& (0+255),b
  1587  0114C4  0E00               	movlw	high _caltime_now
  1588  0114C6  0101               	movlb	1	; () banked
  1589  0114C8  6F0B               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  1590  0114CA  0EB5               	movlw	low _epoch_now
  1591  0114CC  0101               	movlb	1	; () banked
  1592  0114CE  6F0C               	movwf	RTCC_from_epoch@ep& (0+255),b
  1593  0114D0  0E00               	movlw	high _epoch_now
  1594  0114D2  0101               	movlb	1	; () banked
  1595  0114D4  6F0D               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  1596  0114D6  EC23  F099         	call	_RTCC_from_epoch	;wreg free
  1597  0114DA  D000               	goto	l6171
  1598  0114DC                     l6171:
  1599                           
  1600                           ;PIC18F27J53-ChargeStation6-04.c: 117: }
  1601                           ;PIC18F27J53-ChargeStation6-04.c: 118: print_content = TIME;
  1602  0114DC  0E01               	movlw	1
  1603  0114DE  0100               	movlb	0	; () banked
  1604  0114E0  6F9B               	movwf	_print_content& (0+255),b
  1605                           
  1606                           ; BSR set to: 0
  1607                           ;PIC18F27J53-ChargeStation6-04.c: 120: uint8_t i;
  1608                           ;PIC18F27J53-ChargeStation6-04.c: 122: for (i = 0; i < 3; i++) {
  1609  0114E2  0E00               	movlw	0
  1610  0114E4  0101               	movlb	1	; () banked
  1611  0114E6  6FC8               	movwf	main@i& (0+255),b
  1612  0114E8                     l6175:
  1613                           
  1614                           ; BSR set to: 1
  1615  0114E8  0E02               	movlw	2
  1616  0114EA  0101               	movlb	1	; () banked
  1617  0114EC  65C8               	cpfsgt	main@i& (0+255),b
  1618  0114EE  D001               	goto	l6179
  1619                           
  1620                           ; BSR set to: 1
  1621  0114F0  D028               	goto	l6191
  1622  0114F2                     l6179:
  1623                           
  1624                           ; BSR set to: 1
  1625                           ;PIC18F27J53-ChargeStation6-04.c: 123: OUT(i, 1);
  1626  0114F2  0E01               	movlw	1
  1627  0114F4  6E20               	movwf	OUT@value,c
  1628  0114F6  0101               	movlb	1	; () banked
  1629  0114F8  51C8               	movf	main@i& (0+255),w,b
  1630  0114FA  EC49  F096         	call	_OUT
  1631                           
  1632                           ;PIC18F27J53-ChargeStation6-04.c: 124: LED(i, 1);
  1633  0114FE  0E01               	movlw	1
  1634  011500  6E20               	movwf	LED@value,c
  1635  011502  0101               	movlb	1	; () banked
  1636  011504  51C8               	movf	main@i& (0+255),w,b
  1637  011506  ECA2  F097         	call	_LED
  1638                           
  1639                           ;PIC18F27J53-ChargeStation6-04.c: 125: cut_cnt[i] = 0;
  1640  01150A  0101               	movlb	1	; () banked
  1641  01150C  51C8               	movf	main@i& (0+255),w,b
  1642  01150E  0D02               	mullw	2
  1643  011510  0E84               	movlw	low _cut_cnt
  1644  011512  24F3               	addwf	prodl,w,c
  1645  011514  6ED9               	movwf	fsr2l,c
  1646  011516  0E00               	movlw	high _cut_cnt
  1647  011518  20F4               	addwfc	prodh,w,c
  1648  01151A  6EDA               	movwf	fsr2h,c
  1649  01151C  0E00               	movlw	0
  1650  01151E  6EDE               	movwf	postinc2,c
  1651  011520  0E00               	movlw	0
  1652  011522  6EDD               	movwf	postdec2,c
  1653                           
  1654                           ; BSR set to: 1
  1655                           ;PIC18F27J53-ChargeStation6-04.c: 126: auto_cut_ON[i] = 1;
  1656  011524  0101               	movlb	1	; () banked
  1657  011526  51C8               	movf	main@i& (0+255),w,b
  1658  011528  0D01               	mullw	1
  1659  01152A  0E29               	movlw	low _auto_cut_ON
  1660  01152C  24F3               	addwf	prodl,w,c
  1661  01152E  6ED9               	movwf	fsr2l,c
  1662  011530  0E00               	movlw	high _auto_cut_ON
  1663  011532  20F4               	addwfc	prodh,w,c
  1664  011534  6EDA               	movwf	fsr2h,c
  1665  011536  0E01               	movlw	1
  1666  011538  6EDF               	movwf	indf2,c
  1667                           
  1668                           ; BSR set to: 1
  1669  01153A  0101               	movlb	1	; () banked
  1670  01153C  2BC8               	incf	main@i& (0+255),f,b
  1671  01153E  D7D4               	goto	l6175
  1672                           
  1673                           ; BSR set to: 1
  1674                           
  1675                           ; BSR set to: 1
  1676  011540  D000               	goto	l6191
  1677  011542                     l6191:
  1678                           
  1679                           ;PIC18F27J53-ChargeStation6-04.c: 130: if (!sleep_flag) {
  1680  011542  0100               	movlb	0	; () banked
  1681  011544  519C               	movf	_sleep_flag& (0+255),w,b
  1682  011546  A4D8               	btfss	status,2,c
  1683  011548  D005               	goto	l6197
  1684                           
  1685                           ; BSR set to: 0
  1686                           ;PIC18F27J53-ChargeStation6-04.c: 131: normal_mode_loop();
  1687  01154A  EC92  F08F         	call	_normal_mode_loop	;wreg free
  1688                           
  1689                           ;PIC18F27J53-ChargeStation6-04.c: 132: RTCC_loop();
  1690  01154E  ECC7  F096         	call	_RTCC_loop	;wreg free
  1691  011552  D000               	goto	l6197
  1692  011554                     l6197:
  1693                           
  1694                           ;PIC18F27J53-ChargeStation6-04.c: 133: }
  1695                           ;PIC18F27J53-ChargeStation6-04.c: 134: sleep_loop();
  1696  011554  EC56  F08E         	call	_sleep_loop	;wreg free
  1697  011558  D7F4               	goto	l6191
  1698                           
  1699                           ;PIC18F27J53-ChargeStation6-04.c: 135: }
  1700                           ;PIC18F27J53-ChargeStation6-04.c: 136: return 0;
  1701                           ;	Return value of _main is never used
  1702  01155A  EF82  F000         	goto	start
  1703  01155E                     __end_of_main:
  1704                           	opt stack 0
  1705                           tblptru	equ	0xFF8
  1706                           tblptrh	equ	0xFF7
  1707                           tblptrl	equ	0xFF6
  1708                           tablat	equ	0xFF5
  1709                           prodh	equ	0xFF4
  1710                           prodl	equ	0xFF3
  1711                           intcon	equ	0xFF2
  1712                           postinc0	equ	0xFEE
  1713                           wreg	equ	0xFE8
  1714                           postdec1	equ	0xFE5
  1715                           fsr1l	equ	0xFE1
  1716                           indf2	equ	0xFDF
  1717                           postinc2	equ	0xFDE
  1718                           postdec2	equ	0xFDD
  1719                           fsr2h	equ	0xFDA
  1720                           fsr2l	equ	0xFD9
  1721                           status	equ	0xFD8
  1722                           
  1723 ;; *************** function _sleep_loop *****************
  1724 ;; Defined at:
  1725 ;;		line 386 in file "PIC18F27J53-ChargeStation6-04.h"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;		None
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  i               1   40[BANK0 ] unsigned char 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;		None               void
  1732 ;; Registers used:
  1733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1740 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1742 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1743 ;;Total ram usage:        1 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    8
  1746 ;; This function calls:
  1747 ;;		_I2C_LCD_Clear
  1748 ;;		_I2C_LCD_Puts
  1749 ;;		_I2C_LCD_SetCursor
  1750 ;;		_LED
  1751 ;;		_OUT
  1752 ;;		_RTCC_from_RTCC
  1753 ;; This function is called by:
  1754 ;;		_main
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text1
  1759  011CAC                     __ptext1:
  1760                           	opt stack 0
  1761  011CAC                     _sleep_loop:
  1762                           	opt stack 22
  1763                           
  1764                           ;PIC18F27J53-ChargeStation6-04.h: 387: static uint8_t prev_power_sw = 1;
  1765                           ;PIC18F27J53-ChargeStation6-04.h: 388: if (PORTBbits.RB0 != prev_power_sw) {
  1766                           
  1767                           ;incstack = 0
  1768  011CAC  A081               	btfss	3969,0,c	;volatile
  1769  011CAE  D002               	goto	u6310
  1770  011CB0  0E01               	movlw	1
  1771  011CB2  D001               	goto	u6316
  1772  011CB4                     u6310:
  1773  011CB4  0E00               	movlw	0
  1774  011CB6                     u6316:
  1775  011CB6  0100               	movlb	0	; () banked
  1776  011CB8  19FF               	xorwf	sleep_loop@prev_power_sw& (0+255),w,b
  1777  011CBA  B4D8               	btfsc	status,2,c
  1778  011CBC  D059               	goto	l6045
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;PIC18F27J53-ChargeStation6-04.h: 389: prev_power_sw = PORTBbits.RB0;
  1782  011CBE  0E00               	movlw	0
  1783  011CC0  B081               	btfsc	3969,0,c	;volatile
  1784  011CC2  0E01               	movlw	1
  1785  011CC4  0100               	movlb	0	; () banked
  1786  011CC6  6FFF               	movwf	sleep_loop@prev_power_sw& (0+255),b
  1787                           
  1788                           ; BSR set to: 0
  1789                           ;PIC18F27J53-ChargeStation6-04.h: 390: if (!PORTBbits.RB0) {
  1790  011CC8  B081               	btfsc	3969,0,c	;volatile
  1791  011CCA  D03A               	goto	l6035
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;PIC18F27J53-ChargeStation6-04.h: 391: sleep_flag = 1;
  1795  011CCC  0E01               	movlw	1
  1796  011CCE  0100               	movlb	0	; () banked
  1797  011CD0  6F9C               	movwf	_sleep_flag& (0+255),b
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;PIC18F27J53-ChargeStation6-04.h: 392: INTCONbits.GIE = 0;
  1801  011CD2  9EF2               	bcf	intcon,7,c	;volatile
  1802                           
  1803                           ;PIC18F27J53-ChargeStation6-04.h: 393: for (uint8_t i = 0; i < 3; i++) {
  1804  011CD4  0E00               	movlw	0
  1805  011CD6  0100               	movlb	0	; () banked
  1806  011CD8  6FE1               	movwf	sleep_loop@i& (0+255),b
  1807  011CDA                     l6013:
  1808                           
  1809                           ; BSR set to: 0
  1810  011CDA  0E02               	movlw	2
  1811  011CDC  0100               	movlb	0	; () banked
  1812  011CDE  65E1               	cpfsgt	sleep_loop@i& (0+255),b
  1813  011CE0  D001               	goto	l6017
  1814                           
  1815                           ; BSR set to: 0
  1816  011CE2  D00F               	goto	l6025
  1817  011CE4                     l6017:
  1818                           
  1819                           ; BSR set to: 0
  1820                           ;PIC18F27J53-ChargeStation6-04.h: 394: OUT(i, 0);
  1821  011CE4  0E00               	movlw	0
  1822  011CE6  6E20               	movwf	OUT@value,c
  1823  011CE8  0100               	movlb	0	; () banked
  1824  011CEA  51E1               	movf	sleep_loop@i& (0+255),w,b
  1825  011CEC  EC49  F096         	call	_OUT
  1826                           
  1827                           ;PIC18F27J53-ChargeStation6-04.h: 395: LED(i, 0);
  1828  011CF0  0E00               	movlw	0
  1829  011CF2  6E20               	movwf	LED@value,c
  1830  011CF4  0100               	movlb	0	; () banked
  1831  011CF6  51E1               	movf	sleep_loop@i& (0+255),w,b
  1832  011CF8  ECA2  F097         	call	_LED
  1833  011CFC  0100               	movlb	0	; () banked
  1834  011CFE  2BE1               	incf	sleep_loop@i& (0+255),f,b
  1835  011D00  D7EC               	goto	l6013
  1836  011D02                     l6025:
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;PIC18F27J53-ChargeStation6-04.h: 396: }
  1840                           ;PIC18F27J53-ChargeStation6-04.h: 397: I2C_LCD_Clear();
  1841  011D02  EC72  F099         	call	_I2C_LCD_Clear	;wreg free
  1842                           
  1843                           ;PIC18F27J53-ChargeStation6-04.h: 398: I2C_LCD_SetCursor(0, 0);
  1844  011D06  0E00               	movlw	0
  1845  011D08  0100               	movlb	0	; () banked
  1846  011D0A  6FBC               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  1847  011D0C  0E00               	movlw	0
  1848  011D0E  ECAD  F098         	call	_I2C_LCD_SetCursor
  1849                           
  1850                           ;PIC18F27J53-ChargeStation6-04.h: 399: I2C_LCD_Puts("Charge Station 6");
  1851  011D12  0E12               	movlw	low STR_22
  1852  011D14  0100               	movlb	0	; () banked
  1853  011D16  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  1854  011D18  0EFF               	movlw	high STR_22
  1855  011D1A  0100               	movlb	0	; () banked
  1856  011D1C  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1857  011D1E  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  1858                           
  1859                           ;PIC18F27J53-ChargeStation6-04.h: 400: I2C_LCD_SetCursor(0, 1);
  1860  011D22  0E01               	movlw	1
  1861  011D24  0100               	movlb	0	; () banked
  1862  011D26  6FBC               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  1863  011D28  0E00               	movlw	0
  1864  011D2A  ECAD  F098         	call	_I2C_LCD_SetCursor
  1865                           
  1866                           ;PIC18F27J53-ChargeStation6-04.h: 401: I2C_LCD_Puts("SLEEPING");
  1867  011D2E  0E99               	movlw	low STR_34
  1868  011D30  0100               	movlb	0	; () banked
  1869  011D32  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  1870  011D34  0EFF               	movlw	high STR_34
  1871  011D36  0100               	movlb	0	; () banked
  1872  011D38  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1873  011D3A  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  1874                           
  1875                           ;PIC18F27J53-ChargeStation6-04.h: 402: } else {
  1876  011D3E  D018               	goto	l6045
  1877  011D40                     l6035:
  1878                           
  1879                           ;PIC18F27J53-ChargeStation6-04.h: 403: sleep_flag = 0;
  1880  011D40  0E00               	movlw	0
  1881  011D42  0100               	movlb	0	; () banked
  1882  011D44  6F9C               	movwf	_sleep_flag& (0+255),b
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;PIC18F27J53-ChargeStation6-04.h: 404: RTCC_from_RTCC(&caltime_now, &epoch_now);
  1886  011D46  0E9E               	movlw	low _caltime_now
  1887  011D48  0101               	movlb	1	; () banked
  1888  011D4A  6F00               	movwf	RTCC_from_RTCC@ct& (0+255),b
  1889  011D4C  0E00               	movlw	high _caltime_now
  1890  011D4E  0101               	movlb	1	; () banked
  1891  011D50  6F01               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  1892  011D52  0EB5               	movlw	low _epoch_now
  1893  011D54  0101               	movlb	1	; () banked
  1894  011D56  6F02               	movwf	RTCC_from_RTCC@ep& (0+255),b
  1895  011D58  0E00               	movlw	high _epoch_now
  1896  011D5A  0101               	movlb	1	; () banked
  1897  011D5C  6F03               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  1898  011D5E  EC34  F099         	call	_RTCC_from_RTCC	;wreg free
  1899                           
  1900                           ;PIC18F27J53-ChargeStation6-04.h: 405: print_content = TIME;
  1901  011D62  0E01               	movlw	1
  1902  011D64  0100               	movlb	0	; () banked
  1903  011D66  6F9B               	movwf	_print_content& (0+255),b
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;PIC18F27J53-ChargeStation6-04.h: 406: time_change_flag = 1;
  1907  011D68  0E01               	movlw	1
  1908  011D6A  6E3A               	movwf	_time_change_flag,c
  1909                           
  1910                           ; BSR set to: 0
  1911                           ;PIC18F27J53-ChargeStation6-04.h: 407: INTCONbits.GIE = 1;
  1912  011D6C  8EF2               	bsf	intcon,7,c	;volatile
  1913                           
  1914                           ; BSR set to: 0
  1915  011D6E  D000               	goto	l6045
  1916  011D70                     l6045:
  1917                           
  1918                           ;PIC18F27J53-ChargeStation6-04.h: 408: }
  1919                           ;PIC18F27J53-ChargeStation6-04.h: 409: }
  1920                           ;PIC18F27J53-ChargeStation6-04.h: 410: if (sleep_flag) {
  1921  011D70  0100               	movlb	0	; () banked
  1922  011D72  519C               	movf	_sleep_flag& (0+255),w,b
  1923  011D74  B4D8               	btfsc	status,2,c
  1924  011D76  0012               	return	
  1925                           
  1926                           ; BSR set to: 0
  1927  011D78  0003               	sleep		;# 
  1928                           
  1929                           ;PIC18F27J53-ChargeStation6-04.h: 412: __nop();
  1930  011D7A  F000               	nop	
  1931  011D7C  0012               	return	
  1932  011D7E  0012               	return		;funcret
  1933  011D80                     __end_of_sleep_loop:
  1934                           	opt stack 0
  1935                           tblptru	equ	0xFF8
  1936                           tblptrh	equ	0xFF7
  1937                           tblptrl	equ	0xFF6
  1938                           tablat	equ	0xFF5
  1939                           prodh	equ	0xFF4
  1940                           prodl	equ	0xFF3
  1941                           intcon	equ	0xFF2
  1942                           postinc0	equ	0xFEE
  1943                           wreg	equ	0xFE8
  1944                           postdec1	equ	0xFE5
  1945                           fsr1l	equ	0xFE1
  1946                           indf2	equ	0xFDF
  1947                           postinc2	equ	0xFDE
  1948                           postdec2	equ	0xFDD
  1949                           fsr2h	equ	0xFDA
  1950                           fsr2l	equ	0xFD9
  1951                           status	equ	0xFD8
  1952                           
  1953 ;; *************** function _normal_mode_loop *****************
  1954 ;; Defined at:
  1955 ;;		line 343 in file "PIC18F27J53-ChargeStation6-04.h"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;		None
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;		None
  1960 ;; Return value:  Size  Location     Type
  1961 ;;		None               void
  1962 ;; Registers used:
  1963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1973 ;;Total ram usage:        0 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; Hardware stack levels required when called:   10
  1976 ;; This function calls:
  1977 ;;		_Auto_cut
  1978 ;;		_RTCC_time_set
  1979 ;;		_ctmu_loop
  1980 ;;		_display_LCD
  1981 ;;		_port_loop
  1982 ;; This function is called by:
  1983 ;;		_main
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text2
  1988  011F24                     __ptext2:
  1989                           	opt stack 0
  1990  011F24                     _normal_mode_loop:
  1991                           	opt stack 20
  1992                           
  1993                           ;PIC18F27J53-ChargeStation6-04.h: 344: if (!edit_flag.flags) {
  1994                           
  1995                           ;incstack = 0
  1996  011F24  0100               	movlb	0	; () banked
  1997  011F26  519A               	movf	_edit_flag& (0+255),w,b
  1998  011F28  A4D8               	btfss	status,2,c
  1999  011F2A  D025               	goto	l5977
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;PIC18F27J53-ChargeStation6-04.h: 345: port_loop();
  2003  011F2C  EC2E  F085         	call	_port_loop	;wreg free
  2004                           
  2005                           ;PIC18F27J53-ChargeStation6-04.h: 346: if (ctm.flag.press) {
  2006  011F30  0100               	movlb	0	; () banked
  2007  011F32  A1B3               	btfss	(_ctm+2)& (0+255),0,b
  2008  011F34  D020               	goto	l5977
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;PIC18F27J53-ChargeStation6-04.h: 347: ctm.flag.press = 0;
  2012  011F36  0100               	movlb	0	; () banked
  2013  011F38  91B3               	bcf	(_ctm+2)& (0+255),0,b
  2014                           
  2015                           ;PIC18F27J53-ChargeStation6-04.h: 348: switch (print_content) {
  2016  011F3A  D00D               	goto	l5975
  2017  011F3C                     l5963:
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;PIC18F27J53-ChargeStation6-04.h: 350: print_content = INTEGRATING;
  2021  011F3C  0E03               	movlw	3
  2022  011F3E  D005               	goto	L3
  2023  011F40                     l5965:
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;PIC18F27J53-ChargeStation6-04.h: 353: print_content = CHARGE_TIME;
  2027  011F40  0E04               	movlw	4
  2028  011F42  D003               	goto	L3
  2029  011F44                     l5967:
  2030                           
  2031                           ; BSR set to: 0
  2032                           ;PIC18F27J53-ChargeStation6-04.h: 356: print_content = TIME;
  2033  011F44  0E01               	movlw	1
  2034  011F46  D001               	goto	L3
  2035                           
  2036                           ; BSR set to: 0
  2037                           
  2038                           ;PIC18F27J53-ChargeStation6-04.h: 358: case TIME:
  2039                           
  2040                           ;PIC18F27J53-ChargeStation6-04.h: 357: break;
  2041  011F48  D003               	goto	l5971
  2042  011F4A                     L3:
  2043  011F4A  0100               	movlb	0	; () banked
  2044  011F4C  6F9B               	movwf	_print_content& (0+255),b
  2045                           
  2046                           ;PIC18F27J53-ChargeStation6-04.h: 360: break;
  2047  011F4E  D013               	goto	l5977
  2048  011F50                     l5971:
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;PIC18F27J53-ChargeStation6-04.h: 362: print_content = CURRENT;
  2052  011F50  0E02               	movlw	2
  2053  011F52  D7FB               	goto	L3
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;PIC18F27J53-ChargeStation6-04.h: 364: }
  2057                           
  2058                           ;PIC18F27J53-ChargeStation6-04.h: 363: break;
  2059  011F54  D010               	goto	l5977
  2060  011F56                     l5975:
  2061                           
  2062                           ; BSR set to: 0
  2063  011F56  0100               	movlb	0	; () banked
  2064  011F58  519B               	movf	_print_content& (0+255),w,b
  2065                           
  2066                           ; Switch size 1, requested type "space"
  2067                           ; Number of cases is 4, Range of values is 1 to 4
  2068                           ; switch strategies available:
  2069                           ; Name         Instructions Cycles
  2070                           ; simple_byte           13     7 (average)
  2071                           ;	Chosen strategy is simple_byte
  2072  011F5A  0A01               	xorlw	1	; case 1
  2073  011F5C  B4D8               	btfsc	status,2,c
  2074  011F5E  D7F8               	goto	l5971
  2075  011F60  0A03               	xorlw	3	; case 2
  2076  011F62  B4D8               	btfsc	status,2,c
  2077  011F64  D7EB               	goto	l5963
  2078  011F66  0A01               	xorlw	1	; case 3
  2079  011F68  B4D8               	btfsc	status,2,c
  2080  011F6A  D7EA               	goto	l5965
  2081  011F6C  0A07               	xorlw	7	; case 4
  2082  011F6E  B4D8               	btfsc	status,2,c
  2083  011F70  D7E9               	goto	l5967
  2084  011F72  D7EE               	goto	l5971
  2085                           
  2086                           ; BSR set to: 0
  2087                           
  2088                           ; BSR set to: 0
  2089  011F74  D000               	goto	l5977
  2090  011F76                     l5977:
  2091                           
  2092                           ; BSR set to: 0
  2093                           ;PIC18F27J53-ChargeStation6-04.h: 365: }
  2094                           ;PIC18F27J53-ChargeStation6-04.h: 366: }
  2095                           ;PIC18F27J53-ChargeStation6-04.h: 367: if (cut_time_flag) {
  2096  011F76  5037               	movf	_cut_time_flag,w,c
  2097  011F78  B4D8               	btfsc	status,2,c
  2098  011F7A  D005               	goto	l5983
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;PIC18F27J53-ChargeStation6-04.h: 368: cut_time_flag = 0;
  2102  011F7C  0E00               	movlw	0
  2103  011F7E  6E37               	movwf	_cut_time_flag,c
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;PIC18F27J53-ChargeStation6-04.h: 369: Auto_cut();
  2107  011F80  ECEF  F08B         	call	_Auto_cut	;wreg free
  2108  011F84  D000               	goto	l5983
  2109  011F86                     l5983:
  2110                           
  2111                           ;PIC18F27J53-ChargeStation6-04.h: 370: }
  2112                           ;PIC18F27J53-ChargeStation6-04.h: 371: if (time_change_flag) {
  2113  011F86  503A               	movf	_time_change_flag,w,c
  2114  011F88  B4D8               	btfsc	status,2,c
  2115  011F8A  D005               	goto	l5987
  2116                           
  2117                           ;PIC18F27J53-ChargeStation6-04.h: 372: time_change_flag = 0;
  2118  011F8C  0E00               	movlw	0
  2119  011F8E  6E3A               	movwf	_time_change_flag,c
  2120                           
  2121                           ;PIC18F27J53-ChargeStation6-04.h: 373: display_flag = 1;
  2122  011F90  0E01               	movlw	1
  2123  011F92  6E38               	movwf	_display_flag,c
  2124  011F94  D000               	goto	l5987
  2125  011F96                     l5987:
  2126                           
  2127                           ;PIC18F27J53-ChargeStation6-04.h: 374: }
  2128                           ;PIC18F27J53-ChargeStation6-04.h: 375: if (print_content == TIME)RTCC_time_set(&ctm, &ct
      +                          0, &ct1);
  2129  011F96  0100               	movlb	0	; () banked
  2130  011F98  059B               	decf	_print_content& (0+255),w,b
  2131  011F9A  A4D8               	btfss	status,2,c
  2132  011F9C  D015               	goto	l5991
  2133                           
  2134                           ; BSR set to: 0
  2135  011F9E  0EB1               	movlw	low _ctm
  2136  011FA0  0101               	movlb	1	; () banked
  2137  011FA2  6F18               	movwf	RTCC_time_set@mode& (0+255),b
  2138  011FA4  0E00               	movlw	high _ctm
  2139  011FA6  0101               	movlb	1	; () banked
  2140  011FA8  6F19               	movwf	(RTCC_time_set@mode+1)& (0+255),b
  2141  011FAA  0EA5               	movlw	low _ct0
  2142  011FAC  0101               	movlb	1	; () banked
  2143  011FAE  6F1A               	movwf	RTCC_time_set@cnt_inc& (0+255),b
  2144  011FB0  0E00               	movlw	high _ct0
  2145  011FB2  0101               	movlb	1	; () banked
  2146  011FB4  6F1B               	movwf	(RTCC_time_set@cnt_inc+1)& (0+255),b
  2147  011FB6  0EA9               	movlw	low _ct1
  2148  011FB8  0101               	movlb	1	; () banked
  2149  011FBA  6F1C               	movwf	RTCC_time_set@cnt_dec& (0+255),b
  2150  011FBC  0E00               	movlw	high _ct1
  2151  011FBE  0101               	movlb	1	; () banked
  2152  011FC0  6F1D               	movwf	(RTCC_time_set@cnt_dec+1)& (0+255),b
  2153  011FC2  EC59  F08B         	call	_RTCC_time_set	;wreg free
  2154  011FC6  D000               	goto	l5991
  2155  011FC8                     l5991:
  2156                           
  2157                           ;PIC18F27J53-ChargeStation6-04.h: 376: if (display_flag) {
  2158  011FC8  5038               	movf	_display_flag,w,c
  2159  011FCA  B4D8               	btfsc	status,2,c
  2160  011FCC  D005               	goto	l5997
  2161                           
  2162                           ;PIC18F27J53-ChargeStation6-04.h: 377: display_flag = 0;
  2163  011FCE  0E00               	movlw	0
  2164  011FD0  6E38               	movwf	_display_flag,c
  2165                           
  2166                           ;PIC18F27J53-ChargeStation6-04.h: 378: display_LCD();
  2167  011FD2  EC00  F080         	call	_display_LCD	;wreg free
  2168  011FD6  D000               	goto	l5997
  2169  011FD8                     l5997:
  2170                           
  2171                           ;PIC18F27J53-ChargeStation6-04.h: 379: }
  2172                           ;PIC18F27J53-ChargeStation6-04.h: 380: if (ctmu_flag) {
  2173  011FD8  5036               	movf	_ctmu_flag,w,c
  2174  011FDA  B4D8               	btfsc	status,2,c
  2175  011FDC  0012               	return	
  2176                           
  2177                           ;PIC18F27J53-ChargeStation6-04.h: 381: ctmu_flag = 0;
  2178  011FDE  0E00               	movlw	0
  2179  011FE0  6E36               	movwf	_ctmu_flag,c
  2180                           
  2181                           ;PIC18F27J53-ChargeStation6-04.h: 382: ctmu_loop();
  2182  011FE2  ECFD  F08C         	call	_ctmu_loop	;wreg free
  2183  011FE6  0012               	return	
  2184  011FE8  0012               	return		;funcret
  2185  011FEA                     __end_of_normal_mode_loop:
  2186                           	opt stack 0
  2187                           tblptru	equ	0xFF8
  2188                           tblptrh	equ	0xFF7
  2189                           tblptrl	equ	0xFF6
  2190                           tablat	equ	0xFF5
  2191                           prodh	equ	0xFF4
  2192                           prodl	equ	0xFF3
  2193                           intcon	equ	0xFF2
  2194                           postinc0	equ	0xFEE
  2195                           wreg	equ	0xFE8
  2196                           postdec1	equ	0xFE5
  2197                           fsr1l	equ	0xFE1
  2198                           indf2	equ	0xFDF
  2199                           postinc2	equ	0xFDE
  2200                           postdec2	equ	0xFDD
  2201                           fsr2h	equ	0xFDA
  2202                           fsr2l	equ	0xFD9
  2203                           status	equ	0xFD8
  2204                           
  2205 ;; *************** function _port_loop *****************
  2206 ;; Defined at:
  2207 ;;		line 282 in file "PIC18F27J53-ChargeStation6-04.h"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;		None
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;  i               1    4[BANK0 ] unsigned char 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;		None               void
  2214 ;; Registers used:
  2215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2222 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2224 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2225 ;;Total ram usage:        1 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; Hardware stack levels required when called:    5
  2228 ;; This function calls:
  2229 ;;		_LED
  2230 ;;		_OUT
  2231 ;;		_delay_set
  2232 ;;		_sw_flag_clear
  2233 ;;		_sw_flag_read
  2234 ;; This function is called by:
  2235 ;;		_normal_mode_loop
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text3
  2240  010A5C                     __ptext3:
  2241                           	opt stack 0
  2242  010A5C                     _port_loop:
  2243                           	opt stack 24
  2244                           
  2245                           ;PIC18F27J53-ChargeStation6-04.h: 283: uint8_t i;
  2246                           ;PIC18F27J53-ChargeStation6-04.h: 284: for (i = 0; i < 3; i++) {
  2247                           
  2248                           ;incstack = 0
  2249  010A5C  0E00               	movlw	0
  2250  010A5E  0100               	movlb	0	; () banked
  2251  010A60  6FBD               	movwf	port_loop@i& (0+255),b
  2252  010A62                     l5833:
  2253                           
  2254                           ; BSR set to: 0
  2255  010A62  0E02               	movlw	2
  2256  010A64  0100               	movlb	0	; () banked
  2257  010A66  65BD               	cpfsgt	port_loop@i& (0+255),b
  2258  010A68  D001               	goto	l5837
  2259                           
  2260                           ; BSR set to: 0
  2261  010A6A  D131               	goto	l5911
  2262  010A6C                     l5837:
  2263                           
  2264                           ; BSR set to: 0
  2265                           ;PIC18F27J53-ChargeStation6-04.h: 285: if (sw_flag_read(i, 0x0100)) {
  2266  010A6C  0E01               	movlw	1
  2267  010A6E  6E21               	movwf	sw_flag_read@bit_and+1,c
  2268  010A70  0E00               	movlw	0
  2269  010A72  6E20               	movwf	sw_flag_read@bit_and,c
  2270  010A74  0100               	movlb	0	; () banked
  2271  010A76  51BD               	movf	port_loop@i& (0+255),w,b
  2272  010A78  EC96  F095         	call	_sw_flag_read
  2273  010A7C  5020               	movf	?_sw_flag_read,w,c
  2274  010A7E  1021               	iorwf	?_sw_flag_read+1,w,c
  2275  010A80  B4D8               	btfsc	status,2,c
  2276  010A82  D02E               	goto	l5853
  2277                           
  2278                           ;PIC18F27J53-ChargeStation6-04.h: 286: OUT(i, 1);
  2279  010A84  0E01               	movlw	1
  2280  010A86  6E20               	movwf	OUT@value,c
  2281  010A88  0100               	movlb	0	; () banked
  2282  010A8A  51BD               	movf	port_loop@i& (0+255),w,b
  2283  010A8C  EC49  F096         	call	_OUT
  2284                           
  2285                           ;PIC18F27J53-ChargeStation6-04.h: 287: LED(i, 1);
  2286  010A90  0E01               	movlw	1
  2287  010A92  6E20               	movwf	LED@value,c
  2288  010A94  0100               	movlb	0	; () banked
  2289  010A96  51BD               	movf	port_loop@i& (0+255),w,b
  2290  010A98  ECA2  F097         	call	_LED
  2291                           
  2292                           ;PIC18F27J53-ChargeStation6-04.h: 288: cut_cnt[i] = 0;
  2293  010A9C  0100               	movlb	0	; () banked
  2294  010A9E  51BD               	movf	port_loop@i& (0+255),w,b
  2295  010AA0  0D02               	mullw	2
  2296  010AA2  0E84               	movlw	low _cut_cnt
  2297  010AA4  24F3               	addwf	prodl,w,c
  2298  010AA6  6ED9               	movwf	fsr2l,c
  2299  010AA8  0E00               	movlw	high _cut_cnt
  2300  010AAA  20F4               	addwfc	prodh,w,c
  2301  010AAC  6EDA               	movwf	fsr2h,c
  2302  010AAE  0E00               	movlw	0
  2303  010AB0  6EDE               	movwf	postinc2,c
  2304  010AB2  0E00               	movlw	0
  2305  010AB4  6EDD               	movwf	postdec2,c
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;PIC18F27J53-ChargeStation6-04.h: 289: print_port = i;
  2309  010AB6  C0BD  F039         	movff	port_loop@i,_print_port
  2310                           
  2311                           ;PIC18F27J53-ChargeStation6-04.h: 290: if (print_content == AUTO_STOP || print_content =
      +                          = ALWAYS_ON || print_content == RESETED)print_content = CURRENT;
  2312  010ABA  0E08               	movlw	8
  2313  010ABC  0100               	movlb	0	; () banked
  2314  010ABE  199B               	xorwf	_print_content& (0+255),w,b
  2315  010AC0  B4D8               	btfsc	status,2,c
  2316  010AC2  D00A               	goto	l5851
  2317                           
  2318                           ; BSR set to: 0
  2319  010AC4  0E07               	movlw	7
  2320  010AC6  0100               	movlb	0	; () banked
  2321  010AC8  199B               	xorwf	_print_content& (0+255),w,b
  2322  010ACA  B4D8               	btfsc	status,2,c
  2323  010ACC  D005               	goto	l5851
  2324                           
  2325                           ; BSR set to: 0
  2326  010ACE  0E06               	movlw	6
  2327  010AD0  0100               	movlb	0	; () banked
  2328  010AD2  199B               	xorwf	_print_content& (0+255),w,b
  2329  010AD4  A4D8               	btfss	status,2,c
  2330  010AD6  D004               	goto	l5853
  2331  010AD8                     l5851:
  2332                           
  2333                           ; BSR set to: 0
  2334  010AD8  0E02               	movlw	2
  2335  010ADA  0100               	movlb	0	; () banked
  2336  010ADC  6F9B               	movwf	_print_content& (0+255),b
  2337                           
  2338                           ; BSR set to: 0
  2339  010ADE  D000               	goto	l5853
  2340  010AE0                     l5853:
  2341                           
  2342                           ;PIC18F27J53-ChargeStation6-04.h: 291: }
  2343                           ;PIC18F27J53-ChargeStation6-04.h: 292: if (sw_flag_read(i, 0x0400)) {
  2344  010AE0  0E04               	movlw	4
  2345  010AE2  6E21               	movwf	sw_flag_read@bit_and+1,c
  2346  010AE4  0E00               	movlw	0
  2347  010AE6  6E20               	movwf	sw_flag_read@bit_and,c
  2348  010AE8  0100               	movlb	0	; () banked
  2349  010AEA  51BD               	movf	port_loop@i& (0+255),w,b
  2350  010AEC  EC96  F095         	call	_sw_flag_read
  2351  010AF0  5020               	movf	?_sw_flag_read,w,c
  2352  010AF2  1021               	iorwf	?_sw_flag_read+1,w,c
  2353  010AF4  B4D8               	btfsc	status,2,c
  2354  010AF6  D00C               	goto	l5859
  2355                           
  2356                           ;PIC18F27J53-ChargeStation6-04.h: 293: sw_flag_clear(i, 0x0000);
  2357  010AF8  0E00               	movlw	0
  2358  010AFA  6E21               	movwf	sw_flag_clear@bit_and+1,c
  2359  010AFC  0E00               	movlw	0
  2360  010AFE  6E20               	movwf	sw_flag_clear@bit_and,c
  2361  010B00  0100               	movlb	0	; () banked
  2362  010B02  51BD               	movf	port_loop@i& (0+255),w,b
  2363  010B04  EC5C  F097         	call	_sw_flag_clear
  2364                           
  2365                           ;PIC18F27J53-ChargeStation6-04.h: 294: print_content = RESET;
  2366  010B08  0E05               	movlw	5
  2367  010B0A  0100               	movlb	0	; () banked
  2368  010B0C  6F9B               	movwf	_print_content& (0+255),b
  2369  010B0E  D000               	goto	l5859
  2370  010B10                     l5859:
  2371                           
  2372                           ;PIC18F27J53-ChargeStation6-04.h: 295: }
  2373                           ;PIC18F27J53-ChargeStation6-04.h: 296: if (sw_flag_read(i, 0x0004)) {
  2374  010B10  0E00               	movlw	0
  2375  010B12  6E21               	movwf	sw_flag_read@bit_and+1,c
  2376  010B14  0E04               	movlw	4
  2377  010B16  6E20               	movwf	sw_flag_read@bit_and,c
  2378  010B18  0100               	movlb	0	; () banked
  2379  010B1A  51BD               	movf	port_loop@i& (0+255),w,b
  2380  010B1C  EC96  F095         	call	_sw_flag_read
  2381  010B20  5020               	movf	?_sw_flag_read,w,c
  2382  010B22  1021               	iorwf	?_sw_flag_read+1,w,c
  2383  010B24  B4D8               	btfsc	status,2,c
  2384  010B26  D040               	goto	l5873
  2385                           
  2386                           ;PIC18F27J53-ChargeStation6-04.h: 297: sw_flag_clear(i, 0x0000);
  2387  010B28  0E00               	movlw	0
  2388  010B2A  6E21               	movwf	sw_flag_clear@bit_and+1,c
  2389  010B2C  0E00               	movlw	0
  2390  010B2E  6E20               	movwf	sw_flag_clear@bit_and,c
  2391  010B30  0100               	movlb	0	; () banked
  2392  010B32  51BD               	movf	port_loop@i& (0+255),w,b
  2393  010B34  EC5C  F097         	call	_sw_flag_clear
  2394                           
  2395                           ;PIC18F27J53-ChargeStation6-04.h: 298: print_content = RESETED;
  2396  010B38  0E06               	movlw	6
  2397  010B3A  0100               	movlb	0	; () banked
  2398  010B3C  6F9B               	movwf	_print_content& (0+255),b
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;PIC18F27J53-ChargeStation6-04.h: 299: S[i] = 0;
  2402  010B3E  0100               	movlb	0	; () banked
  2403  010B40  51BD               	movf	port_loop@i& (0+255),w,b
  2404  010B42  0D04               	mullw	4
  2405  010B44  0E60               	movlw	low _S
  2406  010B46  24F3               	addwf	prodl,w,c
  2407  010B48  6ED9               	movwf	fsr2l,c
  2408  010B4A  0E00               	movlw	high _S
  2409  010B4C  20F4               	addwfc	prodh,w,c
  2410  010B4E  6EDA               	movwf	fsr2h,c
  2411  010B50  6ADE               	clrf	postinc2,c
  2412  010B52  6ADE               	clrf	postinc2,c
  2413  010B54  6ADE               	clrf	postinc2,c
  2414  010B56  6ADD               	clrf	postdec2,c
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;PIC18F27J53-ChargeStation6-04.h: 300: s[i] = 0;
  2418  010B58  0100               	movlb	0	; () banked
  2419  010B5A  51BD               	movf	port_loop@i& (0+255),w,b
  2420  010B5C  0D04               	mullw	4
  2421  010B5E  0E78               	movlw	low _s
  2422  010B60  24F3               	addwf	prodl,w,c
  2423  010B62  6ED9               	movwf	fsr2l,c
  2424  010B64  0E00               	movlw	high _s
  2425  010B66  20F4               	addwfc	prodh,w,c
  2426  010B68  6EDA               	movwf	fsr2h,c
  2427  010B6A  6ADE               	clrf	postinc2,c
  2428  010B6C  6ADE               	clrf	postinc2,c
  2429  010B6E  6ADE               	clrf	postinc2,c
  2430  010B70  6ADD               	clrf	postdec2,c
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;PIC18F27J53-ChargeStation6-04.h: 301: charge_time[i] = 0;
  2434  010B72  0100               	movlb	0	; () banked
  2435  010B74  51BD               	movf	port_loop@i& (0+255),w,b
  2436  010B76  0D04               	mullw	4
  2437  010B78  0E6C               	movlw	low _charge_time
  2438  010B7A  24F3               	addwf	prodl,w,c
  2439  010B7C  6ED9               	movwf	fsr2l,c
  2440  010B7E  0E00               	movlw	high _charge_time
  2441  010B80  20F4               	addwfc	prodh,w,c
  2442  010B82  6EDA               	movwf	fsr2h,c
  2443  010B84  6ADE               	clrf	postinc2,c
  2444  010B86  6ADE               	clrf	postinc2,c
  2445  010B88  6ADE               	clrf	postinc2,c
  2446  010B8A  6ADD               	clrf	postdec2,c
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;PIC18F27J53-ChargeStation6-04.h: 302: delay_set(&delay_display, 64);
  2450  010B8C  0E3B               	movlw	low _delay_display
  2451  010B8E  0100               	movlb	0	; () banked
  2452  010B90  6FB9               	movwf	delay_set@d& (0+255),b
  2453  010B92  0E00               	movlw	high _delay_display
  2454  010B94  0100               	movlb	0	; () banked
  2455  010B96  6FBA               	movwf	(delay_set@d+1)& (0+255),b
  2456  010B98  0E00               	movlw	0
  2457  010B9A  0100               	movlb	0	; () banked
  2458  010B9C  6FBC               	movwf	(delay_set@value+1)& (0+255),b
  2459  010B9E  0E40               	movlw	64
  2460  010BA0  6FBB               	movwf	delay_set@value& (0+255),b
  2461  010BA2  EC11  F099         	call	_delay_set	;wreg free
  2462  010BA6  D000               	goto	l5873
  2463  010BA8                     l5873:
  2464                           
  2465                           ;PIC18F27J53-ChargeStation6-04.h: 303: }
  2466                           ;PIC18F27J53-ChargeStation6-04.h: 304: if (sw_flag_read(i, 0x0800)) {
  2467  010BA8  0E08               	movlw	8
  2468  010BAA  6E21               	movwf	sw_flag_read@bit_and+1,c
  2469  010BAC  0E00               	movlw	0
  2470  010BAE  6E20               	movwf	sw_flag_read@bit_and,c
  2471  010BB0  0100               	movlb	0	; () banked
  2472  010BB2  51BD               	movf	port_loop@i& (0+255),w,b
  2473  010BB4  EC96  F095         	call	_sw_flag_read
  2474  010BB8  5020               	movf	?_sw_flag_read,w,c
  2475  010BBA  1021               	iorwf	?_sw_flag_read+1,w,c
  2476  010BBC  B4D8               	btfsc	status,2,c
  2477  010BBE  D01A               	goto	l5883
  2478                           
  2479                           ;PIC18F27J53-ChargeStation6-04.h: 305: sw_flag_clear(i, 0x0000);
  2480  010BC0  0E00               	movlw	0
  2481  010BC2  6E21               	movwf	sw_flag_clear@bit_and+1,c
  2482  010BC4  0E00               	movlw	0
  2483  010BC6  6E20               	movwf	sw_flag_clear@bit_and,c
  2484  010BC8  0100               	movlb	0	; () banked
  2485  010BCA  51BD               	movf	port_loop@i& (0+255),w,b
  2486  010BCC  EC5C  F097         	call	_sw_flag_clear
  2487                           
  2488                           ;PIC18F27J53-ChargeStation6-04.h: 306: if (auto_cut_ON[i]) {
  2489  010BD0  0100               	movlb	0	; () banked
  2490  010BD2  51BD               	movf	port_loop@i& (0+255),w,b
  2491  010BD4  0D01               	mullw	1
  2492  010BD6  0E29               	movlw	low _auto_cut_ON
  2493  010BD8  24F3               	addwf	prodl,w,c
  2494  010BDA  6ED9               	movwf	fsr2l,c
  2495  010BDC  0E00               	movlw	high _auto_cut_ON
  2496  010BDE  20F4               	addwfc	prodh,w,c
  2497  010BE0  6EDA               	movwf	fsr2h,c
  2498  010BE2  50DF               	movf	indf2,w,c
  2499  010BE4  B4D8               	btfsc	status,2,c
  2500  010BE6  D002               	goto	l5881
  2501                           
  2502                           ; BSR set to: 0
  2503                           ;PIC18F27J53-ChargeStation6-04.h: 307: print_content = AUTO_STOP;
  2504  010BE8  0E08               	movlw	8
  2505  010BEA  D001               	goto	L4
  2506  010BEC                     l5881:
  2507                           
  2508                           ; BSR set to: 0
  2509                           ;PIC18F27J53-ChargeStation6-04.h: 309: print_content = ALWAYS_ON;
  2510  010BEC  0E07               	movlw	7
  2511  010BEE                     L4:
  2512  010BEE  0100               	movlb	0	; () banked
  2513  010BF0  6F9B               	movwf	_print_content& (0+255),b
  2514                           
  2515                           ; BSR set to: 0
  2516  010BF2  D000               	goto	l5883
  2517  010BF4                     l5883:
  2518                           
  2519                           ;PIC18F27J53-ChargeStation6-04.h: 310: }
  2520                           ;PIC18F27J53-ChargeStation6-04.h: 311: }
  2521                           ;PIC18F27J53-ChargeStation6-04.h: 312: if (sw_flag_read(i, 0x0008)) {
  2522  010BF4  0E00               	movlw	0
  2523  010BF6  6E21               	movwf	sw_flag_read@bit_and+1,c
  2524  010BF8  0E08               	movlw	8
  2525  010BFA  6E20               	movwf	sw_flag_read@bit_and,c
  2526  010BFC  0100               	movlb	0	; () banked
  2527  010BFE  51BD               	movf	port_loop@i& (0+255),w,b
  2528  010C00  EC96  F095         	call	_sw_flag_read
  2529  010C04  5020               	movf	?_sw_flag_read,w,c
  2530  010C06  1021               	iorwf	?_sw_flag_read+1,w,c
  2531  010C08  B4D8               	btfsc	status,2,c
  2532  010C0A  D046               	goto	l5901
  2533                           
  2534                           ;PIC18F27J53-ChargeStation6-04.h: 313: sw_flag_clear(i, 0x0000);
  2535  010C0C  0E00               	movlw	0
  2536  010C0E  6E21               	movwf	sw_flag_clear@bit_and+1,c
  2537  010C10  0E00               	movlw	0
  2538  010C12  6E20               	movwf	sw_flag_clear@bit_and,c
  2539  010C14  0100               	movlb	0	; () banked
  2540  010C16  51BD               	movf	port_loop@i& (0+255),w,b
  2541  010C18  EC5C  F097         	call	_sw_flag_clear
  2542                           
  2543                           ;PIC18F27J53-ChargeStation6-04.h: 314: if (auto_cut_ON[i]) {
  2544  010C1C  0100               	movlb	0	; () banked
  2545  010C1E  51BD               	movf	port_loop@i& (0+255),w,b
  2546  010C20  0D01               	mullw	1
  2547  010C22  0E29               	movlw	low _auto_cut_ON
  2548  010C24  24F3               	addwf	prodl,w,c
  2549  010C26  6ED9               	movwf	fsr2l,c
  2550  010C28  0E00               	movlw	high _auto_cut_ON
  2551  010C2A  20F4               	addwfc	prodh,w,c
  2552  010C2C  6EDA               	movwf	fsr2h,c
  2553  010C2E  50DF               	movf	indf2,w,c
  2554  010C30  B4D8               	btfsc	status,2,c
  2555  010C32  D015               	goto	l5895
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;PIC18F27J53-ChargeStation6-04.h: 315: auto_cut_ON[i] = 0;
  2559  010C34  0100               	movlb	0	; () banked
  2560  010C36  51BD               	movf	port_loop@i& (0+255),w,b
  2561  010C38  0D01               	mullw	1
  2562  010C3A  0E29               	movlw	low _auto_cut_ON
  2563  010C3C  24F3               	addwf	prodl,w,c
  2564  010C3E  6ED9               	movwf	fsr2l,c
  2565  010C40  0E00               	movlw	high _auto_cut_ON
  2566  010C42  20F4               	addwfc	prodh,w,c
  2567  010C44  6EDA               	movwf	fsr2h,c
  2568  010C46  0E00               	movlw	0
  2569  010C48  6EDF               	movwf	indf2,c
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;PIC18F27J53-ChargeStation6-04.h: 316: print_content = ALWAYS_ON;
  2573  010C4A  0E07               	movlw	7
  2574  010C4C  0100               	movlb	0	; () banked
  2575  010C4E  6F9B               	movwf	_print_content& (0+255),b
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;PIC18F27J53-ChargeStation6-04.h: 317: OUT(i, 1);
  2579  010C50  0E01               	movlw	1
  2580  010C52  6E20               	movwf	OUT@value,c
  2581  010C54  0100               	movlb	0	; () banked
  2582  010C56  51BD               	movf	port_loop@i& (0+255),w,b
  2583  010C58  EC49  F096         	call	_OUT
  2584                           
  2585                           ;PIC18F27J53-ChargeStation6-04.h: 318: } else {
  2586  010C5C  D00F               	goto	l5899
  2587  010C5E                     l5895:
  2588                           
  2589                           ;PIC18F27J53-ChargeStation6-04.h: 319: auto_cut_ON[i] = 1;
  2590  010C5E  0100               	movlb	0	; () banked
  2591  010C60  51BD               	movf	port_loop@i& (0+255),w,b
  2592  010C62  0D01               	mullw	1
  2593  010C64  0E29               	movlw	low _auto_cut_ON
  2594  010C66  24F3               	addwf	prodl,w,c
  2595  010C68  6ED9               	movwf	fsr2l,c
  2596  010C6A  0E00               	movlw	high _auto_cut_ON
  2597  010C6C  20F4               	addwfc	prodh,w,c
  2598  010C6E  6EDA               	movwf	fsr2h,c
  2599  010C70  0E01               	movlw	1
  2600  010C72  6EDF               	movwf	indf2,c
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;PIC18F27J53-ChargeStation6-04.h: 320: print_content = AUTO_STOP;
  2604  010C74  0E08               	movlw	8
  2605  010C76  0100               	movlb	0	; () banked
  2606  010C78  6F9B               	movwf	_print_content& (0+255),b
  2607  010C7A  D000               	goto	l5899
  2608  010C7C                     l5899:
  2609                           
  2610                           ;PIC18F27J53-ChargeStation6-04.h: 321: }
  2611                           ;PIC18F27J53-ChargeStation6-04.h: 322: delay_set(&delay_display, 64);
  2612  010C7C  0E3B               	movlw	low _delay_display
  2613  010C7E  0100               	movlb	0	; () banked
  2614  010C80  6FB9               	movwf	delay_set@d& (0+255),b
  2615  010C82  0E00               	movlw	high _delay_display
  2616  010C84  0100               	movlb	0	; () banked
  2617  010C86  6FBA               	movwf	(delay_set@d+1)& (0+255),b
  2618  010C88  0E00               	movlw	0
  2619  010C8A  0100               	movlb	0	; () banked
  2620  010C8C  6FBC               	movwf	(delay_set@value+1)& (0+255),b
  2621  010C8E  0E40               	movlw	64
  2622  010C90  6FBB               	movwf	delay_set@value& (0+255),b
  2623  010C92  EC11  F099         	call	_delay_set	;wreg free
  2624  010C96  D000               	goto	l5901
  2625  010C98                     l5901:
  2626                           
  2627                           ;PIC18F27J53-ChargeStation6-04.h: 323: }
  2628                           ;PIC18F27J53-ChargeStation6-04.h: 324: if (sw_flag_read(i, 0x1000)) {
  2629  010C98  0E10               	movlw	16
  2630  010C9A  6E21               	movwf	sw_flag_read@bit_and+1,c
  2631  010C9C  0E00               	movlw	0
  2632  010C9E  6E20               	movwf	sw_flag_read@bit_and,c
  2633  010CA0  0100               	movlb	0	; () banked
  2634  010CA2  51BD               	movf	port_loop@i& (0+255),w,b
  2635  010CA4  EC96  F095         	call	_sw_flag_read
  2636  010CA8  5020               	movf	?_sw_flag_read,w,c
  2637  010CAA  1021               	iorwf	?_sw_flag_read+1,w,c
  2638  010CAC  B4D8               	btfsc	status,2,c
  2639  010CAE  D00C               	goto	l5907
  2640                           
  2641                           ;PIC18F27J53-ChargeStation6-04.h: 325: sw_flag_clear(i, 0x0000);
  2642  010CB0  0E00               	movlw	0
  2643  010CB2  6E21               	movwf	sw_flag_clear@bit_and+1,c
  2644  010CB4  0E00               	movlw	0
  2645  010CB6  6E20               	movwf	sw_flag_clear@bit_and,c
  2646  010CB8  0100               	movlb	0	; () banked
  2647  010CBA  51BD               	movf	port_loop@i& (0+255),w,b
  2648  010CBC  EC5C  F097         	call	_sw_flag_clear
  2649                           
  2650                           ;PIC18F27J53-ChargeStation6-04.h: 326: print_content = LOGO;
  2651  010CC0  0E00               	movlw	0
  2652  010CC2  0100               	movlb	0	; () banked
  2653  010CC4  6F9B               	movwf	_print_content& (0+255),b
  2654  010CC6  D000               	goto	l5907
  2655  010CC8                     l5907:
  2656  010CC8  0100               	movlb	0	; () banked
  2657  010CCA  2BBD               	incf	port_loop@i& (0+255),f,b
  2658  010CCC  D6CA               	goto	l5833
  2659  010CCE                     l5911:
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;PIC18F27J53-ChargeStation6-04.h: 327: }
  2663                           ;PIC18F27J53-ChargeStation6-04.h: 328: }
  2664                           ;PIC18F27J53-ChargeStation6-04.h: 329: if (delay_display.flag) {
  2665  010CCE  503B               	movf	_delay_display,w,c
  2666  010CD0  B4D8               	btfsc	status,2,c
  2667  010CD2  0012               	return	
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;PIC18F27J53-ChargeStation6-04.h: 330: delay_display.flag = 0;
  2671  010CD4  0E00               	movlw	0
  2672  010CD6  6E3B               	movwf	_delay_display,c
  2673                           
  2674                           ;PIC18F27J53-ChargeStation6-04.h: 331: print_content = CURRENT;
  2675  010CD8  0E02               	movlw	2
  2676  010CDA  0100               	movlb	0	; () banked
  2677  010CDC  6F9B               	movwf	_print_content& (0+255),b
  2678                           
  2679                           ;PIC18F27J53-ChargeStation6-04.h: 332: display_flag = 1;
  2680  010CDE  0E01               	movlw	1
  2681  010CE0  6E38               	movwf	_display_flag,c
  2682  010CE2  0012               	return	
  2683                           
  2684                           ; BSR set to: 0
  2685                           
  2686                           ; BSR set to: 0
  2687  010CE4  0012               	return		;funcret
  2688  010CE6                     __end_of_port_loop:
  2689                           	opt stack 0
  2690                           tblptru	equ	0xFF8
  2691                           tblptrh	equ	0xFF7
  2692                           tblptrl	equ	0xFF6
  2693                           tablat	equ	0xFF5
  2694                           prodh	equ	0xFF4
  2695                           prodl	equ	0xFF3
  2696                           intcon	equ	0xFF2
  2697                           postinc0	equ	0xFEE
  2698                           wreg	equ	0xFE8
  2699                           postdec1	equ	0xFE5
  2700                           fsr1l	equ	0xFE1
  2701                           indf2	equ	0xFDF
  2702                           postinc2	equ	0xFDE
  2703                           postdec2	equ	0xFDD
  2704                           fsr2h	equ	0xFDA
  2705                           fsr2l	equ	0xFD9
  2706                           status	equ	0xFD8
  2707                           
  2708 ;; *************** function _sw_flag_read *****************
  2709 ;; Defined at:
  2710 ;;		line 86 in file "PIC18F27J53-ChargeStation6-04.h"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;  port            1    wreg     unsigned char 
  2713 ;;  bit_and         2   31[COMRAM] unsigned int 
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;  port            1   33[COMRAM] unsigned char 
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  2   31[COMRAM] unsigned int 
  2718 ;; Registers used:
  2719 ;;		wreg, status,2, status,0
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2725 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2726 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2728 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2729 ;;Total ram usage:        3 bytes
  2730 ;; Hardware stack levels used:    1
  2731 ;; Hardware stack levels required when called:    4
  2732 ;; This function calls:
  2733 ;;		Nothing
  2734 ;; This function is called by:
  2735 ;;		_port_loop
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           	psect	text4
  2740  012B2C                     __ptext4:
  2741                           	opt stack 0
  2742  012B2C                     _sw_flag_read:
  2743                           	opt stack 24
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;incstack = 0
  2747                           ;sw_flag_read@port stored from wreg
  2748  012B2C  6E22               	movwf	sw_flag_read@port,c
  2749                           
  2750                           ;PIC18F27J53-ChargeStation6-04.h: 87: switch (port) {
  2751  012B2E  D020               	goto	l5507
  2752  012B30                     l5489:
  2753                           
  2754                           ;PIC18F27J53-ChargeStation6-04.h: 89: return (ct0.flags) & bit_and;
  2755  012B30  5020               	movf	sw_flag_read@bit_and,w,c
  2756  012B32  0100               	movlb	0	; () banked
  2757  012B34  15A7               	andwf	(_ct0+2)& (0+255),w,b
  2758  012B36  6E20               	movwf	?_sw_flag_read,c
  2759  012B38  5021               	movf	sw_flag_read@bit_and+1,w,c
  2760  012B3A  0100               	movlb	0	; () banked
  2761  012B3C  15A8               	andwf	(_ct0+3)& (0+255),w,b
  2762  012B3E  6E21               	movwf	?_sw_flag_read+1,c
  2763                           
  2764                           ; BSR set to: 0
  2765  012B40  0012               	return	
  2766  012B42                     l5493:
  2767                           
  2768                           ;PIC18F27J53-ChargeStation6-04.h: 91: return (ct1.flags) & bit_and;
  2769  012B42  5020               	movf	sw_flag_read@bit_and,w,c
  2770  012B44  0100               	movlb	0	; () banked
  2771  012B46  15AB               	andwf	(_ct1+2)& (0+255),w,b
  2772  012B48  6E20               	movwf	?_sw_flag_read,c
  2773  012B4A  5021               	movf	sw_flag_read@bit_and+1,w,c
  2774  012B4C  0100               	movlb	0	; () banked
  2775  012B4E  15AC               	andwf	(_ct1+3)& (0+255),w,b
  2776  012B50  6E21               	movwf	?_sw_flag_read+1,c
  2777                           
  2778                           ; BSR set to: 0
  2779  012B52  0012               	return	
  2780  012B54                     l5497:
  2781                           
  2782                           ;PIC18F27J53-ChargeStation6-04.h: 93: return (ct2.flags) & bit_and;
  2783  012B54  5020               	movf	sw_flag_read@bit_and,w,c
  2784  012B56  0100               	movlb	0	; () banked
  2785  012B58  15AF               	andwf	(_ct2+2)& (0+255),w,b
  2786  012B5A  6E20               	movwf	?_sw_flag_read,c
  2787  012B5C  5021               	movf	sw_flag_read@bit_and+1,w,c
  2788  012B5E  0100               	movlb	0	; () banked
  2789  012B60  15B0               	andwf	(_ct2+3)& (0+255),w,b
  2790  012B62  6E21               	movwf	?_sw_flag_read+1,c
  2791                           
  2792                           ; BSR set to: 0
  2793  012B64  0012               	return	
  2794  012B66                     l5501:
  2795                           
  2796                           ;PIC18F27J53-ChargeStation6-04.h: 95: return 0;
  2797  012B66  0E00               	movlw	0
  2798  012B68  6E21               	movwf	?_sw_flag_read+1,c
  2799  012B6A  0E00               	movlw	0
  2800  012B6C  6E20               	movwf	?_sw_flag_read,c
  2801                           
  2802                           ;PIC18F27J53-ChargeStation6-04.h: 96: }
  2803  012B6E  0012               	return	
  2804  012B70                     l5507:
  2805  012B70  5022               	movf	sw_flag_read@port,w,c
  2806                           
  2807                           ; Switch size 1, requested type "space"
  2808                           ; Number of cases is 3, Range of values is 0 to 2
  2809                           ; switch strategies available:
  2810                           ; Name         Instructions Cycles
  2811                           ; simple_byte           10     6 (average)
  2812                           ;	Chosen strategy is simple_byte
  2813  012B72  0A00               	xorlw	0	; case 0
  2814  012B74  B4D8               	btfsc	status,2,c
  2815  012B76  D7DC               	goto	l5489
  2816  012B78  0A01               	xorlw	1	; case 1
  2817  012B7A  B4D8               	btfsc	status,2,c
  2818  012B7C  D7E2               	goto	l5493
  2819  012B7E  0A03               	xorlw	3	; case 2
  2820  012B80  B4D8               	btfsc	status,2,c
  2821  012B82  D7E8               	goto	l5497
  2822  012B84  D7F0               	goto	l5501
  2823  012B86  0012               	return		;funcret
  2824  012B88                     __end_of_sw_flag_read:
  2825                           	opt stack 0
  2826                           tblptru	equ	0xFF8
  2827                           tblptrh	equ	0xFF7
  2828                           tblptrl	equ	0xFF6
  2829                           tablat	equ	0xFF5
  2830                           prodh	equ	0xFF4
  2831                           prodl	equ	0xFF3
  2832                           intcon	equ	0xFF2
  2833                           postinc0	equ	0xFEE
  2834                           wreg	equ	0xFE8
  2835                           postdec1	equ	0xFE5
  2836                           fsr1l	equ	0xFE1
  2837                           indf2	equ	0xFDF
  2838                           postinc2	equ	0xFDE
  2839                           postdec2	equ	0xFDD
  2840                           fsr2h	equ	0xFDA
  2841                           fsr2l	equ	0xFD9
  2842                           status	equ	0xFD8
  2843                           
  2844 ;; *************** function _sw_flag_clear *****************
  2845 ;; Defined at:
  2846 ;;		line 99 in file "PIC18F27J53-ChargeStation6-04.h"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;  port            1    wreg     unsigned char 
  2849 ;;  bit_and         2   31[COMRAM] unsigned int 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  port            1   33[COMRAM] unsigned char 
  2852 ;; Return value:  Size  Location     Type
  2853 ;;		None               void
  2854 ;; Registers used:
  2855 ;;		wreg, status,2, status,0
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2862 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2864 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2865 ;;Total ram usage:        3 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; Hardware stack levels required when called:    4
  2868 ;; This function calls:
  2869 ;;		Nothing
  2870 ;; This function is called by:
  2871 ;;		_port_loop
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           	psect	text5
  2876  012EB8                     __ptext5:
  2877                           	opt stack 0
  2878  012EB8                     _sw_flag_clear:
  2879                           	opt stack 24
  2880                           
  2881                           ;incstack = 0
  2882                           ;sw_flag_clear@port stored from wreg
  2883  012EB8  6E22               	movwf	sw_flag_clear@port,c
  2884                           
  2885                           ;PIC18F27J53-ChargeStation6-04.h: 100: switch (port) {
  2886  012EBA  D015               	goto	l5519
  2887  012EBC                     l5511:
  2888                           
  2889                           ;PIC18F27J53-ChargeStation6-04.h: 102: ct0.flags &= bit_and;
  2890  012EBC  5020               	movf	sw_flag_clear@bit_and,w,c
  2891  012EBE  0100               	movlb	0	; () banked
  2892  012EC0  17A7               	andwf	(_ct0+2)& (0+255),f,b
  2893  012EC2  5021               	movf	sw_flag_clear@bit_and+1,w,c
  2894  012EC4  0100               	movlb	0	; () banked
  2895  012EC6  17A8               	andwf	(_ct0+3)& (0+255),f,b
  2896                           
  2897                           ;PIC18F27J53-ChargeStation6-04.h: 103: break;
  2898  012EC8  0012               	return	
  2899  012ECA                     l5513:
  2900                           
  2901                           ;PIC18F27J53-ChargeStation6-04.h: 105: ct1.flags &= bit_and;
  2902  012ECA  5020               	movf	sw_flag_clear@bit_and,w,c
  2903  012ECC  0100               	movlb	0	; () banked
  2904  012ECE  17AB               	andwf	(_ct1+2)& (0+255),f,b
  2905  012ED0  5021               	movf	sw_flag_clear@bit_and+1,w,c
  2906  012ED2  0100               	movlb	0	; () banked
  2907  012ED4  17AC               	andwf	(_ct1+3)& (0+255),f,b
  2908                           
  2909                           ;PIC18F27J53-ChargeStation6-04.h: 106: break;
  2910  012ED6  0012               	return	
  2911  012ED8                     l5515:
  2912                           
  2913                           ;PIC18F27J53-ChargeStation6-04.h: 108: ct2.flags &= bit_and;
  2914  012ED8  5020               	movf	sw_flag_clear@bit_and,w,c
  2915  012EDA  0100               	movlb	0	; () banked
  2916  012EDC  17AF               	andwf	(_ct2+2)& (0+255),f,b
  2917  012EDE  5021               	movf	sw_flag_clear@bit_and+1,w,c
  2918  012EE0  0100               	movlb	0	; () banked
  2919  012EE2  17B0               	andwf	(_ct2+3)& (0+255),f,b
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;PIC18F27J53-ChargeStation6-04.h: 110: }
  2923                           
  2924                           ;PIC18F27J53-ChargeStation6-04.h: 109: break;
  2925  012EE4  0012               	return	
  2926  012EE6                     l5519:
  2927  012EE6  5022               	movf	sw_flag_clear@port,w,c
  2928                           
  2929                           ; Switch size 1, requested type "space"
  2930                           ; Number of cases is 3, Range of values is 0 to 2
  2931                           ; switch strategies available:
  2932                           ; Name         Instructions Cycles
  2933                           ; simple_byte           10     6 (average)
  2934                           ;	Chosen strategy is simple_byte
  2935  012EE8  0A00               	xorlw	0	; case 0
  2936  012EEA  B4D8               	btfsc	status,2,c
  2937  012EEC  D7E7               	goto	l5511
  2938  012EEE  0A01               	xorlw	1	; case 1
  2939  012EF0  B4D8               	btfsc	status,2,c
  2940  012EF2  D7EB               	goto	l5513
  2941  012EF4  0A03               	xorlw	3	; case 2
  2942  012EF6  A4D8               	btfss	status,2,c
  2943  012EF8  0012               	return	
  2944  012EFA  D7EE               	goto	l5515
  2945  012EFC  0012               	return		;funcret
  2946  012EFE                     __end_of_sw_flag_clear:
  2947                           	opt stack 0
  2948                           tblptru	equ	0xFF8
  2949                           tblptrh	equ	0xFF7
  2950                           tblptrl	equ	0xFF6
  2951                           tablat	equ	0xFF5
  2952                           prodh	equ	0xFF4
  2953                           prodl	equ	0xFF3
  2954                           intcon	equ	0xFF2
  2955                           postinc0	equ	0xFEE
  2956                           wreg	equ	0xFE8
  2957                           postdec1	equ	0xFE5
  2958                           fsr1l	equ	0xFE1
  2959                           indf2	equ	0xFDF
  2960                           postinc2	equ	0xFDE
  2961                           postdec2	equ	0xFDD
  2962                           fsr2h	equ	0xFDA
  2963                           fsr2l	equ	0xFD9
  2964                           status	equ	0xFD8
  2965                           
  2966 ;; *************** function _delay_set *****************
  2967 ;; Defined at:
  2968 ;;		line 366 in file "../My_header\My_header.h"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  d               2    0[BANK0 ] PTR struct Delay
  2971 ;;		 -> delay_display(3), 
  2972 ;;  value           2    2[BANK0 ] unsigned int 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;		None               void
  2977 ;; Registers used:
  2978 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2984 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2987 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2988 ;;Total ram usage:        4 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    4
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_port_loop
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text6
  2999  013222                     __ptext6:
  3000                           	opt stack 0
  3001  013222                     _delay_set:
  3002                           	opt stack 24
  3003                           
  3004                           ;My_header\My_header.h: 367: d->cnt = value;
  3005                           
  3006                           ;incstack = 0
  3007  013222  0100               	movlb	0	; () banked
  3008  013224  EE20 F001          	lfsr	2,1
  3009  013228  51B9               	movf	delay_set@d& (0+255),w,b
  3010  01322A  26D9               	addwf	fsr2l,f,c
  3011  01322C  51BA               	movf	(delay_set@d+1)& (0+255),w,b
  3012  01322E  22DA               	addwfc	fsr2h,f,c
  3013  013230  C0BB  FFDE         	movff	delay_set@value,postinc2
  3014  013234  C0BC  FFDD         	movff	delay_set@value+1,postdec2
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;My_header\My_header.h: 368: d->flag = 0;
  3018  013238  C0B9  FFD9         	movff	delay_set@d,fsr2l
  3019  01323C  C0BA  FFDA         	movff	delay_set@d+1,fsr2h
  3020  013240  0E00               	movlw	0
  3021  013242  6EDF               	movwf	indf2,c
  3022                           
  3023                           ; BSR set to: 0
  3024  013244  0012               	return		;funcret
  3025  013246                     __end_of_delay_set:
  3026                           	opt stack 0
  3027                           tblptru	equ	0xFF8
  3028                           tblptrh	equ	0xFF7
  3029                           tblptrl	equ	0xFF6
  3030                           tablat	equ	0xFF5
  3031                           prodh	equ	0xFF4
  3032                           prodl	equ	0xFF3
  3033                           intcon	equ	0xFF2
  3034                           postinc0	equ	0xFEE
  3035                           wreg	equ	0xFE8
  3036                           postdec1	equ	0xFE5
  3037                           fsr1l	equ	0xFE1
  3038                           indf2	equ	0xFDF
  3039                           postinc2	equ	0xFDE
  3040                           postdec2	equ	0xFDD
  3041                           fsr2h	equ	0xFDA
  3042                           fsr2l	equ	0xFD9
  3043                           status	equ	0xFD8
  3044                           
  3045 ;; *************** function _LED *****************
  3046 ;; Defined at:
  3047 ;;		line 72 in file "PIC18F27J53-ChargeStation6-04.h"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  b               1    wreg     unsigned char 
  3050 ;;  value           1   31[COMRAM] unsigned char 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;  b               1   32[COMRAM] unsigned char 
  3053 ;; Return value:  Size  Location     Type
  3054 ;;		None               void
  3055 ;; Registers used:
  3056 ;;		wreg, status,2, status,0
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3062 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3063 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3065 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3066 ;;Total ram usage:        2 bytes
  3067 ;; Hardware stack levels used:    1
  3068 ;; Hardware stack levels required when called:    4
  3069 ;; This function calls:
  3070 ;;		Nothing
  3071 ;; This function is called by:
  3072 ;;		_port_loop
  3073 ;;		_sleep_loop
  3074 ;;		_main
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           	psect	text7
  3079  012F44                     __ptext7:
  3080                           	opt stack 0
  3081  012F44                     _LED:
  3082                           	opt stack 25
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;incstack = 0
  3086                           ;LED@b stored from wreg
  3087  012F44  6E21               	movwf	LED@b,c
  3088                           
  3089                           ;PIC18F27J53-ChargeStation6-04.h: 73: switch (b) {
  3090  012F46  D012               	goto	l5485
  3091  012F48                     l584:
  3092                           
  3093                           ;PIC18F27J53-ChargeStation6-04.h: 75: LATB7 = value;
  3094  012F48  B020               	btfsc	LED@value,0,c
  3095  012F4A  D002               	bra	u5765
  3096  012F4C  9E8A               	bcf	3978,7,c	;volatile
  3097  012F4E  D001               	bra	u5766
  3098  012F50                     u5765:
  3099  012F50  8E8A               	bsf	3978,7,c	;volatile
  3100  012F52                     u5766:
  3101                           
  3102                           ;PIC18F27J53-ChargeStation6-04.h: 76: break;
  3103  012F52  0012               	return	
  3104  012F54                     l586:
  3105                           
  3106                           ;PIC18F27J53-ChargeStation6-04.h: 78: LATB6 = value;
  3107  012F54  B020               	btfsc	LED@value,0,c
  3108  012F56  D002               	bra	u5775
  3109  012F58  9C8A               	bcf	3978,6,c	;volatile
  3110  012F5A  D001               	bra	u5776
  3111  012F5C                     u5775:
  3112  012F5C  8C8A               	bsf	3978,6,c	;volatile
  3113  012F5E                     u5776:
  3114                           
  3115                           ;PIC18F27J53-ChargeStation6-04.h: 79: break;
  3116  012F5E  0012               	return	
  3117  012F60                     l587:
  3118                           
  3119                           ;PIC18F27J53-ChargeStation6-04.h: 81: LATC2 = value;
  3120  012F60  B020               	btfsc	LED@value,0,c
  3121  012F62  D002               	bra	u5785
  3122  012F64  948B               	bcf	3979,2,c	;volatile
  3123  012F66  D001               	bra	u5786
  3124  012F68                     u5785:
  3125  012F68  848B               	bsf	3979,2,c	;volatile
  3126  012F6A                     u5786:
  3127                           
  3128                           ;PIC18F27J53-ChargeStation6-04.h: 83: }
  3129                           
  3130                           ;PIC18F27J53-ChargeStation6-04.h: 82: break;
  3131  012F6A  0012               	return	
  3132  012F6C                     l5485:
  3133  012F6C  5021               	movf	LED@b,w,c
  3134                           
  3135                           ; Switch size 1, requested type "space"
  3136                           ; Number of cases is 3, Range of values is 0 to 2
  3137                           ; switch strategies available:
  3138                           ; Name         Instructions Cycles
  3139                           ; simple_byte           10     6 (average)
  3140                           ;	Chosen strategy is simple_byte
  3141  012F6E  0A00               	xorlw	0	; case 0
  3142  012F70  B4D8               	btfsc	status,2,c
  3143  012F72  D7EA               	goto	l584
  3144  012F74  0A01               	xorlw	1	; case 1
  3145  012F76  B4D8               	btfsc	status,2,c
  3146  012F78  D7ED               	goto	l586
  3147  012F7A  0A03               	xorlw	3	; case 2
  3148  012F7C  A4D8               	btfss	status,2,c
  3149  012F7E  0012               	return	
  3150  012F80  D7EF               	goto	l587
  3151  012F82  0012               	return		;funcret
  3152  012F84                     __end_of_LED:
  3153                           	opt stack 0
  3154                           tblptru	equ	0xFF8
  3155                           tblptrh	equ	0xFF7
  3156                           tblptrl	equ	0xFF6
  3157                           tablat	equ	0xFF5
  3158                           prodh	equ	0xFF4
  3159                           prodl	equ	0xFF3
  3160                           intcon	equ	0xFF2
  3161                           postinc0	equ	0xFEE
  3162                           wreg	equ	0xFE8
  3163                           postdec1	equ	0xFE5
  3164                           fsr1l	equ	0xFE1
  3165                           indf2	equ	0xFDF
  3166                           postinc2	equ	0xFDE
  3167                           postdec2	equ	0xFDD
  3168                           fsr2h	equ	0xFDA
  3169                           fsr2l	equ	0xFD9
  3170                           status	equ	0xFD8
  3171                           
  3172 ;; *************** function _display_LCD *****************
  3173 ;; Defined at:
  3174 ;;		line 184 in file "PIC18F27J53-ChargeStation6-04.h"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;		None
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  str            10   15[BANK1 ] unsigned char [10]
  3179 ;; Return value:  Size  Location     Type
  3180 ;;		None               void
  3181 ;; Registers used:
  3182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3189 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3191 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3192 ;;Total ram usage:       14 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; Hardware stack levels required when called:    9
  3195 ;; This function calls:
  3196 ;;		_I2C_LCD_Clear
  3197 ;;		_I2C_LCD_Putc
  3198 ;;		_I2C_LCD_Puts
  3199 ;;		_I2C_LCD_SetCursor
  3200 ;;		___lldiv
  3201 ;;		___llmod
  3202 ;;		___lwdiv
  3203 ;;		___lwmod
  3204 ;;		_display_port
  3205 ;;		_display_time_1602
  3206 ;;		_utoa
  3207 ;; This function is called by:
  3208 ;;		_normal_mode_loop
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text8
  3213  010000                     __ptext8:
  3214                           	opt stack 0
  3215  010000                     _display_LCD:
  3216                           	opt stack 20
  3217                           
  3218                           ;PIC18F27J53-ChargeStation6-04.h: 185: I2C_LCD_Clear();
  3219                           
  3220                           ;incstack = 0
  3221  010000  EC72  F099         	call	_I2C_LCD_Clear	;wreg free
  3222                           
  3223                           ;PIC18F27J53-ChargeStation6-04.h: 186: switch (print_content) {
  3224  010004  D262               	goto	l5829
  3225  010006                     l5739:
  3226                           
  3227                           ;PIC18F27J53-ChargeStation6-04.h: 188: I2C_LCD_SetCursor(0, 0);
  3228  010006  0E00               	movlw	0
  3229  010008  0100               	movlb	0	; () banked
  3230  01000A  6FBC               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  3231  01000C  0E00               	movlw	0
  3232  01000E  ECAD  F098         	call	_I2C_LCD_SetCursor
  3233                           
  3234                           ;PIC18F27J53-ChargeStation6-04.h: 189: I2C_LCD_Puts("Charge Station 6");
  3235  010012  0E12               	movlw	low STR_22
  3236  010014  0100               	movlb	0	; () banked
  3237  010016  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  3238  010018  0EFF               	movlw	high STR_22
  3239  01001A  0100               	movlb	0	; () banked
  3240  01001C  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3241  01001E  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  3242                           
  3243                           ;PIC18F27J53-ChargeStation6-04.h: 190: I2C_LCD_SetCursor(0, 1);
  3244  010022  0E01               	movlw	1
  3245  010024  0100               	movlb	0	; () banked
  3246  010026  6FBC               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  3247  010028  0E00               	movlw	0
  3248  01002A  ECAD  F098         	call	_I2C_LCD_SetCursor
  3249                           
  3250                           ;PIC18F27J53-ChargeStation6-04.h: 191: I2C_LCD_Puts("Made by KERI");
  3251  01002E  0E33               	movlw	low STR_23
  3252  010030  0100               	movlb	0	; () banked
  3253  010032  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  3254  010034  0EFF               	movlw	high STR_23
  3255  010036  0100               	movlb	0	; () banked
  3256  010038  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3257  01003A  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  3258                           
  3259                           ;PIC18F27J53-ChargeStation6-04.h: 192: break;
  3260  01003E  0012               	return	
  3261  010040                     l5745:
  3262                           
  3263                           ;PIC18F27J53-ChargeStation6-04.h: 194: display_time_1602(&caltime_now, &epoch_now);
  3264  010040  0E9E               	movlw	low _caltime_now
  3265  010042  0101               	movlb	1	; () banked
  3266  010044  6F0B               	movwf	display_time_1602@ct& (0+255),b
  3267  010046  0E00               	movlw	high _caltime_now
  3268  010048  0101               	movlb	1	; () banked
  3269  01004A  6F0C               	movwf	(display_time_1602@ct+1)& (0+255),b
  3270  01004C  0EB5               	movlw	low _epoch_now
  3271  01004E  0101               	movlb	1	; () banked
  3272  010050  6F0D               	movwf	display_time_1602@ep& (0+255),b
  3273  010052  0E00               	movlw	high _epoch_now
  3274  010054  0101               	movlb	1	; () banked
  3275  010056  6F0E               	movwf	(display_time_1602@ep+1)& (0+255),b
  3276  010058  ECAF  F08A         	call	_display_time_1602	;wreg free
  3277                           
  3278                           ;PIC18F27J53-ChargeStation6-04.h: 195: break;
  3279  01005C  0012               	return	
  3280  01005E                     l5747:
  3281                           
  3282                           ;PIC18F27J53-ChargeStation6-04.h: 197: display_port();
  3283  01005E  ECC0  F08E         	call	_display_port	;wreg free
  3284                           
  3285                           ;PIC18F27J53-ChargeStation6-04.h: 198: I2C_LCD_SetCursor(0, 1);
  3286  010062  0E01               	movlw	1
  3287  010064  0100               	movlb	0	; () banked
  3288  010066  6FBC               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  3289  010068  0E00               	movlw	0
  3290  01006A  ECAD  F098         	call	_I2C_LCD_SetCursor
  3291                           
  3292                           ;PIC18F27J53-ChargeStation6-04.h: 199: I2C_LCD_Putc((I[print_port] % 10000) / 1000 + '0'
      +                          );
  3293  01006E  0E27               	movlw	39
  3294  010070  0100               	movlb	0	; () banked
  3295  010072  6FBC               	movwf	(___lwmod@divisor+1)& (0+255),b
  3296  010074  0E10               	movlw	16
  3297  010076  6FBB               	movwf	___lwmod@divisor& (0+255),b
  3298  010078  5039               	movf	_print_port,w,c
  3299  01007A  0D02               	mullw	2
  3300  01007C  0E23               	movlw	low _I
  3301  01007E  24F3               	addwf	prodl,w,c
  3302  010080  6ED9               	movwf	fsr2l,c
  3303  010082  0E00               	movlw	high _I
  3304  010084  20F4               	addwfc	prodh,w,c
  3305  010086  6EDA               	movwf	fsr2h,c
  3306  010088  CFDE F0B9          	movff	postinc2,___lwmod@dividend
  3307  01008C  CFDD F0BA          	movff	postdec2,___lwmod@dividend+1
  3308  010090  EC63  F095         	call	___lwmod	;wreg free
  3309  010094  C0B9  F0CC         	movff	?___lwmod,___lwdiv@dividend
  3310  010098  C0BA  F0CD         	movff	?___lwmod+1,___lwdiv@dividend+1
  3311  01009C  0E03               	movlw	3
  3312  01009E  0100               	movlb	0	; () banked
  3313  0100A0  6FCF               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3314  0100A2  0EE8               	movlw	232
  3315  0100A4  6FCE               	movwf	___lwdiv@divisor& (0+255),b
  3316  0100A6  EC73  F094         	call	___lwdiv	;wreg free
  3317  0100AA  0100               	movlb	0	; () banked
  3318  0100AC  51CC               	movf	?___lwdiv& (0+255),w,b
  3319  0100AE  0F30               	addlw	48
  3320  0100B0  ECFE  F097         	call	_I2C_LCD_Putc
  3321                           
  3322                           ;PIC18F27J53-ChargeStation6-04.h: 200: I2C_LCD_Putc('.');
  3323  0100B4  0E2E               	movlw	46
  3324  0100B6  ECFE  F097         	call	_I2C_LCD_Putc
  3325                           
  3326                           ;PIC18F27J53-ChargeStation6-04.h: 201: I2C_LCD_Putc((I[print_port] % 1000) / 100 + '0');
  3327  0100BA  0E03               	movlw	3
  3328  0100BC  0100               	movlb	0	; () banked
  3329  0100BE  6FBC               	movwf	(___lwmod@divisor+1)& (0+255),b
  3330  0100C0  0EE8               	movlw	232
  3331  0100C2  6FBB               	movwf	___lwmod@divisor& (0+255),b
  3332  0100C4  5039               	movf	_print_port,w,c
  3333  0100C6  0D02               	mullw	2
  3334  0100C8  0E23               	movlw	low _I
  3335  0100CA  24F3               	addwf	prodl,w,c
  3336  0100CC  6ED9               	movwf	fsr2l,c
  3337  0100CE  0E00               	movlw	high _I
  3338  0100D0  20F4               	addwfc	prodh,w,c
  3339  0100D2  6EDA               	movwf	fsr2h,c
  3340  0100D4  CFDE F0B9          	movff	postinc2,___lwmod@dividend
  3341  0100D8  CFDD F0BA          	movff	postdec2,___lwmod@dividend+1
  3342  0100DC  EC63  F095         	call	___lwmod	;wreg free
  3343  0100E0  C0B9  F0CC         	movff	?___lwmod,___lwdiv@dividend
  3344  0100E4  C0BA  F0CD         	movff	?___lwmod+1,___lwdiv@dividend+1
  3345  0100E8  0E00               	movlw	0
  3346  0100EA  0100               	movlb	0	; () banked
  3347  0100EC  6FCF               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3348  0100EE  0E64               	movlw	100
  3349  0100F0  6FCE               	movwf	___lwdiv@divisor& (0+255),b
  3350  0100F2  EC73  F094         	call	___lwdiv	;wreg free
  3351  0100F6  0100               	movlb	0	; () banked
  3352  0100F8  51CC               	movf	?___lwdiv& (0+255),w,b
  3353  0100FA  0F30               	addlw	48
  3354  0100FC  ECFE  F097         	call	_I2C_LCD_Putc
  3355                           
  3356                           ;PIC18F27J53-ChargeStation6-04.h: 202: I2C_LCD_Putc((I[print_port] % 100) / 10 + '0');
  3357  010100  0E00               	movlw	0
  3358  010102  0100               	movlb	0	; () banked
  3359  010104  6FBC               	movwf	(___lwmod@divisor+1)& (0+255),b
  3360  010106  0E64               	movlw	100
  3361  010108  6FBB               	movwf	___lwmod@divisor& (0+255),b
  3362  01010A  5039               	movf	_print_port,w,c
  3363  01010C  0D02               	mullw	2
  3364  01010E  0E23               	movlw	low _I
  3365  010110  24F3               	addwf	prodl,w,c
  3366  010112  6ED9               	movwf	fsr2l,c
  3367  010114  0E00               	movlw	high _I
  3368  010116  20F4               	addwfc	prodh,w,c
  3369  010118  6EDA               	movwf	fsr2h,c
  3370  01011A  CFDE F0B9          	movff	postinc2,___lwmod@dividend
  3371  01011E  CFDD F0BA          	movff	postdec2,___lwmod@dividend+1
  3372  010122  EC63  F095         	call	___lwmod	;wreg free
  3373  010126  C0B9  F0CC         	movff	?___lwmod,___lwdiv@dividend
  3374  01012A  C0BA  F0CD         	movff	?___lwmod+1,___lwdiv@dividend+1
  3375  01012E  0E00               	movlw	0
  3376  010130  0100               	movlb	0	; () banked
  3377  010132  6FCF               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3378  010134  0E0A               	movlw	10
  3379  010136  6FCE               	movwf	___lwdiv@divisor& (0+255),b
  3380  010138  EC73  F094         	call	___lwdiv	;wreg free
  3381  01013C  0100               	movlb	0	; () banked
  3382  01013E  51CC               	movf	?___lwdiv& (0+255),w,b
  3383  010140  0F30               	addlw	48
  3384  010142  ECFE  F097         	call	_I2C_LCD_Putc
  3385                           
  3386                           ;PIC18F27J53-ChargeStation6-04.h: 203: I2C_LCD_Putc((I[print_port] % 10) / 1 + '0');
  3387  010146  5039               	movf	_print_port,w,c
  3388  010148  0D02               	mullw	2
  3389  01014A  0E23               	movlw	low _I
  3390  01014C  24F3               	addwf	prodl,w,c
  3391  01014E  6ED9               	movwf	fsr2l,c
  3392  010150  0E00               	movlw	high _I
  3393  010152  20F4               	addwfc	prodh,w,c
  3394  010154  6EDA               	movwf	fsr2h,c
  3395  010156  CFDE F0B9          	movff	postinc2,___lwmod@dividend
  3396  01015A  CFDD F0BA          	movff	postdec2,___lwmod@dividend+1
  3397  01015E  0E00               	movlw	0
  3398  010160  0100               	movlb	0	; () banked
  3399  010162  6FBC               	movwf	(___lwmod@divisor+1)& (0+255),b
  3400  010164  0E0A               	movlw	10
  3401  010166  6FBB               	movwf	___lwmod@divisor& (0+255),b
  3402  010168  EC63  F095         	call	___lwmod	;wreg free
  3403  01016C  0100               	movlb	0	; () banked
  3404  01016E  51B9               	movf	?___lwmod& (0+255),w,b
  3405  010170  0F30               	addlw	48
  3406  010172  ECFE  F097         	call	_I2C_LCD_Putc
  3407                           
  3408                           ;PIC18F27J53-ChargeStation6-04.h: 204: I2C_LCD_Putc('A');
  3409  010176  0E41               	movlw	65
  3410  010178  ECFE  F097         	call	_I2C_LCD_Putc
  3411                           
  3412                           ;PIC18F27J53-ChargeStation6-04.h: 205: break;
  3413  01017C  0012               	return	
  3414  01017E                     l5763:
  3415                           
  3416                           ;PIC18F27J53-ChargeStation6-04.h: 207: display_port();
  3417  01017E  ECC0  F08E         	call	_display_port	;wreg free
  3418                           
  3419                           ;PIC18F27J53-ChargeStation6-04.h: 208: I2C_LCD_SetCursor(0, 1);
  3420  010182  0E01               	movlw	1
  3421  010184  0100               	movlb	0	; () banked
  3422  010186  6FBC               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  3423  010188  0E00               	movlw	0
  3424  01018A  ECAD  F098         	call	_I2C_LCD_SetCursor
  3425                           
  3426                           ;PIC18F27J53-ChargeStation6-04.h: 209: uint8_t str[10];
  3427                           ;PIC18F27J53-ChargeStation6-04.h: 210: utoa(str, S[print_port], 5);
  3428  01018E  0E0F               	movlw	low display_LCD@str
  3429  010190  0100               	movlb	0	; () banked
  3430  010192  6FD3               	movwf	utoa@str& (0+255),b
  3431  010194  0E01               	movlw	high display_LCD@str
  3432  010196  0100               	movlb	0	; () banked
  3433  010198  6FD4               	movwf	(utoa@str+1)& (0+255),b
  3434  01019A  5039               	movf	_print_port,w,c
  3435  01019C  0D04               	mullw	4
  3436  01019E  0E60               	movlw	low _S
  3437  0101A0  24F3               	addwf	prodl,w,c
  3438  0101A2  6ED9               	movwf	fsr2l,c
  3439  0101A4  0E00               	movlw	high _S
  3440  0101A6  20F4               	addwfc	prodh,w,c
  3441  0101A8  6EDA               	movwf	fsr2h,c
  3442  0101AA  CFDE F0D5          	movff	postinc2,utoa@value
  3443  0101AE  CFDD F0D6          	movff	postdec2,utoa@value+1
  3444  0101B2  0E05               	movlw	5
  3445  0101B4  0100               	movlb	0	; () banked
  3446  0101B6  6FD7               	movwf	utoa@digits& (0+255),b
  3447  0101B8  ECE7  F093         	call	_utoa	;wreg free
  3448                           
  3449                           ;PIC18F27J53-ChargeStation6-04.h: 211: I2C_LCD_Puts(str);
  3450  0101BC  0E0F               	movlw	low display_LCD@str
  3451  0101BE  0100               	movlb	0	; () banked
  3452  0101C0  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  3453  0101C2  0E01               	movlw	high display_LCD@str
  3454  0101C4  0100               	movlb	0	; () banked
  3455  0101C6  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3456  0101C8  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  3457                           
  3458                           ;PIC18F27J53-ChargeStation6-04.h: 212: I2C_LCD_Puts("mAh");
  3459  0101CC  0EED               	movlw	low STR_24
  3460  0101CE  0100               	movlb	0	; () banked
  3461  0101D0  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  3462  0101D2  0EFF               	movlw	high STR_24
  3463  0101D4  0100               	movlb	0	; () banked
  3464  0101D6  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3465  0101D8  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  3466                           
  3467                           ;PIC18F27J53-ChargeStation6-04.h: 213: break;
  3468  0101DC  0012               	return	
  3469  0101DE                     l5773:
  3470                           
  3471                           ;PIC18F27J53-ChargeStation6-04.h: 215: display_port();
  3472  0101DE  ECC0  F08E         	call	_display_port	;wreg free
  3473                           
  3474                           ;PIC18F27J53-ChargeStation6-04.h: 216: uint8_t str[10];
  3475                           ;PIC18F27J53-ChargeStation6-04.h: 217: I2C_LCD_SetCursor(0, 1);
  3476  0101E2  0E01               	movlw	1
  3477  0101E4  0100               	movlb	0	; () banked
  3478  0101E6  6FBC               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  3479  0101E8  0E00               	movlw	0
  3480  0101EA  ECAD  F098         	call	_I2C_LCD_SetCursor
  3481                           
  3482                           ;PIC18F27J53-ChargeStation6-04.h: 218: utoa(str, charge_time[print_port] / 3600 / 24, 2)
      +                          ;
  3483  0101EE  0E10               	movlw	16
  3484  0101F0  0100               	movlb	0	; () banked
  3485  0101F2  6FBD               	movwf	___lldiv@divisor& (0+255),b
  3486  0101F4  0E0E               	movlw	14
  3487  0101F6  6FBE               	movwf	(___lldiv@divisor+1)& (0+255),b
  3488  0101F8  0E00               	movlw	0
  3489  0101FA  6FBF               	movwf	(___lldiv@divisor+2)& (0+255),b
  3490  0101FC  0E00               	movlw	0
  3491  0101FE  6FC0               	movwf	(___lldiv@divisor+3)& (0+255),b
  3492  010200  5039               	movf	_print_port,w,c
  3493  010202  0D04               	mullw	4
  3494  010204  0E6C               	movlw	low _charge_time
  3495  010206  24F3               	addwf	prodl,w,c
  3496  010208  6ED9               	movwf	fsr2l,c
  3497  01020A  0E00               	movlw	high _charge_time
  3498  01020C  20F4               	addwfc	prodh,w,c
  3499  01020E  6EDA               	movwf	fsr2h,c
  3500  010210  CFDE F0B9          	movff	postinc2,___lldiv@dividend
  3501  010214  CFDE F0BA          	movff	postinc2,___lldiv@dividend+1
  3502  010218  CFDE F0BB          	movff	postinc2,___lldiv@dividend+2
  3503  01021C  CFDE F0BC          	movff	postinc2,___lldiv@dividend+3
  3504  010220  ECF5  F08F         	call	___lldiv	;wreg free
  3505  010224  C0B9  F119         	movff	?___lldiv,_display_LCD$3082
  3506  010228  C0BA  F11A         	movff	?___lldiv+1,_display_LCD$3082+1
  3507  01022C  C0BB  F11B         	movff	?___lldiv+2,_display_LCD$3082+2
  3508  010230  C0BC  F11C         	movff	?___lldiv+3,_display_LCD$3082+3
  3509                           
  3510                           ;PIC18F27J53-ChargeStation6-04.h: 218: utoa(str, charge_time[print_port] / 3600 / 24, 2)
      +                          ;
  3511  010234  0E0F               	movlw	low display_LCD@str
  3512  010236  0100               	movlb	0	; () banked
  3513  010238  6FD3               	movwf	utoa@str& (0+255),b
  3514  01023A  0E01               	movlw	high display_LCD@str
  3515  01023C  0100               	movlb	0	; () banked
  3516  01023E  6FD4               	movwf	(utoa@str+1)& (0+255),b
  3517  010240  C119  F0B9         	movff	_display_LCD$3082,___lldiv@dividend
  3518  010244  C11A  F0BA         	movff	_display_LCD$3082+1,___lldiv@dividend+1
  3519  010248  C11B  F0BB         	movff	_display_LCD$3082+2,___lldiv@dividend+2
  3520  01024C  C11C  F0BC         	movff	_display_LCD$3082+3,___lldiv@dividend+3
  3521  010250  0E18               	movlw	24
  3522  010252  0100               	movlb	0	; () banked
  3523  010254  6FBD               	movwf	___lldiv@divisor& (0+255),b
  3524  010256  0E00               	movlw	0
  3525  010258  6FBE               	movwf	(___lldiv@divisor+1)& (0+255),b
  3526  01025A  0E00               	movlw	0
  3527  01025C  6FBF               	movwf	(___lldiv@divisor+2)& (0+255),b
  3528  01025E  0E00               	movlw	0
  3529  010260  6FC0               	movwf	(___lldiv@divisor+3)& (0+255),b
  3530  010262  ECF5  F08F         	call	___lldiv	;wreg free
  3531  010266  C0B9  F0D5         	movff	?___lldiv,utoa@value
  3532  01026A  C0BA  F0D6         	movff	?___lldiv+1,utoa@value+1
  3533  01026E  0E02               	movlw	2
  3534  010270  0100               	movlb	0	; () banked
  3535  010272  6FD7               	movwf	utoa@digits& (0+255),b
  3536  010274  ECE7  F093         	call	_utoa	;wreg free
  3537                           
  3538                           ;PIC18F27J53-ChargeStation6-04.h: 219: I2C_LCD_Puts(str);
  3539  010278  0E0F               	movlw	low display_LCD@str
  3540  01027A  0100               	movlb	0	; () banked
  3541  01027C  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  3542  01027E  0E01               	movlw	high display_LCD@str
  3543  010280  0100               	movlb	0	; () banked
  3544  010282  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3545  010284  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  3546                           
  3547                           ;PIC18F27J53-ChargeStation6-04.h: 220: I2C_LCD_Puts("d ");
  3548  010288  0EF4               	movlw	low STR_25
  3549  01028A  0100               	movlb	0	; () banked
  3550  01028C  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  3551  01028E  0EFF               	movlw	high STR_25
  3552  010290  0100               	movlb	0	; () banked
  3553  010292  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3554  010294  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  3555                           
  3556                           ;PIC18F27J53-ChargeStation6-04.h: 221: utoa(str, (charge_time[print_port] / 3600) % 24, 
      +                          2);
  3557  010298  0E0F               	movlw	low display_LCD@str
  3558  01029A  0100               	movlb	0	; () banked
  3559  01029C  6FD3               	movwf	utoa@str& (0+255),b
  3560  01029E  0E01               	movlw	high display_LCD@str
  3561  0102A0  0100               	movlb	0	; () banked
  3562  0102A2  6FD4               	movwf	(utoa@str+1)& (0+255),b
  3563  0102A4  0E10               	movlw	16
  3564  0102A6  0100               	movlb	0	; () banked
  3565  0102A8  6FBD               	movwf	___lldiv@divisor& (0+255),b
  3566  0102AA  0E0E               	movlw	14
  3567  0102AC  6FBE               	movwf	(___lldiv@divisor+1)& (0+255),b
  3568  0102AE  0E00               	movlw	0
  3569  0102B0  6FBF               	movwf	(___lldiv@divisor+2)& (0+255),b
  3570  0102B2  0E00               	movlw	0
  3571  0102B4  6FC0               	movwf	(___lldiv@divisor+3)& (0+255),b
  3572  0102B6  5039               	movf	_print_port,w,c
  3573  0102B8  0D04               	mullw	4
  3574  0102BA  0E6C               	movlw	low _charge_time
  3575  0102BC  24F3               	addwf	prodl,w,c
  3576  0102BE  6ED9               	movwf	fsr2l,c
  3577  0102C0  0E00               	movlw	high _charge_time
  3578  0102C2  20F4               	addwfc	prodh,w,c
  3579  0102C4  6EDA               	movwf	fsr2h,c
  3580  0102C6  CFDE F0B9          	movff	postinc2,___lldiv@dividend
  3581  0102CA  CFDE F0BA          	movff	postinc2,___lldiv@dividend+1
  3582  0102CE  CFDE F0BB          	movff	postinc2,___lldiv@dividend+2
  3583  0102D2  CFDE F0BC          	movff	postinc2,___lldiv@dividend+3
  3584  0102D6  ECF5  F08F         	call	___lldiv	;wreg free
  3585  0102DA  C0B9  F0C6         	movff	?___lldiv,___llmod@dividend
  3586  0102DE  C0BA  F0C7         	movff	?___lldiv+1,___llmod@dividend+1
  3587  0102E2  C0BB  F0C8         	movff	?___lldiv+2,___llmod@dividend+2
  3588  0102E6  C0BC  F0C9         	movff	?___lldiv+3,___llmod@dividend+3
  3589  0102EA  0E18               	movlw	24
  3590  0102EC  0100               	movlb	0	; () banked
  3591  0102EE  6FCA               	movwf	___llmod@divisor& (0+255),b
  3592  0102F0  0E00               	movlw	0
  3593  0102F2  6FCB               	movwf	(___llmod@divisor+1)& (0+255),b
  3594  0102F4  0E00               	movlw	0
  3595  0102F6  6FCC               	movwf	(___llmod@divisor+2)& (0+255),b
  3596  0102F8  0E00               	movlw	0
  3597  0102FA  6FCD               	movwf	(___llmod@divisor+3)& (0+255),b
  3598  0102FC  EC6F  F092         	call	___llmod	;wreg free
  3599  010300  C0C6  F0D5         	movff	?___llmod,utoa@value
  3600  010304  C0C7  F0D6         	movff	?___llmod+1,utoa@value+1
  3601  010308  0E02               	movlw	2
  3602  01030A  0100               	movlb	0	; () banked
  3603  01030C  6FD7               	movwf	utoa@digits& (0+255),b
  3604  01030E  ECE7  F093         	call	_utoa	;wreg free
  3605                           
  3606                           ;PIC18F27J53-ChargeStation6-04.h: 222: I2C_LCD_Puts(str);
  3607  010312  0E0F               	movlw	low display_LCD@str
  3608  010314  0100               	movlb	0	; () banked
  3609  010316  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  3610  010318  0E01               	movlw	high display_LCD@str
  3611  01031A  0100               	movlb	0	; () banked
  3612  01031C  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3613  01031E  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  3614                           
  3615                           ;PIC18F27J53-ChargeStation6-04.h: 223: I2C_LCD_Puts("h ");
  3616  010322  0EF7               	movlw	low STR_26
  3617  010324  0100               	movlb	0	; () banked
  3618  010326  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  3619  010328  0EFF               	movlw	high STR_26
  3620  01032A  0100               	movlb	0	; () banked
  3621  01032C  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3622  01032E  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  3623                           
  3624                           ;PIC18F27J53-ChargeStation6-04.h: 224: utoa(str, (charge_time[print_port] / 60) % 60, 2)
      +                          ;
  3625  010332  0E0F               	movlw	low display_LCD@str
  3626  010334  0100               	movlb	0	; () banked
  3627  010336  6FD3               	movwf	utoa@str& (0+255),b
  3628  010338  0E01               	movlw	high display_LCD@str
  3629  01033A  0100               	movlb	0	; () banked
  3630  01033C  6FD4               	movwf	(utoa@str+1)& (0+255),b
  3631  01033E  0E3C               	movlw	60
  3632  010340  0100               	movlb	0	; () banked
  3633  010342  6FBD               	movwf	___lldiv@divisor& (0+255),b
  3634  010344  0E00               	movlw	0
  3635  010346  6FBE               	movwf	(___lldiv@divisor+1)& (0+255),b
  3636  010348  0E00               	movlw	0
  3637  01034A  6FBF               	movwf	(___lldiv@divisor+2)& (0+255),b
  3638  01034C  0E00               	movlw	0
  3639  01034E  6FC0               	movwf	(___lldiv@divisor+3)& (0+255),b
  3640  010350  5039               	movf	_print_port,w,c
  3641  010352  0D04               	mullw	4
  3642  010354  0E6C               	movlw	low _charge_time
  3643  010356  24F3               	addwf	prodl,w,c
  3644  010358  6ED9               	movwf	fsr2l,c
  3645  01035A  0E00               	movlw	high _charge_time
  3646  01035C  20F4               	addwfc	prodh,w,c
  3647  01035E  6EDA               	movwf	fsr2h,c
  3648  010360  CFDE F0B9          	movff	postinc2,___lldiv@dividend
  3649  010364  CFDE F0BA          	movff	postinc2,___lldiv@dividend+1
  3650  010368  CFDE F0BB          	movff	postinc2,___lldiv@dividend+2
  3651  01036C  CFDE F0BC          	movff	postinc2,___lldiv@dividend+3
  3652  010370  ECF5  F08F         	call	___lldiv	;wreg free
  3653  010374  C0B9  F0C6         	movff	?___lldiv,___llmod@dividend
  3654  010378  C0BA  F0C7         	movff	?___lldiv+1,___llmod@dividend+1
  3655  01037C  C0BB  F0C8         	movff	?___lldiv+2,___llmod@dividend+2
  3656  010380  C0BC  F0C9         	movff	?___lldiv+3,___llmod@dividend+3
  3657  010384  0E3C               	movlw	60
  3658  010386  0100               	movlb	0	; () banked
  3659  010388  6FCA               	movwf	___llmod@divisor& (0+255),b
  3660  01038A  0E00               	movlw	0
  3661  01038C  6FCB               	movwf	(___llmod@divisor+1)& (0+255),b
  3662  01038E  0E00               	movlw	0
  3663  010390  6FCC               	movwf	(___llmod@divisor+2)& (0+255),b
  3664  010392  0E00               	movlw	0
  3665  010394  6FCD               	movwf	(___llmod@divisor+3)& (0+255),b
  3666  010396  EC6F  F092         	call	___llmod	;wreg free
  3667  01039A  C0C6  F0D5         	movff	?___llmod,utoa@value
  3668  01039E  C0C7  F0D6         	movff	?___llmod+1,utoa@value+1
  3669  0103A2  0E02               	movlw	2
  3670  0103A4  0100               	movlb	0	; () banked
  3671  0103A6  6FD7               	movwf	utoa@digits& (0+255),b
  3672  0103A8  ECE7  F093         	call	_utoa	;wreg free
  3673                           
  3674                           ;PIC18F27J53-ChargeStation6-04.h: 225: I2C_LCD_Puts(str);
  3675  0103AC  0E0F               	movlw	low display_LCD@str
  3676  0103AE  0100               	movlb	0	; () banked
  3677  0103B0  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  3678  0103B2  0E01               	movlw	high display_LCD@str
  3679  0103B4  0100               	movlb	0	; () banked
  3680  0103B6  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3681  0103B8  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  3682                           
  3683                           ;PIC18F27J53-ChargeStation6-04.h: 226: I2C_LCD_Puts("m ");
  3684  0103BC  0EFA               	movlw	low STR_27
  3685  0103BE  0100               	movlb	0	; () banked
  3686  0103C0  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  3687  0103C2  0EFF               	movlw	high STR_27
  3688  0103C4  0100               	movlb	0	; () banked
  3689  0103C6  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3690  0103C8  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  3691                           
  3692                           ;PIC18F27J53-ChargeStation6-04.h: 227: utoa(str, charge_time[print_port] % 60, 2);
  3693  0103CC  0E0F               	movlw	low display_LCD@str
  3694  0103CE  0100               	movlb	0	; () banked
  3695  0103D0  6FD3               	movwf	utoa@str& (0+255),b
  3696  0103D2  0E01               	movlw	high display_LCD@str
  3697  0103D4  0100               	movlb	0	; () banked
  3698  0103D6  6FD4               	movwf	(utoa@str+1)& (0+255),b
  3699  0103D8  5039               	movf	_print_port,w,c
  3700  0103DA  0D04               	mullw	4
  3701  0103DC  0E6C               	movlw	low _charge_time
  3702  0103DE  24F3               	addwf	prodl,w,c
  3703  0103E0  6ED9               	movwf	fsr2l,c
  3704  0103E2  0E00               	movlw	high _charge_time
  3705  0103E4  20F4               	addwfc	prodh,w,c
  3706  0103E6  6EDA               	movwf	fsr2h,c
  3707  0103E8  CFDE F0C6          	movff	postinc2,___llmod@dividend
  3708  0103EC  CFDE F0C7          	movff	postinc2,___llmod@dividend+1
  3709  0103F0  CFDE F0C8          	movff	postinc2,___llmod@dividend+2
  3710  0103F4  CFDE F0C9          	movff	postinc2,___llmod@dividend+3
  3711  0103F8  0E3C               	movlw	60
  3712  0103FA  0100               	movlb	0	; () banked
  3713  0103FC  6FCA               	movwf	___llmod@divisor& (0+255),b
  3714  0103FE  0E00               	movlw	0
  3715  010400  6FCB               	movwf	(___llmod@divisor+1)& (0+255),b
  3716  010402  0E00               	movlw	0
  3717  010404  6FCC               	movwf	(___llmod@divisor+2)& (0+255),b
  3718  010406  0E00               	movlw	0
  3719  010408  6FCD               	movwf	(___llmod@divisor+3)& (0+255),b
  3720  01040A  EC6F  F092         	call	___llmod	;wreg free
  3721  01040E  C0C6  F0D5         	movff	?___llmod,utoa@value
  3722  010412  C0C7  F0D6         	movff	?___llmod+1,utoa@value+1
  3723  010416  0E02               	movlw	2
  3724  010418  0100               	movlb	0	; () banked
  3725  01041A  6FD7               	movwf	utoa@digits& (0+255),b
  3726  01041C  ECE7  F093         	call	_utoa	;wreg free
  3727                           
  3728                           ;PIC18F27J53-ChargeStation6-04.h: 228: I2C_LCD_Puts(str);
  3729  010420  0E0F               	movlw	low display_LCD@str
  3730  010422  0100               	movlb	0	; () banked
  3731  010424  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  3732  010426  0E01               	movlw	high display_LCD@str
  3733  010428  0100               	movlb	0	; () banked
  3734  01042A  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3735  01042C  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  3736                           
  3737                           ;PIC18F27J53-ChargeStation6-04.h: 229: I2C_LCD_Puts("s");
  3738  010430  0EFD               	movlw	low STR_28
  3739  010432  0100               	movlb	0	; () banked
  3740  010434  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  3741  010436  0EFF               	movlw	high STR_28
  3742  010438  0100               	movlb	0	; () banked
  3743  01043A  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3744  01043C  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  3745                           
  3746                           ;PIC18F27J53-ChargeStation6-04.h: 230: break;
  3747  010440  0012               	return	
  3748  010442                     l5803:
  3749                           
  3750                           ;PIC18F27J53-ChargeStation6-04.h: 232: display_port();
  3751  010442  ECC0  F08E         	call	_display_port	;wreg free
  3752                           
  3753                           ;PIC18F27J53-ChargeStation6-04.h: 233: I2C_LCD_SetCursor(0, 1);
  3754  010446  0E01               	movlw	1
  3755  010448  0100               	movlb	0	; () banked
  3756  01044A  6FBC               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  3757  01044C  0E00               	movlw	0
  3758  01044E  ECAD  F098         	call	_I2C_LCD_SetCursor
  3759                           
  3760                           ;PIC18F27J53-ChargeStation6-04.h: 234: I2C_LCD_Puts("Integrating Reset?");
  3761  010452  0EFF               	movlw	low STR_29
  3762  010454  0100               	movlb	0	; () banked
  3763  010456  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  3764  010458  0EFE               	movlw	high STR_29
  3765  01045A  0100               	movlb	0	; () banked
  3766  01045C  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3767  01045E  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  3768                           
  3769                           ;PIC18F27J53-ChargeStation6-04.h: 235: break;
  3770  010462  0012               	return	
  3771  010464                     l5809:
  3772                           
  3773                           ;PIC18F27J53-ChargeStation6-04.h: 237: display_port();
  3774  010464  ECC0  F08E         	call	_display_port	;wreg free
  3775                           
  3776                           ;PIC18F27J53-ChargeStation6-04.h: 238: I2C_LCD_SetCursor(0, 1);
  3777  010468  0E01               	movlw	1
  3778  01046A  0100               	movlb	0	; () banked
  3779  01046C  6FBC               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  3780  01046E  0E00               	movlw	0
  3781  010470  ECAD  F098         	call	_I2C_LCD_SetCursor
  3782                           
  3783                           ;PIC18F27J53-ChargeStation6-04.h: 239: I2C_LCD_Puts("Integrating Reseted");
  3784  010474  0EEB               	movlw	low STR_30
  3785  010476  0100               	movlb	0	; () banked
  3786  010478  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  3787  01047A  0EFE               	movlw	high STR_30
  3788  01047C  0100               	movlb	0	; () banked
  3789  01047E  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3790  010480  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  3791                           
  3792                           ;PIC18F27J53-ChargeStation6-04.h: 240: break;
  3793  010484  0012               	return	
  3794  010486                     l5815:
  3795                           
  3796                           ;PIC18F27J53-ChargeStation6-04.h: 242: display_port();
  3797  010486  ECC0  F08E         	call	_display_port	;wreg free
  3798                           
  3799                           ;PIC18F27J53-ChargeStation6-04.h: 243: I2C_LCD_SetCursor(0, 1);
  3800  01048A  0E01               	movlw	1
  3801  01048C  0100               	movlb	0	; () banked
  3802  01048E  6FBC               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  3803  010490  0E00               	movlw	0
  3804  010492  ECAD  F098         	call	_I2C_LCD_SetCursor
  3805                           
  3806                           ;PIC18F27J53-ChargeStation6-04.h: 244: I2C_LCD_Puts("Always Charging");
  3807  010496  0E23               	movlw	low STR_31
  3808  010498  0100               	movlb	0	; () banked
  3809  01049A  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  3810  01049C  0EFF               	movlw	high STR_31
  3811  01049E  0100               	movlb	0	; () banked
  3812  0104A0  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3813  0104A2  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  3814                           
  3815                           ;PIC18F27J53-ChargeStation6-04.h: 245: break;
  3816  0104A6  0012               	return	
  3817  0104A8                     l5821:
  3818                           
  3819                           ;PIC18F27J53-ChargeStation6-04.h: 247: display_port();
  3820  0104A8  ECC0  F08E         	call	_display_port	;wreg free
  3821                           
  3822                           ;PIC18F27J53-ChargeStation6-04.h: 248: I2C_LCD_SetCursor(0, 1);
  3823  0104AC  0E01               	movlw	1
  3824  0104AE  0100               	movlb	0	; () banked
  3825  0104B0  6FBC               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  3826  0104B2  0E00               	movlw	0
  3827  0104B4  ECAD  F098         	call	_I2C_LCD_SetCursor
  3828                           
  3829                           ;PIC18F27J53-ChargeStation6-04.h: 249: I2C_LCD_Puts("Auto Stop ON");
  3830  0104B8  0E40               	movlw	low STR_32
  3831  0104BA  0100               	movlb	0	; () banked
  3832  0104BC  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  3833  0104BE  0EFF               	movlw	high STR_32
  3834  0104C0  0100               	movlb	0	; () banked
  3835  0104C2  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3836  0104C4  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  3837                           
  3838                           ;PIC18F27J53-ChargeStation6-04.h: 251: }
  3839                           
  3840                           ;PIC18F27J53-ChargeStation6-04.h: 250: break;
  3841  0104C8  0012               	return	
  3842  0104CA                     l5829:
  3843  0104CA  0100               	movlb	0	; () banked
  3844  0104CC  519B               	movf	_print_content& (0+255),w,b
  3845                           
  3846                           ; Switch size 1, requested type "space"
  3847                           ; Number of cases is 9, Range of values is 0 to 8
  3848                           ; switch strategies available:
  3849                           ; Name         Instructions Cycles
  3850                           ; simple_byte           28    15 (average)
  3851                           ;	Chosen strategy is simple_byte
  3852  0104CE  0A00               	xorlw	0	; case 0
  3853  0104D0  B4D8               	btfsc	status,2,c
  3854  0104D2  D599               	goto	l5739
  3855  0104D4  0A01               	xorlw	1	; case 1
  3856  0104D6  B4D8               	btfsc	status,2,c
  3857  0104D8  D5B3               	goto	l5745
  3858  0104DA  0A03               	xorlw	3	; case 2
  3859  0104DC  B4D8               	btfsc	status,2,c
  3860  0104DE  D5BF               	goto	l5747
  3861  0104E0  0A01               	xorlw	1	; case 3
  3862  0104E2  B4D8               	btfsc	status,2,c
  3863  0104E4  D64C               	goto	l5763
  3864  0104E6  0A07               	xorlw	7	; case 4
  3865  0104E8  B4D8               	btfsc	status,2,c
  3866  0104EA  D679               	goto	l5773
  3867  0104EC  0A01               	xorlw	1	; case 5
  3868  0104EE  B4D8               	btfsc	status,2,c
  3869  0104F0  D7A8               	goto	l5803
  3870  0104F2  0A03               	xorlw	3	; case 6
  3871  0104F4  B4D8               	btfsc	status,2,c
  3872  0104F6  D7B6               	goto	l5809
  3873  0104F8  0A01               	xorlw	1	; case 7
  3874  0104FA  B4D8               	btfsc	status,2,c
  3875  0104FC  D7C4               	goto	l5815
  3876  0104FE  0A0F               	xorlw	15	; case 8
  3877  010500  A4D8               	btfss	status,2,c
  3878  010502  0012               	return	
  3879  010504  D7D1               	goto	l5821
  3880                           
  3881                           ; BSR set to: 0
  3882  010506  0012               	return		;funcret
  3883  010508                     __end_of_display_LCD:
  3884                           	opt stack 0
  3885                           tblptru	equ	0xFF8
  3886                           tblptrh	equ	0xFF7
  3887                           tblptrl	equ	0xFF6
  3888                           tablat	equ	0xFF5
  3889                           prodh	equ	0xFF4
  3890                           prodl	equ	0xFF3
  3891                           intcon	equ	0xFF2
  3892                           postinc0	equ	0xFEE
  3893                           wreg	equ	0xFE8
  3894                           postdec1	equ	0xFE5
  3895                           fsr1l	equ	0xFE1
  3896                           indf2	equ	0xFDF
  3897                           postinc2	equ	0xFDE
  3898                           postdec2	equ	0xFDD
  3899                           fsr2h	equ	0xFDA
  3900                           fsr2l	equ	0xFD9
  3901                           status	equ	0xFD8
  3902                           
  3903 ;; *************** function _display_time_1602 *****************
  3904 ;; Defined at:
  3905 ;;		line 272 in file "../My_header\My_RTCC.h"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;  ct              2   11[BANK1 ] PTR struct .
  3908 ;;		 -> caltime_now(7), 
  3909 ;;  ep              2   13[BANK1 ] PTR unsigned long 
  3910 ;;		 -> epoch_now(4), 
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;		None
  3913 ;; Return value:  Size  Location     Type
  3914 ;;		None               void
  3915 ;; Registers used:
  3916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3922 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3924 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3925 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3926 ;;Total ram usage:        5 bytes
  3927 ;; Hardware stack levels used:    1
  3928 ;; Hardware stack levels required when called:    8
  3929 ;; This function calls:
  3930 ;;		_I2C_LCD_Putc
  3931 ;;		_I2C_LCD_Puts
  3932 ;;		_I2C_LCD_SetCursor
  3933 ;;		_RTCC_from_RTCC
  3934 ;;		_display_dec
  3935 ;; This function is called by:
  3936 ;;		_display_LCD
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           	psect	text9
  3941  01155E                     __ptext9:
  3942                           	opt stack 0
  3943  01155E                     _display_time_1602:
  3944                           	opt stack 20
  3945                           
  3946                           ;My_header\My_RTCC.h: 273: RTCC_from_RTCC(ct, ep);
  3947                           
  3948                           ;incstack = 0
  3949  01155E  C10B  F100         	movff	display_time_1602@ct,RTCC_from_RTCC@ct
  3950  011562  C10C  F101         	movff	display_time_1602@ct+1,RTCC_from_RTCC@ct+1
  3951  011566  C10D  F102         	movff	display_time_1602@ep,RTCC_from_RTCC@ep
  3952  01156A  C10E  F103         	movff	display_time_1602@ep+1,RTCC_from_RTCC@ep+1
  3953  01156E  EC34  F099         	call	_RTCC_from_RTCC	;wreg free
  3954                           
  3955                           ;My_header\My_RTCC.h: 275: I2C_LCD_SetCursor(0, 0);
  3956  011572  0E00               	movlw	0
  3957  011574  0100               	movlb	0	; () banked
  3958  011576  6FBC               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  3959  011578  0E00               	movlw	0
  3960  01157A  ECAD  F098         	call	_I2C_LCD_SetCursor
  3961                           
  3962                           ;My_header\My_RTCC.h: 276: display_dec(20, edit_flag.flag.YY);
  3963  01157E  0E00               	movlw	0
  3964  011580  BB9A               	btfsc	_edit_flag& (0+255),5,b
  3965  011582  0E01               	movlw	1
  3966  011584  0100               	movlb	0	; () banked
  3967  011586  6FDB               	movwf	display_dec@edit& (0+255),b
  3968  011588  0E14               	movlw	20
  3969  01158A  ECF2  F095         	call	_display_dec
  3970                           
  3971                           ;My_header\My_RTCC.h: 277: display_dec(ct->YY, edit_flag.flag.YY);
  3972  01158E  0E00               	movlw	0
  3973  011590  BB9A               	btfsc	_edit_flag& (0+255),5,b
  3974  011592  0E01               	movlw	1
  3975  011594  0100               	movlb	0	; () banked
  3976  011596  6FDB               	movwf	display_dec@edit& (0+255),b
  3977  011598  0101               	movlb	1	; () banked
  3978  01159A  EE20 F006          	lfsr	2,6
  3979  01159E  510B               	movf	display_time_1602@ct& (0+255),w,b
  3980  0115A0  26D9               	addwf	fsr2l,f,c
  3981  0115A2  510C               	movf	(display_time_1602@ct+1)& (0+255),w,b
  3982  0115A4  22DA               	addwfc	fsr2h,f,c
  3983  0115A6  50DF               	movf	indf2,w,c
  3984  0115A8  ECF2  F095         	call	_display_dec
  3985                           
  3986                           ;My_header\My_RTCC.h: 278: I2C_LCD_Putc('/');
  3987  0115AC  0E2F               	movlw	47
  3988  0115AE  ECFE  F097         	call	_I2C_LCD_Putc
  3989                           
  3990                           ;My_header\My_RTCC.h: 279: display_dec(ct->MM, edit_flag.flag.MM);
  3991  0115B2  0E00               	movlw	0
  3992  0115B4  B99A               	btfsc	_edit_flag& (0+255),4,b
  3993  0115B6  0E01               	movlw	1
  3994  0115B8  0100               	movlb	0	; () banked
  3995  0115BA  6FDB               	movwf	display_dec@edit& (0+255),b
  3996  0115BC  0101               	movlb	1	; () banked
  3997  0115BE  EE20 F005          	lfsr	2,5
  3998  0115C2  510B               	movf	display_time_1602@ct& (0+255),w,b
  3999  0115C4  26D9               	addwf	fsr2l,f,c
  4000  0115C6  510C               	movf	(display_time_1602@ct+1)& (0+255),w,b
  4001  0115C8  22DA               	addwfc	fsr2h,f,c
  4002  0115CA  50DF               	movf	indf2,w,c
  4003  0115CC  ECF2  F095         	call	_display_dec
  4004                           
  4005                           ;My_header\My_RTCC.h: 280: I2C_LCD_Putc('/');
  4006  0115D0  0E2F               	movlw	47
  4007  0115D2  ECFE  F097         	call	_I2C_LCD_Putc
  4008                           
  4009                           ;My_header\My_RTCC.h: 281: display_dec(ct->DD, edit_flag.flag.DD);
  4010  0115D6  0E00               	movlw	0
  4011  0115D8  B79A               	btfsc	_edit_flag& (0+255),3,b
  4012  0115DA  0E01               	movlw	1
  4013  0115DC  0100               	movlb	0	; () banked
  4014  0115DE  6FDB               	movwf	display_dec@edit& (0+255),b
  4015  0115E0  0101               	movlb	1	; () banked
  4016  0115E2  EE20 F004          	lfsr	2,4
  4017  0115E6  510B               	movf	display_time_1602@ct& (0+255),w,b
  4018  0115E8  26D9               	addwf	fsr2l,f,c
  4019  0115EA  510C               	movf	(display_time_1602@ct+1)& (0+255),w,b
  4020  0115EC  22DA               	addwfc	fsr2h,f,c
  4021  0115EE  50DF               	movf	indf2,w,c
  4022  0115F0  ECF2  F095         	call	_display_dec
  4023                           
  4024                           ;My_header\My_RTCC.h: 282: I2C_LCD_Putc('(');
  4025  0115F4  0E28               	movlw	40
  4026  0115F6  ECFE  F097         	call	_I2C_LCD_Putc
  4027                           
  4028                           ;My_header\My_RTCC.h: 283: I2C_LCD_Puts(weekday_char[ct->EE]);
  4029  0115FA  0101               	movlb	1	; () banked
  4030  0115FC  EE20 F003          	lfsr	2,3
  4031  011600  510B               	movf	display_time_1602@ct& (0+255),w,b
  4032  011602  26D9               	addwf	fsr2l,f,c
  4033  011604  510C               	movf	(display_time_1602@ct+1)& (0+255),w,b
  4034  011606  22DA               	addwfc	fsr2h,f,c
  4035  011608  50DF               	movf	indf2,w,c
  4036  01160A  0100               	movlb	0	; () banked
  4037  01160C  6FE1               	movwf	??_display_time_1602& (0+255),b
  4038  01160E  0100               	movlb	0	; () banked
  4039  011610  51E1               	movf	??_display_time_1602& (0+255),w,b
  4040  011612  0D02               	mullw	2
  4041  011614  0EE2               	movlw	low _weekday_char
  4042  011616  24F3               	addwf	prodl,w,c
  4043  011618  6ED9               	movwf	fsr2l,c
  4044  01161A  0E00               	movlw	high _weekday_char
  4045  01161C  20F4               	addwfc	prodh,w,c
  4046  01161E  6EDA               	movwf	fsr2h,c
  4047  011620  CFDE F0BA          	movff	postinc2,I2C_LCD_Puts@s
  4048  011624  CFDD F0BB          	movff	postdec2,I2C_LCD_Puts@s+1
  4049  011628  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  4050                           
  4051                           ;My_header\My_RTCC.h: 284: I2C_LCD_Putc(')');
  4052  01162C  0E29               	movlw	41
  4053  01162E  ECFE  F097         	call	_I2C_LCD_Putc
  4054                           
  4055                           ;My_header\My_RTCC.h: 285: I2C_LCD_SetCursor(8, 1);
  4056  011632  0E01               	movlw	1
  4057  011634  0100               	movlb	0	; () banked
  4058  011636  6FBC               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  4059  011638  0E08               	movlw	8
  4060  01163A  ECAD  F098         	call	_I2C_LCD_SetCursor
  4061                           
  4062                           ;My_header\My_RTCC.h: 286: display_dec(ct->hh, edit_flag.flag.hh);
  4063  01163E  0E00               	movlw	0
  4064  011640  B59A               	btfsc	_edit_flag& (0+255),2,b
  4065  011642  0E01               	movlw	1
  4066  011644  0100               	movlb	0	; () banked
  4067  011646  6FDB               	movwf	display_dec@edit& (0+255),b
  4068  011648  0101               	movlb	1	; () banked
  4069  01164A  EE20 F002          	lfsr	2,2
  4070  01164E  510B               	movf	display_time_1602@ct& (0+255),w,b
  4071  011650  26D9               	addwf	fsr2l,f,c
  4072  011652  510C               	movf	(display_time_1602@ct+1)& (0+255),w,b
  4073  011654  22DA               	addwfc	fsr2h,f,c
  4074  011656  50DF               	movf	indf2,w,c
  4075  011658  ECF2  F095         	call	_display_dec
  4076                           
  4077                           ;My_header\My_RTCC.h: 287: if (colon) I2C_LCD_Putc(':');
  4078  01165C  0100               	movlb	0	; () banked
  4079  01165E  5199               	movf	_colon& (0+255),w,b
  4080  011660  B4D8               	btfsc	status,2,c
  4081  011662  D004               	goto	l5325
  4082                           
  4083                           ; BSR set to: 0
  4084  011664  0E3A               	movlw	58
  4085  011666  ECFE  F097         	call	_I2C_LCD_Putc
  4086  01166A  D004               	goto	l5327
  4087  01166C                     l5325:
  4088                           
  4089                           ;My_header\My_RTCC.h: 288: else I2C_LCD_Putc(' ');
  4090  01166C  0E20               	movlw	32
  4091  01166E  ECFE  F097         	call	_I2C_LCD_Putc
  4092  011672  D000               	goto	l5327
  4093  011674                     l5327:
  4094                           
  4095                           ;My_header\My_RTCC.h: 289: display_dec(ct->mm, edit_flag.flag.mm);
  4096  011674  0E00               	movlw	0
  4097  011676  B39A               	btfsc	_edit_flag& (0+255),1,b
  4098  011678  0E01               	movlw	1
  4099  01167A  0100               	movlb	0	; () banked
  4100  01167C  6FDB               	movwf	display_dec@edit& (0+255),b
  4101  01167E  0101               	movlb	1	; () banked
  4102  011680  EE20 F001          	lfsr	2,1
  4103  011684  510B               	movf	display_time_1602@ct& (0+255),w,b
  4104  011686  26D9               	addwf	fsr2l,f,c
  4105  011688  510C               	movf	(display_time_1602@ct+1)& (0+255),w,b
  4106  01168A  22DA               	addwfc	fsr2h,f,c
  4107  01168C  50DF               	movf	indf2,w,c
  4108  01168E  ECF2  F095         	call	_display_dec
  4109                           
  4110                           ;My_header\My_RTCC.h: 290: I2C_LCD_Putc('-');
  4111  011692  0E2D               	movlw	45
  4112  011694  ECFE  F097         	call	_I2C_LCD_Putc
  4113                           
  4114                           ;My_header\My_RTCC.h: 291: display_dec(ct->ss, edit_flag.flag.ss);
  4115  011698  0E00               	movlw	0
  4116  01169A  B19A               	btfsc	_edit_flag& (0+255),0,b
  4117  01169C  0E01               	movlw	1
  4118  01169E  0100               	movlb	0	; () banked
  4119  0116A0  6FDB               	movwf	display_dec@edit& (0+255),b
  4120  0116A2  C10B  FFD9         	movff	display_time_1602@ct,fsr2l
  4121  0116A6  C10C  FFDA         	movff	display_time_1602@ct+1,fsr2h
  4122  0116AA  50DF               	movf	indf2,w,c
  4123  0116AC  ECF2  F095         	call	_display_dec
  4124  0116B0  0012               	return		;funcret
  4125  0116B2                     __end_of_display_time_1602:
  4126                           	opt stack 0
  4127                           tblptru	equ	0xFF8
  4128                           tblptrh	equ	0xFF7
  4129                           tblptrl	equ	0xFF6
  4130                           tablat	equ	0xFF5
  4131                           prodh	equ	0xFF4
  4132                           prodl	equ	0xFF3
  4133                           intcon	equ	0xFF2
  4134                           postinc0	equ	0xFEE
  4135                           wreg	equ	0xFE8
  4136                           postdec1	equ	0xFE5
  4137                           fsr1l	equ	0xFE1
  4138                           indf2	equ	0xFDF
  4139                           postinc2	equ	0xFDE
  4140                           postdec2	equ	0xFDD
  4141                           fsr2h	equ	0xFDA
  4142                           fsr2l	equ	0xFD9
  4143                           status	equ	0xFD8
  4144                           
  4145 ;; *************** function _display_dec *****************
  4146 ;; Defined at:
  4147 ;;		line 245 in file "../My_header\My_RTCC.h"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;  dec             1    wreg     unsigned char 
  4150 ;;  edit            1   34[BANK0 ] unsigned char 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  dec             1   10[BANK1 ] unsigned char 
  4153 ;;  str            10    0[BANK1 ] unsigned char [10]
  4154 ;; Return value:  Size  Location     Type
  4155 ;;		None               void
  4156 ;; Registers used:
  4157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4163 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4164 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4166 ;;      Totals:         0       1      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4167 ;;Total ram usage:       12 bytes
  4168 ;; Hardware stack levels used:    1
  4169 ;; Hardware stack levels required when called:    7
  4170 ;; This function calls:
  4171 ;;		_I2C_LCD_Puts
  4172 ;;		_utoa
  4173 ;; This function is called by:
  4174 ;;		_display_time_1602
  4175 ;;		_display_time_0802
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text10
  4180  012BE4                     __ptext10:
  4181                           	opt stack 0
  4182  012BE4                     _display_dec:
  4183                           	opt stack 20
  4184                           
  4185                           ;incstack = 0
  4186                           ;display_dec@dec stored from wreg
  4187  012BE4  0101               	movlb	1	; () banked
  4188  012BE6  6F0A               	movwf	display_dec@dec& (0+255),b
  4189                           
  4190                           ; BSR set to: 1
  4191                           ;My_header\My_RTCC.h: 246: char str[10];
  4192                           ;My_header\My_RTCC.h: 247: utoa(str, dec, 2);
  4193  012BE8  0E00               	movlw	low display_dec@str
  4194  012BEA  0100               	movlb	0	; () banked
  4195  012BEC  6FD3               	movwf	utoa@str& (0+255),b
  4196  012BEE  0E01               	movlw	high display_dec@str
  4197  012BF0  0100               	movlb	0	; () banked
  4198  012BF2  6FD4               	movwf	(utoa@str+1)& (0+255),b
  4199  012BF4  C10A  F0D5         	movff	display_dec@dec,utoa@value
  4200  012BF8  0100               	movlb	0	; () banked
  4201  012BFA  6BD6               	clrf	(utoa@value+1)& (0+255),b
  4202  012BFC  0E02               	movlw	2
  4203  012BFE  0100               	movlb	0	; () banked
  4204  012C00  6FD7               	movwf	utoa@digits& (0+255),b
  4205  012C02  ECE7  F093         	call	_utoa	;wreg free
  4206                           
  4207                           ;My_header\My_RTCC.h: 248: if (edit && RTCCFGbits.HALFSEC)I2C_LCD_Puts("  ");
  4208  012C06  0100               	movlb	0	; () banked
  4209  012C08  51DB               	movf	display_dec@edit& (0+255),w,b
  4210  012C0A  0100               	movlb	0	; () banked
  4211  012C0C  B4D8               	btfsc	status,2,c
  4212  012C0E  D00C               	goto	l5179
  4213                           
  4214                           ; BSR set to: 0
  4215  012C10  010F               	movlb	15	; () banked
  4216  012C12  A73F               	btfss	63,3,b	;volatile
  4217  012C14  D009               	goto	l5179
  4218                           
  4219                           ; BSR set to: 15
  4220  012C16  0EF1               	movlw	low STR_15
  4221  012C18  0100               	movlb	0	; () banked
  4222  012C1A  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  4223  012C1C  0EFF               	movlw	high STR_15
  4224  012C1E  0100               	movlb	0	; () banked
  4225  012C20  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4226  012C22  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  4227  012C26  0012               	return	
  4228  012C28                     l5179:
  4229                           
  4230                           ;My_header\My_RTCC.h: 249: else I2C_LCD_Puts(str);
  4231  012C28  0E00               	movlw	low display_dec@str
  4232  012C2A  0100               	movlb	0	; () banked
  4233  012C2C  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  4234  012C2E  0E01               	movlw	high display_dec@str
  4235  012C30  0100               	movlb	0	; () banked
  4236  012C32  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4237  012C34  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  4238  012C38  0012               	return	
  4239  012C3A  0012               	return		;funcret
  4240  012C3C                     __end_of_display_dec:
  4241                           	opt stack 0
  4242                           tblptru	equ	0xFF8
  4243                           tblptrh	equ	0xFF7
  4244                           tblptrl	equ	0xFF6
  4245                           tablat	equ	0xFF5
  4246                           prodh	equ	0xFF4
  4247                           prodl	equ	0xFF3
  4248                           intcon	equ	0xFF2
  4249                           postinc0	equ	0xFEE
  4250                           wreg	equ	0xFE8
  4251                           postdec1	equ	0xFE5
  4252                           fsr1l	equ	0xFE1
  4253                           indf2	equ	0xFDF
  4254                           postinc2	equ	0xFDE
  4255                           postdec2	equ	0xFDD
  4256                           fsr2h	equ	0xFDA
  4257                           fsr2l	equ	0xFD9
  4258                           status	equ	0xFD8
  4259                           
  4260 ;; *************** function _utoa *****************
  4261 ;; Defined at:
  4262 ;;		line 374 in file "../My_header\My_header.h"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;  str             2   26[BANK0 ] PTR unsigned char 
  4265 ;;		 -> display_LCD@str(10), display_dec@str(10), 
  4266 ;;  value           2   28[BANK0 ] unsigned int 
  4267 ;;  digits          1   30[BANK0 ] unsigned char 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  v               2   32[BANK0 ] unsigned int 
  4270 ;;  d               1   31[BANK0 ] unsigned char 
  4271 ;; Return value:  Size  Location     Type
  4272 ;;		None               void
  4273 ;; Registers used:
  4274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4280 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4281 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4283 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4284 ;;Total ram usage:        8 bytes
  4285 ;; Hardware stack levels used:    1
  4286 ;; Hardware stack levels required when called:    5
  4287 ;; This function calls:
  4288 ;;		___lwdiv
  4289 ;;		___lwmod
  4290 ;; This function is called by:
  4291 ;;		_display_dec
  4292 ;;		_display_LCD
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           	psect	text11
  4297  0127CE                     __ptext11:
  4298                           	opt stack 0
  4299  0127CE                     _utoa:
  4300                           	opt stack 23
  4301                           
  4302                           ;My_header\My_header.h: 375: uint16_t v;
  4303                           ;My_header\My_header.h: 376: uint8_t d;
  4304                           ;My_header\My_header.h: 377: while (digits--) {
  4305                           
  4306                           ;incstack = 0
  4307  0127CE  D038               	goto	l5005
  4308  0127D0                     l248:
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;My_header\My_header.h: 378: v = value;
  4312  0127D0  C0D5  F0D9         	movff	utoa@value,utoa@v
  4313  0127D4  C0D6  F0DA         	movff	utoa@value+1,utoa@v+1
  4314                           
  4315                           ;My_header\My_header.h: 379: d = digits;
  4316  0127D8  C0D7  F0D8         	movff	utoa@digits,utoa@d
  4317                           
  4318                           ;My_header\My_header.h: 380: while (d--) {
  4319  0127DC  D010               	goto	l4997
  4320  0127DE                     l4995:
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;My_header\My_header.h: 381: v /= 10;
  4324  0127DE  C0D9  F0CC         	movff	utoa@v,___lwdiv@dividend
  4325  0127E2  C0DA  F0CD         	movff	utoa@v+1,___lwdiv@dividend+1
  4326  0127E6  0E00               	movlw	0
  4327  0127E8  0100               	movlb	0	; () banked
  4328  0127EA  6FCF               	movwf	(___lwdiv@divisor+1)& (0+255),b
  4329  0127EC  0E0A               	movlw	10
  4330  0127EE  6FCE               	movwf	___lwdiv@divisor& (0+255),b
  4331  0127F0  EC73  F094         	call	___lwdiv	;wreg free
  4332  0127F4  C0CC  F0D9         	movff	?___lwdiv,utoa@v
  4333  0127F8  C0CD  F0DA         	movff	?___lwdiv+1,utoa@v+1
  4334  0127FC  D000               	goto	l4997
  4335  0127FE                     l4997:
  4336  0127FE  0100               	movlb	0	; () banked
  4337  012800  07D8               	decf	utoa@d& (0+255),f,b
  4338  012802  0100               	movlb	0	; () banked
  4339  012804  29D8               	incf	utoa@d& (0+255),w,b
  4340  012806  A4D8               	btfss	status,2,c
  4341  012808  D7EA               	goto	l4995
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;My_header\My_header.h: 382: }
  4345                           ;My_header\My_header.h: 383: v %= 10;
  4346                           
  4347                           ; BSR set to: 0
  4348  01280A  C0D9  F0B9         	movff	utoa@v,___lwmod@dividend
  4349  01280E  C0DA  F0BA         	movff	utoa@v+1,___lwmod@dividend+1
  4350  012812  0E00               	movlw	0
  4351  012814  0100               	movlb	0	; () banked
  4352  012816  6FBC               	movwf	(___lwmod@divisor+1)& (0+255),b
  4353  012818  0E0A               	movlw	10
  4354  01281A  6FBB               	movwf	___lwmod@divisor& (0+255),b
  4355  01281C  EC63  F095         	call	___lwmod	;wreg free
  4356  012820  C0B9  F0D9         	movff	?___lwmod,utoa@v
  4357  012824  C0BA  F0DA         	movff	?___lwmod+1,utoa@v+1
  4358                           
  4359                           ;My_header\My_header.h: 384: *str++ = '0' + v;
  4360  012828  0100               	movlb	0	; () banked
  4361  01282A  51D9               	movf	utoa@v& (0+255),w,b
  4362  01282C  0F30               	addlw	48
  4363  01282E  C0D3  FFD9         	movff	utoa@str,fsr2l
  4364  012832  C0D4  FFDA         	movff	utoa@str+1,fsr2h
  4365  012836  6EDF               	movwf	indf2,c
  4366                           
  4367                           ; BSR set to: 0
  4368  012838  0100               	movlb	0	; () banked
  4369  01283A  4BD3               	infsnz	utoa@str& (0+255),f,b
  4370  01283C  2BD4               	incf	(utoa@str+1)& (0+255),f,b
  4371  01283E  D000               	goto	l5005
  4372  012840                     l5005:
  4373  012840  0100               	movlb	0	; () banked
  4374  012842  07D7               	decf	utoa@digits& (0+255),f,b
  4375  012844  0100               	movlb	0	; () banked
  4376  012846  29D7               	incf	utoa@digits& (0+255),w,b
  4377  012848  A4D8               	btfss	status,2,c
  4378  01284A  D7C2               	goto	l248
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;My_header\My_header.h: 385: }
  4382                           ;My_header\My_header.h: 386: *str = '\0';
  4383                           
  4384                           ; BSR set to: 0
  4385  01284C  C0D3  FFD9         	movff	utoa@str,fsr2l
  4386  012850  C0D4  FFDA         	movff	utoa@str+1,fsr2h
  4387  012854  0E00               	movlw	0
  4388  012856  6EDF               	movwf	indf2,c
  4389                           
  4390                           ; BSR set to: 0
  4391  012858  0012               	return		;funcret
  4392  01285A                     __end_of_utoa:
  4393                           	opt stack 0
  4394                           tblptru	equ	0xFF8
  4395                           tblptrh	equ	0xFF7
  4396                           tblptrl	equ	0xFF6
  4397                           tablat	equ	0xFF5
  4398                           prodh	equ	0xFF4
  4399                           prodl	equ	0xFF3
  4400                           intcon	equ	0xFF2
  4401                           postinc0	equ	0xFEE
  4402                           wreg	equ	0xFE8
  4403                           postdec1	equ	0xFE5
  4404                           fsr1l	equ	0xFE1
  4405                           indf2	equ	0xFDF
  4406                           postinc2	equ	0xFDE
  4407                           postdec2	equ	0xFDD
  4408                           fsr2h	equ	0xFDA
  4409                           fsr2l	equ	0xFD9
  4410                           status	equ	0xFD8
  4411                           
  4412 ;; *************** function ___lwmod *****************
  4413 ;; Defined at:
  4414 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  dividend        2    0[BANK0 ] unsigned int 
  4417 ;;  divisor         2    2[BANK0 ] unsigned int 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  counter         1   31[COMRAM] unsigned char 
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  2    0[BANK0 ] unsigned int 
  4422 ;; Registers used:
  4423 ;;		wreg, status,2, status,0
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4429 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4432 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4433 ;;Total ram usage:        5 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; Hardware stack levels required when called:    4
  4436 ;; This function calls:
  4437 ;;		Nothing
  4438 ;; This function is called by:
  4439 ;;		_utoa
  4440 ;;		_display_LCD
  4441 ;;		_tx_sendn
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           	psect	text12
  4446  012AC6                     __ptext12:
  4447                           	opt stack 0
  4448  012AC6                     ___lwmod:
  4449                           	opt stack 23
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;incstack = 0
  4453  012AC6  0100               	movlb	0	; () banked
  4454  012AC8  51BB               	movf	___lwmod@divisor& (0+255),w,b
  4455  012ACA  0100               	movlb	0	; () banked
  4456  012ACC  11BC               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  4457  012ACE  B4D8               	btfsc	status,2,c
  4458  012AD0  D028               	goto	l1276
  4459                           
  4460                           ; BSR set to: 0
  4461  012AD2  0E01               	movlw	1
  4462  012AD4  6E20               	movwf	___lwmod@counter,c
  4463  012AD6  D006               	goto	l4983
  4464  012AD8                     l4981:
  4465                           
  4466                           ; BSR set to: 0
  4467  012AD8  0100               	movlb	0	; () banked
  4468  012ADA  90D8               	bcf	status,0,c
  4469  012ADC  37BB               	rlcf	___lwmod@divisor& (0+255),f,b
  4470  012ADE  37BC               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  4471  012AE0  2A20               	incf	___lwmod@counter,f,c
  4472  012AE2  D000               	goto	l4983
  4473  012AE4                     l4983:
  4474                           
  4475                           ; BSR set to: 0
  4476  012AE4  0100               	movlb	0	; () banked
  4477  012AE6  BFBC               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
  4478  012AE8  D002               	goto	l4985
  4479  012AEA  D7F6               	goto	l4981
  4480                           
  4481                           ; BSR set to: 0
  4482  012AEC  D000               	goto	l4985
  4483  012AEE                     l4985:
  4484                           
  4485                           ; BSR set to: 0
  4486  012AEE  0100               	movlb	0	; () banked
  4487  012AF0  51BB               	movf	___lwmod@divisor& (0+255),w,b
  4488  012AF2  0100               	movlb	0	; () banked
  4489  012AF4  5DB9               	subwf	___lwmod@dividend& (0+255),w,b
  4490  012AF6  0100               	movlb	0	; () banked
  4491  012AF8  51BC               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4492  012AFA  0100               	movlb	0	; () banked
  4493  012AFC  59BA               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  4494  012AFE  A0D8               	btfss	status,0,c
  4495  012B00  D009               	goto	l4989
  4496                           
  4497                           ; BSR set to: 0
  4498  012B02  0100               	movlb	0	; () banked
  4499  012B04  51BB               	movf	___lwmod@divisor& (0+255),w,b
  4500  012B06  0100               	movlb	0	; () banked
  4501  012B08  5FB9               	subwf	___lwmod@dividend& (0+255),f,b
  4502  012B0A  0100               	movlb	0	; () banked
  4503  012B0C  51BC               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4504  012B0E  0100               	movlb	0	; () banked
  4505  012B10  5BBA               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  4506  012B12  D000               	goto	l4989
  4507  012B14                     l4989:
  4508                           
  4509                           ; BSR set to: 0
  4510  012B14  0100               	movlb	0	; () banked
  4511  012B16  90D8               	bcf	status,0,c
  4512  012B18  33BC               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  4513  012B1A  33BB               	rrcf	___lwmod@divisor& (0+255),f,b
  4514                           
  4515                           ; BSR set to: 0
  4516  012B1C  2E20               	decfsz	___lwmod@counter,f,c
  4517  012B1E  D7E7               	goto	l4985
  4518  012B20  D000               	goto	l1276
  4519  012B22                     l1276:
  4520                           
  4521                           ; BSR set to: 0
  4522  012B22  C0B9  F0B9         	movff	___lwmod@dividend,?___lwmod
  4523  012B26  C0BA  F0BA         	movff	___lwmod@dividend+1,?___lwmod+1
  4524                           
  4525                           ; BSR set to: 0
  4526  012B2A  0012               	return		;funcret
  4527  012B2C                     __end_of___lwmod:
  4528                           	opt stack 0
  4529                           tblptru	equ	0xFF8
  4530                           tblptrh	equ	0xFF7
  4531                           tblptrl	equ	0xFF6
  4532                           tablat	equ	0xFF5
  4533                           prodh	equ	0xFF4
  4534                           prodl	equ	0xFF3
  4535                           intcon	equ	0xFF2
  4536                           postinc0	equ	0xFEE
  4537                           wreg	equ	0xFE8
  4538                           postdec1	equ	0xFE5
  4539                           fsr1l	equ	0xFE1
  4540                           indf2	equ	0xFDF
  4541                           postinc2	equ	0xFDE
  4542                           postdec2	equ	0xFDD
  4543                           fsr2h	equ	0xFDA
  4544                           fsr2l	equ	0xFD9
  4545                           status	equ	0xFD8
  4546                           
  4547 ;; *************** function _I2C_LCD_Putc *****************
  4548 ;; Defined at:
  4549 ;;		line 117 in file "../My_header\My_I2C.h"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  c               1    wreg     unsigned char 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;  c               1    1[BANK0 ] unsigned char 
  4554 ;;  ans             1    2[BANK0 ] unsigned char 
  4555 ;; Return value:  Size  Location     Type
  4556 ;;		None               void
  4557 ;; Registers used:
  4558 ;;		wreg, status,2, status,0, cstack
  4559 ;; Tracked objects:
  4560 ;;		On entry : 0/0
  4561 ;;		On exit  : 0/0
  4562 ;;		Unchanged: 0/0
  4563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4565 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4567 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4568 ;;Total ram usage:        2 bytes
  4569 ;; Hardware stack levels used:    1
  4570 ;; Hardware stack levels required when called:    6
  4571 ;; This function calls:
  4572 ;;		_I2C_Send
  4573 ;;		_I2C_Start
  4574 ;;		_I2C_Stop
  4575 ;; This function is called by:
  4576 ;;		_display_time_1602
  4577 ;;		_display_LCD
  4578 ;;		_display_time_0802
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           	psect	text13
  4583  012FFC                     __ptext13:
  4584                           	opt stack 0
  4585  012FFC                     _I2C_LCD_Putc:
  4586                           	opt stack 21
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;incstack = 0
  4590                           ;I2C_LCD_Putc@c stored from wreg
  4591  012FFC  0100               	movlb	0	; () banked
  4592  012FFE  6FBA               	movwf	I2C_LCD_Putc@c& (0+255),b
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;My_header\My_I2C.h: 118: uint8_t ans;
  4596                           ;My_header\My_I2C.h: 120: ans = I2C_Start(0x3E, 0);
  4597  013000  0E00               	movlw	0
  4598  013002  6E22               	movwf	I2C_Start@rw,c
  4599  013004  0E3E               	movlw	62
  4600  013006  EC4D  F098         	call	_I2C_Start
  4601  01300A  0100               	movlb	0	; () banked
  4602  01300C  6FBB               	movwf	I2C_LCD_Putc@ans& (0+255),b
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;My_header\My_I2C.h: 121: if (ans == 0) {
  4606  01300E  0100               	movlb	0	; () banked
  4607  013010  51BB               	movf	I2C_LCD_Putc@ans& (0+255),w,b
  4608  013012  0100               	movlb	0	; () banked
  4609  013014  A4D8               	btfss	status,2,c
  4610  013016  D007               	goto	l346
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;My_header\My_I2C.h: 123: I2C_Send(0b11000000);
  4614  013018  0EC0               	movlw	192
  4615  01301A  EC7F  F099         	call	_I2C_Send
  4616                           
  4617                           ;My_header\My_I2C.h: 124: I2C_Send(c);
  4618  01301E  0100               	movlb	0	; () banked
  4619  013020  51BA               	movf	I2C_LCD_Putc@c& (0+255),w,b
  4620  013022  EC7F  F099         	call	_I2C_Send
  4621  013026                     l346:
  4622                           
  4623                           ;My_header\My_I2C.h: 125: }
  4624                           ;My_header\My_I2C.h: 126: I2C_Stop();
  4625  013026  ECC5  F099         	call	_I2C_Stop	;wreg free
  4626                           
  4627                           ;My_header\My_I2C.h: 127: _delay((unsigned long)((26)*(48000000/4000000.0)));
  4628  01302A  0E68               	movlw	104
  4629  01302C                     u6497:
  4630  01302C  2EE8               	decfsz	wreg,f,c
  4631  01302E  D7FE               	goto	u6497
  4632  013030  0012               	return		;funcret
  4633  013032                     __end_of_I2C_LCD_Putc:
  4634                           	opt stack 0
  4635                           tblptru	equ	0xFF8
  4636                           tblptrh	equ	0xFF7
  4637                           tblptrl	equ	0xFF6
  4638                           tablat	equ	0xFF5
  4639                           prodh	equ	0xFF4
  4640                           prodl	equ	0xFF3
  4641                           intcon	equ	0xFF2
  4642                           postinc0	equ	0xFEE
  4643                           wreg	equ	0xFE8
  4644                           postdec1	equ	0xFE5
  4645                           fsr1l	equ	0xFE1
  4646                           indf2	equ	0xFDF
  4647                           postinc2	equ	0xFDE
  4648                           postdec2	equ	0xFDD
  4649                           fsr2h	equ	0xFDA
  4650                           fsr2l	equ	0xFD9
  4651                           status	equ	0xFD8
  4652                           
  4653 ;; *************** function _display_port *****************
  4654 ;; Defined at:
  4655 ;;		line 166 in file "PIC18F27J53-ChargeStation6-04.h"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;		None
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;		None
  4660 ;; Return value:  Size  Location     Type
  4661 ;;		None               void
  4662 ;; Registers used:
  4663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4673 ;;Total ram usage:        0 bytes
  4674 ;; Hardware stack levels used:    1
  4675 ;; Hardware stack levels required when called:    8
  4676 ;; This function calls:
  4677 ;;		_I2C_LCD_Puts
  4678 ;;		_I2C_LCD_SetCursor
  4679 ;; This function is called by:
  4680 ;;		_display_LCD
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           	psect	text14
  4685  011D80                     __ptext14:
  4686                           	opt stack 0
  4687  011D80                     _display_port:
  4688                           	opt stack 20
  4689                           
  4690                           ;PIC18F27J53-ChargeStation6-04.h: 167: I2C_LCD_SetCursor(0, 0);
  4691                           
  4692                           ;incstack = 0
  4693  011D80  0E00               	movlw	0
  4694  011D82  0100               	movlb	0	; () banked
  4695  011D84  6FBC               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  4696  011D86  0E00               	movlw	0
  4697  011D88  ECAD  F098         	call	_I2C_LCD_SetCursor
  4698                           
  4699                           ;PIC18F27J53-ChargeStation6-04.h: 168: switch (print_port) {
  4700  011D8C  D057               	goto	l5543
  4701  011D8E                     l5523:
  4702                           
  4703                           ;PIC18F27J53-ChargeStation6-04.h: 170: if (auto_cut_ON[print_port]) I2C_LCD_Puts("Left P
      +                          ort");
  4704  011D8E  5039               	movf	_print_port,w,c
  4705  011D90  0D01               	mullw	1
  4706  011D92  0E29               	movlw	low _auto_cut_ON
  4707  011D94  24F3               	addwf	prodl,w,c
  4708  011D96  6ED9               	movwf	fsr2l,c
  4709  011D98  0E00               	movlw	high _auto_cut_ON
  4710  011D9A  20F4               	addwfc	prodh,w,c
  4711  011D9C  6EDA               	movwf	fsr2h,c
  4712  011D9E  50DF               	movf	indf2,w,c
  4713  011DA0  B4D8               	btfsc	status,2,c
  4714  011DA2  D009               	goto	l5527
  4715  011DA4  0E85               	movlw	low STR_16
  4716  011DA6  0100               	movlb	0	; () banked
  4717  011DA8  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  4718  011DAA  0EFF               	movlw	high STR_16
  4719  011DAC  0100               	movlb	0	; () banked
  4720  011DAE  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4721  011DB0  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  4722  011DB4  0012               	return	
  4723  011DB6                     l5527:
  4724                           
  4725                           ;PIC18F27J53-ChargeStation6-04.h: 171: else I2C_LCD_Puts("LEFT PORT");
  4726  011DB6  0E7B               	movlw	low STR_17
  4727  011DB8  0100               	movlb	0	; () banked
  4728  011DBA  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  4729  011DBC  0EFF               	movlw	high STR_17
  4730  011DBE  0100               	movlb	0	; () banked
  4731  011DC0  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4732  011DC2  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  4733                           
  4734                           ;PIC18F27J53-ChargeStation6-04.h: 172: break;
  4735  011DC6  0012               	return	
  4736  011DC8                     l5529:
  4737                           
  4738                           ;PIC18F27J53-ChargeStation6-04.h: 174: if (auto_cut_ON[print_port]) I2C_LCD_Puts("Center
      +                           Port");
  4739  011DC8  5039               	movf	_print_port,w,c
  4740  011DCA  0D01               	mullw	1
  4741  011DCC  0E29               	movlw	low _auto_cut_ON
  4742  011DCE  24F3               	addwf	prodl,w,c
  4743  011DD0  6ED9               	movwf	fsr2l,c
  4744  011DD2  0E00               	movlw	high _auto_cut_ON
  4745  011DD4  20F4               	addwfc	prodh,w,c
  4746  011DD6  6EDA               	movwf	fsr2h,c
  4747  011DD8  50DF               	movf	indf2,w,c
  4748  011DDA  B4D8               	btfsc	status,2,c
  4749  011DDC  D009               	goto	l5533
  4750  011DDE  0E59               	movlw	low STR_18
  4751  011DE0  0100               	movlb	0	; () banked
  4752  011DE2  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  4753  011DE4  0EFF               	movlw	high STR_18
  4754  011DE6  0100               	movlb	0	; () banked
  4755  011DE8  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4756  011DEA  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  4757  011DEE  0012               	return	
  4758  011DF0                     l5533:
  4759                           
  4760                           ;PIC18F27J53-ChargeStation6-04.h: 175: else I2C_LCD_Puts("CENTER PORT");
  4761  011DF0  0E4D               	movlw	low STR_19
  4762  011DF2  0100               	movlb	0	; () banked
  4763  011DF4  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  4764  011DF6  0EFF               	movlw	high STR_19
  4765  011DF8  0100               	movlb	0	; () banked
  4766  011DFA  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4767  011DFC  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  4768                           
  4769                           ;PIC18F27J53-ChargeStation6-04.h: 176: break;
  4770  011E00  0012               	return	
  4771  011E02                     l5535:
  4772                           
  4773                           ;PIC18F27J53-ChargeStation6-04.h: 178: if (auto_cut_ON[print_port]) I2C_LCD_Puts("Right 
      +                          Port");
  4774  011E02  5039               	movf	_print_port,w,c
  4775  011E04  0D01               	mullw	1
  4776  011E06  0E29               	movlw	low _auto_cut_ON
  4777  011E08  24F3               	addwf	prodl,w,c
  4778  011E0A  6ED9               	movwf	fsr2l,c
  4779  011E0C  0E00               	movlw	high _auto_cut_ON
  4780  011E0E  20F4               	addwfc	prodh,w,c
  4781  011E10  6EDA               	movwf	fsr2h,c
  4782  011E12  50DF               	movf	indf2,w,c
  4783  011E14  B4D8               	btfsc	status,2,c
  4784  011E16  D009               	goto	l5539
  4785  011E18  0E70               	movlw	low STR_20
  4786  011E1A  0100               	movlb	0	; () banked
  4787  011E1C  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  4788  011E1E  0EFF               	movlw	high STR_20
  4789  011E20  0100               	movlb	0	; () banked
  4790  011E22  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4791  011E24  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  4792  011E28  0012               	return	
  4793  011E2A                     l5539:
  4794                           
  4795                           ;PIC18F27J53-ChargeStation6-04.h: 179: else I2C_LCD_Puts("RIGHT PORT");
  4796  011E2A  0E65               	movlw	low STR_21
  4797  011E2C  0100               	movlb	0	; () banked
  4798  011E2E  6FBA               	movwf	I2C_LCD_Puts@s& (0+255),b
  4799  011E30  0EFF               	movlw	high STR_21
  4800  011E32  0100               	movlb	0	; () banked
  4801  011E34  6FBB               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4802  011E36  EC56  F093         	call	_I2C_LCD_Puts	;wreg free
  4803                           
  4804                           ;PIC18F27J53-ChargeStation6-04.h: 181: }
  4805                           
  4806                           ;PIC18F27J53-ChargeStation6-04.h: 180: break;
  4807  011E3A  0012               	return	
  4808  011E3C                     l5543:
  4809  011E3C  5039               	movf	_print_port,w,c
  4810                           
  4811                           ; Switch size 1, requested type "space"
  4812                           ; Number of cases is 3, Range of values is 0 to 2
  4813                           ; switch strategies available:
  4814                           ; Name         Instructions Cycles
  4815                           ; simple_byte           10     6 (average)
  4816                           ;	Chosen strategy is simple_byte
  4817  011E3E  0A00               	xorlw	0	; case 0
  4818  011E40  B4D8               	btfsc	status,2,c
  4819  011E42  D7A5               	goto	l5523
  4820  011E44  0A01               	xorlw	1	; case 1
  4821  011E46  B4D8               	btfsc	status,2,c
  4822  011E48  D7BF               	goto	l5529
  4823  011E4A  0A03               	xorlw	3	; case 2
  4824  011E4C  A4D8               	btfss	status,2,c
  4825  011E4E  0012               	return	
  4826  011E50  D7D8               	goto	l5535
  4827  011E52  0012               	return		;funcret
  4828  011E54                     __end_of_display_port:
  4829                           	opt stack 0
  4830                           tblptru	equ	0xFF8
  4831                           tblptrh	equ	0xFF7
  4832                           tblptrl	equ	0xFF6
  4833                           tablat	equ	0xFF5
  4834                           prodh	equ	0xFF4
  4835                           prodl	equ	0xFF3
  4836                           intcon	equ	0xFF2
  4837                           postinc0	equ	0xFEE
  4838                           wreg	equ	0xFE8
  4839                           postdec1	equ	0xFE5
  4840                           fsr1l	equ	0xFE1
  4841                           indf2	equ	0xFDF
  4842                           postinc2	equ	0xFDE
  4843                           postdec2	equ	0xFDD
  4844                           fsr2h	equ	0xFDA
  4845                           fsr2l	equ	0xFD9
  4846                           status	equ	0xFD8
  4847                           
  4848 ;; *************** function _I2C_LCD_SetCursor *****************
  4849 ;; Defined at:
  4850 ;;		line 111 in file "../My_header\My_I2C.h"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;  col             1    wreg     unsigned char 
  4853 ;;  row             1    3[BANK0 ] unsigned char 
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;  col             1    6[BANK0 ] unsigned char 
  4856 ;;  row_offsets     2    4[BANK0 ] unsigned char [2]
  4857 ;; Return value:  Size  Location     Type
  4858 ;;		None               void
  4859 ;; Registers used:
  4860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4866 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4867 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4869 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4870 ;;Total ram usage:        4 bytes
  4871 ;; Hardware stack levels used:    1
  4872 ;; Hardware stack levels required when called:    7
  4873 ;; This function calls:
  4874 ;;		_I2C_LCD_Command
  4875 ;; This function is called by:
  4876 ;;		_display_time_1602
  4877 ;;		_display_port
  4878 ;;		_display_LCD
  4879 ;;		_sleep_loop
  4880 ;;		_display_time_0802
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           	psect	text15
  4885  01315A                     __ptext15:
  4886                           	opt stack 0
  4887  01315A                     _I2C_LCD_SetCursor:
  4888                           	opt stack 22
  4889                           
  4890                           ;incstack = 0
  4891                           ;I2C_LCD_SetCursor@col stored from wreg
  4892  01315A  0100               	movlb	0	; () banked
  4893  01315C  6FBF               	movwf	I2C_LCD_SetCursor@col& (0+255),b
  4894                           
  4895                           ; BSR set to: 0
  4896                           ;My_header\My_I2C.h: 112: uint8_t row_offsets[] = {0x00, 0x40};
  4897  01315E  C03E  F0BD         	movff	I2C_LCD_SetCursor@F9847,I2C_LCD_SetCursor@row_offsets
  4898  013162  C03F  F0BE         	movff	I2C_LCD_SetCursor@F9847+1,I2C_LCD_SetCursor@row_offsets+1
  4899                           
  4900                           ; BSR set to: 0
  4901                           ;My_header\My_I2C.h: 114: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
  4902  013166  0100               	movlb	0	; () banked
  4903  013168  51BC               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
  4904  01316A  0D01               	mullw	1
  4905  01316C  0EBD               	movlw	low I2C_LCD_SetCursor@row_offsets
  4906  01316E  24F3               	addwf	prodl,w,c
  4907  013170  6ED9               	movwf	fsr2l,c
  4908  013172  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
  4909  013174  20F4               	addwfc	prodh,w,c
  4910  013176  6EDA               	movwf	fsr2h,c
  4911  013178  50DF               	movf	indf2,w,c
  4912  01317A  0100               	movlb	0	; () banked
  4913  01317C  25BF               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
  4914  01317E  0980               	iorlw	128
  4915  013180  EC19  F098         	call	_I2C_LCD_Command
  4916  013184  0012               	return		;funcret
  4917  013186                     __end_of_I2C_LCD_SetCursor:
  4918                           	opt stack 0
  4919                           tblptru	equ	0xFF8
  4920                           tblptrh	equ	0xFF7
  4921                           tblptrl	equ	0xFF6
  4922                           tablat	equ	0xFF5
  4923                           prodh	equ	0xFF4
  4924                           prodl	equ	0xFF3
  4925                           intcon	equ	0xFF2
  4926                           postinc0	equ	0xFEE
  4927                           wreg	equ	0xFE8
  4928                           postdec1	equ	0xFE5
  4929                           fsr1l	equ	0xFE1
  4930                           indf2	equ	0xFDF
  4931                           postinc2	equ	0xFDE
  4932                           postdec2	equ	0xFDD
  4933                           fsr2h	equ	0xFDA
  4934                           fsr2l	equ	0xFD9
  4935                           status	equ	0xFD8
  4936                           
  4937 ;; *************** function _I2C_LCD_Puts *****************
  4938 ;; Defined at:
  4939 ;;		line 130 in file "../My_header\My_I2C.h"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;  s               2    1[BANK0 ] PTR const unsigned char 
  4942 ;;		 -> STR_34(9), STR_33(17), STR_32(13), STR_31(16), 
  4943 ;;		 -> STR_30(20), STR_29(19), STR_28(2), STR_27(3), 
  4944 ;;		 -> STR_26(3), STR_25(3), STR_24(4), display_LCD@str(10), 
  4945 ;;		 -> STR_23(13), STR_22(17), STR_21(11), STR_20(11), 
  4946 ;;		 -> STR_19(12), STR_18(12), STR_17(10), STR_16(10), 
  4947 ;;		 -> STR_15(3), display_dec@str(10), STR_7(4), STR_6(4), 
  4948 ;;		 -> STR_5(4), STR_4(4), STR_3(4), STR_2(4), 
  4949 ;;		 -> STR_1(4), 
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;  ans             2    4[BANK0 ] int 
  4952 ;; Return value:  Size  Location     Type
  4953 ;;		None               void
  4954 ;; Registers used:
  4955 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4961 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4962 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4963 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4964 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4965 ;;Total ram usage:        5 bytes
  4966 ;; Hardware stack levels used:    1
  4967 ;; Hardware stack levels required when called:    6
  4968 ;; This function calls:
  4969 ;;		_I2C_Send
  4970 ;;		_I2C_Start
  4971 ;;		_I2C_Stop
  4972 ;; This function is called by:
  4973 ;;		_display_dec
  4974 ;;		_display_time_1602
  4975 ;;		_display_port
  4976 ;;		_display_LCD
  4977 ;;		_sleep_loop
  4978 ;;		_display_time_0802
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           	psect	text16
  4983  0126AC                     __ptext16:
  4984                           	opt stack 0
  4985  0126AC                     _I2C_LCD_Puts:
  4986                           	opt stack 23
  4987                           
  4988                           ;My_header\My_I2C.h: 131: int ans;
  4989                           ;My_header\My_I2C.h: 133: ans = I2C_Start(0x3E, 0);
  4990                           
  4991                           ;incstack = 0
  4992  0126AC  0E00               	movlw	0
  4993  0126AE  6E22               	movwf	I2C_Start@rw,c
  4994  0126B0  0E3E               	movlw	62
  4995  0126B2  EC4D  F098         	call	_I2C_Start
  4996  0126B6  0100               	movlb	0	; () banked
  4997  0126B8  6FBC               	movwf	??_I2C_LCD_Puts& (0+255),b
  4998  0126BA  0100               	movlb	0	; () banked
  4999  0126BC  51BC               	movf	??_I2C_LCD_Puts& (0+255),w,b
  5000  0126BE  0100               	movlb	0	; () banked
  5001  0126C0  6FBD               	movwf	I2C_LCD_Puts@ans& (0+255),b
  5002  0126C2  6BBE               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;My_header\My_I2C.h: 134: if (ans == 0) {
  5006  0126C4  0100               	movlb	0	; () banked
  5007  0126C6  51BD               	movf	I2C_LCD_Puts@ans& (0+255),w,b
  5008  0126C8  0100               	movlb	0	; () banked
  5009  0126CA  11BE               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
  5010  0126CC  A4D8               	btfss	status,2,c
  5011  0126CE  D034               	goto	l5031
  5012                           
  5013                           ; BSR set to: 0
  5014                           ;My_header\My_I2C.h: 135: I2C_Send(0b01000000);
  5015  0126D0  0E40               	movlw	64
  5016  0126D2  EC7F  F099         	call	_I2C_Send
  5017                           
  5018                           ;My_header\My_I2C.h: 136: while (*s) {
  5019  0126D6  D01A               	goto	l5029
  5020  0126D8                     l5023:
  5021                           
  5022                           ;My_header\My_I2C.h: 137: I2C_Send(*s++);
  5023  0126D8  C0BA  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  5024  0126DC  C0BB  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  5025  0126E0  0E00               	movlw	low (__mediumconst shr (0+16))
  5026  0126E2  6EF8               	movwf	tblptru,c
  5027  0126E4  0E0E               	movlw	(high __ramtop+-1)
  5028  0126E6  64F7               	cpfsgt	tblptrh,c
  5029  0126E8  D003               	bra	u5077
  5030  0126EA  0008               	tblrd		*
  5031  0126EC  50F5               	movf	tablat,w,c
  5032  0126EE  D005               	bra	u5070
  5033  0126F0                     u5077:
  5034  0126F0  CFF6 FFE1          	movff	tblptrl,fsr1l
  5035  0126F4  CFF7 FFE2          	movff	tblptrh,fsr1h
  5036  0126F8  50E7               	movf	indf1,w,c
  5037  0126FA                     u5070:
  5038  0126FA  EC7F  F099         	call	_I2C_Send
  5039  0126FE  0100               	movlb	0	; () banked
  5040  012700  4BBA               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
  5041  012702  2BBB               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;My_header\My_I2C.h: 138: _delay((unsigned long)((26)*(48000000/4000000.0)));
  5045  012704  0E68               	movlw	104
  5046  012706                     u6507:
  5047  012706  2EE8               	decfsz	wreg,f,c
  5048  012708  D7FE               	goto	u6507
  5049  01270A  D000               	goto	l5029
  5050  01270C                     l5029:
  5051  01270C  C0BA  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  5052  012710  C0BB  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  5053  012714  0E00               	movlw	low (__mediumconst shr (0+16))
  5054  012716  6EF8               	movwf	tblptru,c
  5055  012718  0E0E               	movlw	(high __ramtop+-1)
  5056  01271A  64F7               	cpfsgt	tblptrh,c
  5057  01271C  D003               	bra	u5087
  5058  01271E  0008               	tblrd		*
  5059  012720  50F5               	movf	tablat,w,c
  5060  012722  D005               	bra	u5080
  5061  012724                     u5087:
  5062  012724  CFF6 FFE1          	movff	tblptrl,fsr1l
  5063  012728  CFF7 FFE2          	movff	tblptrh,fsr1h
  5064  01272C  50E7               	movf	indf1,w,c
  5065  01272E                     u5080:
  5066  01272E  0900               	iorlw	0
  5067  012730  B4D8               	btfsc	status,2,c
  5068  012732  D002               	goto	l5031
  5069  012734  D7D1               	goto	l5023
  5070  012736  D000               	goto	l5031
  5071  012738                     l5031:
  5072                           
  5073                           ;My_header\My_I2C.h: 139: }
  5074                           ;My_header\My_I2C.h: 140: }
  5075                           ;My_header\My_I2C.h: 141: I2C_Stop();
  5076  012738  ECC5  F099         	call	_I2C_Stop	;wreg free
  5077  01273C  0012               	return		;funcret
  5078  01273E                     __end_of_I2C_LCD_Puts:
  5079                           	opt stack 0
  5080                           tblptru	equ	0xFF8
  5081                           tblptrh	equ	0xFF7
  5082                           tblptrl	equ	0xFF6
  5083                           tablat	equ	0xFF5
  5084                           prodh	equ	0xFF4
  5085                           prodl	equ	0xFF3
  5086                           intcon	equ	0xFF2
  5087                           postinc0	equ	0xFEE
  5088                           wreg	equ	0xFE8
  5089                           indf1	equ	0xFE7
  5090                           postdec1	equ	0xFE5
  5091                           fsr1h	equ	0xFE2
  5092                           fsr1l	equ	0xFE1
  5093                           indf2	equ	0xFDF
  5094                           postinc2	equ	0xFDE
  5095                           postdec2	equ	0xFDD
  5096                           fsr2h	equ	0xFDA
  5097                           fsr2l	equ	0xFD9
  5098                           status	equ	0xFD8
  5099                           
  5100 ;; *************** function ___llmod *****************
  5101 ;; Defined at:
  5102 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  5103 ;; Parameters:    Size  Location     Type
  5104 ;;  dividend        4   13[BANK0 ] unsigned long 
  5105 ;;  divisor         4   17[BANK0 ] unsigned long 
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;  counter         1   31[COMRAM] unsigned char 
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  4   13[BANK0 ] unsigned long 
  5110 ;; Registers used:
  5111 ;;		wreg, status,2, status,0
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5117 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5118 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5120 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5121 ;;Total ram usage:        9 bytes
  5122 ;; Hardware stack levels used:    1
  5123 ;; Hardware stack levels required when called:    4
  5124 ;; This function calls:
  5125 ;;		Nothing
  5126 ;; This function is called by:
  5127 ;;		_display_LCD
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131                           	psect	text17
  5132  0124DE                     __ptext17:
  5133                           	opt stack 0
  5134  0124DE                     ___llmod:
  5135                           	opt stack 24
  5136                           
  5137                           ;incstack = 0
  5138  0124DE  0100               	movlb	0	; () banked
  5139  0124E0  51CA               	movf	___llmod@divisor& (0+255),w,b
  5140  0124E2  0100               	movlb	0	; () banked
  5141  0124E4  11CB               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  5142  0124E6  0100               	movlb	0	; () banked
  5143  0124E8  11CC               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  5144  0124EA  0100               	movlb	0	; () banked
  5145  0124EC  11CD               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  5146  0124EE  B4D8               	btfsc	status,2,c
  5147  0124F0  D03C               	goto	l1213
  5148                           
  5149                           ; BSR set to: 0
  5150  0124F2  0E01               	movlw	1
  5151  0124F4  6E20               	movwf	___llmod@counter,c
  5152  0124F6  D008               	goto	l5557
  5153  0124F8                     l5555:
  5154                           
  5155                           ; BSR set to: 0
  5156  0124F8  0100               	movlb	0	; () banked
  5157  0124FA  90D8               	bcf	status,0,c
  5158  0124FC  37CA               	rlcf	___llmod@divisor& (0+255),f,b
  5159  0124FE  37CB               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  5160  012500  37CC               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  5161  012502  37CD               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  5162  012504  2A20               	incf	___llmod@counter,f,c
  5163  012506  D000               	goto	l5557
  5164  012508                     l5557:
  5165                           
  5166                           ; BSR set to: 0
  5167  012508  0100               	movlb	0	; () banked
  5168  01250A  BFCD               	btfsc	(___llmod@divisor+3)& (0+255),7,b
  5169  01250C  D002               	goto	l5559
  5170  01250E  D7F4               	goto	l5555
  5171                           
  5172                           ; BSR set to: 0
  5173  012510  D000               	goto	l5559
  5174  012512                     l5559:
  5175                           
  5176                           ; BSR set to: 0
  5177  012512  0100               	movlb	0	; () banked
  5178  012514  51CA               	movf	___llmod@divisor& (0+255),w,b
  5179  012516  0100               	movlb	0	; () banked
  5180  012518  5DC6               	subwf	___llmod@dividend& (0+255),w,b
  5181  01251A  0100               	movlb	0	; () banked
  5182  01251C  51CB               	movf	(___llmod@divisor+1)& (0+255),w,b
  5183  01251E  0100               	movlb	0	; () banked
  5184  012520  59C7               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  5185  012522  0100               	movlb	0	; () banked
  5186  012524  51CC               	movf	(___llmod@divisor+2)& (0+255),w,b
  5187  012526  0100               	movlb	0	; () banked
  5188  012528  59C8               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  5189  01252A  0100               	movlb	0	; () banked
  5190  01252C  51CD               	movf	(___llmod@divisor+3)& (0+255),w,b
  5191  01252E  0100               	movlb	0	; () banked
  5192  012530  59C9               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  5193  012532  A0D8               	btfss	status,0,c
  5194  012534  D011               	goto	l5563
  5195                           
  5196                           ; BSR set to: 0
  5197  012536  0100               	movlb	0	; () banked
  5198  012538  51CA               	movf	___llmod@divisor& (0+255),w,b
  5199  01253A  0100               	movlb	0	; () banked
  5200  01253C  5FC6               	subwf	___llmod@dividend& (0+255),f,b
  5201  01253E  0100               	movlb	0	; () banked
  5202  012540  51CB               	movf	(___llmod@divisor+1)& (0+255),w,b
  5203  012542  0100               	movlb	0	; () banked
  5204  012544  5BC7               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  5205  012546  0100               	movlb	0	; () banked
  5206  012548  51CC               	movf	(___llmod@divisor+2)& (0+255),w,b
  5207  01254A  0100               	movlb	0	; () banked
  5208  01254C  5BC8               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  5209  01254E  0100               	movlb	0	; () banked
  5210  012550  51CD               	movf	(___llmod@divisor+3)& (0+255),w,b
  5211  012552  0100               	movlb	0	; () banked
  5212  012554  5BC9               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  5213  012556  D000               	goto	l5563
  5214  012558                     l5563:
  5215                           
  5216                           ; BSR set to: 0
  5217  012558  0100               	movlb	0	; () banked
  5218  01255A  90D8               	bcf	status,0,c
  5219  01255C  33CD               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  5220  01255E  33CC               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  5221  012560  33CB               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  5222  012562  33CA               	rrcf	___llmod@divisor& (0+255),f,b
  5223                           
  5224                           ; BSR set to: 0
  5225  012564  2E20               	decfsz	___llmod@counter,f,c
  5226  012566  D7D5               	goto	l5559
  5227  012568  D000               	goto	l1213
  5228  01256A                     l1213:
  5229                           
  5230                           ; BSR set to: 0
  5231  01256A  C0C6  F0C6         	movff	___llmod@dividend,?___llmod
  5232  01256E  C0C7  F0C7         	movff	___llmod@dividend+1,?___llmod+1
  5233  012572  C0C8  F0C8         	movff	___llmod@dividend+2,?___llmod+2
  5234  012576  C0C9  F0C9         	movff	___llmod@dividend+3,?___llmod+3
  5235                           
  5236                           ; BSR set to: 0
  5237  01257A  0012               	return		;funcret
  5238  01257C                     __end_of___llmod:
  5239                           	opt stack 0
  5240                           tblptru	equ	0xFF8
  5241                           tblptrh	equ	0xFF7
  5242                           tblptrl	equ	0xFF6
  5243                           tablat	equ	0xFF5
  5244                           prodh	equ	0xFF4
  5245                           prodl	equ	0xFF3
  5246                           intcon	equ	0xFF2
  5247                           postinc0	equ	0xFEE
  5248                           wreg	equ	0xFE8
  5249                           indf1	equ	0xFE7
  5250                           postdec1	equ	0xFE5
  5251                           fsr1h	equ	0xFE2
  5252                           fsr1l	equ	0xFE1
  5253                           indf2	equ	0xFDF
  5254                           postinc2	equ	0xFDE
  5255                           postdec2	equ	0xFDD
  5256                           fsr2h	equ	0xFDA
  5257                           fsr2l	equ	0xFD9
  5258                           status	equ	0xFD8
  5259                           
  5260 ;; *************** function _ctmu_loop *****************
  5261 ;; Defined at:
  5262 ;;		line 336 in file "PIC18F27J53-ChargeStation6-04.h"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;		None
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;		None
  5267 ;; Return value:  Size  Location     Type
  5268 ;;		None               void
  5269 ;; Registers used:
  5270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5280 ;;Total ram usage:        0 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:    6
  5283 ;; This function calls:
  5284 ;;		_CTMU_read
  5285 ;;		___lwdiv
  5286 ;;		_button_timer_interrupt
  5287 ;; This function is called by:
  5288 ;;		_normal_mode_loop
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291                           
  5292                           	psect	text18
  5293  0119FA                     __ptext18:
  5294                           	opt stack 0
  5295  0119FA                     _ctmu_loop:
  5296                           	opt stack 23
  5297                           
  5298                           ;PIC18F27J53-ChargeStation6-04.h: 337: button_timer_interrupt(&ct0, !(CTMU_read(0) / ctm
      +                          u_value0));
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;incstack = 0
  5302  0119FA  0EA5               	movlw	low _ct0
  5303  0119FC  0100               	movlb	0	; () banked
  5304  0119FE  6FD3               	movwf	button_timer_interrupt@bt& (0+255),b
  5305  011A00  0E00               	movlw	high _ct0
  5306  011A02  0100               	movlb	0	; () banked
  5307  011A04  6FD4               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
  5308  011A06  0E00               	movlw	0
  5309  011A08  EC74  F091         	call	_CTMU_read
  5310  011A0C  C020  F0CC         	movff	?_CTMU_read,___lwdiv@dividend
  5311  011A10  C021  F0CD         	movff	?_CTMU_read+1,___lwdiv@dividend+1
  5312  011A14  C02E  F0CE         	movff	_ctmu_value0,___lwdiv@divisor
  5313  011A18  C02F  F0CF         	movff	_ctmu_value0+1,___lwdiv@divisor+1
  5314  011A1C  EC73  F094         	call	___lwdiv	;wreg free
  5315  011A20  0100               	movlb	0	; () banked
  5316  011A22  51CC               	movf	?___lwdiv& (0+255),w,b
  5317  011A24  0100               	movlb	0	; () banked
  5318  011A26  11CD               	iorwf	(?___lwdiv+1)& (0+255),w,b
  5319  011A28  A4D8               	btfss	status,2,c
  5320  011A2A  D002               	goto	u6140
  5321  011A2C  0E01               	movlw	1
  5322  011A2E  D001               	goto	u6150
  5323  011A30                     u6140:
  5324  011A30  0E00               	movlw	0
  5325  011A32                     u6150:
  5326  011A32  0100               	movlb	0	; () banked
  5327  011A34  6FD5               	movwf	button_timer_interrupt@sw_value& (0+255),b
  5328  011A36  EC84  F082         	call	_button_timer_interrupt	;wreg free
  5329                           
  5330                           ;PIC18F27J53-ChargeStation6-04.h: 338: button_timer_interrupt(&ct1, !(CTMU_read(1) / ctm
      +                          u_value1));
  5331  011A3A  0EA9               	movlw	low _ct1
  5332  011A3C  0100               	movlb	0	; () banked
  5333  011A3E  6FD3               	movwf	button_timer_interrupt@bt& (0+255),b
  5334  011A40  0E00               	movlw	high _ct1
  5335  011A42  0100               	movlb	0	; () banked
  5336  011A44  6FD4               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
  5337  011A46  0E01               	movlw	1
  5338  011A48  EC74  F091         	call	_CTMU_read
  5339  011A4C  C020  F0CC         	movff	?_CTMU_read,___lwdiv@dividend
  5340  011A50  C021  F0CD         	movff	?_CTMU_read+1,___lwdiv@dividend+1
  5341  011A54  C030  F0CE         	movff	_ctmu_value1,___lwdiv@divisor
  5342  011A58  C031  F0CF         	movff	_ctmu_value1+1,___lwdiv@divisor+1
  5343  011A5C  EC73  F094         	call	___lwdiv	;wreg free
  5344  011A60  0100               	movlb	0	; () banked
  5345  011A62  51CC               	movf	?___lwdiv& (0+255),w,b
  5346  011A64  0100               	movlb	0	; () banked
  5347  011A66  11CD               	iorwf	(?___lwdiv+1)& (0+255),w,b
  5348  011A68  A4D8               	btfss	status,2,c
  5349  011A6A  D002               	goto	u6160
  5350  011A6C  0E01               	movlw	1
  5351  011A6E  D001               	goto	u6170
  5352  011A70                     u6160:
  5353  011A70  0E00               	movlw	0
  5354  011A72                     u6170:
  5355  011A72  0100               	movlb	0	; () banked
  5356  011A74  6FD5               	movwf	button_timer_interrupt@sw_value& (0+255),b
  5357  011A76  EC84  F082         	call	_button_timer_interrupt	;wreg free
  5358                           
  5359                           ;PIC18F27J53-ChargeStation6-04.h: 339: button_timer_interrupt(&ct2, !(CTMU_read(2) / ctm
      +                          u_value2));
  5360  011A7A  0EAD               	movlw	low _ct2
  5361  011A7C  0100               	movlb	0	; () banked
  5362  011A7E  6FD3               	movwf	button_timer_interrupt@bt& (0+255),b
  5363  011A80  0E00               	movlw	high _ct2
  5364  011A82  0100               	movlb	0	; () banked
  5365  011A84  6FD4               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
  5366  011A86  0E02               	movlw	2
  5367  011A88  EC74  F091         	call	_CTMU_read
  5368  011A8C  C020  F0CC         	movff	?_CTMU_read,___lwdiv@dividend
  5369  011A90  C021  F0CD         	movff	?_CTMU_read+1,___lwdiv@dividend+1
  5370  011A94  C032  F0CE         	movff	_ctmu_value2,___lwdiv@divisor
  5371  011A98  C033  F0CF         	movff	_ctmu_value2+1,___lwdiv@divisor+1
  5372  011A9C  EC73  F094         	call	___lwdiv	;wreg free
  5373  011AA0  0100               	movlb	0	; () banked
  5374  011AA2  51CC               	movf	?___lwdiv& (0+255),w,b
  5375  011AA4  0100               	movlb	0	; () banked
  5376  011AA6  11CD               	iorwf	(?___lwdiv+1)& (0+255),w,b
  5377  011AA8  A4D8               	btfss	status,2,c
  5378  011AAA  D002               	goto	u6180
  5379  011AAC  0E01               	movlw	1
  5380  011AAE  D001               	goto	u6190
  5381  011AB0                     u6180:
  5382  011AB0  0E00               	movlw	0
  5383  011AB2                     u6190:
  5384  011AB2  0100               	movlb	0	; () banked
  5385  011AB4  6FD5               	movwf	button_timer_interrupt@sw_value& (0+255),b
  5386  011AB6  EC84  F082         	call	_button_timer_interrupt	;wreg free
  5387                           
  5388                           ;PIC18F27J53-ChargeStation6-04.h: 340: button_timer_interrupt(&ctm, !(CTMU_read(3) / ctm
      +                          u_valuem));
  5389  011ABA  0EB1               	movlw	low _ctm
  5390  011ABC  0100               	movlb	0	; () banked
  5391  011ABE  6FD3               	movwf	button_timer_interrupt@bt& (0+255),b
  5392  011AC0  0E00               	movlw	high _ctm
  5393  011AC2  0100               	movlb	0	; () banked
  5394  011AC4  6FD4               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
  5395  011AC6  0E03               	movlw	3
  5396  011AC8  EC74  F091         	call	_CTMU_read
  5397  011ACC  C020  F0CC         	movff	?_CTMU_read,___lwdiv@dividend
  5398  011AD0  C021  F0CD         	movff	?_CTMU_read+1,___lwdiv@dividend+1
  5399  011AD4  C034  F0CE         	movff	_ctmu_valuem,___lwdiv@divisor
  5400  011AD8  C035  F0CF         	movff	_ctmu_valuem+1,___lwdiv@divisor+1
  5401  011ADC  EC73  F094         	call	___lwdiv	;wreg free
  5402  011AE0  0100               	movlb	0	; () banked
  5403  011AE2  51CC               	movf	?___lwdiv& (0+255),w,b
  5404  011AE4  0100               	movlb	0	; () banked
  5405  011AE6  11CD               	iorwf	(?___lwdiv+1)& (0+255),w,b
  5406  011AE8  A4D8               	btfss	status,2,c
  5407  011AEA  D002               	goto	u6200
  5408  011AEC  0E01               	movlw	1
  5409  011AEE  D001               	goto	u6210
  5410  011AF0                     u6200:
  5411  011AF0  0E00               	movlw	0
  5412  011AF2                     u6210:
  5413  011AF2  0100               	movlb	0	; () banked
  5414  011AF4  6FD5               	movwf	button_timer_interrupt@sw_value& (0+255),b
  5415  011AF6  EC84  F082         	call	_button_timer_interrupt	;wreg free
  5416  011AFA  0012               	return		;funcret
  5417  011AFC                     __end_of_ctmu_loop:
  5418                           	opt stack 0
  5419                           tblptru	equ	0xFF8
  5420                           tblptrh	equ	0xFF7
  5421                           tblptrl	equ	0xFF6
  5422                           tablat	equ	0xFF5
  5423                           prodh	equ	0xFF4
  5424                           prodl	equ	0xFF3
  5425                           intcon	equ	0xFF2
  5426                           postinc0	equ	0xFEE
  5427                           wreg	equ	0xFE8
  5428                           indf1	equ	0xFE7
  5429                           postdec1	equ	0xFE5
  5430                           fsr1h	equ	0xFE2
  5431                           fsr1l	equ	0xFE1
  5432                           indf2	equ	0xFDF
  5433                           postinc2	equ	0xFDE
  5434                           postdec2	equ	0xFDD
  5435                           fsr2h	equ	0xFDA
  5436                           fsr2l	equ	0xFD9
  5437                           status	equ	0xFD8
  5438                           
  5439 ;; *************** function _button_timer_interrupt *****************
  5440 ;; Defined at:
  5441 ;;		line 51 in file "../My_header\My_button.h"
  5442 ;; Parameters:    Size  Location     Type
  5443 ;;  bt              2   26[BANK0 ] PTR struct button
  5444 ;;		 -> ctm(4), ct2(4), ct1(4), ct0(4), 
  5445 ;;  sw_value        1   28[BANK0 ] unsigned char 
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;		None
  5448 ;; Return value:  Size  Location     Type
  5449 ;;		None               void
  5450 ;; Registers used:
  5451 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5452 ;; Tracked objects:
  5453 ;;		On entry : 0/0
  5454 ;;		On exit  : 0/0
  5455 ;;		Unchanged: 0/0
  5456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5457 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5459 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5460 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5461 ;;Total ram usage:        5 bytes
  5462 ;; Hardware stack levels used:    1
  5463 ;; Hardware stack levels required when called:    4
  5464 ;; This function calls:
  5465 ;;		Nothing
  5466 ;; This function is called by:
  5467 ;;		_ctmu_loop
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471                           	psect	text19
  5472  010508                     __ptext19:
  5473                           	opt stack 0
  5474  010508                     _button_timer_interrupt:
  5475                           	opt stack 24
  5476                           
  5477                           ;My_header\My_button.h: 52: if (sw_value) {
  5478                           
  5479                           ;incstack = 0
  5480  010508  0100               	movlb	0	; () banked
  5481  01050A  51D5               	movf	button_timer_interrupt@sw_value& (0+255),w,b
  5482  01050C  0100               	movlb	0	; () banked
  5483  01050E  B4D8               	btfsc	status,2,c
  5484  010510  D0A4               	goto	l5257
  5485                           
  5486                           ; BSR set to: 0
  5487                           ;My_header\My_button.h: 53: if (bt->cnt_sw < 350 + 1) bt->cnt_sw++;
  5488  010512  C0D3  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5489  010516  C0D4  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5490  01051A  0E5F               	movlw	95
  5491  01051C  5CDE               	subwf	postinc2,w,c
  5492  01051E  0E01               	movlw	1
  5493  010520  58DE               	subwfb	postinc2,w,c
  5494  010522  B0D8               	btfsc	status,0,c
  5495  010524  D007               	goto	l273
  5496                           
  5497                           ; BSR set to: 0
  5498  010526  C0D3  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5499  01052A  C0D4  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5500  01052E  2ADE               	incf	postinc2,f,c
  5501  010530  0E00               	movlw	0
  5502  010532  22DD               	addwfc	postdec2,f,c
  5503  010534                     l273:
  5504                           
  5505                           ; BSR set to: 0
  5506                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 350)bt->flag.long_holding_7 = 1;
  5507  010534  C0D3  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5508  010538  C0D4  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5509  01053C  0E5E               	movlw	94
  5510  01053E  18DE               	xorwf	postinc2,w,c
  5511  010540  E10C               	bnz	l274
  5512  010542  04DE               	decf	postinc2,w,c
  5513  010544  A4D8               	btfss	status,2,c
  5514  010546  D009               	goto	l274
  5515                           
  5516                           ; BSR set to: 0
  5517  010548  0100               	movlb	0	; () banked
  5518  01054A  EE20 F003          	lfsr	2,3
  5519  01054E  51D3               	movf	button_timer_interrupt@bt& (0+255),w,b
  5520  010550  26D9               	addwf	fsr2l,f,c
  5521  010552  51D4               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5522  010554  22DA               	addwfc	fsr2h,f,c
  5523  010556  0100               	movlb	0	; () banked
  5524  010558  8EDF               	bsf	indf2,7,c
  5525  01055A                     l274:
  5526                           
  5527                           ; BSR set to: 0
  5528                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 300)bt->flag.long_holding_6 = 1;
  5529  01055A  C0D3  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5530  01055E  C0D4  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5531  010562  0E2C               	movlw	44
  5532  010564  18DE               	xorwf	postinc2,w,c
  5533  010566  E10C               	bnz	l275
  5534  010568  04DE               	decf	postinc2,w,c
  5535  01056A  A4D8               	btfss	status,2,c
  5536  01056C  D009               	goto	l275
  5537                           
  5538                           ; BSR set to: 0
  5539  01056E  0100               	movlb	0	; () banked
  5540  010570  EE20 F003          	lfsr	2,3
  5541  010574  51D3               	movf	button_timer_interrupt@bt& (0+255),w,b
  5542  010576  26D9               	addwf	fsr2l,f,c
  5543  010578  51D4               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5544  01057A  22DA               	addwfc	fsr2h,f,c
  5545  01057C  0100               	movlb	0	; () banked
  5546  01057E  8CDF               	bsf	indf2,6,c
  5547  010580                     l275:
  5548                           
  5549                           ; BSR set to: 0
  5550                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 250)bt->flag.long_holding_5 = 1;
  5551  010580  C0D3  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5552  010584  C0D4  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5553  010588  0EFA               	movlw	250
  5554  01058A  18DE               	xorwf	postinc2,w,c
  5555  01058C  10DE               	iorwf	postinc2,w,c
  5556  01058E  A4D8               	btfss	status,2,c
  5557  010590  D009               	goto	l276
  5558                           
  5559                           ; BSR set to: 0
  5560  010592  0100               	movlb	0	; () banked
  5561  010594  EE20 F003          	lfsr	2,3
  5562  010598  51D3               	movf	button_timer_interrupt@bt& (0+255),w,b
  5563  01059A  26D9               	addwf	fsr2l,f,c
  5564  01059C  51D4               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5565  01059E  22DA               	addwfc	fsr2h,f,c
  5566  0105A0  0100               	movlb	0	; () banked
  5567  0105A2  8ADF               	bsf	indf2,5,c
  5568  0105A4                     l276:
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 200)bt->flag.long_holding_4 = 1;
  5572  0105A4  C0D3  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5573  0105A8  C0D4  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5574  0105AC  0EC8               	movlw	200
  5575  0105AE  18DE               	xorwf	postinc2,w,c
  5576  0105B0  10DE               	iorwf	postinc2,w,c
  5577  0105B2  A4D8               	btfss	status,2,c
  5578  0105B4  D009               	goto	l277
  5579                           
  5580                           ; BSR set to: 0
  5581  0105B6  0100               	movlb	0	; () banked
  5582  0105B8  EE20 F003          	lfsr	2,3
  5583  0105BC  51D3               	movf	button_timer_interrupt@bt& (0+255),w,b
  5584  0105BE  26D9               	addwf	fsr2l,f,c
  5585  0105C0  51D4               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5586  0105C2  22DA               	addwfc	fsr2h,f,c
  5587  0105C4  0100               	movlb	0	; () banked
  5588  0105C6  88DF               	bsf	indf2,4,c
  5589  0105C8                     l277:
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
  5593  0105C8  C0D3  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5594  0105CC  C0D4  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5595  0105D0  0E96               	movlw	150
  5596  0105D2  18DE               	xorwf	postinc2,w,c
  5597  0105D4  10DE               	iorwf	postinc2,w,c
  5598  0105D6  A4D8               	btfss	status,2,c
  5599  0105D8  D009               	goto	l278
  5600                           
  5601                           ; BSR set to: 0
  5602  0105DA  0100               	movlb	0	; () banked
  5603  0105DC  EE20 F003          	lfsr	2,3
  5604  0105E0  51D3               	movf	button_timer_interrupt@bt& (0+255),w,b
  5605  0105E2  26D9               	addwf	fsr2l,f,c
  5606  0105E4  51D4               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5607  0105E6  22DA               	addwfc	fsr2h,f,c
  5608  0105E8  0100               	movlb	0	; () banked
  5609  0105EA  86DF               	bsf	indf2,3,c
  5610  0105EC                     l278:
  5611                           
  5612                           ; BSR set to: 0
  5613                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
  5614  0105EC  C0D3  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5615  0105F0  C0D4  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5616  0105F4  0E3C               	movlw	60
  5617  0105F6  18DE               	xorwf	postinc2,w,c
  5618  0105F8  10DE               	iorwf	postinc2,w,c
  5619  0105FA  A4D8               	btfss	status,2,c
  5620  0105FC  D009               	goto	l279
  5621                           
  5622                           ; BSR set to: 0
  5623  0105FE  0100               	movlb	0	; () banked
  5624  010600  EE20 F003          	lfsr	2,3
  5625  010604  51D3               	movf	button_timer_interrupt@bt& (0+255),w,b
  5626  010606  26D9               	addwf	fsr2l,f,c
  5627  010608  51D4               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5628  01060A  22DA               	addwfc	fsr2h,f,c
  5629  01060C  0100               	movlb	0	; () banked
  5630  01060E  84DF               	bsf	indf2,2,c
  5631  010610                     l279:
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
  5635  010610  C0D3  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5636  010614  C0D4  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5637  010618  0E10               	movlw	16
  5638  01061A  18DE               	xorwf	postinc2,w,c
  5639  01061C  10DE               	iorwf	postinc2,w,c
  5640  01061E  A4D8               	btfss	status,2,c
  5641  010620  D009               	goto	l280
  5642                           
  5643                           ; BSR set to: 0
  5644  010622  0100               	movlb	0	; () banked
  5645  010624  EE20 F003          	lfsr	2,3
  5646  010628  51D3               	movf	button_timer_interrupt@bt& (0+255),w,b
  5647  01062A  26D9               	addwf	fsr2l,f,c
  5648  01062C  51D4               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5649  01062E  22DA               	addwfc	fsr2h,f,c
  5650  010630  0100               	movlb	0	; () banked
  5651  010632  82DF               	bsf	indf2,1,c
  5652  010634                     l280:
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;My_header\My_button.h: 61: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
  5656  010634  C0D3  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5657  010638  C0D4  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5658  01063C  0E02               	movlw	2
  5659  01063E  18DE               	xorwf	postinc2,w,c
  5660  010640  10DE               	iorwf	postinc2,w,c
  5661  010642  A4D8               	btfss	status,2,c
  5662  010644  0012               	return	
  5663                           
  5664                           ; BSR set to: 0
  5665  010646  0100               	movlb	0	; () banked
  5666  010648  EE20 F003          	lfsr	2,3
  5667  01064C  51D3               	movf	button_timer_interrupt@bt& (0+255),w,b
  5668  01064E  26D9               	addwf	fsr2l,f,c
  5669  010650  51D4               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5670  010652  22DA               	addwfc	fsr2h,f,c
  5671  010654  0100               	movlb	0	; () banked
  5672  010656  80DF               	bsf	indf2,0,c
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;My_header\My_button.h: 62: } else {
  5676  010658  0012               	return	
  5677  01065A                     l5257:
  5678                           
  5679                           ; BSR set to: 0
  5680                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 350)bt->flag.long_hold_7 = 1;
  5681  01065A  C0D3  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5682  01065E  C0D4  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5683  010662  0E5E               	movlw	94
  5684  010664  5CDE               	subwf	postinc2,w,c
  5685  010666  0E01               	movlw	1
  5686  010668  58DE               	subwfb	postinc2,w,c
  5687  01066A  A0D8               	btfss	status,0,c
  5688  01066C  D00A               	goto	l5261
  5689                           
  5690                           ; BSR set to: 0
  5691  01066E  0100               	movlb	0	; () banked
  5692  010670  EE20 F002          	lfsr	2,2
  5693  010674  51D3               	movf	button_timer_interrupt@bt& (0+255),w,b
  5694  010676  26D9               	addwf	fsr2l,f,c
  5695  010678  51D4               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5696  01067A  22DA               	addwfc	fsr2h,f,c
  5697  01067C  0100               	movlb	0	; () banked
  5698  01067E  8EDF               	bsf	indf2,7,c
  5699  010680  D092               	goto	l5289
  5700  010682                     l5261:
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 300)bt->flag.long_hold_6 = 1;
  5704  010682  C0D3  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5705  010686  C0D4  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5706  01068A  0E2C               	movlw	44
  5707  01068C  5CDE               	subwf	postinc2,w,c
  5708  01068E  0E01               	movlw	1
  5709  010690  58DE               	subwfb	postinc2,w,c
  5710  010692  A0D8               	btfss	status,0,c
  5711  010694  D00A               	goto	l5265
  5712                           
  5713                           ; BSR set to: 0
  5714  010696  0100               	movlb	0	; () banked
  5715  010698  EE20 F002          	lfsr	2,2
  5716  01069C  51D3               	movf	button_timer_interrupt@bt& (0+255),w,b
  5717  01069E  26D9               	addwf	fsr2l,f,c
  5718  0106A0  51D4               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5719  0106A2  22DA               	addwfc	fsr2h,f,c
  5720  0106A4  0100               	movlb	0	; () banked
  5721  0106A6  8CDF               	bsf	indf2,6,c
  5722  0106A8  D07E               	goto	l5289
  5723  0106AA                     l5265:
  5724                           
  5725                           ; BSR set to: 0
  5726                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 250)bt->flag.long_hold_5 = 1;
  5727  0106AA  C0D3  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5728  0106AE  C0D4  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5729  0106B2  0E01               	movlw	1
  5730  0106B4  50DB               	movf	plusw2,w,c
  5731  0106B6  E104               	bnz	u5390
  5732  0106B8  0EFA               	movlw	250
  5733  0106BA  5CDE               	subwf	postinc2,w,c
  5734  0106BC  A0D8               	btfss	status,0,c
  5735  0106BE  D00A               	goto	l5269
  5736  0106C0                     u5390:
  5737                           
  5738                           ; BSR set to: 0
  5739  0106C0  0100               	movlb	0	; () banked
  5740  0106C2  EE20 F002          	lfsr	2,2
  5741  0106C6  51D3               	movf	button_timer_interrupt@bt& (0+255),w,b
  5742  0106C8  26D9               	addwf	fsr2l,f,c
  5743  0106CA  51D4               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5744  0106CC  22DA               	addwfc	fsr2h,f,c
  5745  0106CE  0100               	movlb	0	; () banked
  5746  0106D0  8ADF               	bsf	indf2,5,c
  5747  0106D2  D069               	goto	l5289
  5748  0106D4                     l5269:
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 200)bt->flag.long_hold_4 = 1;
  5752  0106D4  C0D3  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5753  0106D8  C0D4  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5754  0106DC  0E01               	movlw	1
  5755  0106DE  50DB               	movf	plusw2,w,c
  5756  0106E0  E104               	bnz	u5400
  5757  0106E2  0EC8               	movlw	200
  5758  0106E4  5CDE               	subwf	postinc2,w,c
  5759  0106E6  A0D8               	btfss	status,0,c
  5760  0106E8  D00A               	goto	l5273
  5761  0106EA                     u5400:
  5762                           
  5763                           ; BSR set to: 0
  5764  0106EA  0100               	movlb	0	; () banked
  5765  0106EC  EE20 F002          	lfsr	2,2
  5766  0106F0  51D3               	movf	button_timer_interrupt@bt& (0+255),w,b
  5767  0106F2  26D9               	addwf	fsr2l,f,c
  5768  0106F4  51D4               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5769  0106F6  22DA               	addwfc	fsr2h,f,c
  5770  0106F8  0100               	movlb	0	; () banked
  5771  0106FA  88DF               	bsf	indf2,4,c
  5772  0106FC  D054               	goto	l5289
  5773  0106FE                     l5273:
  5774                           
  5775                           ; BSR set to: 0
  5776                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
  5777  0106FE  C0D3  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5778  010702  C0D4  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5779  010706  0E01               	movlw	1
  5780  010708  50DB               	movf	plusw2,w,c
  5781  01070A  E104               	bnz	u5410
  5782  01070C  0E96               	movlw	150
  5783  01070E  5CDE               	subwf	postinc2,w,c
  5784  010710  A0D8               	btfss	status,0,c
  5785  010712  D00A               	goto	l5277
  5786  010714                     u5410:
  5787                           
  5788                           ; BSR set to: 0
  5789  010714  0100               	movlb	0	; () banked
  5790  010716  EE20 F002          	lfsr	2,2
  5791  01071A  51D3               	movf	button_timer_interrupt@bt& (0+255),w,b
  5792  01071C  26D9               	addwf	fsr2l,f,c
  5793  01071E  51D4               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5794  010720  22DA               	addwfc	fsr2h,f,c
  5795  010722  0100               	movlb	0	; () banked
  5796  010724  86DF               	bsf	indf2,3,c
  5797  010726  D03F               	goto	l5289
  5798  010728                     l5277:
  5799                           
  5800                           ; BSR set to: 0
  5801                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
  5802  010728  C0D3  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5803  01072C  C0D4  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5804  010730  0E01               	movlw	1
  5805  010732  50DB               	movf	plusw2,w,c
  5806  010734  E104               	bnz	u5420
  5807  010736  0E3C               	movlw	60
  5808  010738  5CDE               	subwf	postinc2,w,c
  5809  01073A  A0D8               	btfss	status,0,c
  5810  01073C  D00A               	goto	l5281
  5811  01073E                     u5420:
  5812                           
  5813                           ; BSR set to: 0
  5814  01073E  0100               	movlb	0	; () banked
  5815  010740  EE20 F002          	lfsr	2,2
  5816  010744  51D3               	movf	button_timer_interrupt@bt& (0+255),w,b
  5817  010746  26D9               	addwf	fsr2l,f,c
  5818  010748  51D4               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5819  01074A  22DA               	addwfc	fsr2h,f,c
  5820  01074C  0100               	movlb	0	; () banked
  5821  01074E  84DF               	bsf	indf2,2,c
  5822  010750  D02A               	goto	l5289
  5823  010752                     l5281:
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
  5827  010752  C0D3  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5828  010756  C0D4  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5829  01075A  0E01               	movlw	1
  5830  01075C  50DB               	movf	plusw2,w,c
  5831  01075E  E104               	bnz	u5430
  5832  010760  0E10               	movlw	16
  5833  010762  5CDE               	subwf	postinc2,w,c
  5834  010764  A0D8               	btfss	status,0,c
  5835  010766  D00A               	goto	l5285
  5836  010768                     u5430:
  5837                           
  5838                           ; BSR set to: 0
  5839  010768  0100               	movlb	0	; () banked
  5840  01076A  EE20 F002          	lfsr	2,2
  5841  01076E  51D3               	movf	button_timer_interrupt@bt& (0+255),w,b
  5842  010770  26D9               	addwf	fsr2l,f,c
  5843  010772  51D4               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5844  010774  22DA               	addwfc	fsr2h,f,c
  5845  010776  0100               	movlb	0	; () banked
  5846  010778  82DF               	bsf	indf2,1,c
  5847  01077A  D015               	goto	l5289
  5848  01077C                     l5285:
  5849                           
  5850                           ; BSR set to: 0
  5851                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
  5852  01077C  C0D3  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5853  010780  C0D4  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5854  010784  0E01               	movlw	1
  5855  010786  50DB               	movf	plusw2,w,c
  5856  010788  E104               	bnz	u5440
  5857  01078A  0E02               	movlw	2
  5858  01078C  5CDE               	subwf	postinc2,w,c
  5859  01078E  A0D8               	btfss	status,0,c
  5860  010790  D00A               	goto	l5289
  5861  010792                     u5440:
  5862                           
  5863                           ; BSR set to: 0
  5864  010792  0100               	movlb	0	; () banked
  5865  010794  EE20 F002          	lfsr	2,2
  5866  010798  51D3               	movf	button_timer_interrupt@bt& (0+255),w,b
  5867  01079A  26D9               	addwf	fsr2l,f,c
  5868  01079C  51D4               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5869  01079E  22DA               	addwfc	fsr2h,f,c
  5870  0107A0  0100               	movlb	0	; () banked
  5871  0107A2  80DF               	bsf	indf2,0,c
  5872                           
  5873                           ; BSR set to: 0
  5874                           
  5875                           ; BSR set to: 0
  5876                           
  5877                           ; BSR set to: 0
  5878                           
  5879                           ; BSR set to: 0
  5880                           
  5881                           ; BSR set to: 0
  5882                           
  5883                           ; BSR set to: 0
  5884                           
  5885                           ; BSR set to: 0
  5886  0107A4  D000               	goto	l5289
  5887  0107A6                     l5289:
  5888                           
  5889                           ; BSR set to: 0
  5890                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
  5891  0107A6  C0D3  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5892  0107AA  C0D4  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5893  0107AE  0E00               	movlw	0
  5894  0107B0  6EDE               	movwf	postinc2,c
  5895  0107B2  0E00               	movlw	0
  5896  0107B4  6EDD               	movwf	postdec2,c
  5897                           
  5898                           ; BSR set to: 0
  5899                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
  5900  0107B6  0100               	movlb	0	; () banked
  5901  0107B8  EE20 F002          	lfsr	2,2
  5902  0107BC  51D3               	movf	button_timer_interrupt@bt& (0+255),w,b
  5903  0107BE  26D9               	addwf	fsr2l,f,c
  5904  0107C0  51D4               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5905  0107C2  22DA               	addwfc	fsr2h,f,c
  5906  0107C4  0EFF               	movlw	255
  5907  0107C6  16DE               	andwf	postinc2,f,c
  5908  0107C8  0E00               	movlw	0
  5909  0107CA  16DD               	andwf	postdec2,f,c
  5910  0107CC  0012               	return	
  5911                           
  5912                           ; BSR set to: 0
  5913                           
  5914                           ; BSR set to: 0
  5915  0107CE  0012               	return		;funcret
  5916  0107D0                     __end_of_button_timer_interrupt:
  5917                           	opt stack 0
  5918                           tblptru	equ	0xFF8
  5919                           tblptrh	equ	0xFF7
  5920                           tblptrl	equ	0xFF6
  5921                           tablat	equ	0xFF5
  5922                           prodh	equ	0xFF4
  5923                           prodl	equ	0xFF3
  5924                           intcon	equ	0xFF2
  5925                           postinc0	equ	0xFEE
  5926                           wreg	equ	0xFE8
  5927                           indf1	equ	0xFE7
  5928                           postdec1	equ	0xFE5
  5929                           fsr1h	equ	0xFE2
  5930                           fsr1l	equ	0xFE1
  5931                           indf2	equ	0xFDF
  5932                           postinc2	equ	0xFDE
  5933                           postdec2	equ	0xFDD
  5934                           plusw2	equ	0xFDB
  5935                           fsr2h	equ	0xFDA
  5936                           fsr2l	equ	0xFD9
  5937                           status	equ	0xFD8
  5938                           
  5939 ;; *************** function ___lwdiv *****************
  5940 ;; Defined at:
  5941 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  dividend        2   19[BANK0 ] unsigned int 
  5944 ;;  divisor         2   21[BANK0 ] unsigned int 
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;  quotient        2   24[BANK0 ] unsigned int 
  5947 ;;  counter         1   23[BANK0 ] unsigned char 
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  2   19[BANK0 ] unsigned int 
  5950 ;; Registers used:
  5951 ;;		wreg, status,2, status,0
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5957 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5958 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5960 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5961 ;;Total ram usage:        7 bytes
  5962 ;; Hardware stack levels used:    1
  5963 ;; Hardware stack levels required when called:    4
  5964 ;; This function calls:
  5965 ;;		Nothing
  5966 ;; This function is called by:
  5967 ;;		_utoa
  5968 ;;		_display_LCD
  5969 ;;		_ctmu_loop
  5970 ;;		_main
  5971 ;;		_tx_sendn
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974                           
  5975                           	psect	text20
  5976  0128E6                     __ptext20:
  5977                           	opt stack 0
  5978  0128E6                     ___lwdiv:
  5979                           	opt stack 23
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;incstack = 0
  5983  0128E6  0E00               	movlw	0
  5984  0128E8  0100               	movlb	0	; () banked
  5985  0128EA  6FD2               	movwf	(___lwdiv@quotient+1)& (0+255),b
  5986  0128EC  0E00               	movlw	0
  5987  0128EE  6FD1               	movwf	___lwdiv@quotient& (0+255),b
  5988                           
  5989                           ; BSR set to: 0
  5990  0128F0  0100               	movlb	0	; () banked
  5991  0128F2  51CE               	movf	___lwdiv@divisor& (0+255),w,b
  5992  0128F4  0100               	movlb	0	; () banked
  5993  0128F6  11CF               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  5994  0128F8  B4D8               	btfsc	status,2,c
  5995  0128FA  D031               	goto	l1266
  5996                           
  5997                           ; BSR set to: 0
  5998  0128FC  0E01               	movlw	1
  5999  0128FE  0100               	movlb	0	; () banked
  6000  012900  6FD0               	movwf	___lwdiv@counter& (0+255),b
  6001  012902  D007               	goto	l4963
  6002  012904                     l4961:
  6003                           
  6004                           ; BSR set to: 0
  6005  012904  0100               	movlb	0	; () banked
  6006  012906  90D8               	bcf	status,0,c
  6007  012908  37CE               	rlcf	___lwdiv@divisor& (0+255),f,b
  6008  01290A  37CF               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6009  01290C  0100               	movlb	0	; () banked
  6010  01290E  2BD0               	incf	___lwdiv@counter& (0+255),f,b
  6011  012910  D000               	goto	l4963
  6012  012912                     l4963:
  6013                           
  6014                           ; BSR set to: 0
  6015  012912  0100               	movlb	0	; () banked
  6016  012914  BFCF               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  6017  012916  D002               	goto	l4965
  6018  012918  D7F5               	goto	l4961
  6019                           
  6020                           ; BSR set to: 0
  6021  01291A  D000               	goto	l4965
  6022  01291C                     l4965:
  6023                           
  6024                           ; BSR set to: 0
  6025  01291C  0100               	movlb	0	; () banked
  6026  01291E  90D8               	bcf	status,0,c
  6027  012920  37D1               	rlcf	___lwdiv@quotient& (0+255),f,b
  6028  012922  37D2               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6029                           
  6030                           ; BSR set to: 0
  6031  012924  0100               	movlb	0	; () banked
  6032  012926  51CE               	movf	___lwdiv@divisor& (0+255),w,b
  6033  012928  0100               	movlb	0	; () banked
  6034  01292A  5DCC               	subwf	___lwdiv@dividend& (0+255),w,b
  6035  01292C  0100               	movlb	0	; () banked
  6036  01292E  51CF               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6037  012930  0100               	movlb	0	; () banked
  6038  012932  59CD               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6039  012934  A0D8               	btfss	status,0,c
  6040  012936  D00B               	goto	l4973
  6041                           
  6042                           ; BSR set to: 0
  6043  012938  0100               	movlb	0	; () banked
  6044  01293A  51CE               	movf	___lwdiv@divisor& (0+255),w,b
  6045  01293C  0100               	movlb	0	; () banked
  6046  01293E  5FCC               	subwf	___lwdiv@dividend& (0+255),f,b
  6047  012940  0100               	movlb	0	; () banked
  6048  012942  51CF               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6049  012944  0100               	movlb	0	; () banked
  6050  012946  5BCD               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6051                           
  6052                           ; BSR set to: 0
  6053  012948  0100               	movlb	0	; () banked
  6054  01294A  81D1               	bsf	___lwdiv@quotient& (0+255),0,b
  6055  01294C  D000               	goto	l4973
  6056  01294E                     l4973:
  6057                           
  6058                           ; BSR set to: 0
  6059  01294E  0100               	movlb	0	; () banked
  6060  012950  90D8               	bcf	status,0,c
  6061  012952  33CF               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6062  012954  33CE               	rrcf	___lwdiv@divisor& (0+255),f,b
  6063                           
  6064                           ; BSR set to: 0
  6065  012956  0100               	movlb	0	; () banked
  6066  012958  2FD0               	decfsz	___lwdiv@counter& (0+255),f,b
  6067  01295A  D7E0               	goto	l4965
  6068  01295C  D000               	goto	l1266
  6069  01295E                     l1266:
  6070                           
  6071                           ; BSR set to: 0
  6072  01295E  C0D1  F0CC         	movff	___lwdiv@quotient,?___lwdiv
  6073  012962  C0D2  F0CD         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6074                           
  6075                           ; BSR set to: 0
  6076  012966  0012               	return		;funcret
  6077  012968                     __end_of___lwdiv:
  6078                           	opt stack 0
  6079                           tblptru	equ	0xFF8
  6080                           tblptrh	equ	0xFF7
  6081                           tblptrl	equ	0xFF6
  6082                           tablat	equ	0xFF5
  6083                           prodh	equ	0xFF4
  6084                           prodl	equ	0xFF3
  6085                           intcon	equ	0xFF2
  6086                           postinc0	equ	0xFEE
  6087                           wreg	equ	0xFE8
  6088                           indf1	equ	0xFE7
  6089                           postdec1	equ	0xFE5
  6090                           fsr1h	equ	0xFE2
  6091                           fsr1l	equ	0xFE1
  6092                           indf2	equ	0xFDF
  6093                           postinc2	equ	0xFDE
  6094                           postdec2	equ	0xFDD
  6095                           plusw2	equ	0xFDB
  6096                           fsr2h	equ	0xFDA
  6097                           fsr2l	equ	0xFD9
  6098                           status	equ	0xFD8
  6099                           
  6100 ;; *************** function _CTMU_read *****************
  6101 ;; Defined at:
  6102 ;;		line 321 in file "../My_header\My_header.h"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  ch              1    wreg     unsigned char 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;  ch              1   13[BANK0 ] unsigned char 
  6107 ;;  i               1   18[BANK0 ] unsigned char 
  6108 ;;  sum             4   14[BANK0 ] unsigned long 
  6109 ;; Return value:  Size  Location     Type
  6110 ;;                  2   31[COMRAM] unsigned int 
  6111 ;; Registers used:
  6112 ;;		wreg, status,2, status,0, cstack
  6113 ;; Tracked objects:
  6114 ;;		On entry : 0/0
  6115 ;;		On exit  : 0/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6119 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6120 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6121 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6122 ;;Total ram usage:        9 bytes
  6123 ;; Hardware stack levels used:    1
  6124 ;; Hardware stack levels required when called:    5
  6125 ;; This function calls:
  6126 ;;		___lldiv
  6127 ;; This function is called by:
  6128 ;;		_ctmu_loop
  6129 ;;		_main
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           	psect	text21
  6134  0122E8                     __ptext21:
  6135                           	opt stack 0
  6136  0122E8                     _CTMU_read:
  6137                           	opt stack 23
  6138                           
  6139                           ; BSR set to: 0
  6140                           ;incstack = 0
  6141                           ;CTMU_read@ch stored from wreg
  6142  0122E8  0100               	movlb	0	; () banked
  6143  0122EA  6FC6               	movwf	CTMU_read@ch& (0+255),b
  6144                           
  6145                           ; BSR set to: 0
  6146                           ;My_header\My_header.h: 322: uint32_t sum = 0;
  6147  0122EC  0E00               	movlw	0
  6148  0122EE  0100               	movlb	0	; () banked
  6149  0122F0  6FC7               	movwf	CTMU_read@sum& (0+255),b
  6150  0122F2  0E00               	movlw	0
  6151  0122F4  6FC8               	movwf	(CTMU_read@sum+1)& (0+255),b
  6152  0122F6  0E00               	movlw	0
  6153  0122F8  6FC9               	movwf	(CTMU_read@sum+2)& (0+255),b
  6154  0122FA  0E00               	movlw	0
  6155  0122FC  6FCA               	movwf	(CTMU_read@sum+3)& (0+255),b
  6156                           
  6157                           ;My_header\My_header.h: 323: for (uint8_t i = 0; i < 10; i++) {
  6158  0122FE  0E00               	movlw	0
  6159  012300  0100               	movlb	0	; () banked
  6160  012302  6FCB               	movwf	CTMU_read@i& (0+255),b
  6161  012304                     l5189:
  6162                           
  6163                           ; BSR set to: 0
  6164  012304  0E09               	movlw	9
  6165  012306  0100               	movlb	0	; () banked
  6166  012308  65CB               	cpfsgt	CTMU_read@i& (0+255),b
  6167  01230A  D001               	goto	l5193
  6168                           
  6169                           ; BSR set to: 0
  6170  01230C  D02A               	goto	l5221
  6171  01230E                     l5193:
  6172                           
  6173                           ; BSR set to: 0
  6174                           ;My_header\My_header.h: 324: ADCON0bits.CHS = ch;
  6175  01230E  C0C6  F022         	movff	CTMU_read@ch,??_CTMU_read
  6176  012312  4622               	rlncf	??_CTMU_read,f,c
  6177  012314  4622               	rlncf	??_CTMU_read,f,c
  6178  012316  50C2               	movf	4034,w,c	;volatile
  6179  012318  1822               	xorwf	??_CTMU_read,w,c
  6180  01231A  0BC3               	andlw	-61
  6181  01231C  1822               	xorwf	??_CTMU_read,w,c
  6182  01231E  6EC2               	movwf	4034,c	;volatile
  6183                           
  6184                           ; BSR set to: 0
  6185                           ;My_header\My_header.h: 325: CTMUCONHbits.CTMUEN = 1;
  6186  012320  8EB3               	bsf	4019,7,c	;volatile
  6187                           
  6188                           ; BSR set to: 0
  6189                           ;My_header\My_header.h: 326: CTMUCONLbits.EDG1STAT = 0;
  6190  012322  90B2               	bcf	4018,0,c	;volatile
  6191                           
  6192                           ; BSR set to: 0
  6193                           ;My_header\My_header.h: 327: CTMUCONLbits.EDG2STAT = 0;
  6194  012324  92B2               	bcf	4018,1,c	;volatile
  6195                           
  6196                           ; BSR set to: 0
  6197                           ;My_header\My_header.h: 330: CTMUCONHbits.IDISSEN = 1;
  6198  012326  82B3               	bsf	4019,1,c	;volatile
  6199                           
  6200                           ; BSR set to: 0
  6201                           ;My_header\My_header.h: 331: _delay((unsigned long)((20)*(48000000/4000000.0)));
  6202  012328  0E50               	movlw	80
  6203  01232A                     u6517:
  6204  01232A  2EE8               	decfsz	wreg,f,c
  6205  01232C  D7FE               	goto	u6517
  6206                           
  6207                           ;My_header\My_header.h: 332: CTMUCONHbits.IDISSEN = 0;
  6208  01232E  92B3               	bcf	4019,1,c	;volatile
  6209                           
  6210                           ;My_header\My_header.h: 334: CTMUCONLbits.EDG1STAT = 1;
  6211  012330  80B2               	bsf	4018,0,c	;volatile
  6212                           
  6213                           ;My_header\My_header.h: 335: _delay((unsigned long)((5)*(48000000/4000000.0)));
  6214  012332  0E14               	movlw	20
  6215  012334                     u6527:
  6216  012334  2EE8               	decfsz	wreg,f,c
  6217  012336  D7FE               	goto	u6527
  6218                           
  6219                           ;My_header\My_header.h: 336: CTMUCONLbits.EDG1STAT = 0;
  6220  012338  90B2               	bcf	4018,0,c	;volatile
  6221                           
  6222                           ;My_header\My_header.h: 338: PIR1bits.ADIF = 0;
  6223  01233A  9C9E               	bcf	3998,6,c	;volatile
  6224                           
  6225                           ;My_header\My_header.h: 339: ADCON0bits.GO = 1;
  6226  01233C  82C2               	bsf	4034,1,c	;volatile
  6227                           
  6228                           ;My_header\My_header.h: 340: while (!PIR1bits.ADIF);
  6229  01233E  D000               	goto	l225
  6230  012340                     l225:
  6231  012340  AC9E               	btfss	3998,6,c	;volatile
  6232  012342  D7FE               	goto	l225
  6233                           
  6234                           ;My_header\My_header.h: 341: sum += ADRES;
  6235  012344  50C3               	movf	4035,w,c	;volatile
  6236  012346  0100               	movlb	0	; () banked
  6237  012348  27C7               	addwf	CTMU_read@sum& (0+255),f,b
  6238  01234A  50C4               	movf	4036,w,c	;volatile
  6239  01234C  0100               	movlb	0	; () banked
  6240  01234E  23C8               	addwfc	(CTMU_read@sum+1)& (0+255),f,b
  6241  012350  0E00               	movlw	0
  6242  012352  0100               	movlb	0	; () banked
  6243  012354  23C9               	addwfc	(CTMU_read@sum+2)& (0+255),f,b
  6244  012356  0E00               	movlw	0
  6245  012358  0100               	movlb	0	; () banked
  6246  01235A  23CA               	addwfc	(CTMU_read@sum+3)& (0+255),f,b
  6247  01235C  0100               	movlb	0	; () banked
  6248  01235E  2BCB               	incf	CTMU_read@i& (0+255),f,b
  6249  012360  D7D1               	goto	l5189
  6250  012362                     l5221:
  6251                           
  6252                           ; BSR set to: 0
  6253                           ;My_header\My_header.h: 342: }
  6254                           ;My_header\My_header.h: 343: return sum / 10;
  6255  012362  C0C7  F0B9         	movff	CTMU_read@sum,___lldiv@dividend
  6256  012366  C0C8  F0BA         	movff	CTMU_read@sum+1,___lldiv@dividend+1
  6257  01236A  C0C9  F0BB         	movff	CTMU_read@sum+2,___lldiv@dividend+2
  6258  01236E  C0CA  F0BC         	movff	CTMU_read@sum+3,___lldiv@dividend+3
  6259  012372  0E0A               	movlw	10
  6260  012374  0100               	movlb	0	; () banked
  6261  012376  6FBD               	movwf	___lldiv@divisor& (0+255),b
  6262  012378  0E00               	movlw	0
  6263  01237A  6FBE               	movwf	(___lldiv@divisor+1)& (0+255),b
  6264  01237C  0E00               	movlw	0
  6265  01237E  6FBF               	movwf	(___lldiv@divisor+2)& (0+255),b
  6266  012380  0E00               	movlw	0
  6267  012382  6FC0               	movwf	(___lldiv@divisor+3)& (0+255),b
  6268  012384  ECF5  F08F         	call	___lldiv	;wreg free
  6269  012388  C0B9  F020         	movff	?___lldiv,?_CTMU_read
  6270  01238C  C0BA  F021         	movff	?___lldiv+1,?_CTMU_read+1
  6271  012390  0012               	return	
  6272  012392  0012               	return		;funcret
  6273  012394                     __end_of_CTMU_read:
  6274                           	opt stack 0
  6275                           tblptru	equ	0xFF8
  6276                           tblptrh	equ	0xFF7
  6277                           tblptrl	equ	0xFF6
  6278                           tablat	equ	0xFF5
  6279                           prodh	equ	0xFF4
  6280                           prodl	equ	0xFF3
  6281                           intcon	equ	0xFF2
  6282                           postinc0	equ	0xFEE
  6283                           wreg	equ	0xFE8
  6284                           indf1	equ	0xFE7
  6285                           postdec1	equ	0xFE5
  6286                           fsr1h	equ	0xFE2
  6287                           fsr1l	equ	0xFE1
  6288                           indf2	equ	0xFDF
  6289                           postinc2	equ	0xFDE
  6290                           postdec2	equ	0xFDD
  6291                           plusw2	equ	0xFDB
  6292                           fsr2h	equ	0xFDA
  6293                           fsr2l	equ	0xFD9
  6294                           status	equ	0xFD8
  6295                           
  6296 ;; *************** function _RTCC_time_set *****************
  6297 ;; Defined at:
  6298 ;;		line 356 in file "../My_header\My_RTCC.h"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  mode            2   24[BANK1 ] PTR struct button
  6301 ;;		 -> ctm(4), 
  6302 ;;  cnt_inc         2   26[BANK1 ] PTR struct button
  6303 ;;		 -> ct0(4), 
  6304 ;;  cnt_dec         2   28[BANK1 ] PTR struct button
  6305 ;;		 -> ct1(4), 
  6306 ;; Auto vars:     Size  Location     Type
  6307 ;;		None
  6308 ;; Return value:  Size  Location     Type
  6309 ;;		None               void
  6310 ;; Registers used:
  6311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6312 ;; Tracked objects:
  6313 ;;		On entry : 0/0
  6314 ;;		On exit  : 0/0
  6315 ;;		Unchanged: 0/0
  6316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6317 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6320 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6321 ;;Total ram usage:        6 bytes
  6322 ;; Hardware stack levels used:    1
  6323 ;; Hardware stack levels required when called:    9
  6324 ;; This function calls:
  6325 ;;		_RTCC_time_set_cursor
  6326 ;;		_RTCC_time_set_dec
  6327 ;;		_RTCC_time_set_inc
  6328 ;;		_RTCC_time_set_toggle
  6329 ;; This function is called by:
  6330 ;;		_normal_mode_loop
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           	psect	text22
  6335  0116B2                     __ptext22:
  6336                           	opt stack 0
  6337  0116B2                     _RTCC_time_set:
  6338                           	opt stack 20
  6339                           
  6340                           ;My_header\My_RTCC.h: 357: if (mode->flag.long_holding_3) {
  6341                           
  6342                           ;incstack = 0
  6343  0116B2  0101               	movlb	1	; () banked
  6344  0116B4  EE20 F003          	lfsr	2,3
  6345  0116B8  5118               	movf	RTCC_time_set@mode& (0+255),w,b
  6346  0116BA  26D9               	addwf	fsr2l,f,c
  6347  0116BC  5119               	movf	(RTCC_time_set@mode+1)& (0+255),w,b
  6348  0116BE  22DA               	addwfc	fsr2h,f,c
  6349  0116C0  0101               	movlb	1	; () banked
  6350  0116C2  A6DF               	btfss	indf2,3,c
  6351  0116C4  D02D               	goto	l5695
  6352                           
  6353                           ; BSR set to: 1
  6354                           ;My_header\My_RTCC.h: 358: mode->flag.long_holding_3 = 0;
  6355  0116C6  0101               	movlb	1	; () banked
  6356  0116C8  EE20 F003          	lfsr	2,3
  6357  0116CC  5118               	movf	RTCC_time_set@mode& (0+255),w,b
  6358  0116CE  26D9               	addwf	fsr2l,f,c
  6359  0116D0  5119               	movf	(RTCC_time_set@mode+1)& (0+255),w,b
  6360  0116D2  22DA               	addwfc	fsr2h,f,c
  6361  0116D4  0101               	movlb	1	; () banked
  6362  0116D6  96DF               	bcf	indf2,3,c
  6363                           
  6364                           ; BSR set to: 1
  6365                           ;My_header\My_RTCC.h: 359: RTCC_time_set_toggle();
  6366  0116D8  EC99  F099         	call	_RTCC_time_set_toggle	;wreg free
  6367                           
  6368                           ;My_header\My_RTCC.h: 360: mode->flags = 0;
  6369  0116DC  0101               	movlb	1	; () banked
  6370  0116DE  EE20 F002          	lfsr	2,2
  6371  0116E2  5118               	movf	RTCC_time_set@mode& (0+255),w,b
  6372  0116E4  26D9               	addwf	fsr2l,f,c
  6373  0116E6  5119               	movf	(RTCC_time_set@mode+1)& (0+255),w,b
  6374  0116E8  22DA               	addwfc	fsr2h,f,c
  6375  0116EA  0E00               	movlw	0
  6376  0116EC  6EDE               	movwf	postinc2,c
  6377  0116EE  0E00               	movlw	0
  6378  0116F0  6EDD               	movwf	postdec2,c
  6379                           
  6380                           ; BSR set to: 1
  6381                           ;My_header\My_RTCC.h: 361: cnt_inc->flags = 0;
  6382  0116F2  0101               	movlb	1	; () banked
  6383  0116F4  EE20 F002          	lfsr	2,2
  6384  0116F8  511A               	movf	RTCC_time_set@cnt_inc& (0+255),w,b
  6385  0116FA  26D9               	addwf	fsr2l,f,c
  6386  0116FC  511B               	movf	(RTCC_time_set@cnt_inc+1)& (0+255),w,b
  6387  0116FE  22DA               	addwfc	fsr2h,f,c
  6388  011700  0E00               	movlw	0
  6389  011702  6EDE               	movwf	postinc2,c
  6390  011704  0E00               	movlw	0
  6391  011706  6EDD               	movwf	postdec2,c
  6392                           
  6393                           ; BSR set to: 1
  6394                           ;My_header\My_RTCC.h: 362: cnt_dec->flags = 0;
  6395  011708  0101               	movlb	1	; () banked
  6396  01170A  EE20 F002          	lfsr	2,2
  6397  01170E  511C               	movf	RTCC_time_set@cnt_dec& (0+255),w,b
  6398  011710  26D9               	addwf	fsr2l,f,c
  6399  011712  511D               	movf	(RTCC_time_set@cnt_dec+1)& (0+255),w,b
  6400  011714  22DA               	addwfc	fsr2h,f,c
  6401  011716  0E00               	movlw	0
  6402  011718  6EDE               	movwf	postinc2,c
  6403  01171A  0E00               	movlw	0
  6404  01171C  6EDD               	movwf	postdec2,c
  6405  01171E  D000               	goto	l5695
  6406  011720                     l5695:
  6407                           
  6408                           ; BSR set to: 1
  6409                           ;My_header\My_RTCC.h: 363: }
  6410                           ;My_header\My_RTCC.h: 364: if (edit_flag.flags) {
  6411  011720  0100               	movlb	0	; () banked
  6412  011722  519A               	movf	_edit_flag& (0+255),w,b
  6413  011724  B4D8               	btfsc	status,2,c
  6414  011726  0012               	return	
  6415                           
  6416                           ; BSR set to: 0
  6417                           ;My_header\My_RTCC.h: 365: if (mode->flag.press) {
  6418  011728  0101               	movlb	1	; () banked
  6419  01172A  EE20 F002          	lfsr	2,2
  6420  01172E  5118               	movf	RTCC_time_set@mode& (0+255),w,b
  6421  011730  26D9               	addwf	fsr2l,f,c
  6422  011732  5119               	movf	(RTCC_time_set@mode+1)& (0+255),w,b
  6423  011734  22DA               	addwfc	fsr2h,f,c
  6424  011736  0101               	movlb	1	; () banked
  6425  011738  A0DF               	btfss	indf2,0,c
  6426  01173A  D00C               	goto	l5703
  6427                           
  6428                           ; BSR set to: 1
  6429                           ;My_header\My_RTCC.h: 366: mode->flag.press = 0;
  6430  01173C  0101               	movlb	1	; () banked
  6431  01173E  EE20 F002          	lfsr	2,2
  6432  011742  5118               	movf	RTCC_time_set@mode& (0+255),w,b
  6433  011744  26D9               	addwf	fsr2l,f,c
  6434  011746  5119               	movf	(RTCC_time_set@mode+1)& (0+255),w,b
  6435  011748  22DA               	addwfc	fsr2h,f,c
  6436  01174A  0101               	movlb	1	; () banked
  6437  01174C  90DF               	bcf	indf2,0,c
  6438                           
  6439                           ; BSR set to: 1
  6440                           ;My_header\My_RTCC.h: 367: RTCC_time_set_cursor();
  6441  01174E  EC1E  F096         	call	_RTCC_time_set_cursor	;wreg free
  6442  011752  D000               	goto	l5703
  6443  011754                     l5703:
  6444                           
  6445                           ;My_header\My_RTCC.h: 368: }
  6446                           ;My_header\My_RTCC.h: 369: if (cnt_inc->flag.press) {
  6447  011754  0101               	movlb	1	; () banked
  6448  011756  EE20 F002          	lfsr	2,2
  6449  01175A  511A               	movf	RTCC_time_set@cnt_inc& (0+255),w,b
  6450  01175C  26D9               	addwf	fsr2l,f,c
  6451  01175E  511B               	movf	(RTCC_time_set@cnt_inc+1)& (0+255),w,b
  6452  011760  22DA               	addwfc	fsr2h,f,c
  6453  011762  0101               	movlb	1	; () banked
  6454  011764  A0DF               	btfss	indf2,0,c
  6455  011766  D018               	goto	l5709
  6456                           
  6457                           ; BSR set to: 1
  6458                           ;My_header\My_RTCC.h: 370: cnt_inc->flag.press = 0;
  6459  011768  0101               	movlb	1	; () banked
  6460  01176A  EE20 F002          	lfsr	2,2
  6461  01176E  511A               	movf	RTCC_time_set@cnt_inc& (0+255),w,b
  6462  011770  26D9               	addwf	fsr2l,f,c
  6463  011772  511B               	movf	(RTCC_time_set@cnt_inc+1)& (0+255),w,b
  6464  011774  22DA               	addwfc	fsr2h,f,c
  6465  011776  0101               	movlb	1	; () banked
  6466  011778  90DF               	bcf	indf2,0,c
  6467                           
  6468                           ; BSR set to: 1
  6469                           ;My_header\My_RTCC.h: 371: RTCC_time_set_inc(&caltime_now, &epoch_now);
  6470  01177A  0E9E               	movlw	low _caltime_now
  6471  01177C  0101               	movlb	1	; () banked
  6472  01177E  6F0E               	movwf	RTCC_time_set_inc@ct& (0+255),b
  6473  011780  0E00               	movlw	high _caltime_now
  6474  011782  0101               	movlb	1	; () banked
  6475  011784  6F0F               	movwf	(RTCC_time_set_inc@ct+1)& (0+255),b
  6476  011786  0EB5               	movlw	low _epoch_now
  6477  011788  0101               	movlb	1	; () banked
  6478  01178A  6F10               	movwf	RTCC_time_set_inc@ep& (0+255),b
  6479  01178C  0E00               	movlw	high _epoch_now
  6480  01178E  0101               	movlb	1	; () banked
  6481  011790  6F11               	movwf	(RTCC_time_set_inc@ep+1)& (0+255),b
  6482  011792  ECAF  F087         	call	_RTCC_time_set_inc	;wreg free
  6483  011796  D000               	goto	l5709
  6484  011798                     l5709:
  6485                           
  6486                           ;My_header\My_RTCC.h: 372: }
  6487                           ;My_header\My_RTCC.h: 373: if (cnt_dec->flag.press) {
  6488  011798  0101               	movlb	1	; () banked
  6489  01179A  EE20 F002          	lfsr	2,2
  6490  01179E  511C               	movf	RTCC_time_set@cnt_dec& (0+255),w,b
  6491  0117A0  26D9               	addwf	fsr2l,f,c
  6492  0117A2  511D               	movf	(RTCC_time_set@cnt_dec+1)& (0+255),w,b
  6493  0117A4  22DA               	addwfc	fsr2h,f,c
  6494  0117A6  0101               	movlb	1	; () banked
  6495  0117A8  A0DF               	btfss	indf2,0,c
  6496  0117AA  0012               	return	
  6497                           
  6498                           ; BSR set to: 1
  6499                           ;My_header\My_RTCC.h: 374: cnt_dec->flag.press = 0;
  6500  0117AC  0101               	movlb	1	; () banked
  6501  0117AE  EE20 F002          	lfsr	2,2
  6502  0117B2  511C               	movf	RTCC_time_set@cnt_dec& (0+255),w,b
  6503  0117B4  26D9               	addwf	fsr2l,f,c
  6504  0117B6  511D               	movf	(RTCC_time_set@cnt_dec+1)& (0+255),w,b
  6505  0117B8  22DA               	addwfc	fsr2h,f,c
  6506  0117BA  0101               	movlb	1	; () banked
  6507  0117BC  90DF               	bcf	indf2,0,c
  6508                           
  6509                           ; BSR set to: 1
  6510                           ;My_header\My_RTCC.h: 375: RTCC_time_set_dec(&caltime_now, &epoch_now);
  6511  0117BE  0E9E               	movlw	low _caltime_now
  6512  0117C0  0101               	movlb	1	; () banked
  6513  0117C2  6F0E               	movwf	RTCC_time_set_dec@ct& (0+255),b
  6514  0117C4  0E00               	movlw	high _caltime_now
  6515  0117C6  0101               	movlb	1	; () banked
  6516  0117C8  6F0F               	movwf	(RTCC_time_set_dec@ct+1)& (0+255),b
  6517  0117CA  0EB5               	movlw	low _epoch_now
  6518  0117CC  0101               	movlb	1	; () banked
  6519  0117CE  6F10               	movwf	RTCC_time_set_dec@ep& (0+255),b
  6520  0117D0  0E00               	movlw	high _epoch_now
  6521  0117D2  0101               	movlb	1	; () banked
  6522  0117D4  6F11               	movwf	(RTCC_time_set_dec@ep+1)& (0+255),b
  6523  0117D6  EC73  F086         	call	_RTCC_time_set_dec	;wreg free
  6524  0117DA  0012               	return	
  6525  0117DC  0012               	return		;funcret
  6526  0117DE                     __end_of_RTCC_time_set:
  6527                           	opt stack 0
  6528                           tblptru	equ	0xFF8
  6529                           tblptrh	equ	0xFF7
  6530                           tblptrl	equ	0xFF6
  6531                           tablat	equ	0xFF5
  6532                           prodh	equ	0xFF4
  6533                           prodl	equ	0xFF3
  6534                           intcon	equ	0xFF2
  6535                           postinc0	equ	0xFEE
  6536                           wreg	equ	0xFE8
  6537                           indf1	equ	0xFE7
  6538                           postdec1	equ	0xFE5
  6539                           fsr1h	equ	0xFE2
  6540                           fsr1l	equ	0xFE1
  6541                           indf2	equ	0xFDF
  6542                           postinc2	equ	0xFDE
  6543                           postdec2	equ	0xFDD
  6544                           plusw2	equ	0xFDB
  6545                           fsr2h	equ	0xFDA
  6546                           fsr2l	equ	0xFD9
  6547                           status	equ	0xFD8
  6548                           
  6549 ;; *************** function _RTCC_time_set_toggle *****************
  6550 ;; Defined at:
  6551 ;;		line 297 in file "../My_header\My_RTCC.h"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;		None
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;		None
  6556 ;; Return value:  Size  Location     Type
  6557 ;;		None               void
  6558 ;; Registers used:
  6559 ;;		wreg, status,2
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6569 ;;Total ram usage:        0 bytes
  6570 ;; Hardware stack levels used:    1
  6571 ;; Hardware stack levels required when called:    4
  6572 ;; This function calls:
  6573 ;;		Nothing
  6574 ;; This function is called by:
  6575 ;;		_RTCC_time_set
  6576 ;; This function uses a non-reentrant model
  6577 ;;
  6578                           
  6579                           	psect	text23
  6580  013332                     __ptext23:
  6581                           	opt stack 0
  6582  013332                     _RTCC_time_set_toggle:
  6583                           	opt stack 24
  6584                           
  6585                           ;My_header\My_RTCC.h: 298: if (edit_flag.flags) {
  6586                           
  6587                           ;incstack = 0
  6588  013332  0100               	movlb	0	; () banked
  6589  013334  519A               	movf	_edit_flag& (0+255),w,b
  6590  013336  B4D8               	btfsc	status,2,c
  6591  013338  D004               	goto	l460
  6592                           
  6593                           ; BSR set to: 0
  6594                           ;My_header\My_RTCC.h: 299: edit_flag.flags = 0;
  6595  01333A  0E00               	movlw	0
  6596  01333C  0100               	movlb	0	; () banked
  6597  01333E  6F9A               	movwf	_edit_flag& (0+255),b
  6598                           
  6599                           ;My_header\My_RTCC.h: 300: } else {
  6600  013340  0012               	return	
  6601  013342                     l460:
  6602                           
  6603                           ; BSR set to: 0
  6604                           ;My_header\My_RTCC.h: 301: edit_flag.flag.ss = 1;
  6605  013342  0100               	movlb	0	; () banked
  6606  013344  819A               	bsf	_edit_flag& (0+255),0,b
  6607  013346  0012               	return	
  6608                           
  6609                           ; BSR set to: 0
  6610                           
  6611                           ; BSR set to: 0
  6612  013348  0012               	return		;funcret
  6613  01334A                     __end_of_RTCC_time_set_toggle:
  6614                           	opt stack 0
  6615                           tblptru	equ	0xFF8
  6616                           tblptrh	equ	0xFF7
  6617                           tblptrl	equ	0xFF6
  6618                           tablat	equ	0xFF5
  6619                           prodh	equ	0xFF4
  6620                           prodl	equ	0xFF3
  6621                           intcon	equ	0xFF2
  6622                           postinc0	equ	0xFEE
  6623                           wreg	equ	0xFE8
  6624                           indf1	equ	0xFE7
  6625                           postdec1	equ	0xFE5
  6626                           fsr1h	equ	0xFE2
  6627                           fsr1l	equ	0xFE1
  6628                           indf2	equ	0xFDF
  6629                           postinc2	equ	0xFDE
  6630                           postdec2	equ	0xFDD
  6631                           plusw2	equ	0xFDB
  6632                           fsr2h	equ	0xFDA
  6633                           fsr2l	equ	0xFD9
  6634                           status	equ	0xFD8
  6635                           
  6636 ;; *************** function _RTCC_time_set_inc *****************
  6637 ;; Defined at:
  6638 ;;		line 314 in file "../My_header\My_RTCC.h"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;  ct              2   14[BANK1 ] PTR struct .
  6641 ;;		 -> caltime_now(7), 
  6642 ;;  ep              2   16[BANK1 ] PTR unsigned long 
  6643 ;;		 -> epoch_now(4), 
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;  i               1   22[BANK1 ] unsigned char 
  6646 ;;  i               1   23[BANK1 ] unsigned char 
  6647 ;; Return value:  Size  Location     Type
  6648 ;;		None               void
  6649 ;; Registers used:
  6650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6656 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6657 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6658 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6659 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6660 ;;Total ram usage:       10 bytes
  6661 ;; Hardware stack levels used:    1
  6662 ;; Hardware stack levels required when called:    8
  6663 ;; This function calls:
  6664 ;;		_RTCC_from_RTCC
  6665 ;;		_RTCC_from_epoch
  6666 ;;		___lmul
  6667 ;;		_month_length
  6668 ;; This function is called by:
  6669 ;;		_RTCC_time_set
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673                           	psect	text24
  6674  010F5E                     __ptext24:
  6675                           	opt stack 0
  6676  010F5E                     _RTCC_time_set_inc:
  6677                           	opt stack 20
  6678                           
  6679                           ;My_header\My_RTCC.h: 315: RTCC_from_RTCC(ct, ep);
  6680                           
  6681                           ; BSR set to: 0
  6682                           ;incstack = 0
  6683  010F5E  C10E  F100         	movff	RTCC_time_set_inc@ct,RTCC_from_RTCC@ct
  6684  010F62  C10F  F101         	movff	RTCC_time_set_inc@ct+1,RTCC_from_RTCC@ct+1
  6685  010F66  C110  F102         	movff	RTCC_time_set_inc@ep,RTCC_from_RTCC@ep
  6686  010F6A  C111  F103         	movff	RTCC_time_set_inc@ep+1,RTCC_from_RTCC@ep+1
  6687  010F6E  EC34  F099         	call	_RTCC_from_RTCC	;wreg free
  6688                           
  6689                           ;My_header\My_RTCC.h: 316: if (edit_flag.flag.ss) *ep += 1;
  6690  010F72  0100               	movlb	0	; () banked
  6691  010F74  A19A               	btfss	_edit_flag& (0+255),0,b
  6692  010F76  D00A               	goto	l5355
  6693                           
  6694                           ; BSR set to: 0
  6695  010F78  C110  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  6696  010F7C  C111  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  6697  010F80  2ADE               	incf	postinc2,f,c
  6698  010F82  0E00               	movlw	0
  6699  010F84  22DE               	addwfc	postinc2,f,c
  6700  010F86  22DE               	addwfc	postinc2,f,c
  6701  010F88  22DE               	addwfc	postinc2,f,c
  6702  010F8A  D000               	goto	l5355
  6703  010F8C                     l5355:
  6704                           
  6705                           ; BSR set to: 0
  6706                           ;My_header\My_RTCC.h: 317: if (edit_flag.flag.mm) *ep += ((epoch_t)60);
  6707  010F8C  0100               	movlb	0	; () banked
  6708  010F8E  A39A               	btfss	_edit_flag& (0+255),1,b
  6709  010F90  D00B               	goto	l5359
  6710                           
  6711                           ; BSR set to: 0
  6712  010F92  0E3C               	movlw	60
  6713  010F94  C110  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  6714  010F98  C111  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  6715  010F9C  26DE               	addwf	postinc2,f,c
  6716  010F9E  0E00               	movlw	0
  6717  010FA0  22DE               	addwfc	postinc2,f,c
  6718  010FA2  22DE               	addwfc	postinc2,f,c
  6719  010FA4  22DE               	addwfc	postinc2,f,c
  6720  010FA6  D000               	goto	l5359
  6721  010FA8                     l5359:
  6722                           
  6723                           ; BSR set to: 0
  6724                           ;My_header\My_RTCC.h: 318: if (edit_flag.flag.hh) *ep += ((epoch_t)60*60);
  6725  010FA8  0100               	movlb	0	; () banked
  6726  010FAA  A59A               	btfss	_edit_flag& (0+255),2,b
  6727  010FAC  D00D               	goto	l5363
  6728                           
  6729                           ; BSR set to: 0
  6730  010FAE  C110  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  6731  010FB2  C111  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  6732  010FB6  0E10               	movlw	16
  6733  010FB8  26DE               	addwf	postinc2,f,c
  6734  010FBA  0E0E               	movlw	14
  6735  010FBC  22DE               	addwfc	postinc2,f,c
  6736  010FBE  0E00               	movlw	0
  6737  010FC0  22DE               	addwfc	postinc2,f,c
  6738  010FC2  0E00               	movlw	0
  6739  010FC4  22DE               	addwfc	postinc2,f,c
  6740  010FC6  D000               	goto	l5363
  6741  010FC8                     l5363:
  6742                           
  6743                           ; BSR set to: 0
  6744                           ;My_header\My_RTCC.h: 319: if (edit_flag.flag.DD) *ep += ((epoch_t)60*60*24);
  6745  010FC8  0100               	movlb	0	; () banked
  6746  010FCA  A79A               	btfss	_edit_flag& (0+255),3,b
  6747  010FCC  D00D               	goto	l5367
  6748                           
  6749                           ; BSR set to: 0
  6750  010FCE  C110  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  6751  010FD2  C111  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  6752  010FD6  0E80               	movlw	128
  6753  010FD8  26DE               	addwf	postinc2,f,c
  6754  010FDA  0E51               	movlw	81
  6755  010FDC  22DE               	addwfc	postinc2,f,c
  6756  010FDE  0E01               	movlw	1
  6757  010FE0  22DE               	addwfc	postinc2,f,c
  6758  010FE2  0E00               	movlw	0
  6759  010FE4  22DE               	addwfc	postinc2,f,c
  6760  010FE6  D000               	goto	l5367
  6761  010FE8                     l5367:
  6762                           
  6763                           ; BSR set to: 0
  6764                           ;My_header\My_RTCC.h: 320: if (edit_flag.flag.MM) *ep += ((epoch_t)60*60*24) * month_len
      +                          gth(ct->YY, ct->MM);
  6765  010FE8  0100               	movlb	0	; () banked
  6766  010FEA  A99A               	btfss	_edit_flag& (0+255),4,b
  6767  010FEC  D038               	goto	l5371
  6768                           
  6769                           ; BSR set to: 0
  6770  010FEE  0101               	movlb	1	; () banked
  6771  010FF0  EE20 F005          	lfsr	2,5
  6772  010FF4  510E               	movf	RTCC_time_set_inc@ct& (0+255),w,b
  6773  010FF6  26D9               	addwf	fsr2l,f,c
  6774  010FF8  510F               	movf	(RTCC_time_set_inc@ct+1)& (0+255),w,b
  6775  010FFA  22DA               	addwfc	fsr2h,f,c
  6776  010FFC  50DF               	movf	indf2,w,c
  6777  010FFE  6E22               	movwf	month_length@month,c
  6778  011000  0101               	movlb	1	; () banked
  6779  011002  EE20 F006          	lfsr	2,6
  6780  011006  510E               	movf	RTCC_time_set_inc@ct& (0+255),w,b
  6781  011008  26D9               	addwf	fsr2l,f,c
  6782  01100A  510F               	movf	(RTCC_time_set_inc@ct+1)& (0+255),w,b
  6783  01100C  22DA               	addwfc	fsr2h,f,c
  6784  01100E  50DF               	movf	indf2,w,c
  6785  011010  EC7E  F08D         	call	_month_length
  6786  011014  0101               	movlb	1	; () banked
  6787  011016  6F12               	movwf	??_RTCC_time_set_inc& (0+255),b
  6788  011018  0101               	movlb	1	; () banked
  6789  01101A  5112               	movf	??_RTCC_time_set_inc& (0+255),w,b
  6790  01101C  0100               	movlb	0	; () banked
  6791  01101E  6FC6               	movwf	___lmul@multiplier& (0+255),b
  6792  011020  6BC7               	clrf	(___lmul@multiplier+1)& (0+255),b
  6793  011022  6BC8               	clrf	(___lmul@multiplier+2)& (0+255),b
  6794  011024  6BC9               	clrf	(___lmul@multiplier+3)& (0+255),b
  6795  011026  0E80               	movlw	128
  6796  011028  0100               	movlb	0	; () banked
  6797  01102A  6FCA               	movwf	___lmul@multiplicand& (0+255),b
  6798  01102C  0E51               	movlw	81
  6799  01102E  6FCB               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6800  011030  0E01               	movlw	1
  6801  011032  6FCC               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6802  011034  0E00               	movlw	0
  6803  011036  6FCD               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6804  011038  ECF2  F094         	call	___lmul	;wreg free
  6805  01103C  C110  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  6806  011040  C111  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  6807  011044  0100               	movlb	0	; () banked
  6808  011046  51C6               	movf	?___lmul& (0+255),w,b
  6809  011048  26DE               	addwf	postinc2,f,c
  6810  01104A  0100               	movlb	0	; () banked
  6811  01104C  51C7               	movf	(?___lmul+1)& (0+255),w,b
  6812  01104E  22DE               	addwfc	postinc2,f,c
  6813  011050  0100               	movlb	0	; () banked
  6814  011052  51C8               	movf	(?___lmul+2)& (0+255),w,b
  6815  011054  22DE               	addwfc	postinc2,f,c
  6816  011056  0100               	movlb	0	; () banked
  6817  011058  51C9               	movf	(?___lmul+3)& (0+255),w,b
  6818  01105A  22DE               	addwfc	postinc2,f,c
  6819  01105C  D000               	goto	l5371
  6820  01105E                     l5371:
  6821                           
  6822                           ; BSR set to: 0
  6823                           ;My_header\My_RTCC.h: 321: if (edit_flag.flag.YY) {
  6824  01105E  0100               	movlb	0	; () banked
  6825  011060  AB9A               	btfss	_edit_flag& (0+255),5,b
  6826  011062  D08B               	goto	l5393
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;My_header\My_RTCC.h: 322: for (uint8_t i = ct->MM; i <= 12; i++) {
  6830  011064  0101               	movlb	1	; () banked
  6831  011066  EE20 F005          	lfsr	2,5
  6832  01106A  510E               	movf	RTCC_time_set_inc@ct& (0+255),w,b
  6833  01106C  26D9               	addwf	fsr2l,f,c
  6834  01106E  510F               	movf	(RTCC_time_set_inc@ct+1)& (0+255),w,b
  6835  011070  22DA               	addwfc	fsr2h,f,c
  6836  011072  50DF               	movf	indf2,w,c
  6837  011074  0101               	movlb	1	; () banked
  6838  011076  6F17               	movwf	RTCC_time_set_inc@i& (0+255),b
  6839  011078                     l5375:
  6840                           
  6841                           ; BSR set to: 1
  6842  011078  0E0C               	movlw	12
  6843  01107A  0101               	movlb	1	; () banked
  6844  01107C  6517               	cpfsgt	RTCC_time_set_inc@i& (0+255),b
  6845  01107E  D001               	goto	l5379
  6846                           
  6847                           ; BSR set to: 1
  6848  011080  D033               	goto	l5385
  6849  011082                     l5379:
  6850                           
  6851                           ; BSR set to: 1
  6852                           ;My_header\My_RTCC.h: 323: *ep += ((epoch_t)60*60*24) * month_length(ct->YY, i);
  6853  011082  C117  F022         	movff	RTCC_time_set_inc@i,month_length@month
  6854  011086  0101               	movlb	1	; () banked
  6855  011088  EE20 F006          	lfsr	2,6
  6856  01108C  510E               	movf	RTCC_time_set_inc@ct& (0+255),w,b
  6857  01108E  26D9               	addwf	fsr2l,f,c
  6858  011090  510F               	movf	(RTCC_time_set_inc@ct+1)& (0+255),w,b
  6859  011092  22DA               	addwfc	fsr2h,f,c
  6860  011094  50DF               	movf	indf2,w,c
  6861  011096  EC7E  F08D         	call	_month_length
  6862  01109A  0101               	movlb	1	; () banked
  6863  01109C  6F12               	movwf	??_RTCC_time_set_inc& (0+255),b
  6864  01109E  0101               	movlb	1	; () banked
  6865  0110A0  5112               	movf	??_RTCC_time_set_inc& (0+255),w,b
  6866  0110A2  0100               	movlb	0	; () banked
  6867  0110A4  6FC6               	movwf	___lmul@multiplier& (0+255),b
  6868  0110A6  6BC7               	clrf	(___lmul@multiplier+1)& (0+255),b
  6869  0110A8  6BC8               	clrf	(___lmul@multiplier+2)& (0+255),b
  6870  0110AA  6BC9               	clrf	(___lmul@multiplier+3)& (0+255),b
  6871  0110AC  0E80               	movlw	128
  6872  0110AE  0100               	movlb	0	; () banked
  6873  0110B0  6FCA               	movwf	___lmul@multiplicand& (0+255),b
  6874  0110B2  0E51               	movlw	81
  6875  0110B4  6FCB               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6876  0110B6  0E01               	movlw	1
  6877  0110B8  6FCC               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6878  0110BA  0E00               	movlw	0
  6879  0110BC  6FCD               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6880  0110BE  ECF2  F094         	call	___lmul	;wreg free
  6881  0110C2  C110  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  6882  0110C6  C111  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  6883  0110CA  0100               	movlb	0	; () banked
  6884  0110CC  51C6               	movf	?___lmul& (0+255),w,b
  6885  0110CE  26DE               	addwf	postinc2,f,c
  6886  0110D0  0100               	movlb	0	; () banked
  6887  0110D2  51C7               	movf	(?___lmul+1)& (0+255),w,b
  6888  0110D4  22DE               	addwfc	postinc2,f,c
  6889  0110D6  0100               	movlb	0	; () banked
  6890  0110D8  51C8               	movf	(?___lmul+2)& (0+255),w,b
  6891  0110DA  22DE               	addwfc	postinc2,f,c
  6892  0110DC  0100               	movlb	0	; () banked
  6893  0110DE  51C9               	movf	(?___lmul+3)& (0+255),w,b
  6894  0110E0  22DE               	addwfc	postinc2,f,c
  6895                           
  6896                           ; BSR set to: 0
  6897  0110E2  0101               	movlb	1	; () banked
  6898  0110E4  2B17               	incf	RTCC_time_set_inc@i& (0+255),f,b
  6899  0110E6  D7C8               	goto	l5375
  6900  0110E8                     l5385:
  6901                           
  6902                           ; BSR set to: 1
  6903                           ;My_header\My_RTCC.h: 324: }
  6904                           ;My_header\My_RTCC.h: 325: for (uint8_t i = 1; i < ct->MM; i++) {
  6905  0110E8  0E01               	movlw	1
  6906  0110EA  0101               	movlb	1	; () banked
  6907  0110EC  6F16               	movwf	RTCC_time_set_inc@i_2064& (0+255),b
  6908  0110EE  D037               	goto	l5391
  6909  0110F0                     l5387:
  6910                           
  6911                           ; BSR set to: 1
  6912                           ;My_header\My_RTCC.h: 326: *ep += ((epoch_t)60*60*24) * month_length(ct->YY + 1, i);
  6913  0110F0  C116  F022         	movff	RTCC_time_set_inc@i_2064,month_length@month
  6914  0110F4  0101               	movlb	1	; () banked
  6915  0110F6  EE20 F006          	lfsr	2,6
  6916  0110FA  510E               	movf	RTCC_time_set_inc@ct& (0+255),w,b
  6917  0110FC  26D9               	addwf	fsr2l,f,c
  6918  0110FE  510F               	movf	(RTCC_time_set_inc@ct+1)& (0+255),w,b
  6919  011100  22DA               	addwfc	fsr2h,f,c
  6920  011102  50DF               	movf	indf2,w,c
  6921  011104  0101               	movlb	1	; () banked
  6922  011106  6F12               	movwf	??_RTCC_time_set_inc& (0+255),b
  6923  011108  0101               	movlb	1	; () banked
  6924  01110A  2912               	incf	??_RTCC_time_set_inc& (0+255),w,b
  6925  01110C  EC7E  F08D         	call	_month_length
  6926  011110  0101               	movlb	1	; () banked
  6927  011112  6F13               	movwf	(??_RTCC_time_set_inc+1)& (0+255),b
  6928  011114  0101               	movlb	1	; () banked
  6929  011116  5113               	movf	(??_RTCC_time_set_inc+1)& (0+255),w,b
  6930  011118  0100               	movlb	0	; () banked
  6931  01111A  6FC6               	movwf	___lmul@multiplier& (0+255),b
  6932  01111C  6BC7               	clrf	(___lmul@multiplier+1)& (0+255),b
  6933  01111E  6BC8               	clrf	(___lmul@multiplier+2)& (0+255),b
  6934  011120  6BC9               	clrf	(___lmul@multiplier+3)& (0+255),b
  6935  011122  0E80               	movlw	128
  6936  011124  0100               	movlb	0	; () banked
  6937  011126  6FCA               	movwf	___lmul@multiplicand& (0+255),b
  6938  011128  0E51               	movlw	81
  6939  01112A  6FCB               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6940  01112C  0E01               	movlw	1
  6941  01112E  6FCC               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6942  011130  0E00               	movlw	0
  6943  011132  6FCD               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6944  011134  ECF2  F094         	call	___lmul	;wreg free
  6945  011138  C110  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  6946  01113C  C111  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  6947  011140  0100               	movlb	0	; () banked
  6948  011142  51C6               	movf	?___lmul& (0+255),w,b
  6949  011144  26DE               	addwf	postinc2,f,c
  6950  011146  0100               	movlb	0	; () banked
  6951  011148  51C7               	movf	(?___lmul+1)& (0+255),w,b
  6952  01114A  22DE               	addwfc	postinc2,f,c
  6953  01114C  0100               	movlb	0	; () banked
  6954  01114E  51C8               	movf	(?___lmul+2)& (0+255),w,b
  6955  011150  22DE               	addwfc	postinc2,f,c
  6956  011152  0100               	movlb	0	; () banked
  6957  011154  51C9               	movf	(?___lmul+3)& (0+255),w,b
  6958  011156  22DE               	addwfc	postinc2,f,c
  6959                           
  6960                           ; BSR set to: 0
  6961  011158  0101               	movlb	1	; () banked
  6962  01115A  2B16               	incf	RTCC_time_set_inc@i_2064& (0+255),f,b
  6963  01115C  D000               	goto	l5391
  6964  01115E                     l5391:
  6965                           
  6966                           ; BSR set to: 1
  6967  01115E  0101               	movlb	1	; () banked
  6968  011160  EE20 F005          	lfsr	2,5
  6969  011164  510E               	movf	RTCC_time_set_inc@ct& (0+255),w,b
  6970  011166  26D9               	addwf	fsr2l,f,c
  6971  011168  510F               	movf	(RTCC_time_set_inc@ct+1)& (0+255),w,b
  6972  01116A  22DA               	addwfc	fsr2h,f,c
  6973  01116C  50DE               	movf	postinc2,w,c
  6974  01116E  0101               	movlb	1	; () banked
  6975  011170  5D16               	subwf	RTCC_time_set_inc@i_2064& (0+255),w,b
  6976  011172  B0D8               	btfsc	status,0,c
  6977  011174  D002               	goto	l5393
  6978  011176  D7BC               	goto	l5387
  6979                           
  6980                           ; BSR set to: 1
  6981  011178  D000               	goto	l5393
  6982  01117A                     l5393:
  6983                           
  6984                           ;My_header\My_RTCC.h: 327: }
  6985                           ;My_header\My_RTCC.h: 328: }
  6986                           ;My_header\My_RTCC.h: 330: if (*ep >= 3155760000)*ep -= 3155760000;
  6987  01117A  C110  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  6988  01117E  C111  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  6989  011182  0E80               	movlw	128
  6990  011184  5CDE               	subwf	postinc2,w,c
  6991  011186  0E13               	movlw	19
  6992  011188  58DE               	subwfb	postinc2,w,c
  6993  01118A  0E19               	movlw	25
  6994  01118C  58DE               	subwfb	postinc2,w,c
  6995  01118E  0EBC               	movlw	188
  6996  011190  58DE               	subwfb	postinc2,w,c
  6997  011192  A0D8               	btfss	status,0,c
  6998  011194  D00D               	goto	l5397
  6999  011196  C110  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  7000  01119A  C111  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  7001  01119E  0E80               	movlw	128
  7002  0111A0  5EDE               	subwf	postinc2,f,c
  7003  0111A2  0E13               	movlw	19
  7004  0111A4  5ADE               	subwfb	postinc2,f,c
  7005  0111A6  0E19               	movlw	25
  7006  0111A8  5ADE               	subwfb	postinc2,f,c
  7007  0111AA  0EBC               	movlw	188
  7008  0111AC  5ADE               	subwfb	postinc2,f,c
  7009  0111AE  D000               	goto	l5397
  7010  0111B0                     l5397:
  7011                           
  7012                           ;My_header\My_RTCC.h: 331: RTCC_from_epoch(&caltime_now, &epoch_now);
  7013  0111B0  0E9E               	movlw	low _caltime_now
  7014  0111B2  0101               	movlb	1	; () banked
  7015  0111B4  6F0A               	movwf	RTCC_from_epoch@ct& (0+255),b
  7016  0111B6  0E00               	movlw	high _caltime_now
  7017  0111B8  0101               	movlb	1	; () banked
  7018  0111BA  6F0B               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  7019  0111BC  0EB5               	movlw	low _epoch_now
  7020  0111BE  0101               	movlb	1	; () banked
  7021  0111C0  6F0C               	movwf	RTCC_from_epoch@ep& (0+255),b
  7022  0111C2  0E00               	movlw	high _epoch_now
  7023  0111C4  0101               	movlb	1	; () banked
  7024  0111C6  6F0D               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  7025  0111C8  EC23  F099         	call	_RTCC_from_epoch	;wreg free
  7026                           
  7027                           ;My_header\My_RTCC.h: 332: time_change_flag = 1;
  7028  0111CC  0E01               	movlw	1
  7029  0111CE  6E3A               	movwf	_time_change_flag,c
  7030  0111D0  0012               	return		;funcret
  7031  0111D2                     __end_of_RTCC_time_set_inc:
  7032                           	opt stack 0
  7033                           tblptru	equ	0xFF8
  7034                           tblptrh	equ	0xFF7
  7035                           tblptrl	equ	0xFF6
  7036                           tablat	equ	0xFF5
  7037                           prodh	equ	0xFF4
  7038                           prodl	equ	0xFF3
  7039                           intcon	equ	0xFF2
  7040                           postinc0	equ	0xFEE
  7041                           wreg	equ	0xFE8
  7042                           indf1	equ	0xFE7
  7043                           postdec1	equ	0xFE5
  7044                           fsr1h	equ	0xFE2
  7045                           fsr1l	equ	0xFE1
  7046                           indf2	equ	0xFDF
  7047                           postinc2	equ	0xFDE
  7048                           postdec2	equ	0xFDD
  7049                           plusw2	equ	0xFDB
  7050                           fsr2h	equ	0xFDA
  7051                           fsr2l	equ	0xFD9
  7052                           status	equ	0xFD8
  7053                           
  7054 ;; *************** function _RTCC_time_set_dec *****************
  7055 ;; Defined at:
  7056 ;;		line 335 in file "../My_header\My_RTCC.h"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;  ct              2   14[BANK1 ] PTR struct .
  7059 ;;		 -> caltime_now(7), 
  7060 ;;  ep              2   16[BANK1 ] PTR unsigned long 
  7061 ;;		 -> epoch_now(4), 
  7062 ;; Auto vars:     Size  Location     Type
  7063 ;;  i               1   22[BANK1 ] unsigned char 
  7064 ;;  i               1   23[BANK1 ] unsigned char 
  7065 ;; Return value:  Size  Location     Type
  7066 ;;		None               void
  7067 ;; Registers used:
  7068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7069 ;; Tracked objects:
  7070 ;;		On entry : 0/0
  7071 ;;		On exit  : 0/0
  7072 ;;		Unchanged: 0/0
  7073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7074 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7075 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7076 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7077 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7078 ;;Total ram usage:       10 bytes
  7079 ;; Hardware stack levels used:    1
  7080 ;; Hardware stack levels required when called:    8
  7081 ;; This function calls:
  7082 ;;		_RTCC_from_RTCC
  7083 ;;		_RTCC_from_epoch
  7084 ;;		___lmul
  7085 ;;		_month_length
  7086 ;; This function is called by:
  7087 ;;		_RTCC_time_set
  7088 ;; This function uses a non-reentrant model
  7089 ;;
  7090                           
  7091                           	psect	text25
  7092  010CE6                     __ptext25:
  7093                           	opt stack 0
  7094  010CE6                     _RTCC_time_set_dec:
  7095                           	opt stack 20
  7096                           
  7097                           ;My_header\My_RTCC.h: 336: RTCC_from_RTCC(ct, ep);
  7098                           
  7099                           ;incstack = 0
  7100  010CE6  C10E  F100         	movff	RTCC_time_set_dec@ct,RTCC_from_RTCC@ct
  7101  010CEA  C10F  F101         	movff	RTCC_time_set_dec@ct+1,RTCC_from_RTCC@ct+1
  7102  010CEE  C110  F102         	movff	RTCC_time_set_dec@ep,RTCC_from_RTCC@ep
  7103  010CF2  C111  F103         	movff	RTCC_time_set_dec@ep+1,RTCC_from_RTCC@ep+1
  7104  010CF6  EC34  F099         	call	_RTCC_from_RTCC	;wreg free
  7105                           
  7106                           ;My_header\My_RTCC.h: 337: if (edit_flag.flag.ss) *ep -= 1;
  7107  010CFA  0100               	movlb	0	; () banked
  7108  010CFC  A19A               	btfss	_edit_flag& (0+255),0,b
  7109  010CFE  D00A               	goto	l5407
  7110                           
  7111                           ; BSR set to: 0
  7112  010D00  C110  FFD9         	movff	RTCC_time_set_dec@ep,fsr2l
  7113  010D04  C111  FFDA         	movff	RTCC_time_set_dec@ep+1,fsr2h
  7114  010D08  06DE               	decf	postinc2,f,c
  7115  010D0A  0E00               	movlw	0
  7116  010D0C  5ADE               	subwfb	postinc2,f,c
  7117  010D0E  5ADE               	subwfb	postinc2,f,c
  7118  010D10  5ADE               	subwfb	postinc2,f,c
  7119  010D12  D000               	goto	l5407
  7120  010D14                     l5407:
  7121                           
  7122                           ; BSR set to: 0
  7123                           ;My_header\My_RTCC.h: 338: if (edit_flag.flag.mm) *ep -= ((epoch_t)60);
  7124  010D14  0100               	movlb	0	; () banked
  7125  010D16  A39A               	btfss	_edit_flag& (0+255),1,b
  7126  010D18  D00B               	goto	l5411
  7127                           
  7128                           ; BSR set to: 0
  7129  010D1A  0E3C               	movlw	60
  7130  010D1C  C110  FFD9         	movff	RTCC_time_set_dec@ep,fsr2l
  7131  010D20  C111  FFDA         	movff	RTCC_time_set_dec@ep+1,fsr2h
  7132  010D24  5EDE               	subwf	postinc2,f,c
  7133  010D26  0E00               	movlw	0
  7134  010D28  5ADE               	subwfb	postinc2,f,c
  7135  010D2A  5ADE               	subwfb	postinc2,f,c
  7136  010D2C  5ADE               	subwfb	postinc2,f,c
  7137  010D2E  D000               	goto	l5411
  7138  010D30                     l5411:
  7139                           
  7140                           ; BSR set to: 0
  7141                           ;My_header\My_RTCC.h: 339: if (edit_flag.flag.hh) *ep -= ((epoch_t)60*60);
  7142  010D30  0100               	movlb	0	; () banked
  7143  010D32  A59A               	btfss	_edit_flag& (0+255),2,b
  7144  010D34  D00D               	goto	l5415
  7145                           
  7146                           ; BSR set to: 0
  7147  010D36  C110  FFD9         	movff	RTCC_time_set_dec@ep,fsr2l
  7148  010D3A  C111  FFDA         	movff	RTCC_time_set_dec@ep+1,fsr2h
  7149  010D3E  0E10               	movlw	16
  7150  010D40  5EDE               	subwf	postinc2,f,c
  7151  010D42  0E0E               	movlw	14
  7152  010D44  5ADE               	subwfb	postinc2,f,c
  7153  010D46  0E00               	movlw	0
  7154  010D48  5ADE               	subwfb	postinc2,f,c
  7155  010D4A  0E00               	movlw	0
  7156  010D4C  5ADE               	subwfb	postinc2,f,c
  7157  010D4E  D000               	goto	l5415
  7158  010D50                     l5415:
  7159                           
  7160                           ; BSR set to: 0
  7161                           ;My_header\My_RTCC.h: 340: if (edit_flag.flag.DD) *ep -= ((epoch_t)60*60*24);
  7162  010D50  0100               	movlb	0	; () banked
  7163  010D52  A79A               	btfss	_edit_flag& (0+255),3,b
  7164  010D54  D00D               	goto	l5419
  7165                           
  7166                           ; BSR set to: 0
  7167  010D56  C110  FFD9         	movff	RTCC_time_set_dec@ep,fsr2l
  7168  010D5A  C111  FFDA         	movff	RTCC_time_set_dec@ep+1,fsr2h
  7169  010D5E  0E80               	movlw	128
  7170  010D60  5EDE               	subwf	postinc2,f,c
  7171  010D62  0E51               	movlw	81
  7172  010D64  5ADE               	subwfb	postinc2,f,c
  7173  010D66  0E01               	movlw	1
  7174  010D68  5ADE               	subwfb	postinc2,f,c
  7175  010D6A  0E00               	movlw	0
  7176  010D6C  5ADE               	subwfb	postinc2,f,c
  7177  010D6E  D000               	goto	l5419
  7178  010D70                     l5419:
  7179                           
  7180                           ; BSR set to: 0
  7181                           ;My_header\My_RTCC.h: 341: if (edit_flag.flag.MM) *ep -= ((epoch_t)60*60*24) * month_len
      +                          gth(ct->YY, ct->MM);
  7182  010D70  0100               	movlb	0	; () banked
  7183  010D72  A99A               	btfss	_edit_flag& (0+255),4,b
  7184  010D74  D038               	goto	l5423
  7185                           
  7186                           ; BSR set to: 0
  7187  010D76  0101               	movlb	1	; () banked
  7188  010D78  EE20 F005          	lfsr	2,5
  7189  010D7C  510E               	movf	RTCC_time_set_dec@ct& (0+255),w,b
  7190  010D7E  26D9               	addwf	fsr2l,f,c
  7191  010D80  510F               	movf	(RTCC_time_set_dec@ct+1)& (0+255),w,b
  7192  010D82  22DA               	addwfc	fsr2h,f,c
  7193  010D84  50DF               	movf	indf2,w,c
  7194  010D86  6E22               	movwf	month_length@month,c
  7195  010D88  0101               	movlb	1	; () banked
  7196  010D8A  EE20 F006          	lfsr	2,6
  7197  010D8E  510E               	movf	RTCC_time_set_dec@ct& (0+255),w,b
  7198  010D90  26D9               	addwf	fsr2l,f,c
  7199  010D92  510F               	movf	(RTCC_time_set_dec@ct+1)& (0+255),w,b
  7200  010D94  22DA               	addwfc	fsr2h,f,c
  7201  010D96  50DF               	movf	indf2,w,c
  7202  010D98  EC7E  F08D         	call	_month_length
  7203  010D9C  0101               	movlb	1	; () banked
  7204  010D9E  6F12               	movwf	??_RTCC_time_set_dec& (0+255),b
  7205  010DA0  0101               	movlb	1	; () banked
  7206  010DA2  5112               	movf	??_RTCC_time_set_dec& (0+255),w,b
  7207  010DA4  0100               	movlb	0	; () banked
  7208  010DA6  6FC6               	movwf	___lmul@multiplier& (0+255),b
  7209  010DA8  6BC7               	clrf	(___lmul@multiplier+1)& (0+255),b
  7210  010DAA  6BC8               	clrf	(___lmul@multiplier+2)& (0+255),b
  7211  010DAC  6BC9               	clrf	(___lmul@multiplier+3)& (0+255),b
  7212  010DAE  0E80               	movlw	128
  7213  010DB0  0100               	movlb	0	; () banked
  7214  010DB2  6FCA               	movwf	___lmul@multiplicand& (0+255),b
  7215  010DB4  0E51               	movlw	81
  7216  010DB6  6FCB               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7217  010DB8  0E01               	movlw	1
  7218  010DBA  6FCC               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7219  010DBC  0E00               	movlw	0
  7220  010DBE  6FCD               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7221  010DC0  ECF2  F094         	call	___lmul	;wreg free
  7222  010DC4  C110  FFD9         	movff	RTCC_time_set_dec@ep,fsr2l
  7223  010DC8  C111  FFDA         	movff	RTCC_time_set_dec@ep+1,fsr2h
  7224  010DCC  0100               	movlb	0	; () banked
  7225  010DCE  51C6               	movf	?___lmul& (0+255),w,b
  7226  010DD0  5EDE               	subwf	postinc2,f,c
  7227  010DD2  0100               	movlb	0	; () banked
  7228  010DD4  51C7               	movf	(?___lmul+1)& (0+255),w,b
  7229  010DD6  5ADE               	subwfb	postinc2,f,c
  7230  010DD8  0100               	movlb	0	; () banked
  7231  010DDA  51C8               	movf	(?___lmul+2)& (0+255),w,b
  7232  010DDC  5ADE               	subwfb	postinc2,f,c
  7233  010DDE  0100               	movlb	0	; () banked
  7234  010DE0  51C9               	movf	(?___lmul+3)& (0+255),w,b
  7235  010DE2  5ADE               	subwfb	postinc2,f,c
  7236  010DE4  D000               	goto	l5423
  7237  010DE6                     l5423:
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;My_header\My_RTCC.h: 342: if (edit_flag.flag.YY) {
  7241  010DE6  0100               	movlb	0	; () banked
  7242  010DE8  AB9A               	btfss	_edit_flag& (0+255),5,b
  7243  010DEA  D08D               	goto	l5445
  7244                           
  7245                           ; BSR set to: 0
  7246                           ;My_header\My_RTCC.h: 343: for (uint8_t i = ct->MM; i >= 1; i--) {
  7247  010DEC  0101               	movlb	1	; () banked
  7248  010DEE  EE20 F005          	lfsr	2,5
  7249  010DF2  510E               	movf	RTCC_time_set_dec@ct& (0+255),w,b
  7250  010DF4  26D9               	addwf	fsr2l,f,c
  7251  010DF6  510F               	movf	(RTCC_time_set_dec@ct+1)& (0+255),w,b
  7252  010DF8  22DA               	addwfc	fsr2h,f,c
  7253  010DFA  50DF               	movf	indf2,w,c
  7254  010DFC  0101               	movlb	1	; () banked
  7255  010DFE  6F17               	movwf	RTCC_time_set_dec@i& (0+255),b
  7256  010E00                     l5427:
  7257                           
  7258                           ; BSR set to: 1
  7259  010E00  0101               	movlb	1	; () banked
  7260  010E02  5117               	movf	RTCC_time_set_dec@i& (0+255),w,b
  7261  010E04  0101               	movlb	1	; () banked
  7262  010E06  B4D8               	btfsc	status,2,c
  7263  010E08  D035               	goto	l5437
  7264  010E0A  D001               	goto	l5431
  7265                           
  7266                           ; BSR set to: 1
  7267  010E0C  D033               	goto	l5437
  7268  010E0E                     l5431:
  7269                           
  7270                           ; BSR set to: 1
  7271                           ;My_header\My_RTCC.h: 344: *ep -= ((epoch_t)60*60*24) * month_length(ct->YY, i);
  7272  010E0E  C117  F022         	movff	RTCC_time_set_dec@i,month_length@month
  7273  010E12  0101               	movlb	1	; () banked
  7274  010E14  EE20 F006          	lfsr	2,6
  7275  010E18  510E               	movf	RTCC_time_set_dec@ct& (0+255),w,b
  7276  010E1A  26D9               	addwf	fsr2l,f,c
  7277  010E1C  510F               	movf	(RTCC_time_set_dec@ct+1)& (0+255),w,b
  7278  010E1E  22DA               	addwfc	fsr2h,f,c
  7279  010E20  50DF               	movf	indf2,w,c
  7280  010E22  EC7E  F08D         	call	_month_length
  7281  010E26  0101               	movlb	1	; () banked
  7282  010E28  6F12               	movwf	??_RTCC_time_set_dec& (0+255),b
  7283  010E2A  0101               	movlb	1	; () banked
  7284  010E2C  5112               	movf	??_RTCC_time_set_dec& (0+255),w,b
  7285  010E2E  0100               	movlb	0	; () banked
  7286  010E30  6FC6               	movwf	___lmul@multiplier& (0+255),b
  7287  010E32  6BC7               	clrf	(___lmul@multiplier+1)& (0+255),b
  7288  010E34  6BC8               	clrf	(___lmul@multiplier+2)& (0+255),b
  7289  010E36  6BC9               	clrf	(___lmul@multiplier+3)& (0+255),b
  7290  010E38  0E80               	movlw	128
  7291  010E3A  0100               	movlb	0	; () banked
  7292  010E3C  6FCA               	movwf	___lmul@multiplicand& (0+255),b
  7293  010E3E  0E51               	movlw	81
  7294  010E40  6FCB               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7295  010E42  0E01               	movlw	1
  7296  010E44  6FCC               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7297  010E46  0E00               	movlw	0
  7298  010E48  6FCD               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7299  010E4A  ECF2  F094         	call	___lmul	;wreg free
  7300  010E4E  C110  FFD9         	movff	RTCC_time_set_dec@ep,fsr2l
  7301  010E52  C111  FFDA         	movff	RTCC_time_set_dec@ep+1,fsr2h
  7302  010E56  0100               	movlb	0	; () banked
  7303  010E58  51C6               	movf	?___lmul& (0+255),w,b
  7304  010E5A  5EDE               	subwf	postinc2,f,c
  7305  010E5C  0100               	movlb	0	; () banked
  7306  010E5E  51C7               	movf	(?___lmul+1)& (0+255),w,b
  7307  010E60  5ADE               	subwfb	postinc2,f,c
  7308  010E62  0100               	movlb	0	; () banked
  7309  010E64  51C8               	movf	(?___lmul+2)& (0+255),w,b
  7310  010E66  5ADE               	subwfb	postinc2,f,c
  7311  010E68  0100               	movlb	0	; () banked
  7312  010E6A  51C9               	movf	(?___lmul+3)& (0+255),w,b
  7313  010E6C  5ADE               	subwfb	postinc2,f,c
  7314                           
  7315                           ; BSR set to: 0
  7316  010E6E  0101               	movlb	1	; () banked
  7317  010E70  0717               	decf	RTCC_time_set_dec@i& (0+255),f,b
  7318  010E72  D7C6               	goto	l5427
  7319  010E74                     l5437:
  7320                           
  7321                           ; BSR set to: 1
  7322                           ;My_header\My_RTCC.h: 345: }
  7323                           ;My_header\My_RTCC.h: 346: for (uint8_t i = 12; i > ct->MM; i--) {
  7324  010E74  0E0C               	movlw	12
  7325  010E76  0101               	movlb	1	; () banked
  7326  010E78  6F16               	movwf	RTCC_time_set_dec@i_2077& (0+255),b
  7327  010E7A  D037               	goto	l5443
  7328  010E7C                     l5439:
  7329                           
  7330                           ; BSR set to: 1
  7331                           ;My_header\My_RTCC.h: 347: *ep -= ((epoch_t)60*60*24) * month_length(ct->YY - 1, i);
  7332  010E7C  C116  F022         	movff	RTCC_time_set_dec@i_2077,month_length@month
  7333  010E80  0101               	movlb	1	; () banked
  7334  010E82  EE20 F006          	lfsr	2,6
  7335  010E86  510E               	movf	RTCC_time_set_dec@ct& (0+255),w,b
  7336  010E88  26D9               	addwf	fsr2l,f,c
  7337  010E8A  510F               	movf	(RTCC_time_set_dec@ct+1)& (0+255),w,b
  7338  010E8C  22DA               	addwfc	fsr2h,f,c
  7339  010E8E  50DF               	movf	indf2,w,c
  7340  010E90  0101               	movlb	1	; () banked
  7341  010E92  6F12               	movwf	??_RTCC_time_set_dec& (0+255),b
  7342  010E94  0101               	movlb	1	; () banked
  7343  010E96  0512               	decf	??_RTCC_time_set_dec& (0+255),w,b
  7344  010E98  EC7E  F08D         	call	_month_length
  7345  010E9C  0101               	movlb	1	; () banked
  7346  010E9E  6F13               	movwf	(??_RTCC_time_set_dec+1)& (0+255),b
  7347  010EA0  0101               	movlb	1	; () banked
  7348  010EA2  5113               	movf	(??_RTCC_time_set_dec+1)& (0+255),w,b
  7349  010EA4  0100               	movlb	0	; () banked
  7350  010EA6  6FC6               	movwf	___lmul@multiplier& (0+255),b
  7351  010EA8  6BC7               	clrf	(___lmul@multiplier+1)& (0+255),b
  7352  010EAA  6BC8               	clrf	(___lmul@multiplier+2)& (0+255),b
  7353  010EAC  6BC9               	clrf	(___lmul@multiplier+3)& (0+255),b
  7354  010EAE  0E80               	movlw	128
  7355  010EB0  0100               	movlb	0	; () banked
  7356  010EB2  6FCA               	movwf	___lmul@multiplicand& (0+255),b
  7357  010EB4  0E51               	movlw	81
  7358  010EB6  6FCB               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7359  010EB8  0E01               	movlw	1
  7360  010EBA  6FCC               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7361  010EBC  0E00               	movlw	0
  7362  010EBE  6FCD               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7363  010EC0  ECF2  F094         	call	___lmul	;wreg free
  7364  010EC4  C110  FFD9         	movff	RTCC_time_set_dec@ep,fsr2l
  7365  010EC8  C111  FFDA         	movff	RTCC_time_set_dec@ep+1,fsr2h
  7366  010ECC  0100               	movlb	0	; () banked
  7367  010ECE  51C6               	movf	?___lmul& (0+255),w,b
  7368  010ED0  5EDE               	subwf	postinc2,f,c
  7369  010ED2  0100               	movlb	0	; () banked
  7370  010ED4  51C7               	movf	(?___lmul+1)& (0+255),w,b
  7371  010ED6  5ADE               	subwfb	postinc2,f,c
  7372  010ED8  0100               	movlb	0	; () banked
  7373  010EDA  51C8               	movf	(?___lmul+2)& (0+255),w,b
  7374  010EDC  5ADE               	subwfb	postinc2,f,c
  7375  010EDE  0100               	movlb	0	; () banked
  7376  010EE0  51C9               	movf	(?___lmul+3)& (0+255),w,b
  7377  010EE2  5ADE               	subwfb	postinc2,f,c
  7378                           
  7379                           ; BSR set to: 0
  7380  010EE4  0101               	movlb	1	; () banked
  7381  010EE6  0716               	decf	RTCC_time_set_dec@i_2077& (0+255),f,b
  7382  010EE8  D000               	goto	l5443
  7383  010EEA                     l5443:
  7384                           
  7385                           ; BSR set to: 1
  7386  010EEA  0101               	movlb	1	; () banked
  7387  010EEC  EE20 F005          	lfsr	2,5
  7388  010EF0  510E               	movf	RTCC_time_set_dec@ct& (0+255),w,b
  7389  010EF2  26D9               	addwf	fsr2l,f,c
  7390  010EF4  510F               	movf	(RTCC_time_set_dec@ct+1)& (0+255),w,b
  7391  010EF6  22DA               	addwfc	fsr2h,f,c
  7392  010EF8  0101               	movlb	1	; () banked
  7393  010EFA  5116               	movf	RTCC_time_set_dec@i_2077& (0+255),w,b
  7394  010EFC  5CDE               	subwf	postinc2,w,c
  7395  010EFE  B0D8               	btfsc	status,0,c
  7396  010F00  D002               	goto	l5445
  7397  010F02  D7BC               	goto	l5439
  7398                           
  7399                           ; BSR set to: 1
  7400  010F04  D000               	goto	l5445
  7401  010F06                     l5445:
  7402                           
  7403                           ;My_header\My_RTCC.h: 348: }
  7404                           ;My_header\My_RTCC.h: 349: }
  7405                           ;My_header\My_RTCC.h: 351: if (*ep >= 3155760000)*ep += 3155760000;
  7406  010F06  C110  FFD9         	movff	RTCC_time_set_dec@ep,fsr2l
  7407  010F0A  C111  FFDA         	movff	RTCC_time_set_dec@ep+1,fsr2h
  7408  010F0E  0E80               	movlw	128
  7409  010F10  5CDE               	subwf	postinc2,w,c
  7410  010F12  0E13               	movlw	19
  7411  010F14  58DE               	subwfb	postinc2,w,c
  7412  010F16  0E19               	movlw	25
  7413  010F18  58DE               	subwfb	postinc2,w,c
  7414  010F1A  0EBC               	movlw	188
  7415  010F1C  58DE               	subwfb	postinc2,w,c
  7416  010F1E  A0D8               	btfss	status,0,c
  7417  010F20  D00D               	goto	l5449
  7418  010F22  C110  FFD9         	movff	RTCC_time_set_dec@ep,fsr2l
  7419  010F26  C111  FFDA         	movff	RTCC_time_set_dec@ep+1,fsr2h
  7420  010F2A  0E80               	movlw	128
  7421  010F2C  26DE               	addwf	postinc2,f,c
  7422  010F2E  0E13               	movlw	19
  7423  010F30  22DE               	addwfc	postinc2,f,c
  7424  010F32  0E19               	movlw	25
  7425  010F34  22DE               	addwfc	postinc2,f,c
  7426  010F36  0EBC               	movlw	188
  7427  010F38  22DE               	addwfc	postinc2,f,c
  7428  010F3A  D000               	goto	l5449
  7429  010F3C                     l5449:
  7430                           
  7431                           ;My_header\My_RTCC.h: 352: RTCC_from_epoch(&caltime_now, &epoch_now);
  7432  010F3C  0E9E               	movlw	low _caltime_now
  7433  010F3E  0101               	movlb	1	; () banked
  7434  010F40  6F0A               	movwf	RTCC_from_epoch@ct& (0+255),b
  7435  010F42  0E00               	movlw	high _caltime_now
  7436  010F44  0101               	movlb	1	; () banked
  7437  010F46  6F0B               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  7438  010F48  0EB5               	movlw	low _epoch_now
  7439  010F4A  0101               	movlb	1	; () banked
  7440  010F4C  6F0C               	movwf	RTCC_from_epoch@ep& (0+255),b
  7441  010F4E  0E00               	movlw	high _epoch_now
  7442  010F50  0101               	movlb	1	; () banked
  7443  010F52  6F0D               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  7444  010F54  EC23  F099         	call	_RTCC_from_epoch	;wreg free
  7445                           
  7446                           ;My_header\My_RTCC.h: 353: time_change_flag = 1;
  7447  010F58  0E01               	movlw	1
  7448  010F5A  6E3A               	movwf	_time_change_flag,c
  7449  010F5C  0012               	return		;funcret
  7450  010F5E                     __end_of_RTCC_time_set_dec:
  7451                           	opt stack 0
  7452                           tblptru	equ	0xFF8
  7453                           tblptrh	equ	0xFF7
  7454                           tblptrl	equ	0xFF6
  7455                           tablat	equ	0xFF5
  7456                           prodh	equ	0xFF4
  7457                           prodl	equ	0xFF3
  7458                           intcon	equ	0xFF2
  7459                           postinc0	equ	0xFEE
  7460                           wreg	equ	0xFE8
  7461                           indf1	equ	0xFE7
  7462                           postdec1	equ	0xFE5
  7463                           fsr1h	equ	0xFE2
  7464                           fsr1l	equ	0xFE1
  7465                           indf2	equ	0xFDF
  7466                           postinc2	equ	0xFDE
  7467                           postdec2	equ	0xFDD
  7468                           plusw2	equ	0xFDB
  7469                           fsr2h	equ	0xFDA
  7470                           fsr2l	equ	0xFD9
  7471                           status	equ	0xFD8
  7472                           
  7473 ;; *************** function _RTCC_from_epoch *****************
  7474 ;; Defined at:
  7475 ;;		line 237 in file "../My_header\My_RTCC.h"
  7476 ;; Parameters:    Size  Location     Type
  7477 ;;  ct              2   10[BANK1 ] PTR struct .
  7478 ;;		 -> caltime_now(7), 
  7479 ;;  ep              2   12[BANK1 ] PTR unsigned long 
  7480 ;;		 -> epoch_now(4), 
  7481 ;; Auto vars:     Size  Location     Type
  7482 ;;		None
  7483 ;; Return value:  Size  Location     Type
  7484 ;;		None               void
  7485 ;; Registers used:
  7486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7487 ;; Tracked objects:
  7488 ;;		On entry : 0/0
  7489 ;;		On exit  : 0/0
  7490 ;;		Unchanged: 0/0
  7491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7492 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7495 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7496 ;;Total ram usage:        4 bytes
  7497 ;; Hardware stack levels used:    1
  7498 ;; Hardware stack levels required when called:    7
  7499 ;; This function calls:
  7500 ;;		_caltime_to_RTCC
  7501 ;;		_epoch_to_caltime
  7502 ;; This function is called by:
  7503 ;;		_RTCC_time_set_inc
  7504 ;;		_RTCC_time_set_dec
  7505 ;;		_main
  7506 ;; This function uses a non-reentrant model
  7507 ;;
  7508                           
  7509                           	psect	text26
  7510  013246                     __ptext26:
  7511                           	opt stack 0
  7512  013246                     _RTCC_from_epoch:
  7513                           	opt stack 20
  7514                           
  7515                           ;My_header\My_RTCC.h: 238: epoch_to_caltime(ct, ep);
  7516                           
  7517                           ;incstack = 0
  7518  013246  C10A  F0DA         	movff	RTCC_from_epoch@ct,epoch_to_caltime@ct
  7519  01324A  C10B  F0DB         	movff	RTCC_from_epoch@ct+1,epoch_to_caltime@ct+1
  7520  01324E  C10C  F0DC         	movff	RTCC_from_epoch@ep,epoch_to_caltime@ep
  7521  013252  C10D  F0DD         	movff	RTCC_from_epoch@ep+1,epoch_to_caltime@ep+1
  7522  013256  ECE9  F088         	call	_epoch_to_caltime	;wreg free
  7523                           
  7524                           ;My_header\My_RTCC.h: 239: caltime_to_RTCC(ct);
  7525  01325A  C10A  F021         	movff	RTCC_from_epoch@ct,caltime_to_RTCC@ct
  7526  01325E  C10B  F022         	movff	RTCC_from_epoch@ct+1,caltime_to_RTCC@ct+1
  7527  013262  EC58  F090         	call	_caltime_to_RTCC	;wreg free
  7528  013266  0012               	return		;funcret
  7529  013268                     __end_of_RTCC_from_epoch:
  7530                           	opt stack 0
  7531                           tblptru	equ	0xFF8
  7532                           tblptrh	equ	0xFF7
  7533                           tblptrl	equ	0xFF6
  7534                           tablat	equ	0xFF5
  7535                           prodh	equ	0xFF4
  7536                           prodl	equ	0xFF3
  7537                           intcon	equ	0xFF2
  7538                           postinc0	equ	0xFEE
  7539                           wreg	equ	0xFE8
  7540                           indf1	equ	0xFE7
  7541                           postdec1	equ	0xFE5
  7542                           fsr1h	equ	0xFE2
  7543                           fsr1l	equ	0xFE1
  7544                           indf2	equ	0xFDF
  7545                           postinc2	equ	0xFDE
  7546                           postdec2	equ	0xFDD
  7547                           plusw2	equ	0xFDB
  7548                           fsr2h	equ	0xFDA
  7549                           fsr2l	equ	0xFD9
  7550                           status	equ	0xFD8
  7551                           
  7552 ;; *************** function _epoch_to_caltime *****************
  7553 ;; Defined at:
  7554 ;;		line 154 in file "../My_header\My_RTCC.h"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;  ct              2   33[BANK0 ] PTR struct .
  7557 ;;		 -> caltime_now(7), 
  7558 ;;  ep              2   35[BANK0 ] PTR unsigned long 
  7559 ;;		 -> epoch_now(4), 
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;  num             4    6[BANK1 ] unsigned long 
  7562 ;;  day             2    2[BANK1 ] unsigned int 
  7563 ;;  day_since_ep    2    0[BANK1 ] unsigned int 
  7564 ;;  month           1    5[BANK1 ] unsigned char 
  7565 ;;  year            1    4[BANK1 ] unsigned char 
  7566 ;; Return value:  Size  Location     Type
  7567 ;;		None               void
  7568 ;; Registers used:
  7569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7570 ;; Tracked objects:
  7571 ;;		On entry : 0/0
  7572 ;;		On exit  : 0/0
  7573 ;;		Unchanged: 0/0
  7574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7575 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7576 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7577 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7578 ;;      Totals:         0       6      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7579 ;;Total ram usage:       16 bytes
  7580 ;; Hardware stack levels used:    1
  7581 ;; Hardware stack levels required when called:    6
  7582 ;; This function calls:
  7583 ;;		_get_quot_rem
  7584 ;;		_month_length
  7585 ;; This function is called by:
  7586 ;;		_RTCC_from_epoch
  7587 ;;		_RTCC_from_caltime
  7588 ;; This function uses a non-reentrant model
  7589 ;;
  7590                           
  7591                           	psect	text27
  7592  0111D2                     __ptext27:
  7593                           	opt stack 0
  7594  0111D2                     _epoch_to_caltime:
  7595                           	opt stack 20
  7596                           
  7597                           ;My_header\My_RTCC.h: 157: static uint16_t day_cache = 0;
  7598                           ;My_header\My_RTCC.h: 158: static uint8_t month_cache = 1;
  7599                           ;My_header\My_RTCC.h: 159: static uint8_t year_cache = 0;
  7600                           ;My_header\My_RTCC.h: 160: uint16_t day_since_epoch;
  7601                           ;My_header\My_RTCC.h: 161: uint16_t day;
  7602                           ;My_header\My_RTCC.h: 162: uint8_t year = 0;
  7603                           
  7604                           ;incstack = 0
  7605  0111D2  0E00               	movlw	0
  7606  0111D4  0101               	movlb	1	; () banked
  7607  0111D6  6F04               	movwf	epoch_to_caltime@year& (0+255),b
  7608                           
  7609                           ;My_header\My_RTCC.h: 163: uint8_t month = 1;
  7610  0111D8  0E01               	movlw	1
  7611  0111DA  0101               	movlb	1	; () banked
  7612  0111DC  6F05               	movwf	epoch_to_caltime@month& (0+255),b
  7613                           
  7614                           ; BSR set to: 1
  7615                           ;My_header\My_RTCC.h: 164: epoch_t num;
  7616                           ;My_header\My_RTCC.h: 166: num = *ep;
  7617  0111DE  C0DC  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  7618  0111E2  C0DD  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  7619  0111E6  CFDE F106          	movff	postinc2,epoch_to_caltime@num
  7620  0111EA  CFDE F107          	movff	postinc2,epoch_to_caltime@num+1
  7621  0111EE  CFDE F108          	movff	postinc2,epoch_to_caltime@num+2
  7622  0111F2  CFDE F109          	movff	postinc2,epoch_to_caltime@num+3
  7623                           
  7624                           ; BSR set to: 1
  7625                           ;My_header\My_RTCC.h: 167: ct->ss = get_quot_rem(&num, 60);
  7626  0111F6  0E06               	movlw	low epoch_to_caltime@num
  7627  0111F8  0100               	movlb	0	; () banked
  7628  0111FA  6FD2               	movwf	get_quot_rem@quot& (0+255),b
  7629  0111FC  0E01               	movlw	high epoch_to_caltime@num
  7630  0111FE  0100               	movlb	0	; () banked
  7631  011200  6FD3               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7632  011202  0E3C               	movlw	60
  7633  011204  0100               	movlb	0	; () banked
  7634  011206  6FD4               	movwf	get_quot_rem@div& (0+255),b
  7635  011208  ECEB  F08D         	call	_get_quot_rem	;wreg free
  7636  01120C  0100               	movlb	0	; () banked
  7637  01120E  51D2               	movf	?_get_quot_rem& (0+255),w,b
  7638  011210  C0DA  FFD9         	movff	epoch_to_caltime@ct,fsr2l
  7639  011214  C0DB  FFDA         	movff	epoch_to_caltime@ct+1,fsr2h
  7640  011218  6EDF               	movwf	indf2,c
  7641                           
  7642                           ; BSR set to: 0
  7643                           ;My_header\My_RTCC.h: 168: ct->mm = get_quot_rem(&num, 60);
  7644  01121A  0E06               	movlw	low epoch_to_caltime@num
  7645  01121C  0100               	movlb	0	; () banked
  7646  01121E  6FD2               	movwf	get_quot_rem@quot& (0+255),b
  7647  011220  0E01               	movlw	high epoch_to_caltime@num
  7648  011222  0100               	movlb	0	; () banked
  7649  011224  6FD3               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7650  011226  0E3C               	movlw	60
  7651  011228  0100               	movlb	0	; () banked
  7652  01122A  6FD4               	movwf	get_quot_rem@div& (0+255),b
  7653  01122C  ECEB  F08D         	call	_get_quot_rem	;wreg free
  7654  011230  0100               	movlb	0	; () banked
  7655  011232  EE20 F001          	lfsr	2,1
  7656  011236  51DA               	movf	epoch_to_caltime@ct& (0+255),w,b
  7657  011238  26D9               	addwf	fsr2l,f,c
  7658  01123A  51DB               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7659  01123C  22DA               	addwfc	fsr2h,f,c
  7660  01123E  0100               	movlb	0	; () banked
  7661  011240  C0D2  FFDF         	movff	?_get_quot_rem,indf2
  7662                           
  7663                           ; BSR set to: 0
  7664                           ;My_header\My_RTCC.h: 169: ct->hh = get_quot_rem(&num, 24);
  7665  011244  0E06               	movlw	low epoch_to_caltime@num
  7666  011246  0100               	movlb	0	; () banked
  7667  011248  6FD2               	movwf	get_quot_rem@quot& (0+255),b
  7668  01124A  0E01               	movlw	high epoch_to_caltime@num
  7669  01124C  0100               	movlb	0	; () banked
  7670  01124E  6FD3               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7671  011250  0E18               	movlw	24
  7672  011252  0100               	movlb	0	; () banked
  7673  011254  6FD4               	movwf	get_quot_rem@div& (0+255),b
  7674  011256  ECEB  F08D         	call	_get_quot_rem	;wreg free
  7675  01125A  0100               	movlb	0	; () banked
  7676  01125C  EE20 F002          	lfsr	2,2
  7677  011260  51DA               	movf	epoch_to_caltime@ct& (0+255),w,b
  7678  011262  26D9               	addwf	fsr2l,f,c
  7679  011264  51DB               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7680  011266  22DA               	addwfc	fsr2h,f,c
  7681  011268  0100               	movlb	0	; () banked
  7682  01126A  C0D2  FFDF         	movff	?_get_quot_rem,indf2
  7683                           
  7684                           ; BSR set to: 0
  7685                           ;My_header\My_RTCC.h: 170: day = num;
  7686  01126E  C106  F102         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  7687  011272  C107  F103         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  7688                           
  7689                           ; BSR set to: 0
  7690                           ;My_header\My_RTCC.h: 171: day_since_epoch = day;
  7691  011276  C102  F100         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  7692  01127A  C103  F101         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  7693                           
  7694                           ; BSR set to: 0
  7695                           ;My_header\My_RTCC.h: 173: num += 6;
  7696  01127E  0E06               	movlw	6
  7697  011280  0101               	movlb	1	; () banked
  7698  011282  2706               	addwf	epoch_to_caltime@num& (0+255),f,b
  7699  011284  0E00               	movlw	0
  7700  011286  2307               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  7701  011288  2308               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  7702  01128A  2309               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  7703                           
  7704                           ; BSR set to: 1
  7705                           ;My_header\My_RTCC.h: 174: ct->EE = get_quot_rem(&num, 7);
  7706  01128C  0E06               	movlw	low epoch_to_caltime@num
  7707  01128E  0100               	movlb	0	; () banked
  7708  011290  6FD2               	movwf	get_quot_rem@quot& (0+255),b
  7709  011292  0E01               	movlw	high epoch_to_caltime@num
  7710  011294  0100               	movlb	0	; () banked
  7711  011296  6FD3               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7712  011298  0E07               	movlw	7
  7713  01129A  0100               	movlb	0	; () banked
  7714  01129C  6FD4               	movwf	get_quot_rem@div& (0+255),b
  7715  01129E  ECEB  F08D         	call	_get_quot_rem	;wreg free
  7716  0112A2  0100               	movlb	0	; () banked
  7717  0112A4  EE20 F003          	lfsr	2,3
  7718  0112A8  51DA               	movf	epoch_to_caltime@ct& (0+255),w,b
  7719  0112AA  26D9               	addwf	fsr2l,f,c
  7720  0112AC  51DB               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7721  0112AE  22DA               	addwfc	fsr2h,f,c
  7722  0112B0  0100               	movlb	0	; () banked
  7723  0112B2  C0D2  FFDF         	movff	?_get_quot_rem,indf2
  7724                           
  7725                           ;My_header\My_RTCC.h: 183: while (day >= month_length(year, month)) {
  7726  0112B6  D041               	goto	l5107
  7727  0112B8                     l417:
  7728                           
  7729                           ; BSR set to: 1
  7730                           ;My_header\My_RTCC.h: 184: LATB2 = 1;
  7731  0112B8  848A               	bsf	3978,2,c	;volatile
  7732                           
  7733                           ; BSR set to: 1
  7734                           ;My_header\My_RTCC.h: 185: day = day - month_length(year, month);
  7735  0112BA  C105  F022         	movff	epoch_to_caltime@month,month_length@month
  7736  0112BE  0101               	movlb	1	; () banked
  7737  0112C0  5104               	movf	epoch_to_caltime@year& (0+255),w,b
  7738  0112C2  EC7E  F08D         	call	_month_length
  7739  0112C6  0100               	movlb	0	; () banked
  7740  0112C8  6FDE               	movwf	??_epoch_to_caltime& (0+255),b
  7741  0112CA  6BDF               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  7742  0112CC  0100               	movlb	0	; () banked
  7743  0112CE  1FDE               	comf	??_epoch_to_caltime& (0+255),f,b
  7744  0112D0  1FDF               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  7745  0112D2  4BDE               	infsnz	??_epoch_to_caltime& (0+255),f,b
  7746  0112D4  2BDF               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  7747  0112D6  0101               	movlb	1	; () banked
  7748  0112D8  5102               	movf	epoch_to_caltime@day& (0+255),w,b
  7749  0112DA  0100               	movlb	0	; () banked
  7750  0112DC  25DE               	addwf	??_epoch_to_caltime& (0+255),w,b
  7751  0112DE  0101               	movlb	1	; () banked
  7752  0112E0  6F02               	movwf	epoch_to_caltime@day& (0+255),b
  7753  0112E2  0101               	movlb	1	; () banked
  7754  0112E4  5103               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  7755  0112E6  0100               	movlb	0	; () banked
  7756  0112E8  21DF               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  7757  0112EA  0101               	movlb	1	; () banked
  7758  0112EC  6F03               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  7759                           
  7760                           ; BSR set to: 1
  7761                           ;My_header\My_RTCC.h: 186: if (month == 12) {
  7762  0112EE  0E0C               	movlw	12
  7763  0112F0  0101               	movlb	1	; () banked
  7764  0112F2  1905               	xorwf	epoch_to_caltime@month& (0+255),w,b
  7765  0112F4  A4D8               	btfss	status,2,c
  7766  0112F6  D019               	goto	l5101
  7767                           
  7768                           ; BSR set to: 1
  7769                           ;My_header\My_RTCC.h: 187: month = 1;
  7770  0112F8  0E01               	movlw	1
  7771  0112FA  0101               	movlb	1	; () banked
  7772  0112FC  6F05               	movwf	epoch_to_caltime@month& (0+255),b
  7773                           
  7774                           ; BSR set to: 1
  7775                           ;My_header\My_RTCC.h: 188: year++;
  7776  0112FE  0101               	movlb	1	; () banked
  7777  011300  2B04               	incf	epoch_to_caltime@year& (0+255),f,b
  7778                           
  7779                           ; BSR set to: 1
  7780                           ;My_header\My_RTCC.h: 190: if (year >= 100) {
  7781  011302  0E63               	movlw	99
  7782  011304  0101               	movlb	1	; () banked
  7783  011306  6504               	cpfsgt	epoch_to_caltime@year& (0+255),b
  7784  011308  D013               	goto	l5103
  7785                           
  7786                           ; BSR set to: 1
  7787                           ;My_header\My_RTCC.h: 191: *ep -= 3155760000;
  7788  01130A  C0DC  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  7789  01130E  C0DD  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  7790  011312  0E80               	movlw	128
  7791  011314  5EDE               	subwf	postinc2,f,c
  7792  011316  0E13               	movlw	19
  7793  011318  5ADE               	subwfb	postinc2,f,c
  7794  01131A  0E19               	movlw	25
  7795  01131C  5ADE               	subwfb	postinc2,f,c
  7796  01131E  0EBC               	movlw	188
  7797  011320  5ADE               	subwfb	postinc2,f,c
  7798                           
  7799                           ; BSR set to: 1
  7800                           ;My_header\My_RTCC.h: 192: year = 0;
  7801  011322  0E00               	movlw	0
  7802  011324  0101               	movlb	1	; () banked
  7803  011326  6F04               	movwf	epoch_to_caltime@year& (0+255),b
  7804                           
  7805                           ; BSR set to: 1
  7806                           ;My_header\My_RTCC.h: 193: }
  7807                           ;My_header\My_RTCC.h: 194: } else {
  7808  011328  D003               	goto	l5103
  7809  01132A                     l5101:
  7810                           
  7811                           ; BSR set to: 1
  7812                           ;My_header\My_RTCC.h: 195: month++;
  7813  01132A  0101               	movlb	1	; () banked
  7814  01132C  2B05               	incf	epoch_to_caltime@month& (0+255),f,b
  7815  01132E  D000               	goto	l5103
  7816  011330                     l5103:
  7817                           
  7818                           ; BSR set to: 1
  7819                           ;My_header\My_RTCC.h: 196: }
  7820                           ;My_header\My_RTCC.h: 197: month_cache = month;
  7821  011330  C105  F0FE         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  7822                           
  7823                           ; BSR set to: 1
  7824                           ;My_header\My_RTCC.h: 198: year_cache = year;
  7825  011334  C104  F09D         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  7826  011338  D000               	goto	l5107
  7827  01133A                     l5107:
  7828  01133A  C105  F022         	movff	epoch_to_caltime@month,month_length@month
  7829  01133E  0101               	movlb	1	; () banked
  7830  011340  5104               	movf	epoch_to_caltime@year& (0+255),w,b
  7831  011342  EC7E  F08D         	call	_month_length
  7832  011346  0100               	movlb	0	; () banked
  7833  011348  6FDE               	movwf	??_epoch_to_caltime& (0+255),b
  7834  01134A  0100               	movlb	0	; () banked
  7835  01134C  51DE               	movf	??_epoch_to_caltime& (0+255),w,b
  7836  01134E  0101               	movlb	1	; () banked
  7837  011350  5D02               	subwf	epoch_to_caltime@day& (0+255),w,b
  7838  011352  0E00               	movlw	0
  7839  011354  5903               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  7840  011356  B0D8               	btfsc	status,0,c
  7841  011358  D7AF               	goto	l417
  7842                           
  7843                           ; BSR set to: 1
  7844                           ;My_header\My_RTCC.h: 199: }
  7845                           ;My_header\My_RTCC.h: 200: day_cache = day_since_epoch - day;
  7846                           
  7847                           ; BSR set to: 1
  7848  01135A  C102  F0DE         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  7849  01135E  C103  F0DF         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  7850  011362  0100               	movlb	0	; () banked
  7851  011364  1FDE               	comf	??_epoch_to_caltime& (0+255),f,b
  7852  011366  1FDF               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  7853  011368  4BDE               	infsnz	??_epoch_to_caltime& (0+255),f,b
  7854  01136A  2BDF               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  7855  01136C  0101               	movlb	1	; () banked
  7856  01136E  5100               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  7857  011370  0100               	movlb	0	; () banked
  7858  011372  25DE               	addwf	??_epoch_to_caltime& (0+255),w,b
  7859  011374  0100               	movlb	0	; () banked
  7860  011376  6F96               	movwf	epoch_to_caltime@day_cache& (0+255),b
  7861  011378  0101               	movlb	1	; () banked
  7862  01137A  5101               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  7863  01137C  0100               	movlb	0	; () banked
  7864  01137E  21DF               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  7865  011380  0100               	movlb	0	; () banked
  7866  011382  6F97               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  7867                           
  7868                           ; BSR set to: 0
  7869                           ;My_header\My_RTCC.h: 201: day++;
  7870  011384  0101               	movlb	1	; () banked
  7871  011386  4B02               	infsnz	epoch_to_caltime@day& (0+255),f,b
  7872  011388  2B03               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  7873                           
  7874                           ; BSR set to: 1
  7875                           ;My_header\My_RTCC.h: 203: ct->YY = year;
  7876  01138A  0100               	movlb	0	; () banked
  7877  01138C  EE20 F006          	lfsr	2,6
  7878  011390  51DA               	movf	epoch_to_caltime@ct& (0+255),w,b
  7879  011392  26D9               	addwf	fsr2l,f,c
  7880  011394  51DB               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7881  011396  22DA               	addwfc	fsr2h,f,c
  7882  011398  C104  FFDF         	movff	epoch_to_caltime@year,indf2
  7883                           
  7884                           ; BSR set to: 0
  7885                           ;My_header\My_RTCC.h: 204: ct->MM = month;
  7886  01139C  0100               	movlb	0	; () banked
  7887  01139E  EE20 F005          	lfsr	2,5
  7888  0113A2  51DA               	movf	epoch_to_caltime@ct& (0+255),w,b
  7889  0113A4  26D9               	addwf	fsr2l,f,c
  7890  0113A6  51DB               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7891  0113A8  22DA               	addwfc	fsr2h,f,c
  7892  0113AA  C105  FFDF         	movff	epoch_to_caltime@month,indf2
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;My_header\My_RTCC.h: 205: ct->DD = day;
  7896  0113AE  0100               	movlb	0	; () banked
  7897  0113B0  EE20 F004          	lfsr	2,4
  7898  0113B4  51DA               	movf	epoch_to_caltime@ct& (0+255),w,b
  7899  0113B6  26D9               	addwf	fsr2l,f,c
  7900  0113B8  51DB               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7901  0113BA  22DA               	addwfc	fsr2h,f,c
  7902  0113BC  C102  FFDF         	movff	epoch_to_caltime@day,indf2
  7903                           
  7904                           ; BSR set to: 0
  7905  0113C0  0012               	return		;funcret
  7906  0113C2                     __end_of_epoch_to_caltime:
  7907                           	opt stack 0
  7908                           tblptru	equ	0xFF8
  7909                           tblptrh	equ	0xFF7
  7910                           tblptrl	equ	0xFF6
  7911                           tablat	equ	0xFF5
  7912                           prodh	equ	0xFF4
  7913                           prodl	equ	0xFF3
  7914                           intcon	equ	0xFF2
  7915                           postinc0	equ	0xFEE
  7916                           wreg	equ	0xFE8
  7917                           indf1	equ	0xFE7
  7918                           postdec1	equ	0xFE5
  7919                           fsr1h	equ	0xFE2
  7920                           fsr1l	equ	0xFE1
  7921                           indf2	equ	0xFDF
  7922                           postinc2	equ	0xFDE
  7923                           postdec2	equ	0xFDD
  7924                           plusw2	equ	0xFDB
  7925                           fsr2h	equ	0xFDA
  7926                           fsr2l	equ	0xFD9
  7927                           status	equ	0xFD8
  7928                           
  7929 ;; *************** function _get_quot_rem *****************
  7930 ;; Defined at:
  7931 ;;		line 109 in file "../My_header\My_RTCC.h"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  quot            2   25[BANK0 ] PTR unsigned long 
  7934 ;;		 -> epoch_to_caltime@num(4), 
  7935 ;;  div             1   27[BANK0 ] unsigned char 
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;  num             4   29[BANK0 ] unsigned long 
  7938 ;; Return value:  Size  Location     Type
  7939 ;;                  4   25[BANK0 ] unsigned long 
  7940 ;; Registers used:
  7941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7942 ;; Tracked objects:
  7943 ;;		On entry : 0/0
  7944 ;;		On exit  : 0/0
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7947 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7948 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7950 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7951 ;;Total ram usage:        8 bytes
  7952 ;; Hardware stack levels used:    1
  7953 ;; Hardware stack levels required when called:    5
  7954 ;; This function calls:
  7955 ;;		___lldiv
  7956 ;;		___lmul
  7957 ;; This function is called by:
  7958 ;;		_epoch_to_caltime
  7959 ;; This function uses a non-reentrant model
  7960 ;;
  7961                           
  7962                           	psect	text28
  7963  011BD6                     __ptext28:
  7964                           	opt stack 0
  7965  011BD6                     _get_quot_rem:
  7966                           	opt stack 20
  7967                           
  7968                           ;My_header\My_RTCC.h: 112: epoch_t num = *quot;
  7969                           
  7970                           ; BSR set to: 0
  7971                           ;incstack = 0
  7972  011BD6  C0D2  FFD9         	movff	get_quot_rem@quot,fsr2l
  7973  011BDA  C0D3  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  7974  011BDE  CFDE F0D6          	movff	postinc2,get_quot_rem@num
  7975  011BE2  CFDE F0D7          	movff	postinc2,get_quot_rem@num+1
  7976  011BE6  CFDE F0D8          	movff	postinc2,get_quot_rem@num+2
  7977  011BEA  CFDE F0D9          	movff	postinc2,get_quot_rem@num+3
  7978                           
  7979                           ;My_header\My_RTCC.h: 113: return num - (*quot = num / div) * div;
  7980  011BEE  0100               	movlb	0	; () banked
  7981  011BF0  51D4               	movf	get_quot_rem@div& (0+255),w,b
  7982  011BF2  0100               	movlb	0	; () banked
  7983  011BF4  6FBD               	movwf	___lldiv@divisor& (0+255),b
  7984  011BF6  6BBE               	clrf	(___lldiv@divisor+1)& (0+255),b
  7985  011BF8  6BBF               	clrf	(___lldiv@divisor+2)& (0+255),b
  7986  011BFA  6BC0               	clrf	(___lldiv@divisor+3)& (0+255),b
  7987  011BFC  C0D6  F0B9         	movff	get_quot_rem@num,___lldiv@dividend
  7988  011C00  C0D7  F0BA         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  7989  011C04  C0D8  F0BB         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  7990  011C08  C0D9  F0BC         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  7991  011C0C  ECF5  F08F         	call	___lldiv	;wreg free
  7992  011C10  C0D2  FFD9         	movff	get_quot_rem@quot,fsr2l
  7993  011C14  C0D3  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  7994  011C18  0100               	movlb	0	; () banked
  7995  011C1A  C0B9  FFDE         	movff	?___lldiv,postinc2
  7996  011C1E  0100               	movlb	0	; () banked
  7997  011C20  C0BA  FFDE         	movff	?___lldiv+1,postinc2
  7998  011C24  0100               	movlb	0	; () banked
  7999  011C26  C0BB  FFDE         	movff	?___lldiv+2,postinc2
  8000  011C2A  0100               	movlb	0	; () banked
  8001  011C2C  C0BC  FFDD         	movff	?___lldiv+3,postdec2
  8002  011C30  52DD               	movf	postdec2,f,c
  8003  011C32  52DD               	movf	postdec2,f,c
  8004  011C34  CFDE F0C6          	movff	postinc2,___lmul@multiplier
  8005  011C38  CFDE F0C7          	movff	postinc2,___lmul@multiplier+1
  8006  011C3C  CFDE F0C8          	movff	postinc2,___lmul@multiplier+2
  8007  011C40  CFDE F0C9          	movff	postinc2,___lmul@multiplier+3
  8008  011C44  0100               	movlb	0	; () banked
  8009  011C46  51D4               	movf	get_quot_rem@div& (0+255),w,b
  8010  011C48  0100               	movlb	0	; () banked
  8011  011C4A  6FCA               	movwf	___lmul@multiplicand& (0+255),b
  8012  011C4C  6BCB               	clrf	(___lmul@multiplicand+1)& (0+255),b
  8013  011C4E  6BCC               	clrf	(___lmul@multiplicand+2)& (0+255),b
  8014  011C50  6BCD               	clrf	(___lmul@multiplicand+3)& (0+255),b
  8015  011C52  ECF2  F094         	call	___lmul	;wreg free
  8016  011C56  0100               	movlb	0	; () banked
  8017  011C58  1FC6               	comf	?___lmul& (0+255),f,b
  8018  011C5A  0100               	movlb	0	; () banked
  8019  011C5C  1FC7               	comf	(?___lmul+1)& (0+255),f,b
  8020  011C5E  0100               	movlb	0	; () banked
  8021  011C60  1FC8               	comf	(?___lmul+2)& (0+255),f,b
  8022  011C62  0100               	movlb	0	; () banked
  8023  011C64  1FC9               	comf	(?___lmul+3)& (0+255),f,b
  8024  011C66  0100               	movlb	0	; () banked
  8025  011C68  2BC6               	incf	?___lmul& (0+255),f,b
  8026  011C6A  0E00               	movlw	0
  8027  011C6C  0100               	movlb	0	; () banked
  8028  011C6E  23C7               	addwfc	(?___lmul+1)& (0+255),f,b
  8029  011C70  0100               	movlb	0	; () banked
  8030  011C72  23C8               	addwfc	(?___lmul+2)& (0+255),f,b
  8031  011C74  0100               	movlb	0	; () banked
  8032  011C76  23C9               	addwfc	(?___lmul+3)& (0+255),f,b
  8033  011C78  0100               	movlb	0	; () banked
  8034  011C7A  51D6               	movf	get_quot_rem@num& (0+255),w,b
  8035  011C7C  0100               	movlb	0	; () banked
  8036  011C7E  25C6               	addwf	?___lmul& (0+255),w,b
  8037  011C80  0100               	movlb	0	; () banked
  8038  011C82  6FD2               	movwf	?_get_quot_rem& (0+255),b
  8039  011C84  0100               	movlb	0	; () banked
  8040  011C86  51D7               	movf	(get_quot_rem@num+1)& (0+255),w,b
  8041  011C88  0100               	movlb	0	; () banked
  8042  011C8A  21C7               	addwfc	(?___lmul+1)& (0+255),w,b
  8043  011C8C  0100               	movlb	0	; () banked
  8044  011C8E  6FD3               	movwf	(?_get_quot_rem+1)& (0+255),b
  8045  011C90  0100               	movlb	0	; () banked
  8046  011C92  51D8               	movf	(get_quot_rem@num+2)& (0+255),w,b
  8047  011C94  0100               	movlb	0	; () banked
  8048  011C96  21C8               	addwfc	(?___lmul+2)& (0+255),w,b
  8049  011C98  0100               	movlb	0	; () banked
  8050  011C9A  6FD4               	movwf	(?_get_quot_rem+2)& (0+255),b
  8051  011C9C  0100               	movlb	0	; () banked
  8052  011C9E  51D9               	movf	(get_quot_rem@num+3)& (0+255),w,b
  8053  011CA0  0100               	movlb	0	; () banked
  8054  011CA2  21C9               	addwfc	(?___lmul+3)& (0+255),w,b
  8055  011CA4  0100               	movlb	0	; () banked
  8056  011CA6  6FD5               	movwf	(?_get_quot_rem+3)& (0+255),b
  8057  011CA8  0012               	return	
  8058                           
  8059                           ; BSR set to: 0
  8060                           
  8061                           ; BSR set to: 0
  8062  011CAA  0012               	return		;funcret
  8063  011CAC                     __end_of_get_quot_rem:
  8064                           	opt stack 0
  8065                           tblptru	equ	0xFF8
  8066                           tblptrh	equ	0xFF7
  8067                           tblptrl	equ	0xFF6
  8068                           tablat	equ	0xFF5
  8069                           prodh	equ	0xFF4
  8070                           prodl	equ	0xFF3
  8071                           intcon	equ	0xFF2
  8072                           postinc0	equ	0xFEE
  8073                           wreg	equ	0xFE8
  8074                           indf1	equ	0xFE7
  8075                           postdec1	equ	0xFE5
  8076                           fsr1h	equ	0xFE2
  8077                           fsr1l	equ	0xFE1
  8078                           indf2	equ	0xFDF
  8079                           postinc2	equ	0xFDE
  8080                           postdec2	equ	0xFDD
  8081                           plusw2	equ	0xFDB
  8082                           fsr2h	equ	0xFDA
  8083                           fsr2l	equ	0xFD9
  8084                           status	equ	0xFD8
  8085                           
  8086 ;; *************** function ___lldiv *****************
  8087 ;; Defined at:
  8088 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  8089 ;; Parameters:    Size  Location     Type
  8090 ;;  dividend        4    0[BANK0 ] unsigned long 
  8091 ;;  divisor         4    4[BANK0 ] unsigned long 
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;  quotient        4    8[BANK0 ] unsigned long 
  8094 ;;  counter         1   12[BANK0 ] unsigned char 
  8095 ;; Return value:  Size  Location     Type
  8096 ;;                  4    0[BANK0 ] unsigned long 
  8097 ;; Registers used:
  8098 ;;		wreg, status,2, status,0
  8099 ;; Tracked objects:
  8100 ;;		On entry : 0/0
  8101 ;;		On exit  : 0/0
  8102 ;;		Unchanged: 0/0
  8103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8104 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8105 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8107 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8108 ;;Total ram usage:       13 bytes
  8109 ;; Hardware stack levels used:    1
  8110 ;; Hardware stack levels required when called:    4
  8111 ;; This function calls:
  8112 ;;		Nothing
  8113 ;; This function is called by:
  8114 ;;		_CTMU_read
  8115 ;;		_get_quot_rem
  8116 ;;		_display_LCD
  8117 ;; This function uses a non-reentrant model
  8118 ;;
  8119                           
  8120                           	psect	text29
  8121  011FEA                     __ptext29:
  8122                           	opt stack 0
  8123  011FEA                     ___lldiv:
  8124                           	opt stack 24
  8125                           
  8126                           ; BSR set to: 0
  8127                           ;incstack = 0
  8128  011FEA  0E00               	movlw	0
  8129  011FEC  0100               	movlb	0	; () banked
  8130  011FEE  6FC1               	movwf	___lldiv@quotient& (0+255),b
  8131  011FF0  0E00               	movlw	0
  8132  011FF2  6FC2               	movwf	(___lldiv@quotient+1)& (0+255),b
  8133  011FF4  0E00               	movlw	0
  8134  011FF6  6FC3               	movwf	(___lldiv@quotient+2)& (0+255),b
  8135  011FF8  0E00               	movlw	0
  8136  011FFA  6FC4               	movwf	(___lldiv@quotient+3)& (0+255),b
  8137                           
  8138                           ; BSR set to: 0
  8139  011FFC  0100               	movlb	0	; () banked
  8140  011FFE  51BD               	movf	___lldiv@divisor& (0+255),w,b
  8141  012000  0100               	movlb	0	; () banked
  8142  012002  11BE               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  8143  012004  0100               	movlb	0	; () banked
  8144  012006  11BF               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  8145  012008  0100               	movlb	0	; () banked
  8146  01200A  11C0               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  8147  01200C  B4D8               	btfsc	status,2,c
  8148  01200E  D047               	goto	l1203
  8149                           
  8150                           ; BSR set to: 0
  8151  012010  0E01               	movlw	1
  8152  012012  0100               	movlb	0	; () banked
  8153  012014  6FC5               	movwf	___lldiv@counter& (0+255),b
  8154  012016  D009               	goto	l4889
  8155  012018                     l4887:
  8156                           
  8157                           ; BSR set to: 0
  8158  012018  0100               	movlb	0	; () banked
  8159  01201A  90D8               	bcf	status,0,c
  8160  01201C  37BD               	rlcf	___lldiv@divisor& (0+255),f,b
  8161  01201E  37BE               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  8162  012020  37BF               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  8163  012022  37C0               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  8164  012024  0100               	movlb	0	; () banked
  8165  012026  2BC5               	incf	___lldiv@counter& (0+255),f,b
  8166  012028  D000               	goto	l4889
  8167  01202A                     l4889:
  8168                           
  8169                           ; BSR set to: 0
  8170  01202A  0100               	movlb	0	; () banked
  8171  01202C  BFC0               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
  8172  01202E  D002               	goto	l4891
  8173  012030  D7F3               	goto	l4887
  8174                           
  8175                           ; BSR set to: 0
  8176  012032  D000               	goto	l4891
  8177  012034                     l4891:
  8178                           
  8179                           ; BSR set to: 0
  8180  012034  0100               	movlb	0	; () banked
  8181  012036  90D8               	bcf	status,0,c
  8182  012038  37C1               	rlcf	___lldiv@quotient& (0+255),f,b
  8183  01203A  37C2               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  8184  01203C  37C3               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  8185  01203E  37C4               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  8186                           
  8187                           ; BSR set to: 0
  8188  012040  0100               	movlb	0	; () banked
  8189  012042  51BD               	movf	___lldiv@divisor& (0+255),w,b
  8190  012044  0100               	movlb	0	; () banked
  8191  012046  5DB9               	subwf	___lldiv@dividend& (0+255),w,b
  8192  012048  0100               	movlb	0	; () banked
  8193  01204A  51BE               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8194  01204C  0100               	movlb	0	; () banked
  8195  01204E  59BA               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  8196  012050  0100               	movlb	0	; () banked
  8197  012052  51BF               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8198  012054  0100               	movlb	0	; () banked
  8199  012056  59BB               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  8200  012058  0100               	movlb	0	; () banked
  8201  01205A  51C0               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8202  01205C  0100               	movlb	0	; () banked
  8203  01205E  59BC               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  8204  012060  A0D8               	btfss	status,0,c
  8205  012062  D013               	goto	l4899
  8206                           
  8207                           ; BSR set to: 0
  8208  012064  0100               	movlb	0	; () banked
  8209  012066  51BD               	movf	___lldiv@divisor& (0+255),w,b
  8210  012068  0100               	movlb	0	; () banked
  8211  01206A  5FB9               	subwf	___lldiv@dividend& (0+255),f,b
  8212  01206C  0100               	movlb	0	; () banked
  8213  01206E  51BE               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8214  012070  0100               	movlb	0	; () banked
  8215  012072  5BBA               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  8216  012074  0100               	movlb	0	; () banked
  8217  012076  51BF               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8218  012078  0100               	movlb	0	; () banked
  8219  01207A  5BBB               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  8220  01207C  0100               	movlb	0	; () banked
  8221  01207E  51C0               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8222  012080  0100               	movlb	0	; () banked
  8223  012082  5BBC               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  8224                           
  8225                           ; BSR set to: 0
  8226  012084  0100               	movlb	0	; () banked
  8227  012086  81C1               	bsf	___lldiv@quotient& (0+255),0,b
  8228  012088  D000               	goto	l4899
  8229  01208A                     l4899:
  8230                           
  8231                           ; BSR set to: 0
  8232  01208A  0100               	movlb	0	; () banked
  8233  01208C  90D8               	bcf	status,0,c
  8234  01208E  33C0               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  8235  012090  33BF               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  8236  012092  33BE               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  8237  012094  33BD               	rrcf	___lldiv@divisor& (0+255),f,b
  8238                           
  8239                           ; BSR set to: 0
  8240  012096  0100               	movlb	0	; () banked
  8241  012098  2FC5               	decfsz	___lldiv@counter& (0+255),f,b
  8242  01209A  D7CC               	goto	l4891
  8243  01209C  D000               	goto	l1203
  8244  01209E                     l1203:
  8245                           
  8246                           ; BSR set to: 0
  8247  01209E  C0C1  F0B9         	movff	___lldiv@quotient,?___lldiv
  8248  0120A2  C0C2  F0BA         	movff	___lldiv@quotient+1,?___lldiv+1
  8249  0120A6  C0C3  F0BB         	movff	___lldiv@quotient+2,?___lldiv+2
  8250  0120AA  C0C4  F0BC         	movff	___lldiv@quotient+3,?___lldiv+3
  8251                           
  8252                           ; BSR set to: 0
  8253  0120AE  0012               	return		;funcret
  8254  0120B0                     __end_of___lldiv:
  8255                           	opt stack 0
  8256                           tblptru	equ	0xFF8
  8257                           tblptrh	equ	0xFF7
  8258                           tblptrl	equ	0xFF6
  8259                           tablat	equ	0xFF5
  8260                           prodh	equ	0xFF4
  8261                           prodl	equ	0xFF3
  8262                           intcon	equ	0xFF2
  8263                           postinc0	equ	0xFEE
  8264                           wreg	equ	0xFE8
  8265                           indf1	equ	0xFE7
  8266                           postdec1	equ	0xFE5
  8267                           fsr1h	equ	0xFE2
  8268                           fsr1l	equ	0xFE1
  8269                           indf2	equ	0xFDF
  8270                           postinc2	equ	0xFDE
  8271                           postdec2	equ	0xFDD
  8272                           plusw2	equ	0xFDB
  8273                           fsr2h	equ	0xFDA
  8274                           fsr2l	equ	0xFD9
  8275                           status	equ	0xFD8
  8276                           
  8277 ;; *************** function _caltime_to_RTCC *****************
  8278 ;; Defined at:
  8279 ;;		line 134 in file "../My_header\My_RTCC.h"
  8280 ;; Parameters:    Size  Location     Type
  8281 ;;  ct              2   32[COMRAM] PTR struct .
  8282 ;;		 -> caltime_now(7), 
  8283 ;; Auto vars:     Size  Location     Type
  8284 ;;		None
  8285 ;; Return value:  Size  Location     Type
  8286 ;;		None               void
  8287 ;; Registers used:
  8288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8289 ;; Tracked objects:
  8290 ;;		On entry : 0/0
  8291 ;;		On exit  : 0/0
  8292 ;;		Unchanged: 0/0
  8293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8297 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8298 ;;Total ram usage:        2 bytes
  8299 ;; Hardware stack levels used:    1
  8300 ;; Hardware stack levels required when called:    6
  8301 ;; This function calls:
  8302 ;;		_d_to_x
  8303 ;; This function is called by:
  8304 ;;		_RTCC_from_epoch
  8305 ;;		_RTCC_from_caltime
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           
  8309                           	psect	text30
  8310  0120B0                     __ptext30:
  8311                           	opt stack 0
  8312  0120B0                     _caltime_to_RTCC:
  8313                           	opt stack 20
  8314                           
  8315                           ;My_header\My_RTCC.h: 135: while (RTCCFGbits.RTCSYNC);
  8316                           
  8317                           ; BSR set to: 0
  8318                           ;incstack = 0
  8319  0120B0  D000               	goto	l404
  8320  0120B2                     l404:
  8321  0120B2  010F               	movlb	15	; () banked
  8322  0120B4  B93F               	btfsc	63,4,b	;volatile
  8323  0120B6  D7FD               	goto	l404
  8324                           
  8325                           ; BSR set to: 15
  8326                           ;My_header\My_RTCC.h: 136: RTCCFGbits.RTCPTR0 = 1;
  8327  0120B8  010F               	movlb	15	; () banked
  8328  0120BA  813F               	bsf	63,0,b	;volatile
  8329                           
  8330                           ;My_header\My_RTCC.h: 137: RTCCFGbits.RTCPTR1 = 1;
  8331  0120BC  010F               	movlb	15	; () banked
  8332  0120BE  833F               	bsf	63,1,b	;volatile
  8333                           
  8334                           ; BSR set to: 15
  8335                           ;My_header\My_RTCC.h: 138: RTCVALL = d_to_x(ct->YY);
  8336  0120C0  EE20 F006          	lfsr	2,6
  8337  0120C4  5021               	movf	caltime_to_RTCC@ct,w,c
  8338  0120C6  26D9               	addwf	fsr2l,f,c
  8339  0120C8  5022               	movf	caltime_to_RTCC@ct+1,w,c
  8340  0120CA  22DA               	addwfc	fsr2h,f,c
  8341  0120CC  50DF               	movf	indf2,w,c
  8342  0120CE  ECD8  F098         	call	_d_to_x
  8343  0120D2  010F               	movlb	15	; () banked
  8344  0120D4  6F3A               	movwf	58,b	;volatile
  8345                           
  8346                           ; BSR set to: 15
  8347                           ;My_header\My_RTCC.h: 139: RTCVALH = 0x00;
  8348  0120D6  0E00               	movlw	0
  8349  0120D8  010F               	movlb	15	; () banked
  8350  0120DA  6F3B               	movwf	59,b	;volatile
  8351                           
  8352                           ; BSR set to: 15
  8353                           ;My_header\My_RTCC.h: 140: RTCCFGbits.RTCPTR0 = 0;
  8354  0120DC  010F               	movlb	15	; () banked
  8355  0120DE  913F               	bcf	63,0,b	;volatile
  8356                           
  8357                           ; BSR set to: 15
  8358                           ;My_header\My_RTCC.h: 141: RTCCFGbits.RTCPTR1 = 1;
  8359  0120E0  010F               	movlb	15	; () banked
  8360  0120E2  833F               	bsf	63,1,b	;volatile
  8361                           
  8362                           ; BSR set to: 15
  8363                           ;My_header\My_RTCC.h: 142: RTCVALL = d_to_x(ct->DD);
  8364  0120E4  EE20 F004          	lfsr	2,4
  8365  0120E8  5021               	movf	caltime_to_RTCC@ct,w,c
  8366  0120EA  26D9               	addwf	fsr2l,f,c
  8367  0120EC  5022               	movf	caltime_to_RTCC@ct+1,w,c
  8368  0120EE  22DA               	addwfc	fsr2h,f,c
  8369  0120F0  50DF               	movf	indf2,w,c
  8370  0120F2  ECD8  F098         	call	_d_to_x
  8371  0120F6  010F               	movlb	15	; () banked
  8372  0120F8  6F3A               	movwf	58,b	;volatile
  8373                           
  8374                           ; BSR set to: 15
  8375                           ;My_header\My_RTCC.h: 143: RTCVALH = d_to_x(ct->MM);
  8376  0120FA  EE20 F005          	lfsr	2,5
  8377  0120FE  5021               	movf	caltime_to_RTCC@ct,w,c
  8378  012100  26D9               	addwf	fsr2l,f,c
  8379  012102  5022               	movf	caltime_to_RTCC@ct+1,w,c
  8380  012104  22DA               	addwfc	fsr2h,f,c
  8381  012106  50DF               	movf	indf2,w,c
  8382  012108  ECD8  F098         	call	_d_to_x
  8383  01210C  010F               	movlb	15	; () banked
  8384  01210E  6F3B               	movwf	59,b	;volatile
  8385                           
  8386                           ; BSR set to: 15
  8387                           ;My_header\My_RTCC.h: 144: RTCCFGbits.RTCPTR0 = 1;
  8388  012110  010F               	movlb	15	; () banked
  8389  012112  813F               	bsf	63,0,b	;volatile
  8390                           
  8391                           ; BSR set to: 15
  8392                           ;My_header\My_RTCC.h: 145: RTCCFGbits.RTCPTR1 = 0;
  8393  012114  010F               	movlb	15	; () banked
  8394  012116  933F               	bcf	63,1,b	;volatile
  8395                           
  8396                           ; BSR set to: 15
  8397                           ;My_header\My_RTCC.h: 146: RTCVALL = d_to_x(ct->hh);
  8398  012118  EE20 F002          	lfsr	2,2
  8399  01211C  5021               	movf	caltime_to_RTCC@ct,w,c
  8400  01211E  26D9               	addwf	fsr2l,f,c
  8401  012120  5022               	movf	caltime_to_RTCC@ct+1,w,c
  8402  012122  22DA               	addwfc	fsr2h,f,c
  8403  012124  50DF               	movf	indf2,w,c
  8404  012126  ECD8  F098         	call	_d_to_x
  8405  01212A  010F               	movlb	15	; () banked
  8406  01212C  6F3A               	movwf	58,b	;volatile
  8407                           
  8408                           ; BSR set to: 15
  8409                           ;My_header\My_RTCC.h: 147: RTCVALH = d_to_x(ct->EE);
  8410  01212E  EE20 F003          	lfsr	2,3
  8411  012132  5021               	movf	caltime_to_RTCC@ct,w,c
  8412  012134  26D9               	addwf	fsr2l,f,c
  8413  012136  5022               	movf	caltime_to_RTCC@ct+1,w,c
  8414  012138  22DA               	addwfc	fsr2h,f,c
  8415  01213A  50DF               	movf	indf2,w,c
  8416  01213C  ECD8  F098         	call	_d_to_x
  8417  012140  010F               	movlb	15	; () banked
  8418  012142  6F3B               	movwf	59,b	;volatile
  8419                           
  8420                           ; BSR set to: 15
  8421                           ;My_header\My_RTCC.h: 148: RTCCFGbits.RTCPTR0 = 0;
  8422  012144  010F               	movlb	15	; () banked
  8423  012146  913F               	bcf	63,0,b	;volatile
  8424                           
  8425                           ; BSR set to: 15
  8426                           ;My_header\My_RTCC.h: 149: RTCCFGbits.RTCPTR1 = 0;
  8427  012148  010F               	movlb	15	; () banked
  8428  01214A  933F               	bcf	63,1,b	;volatile
  8429                           
  8430                           ; BSR set to: 15
  8431                           ;My_header\My_RTCC.h: 150: RTCVALL = d_to_x(ct->ss);
  8432  01214C  C021  FFD9         	movff	caltime_to_RTCC@ct,fsr2l
  8433  012150  C022  FFDA         	movff	caltime_to_RTCC@ct+1,fsr2h
  8434  012154  50DF               	movf	indf2,w,c
  8435  012156  ECD8  F098         	call	_d_to_x
  8436  01215A  010F               	movlb	15	; () banked
  8437  01215C  6F3A               	movwf	58,b	;volatile
  8438                           
  8439                           ; BSR set to: 15
  8440                           ;My_header\My_RTCC.h: 151: RTCVALH = d_to_x(ct->mm);
  8441  01215E  EE20 F001          	lfsr	2,1
  8442  012162  5021               	movf	caltime_to_RTCC@ct,w,c
  8443  012164  26D9               	addwf	fsr2l,f,c
  8444  012166  5022               	movf	caltime_to_RTCC@ct+1,w,c
  8445  012168  22DA               	addwfc	fsr2h,f,c
  8446  01216A  50DF               	movf	indf2,w,c
  8447  01216C  ECD8  F098         	call	_d_to_x
  8448  012170  010F               	movlb	15	; () banked
  8449  012172  6F3B               	movwf	59,b	;volatile
  8450                           
  8451                           ; BSR set to: 15
  8452  012174  0012               	return		;funcret
  8453  012176                     __end_of_caltime_to_RTCC:
  8454                           	opt stack 0
  8455                           tblptru	equ	0xFF8
  8456                           tblptrh	equ	0xFF7
  8457                           tblptrl	equ	0xFF6
  8458                           tablat	equ	0xFF5
  8459                           prodh	equ	0xFF4
  8460                           prodl	equ	0xFF3
  8461                           intcon	equ	0xFF2
  8462                           postinc0	equ	0xFEE
  8463                           wreg	equ	0xFE8
  8464                           indf1	equ	0xFE7
  8465                           postdec1	equ	0xFE5
  8466                           fsr1h	equ	0xFE2
  8467                           fsr1l	equ	0xFE1
  8468                           indf2	equ	0xFDF
  8469                           postinc2	equ	0xFDE
  8470                           postdec2	equ	0xFDD
  8471                           plusw2	equ	0xFDB
  8472                           fsr2h	equ	0xFDA
  8473                           fsr2l	equ	0xFD9
  8474                           status	equ	0xFD8
  8475                           
  8476 ;; *************** function _d_to_x *****************
  8477 ;; Defined at:
  8478 ;;		line 70 in file "../My_header\My_RTCC.h"
  8479 ;; Parameters:    Size  Location     Type
  8480 ;;  dec             1    wreg     unsigned char 
  8481 ;; Auto vars:     Size  Location     Type
  8482 ;;  dec             1   31[COMRAM] unsigned char 
  8483 ;; Return value:  Size  Location     Type
  8484 ;;                  1    wreg      unsigned char 
  8485 ;; Registers used:
  8486 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8487 ;; Tracked objects:
  8488 ;;		On entry : 0/0
  8489 ;;		On exit  : 0/0
  8490 ;;		Unchanged: 0/0
  8491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8493 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8495 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8496 ;;Total ram usage:        1 bytes
  8497 ;; Hardware stack levels used:    1
  8498 ;; Hardware stack levels required when called:    5
  8499 ;; This function calls:
  8500 ;;		___awdiv
  8501 ;; This function is called by:
  8502 ;;		_caltime_to_RTCC
  8503 ;; This function uses a non-reentrant model
  8504 ;;
  8505                           
  8506                           	psect	text31
  8507  0131B0                     __ptext31:
  8508                           	opt stack 0
  8509  0131B0                     _d_to_x:
  8510                           	opt stack 20
  8511                           
  8512                           ; BSR set to: 15
  8513                           ;incstack = 0
  8514                           ;d_to_x@dec stored from wreg
  8515  0131B0  6E20               	movwf	d_to_x@dec,c
  8516                           
  8517                           ;My_header\My_RTCC.h: 73: return dec / 10 * 6 + dec;
  8518  0131B2  C020  F0B9         	movff	d_to_x@dec,___awdiv@dividend
  8519  0131B6  0100               	movlb	0	; () banked
  8520  0131B8  6BBA               	clrf	(___awdiv@dividend+1)& (0+255),b
  8521  0131BA  0E00               	movlw	0
  8522  0131BC  0100               	movlb	0	; () banked
  8523  0131BE  6FBC               	movwf	(___awdiv@divisor+1)& (0+255),b
  8524  0131C0  0E0A               	movlw	10
  8525  0131C2  6FBB               	movwf	___awdiv@divisor& (0+255),b
  8526  0131C4  EC2A  F08F         	call	___awdiv	;wreg free
  8527  0131C8  0100               	movlb	0	; () banked
  8528  0131CA  51B9               	movf	?___awdiv& (0+255),w,b
  8529  0131CC  0D06               	mullw	6
  8530  0131CE  50F3               	movf	prodl,w,c
  8531  0131D0  2420               	addwf	d_to_x@dec,w,c
  8532  0131D2  0012               	return	
  8533                           
  8534                           ; BSR set to: 0
  8535                           
  8536                           ; BSR set to: 0
  8537  0131D4  0012               	return		;funcret
  8538  0131D6                     __end_of_d_to_x:
  8539                           	opt stack 0
  8540                           tblptru	equ	0xFF8
  8541                           tblptrh	equ	0xFF7
  8542                           tblptrl	equ	0xFF6
  8543                           tablat	equ	0xFF5
  8544                           prodh	equ	0xFF4
  8545                           prodl	equ	0xFF3
  8546                           intcon	equ	0xFF2
  8547                           postinc0	equ	0xFEE
  8548                           wreg	equ	0xFE8
  8549                           indf1	equ	0xFE7
  8550                           postdec1	equ	0xFE5
  8551                           fsr1h	equ	0xFE2
  8552                           fsr1l	equ	0xFE1
  8553                           indf2	equ	0xFDF
  8554                           postinc2	equ	0xFDE
  8555                           postdec2	equ	0xFDD
  8556                           plusw2	equ	0xFDB
  8557                           fsr2h	equ	0xFDA
  8558                           fsr2l	equ	0xFD9
  8559                           status	equ	0xFD8
  8560                           
  8561 ;; *************** function ___awdiv *****************
  8562 ;; Defined at:
  8563 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  8564 ;; Parameters:    Size  Location     Type
  8565 ;;  dividend        2    0[BANK0 ] int 
  8566 ;;  divisor         2    2[BANK0 ] int 
  8567 ;; Auto vars:     Size  Location     Type
  8568 ;;  quotient        2    6[BANK0 ] int 
  8569 ;;  sign            1    5[BANK0 ] unsigned char 
  8570 ;;  counter         1    4[BANK0 ] unsigned char 
  8571 ;; Return value:  Size  Location     Type
  8572 ;;                  2    0[BANK0 ] int 
  8573 ;; Registers used:
  8574 ;;		wreg, status,2, status,0
  8575 ;; Tracked objects:
  8576 ;;		On entry : 0/0
  8577 ;;		On exit  : 0/0
  8578 ;;		Unchanged: 0/0
  8579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8580 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8581 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8583 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8584 ;;Total ram usage:        8 bytes
  8585 ;; Hardware stack levels used:    1
  8586 ;; Hardware stack levels required when called:    4
  8587 ;; This function calls:
  8588 ;;		Nothing
  8589 ;; This function is called by:
  8590 ;;		_d_to_x
  8591 ;; This function uses a non-reentrant model
  8592 ;;
  8593                           
  8594                           	psect	text32
  8595  011E54                     __ptext32:
  8596                           	opt stack 0
  8597  011E54                     ___awdiv:
  8598                           	opt stack 20
  8599                           
  8600                           ; BSR set to: 0
  8601                           ;incstack = 0
  8602  011E54  0E00               	movlw	0
  8603  011E56  0100               	movlb	0	; () banked
  8604  011E58  6FBE               	movwf	___awdiv@sign& (0+255),b
  8605                           
  8606                           ; BSR set to: 0
  8607  011E5A  0100               	movlb	0	; () banked
  8608  011E5C  AFBC               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8609  011E5E  D009               	goto	l4809
  8610                           
  8611                           ; BSR set to: 0
  8612  011E60  0100               	movlb	0	; () banked
  8613  011E62  6DBB               	negf	___awdiv@divisor& (0+255),b
  8614  011E64  1FBC               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8615  011E66  B0D8               	btfsc	status,0,c
  8616  011E68  2BBC               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8617                           
  8618                           ; BSR set to: 0
  8619  011E6A  0E01               	movlw	1
  8620  011E6C  0100               	movlb	0	; () banked
  8621  011E6E  6FBE               	movwf	___awdiv@sign& (0+255),b
  8622  011E70  D000               	goto	l4809
  8623  011E72                     l4809:
  8624                           
  8625                           ; BSR set to: 0
  8626  011E72  0100               	movlb	0	; () banked
  8627  011E74  AFBA               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  8628  011E76  D009               	goto	l4815
  8629                           
  8630                           ; BSR set to: 0
  8631  011E78  0100               	movlb	0	; () banked
  8632  011E7A  6DB9               	negf	___awdiv@dividend& (0+255),b
  8633  011E7C  1FBA               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8634  011E7E  B0D8               	btfsc	status,0,c
  8635  011E80  2BBA               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8636                           
  8637                           ; BSR set to: 0
  8638  011E82  0E01               	movlw	1
  8639  011E84  0100               	movlb	0	; () banked
  8640  011E86  1BBE               	xorwf	___awdiv@sign& (0+255),f,b
  8641  011E88  D000               	goto	l4815
  8642  011E8A                     l4815:
  8643                           
  8644                           ; BSR set to: 0
  8645  011E8A  0E00               	movlw	0
  8646  011E8C  0100               	movlb	0	; () banked
  8647  011E8E  6FC0               	movwf	(___awdiv@quotient+1)& (0+255),b
  8648  011E90  0E00               	movlw	0
  8649  011E92  6FBF               	movwf	___awdiv@quotient& (0+255),b
  8650                           
  8651                           ; BSR set to: 0
  8652  011E94  0100               	movlb	0	; () banked
  8653  011E96  51BB               	movf	___awdiv@divisor& (0+255),w,b
  8654  011E98  0100               	movlb	0	; () banked
  8655  011E9A  11BC               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8656  011E9C  B4D8               	btfsc	status,2,c
  8657  011E9E  D031               	goto	l4837
  8658                           
  8659                           ; BSR set to: 0
  8660  011EA0  0E01               	movlw	1
  8661  011EA2  0100               	movlb	0	; () banked
  8662  011EA4  6FBD               	movwf	___awdiv@counter& (0+255),b
  8663  011EA6  D007               	goto	l4823
  8664  011EA8                     l4821:
  8665                           
  8666                           ; BSR set to: 0
  8667  011EA8  0100               	movlb	0	; () banked
  8668  011EAA  90D8               	bcf	status,0,c
  8669  011EAC  37BB               	rlcf	___awdiv@divisor& (0+255),f,b
  8670  011EAE  37BC               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8671  011EB0  0100               	movlb	0	; () banked
  8672  011EB2  2BBD               	incf	___awdiv@counter& (0+255),f,b
  8673  011EB4  D000               	goto	l4823
  8674  011EB6                     l4823:
  8675                           
  8676                           ; BSR set to: 0
  8677  011EB6  0100               	movlb	0	; () banked
  8678  011EB8  BFBC               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  8679  011EBA  D002               	goto	l4825
  8680  011EBC  D7F5               	goto	l4821
  8681                           
  8682                           ; BSR set to: 0
  8683  011EBE  D000               	goto	l4825
  8684  011EC0                     l4825:
  8685                           
  8686                           ; BSR set to: 0
  8687  011EC0  0100               	movlb	0	; () banked
  8688  011EC2  90D8               	bcf	status,0,c
  8689  011EC4  37BF               	rlcf	___awdiv@quotient& (0+255),f,b
  8690  011EC6  37C0               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8691                           
  8692                           ; BSR set to: 0
  8693  011EC8  0100               	movlb	0	; () banked
  8694  011ECA  51BB               	movf	___awdiv@divisor& (0+255),w,b
  8695  011ECC  0100               	movlb	0	; () banked
  8696  011ECE  5DB9               	subwf	___awdiv@dividend& (0+255),w,b
  8697  011ED0  0100               	movlb	0	; () banked
  8698  011ED2  51BC               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8699  011ED4  0100               	movlb	0	; () banked
  8700  011ED6  59BA               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8701  011ED8  A0D8               	btfss	status,0,c
  8702  011EDA  D00B               	goto	l4833
  8703                           
  8704                           ; BSR set to: 0
  8705  011EDC  0100               	movlb	0	; () banked
  8706  011EDE  51BB               	movf	___awdiv@divisor& (0+255),w,b
  8707  011EE0  0100               	movlb	0	; () banked
  8708  011EE2  5FB9               	subwf	___awdiv@dividend& (0+255),f,b
  8709  011EE4  0100               	movlb	0	; () banked
  8710  011EE6  51BC               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8711  011EE8  0100               	movlb	0	; () banked
  8712  011EEA  5BBA               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8713                           
  8714                           ; BSR set to: 0
  8715  011EEC  0100               	movlb	0	; () banked
  8716  011EEE  81BF               	bsf	___awdiv@quotient& (0+255),0,b
  8717  011EF0  D000               	goto	l4833
  8718  011EF2                     l4833:
  8719                           
  8720                           ; BSR set to: 0
  8721  011EF2  0100               	movlb	0	; () banked
  8722  011EF4  90D8               	bcf	status,0,c
  8723  011EF6  33BC               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8724  011EF8  33BB               	rrcf	___awdiv@divisor& (0+255),f,b
  8725                           
  8726                           ; BSR set to: 0
  8727  011EFA  0100               	movlb	0	; () banked
  8728  011EFC  2FBD               	decfsz	___awdiv@counter& (0+255),f,b
  8729  011EFE  D7E0               	goto	l4825
  8730                           
  8731                           ; BSR set to: 0
  8732  011F00  D000               	goto	l4837
  8733  011F02                     l4837:
  8734                           
  8735                           ; BSR set to: 0
  8736  011F02  0100               	movlb	0	; () banked
  8737  011F04  51BE               	movf	___awdiv@sign& (0+255),w,b
  8738  011F06  0100               	movlb	0	; () banked
  8739  011F08  B4D8               	btfsc	status,2,c
  8740  011F0A  D006               	goto	l4841
  8741                           
  8742                           ; BSR set to: 0
  8743  011F0C  0100               	movlb	0	; () banked
  8744  011F0E  6DBF               	negf	___awdiv@quotient& (0+255),b
  8745  011F10  1FC0               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8746  011F12  B0D8               	btfsc	status,0,c
  8747  011F14  2BC0               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8748  011F16  D000               	goto	l4841
  8749  011F18                     l4841:
  8750                           
  8751                           ; BSR set to: 0
  8752  011F18  C0BF  F0B9         	movff	___awdiv@quotient,?___awdiv
  8753  011F1C  C0C0  F0BA         	movff	___awdiv@quotient+1,?___awdiv+1
  8754  011F20  0012               	return	
  8755                           
  8756                           ; BSR set to: 0
  8757                           
  8758                           ; BSR set to: 0
  8759  011F22  0012               	return		;funcret
  8760  011F24                     __end_of___awdiv:
  8761                           	opt stack 0
  8762                           tblptru	equ	0xFF8
  8763                           tblptrh	equ	0xFF7
  8764                           tblptrl	equ	0xFF6
  8765                           tablat	equ	0xFF5
  8766                           prodh	equ	0xFF4
  8767                           prodl	equ	0xFF3
  8768                           intcon	equ	0xFF2
  8769                           postinc0	equ	0xFEE
  8770                           wreg	equ	0xFE8
  8771                           indf1	equ	0xFE7
  8772                           postdec1	equ	0xFE5
  8773                           fsr1h	equ	0xFE2
  8774                           fsr1l	equ	0xFE1
  8775                           indf2	equ	0xFDF
  8776                           postinc2	equ	0xFDE
  8777                           postdec2	equ	0xFDD
  8778                           plusw2	equ	0xFDB
  8779                           fsr2h	equ	0xFDA
  8780                           fsr2l	equ	0xFD9
  8781                           status	equ	0xFD8
  8782                           
  8783 ;; *************** function _RTCC_time_set_cursor *****************
  8784 ;; Defined at:
  8785 ;;		line 305 in file "../My_header\My_RTCC.h"
  8786 ;; Parameters:    Size  Location     Type
  8787 ;;		None
  8788 ;; Auto vars:     Size  Location     Type
  8789 ;;		None
  8790 ;; Return value:  Size  Location     Type
  8791 ;;		None               void
  8792 ;; Registers used:
  8793 ;;		wreg, status,2
  8794 ;; Tracked objects:
  8795 ;;		On entry : 0/0
  8796 ;;		On exit  : 0/0
  8797 ;;		Unchanged: 0/0
  8798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8803 ;;Total ram usage:        0 bytes
  8804 ;; Hardware stack levels used:    1
  8805 ;; Hardware stack levels required when called:    4
  8806 ;; This function calls:
  8807 ;;		Nothing
  8808 ;; This function is called by:
  8809 ;;		_RTCC_time_set
  8810 ;; This function uses a non-reentrant model
  8811 ;;
  8812                           
  8813                           	psect	text33
  8814  012C3C                     __ptext33:
  8815                           	opt stack 0
  8816  012C3C                     _RTCC_time_set_cursor:
  8817                           	opt stack 24
  8818                           
  8819                           ;My_header\My_RTCC.h: 306: if (edit_flag.flag.ss)edit_flag.flags = 0x02;
  8820                           
  8821                           ; BSR set to: 0
  8822                           ;incstack = 0
  8823  012C3C  0100               	movlb	0	; () banked
  8824  012C3E  A19A               	btfss	_edit_flag& (0+255),0,b
  8825  012C40  D004               	goto	l465
  8826                           
  8827                           ; BSR set to: 0
  8828  012C42  0E02               	movlw	2
  8829  012C44  0100               	movlb	0	; () banked
  8830  012C46  6F9A               	movwf	_edit_flag& (0+255),b
  8831  012C48  0012               	return	
  8832  012C4A                     l465:
  8833                           
  8834                           ; BSR set to: 0
  8835                           ;My_header\My_RTCC.h: 307: else if (edit_flag.flag.mm)edit_flag.flags = 0x04;
  8836  012C4A  0100               	movlb	0	; () banked
  8837  012C4C  A39A               	btfss	_edit_flag& (0+255),1,b
  8838  012C4E  D004               	goto	l467
  8839                           
  8840                           ; BSR set to: 0
  8841  012C50  0E04               	movlw	4
  8842  012C52  0100               	movlb	0	; () banked
  8843  012C54  6F9A               	movwf	_edit_flag& (0+255),b
  8844  012C56  0012               	return	
  8845  012C58                     l467:
  8846                           
  8847                           ; BSR set to: 0
  8848                           ;My_header\My_RTCC.h: 308: else if (edit_flag.flag.hh)edit_flag.flags = 0x08;
  8849  012C58  0100               	movlb	0	; () banked
  8850  012C5A  A59A               	btfss	_edit_flag& (0+255),2,b
  8851  012C5C  D004               	goto	l469
  8852                           
  8853                           ; BSR set to: 0
  8854  012C5E  0E08               	movlw	8
  8855  012C60  0100               	movlb	0	; () banked
  8856  012C62  6F9A               	movwf	_edit_flag& (0+255),b
  8857  012C64  0012               	return	
  8858  012C66                     l469:
  8859                           
  8860                           ; BSR set to: 0
  8861                           ;My_header\My_RTCC.h: 309: else if (edit_flag.flag.DD)edit_flag.flags = 0x10;
  8862  012C66  0100               	movlb	0	; () banked
  8863  012C68  A79A               	btfss	_edit_flag& (0+255),3,b
  8864  012C6A  D004               	goto	l471
  8865                           
  8866                           ; BSR set to: 0
  8867  012C6C  0E10               	movlw	16
  8868  012C6E  0100               	movlb	0	; () banked
  8869  012C70  6F9A               	movwf	_edit_flag& (0+255),b
  8870  012C72  0012               	return	
  8871  012C74                     l471:
  8872                           
  8873                           ; BSR set to: 0
  8874                           ;My_header\My_RTCC.h: 310: else if (edit_flag.flag.MM)edit_flag.flags = 0x20;
  8875  012C74  0100               	movlb	0	; () banked
  8876  012C76  A99A               	btfss	_edit_flag& (0+255),4,b
  8877  012C78  D004               	goto	l473
  8878                           
  8879                           ; BSR set to: 0
  8880  012C7A  0E20               	movlw	32
  8881  012C7C  0100               	movlb	0	; () banked
  8882  012C7E  6F9A               	movwf	_edit_flag& (0+255),b
  8883  012C80  0012               	return	
  8884  012C82                     l473:
  8885                           
  8886                           ; BSR set to: 0
  8887                           ;My_header\My_RTCC.h: 311: else if (edit_flag.flag.YY)edit_flag.flags = 0x01;
  8888  012C82  0100               	movlb	0	; () banked
  8889  012C84  AB9A               	btfss	_edit_flag& (0+255),5,b
  8890  012C86  0012               	return	
  8891                           
  8892                           ; BSR set to: 0
  8893  012C88  0E01               	movlw	1
  8894  012C8A  0100               	movlb	0	; () banked
  8895  012C8C  6F9A               	movwf	_edit_flag& (0+255),b
  8896                           
  8897                           ; BSR set to: 0
  8898                           
  8899                           ; BSR set to: 0
  8900                           
  8901                           ; BSR set to: 0
  8902                           
  8903                           ; BSR set to: 0
  8904                           
  8905                           ; BSR set to: 0
  8906  012C8E  0012               	return	
  8907                           
  8908                           ; BSR set to: 0
  8909                           
  8910                           ; BSR set to: 0
  8911  012C90  0012               	return		;funcret
  8912  012C92                     __end_of_RTCC_time_set_cursor:
  8913                           	opt stack 0
  8914                           tblptru	equ	0xFF8
  8915                           tblptrh	equ	0xFF7
  8916                           tblptrl	equ	0xFF6
  8917                           tablat	equ	0xFF5
  8918                           prodh	equ	0xFF4
  8919                           prodl	equ	0xFF3
  8920                           intcon	equ	0xFF2
  8921                           postinc0	equ	0xFEE
  8922                           wreg	equ	0xFE8
  8923                           indf1	equ	0xFE7
  8924                           postdec1	equ	0xFE5
  8925                           fsr1h	equ	0xFE2
  8926                           fsr1l	equ	0xFE1
  8927                           indf2	equ	0xFDF
  8928                           postinc2	equ	0xFDE
  8929                           postdec2	equ	0xFDD
  8930                           plusw2	equ	0xFDB
  8931                           fsr2h	equ	0xFDA
  8932                           fsr2l	equ	0xFD9
  8933                           status	equ	0xFD8
  8934                           
  8935 ;; *************** function _Auto_cut *****************
  8936 ;; Defined at:
  8937 ;;		line 136 in file "PIC18F27J53-ChargeStation6-04.h"
  8938 ;; Parameters:    Size  Location     Type
  8939 ;;		None
  8940 ;; Auto vars:     Size  Location     Type
  8941 ;;  i               1    9[BANK0 ] unsigned char 
  8942 ;; Return value:  Size  Location     Type
  8943 ;;		None               void
  8944 ;; Registers used:
  8945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8946 ;; Tracked objects:
  8947 ;;		On entry : 0/0
  8948 ;;		On exit  : 0/0
  8949 ;;		Unchanged: 0/0
  8950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8952 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8953 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8954 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8955 ;;Total ram usage:        3 bytes
  8956 ;; Hardware stack levels used:    1
  8957 ;; Hardware stack levels required when called:    5
  8958 ;; This function calls:
  8959 ;;		_ADC
  8960 ;;		_IN
  8961 ;;		_OUT
  8962 ;;		___wmul
  8963 ;; This function is called by:
  8964 ;;		_normal_mode_loop
  8965 ;; This function uses a non-reentrant model
  8966 ;;
  8967                           
  8968                           	psect	text34
  8969  0117DE                     __ptext34:
  8970                           	opt stack 0
  8971  0117DE                     _Auto_cut:
  8972                           	opt stack 24
  8973                           
  8974                           ;PIC18F27J53-ChargeStation6-04.h: 137: for (uint8_t i = 0; i < 3; i++) {
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;incstack = 0
  8978  0117DE  0E00               	movlw	0
  8979  0117E0  0100               	movlb	0	; () banked
  8980  0117E2  6FC2               	movwf	Auto_cut@i& (0+255),b
  8981                           
  8982                           ; BSR set to: 0
  8983  0117E4  0E02               	movlw	2
  8984  0117E6  0100               	movlb	0	; () banked
  8985  0117E8  65C2               	cpfsgt	Auto_cut@i& (0+255),b
  8986  0117EA  D002               	goto	l5721
  8987  0117EC  0012               	return	
  8988                           
  8989                           ; BSR set to: 0
  8990  0117EE  0012               	return	
  8991  0117F0                     l5721:
  8992                           
  8993                           ; BSR set to: 0
  8994                           ;PIC18F27J53-ChargeStation6-04.h: 138: I[i] = 13 * ADC(IN(i)) / 16;
  8995  0117F0  0100               	movlb	0	; () banked
  8996  0117F2  51C2               	movf	Auto_cut@i& (0+255),w,b
  8997  0117F4  EC96  F098         	call	_IN
  8998  0117F8  ECC3  F098         	call	_ADC
  8999  0117FC  C020  F0BA         	movff	?_ADC,___wmul@multiplier
  9000  011800  C021  F0BB         	movff	?_ADC+1,___wmul@multiplier+1
  9001  011804  0E00               	movlw	0
  9002  011806  0100               	movlb	0	; () banked
  9003  011808  6FBD               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9004  01180A  0E0D               	movlw	13
  9005  01180C  6FBC               	movwf	___wmul@multiplicand& (0+255),b
  9006  01180E  ECE2  F097         	call	___wmul	;wreg free
  9007  011812  0E04               	movlw	4
  9008  011814  0100               	movlb	0	; () banked
  9009  011816  6FC0               	movwf	??_Auto_cut& (0+255),b
  9010  011818                     u5955:
  9011  011818  0100               	movlb	0	; () banked
  9012  01181A  90D8               	bcf	status,0,c
  9013  01181C  33BB               	rrcf	(?___wmul+1)& (0+255),f,b
  9014  01181E  33BA               	rrcf	?___wmul& (0+255),f,b
  9015  011820  0100               	movlb	0	; () banked
  9016  011822  2FC0               	decfsz	??_Auto_cut& (0+255),f,b
  9017  011824  D7F9               	goto	u5955
  9018  011826  0100               	movlb	0	; () banked
  9019  011828  51C2               	movf	Auto_cut@i& (0+255),w,b
  9020  01182A  0D02               	mullw	2
  9021  01182C  0E23               	movlw	low _I
  9022  01182E  24F3               	addwf	prodl,w,c
  9023  011830  6ED9               	movwf	fsr2l,c
  9024  011832  0E00               	movlw	high _I
  9025  011834  20F4               	addwfc	prodh,w,c
  9026  011836  6EDA               	movwf	fsr2h,c
  9027  011838  0100               	movlb	0	; () banked
  9028  01183A  C0BA  FFDE         	movff	?___wmul,postinc2
  9029  01183E  0100               	movlb	0	; () banked
  9030  011840  C0BB  FFDD         	movff	?___wmul+1,postdec2
  9031                           
  9032                           ; BSR set to: 0
  9033                           ;PIC18F27J53-ChargeStation6-04.h: 139: if (auto_cut_ON[i]) {
  9034  011844  0100               	movlb	0	; () banked
  9035  011846  51C2               	movf	Auto_cut@i& (0+255),w,b
  9036  011848  0D01               	mullw	1
  9037  01184A  0E29               	movlw	low _auto_cut_ON
  9038  01184C  24F3               	addwf	prodl,w,c
  9039  01184E  6ED9               	movwf	fsr2l,c
  9040  011850  0E00               	movlw	high _auto_cut_ON
  9041  011852  20F4               	addwfc	prodh,w,c
  9042  011854  6EDA               	movwf	fsr2h,c
  9043  011856  50DF               	movf	indf2,w,c
  9044  011858  B4D8               	btfsc	status,2,c
  9045  01185A  D041               	goto	l5733
  9046                           
  9047                           ; BSR set to: 0
  9048                           ;PIC18F27J53-ChargeStation6-04.h: 140: if (I[i] < 100) {
  9049  01185C  0100               	movlb	0	; () banked
  9050  01185E  51C2               	movf	Auto_cut@i& (0+255),w,b
  9051  011860  0D02               	mullw	2
  9052  011862  0E23               	movlw	low _I
  9053  011864  24F3               	addwf	prodl,w,c
  9054  011866  6ED9               	movwf	fsr2l,c
  9055  011868  0E00               	movlw	high _I
  9056  01186A  20F4               	addwfc	prodh,w,c
  9057  01186C  6EDA               	movwf	fsr2h,c
  9058  01186E  0E01               	movlw	1
  9059  011870  50DB               	movf	plusw2,w,c
  9060  011872  E127               	bnz	l5731
  9061  011874  0E64               	movlw	100
  9062  011876  5CDE               	subwf	postinc2,w,c
  9063  011878  B0D8               	btfsc	status,0,c
  9064  01187A  D023               	goto	l5731
  9065                           
  9066                           ; BSR set to: 0
  9067                           ;PIC18F27J53-ChargeStation6-04.h: 141: cut_cnt[i]++;
  9068  01187C  0100               	movlb	0	; () banked
  9069  01187E  51C2               	movf	Auto_cut@i& (0+255),w,b
  9070  011880  0D02               	mullw	2
  9071  011882  0E84               	movlw	low _cut_cnt
  9072  011884  24F3               	addwf	prodl,w,c
  9073  011886  6ED9               	movwf	fsr2l,c
  9074  011888  0E00               	movlw	high _cut_cnt
  9075  01188A  20F4               	addwfc	prodh,w,c
  9076  01188C  6EDA               	movwf	fsr2h,c
  9077  01188E  2ADE               	incf	postinc2,f,c
  9078  011890  0E00               	movlw	0
  9079  011892  22DD               	addwfc	postdec2,f,c
  9080                           
  9081                           ;PIC18F27J53-ChargeStation6-04.h: 142: if (cut_cnt[i] > 6) {
  9082  011894  0100               	movlb	0	; () banked
  9083  011896  51C2               	movf	Auto_cut@i& (0+255),w,b
  9084  011898  0D02               	mullw	2
  9085  01189A  0E84               	movlw	low _cut_cnt
  9086  01189C  24F3               	addwf	prodl,w,c
  9087  01189E  6ED9               	movwf	fsr2l,c
  9088  0118A0  0E00               	movlw	high _cut_cnt
  9089  0118A2  20F4               	addwfc	prodh,w,c
  9090  0118A4  6EDA               	movwf	fsr2h,c
  9091  0118A6  0E01               	movlw	1
  9092  0118A8  50DB               	movf	plusw2,w,c
  9093  0118AA  E104               	bnz	u5980
  9094  0118AC  0E07               	movlw	7
  9095  0118AE  5CDE               	subwf	postinc2,w,c
  9096  0118B0  A0D8               	btfss	status,0,c
  9097  0118B2  D015               	goto	l5733
  9098  0118B4                     u5980:
  9099                           
  9100                           ; BSR set to: 0
  9101                           ;PIC18F27J53-ChargeStation6-04.h: 143: OUT(i, 0);
  9102  0118B4  0E00               	movlw	0
  9103  0118B6  6E20               	movwf	OUT@value,c
  9104  0118B8  0100               	movlb	0	; () banked
  9105  0118BA  51C2               	movf	Auto_cut@i& (0+255),w,b
  9106  0118BC  EC49  F096         	call	_OUT
  9107                           
  9108                           ;PIC18F27J53-ChargeStation6-04.h: 144: }
  9109                           ;PIC18F27J53-ChargeStation6-04.h: 145: } else {
  9110  0118C0  D00E               	goto	l5733
  9111  0118C2                     l5731:
  9112                           
  9113                           ;PIC18F27J53-ChargeStation6-04.h: 146: cut_cnt[i] = 0;
  9114  0118C2  0100               	movlb	0	; () banked
  9115  0118C4  51C2               	movf	Auto_cut@i& (0+255),w,b
  9116  0118C6  0D02               	mullw	2
  9117  0118C8  0E84               	movlw	low _cut_cnt
  9118  0118CA  24F3               	addwf	prodl,w,c
  9119  0118CC  6ED9               	movwf	fsr2l,c
  9120  0118CE  0E00               	movlw	high _cut_cnt
  9121  0118D0  20F4               	addwfc	prodh,w,c
  9122  0118D2  6EDA               	movwf	fsr2h,c
  9123  0118D4  0E00               	movlw	0
  9124  0118D6  6EDE               	movwf	postinc2,c
  9125  0118D8  0E00               	movlw	0
  9126  0118DA  6EDD               	movwf	postdec2,c
  9127                           
  9128                           ; BSR set to: 0
  9129  0118DC  D000               	goto	l5733
  9130  0118DE                     l5733:
  9131  0118DE  0100               	movlb	0	; () banked
  9132  0118E0  2BC2               	incf	Auto_cut@i& (0+255),f,b
  9133                           
  9134                           ; BSR set to: 0
  9135  0118E2  0E02               	movlw	2
  9136  0118E4  0100               	movlb	0	; () banked
  9137  0118E6  65C2               	cpfsgt	Auto_cut@i& (0+255),b
  9138  0118E8  D783               	goto	l5721
  9139  0118EA  0012               	return	
  9140                           
  9141                           ; BSR set to: 0
  9142                           
  9143                           ; BSR set to: 0
  9144  0118EC  0012               	return		;funcret
  9145  0118EE                     __end_of_Auto_cut:
  9146                           	opt stack 0
  9147                           tblptru	equ	0xFF8
  9148                           tblptrh	equ	0xFF7
  9149                           tblptrl	equ	0xFF6
  9150                           tablat	equ	0xFF5
  9151                           prodh	equ	0xFF4
  9152                           prodl	equ	0xFF3
  9153                           intcon	equ	0xFF2
  9154                           postinc0	equ	0xFEE
  9155                           wreg	equ	0xFE8
  9156                           indf1	equ	0xFE7
  9157                           postdec1	equ	0xFE5
  9158                           fsr1h	equ	0xFE2
  9159                           fsr1l	equ	0xFE1
  9160                           indf2	equ	0xFDF
  9161                           postinc2	equ	0xFDE
  9162                           postdec2	equ	0xFDD
  9163                           plusw2	equ	0xFDB
  9164                           fsr2h	equ	0xFDA
  9165                           fsr2l	equ	0xFD9
  9166                           status	equ	0xFD8
  9167                           
  9168 ;; *************** function ___wmul *****************
  9169 ;; Defined at:
  9170 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  9171 ;; Parameters:    Size  Location     Type
  9172 ;;  multiplier      2    1[BANK0 ] unsigned int 
  9173 ;;  multiplicand    2    3[BANK0 ] unsigned int 
  9174 ;; Auto vars:     Size  Location     Type
  9175 ;;  product         2    5[BANK0 ] unsigned int 
  9176 ;; Return value:  Size  Location     Type
  9177 ;;                  2    1[BANK0 ] unsigned int 
  9178 ;; Registers used:
  9179 ;;		wreg, status,2, status,0, prodl, prodh
  9180 ;; Tracked objects:
  9181 ;;		On entry : 0/0
  9182 ;;		On exit  : 0/0
  9183 ;;		Unchanged: 0/0
  9184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9185 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9186 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9188 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9189 ;;Total ram usage:        6 bytes
  9190 ;; Hardware stack levels used:    1
  9191 ;; Hardware stack levels required when called:    4
  9192 ;; This function calls:
  9193 ;;		Nothing
  9194 ;; This function is called by:
  9195 ;;		_Auto_cut
  9196 ;; This function uses a non-reentrant model
  9197 ;;
  9198                           
  9199                           	psect	text35
  9200  012FC4                     __ptext35:
  9201                           	opt stack 0
  9202  012FC4                     ___wmul:
  9203                           	opt stack 24
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;incstack = 0
  9207  012FC4  0100               	movlb	0	; () banked
  9208  012FC6  51BA               	movf	___wmul@multiplier& (0+255),w,b
  9209  012FC8  0100               	movlb	0	; () banked
  9210  012FCA  03BC               	mulwf	___wmul@multiplicand& (0+255),b
  9211  012FCC  CFF3 F0BE          	movff	prodl,___wmul@product
  9212  012FD0  CFF4 F0BF          	movff	prodh,___wmul@product+1
  9213  012FD4  0100               	movlb	0	; () banked
  9214  012FD6  51BA               	movf	___wmul@multiplier& (0+255),w,b
  9215  012FD8  0100               	movlb	0	; () banked
  9216  012FDA  03BD               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9217  012FDC  50F3               	movf	prodl,w,c
  9218  012FDE  0100               	movlb	0	; () banked
  9219  012FE0  27BF               	addwf	(___wmul@product+1)& (0+255),f,b
  9220  012FE2  0100               	movlb	0	; () banked
  9221  012FE4  51BB               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9222  012FE6  0100               	movlb	0	; () banked
  9223  012FE8  03BC               	mulwf	___wmul@multiplicand& (0+255),b
  9224  012FEA  50F3               	movf	prodl,w,c
  9225  012FEC  0100               	movlb	0	; () banked
  9226  012FEE  27BF               	addwf	(___wmul@product+1)& (0+255),f,b
  9227                           
  9228                           ; BSR set to: 0
  9229  012FF0  C0BE  F0BA         	movff	___wmul@product,?___wmul
  9230  012FF4  C0BF  F0BB         	movff	___wmul@product+1,?___wmul+1
  9231  012FF8  0012               	return	
  9232                           
  9233                           ; BSR set to: 0
  9234                           
  9235                           ; BSR set to: 0
  9236  012FFA  0012               	return		;funcret
  9237  012FFC                     __end_of___wmul:
  9238                           	opt stack 0
  9239                           tblptru	equ	0xFF8
  9240                           tblptrh	equ	0xFF7
  9241                           tblptrl	equ	0xFF6
  9242                           tablat	equ	0xFF5
  9243                           prodh	equ	0xFF4
  9244                           prodl	equ	0xFF3
  9245                           intcon	equ	0xFF2
  9246                           postinc0	equ	0xFEE
  9247                           wreg	equ	0xFE8
  9248                           indf1	equ	0xFE7
  9249                           postdec1	equ	0xFE5
  9250                           fsr1h	equ	0xFE2
  9251                           fsr1l	equ	0xFE1
  9252                           indf2	equ	0xFDF
  9253                           postinc2	equ	0xFDE
  9254                           postdec2	equ	0xFDD
  9255                           plusw2	equ	0xFDB
  9256                           fsr2h	equ	0xFDA
  9257                           fsr2l	equ	0xFD9
  9258                           status	equ	0xFD8
  9259                           
  9260 ;; *************** function _OUT *****************
  9261 ;; Defined at:
  9262 ;;		line 45 in file "PIC18F27J53-ChargeStation6-04.h"
  9263 ;; Parameters:    Size  Location     Type
  9264 ;;  b               1    wreg     unsigned char 
  9265 ;;  value           1   31[COMRAM] unsigned char 
  9266 ;; Auto vars:     Size  Location     Type
  9267 ;;  b               1   32[COMRAM] unsigned char 
  9268 ;; Return value:  Size  Location     Type
  9269 ;;		None               void
  9270 ;; Registers used:
  9271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9272 ;; Tracked objects:
  9273 ;;		On entry : 0/0
  9274 ;;		On exit  : 0/0
  9275 ;;		Unchanged: 0/0
  9276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9277 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9278 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9280 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9281 ;;Total ram usage:        2 bytes
  9282 ;; Hardware stack levels used:    1
  9283 ;; Hardware stack levels required when called:    4
  9284 ;; This function calls:
  9285 ;;		Nothing
  9286 ;; This function is called by:
  9287 ;;		_Auto_cut
  9288 ;;		_port_loop
  9289 ;;		_sleep_loop
  9290 ;;		_main
  9291 ;; This function uses a non-reentrant model
  9292 ;;
  9293                           
  9294                           	psect	text36
  9295  012C92                     __ptext36:
  9296                           	opt stack 0
  9297  012C92                     _OUT:
  9298                           	opt stack 25
  9299                           
  9300                           ; BSR set to: 0
  9301                           ;incstack = 0
  9302                           ;OUT@b stored from wreg
  9303  012C92  6E21               	movwf	OUT@b,c
  9304                           
  9305                           ;PIC18F27J53-ChargeStation6-04.h: 46: out_flag[b] = value;
  9306  012C94  5021               	movf	OUT@b,w,c
  9307  012C96  0D01               	mullw	1
  9308  012C98  0E8D               	movlw	low _out_flag
  9309  012C9A  24F3               	addwf	prodl,w,c
  9310  012C9C  6ED9               	movwf	fsr2l,c
  9311  012C9E  0E00               	movlw	high _out_flag
  9312  012CA0  20F4               	addwfc	prodh,w,c
  9313  012CA2  6EDA               	movwf	fsr2h,c
  9314  012CA4  C020  FFDF         	movff	OUT@value,indf2
  9315                           
  9316                           ;PIC18F27J53-ChargeStation6-04.h: 47: switch (b) {
  9317  012CA8  D012               	goto	l5457
  9318  012CAA                     l568:
  9319                           
  9320                           ;PIC18F27J53-ChargeStation6-04.h: 49: LATA5 = value;
  9321  012CAA  B020               	btfsc	OUT@value,0,c
  9322  012CAC  D002               	bra	u5735
  9323  012CAE  9A89               	bcf	3977,5,c	;volatile
  9324  012CB0  D001               	bra	u5736
  9325  012CB2                     u5735:
  9326  012CB2  8A89               	bsf	3977,5,c	;volatile
  9327  012CB4                     u5736:
  9328                           
  9329                           ;PIC18F27J53-ChargeStation6-04.h: 50: break;
  9330  012CB4  0012               	return	
  9331  012CB6                     l570:
  9332                           
  9333                           ;PIC18F27J53-ChargeStation6-04.h: 52: LATA6 = value;
  9334  012CB6  B020               	btfsc	OUT@value,0,c
  9335  012CB8  D002               	bra	u5745
  9336  012CBA  9C89               	bcf	3977,6,c	;volatile
  9337  012CBC  D001               	bra	u5746
  9338  012CBE                     u5745:
  9339  012CBE  8C89               	bsf	3977,6,c	;volatile
  9340  012CC0                     u5746:
  9341                           
  9342                           ;PIC18F27J53-ChargeStation6-04.h: 53: break;
  9343  012CC0  0012               	return	
  9344  012CC2                     l571:
  9345                           
  9346                           ;PIC18F27J53-ChargeStation6-04.h: 55: LATA7 = value;
  9347  012CC2  B020               	btfsc	OUT@value,0,c
  9348  012CC4  D002               	bra	u5755
  9349  012CC6  9E89               	bcf	3977,7,c	;volatile
  9350  012CC8  D001               	bra	u5756
  9351  012CCA                     u5755:
  9352  012CCA  8E89               	bsf	3977,7,c	;volatile
  9353  012CCC                     u5756:
  9354                           
  9355                           ;PIC18F27J53-ChargeStation6-04.h: 57: }
  9356                           
  9357                           ;PIC18F27J53-ChargeStation6-04.h: 56: break;
  9358  012CCC  0012               	return	
  9359  012CCE                     l5457:
  9360  012CCE  5021               	movf	OUT@b,w,c
  9361                           
  9362                           ; Switch size 1, requested type "space"
  9363                           ; Number of cases is 3, Range of values is 0 to 2
  9364                           ; switch strategies available:
  9365                           ; Name         Instructions Cycles
  9366                           ; simple_byte           10     6 (average)
  9367                           ;	Chosen strategy is simple_byte
  9368  012CD0  0A00               	xorlw	0	; case 0
  9369  012CD2  B4D8               	btfsc	status,2,c
  9370  012CD4  D7EA               	goto	l568
  9371  012CD6  0A01               	xorlw	1	; case 1
  9372  012CD8  B4D8               	btfsc	status,2,c
  9373  012CDA  D7ED               	goto	l570
  9374  012CDC  0A03               	xorlw	3	; case 2
  9375  012CDE  A4D8               	btfss	status,2,c
  9376  012CE0  0012               	return	
  9377  012CE2  D7EF               	goto	l571
  9378  012CE4  0012               	return		;funcret
  9379  012CE6                     __end_of_OUT:
  9380                           	opt stack 0
  9381                           tblptru	equ	0xFF8
  9382                           tblptrh	equ	0xFF7
  9383                           tblptrl	equ	0xFF6
  9384                           tablat	equ	0xFF5
  9385                           prodh	equ	0xFF4
  9386                           prodl	equ	0xFF3
  9387                           intcon	equ	0xFF2
  9388                           postinc0	equ	0xFEE
  9389                           wreg	equ	0xFE8
  9390                           indf1	equ	0xFE7
  9391                           postdec1	equ	0xFE5
  9392                           fsr1h	equ	0xFE2
  9393                           fsr1l	equ	0xFE1
  9394                           indf2	equ	0xFDF
  9395                           postinc2	equ	0xFDE
  9396                           postdec2	equ	0xFDD
  9397                           plusw2	equ	0xFDB
  9398                           fsr2h	equ	0xFDA
  9399                           fsr2l	equ	0xFD9
  9400                           status	equ	0xFD8
  9401                           
  9402 ;; *************** function _IN *****************
  9403 ;; Defined at:
  9404 ;;		line 60 in file "PIC18F27J53-ChargeStation6-04.h"
  9405 ;; Parameters:    Size  Location     Type
  9406 ;;  b               1    wreg     unsigned char 
  9407 ;; Auto vars:     Size  Location     Type
  9408 ;;  b               1   31[COMRAM] unsigned char 
  9409 ;; Return value:  Size  Location     Type
  9410 ;;                  1    wreg      unsigned char 
  9411 ;; Registers used:
  9412 ;;		wreg, status,2, status,0
  9413 ;; Tracked objects:
  9414 ;;		On entry : 0/0
  9415 ;;		On exit  : 0/0
  9416 ;;		Unchanged: 0/0
  9417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9421 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9422 ;;Total ram usage:        1 bytes
  9423 ;; Hardware stack levels used:    1
  9424 ;; Hardware stack levels required when called:    4
  9425 ;; This function calls:
  9426 ;;		Nothing
  9427 ;; This function is called by:
  9428 ;;		_Auto_cut
  9429 ;; This function uses a non-reentrant model
  9430 ;;
  9431                           
  9432                           	psect	text37
  9433  01312C                     __ptext37:
  9434                           	opt stack 0
  9435  01312C                     _IN:
  9436                           	opt stack 24
  9437                           
  9438                           ;incstack = 0
  9439                           ;IN@b stored from wreg
  9440  01312C  6E20               	movwf	IN@b,c
  9441                           
  9442                           ;PIC18F27J53-ChargeStation6-04.h: 61: switch (b) {
  9443  01312E  D007               	goto	l5475
  9444  013130                     l5461:
  9445                           
  9446                           ;PIC18F27J53-ChargeStation6-04.h: 63: return 8;
  9447  013130  0E08               	movlw	8
  9448  013132  0012               	return	
  9449  013134                     l5465:
  9450                           
  9451                           ;PIC18F27J53-ChargeStation6-04.h: 65: return 9;
  9452  013134  0E09               	movlw	9
  9453  013136  0012               	return	
  9454  013138                     l5469:
  9455                           
  9456                           ;PIC18F27J53-ChargeStation6-04.h: 67: return 10;
  9457  013138  0E0A               	movlw	10
  9458  01313A  0012               	return	
  9459                           
  9460                           ;PIC18F27J53-ChargeStation6-04.h: 68: }
  9461  01313C  D00B               	goto	l5477
  9462  01313E                     l5475:
  9463  01313E  5020               	movf	IN@b,w,c
  9464                           
  9465                           ; Switch size 1, requested type "space"
  9466                           ; Number of cases is 3, Range of values is 0 to 2
  9467                           ; switch strategies available:
  9468                           ; Name         Instructions Cycles
  9469                           ; simple_byte           10     6 (average)
  9470                           ;	Chosen strategy is simple_byte
  9471  013140  0A00               	xorlw	0	; case 0
  9472  013142  B4D8               	btfsc	status,2,c
  9473  013144  D7F5               	goto	l5461
  9474  013146  0A01               	xorlw	1	; case 1
  9475  013148  B4D8               	btfsc	status,2,c
  9476  01314A  D7F4               	goto	l5465
  9477  01314C  0A03               	xorlw	3	; case 2
  9478  01314E  B4D8               	btfsc	status,2,c
  9479  013150  D7F3               	goto	l5469
  9480  013152  D000               	goto	l5477
  9481  013154                     l5477:
  9482                           
  9483                           ;PIC18F27J53-ChargeStation6-04.h: 69: return 0;
  9484  013154  0E00               	movlw	0
  9485  013156  0012               	return	
  9486  013158  0012               	return		;funcret
  9487  01315A                     __end_of_IN:
  9488                           	opt stack 0
  9489                           tblptru	equ	0xFF8
  9490                           tblptrh	equ	0xFF7
  9491                           tblptrl	equ	0xFF6
  9492                           tablat	equ	0xFF5
  9493                           prodh	equ	0xFF4
  9494                           prodl	equ	0xFF3
  9495                           intcon	equ	0xFF2
  9496                           postinc0	equ	0xFEE
  9497                           wreg	equ	0xFE8
  9498                           indf1	equ	0xFE7
  9499                           postdec1	equ	0xFE5
  9500                           fsr1h	equ	0xFE2
  9501                           fsr1l	equ	0xFE1
  9502                           indf2	equ	0xFDF
  9503                           postinc2	equ	0xFDE
  9504                           postdec2	equ	0xFDD
  9505                           plusw2	equ	0xFDB
  9506                           fsr2h	equ	0xFDA
  9507                           fsr2l	equ	0xFD9
  9508                           status	equ	0xFD8
  9509                           
  9510 ;; *************** function _ADC *****************
  9511 ;; Defined at:
  9512 ;;		line 169 in file "../My_header\My_header.h"
  9513 ;; Parameters:    Size  Location     Type
  9514 ;;  ch              1    wreg     unsigned char 
  9515 ;; Auto vars:     Size  Location     Type
  9516 ;;  ch              1    0[BANK0 ] unsigned char 
  9517 ;; Return value:  Size  Location     Type
  9518 ;;                  2   31[COMRAM] unsigned int 
  9519 ;; Registers used:
  9520 ;;		wreg, status,2, status,0
  9521 ;; Tracked objects:
  9522 ;;		On entry : 0/0
  9523 ;;		On exit  : 0/0
  9524 ;;		Unchanged: 0/0
  9525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9527 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9529 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9530 ;;Total ram usage:        4 bytes
  9531 ;; Hardware stack levels used:    1
  9532 ;; Hardware stack levels required when called:    4
  9533 ;; This function calls:
  9534 ;;		Nothing
  9535 ;; This function is called by:
  9536 ;;		_Auto_cut
  9537 ;; This function uses a non-reentrant model
  9538 ;;
  9539                           
  9540                           	psect	text38
  9541  013186                     __ptext38:
  9542                           	opt stack 0
  9543  013186                     _ADC:
  9544                           	opt stack 24
  9545                           
  9546                           ;incstack = 0
  9547                           ;ADC@ch stored from wreg
  9548  013186  0100               	movlb	0	; () banked
  9549  013188  6FB9               	movwf	ADC@ch& (0+255),b
  9550                           
  9551                           ; BSR set to: 0
  9552                           ;My_header\My_header.h: 170: ADCON0bits.CHS = ch;
  9553  01318A  C0B9  F022         	movff	ADC@ch,??_ADC
  9554  01318E  4622               	rlncf	??_ADC,f,c
  9555  013190  4622               	rlncf	??_ADC,f,c
  9556  013192  50C2               	movf	4034,w,c	;volatile
  9557  013194  1822               	xorwf	??_ADC,w,c
  9558  013196  0BC3               	andlw	-61
  9559  013198  1822               	xorwf	??_ADC,w,c
  9560  01319A  6EC2               	movwf	4034,c	;volatile
  9561                           
  9562                           ; BSR set to: 0
  9563                           ;My_header\My_header.h: 171: ADCON0bits.ADON = 1;
  9564  01319C  80C2               	bsf	4034,0,c	;volatile
  9565                           
  9566                           ; BSR set to: 0
  9567                           ;My_header\My_header.h: 173: ADCON0bits.GO_nDONE = 1;
  9568  01319E  82C2               	bsf	4034,1,c	;volatile
  9569                           
  9570                           ;My_header\My_header.h: 174: while (ADCON0bits.GO_nDONE);
  9571  0131A0  D000               	goto	l153
  9572  0131A2                     l153:
  9573  0131A2  B2C2               	btfsc	4034,1,c	;volatile
  9574  0131A4  D7FE               	goto	l153
  9575                           
  9576                           ;My_header\My_header.h: 175: return ADRES;
  9577  0131A6  CFC3 F020          	movff	4035,?_ADC	;volatile
  9578  0131AA  CFC4 F021          	movff	4036,?_ADC+1	;volatile
  9579  0131AE  0012               	return		;funcret
  9580  0131B0                     __end_of_ADC:
  9581                           	opt stack 0
  9582                           tblptru	equ	0xFF8
  9583                           tblptrh	equ	0xFF7
  9584                           tblptrl	equ	0xFF6
  9585                           tablat	equ	0xFF5
  9586                           prodh	equ	0xFF4
  9587                           prodl	equ	0xFF3
  9588                           intcon	equ	0xFF2
  9589                           postinc0	equ	0xFEE
  9590                           wreg	equ	0xFE8
  9591                           indf1	equ	0xFE7
  9592                           postdec1	equ	0xFE5
  9593                           fsr1h	equ	0xFE2
  9594                           fsr1l	equ	0xFE1
  9595                           indf2	equ	0xFDF
  9596                           postinc2	equ	0xFDE
  9597                           postdec2	equ	0xFDD
  9598                           plusw2	equ	0xFDB
  9599                           fsr2h	equ	0xFDA
  9600                           fsr2l	equ	0xFD9
  9601                           status	equ	0xFD8
  9602                           
  9603 ;; *************** function _main_init *****************
  9604 ;; Defined at:
  9605 ;;		line 254 in file "PIC18F27J53-ChargeStation6-04.h"
  9606 ;; Parameters:    Size  Location     Type
  9607 ;;		None
  9608 ;; Auto vars:     Size  Location     Type
  9609 ;;  rxbuf         200    0[BANK2 ] unsigned char [200]
  9610 ;;  txbuf         200    0[BANK1 ] unsigned char [200]
  9611 ;; Return value:  Size  Location     Type
  9612 ;;		None               void
  9613 ;; Registers used:
  9614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9615 ;; Tracked objects:
  9616 ;;		On entry : 0/0
  9617 ;;		On exit  : 0/0
  9618 ;;		Unchanged: 0/0
  9619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9621 ;;      Locals:         0       0     200     200       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9623 ;;      Totals:         0       0     200     200       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9624 ;;Total ram usage:      400 bytes
  9625 ;; Hardware stack levels used:    1
  9626 ;; Hardware stack levels required when called:    9
  9627 ;; This function calls:
  9628 ;;		_ADC_init
  9629 ;;		_CTMU_init
  9630 ;;		_I2C_LCD_init
  9631 ;;		_I2C_init
  9632 ;;		_RTCC_init
  9633 ;;		_UART_init
  9634 ;;		_ringbuf_init
  9635 ;;		_timer0_init
  9636 ;;		_timer1_init
  9637 ;;		_timer3_init
  9638 ;; This function is called by:
  9639 ;;		_main
  9640 ;; This function uses a non-reentrant model
  9641 ;;
  9642                           
  9643                           	psect	text39
  9644  01257C                     __ptext39:
  9645                           	opt stack 0
  9646  01257C                     _main_init:
  9647                           	opt stack 21
  9648                           
  9649                           ;PIC18F27J53-ChargeStation6-04.h: 256: OSCCONbits.IRCF = 7;
  9650                           
  9651                           ;incstack = 0
  9652  01257C  88D3               	bsf	4051,4,c	;volatile
  9653  01257E  8AD3               	bsf	4051,5,c	;volatile
  9654  012580  8CD3               	bsf	4051,6,c	;volatile
  9655                           
  9656                           ;PIC18F27J53-ChargeStation6-04.h: 257: OSCTUNEbits.PLLEN = 1;
  9657  012582  8C9B               	bsf	3995,6,c	;volatile
  9658                           
  9659                           ;PIC18F27J53-ChargeStation6-04.h: 258: OSCCONbits.SCS = 0;
  9660  012584  0EFC               	movlw	-4
  9661  012586  16D3               	andwf	4051,f,c	;volatile
  9662                           
  9663                           ;PIC18F27J53-ChargeStation6-04.h: 259: TRISA = 0b00011111;
  9664  012588  0E1F               	movlw	31
  9665  01258A  6E92               	movwf	3986,c	;volatile
  9666                           
  9667                           ;PIC18F27J53-ChargeStation6-04.h: 260: TRISB = 0b00111111;
  9668  01258C  0E3F               	movlw	63
  9669  01258E  6E93               	movwf	3987,c	;volatile
  9670                           
  9671                           ;PIC18F27J53-ChargeStation6-04.h: 261: TRISC = 0b10110010;
  9672  012590  0EB2               	movlw	178
  9673  012592  6E94               	movwf	3988,c	;volatile
  9674                           
  9675                           ;PIC18F27J53-ChargeStation6-04.h: 262: ANCON0 = 0b11111111;
  9676  012594  010F               	movlb	15	; () banked
  9677  012596  6948               	setf	72,b	;volatile
  9678                           
  9679                           ;PIC18F27J53-ChargeStation6-04.h: 263: ANCON1 = 0b00011000;
  9680  012598  0E18               	movlw	24
  9681  01259A  010F               	movlb	15	; () banked
  9682  01259C  6F49               	movwf	73,b	;volatile
  9683                           
  9684                           ; BSR set to: 15
  9685                           ;PIC18F27J53-ChargeStation6-04.h: 264: INTCON2bits.RBPU = 0;
  9686  01259E  9EF1               	bcf	intcon2,7,c	;volatile
  9687                           
  9688                           ; BSR set to: 15
  9689                           ;PIC18F27J53-ChargeStation6-04.h: 266: timer0_init(6);
  9690  0125A0  0E06               	movlw	6
  9691  0125A2  EC34  F098         	call	_timer0_init
  9692                           
  9693                           ;PIC18F27J53-ChargeStation6-04.h: 267: timer1_init(0, 2);
  9694  0125A6  0E02               	movlw	2
  9695  0125A8  6E20               	movwf	timer1_init@clock_select,c
  9696  0125AA  0E00               	movlw	0
  9697  0125AC  EC7F  F097         	call	_timer1_init
  9698                           
  9699                           ;PIC18F27J53-ChargeStation6-04.h: 268: timer3_init(2);
  9700  0125B0  0E02               	movlw	2
  9701  0125B2  ECEB  F098         	call	_timer3_init
  9702                           
  9703                           ;PIC18F27J53-ChargeStation6-04.h: 269: I2C_init();
  9704  0125B6  ECBC  F099         	call	_I2C_init	;wreg free
  9705                           
  9706                           ;PIC18F27J53-ChargeStation6-04.h: 270: I2C_LCD_init();
  9707  0125BA  EC73  F096         	call	_I2C_LCD_init	;wreg free
  9708                           
  9709                           ;PIC18F27J53-ChargeStation6-04.h: 271: ADC_init(0);
  9710  0125BE  0E00               	movlw	0
  9711  0125C0  EC64  F099         	call	_ADC_init
  9712                           
  9713                           ;PIC18F27J53-ChargeStation6-04.h: 272: RTCC_init();
  9714  0125C4  EC66  F098         	call	_RTCC_init	;wreg free
  9715                           
  9716                           ;PIC18F27J53-ChargeStation6-04.h: 273: CTMU_init();
  9717  0125C8  EC7E  F098         	call	_CTMU_init	;wreg free
  9718                           
  9719                           ;PIC18F27J53-ChargeStation6-04.h: 275: UART_init();
  9720  0125CC  EC45  F099         	call	_UART_init	;wreg free
  9721                           
  9722                           ;PIC18F27J53-ChargeStation6-04.h: 276: uint8_t txbuf[200];
  9723                           ;PIC18F27J53-ChargeStation6-04.h: 277: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
  9724  0125D0  0ECE               	movlw	low _tx_buf
  9725  0125D2  0100               	movlb	0	; () banked
  9726  0125D4  6FB9               	movwf	ringbuf_init@rb& (0+255),b
  9727  0125D6  0E01               	movlw	high _tx_buf
  9728  0125D8  0100               	movlb	0	; () banked
  9729  0125DA  6FBA               	movwf	(ringbuf_init@rb+1)& (0+255),b
  9730  0125DC  0E00               	movlw	low main_init@txbuf
  9731  0125DE  0100               	movlb	0	; () banked
  9732  0125E0  6FBB               	movwf	ringbuf_init@internal_buf& (0+255),b
  9733  0125E2  0E01               	movlw	high main_init@txbuf
  9734  0125E4  0100               	movlb	0	; () banked
  9735  0125E6  6FBC               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  9736  0125E8  0EC8               	movlw	200
  9737  0125EA  0100               	movlb	0	; () banked
  9738  0125EC  6FBD               	movwf	ringbuf_init@bufsize& (0+255),b
  9739  0125EE  EC38  F097         	call	_ringbuf_init	;wreg free
  9740                           
  9741                           ;PIC18F27J53-ChargeStation6-04.h: 278: uint8_t rxbuf[200];
  9742                           ;PIC18F27J53-ChargeStation6-04.h: 279: ringbuf_init(&rx_buf, rxbuf, sizeof (rxbuf));
  9743  0125F2  0EC9               	movlw	low _rx_buf
  9744  0125F4  0100               	movlb	0	; () banked
  9745  0125F6  6FB9               	movwf	ringbuf_init@rb& (0+255),b
  9746  0125F8  0E01               	movlw	high _rx_buf
  9747  0125FA  0100               	movlb	0	; () banked
  9748  0125FC  6FBA               	movwf	(ringbuf_init@rb+1)& (0+255),b
  9749  0125FE  0E00               	movlw	low main_init@rxbuf
  9750  012600  0100               	movlb	0	; () banked
  9751  012602  6FBB               	movwf	ringbuf_init@internal_buf& (0+255),b
  9752  012604  0E02               	movlw	high main_init@rxbuf
  9753  012606  0100               	movlb	0	; () banked
  9754  012608  6FBC               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  9755  01260A  0EC8               	movlw	200
  9756  01260C  0100               	movlb	0	; () banked
  9757  01260E  6FBD               	movwf	ringbuf_init@bufsize& (0+255),b
  9758  012610  EC38  F097         	call	_ringbuf_init	;wreg free
  9759  012614  0012               	return		;funcret
  9760  012616                     __end_of_main_init:
  9761                           	opt stack 0
  9762                           tblptru	equ	0xFF8
  9763                           tblptrh	equ	0xFF7
  9764                           tblptrl	equ	0xFF6
  9765                           tablat	equ	0xFF5
  9766                           prodh	equ	0xFF4
  9767                           prodl	equ	0xFF3
  9768                           intcon	equ	0xFF2
  9769                           intcon2	equ	0xFF1
  9770                           postinc0	equ	0xFEE
  9771                           wreg	equ	0xFE8
  9772                           indf1	equ	0xFE7
  9773                           postdec1	equ	0xFE5
  9774                           fsr1h	equ	0xFE2
  9775                           fsr1l	equ	0xFE1
  9776                           indf2	equ	0xFDF
  9777                           postinc2	equ	0xFDE
  9778                           postdec2	equ	0xFDD
  9779                           plusw2	equ	0xFDB
  9780                           fsr2h	equ	0xFDA
  9781                           fsr2l	equ	0xFD9
  9782                           status	equ	0xFD8
  9783                           
  9784 ;; *************** function _timer3_init *****************
  9785 ;; Defined at:
  9786 ;;		line 86 in file "../My_header\My_header.h"
  9787 ;; Parameters:    Size  Location     Type
  9788 ;;  prescaler       1    wreg     unsigned char 
  9789 ;; Auto vars:     Size  Location     Type
  9790 ;;  prescaler       1   32[COMRAM] unsigned char 
  9791 ;; Return value:  Size  Location     Type
  9792 ;;		None               void
  9793 ;; Registers used:
  9794 ;;		wreg, status,2, status,0
  9795 ;; Tracked objects:
  9796 ;;		On entry : 0/0
  9797 ;;		On exit  : 0/0
  9798 ;;		Unchanged: 0/0
  9799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9801 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9802 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9803 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9804 ;;Total ram usage:        2 bytes
  9805 ;; Hardware stack levels used:    1
  9806 ;; Hardware stack levels required when called:    4
  9807 ;; This function calls:
  9808 ;;		Nothing
  9809 ;; This function is called by:
  9810 ;;		_main_init
  9811 ;; This function uses a non-reentrant model
  9812 ;;
  9813                           
  9814                           	psect	text40
  9815  0131D6                     __ptext40:
  9816                           	opt stack 0
  9817  0131D6                     _timer3_init:
  9818                           	opt stack 25
  9819                           
  9820                           ;incstack = 0
  9821                           ;timer3_init@prescaler stored from wreg
  9822  0131D6  6E21               	movwf	timer3_init@prescaler,c
  9823                           
  9824                           ;My_header\My_header.h: 87: T3CONbits.TMR3CS = 0;
  9825  0131D8  0E3F               	movlw	-193
  9826  0131DA  1679               	andwf	3961,f,c	;volatile
  9827                           
  9828                           ;My_header\My_header.h: 88: T3CONbits.T3OSCEN = 0;
  9829  0131DC  9679               	bcf	3961,3,c	;volatile
  9830                           
  9831                           ;My_header\My_header.h: 89: T3CONbits.T3CKPS = prescaler;
  9832  0131DE  C021  F020         	movff	timer3_init@prescaler,??_timer3_init
  9833  0131E2  3A20               	swapf	??_timer3_init,f,c
  9834  0131E4  5079               	movf	3961,w,c	;volatile
  9835  0131E6  1820               	xorwf	??_timer3_init,w,c
  9836  0131E8  0BCF               	andlw	-49
  9837  0131EA  1820               	xorwf	??_timer3_init,w,c
  9838  0131EC  6E79               	movwf	3961,c	;volatile
  9839                           
  9840                           ;My_header\My_header.h: 90: T3CONbits.RD163 = 0;
  9841  0131EE  9E79               	bcf	3961,7,c	;volatile
  9842                           
  9843                           ;My_header\My_header.h: 91: T3CONbits.TMR3ON = 1;
  9844  0131F0  8079               	bsf	3961,0,c	;volatile
  9845                           
  9846                           ;My_header\My_header.h: 92: IPR2bits.TMR3IP = 0;
  9847  0131F2  92A2               	bcf	4002,1,c	;volatile
  9848                           
  9849                           ;My_header\My_header.h: 93: PIR2bits.TMR3IF = 0;
  9850  0131F4  92A1               	bcf	4001,1,c	;volatile
  9851                           
  9852                           ;My_header\My_header.h: 94: PIE2bits.TMR3IE = 1;
  9853  0131F6  82A0               	bsf	4000,1,c	;volatile
  9854                           
  9855                           ;My_header\My_header.h: 95: INTCONbits.PEIE = 1;
  9856  0131F8  8CF2               	bsf	intcon,6,c	;volatile
  9857  0131FA  0012               	return		;funcret
  9858  0131FC                     __end_of_timer3_init:
  9859                           	opt stack 0
  9860                           tblptru	equ	0xFF8
  9861                           tblptrh	equ	0xFF7
  9862                           tblptrl	equ	0xFF6
  9863                           tablat	equ	0xFF5
  9864                           prodh	equ	0xFF4
  9865                           prodl	equ	0xFF3
  9866                           intcon	equ	0xFF2
  9867                           intcon2	equ	0xFF1
  9868                           postinc0	equ	0xFEE
  9869                           wreg	equ	0xFE8
  9870                           indf1	equ	0xFE7
  9871                           postdec1	equ	0xFE5
  9872                           fsr1h	equ	0xFE2
  9873                           fsr1l	equ	0xFE1
  9874                           indf2	equ	0xFDF
  9875                           postinc2	equ	0xFDE
  9876                           postdec2	equ	0xFDD
  9877                           plusw2	equ	0xFDB
  9878                           fsr2h	equ	0xFDA
  9879                           fsr2l	equ	0xFD9
  9880                           status	equ	0xFD8
  9881                           
  9882 ;; *************** function _timer1_init *****************
  9883 ;; Defined at:
  9884 ;;		line 55 in file "../My_header\My_header.h"
  9885 ;; Parameters:    Size  Location     Type
  9886 ;;  prescaler       1    wreg     unsigned char 
  9887 ;;  clock_select    1   31[COMRAM] unsigned char 
  9888 ;; Auto vars:     Size  Location     Type
  9889 ;;  prescaler       1   33[COMRAM] unsigned char 
  9890 ;; Return value:  Size  Location     Type
  9891 ;;		None               void
  9892 ;; Registers used:
  9893 ;;		wreg, status,2, status,0
  9894 ;; Tracked objects:
  9895 ;;		On entry : 0/0
  9896 ;;		On exit  : 0/0
  9897 ;;		Unchanged: 0/0
  9898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9899 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9901 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9902 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9903 ;;Total ram usage:        3 bytes
  9904 ;; Hardware stack levels used:    1
  9905 ;; Hardware stack levels required when called:    4
  9906 ;; This function calls:
  9907 ;;		Nothing
  9908 ;; This function is called by:
  9909 ;;		_main_init
  9910 ;; This function uses a non-reentrant model
  9911 ;;
  9912                           
  9913                           	psect	text41
  9914  012EFE                     __ptext41:
  9915                           	opt stack 0
  9916  012EFE                     _timer1_init:
  9917                           	opt stack 25
  9918                           
  9919                           ;incstack = 0
  9920                           ;timer1_init@prescaler stored from wreg
  9921  012EFE  6E22               	movwf	timer1_init@prescaler,c
  9922                           
  9923                           ;My_header\My_header.h: 56: T1CONbits.TMR1CS = clock_select;
  9924  012F00  C020  F021         	movff	timer1_init@clock_select,??_timer1_init
  9925  012F04  3A21               	swapf	??_timer1_init,f,c
  9926  012F06  4621               	rlncf	??_timer1_init,f,c
  9927  012F08  4621               	rlncf	??_timer1_init,f,c
  9928  012F0A  50CD               	movf	4045,w,c	;volatile
  9929  012F0C  1821               	xorwf	??_timer1_init,w,c
  9930  012F0E  0B3F               	andlw	-193
  9931  012F10  1821               	xorwf	??_timer1_init,w,c
  9932  012F12  6ECD               	movwf	4045,c	;volatile
  9933                           
  9934                           ;My_header\My_header.h: 57: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  9935  012F14  0E02               	movlw	2
  9936  012F16  1820               	xorwf	timer1_init@clock_select,w,c
  9937  012F18  A4D8               	btfss	status,2,c
  9938  012F1A  D002               	goto	l136
  9939  012F1C  86CD               	bsf	4045,3,c	;volatile
  9940  012F1E  D002               	goto	l5587
  9941  012F20                     l136:
  9942                           
  9943                           ;My_header\My_header.h: 58: else T1CONbits.T1OSCEN = 0;
  9944  012F20  96CD               	bcf	4045,3,c	;volatile
  9945  012F22  D000               	goto	l5587
  9946  012F24                     l5587:
  9947                           
  9948                           ;My_header\My_header.h: 59: T1CONbits.T1CKPS = prescaler;
  9949  012F24  C022  F021         	movff	timer1_init@prescaler,??_timer1_init
  9950  012F28  3A21               	swapf	??_timer1_init,f,c
  9951  012F2A  50CD               	movf	4045,w,c	;volatile
  9952  012F2C  1821               	xorwf	??_timer1_init,w,c
  9953  012F2E  0BCF               	andlw	-49
  9954  012F30  1821               	xorwf	??_timer1_init,w,c
  9955  012F32  6ECD               	movwf	4045,c	;volatile
  9956                           
  9957                           ;My_header\My_header.h: 60: T1CONbits.nT1SYNC = 1;
  9958  012F34  84CD               	bsf	4045,2,c	;volatile
  9959                           
  9960                           ;My_header\My_header.h: 61: T1CONbits.RD16 = 0;
  9961  012F36  92CD               	bcf	4045,1,c	;volatile
  9962                           
  9963                           ;My_header\My_header.h: 62: T1CONbits.TMR1ON = 1;
  9964  012F38  80CD               	bsf	4045,0,c	;volatile
  9965                           
  9966                           ;My_header\My_header.h: 63: IPR1bits.TMR1IP = 0;
  9967  012F3A  909F               	bcf	3999,0,c	;volatile
  9968                           
  9969                           ;My_header\My_header.h: 64: PIR1bits.TMR1IF = 0;
  9970  012F3C  909E               	bcf	3998,0,c	;volatile
  9971                           
  9972                           ;My_header\My_header.h: 65: PIE1bits.TMR1IE = 1;
  9973  012F3E  809D               	bsf	3997,0,c	;volatile
  9974                           
  9975                           ;My_header\My_header.h: 66: INTCONbits.PEIE = 1;
  9976  012F40  8CF2               	bsf	intcon,6,c	;volatile
  9977  012F42  0012               	return		;funcret
  9978  012F44                     __end_of_timer1_init:
  9979                           	opt stack 0
  9980                           tblptru	equ	0xFF8
  9981                           tblptrh	equ	0xFF7
  9982                           tblptrl	equ	0xFF6
  9983                           tablat	equ	0xFF5
  9984                           prodh	equ	0xFF4
  9985                           prodl	equ	0xFF3
  9986                           intcon	equ	0xFF2
  9987                           intcon2	equ	0xFF1
  9988                           postinc0	equ	0xFEE
  9989                           wreg	equ	0xFE8
  9990                           indf1	equ	0xFE7
  9991                           postdec1	equ	0xFE5
  9992                           fsr1h	equ	0xFE2
  9993                           fsr1l	equ	0xFE1
  9994                           indf2	equ	0xFDF
  9995                           postinc2	equ	0xFDE
  9996                           postdec2	equ	0xFDD
  9997                           plusw2	equ	0xFDB
  9998                           fsr2h	equ	0xFDA
  9999                           fsr2l	equ	0xFD9
 10000                           status	equ	0xFD8
 10001                           
 10002 ;; *************** function _timer0_init *****************
 10003 ;; Defined at:
 10004 ;;		line 16 in file "../My_header\My_header.h"
 10005 ;; Parameters:    Size  Location     Type
 10006 ;;  prescaler       1    wreg     unsigned char 
 10007 ;; Auto vars:     Size  Location     Type
 10008 ;;  prescaler       1   32[COMRAM] unsigned char 
 10009 ;; Return value:  Size  Location     Type
 10010 ;;		None               void
 10011 ;; Registers used:
 10012 ;;		wreg, status,2, status,0
 10013 ;; Tracked objects:
 10014 ;;		On entry : 0/0
 10015 ;;		On exit  : 0/0
 10016 ;;		Unchanged: 0/0
 10017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10020 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10021 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10022 ;;Total ram usage:        2 bytes
 10023 ;; Hardware stack levels used:    1
 10024 ;; Hardware stack levels required when called:    4
 10025 ;; This function calls:
 10026 ;;		Nothing
 10027 ;; This function is called by:
 10028 ;;		_main_init
 10029 ;; This function uses a non-reentrant model
 10030 ;;
 10031                           
 10032                           	psect	text42
 10033  013068                     __ptext42:
 10034                           	opt stack 0
 10035  013068                     _timer0_init:
 10036                           	opt stack 25
 10037                           
 10038                           ;incstack = 0
 10039                           ;timer0_init@prescaler stored from wreg
 10040  013068  6E21               	movwf	timer0_init@prescaler,c
 10041                           
 10042                           ;My_header\My_header.h: 17: T0CONbits.TMR0ON = 1;
 10043  01306A  8ED5               	bsf	4053,7,c	;volatile
 10044                           
 10045                           ;My_header\My_header.h: 18: T0CONbits.T08BIT = 1;
 10046  01306C  8CD5               	bsf	4053,6,c	;volatile
 10047                           
 10048                           ;My_header\My_header.h: 19: T0CONbits.T0CS = 0;
 10049  01306E  9AD5               	bcf	4053,5,c	;volatile
 10050                           
 10051                           ;My_header\My_header.h: 20: if (prescaler == 0) {
 10052  013070  5021               	movf	timer0_init@prescaler,w,c
 10053  013072  A4D8               	btfss	status,2,c
 10054  013074  D002               	goto	l131
 10055                           
 10056                           ;My_header\My_header.h: 21: T0CONbits.PSA = 1;
 10057  013076  86D5               	bsf	4053,3,c	;volatile
 10058                           
 10059                           ;My_header\My_header.h: 22: } else {
 10060  013078  D00B               	goto	l5575
 10061  01307A                     l131:
 10062                           
 10063                           ;My_header\My_header.h: 23: T0CONbits.PSA = 0;
 10064  01307A  96D5               	bcf	4053,3,c	;volatile
 10065                           
 10066                           ;My_header\My_header.h: 24: T0CONbits.T0PS = prescaler - 1;
 10067  01307C  C021  F020         	movff	timer0_init@prescaler,??_timer0_init
 10068  013080  0EFF               	movlw	255
 10069  013082  2620               	addwf	??_timer0_init,f,c
 10070  013084  50D5               	movf	4053,w,c	;volatile
 10071  013086  1820               	xorwf	??_timer0_init,w,c
 10072  013088  0BF8               	andlw	-8
 10073  01308A  1820               	xorwf	??_timer0_init,w,c
 10074  01308C  6ED5               	movwf	4053,c	;volatile
 10075  01308E  D000               	goto	l5575
 10076  013090                     l5575:
 10077                           
 10078                           ;My_header\My_header.h: 25: }
 10079                           ;My_header\My_header.h: 26: INTCONbits.T0IE = 1;
 10080  013090  8AF2               	bsf	intcon,5,c	;volatile
 10081                           
 10082                           ;My_header\My_header.h: 27: INTCONbits.TMR0IF = 0;
 10083  013092  94F2               	bcf	intcon,2,c	;volatile
 10084                           
 10085                           ;My_header\My_header.h: 28: INTCON2bits.TMR0IP = 0;
 10086  013094  94F1               	bcf	intcon2,2,c	;volatile
 10087                           
 10088                           ;My_header\My_header.h: 29: INTCONbits.PEIE = 1;
 10089  013096  8CF2               	bsf	intcon,6,c	;volatile
 10090  013098  0012               	return		;funcret
 10091  01309A                     __end_of_timer0_init:
 10092                           	opt stack 0
 10093                           tblptru	equ	0xFF8
 10094                           tblptrh	equ	0xFF7
 10095                           tblptrl	equ	0xFF6
 10096                           tablat	equ	0xFF5
 10097                           prodh	equ	0xFF4
 10098                           prodl	equ	0xFF3
 10099                           intcon	equ	0xFF2
 10100                           intcon2	equ	0xFF1
 10101                           postinc0	equ	0xFEE
 10102                           wreg	equ	0xFE8
 10103                           indf1	equ	0xFE7
 10104                           postdec1	equ	0xFE5
 10105                           fsr1h	equ	0xFE2
 10106                           fsr1l	equ	0xFE1
 10107                           indf2	equ	0xFDF
 10108                           postinc2	equ	0xFDE
 10109                           postdec2	equ	0xFDD
 10110                           plusw2	equ	0xFDB
 10111                           fsr2h	equ	0xFDA
 10112                           fsr2l	equ	0xFD9
 10113                           status	equ	0xFD8
 10114                           
 10115 ;; *************** function _ringbuf_init *****************
 10116 ;; Defined at:
 10117 ;;		line 24 in file "../My_header\My_ringbuf.h"
 10118 ;; Parameters:    Size  Location     Type
 10119 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 10120 ;;		 -> rx_buf(5), tx_buf(5), 
 10121 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
 10122 ;;		 -> main_init@rxbuf(200), main_init@txbuf(200), 
 10123 ;;  bufsize         1    4[BANK0 ] unsigned char 
 10124 ;; Auto vars:     Size  Location     Type
 10125 ;;		None
 10126 ;; Return value:  Size  Location     Type
 10127 ;;		None               void
 10128 ;; Registers used:
 10129 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10130 ;; Tracked objects:
 10131 ;;		On entry : 0/0
 10132 ;;		On exit  : 0/0
 10133 ;;		Unchanged: 0/0
 10134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10135 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10138 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10139 ;;Total ram usage:        5 bytes
 10140 ;; Hardware stack levels used:    1
 10141 ;; Hardware stack levels required when called:    4
 10142 ;; This function calls:
 10143 ;;		Nothing
 10144 ;; This function is called by:
 10145 ;;		_main_init
 10146 ;; This function uses a non-reentrant model
 10147 ;;
 10148                           
 10149                           	psect	text43
 10150  012E70                     __ptext43:
 10151                           	opt stack 0
 10152  012E70                     _ringbuf_init:
 10153                           	opt stack 25
 10154                           
 10155                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
 10156                           
 10157                           ;incstack = 0
 10158  012E70  C0B9  FFD9         	movff	ringbuf_init@rb,fsr2l
 10159  012E74  C0BA  FFDA         	movff	ringbuf_init@rb+1,fsr2h
 10160  012E78  C0BB  FFDE         	movff	ringbuf_init@internal_buf,postinc2
 10161  012E7C  C0BC  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
 10162                           
 10163                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
 10164  012E80  0100               	movlb	0	; () banked
 10165  012E82  EE20 F002          	lfsr	2,2
 10166  012E86  51B9               	movf	ringbuf_init@rb& (0+255),w,b
 10167  012E88  26D9               	addwf	fsr2l,f,c
 10168  012E8A  51BA               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 10169  012E8C  22DA               	addwfc	fsr2h,f,c
 10170  012E8E  C0BD  FFDF         	movff	ringbuf_init@bufsize,indf2
 10171                           
 10172                           ; BSR set to: 0
 10173                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
 10174  012E92  0100               	movlb	0	; () banked
 10175  012E94  EE20 F003          	lfsr	2,3
 10176  012E98  51B9               	movf	ringbuf_init@rb& (0+255),w,b
 10177  012E9A  26D9               	addwf	fsr2l,f,c
 10178  012E9C  51BA               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 10179  012E9E  22DA               	addwfc	fsr2h,f,c
 10180  012EA0  0E00               	movlw	0
 10181  012EA2  6EDF               	movwf	indf2,c
 10182                           
 10183                           ; BSR set to: 0
 10184                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
 10185  012EA4  0100               	movlb	0	; () banked
 10186  012EA6  EE20 F004          	lfsr	2,4
 10187  012EAA  51B9               	movf	ringbuf_init@rb& (0+255),w,b
 10188  012EAC  26D9               	addwf	fsr2l,f,c
 10189  012EAE  51BA               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 10190  012EB0  22DA               	addwfc	fsr2h,f,c
 10191  012EB2  0E00               	movlw	0
 10192  012EB4  6EDF               	movwf	indf2,c
 10193                           
 10194                           ; BSR set to: 0
 10195  012EB6  0012               	return		;funcret
 10196  012EB8                     __end_of_ringbuf_init:
 10197                           	opt stack 0
 10198                           tblptru	equ	0xFF8
 10199                           tblptrh	equ	0xFF7
 10200                           tblptrl	equ	0xFF6
 10201                           tablat	equ	0xFF5
 10202                           prodh	equ	0xFF4
 10203                           prodl	equ	0xFF3
 10204                           intcon	equ	0xFF2
 10205                           intcon2	equ	0xFF1
 10206                           postinc0	equ	0xFEE
 10207                           wreg	equ	0xFE8
 10208                           indf1	equ	0xFE7
 10209                           postdec1	equ	0xFE5
 10210                           fsr1h	equ	0xFE2
 10211                           fsr1l	equ	0xFE1
 10212                           indf2	equ	0xFDF
 10213                           postinc2	equ	0xFDE
 10214                           postdec2	equ	0xFDD
 10215                           plusw2	equ	0xFDB
 10216                           fsr2h	equ	0xFDA
 10217                           fsr2l	equ	0xFD9
 10218                           status	equ	0xFD8
 10219                           
 10220 ;; *************** function _UART_init *****************
 10221 ;; Defined at:
 10222 ;;		line 187 in file "../My_header\My_header.h"
 10223 ;; Parameters:    Size  Location     Type
 10224 ;;		None
 10225 ;; Auto vars:     Size  Location     Type
 10226 ;;		None
 10227 ;; Return value:  Size  Location     Type
 10228 ;;		None               void
 10229 ;; Registers used:
 10230 ;;		wreg, status,2
 10231 ;; Tracked objects:
 10232 ;;		On entry : 0/0
 10233 ;;		On exit  : 0/0
 10234 ;;		Unchanged: 0/0
 10235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10240 ;;Total ram usage:        0 bytes
 10241 ;; Hardware stack levels used:    1
 10242 ;; Hardware stack levels required when called:    4
 10243 ;; This function calls:
 10244 ;;		Nothing
 10245 ;; This function is called by:
 10246 ;;		_main_init
 10247 ;; This function uses a non-reentrant model
 10248 ;;
 10249                           
 10250                           	psect	text44
 10251  01328A                     __ptext44:
 10252                           	opt stack 0
 10253  01328A                     _UART_init:
 10254                           	opt stack 25
 10255                           
 10256                           ;My_header\My_header.h: 188: TXSTA1bits.TX9 = 0;
 10257                           
 10258                           ; BSR set to: 0
 10259                           ;incstack = 0
 10260  01328A  9CAD               	bcf	4013,6,c	;volatile
 10261                           
 10262                           ;My_header\My_header.h: 189: TXSTA1bits.TXEN = 1;
 10263  01328C  8AAD               	bsf	4013,5,c	;volatile
 10264                           
 10265                           ;My_header\My_header.h: 190: TXSTA1bits.SYNC = 0;
 10266  01328E  98AD               	bcf	4013,4,c	;volatile
 10267                           
 10268                           ;My_header\My_header.h: 191: TXSTA1bits.BRGH = 0;
 10269  013290  94AD               	bcf	4013,2,c	;volatile
 10270                           
 10271                           ;My_header\My_header.h: 192: RCSTA1bits.SPEN = 1;
 10272  013292  8EAC               	bsf	4012,7,c	;volatile
 10273                           
 10274                           ;My_header\My_header.h: 193: RCSTA1bits.RX9 = 0;
 10275  013294  9CAC               	bcf	4012,6,c	;volatile
 10276                           
 10277                           ;My_header\My_header.h: 194: RCSTA1bits.CREN = 1;
 10278  013296  88AC               	bsf	4012,4,c	;volatile
 10279                           
 10280                           ;My_header\My_header.h: 195: BAUDCON1bits.BRG16 = 0;
 10281  013298  967E               	bcf	3966,3,c	;volatile
 10282                           
 10283                           ;My_header\My_header.h: 196: SPBRG1 = 48000000 / 64 / 9600 - 1;
 10284  01329A  0E4D               	movlw	77
 10285  01329C  6EB0               	movwf	4016,c	;volatile
 10286                           
 10287                           ;My_header\My_header.h: 197: SPBRGH1 = 0;
 10288  01329E  0E00               	movlw	0
 10289  0132A0  6E7F               	movwf	3967,c	;volatile
 10290                           
 10291                           ;My_header\My_header.h: 198: IPR1bits.RC1IP = 0;
 10292  0132A2  9A9F               	bcf	3999,5,c	;volatile
 10293                           
 10294                           ;My_header\My_header.h: 199: PIE1bits.RC1IE = 1;
 10295  0132A4  8A9D               	bsf	3997,5,c	;volatile
 10296                           
 10297                           ;My_header\My_header.h: 200: INTCONbits.PEIE = 1;
 10298  0132A6  8CF2               	bsf	intcon,6,c	;volatile
 10299  0132A8  0012               	return		;funcret
 10300  0132AA                     __end_of_UART_init:
 10301                           	opt stack 0
 10302                           tblptru	equ	0xFF8
 10303                           tblptrh	equ	0xFF7
 10304                           tblptrl	equ	0xFF6
 10305                           tablat	equ	0xFF5
 10306                           prodh	equ	0xFF4
 10307                           prodl	equ	0xFF3
 10308                           intcon	equ	0xFF2
 10309                           intcon2	equ	0xFF1
 10310                           postinc0	equ	0xFEE
 10311                           wreg	equ	0xFE8
 10312                           indf1	equ	0xFE7
 10313                           postdec1	equ	0xFE5
 10314                           fsr1h	equ	0xFE2
 10315                           fsr1l	equ	0xFE1
 10316                           indf2	equ	0xFDF
 10317                           postinc2	equ	0xFDE
 10318                           postdec2	equ	0xFDD
 10319                           plusw2	equ	0xFDB
 10320                           fsr2h	equ	0xFDA
 10321                           fsr2l	equ	0xFD9
 10322                           status	equ	0xFD8
 10323                           
 10324 ;; *************** function _RTCC_init *****************
 10325 ;; Defined at:
 10326 ;;		line 53 in file "../My_header\My_RTCC.h"
 10327 ;; Parameters:    Size  Location     Type
 10328 ;;		None
 10329 ;; Auto vars:     Size  Location     Type
 10330 ;;		None
 10331 ;; Return value:  Size  Location     Type
 10332 ;;		None               void
 10333 ;; Registers used:
 10334 ;;		wreg, status,2
 10335 ;; Tracked objects:
 10336 ;;		On entry : 0/0
 10337 ;;		On exit  : 0/0
 10338 ;;		Unchanged: 0/0
 10339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10344 ;;Total ram usage:        0 bytes
 10345 ;; Hardware stack levels used:    1
 10346 ;; Hardware stack levels required when called:    4
 10347 ;; This function calls:
 10348 ;;		Nothing
 10349 ;; This function is called by:
 10350 ;;		_main_init
 10351 ;; This function uses a non-reentrant model
 10352 ;;
 10353                           
 10354                           	psect	text45
 10355  0130CC                     __ptext45:
 10356                           	opt stack 0
 10357  0130CC                     _RTCC_init:
 10358                           	opt stack 25
 10359                           
 10360                           ;My_header\My_RTCC.h: 54: RTCCFGbits.RTCWREN = 1;
 10361                           
 10362                           ;incstack = 0
 10363  0130CC  010F               	movlb	15	; () banked
 10364  0130CE  8B3F               	bsf	63,5,b	;volatile
 10365                           
 10366                           ;My_header\My_RTCC.h: 55: if (RTCCFGbits.RTCWREN != 1) {
 10367  0130D0  010F               	movlb	15	; () banked
 10368  0130D2  BB3F               	btfsc	63,5,b	;volatile
 10369  0130D4  D007               	goto	l5675
 10370                           
 10371                           ; BSR set to: 15
 10372                           ;My_header\My_RTCC.h: 56: EECON2 = 0x55;
 10373  0130D6  0E55               	movlw	85
 10374  0130D8  6EA7               	movwf	4007,c	;volatile
 10375                           
 10376                           ;My_header\My_RTCC.h: 57: EECON2 = 0xAA;
 10377  0130DA  0EAA               	movlw	170
 10378  0130DC  6EA7               	movwf	4007,c	;volatile
 10379                           
 10380                           ; BSR set to: 15
 10381                           ;My_header\My_RTCC.h: 58: RTCCFGbits.RTCWREN = 1;
 10382  0130DE  010F               	movlb	15	; () banked
 10383  0130E0  8B3F               	bsf	63,5,b	;volatile
 10384  0130E2  D000               	goto	l5675
 10385  0130E4                     l5675:
 10386                           
 10387                           ; BSR set to: 15
 10388                           ;My_header\My_RTCC.h: 59: }
 10389                           ;My_header\My_RTCC.h: 60: RTCCFGbits.RTCEN = 1;
 10390  0130E4  010F               	movlb	15	; () banked
 10391  0130E6  8F3F               	bsf	63,7,b	;volatile
 10392                           
 10393                           ; BSR set to: 15
 10394                           ;My_header\My_RTCC.h: 61: RTCCFGbits.RTCOE = 0;
 10395  0130E8  010F               	movlb	15	; () banked
 10396  0130EA  953F               	bcf	63,2,b	;volatile
 10397                           
 10398                           ; BSR set to: 15
 10399                           ;My_header\My_RTCC.h: 62: PADCFG1bits.RTSECSEL0 = 0;
 10400  0130EC  010F               	movlb	15	; () banked
 10401  0130EE  933C               	bcf	60,1,b	;volatile
 10402                           
 10403                           ; BSR set to: 15
 10404                           ;My_header\My_RTCC.h: 63: PADCFG1bits.RTSECSEL1 = 1;
 10405  0130F0  010F               	movlb	15	; () banked
 10406  0130F2  853C               	bsf	60,2,b	;volatile
 10407                           
 10408                           ;My_header\My_RTCC.h: 64: RTCCAL = 0x00;
 10409  0130F4  0E00               	movlw	0
 10410  0130F6  010F               	movlb	15	; () banked
 10411  0130F8  6F3E               	movwf	62,b	;volatile
 10412                           
 10413                           ; BSR set to: 15
 10414  0130FA  0012               	return		;funcret
 10415  0130FC                     __end_of_RTCC_init:
 10416                           	opt stack 0
 10417                           tblptru	equ	0xFF8
 10418                           tblptrh	equ	0xFF7
 10419                           tblptrl	equ	0xFF6
 10420                           tablat	equ	0xFF5
 10421                           prodh	equ	0xFF4
 10422                           prodl	equ	0xFF3
 10423                           intcon	equ	0xFF2
 10424                           intcon2	equ	0xFF1
 10425                           postinc0	equ	0xFEE
 10426                           wreg	equ	0xFE8
 10427                           indf1	equ	0xFE7
 10428                           postdec1	equ	0xFE5
 10429                           fsr1h	equ	0xFE2
 10430                           fsr1l	equ	0xFE1
 10431                           indf2	equ	0xFDF
 10432                           postinc2	equ	0xFDE
 10433                           postdec2	equ	0xFDD
 10434                           plusw2	equ	0xFDB
 10435                           fsr2h	equ	0xFDA
 10436                           fsr2l	equ	0xFD9
 10437                           status	equ	0xFD8
 10438                           
 10439 ;; *************** function _I2C_init *****************
 10440 ;; Defined at:
 10441 ;;		line 23 in file "../My_header\My_I2C.h"
 10442 ;; Parameters:    Size  Location     Type
 10443 ;;		None
 10444 ;; Auto vars:     Size  Location     Type
 10445 ;;		None
 10446 ;; Return value:  Size  Location     Type
 10447 ;;		None               void
 10448 ;; Registers used:
 10449 ;;		wreg, status,2
 10450 ;; Tracked objects:
 10451 ;;		On entry : 0/0
 10452 ;;		On exit  : 0/0
 10453 ;;		Unchanged: 0/0
 10454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10459 ;;Total ram usage:        0 bytes
 10460 ;; Hardware stack levels used:    1
 10461 ;; Hardware stack levels required when called:    4
 10462 ;; This function calls:
 10463 ;;		Nothing
 10464 ;; This function is called by:
 10465 ;;		_main_init
 10466 ;; This function uses a non-reentrant model
 10467 ;;
 10468                           
 10469                           	psect	text46
 10470  013378                     __ptext46:
 10471                           	opt stack 0
 10472  013378                     _I2C_init:
 10473                           	opt stack 25
 10474                           
 10475                           ;My_header\My_I2C.h: 24: SSP1STAT = 0b10000000;
 10476                           
 10477                           ; BSR set to: 15
 10478                           ;incstack = 0
 10479  013378  0E80               	movlw	128
 10480  01337A  6EC7               	movwf	4039,c	;volatile
 10481                           
 10482                           ;My_header\My_I2C.h: 25: SSP1CON1 = 0b00101000;
 10483  01337C  0E28               	movlw	40
 10484  01337E  6EC6               	movwf	4038,c	;volatile
 10485                           
 10486                           ;My_header\My_I2C.h: 26: SSP1ADD = 0x13;
 10487  013380  0E13               	movlw	19
 10488  013382  6EC8               	movwf	4040,c	;volatile
 10489                           
 10490                           ;My_header\My_I2C.h: 29: SSP1IF = 0;
 10491  013384  969E               	bcf	3998,3,c	;volatile
 10492                           
 10493                           ;My_header\My_I2C.h: 30: BCL1IF = 0;
 10494  013386  96A1               	bcf	4001,3,c	;volatile
 10495  013388  0012               	return		;funcret
 10496  01338A                     __end_of_I2C_init:
 10497                           	opt stack 0
 10498                           tblptru	equ	0xFF8
 10499                           tblptrh	equ	0xFF7
 10500                           tblptrl	equ	0xFF6
 10501                           tablat	equ	0xFF5
 10502                           prodh	equ	0xFF4
 10503                           prodl	equ	0xFF3
 10504                           intcon	equ	0xFF2
 10505                           intcon2	equ	0xFF1
 10506                           postinc0	equ	0xFEE
 10507                           wreg	equ	0xFE8
 10508                           indf1	equ	0xFE7
 10509                           postdec1	equ	0xFE5
 10510                           fsr1h	equ	0xFE2
 10511                           fsr1l	equ	0xFE1
 10512                           indf2	equ	0xFDF
 10513                           postinc2	equ	0xFDE
 10514                           postdec2	equ	0xFDD
 10515                           plusw2	equ	0xFDB
 10516                           fsr2h	equ	0xFDA
 10517                           fsr2l	equ	0xFD9
 10518                           status	equ	0xFD8
 10519                           
 10520 ;; *************** function _I2C_LCD_init *****************
 10521 ;; Defined at:
 10522 ;;		line 163 in file "../My_header\My_I2C.h"
 10523 ;; Parameters:    Size  Location     Type
 10524 ;;		None
 10525 ;; Auto vars:     Size  Location     Type
 10526 ;;		None
 10527 ;; Return value:  Size  Location     Type
 10528 ;;		None               void
 10529 ;; Registers used:
 10530 ;;		wreg, status,2, status,0, cstack
 10531 ;; Tracked objects:
 10532 ;;		On entry : 0/0
 10533 ;;		On exit  : 0/0
 10534 ;;		Unchanged: 0/0
 10535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10540 ;;Total ram usage:        0 bytes
 10541 ;; Hardware stack levels used:    1
 10542 ;; Hardware stack levels required when called:    8
 10543 ;; This function calls:
 10544 ;;		_Delay_ms
 10545 ;;		_I2C_LCD_Clear
 10546 ;;		_I2C_LCD_Command
 10547 ;; This function is called by:
 10548 ;;		_main_init
 10549 ;; This function uses a non-reentrant model
 10550 ;;
 10551                           
 10552                           	psect	text47
 10553  012CE6                     __ptext47:
 10554                           	opt stack 0
 10555  012CE6                     _I2C_LCD_init:
 10556                           	opt stack 21
 10557                           
 10558                           ;My_header\My_I2C.h: 164: Delay_ms(40);
 10559                           
 10560                           ;incstack = 0
 10561  012CE6  0E00               	movlw	0
 10562  012CE8  6E21               	movwf	Delay_ms@ms+1,c
 10563  012CEA  0E28               	movlw	40
 10564  012CEC  6E20               	movwf	Delay_ms@ms,c
 10565  012CEE  ECFE  F098         	call	_Delay_ms	;wreg free
 10566                           
 10567                           ;My_header\My_I2C.h: 165: I2C_LCD_Command(0x38);
 10568  012CF2  0E38               	movlw	56
 10569  012CF4  EC19  F098         	call	_I2C_LCD_Command
 10570                           
 10571                           ;My_header\My_I2C.h: 166: I2C_LCD_Command(0x39);
 10572  012CF8  0E39               	movlw	57
 10573  012CFA  EC19  F098         	call	_I2C_LCD_Command
 10574                           
 10575                           ;My_header\My_I2C.h: 167: I2C_LCD_Command(0x14);
 10576  012CFE  0E14               	movlw	20
 10577  012D00  EC19  F098         	call	_I2C_LCD_Command
 10578                           
 10579                           ;My_header\My_I2C.h: 168: I2C_LCD_Command(0x70);
 10580  012D04  0E70               	movlw	112
 10581  012D06  EC19  F098         	call	_I2C_LCD_Command
 10582                           
 10583                           ;My_header\My_I2C.h: 169: I2C_LCD_Command(0x56);
 10584  012D0A  0E56               	movlw	86
 10585  012D0C  EC19  F098         	call	_I2C_LCD_Command
 10586                           
 10587                           ;My_header\My_I2C.h: 170: I2C_LCD_Command(0x6C);
 10588  012D10  0E6C               	movlw	108
 10589  012D12  EC19  F098         	call	_I2C_LCD_Command
 10590                           
 10591                           ;My_header\My_I2C.h: 171: Delay_ms(200);
 10592  012D16  0E00               	movlw	0
 10593  012D18  6E21               	movwf	Delay_ms@ms+1,c
 10594  012D1A  0EC8               	movlw	200
 10595  012D1C  6E20               	movwf	Delay_ms@ms,c
 10596  012D1E  ECFE  F098         	call	_Delay_ms	;wreg free
 10597                           
 10598                           ;My_header\My_I2C.h: 172: I2C_LCD_Command(0x38);
 10599  012D22  0E38               	movlw	56
 10600  012D24  EC19  F098         	call	_I2C_LCD_Command
 10601                           
 10602                           ;My_header\My_I2C.h: 173: I2C_LCD_Command(0x0C);
 10603  012D28  0E0C               	movlw	12
 10604  012D2A  EC19  F098         	call	_I2C_LCD_Command
 10605                           
 10606                           ;My_header\My_I2C.h: 174: I2C_LCD_Command(0x06);
 10607  012D2E  0E06               	movlw	6
 10608  012D30  EC19  F098         	call	_I2C_LCD_Command
 10609                           
 10610                           ;My_header\My_I2C.h: 175: I2C_LCD_Clear();
 10611  012D34  EC72  F099         	call	_I2C_LCD_Clear	;wreg free
 10612  012D38  0012               	return		;funcret
 10613  012D3A                     __end_of_I2C_LCD_init:
 10614                           	opt stack 0
 10615                           tblptru	equ	0xFF8
 10616                           tblptrh	equ	0xFF7
 10617                           tblptrl	equ	0xFF6
 10618                           tablat	equ	0xFF5
 10619                           prodh	equ	0xFF4
 10620                           prodl	equ	0xFF3
 10621                           intcon	equ	0xFF2
 10622                           intcon2	equ	0xFF1
 10623                           postinc0	equ	0xFEE
 10624                           wreg	equ	0xFE8
 10625                           indf1	equ	0xFE7
 10626                           postdec1	equ	0xFE5
 10627                           fsr1h	equ	0xFE2
 10628                           fsr1l	equ	0xFE1
 10629                           indf2	equ	0xFDF
 10630                           postinc2	equ	0xFDE
 10631                           postdec2	equ	0xFDD
 10632                           plusw2	equ	0xFDB
 10633                           fsr2h	equ	0xFDA
 10634                           fsr2l	equ	0xFD9
 10635                           status	equ	0xFD8
 10636                           
 10637 ;; *************** function _I2C_LCD_Clear *****************
 10638 ;; Defined at:
 10639 ;;		line 106 in file "../My_header\My_I2C.h"
 10640 ;; Parameters:    Size  Location     Type
 10641 ;;		None
 10642 ;; Auto vars:     Size  Location     Type
 10643 ;;		None
 10644 ;; Return value:  Size  Location     Type
 10645 ;;		None               void
 10646 ;; Registers used:
 10647 ;;		wreg, status,2, status,0, cstack
 10648 ;; Tracked objects:
 10649 ;;		On entry : 0/0
 10650 ;;		On exit  : 0/0
 10651 ;;		Unchanged: 0/0
 10652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10655 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10656 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10657 ;;Total ram usage:        1 bytes
 10658 ;; Hardware stack levels used:    1
 10659 ;; Hardware stack levels required when called:    7
 10660 ;; This function calls:
 10661 ;;		_I2C_LCD_Command
 10662 ;; This function is called by:
 10663 ;;		_I2C_LCD_init
 10664 ;;		_display_LCD
 10665 ;;		_sleep_loop
 10666 ;; This function uses a non-reentrant model
 10667 ;;
 10668                           
 10669                           	psect	text48
 10670  0132E4                     __ptext48:
 10671                           	opt stack 0
 10672  0132E4                     _I2C_LCD_Clear:
 10673                           	opt stack 22
 10674                           
 10675                           ;My_header\My_I2C.h: 107: I2C_LCD_Command(0x01);
 10676                           
 10677                           ;incstack = 0
 10678  0132E4  0E01               	movlw	1
 10679  0132E6  EC19  F098         	call	_I2C_LCD_Command
 10680                           
 10681                           ;My_header\My_I2C.h: 108: _delay((unsigned long)((1100)*(48000000/4000000.0)));
 10682  0132EA  0E12               	movlw	18
 10683  0132EC  0100               	movlb	0	; () banked
 10684  0132EE  6FBC               	movwf	??_I2C_LCD_Clear& (0+255),b
 10685  0132F0  0E23               	movlw	35
 10686  0132F2                     u6537:
 10687  0132F2  2EE8               	decfsz	wreg,f,c
 10688  0132F4  D7FE               	goto	u6537
 10689  0132F6  2FBC               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
 10690  0132F8  D7FC               	goto	u6537
 10691  0132FA  F000               	nop	
 10692  0132FC  0012               	return		;funcret
 10693  0132FE                     __end_of_I2C_LCD_Clear:
 10694                           	opt stack 0
 10695                           tblptru	equ	0xFF8
 10696                           tblptrh	equ	0xFF7
 10697                           tblptrl	equ	0xFF6
 10698                           tablat	equ	0xFF5
 10699                           prodh	equ	0xFF4
 10700                           prodl	equ	0xFF3
 10701                           intcon	equ	0xFF2
 10702                           intcon2	equ	0xFF1
 10703                           postinc0	equ	0xFEE
 10704                           wreg	equ	0xFE8
 10705                           indf1	equ	0xFE7
 10706                           postdec1	equ	0xFE5
 10707                           fsr1h	equ	0xFE2
 10708                           fsr1l	equ	0xFE1
 10709                           indf2	equ	0xFDF
 10710                           postinc2	equ	0xFDE
 10711                           postdec2	equ	0xFDD
 10712                           plusw2	equ	0xFDB
 10713                           fsr2h	equ	0xFDA
 10714                           fsr2l	equ	0xFD9
 10715                           status	equ	0xFD8
 10716                           
 10717 ;; *************** function _I2C_LCD_Command *****************
 10718 ;; Defined at:
 10719 ;;		line 93 in file "../My_header\My_I2C.h"
 10720 ;; Parameters:    Size  Location     Type
 10721 ;;  c               1    wreg     unsigned char 
 10722 ;; Auto vars:     Size  Location     Type
 10723 ;;  c               1    1[BANK0 ] unsigned char 
 10724 ;;  ans             1    2[BANK0 ] unsigned char 
 10725 ;; Return value:  Size  Location     Type
 10726 ;;		None               void
 10727 ;; Registers used:
 10728 ;;		wreg, status,2, status,0, cstack
 10729 ;; Tracked objects:
 10730 ;;		On entry : 0/0
 10731 ;;		On exit  : 0/0
 10732 ;;		Unchanged: 0/0
 10733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10735 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10737 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10738 ;;Total ram usage:        2 bytes
 10739 ;; Hardware stack levels used:    1
 10740 ;; Hardware stack levels required when called:    6
 10741 ;; This function calls:
 10742 ;;		_I2C_Send
 10743 ;;		_I2C_Start
 10744 ;;		_I2C_Stop
 10745 ;; This function is called by:
 10746 ;;		_I2C_LCD_Clear
 10747 ;;		_I2C_LCD_SetCursor
 10748 ;;		_I2C_LCD_init
 10749 ;; This function uses a non-reentrant model
 10750 ;;
 10751                           
 10752                           	psect	text49
 10753  013032                     __ptext49:
 10754                           	opt stack 0
 10755  013032                     _I2C_LCD_Command:
 10756                           	opt stack 22
 10757                           
 10758                           ;incstack = 0
 10759                           ;I2C_LCD_Command@c stored from wreg
 10760  013032  0100               	movlb	0	; () banked
 10761  013034  6FBA               	movwf	I2C_LCD_Command@c& (0+255),b
 10762                           
 10763                           ; BSR set to: 0
 10764                           ;My_header\My_I2C.h: 94: uint8_t ans;
 10765                           ;My_header\My_I2C.h: 96: ans = I2C_Start(0x3E, 0);
 10766  013036  0E00               	movlw	0
 10767  013038  6E22               	movwf	I2C_Start@rw,c
 10768  01303A  0E3E               	movlw	62
 10769  01303C  EC4D  F098         	call	_I2C_Start
 10770  013040  0100               	movlb	0	; () banked
 10771  013042  6FBB               	movwf	I2C_LCD_Command@ans& (0+255),b
 10772                           
 10773                           ; BSR set to: 0
 10774                           ;My_header\My_I2C.h: 97: if (ans == 0) {
 10775  013044  0100               	movlb	0	; () banked
 10776  013046  51BB               	movf	I2C_LCD_Command@ans& (0+255),w,b
 10777  013048  0100               	movlb	0	; () banked
 10778  01304A  A4D8               	btfss	status,2,c
 10779  01304C  D007               	goto	l334
 10780                           
 10781                           ; BSR set to: 0
 10782                           ;My_header\My_I2C.h: 99: I2C_Send(0b10000000);
 10783  01304E  0E80               	movlw	128
 10784  013050  EC7F  F099         	call	_I2C_Send
 10785                           
 10786                           ;My_header\My_I2C.h: 100: I2C_Send(c);
 10787  013054  0100               	movlb	0	; () banked
 10788  013056  51BA               	movf	I2C_LCD_Command@c& (0+255),w,b
 10789  013058  EC7F  F099         	call	_I2C_Send
 10790  01305C                     l334:
 10791                           
 10792                           ;My_header\My_I2C.h: 101: }
 10793                           ;My_header\My_I2C.h: 102: I2C_Stop();
 10794  01305C  ECC5  F099         	call	_I2C_Stop	;wreg free
 10795                           
 10796                           ;My_header\My_I2C.h: 103: _delay((unsigned long)((26)*(48000000/4000000.0)));
 10797  013060  0E68               	movlw	104
 10798  013062                     u6547:
 10799  013062  2EE8               	decfsz	wreg,f,c
 10800  013064  D7FE               	goto	u6547
 10801  013066  0012               	return		;funcret
 10802  013068                     __end_of_I2C_LCD_Command:
 10803                           	opt stack 0
 10804                           tblptru	equ	0xFF8
 10805                           tblptrh	equ	0xFF7
 10806                           tblptrl	equ	0xFF6
 10807                           tablat	equ	0xFF5
 10808                           prodh	equ	0xFF4
 10809                           prodl	equ	0xFF3
 10810                           intcon	equ	0xFF2
 10811                           intcon2	equ	0xFF1
 10812                           postinc0	equ	0xFEE
 10813                           wreg	equ	0xFE8
 10814                           indf1	equ	0xFE7
 10815                           postdec1	equ	0xFE5
 10816                           fsr1h	equ	0xFE2
 10817                           fsr1l	equ	0xFE1
 10818                           indf2	equ	0xFDF
 10819                           postinc2	equ	0xFDE
 10820                           postdec2	equ	0xFDD
 10821                           plusw2	equ	0xFDB
 10822                           fsr2h	equ	0xFDA
 10823                           fsr2l	equ	0xFD9
 10824                           status	equ	0xFD8
 10825                           
 10826 ;; *************** function _I2C_Stop *****************
 10827 ;; Defined at:
 10828 ;;		line 57 in file "../My_header\My_I2C.h"
 10829 ;; Parameters:    Size  Location     Type
 10830 ;;		None
 10831 ;; Auto vars:     Size  Location     Type
 10832 ;;		None
 10833 ;; Return value:  Size  Location     Type
 10834 ;;		None               void
 10835 ;; Registers used:
 10836 ;;		wreg, status,2, status,0, cstack
 10837 ;; Tracked objects:
 10838 ;;		On entry : 0/0
 10839 ;;		On exit  : 0/0
 10840 ;;		Unchanged: 0/0
 10841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10846 ;;Total ram usage:        0 bytes
 10847 ;; Hardware stack levels used:    1
 10848 ;; Hardware stack levels required when called:    5
 10849 ;; This function calls:
 10850 ;;		_I2C_IdleCheck
 10851 ;; This function is called by:
 10852 ;;		_I2C_LCD_Command
 10853 ;;		_I2C_LCD_Putc
 10854 ;;		_I2C_LCD_Puts
 10855 ;;		_I2C_LCD_CreateChar
 10856 ;; This function uses a non-reentrant model
 10857 ;;
 10858                           
 10859                           	psect	text50
 10860  01338A                     __ptext50:
 10861                           	opt stack 0
 10862  01338A                     _I2C_Stop:
 10863                           	opt stack 22
 10864                           
 10865                           ;My_header\My_I2C.h: 59: I2C_IdleCheck(0x5);
 10866                           
 10867                           ;incstack = 0
 10868  01338A  0E05               	movlw	5
 10869  01338C  ECA5  F099         	call	_I2C_IdleCheck
 10870                           
 10871                           ;My_header\My_I2C.h: 60: SSP1CON2bits.PEN = 1;
 10872  013390  84C5               	bsf	4037,2,c	;volatile
 10873  013392  0012               	return		;funcret
 10874  013394                     __end_of_I2C_Stop:
 10875                           	opt stack 0
 10876                           tblptru	equ	0xFF8
 10877                           tblptrh	equ	0xFF7
 10878                           tblptrl	equ	0xFF6
 10879                           tablat	equ	0xFF5
 10880                           prodh	equ	0xFF4
 10881                           prodl	equ	0xFF3
 10882                           intcon	equ	0xFF2
 10883                           intcon2	equ	0xFF1
 10884                           postinc0	equ	0xFEE
 10885                           wreg	equ	0xFE8
 10886                           indf1	equ	0xFE7
 10887                           postdec1	equ	0xFE5
 10888                           fsr1h	equ	0xFE2
 10889                           fsr1l	equ	0xFE1
 10890                           indf2	equ	0xFDF
 10891                           postinc2	equ	0xFDE
 10892                           postdec2	equ	0xFDD
 10893                           plusw2	equ	0xFDB
 10894                           fsr2h	equ	0xFDA
 10895                           fsr2l	equ	0xFD9
 10896                           status	equ	0xFD8
 10897                           
 10898 ;; *************** function _I2C_Start *****************
 10899 ;; Defined at:
 10900 ;;		line 33 in file "../My_header\My_I2C.h"
 10901 ;; Parameters:    Size  Location     Type
 10902 ;;  adrs            1    wreg     unsigned char 
 10903 ;;  rw              1   33[COMRAM] unsigned char 
 10904 ;; Auto vars:     Size  Location     Type
 10905 ;;  adrs            1    0[BANK0 ] unsigned char 
 10906 ;; Return value:  Size  Location     Type
 10907 ;;                  1    wreg      unsigned char 
 10908 ;; Registers used:
 10909 ;;		wreg, status,2, status,0, cstack
 10910 ;; Tracked objects:
 10911 ;;		On entry : 0/0
 10912 ;;		On exit  : 0/0
 10913 ;;		Unchanged: 0/0
 10914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10915 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10916 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10918 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10919 ;;Total ram usage:        2 bytes
 10920 ;; Hardware stack levels used:    1
 10921 ;; Hardware stack levels required when called:    5
 10922 ;; This function calls:
 10923 ;;		_I2C_IdleCheck
 10924 ;; This function is called by:
 10925 ;;		_I2C_LCD_Command
 10926 ;;		_I2C_LCD_Putc
 10927 ;;		_I2C_LCD_Puts
 10928 ;;		_I2C_LCD_CreateChar
 10929 ;; This function uses a non-reentrant model
 10930 ;;
 10931                           
 10932                           	psect	text51
 10933  01309A                     __ptext51:
 10934                           	opt stack 0
 10935  01309A                     _I2C_Start:
 10936                           	opt stack 22
 10937                           
 10938                           ;incstack = 0
 10939                           ;I2C_Start@adrs stored from wreg
 10940  01309A  0100               	movlb	0	; () banked
 10941  01309C  6FB9               	movwf	I2C_Start@adrs& (0+255),b
 10942                           
 10943                           ; BSR set to: 0
 10944                           ;My_header\My_I2C.h: 35: I2C_IdleCheck(0x5);
 10945  01309E  0E05               	movlw	5
 10946  0130A0  ECA5  F099         	call	_I2C_IdleCheck
 10947                           
 10948                           ;My_header\My_I2C.h: 36: SSP1CON2bits.SEN = 1;
 10949  0130A4  80C5               	bsf	4037,0,c	;volatile
 10950                           
 10951                           ;My_header\My_I2C.h: 38: I2C_IdleCheck(0x5);
 10952  0130A6  0E05               	movlw	5
 10953  0130A8  ECA5  F099         	call	_I2C_IdleCheck
 10954                           
 10955                           ;My_header\My_I2C.h: 39: SSP1IF = 0;
 10956  0130AC  969E               	bcf	3998,3,c	;volatile
 10957                           
 10958                           ;My_header\My_I2C.h: 40: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
 10959  0130AE  0100               	movlb	0	; () banked
 10960  0130B0  51B9               	movf	I2C_Start@adrs& (0+255),w,b
 10961  0130B2  25B9               	addwf	I2C_Start@adrs& (0+255),w,b
 10962  0130B4  2422               	addwf	I2C_Start@rw,w,c
 10963  0130B6  6EC9               	movwf	4041,c	;volatile
 10964                           
 10965                           ;My_header\My_I2C.h: 41: while (!SSP1IF);
 10966  0130B8  D000               	goto	l310
 10967  0130BA                     l310:
 10968                           
 10969                           ; BSR set to: 0
 10970  0130BA  A69E               	btfss	3998,3,c	;volatile
 10971  0130BC  D7FE               	goto	l310
 10972                           
 10973                           ; BSR set to: 0
 10974                           ;My_header\My_I2C.h: 42: return SSP1CON2bits.ACKSTAT;
 10975                           
 10976                           ; BSR set to: 0
 10977  0130BE  ACC5               	btfss	4037,6,c	;volatile
 10978  0130C0  D002               	goto	u4860
 10979  0130C2  0E01               	movlw	1
 10980  0130C4  0012               	return	
 10981  0130C6                     u4860:
 10982  0130C6  0E00               	movlw	0
 10983  0130C8  0012               	return	
 10984                           
 10985                           ; BSR set to: 0
 10986                           
 10987                           ; BSR set to: 0
 10988  0130CA  0012               	return		;funcret
 10989  0130CC                     __end_of_I2C_Start:
 10990                           	opt stack 0
 10991                           tblptru	equ	0xFF8
 10992                           tblptrh	equ	0xFF7
 10993                           tblptrl	equ	0xFF6
 10994                           tablat	equ	0xFF5
 10995                           prodh	equ	0xFF4
 10996                           prodl	equ	0xFF3
 10997                           intcon	equ	0xFF2
 10998                           intcon2	equ	0xFF1
 10999                           postinc0	equ	0xFEE
 11000                           wreg	equ	0xFE8
 11001                           indf1	equ	0xFE7
 11002                           postdec1	equ	0xFE5
 11003                           fsr1h	equ	0xFE2
 11004                           fsr1l	equ	0xFE1
 11005                           indf2	equ	0xFDF
 11006                           postinc2	equ	0xFDE
 11007                           postdec2	equ	0xFDD
 11008                           plusw2	equ	0xFDB
 11009                           fsr2h	equ	0xFDA
 11010                           fsr2l	equ	0xFD9
 11011                           status	equ	0xFD8
 11012                           
 11013 ;; *************** function _I2C_Send *****************
 11014 ;; Defined at:
 11015 ;;		line 63 in file "../My_header\My_I2C.h"
 11016 ;; Parameters:    Size  Location     Type
 11017 ;;  data            1    wreg     unsigned char 
 11018 ;; Auto vars:     Size  Location     Type
 11019 ;;  data            1   33[COMRAM] unsigned char 
 11020 ;; Return value:  Size  Location     Type
 11021 ;;                  1    wreg      unsigned char 
 11022 ;; Registers used:
 11023 ;;		wreg, status,2, status,0, cstack
 11024 ;; Tracked objects:
 11025 ;;		On entry : 0/0
 11026 ;;		On exit  : 0/0
 11027 ;;		Unchanged: 0/0
 11028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11030 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11032 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11033 ;;Total ram usage:        1 bytes
 11034 ;; Hardware stack levels used:    1
 11035 ;; Hardware stack levels required when called:    5
 11036 ;; This function calls:
 11037 ;;		_I2C_IdleCheck
 11038 ;; This function is called by:
 11039 ;;		_I2C_LCD_Command
 11040 ;;		_I2C_LCD_Putc
 11041 ;;		_I2C_LCD_Puts
 11042 ;;		_I2C_LCD_CreateChar
 11043 ;; This function uses a non-reentrant model
 11044 ;;
 11045                           
 11046                           	psect	text52
 11047  0132FE                     __ptext52:
 11048                           	opt stack 0
 11049  0132FE                     _I2C_Send:
 11050                           	opt stack 22
 11051                           
 11052                           ; BSR set to: 0
 11053                           ;incstack = 0
 11054                           ;I2C_Send@data stored from wreg
 11055  0132FE  6E22               	movwf	I2C_Send@data,c
 11056                           
 11057                           ;My_header\My_I2C.h: 64: I2C_IdleCheck(0x5);
 11058  013300  0E05               	movlw	5
 11059  013302  ECA5  F099         	call	_I2C_IdleCheck
 11060                           
 11061                           ;My_header\My_I2C.h: 65: SSP1IF = 0;
 11062  013306  969E               	bcf	3998,3,c	;volatile
 11063                           
 11064                           ;My_header\My_I2C.h: 66: SSP1BUF = data;
 11065  013308  C022  FFC9         	movff	I2C_Send@data,4041	;volatile
 11066                           
 11067                           ;My_header\My_I2C.h: 67: while (!SSP1IF);
 11068  01330C  D000               	goto	l325
 11069  01330E                     l325:
 11070  01330E  A69E               	btfss	3998,3,c	;volatile
 11071  013310  D7FE               	goto	l325
 11072                           
 11073                           ;My_header\My_I2C.h: 68: return SSP1CON2bits.ACKSTAT;
 11074                           ;	Return value of _I2C_Send is never used
 11075  013312  50C5               	movf	4037,w,c	;volatile
 11076  013314  0012               	return	
 11077  013316  0012               	return		;funcret
 11078  013318                     __end_of_I2C_Send:
 11079                           	opt stack 0
 11080                           tblptru	equ	0xFF8
 11081                           tblptrh	equ	0xFF7
 11082                           tblptrl	equ	0xFF6
 11083                           tablat	equ	0xFF5
 11084                           prodh	equ	0xFF4
 11085                           prodl	equ	0xFF3
 11086                           intcon	equ	0xFF2
 11087                           intcon2	equ	0xFF1
 11088                           postinc0	equ	0xFEE
 11089                           wreg	equ	0xFE8
 11090                           indf1	equ	0xFE7
 11091                           postdec1	equ	0xFE5
 11092                           fsr1h	equ	0xFE2
 11093                           fsr1l	equ	0xFE1
 11094                           indf2	equ	0xFDF
 11095                           postinc2	equ	0xFDE
 11096                           postdec2	equ	0xFDD
 11097                           plusw2	equ	0xFDB
 11098                           fsr2h	equ	0xFDA
 11099                           fsr2l	equ	0xFD9
 11100                           status	equ	0xFD8
 11101                           
 11102 ;; *************** function _I2C_IdleCheck *****************
 11103 ;; Defined at:
 11104 ;;		line 19 in file "../My_header\My_I2C.h"
 11105 ;; Parameters:    Size  Location     Type
 11106 ;;  mask            1    wreg     unsigned char 
 11107 ;; Auto vars:     Size  Location     Type
 11108 ;;  mask            1   32[COMRAM] unsigned char 
 11109 ;; Return value:  Size  Location     Type
 11110 ;;		None               void
 11111 ;; Registers used:
 11112 ;;		wreg, status,2, status,0
 11113 ;; Tracked objects:
 11114 ;;		On entry : 0/0
 11115 ;;		On exit  : 0/0
 11116 ;;		Unchanged: 0/0
 11117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11120 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11121 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11122 ;;Total ram usage:        2 bytes
 11123 ;; Hardware stack levels used:    1
 11124 ;; Hardware stack levels required when called:    4
 11125 ;; This function calls:
 11126 ;;		Nothing
 11127 ;; This function is called by:
 11128 ;;		_I2C_Start
 11129 ;;		_I2C_Stop
 11130 ;;		_I2C_Send
 11131 ;;		_I2C_rStart
 11132 ;;		_I2C_Receive
 11133 ;; This function uses a non-reentrant model
 11134 ;;
 11135                           
 11136                           	psect	text53
 11137  01334A                     __ptext53:
 11138                           	opt stack 0
 11139  01334A                     _I2C_IdleCheck:
 11140                           	opt stack 22
 11141                           
 11142                           ;incstack = 0
 11143                           ;I2C_IdleCheck@mask stored from wreg
 11144  01334A  6E21               	movwf	I2C_IdleCheck@mask,c
 11145                           
 11146                           ;My_header\My_I2C.h: 20: while ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
 11147  01334C  D000               	goto	l4789
 11148  01334E                     l4789:
 11149  01334E  50C7               	movf	4039,w,c	;volatile
 11150  013350  1421               	andwf	I2C_IdleCheck@mask,w,c
 11151  013352  6E20               	movwf	??_I2C_IdleCheck& (0+255),c
 11152  013354  50C5               	movf	4037,w,c	;volatile
 11153  013356  0B1F               	andlw	31
 11154  013358  1020               	iorwf	??_I2C_IdleCheck,w,c
 11155  01335A  0900               	iorlw	0
 11156  01335C  A4D8               	btfss	status,2,c
 11157  01335E  D7F7               	goto	l4789
 11158  013360  0012               	return		;funcret
 11159  013362                     __end_of_I2C_IdleCheck:
 11160                           	opt stack 0
 11161                           tblptru	equ	0xFF8
 11162                           tblptrh	equ	0xFF7
 11163                           tblptrl	equ	0xFF6
 11164                           tablat	equ	0xFF5
 11165                           prodh	equ	0xFF4
 11166                           prodl	equ	0xFF3
 11167                           intcon	equ	0xFF2
 11168                           intcon2	equ	0xFF1
 11169                           postinc0	equ	0xFEE
 11170                           wreg	equ	0xFE8
 11171                           indf1	equ	0xFE7
 11172                           postdec1	equ	0xFE5
 11173                           fsr1h	equ	0xFE2
 11174                           fsr1l	equ	0xFE1
 11175                           indf2	equ	0xFDF
 11176                           postinc2	equ	0xFDE
 11177                           postdec2	equ	0xFDD
 11178                           plusw2	equ	0xFDB
 11179                           fsr2h	equ	0xFDA
 11180                           fsr2l	equ	0xFD9
 11181                           status	equ	0xFD8
 11182                           
 11183 ;; *************** function _Delay_ms *****************
 11184 ;; Defined at:
 11185 ;;		line 350 in file "../My_header\My_header.h"
 11186 ;; Parameters:    Size  Location     Type
 11187 ;;  ms              2   31[COMRAM] unsigned int 
 11188 ;; Auto vars:     Size  Location     Type
 11189 ;;		None
 11190 ;; Return value:  Size  Location     Type
 11191 ;;		None               void
 11192 ;; Registers used:
 11193 ;;		wreg, status,2, status,0
 11194 ;; Tracked objects:
 11195 ;;		On entry : 0/0
 11196 ;;		On exit  : 0/0
 11197 ;;		Unchanged: 0/0
 11198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11199 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11201 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11202 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11203 ;;Total ram usage:        3 bytes
 11204 ;; Hardware stack levels used:    1
 11205 ;; Hardware stack levels required when called:    4
 11206 ;; This function calls:
 11207 ;;		Nothing
 11208 ;; This function is called by:
 11209 ;;		_I2C_LCD_init
 11210 ;; This function uses a non-reentrant model
 11211 ;;
 11212                           
 11213                           	psect	text54
 11214  0131FC                     __ptext54:
 11215                           	opt stack 0
 11216  0131FC                     _Delay_ms:
 11217                           	opt stack 24
 11218                           
 11219                           ;My_header\My_header.h: 351: while (ms--)_delay((unsigned long)((1)*(48000000/4000.0)));
 11220                           
 11221                           ;incstack = 0
 11222  0131FC  D009               	goto	l5229
 11223  0131FE                     l5227:
 11224  0131FE  0E10               	movlw	16
 11225  013200  6E22               	movwf	??_Delay_ms& (0+255),c
 11226  013202  0E94               	movlw	148
 11227  013204                     u6557:
 11228  013204  2EE8               	decfsz	wreg,f,c
 11229  013206  D7FE               	goto	u6557
 11230  013208  2E22               	decfsz	??_Delay_ms& (0+255),f,c
 11231  01320A  D7FC               	goto	u6557
 11232  01320C  D000               	nop2	
 11233  01320E  D000               	goto	l5229
 11234  013210                     l5229:
 11235  013210  0620               	decf	Delay_ms@ms,f,c
 11236  013212  A0D8               	btfss	status,0,c
 11237  013214  0621               	decf	Delay_ms@ms+1,f,c
 11238  013216  2820               	incf	Delay_ms@ms,w,c
 11239  013218  E1F2               	bnz	l5227
 11240  01321A  2821               	incf	Delay_ms@ms+1,w,c
 11241  01321C  A4D8               	btfss	status,2,c
 11242  01321E  D7EF               	goto	l5227
 11243  013220  0012               	return		;funcret
 11244  013222                     __end_of_Delay_ms:
 11245                           	opt stack 0
 11246                           tblptru	equ	0xFF8
 11247                           tblptrh	equ	0xFF7
 11248                           tblptrl	equ	0xFF6
 11249                           tablat	equ	0xFF5
 11250                           prodh	equ	0xFF4
 11251                           prodl	equ	0xFF3
 11252                           intcon	equ	0xFF2
 11253                           intcon2	equ	0xFF1
 11254                           postinc0	equ	0xFEE
 11255                           wreg	equ	0xFE8
 11256                           indf1	equ	0xFE7
 11257                           postdec1	equ	0xFE5
 11258                           fsr1h	equ	0xFE2
 11259                           fsr1l	equ	0xFE1
 11260                           indf2	equ	0xFDF
 11261                           postinc2	equ	0xFDE
 11262                           postdec2	equ	0xFDD
 11263                           plusw2	equ	0xFDB
 11264                           fsr2h	equ	0xFDA
 11265                           fsr2l	equ	0xFD9
 11266                           status	equ	0xFD8
 11267                           
 11268 ;; *************** function _CTMU_init *****************
 11269 ;; Defined at:
 11270 ;;		line 304 in file "../My_header\My_header.h"
 11271 ;; Parameters:    Size  Location     Type
 11272 ;;		None
 11273 ;; Auto vars:     Size  Location     Type
 11274 ;;		None
 11275 ;; Return value:  Size  Location     Type
 11276 ;;		None               void
 11277 ;; Registers used:
 11278 ;;		wreg, status,2
 11279 ;; Tracked objects:
 11280 ;;		On entry : 0/0
 11281 ;;		On exit  : 0/0
 11282 ;;		Unchanged: 0/0
 11283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11288 ;;Total ram usage:        0 bytes
 11289 ;; Hardware stack levels used:    1
 11290 ;; Hardware stack levels required when called:    4
 11291 ;; This function calls:
 11292 ;;		Nothing
 11293 ;; This function is called by:
 11294 ;;		_main_init
 11295 ;; This function uses a non-reentrant model
 11296 ;;
 11297                           
 11298                           	psect	text55
 11299  0130FC                     __ptext55:
 11300                           	opt stack 0
 11301  0130FC                     _CTMU_init:
 11302                           	opt stack 25
 11303                           
 11304                           ;My_header\My_header.h: 305: CTMUCONH = 0x00;
 11305                           
 11306                           ;incstack = 0
 11307  0130FC  0E00               	movlw	0
 11308  0130FE  6EB3               	movwf	4019,c	;volatile
 11309                           
 11310                           ;My_header\My_header.h: 306: CTMUCONL = 0x90;
 11311  013100  0E90               	movlw	144
 11312  013102  6EB2               	movwf	4018,c	;volatile
 11313                           
 11314                           ;My_header\My_header.h: 307: CTMUICON = 0x01;
 11315  013104  0E01               	movlw	1
 11316  013106  6EB1               	movwf	4017,c	;volatile
 11317                           
 11318                           ;My_header\My_header.h: 308: ADCON0 = 0xFB;
 11319  013108  0EFB               	movlw	251
 11320  01310A  6EC2               	movwf	4034,c	;volatile
 11321                           
 11322                           ;My_header\My_header.h: 309: ADCON1 = 0x1F;
 11323  01310C  0E1F               	movlw	31
 11324  01310E  6EC1               	movwf	4033,c	;volatile
 11325                           
 11326                           ;My_header\My_header.h: 311: ADCON1bits.ADFM = 1;
 11327  013110  8EC1               	bsf	4033,7,c	;volatile
 11328                           
 11329                           ;My_header\My_header.h: 312: ADCON1bits.ADCAL = 0;
 11330  013112  9CC1               	bcf	4033,6,c	;volatile
 11331                           
 11332                           ;My_header\My_header.h: 313: ADCON1bits.ACQT = 1;
 11333  013114  50C1               	movf	4033,w,c	;volatile
 11334  013116  0BC7               	andlw	-57
 11335  013118  0908               	iorlw	8
 11336  01311A  6EC1               	movwf	4033,c	;volatile
 11337                           
 11338                           ;My_header\My_header.h: 314: ADCON1bits.ADCS = 2;
 11339  01311C  50C1               	movf	4033,w,c	;volatile
 11340  01311E  0BF8               	andlw	-8
 11341  013120  0902               	iorlw	2
 11342  013122  6EC1               	movwf	4033,c	;volatile
 11343                           
 11344                           ;My_header\My_header.h: 316: ADCON0bits.VCFG0 = 0;
 11345  013124  9CC2               	bcf	4034,6,c	;volatile
 11346                           
 11347                           ;My_header\My_header.h: 317: ADCON0bits.VCFG1 = 0;
 11348  013126  9EC2               	bcf	4034,7,c	;volatile
 11349                           
 11350                           ;My_header\My_header.h: 318: ADCON0bits.ADON = 1;
 11351  013128  80C2               	bsf	4034,0,c	;volatile
 11352  01312A  0012               	return		;funcret
 11353  01312C                     __end_of_CTMU_init:
 11354                           	opt stack 0
 11355                           tblptru	equ	0xFF8
 11356                           tblptrh	equ	0xFF7
 11357                           tblptrl	equ	0xFF6
 11358                           tablat	equ	0xFF5
 11359                           prodh	equ	0xFF4
 11360                           prodl	equ	0xFF3
 11361                           intcon	equ	0xFF2
 11362                           intcon2	equ	0xFF1
 11363                           postinc0	equ	0xFEE
 11364                           wreg	equ	0xFE8
 11365                           indf1	equ	0xFE7
 11366                           postdec1	equ	0xFE5
 11367                           fsr1h	equ	0xFE2
 11368                           fsr1l	equ	0xFE1
 11369                           indf2	equ	0xFDF
 11370                           postinc2	equ	0xFDE
 11371                           postdec2	equ	0xFDD
 11372                           plusw2	equ	0xFDB
 11373                           fsr2h	equ	0xFDA
 11374                           fsr2l	equ	0xFD9
 11375                           status	equ	0xFD8
 11376                           
 11377 ;; *************** function _ADC_init *****************
 11378 ;; Defined at:
 11379 ;;		line 148 in file "../My_header\My_header.h"
 11380 ;; Parameters:    Size  Location     Type
 11381 ;;  p_ref           1    wreg     unsigned char 
 11382 ;; Auto vars:     Size  Location     Type
 11383 ;;  p_ref           1   31[COMRAM] unsigned char 
 11384 ;; Return value:  Size  Location     Type
 11385 ;;		None               void
 11386 ;; Registers used:
 11387 ;;		wreg, status,2
 11388 ;; Tracked objects:
 11389 ;;		On entry : 0/0
 11390 ;;		On exit  : 0/0
 11391 ;;		Unchanged: 0/0
 11392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11394 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11396 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11397 ;;Total ram usage:        1 bytes
 11398 ;; Hardware stack levels used:    1
 11399 ;; Hardware stack levels required when called:    4
 11400 ;; This function calls:
 11401 ;;		Nothing
 11402 ;; This function is called by:
 11403 ;;		_main_init
 11404 ;; This function uses a non-reentrant model
 11405 ;;
 11406                           
 11407                           	psect	text56
 11408  0132C8                     __ptext56:
 11409                           	opt stack 0
 11410  0132C8                     _ADC_init:
 11411                           	opt stack 25
 11412                           
 11413                           ;incstack = 0
 11414                           ;ADC_init@p_ref stored from wreg
 11415  0132C8  6E20               	movwf	ADC_init@p_ref,c
 11416                           
 11417                           ;My_header\My_header.h: 149: ADCON0bits.VCFG1 = 0;
 11418  0132CA  9EC2               	bcf	4034,7,c	;volatile
 11419                           
 11420                           ;My_header\My_header.h: 150: ADCON0bits.VCFG0 = p_ref;
 11421  0132CC  B020               	btfsc	ADC_init@p_ref,0,c
 11422  0132CE  D002               	bra	u5875
 11423  0132D0  9CC2               	bcf	4034,6,c	;volatile
 11424  0132D2  D001               	bra	u5876
 11425  0132D4                     u5875:
 11426  0132D4  8CC2               	bsf	4034,6,c	;volatile
 11427  0132D6                     u5876:
 11428                           
 11429                           ;My_header\My_header.h: 152: ADCON1bits.ADFM = 1;
 11430  0132D6  8EC1               	bsf	4033,7,c	;volatile
 11431                           
 11432                           ;My_header\My_header.h: 153: ADCON1bits.ADCAL = 0;
 11433  0132D8  9CC1               	bcf	4033,6,c	;volatile
 11434                           
 11435                           ;My_header\My_header.h: 154: ADCON1bits.ADCS = 2;
 11436  0132DA  50C1               	movf	4033,w,c	;volatile
 11437  0132DC  0BF8               	andlw	-8
 11438  0132DE  0902               	iorlw	2
 11439  0132E0  6EC1               	movwf	4033,c	;volatile
 11440  0132E2  0012               	return		;funcret
 11441  0132E4                     __end_of_ADC_init:
 11442                           	opt stack 0
 11443                           tblptru	equ	0xFF8
 11444                           tblptrh	equ	0xFF7
 11445                           tblptrl	equ	0xFF6
 11446                           tablat	equ	0xFF5
 11447                           prodh	equ	0xFF4
 11448                           prodl	equ	0xFF3
 11449                           intcon	equ	0xFF2
 11450                           intcon2	equ	0xFF1
 11451                           postinc0	equ	0xFEE
 11452                           wreg	equ	0xFE8
 11453                           indf1	equ	0xFE7
 11454                           postdec1	equ	0xFE5
 11455                           fsr1h	equ	0xFE2
 11456                           fsr1l	equ	0xFE1
 11457                           indf2	equ	0xFDF
 11458                           postinc2	equ	0xFDE
 11459                           postdec2	equ	0xFDD
 11460                           plusw2	equ	0xFDB
 11461                           fsr2h	equ	0xFDA
 11462                           fsr2l	equ	0xFD9
 11463                           status	equ	0xFD8
 11464                           
 11465 ;; *************** function _RTCC_loop *****************
 11466 ;; Defined at:
 11467 ;;		line 380 in file "../My_header\My_RTCC.h"
 11468 ;; Parameters:    Size  Location     Type
 11469 ;;		None
 11470 ;; Auto vars:     Size  Location     Type
 11471 ;;		None
 11472 ;; Return value:  Size  Location     Type
 11473 ;;		None               void
 11474 ;; Registers used:
 11475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11476 ;; Tracked objects:
 11477 ;;		On entry : 0/0
 11478 ;;		On exit  : 0/0
 11479 ;;		Unchanged: 0/0
 11480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11485 ;;Total ram usage:        0 bytes
 11486 ;; Hardware stack levels used:    1
 11487 ;; Hardware stack levels required when called:    8
 11488 ;; This function calls:
 11489 ;;		_RTCC_from_RTCC
 11490 ;; This function is called by:
 11491 ;;		_main
 11492 ;; This function uses a non-reentrant model
 11493 ;;
 11494                           
 11495                           	psect	text57
 11496  012D8E                     __ptext57:
 11497                           	opt stack 0
 11498  012D8E                     _RTCC_loop:
 11499                           	opt stack 22
 11500                           
 11501                           ;My_header\My_RTCC.h: 381: static uint8_t prev_halfsec;
 11502                           ;My_header\My_RTCC.h: 382: if (RTCCFGbits.HALFSEC != prev_halfsec) {
 11503                           
 11504                           ;incstack = 0
 11505  012D8E  010F               	movlb	15	; () banked
 11506  012D90  A73F               	btfss	63,3,b	;volatile
 11507  012D92  D002               	goto	u6220
 11508  012D94  0E01               	movlw	1
 11509  012D96  D001               	goto	u6226
 11510  012D98                     u6220:
 11511  012D98  0E00               	movlw	0
 11512  012D9A                     u6226:
 11513  012D9A  0100               	movlb	0	; () banked
 11514  012D9C  1998               	xorwf	RTCC_loop@prev_halfsec& (0+255),w,b
 11515  012D9E  B4D8               	btfsc	status,2,c
 11516  012DA0  0012               	return	
 11517                           
 11518                           ; BSR set to: 0
 11519                           ;My_header\My_RTCC.h: 383: prev_halfsec = RTCCFGbits.HALFSEC;
 11520  012DA2  0E00               	movlw	0
 11521  012DA4  B73F               	btfsc	63,3,b	;volatile
 11522  012DA6  0E01               	movlw	1
 11523  012DA8  0100               	movlb	0	; () banked
 11524  012DAA  6F98               	movwf	RTCC_loop@prev_halfsec& (0+255),b
 11525                           
 11526                           ;My_header\My_RTCC.h: 384: colon = RTCCFGbits.HALFSEC;
 11527  012DAC  0E00               	movlw	0
 11528  012DAE  B73F               	btfsc	63,3,b	;volatile
 11529  012DB0  0E01               	movlw	1
 11530  012DB2  0100               	movlb	0	; () banked
 11531  012DB4  6F99               	movwf	_colon& (0+255),b
 11532                           
 11533                           ; BSR set to: 0
 11534                           ;My_header\My_RTCC.h: 385: RTCC_from_RTCC(&caltime_now, &epoch_now);
 11535  012DB6  0E9E               	movlw	low _caltime_now
 11536  012DB8  0101               	movlb	1	; () banked
 11537  012DBA  6F00               	movwf	RTCC_from_RTCC@ct& (0+255),b
 11538  012DBC  0E00               	movlw	high _caltime_now
 11539  012DBE  0101               	movlb	1	; () banked
 11540  012DC0  6F01               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
 11541  012DC2  0EB5               	movlw	low _epoch_now
 11542  012DC4  0101               	movlb	1	; () banked
 11543  012DC6  6F02               	movwf	RTCC_from_RTCC@ep& (0+255),b
 11544  012DC8  0E00               	movlw	high _epoch_now
 11545  012DCA  0101               	movlb	1	; () banked
 11546  012DCC  6F03               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
 11547  012DCE  EC34  F099         	call	_RTCC_from_RTCC	;wreg free
 11548                           
 11549                           ;My_header\My_RTCC.h: 386: time_change_flag = 1;
 11550  012DD2  0E01               	movlw	1
 11551  012DD4  6E3A               	movwf	_time_change_flag,c
 11552  012DD6  0012               	return	
 11553  012DD8  0012               	return		;funcret
 11554  012DDA                     __end_of_RTCC_loop:
 11555                           	opt stack 0
 11556                           tblptru	equ	0xFF8
 11557                           tblptrh	equ	0xFF7
 11558                           tblptrl	equ	0xFF6
 11559                           tablat	equ	0xFF5
 11560                           prodh	equ	0xFF4
 11561                           prodl	equ	0xFF3
 11562                           intcon	equ	0xFF2
 11563                           intcon2	equ	0xFF1
 11564                           postinc0	equ	0xFEE
 11565                           wreg	equ	0xFE8
 11566                           indf1	equ	0xFE7
 11567                           postdec1	equ	0xFE5
 11568                           fsr1h	equ	0xFE2
 11569                           fsr1l	equ	0xFE1
 11570                           indf2	equ	0xFDF
 11571                           postinc2	equ	0xFDE
 11572                           postdec2	equ	0xFDD
 11573                           plusw2	equ	0xFDB
 11574                           fsr2h	equ	0xFDA
 11575                           fsr2l	equ	0xFD9
 11576                           status	equ	0xFD8
 11577                           
 11578 ;; *************** function _RTCC_from_RTCC *****************
 11579 ;; Defined at:
 11580 ;;		line 226 in file "../My_header\My_RTCC.h"
 11581 ;; Parameters:    Size  Location     Type
 11582 ;;  ct              2    0[BANK1 ] PTR struct .
 11583 ;;		 -> caltime_now(7), 
 11584 ;;  ep              2    2[BANK1 ] PTR unsigned long 
 11585 ;;		 -> epoch_now(4), 
 11586 ;; Auto vars:     Size  Location     Type
 11587 ;;		None
 11588 ;; Return value:  Size  Location     Type
 11589 ;;		None               void
 11590 ;; Registers used:
 11591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11592 ;; Tracked objects:
 11593 ;;		On entry : 0/0
 11594 ;;		On exit  : 0/0
 11595 ;;		Unchanged: 0/0
 11596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11597 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11600 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11601 ;;Total ram usage:        4 bytes
 11602 ;; Hardware stack levels used:    1
 11603 ;; Hardware stack levels required when called:    7
 11604 ;; This function calls:
 11605 ;;		_RTCC_to_caltime
 11606 ;;		_caltime_to_epoch
 11607 ;; This function is called by:
 11608 ;;		_display_time_1602
 11609 ;;		_RTCC_time_set_inc
 11610 ;;		_RTCC_time_set_dec
 11611 ;;		_RTCC_loop
 11612 ;;		_sleep_loop
 11613 ;;		_main
 11614 ;;		_display_time_0802
 11615 ;; This function uses a non-reentrant model
 11616 ;;
 11617                           
 11618                           	psect	text58
 11619  013268                     __ptext58:
 11620                           	opt stack 0
 11621  013268                     _RTCC_from_RTCC:
 11622                           	opt stack 22
 11623                           
 11624                           ;My_header\My_RTCC.h: 227: RTCC_to_caltime(ct);
 11625                           
 11626                           ;incstack = 0
 11627  013268  C100  F0B9         	movff	RTCC_from_RTCC@ct,RTCC_to_caltime@ct
 11628  01326C  C101  F0BA         	movff	RTCC_from_RTCC@ct+1,RTCC_to_caltime@ct+1
 11629  013270  EC18  F091         	call	_RTCC_to_caltime	;wreg free
 11630                           
 11631                           ;My_header\My_RTCC.h: 228: caltime_to_epoch(ct, ep);
 11632  013274  C100  F0D2         	movff	RTCC_from_RTCC@ct,caltime_to_epoch@ct
 11633  013278  C101  F0D3         	movff	RTCC_from_RTCC@ct+1,caltime_to_epoch@ct+1
 11634  01327C  C102  F0D4         	movff	RTCC_from_RTCC@ep,caltime_to_epoch@ep
 11635  013280  C103  F0D5         	movff	RTCC_from_RTCC@ep+1,caltime_to_epoch@ep+1
 11636  013284  ECE8  F083         	call	_caltime_to_epoch	;wreg free
 11637  013288  0012               	return		;funcret
 11638  01328A                     __end_of_RTCC_from_RTCC:
 11639                           	opt stack 0
 11640                           tblptru	equ	0xFF8
 11641                           tblptrh	equ	0xFF7
 11642                           tblptrl	equ	0xFF6
 11643                           tablat	equ	0xFF5
 11644                           prodh	equ	0xFF4
 11645                           prodl	equ	0xFF3
 11646                           intcon	equ	0xFF2
 11647                           intcon2	equ	0xFF1
 11648                           postinc0	equ	0xFEE
 11649                           wreg	equ	0xFE8
 11650                           indf1	equ	0xFE7
 11651                           postdec1	equ	0xFE5
 11652                           fsr1h	equ	0xFE2
 11653                           fsr1l	equ	0xFE1
 11654                           indf2	equ	0xFDF
 11655                           postinc2	equ	0xFDE
 11656                           postdec2	equ	0xFDD
 11657                           plusw2	equ	0xFDB
 11658                           fsr2h	equ	0xFDA
 11659                           fsr2l	equ	0xFD9
 11660                           status	equ	0xFD8
 11661                           
 11662 ;; *************** function _caltime_to_epoch *****************
 11663 ;; Defined at:
 11664 ;;		line 208 in file "../My_header\My_RTCC.h"
 11665 ;; Parameters:    Size  Location     Type
 11666 ;;  ct              2   25[BANK0 ] PTR struct .
 11667 ;;		 -> caltime_now(7), 
 11668 ;;  ep              2   27[BANK0 ] PTR unsigned long 
 11669 ;;		 -> epoch_now(4), 
 11670 ;; Auto vars:     Size  Location     Type
 11671 ;;  month           1   39[BANK0 ] unsigned char 
 11672 ;;  month           1   34[BANK0 ] unsigned char 
 11673 ;;  year            1   33[BANK0 ] unsigned char 
 11674 ;;  epoch           4   35[BANK0 ] unsigned long 
 11675 ;; Return value:  Size  Location     Type
 11676 ;;		None               void
 11677 ;; Registers used:
 11678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11679 ;; Tracked objects:
 11680 ;;		On entry : 0/0
 11681 ;;		On exit  : 0/0
 11682 ;;		Unchanged: 0/0
 11683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11684 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11685 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11686 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11687 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11688 ;;Total ram usage:       15 bytes
 11689 ;; Hardware stack levels used:    1
 11690 ;; Hardware stack levels required when called:    6
 11691 ;; This function calls:
 11692 ;;		___lmul
 11693 ;;		_month_length
 11694 ;; This function is called by:
 11695 ;;		_RTCC_from_RTCC
 11696 ;;		_RTCC_from_caltime
 11697 ;; This function uses a non-reentrant model
 11698 ;;
 11699                           
 11700                           	psect	text59
 11701  0107D0                     __ptext59:
 11702                           	opt stack 0
 11703  0107D0                     _caltime_to_epoch:
 11704                           	opt stack 22
 11705                           
 11706                           ;My_header\My_RTCC.h: 209: epoch_t epoch = 0;
 11707                           
 11708                           ;incstack = 0
 11709  0107D0  0E00               	movlw	0
 11710  0107D2  0100               	movlb	0	; () banked
 11711  0107D4  6FDC               	movwf	caltime_to_epoch@epoch& (0+255),b
 11712  0107D6  0E00               	movlw	0
 11713  0107D8  6FDD               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 11714  0107DA  0E00               	movlw	0
 11715  0107DC  6FDE               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 11716  0107DE  0E00               	movlw	0
 11717  0107E0  6FDF               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 11718                           
 11719                           ;My_header\My_RTCC.h: 210: for (uint8_t year = 0; year < ct->YY; year++) {
 11720  0107E2  0E00               	movlw	0
 11721  0107E4  0100               	movlb	0	; () banked
 11722  0107E6  6FDA               	movwf	caltime_to_epoch@year& (0+255),b
 11723  0107E8  D038               	goto	l5135
 11724  0107EA                     l5121:
 11725                           
 11726                           ; BSR set to: 0
 11727                           ;My_header\My_RTCC.h: 211: for (uint8_t month = 1; month <= 12; month++) {
 11728  0107EA  0E01               	movlw	1
 11729  0107EC  0100               	movlb	0	; () banked
 11730  0107EE  6FE0               	movwf	caltime_to_epoch@month& (0+255),b
 11731  0107F0                     l5123:
 11732                           
 11733                           ; BSR set to: 0
 11734  0107F0  0E0C               	movlw	12
 11735  0107F2  0100               	movlb	0	; () banked
 11736  0107F4  65E0               	cpfsgt	caltime_to_epoch@month& (0+255),b
 11737  0107F6  D001               	goto	l5127
 11738                           
 11739                           ; BSR set to: 0
 11740  0107F8  D02D               	goto	l5133
 11741  0107FA                     l5127:
 11742                           
 11743                           ; BSR set to: 0
 11744                           ;My_header\My_RTCC.h: 212: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 11745  0107FA  C0E0  F022         	movff	caltime_to_epoch@month,month_length@month
 11746  0107FE  0100               	movlb	0	; () banked
 11747  010800  51DA               	movf	caltime_to_epoch@year& (0+255),w,b
 11748  010802  EC7E  F08D         	call	_month_length
 11749  010806  0100               	movlb	0	; () banked
 11750  010808  6FD6               	movwf	??_caltime_to_epoch& (0+255),b
 11751  01080A  0100               	movlb	0	; () banked
 11752  01080C  51D6               	movf	??_caltime_to_epoch& (0+255),w,b
 11753  01080E  0100               	movlb	0	; () banked
 11754  010810  6FC6               	movwf	___lmul@multiplier& (0+255),b
 11755  010812  6BC7               	clrf	(___lmul@multiplier+1)& (0+255),b
 11756  010814  6BC8               	clrf	(___lmul@multiplier+2)& (0+255),b
 11757  010816  6BC9               	clrf	(___lmul@multiplier+3)& (0+255),b
 11758  010818  0E80               	movlw	128
 11759  01081A  0100               	movlb	0	; () banked
 11760  01081C  6FCA               	movwf	___lmul@multiplicand& (0+255),b
 11761  01081E  0E51               	movlw	81
 11762  010820  6FCB               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11763  010822  0E01               	movlw	1
 11764  010824  6FCC               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11765  010826  0E00               	movlw	0
 11766  010828  6FCD               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11767  01082A  ECF2  F094         	call	___lmul	;wreg free
 11768  01082E  0100               	movlb	0	; () banked
 11769  010830  51C6               	movf	?___lmul& (0+255),w,b
 11770  010832  0100               	movlb	0	; () banked
 11771  010834  27DC               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11772  010836  0100               	movlb	0	; () banked
 11773  010838  51C7               	movf	(?___lmul+1)& (0+255),w,b
 11774  01083A  0100               	movlb	0	; () banked
 11775  01083C  23DD               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11776  01083E  0100               	movlb	0	; () banked
 11777  010840  51C8               	movf	(?___lmul+2)& (0+255),w,b
 11778  010842  0100               	movlb	0	; () banked
 11779  010844  23DE               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11780  010846  0100               	movlb	0	; () banked
 11781  010848  51C9               	movf	(?___lmul+3)& (0+255),w,b
 11782  01084A  0100               	movlb	0	; () banked
 11783  01084C  23DF               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11784                           
 11785                           ; BSR set to: 0
 11786  01084E  0100               	movlb	0	; () banked
 11787  010850  2BE0               	incf	caltime_to_epoch@month& (0+255),f,b
 11788  010852  D7CE               	goto	l5123
 11789  010854                     l5133:
 11790                           
 11791                           ; BSR set to: 0
 11792  010854  0100               	movlb	0	; () banked
 11793  010856  2BDA               	incf	caltime_to_epoch@year& (0+255),f,b
 11794  010858  D000               	goto	l5135
 11795  01085A                     l5135:
 11796                           
 11797                           ; BSR set to: 0
 11798  01085A  0100               	movlb	0	; () banked
 11799  01085C  EE20 F006          	lfsr	2,6
 11800  010860  51D2               	movf	caltime_to_epoch@ct& (0+255),w,b
 11801  010862  26D9               	addwf	fsr2l,f,c
 11802  010864  51D3               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 11803  010866  22DA               	addwfc	fsr2h,f,c
 11804  010868  50DE               	movf	postinc2,w,c
 11805  01086A  0100               	movlb	0	; () banked
 11806  01086C  5DDA               	subwf	caltime_to_epoch@year& (0+255),w,b
 11807  01086E  A0D8               	btfss	status,0,c
 11808  010870  D7BC               	goto	l5121
 11809                           
 11810                           ; BSR set to: 0
 11811                           ;My_header\My_RTCC.h: 213: }
 11812                           ;My_header\My_RTCC.h: 214: }
 11813                           ;My_header\My_RTCC.h: 215: for (uint8_t month = 1; month < ct->MM; month++) {
 11814                           
 11815                           ; BSR set to: 0
 11816  010872  0E01               	movlw	1
 11817  010874  0100               	movlb	0	; () banked
 11818  010876  6FDB               	movwf	caltime_to_epoch@month_2000& (0+255),b
 11819  010878  D033               	goto	l5143
 11820  01087A                     l5139:
 11821                           
 11822                           ; BSR set to: 0
 11823                           ;My_header\My_RTCC.h: 216: epoch += ((epoch_t)60*60*24) * month_length(ct->YY, month);
 11824  01087A  C0DB  F022         	movff	caltime_to_epoch@month_2000,month_length@month
 11825  01087E  0100               	movlb	0	; () banked
 11826  010880  EE20 F006          	lfsr	2,6
 11827  010884  51D2               	movf	caltime_to_epoch@ct& (0+255),w,b
 11828  010886  26D9               	addwf	fsr2l,f,c
 11829  010888  51D3               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 11830  01088A  22DA               	addwfc	fsr2h,f,c
 11831  01088C  50DF               	movf	indf2,w,c
 11832  01088E  EC7E  F08D         	call	_month_length
 11833  010892  0100               	movlb	0	; () banked
 11834  010894  6FD6               	movwf	??_caltime_to_epoch& (0+255),b
 11835  010896  0100               	movlb	0	; () banked
 11836  010898  51D6               	movf	??_caltime_to_epoch& (0+255),w,b
 11837  01089A  0100               	movlb	0	; () banked
 11838  01089C  6FC6               	movwf	___lmul@multiplier& (0+255),b
 11839  01089E  6BC7               	clrf	(___lmul@multiplier+1)& (0+255),b
 11840  0108A0  6BC8               	clrf	(___lmul@multiplier+2)& (0+255),b
 11841  0108A2  6BC9               	clrf	(___lmul@multiplier+3)& (0+255),b
 11842  0108A4  0E80               	movlw	128
 11843  0108A6  0100               	movlb	0	; () banked
 11844  0108A8  6FCA               	movwf	___lmul@multiplicand& (0+255),b
 11845  0108AA  0E51               	movlw	81
 11846  0108AC  6FCB               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11847  0108AE  0E01               	movlw	1
 11848  0108B0  6FCC               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11849  0108B2  0E00               	movlw	0
 11850  0108B4  6FCD               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11851  0108B6  ECF2  F094         	call	___lmul	;wreg free
 11852  0108BA  0100               	movlb	0	; () banked
 11853  0108BC  51C6               	movf	?___lmul& (0+255),w,b
 11854  0108BE  0100               	movlb	0	; () banked
 11855  0108C0  27DC               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11856  0108C2  0100               	movlb	0	; () banked
 11857  0108C4  51C7               	movf	(?___lmul+1)& (0+255),w,b
 11858  0108C6  0100               	movlb	0	; () banked
 11859  0108C8  23DD               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11860  0108CA  0100               	movlb	0	; () banked
 11861  0108CC  51C8               	movf	(?___lmul+2)& (0+255),w,b
 11862  0108CE  0100               	movlb	0	; () banked
 11863  0108D0  23DE               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11864  0108D2  0100               	movlb	0	; () banked
 11865  0108D4  51C9               	movf	(?___lmul+3)& (0+255),w,b
 11866  0108D6  0100               	movlb	0	; () banked
 11867  0108D8  23DF               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11868                           
 11869                           ; BSR set to: 0
 11870  0108DA  0100               	movlb	0	; () banked
 11871  0108DC  2BDB               	incf	caltime_to_epoch@month_2000& (0+255),f,b
 11872  0108DE  D000               	goto	l5143
 11873  0108E0                     l5143:
 11874                           
 11875                           ; BSR set to: 0
 11876  0108E0  0100               	movlb	0	; () banked
 11877  0108E2  EE20 F005          	lfsr	2,5
 11878  0108E6  51D2               	movf	caltime_to_epoch@ct& (0+255),w,b
 11879  0108E8  26D9               	addwf	fsr2l,f,c
 11880  0108EA  51D3               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 11881  0108EC  22DA               	addwfc	fsr2h,f,c
 11882  0108EE  50DE               	movf	postinc2,w,c
 11883  0108F0  0100               	movlb	0	; () banked
 11884  0108F2  5DDB               	subwf	caltime_to_epoch@month_2000& (0+255),w,b
 11885  0108F4  A0D8               	btfss	status,0,c
 11886  0108F6  D7C1               	goto	l5139
 11887                           
 11888                           ; BSR set to: 0
 11889                           ;My_header\My_RTCC.h: 217: }
 11890                           ;My_header\My_RTCC.h: 218: epoch += ((epoch_t)60*60*24) * (ct->DD - 1);
 11891                           
 11892                           ; BSR set to: 0
 11893  0108F8  0EFF               	movlw	255
 11894  0108FA  0100               	movlb	0	; () banked
 11895  0108FC  6FD6               	movwf	??_caltime_to_epoch& (0+255),b
 11896  0108FE  0EFF               	movlw	255
 11897  010900  0100               	movlb	0	; () banked
 11898  010902  6FD7               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 11899  010904  0100               	movlb	0	; () banked
 11900  010906  EE20 F004          	lfsr	2,4
 11901  01090A  51D2               	movf	caltime_to_epoch@ct& (0+255),w,b
 11902  01090C  26D9               	addwf	fsr2l,f,c
 11903  01090E  51D3               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 11904  010910  22DA               	addwfc	fsr2h,f,c
 11905  010912  50DF               	movf	indf2,w,c
 11906  010914  0100               	movlb	0	; () banked
 11907  010916  6FD8               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 11908  010918  6BD9               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 11909  01091A  0100               	movlb	0	; () banked
 11910  01091C  51D6               	movf	??_caltime_to_epoch& (0+255),w,b
 11911  01091E  0100               	movlb	0	; () banked
 11912  010920  27D8               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 11913  010922  0100               	movlb	0	; () banked
 11914  010924  51D7               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 11915  010926  0100               	movlb	0	; () banked
 11916  010928  23D9               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 11917  01092A  C0D8  F0C6         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 11918  01092E  C0D9  F0C7         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 11919  010932  0100               	movlb	0	; () banked
 11920  010934  0E00               	movlw	0
 11921  010936  BFC7               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 11922  010938  0EFF               	movlw	-1
 11923  01093A  6FC8               	movwf	(___lmul@multiplier+2)& (0+255),b
 11924  01093C  6FC9               	movwf	(___lmul@multiplier+3)& (0+255),b
 11925  01093E  0E80               	movlw	128
 11926  010940  0100               	movlb	0	; () banked
 11927  010942  6FCA               	movwf	___lmul@multiplicand& (0+255),b
 11928  010944  0E51               	movlw	81
 11929  010946  6FCB               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11930  010948  0E01               	movlw	1
 11931  01094A  6FCC               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11932  01094C  0E00               	movlw	0
 11933  01094E  6FCD               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11934  010950  ECF2  F094         	call	___lmul	;wreg free
 11935  010954  0100               	movlb	0	; () banked
 11936  010956  51C6               	movf	?___lmul& (0+255),w,b
 11937  010958  0100               	movlb	0	; () banked
 11938  01095A  27DC               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11939  01095C  0100               	movlb	0	; () banked
 11940  01095E  51C7               	movf	(?___lmul+1)& (0+255),w,b
 11941  010960  0100               	movlb	0	; () banked
 11942  010962  23DD               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11943  010964  0100               	movlb	0	; () banked
 11944  010966  51C8               	movf	(?___lmul+2)& (0+255),w,b
 11945  010968  0100               	movlb	0	; () banked
 11946  01096A  23DE               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11947  01096C  0100               	movlb	0	; () banked
 11948  01096E  51C9               	movf	(?___lmul+3)& (0+255),w,b
 11949  010970  0100               	movlb	0	; () banked
 11950  010972  23DF               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11951                           
 11952                           ;My_header\My_RTCC.h: 219: epoch += ((epoch_t)60*60) * ct->hh;
 11953  010974  0100               	movlb	0	; () banked
 11954  010976  EE20 F002          	lfsr	2,2
 11955  01097A  51D2               	movf	caltime_to_epoch@ct& (0+255),w,b
 11956  01097C  26D9               	addwf	fsr2l,f,c
 11957  01097E  51D3               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 11958  010980  22DA               	addwfc	fsr2h,f,c
 11959  010982  50DF               	movf	indf2,w,c
 11960  010984  0100               	movlb	0	; () banked
 11961  010986  6FD6               	movwf	??_caltime_to_epoch& (0+255),b
 11962  010988  0100               	movlb	0	; () banked
 11963  01098A  51D6               	movf	??_caltime_to_epoch& (0+255),w,b
 11964  01098C  0100               	movlb	0	; () banked
 11965  01098E  6FC6               	movwf	___lmul@multiplier& (0+255),b
 11966  010990  6BC7               	clrf	(___lmul@multiplier+1)& (0+255),b
 11967  010992  6BC8               	clrf	(___lmul@multiplier+2)& (0+255),b
 11968  010994  6BC9               	clrf	(___lmul@multiplier+3)& (0+255),b
 11969  010996  0E10               	movlw	16
 11970  010998  0100               	movlb	0	; () banked
 11971  01099A  6FCA               	movwf	___lmul@multiplicand& (0+255),b
 11972  01099C  0E0E               	movlw	14
 11973  01099E  6FCB               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11974  0109A0  0E00               	movlw	0
 11975  0109A2  6FCC               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11976  0109A4  0E00               	movlw	0
 11977  0109A6  6FCD               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11978  0109A8  ECF2  F094         	call	___lmul	;wreg free
 11979  0109AC  0100               	movlb	0	; () banked
 11980  0109AE  51C6               	movf	?___lmul& (0+255),w,b
 11981  0109B0  0100               	movlb	0	; () banked
 11982  0109B2  27DC               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11983  0109B4  0100               	movlb	0	; () banked
 11984  0109B6  51C7               	movf	(?___lmul+1)& (0+255),w,b
 11985  0109B8  0100               	movlb	0	; () banked
 11986  0109BA  23DD               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11987  0109BC  0100               	movlb	0	; () banked
 11988  0109BE  51C8               	movf	(?___lmul+2)& (0+255),w,b
 11989  0109C0  0100               	movlb	0	; () banked
 11990  0109C2  23DE               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11991  0109C4  0100               	movlb	0	; () banked
 11992  0109C6  51C9               	movf	(?___lmul+3)& (0+255),w,b
 11993  0109C8  0100               	movlb	0	; () banked
 11994  0109CA  23DF               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11995                           
 11996                           ;My_header\My_RTCC.h: 220: epoch += ((epoch_t)60) * ct->mm;
 11997  0109CC  0100               	movlb	0	; () banked
 11998  0109CE  EE20 F001          	lfsr	2,1
 11999  0109D2  51D2               	movf	caltime_to_epoch@ct& (0+255),w,b
 12000  0109D4  26D9               	addwf	fsr2l,f,c
 12001  0109D6  51D3               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 12002  0109D8  22DA               	addwfc	fsr2h,f,c
 12003  0109DA  50DF               	movf	indf2,w,c
 12004  0109DC  0100               	movlb	0	; () banked
 12005  0109DE  6FD6               	movwf	??_caltime_to_epoch& (0+255),b
 12006  0109E0  0100               	movlb	0	; () banked
 12007  0109E2  51D6               	movf	??_caltime_to_epoch& (0+255),w,b
 12008  0109E4  0100               	movlb	0	; () banked
 12009  0109E6  6FC6               	movwf	___lmul@multiplier& (0+255),b
 12010  0109E8  6BC7               	clrf	(___lmul@multiplier+1)& (0+255),b
 12011  0109EA  6BC8               	clrf	(___lmul@multiplier+2)& (0+255),b
 12012  0109EC  6BC9               	clrf	(___lmul@multiplier+3)& (0+255),b
 12013  0109EE  0E3C               	movlw	60
 12014  0109F0  0100               	movlb	0	; () banked
 12015  0109F2  6FCA               	movwf	___lmul@multiplicand& (0+255),b
 12016  0109F4  0E00               	movlw	0
 12017  0109F6  6FCB               	movwf	(___lmul@multiplicand+1)& (0+255),b
 12018  0109F8  0E00               	movlw	0
 12019  0109FA  6FCC               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12020  0109FC  0E00               	movlw	0
 12021  0109FE  6FCD               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12022  010A00  ECF2  F094         	call	___lmul	;wreg free
 12023  010A04  0100               	movlb	0	; () banked
 12024  010A06  51C6               	movf	?___lmul& (0+255),w,b
 12025  010A08  0100               	movlb	0	; () banked
 12026  010A0A  27DC               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 12027  010A0C  0100               	movlb	0	; () banked
 12028  010A0E  51C7               	movf	(?___lmul+1)& (0+255),w,b
 12029  010A10  0100               	movlb	0	; () banked
 12030  010A12  23DD               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 12031  010A14  0100               	movlb	0	; () banked
 12032  010A16  51C8               	movf	(?___lmul+2)& (0+255),w,b
 12033  010A18  0100               	movlb	0	; () banked
 12034  010A1A  23DE               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 12035  010A1C  0100               	movlb	0	; () banked
 12036  010A1E  51C9               	movf	(?___lmul+3)& (0+255),w,b
 12037  010A20  0100               	movlb	0	; () banked
 12038  010A22  23DF               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 12039                           
 12040                           ; BSR set to: 0
 12041                           ;My_header\My_RTCC.h: 221: epoch += ct->ss;
 12042  010A24  C0D2  FFD9         	movff	caltime_to_epoch@ct,fsr2l
 12043  010A28  C0D3  FFDA         	movff	caltime_to_epoch@ct+1,fsr2h
 12044  010A2C  50DF               	movf	indf2,w,c
 12045  010A2E  0100               	movlb	0	; () banked
 12046  010A30  6FD6               	movwf	??_caltime_to_epoch& (0+255),b
 12047  010A32  0100               	movlb	0	; () banked
 12048  010A34  51D6               	movf	??_caltime_to_epoch& (0+255),w,b
 12049  010A36  0100               	movlb	0	; () banked
 12050  010A38  27DC               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 12051  010A3A  0E00               	movlw	0
 12052  010A3C  23DD               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 12053  010A3E  23DE               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 12054  010A40  23DF               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 12055                           
 12056                           ; BSR set to: 0
 12057                           ;My_header\My_RTCC.h: 223: *ep = epoch;
 12058  010A42  C0D4  FFD9         	movff	caltime_to_epoch@ep,fsr2l
 12059  010A46  C0D5  FFDA         	movff	caltime_to_epoch@ep+1,fsr2h
 12060  010A4A  C0DC  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 12061  010A4E  C0DD  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 12062  010A52  C0DE  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 12063  010A56  C0DF  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 12064                           
 12065                           ; BSR set to: 0
 12066  010A5A  0012               	return		;funcret
 12067  010A5C                     __end_of_caltime_to_epoch:
 12068                           	opt stack 0
 12069                           tblptru	equ	0xFF8
 12070                           tblptrh	equ	0xFF7
 12071                           tblptrl	equ	0xFF6
 12072                           tablat	equ	0xFF5
 12073                           prodh	equ	0xFF4
 12074                           prodl	equ	0xFF3
 12075                           intcon	equ	0xFF2
 12076                           intcon2	equ	0xFF1
 12077                           postinc0	equ	0xFEE
 12078                           wreg	equ	0xFE8
 12079                           indf1	equ	0xFE7
 12080                           postdec1	equ	0xFE5
 12081                           fsr1h	equ	0xFE2
 12082                           fsr1l	equ	0xFE1
 12083                           indf2	equ	0xFDF
 12084                           postinc2	equ	0xFDE
 12085                           postdec2	equ	0xFDD
 12086                           plusw2	equ	0xFDB
 12087                           fsr2h	equ	0xFDA
 12088                           fsr2l	equ	0xFD9
 12089                           status	equ	0xFD8
 12090                           
 12091 ;; *************** function _month_length *****************
 12092 ;; Defined at:
 12093 ;;		line 84 in file "../My_header\My_RTCC.h"
 12094 ;; Parameters:    Size  Location     Type
 12095 ;;  year            1    wreg     unsigned char 
 12096 ;;  month           1   33[COMRAM] unsigned char 
 12097 ;; Auto vars:     Size  Location     Type
 12098 ;;  year            1    8[BANK0 ] unsigned char 
 12099 ;; Return value:  Size  Location     Type
 12100 ;;                  1    wreg      unsigned char 
 12101 ;; Registers used:
 12102 ;;		wreg, status,2, status,0, cstack
 12103 ;; Tracked objects:
 12104 ;;		On entry : 0/0
 12105 ;;		On exit  : 0/0
 12106 ;;		Unchanged: 0/0
 12107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12108 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12109 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12110 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12111 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12112 ;;Total ram usage:        6 bytes
 12113 ;; Hardware stack levels used:    1
 12114 ;; Hardware stack levels required when called:    5
 12115 ;; This function calls:
 12116 ;;		___awmod
 12117 ;; This function is called by:
 12118 ;;		_epoch_to_caltime
 12119 ;;		_caltime_to_epoch
 12120 ;;		_RTCC_time_set_inc
 12121 ;;		_RTCC_time_set_dec
 12122 ;; This function uses a non-reentrant model
 12123 ;;
 12124                           
 12125                           	psect	text60
 12126  011AFC                     __ptext60:
 12127                           	opt stack 0
 12128  011AFC                     _month_length:
 12129                           	opt stack 22
 12130                           
 12131                           ; BSR set to: 0
 12132                           ;incstack = 0
 12133                           ;month_length@year stored from wreg
 12134  011AFC  0100               	movlb	0	; () banked
 12135  011AFE  6FC1               	movwf	month_length@year& (0+255),b
 12136                           
 12137                           ; BSR set to: 0
 12138                           ;My_header\My_RTCC.h: 85: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year %
      +                           400);
 12139  011B00  0E02               	movlw	2
 12140  011B02  1822               	xorwf	month_length@month,w,c
 12141  011B04  A4D8               	btfss	status,2,c
 12142  011B06  D03E               	goto	l4945
 12143                           
 12144                           ; BSR set to: 0
 12145  011B08  C0C1  F0B9         	movff	month_length@year,___awmod@dividend
 12146  011B0C  0100               	movlb	0	; () banked
 12147  011B0E  6BBA               	clrf	(___awmod@dividend+1)& (0+255),b
 12148  011B10  0E00               	movlw	0
 12149  011B12  0100               	movlb	0	; () banked
 12150  011B14  6FBC               	movwf	(___awmod@divisor+1)& (0+255),b
 12151  011B16  0E64               	movlw	100
 12152  011B18  6FBB               	movwf	___awmod@divisor& (0+255),b
 12153  011B1A  ECCA  F091         	call	___awmod	;wreg free
 12154  011B1E  0100               	movlb	0	; () banked
 12155  011B20  51B9               	movf	?___awmod& (0+255),w,b
 12156  011B22  0100               	movlb	0	; () banked
 12157  011B24  11BA               	iorwf	(?___awmod+1)& (0+255),w,b
 12158  011B26  A4D8               	btfss	status,2,c
 12159  011B28  D002               	goto	u4890
 12160  011B2A  0E01               	movlw	1
 12161  011B2C  D001               	goto	u4900
 12162  011B2E                     u4890:
 12163  011B2E  0E00               	movlw	0
 12164  011B30                     u4900:
 12165  011B30  0800               	sublw	0
 12166  011B32  0100               	movlb	0	; () banked
 12167  011B34  6FBD               	movwf	??_month_length& (0+255),b
 12168  011B36  C0C1  F0B9         	movff	month_length@year,___awmod@dividend
 12169  011B3A  0100               	movlb	0	; () banked
 12170  011B3C  6BBA               	clrf	(___awmod@dividend+1)& (0+255),b
 12171  011B3E  0E01               	movlw	1
 12172  011B40  0100               	movlb	0	; () banked
 12173  011B42  6FBC               	movwf	(___awmod@divisor+1)& (0+255),b
 12174  011B44  0E90               	movlw	144
 12175  011B46  6FBB               	movwf	___awmod@divisor& (0+255),b
 12176  011B48  ECCA  F091         	call	___awmod	;wreg free
 12177  011B4C  0100               	movlb	0	; () banked
 12178  011B4E  51B9               	movf	?___awmod& (0+255),w,b
 12179  011B50  0100               	movlb	0	; () banked
 12180  011B52  11BA               	iorwf	(?___awmod+1)& (0+255),w,b
 12181  011B54  A4D8               	btfss	status,2,c
 12182  011B56  D004               	goto	u4910
 12183  011B58  0100               	movlb	0	; () banked
 12184  011B5A  6BBE               	clrf	(??_month_length+1)& (0+255),b
 12185  011B5C  2BBE               	incf	(??_month_length+1)& (0+255),f,b
 12186  011B5E  D002               	goto	u4928
 12187  011B60                     u4910:
 12188  011B60  0100               	movlb	0	; () banked
 12189  011B62  6BBE               	clrf	(??_month_length+1)& (0+255),b
 12190  011B64                     u4928:
 12191  011B64  C0C1  F0BF         	movff	month_length@year,??_month_length+2
 12192  011B68  0E03               	movlw	3
 12193  011B6A  0100               	movlb	0	; () banked
 12194  011B6C  17BF               	andwf	(??_month_length+2)& (0+255),f,b
 12195  011B6E  A4D8               	btfss	status,2,c
 12196  011B70  D002               	goto	u4930
 12197  011B72  0E01               	movlw	1
 12198  011B74  D001               	goto	u4940
 12199  011B76                     u4930:
 12200  011B76  0E00               	movlw	0
 12201  011B78                     u4940:
 12202  011B78  0100               	movlb	0	; () banked
 12203  011B7A  25BE               	addwf	(??_month_length+1)& (0+255),w,b
 12204  011B7C  0100               	movlb	0	; () banked
 12205  011B7E  25BD               	addwf	??_month_length& (0+255),w,b
 12206  011B80  0F1C               	addlw	28
 12207                           
 12208                           ; BSR set to: 0
 12209                           
 12210                           ; BSR set to: 0
 12211  011B82  0012               	return	
 12212  011B84                     l4945:
 12213                           
 12214                           ; BSR set to: 0
 12215                           ;My_header\My_RTCC.h: 86: else return 31 - (((-(month & 1)^month)&13) == 4);
 12216  011B84  5022               	movf	month_length@month,w,c
 12217  011B86  0B01               	andlw	1
 12218  011B88  0100               	movlb	0	; () banked
 12219  011B8A  6FBD               	movwf	??_month_length& (0+255),b
 12220  011B8C  6BBE               	clrf	(??_month_length+1)& (0+255),b
 12221  011B8E  0100               	movlb	0	; () banked
 12222  011B90  1FBD               	comf	??_month_length& (0+255),f,b
 12223  011B92  1FBE               	comf	(??_month_length+1)& (0+255),f,b
 12224  011B94  4BBD               	infsnz	??_month_length& (0+255),f,b
 12225  011B96  2BBE               	incf	(??_month_length+1)& (0+255),f,b
 12226  011B98  5022               	movf	month_length@month,w,c
 12227  011B9A  0100               	movlb	0	; () banked
 12228  011B9C  6FBF               	movwf	(??_month_length+2)& (0+255),b
 12229  011B9E  6BC0               	clrf	(??_month_length+3)& (0+255),b
 12230  011BA0  0100               	movlb	0	; () banked
 12231  011BA2  51BD               	movf	??_month_length& (0+255),w,b
 12232  011BA4  0100               	movlb	0	; () banked
 12233  011BA6  1BBF               	xorwf	(??_month_length+2)& (0+255),f,b
 12234  011BA8  0100               	movlb	0	; () banked
 12235  011BAA  51BE               	movf	(??_month_length+1)& (0+255),w,b
 12236  011BAC  0100               	movlb	0	; () banked
 12237  011BAE  1BC0               	xorwf	(??_month_length+3)& (0+255),f,b
 12238  011BB0  0E0D               	movlw	13
 12239  011BB2  0100               	movlb	0	; () banked
 12240  011BB4  17BF               	andwf	(??_month_length+2)& (0+255),f,b
 12241  011BB6  0E00               	movlw	0
 12242  011BB8  17C0               	andwf	(??_month_length+3)& (0+255),f,b
 12243  011BBA  0E04               	movlw	4
 12244  011BBC  0100               	movlb	0	; () banked
 12245  011BBE  19BF               	xorwf	(??_month_length+2)& (0+255),w,b
 12246  011BC0  0100               	movlb	0	; () banked
 12247  011BC2  11C0               	iorwf	(??_month_length+3)& (0+255),w,b
 12248  011BC4  A4D8               	btfss	status,2,c
 12249  011BC6  D002               	goto	u4950
 12250  011BC8  0E01               	movlw	1
 12251  011BCA  D001               	goto	u4960
 12252  011BCC                     u4950:
 12253  011BCC  0E00               	movlw	0
 12254  011BCE                     u4960:
 12255  011BCE  0800               	sublw	0
 12256  011BD0  0F1F               	addlw	31
 12257                           
 12258                           ; BSR set to: 0
 12259  011BD2  0012               	return	
 12260                           
 12261                           ; BSR set to: 0
 12262                           
 12263                           ; BSR set to: 0
 12264  011BD4  0012               	return		;funcret
 12265  011BD6                     __end_of_month_length:
 12266                           	opt stack 0
 12267                           tblptru	equ	0xFF8
 12268                           tblptrh	equ	0xFF7
 12269                           tblptrl	equ	0xFF6
 12270                           tablat	equ	0xFF5
 12271                           prodh	equ	0xFF4
 12272                           prodl	equ	0xFF3
 12273                           intcon	equ	0xFF2
 12274                           intcon2	equ	0xFF1
 12275                           postinc0	equ	0xFEE
 12276                           wreg	equ	0xFE8
 12277                           indf1	equ	0xFE7
 12278                           postdec1	equ	0xFE5
 12279                           fsr1h	equ	0xFE2
 12280                           fsr1l	equ	0xFE1
 12281                           indf2	equ	0xFDF
 12282                           postinc2	equ	0xFDE
 12283                           postdec2	equ	0xFDD
 12284                           plusw2	equ	0xFDB
 12285                           fsr2h	equ	0xFDA
 12286                           fsr2l	equ	0xFD9
 12287                           status	equ	0xFD8
 12288                           
 12289 ;; *************** function ___awmod *****************
 12290 ;; Defined at:
 12291 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 12292 ;; Parameters:    Size  Location     Type
 12293 ;;  dividend        2    0[BANK0 ] int 
 12294 ;;  divisor         2    2[BANK0 ] int 
 12295 ;; Auto vars:     Size  Location     Type
 12296 ;;  sign            1   32[COMRAM] unsigned char 
 12297 ;;  counter         1   31[COMRAM] unsigned char 
 12298 ;; Return value:  Size  Location     Type
 12299 ;;                  2    0[BANK0 ] int 
 12300 ;; Registers used:
 12301 ;;		wreg, status,2, status,0
 12302 ;; Tracked objects:
 12303 ;;		On entry : 0/0
 12304 ;;		On exit  : 0/0
 12305 ;;		Unchanged: 0/0
 12306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12307 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12308 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12310 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12311 ;;Total ram usage:        6 bytes
 12312 ;; Hardware stack levels used:    1
 12313 ;; Hardware stack levels required when called:    4
 12314 ;; This function calls:
 12315 ;;		Nothing
 12316 ;; This function is called by:
 12317 ;;		_month_length
 12318 ;; This function uses a non-reentrant model
 12319 ;;
 12320                           
 12321                           	psect	text61
 12322  012394                     __ptext61:
 12323                           	opt stack 0
 12324  012394                     ___awmod:
 12325                           	opt stack 22
 12326                           
 12327                           ; BSR set to: 0
 12328                           ;incstack = 0
 12329  012394  0E00               	movlw	0
 12330  012396  6E21               	movwf	___awmod@sign,c
 12331  012398  0100               	movlb	0	; () banked
 12332  01239A  AFBA               	btfss	(___awmod@dividend+1)& (0+255),7,b
 12333  01239C  D008               	goto	l4853
 12334                           
 12335                           ; BSR set to: 0
 12336  01239E  0100               	movlb	0	; () banked
 12337  0123A0  6DB9               	negf	___awmod@dividend& (0+255),b
 12338  0123A2  1FBA               	comf	(___awmod@dividend+1)& (0+255),f,b
 12339  0123A4  B0D8               	btfsc	status,0,c
 12340  0123A6  2BBA               	incf	(___awmod@dividend+1)& (0+255),f,b
 12341                           
 12342                           ; BSR set to: 0
 12343  0123A8  0E01               	movlw	1
 12344  0123AA  6E21               	movwf	___awmod@sign,c
 12345  0123AC  D000               	goto	l4853
 12346  0123AE                     l4853:
 12347                           
 12348                           ; BSR set to: 0
 12349  0123AE  0100               	movlb	0	; () banked
 12350  0123B0  AFBC               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12351  0123B2  D006               	goto	l4857
 12352                           
 12353                           ; BSR set to: 0
 12354  0123B4  0100               	movlb	0	; () banked
 12355  0123B6  6DBB               	negf	___awmod@divisor& (0+255),b
 12356  0123B8  1FBC               	comf	(___awmod@divisor+1)& (0+255),f,b
 12357  0123BA  B0D8               	btfsc	status,0,c
 12358  0123BC  2BBC               	incf	(___awmod@divisor+1)& (0+255),f,b
 12359  0123BE  D000               	goto	l4857
 12360  0123C0                     l4857:
 12361                           
 12362                           ; BSR set to: 0
 12363  0123C0  0100               	movlb	0	; () banked
 12364  0123C2  51BB               	movf	___awmod@divisor& (0+255),w,b
 12365  0123C4  0100               	movlb	0	; () banked
 12366  0123C6  11BC               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 12367  0123C8  B4D8               	btfsc	status,2,c
 12368  0123CA  D028               	goto	l4873
 12369                           
 12370                           ; BSR set to: 0
 12371  0123CC  0E01               	movlw	1
 12372  0123CE  6E20               	movwf	___awmod@counter,c
 12373  0123D0  D006               	goto	l4863
 12374  0123D2                     l4861:
 12375                           
 12376                           ; BSR set to: 0
 12377  0123D2  0100               	movlb	0	; () banked
 12378  0123D4  90D8               	bcf	status,0,c
 12379  0123D6  37BB               	rlcf	___awmod@divisor& (0+255),f,b
 12380  0123D8  37BC               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 12381  0123DA  2A20               	incf	___awmod@counter,f,c
 12382  0123DC  D000               	goto	l4863
 12383  0123DE                     l4863:
 12384                           
 12385                           ; BSR set to: 0
 12386  0123DE  0100               	movlb	0	; () banked
 12387  0123E0  BFBC               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 12388  0123E2  D002               	goto	l4865
 12389  0123E4  D7F6               	goto	l4861
 12390                           
 12391                           ; BSR set to: 0
 12392  0123E6  D000               	goto	l4865
 12393  0123E8                     l4865:
 12394                           
 12395                           ; BSR set to: 0
 12396  0123E8  0100               	movlb	0	; () banked
 12397  0123EA  51BB               	movf	___awmod@divisor& (0+255),w,b
 12398  0123EC  0100               	movlb	0	; () banked
 12399  0123EE  5DB9               	subwf	___awmod@dividend& (0+255),w,b
 12400  0123F0  0100               	movlb	0	; () banked
 12401  0123F2  51BC               	movf	(___awmod@divisor+1)& (0+255),w,b
 12402  0123F4  0100               	movlb	0	; () banked
 12403  0123F6  59BA               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 12404  0123F8  A0D8               	btfss	status,0,c
 12405  0123FA  D009               	goto	l4869
 12406                           
 12407                           ; BSR set to: 0
 12408  0123FC  0100               	movlb	0	; () banked
 12409  0123FE  51BB               	movf	___awmod@divisor& (0+255),w,b
 12410  012400  0100               	movlb	0	; () banked
 12411  012402  5FB9               	subwf	___awmod@dividend& (0+255),f,b
 12412  012404  0100               	movlb	0	; () banked
 12413  012406  51BC               	movf	(___awmod@divisor+1)& (0+255),w,b
 12414  012408  0100               	movlb	0	; () banked
 12415  01240A  5BBA               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 12416  01240C  D000               	goto	l4869
 12417  01240E                     l4869:
 12418                           
 12419                           ; BSR set to: 0
 12420  01240E  0100               	movlb	0	; () banked
 12421  012410  90D8               	bcf	status,0,c
 12422  012412  33BC               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 12423  012414  33BB               	rrcf	___awmod@divisor& (0+255),f,b
 12424                           
 12425                           ; BSR set to: 0
 12426  012416  2E20               	decfsz	___awmod@counter,f,c
 12427  012418  D7E7               	goto	l4865
 12428                           
 12429                           ; BSR set to: 0
 12430  01241A  D000               	goto	l4873
 12431  01241C                     l4873:
 12432                           
 12433                           ; BSR set to: 0
 12434  01241C  5021               	movf	___awmod@sign,w,c
 12435  01241E  B4D8               	btfsc	status,2,c
 12436  012420  D006               	goto	l4877
 12437                           
 12438                           ; BSR set to: 0
 12439  012422  0100               	movlb	0	; () banked
 12440  012424  6DB9               	negf	___awmod@dividend& (0+255),b
 12441  012426  1FBA               	comf	(___awmod@dividend+1)& (0+255),f,b
 12442  012428  B0D8               	btfsc	status,0,c
 12443  01242A  2BBA               	incf	(___awmod@dividend+1)& (0+255),f,b
 12444  01242C  D000               	goto	l4877
 12445  01242E                     l4877:
 12446                           
 12447                           ; BSR set to: 0
 12448  01242E  C0B9  F0B9         	movff	___awmod@dividend,?___awmod
 12449  012432  C0BA  F0BA         	movff	___awmod@dividend+1,?___awmod+1
 12450  012436  0012               	return	
 12451                           
 12452                           ; BSR set to: 0
 12453                           
 12454                           ; BSR set to: 0
 12455  012438  0012               	return		;funcret
 12456  01243A                     __end_of___awmod:
 12457                           	opt stack 0
 12458                           tblptru	equ	0xFF8
 12459                           tblptrh	equ	0xFF7
 12460                           tblptrl	equ	0xFF6
 12461                           tablat	equ	0xFF5
 12462                           prodh	equ	0xFF4
 12463                           prodl	equ	0xFF3
 12464                           intcon	equ	0xFF2
 12465                           intcon2	equ	0xFF1
 12466                           postinc0	equ	0xFEE
 12467                           wreg	equ	0xFE8
 12468                           indf1	equ	0xFE7
 12469                           postdec1	equ	0xFE5
 12470                           fsr1h	equ	0xFE2
 12471                           fsr1l	equ	0xFE1
 12472                           indf2	equ	0xFDF
 12473                           postinc2	equ	0xFDE
 12474                           postdec2	equ	0xFDD
 12475                           plusw2	equ	0xFDB
 12476                           fsr2h	equ	0xFDA
 12477                           fsr2l	equ	0xFD9
 12478                           status	equ	0xFD8
 12479                           
 12480 ;; *************** function ___lmul *****************
 12481 ;; Defined at:
 12482 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
 12483 ;; Parameters:    Size  Location     Type
 12484 ;;  multiplier      4   13[BANK0 ] unsigned long 
 12485 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 12486 ;; Auto vars:     Size  Location     Type
 12487 ;;  product         4   21[BANK0 ] unsigned long 
 12488 ;; Return value:  Size  Location     Type
 12489 ;;                  4   13[BANK0 ] unsigned long 
 12490 ;; Registers used:
 12491 ;;		wreg, status,2, status,0
 12492 ;; Tracked objects:
 12493 ;;		On entry : 0/0
 12494 ;;		On exit  : 0/0
 12495 ;;		Unchanged: 0/0
 12496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12497 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12498 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12500 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12501 ;;Total ram usage:       12 bytes
 12502 ;; Hardware stack levels used:    1
 12503 ;; Hardware stack levels required when called:    4
 12504 ;; This function calls:
 12505 ;;		Nothing
 12506 ;; This function is called by:
 12507 ;;		_get_quot_rem
 12508 ;;		_caltime_to_epoch
 12509 ;;		_RTCC_time_set_inc
 12510 ;;		_RTCC_time_set_dec
 12511 ;; This function uses a non-reentrant model
 12512 ;;
 12513                           
 12514                           	psect	text62
 12515  0129E4                     __ptext62:
 12516                           	opt stack 0
 12517  0129E4                     ___lmul:
 12518                           	opt stack 23
 12519                           
 12520                           ; BSR set to: 0
 12521                           ;incstack = 0
 12522  0129E4  0E00               	movlw	0
 12523  0129E6  0100               	movlb	0	; () banked
 12524  0129E8  6FCE               	movwf	___lmul@product& (0+255),b
 12525  0129EA  0E00               	movlw	0
 12526  0129EC  6FCF               	movwf	(___lmul@product+1)& (0+255),b
 12527  0129EE  0E00               	movlw	0
 12528  0129F0  6FD0               	movwf	(___lmul@product+2)& (0+255),b
 12529  0129F2  0E00               	movlw	0
 12530  0129F4  6FD1               	movwf	(___lmul@product+3)& (0+255),b
 12531  0129F6  D000               	goto	l4793
 12532  0129F8                     l4793:
 12533                           
 12534                           ; BSR set to: 0
 12535  0129F8  0100               	movlb	0	; () banked
 12536  0129FA  A1C6               	btfss	___lmul@multiplier& (0+255),0,b
 12537  0129FC  D011               	goto	l4797
 12538                           
 12539                           ; BSR set to: 0
 12540  0129FE  0100               	movlb	0	; () banked
 12541  012A00  51CA               	movf	___lmul@multiplicand& (0+255),w,b
 12542  012A02  0100               	movlb	0	; () banked
 12543  012A04  27CE               	addwf	___lmul@product& (0+255),f,b
 12544  012A06  0100               	movlb	0	; () banked
 12545  012A08  51CB               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 12546  012A0A  0100               	movlb	0	; () banked
 12547  012A0C  23CF               	addwfc	(___lmul@product+1)& (0+255),f,b
 12548  012A0E  0100               	movlb	0	; () banked
 12549  012A10  51CC               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 12550  012A12  0100               	movlb	0	; () banked
 12551  012A14  23D0               	addwfc	(___lmul@product+2)& (0+255),f,b
 12552  012A16  0100               	movlb	0	; () banked
 12553  012A18  51CD               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 12554  012A1A  0100               	movlb	0	; () banked
 12555  012A1C  23D1               	addwfc	(___lmul@product+3)& (0+255),f,b
 12556  012A1E  D000               	goto	l4797
 12557  012A20                     l4797:
 12558                           
 12559                           ; BSR set to: 0
 12560  012A20  0100               	movlb	0	; () banked
 12561  012A22  90D8               	bcf	status,0,c
 12562  012A24  37CA               	rlcf	___lmul@multiplicand& (0+255),f,b
 12563  012A26  37CB               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 12564  012A28  37CC               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 12565  012A2A  37CD               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 12566                           
 12567                           ; BSR set to: 0
 12568  012A2C  0100               	movlb	0	; () banked
 12569  012A2E  90D8               	bcf	status,0,c
 12570  012A30  33C9               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 12571  012A32  33C8               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 12572  012A34  33C7               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 12573  012A36  33C6               	rrcf	___lmul@multiplier& (0+255),f,b
 12574  012A38  0100               	movlb	0	; () banked
 12575  012A3A  51C6               	movf	___lmul@multiplier& (0+255),w,b
 12576  012A3C  0100               	movlb	0	; () banked
 12577  012A3E  11C7               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 12578  012A40  0100               	movlb	0	; () banked
 12579  012A42  11C8               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 12580  012A44  0100               	movlb	0	; () banked
 12581  012A46  11C9               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 12582  012A48  A4D8               	btfss	status,2,c
 12583  012A4A  D7D6               	goto	l4793
 12584                           
 12585                           ; BSR set to: 0
 12586  012A4C  C0CE  F0C6         	movff	___lmul@product,?___lmul
 12587  012A50  C0CF  F0C7         	movff	___lmul@product+1,?___lmul+1
 12588  012A54  C0D0  F0C8         	movff	___lmul@product+2,?___lmul+2
 12589  012A58  C0D1  F0C9         	movff	___lmul@product+3,?___lmul+3
 12590                           
 12591                           ; BSR set to: 0
 12592  012A5C  0012               	return		;funcret
 12593  012A5E                     __end_of___lmul:
 12594                           	opt stack 0
 12595                           tblptru	equ	0xFF8
 12596                           tblptrh	equ	0xFF7
 12597                           tblptrl	equ	0xFF6
 12598                           tablat	equ	0xFF5
 12599                           prodh	equ	0xFF4
 12600                           prodl	equ	0xFF3
 12601                           intcon	equ	0xFF2
 12602                           intcon2	equ	0xFF1
 12603                           postinc0	equ	0xFEE
 12604                           wreg	equ	0xFE8
 12605                           indf1	equ	0xFE7
 12606                           postdec1	equ	0xFE5
 12607                           fsr1h	equ	0xFE2
 12608                           fsr1l	equ	0xFE1
 12609                           indf2	equ	0xFDF
 12610                           postinc2	equ	0xFDE
 12611                           postdec2	equ	0xFDD
 12612                           plusw2	equ	0xFDB
 12613                           fsr2h	equ	0xFDA
 12614                           fsr2l	equ	0xFD9
 12615                           status	equ	0xFD8
 12616                           
 12617 ;; *************** function _RTCC_to_caltime *****************
 12618 ;; Defined at:
 12619 ;;		line 118 in file "../My_header\My_RTCC.h"
 12620 ;; Parameters:    Size  Location     Type
 12621 ;;  ct              2    0[BANK0 ] PTR struct .
 12622 ;;		 -> caltime_now(7), 
 12623 ;; Auto vars:     Size  Location     Type
 12624 ;;  dumy            1   33[COMRAM] unsigned char 
 12625 ;; Return value:  Size  Location     Type
 12626 ;;		None               void
 12627 ;; Registers used:
 12628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12629 ;; Tracked objects:
 12630 ;;		On entry : 0/0
 12631 ;;		On exit  : 0/0
 12632 ;;		Unchanged: 0/0
 12633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12634 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12635 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12637 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12638 ;;Total ram usage:        3 bytes
 12639 ;; Hardware stack levels used:    1
 12640 ;; Hardware stack levels required when called:    5
 12641 ;; This function calls:
 12642 ;;		_x_to_d
 12643 ;; This function is called by:
 12644 ;;		_RTCC_from_RTCC
 12645 ;; This function uses a non-reentrant model
 12646 ;;
 12647                           
 12648                           	psect	text63
 12649  012230                     __ptext63:
 12650                           	opt stack 0
 12651  012230                     _RTCC_to_caltime:
 12652                           	opt stack 23
 12653                           
 12654                           ;My_header\My_RTCC.h: 119: while (RTCCFGbits.RTCSYNC);
 12655                           
 12656                           ; BSR set to: 0
 12657                           ;incstack = 0
 12658  012230  D000               	goto	l398
 12659  012232                     l398:
 12660  012232  010F               	movlb	15	; () banked
 12661  012234  B93F               	btfsc	63,4,b	;volatile
 12662  012236  D7FD               	goto	l398
 12663                           
 12664                           ; BSR set to: 15
 12665                           ;My_header\My_RTCC.h: 121: RTCCFGbits.RTCPTR0 = 1;
 12666  012238  010F               	movlb	15	; () banked
 12667  01223A  813F               	bsf	63,0,b	;volatile
 12668                           
 12669                           ;My_header\My_RTCC.h: 122: RTCCFGbits.RTCPTR1 = 1;
 12670  01223C  010F               	movlb	15	; () banked
 12671  01223E  833F               	bsf	63,1,b	;volatile
 12672                           
 12673                           ; BSR set to: 15
 12674                           ;My_header\My_RTCC.h: 124: ct->YY = x_to_d(RTCVALL);
 12675  012240  0100               	movlb	0	; () banked
 12676  012242  EE20 F006          	lfsr	2,6
 12677  012246  51B9               	movf	RTCC_to_caltime@ct& (0+255),w,b
 12678  012248  26D9               	addwf	fsr2l,f,c
 12679  01224A  51BA               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 12680  01224C  22DA               	addwfc	fsr2h,f,c
 12681  01224E  010F               	movlb	15	; () banked
 12682  012250  513A               	movf	58,w,b	;volatile
 12683  012252  EC8C  F099         	call	_x_to_d
 12684  012256  6EDF               	movwf	indf2,c
 12685                           
 12686                           ;My_header\My_RTCC.h: 125: uint8_t dumy = RTCVALH;
 12687  012258  CF3B F022          	movff	3899,RTCC_to_caltime@dumy	;volatile
 12688                           
 12689                           ;My_header\My_RTCC.h: 126: ct->DD = x_to_d(RTCVALL);
 12690  01225C  0100               	movlb	0	; () banked
 12691  01225E  EE20 F004          	lfsr	2,4
 12692  012262  51B9               	movf	RTCC_to_caltime@ct& (0+255),w,b
 12693  012264  26D9               	addwf	fsr2l,f,c
 12694  012266  51BA               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 12695  012268  22DA               	addwfc	fsr2h,f,c
 12696  01226A  010F               	movlb	15	; () banked
 12697  01226C  513A               	movf	58,w,b	;volatile
 12698  01226E  EC8C  F099         	call	_x_to_d
 12699  012272  6EDF               	movwf	indf2,c
 12700                           
 12701                           ;My_header\My_RTCC.h: 127: ct->MM = x_to_d(RTCVALH);
 12702  012274  0100               	movlb	0	; () banked
 12703  012276  EE20 F005          	lfsr	2,5
 12704  01227A  51B9               	movf	RTCC_to_caltime@ct& (0+255),w,b
 12705  01227C  26D9               	addwf	fsr2l,f,c
 12706  01227E  51BA               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 12707  012280  22DA               	addwfc	fsr2h,f,c
 12708  012282  010F               	movlb	15	; () banked
 12709  012284  513B               	movf	59,w,b	;volatile
 12710  012286  EC8C  F099         	call	_x_to_d
 12711  01228A  6EDF               	movwf	indf2,c
 12712                           
 12713                           ;My_header\My_RTCC.h: 128: ct->hh = x_to_d(RTCVALL);
 12714  01228C  0100               	movlb	0	; () banked
 12715  01228E  EE20 F002          	lfsr	2,2
 12716  012292  51B9               	movf	RTCC_to_caltime@ct& (0+255),w,b
 12717  012294  26D9               	addwf	fsr2l,f,c
 12718  012296  51BA               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 12719  012298  22DA               	addwfc	fsr2h,f,c
 12720  01229A  010F               	movlb	15	; () banked
 12721  01229C  513A               	movf	58,w,b	;volatile
 12722  01229E  EC8C  F099         	call	_x_to_d
 12723  0122A2  6EDF               	movwf	indf2,c
 12724                           
 12725                           ;My_header\My_RTCC.h: 129: ct->EE = x_to_d(RTCVALH);
 12726  0122A4  0100               	movlb	0	; () banked
 12727  0122A6  EE20 F003          	lfsr	2,3
 12728  0122AA  51B9               	movf	RTCC_to_caltime@ct& (0+255),w,b
 12729  0122AC  26D9               	addwf	fsr2l,f,c
 12730  0122AE  51BA               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 12731  0122B0  22DA               	addwfc	fsr2h,f,c
 12732  0122B2  010F               	movlb	15	; () banked
 12733  0122B4  513B               	movf	59,w,b	;volatile
 12734  0122B6  EC8C  F099         	call	_x_to_d
 12735  0122BA  6EDF               	movwf	indf2,c
 12736                           
 12737                           ;My_header\My_RTCC.h: 130: ct->ss = x_to_d(RTCVALL);
 12738  0122BC  010F               	movlb	15	; () banked
 12739  0122BE  513A               	movf	58,w,b	;volatile
 12740  0122C0  EC8C  F099         	call	_x_to_d
 12741  0122C4  C0B9  FFD9         	movff	RTCC_to_caltime@ct,fsr2l
 12742  0122C8  C0BA  FFDA         	movff	RTCC_to_caltime@ct+1,fsr2h
 12743  0122CC  6EDF               	movwf	indf2,c
 12744                           
 12745                           ;My_header\My_RTCC.h: 131: ct->mm = x_to_d(RTCVALH);
 12746  0122CE  0100               	movlb	0	; () banked
 12747  0122D0  EE20 F001          	lfsr	2,1
 12748  0122D4  51B9               	movf	RTCC_to_caltime@ct& (0+255),w,b
 12749  0122D6  26D9               	addwf	fsr2l,f,c
 12750  0122D8  51BA               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 12751  0122DA  22DA               	addwfc	fsr2h,f,c
 12752  0122DC  010F               	movlb	15	; () banked
 12753  0122DE  513B               	movf	59,w,b	;volatile
 12754  0122E0  EC8C  F099         	call	_x_to_d
 12755  0122E4  6EDF               	movwf	indf2,c
 12756  0122E6  0012               	return		;funcret
 12757  0122E8                     __end_of_RTCC_to_caltime:
 12758                           	opt stack 0
 12759                           tblptru	equ	0xFF8
 12760                           tblptrh	equ	0xFF7
 12761                           tblptrl	equ	0xFF6
 12762                           tablat	equ	0xFF5
 12763                           prodh	equ	0xFF4
 12764                           prodl	equ	0xFF3
 12765                           intcon	equ	0xFF2
 12766                           intcon2	equ	0xFF1
 12767                           postinc0	equ	0xFEE
 12768                           wreg	equ	0xFE8
 12769                           indf1	equ	0xFE7
 12770                           postdec1	equ	0xFE5
 12771                           fsr1h	equ	0xFE2
 12772                           fsr1l	equ	0xFE1
 12773                           indf2	equ	0xFDF
 12774                           postinc2	equ	0xFDE
 12775                           postdec2	equ	0xFDD
 12776                           plusw2	equ	0xFDB
 12777                           fsr2h	equ	0xFDA
 12778                           fsr2l	equ	0xFD9
 12779                           status	equ	0xFD8
 12780                           
 12781 ;; *************** function _x_to_d *****************
 12782 ;; Defined at:
 12783 ;;		line 78 in file "../My_header\My_RTCC.h"
 12784 ;; Parameters:    Size  Location     Type
 12785 ;;  hex             1    wreg     unsigned char 
 12786 ;; Auto vars:     Size  Location     Type
 12787 ;;  hex             1   32[COMRAM] unsigned char 
 12788 ;; Return value:  Size  Location     Type
 12789 ;;                  1    wreg      unsigned char 
 12790 ;; Registers used:
 12791 ;;		wreg, status,2, status,0, prodl, prodh
 12792 ;; Tracked objects:
 12793 ;;		On entry : 0/0
 12794 ;;		On exit  : 0/0
 12795 ;;		Unchanged: 0/0
 12796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12798 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12799 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12800 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12801 ;;Total ram usage:        2 bytes
 12802 ;; Hardware stack levels used:    1
 12803 ;; Hardware stack levels required when called:    4
 12804 ;; This function calls:
 12805 ;;		Nothing
 12806 ;; This function is called by:
 12807 ;;		_RTCC_to_caltime
 12808 ;; This function uses a non-reentrant model
 12809 ;;
 12810                           
 12811                           	psect	text64
 12812  013318                     __ptext64:
 12813                           	opt stack 0
 12814  013318                     _x_to_d:
 12815                           	opt stack 23
 12816                           
 12817                           ;incstack = 0
 12818                           ;x_to_d@hex stored from wreg
 12819  013318  6E21               	movwf	x_to_d@hex,c
 12820                           
 12821                           ;My_header\My_RTCC.h: 79: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 12822  01331A  C021  F020         	movff	x_to_d@hex,??_x_to_d
 12823  01331E  0E0F               	movlw	15
 12824  013320  1620               	andwf	??_x_to_d,f,c
 12825  013322  3821               	swapf	x_to_d@hex,w,c
 12826  013324  0B0F               	andlw	15
 12827  013326  0B0F               	andlw	15
 12828  013328  0D0A               	mullw	10
 12829  01332A  50F3               	movf	prodl,w,c
 12830  01332C  2420               	addwf	??_x_to_d,w,c
 12831  01332E  0012               	return	
 12832  013330  0012               	return		;funcret
 12833  013332                     __end_of_x_to_d:
 12834                           	opt stack 0
 12835                           tblptru	equ	0xFF8
 12836                           tblptrh	equ	0xFF7
 12837                           tblptrl	equ	0xFF6
 12838                           tablat	equ	0xFF5
 12839                           prodh	equ	0xFF4
 12840                           prodl	equ	0xFF3
 12841                           intcon	equ	0xFF2
 12842                           intcon2	equ	0xFF1
 12843                           postinc0	equ	0xFEE
 12844                           wreg	equ	0xFE8
 12845                           indf1	equ	0xFE7
 12846                           postdec1	equ	0xFE5
 12847                           fsr1h	equ	0xFE2
 12848                           fsr1l	equ	0xFE1
 12849                           indf2	equ	0xFDF
 12850                           postinc2	equ	0xFDE
 12851                           postdec2	equ	0xFDD
 12852                           plusw2	equ	0xFDB
 12853                           fsr2h	equ	0xFDA
 12854                           fsr2l	equ	0xFD9
 12855                           status	equ	0xFD8
 12856                           
 12857 ;; *************** function _ISR *****************
 12858 ;; Defined at:
 12859 ;;		line 65 in file "PIC18F27J53-ChargeStation6-04.c"
 12860 ;; Parameters:    Size  Location     Type
 12861 ;;		None
 12862 ;; Auto vars:     Size  Location     Type
 12863 ;;  ascii           1   30[COMRAM] unsigned char 
 12864 ;; Return value:  Size  Location     Type
 12865 ;;		None               void
 12866 ;; Registers used:
 12867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12868 ;; Tracked objects:
 12869 ;;		On entry : 0/0
 12870 ;;		On exit  : 0/0
 12871 ;;		Unchanged: 0/0
 12872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12874 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12875 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12876 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12877 ;;Total ram usage:       15 bytes
 12878 ;; Hardware stack levels used:    1
 12879 ;; Hardware stack levels required when called:    3
 12880 ;; This function calls:
 12881 ;;		_UART_ISR
 12882 ;;		_charge_time_count
 12883 ;;		_delay_timer_interrupt
 12884 ;;		_integrating
 12885 ;;		_lchika
 12886 ;;		_tx_send
 12887 ;; This function is called by:
 12888 ;;		Interrupt level 2
 12889 ;; This function uses a non-reentrant model
 12890 ;;
 12891                           
 12892                           	psect	intcode
 12893  000008                     __pintcode:
 12894                           	opt stack 0
 12895  000008                     _ISR:
 12896                           	opt stack 20
 12897                           
 12898                           ;incstack = 0
 12899  000008  CFFA F011          	movff	pclath,??_ISR
 12900  00000C  CFFB F012          	movff	pclatu,??_ISR+1
 12901  000010  CFE9 F013          	movff	fsr0l,??_ISR+2
 12902  000014  CFEA F014          	movff	fsr0h,??_ISR+3
 12903  000018  CFE1 F015          	movff	fsr1l,??_ISR+4
 12904  00001C  CFE2 F016          	movff	fsr1h,??_ISR+5
 12905  000020  CFD9 F017          	movff	fsr2l,??_ISR+6
 12906  000024  CFDA F018          	movff	fsr2h,??_ISR+7
 12907  000028  CFF3 F019          	movff	prodl,??_ISR+8
 12908  00002C  CFF4 F01A          	movff	prodh,??_ISR+9
 12909  000030  CFF6 F01B          	movff	tblptrl,??_ISR+10
 12910  000034  CFF7 F01C          	movff	tblptrh,??_ISR+11
 12911  000038  CFF8 F01D          	movff	tblptru,??_ISR+12
 12912  00003C  CFF5 F01E          	movff	tablat,??_ISR+13
 12913                           
 12914                           ;PIC18F27J53-ChargeStation6-04.c: 66: UART_ISR();
 12915  000040  ECED  F096         	call	_UART_ISR	;wreg free
 12916                           
 12917                           ;PIC18F27J53-ChargeStation6-04.c: 67: if (PIE1bits.RC1IE && PIR1bits.RC1IF) {
 12918  000044  BA9D               	btfsc	3997,5,c	;volatile
 12919  000046  AA9E               	btfss	3998,5,c	;volatile
 12920  000048  D007               	goto	i2l4699
 12921                           
 12922                           ;PIC18F27J53-ChargeStation6-04.c: 68: PIR1bits.RC1IF = 0;
 12923  00004A  9A9E               	bcf	3998,5,c	;volatile
 12924                           
 12925                           ;PIC18F27J53-ChargeStation6-04.c: 69: uint8_t ascii = RCREG1;
 12926  00004C  CFAF F01F          	movff	4015,ISR@ascii	;volatile
 12927                           
 12928                           ;PIC18F27J53-ChargeStation6-04.c: 70: tx_send(ascii);
 12929  000050  501F               	movf	ISR@ascii,w,c
 12930  000052  ECB1  F099         	call	_tx_send
 12931  000056  D000               	goto	i2l4699
 12932  000058                     i2l4699:
 12933                           
 12934                           ;PIC18F27J53-ChargeStation6-04.c: 71: }
 12935                           ;PIC18F27J53-ChargeStation6-04.c: 72: if (INTCONbits.T0IE && INTCONbits.T0IF) {
 12936  000058  BAF2               	btfsc	intcon,5,c	;volatile
 12937  00005A  A4F2               	btfss	intcon,2,c	;volatile
 12938  00005C  D010               	goto	i2l4713
 12939                           
 12940                           ;PIC18F27J53-ChargeStation6-04.c: 73: INTCONbits.T0IF = 0;
 12941  00005E  94F2               	bcf	intcon,2,c	;volatile
 12942                           
 12943                           ;PIC18F27J53-ChargeStation6-04.c: 74: static uint16_t cnt_t0;
 12944                           ;PIC18F27J53-ChargeStation6-04.c: 75: if (cnt_t0) {
 12945  000060  502C               	movf	ISR@cnt_t0,w,c
 12946  000062  102D               	iorwf	ISR@cnt_t0+1,w,c
 12947  000064  B4D8               	btfsc	status,2,c
 12948  000066  D004               	goto	i2l4709
 12949                           
 12950                           ;PIC18F27J53-ChargeStation6-04.c: 76: cnt_t0--;
 12951  000068  062C               	decf	ISR@cnt_t0,f,c
 12952  00006A  A0D8               	btfss	status,0,c
 12953  00006C  062D               	decf	ISR@cnt_t0+1,f,c
 12954                           
 12955                           ;PIC18F27J53-ChargeStation6-04.c: 77: } else {
 12956  00006E  D007               	goto	i2l4713
 12957  000070                     i2l4709:
 12958                           
 12959                           ;PIC18F27J53-ChargeStation6-04.c: 78: cnt_t0 = 120;
 12960  000070  0E00               	movlw	0
 12961  000072  6E2D               	movwf	ISR@cnt_t0+1,c
 12962  000074  0E78               	movlw	120
 12963  000076  6E2C               	movwf	ISR@cnt_t0,c
 12964                           
 12965                           ;PIC18F27J53-ChargeStation6-04.c: 79: lchika();
 12966  000078  EC77  F08C         	call	_lchika	;wreg free
 12967  00007C  D000               	goto	i2l4713
 12968  00007E                     i2l4713:
 12969                           
 12970                           ;PIC18F27J53-ChargeStation6-04.c: 80: }
 12971                           ;PIC18F27J53-ChargeStation6-04.c: 81: }
 12972                           ;PIC18F27J53-ChargeStation6-04.c: 82: if (PIE1bits.TMR1IE && PIR1bits.TMR1IF) {
 12973  00007E  B09D               	btfsc	3997,0,c	;volatile
 12974  000080  A09E               	btfss	3998,0,c	;volatile
 12975  000082  D016               	goto	i2l4729
 12976                           
 12977                           ;PIC18F27J53-ChargeStation6-04.c: 83: PIR1bits.TMR1IF = 0;
 12978  000084  909E               	bcf	3998,0,c	;volatile
 12979                           
 12980                           ;PIC18F27J53-ChargeStation6-04.c: 84: TMR1H = 0xC0;
 12981  000086  0EC0               	movlw	192
 12982  000088  6ECF               	movwf	4047,c	;volatile
 12983                           
 12984                           ;PIC18F27J53-ChargeStation6-04.c: 85: cut_time_flag = 1;
 12985  00008A  0E01               	movlw	1
 12986  00008C  6E37               	movwf	_cut_time_flag,c
 12987                           
 12988                           ;PIC18F27J53-ChargeStation6-04.c: 86: display_flag = 1;
 12989  00008E  0E01               	movlw	1
 12990  000090  6E38               	movwf	_display_flag,c
 12991                           
 12992                           ;PIC18F27J53-ChargeStation6-04.c: 87: static uint8_t cnt_t1 = 2;
 12993                           ;PIC18F27J53-ChargeStation6-04.c: 88: if (cnt_t1) {
 12994  000092  5040               	movf	ISR@cnt_t1,w,c
 12995  000094  B4D8               	btfsc	status,2,c
 12996  000096  D003               	goto	i2l4723
 12997                           
 12998                           ;PIC18F27J53-ChargeStation6-04.c: 89: cnt_t1 = 0;
 12999  000098  0E00               	movlw	0
 13000  00009A  6E40               	movwf	ISR@cnt_t1,c
 13001                           
 13002                           ;PIC18F27J53-ChargeStation6-04.c: 90: } else {
 13003  00009C  D009               	goto	i2l4729
 13004  00009E                     i2l4723:
 13005                           
 13006                           ;PIC18F27J53-ChargeStation6-04.c: 91: cnt_t1 = 1;
 13007  00009E  0E01               	movlw	1
 13008  0000A0  6E40               	movwf	ISR@cnt_t1,c
 13009                           
 13010                           ;PIC18F27J53-ChargeStation6-04.c: 92: integrating();
 13011  0000A2  EC1D  F092         	call	_integrating	;wreg free
 13012                           
 13013                           ;PIC18F27J53-ChargeStation6-04.c: 93: charge_time_count();
 13014  0000A6  EC9D  F096         	call	_charge_time_count	;wreg free
 13015                           
 13016                           ;PIC18F27J53-ChargeStation6-04.c: 94: display_flag = 1;
 13017  0000AA  0E01               	movlw	1
 13018  0000AC  6E38               	movwf	_display_flag,c
 13019  0000AE  D000               	goto	i2l4729
 13020  0000B0                     i2l4729:
 13021                           
 13022                           ;PIC18F27J53-ChargeStation6-04.c: 95: }
 13023                           ;PIC18F27J53-ChargeStation6-04.c: 96: }
 13024                           ;PIC18F27J53-ChargeStation6-04.c: 97: if (PIE2bits.TMR3IE && PIR2bits.TMR3IF) {
 13025  0000B0  B2A0               	btfsc	4000,1,c	;volatile
 13026  0000B2  A2A1               	btfss	4001,1,c	;volatile
 13027  0000B4  D00A               	goto	i2l735
 13028                           
 13029                           ;PIC18F27J53-ChargeStation6-04.c: 98: PIR2bits.TMR3IF = 0;
 13030  0000B6  92A1               	bcf	4001,1,c	;volatile
 13031                           
 13032                           ;PIC18F27J53-ChargeStation6-04.c: 99: ctmu_flag = 1;
 13033  0000B8  0E01               	movlw	1
 13034  0000BA  6E36               	movwf	_ctmu_flag,c
 13035                           
 13036                           ;PIC18F27J53-ChargeStation6-04.c: 100: delay_timer_interrupt(&delay_display);
 13037  0000BC  0E3B               	movlw	low _delay_display
 13038  0000BE  6E01               	movwf	delay_timer_interrupt@d,c
 13039  0000C0  0E00               	movlw	high _delay_display
 13040  0000C2  6E02               	movwf	delay_timer_interrupt@d+1,c
 13041  0000C4  EC13  F097         	call	_delay_timer_interrupt	;wreg free
 13042  0000C8  D000               	goto	i2l735
 13043  0000CA                     i2l735:
 13044  0000CA  C01E  FFF5         	movff	??_ISR+13,tablat
 13045  0000CE  C01D  FFF8         	movff	??_ISR+12,tblptru
 13046  0000D2  C01C  FFF7         	movff	??_ISR+11,tblptrh
 13047  0000D6  C01B  FFF6         	movff	??_ISR+10,tblptrl
 13048  0000DA  C01A  FFF4         	movff	??_ISR+9,prodh
 13049  0000DE  C019  FFF3         	movff	??_ISR+8,prodl
 13050  0000E2  C018  FFDA         	movff	??_ISR+7,fsr2h
 13051  0000E6  C017  FFD9         	movff	??_ISR+6,fsr2l
 13052  0000EA  C016  FFE2         	movff	??_ISR+5,fsr1h
 13053  0000EE  C015  FFE1         	movff	??_ISR+4,fsr1l
 13054  0000F2  C014  FFEA         	movff	??_ISR+3,fsr0h
 13055  0000F6  C013  FFE9         	movff	??_ISR+2,fsr0l
 13056  0000FA  C012  FFFB         	movff	??_ISR+1,pclatu
 13057  0000FE  C011  FFFA         	movff	??_ISR,pclath
 13058  000102  0011               	retfie		f
 13059  000104                     __end_of_ISR:
 13060                           	opt stack 0
 13061                           pclatu	equ	0xFFB
 13062                           pclath	equ	0xFFA
 13063                           tblptru	equ	0xFF8
 13064                           tblptrh	equ	0xFF7
 13065                           tblptrl	equ	0xFF6
 13066                           tablat	equ	0xFF5
 13067                           prodh	equ	0xFF4
 13068                           prodl	equ	0xFF3
 13069                           intcon	equ	0xFF2
 13070                           intcon2	equ	0xFF1
 13071                           postinc0	equ	0xFEE
 13072                           fsr0h	equ	0xFEA
 13073                           fsr0l	equ	0xFE9
 13074                           wreg	equ	0xFE8
 13075                           indf1	equ	0xFE7
 13076                           postdec1	equ	0xFE5
 13077                           fsr1h	equ	0xFE2
 13078                           fsr1l	equ	0xFE1
 13079                           indf2	equ	0xFDF
 13080                           postinc2	equ	0xFDE
 13081                           postdec2	equ	0xFDD
 13082                           plusw2	equ	0xFDB
 13083                           fsr2h	equ	0xFDA
 13084                           fsr2l	equ	0xFD9
 13085                           status	equ	0xFD8
 13086                           
 13087 ;; *************** function _tx_send *****************
 13088 ;; Defined at:
 13089 ;;		line 236 in file "../My_header\My_header.h"
 13090 ;; Parameters:    Size  Location     Type
 13091 ;;  asciicode       1    wreg     const unsigned char 
 13092 ;; Auto vars:     Size  Location     Type
 13093 ;;  asciicode       1   12[COMRAM] const unsigned char 
 13094 ;; Return value:  Size  Location     Type
 13095 ;;		None               void
 13096 ;; Registers used:
 13097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13098 ;; Tracked objects:
 13099 ;;		On entry : 0/0
 13100 ;;		On exit  : 0/0
 13101 ;;		Unchanged: 0/0
 13102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13104 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13106 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13107 ;;Total ram usage:        1 bytes
 13108 ;; Hardware stack levels used:    1
 13109 ;; Hardware stack levels required when called:    2
 13110 ;; This function calls:
 13111 ;;		_ringbuf_push
 13112 ;; This function is called by:
 13113 ;;		_ISR
 13114 ;;		_tx_sendn
 13115 ;; This function uses a non-reentrant model
 13116 ;;
 13117                           
 13118                           	psect	text66
 13119  013362                     __ptext66:
 13120                           	opt stack 0
 13121  013362                     _tx_send:
 13122                           	opt stack 20
 13123                           
 13124                           ;incstack = 0
 13125                           ;tx_send@asciicode stored from wreg
 13126  013362  6E0D               	movwf	tx_send@asciicode,c
 13127                           
 13128                           ;My_header\My_header.h: 237: ringbuf_push(&tx_buf, asciicode);
 13129  013364  0ECE               	movlw	low _tx_buf
 13130  013366  6E05               	movwf	ringbuf_push@rb,c
 13131  013368  0E01               	movlw	high _tx_buf
 13132  01336A  6E06               	movwf	ringbuf_push@rb+1,c
 13133  01336C  C00D  F007         	movff	tx_send@asciicode,ringbuf_push@asciicode
 13134  013370  ECBB  F090         	call	_ringbuf_push	;wreg free
 13135                           
 13136                           ;My_header\My_header.h: 238: PIE1bits.TX1IE = 1;
 13137  013374  889D               	bsf	3997,4,c	;volatile
 13138  013376  0012               	return		;funcret
 13139  013378                     __end_of_tx_send:
 13140                           	opt stack 0
 13141                           pclatu	equ	0xFFB
 13142                           pclath	equ	0xFFA
 13143                           tblptru	equ	0xFF8
 13144                           tblptrh	equ	0xFF7
 13145                           tblptrl	equ	0xFF6
 13146                           tablat	equ	0xFF5
 13147                           prodh	equ	0xFF4
 13148                           prodl	equ	0xFF3
 13149                           intcon	equ	0xFF2
 13150                           intcon2	equ	0xFF1
 13151                           postinc0	equ	0xFEE
 13152                           fsr0h	equ	0xFEA
 13153                           fsr0l	equ	0xFE9
 13154                           wreg	equ	0xFE8
 13155                           indf1	equ	0xFE7
 13156                           postdec1	equ	0xFE5
 13157                           fsr1h	equ	0xFE2
 13158                           fsr1l	equ	0xFE1
 13159                           indf2	equ	0xFDF
 13160                           postinc2	equ	0xFDE
 13161                           postdec2	equ	0xFDD
 13162                           plusw2	equ	0xFDB
 13163                           fsr2h	equ	0xFDA
 13164                           fsr2l	equ	0xFD9
 13165                           status	equ	0xFD8
 13166                           
 13167 ;; *************** function _lchika *****************
 13168 ;; Defined at:
 13169 ;;		line 113 in file "PIC18F27J53-ChargeStation6-04.h"
 13170 ;; Parameters:    Size  Location     Type
 13171 ;;		None
 13172 ;; Auto vars:     Size  Location     Type
 13173 ;;  i               1   11[COMRAM] unsigned char 
 13174 ;; Return value:  Size  Location     Type
 13175 ;;		None               void
 13176 ;; Registers used:
 13177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13178 ;; Tracked objects:
 13179 ;;		On entry : 0/0
 13180 ;;		On exit  : 0/0
 13181 ;;		Unchanged: 0/0
 13182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13184 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13185 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13186 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13187 ;;Total ram usage:        4 bytes
 13188 ;; Hardware stack levels used:    1
 13189 ;; Hardware stack levels required when called:    1
 13190 ;; This function calls:
 13191 ;;		i2_LED
 13192 ;;		i2___awdiv
 13193 ;;		i2___lwdiv
 13194 ;; This function is called by:
 13195 ;;		_ISR
 13196 ;; This function uses a non-reentrant model
 13197 ;;
 13198                           
 13199                           	psect	text67
 13200  0118EE                     __ptext67:
 13201                           	opt stack 0
 13202  0118EE                     _lchika:
 13203                           	opt stack 21
 13204                           
 13205                           ;PIC18F27J53-ChargeStation6-04.h: 114: uint8_t i;
 13206                           ;PIC18F27J53-ChargeStation6-04.h: 115: static uint8_t cnt[3];
 13207                           ;PIC18F27J53-ChargeStation6-04.h: 116: static uint8_t cntf[3];
 13208                           ;PIC18F27J53-ChargeStation6-04.h: 117: for (i = 0; i < 3; i++) {
 13209                           
 13210                           ;incstack = 0
 13211  0118EE  0E00               	movlw	0
 13212  0118F0  6E0C               	movwf	lchika@i,c
 13213  0118F2  0E02               	movlw	2
 13214  0118F4  640C               	cpfsgt	lchika@i,c
 13215  0118F6  D002               	goto	i2l4399
 13216  0118F8  0012               	return	
 13217  0118FA  0012               	return	
 13218  0118FC                     i2l4399:
 13219                           
 13220                           ;PIC18F27J53-ChargeStation6-04.h: 118: cnt[i]++;
 13221  0118FC  500C               	movf	lchika@i,w,c
 13222  0118FE  0D01               	mullw	1
 13223  011900  0E90               	movlw	low lchika@cnt
 13224  011902  24F3               	addwf	prodl,w,c
 13225  011904  6ED9               	movwf	fsr2l,c
 13226  011906  0E00               	movlw	high lchika@cnt
 13227  011908  20F4               	addwfc	prodh,w,c
 13228  01190A  6EDA               	movwf	fsr2h,c
 13229  01190C  2ADF               	incf	indf2,f,c
 13230                           
 13231                           ;PIC18F27J53-ChargeStation6-04.h: 119: if (cnt[i] % 2 == 1) {
 13232  01190E  500C               	movf	lchika@i,w,c
 13233  011910  0D01               	mullw	1
 13234  011912  0E90               	movlw	low lchika@cnt
 13235  011914  24F3               	addwf	prodl,w,c
 13236  011916  6ED9               	movwf	fsr2l,c
 13237  011918  0E00               	movlw	high lchika@cnt
 13238  01191A  20F4               	addwfc	prodh,w,c
 13239  01191C  6EDA               	movwf	fsr2h,c
 13240  01191E  0100               	movlb	0	; () banked
 13241  011920  A0DF               	btfss	indf2,0,c
 13242  011922  D006               	goto	i2l4403
 13243                           
 13244                           ; BSR set to: 0
 13245                           ;PIC18F27J53-ChargeStation6-04.h: 120: LED(i, 0);
 13246  011924  0E00               	movlw	0
 13247  011926  6E01               	movwf	i2LED@value,c
 13248  011928  500C               	movf	lchika@i,w,c
 13249  01192A  ECC2  F097         	call	i2_LED
 13250                           
 13251                           ;PIC18F27J53-ChargeStation6-04.h: 121: } else {
 13252  01192E  D05F               	goto	i2l4417
 13253  011930                     i2l4403:
 13254                           
 13255                           ;PIC18F27J53-ChargeStation6-04.h: 122: if (cnt[i] / 2 <= I[i] / 100) {
 13256  011930  500C               	movf	lchika@i,w,c
 13257  011932  0D02               	mullw	2
 13258  011934  0E23               	movlw	low _I
 13259  011936  24F3               	addwf	prodl,w,c
 13260  011938  6ED9               	movwf	fsr2l,c
 13261  01193A  0E00               	movlw	high _I
 13262  01193C  20F4               	addwfc	prodh,w,c
 13263  01193E  6EDA               	movwf	fsr2h,c
 13264  011940  CFDE F001          	movff	postinc2,i2___lwdiv@dividend
 13265  011944  CFDD F002          	movff	postdec2,i2___lwdiv@dividend+1
 13266  011948  0E00               	movlw	0
 13267  01194A  6E04               	movwf	i2___lwdiv@divisor+1,c
 13268  01194C  0E64               	movlw	100
 13269  01194E  6E03               	movwf	i2___lwdiv@divisor,c
 13270  011950  ECC4  F095         	call	i2___lwdiv	;wreg free
 13271  011954  C001  F009         	movff	?i2___lwdiv,??_lchika
 13272  011958  C002  F00A         	movff	?i2___lwdiv+1,??_lchika+1
 13273  01195C  500C               	movf	lchika@i,w,c
 13274  01195E  0D01               	mullw	1
 13275  011960  0E90               	movlw	low lchika@cnt
 13276  011962  24F3               	addwf	prodl,w,c
 13277  011964  6ED9               	movwf	fsr2l,c
 13278  011966  0E00               	movlw	high lchika@cnt
 13279  011968  20F4               	addwfc	prodh,w,c
 13280  01196A  6EDA               	movwf	fsr2h,c
 13281  01196C  50DF               	movf	indf2,w,c
 13282  01196E  6E0B               	movwf	(??_lchika+2)& (0+255),c
 13283  011970  500B               	movf	??_lchika+2,w,c
 13284  011972  6E01               	movwf	i2___awdiv@dividend,c
 13285  011974  6A02               	clrf	i2___awdiv@dividend+1,c
 13286  011976  0E00               	movlw	0
 13287  011978  6E04               	movwf	i2___awdiv@divisor+1,c
 13288  01197A  0E02               	movlw	2
 13289  01197C  6E03               	movwf	i2___awdiv@divisor,c
 13290  01197E  EC0B  F093         	call	i2___awdiv	;wreg free
 13291  011982  5001               	movf	?i2___awdiv,w,c
 13292  011984  5C09               	subwf	??_lchika,w,c
 13293  011986  5002               	movf	?i2___awdiv+1,w,c
 13294  011988  580A               	subwfb	??_lchika+1,w,c
 13295  01198A  A0D8               	btfss	status,0,c
 13296  01198C  D00C               	goto	i2l4409
 13297                           
 13298                           ;PIC18F27J53-ChargeStation6-04.h: 123: LED(i, 1);
 13299  01198E  0E01               	movlw	1
 13300  011990  6E01               	movwf	i2LED@value,c
 13301  011992  500C               	movf	lchika@i,w,c
 13302  011994  ECC2  F097         	call	i2_LED
 13303                           
 13304                           ;PIC18F27J53-ChargeStation6-04.h: 124: cntf[i] = 0;
 13305  011998  500C               	movf	lchika@i,w,c
 13306  01199A  0D01               	mullw	1
 13307  01199C  0E93               	movlw	low lchika@cntf
 13308  01199E  24F3               	addwf	prodl,w,c
 13309  0119A0  6ED9               	movwf	fsr2l,c
 13310  0119A2  0E00               	movlw	high lchika@cntf
 13311  0119A4  D01F               	goto	L5
 13312  0119A6                     i2l4409:
 13313                           
 13314                           ;PIC18F27J53-ChargeStation6-04.h: 126: cntf[i]++;
 13315  0119A6  500C               	movf	lchika@i,w,c
 13316  0119A8  0D01               	mullw	1
 13317  0119AA  0E93               	movlw	low lchika@cntf
 13318  0119AC  24F3               	addwf	prodl,w,c
 13319  0119AE  6ED9               	movwf	fsr2l,c
 13320  0119B0  0E00               	movlw	high lchika@cntf
 13321  0119B2  20F4               	addwfc	prodh,w,c
 13322  0119B4  6EDA               	movwf	fsr2h,c
 13323  0119B6  2ADF               	incf	indf2,f,c
 13324                           
 13325                           ;PIC18F27J53-ChargeStation6-04.h: 127: LED(i, 0);
 13326  0119B8  0E00               	movlw	0
 13327  0119BA  6E01               	movwf	i2LED@value,c
 13328  0119BC  500C               	movf	lchika@i,w,c
 13329  0119BE  ECC2  F097         	call	i2_LED
 13330                           
 13331                           ;PIC18F27J53-ChargeStation6-04.h: 128: if (cntf[i] >= 2) {
 13332  0119C2  500C               	movf	lchika@i,w,c
 13333  0119C4  0D01               	mullw	1
 13334  0119C6  0E93               	movlw	low lchika@cntf
 13335  0119C8  24F3               	addwf	prodl,w,c
 13336  0119CA  6ED9               	movwf	fsr2l,c
 13337  0119CC  0E00               	movlw	high lchika@cntf
 13338  0119CE  20F4               	addwfc	prodh,w,c
 13339  0119D0  6EDA               	movwf	fsr2h,c
 13340  0119D2  0E01               	movlw	1
 13341  0119D4  64DF               	cpfsgt	indf2,c
 13342  0119D6  D00B               	goto	i2l4417
 13343                           
 13344                           ;PIC18F27J53-ChargeStation6-04.h: 129: cnt[i] = 0;
 13345  0119D8  500C               	movf	lchika@i,w,c
 13346  0119DA  0D01               	mullw	1
 13347  0119DC  0E90               	movlw	low lchika@cnt
 13348  0119DE  24F3               	addwf	prodl,w,c
 13349  0119E0  6ED9               	movwf	fsr2l,c
 13350  0119E2  0E00               	movlw	high lchika@cnt
 13351  0119E4                     L5:
 13352  0119E4  20F4               	addwfc	prodh,w,c
 13353  0119E6  6EDA               	movwf	fsr2h,c
 13354  0119E8  0E00               	movlw	0
 13355  0119EA  6EDF               	movwf	indf2,c
 13356  0119EC  D000               	goto	i2l4417
 13357  0119EE                     i2l4417:
 13358  0119EE  2A0C               	incf	lchika@i,f,c
 13359  0119F0  0E02               	movlw	2
 13360  0119F2  640C               	cpfsgt	lchika@i,c
 13361  0119F4  D783               	goto	i2l4399
 13362  0119F6  0012               	return	
 13363  0119F8  0012               	return		;funcret
 13364  0119FA                     __end_of_lchika:
 13365                           	opt stack 0
 13366                           pclatu	equ	0xFFB
 13367                           pclath	equ	0xFFA
 13368                           tblptru	equ	0xFF8
 13369                           tblptrh	equ	0xFF7
 13370                           tblptrl	equ	0xFF6
 13371                           tablat	equ	0xFF5
 13372                           prodh	equ	0xFF4
 13373                           prodl	equ	0xFF3
 13374                           intcon	equ	0xFF2
 13375                           intcon2	equ	0xFF1
 13376                           postinc0	equ	0xFEE
 13377                           fsr0h	equ	0xFEA
 13378                           fsr0l	equ	0xFE9
 13379                           wreg	equ	0xFE8
 13380                           indf1	equ	0xFE7
 13381                           postdec1	equ	0xFE5
 13382                           fsr1h	equ	0xFE2
 13383                           fsr1l	equ	0xFE1
 13384                           indf2	equ	0xFDF
 13385                           postinc2	equ	0xFDE
 13386                           postdec2	equ	0xFDD
 13387                           plusw2	equ	0xFDB
 13388                           fsr2h	equ	0xFDA
 13389                           fsr2l	equ	0xFD9
 13390                           status	equ	0xFD8
 13391                           
 13392 ;; *************** function i2___lwdiv *****************
 13393 ;; Defined at:
 13394 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
 13395 ;; Parameters:    Size  Location     Type
 13396 ;;  dividend        2    0[COMRAM] unsigned int 
 13397 ;;  divisor         2    2[COMRAM] unsigned int 
 13398 ;; Auto vars:     Size  Location     Type
 13399 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 13400 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 13401 ;; Return value:  Size  Location     Type
 13402 ;;                  2    0[COMRAM] unsigned int 
 13403 ;; Registers used:
 13404 ;;		wreg, status,2, status,0
 13405 ;; Tracked objects:
 13406 ;;		On entry : 0/0
 13407 ;;		On exit  : 0/0
 13408 ;;		Unchanged: 0/0
 13409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13410 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13411 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13413 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13414 ;;Total ram usage:        7 bytes
 13415 ;; Hardware stack levels used:    1
 13416 ;; This function calls:
 13417 ;;		Nothing
 13418 ;; This function is called by:
 13419 ;;		_lchika
 13420 ;; This function uses a non-reentrant model
 13421 ;;
 13422                           
 13423                           	psect	text68
 13424  012B88                     __ptext68:
 13425                           	opt stack 0
 13426  012B88                     i2___lwdiv:
 13427                           	opt stack 21
 13428                           
 13429                           ;incstack = 0
 13430  012B88  0E00               	movlw	0
 13431  012B8A  6E06               	movwf	i2___lwdiv@quotient+1,c
 13432  012B8C  0E00               	movlw	0
 13433  012B8E  6E05               	movwf	i2___lwdiv@quotient,c
 13434  012B90  5003               	movf	i2___lwdiv@divisor,w,c
 13435  012B92  1004               	iorwf	i2___lwdiv@divisor+1,w,c
 13436  012B94  B4D8               	btfsc	status,2,c
 13437  012B96  D021               	goto	i2l1266
 13438  012B98  0E01               	movlw	1
 13439  012B9A  6E07               	movwf	i2___lwdiv@counter,c
 13440  012B9C  D005               	goto	i2l4345
 13441  012B9E                     i2l4343:
 13442  012B9E  90D8               	bcf	status,0,c
 13443  012BA0  3603               	rlcf	i2___lwdiv@divisor,f,c
 13444  012BA2  3604               	rlcf	i2___lwdiv@divisor+1,f,c
 13445  012BA4  2A07               	incf	i2___lwdiv@counter,f,c
 13446  012BA6  D000               	goto	i2l4345
 13447  012BA8                     i2l4345:
 13448  012BA8  BE04               	btfsc	i2___lwdiv@divisor+1,7,c
 13449  012BAA  D002               	goto	i2l4347
 13450  012BAC  D7F8               	goto	i2l4343
 13451  012BAE  D000               	goto	i2l4347
 13452  012BB0                     i2l4347:
 13453  012BB0  90D8               	bcf	status,0,c
 13454  012BB2  3605               	rlcf	i2___lwdiv@quotient,f,c
 13455  012BB4  3606               	rlcf	i2___lwdiv@quotient+1,f,c
 13456  012BB6  5003               	movf	i2___lwdiv@divisor,w,c
 13457  012BB8  5C01               	subwf	i2___lwdiv@dividend,w,c
 13458  012BBA  5004               	movf	i2___lwdiv@divisor+1,w,c
 13459  012BBC  5802               	subwfb	i2___lwdiv@dividend+1,w,c
 13460  012BBE  A0D8               	btfss	status,0,c
 13461  012BC0  D006               	goto	i2l4355
 13462  012BC2  5003               	movf	i2___lwdiv@divisor,w,c
 13463  012BC4  5E01               	subwf	i2___lwdiv@dividend,f,c
 13464  012BC6  5004               	movf	i2___lwdiv@divisor+1,w,c
 13465  012BC8  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
 13466  012BCA  8005               	bsf	i2___lwdiv@quotient,0,c
 13467  012BCC  D000               	goto	i2l4355
 13468  012BCE                     i2l4355:
 13469  012BCE  90D8               	bcf	status,0,c
 13470  012BD0  3204               	rrcf	i2___lwdiv@divisor+1,f,c
 13471  012BD2  3203               	rrcf	i2___lwdiv@divisor,f,c
 13472  012BD4  2E07               	decfsz	i2___lwdiv@counter,f,c
 13473  012BD6  D7EC               	goto	i2l4347
 13474  012BD8  D000               	goto	i2l1266
 13475  012BDA                     i2l1266:
 13476  012BDA  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 13477  012BDE  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 13478  012BE2  0012               	return		;funcret
 13479  012BE4                     __end_ofi2___lwdiv:
 13480                           	opt stack 0
 13481                           pclatu	equ	0xFFB
 13482                           pclath	equ	0xFFA
 13483                           tblptru	equ	0xFF8
 13484                           tblptrh	equ	0xFF7
 13485                           tblptrl	equ	0xFF6
 13486                           tablat	equ	0xFF5
 13487                           prodh	equ	0xFF4
 13488                           prodl	equ	0xFF3
 13489                           intcon	equ	0xFF2
 13490                           intcon2	equ	0xFF1
 13491                           postinc0	equ	0xFEE
 13492                           fsr0h	equ	0xFEA
 13493                           fsr0l	equ	0xFE9
 13494                           wreg	equ	0xFE8
 13495                           indf1	equ	0xFE7
 13496                           postdec1	equ	0xFE5
 13497                           fsr1h	equ	0xFE2
 13498                           fsr1l	equ	0xFE1
 13499                           indf2	equ	0xFDF
 13500                           postinc2	equ	0xFDE
 13501                           postdec2	equ	0xFDD
 13502                           plusw2	equ	0xFDB
 13503                           fsr2h	equ	0xFDA
 13504                           fsr2l	equ	0xFD9
 13505                           status	equ	0xFD8
 13506                           
 13507 ;; *************** function i2___awdiv *****************
 13508 ;; Defined at:
 13509 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 13510 ;; Parameters:    Size  Location     Type
 13511 ;;  dividend        2    0[COMRAM] int 
 13512 ;;  divisor         2    2[COMRAM] int 
 13513 ;; Auto vars:     Size  Location     Type
 13514 ;;  __awdiv         2    6[COMRAM] int 
 13515 ;;  __awdiv         1    5[COMRAM] unsigned char 
 13516 ;;  __awdiv         1    4[COMRAM] unsigned char 
 13517 ;; Return value:  Size  Location     Type
 13518 ;;                  2    0[COMRAM] int 
 13519 ;; Registers used:
 13520 ;;		wreg, status,2, status,0
 13521 ;; Tracked objects:
 13522 ;;		On entry : 0/0
 13523 ;;		On exit  : 0/0
 13524 ;;		Unchanged: 0/0
 13525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13526 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13527 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13529 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13530 ;;Total ram usage:        8 bytes
 13531 ;; Hardware stack levels used:    1
 13532 ;; This function calls:
 13533 ;;		Nothing
 13534 ;; This function is called by:
 13535 ;;		_lchika
 13536 ;; This function uses a non-reentrant model
 13537 ;;
 13538                           
 13539                           	psect	text69
 13540  012616                     __ptext69:
 13541                           	opt stack 0
 13542  012616                     i2___awdiv:
 13543                           	opt stack 21
 13544                           
 13545                           ;incstack = 0
 13546  012616  0E00               	movlw	0
 13547  012618  6E06               	movwf	i2___awdiv@sign,c
 13548  01261A  AE04               	btfss	i2___awdiv@divisor+1,7,c
 13549  01261C  D007               	goto	i2l4279
 13550  01261E  6C03               	negf	i2___awdiv@divisor,c
 13551  012620  1E04               	comf	i2___awdiv@divisor+1,f,c
 13552  012622  B0D8               	btfsc	status,0,c
 13553  012624  2A04               	incf	i2___awdiv@divisor+1,f,c
 13554  012626  0E01               	movlw	1
 13555  012628  6E06               	movwf	i2___awdiv@sign,c
 13556  01262A  D000               	goto	i2l4279
 13557  01262C                     i2l4279:
 13558  01262C  AE02               	btfss	i2___awdiv@dividend+1,7,c
 13559  01262E  D007               	goto	i2l4285
 13560  012630  6C01               	negf	i2___awdiv@dividend,c
 13561  012632  1E02               	comf	i2___awdiv@dividend+1,f,c
 13562  012634  B0D8               	btfsc	status,0,c
 13563  012636  2A02               	incf	i2___awdiv@dividend+1,f,c
 13564  012638  0E01               	movlw	1
 13565  01263A  1A06               	xorwf	i2___awdiv@sign,f,c
 13566  01263C  D000               	goto	i2l4285
 13567  01263E                     i2l4285:
 13568  01263E  0E00               	movlw	0
 13569  012640  6E08               	movwf	i2___awdiv@quotient+1,c
 13570  012642  0E00               	movlw	0
 13571  012644  6E07               	movwf	i2___awdiv@quotient,c
 13572  012646  5003               	movf	i2___awdiv@divisor,w,c
 13573  012648  1004               	iorwf	i2___awdiv@divisor+1,w,c
 13574  01264A  B4D8               	btfsc	status,2,c
 13575  01264C  D021               	goto	i2l4307
 13576  01264E  0E01               	movlw	1
 13577  012650  6E05               	movwf	i2___awdiv@counter,c
 13578  012652  D005               	goto	i2l4293
 13579  012654                     i2l4291:
 13580  012654  90D8               	bcf	status,0,c
 13581  012656  3603               	rlcf	i2___awdiv@divisor,f,c
 13582  012658  3604               	rlcf	i2___awdiv@divisor+1,f,c
 13583  01265A  2A05               	incf	i2___awdiv@counter,f,c
 13584  01265C  D000               	goto	i2l4293
 13585  01265E                     i2l4293:
 13586  01265E  BE04               	btfsc	i2___awdiv@divisor+1,7,c
 13587  012660  D002               	goto	i2l4295
 13588  012662  D7F8               	goto	i2l4291
 13589  012664  D000               	goto	i2l4295
 13590  012666                     i2l4295:
 13591  012666  90D8               	bcf	status,0,c
 13592  012668  3607               	rlcf	i2___awdiv@quotient,f,c
 13593  01266A  3608               	rlcf	i2___awdiv@quotient+1,f,c
 13594  01266C  5003               	movf	i2___awdiv@divisor,w,c
 13595  01266E  5C01               	subwf	i2___awdiv@dividend,w,c
 13596  012670  5004               	movf	i2___awdiv@divisor+1,w,c
 13597  012672  5802               	subwfb	i2___awdiv@dividend+1,w,c
 13598  012674  A0D8               	btfss	status,0,c
 13599  012676  D006               	goto	i2l4303
 13600  012678  5003               	movf	i2___awdiv@divisor,w,c
 13601  01267A  5E01               	subwf	i2___awdiv@dividend,f,c
 13602  01267C  5004               	movf	i2___awdiv@divisor+1,w,c
 13603  01267E  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 13604  012680  8007               	bsf	i2___awdiv@quotient,0,c
 13605  012682  D000               	goto	i2l4303
 13606  012684                     i2l4303:
 13607  012684  90D8               	bcf	status,0,c
 13608  012686  3204               	rrcf	i2___awdiv@divisor+1,f,c
 13609  012688  3203               	rrcf	i2___awdiv@divisor,f,c
 13610  01268A  2E05               	decfsz	i2___awdiv@counter,f,c
 13611  01268C  D7EC               	goto	i2l4295
 13612  01268E  D000               	goto	i2l4307
 13613  012690                     i2l4307:
 13614  012690  5006               	movf	i2___awdiv@sign,w,c
 13615  012692  B4D8               	btfsc	status,2,c
 13616  012694  D005               	goto	i2l4311
 13617  012696  6C07               	negf	i2___awdiv@quotient,c
 13618  012698  1E08               	comf	i2___awdiv@quotient+1,f,c
 13619  01269A  B0D8               	btfsc	status,0,c
 13620  01269C  2A08               	incf	i2___awdiv@quotient+1,f,c
 13621  01269E  D000               	goto	i2l4311
 13622  0126A0                     i2l4311:
 13623  0126A0  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 13624  0126A4  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 13625  0126A8  0012               	return	
 13626  0126AA  0012               	return		;funcret
 13627  0126AC                     __end_ofi2___awdiv:
 13628                           	opt stack 0
 13629                           pclatu	equ	0xFFB
 13630                           pclath	equ	0xFFA
 13631                           tblptru	equ	0xFF8
 13632                           tblptrh	equ	0xFF7
 13633                           tblptrl	equ	0xFF6
 13634                           tablat	equ	0xFF5
 13635                           prodh	equ	0xFF4
 13636                           prodl	equ	0xFF3
 13637                           intcon	equ	0xFF2
 13638                           intcon2	equ	0xFF1
 13639                           postinc0	equ	0xFEE
 13640                           fsr0h	equ	0xFEA
 13641                           fsr0l	equ	0xFE9
 13642                           wreg	equ	0xFE8
 13643                           indf1	equ	0xFE7
 13644                           postdec1	equ	0xFE5
 13645                           fsr1h	equ	0xFE2
 13646                           fsr1l	equ	0xFE1
 13647                           indf2	equ	0xFDF
 13648                           postinc2	equ	0xFDE
 13649                           postdec2	equ	0xFDD
 13650                           plusw2	equ	0xFDB
 13651                           fsr2h	equ	0xFDA
 13652                           fsr2l	equ	0xFD9
 13653                           status	equ	0xFD8
 13654                           
 13655 ;; *************** function i2_LED *****************
 13656 ;; Defined at:
 13657 ;;		line 72 in file "PIC18F27J53-ChargeStation6-04.h"
 13658 ;; Parameters:    Size  Location     Type
 13659 ;;  b               1    wreg     unsigned char 
 13660 ;;  value           1    0[COMRAM] unsigned char 
 13661 ;; Auto vars:     Size  Location     Type
 13662 ;;  b               1    1[COMRAM] unsigned char 
 13663 ;; Return value:  Size  Location     Type
 13664 ;;		None               void
 13665 ;; Registers used:
 13666 ;;		wreg, status,2, status,0
 13667 ;; Tracked objects:
 13668 ;;		On entry : 0/0
 13669 ;;		On exit  : 0/0
 13670 ;;		Unchanged: 0/0
 13671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13672 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13676 ;;Total ram usage:        2 bytes
 13677 ;; Hardware stack levels used:    1
 13678 ;; This function calls:
 13679 ;;		Nothing
 13680 ;; This function is called by:
 13681 ;;		_lchika
 13682 ;; This function uses a non-reentrant model
 13683 ;;
 13684                           
 13685                           	psect	text70
 13686  012F84                     __ptext70:
 13687                           	opt stack 0
 13688  012F84                     i2_LED:
 13689                           	opt stack 21
 13690                           
 13691                           ;incstack = 0
 13692                           ;i2LED@b stored from wreg
 13693  012F84  6E02               	movwf	i2LED@b,c
 13694                           
 13695                           ;PIC18F27J53-ChargeStation6-04.h: 73: switch (b) {
 13696  012F86  D012               	goto	i2l4269
 13697  012F88                     i2l584:
 13698                           
 13699                           ;PIC18F27J53-ChargeStation6-04.h: 75: LATB7 = value;
 13700  012F88  B001               	btfsc	i2LED@value,0,c
 13701  012F8A  D002               	bra	i2u397_45
 13702  012F8C  9E8A               	bcf	3978,7,c	;volatile
 13703  012F8E  D001               	bra	i2u397_46
 13704  012F90                     i2u397_45:
 13705  012F90  8E8A               	bsf	3978,7,c	;volatile
 13706  012F92                     i2u397_46:
 13707                           
 13708                           ;PIC18F27J53-ChargeStation6-04.h: 76: break;
 13709  012F92  0012               	return	
 13710  012F94                     i2l586:
 13711                           
 13712                           ;PIC18F27J53-ChargeStation6-04.h: 78: LATB6 = value;
 13713  012F94  B001               	btfsc	i2LED@value,0,c
 13714  012F96  D002               	bra	i2u398_45
 13715  012F98  9C8A               	bcf	3978,6,c	;volatile
 13716  012F9A  D001               	bra	i2u398_46
 13717  012F9C                     i2u398_45:
 13718  012F9C  8C8A               	bsf	3978,6,c	;volatile
 13719  012F9E                     i2u398_46:
 13720                           
 13721                           ;PIC18F27J53-ChargeStation6-04.h: 79: break;
 13722  012F9E  0012               	return	
 13723  012FA0                     i2l587:
 13724                           
 13725                           ;PIC18F27J53-ChargeStation6-04.h: 81: LATC2 = value;
 13726  012FA0  B001               	btfsc	i2LED@value,0,c
 13727  012FA2  D002               	bra	i2u399_45
 13728  012FA4  948B               	bcf	3979,2,c	;volatile
 13729  012FA6  D001               	bra	i2u399_46
 13730  012FA8                     i2u399_45:
 13731  012FA8  848B               	bsf	3979,2,c	;volatile
 13732  012FAA                     i2u399_46:
 13733                           
 13734                           ;PIC18F27J53-ChargeStation6-04.h: 83: }
 13735                           
 13736                           ;PIC18F27J53-ChargeStation6-04.h: 82: break;
 13737  012FAA  0012               	return	
 13738  012FAC                     i2l4269:
 13739  012FAC  5002               	movf	i2LED@b,w,c
 13740                           
 13741                           ; Switch size 1, requested type "space"
 13742                           ; Number of cases is 3, Range of values is 0 to 2
 13743                           ; switch strategies available:
 13744                           ; Name         Instructions Cycles
 13745                           ; simple_byte           10     6 (average)
 13746                           ;	Chosen strategy is simple_byte
 13747  012FAE  0A00               	xorlw	0	; case 0
 13748  012FB0  B4D8               	btfsc	status,2,c
 13749  012FB2  D7EA               	goto	i2l584
 13750  012FB4  0A01               	xorlw	1	; case 1
 13751  012FB6  B4D8               	btfsc	status,2,c
 13752  012FB8  D7ED               	goto	i2l586
 13753  012FBA  0A03               	xorlw	3	; case 2
 13754  012FBC  A4D8               	btfss	status,2,c
 13755  012FBE  0012               	return	
 13756  012FC0  D7EF               	goto	i2l587
 13757  012FC2  0012               	return		;funcret
 13758  012FC4                     __end_ofi2_LED:
 13759                           	opt stack 0
 13760                           pclatu	equ	0xFFB
 13761                           pclath	equ	0xFFA
 13762                           tblptru	equ	0xFF8
 13763                           tblptrh	equ	0xFF7
 13764                           tblptrl	equ	0xFF6
 13765                           tablat	equ	0xFF5
 13766                           prodh	equ	0xFF4
 13767                           prodl	equ	0xFF3
 13768                           intcon	equ	0xFF2
 13769                           intcon2	equ	0xFF1
 13770                           postinc0	equ	0xFEE
 13771                           fsr0h	equ	0xFEA
 13772                           fsr0l	equ	0xFE9
 13773                           wreg	equ	0xFE8
 13774                           indf1	equ	0xFE7
 13775                           postdec1	equ	0xFE5
 13776                           fsr1h	equ	0xFE2
 13777                           fsr1l	equ	0xFE1
 13778                           indf2	equ	0xFDF
 13779                           postinc2	equ	0xFDE
 13780                           postdec2	equ	0xFDD
 13781                           plusw2	equ	0xFDB
 13782                           fsr2h	equ	0xFDA
 13783                           fsr2l	equ	0xFD9
 13784                           status	equ	0xFD8
 13785                           
 13786 ;; *************** function _integrating *****************
 13787 ;; Defined at:
 13788 ;;		line 152 in file "PIC18F27J53-ChargeStation6-04.h"
 13789 ;; Parameters:    Size  Location     Type
 13790 ;;		None
 13791 ;; Auto vars:     Size  Location     Type
 13792 ;;  port            1   15[COMRAM] unsigned char 
 13793 ;; Return value:  Size  Location     Type
 13794 ;;		None               void
 13795 ;; Registers used:
 13796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13797 ;; Tracked objects:
 13798 ;;		On entry : 0/0
 13799 ;;		On exit  : 0/0
 13800 ;;		Unchanged: 0/0
 13801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13803 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13804 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13805 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13806 ;;Total ram usage:        3 bytes
 13807 ;; Hardware stack levels used:    1
 13808 ;; Hardware stack levels required when called:    1
 13809 ;; This function calls:
 13810 ;;		i2___lldiv
 13811 ;; This function is called by:
 13812 ;;		_ISR
 13813 ;; This function uses a non-reentrant model
 13814 ;;
 13815                           
 13816                           	psect	text71
 13817  01243A                     __ptext71:
 13818                           	opt stack 0
 13819  01243A                     _integrating:
 13820                           	opt stack 21
 13821                           
 13822                           ;PIC18F27J53-ChargeStation6-04.h: 153: for (uint8_t port = 0; port < 3; port++) {
 13823                           
 13824                           ;incstack = 0
 13825  01243A  0E00               	movlw	0
 13826  01243C  6E10               	movwf	integrating@port,c
 13827  01243E  0E02               	movlw	2
 13828  012440  6410               	cpfsgt	integrating@port,c
 13829  012442  D002               	goto	i2l4427
 13830  012444  0012               	return	
 13831  012446  0012               	return	
 13832  012448                     i2l4427:
 13833                           
 13834                           ;PIC18F27J53-ChargeStation6-04.h: 154: s[port] += I[port];
 13835  012448  5010               	movf	integrating@port,w,c
 13836  01244A  0D02               	mullw	2
 13837  01244C  0E23               	movlw	low _I
 13838  01244E  24F3               	addwf	prodl,w,c
 13839  012450  6ED9               	movwf	fsr2l,c
 13840  012452  0E00               	movlw	high _I
 13841  012454  20F4               	addwfc	prodh,w,c
 13842  012456  6EDA               	movwf	fsr2h,c
 13843  012458  CFDE F00E          	movff	postinc2,??_integrating
 13844  01245C  CFDD F00F          	movff	postdec2,??_integrating+1
 13845  012460  5010               	movf	integrating@port,w,c
 13846  012462  0D04               	mullw	4
 13847  012464  0E78               	movlw	low _s
 13848  012466  24F3               	addwf	prodl,w,c
 13849  012468  6ED9               	movwf	fsr2l,c
 13850  01246A  0E00               	movlw	high _s
 13851  01246C  20F4               	addwfc	prodh,w,c
 13852  01246E  6EDA               	movwf	fsr2h,c
 13853  012470  500E               	movf	??_integrating,w,c
 13854  012472  26DE               	addwf	postinc2,f,c
 13855  012474  500F               	movf	??_integrating+1,w,c
 13856  012476  22DE               	addwfc	postinc2,f,c
 13857  012478  0E00               	movlw	0
 13858  01247A  22DE               	addwfc	postinc2,f,c
 13859  01247C  22DE               	addwfc	postinc2,f,c
 13860                           
 13861                           ;PIC18F27J53-ChargeStation6-04.h: 155: S[port] = s[port] / 3600;
 13862  01247E  5010               	movf	integrating@port,w,c
 13863  012480  0D04               	mullw	4
 13864  012482  0E78               	movlw	low _s
 13865  012484  24F3               	addwf	prodl,w,c
 13866  012486  6ED9               	movwf	fsr2l,c
 13867  012488  0E00               	movlw	high _s
 13868  01248A  20F4               	addwfc	prodh,w,c
 13869  01248C  6EDA               	movwf	fsr2h,c
 13870  01248E  CFDE F001          	movff	postinc2,i2___lldiv@dividend
 13871  012492  CFDE F002          	movff	postinc2,i2___lldiv@dividend+1
 13872  012496  CFDE F003          	movff	postinc2,i2___lldiv@dividend+2
 13873  01249A  CFDE F004          	movff	postinc2,i2___lldiv@dividend+3
 13874  01249E  0E10               	movlw	16
 13875  0124A0  6E05               	movwf	i2___lldiv@divisor,c
 13876  0124A2  0E0E               	movlw	14
 13877  0124A4  6E06               	movwf	i2___lldiv@divisor+1,c
 13878  0124A6  0E00               	movlw	0
 13879  0124A8  6E07               	movwf	i2___lldiv@divisor+2,c
 13880  0124AA  0E00               	movlw	0
 13881  0124AC  6E08               	movwf	i2___lldiv@divisor+3,c
 13882  0124AE  EC2D  F094         	call	i2___lldiv	;wreg free
 13883  0124B2  5010               	movf	integrating@port,w,c
 13884  0124B4  0D04               	mullw	4
 13885  0124B6  0E60               	movlw	low _S
 13886  0124B8  24F3               	addwf	prodl,w,c
 13887  0124BA  6ED9               	movwf	fsr2l,c
 13888  0124BC  0E00               	movlw	high _S
 13889  0124BE  20F4               	addwfc	prodh,w,c
 13890  0124C0  6EDA               	movwf	fsr2h,c
 13891  0124C2  C001  FFDE         	movff	?i2___lldiv,postinc2
 13892  0124C6  C002  FFDE         	movff	?i2___lldiv+1,postinc2
 13893  0124CA  C003  FFDE         	movff	?i2___lldiv+2,postinc2
 13894  0124CE  C004  FFDE         	movff	?i2___lldiv+3,postinc2
 13895  0124D2  2A10               	incf	integrating@port,f,c
 13896  0124D4  0E02               	movlw	2
 13897  0124D6  6410               	cpfsgt	integrating@port,c
 13898  0124D8  D7B7               	goto	i2l4427
 13899  0124DA  0012               	return	
 13900  0124DC  0012               	return		;funcret
 13901  0124DE                     __end_of_integrating:
 13902                           	opt stack 0
 13903                           pclatu	equ	0xFFB
 13904                           pclath	equ	0xFFA
 13905                           tblptru	equ	0xFF8
 13906                           tblptrh	equ	0xFF7
 13907                           tblptrl	equ	0xFF6
 13908                           tablat	equ	0xFF5
 13909                           prodh	equ	0xFF4
 13910                           prodl	equ	0xFF3
 13911                           intcon	equ	0xFF2
 13912                           intcon2	equ	0xFF1
 13913                           postinc0	equ	0xFEE
 13914                           fsr0h	equ	0xFEA
 13915                           fsr0l	equ	0xFE9
 13916                           wreg	equ	0xFE8
 13917                           indf1	equ	0xFE7
 13918                           postdec1	equ	0xFE5
 13919                           fsr1h	equ	0xFE2
 13920                           fsr1l	equ	0xFE1
 13921                           indf2	equ	0xFDF
 13922                           postinc2	equ	0xFDE
 13923                           postdec2	equ	0xFDD
 13924                           plusw2	equ	0xFDB
 13925                           fsr2h	equ	0xFDA
 13926                           fsr2l	equ	0xFD9
 13927                           status	equ	0xFD8
 13928                           
 13929 ;; *************** function i2___lldiv *****************
 13930 ;; Defined at:
 13931 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 13932 ;; Parameters:    Size  Location     Type
 13933 ;;  dividend        4    0[COMRAM] unsigned long 
 13934 ;;  divisor         4    4[COMRAM] unsigned long 
 13935 ;; Auto vars:     Size  Location     Type
 13936 ;;  __lldiv         4    8[COMRAM] unsigned long 
 13937 ;;  __lldiv         1   12[COMRAM] unsigned char 
 13938 ;; Return value:  Size  Location     Type
 13939 ;;                  4    0[COMRAM] unsigned long 
 13940 ;; Registers used:
 13941 ;;		wreg, status,2, status,0
 13942 ;; Tracked objects:
 13943 ;;		On entry : 0/0
 13944 ;;		On exit  : 0/0
 13945 ;;		Unchanged: 0/0
 13946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13947 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13948 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13950 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13951 ;;Total ram usage:       13 bytes
 13952 ;; Hardware stack levels used:    1
 13953 ;; This function calls:
 13954 ;;		Nothing
 13955 ;; This function is called by:
 13956 ;;		_integrating
 13957 ;; This function uses a non-reentrant model
 13958 ;;
 13959                           
 13960                           	psect	text72
 13961  01285A                     __ptext72:
 13962                           	opt stack 0
 13963  01285A                     i2___lldiv:
 13964                           	opt stack 21
 13965                           
 13966                           ;incstack = 0
 13967  01285A  0E00               	movlw	0
 13968  01285C  6E09               	movwf	i2___lldiv@quotient,c
 13969  01285E  0E00               	movlw	0
 13970  012860  6E0A               	movwf	i2___lldiv@quotient+1,c
 13971  012862  0E00               	movlw	0
 13972  012864  6E0B               	movwf	i2___lldiv@quotient+2,c
 13973  012866  0E00               	movlw	0
 13974  012868  6E0C               	movwf	i2___lldiv@quotient+3,c
 13975  01286A  5005               	movf	i2___lldiv@divisor,w,c
 13976  01286C  1006               	iorwf	i2___lldiv@divisor+1,w,c
 13977  01286E  1007               	iorwf	i2___lldiv@divisor+2,w,c
 13978  012870  1008               	iorwf	i2___lldiv@divisor+3,w,c
 13979  012872  B4D8               	btfsc	status,2,c
 13980  012874  D02F               	goto	i2l1203
 13981  012876  0E01               	movlw	1
 13982  012878  6E0D               	movwf	i2___lldiv@counter,c
 13983  01287A  D007               	goto	i2l4323
 13984  01287C                     i2l4321:
 13985  01287C  90D8               	bcf	status,0,c
 13986  01287E  3605               	rlcf	i2___lldiv@divisor,f,c
 13987  012880  3606               	rlcf	i2___lldiv@divisor+1,f,c
 13988  012882  3607               	rlcf	i2___lldiv@divisor+2,f,c
 13989  012884  3608               	rlcf	i2___lldiv@divisor+3,f,c
 13990  012886  2A0D               	incf	i2___lldiv@counter,f,c
 13991  012888  D000               	goto	i2l4323
 13992  01288A                     i2l4323:
 13993  01288A  BE08               	btfsc	i2___lldiv@divisor+3,7,c
 13994  01288C  D002               	goto	i2l4325
 13995  01288E  D7F6               	goto	i2l4321
 13996  012890  D000               	goto	i2l4325
 13997  012892                     i2l4325:
 13998  012892  90D8               	bcf	status,0,c
 13999  012894  3609               	rlcf	i2___lldiv@quotient,f,c
 14000  012896  360A               	rlcf	i2___lldiv@quotient+1,f,c
 14001  012898  360B               	rlcf	i2___lldiv@quotient+2,f,c
 14002  01289A  360C               	rlcf	i2___lldiv@quotient+3,f,c
 14003  01289C  5005               	movf	i2___lldiv@divisor,w,c
 14004  01289E  5C01               	subwf	i2___lldiv@dividend,w,c
 14005  0128A0  5006               	movf	i2___lldiv@divisor+1,w,c
 14006  0128A2  5802               	subwfb	i2___lldiv@dividend+1,w,c
 14007  0128A4  5007               	movf	i2___lldiv@divisor+2,w,c
 14008  0128A6  5803               	subwfb	i2___lldiv@dividend+2,w,c
 14009  0128A8  5008               	movf	i2___lldiv@divisor+3,w,c
 14010  0128AA  5804               	subwfb	i2___lldiv@dividend+3,w,c
 14011  0128AC  A0D8               	btfss	status,0,c
 14012  0128AE  D00A               	goto	i2l4333
 14013  0128B0  5005               	movf	i2___lldiv@divisor,w,c
 14014  0128B2  5E01               	subwf	i2___lldiv@dividend,f,c
 14015  0128B4  5006               	movf	i2___lldiv@divisor+1,w,c
 14016  0128B6  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 14017  0128B8  5007               	movf	i2___lldiv@divisor+2,w,c
 14018  0128BA  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 14019  0128BC  5008               	movf	i2___lldiv@divisor+3,w,c
 14020  0128BE  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 14021  0128C0  8009               	bsf	i2___lldiv@quotient,0,c
 14022  0128C2  D000               	goto	i2l4333
 14023  0128C4                     i2l4333:
 14024  0128C4  90D8               	bcf	status,0,c
 14025  0128C6  3208               	rrcf	i2___lldiv@divisor+3,f,c
 14026  0128C8  3207               	rrcf	i2___lldiv@divisor+2,f,c
 14027  0128CA  3206               	rrcf	i2___lldiv@divisor+1,f,c
 14028  0128CC  3205               	rrcf	i2___lldiv@divisor,f,c
 14029  0128CE  2E0D               	decfsz	i2___lldiv@counter,f,c
 14030  0128D0  D7E0               	goto	i2l4325
 14031  0128D2  D000               	goto	i2l1203
 14032  0128D4                     i2l1203:
 14033  0128D4  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 14034  0128D8  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 14035  0128DC  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 14036  0128E0  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 14037  0128E4  0012               	return		;funcret
 14038  0128E6                     __end_ofi2___lldiv:
 14039                           	opt stack 0
 14040                           pclatu	equ	0xFFB
 14041                           pclath	equ	0xFFA
 14042                           tblptru	equ	0xFF8
 14043                           tblptrh	equ	0xFF7
 14044                           tblptrl	equ	0xFF6
 14045                           tablat	equ	0xFF5
 14046                           prodh	equ	0xFF4
 14047                           prodl	equ	0xFF3
 14048                           intcon	equ	0xFF2
 14049                           intcon2	equ	0xFF1
 14050                           postinc0	equ	0xFEE
 14051                           fsr0h	equ	0xFEA
 14052                           fsr0l	equ	0xFE9
 14053                           wreg	equ	0xFE8
 14054                           indf1	equ	0xFE7
 14055                           postdec1	equ	0xFE5
 14056                           fsr1h	equ	0xFE2
 14057                           fsr1l	equ	0xFE1
 14058                           indf2	equ	0xFDF
 14059                           postinc2	equ	0xFDE
 14060                           postdec2	equ	0xFDD
 14061                           plusw2	equ	0xFDB
 14062                           fsr2h	equ	0xFDA
 14063                           fsr2l	equ	0xFD9
 14064                           status	equ	0xFD8
 14065                           
 14066 ;; *************** function _delay_timer_interrupt *****************
 14067 ;; Defined at:
 14068 ;;		line 361 in file "../My_header\My_header.h"
 14069 ;; Parameters:    Size  Location     Type
 14070 ;;  d               2    0[COMRAM] PTR struct Delay
 14071 ;;		 -> delay_display(3), 
 14072 ;; Auto vars:     Size  Location     Type
 14073 ;;		None
 14074 ;; Return value:  Size  Location     Type
 14075 ;;		None               void
 14076 ;; Registers used:
 14077 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14078 ;; Tracked objects:
 14079 ;;		On entry : 0/0
 14080 ;;		On exit  : 0/0
 14081 ;;		Unchanged: 0/0
 14082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14083 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14085 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14086 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14087 ;;Total ram usage:        4 bytes
 14088 ;; Hardware stack levels used:    1
 14089 ;; This function calls:
 14090 ;;		Nothing
 14091 ;; This function is called by:
 14092 ;;		_ISR
 14093 ;; This function uses a non-reentrant model
 14094 ;;
 14095                           
 14096                           	psect	text73
 14097  012E26                     __ptext73:
 14098                           	opt stack 0
 14099  012E26                     _delay_timer_interrupt:
 14100                           	opt stack 22
 14101                           
 14102                           ;My_header\My_header.h: 362: if (d->cnt)d->cnt--;
 14103                           
 14104                           ;incstack = 0
 14105  012E26  EE20 F001          	lfsr	2,1
 14106  012E2A  5001               	movf	delay_timer_interrupt@d,w,c
 14107  012E2C  26D9               	addwf	fsr2l,f,c
 14108  012E2E  5002               	movf	delay_timer_interrupt@d+1,w,c
 14109  012E30  22DA               	addwfc	fsr2h,f,c
 14110  012E32  50DE               	movf	postinc2,w,c
 14111  012E34  10DE               	iorwf	postinc2,w,c
 14112  012E36  B4D8               	btfsc	status,2,c
 14113  012E38  D009               	goto	i2l239
 14114  012E3A  EE20 F001          	lfsr	2,1
 14115  012E3E  5001               	movf	delay_timer_interrupt@d,w,c
 14116  012E40  26D9               	addwf	fsr2l,f,c
 14117  012E42  5002               	movf	delay_timer_interrupt@d+1,w,c
 14118  012E44  22DA               	addwfc	fsr2h,f,c
 14119  012E46  06DE               	decf	postinc2,f,c
 14120  012E48  0E00               	movlw	0
 14121  012E4A  5ADD               	subwfb	postdec2,f,c
 14122  012E4C                     i2l239:
 14123                           
 14124                           ;My_header\My_header.h: 363: if (d->cnt == 1)d->flag = 1;
 14125  012E4C  EE20 F001          	lfsr	2,1
 14126  012E50  5001               	movf	delay_timer_interrupt@d,w,c
 14127  012E52  26D9               	addwf	fsr2l,f,c
 14128  012E54  5002               	movf	delay_timer_interrupt@d+1,w,c
 14129  012E56  22DA               	addwfc	fsr2h,f,c
 14130  012E58  04DE               	decf	postinc2,w,c
 14131  012E5A  10DE               	iorwf	postinc2,w,c
 14132  012E5C  A4D8               	btfss	status,2,c
 14133  012E5E  0012               	return	
 14134  012E60  C001  FFD9         	movff	delay_timer_interrupt@d,fsr2l
 14135  012E64  C002  FFDA         	movff	delay_timer_interrupt@d+1,fsr2h
 14136  012E68  0E01               	movlw	1
 14137  012E6A  6EDF               	movwf	indf2,c
 14138  012E6C  0012               	return	
 14139  012E6E  0012               	return		;funcret
 14140  012E70                     __end_of_delay_timer_interrupt:
 14141                           	opt stack 0
 14142                           pclatu	equ	0xFFB
 14143                           pclath	equ	0xFFA
 14144                           tblptru	equ	0xFF8
 14145                           tblptrh	equ	0xFF7
 14146                           tblptrl	equ	0xFF6
 14147                           tablat	equ	0xFF5
 14148                           prodh	equ	0xFF4
 14149                           prodl	equ	0xFF3
 14150                           intcon	equ	0xFF2
 14151                           intcon2	equ	0xFF1
 14152                           postinc0	equ	0xFEE
 14153                           fsr0h	equ	0xFEA
 14154                           fsr0l	equ	0xFE9
 14155                           wreg	equ	0xFE8
 14156                           indf1	equ	0xFE7
 14157                           postdec1	equ	0xFE5
 14158                           fsr1h	equ	0xFE2
 14159                           fsr1l	equ	0xFE1
 14160                           indf2	equ	0xFDF
 14161                           postinc2	equ	0xFDE
 14162                           postdec2	equ	0xFDD
 14163                           plusw2	equ	0xFDB
 14164                           fsr2h	equ	0xFDA
 14165                           fsr2l	equ	0xFD9
 14166                           status	equ	0xFD8
 14167                           
 14168 ;; *************** function _charge_time_count *****************
 14169 ;; Defined at:
 14170 ;;		line 159 in file "PIC18F27J53-ChargeStation6-04.h"
 14171 ;; Parameters:    Size  Location     Type
 14172 ;;		None
 14173 ;; Auto vars:     Size  Location     Type
 14174 ;;  i               1    2[COMRAM] unsigned char 
 14175 ;; Return value:  Size  Location     Type
 14176 ;;		None               void
 14177 ;; Registers used:
 14178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14179 ;; Tracked objects:
 14180 ;;		On entry : 0/0
 14181 ;;		On exit  : 0/0
 14182 ;;		Unchanged: 0/0
 14183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14185 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14186 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14187 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14188 ;;Total ram usage:        3 bytes
 14189 ;; Hardware stack levels used:    1
 14190 ;; This function calls:
 14191 ;;		Nothing
 14192 ;; This function is called by:
 14193 ;;		_ISR
 14194 ;; This function uses a non-reentrant model
 14195 ;;
 14196                           
 14197                           	psect	text74
 14198  012D3A                     __ptext74:
 14199                           	opt stack 0
 14200  012D3A                     _charge_time_count:
 14201                           	opt stack 22
 14202                           
 14203                           ;PIC18F27J53-ChargeStation6-04.h: 160: uint8_t i;
 14204                           ;PIC18F27J53-ChargeStation6-04.h: 161: for (i = 0; i < 3; i++) {
 14205                           
 14206                           ;incstack = 0
 14207  012D3A  0E00               	movlw	0
 14208  012D3C  6E03               	movwf	charge_time_count@i,c
 14209  012D3E  0E02               	movlw	2
 14210  012D40  6403               	cpfsgt	charge_time_count@i,c
 14211  012D42  D002               	goto	i2l4441
 14212  012D44  0012               	return	
 14213  012D46  0012               	return	
 14214  012D48                     i2l4441:
 14215                           
 14216                           ;PIC18F27J53-ChargeStation6-04.h: 162: if (I[i] > 100)charge_time[i]++;
 14217  012D48  5003               	movf	charge_time_count@i,w,c
 14218  012D4A  0D02               	mullw	2
 14219  012D4C  0E23               	movlw	low _I
 14220  012D4E  24F3               	addwf	prodl,w,c
 14221  012D50  6ED9               	movwf	fsr2l,c
 14222  012D52  0E00               	movlw	high _I
 14223  012D54  20F4               	addwfc	prodh,w,c
 14224  012D56  6EDA               	movwf	fsr2h,c
 14225  012D58  0E01               	movlw	1
 14226  012D5A  50DB               	movf	plusw2,w,c
 14227  012D5C  E104               	bnz	i2u429_40
 14228  012D5E  0E65               	movlw	101
 14229  012D60  5CDE               	subwf	postinc2,w,c
 14230  012D62  A0D8               	btfss	status,0,c
 14231  012D64  D00E               	goto	i2l4445
 14232  012D66                     i2u429_40:
 14233  012D66  5003               	movf	charge_time_count@i,w,c
 14234  012D68  0D04               	mullw	4
 14235  012D6A  0E6C               	movlw	low _charge_time
 14236  012D6C  24F3               	addwf	prodl,w,c
 14237  012D6E  6ED9               	movwf	fsr2l,c
 14238  012D70  0E00               	movlw	high _charge_time
 14239  012D72  20F4               	addwfc	prodh,w,c
 14240  012D74  6EDA               	movwf	fsr2h,c
 14241  012D76  2ADE               	incf	postinc2,f,c
 14242  012D78  0E00               	movlw	0
 14243  012D7A  22DE               	addwfc	postinc2,f,c
 14244  012D7C  22DE               	addwfc	postinc2,f,c
 14245  012D7E  22DE               	addwfc	postinc2,f,c
 14246  012D80  D000               	goto	i2l4445
 14247  012D82                     i2l4445:
 14248  012D82  2A03               	incf	charge_time_count@i,f,c
 14249  012D84  0E02               	movlw	2
 14250  012D86  6403               	cpfsgt	charge_time_count@i,c
 14251  012D88  D7DF               	goto	i2l4441
 14252  012D8A  0012               	return	
 14253  012D8C  0012               	return		;funcret
 14254  012D8E                     __end_of_charge_time_count:
 14255                           	opt stack 0
 14256                           pclatu	equ	0xFFB
 14257                           pclath	equ	0xFFA
 14258                           tblptru	equ	0xFF8
 14259                           tblptrh	equ	0xFF7
 14260                           tblptrl	equ	0xFF6
 14261                           tablat	equ	0xFF5
 14262                           prodh	equ	0xFF4
 14263                           prodl	equ	0xFF3
 14264                           intcon	equ	0xFF2
 14265                           intcon2	equ	0xFF1
 14266                           postinc0	equ	0xFEE
 14267                           fsr0h	equ	0xFEA
 14268                           fsr0l	equ	0xFE9
 14269                           wreg	equ	0xFE8
 14270                           indf1	equ	0xFE7
 14271                           postdec1	equ	0xFE5
 14272                           fsr1h	equ	0xFE2
 14273                           fsr1l	equ	0xFE1
 14274                           indf2	equ	0xFDF
 14275                           postinc2	equ	0xFDE
 14276                           postdec2	equ	0xFDD
 14277                           plusw2	equ	0xFDB
 14278                           fsr2h	equ	0xFDA
 14279                           fsr2l	equ	0xFD9
 14280                           status	equ	0xFD8
 14281                           
 14282 ;; *************** function _UART_ISR *****************
 14283 ;; Defined at:
 14284 ;;		line 221 in file "../My_header\My_header.h"
 14285 ;; Parameters:    Size  Location     Type
 14286 ;;		None
 14287 ;; Auto vars:     Size  Location     Type
 14288 ;;		None
 14289 ;; Return value:  Size  Location     Type
 14290 ;;		None               void
 14291 ;; Registers used:
 14292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14293 ;; Tracked objects:
 14294 ;;		On entry : 0/0
 14295 ;;		On exit  : 0/0
 14296 ;;		Unchanged: 0/0
 14297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14302 ;;Total ram usage:        0 bytes
 14303 ;; Hardware stack levels used:    1
 14304 ;; Hardware stack levels required when called:    2
 14305 ;; This function calls:
 14306 ;;		_ringbuf_num
 14307 ;;		_ringbuf_pop
 14308 ;;		_ringbuf_push
 14309 ;; This function is called by:
 14310 ;;		_ISR
 14311 ;; This function uses a non-reentrant model
 14312 ;;
 14313                           
 14314                           	psect	text75
 14315  012DDA                     __ptext75:
 14316                           	opt stack 0
 14317  012DDA                     _UART_ISR:
 14318                           	opt stack 20
 14319                           
 14320                           ;My_header\My_header.h: 222: if (PIE1bits.TX1IE && PIR1bits.TX1IF) {
 14321                           
 14322                           ;incstack = 0
 14323  012DDA  B89D               	btfsc	3997,4,c	;volatile
 14324  012DDC  A89E               	btfss	3998,4,c	;volatile
 14325  012DDE  D014               	goto	i2l195
 14326                           
 14327                           ;My_header\My_header.h: 223: PIR1bits.TX1IF = 0;
 14328  012DE0  989E               	bcf	3998,4,c	;volatile
 14329                           
 14330                           ;My_header\My_header.h: 224: if (ringbuf_num(&tx_buf) > 0) {
 14331  012DE2  0ECE               	movlw	low _tx_buf
 14332  012DE4  6E01               	movwf	ringbuf_num@rb,c
 14333  012DE6  0E01               	movlw	high _tx_buf
 14334  012DE8  6E02               	movwf	ringbuf_num@rb+1,c
 14335  012DEA  ECB4  F094         	call	_ringbuf_num	;wreg free
 14336  012DEE  0900               	iorlw	0
 14337  012DF0  B4D8               	btfsc	status,2,c
 14338  012DF2  D008               	goto	i2l196
 14339                           
 14340                           ;My_header\My_header.h: 225: TXREG1 = ringbuf_pop(&tx_buf);
 14341  012DF4  0ECE               	movlw	low _tx_buf
 14342  012DF6  6E05               	movwf	ringbuf_pop@rb,c
 14343  012DF8  0E01               	movlw	high _tx_buf
 14344  012DFA  6E06               	movwf	ringbuf_pop@rb+1,c
 14345  012DFC  EC9F  F093         	call	_ringbuf_pop	;wreg free
 14346  012E00  6EAE               	movwf	4014,c	;volatile
 14347                           
 14348                           ;My_header\My_header.h: 226: } else {
 14349  012E02  D002               	goto	i2l195
 14350  012E04                     i2l196:
 14351                           
 14352                           ;My_header\My_header.h: 227: PIE1bits.TX1IE = 0;
 14353  012E04  989D               	bcf	3997,4,c	;volatile
 14354  012E06  D000               	goto	i2l195
 14355  012E08                     i2l195:
 14356                           
 14357                           ;My_header\My_header.h: 228: }
 14358                           ;My_header\My_header.h: 229: }
 14359                           ;My_header\My_header.h: 230: if (PIE1bits.RC1IE && PIR1bits.RC1IF) {
 14360  012E08  AA9D               	btfss	3997,5,c	;volatile
 14361  012E0A  0012               	return	
 14362  012E0C  AA9E               	btfss	3998,5,c	;volatile
 14363  012E0E  0012               	return	
 14364                           
 14365                           ;My_header\My_header.h: 231: PIR1bits.RC1IF = 0;
 14366  012E10  9A9E               	bcf	3998,5,c	;volatile
 14367                           
 14368                           ;My_header\My_header.h: 232: ringbuf_push(&rx_buf, RCREG1);
 14369  012E12  0EC9               	movlw	low _rx_buf
 14370  012E14  6E05               	movwf	ringbuf_push@rb,c
 14371  012E16  0E01               	movlw	high _rx_buf
 14372  012E18  6E06               	movwf	ringbuf_push@rb+1,c
 14373  012E1A  CFAF F007          	movff	4015,ringbuf_push@asciicode	;volatile
 14374  012E1E  ECBB  F090         	call	_ringbuf_push	;wreg free
 14375  012E22  0012               	return	
 14376  012E24  0012               	return		;funcret
 14377  012E26                     __end_of_UART_ISR:
 14378                           	opt stack 0
 14379                           pclatu	equ	0xFFB
 14380                           pclath	equ	0xFFA
 14381                           tblptru	equ	0xFF8
 14382                           tblptrh	equ	0xFF7
 14383                           tblptrl	equ	0xFF6
 14384                           tablat	equ	0xFF5
 14385                           prodh	equ	0xFF4
 14386                           prodl	equ	0xFF3
 14387                           intcon	equ	0xFF2
 14388                           intcon2	equ	0xFF1
 14389                           postinc0	equ	0xFEE
 14390                           fsr0h	equ	0xFEA
 14391                           fsr0l	equ	0xFE9
 14392                           wreg	equ	0xFE8
 14393                           indf1	equ	0xFE7
 14394                           postdec1	equ	0xFE5
 14395                           fsr1h	equ	0xFE2
 14396                           fsr1l	equ	0xFE1
 14397                           indf2	equ	0xFDF
 14398                           postinc2	equ	0xFDE
 14399                           postdec2	equ	0xFDD
 14400                           plusw2	equ	0xFDB
 14401                           fsr2h	equ	0xFDA
 14402                           fsr2l	equ	0xFD9
 14403                           status	equ	0xFD8
 14404                           
 14405 ;; *************** function _ringbuf_push *****************
 14406 ;; Defined at:
 14407 ;;		line 39 in file "../My_header\My_ringbuf.h"
 14408 ;; Parameters:    Size  Location     Type
 14409 ;;  rb              2    4[COMRAM] PTR struct ringbuf
 14410 ;;		 -> rx_buf(5), tx_buf(5), 
 14411 ;;  asciicode       1    6[COMRAM] unsigned char 
 14412 ;; Auto vars:     Size  Location     Type
 14413 ;;		None
 14414 ;; Return value:  Size  Location     Type
 14415 ;;		None               void
 14416 ;; Registers used:
 14417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14418 ;; Tracked objects:
 14419 ;;		On entry : 0/0
 14420 ;;		On exit  : 0/0
 14421 ;;		Unchanged: 0/0
 14422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14423 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14425 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14426 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14427 ;;Total ram usage:        8 bytes
 14428 ;; Hardware stack levels used:    1
 14429 ;; Hardware stack levels required when called:    1
 14430 ;; This function calls:
 14431 ;;		_ringbuf_num
 14432 ;; This function is called by:
 14433 ;;		_UART_ISR
 14434 ;;		_tx_send
 14435 ;;		_tx_sends
 14436 ;; This function uses a non-reentrant model
 14437 ;;
 14438                           
 14439                           	psect	text76
 14440  012176                     __ptext76:
 14441                           	opt stack 0
 14442  012176                     _ringbuf_push:
 14443                           	opt stack 20
 14444                           
 14445                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
 14446                           
 14447                           ;incstack = 0
 14448  012176  C005  F001         	movff	ringbuf_push@rb,ringbuf_num@rb
 14449  01217A  C006  F002         	movff	ringbuf_push@rb+1,ringbuf_num@rb+1
 14450  01217E  ECB4  F094         	call	_ringbuf_num	;wreg free
 14451  012182  6E08               	movwf	??_ringbuf_push& (0+255),c
 14452  012184  EE20 F002          	lfsr	2,2
 14453  012188  5005               	movf	ringbuf_push@rb,w,c
 14454  01218A  26D9               	addwf	fsr2l,f,c
 14455  01218C  5006               	movf	ringbuf_push@rb+1,w,c
 14456  01218E  22DA               	addwfc	fsr2h,f,c
 14457  012190  50DE               	movf	postinc2,w,c
 14458  012192  5C08               	subwf	??_ringbuf_push,w,c
 14459  012194  B0D8               	btfsc	status,0,c
 14460  012196  0012               	return	
 14461                           
 14462                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
 14463  012198  EE20 F003          	lfsr	2,3
 14464  01219C  5005               	movf	ringbuf_push@rb,w,c
 14465  01219E  26D9               	addwf	fsr2l,f,c
 14466  0121A0  5006               	movf	ringbuf_push@rb+1,w,c
 14467  0121A2  22DA               	addwfc	fsr2h,f,c
 14468  0121A4  50DF               	movf	indf2,w,c
 14469  0121A6  6E08               	movwf	??_ringbuf_push& (0+255),c
 14470  0121A8  5008               	movf	??_ringbuf_push,w,c
 14471  0121AA  0D01               	mullw	1
 14472  0121AC  C005  FFD9         	movff	ringbuf_push@rb,fsr2l
 14473  0121B0  C006  FFDA         	movff	ringbuf_push@rb+1,fsr2h
 14474  0121B4  CFDE F009          	movff	postinc2,??_ringbuf_push+1
 14475  0121B8  CFDD F00A          	movff	postdec2,??_ringbuf_push+2
 14476  0121BC  50F3               	movf	prodl,w,c
 14477  0121BE  2409               	addwf	??_ringbuf_push+1,w,c
 14478  0121C0  6ED9               	movwf	fsr2l,c
 14479  0121C2  50F4               	movf	prodh,w,c
 14480  0121C4  200A               	addwfc	??_ringbuf_push+2,w,c
 14481  0121C6  6EDA               	movwf	fsr2h,c
 14482  0121C8  C007  FFDF         	movff	ringbuf_push@asciicode,indf2
 14483                           
 14484                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
 14485  0121CC  EE20 F002          	lfsr	2,2
 14486  0121D0  5005               	movf	ringbuf_push@rb,w,c
 14487  0121D2  26D9               	addwf	fsr2l,f,c
 14488  0121D4  5006               	movf	ringbuf_push@rb+1,w,c
 14489  0121D6  22DA               	addwfc	fsr2h,f,c
 14490  0121D8  50DF               	movf	indf2,w,c
 14491  0121DA  6E08               	movwf	??_ringbuf_push& (0+255),c
 14492  0121DC  6A09               	clrf	(??_ringbuf_push+1)& (0+255),c
 14493  0121DE  EE20 F003          	lfsr	2,3
 14494  0121E2  5005               	movf	ringbuf_push@rb,w,c
 14495  0121E4  26D9               	addwf	fsr2l,f,c
 14496  0121E6  5006               	movf	ringbuf_push@rb+1,w,c
 14497  0121E8  22DA               	addwfc	fsr2h,f,c
 14498  0121EA  50DF               	movf	indf2,w,c
 14499  0121EC  6E0A               	movwf	(??_ringbuf_push+2)& (0+255),c
 14500  0121EE  6A0B               	clrf	(??_ringbuf_push+3)& (0+255),c
 14501  0121F0  0E01               	movlw	1
 14502  0121F2  260A               	addwf	??_ringbuf_push+2,f,c
 14503  0121F4  0E00               	movlw	0
 14504  0121F6  220B               	addwfc	??_ringbuf_push+3,f,c
 14505  0121F8  5008               	movf	??_ringbuf_push,w,c
 14506  0121FA  5C0A               	subwf	??_ringbuf_push+2,w,c
 14507  0121FC  500B               	movf	??_ringbuf_push+3,w,c
 14508  0121FE  0A80               	xorlw	128
 14509  012200  6E0C               	movwf	(??_ringbuf_push+4)& (0+255),c
 14510  012202  5009               	movf	??_ringbuf_push+1,w,c
 14511  012204  0A80               	xorlw	128
 14512  012206  580C               	subwfb	(??_ringbuf_push+4)& (0+255),w,c
 14513  012208  B0D8               	btfsc	status,0,c
 14514  01220A  D008               	goto	i2l3965
 14515  01220C  EE20 F003          	lfsr	2,3
 14516  012210  5005               	movf	ringbuf_push@rb,w,c
 14517  012212  26D9               	addwf	fsr2l,f,c
 14518  012214  5006               	movf	ringbuf_push@rb+1,w,c
 14519  012216  22DA               	addwfc	fsr2h,f,c
 14520  012218  2ADF               	incf	indf2,f,c
 14521  01221A  0012               	return	
 14522  01221C                     i2l3965:
 14523                           
 14524                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
 14525  01221C  EE20 F003          	lfsr	2,3
 14526  012220  5005               	movf	ringbuf_push@rb,w,c
 14527  012222  26D9               	addwf	fsr2l,f,c
 14528  012224  5006               	movf	ringbuf_push@rb+1,w,c
 14529  012226  22DA               	addwfc	fsr2h,f,c
 14530  012228  0E00               	movlw	0
 14531  01222A  6EDF               	movwf	indf2,c
 14532  01222C  0012               	return	
 14533  01222E  0012               	return		;funcret
 14534  012230                     __end_of_ringbuf_push:
 14535                           	opt stack 0
 14536                           pclatu	equ	0xFFB
 14537                           pclath	equ	0xFFA
 14538                           tblptru	equ	0xFF8
 14539                           tblptrh	equ	0xFF7
 14540                           tblptrl	equ	0xFF6
 14541                           tablat	equ	0xFF5
 14542                           prodh	equ	0xFF4
 14543                           prodl	equ	0xFF3
 14544                           intcon	equ	0xFF2
 14545                           intcon2	equ	0xFF1
 14546                           postinc0	equ	0xFEE
 14547                           fsr0h	equ	0xFEA
 14548                           fsr0l	equ	0xFE9
 14549                           wreg	equ	0xFE8
 14550                           indf1	equ	0xFE7
 14551                           postdec1	equ	0xFE5
 14552                           fsr1h	equ	0xFE2
 14553                           fsr1l	equ	0xFE1
 14554                           indf2	equ	0xFDF
 14555                           postinc2	equ	0xFDE
 14556                           postdec2	equ	0xFDD
 14557                           plusw2	equ	0xFDB
 14558                           fsr2h	equ	0xFDA
 14559                           fsr2l	equ	0xFD9
 14560                           status	equ	0xFD8
 14561                           
 14562 ;; *************** function _ringbuf_pop *****************
 14563 ;; Defined at:
 14564 ;;		line 47 in file "../My_header\My_ringbuf.h"
 14565 ;; Parameters:    Size  Location     Type
 14566 ;;  rb              2    4[COMRAM] PTR struct ringbuf
 14567 ;;		 -> tx_buf(5), 
 14568 ;; Auto vars:     Size  Location     Type
 14569 ;;  ret             1    9[COMRAM] unsigned char 
 14570 ;; Return value:  Size  Location     Type
 14571 ;;                  1    wreg      unsigned char 
 14572 ;; Registers used:
 14573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14574 ;; Tracked objects:
 14575 ;;		On entry : 0/0
 14576 ;;		On exit  : 0/0
 14577 ;;		Unchanged: 0/0
 14578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14579 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14580 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14581 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14582 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14583 ;;Total ram usage:        6 bytes
 14584 ;; Hardware stack levels used:    1
 14585 ;; Hardware stack levels required when called:    1
 14586 ;; This function calls:
 14587 ;;		_ringbuf_num
 14588 ;; This function is called by:
 14589 ;;		_UART_ISR
 14590 ;; This function uses a non-reentrant model
 14591 ;;
 14592                           
 14593                           	psect	text77
 14594  01273E                     __ptext77:
 14595                           	opt stack 0
 14596  01273E                     _ringbuf_pop:
 14597                           	opt stack 20
 14598                           
 14599                           ;My_header\My_ringbuf.h: 48: if (ringbuf_num(rb)) {
 14600                           
 14601                           ;incstack = 0
 14602  01273E  C005  F001         	movff	ringbuf_pop@rb,ringbuf_num@rb
 14603  012742  C006  F002         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 14604  012746  ECB4  F094         	call	_ringbuf_num	;wreg free
 14605  01274A  0900               	iorlw	0
 14606  01274C  B4D8               	btfsc	status,2,c
 14607  01274E  D03C               	goto	i2l3983
 14608                           
 14609                           ;My_header\My_ringbuf.h: 49: uint8_t ret = rb->buf[rb->tail];
 14610  012750  EE20 F004          	lfsr	2,4
 14611  012754  5005               	movf	ringbuf_pop@rb,w,c
 14612  012756  26D9               	addwf	fsr2l,f,c
 14613  012758  5006               	movf	ringbuf_pop@rb+1,w,c
 14614  01275A  22DA               	addwfc	fsr2h,f,c
 14615  01275C  50DF               	movf	indf2,w,c
 14616  01275E  6E07               	movwf	??_ringbuf_pop& (0+255),c
 14617  012760  5007               	movf	??_ringbuf_pop,w,c
 14618  012762  0D01               	mullw	1
 14619  012764  C005  FFD9         	movff	ringbuf_pop@rb,fsr2l
 14620  012768  C006  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 14621  01276C  CFDE F008          	movff	postinc2,??_ringbuf_pop+1
 14622  012770  CFDD F009          	movff	postdec2,??_ringbuf_pop+2
 14623  012774  50F3               	movf	prodl,w,c
 14624  012776  2408               	addwf	??_ringbuf_pop+1,w,c
 14625  012778  6ED9               	movwf	fsr2l,c
 14626  01277A  50F4               	movf	prodh,w,c
 14627  01277C  2009               	addwfc	??_ringbuf_pop+2,w,c
 14628  01277E  6EDA               	movwf	fsr2h,c
 14629  012780  50DF               	movf	indf2,w,c
 14630  012782  6E0A               	movwf	ringbuf_pop@ret,c
 14631                           
 14632                           ;My_header\My_ringbuf.h: 50: rb->tail++;
 14633  012784  EE20 F004          	lfsr	2,4
 14634  012788  5005               	movf	ringbuf_pop@rb,w,c
 14635  01278A  26D9               	addwf	fsr2l,f,c
 14636  01278C  5006               	movf	ringbuf_pop@rb+1,w,c
 14637  01278E  22DA               	addwfc	fsr2h,f,c
 14638  012790  2ADF               	incf	indf2,f,c
 14639                           
 14640                           ;My_header\My_ringbuf.h: 51: if (rb->tail >= rb->size) {
 14641  012792  EE20 F002          	lfsr	2,2
 14642  012796  5005               	movf	ringbuf_pop@rb,w,c
 14643  012798  26D9               	addwf	fsr2l,f,c
 14644  01279A  5006               	movf	ringbuf_pop@rb+1,w,c
 14645  01279C  22DA               	addwfc	fsr2h,f,c
 14646  01279E  EE10 F004          	lfsr	1,4
 14647  0127A2  5005               	movf	ringbuf_pop@rb,w,c
 14648  0127A4  26E1               	addwf	fsr1l,f,c
 14649  0127A6  5006               	movf	ringbuf_pop@rb+1,w,c
 14650  0127A8  22E2               	addwfc	fsr1h,f,c
 14651  0127AA  50DE               	movf	postinc2,w,c
 14652  0127AC  5CE6               	subwf	postinc1,w,c
 14653  0127AE  A0D8               	btfss	status,0,c
 14654  0127B0  D009               	goto	i2l3977
 14655                           
 14656                           ;My_header\My_ringbuf.h: 52: rb->tail = 0;
 14657  0127B2  EE20 F004          	lfsr	2,4
 14658  0127B6  5005               	movf	ringbuf_pop@rb,w,c
 14659  0127B8  26D9               	addwf	fsr2l,f,c
 14660  0127BA  5006               	movf	ringbuf_pop@rb+1,w,c
 14661  0127BC  22DA               	addwfc	fsr2h,f,c
 14662  0127BE  0E00               	movlw	0
 14663  0127C0  6EDF               	movwf	indf2,c
 14664  0127C2  D000               	goto	i2l3977
 14665  0127C4                     i2l3977:
 14666                           
 14667                           ;My_header\My_ringbuf.h: 53: }
 14668                           ;My_header\My_ringbuf.h: 54: return ret;
 14669  0127C4  500A               	movf	ringbuf_pop@ret,w,c
 14670                           
 14671                           ;My_header\My_ringbuf.h: 55: } else {
 14672  0127C6  0012               	return	
 14673  0127C8                     i2l3983:
 14674                           
 14675                           ;My_header\My_ringbuf.h: 56: return 0;
 14676  0127C8  0E00               	movlw	0
 14677  0127CA  0012               	return	
 14678  0127CC  0012               	return		;funcret
 14679  0127CE                     __end_of_ringbuf_pop:
 14680                           	opt stack 0
 14681                           pclatu	equ	0xFFB
 14682                           pclath	equ	0xFFA
 14683                           tblptru	equ	0xFF8
 14684                           tblptrh	equ	0xFF7
 14685                           tblptrl	equ	0xFF6
 14686                           tablat	equ	0xFF5
 14687                           prodh	equ	0xFF4
 14688                           prodl	equ	0xFF3
 14689                           intcon	equ	0xFF2
 14690                           intcon2	equ	0xFF1
 14691                           postinc0	equ	0xFEE
 14692                           fsr0h	equ	0xFEA
 14693                           fsr0l	equ	0xFE9
 14694                           wreg	equ	0xFE8
 14695                           indf1	equ	0xFE7
 14696                           postinc1	equ	0xFE6
 14697                           postdec1	equ	0xFE5
 14698                           fsr1h	equ	0xFE2
 14699                           fsr1l	equ	0xFE1
 14700                           indf2	equ	0xFDF
 14701                           postinc2	equ	0xFDE
 14702                           postdec2	equ	0xFDD
 14703                           plusw2	equ	0xFDB
 14704                           fsr2h	equ	0xFDA
 14705                           fsr2l	equ	0xFD9
 14706                           status	equ	0xFD8
 14707                           
 14708 ;; *************** function _ringbuf_num *****************
 14709 ;; Defined at:
 14710 ;;		line 31 in file "../My_header\My_ringbuf.h"
 14711 ;; Parameters:    Size  Location     Type
 14712 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 14713 ;;		 -> rx_buf(5), tx_buf(5), 
 14714 ;; Auto vars:     Size  Location     Type
 14715 ;;		None
 14716 ;; Return value:  Size  Location     Type
 14717 ;;                  1    wreg      unsigned char 
 14718 ;; Registers used:
 14719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14720 ;; Tracked objects:
 14721 ;;		On entry : 0/0
 14722 ;;		On exit  : 0/0
 14723 ;;		Unchanged: 0/0
 14724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14725 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14727 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14728 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14729 ;;Total ram usage:        4 bytes
 14730 ;; Hardware stack levels used:    1
 14731 ;; This function calls:
 14732 ;;		Nothing
 14733 ;; This function is called by:
 14734 ;;		_ringbuf_push
 14735 ;;		_ringbuf_pop
 14736 ;;		_UART_ISR
 14737 ;;		_ringbuf_backspace
 14738 ;; This function uses a non-reentrant model
 14739 ;;
 14740                           
 14741                           	psect	text78
 14742  012968                     __ptext78:
 14743                           	opt stack 0
 14744  012968                     _ringbuf_num:
 14745                           	opt stack 20
 14746                           
 14747                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
 14748                           
 14749                           ;incstack = 0
 14750  012968  EE20 F004          	lfsr	2,4
 14751  01296C  5001               	movf	ringbuf_num@rb,w,c
 14752  01296E  26D9               	addwf	fsr2l,f,c
 14753  012970  5002               	movf	ringbuf_num@rb+1,w,c
 14754  012972  22DA               	addwfc	fsr2h,f,c
 14755  012974  EE10 F003          	lfsr	1,3
 14756  012978  5001               	movf	ringbuf_num@rb,w,c
 14757  01297A  26E1               	addwf	fsr1l,f,c
 14758  01297C  5002               	movf	ringbuf_num@rb+1,w,c
 14759  01297E  22E2               	addwfc	fsr1h,f,c
 14760  012980  50DE               	movf	postinc2,w,c
 14761  012982  5CE6               	subwf	postinc1,w,c
 14762  012984  A0D8               	btfss	status,0,c
 14763  012986  D012               	goto	i2l3501
 14764                           
 14765                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
 14766  012988  EE20 F003          	lfsr	2,3
 14767  01298C  5001               	movf	ringbuf_num@rb,w,c
 14768  01298E  26D9               	addwf	fsr2l,f,c
 14769  012990  5002               	movf	ringbuf_num@rb+1,w,c
 14770  012992  22DA               	addwfc	fsr2h,f,c
 14771  012994  50DF               	movf	indf2,w,c
 14772  012996  6E03               	movwf	??_ringbuf_num& (0+255),c
 14773  012998  EE20 F004          	lfsr	2,4
 14774  01299C  5001               	movf	ringbuf_num@rb,w,c
 14775  01299E  26D9               	addwf	fsr2l,f,c
 14776  0129A0  5002               	movf	ringbuf_num@rb+1,w,c
 14777  0129A2  22DA               	addwfc	fsr2h,f,c
 14778  0129A4  50DF               	movf	indf2,w,c
 14779  0129A6  0800               	sublw	0
 14780  0129A8  2403               	addwf	??_ringbuf_num,w,c
 14781                           
 14782                           ;My_header\My_ringbuf.h: 34: } else {
 14783  0129AA  0012               	return	
 14784  0129AC                     i2l3501:
 14785                           
 14786                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
 14787  0129AC  EE20 F003          	lfsr	2,3
 14788  0129B0  5001               	movf	ringbuf_num@rb,w,c
 14789  0129B2  26D9               	addwf	fsr2l,f,c
 14790  0129B4  5002               	movf	ringbuf_num@rb+1,w,c
 14791  0129B6  22DA               	addwfc	fsr2h,f,c
 14792  0129B8  50DF               	movf	indf2,w,c
 14793  0129BA  6E03               	movwf	??_ringbuf_num& (0+255),c
 14794  0129BC  EE20 F002          	lfsr	2,2
 14795  0129C0  5001               	movf	ringbuf_num@rb,w,c
 14796  0129C2  26D9               	addwf	fsr2l,f,c
 14797  0129C4  5002               	movf	ringbuf_num@rb+1,w,c
 14798  0129C6  22DA               	addwfc	fsr2h,f,c
 14799  0129C8  50DF               	movf	indf2,w,c
 14800  0129CA  6E04               	movwf	(??_ringbuf_num+1)& (0+255),c
 14801  0129CC  EE20 F004          	lfsr	2,4
 14802  0129D0  5001               	movf	ringbuf_num@rb,w,c
 14803  0129D2  26D9               	addwf	fsr2l,f,c
 14804  0129D4  5002               	movf	ringbuf_num@rb+1,w,c
 14805  0129D6  22DA               	addwfc	fsr2h,f,c
 14806  0129D8  50DF               	movf	indf2,w,c
 14807  0129DA  0800               	sublw	0
 14808  0129DC  2404               	addwf	??_ringbuf_num+1,w,c
 14809  0129DE  2403               	addwf	??_ringbuf_num,w,c
 14810  0129E0  0012               	return	
 14811  0129E2  0012               	return		;funcret
 14812  0129E4                     __end_of_ringbuf_num:
 14813                           	opt stack 0
 14814                           pclatu	equ	0xFFB
 14815                           pclath	equ	0xFFA
 14816                           tblptru	equ	0xFF8
 14817                           tblptrh	equ	0xFF7
 14818                           tblptrl	equ	0xFF6
 14819                           tablat	equ	0xFF5
 14820                           prodh	equ	0xFF4
 14821                           prodl	equ	0xFF3
 14822                           intcon	equ	0xFF2
 14823                           intcon2	equ	0xFF1
 14824                           postinc0	equ	0xFEE
 14825                           fsr0h	equ	0xFEA
 14826                           fsr0l	equ	0xFE9
 14827                           wreg	equ	0xFE8
 14828                           indf1	equ	0xFE7
 14829                           postinc1	equ	0xFE6
 14830                           postdec1	equ	0xFE5
 14831                           fsr1h	equ	0xFE2
 14832                           fsr1l	equ	0xFE1
 14833                           indf2	equ	0xFDF
 14834                           postinc2	equ	0xFDE
 14835                           postdec2	equ	0xFDD
 14836                           plusw2	equ	0xFDB
 14837                           fsr2h	equ	0xFDA
 14838                           fsr2l	equ	0xFD9
 14839                           status	equ	0xFD8
 14840                           pclatu	equ	0xFFB
 14841                           pclath	equ	0xFFA
 14842                           tblptru	equ	0xFF8
 14843                           tblptrh	equ	0xFF7
 14844                           tblptrl	equ	0xFF6
 14845                           tablat	equ	0xFF5
 14846                           prodh	equ	0xFF4
 14847                           prodl	equ	0xFF3
 14848                           intcon	equ	0xFF2
 14849                           intcon2	equ	0xFF1
 14850                           postinc0	equ	0xFEE
 14851                           fsr0h	equ	0xFEA
 14852                           fsr0l	equ	0xFE9
 14853                           wreg	equ	0xFE8
 14854                           indf1	equ	0xFE7
 14855                           postinc1	equ	0xFE6
 14856                           postdec1	equ	0xFE5
 14857                           fsr1h	equ	0xFE2
 14858                           fsr1l	equ	0xFE1
 14859                           indf2	equ	0xFDF
 14860                           postinc2	equ	0xFDE
 14861                           postdec2	equ	0xFDD
 14862                           plusw2	equ	0xFDB
 14863                           fsr2h	equ	0xFDA
 14864                           fsr2l	equ	0xFD9
 14865                           status	equ	0xFD8
 14866                           
 14867                           	psect	rparam
 14868  0000                     pclatu	equ	0xFFB
 14869                           pclath	equ	0xFFA
 14870                           tblptru	equ	0xFF8
 14871                           tblptrh	equ	0xFF7
 14872                           tblptrl	equ	0xFF6
 14873                           tablat	equ	0xFF5
 14874                           prodh	equ	0xFF4
 14875                           prodl	equ	0xFF3
 14876                           intcon	equ	0xFF2
 14877                           intcon2	equ	0xFF1
 14878                           postinc0	equ	0xFEE
 14879                           fsr0h	equ	0xFEA
 14880                           fsr0l	equ	0xFE9
 14881                           wreg	equ	0xFE8
 14882                           indf1	equ	0xFE7
 14883                           postinc1	equ	0xFE6
 14884                           postdec1	equ	0xFE5
 14885                           fsr1h	equ	0xFE2
 14886                           fsr1l	equ	0xFE1
 14887                           indf2	equ	0xFDF
 14888                           postinc2	equ	0xFDE
 14889                           postdec2	equ	0xFDD
 14890                           plusw2	equ	0xFDB
 14891                           fsr2h	equ	0xFDA
 14892                           fsr2l	equ	0xFD9
 14893                           status	equ	0xFD8


Data Sizes:
    Strings     276
    Constant    0
    Data        33
    BSS         126
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      64
    BANK0           160     41     160
    BANK1           256    201     211
    BANK2           256    200     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    RTCC_time_set@cnt_dec	PTR struct button size(2) Largest target is 4
		 -> ct1(BANK0[4]), 

    RTCC_time_set@cnt_inc	PTR struct button size(2) Largest target is 4
		 -> ct0(BANK0[4]), 

    RTCC_time_set@mode	PTR struct button size(2) Largest target is 4
		 -> ctm(BANK0[4]), 

    RTCC_time_set_dec@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_time_set_dec@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_time_set_inc@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_time_set_inc@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    display_time_1602@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    display_time_1602@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_RTCC@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    caltime_to_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK1[4]), 

    weekday_char_full	PTR const unsigned char [7] size(2) Largest target is 10
		 -> STR_14(CODE[9]), STR_13(CODE[7]), STR_12(CODE[9]), STR_11(CODE[10]), 
		 -> STR_10(CODE[8]), STR_9(CODE[7]), STR_8(CODE[7]), 

    weekday_char	PTR const unsigned char [7] size(2) Largest target is 4
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_34(CODE[9]), STR_33(CODE[17]), STR_32(CODE[13]), STR_31(CODE[16]), 
		 -> STR_30(CODE[20]), STR_29(CODE[19]), STR_28(CODE[2]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[4]), display_LCD@str(BANK1[10]), 
		 -> STR_23(CODE[13]), STR_22(CODE[17]), STR_21(CODE[11]), STR_20(CODE[11]), 
		 -> STR_19(CODE[12]), STR_18(CODE[12]), STR_17(CODE[10]), STR_16(CODE[10]), 
		 -> STR_15(CODE[3]), display_dec@str(BANK1[10]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[4]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> ctm(BANK0[4]), ct2(BANK0[4]), ct1(BANK0[4]), ct0(BANK0[4]), 

    utoa@str	PTR unsigned char  size(2) Largest target is 10
		 -> display_LCD@str(BANK1[10]), display_dec@str(BANK1[10]), 

    delay_set@d	PTR struct Delay size(2) Largest target is 3
		 -> delay_display(COMRAM[3]), 

    delay_timer_interrupt@d	PTR struct Delay size(2) Largest target is 3
		 -> delay_display(COMRAM[3]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@rxbuf(BANK2[200]), main_init@txbuf(BANK1[200]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@rxbuf(BANK2[200]), main_init@txbuf(BANK1[200]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@rxbuf(BANK2[200]), main_init@txbuf(BANK1[200]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@rxbuf(BANK2[200]), main_init@txbuf(BANK1[200]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@rxbuf(BANK2[200]), main_init@txbuf(BANK1[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> tx_buf(BANK1[5]), 

    ringbuf_push@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@rxbuf(BANK2[200]), main_init@txbuf(BANK1[200]), 

    ringbuf_push@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> rx_buf(BANK1[5]), tx_buf(BANK1[5]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@rxbuf(BANK2[200]), main_init@txbuf(BANK1[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> rx_buf(BANK1[5]), tx_buf(BANK1[5]), 

    S790ringbuf$buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@rxbuf(BANK2[200]), main_init@txbuf(BANK1[200]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@rxbuf(BANK2[200]), main_init@txbuf(BANK1[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@rxbuf(BANK2[200]), main_init@txbuf(BANK1[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> rx_buf(BANK1[5]), tx_buf(BANK1[5]), 


Critical Paths under _main in COMRAM

    _main->_CTMU_read
    _port_loop->_sw_flag_clear
    _port_loop->_sw_flag_read
    _I2C_LCD_Putc->_I2C_Send
    _I2C_LCD_Putc->_I2C_Start
    _I2C_LCD_Puts->_I2C_Send
    _I2C_LCD_Puts->_I2C_Start
    _ctmu_loop->_CTMU_read
    _button_timer_interrupt->_CTMU_read
    ___lwdiv->_CTMU_read
    _RTCC_time_set_inc->_month_length
    _RTCC_time_set_dec->_month_length
    _RTCC_from_epoch->_caltime_to_RTCC
    _epoch_to_caltime->_month_length
    _caltime_to_RTCC->_d_to_x
    _Auto_cut->_ADC
    ___wmul->_ADC
    _main_init->_timer1_init
    _I2C_LCD_init->_Delay_ms
    _I2C_LCD_Command->_I2C_Send
    _I2C_LCD_Command->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _RTCC_from_RTCC->_RTCC_to_caltime
    _caltime_to_epoch->_month_length
    _month_length->___awmod
    ___lmul->_month_length
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in COMRAM

    _ISR->_integrating
    _tx_send->_ringbuf_push
    _lchika->i2___awdiv
    _integrating->i2___lldiv
    _UART_ISR->_ringbuf_push
    _ringbuf_push->_ringbuf_num
    _ringbuf_pop->_ringbuf_num

Critical Paths under _main in BANK0

    _main->_sleep_loop
    _port_loop->_delay_set
    _display_LCD->_display_time_1602
    _display_dec->_utoa
    _utoa->___lwdiv
    _I2C_LCD_Putc->_I2C_Start
    _display_port->_I2C_LCD_SetCursor
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Puts->_I2C_Start
    ___llmod->___lldiv
    _ctmu_loop->_button_timer_interrupt
    _button_timer_interrupt->___lwdiv
    ___lwdiv->_CTMU_read
    _CTMU_read->___lldiv
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _d_to_x->___awdiv
    _Auto_cut->___wmul
    ___wmul->_ADC
    _main_init->_ringbuf_init
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_main_init
    _sleep_loop->_RTCC_from_RTCC
    _normal_mode_loop->_RTCC_time_set
    _display_LCD->_display_time_1602
    _display_time_1602->_display_dec
    _RTCC_time_set->_RTCC_time_set_dec
    _RTCC_time_set->_RTCC_time_set_inc
    _RTCC_time_set_inc->_RTCC_from_epoch
    _RTCC_time_set_dec->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _RTCC_loop->_RTCC_from_RTCC

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_main_init

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  158782
                                            200 BANK1      1     1      0
                          _CTMU_read
                                _LED
                                _OUT
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_loop
                            ___lwdiv
                          _main_init
                   _normal_mode_loop
                         _sleep_loop
 ---------------------------------------------------------------------------------
 (1) _sleep_loop                                           1     1      0   15110
                                             40 BANK0      1     1      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                                _LED
                                _OUT
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (1) _normal_mode_loop                                     0     0      0  110590
                           _Auto_cut
                      _RTCC_time_set
                          _ctmu_loop
                        _display_LCD
                          _port_loop
 ---------------------------------------------------------------------------------
 (2) _port_loop                                            1     1      0    4031
                                              4 BANK0      1     1      0
                                _LED
                                _OUT
                          _delay_set
                      _sw_flag_clear
                       _sw_flag_read
 ---------------------------------------------------------------------------------
 (3) _sw_flag_read                                         3     1      2     748
                                             31 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _sw_flag_clear                                        3     1      2     644
                                             31 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _delay_set                                            4     0      4     509
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _LED                                                  2     1      1     643
                                             31 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _display_LCD                                         14    14      0   53511
                                             15 BANK1     14    14      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Putc
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                       _display_port
                  _display_time_1602
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _display_time_1602                                    5     1      4   25954
                                             40 BANK0      1     1      0
                                             11 BANK1      4     0      4
                       _I2C_LCD_Putc
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                     _RTCC_from_RTCC
                        _display_dec
 ---------------------------------------------------------------------------------
 (4) _display_dec                                         12    11      1   11836
                                             34 BANK0      1     0      1
                                              0 BANK1     11    11      0
                       _I2C_LCD_Puts
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 8     3      5    6729
                                             26 BANK0      8     3      5
                            ___lldiv (ARG)
                            ___llmod (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    1480
                                             31 COMRAM     1     1      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Putc                                         2     2      0     667
                                              1 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _display_port                                         0     0      0    6043
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_SetCursor                                    4     3      1    2430
                                              3 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Puts                                         5     3      2    3613
                                              1 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     856
                                             31 COMRAM     1     1      0
                                             13 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _ctmu_loop                                            0     0      0    6825
                          _CTMU_read
                            ___lwdiv
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (3) _button_timer_interrupt                               5     2      3    1979
                                             26 BANK0      5     2      3
                          _CTMU_read (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    3083
                                             19 BANK0      7     3      4
                          _CTMU_read (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _CTMU_read                                            9     7      2    1763
                                             31 COMRAM     3     1      2
                                             13 BANK0      6     6      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _RTCC_time_set                                        6     0      6   44507
                                             24 BANK1      6     0      6
               _RTCC_time_set_cursor
                  _RTCC_time_set_dec
                  _RTCC_time_set_inc
               _RTCC_time_set_toggle
 ---------------------------------------------------------------------------------
 (3) _RTCC_time_set_toggle                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RTCC_time_set_inc                                   10     6      4   21927
                                             14 BANK1     10     6      4
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (3) _RTCC_time_set_dec                                   10     6      4   21927
                                             14 BANK1     10     6      4
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_from_epoch                                      4     0      4   10069
                                             10 BANK1      4     0      4
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (5) _epoch_to_caltime                                    16    12      4    8074
                                             33 BANK0      6     2      4
                                              0 BANK1     10    10      0
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (6) _get_quot_rem                                         8     4      4    4608
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    1627
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (5) _caltime_to_RTCC                                      2     0      2    1278
                                             32 COMRAM     2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (6) _d_to_x                                               1     1      0     853
                                             31 COMRAM     1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     791
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _RTCC_time_set_cursor                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Auto_cut                                             3     3      0    1716
                                              7 BANK0      3     3      0
                                _ADC
                                 _IN
                                _OUT
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     632
                                              1 BANK0      6     2      4
                                _ADC (ARG)
                                 _IN (ARG)
 ---------------------------------------------------------------------------------
 (2) _OUT                                                  2     1      1     706
                                             31 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _IN                                                   1     1      0      31
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADC                                                  4     2      2      31
                                             31 COMRAM     3     1      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _main_init                                          400   400      0    2784
                                              0 BANK1    200   200      0
                                              0 BANK2    200   200      0
                           _ADC_init
                          _CTMU_init
                       _I2C_LCD_init
                           _I2C_init
                          _RTCC_init
                          _UART_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     197
                                             31 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         5     0      5     810
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         0     0      0    1573
                           _Delay_ms
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Clear                                        1     1      0     667
                                              3 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Command                                      2     2      0     667
                                              1 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1     509
                                             33 COMRAM     1     0      1
                                              0 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                             33 COMRAM     1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             3     1      2     239
                                             31 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _CTMU_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            0     0      0    6921
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (2) _RTCC_from_RTCC                                       4     0      4    6921
                                              0 BANK1      4     0      4
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (3) _caltime_to_epoch                                    15    11      4    4986
                                             25 BANK0     15    11      4
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _month_length                                         6     5      1    2075
                                             33 COMRAM     1     0      1
                                              4 BANK0      5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     849
                                             31 COMRAM     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1960
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (3) _RTCC_to_caltime                                      3     1      2     386
                                             33 COMRAM     1     1      0
                                              0 BANK0      2     0      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (4) _x_to_d                                               2     2      0      62
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                 15    15      0    5450
                                             16 COMRAM    15    15      0
                           _UART_ISR
                  _charge_time_count
              _delay_timer_interrupt
                        _integrating
                             _lchika
                            _tx_send
 ---------------------------------------------------------------------------------
 (9) _tx_send                                              1     1      0    1264
                                             12 COMRAM     1     1      0
                       _ringbuf_push
 ---------------------------------------------------------------------------------
 (9) _lchika                                               4     4      0    1020
                                              8 COMRAM     4     4      0
                              i2_LED
                          i2___awdiv
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (10) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (10) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (10) i2_LED                                               2     1      1     166
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (9) _integrating                                          3     3      0     348
                                             13 COMRAM     3     3      0
                          i2___lldiv
 ---------------------------------------------------------------------------------
 (10) i2___lldiv                                          13     5      8     214
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (9) _delay_timer_interrupt                                4     2      2     177
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _charge_time_count                                    3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _UART_ISR                                             0     0      0    2528
                        _ringbuf_num
                        _ringbuf_pop
                       _ringbuf_push
 ---------------------------------------------------------------------------------
 (10) _ringbuf_push                                        8     5      3    1242
                                              4 COMRAM     8     5      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (10) _ringbuf_pop                                         6     4      2     776
                                              4 COMRAM     6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (11) _ringbuf_num                                         4     2      2     510
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CTMU_read
     ___lldiv
   _LED
   _OUT
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         ___lldiv (ARG)
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_loop
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   ___lwdiv
     _CTMU_read (ARG)
       ___lldiv
     ___lwmod (ARG)
   _main_init
     _ADC_init
     _CTMU_init
     _I2C_LCD_init
       _Delay_ms
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_init
     _RTCC_init
     _UART_init
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _normal_mode_loop
     _Auto_cut
       _ADC
       _IN
       _OUT
       ___wmul
         _ADC (ARG)
         _IN (ARG)
     _RTCC_time_set
       _RTCC_time_set_cursor
       _RTCC_time_set_dec
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _RTCC_from_epoch
           _caltime_to_RTCC
             _d_to_x
               ___awdiv
           _epoch_to_caltime
             _get_quot_rem
               ___lldiv
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
             _month_length
               ___awmod
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
       _RTCC_time_set_inc
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _RTCC_from_epoch
           _caltime_to_RTCC
             _d_to_x
               ___awdiv
           _epoch_to_caltime
             _get_quot_rem
               ___lldiv
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
             _month_length
               ___awmod
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
       _RTCC_time_set_toggle
     _ctmu_loop
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
       _button_timer_interrupt
         _CTMU_read (ARG)
           ___lldiv
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
     _display_LCD
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Putc
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_Puts
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_SetCursor
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
       ___lwmod
       _display_port
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
       _display_time_1602
         _I2C_LCD_Putc
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _display_dec
           _I2C_LCD_Puts
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
           _utoa
             ___lldiv (ARG)
             ___llmod (ARG)
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
             ___lwmod (ARG)
       _utoa
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
         ___lwmod (ARG)
     _port_loop
       _LED
       _OUT
       _delay_set
       _sw_flag_clear
       _sw_flag_read
   _sleep_loop
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _LED
     _OUT
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod

 _ISR (ROOT)
   _UART_ISR
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_push
       _ringbuf_num
   _charge_time_count
   _delay_timer_interrupt
   _integrating
     i2___lldiv
   _lchika
     i2_LED
     i2___awdiv
     i2___lwdiv
   _tx_send
     _ringbuf_push
       _ringbuf_num

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8      C8      10       78.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100     C9      D3       8       82.4%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     29      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     22      40       1       67.4%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     27B       6        0.0%
DATA                 0      0     27B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Jun 06 00:07:54 2015

                              _I 0023                                _S 0060  
                              _s 0078                     ?_display_LCD 0001  
              _charge_time_count 2D3A               __size_of_I2C_Start 0032  
                   ?_display_dec 00DB                               _IN 312C  
                             _d1 008A                     ___awdiv@sign 00BE  
      __size_of_normal_mode_loop 00C6              ___wmul@multiplicand 00BC  
             i2___lwdiv@dividend 0001                ??_RTCC_from_epoch 0023  
                   _sw_flag_read 2B2C               ?_charge_time_count 0001  
        RTCC_time_set_inc@i_2064 0116                     __CFG_CP0$OFF 000000  
                            ?_IN 0001                              IN@b 0020  
                ??_RTCC_time_set 0023                              l131 307A  
                            l310 30BA                              l136 2F20  
                            l153 31A2                              l225 2340  
                            l404 20B2                              l325 330E  
                            l334 305C                              _ADC 3186  
                            l280 0634                              l248 27D0  
                            l417 12B8                              l273 0534  
                            l274 055A                              l346 3026  
                            l275 0580                              l460 3342  
                            l276 05A4                              l277 05C8  
                            l278 05EC                              l471 2C74  
                            l279 0610                              l473 2C82  
                            l465 2C4A                              l570 2CB6  
                            l571 2CC2                              l467 2C58  
                            l469 2C66                              l398 2232  
                            l568 2CAA                              l584 2F48  
                            l586 2F54                              l587 2F60  
                            _LED 2F44                              _ISR 0008  
                            _OUT 2C92                    ?_get_quot_rem 00D2  
                  ?_display_port 0001               caltime_to_epoch@ep 00D4  
             caltime_to_epoch@ct 00D2                              _ct0 00A5  
                            _ct1 00A9                              _ct2 00AD  
                            _ctm 00B1                    _sw_flag_clear 2EB8  
                   ___awmod@sign 0021                              prod 000FF3  
                            wreg 000FE8                       _TXSTA1bits 000FAD  
            ??_charge_time_count 0001                             ??_IN 0020  
                   _I2C_LCD_Putc 2FFC                     _I2C_LCD_Puts 26AC  
                           ?_ADC 0020              sw_flag_read@bit_and 0020  
                           LED@b 0021                             ?_LED 0020  
              ??_I2C_LCD_Command 0023                             ?_ISR 0001  
                           ?_OUT 0020                     _I2C_LCD_init 2CE6  
                           l1203 209E                             l1213 256A  
                           l1266 295E                             l1276 2B22  
                           l5101 132A                             l5005 2840  
                           l5103 1330                             l5023 26D8  
                           l5031 2738                             l5121 07EA  
                           l5123 07F0                             l5107 133A  
                           l5133 0854                             l5221 2362  
                           l5029 270C                             l6013 1CDA  
                           l5143 08E0                             l5127 07FA  
                           l5135 085A                             l6025 1D02  
                           l6017 1CE4                             OUT@b 0021  
                           l5139 087A                             l5227 31FE  
                           l5411 0D30                             l6035 1D40  
                           l5229 3210                             l5261 0682  
                           l5325 166C                             l5501 2B66  
                           l6045 1D70                             l5431 0E0E  
                           l5423 0DE6                             l5415 0D50  
                           l5407 0D14                             l5327 1674  
                           l5511 2EBC                             l5193 230E  
                           l5281 0752                             l5273 06FE  
                           l5265 06AA                             l5257 065A  
                           l5513 2ECA                             l5443 0EEA  
                           l5427 0E00                             l5419 0D70  
                           l5371 105E                             l5363 0FC8  
                           l5355 0F8C                             l5523 1D8E  
                           l5179 2C28                             l5515 2ED8  
                           l5507 2B70                             l6171 14DC  
                           l5461 3130                             l4821 1EA8  
                           l5437 0E74                             l5445 0F06  
                           l5189 2304                             l5285 077C  
                           l5277 0728                             l5269 06D4  
                           l5533 1DF0                             l4823 1EB6  
                           l4815 1E8A                             l5439 0E7C  
                           l5391 115E                             l5375 1078  
                           l5367 0FE8                             l5359 0FA8  
                           l5703 1754                             l5535 1E02  
                           l5527 1DB6                             l5543 1E3C  
                           l5519 2EE6                             l6191 1542  
                           l6175 14E8                             l5465 3134  
                           l5457 2CCE                             l5721 17F0  
                           l4841 1F18                             l4833 1EF2  
                           l4825 1EC0                             l4809 1E72  
                           l5449 0F3C                             l5385 10E8  
                           l5393 117A                             l5289 07A6  
                           l5529 1DC8                             l5475 313E  
                           l5731 18C2                             l5387 10F0  
                           l5379 1082                             l5563 2558  
                           l5555 24F8                             l5539 1E2A  
                           l5803 0442                             l6179 14F2  
                           l4861 23D2                             l4853 23AE  
                           l5477 3154                             l5469 3138  
                           l5733 18DE                             l4837 1F02  
                           l5397 11B0                             l5709 1798  
                           l5557 2508                             l5821 04A8  
                           l5485 2F6C                             l5493 2B42  
                           l5901 0C98                             l6197 1554  
                           l4863 23DE                             l5575 3090  
                           l5559 2512                             l5815 0486  
                           l5911 0CCE               __CFG_WPFP$PAGE_127 000000  
                           l4793 29F8                             l4865 23E8  
                           l4873 241C                             l4857 23C0  
                           l4945 1B84                             l4961 2904  
                           l5809 0464                             l5745 0040  
                           l5497 2B54                             l5489 2B30  
                           l5833 0A62                             l5675 30E4  
                           l5587 2F24                             l4891 2034  
                           l4963 2912                             l5763 017E  
                           l5747 005E                             l5739 0006  
                           l5907 0CC8                             l5851 0AD8  
                           l4797 2A20                             l4877 242E  
                           l4869 240E                             l4789 334E  
                           l4973 294E                             l4965 291C  
                           l4981 2AD8                             l5773 01DE  
                           l5829 04CA                             l5853 0AE0  
                           l5837 0A6C                             l4887 2018  
                           l5695 1720                             l4983 2AE4  
                           l4889 202A                             l4985 2AEE  
                           l5881 0BEC                             l5873 0BA8  
                           l4899 208A                             l4995 27DE  
                           l5883 0BF4                             l5859 0B10  
                           l5971 1F50                             l5963 1F3C  
                           l4989 2B14                             l4997 27FE  
                           l5965 1F40                             l5895 0C5E  
                           l5991 1FC8                             l5983 1F86  
                           l5967 1F44                             l5975 1F56  
                           l5977 1F76                             l5899 0C7C  
                           l5987 1F96                             l5997 1FD8  
                           STR_1 FFE1                             STR_2 FFDD  
                           STR_3 FFD5                             STR_4 FFD1  
                           STR_5 FFE9                             STR_6 FFD9  
                           STR_7 FFE5                             STR_8 FFC3  
                           STR_9 FFBC                             u5070 26FA  
                           u5400 06EA                             u6200 1AF0  
                           u5080 272E                             u5410 0714  
                           u6210 1AF2                             u6220 2D98  
                           u5420 073E                             u6140 1A30  
                           u5077 26F0                             u5430 0768  
                           u6150 1A32                             u6310 1CB4  
                           u5087 2724                             u5440 0792  
                           u6160 1A70                             u6226 2D9A  
                           u6170 1A72                             u4900 1B30  
                           u6180 1AB0                             u6316 1CB6  
                           u4910 1B60                             u5390 06C0  
                           u6190 1AB2                             u4930 1B76  
                           u6507 2706                             u4940 1B78  
                           u4860 30C6                             u6517 232A  
                           u4950 1BCC                             u5735 2CB2  
                           u6527 2334                             u4960 1BCE  
                           u4928 1B64                             u5736 2CB4  
                           u6537 32F2                             u5745 2CBE  
                           u4890 1B2E                             u5746 2CC0  
                           u6547 3062                             u5755 2CCA  
                           u5756 2CCC                             u6557 3204  
                           u5765 2F50                             u5766 2F52  
                           u5775 2F5C                             u5776 2F5E  
                           u6497 302C                             u5785 2F68  
                           u5786 2F6A                             u5875 32D4  
                           u5955 1818                             u5876 32D6  
                           u5980 18B4                             _main 13C2  
       button_timer_interrupt@bt 00D3                             fsr0h 000FEA  
                           fsr1h 000FE2               i2___lwdiv@quotient 0005  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
               __end_of_I2C_Send 3318                             _utoa 27CE  
         __CFG_DSWDTOSC$T1OSCREF 000000                 __end_of_I2C_Stop 3394  
                           pclat 000FFA                 __end_of_I2C_init 338A  
                           prodh 000FF4                             prodl 000FF3  
                           start 0104                 __end_of_ADC_init 32E4  
                  __CFG_IESO$OFF 000000               __size_of_CTMU_init 0030  
             __size_of_CTMU_read 00AC    __size_of_RTCC_time_set_cursor 0056  
      __end_of_charge_time_count 2D8E                     ___param_bank 000010  
                  _I2C_LCD_Clear 32E4    __size_of_RTCC_time_set_toggle 0018  
                          ??_ADC 0022                            ADC@ch 00B9  
                  ADC_init@p_ref 0020                            ??_LED 0021  
                          ??_ISR 0011           __size_of_I2C_IdleCheck 0018  
                          ??_OUT 0021                _weekday_char_full 00F0  
              ??_RTCC_to_caltime 0022                    __CFG_PLLDIV$2 000000  
                   _BAUDCON1bits 000F7E                            ?_main 0001  
                 ??_get_quot_rem 0023                   ??_display_port 0023  
                __end_of___awdiv 1F24                            _ADRES 000FC3  
                          STR_10 FFB4                            STR_11 FF8F  
                          STR_20 FF70                            STR_12 FFAB  
                          STR_21 FF65                            STR_13 FFCA  
                          STR_22 FF12                            STR_30 FEEB  
                          STR_14 FFA2                            STR_15 FFF1  
                          STR_23 FF33                            STR_31 FF23  
                          STR_24 FFED                            STR_16 FF85  
                          STR_32 FF40                            STR_33 FF12  
                          STR_25 FFF4                            STR_17 FF7B  
                          STR_26 FFF7                            STR_34 FF99  
                          STR_18 FF59                            STR_27 FFFA  
                          STR_19 FF4D                            STR_28 FFFD  
                __end_of___awmod 243A                            STR_29 FEFF  
                __end_of___lldiv 20B0                            ?_utoa 00D3  
                ___awdiv@divisor 00BB                  __end_of___llmod 257C  
                          _LATB2 007C52                            _LATA5 007C4D  
                          _LATC2 007C5A                            _LATA6 007C4E  
                          _LATA7 007C4F                            _LATB6 007C56  
                          _LATB7 007C57                  __end_of___lwdiv 2968  
                 ?_sw_flag_clear 0020                  __end_of___lwmod 2B2C  
                          i2l239 2E4C                            i2l195 2E08  
                          i2l196 2E04                            i2l735 00CA  
                          i2l584 2F88                            i2l586 2F94  
                          i2l587 2FA0                  ___awdiv@counter 00BD  
                          i2_LED 2F84                            _TMR1H 000FCF  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94              ___lmul@multiplicand 00CA  
                 __CFG_FCMEN$OFF 000000                 __end_of_UART_ISR 2E26  
           caltime_to_epoch@year 00DA               __size_of_UART_init 0020  
          ringbuf_push@asciicode 0007                            _colon 0099  
             __size_of_RTCC_init 0030               __size_of_RTCC_loop 004C  
                          main@i 01C8                __end_of_I2C_Start 30CC  
                          tablat 000FF5                            plusw2 000FDB  
         ?_delay_timer_interrupt 0001                            utoa@d 00D8  
                   ?_integrating 0001                            utoa@v 00D9  
                          status 000FD8                  __end_of_tx_send 3378  
               __end_of_Delay_ms 3222                   delay_set@value 00BB  
             __size_ofi2___awdiv 0096                month_length@month 0022  
                    CTMU_read@ch 00C6               __size_ofi2___lldiv 008C  
             __size_ofi2___lwdiv 005C                   ?_I2C_LCD_Clear 0001  
                __initialization 2A5E                i2___lldiv@divisor 0005  
                   __end_of_main 155E                i2___lldiv@counter 000D  
                   __end_of_utoa 285A                 __end_of_Auto_cut 18EE  
            ringbuf_init@bufsize 00BD                 RTCC_from_RTCC@ep 0102  
               RTCC_from_RTCC@ct 0100                           ??_main 0023  
                         ??_utoa 0023                    __activetblptr 000003  
                         ?i2_LED 0001                __end_of_CTMU_init 312C  
              __end_of_CTMU_read 2394                           _BCL1IF 007D0B  
                  _I2C_IdleCheck 334A                           _ADCON0 000FC2  
                         _ADCON1 000FC1                 ___llmod@dividend 00C6  
              _I2C_LCD_SetCursor 315A              display_time_1602@ep 010D  
            display_time_1602@ct 010B                           _EECON2 000FA7  
                         _ANCON0 000F48                           _ANCON1 000F49  
               ___awdiv@dividend 00B9                           i2LED@b 0002  
             I2C_LCD_Command@ans 00BB                           i2l1203 28D4  
                         i2l1266 2BDA                           i2l3501 29AC  
                 __CFG_WDTEN$OFF 000000                           i2l4311 26A0  
                         i2l4303 2684                           i2l4321 287C  
                         i2l4323 288A                           i2l4307 2690  
                         i2l4403 1930                           i2l4333 28C4  
                         i2l4325 2892                           i2l4343 2B9E  
                         i2l4441 2D48                           i2l4345 2BA8  
                         i2l4409 19A6                           i2l4417 19EE  
                         i2l4427 2448                           i2l4291 2654  
                         i2l4355 2BCE                           i2l4347 2BB0  
                         i2l4445 2D82                           i2l4269 2FAC  
                         i2l4293 265E                           i2l4285 263E  
                         i2l4295 2666                           i2l4279 262C  
                         i2l4713 007E                           i2l4723 009E  
                         i2l4709 0070                           i2l4399 18FC  
                         i2l4729 00B0                           i2l3965 221C  
                         i2l3983 27C8                           i2l3977 27C4  
                         i2l4699 0058               ?_I2C_LCD_SetCursor 00BC  
                         _RCREG1 000FAF                           _RTCCAL 000F3E  
                         _SPBRG1 000FB0                           _SSP1IF 007CF3  
                 __CFG_WPCFG$OFF 000000                sw_flag_clear@port 0022  
                         _TXREG1 000FAE                   __CFG_WPDIS$OFF 000000  
             epoch_to_caltime@ep 00DC               epoch_to_caltime@ct 00DA  
            ??_I2C_LCD_SetCursor 0023                   __CFG_XINST$OFF 000000  
              ?_epoch_to_caltime 00DA       __size_of_charge_time_count 0054  
          caltime_to_epoch@epoch 00DC                     ?_ringbuf_pop 0005  
                   ?_ringbuf_num 0001            caltime_to_epoch@month 00E0  
                         ___lmul 29E4                  _caltime_to_RTCC 20B0  
                         ___wmul 2FC4               ??_epoch_to_caltime 00DE  
              __end_of_UART_init 32AA                        ??___awdiv 0020  
                      ??___awmod 0020                           _d_to_x 31B0  
                      ??___lldiv 0020                     ?_timer0_init 0001  
                      ??___llmod 0020                __end_of_RTCC_init 30FC  
                   ?_timer1_init 0020                        ??___lwdiv 0023  
              __end_of_RTCC_loop 2DDA                        ??___lwmod 0020  
                   ?_timer3_init 0001                           _lchika 18EE  
               _normal_mode_loop 1F24                           clear_0 2A64  
                         clear_1 2A70                           clear_2 2A7C  
                __CFG_CLKOEC$OFF 000000                 ___awdiv@quotient 00BF  
                ___awmod@divisor 00BB                  ??_sw_flag_clear 0022  
           __size_of_display_LCD 0508                  ___awmod@counter 0020  
                         _x_to_d 3318                           _rx_buf 01C9  
                         _tx_buf 01CE             __size_of_display_dec 0058  
                 i2___awdiv@sign 0006        __size_of_caltime_to_epoch 028C  
                   __pdataCOMRAM 003E                __end_ofi2___awdiv 26AC  
                      ?_I2C_Send 0001                        ?_I2C_Stop 0001  
              __end_ofi2___lldiv 28E6                __end_ofi2___lwdiv 2BE4  
                   __mediumconst FEEA                    _cut_time_flag 0037  
                      ?_I2C_init 0001        __end_of_I2C_LCD_SetCursor 3186  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                        ?_ADC_init 0001  
                 ?_I2C_IdleCheck 0001           delay_timer_interrupt@d 0001  
                      ??_tx_send 000D             __CFG_LS48MHZ$SYS48X8 000000  
                     __accesstop 0060          __end_of__initialization 2AC0  
                   CTMU_read@sum 00C7             __end_of_get_quot_rem 1CAC  
           __end_of_display_port 1E54                    ___rparam_used 000001  
                ??_I2C_LCD_Clear 00BC                  _RTCC_from_epoch 3246  
                  __end_ofi2_LED 2FC4             __CFG_WPEND$PAGE_WPFP 000000  
                 __pcstackCOMRAM 0001               i2___lldiv@dividend 0001  
                   __pidataBANK0 32AA                        ?_UART_ISR 0001  
                __CFG_DSWDTPS$G2 000000                       __end_of_IN 315A  
                _I2C_LCD_Command 3032               __size_of_delay_set 0024  
                        ??i2_LED 0002          sleep_loop@prev_power_sw 00FF  
               I2C_LCD_Command@c 00BA                       ??_I2C_Send 0022  
                     ??_I2C_Stop 0022                       ??_I2C_init 0020  
                      ?_Delay_ms 0020                       ??_ADC_init 0020  
     caltime_to_epoch@month_2000 00DB               i2___lldiv@quotient 0009  
             __size_of_main_init 009A                       __pbssBANK0 0060  
                     __pbssBANK1 01C9                        ?_Auto_cut 0001  
              _RTCC_time_set_dec 0CE6                _RTCC_time_set_inc 0F5E  
             __size_of_ctmu_loop 0102                        ISR@cnt_t0 002C  
                      ISR@cnt_t1 0040          __end_of_caltime_to_RTCC 2176  
                _RTCC_to_caltime 2230               ?_RTCC_time_set_dec 010E  
             ?_RTCC_time_set_inc 010E             __size_of_integrating 00A4  
                        ?___lmul 00C6                       ??_UART_ISR 000D  
                        ?___wmul 00BA              ??_RTCC_time_set_dec 0112  
            ??_RTCC_time_set_inc 0112                          ?_d_to_x 0001  
                        ?_lchika 0001             I2C_LCD_SetCursor@col 00BF  
                 ___lmul@product 00CE             I2C_LCD_SetCursor@row 00BC  
                        ?_x_to_d 0001                     I2C_Send@data 0022  
             __CFG_OSC$INTOSCPLL 000000                  ??_I2C_IdleCheck 0020  
          __end_of_RTCC_time_set 17DE     __end_of_RTCC_time_set_cursor 2C92  
                     ??_Delay_ms 0022       __size_of_I2C_LCD_SetCursor 002C  
   __end_of_RTCC_time_set_toggle 334A               __size_of_port_loop 028A  
         I2C_LCD_SetCursor@F9847 003E                  __CFG_WDTPS$1024 000000  
                        _SPBRGH1 000F7F                          _SSP1ADD 000FC8  
                        _SSP1BUF 000FC9                          _RTCVALH 000F3B  
                        _RTCVALL 000F3A          ??_delay_timer_interrupt 0003  
      __end_of_RTCC_time_set_dec 0F5E        __end_of_RTCC_time_set_inc 11D2  
        __end_of_RTCC_from_epoch 3268             timer1_init@prescaler 0022  
                     ??_Auto_cut 00C0                 __CFG_CFGPLLEN$ON 000000  
       ??_button_timer_interrupt 00D6                  integrating@port 0010  
              __end_of_delay_set 3246                    ?_month_length 0022  
            epoch_to_caltime@day 0102                RTCC_from_epoch@ep 010C  
              RTCC_from_epoch@ct 010A              epoch_to_caltime@num 0106  
                      _I2C_Start 309A                          __Hparam 0000  
                        __Lparam 0000          __end_of_I2C_LCD_Command 3068  
                 display_LCD@str 010F                    ?_ringbuf_init 00B9  
                        ___awdiv 1E54                  __size_of___lmul 007A  
                        ___awmod 2394                    ?_ringbuf_push 0005  
                        ___lldiv 1FEA                  __size_of___wmul 0038  
                        ___llmod 24DE                          ___lwdiv 28E6  
                        ___lwmod 2AC6                  __size_of_d_to_x 0026  
           __size_of_ringbuf_pop 0090             __size_of_ringbuf_num 007C  
                __CFG_STVREN$OFF 000000                  __size_of_lchika 010C  
              __end_of_main_init 2616      epoch_to_caltime@month_cache 00FE  
                        __pcinit 2A5E                          __ramtop 0F00  
           __size_of_timer0_init 0032             __size_of_timer1_init 0046  
                        __ptext0 13C2                          __ptext1 1CAC  
                        __ptext2 1F24                          __ptext3 0A5C  
                        __ptext4 2B2C                          __ptext5 2EB8  
                        __ptext6 3222                          __ptext7 2F44  
                        __ptext8 0000                          __ptext9 155E  
                  I2C_LCD_Putc@c 00BA             __size_of_timer3_init 0026  
              __end_of_ctmu_loop 1AFC                  __size_of_x_to_d 001A  
                  I2C_LCD_Puts@s 00BA                        _T0CONbits 000FD5  
                   __size_of_ADC 002A                     __size_of_LED 0040  
               _time_change_flag 003A                 _caltime_to_epoch 07D0  
                   __size_of_ISR 00FC                        _T1CONbits 000FCD  
                   __size_of_OUT 0054                          _cut_cnt 0084  
        __size_of_RTCC_from_RTCC 0022                        _T3CONbits 000F79  
               ___awmod@dividend 00B9                        _T5CONbits 000F22  
        __end_of_RTCC_to_caltime 22E8                          _tx_send 3362  
                        lchika@i 000C            __size_of_get_quot_rem 00D6  
          __size_of_display_port 00D4             end_of_initialization 2AC0  
                     delay_set@d 00B9                        _CTMU_init 30FC  
                      _CTMU_read 22E8         __end_of_normal_mode_loop 1FEA  
                   _CTMUCONHbits 000FB3                     _CTMUCONLbits 000FB2  
                 ??_month_length 00BD                   display_dec@dec 010A  
                 display_dec@str 0100                      sleep_loop@i 00E1  
               ?_caltime_to_RTCC 0021                       ?_I2C_Start 0022  
                ___lldiv@divisor 00BD             timer3_init@prescaler 0021  
                ___lldiv@counter 00C5                   ??_ringbuf_init 0020  
              __end_of_port_loop 0CE6                       _sleep_flag 009C  
                 ??_ringbuf_push 0008                          postdec1 000FE5  
                        postdec2 000FDD                       _sleep_loop 1CAC  
           sw_flag_clear@bit_and 0020                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                        utoa@str 00D3                        _PORTBbits 000F81  
                      _UART_init 328A                 __CFG_DSBOREN$OFF 000000  
                      _RTCC_init 30CC                        _RTCC_loop 2D8E  
                   _display_flag 0038        epoch_to_caltime@day_cache 0096  
                   _get_quot_rem 1BD6                     _display_port 1D80  
                     _print_port 0039        __size_of_epoch_to_caltime 01F0  
               __CFG_CPUDIV$OSC1 000000                __size_of_I2C_Send 001A  
              __size_of_I2C_Stop 000A                        i2___awdiv 2616  
     __size_of_RTCC_time_set_dec 0278                __size_of_I2C_init 0012  
     __size_of_RTCC_time_set_inc 0274                i2___lwdiv@divisor 0003  
                      i2___lldiv 285A                __size_of_ADC_init 001C  
                      i2___lwdiv 2B88                i2___lwdiv@counter 0007  
               ?_RTCC_from_epoch 010A                       ?_CTMU_init 0001  
                     ?_CTMU_read 0020                        Auto_cut@i 00C2  
__size_of_button_timer_interrupt 02C8          timer1_init@clock_select 0020  
               __CFG_IOL1WAY$OFF 000000               i2___awdiv@dividend 0001  
           _RTCC_time_set_cursor 2C3C              __CFG_MSSP7B_EN$MSK7 000000  
               ?_I2C_LCD_Command 0001                   ringbuf_init@rb 00B9  
                     lchika@cntf 0093             _RTCC_time_set_toggle 3332  
                  ??_display_LCD 0023                   ringbuf_pop@ret 000A  
                  ??_display_dec 0023                   __end_of___lmul 2A5E  
                 __end_of___wmul 2FFC                    ?_sw_flag_read 0020  
                 ringbuf_push@rb 0005                   __end_of_d_to_x 31D6  
                  __pidataCOMRAM 3394                __size_of_UART_ISR 004C  
                 __end_of_lchika 19FA                       ?_UART_init 0001  
                     ?_RTCC_init 0001                       ?_RTCC_loop 0001  
               __CFG_DSWDTEN$OFF 000000            __end_of_sw_flag_clear 2EFE  
                 __end_of_x_to_d 3332            epoch_to_caltime@month 0105  
            start_initialization 2A5E                       CTMU_read@i 00CB  
               month_length@year 00C1                      __end_of_ADC 31B0  
             i2___awdiv@quotient 0007                      __end_of_LED 2F84  
           RTCC_time_set@cnt_dec 011C                      __end_of_ISR 0104  
           RTCC_time_set@cnt_inc 011A                      __end_of_OUT 2CE6  
                  ?_I2C_LCD_Putc 0001                    ?_I2C_LCD_Puts 00BA  
                  ?_I2C_LCD_init 0001                       ?i2___awdiv 0001  
              __size_of_Delay_ms 0026                       ?i2___lldiv 0001  
               ?_RTCC_to_caltime 00B9                       ?i2___lwdiv 0001  
                ___llmod@divisor 00CA                __size_of_Auto_cut 0110  
                    ??_I2C_Start 0023                  ___llmod@counter 0020  
          ?_RTCC_time_set_cursor 0001            __end_of_I2C_LCD_Clear 32FE  
          ?_RTCC_time_set_toggle 0001                         ??___lmul 0023  
                    ?_sleep_loop 0001                         ??___wmul 0023  
                       ??_d_to_x 0020                   ??_sw_flag_read 0022  
              __CFG_ADCSEL$BIT12 000000                      __pdataBANK0 00E2  
                       ??_lchika 0009           _button_timer_interrupt 0508  
                       ??_x_to_d 0020             __end_of_month_length 1BD6  
                 _RTCC_from_RTCC 3268              __end_of_display_LCD 0508  
            __end_of_display_dec 2C3C                      __pbssCOMRAM 0023  
            RTCC_to_caltime@dumy 0022                         LED@value 0020  
                  __pcstackBANK0 00B9                    __pcstackBANK1 0100  
                  __pcstackBANK2 0200                   ??_I2C_LCD_Putc 0023  
               sw_flag_read@port 0022                   ??_I2C_LCD_Puts 00BC  
                 ??_I2C_LCD_init 0023                      _caltime_now 009E  
                  _delay_display 003B             __end_of_ringbuf_init 2EB8  
                    _charge_time 006C             __end_of_ringbuf_push 2230  
               tx_send@asciicode 000D                      ??_CTMU_init 0020  
                    ??_CTMU_read 0022   __size_of_delay_timer_interrupt 004A  
  __end_of_delay_timer_interrupt 2E70                    ??_integrating 000E  
       __end_of_caltime_to_epoch 0A5C                         ISR@ascii 001F  
               ___lwdiv@dividend 00CC                        _delay_set 3222  
                      _edit_flag 009A                        __pintcode 0008  
                  __pmediumconst FEEA                         ?___awdiv 00B9  
                       ?___awmod 00B9                         ?___lldiv 00B9  
             charge_time_count@i 0003                         ?___llmod 00C6  
                       ?___lwdiv 00CC                         ?___lwmod 00B9  
                I2C_LCD_Putc@ans 00BB           __end_of_RTCC_from_RTCC 328A  
                I2C_LCD_Puts@ans 00BD                      ??_UART_init 0020  
                    ??_RTCC_init 0020                      ??_RTCC_loop 0023  
                 __size_ofi2_LED 0040                        _epoch_now 00B5  
                      _main_init 257C                      I2C_Start@rw 0022  
               _epoch_to_caltime 11D2                         _I2C_Send 32FE  
                       OUT@value 0020                         _I2C_Stop 338A  
           __CFG_RTCOSC$T1OSCREF 000000                        _ctmu_flag 0036  
                       _I2C_init 3378                 _display_LCD$3082 0119  
                      _ctmu_loop 19FA                         _ADC_init 32C8  
          __end_of_I2C_IdleCheck 3362                      _PADCFG1bits 000F3C  
               ___lwdiv@quotient 00D1                      ??i2___awdiv 0005  
                       ?_tx_send 0001                      ??i2___lldiv 0009  
                    ??i2___lwdiv 0005              __size_of_sleep_loop 00D4  
                    __size_of_IN 002E                        d_to_x@dec 0020  
                       _CTMUCONH 000FB3                         _CTMUCONL 000FB2  
                       _CTMUICON 000FB1                ?_normal_mode_loop 0001  
       ringbuf_init@internal_buf 00BB                   ___wmul@product 00BE  
             ??_normal_mode_loop 0023                         _IPR1bits 000F9F  
                       _IPR2bits 000FA2                         _PIE1bits 000F9D  
         ??_RTCC_time_set_cursor 0020                         _PIE2bits 000FA0  
                       _IPR5bits 000F99                         _PIE5bits 000F91  
         ??_RTCC_time_set_toggle 0020                       ?_delay_set 00B9  
                       _PIR1bits 000F9E                         _PIR2bits 000FA1  
                       i2u429_40 2D66                         _PIR5bits 000F98  
     epoch_to_caltime@year_cache 009D           __size_of_RTCC_time_set 012C  
                       i2u397_45 2F90                         i2u397_46 2F92  
                       i2u398_45 2F9C                         i2u398_46 2F9E  
                       i2u399_45 2FA8                         i2u399_46 2FAA  
                  ??_ringbuf_pop 0007                    ??_ringbuf_num 0003  
            __end_of_integrating 24DE                _display_time_1602 155E  
                       _UART_ISR 2DDA                         _SSP1CON1 000FC6  
                       _SSP1CON2 000FC5                    ??_timer0_init 0020  
                  ??_timer1_init 0021                      _display_LCD 0000  
                  ??_timer3_init 0020                         _SSP1STAT 000FC7  
             ?_display_time_1602 010B                      _display_dec 2BE4  
                      _port_loop 0A5C                  ?_RTCC_from_RTCC 0100  
                     _ADCON0bits 000FC2                       _ADCON1bits 000FC1  
              ___wmul@multiplier 00BA                 __CFG_SOSCSEL$LOW 000000  
 button_timer_interrupt@sw_value 00D5                       ?_main_init 0001  
            ??_display_time_1602 00E1                i2___awdiv@divisor 0003  
                       _Delay_ms 31FC                i2___awdiv@counter 0005  
                     ?_ctmu_loop 0001                        lchika@cnt 0090  
                  ringbuf_pop@rb 0005                    ringbuf_num@rb 0001  
                  I2C_Start@adrs 00B9                ___lmul@multiplier 00C6  
                    _INTCON2bits 000FF1                        copy_data0 2A96  
                     port_loop@i 00BD             __end_of_sw_flag_read 2B88  
                       _Auto_cut 17DE             epoch_to_caltime@year 0104  
                    _auto_cut_ON 0029        __end_of_display_time_1602 16B2  
                       __Hrparam 0000                      _ctmu_value0 002E  
                    _ctmu_value1 0030                      _ctmu_value2 0032  
                    _ctmu_valuem 0034                         __Lrparam 0000  
           __end_of_I2C_LCD_Putc 3032             __end_of_I2C_LCD_Puts 273E  
           __end_of_I2C_LCD_init 2D3A            __size_of_month_length 00DA  
            RTCC_time_set_dec@ep 0110              RTCC_time_set_dec@ct 010E  
       __size_of_caltime_to_RTCC 00C6                 __size_of___awdiv 00D0  
               __size_of___awmod 00A6                I2C_IdleCheck@mask 0021  
               __size_of___lldiv 00C6                 __size_of___llmod 009E  
                     utoa@digits 00D7                 __size_of___lwdiv 0082  
            RTCC_time_set_inc@ep 0110              RTCC_time_set_inc@ct 010E  
               __size_of___lwmod 0066                       ?_port_loop 0001  
            __end_of_ringbuf_pop 27CE              __end_of_ringbuf_num 29E4  
            __end_of_timer0_init 309A            __size_of_ringbuf_init 0048  
            __end_of_timer1_init 2F44              __end_of_timer3_init 31FC  
          __size_of_ringbuf_push 00BA                    _RTCC_time_set 16B2  
                     i2LED@value 0001                  ___lwdiv@divisor 00CE  
                ___lwdiv@counter 00D0             timer0_init@prescaler 0021  
                       __ptext10 2BE4                         __ptext11 27CE  
                       __ptext20 28E6                         __ptext12 2AC6  
                       __ptext21 22E8                         __ptext13 2FFC  
                       __ptext30 20B0                         __ptext22 16B2  
                       __ptext14 1D80                         __ptext31 31B0  
                       __ptext23 3332                         __ptext15 315A  
                       __ptext40 31D6                         __ptext32 1E54  
                       __ptext24 0F5E                         __ptext16 26AC  
                       __ptext41 2EFE                         __ptext33 2C3C  
                       __ptext25 0CE6                         __ptext17 24DE  
                       __ptext50 338A                         __ptext42 3068  
                       __ptext34 17DE                         __ptext26 3246  
                       __ptext18 19FA                         __ptext51 309A  
                       __ptext43 2E70                         __ptext35 2FC4  
                       __ptext27 11D2                         __ptext19 0508  
                       __ptext60 1AFC                         __ptext52 32FE  
                       __ptext44 328A                         __ptext36 2C92  
                       __ptext28 1BD6                         __ptext61 2394  
                       __ptext53 334A                         __ptext45 30CC  
                       __ptext37 312C                         __ptext29 1FEA  
                       __ptext70 2F84                         __ptext62 29E4  
                       __ptext54 31FC                         __ptext46 3378  
                       __ptext38 3186                         __ptext71 243A  
                       __ptext63 2230                         __ptext55 30FC  
                       __ptext47 2CE6                         __ptext39 257C  
                       __ptext72 285A                         __ptext64 3318  
                       __ptext56 32C8                         __ptext48 32E4  
                       __ptext73 2E26                         __ptext57 2D8E  
                       __ptext49 3032                         __ptext74 2D3A  
                       __ptext66 3362                         __ptext58 3268  
                       __ptext75 2DDA                         __ptext67 18EE  
                       __ptext59 07D0                         __ptext76 2176  
                       __ptext68 2B88                         __ptext77 273E  
                       __ptext69 2616                         __ptext78 2968  
                   _SSP1CON2bits 000FC5            RTCC_loop@prev_halfsec 0098  
               __size_of_tx_send 0016                      _integrating 243A  
                  __size_of_main 019C                    __size_of_utoa 008C  
                   _month_length 1AFC         __size_of_RTCC_from_epoch 0022  
                    ??_delay_set 0020                     ??_sleep_loop 0023  
        ?_button_timer_interrupt 00D3                         _out_flag 008D  
                   _ringbuf_init 2E70                     _ringbuf_push 2176  
                      x_to_d@hex 0021         __size_of_I2C_LCD_Command 0036  
                 main_init@rxbuf 0200                   main_init@txbuf 0100  
                    ??_main_init 0023                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                   ?_RTCC_time_set 0118  
                    ??_ctmu_loop 0023     I2C_LCD_SetCursor@row_offsets 00BD  
                     Delay_ms@ms 0020                  display_dec@edit 00DB  
             RTCC_time_set_dec@i 0117                 get_quot_rem@quot 00D2  
             RTCC_time_set_inc@i 0117                RTCC_to_caltime@ct 00B9  
                   _weekday_char 00E2                        utoa@value 00D5  
                       intlevel2 0000               __end_of_sleep_loop 1D80  
               ___lwmod@dividend 00B9                 ___lldiv@dividend 00B9  
                     _RCSTA1bits 000FAC                ?_caltime_to_epoch 00D2  
     __size_of_display_time_1602 0154         __end_of_epoch_to_caltime 13C2  
         __size_of_sw_flag_clear 0046         __size_of_RTCC_to_caltime 00B8  
                  _print_content 009B                       _OSCCONbits 000FD3  
 __end_of_button_timer_interrupt 07D0               ??_caltime_to_epoch 00D6  
        RTCC_time_set_dec@i_2077 0116                      _ringbuf_pop 273E  
                    _ringbuf_num 2968                      _timer0_init 3068  
                    _timer1_init 2EFE                      _timer3_init 31D6  
              RTCC_time_set@mode 0118                      ??_port_loop 0023  
                get_quot_rem@div 00D4                  get_quot_rem@num 00D6  
                     _RTCCFGbits 000F3F                 ___lldiv@quotient 00C1  
              caltime_to_RTCC@ct 0021                  ___lwmod@divisor 00BB  
              ??_caltime_to_RTCC 0023                  ___lwmod@counter 0020  
          __size_of_sw_flag_read 005C           __size_of_I2C_LCD_Clear 001A  
epoch_to_caltime@day_since_epoch 0100            __size_of_I2C_LCD_Putc 0036  
          __size_of_I2C_LCD_Puts 0092            _delay_timer_interrupt 2E26  
          __size_of_I2C_LCD_init 0054                 ??_RTCC_from_RTCC 0023  
