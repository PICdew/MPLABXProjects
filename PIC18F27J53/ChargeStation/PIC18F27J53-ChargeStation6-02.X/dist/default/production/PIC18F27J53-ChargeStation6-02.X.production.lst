

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat May 30 09:03:30 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    91  0000                     
    92                           	psect	idataCOMRAM
    93  004096                     __pidataCOMRAM:
    94                           	opt stack 0
    95                           
    96                           ;initializer for I2C_LCD_SetCursor@F9846
    97  004096  00                 	db	0
    98  004097  40                 	db	64
    99                           
   100                           	psect	idataBANK0
   101  003FDC                     __pidataBANK0:
   102                           	opt stack 0
   103                           
   104                           ;initializer for _weekday_char
   105  003FDC  0F9E               	dw	STR_1& (0+65535)
   106  003FDE  0F9A               	dw	STR_2& (0+65535)
   107  003FE0  0F92               	dw	STR_3& (0+65535)
   108  003FE2  0F8E               	dw	STR_4& (0+65535)
   109  003FE4  0FA6               	dw	STR_5& (0+65535)
   110  003FE6  0F96               	dw	STR_6& (0+65535)
   111  003FE8  0FA2               	dw	STR_7& (0+65535)
   112                           
   113                           ;initializer for _weekday_char_full
   114  003FEA  0F6A               	dw	STR_8& (0+65535)
   115  003FEC  0F63               	dw	STR_9& (0+65535)
   116  003FEE  0F3F               	dw	STR_10& (0+65535)
   117  003FF0  0F01               	dw	STR_11& (0+65535)
   118  003FF2  0F26               	dw	STR_12& (0+65535)
   119  003FF4  0F71               	dw	STR_13& (0+65535)
   120  003FF6  0F1D               	dw	STR_14& (0+65535)
   121                           
   122                           ;initializer for epoch_to_caltime@month_cache
   123  003FF8  01                 	db	1
   124                           
   125                           ;initializer for sleep_loop@prev_power_sw
   126  003FF9  01                 	db	1
   127  0000                     _ADRES	set	4035
   128  0000                     _ADCON0	set	4034
   129  0000                     _ADCON0bits	set	4034
   130  0000                     _ADCON1	set	4033
   131  0000                     _ADCON1bits	set	4033
   132  0000                     _ANCON0	set	3912
   133  0000                     _ANCON1	set	3913
   134  0000                     _BAUDCON1bits	set	3966
   135  0000                     _CTMUCONH	set	4019
   136  0000                     _CTMUCONHbits	set	4019
   137  0000                     _CTMUCONL	set	4018
   138  0000                     _CTMUCONLbits	set	4018
   139  0000                     _CTMUICON	set	4017
   140  0000                     _EECON2	set	4007
   141  0000                     _INTCON2bits	set	4081
   142  0000                     _INTCONbits	set	4082
   143  0000                     _IPR1bits	set	3999
   144  0000                     _IPR2bits	set	4002
   145  0000                     _IPR5bits	set	3993
   146  0000                     _OSCCONbits	set	4051
   147  0000                     _OSCTUNEbits	set	3995
   148  0000                     _PADCFG1bits	set	3900
   149  0000                     _PIE1bits	set	3997
   150  0000                     _PIE2bits	set	4000
   151  0000                     _PIE5bits	set	3985
   152  0000                     _PIR1bits	set	3998
   153  0000                     _PIR2bits	set	4001
   154  0000                     _PIR5bits	set	3992
   155  0000                     _PORTAbits	set	3968
   156  0000                     _PORTBbits	set	3969
   157  0000                     _RCREG1	set	4015
   158  0000                     _RCSTA1bits	set	4012
   159  0000                     _RTCCAL	set	3902
   160  0000                     _RTCCFGbits	set	3903
   161  0000                     _RTCVALH	set	3899
   162  0000                     _RTCVALL	set	3898
   163  0000                     _SPBRG1	set	4016
   164  0000                     _SPBRGH1	set	3967
   165  0000                     _SSP1ADD	set	4040
   166  0000                     _SSP1BUF	set	4041
   167  0000                     _SSP1CON1	set	4038
   168  0000                     _SSP1CON2	set	4037
   169  0000                     _SSP1CON2bits	set	4037
   170  0000                     _SSP1STAT	set	4039
   171  0000                     _T0CONbits	set	4053
   172  0000                     _T1CONbits	set	4045
   173  0000                     _T3CONbits	set	3961
   174  0000                     _T5CONbits	set	3874
   175  0000                     _TMR1H	set	4047
   176  0000                     _TRISA	set	3986
   177  0000                     _TRISB	set	3987
   178  0000                     _TRISC	set	3988
   179  0000                     _TXREG1	set	4014
   180  0000                     _TXSTA1bits	set	4013
   181  0000                     _BCL1IF	set	32011
   182  0000                     _LATA5	set	31821
   183  0000                     _LATA6	set	31822
   184  0000                     _LATA7	set	31823
   185  0000                     _LATB2	set	31826
   186  0000                     _LATB6	set	31830
   187  0000                     _LATB7	set	31831
   188  0000                     _LATC2	set	31834
   189  0000                     _SSP1IF	set	31987
   190                           
   191                           	psect	smallconst
   192  000F00                     __psmallconst:
   193                           	opt stack 0
   194  000F00  00                 	db	0
   195  000F01                     __stringdata:
   196                           	opt stack 0
   197  000F01                     STR_11:
   198  000F01  57                 	db	87	;'W'
   199  000F02  65                 	db	101	;'e'
   200  000F03  64                 	db	100	;'d'
   201  000F04  6E                 	db	110	;'n'
   202  000F05  65                 	db	101	;'e'
   203  000F06  73                 	db	115	;'s'
   204  000F07  64                 	db	100	;'d'
   205  000F08  61                 	db	97	;'a'
   206  000F09  79                 	db	121	;'y'
   207  000F0A  00                 	db	0
   208  000F0B                     STR_27:
   209  000F0B  41                 	db	65	;'A'
   210  000F0C  6C                 	db	108	;'l'
   211  000F0D  77                 	db	119	;'w'
   212  000F0E  61                 	db	97	;'a'
   213  000F0F  79                 	db	121	;'y'
   214  000F10  73                 	db	115	;'s'
   215  000F11  4F                 	db	79	;'O'
   216  000F12  4E                 	db	78	;'N'
   217  000F13  00                 	db	0
   218  000F14                     STR_28:
   219  000F14  41                 	db	65	;'A'
   220  000F15  75                 	db	117	;'u'
   221  000F16  74                 	db	116	;'t'
   222  000F17  6F                 	db	111	;'o'
   223  000F18  53                 	db	83	;'S'
   224  000F19  74                 	db	116	;'t'
   225  000F1A  6F                 	db	111	;'o'
   226  000F1B  70                 	db	112	;'p'
   227  000F1C  00                 	db	0
   228  000F1D                     STR_14:
   229  000F1D  53                 	db	83	;'S'
   230  000F1E  61                 	db	97	;'a'
   231  000F1F  74                 	db	116	;'t'
   232  000F20  75                 	db	117	;'u'
   233  000F21  72                 	db	114	;'r'
   234  000F22  64                 	db	100	;'d'
   235  000F23  61                 	db	97	;'a'
   236  000F24  79                 	db	121	;'y'
   237  000F25  00                 	db	0
   238  000F26                     STR_12:
   239  000F26  54                 	db	84	;'T'
   240  000F27  68                 	db	104	;'h'
   241  000F28  75                 	db	117	;'u'
   242  000F29  72                 	db	114	;'r'
   243  000F2A  73                 	db	115	;'s'
   244  000F2B  64                 	db	100	;'d'
   245  000F2C  61                 	db	97	;'a'
   246  000F2D  79                 	db	121	;'y'
   247  000F2E  00                 	db	0
   248  000F2F                     STR_26:
   249  000F2F  52                 	db	82	;'R'
   250  000F30  65                 	db	101	;'e'
   251  000F31  73                 	db	115	;'s'
   252  000F32  65                 	db	101	;'e'
   253  000F33  74                 	db	116	;'t'
   254  000F34  65                 	db	101	;'e'
   255  000F35  64                 	db	100	;'d'
   256  000F36  00                 	db	0
   257  000F37                     STR_23:
   258  000F37  53                 	db	83	;'S'
   259  000F38  74                 	db	116	;'t'
   260  000F39  61                 	db	97	;'a'
   261  000F3A  74                 	db	116	;'t'
   262  000F3B  69                 	db	105	;'i'
   263  000F3C  6F                 	db	111	;'o'
   264  000F3D  6E                 	db	110	;'n'
   265  000F3E  00                 	db	0
   266  000F3F                     STR_10:
   267  000F3F  54                 	db	84	;'T'
   268  000F40  75                 	db	117	;'u'
   269  000F41  65                 	db	101	;'e'
   270  000F42  73                 	db	115	;'s'
   271  000F43  64                 	db	100	;'d'
   272  000F44  61                 	db	97	;'a'
   273  000F45  79                 	db	121	;'y'
   274  000F46  00                 	db	0
   275  000F47                     STR_25:
   276  000F47  52                 	db	82	;'R'
   277  000F48  65                 	db	101	;'e'
   278  000F49  73                 	db	115	;'s'
   279  000F4A  65                 	db	101	;'e'
   280  000F4B  74                 	db	116	;'t'
   281  000F4C  3F                 	db	63	;'?'
   282  000F4D  00                 	db	0
   283  000F4E                     STR_19:
   284  000F4E  43                 	db	67	;'C'
   285  000F4F  45                 	db	69	;'E'
   286  000F50  4E                 	db	78	;'N'
   287  000F51  54                 	db	84	;'T'
   288  000F52  45                 	db	69	;'E'
   289  000F53  52                 	db	82	;'R'
   290  000F54  00                 	db	0
   291  000F55                     STR_22:
   292  000F55  43                 	db	67	;'C'
   293  000F56  68                 	db	104	;'h'
   294  000F57  61                 	db	97	;'a'
   295  000F58  72                 	db	114	;'r'
   296  000F59  67                 	db	103	;'g'
   297  000F5A  65                 	db	101	;'e'
   298  000F5B  00                 	db	0
   299  000F5C                     STR_18:
   300  000F5C  43                 	db	67	;'C'
   301  000F5D  65                 	db	101	;'e'
   302  000F5E  6E                 	db	110	;'n'
   303  000F5F  74                 	db	116	;'t'
   304  000F60  65                 	db	101	;'e'
   305  000F61  72                 	db	114	;'r'
   306  000F62  00                 	db	0
   307  000F63                     STR_9:
   308  000F63  4D                 	db	77	;'M'
   309  000F64  6F                 	db	111	;'o'
   310  000F65  6E                 	db	110	;'n'
   311  000F66  64                 	db	100	;'d'
   312  000F67  61                 	db	97	;'a'
   313  000F68  79                 	db	121	;'y'
   314  000F69  00                 	db	0
   315  000F6A                     STR_8:
   316  000F6A  53                 	db	83	;'S'
   317  000F6B  75                 	db	117	;'u'
   318  000F6C  6E                 	db	110	;'n'
   319  000F6D  64                 	db	100	;'d'
   320  000F6E  61                 	db	97	;'a'
   321  000F6F  79                 	db	121	;'y'
   322  000F70  00                 	db	0
   323  000F71                     STR_13:
   324  000F71  46                 	db	70	;'F'
   325  000F72  72                 	db	114	;'r'
   326  000F73  79                 	db	121	;'y'
   327  000F74  64                 	db	100	;'d'
   328  000F75  61                 	db	97	;'a'
   329  000F76  79                 	db	121	;'y'
   330  000F77  00                 	db	0
   331  000F78                     STR_17:
   332  000F78  52                 	db	82	;'R'
   333  000F79  49                 	db	73	;'I'
   334  000F7A  47                 	db	71	;'G'
   335  000F7B  48                 	db	72	;'H'
   336  000F7C  54                 	db	84	;'T'
   337  000F7D  00                 	db	0
   338  000F7E                     STR_16:
   339  000F7E  52                 	db	82	;'R'
   340  000F7F  69                 	db	105	;'i'
   341  000F80  67                 	db	103	;'g'
   342  000F81  68                 	db	104	;'h'
   343  000F82  74                 	db	116	;'t'
   344  000F83  00                 	db	0
   345  000F84                     STR_21:
   346  000F84  4C                 	db	76	;'L'
   347  000F85  45                 	db	69	;'E'
   348  000F86  46                 	db	70	;'F'
   349  000F87  54                 	db	84	;'T'
   350  000F88  00                 	db	0
   351  000F89                     STR_20:
   352  000F89  4C                 	db	76	;'L'
   353  000F8A  65                 	db	101	;'e'
   354  000F8B  66                 	db	102	;'f'
   355  000F8C  74                 	db	116	;'t'
   356  000F8D  00                 	db	0
   357  000F8E                     STR_4:
   358  000F8E  57                 	db	87	;'W'
   359  000F8F  45                 	db	69	;'E'
   360  000F90  44                 	db	68	;'D'
   361  000F91  00                 	db	0
   362  000F92                     STR_3:
   363  000F92  54                 	db	84	;'T'
   364  000F93  55                 	db	85	;'U'
   365  000F94  45                 	db	69	;'E'
   366  000F95  00                 	db	0
   367  000F96                     STR_6:
   368  000F96  46                 	db	70	;'F'
   369  000F97  52                 	db	82	;'R'
   370  000F98  49                 	db	73	;'I'
   371  000F99  00                 	db	0
   372  000F9A                     STR_2:
   373  000F9A  4D                 	db	77	;'M'
   374  000F9B  4F                 	db	79	;'O'
   375  000F9C  4E                 	db	78	;'N'
   376  000F9D  00                 	db	0
   377  000F9E                     STR_1:
   378  000F9E  53                 	db	83	;'S'
   379  000F9F  55                 	db	85	;'U'
   380  000FA0  4E                 	db	78	;'N'
   381  000FA1  00                 	db	0
   382  000FA2                     STR_7:
   383  000FA2  53                 	db	83	;'S'
   384  000FA3  41                 	db	65	;'A'
   385  000FA4  54                 	db	84	;'T'
   386  000FA5  00                 	db	0
   387  000FA6                     STR_5:
   388  000FA6  54                 	db	84	;'T'
   389  000FA7  48                 	db	72	;'H'
   390  000FA8  55                 	db	85	;'U'
   391  000FA9  00                 	db	0
   392  000FAA                     STR_24:
   393  000FAA  6D                 	db	109	;'m'
   394  000FAB  41                 	db	65	;'A'
   395  000FAC  68                 	db	104	;'h'
   396  000FAD  00                 	db	0
   397  000FAE                     STR_15:
   398  000FAE  20                 	db	32
   399  000FAF  20                 	db	32
   400  000FB0  00                 	db	0
   401  000FB1                     __end_of__stringdata:
   402                           	opt stack 0
   403                           
   404                           ; #config settings
   405  000FB1  00                 	db	0	; dummy byte at the end
   406  0000                     
   407                           	psect	cinit
   408  003826                     __pcinit:
   409                           	opt stack 0
   410  003826                     start_initialization:
   411                           	opt stack 0
   412  003826                     __initialization:
   413                           	opt stack 0
   414                           
   415                           ; Clear objects allocated to BANK1 (5 bytes)
   416  003826  0101               	movlb	1
   417  003828  6BCD               	clrf	(__pbssBANK1+4)& (0+255),b
   418  00382A  6BCC               	clrf	(__pbssBANK1+3)& (0+255),b
   419  00382C  6BCB               	clrf	(__pbssBANK1+2)& (0+255),b
   420  00382E  6BCA               	clrf	(__pbssBANK1+1)& (0+255),b
   421  003830  6BC9               	clrf	__pbssBANK1& (0+255),b
   422                           
   423                           ; Clear objects allocated to BANK0 (61 bytes)
   424  003832  EE00  F0A5         	lfsr	0,__pbssBANK0
   425  003836  0E3D               	movlw	61
   426  003838                     clear_0:
   427  003838  6AEE               	clrf	postinc0,c
   428  00383A  06E8               	decf	wreg,f,c
   429  00383C  E1FD               	bnz	clear_0
   430                           
   431                           ; Clear objects allocated to COMRAM (31 bytes)
   432  00383E  EE00  F022         	lfsr	0,__pbssCOMRAM
   433  003842  0E1F               	movlw	31
   434  003844                     clear_1:
   435  003844  6AEE               	clrf	postinc0,c
   436  003846  06E8               	decf	wreg,f,c
   437  003848  E1FD               	bnz	clear_1
   438                           
   439                           ; Initialize objects allocated to BANK0 (30 bytes)
   440                           ; load TBLPTR registers with __pidataBANK0
   441  00384A  0EDC               	movlw	low __pidataBANK0
   442  00384C  6EF6               	movwf	tblptrl,c
   443  00384E  0E3F               	movlw	high __pidataBANK0
   444  003850  6EF7               	movwf	tblptrh,c
   445  003852  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   446  003854  6EF8               	movwf	tblptru,c
   447  003856  EE00  F0E2         	lfsr	0,__pdataBANK0
   448  00385A  EE10 F01E          	lfsr	1,30
   449  00385E                     copy_data0:
   450  00385E  0009               	tblrd		*+
   451  003860  CFF5 FFEE          	movff	tablat,postinc0
   452  003864  50E5               	movf	postdec1,w,c
   453  003866  50E1               	movf	fsr1l,w,c
   454  003868  E1FA               	bnz	copy_data0
   455                           
   456                           ; Initialize objects allocated to COMRAM (2 bytes)
   457                           ; load TBLPTR registers with __pidataCOMRAM
   458  00386A  0E96               	movlw	low __pidataCOMRAM
   459  00386C  6EF6               	movwf	tblptrl,c
   460  00386E  0E40               	movlw	high __pidataCOMRAM
   461  003870  6EF7               	movwf	tblptrh,c
   462  003872  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   463  003874  6EF8               	movwf	tblptru,c
   464  003876  0009               	tblrd		*+	;fetch initializer
   465  003878  CFF5 F041          	movff	tablat,__pdataCOMRAM
   466  00387C  0009               	tblrd		*+	;fetch initializer
   467  00387E  CFF5 F042          	movff	tablat,__pdataCOMRAM+1
   468  003882                     end_of_initialization:
   469                           	opt stack 0
   470  003882                     __end_of__initialization:
   471                           	opt stack 0
   472  003882  0100               	movlb	0
   473  003884  EF88  F011         	goto	_main	;jump to C main() function
   474                           tblptru	equ	0xFF8
   475                           tblptrh	equ	0xFF7
   476                           tblptrl	equ	0xFF6
   477                           tablat	equ	0xFF5
   478                           postinc0	equ	0xFEE
   479                           wreg	equ	0xFE8
   480                           postdec1	equ	0xFE5
   481                           fsr1l	equ	0xFE1
   482                           
   483                           	psect	bssCOMRAM
   484  000022                     __pbssCOMRAM:
   485                           	opt stack 0
   486  000022                     _I:
   487                           	opt stack 0
   488  000022                     	ds	6
   489  000028                     _auto_cut_ON:
   490                           	opt stack 0
   491  000028                     	ds	3
   492  00002B                     lchika@cnt:
   493                           	opt stack 0
   494  00002B                     	ds	3
   495  00002E                     ISR@cnt_t0:
   496                           	opt stack 0
   497  00002E                     	ds	2
   498  000030                     RTCC_loop@prev_halfsec:
   499                           	opt stack 0
   500  000030                     	ds	1
   501  000031                     _print_port:
   502                           	opt stack 0
   503  000031                     	ds	1
   504  000032                     _sw:
   505                           	opt stack 0
   506  000032                     	ds	4
   507  000036                     _sw0:
   508                           	opt stack 0
   509  000036                     	ds	4
   510  00003A                     _sw1:
   511                           	opt stack 0
   512  00003A                     	ds	4
   513  00003E                     _d_display:
   514                           	opt stack 0
   515  00003E                     	ds	3
   516                           tblptru	equ	0xFF8
   517                           tblptrh	equ	0xFF7
   518                           tblptrl	equ	0xFF6
   519                           tablat	equ	0xFF5
   520                           postinc0	equ	0xFEE
   521                           wreg	equ	0xFE8
   522                           postdec1	equ	0xFE5
   523                           fsr1l	equ	0xFE1
   524                           
   525                           	psect	dataCOMRAM
   526  000041                     __pdataCOMRAM:
   527                           	opt stack 0
   528  000041                     I2C_LCD_SetCursor@F9846:
   529                           	opt stack 0
   530  000041                     	ds	2
   531                           tblptru	equ	0xFF8
   532                           tblptrh	equ	0xFF7
   533                           tblptrl	equ	0xFF6
   534                           tablat	equ	0xFF5
   535                           postinc0	equ	0xFEE
   536                           wreg	equ	0xFE8
   537                           postdec1	equ	0xFE5
   538                           fsr1l	equ	0xFE1
   539                           
   540                           	psect	bssBANK0
   541  0000A5                     __pbssBANK0:
   542                           	opt stack 0
   543  0000A5                     _S:
   544                           	opt stack 0
   545  0000A5                     	ds	12
   546  0000B1                     _s:
   547                           	opt stack 0
   548  0000B1                     	ds	12
   549  0000BD                     _cut_cnt:
   550                           	opt stack 0
   551  0000BD                     	ds	6
   552  0000C3                     _d1:
   553                           	opt stack 0
   554  0000C3                     	ds	3
   555  0000C6                     lchika@cntf:
   556                           	opt stack 0
   557  0000C6                     	ds	3
   558  0000C9                     epoch_to_caltime@day_cache:
   559                           	opt stack 0
   560  0000C9                     	ds	2
   561  0000CB                     _colon:
   562                           	opt stack 0
   563  0000CB                     	ds	1
   564  0000CC                     _cut_flag:
   565                           	opt stack 0
   566  0000CC                     	ds	1
   567  0000CD                     _display_flag:
   568                           	opt stack 0
   569  0000CD                     	ds	1
   570  0000CE                     _edit_flag:
   571                           	opt stack 0
   572  0000CE                     	ds	1
   573  0000CF                     _print_content:
   574                           	opt stack 0
   575  0000CF                     	ds	1
   576  0000D0                     _sleep_flag:
   577                           	opt stack 0
   578  0000D0                     	ds	1
   579  0000D1                     _time_change_flag:
   580                           	opt stack 0
   581  0000D1                     	ds	1
   582  0000D2                     epoch_to_caltime@year_cache:
   583                           	opt stack 0
   584  0000D2                     	ds	1
   585  0000D3                     _caltime_now:
   586                           	opt stack 0
   587  0000D3                     	ds	7
   588  0000DA                     _epoch_now:
   589                           	opt stack 0
   590  0000DA                     	ds	4
   591  0000DE                     _sw2:
   592                           	opt stack 0
   593  0000DE                     	ds	4
   594                           tblptru	equ	0xFF8
   595                           tblptrh	equ	0xFF7
   596                           tblptrl	equ	0xFF6
   597                           tablat	equ	0xFF5
   598                           postinc0	equ	0xFEE
   599                           wreg	equ	0xFE8
   600                           postdec1	equ	0xFE5
   601                           fsr1l	equ	0xFE1
   602                           
   603                           	psect	dataBANK0
   604  0000E2                     __pdataBANK0:
   605                           	opt stack 0
   606  0000E2                     _weekday_char:
   607                           	opt stack 0
   608  0000E2                     	ds	14
   609  0000F0                     _weekday_char_full:
   610                           	opt stack 0
   611  0000F0                     	ds	14
   612  0000FE                     epoch_to_caltime@month_cache:
   613                           	opt stack 0
   614  0000FE                     	ds	1
   615  0000FF                     sleep_loop@prev_power_sw:
   616                           	opt stack 0
   617  0000FF                     	ds	1
   618                           tblptru	equ	0xFF8
   619                           tblptrh	equ	0xFF7
   620                           tblptrl	equ	0xFF6
   621                           tablat	equ	0xFF5
   622                           postinc0	equ	0xFEE
   623                           wreg	equ	0xFE8
   624                           postdec1	equ	0xFE5
   625                           fsr1l	equ	0xFE1
   626                           
   627                           	psect	bssBANK1
   628  0001C9                     __pbssBANK1:
   629                           	opt stack 0
   630  0001C9                     _tx_buf:
   631                           	opt stack 0
   632  0001C9                     	ds	5
   633                           tblptru	equ	0xFF8
   634                           tblptrh	equ	0xFF7
   635                           tblptrl	equ	0xFF6
   636                           tablat	equ	0xFF5
   637                           postinc0	equ	0xFEE
   638                           wreg	equ	0xFE8
   639                           postdec1	equ	0xFE5
   640                           fsr1l	equ	0xFE1
   641                           
   642                           	psect	cstackBANK1
   643  000100                     __pcstackBANK1:
   644                           	opt stack 0
   645  000100                     ??_RTCC_time_set_inc:
   646  000100                     ??_RTCC_time_set_dec:
   647  000100                     main_init@txbuf:
   648                           	opt stack 0
   649                           
   650                           ; 200 bytes @ 0x0
   651  000100                     	ds	6
   652  000106                     RTCC_time_set@mode:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0x6
   656  000106                     	ds	2
   657  000108                     RTCC_time_set@cnt_inc:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x8
   661  000108                     	ds	2
   662  00010A                     RTCC_time_set@cnt_dec:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0xA
   666  00010A                     	ds	190
   667  0001C8                     main@i:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0xC8
   671  0001C8                     	ds	1
   672                           tblptru	equ	0xFF8
   673                           tblptrh	equ	0xFF7
   674                           tblptrl	equ	0xFF6
   675                           tablat	equ	0xFF5
   676                           postinc0	equ	0xFEE
   677                           wreg	equ	0xFE8
   678                           postdec1	equ	0xFE5
   679                           fsr1l	equ	0xFE1
   680                           
   681                           	psect	cstackBANK0
   682  000060                     __pcstackBANK0:
   683                           	opt stack 0
   684  000060                     ??_timer0_init:
   685  000060                     ??_timer3_init:
   686  000060                     ??_I2C_IdleCheck:
   687  000060                     ??_x_to_d:
   688  000060                     ?_ADC:
   689                           	opt stack 0
   690  000060                     ?___awdiv:
   691                           	opt stack 0
   692  000060                     ?___awmod:
   693                           	opt stack 0
   694  000060                     ?___lwmod:
   695                           	opt stack 0
   696  000060                     ?___lldiv:
   697                           	opt stack 0
   698  000060                     timer1_init@clock_select:
   699                           	opt stack 0
   700  000060                     ADC_init@p_ref:
   701                           	opt stack 0
   702  000060                     OUT@value:
   703                           	opt stack 0
   704  000060                     LED@value:
   705                           	opt stack 0
   706  000060                     sw_flag_read@bit_and:
   707                           	opt stack 0
   708  000060                     sw_flag_clear@bit_and:
   709                           	opt stack 0
   710  000060                     ringbuf_init@rb:
   711                           	opt stack 0
   712  000060                     Delay_ms@ms:
   713                           	opt stack 0
   714  000060                     delay_set@d:
   715                           	opt stack 0
   716  000060                     ___awdiv@dividend:
   717                           	opt stack 0
   718  000060                     ___awmod@dividend:
   719                           	opt stack 0
   720  000060                     ___lwmod@dividend:
   721                           	opt stack 0
   722  000060                     ___lldiv@dividend:
   723                           	opt stack 0
   724                           
   725                           ; 4 bytes @ 0x0
   726  000060                     	ds	1
   727  000061                     ??_timer1_init:
   728  000061                     timer0_init@prescaler:
   729                           	opt stack 0
   730  000061                     timer3_init@prescaler:
   731                           	opt stack 0
   732  000061                     I2C_IdleCheck@mask:
   733                           	opt stack 0
   734  000061                     x_to_d@hex:
   735                           	opt stack 0
   736  000061                     OUT@b:
   737                           	opt stack 0
   738  000061                     LED@b:
   739                           	opt stack 0
   740  000061                     sw_flag_read@port:
   741                           	opt stack 0
   742  000061                     sw_flag_clear@port:
   743                           	opt stack 0
   744                           
   745                           ; 1 bytes @ 0x1
   746  000061                     	ds	1
   747  000062                     ??_ADC:
   748  000062                     ??_Delay_ms:
   749  000062                     timer1_init@prescaler:
   750                           	opt stack 0
   751  000062                     I2C_Start@rw:
   752                           	opt stack 0
   753  000062                     I2C_Send@data:
   754                           	opt stack 0
   755  000062                     ringbuf_init@internal_buf:
   756                           	opt stack 0
   757  000062                     delay_set@value:
   758                           	opt stack 0
   759  000062                     RTCC_to_caltime@ct:
   760                           	opt stack 0
   761  000062                     ___awdiv@divisor:
   762                           	opt stack 0
   763  000062                     ___awmod@divisor:
   764                           	opt stack 0
   765  000062                     ___lwmod@divisor:
   766                           	opt stack 0
   767                           
   768                           ; 2 bytes @ 0x2
   769  000062                     	ds	1
   770  000063                     ADC@ch:
   771                           	opt stack 0
   772  000063                     I2C_Start@adrs:
   773                           	opt stack 0
   774                           
   775                           ; 1 bytes @ 0x3
   776  000063                     	ds	1
   777  000064                     ?___wmul:
   778                           	opt stack 0
   779  000064                     ringbuf_init@bufsize:
   780                           	opt stack 0
   781  000064                     I2C_LCD_Command@c:
   782                           	opt stack 0
   783  000064                     I2C_LCD_Putc@c:
   784                           	opt stack 0
   785  000064                     RTCC_to_caltime@dumy:
   786                           	opt stack 0
   787  000064                     nomal_mode_loop@i:
   788                           	opt stack 0
   789  000064                     ___awdiv@counter:
   790                           	opt stack 0
   791  000064                     ___awmod@counter:
   792                           	opt stack 0
   793  000064                     ___lwmod@counter:
   794                           	opt stack 0
   795  000064                     I2C_LCD_Puts@s:
   796                           	opt stack 0
   797  000064                     ___wmul@multiplier:
   798                           	opt stack 0
   799  000064                     ___lldiv@divisor:
   800                           	opt stack 0
   801                           
   802                           ; 4 bytes @ 0x4
   803  000064                     	ds	1
   804  000065                     ?___lwdiv:
   805                           	opt stack 0
   806  000065                     I2C_LCD_Command@ans:
   807                           	opt stack 0
   808  000065                     I2C_LCD_Putc@ans:
   809                           	opt stack 0
   810  000065                     ___awdiv@sign:
   811                           	opt stack 0
   812  000065                     ___awmod@sign:
   813                           	opt stack 0
   814  000065                     ___lwdiv@dividend:
   815                           	opt stack 0
   816                           
   817                           ; 2 bytes @ 0x5
   818  000065                     	ds	1
   819  000066                     ??_I2C_LCD_Clear:
   820  000066                     ??_I2C_LCD_Puts:
   821  000066                     I2C_LCD_SetCursor@row:
   822                           	opt stack 0
   823  000066                     month_length@month:
   824                           	opt stack 0
   825  000066                     ___wmul@multiplicand:
   826                           	opt stack 0
   827  000066                     ___awdiv@quotient:
   828                           	opt stack 0
   829                           
   830                           ; 2 bytes @ 0x6
   831  000066                     	ds	1
   832  000067                     ??_month_length:
   833  000067                     I2C_LCD_SetCursor@row_offsets:
   834                           	opt stack 0
   835  000067                     I2C_LCD_Puts@ans:
   836                           	opt stack 0
   837  000067                     ___lwdiv@divisor:
   838                           	opt stack 0
   839                           
   840                           ; 2 bytes @ 0x7
   841  000067                     	ds	1
   842  000068                     d_to_x@dec:
   843                           	opt stack 0
   844  000068                     ___wmul@product:
   845                           	opt stack 0
   846  000068                     ___lldiv@quotient:
   847                           	opt stack 0
   848                           
   849                           ; 4 bytes @ 0x8
   850  000068                     	ds	1
   851  000069                     I2C_LCD_SetCursor@col:
   852                           	opt stack 0
   853  000069                     ___lwdiv@counter:
   854                           	opt stack 0
   855  000069                     caltime_to_RTCC@ct:
   856                           	opt stack 0
   857                           
   858                           ; 2 bytes @ 0x9
   859  000069                     	ds	1
   860  00006A                     ??_Auto_cut:
   861  00006A                     ___lwdiv@quotient:
   862                           	opt stack 0
   863                           
   864                           ; 2 bytes @ 0xA
   865  00006A                     	ds	1
   866  00006B                     month_length@year:
   867                           	opt stack 0
   868                           
   869                           ; 1 bytes @ 0xB
   870  00006B                     	ds	1
   871  00006C                     Auto_cut@i:
   872                           	opt stack 0
   873  00006C                     ___lldiv@counter:
   874                           	opt stack 0
   875  00006C                     utoa@str:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0xC
   879  00006C                     	ds	1
   880  00006D                     ?___lmul:
   881                           	opt stack 0
   882  00006D                     ___lmul@multiplier:
   883                           	opt stack 0
   884                           
   885                           ; 4 bytes @ 0xD
   886  00006D                     	ds	1
   887  00006E                     utoa@value:
   888                           	opt stack 0
   889                           
   890                           ; 2 bytes @ 0xE
   891  00006E                     	ds	2
   892  000070                     utoa@digits:
   893                           	opt stack 0
   894                           
   895                           ; 1 bytes @ 0x10
   896  000070                     	ds	1
   897  000071                     utoa@d:
   898                           	opt stack 0
   899  000071                     ___lmul@multiplicand:
   900                           	opt stack 0
   901                           
   902                           ; 4 bytes @ 0x11
   903  000071                     	ds	1
   904  000072                     utoa@v:
   905                           	opt stack 0
   906                           
   907                           ; 2 bytes @ 0x12
   908  000072                     	ds	2
   909  000074                     display_dec@edit:
   910                           	opt stack 0
   911                           
   912                           ; 1 bytes @ 0x14
   913  000074                     	ds	1
   914  000075                     ___lmul@product:
   915                           	opt stack 0
   916  000075                     display_dec@str:
   917                           	opt stack 0
   918                           
   919                           ; 10 bytes @ 0x15
   920  000075                     	ds	4
   921  000079                     ?_get_quot_rem:
   922                           	opt stack 0
   923  000079                     get_quot_rem@quot:
   924                           	opt stack 0
   925  000079                     caltime_to_epoch@ct:
   926                           	opt stack 0
   927                           
   928                           ; 2 bytes @ 0x19
   929  000079                     	ds	2
   930  00007B                     get_quot_rem@div:
   931                           	opt stack 0
   932  00007B                     caltime_to_epoch@ep:
   933                           	opt stack 0
   934                           
   935                           ; 2 bytes @ 0x1B
   936  00007B                     	ds	2
   937  00007D                     ??_get_quot_rem:
   938  00007D                     ??_caltime_to_epoch:
   939                           
   940                           ; 0 bytes @ 0x1D
   941  00007D                     	ds	2
   942  00007F                     display_dec@dec:
   943                           	opt stack 0
   944                           
   945                           ; 1 bytes @ 0x1F
   946  00007F                     	ds	6
   947  000085                     caltime_to_epoch@year:
   948                           	opt stack 0
   949  000085                     get_quot_rem@num:
   950                           	opt stack 0
   951                           
   952                           ; 4 bytes @ 0x25
   953  000085                     	ds	1
   954  000086                     caltime_to_epoch@month_2136:
   955                           	opt stack 0
   956                           
   957                           ; 1 bytes @ 0x26
   958  000086                     	ds	1
   959  000087                     caltime_to_epoch@epoch:
   960                           	opt stack 0
   961                           
   962                           ; 4 bytes @ 0x27
   963  000087                     	ds	2
   964  000089                     epoch_to_caltime@ct:
   965                           	opt stack 0
   966                           
   967                           ; 2 bytes @ 0x29
   968  000089                     	ds	2
   969  00008B                     caltime_to_epoch@month:
   970                           	opt stack 0
   971  00008B                     epoch_to_caltime@ep:
   972                           	opt stack 0
   973                           
   974                           ; 2 bytes @ 0x2B
   975  00008B                     	ds	1
   976  00008C                     RTCC_from_RTCC@ct:
   977                           	opt stack 0
   978                           
   979                           ; 2 bytes @ 0x2C
   980  00008C                     	ds	1
   981  00008D                     ??_epoch_to_caltime:
   982                           
   983                           ; 0 bytes @ 0x2D
   984  00008D                     	ds	1
   985  00008E                     RTCC_from_RTCC@ep:
   986                           	opt stack 0
   987                           
   988                           ; 2 bytes @ 0x2E
   989  00008E                     	ds	2
   990  000090                     sleep_loop@i_2492:
   991                           	opt stack 0
   992  000090                     display_time@ct:
   993                           	opt stack 0
   994                           
   995                           ; 2 bytes @ 0x30
   996  000090                     	ds	1
   997  000091                     sleep_loop@i:
   998                           	opt stack 0
   999  000091                     epoch_to_caltime@day_since_epoch:
  1000                           	opt stack 0
  1001                           
  1002                           ; 2 bytes @ 0x31
  1003  000091                     	ds	1
  1004  000092                     display_time@ep:
  1005                           	opt stack 0
  1006                           
  1007                           ; 2 bytes @ 0x32
  1008  000092                     	ds	1
  1009  000093                     epoch_to_caltime@day:
  1010                           	opt stack 0
  1011                           
  1012                           ; 2 bytes @ 0x33
  1013  000093                     	ds	1
  1014  000094                     ??_display_time:
  1015                           
  1016                           ; 0 bytes @ 0x34
  1017  000094                     	ds	1
  1018  000095                     epoch_to_caltime@year:
  1019                           	opt stack 0
  1020  000095                     display_LCD@str:
  1021                           	opt stack 0
  1022                           
  1023                           ; 10 bytes @ 0x35
  1024  000095                     	ds	1
  1025  000096                     epoch_to_caltime@month:
  1026                           	opt stack 0
  1027                           
  1028                           ; 1 bytes @ 0x36
  1029  000096                     	ds	1
  1030  000097                     epoch_to_caltime@num:
  1031                           	opt stack 0
  1032                           
  1033                           ; 4 bytes @ 0x37
  1034  000097                     	ds	4
  1035  00009B                     RTCC_from_epoch@ct:
  1036                           	opt stack 0
  1037                           
  1038                           ; 2 bytes @ 0x3B
  1039  00009B                     	ds	2
  1040  00009D                     RTCC_from_epoch@ep:
  1041                           	opt stack 0
  1042                           
  1043                           ; 2 bytes @ 0x3D
  1044  00009D                     	ds	2
  1045  00009F                     RTCC_time_set_inc@ct:
  1046                           	opt stack 0
  1047  00009F                     RTCC_time_set_dec@ct:
  1048                           	opt stack 0
  1049                           
  1050                           ; 2 bytes @ 0x3F
  1051  00009F                     	ds	2
  1052  0000A1                     RTCC_time_set_inc@ep:
  1053                           	opt stack 0
  1054  0000A1                     RTCC_time_set_dec@ep:
  1055                           	opt stack 0
  1056                           
  1057                           ; 2 bytes @ 0x41
  1058  0000A1                     	ds	2
  1059  0000A3                     RTCC_time_set_inc@i_2190:
  1060                           	opt stack 0
  1061  0000A3                     RTCC_time_set_dec@i_2203:
  1062                           	opt stack 0
  1063                           
  1064                           ; 1 bytes @ 0x43
  1065  0000A3                     	ds	1
  1066  0000A4                     RTCC_time_set_inc@i:
  1067                           	opt stack 0
  1068  0000A4                     RTCC_time_set_dec@i:
  1069                           	opt stack 0
  1070                           
  1071                           ; 1 bytes @ 0x44
  1072  0000A4                     	ds	1
  1073  0000A5                     tblptru	equ	0xFF8
  1074                           tblptrh	equ	0xFF7
  1075                           tblptrl	equ	0xFF6
  1076                           tablat	equ	0xFF5
  1077                           postinc0	equ	0xFEE
  1078                           wreg	equ	0xFE8
  1079                           postdec1	equ	0xFE5
  1080                           fsr1l	equ	0xFE1
  1081                           
  1082                           ; 0 bytes @ 0x45
  1083                           
  1084                           	psect	cstackCOMRAM
  1085  000001                     __pcstackCOMRAM:
  1086                           	opt stack 0
  1087  000001                     ?i2___awdiv:
  1088                           	opt stack 0
  1089  000001                     ?i2___lwdiv:
  1090                           	opt stack 0
  1091  000001                     ?i2___lldiv:
  1092                           	opt stack 0
  1093  000001                     i2LED@value:
  1094                           	opt stack 0
  1095  000001                     ringbuf_num@rb:
  1096                           	opt stack 0
  1097  000001                     delay_timer_interrupt@d:
  1098                           	opt stack 0
  1099  000001                     button_timer_interrupt@bt:
  1100                           	opt stack 0
  1101  000001                     i2___awdiv@dividend:
  1102                           	opt stack 0
  1103  000001                     i2___lwdiv@dividend:
  1104                           	opt stack 0
  1105  000001                     i2___lldiv@dividend:
  1106                           	opt stack 0
  1107                           
  1108                           ; 4 bytes @ 0x0
  1109  000001                     	ds	1
  1110  000002                     i2LED@b:
  1111                           	opt stack 0
  1112                           
  1113                           ; 1 bytes @ 0x1
  1114  000002                     	ds	1
  1115  000003                     ??_ringbuf_num:
  1116  000003                     button_timer_interrupt@sw_value:
  1117                           	opt stack 0
  1118  000003                     i2___awdiv@divisor:
  1119                           	opt stack 0
  1120  000003                     i2___lwdiv@divisor:
  1121                           	opt stack 0
  1122                           
  1123                           ; 2 bytes @ 0x2
  1124  000003                     	ds	1
  1125  000004                     ??_button_timer_interrupt:
  1126                           
  1127                           ; 0 bytes @ 0x3
  1128  000004                     	ds	1
  1129  000005                     i2___awdiv@counter:
  1130                           	opt stack 0
  1131  000005                     ringbuf_push@rb:
  1132                           	opt stack 0
  1133  000005                     ringbuf_pop@rb:
  1134                           	opt stack 0
  1135  000005                     i2___lwdiv@quotient:
  1136                           	opt stack 0
  1137  000005                     i2___lldiv@divisor:
  1138                           	opt stack 0
  1139                           
  1140                           ; 4 bytes @ 0x4
  1141  000005                     	ds	1
  1142  000006                     i2___awdiv@sign:
  1143                           	opt stack 0
  1144                           
  1145                           ; 1 bytes @ 0x5
  1146  000006                     	ds	1
  1147  000007                     ??_ringbuf_pop:
  1148  000007                     ringbuf_push@asciicode:
  1149                           	opt stack 0
  1150  000007                     i2___lwdiv@counter:
  1151                           	opt stack 0
  1152  000007                     i2___awdiv@quotient:
  1153                           	opt stack 0
  1154                           
  1155                           ; 2 bytes @ 0x6
  1156  000007                     	ds	1
  1157  000008                     ??_ringbuf_push:
  1158                           
  1159                           ; 0 bytes @ 0x7
  1160  000008                     	ds	1
  1161  000009                     ??_lchika:
  1162  000009                     i2___lldiv@quotient:
  1163                           	opt stack 0
  1164                           
  1165                           ; 4 bytes @ 0x8
  1166  000009                     	ds	1
  1167  00000A                     ringbuf_pop@ret:
  1168                           	opt stack 0
  1169                           
  1170                           ; 1 bytes @ 0x9
  1171  00000A                     	ds	1
  1172  00000B                     
  1173                           ; 0 bytes @ 0xA
  1174  00000B                     	ds	1
  1175  00000C                     lchika@i:
  1176                           	opt stack 0
  1177                           
  1178                           ; 1 bytes @ 0xB
  1179  00000C                     	ds	1
  1180  00000D                     tx_send@asciicode:
  1181                           	opt stack 0
  1182  00000D                     i2___lldiv@counter:
  1183                           	opt stack 0
  1184                           
  1185                           ; 1 bytes @ 0xC
  1186  00000D                     	ds	1
  1187  00000E                     ??_integrating:
  1188                           
  1189                           ; 0 bytes @ 0xD
  1190  00000E                     	ds	4
  1191  000012                     integrating@port:
  1192                           	opt stack 0
  1193                           
  1194                           ; 1 bytes @ 0x11
  1195  000012                     	ds	1
  1196  000013                     ??_ISR:
  1197                           
  1198                           ; 0 bytes @ 0x12
  1199  000013                     	ds	14
  1200  000021                     ISR@ascii:
  1201                           	opt stack 0
  1202                           
  1203                           ; 1 bytes @ 0x20
  1204  000021                     	ds	1
  1205                           tblptru	equ	0xFF8
  1206                           tblptrh	equ	0xFF7
  1207                           tblptrl	equ	0xFF6
  1208                           tablat	equ	0xFF5
  1209                           postinc0	equ	0xFEE
  1210                           wreg	equ	0xFE8
  1211                           postdec1	equ	0xFE5
  1212                           fsr1l	equ	0xFE1
  1213                           
  1214 ;;
  1215 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1216 ;;
  1217 ;; *************** function _main *****************
  1218 ;; Defined at:
  1219 ;;		line 89 in file "PIC18F27J53-ChargeStation6-02.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;		None
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;  i               1  200[BANK1 ] unsigned char 
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  2  675[COMRAM] int 
  1226 ;; Registers used:
  1227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1234 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1236 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1237 ;;Total ram usage:        1 bytes
  1238 ;; Hardware stack levels required when called:   10
  1239 ;; This function calls:
  1240 ;;		_Auto_cut
  1241 ;;		_Delay_ms
  1242 ;;		_I2C_LCD_Clear
  1243 ;;		_I2C_LCD_Puts
  1244 ;;		_I2C_LCD_SetCursor
  1245 ;;		_LED
  1246 ;;		_OUT
  1247 ;;		_RTCC_from_RTCC
  1248 ;;		_RTCC_loop
  1249 ;;		_RTCC_time_set
  1250 ;;		_display_LCD
  1251 ;;		_main_init
  1252 ;;		_nomal_mode_loop
  1253 ;;		_sleep_loop
  1254 ;; This function is called by:
  1255 ;;		Startup code after reset
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           	psect	text0
  1260  002310                     __ptext0:
  1261                           	opt stack 0
  1262  002310                     _main:
  1263                           	opt stack 21
  1264                           
  1265                           ;PIC18F27J53-ChargeStation6-02.c: 90: main_init();
  1266                           
  1267                           ;incstack = 0
  1268  002310  EC1A  F01B         	call	_main_init	;wreg free
  1269                           
  1270                           ;PIC18F27J53-ChargeStation6-02.c: 91: INTCONbits.GIE = 1;
  1271  002314  8EF2               	bsf	intcon,7,c	;volatile
  1272                           
  1273                           ;PIC18F27J53-ChargeStation6-02.c: 95: RTCC_from_RTCC(&caltime_now, &epoch_now);
  1274  002316  0100               	movlb	0	; () banked
  1275  002318  0E00               	movlw	high _caltime_now
  1276  00231A  0100               	movlb	0	; () banked
  1277  00231C  6F8D               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  1278  00231E  0100               	movlb	0	; () banked
  1279  002320  0ED3               	movlw	low _caltime_now
  1280  002322  0100               	movlb	0	; () banked
  1281  002324  6F8C               	movwf	RTCC_from_RTCC@ct& (0+255),b
  1282  002326  0100               	movlb	0	; () banked
  1283  002328  0E00               	movlw	high _epoch_now
  1284  00232A  0100               	movlb	0	; () banked
  1285  00232C  6F8F               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  1286  00232E  0100               	movlb	0	; () banked
  1287  002330  0EDA               	movlw	low _epoch_now
  1288  002332  0100               	movlb	0	; () banked
  1289  002334  6F8E               	movwf	RTCC_from_RTCC@ep& (0+255),b
  1290  002336  EC3A  F01F         	call	_RTCC_from_RTCC	;wreg free
  1291                           
  1292                           ;PIC18F27J53-ChargeStation6-02.c: 96: print_content = TIME;
  1293  00233A  0E01               	movlw	1
  1294  00233C  0100               	movlb	0	; () banked
  1295  00233E  6FCF               	movwf	_print_content& (0+255),b
  1296                           
  1297                           ; BSR set to: 0
  1298                           ;PIC18F27J53-ChargeStation6-02.c: 98: I2C_LCD_Clear();
  1299  002340  EC0C  F020         	call	_I2C_LCD_Clear	;wreg free
  1300                           
  1301                           ;PIC18F27J53-ChargeStation6-02.c: 99: I2C_LCD_SetCursor(0, 0);
  1302  002344  0E00               	movlw	0
  1303  002346  0100               	movlb	0	; () banked
  1304  002348  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  1305  00234A  0E00               	movlw	0
  1306  00234C  ECF4  F01E         	call	_I2C_LCD_SetCursor
  1307                           
  1308                           ;PIC18F27J53-ChargeStation6-02.c: 100: I2C_LCD_Puts("Charge");
  1309  002350  0E0F               	movlw	high STR_22
  1310  002352  0100               	movlb	0	; () banked
  1311  002354  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1312  002356  0E55               	movlw	low STR_22
  1313  002358  0100               	movlb	0	; () banked
  1314  00235A  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  1315  00235C  ECB9  F019         	call	_I2C_LCD_Puts	;wreg free
  1316                           
  1317                           ;PIC18F27J53-ChargeStation6-02.c: 101: I2C_LCD_SetCursor(0, 1);
  1318  002360  0E01               	movlw	1
  1319  002362  0100               	movlb	0	; () banked
  1320  002364  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  1321  002366  0E00               	movlw	0
  1322  002368  ECF4  F01E         	call	_I2C_LCD_SetCursor
  1323                           
  1324                           ;PIC18F27J53-ChargeStation6-02.c: 102: I2C_LCD_Puts("Station");
  1325  00236C  0E0F               	movlw	high STR_23
  1326  00236E  0100               	movlb	0	; () banked
  1327  002370  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1328  002372  0E37               	movlw	low STR_23
  1329  002374  0100               	movlb	0	; () banked
  1330  002376  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  1331  002378  ECB9  F019         	call	_I2C_LCD_Puts	;wreg free
  1332                           
  1333                           ;PIC18F27J53-ChargeStation6-02.c: 103: Delay_ms(2000);
  1334  00237C  0E07               	movlw	7
  1335  00237E  0100               	movlb	0	; () banked
  1336  002380  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
  1337  002382  0ED0               	movlw	208
  1338  002384  0100               	movlb	0	; () banked
  1339  002386  6F60               	movwf	Delay_ms@ms& (0+255),b
  1340  002388  ECA9  F01F         	call	_Delay_ms	;wreg free
  1341                           
  1342                           ;PIC18F27J53-ChargeStation6-02.c: 105: uint8_t i;
  1343                           ;PIC18F27J53-ChargeStation6-02.c: 107: for (i = 0; i < 3; i++) {
  1344  00238C  0E00               	movlw	0
  1345  00238E  0101               	movlb	1	; () banked
  1346  002390  6FC8               	movwf	main@i& (0+255),b
  1347  002392  D02A               	goto	L3
  1348  002394                     l5596:
  1349                           
  1350                           ; BSR set to: 1
  1351                           ;PIC18F27J53-ChargeStation6-02.c: 108: OUT(i, 1);
  1352  002394  0E01               	movlw	1
  1353  002396  0100               	movlb	0	; () banked
  1354  002398  6F60               	movwf	OUT@value& (0+255),b
  1355  00239A  0101               	movlb	1	; () banked
  1356  00239C  51C8               	movf	main@i& (0+255),w,b
  1357  00239E  EC52  F01D         	call	_OUT
  1358                           
  1359                           ;PIC18F27J53-ChargeStation6-02.c: 109: LED(i, 1);
  1360  0023A2  0E01               	movlw	1
  1361  0023A4  0100               	movlb	0	; () banked
  1362  0023A6  6F60               	movwf	LED@value& (0+255),b
  1363  0023A8  0101               	movlb	1	; () banked
  1364  0023AA  51C8               	movf	main@i& (0+255),w,b
  1365  0023AC  ECFE  F01C         	call	_LED
  1366                           
  1367                           ;PIC18F27J53-ChargeStation6-02.c: 110: cut_cnt[i] = 0;
  1368  0023B0  0101               	movlb	1	; () banked
  1369  0023B2  51C8               	movf	main@i& (0+255),w,b
  1370  0023B4  0D02               	mullw	2
  1371  0023B6  0100               	movlb	0	; () banked
  1372  0023B8  0EBD               	movlw	low _cut_cnt
  1373  0023BA  24F3               	addwf	prodl,w,c
  1374  0023BC  6ED9               	movwf	fsr2l,c
  1375  0023BE  0100               	movlb	0	; () banked
  1376  0023C0  0E00               	movlw	high _cut_cnt
  1377  0023C2  20F4               	addwfc	prodh,w,c
  1378  0023C4  6EDA               	movwf	fsr2h,c
  1379  0023C6  0E00               	movlw	0
  1380  0023C8  6EDE               	movwf	postinc2,c
  1381  0023CA  0E00               	movlw	0
  1382  0023CC  6EDD               	movwf	postdec2,c
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;PIC18F27J53-ChargeStation6-02.c: 111: auto_cut_ON[i] = 1;
  1386  0023CE  0101               	movlb	1	; () banked
  1387  0023D0  51C8               	movf	main@i& (0+255),w,b
  1388  0023D2  0D01               	mullw	1
  1389  0023D4  0E28               	movlw	low _auto_cut_ON
  1390  0023D6  24F3               	addwf	prodl,w,c
  1391  0023D8  6ED9               	movwf	fsr2l,c
  1392  0023DA  0E00               	movlw	high _auto_cut_ON
  1393  0023DC  20F4               	addwfc	prodh,w,c
  1394  0023DE  6EDA               	movwf	fsr2h,c
  1395  0023E0  0E01               	movlw	1
  1396  0023E2  6EDF               	movwf	indf2,c
  1397                           
  1398                           ; BSR set to: 1
  1399  0023E4  0101               	movlb	1	; () banked
  1400  0023E6  2BC8               	incf	main@i& (0+255),f,b
  1401  0023E8                     L3:
  1402                           
  1403                           ; BSR set to: 1
  1404  0023E8  0E02               	movlw	2
  1405  0023EA  0101               	movlb	1	; () banked
  1406  0023EC  65C8               	cpfsgt	main@i& (0+255),b
  1407  0023EE  D7D2               	goto	l5596
  1408  0023F0                     l678:
  1409                           
  1410                           ;PIC18F27J53-ChargeStation6-02.c: 115: if (!sleep_flag) {
  1411  0023F0  0100               	movlb	0	; () banked
  1412  0023F2  67D0               	tstfsz	_sleep_flag& (0+255),b
  1413  0023F4  D04F               	goto	l5644
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;PIC18F27J53-ChargeStation6-02.c: 116: if (!edit_flag.flags) {
  1417  0023F6  0100               	movlb	0	; () banked
  1418  0023F8  67CE               	tstfsz	_edit_flag& (0+255),b
  1419  0023FA  D016               	goto	l680
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;PIC18F27J53-ChargeStation6-02.c: 117: nomal_mode_loop();
  1423  0023FC  EC80  F010         	call	_nomal_mode_loop	;wreg free
  1424                           
  1425                           ;PIC18F27J53-ChargeStation6-02.c: 118: if (sw.flag.press) {
  1426  002400  A034               	btfss	_sw+2,0,c
  1427  002402  D012               	goto	l680
  1428                           
  1429                           ;PIC18F27J53-ChargeStation6-02.c: 119: sw.flag.press = 0;
  1430  002404  9034               	bcf	_sw+2,0,c
  1431                           
  1432                           ;PIC18F27J53-ChargeStation6-02.c: 120: if (print_content == CURRENT)print_content = INTE
      +                          GRATING;
  1433  002406  0100               	movlb	0	; () banked
  1434  002408  51CF               	movf	_print_content& (0+255),w,b
  1435  00240A  0A02               	xorlw	2
  1436  00240C  A4D8               	btfss	status,2,c
  1437  00240E  D002               	goto	l5618
  1438                           
  1439                           ; BSR set to: 0
  1440  002410  0E03               	movlw	3
  1441  002412  D008               	goto	L2
  1442  002414                     l5618:
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;PIC18F27J53-ChargeStation6-02.c: 121: else if (print_content == INTEGRATING)print_conte
      +                          nt = TIME;
  1446  002414  0100               	movlb	0	; () banked
  1447  002416  51CF               	movf	_print_content& (0+255),w,b
  1448  002418  0A03               	xorlw	3
  1449  00241A  A4D8               	btfss	status,2,c
  1450  00241C  D002               	goto	l5622
  1451                           
  1452                           ; BSR set to: 0
  1453  00241E  0E01               	movlw	1
  1454  002420  D001               	goto	L2
  1455  002422                     l5622:
  1456                           
  1457                           ; BSR set to: 0
  1458                           ;PIC18F27J53-ChargeStation6-02.c: 122: else print_content = CURRENT;
  1459  002422  0E02               	movlw	2
  1460  002424                     L2:
  1461  002424  0100               	movlb	0	; () banked
  1462  002426  6FCF               	movwf	_print_content& (0+255),b
  1463  002428                     l680:
  1464                           
  1465                           ;PIC18F27J53-ChargeStation6-02.c: 123: }
  1466                           ;PIC18F27J53-ChargeStation6-02.c: 124: }
  1467                           ;PIC18F27J53-ChargeStation6-02.c: 125: if (cut_flag) {
  1468  002428  0100               	movlb	0	; () banked
  1469  00242A  51CC               	movf	_cut_flag& (0+255),w,b
  1470  00242C  B4D8               	btfsc	status,2,c
  1471  00242E  D005               	goto	l5628
  1472                           
  1473                           ; BSR set to: 0
  1474                           ;PIC18F27J53-ChargeStation6-02.c: 126: cut_flag = 0;
  1475  002430  0E00               	movlw	0
  1476  002432  0100               	movlb	0	; () banked
  1477  002434  6FCC               	movwf	_cut_flag& (0+255),b
  1478                           
  1479                           ; BSR set to: 0
  1480                           ;PIC18F27J53-ChargeStation6-02.c: 127: Auto_cut();
  1481  002436  ECB1  F013         	call	_Auto_cut	;wreg free
  1482  00243A                     l5628:
  1483                           
  1484                           ;PIC18F27J53-ChargeStation6-02.c: 128: }
  1485                           ;PIC18F27J53-ChargeStation6-02.c: 129: RTCC_loop();
  1486  00243A  EC59  F01B         	call	_RTCC_loop	;wreg free
  1487                           
  1488                           ;PIC18F27J53-ChargeStation6-02.c: 130: if (time_change_flag) {
  1489  00243E  0100               	movlb	0	; () banked
  1490  002440  51D1               	movf	_time_change_flag& (0+255),w,b
  1491  002442  B4D8               	btfsc	status,2,c
  1492  002444  D006               	goto	l5634
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;PIC18F27J53-ChargeStation6-02.c: 131: time_change_flag = 0;
  1496  002446  0E00               	movlw	0
  1497  002448  0100               	movlb	0	; () banked
  1498  00244A  6FD1               	movwf	_time_change_flag& (0+255),b
  1499                           
  1500                           ;PIC18F27J53-ChargeStation6-02.c: 132: display_flag = 1;
  1501  00244C  0E01               	movlw	1
  1502  00244E  0100               	movlb	0	; () banked
  1503  002450  6FCD               	movwf	_display_flag& (0+255),b
  1504  002452                     l5634:
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;PIC18F27J53-ChargeStation6-02.c: 133: }
  1508                           ;PIC18F27J53-ChargeStation6-02.c: 134: if (print_content == TIME)RTCC_time_set(&sw, &sw0
      +                          , &sw1);
  1509  002452  0100               	movlb	0	; () banked
  1510  002454  05CF               	decf	_print_content& (0+255),w,b
  1511  002456  A4D8               	btfss	status,2,c
  1512  002458  D014               	goto	l5638
  1513                           
  1514                           ; BSR set to: 0
  1515  00245A  0E00               	movlw	high _sw
  1516  00245C  0101               	movlb	1	; () banked
  1517  00245E  6F07               	movwf	(RTCC_time_set@mode+1)& (0+255),b
  1518  002460  0E32               	movlw	low _sw
  1519  002462  0101               	movlb	1	; () banked
  1520  002464  6F06               	movwf	RTCC_time_set@mode& (0+255),b
  1521  002466  0E00               	movlw	high _sw0
  1522  002468  0101               	movlb	1	; () banked
  1523  00246A  6F09               	movwf	(RTCC_time_set@cnt_inc+1)& (0+255),b
  1524  00246C  0E36               	movlw	low _sw0
  1525  00246E  0101               	movlb	1	; () banked
  1526  002470  6F08               	movwf	RTCC_time_set@cnt_inc& (0+255),b
  1527  002472  0E00               	movlw	high _sw1
  1528  002474  0101               	movlb	1	; () banked
  1529  002476  6F0B               	movwf	(RTCC_time_set@cnt_dec+1)& (0+255),b
  1530  002478  0E3A               	movlw	low _sw1
  1531  00247A  0101               	movlb	1	; () banked
  1532  00247C  6F0A               	movwf	RTCC_time_set@cnt_dec& (0+255),b
  1533  00247E  EC05  F013         	call	_RTCC_time_set	;wreg free
  1534  002482                     l5638:
  1535                           
  1536                           ;PIC18F27J53-ChargeStation6-02.c: 135: if (display_flag) {
  1537  002482  0100               	movlb	0	; () banked
  1538  002484  51CD               	movf	_display_flag& (0+255),w,b
  1539  002486  B4D8               	btfsc	status,2,c
  1540  002488  D005               	goto	l5644
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;PIC18F27J53-ChargeStation6-02.c: 136: display_flag = 0;
  1544  00248A  0E00               	movlw	0
  1545  00248C  0100               	movlb	0	; () banked
  1546  00248E  6FCD               	movwf	_display_flag& (0+255),b
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;PIC18F27J53-ChargeStation6-02.c: 137: display_LCD();
  1550  002490  EC7A  F00C         	call	_display_LCD	;wreg free
  1551  002494                     l5644:
  1552                           
  1553                           ;PIC18F27J53-ChargeStation6-02.c: 138: }
  1554                           ;PIC18F27J53-ChargeStation6-02.c: 139: }
  1555                           ;PIC18F27J53-ChargeStation6-02.c: 140: sleep_loop();
  1556  002494  ECA3  F016         	call	_sleep_loop	;wreg free
  1557  002498  D7AB               	goto	l678
  1558  00249A                     __end_of_main:
  1559                           	opt stack 0
  1560                           tblptru	equ	0xFF8
  1561                           tblptrh	equ	0xFF7
  1562                           tblptrl	equ	0xFF6
  1563                           tablat	equ	0xFF5
  1564                           prodh	equ	0xFF4
  1565                           prodl	equ	0xFF3
  1566                           intcon	equ	0xFF2
  1567                           postinc0	equ	0xFEE
  1568                           wreg	equ	0xFE8
  1569                           postdec1	equ	0xFE5
  1570                           fsr1l	equ	0xFE1
  1571                           indf2	equ	0xFDF
  1572                           postinc2	equ	0xFDE
  1573                           postdec2	equ	0xFDD
  1574                           fsr2h	equ	0xFDA
  1575                           fsr2l	equ	0xFD9
  1576                           status	equ	0xFD8
  1577                           
  1578 ;; *************** function _sleep_loop *****************
  1579 ;; Defined at:
  1580 ;;		line 286 in file "PIC18F27J53-ChargeStation6-02.h"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  i               1   48[BANK0 ] unsigned char 
  1585 ;;  i               1   49[BANK0 ] unsigned char 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;		None               void
  1588 ;; Registers used:
  1589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1596 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1598 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1599 ;;Total ram usage:        2 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; Hardware stack levels required when called:    8
  1602 ;; This function calls:
  1603 ;;		_LED
  1604 ;;		_OUT
  1605 ;;		_RTCC_from_RTCC
  1606 ;; This function is called by:
  1607 ;;		_main
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           	psect	text1
  1612  002D46                     __ptext1:
  1613                           	opt stack 0
  1614  002D46                     _sleep_loop:
  1615                           	opt stack 22
  1616                           
  1617                           ;PIC18F27J53-ChargeStation6-02.h: 287: static uint8_t prev_power_sw = 1;
  1618                           ;PIC18F27J53-ChargeStation6-02.h: 288: if (PORTBbits.RB0 != prev_power_sw) {
  1619                           
  1620                           ;incstack = 0
  1621  002D46  A081               	btfss	3969,0,c	;volatile
  1622  002D48  D002               	goto	u5500
  1623  002D4A  0E01               	movlw	1
  1624  002D4C  D001               	goto	u5506
  1625  002D4E                     u5500:
  1626  002D4E  0E00               	movlw	0
  1627  002D50                     u5506:
  1628  002D50  0100               	movlb	0	; () banked
  1629  002D52  19FF               	xorwf	sleep_loop@prev_power_sw& (0+255),w,b
  1630  002D54  B4D8               	btfsc	status,2,c
  1631  002D56  D05D               	goto	l5456
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;PIC18F27J53-ChargeStation6-02.h: 289: prev_power_sw = PORTBbits.RB0;
  1635  002D58  0E00               	movlw	0
  1636  002D5A  B081               	btfsc	3969,0,c	;volatile
  1637  002D5C  0E01               	movlw	1
  1638  002D5E  0100               	movlb	0	; () banked
  1639  002D60  6FFF               	movwf	sleep_loop@prev_power_sw& (0+255),b
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;PIC18F27J53-ChargeStation6-02.h: 290: if (!PORTBbits.RB0) {
  1643  002D62  B081               	btfsc	3969,0,c	;volatile
  1644  002D64  D026               	goto	l5440
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;PIC18F27J53-ChargeStation6-02.h: 291: sleep_flag = 1;
  1648  002D66  0E01               	movlw	1
  1649  002D68  0100               	movlb	0	; () banked
  1650  002D6A  6FD0               	movwf	_sleep_flag& (0+255),b
  1651                           
  1652                           ; BSR set to: 0
  1653                           ;PIC18F27J53-ChargeStation6-02.h: 292: T0CONbits.TMR0ON = 0;
  1654  002D6C  9ED5               	bcf	4053,7,c	;volatile
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;PIC18F27J53-ChargeStation6-02.h: 293: T1CONbits.TMR1ON = 1;
  1658  002D6E  80CD               	bsf	4045,0,c	;volatile
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;PIC18F27J53-ChargeStation6-02.h: 294: T3CONbits.TMR3ON = 0;
  1662  002D70  9079               	bcf	3961,0,c	;volatile
  1663                           
  1664                           ; BSR set to: 0
  1665                           ;PIC18F27J53-ChargeStation6-02.h: 295: TXSTA1bits.TXEN = 0;
  1666  002D72  9AAD               	bcf	4013,5,c	;volatile
  1667                           
  1668                           ; BSR set to: 0
  1669                           ;PIC18F27J53-ChargeStation6-02.h: 296: RCSTA1bits.CREN = 0;
  1670  002D74  98AC               	bcf	4012,4,c	;volatile
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;PIC18F27J53-ChargeStation6-02.h: 298: INTCONbits.T0IE = 0;
  1674  002D76  9AF2               	bcf	intcon,5,c	;volatile
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;PIC18F27J53-ChargeStation6-02.h: 299: PIE1bits.TMR1IE = 1;
  1678  002D78  809D               	bsf	3997,0,c	;volatile
  1679                           
  1680                           ; BSR set to: 0
  1681                           ;PIC18F27J53-ChargeStation6-02.h: 300: PIE2bits.TMR3IE = 0;
  1682  002D7A  92A0               	bcf	4000,1,c	;volatile
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;PIC18F27J53-ChargeStation6-02.h: 301: PIE1bits.TX1IE = 0;
  1686  002D7C  989D               	bcf	3997,4,c	;volatile
  1687                           
  1688                           ; BSR set to: 0
  1689                           ;PIC18F27J53-ChargeStation6-02.h: 302: PIE1bits.RC1IE = 0;
  1690  002D7E  9A9D               	bcf	3997,5,c	;volatile
  1691                           
  1692                           ;PIC18F27J53-ChargeStation6-02.h: 303: for (uint8_t i = 0; i < 3; i++) {
  1693  002D80  0E00               	movlw	0
  1694  002D82  0100               	movlb	0	; () banked
  1695  002D84  6F91               	movwf	sleep_loop@i& (0+255),b
  1696  002D86  D010               	goto	L6
  1697  002D88                     l5434:
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;PIC18F27J53-ChargeStation6-02.h: 304: OUT(i, 0);
  1701  002D88  0E00               	movlw	0
  1702  002D8A  0100               	movlb	0	; () banked
  1703  002D8C  6F60               	movwf	OUT@value& (0+255),b
  1704  002D8E  0100               	movlb	0	; () banked
  1705  002D90  5191               	movf	sleep_loop@i& (0+255),w,b
  1706  002D92  EC52  F01D         	call	_OUT
  1707                           
  1708                           ;PIC18F27J53-ChargeStation6-02.h: 305: LED(i, 0);
  1709  002D96  0E00               	movlw	0
  1710  002D98  0100               	movlb	0	; () banked
  1711  002D9A  6F60               	movwf	LED@value& (0+255),b
  1712  002D9C  0100               	movlb	0	; () banked
  1713  002D9E  5191               	movf	sleep_loop@i& (0+255),w,b
  1714  002DA0  ECFE  F01C         	call	_LED
  1715  002DA4  0100               	movlb	0	; () banked
  1716  002DA6  2B91               	incf	sleep_loop@i& (0+255),f,b
  1717  002DA8                     L6:
  1718                           
  1719                           ; BSR set to: 0
  1720  002DA8  0E02               	movlw	2
  1721  002DAA  0100               	movlb	0	; () banked
  1722  002DAC  6591               	cpfsgt	sleep_loop@i& (0+255),b
  1723  002DAE  D7EC               	goto	l5434
  1724  002DB0  D030               	goto	l5456
  1725  002DB2                     l5440:
  1726                           
  1727                           ; BSR set to: 0
  1728                           ;PIC18F27J53-ChargeStation6-02.h: 308: sleep_flag = 0;
  1729  002DB2  0E00               	movlw	0
  1730  002DB4  0100               	movlb	0	; () banked
  1731  002DB6  6FD0               	movwf	_sleep_flag& (0+255),b
  1732                           
  1733                           ; BSR set to: 0
  1734                           ;PIC18F27J53-ChargeStation6-02.h: 309: RTCC_from_RTCC(&caltime_now, &epoch_now);
  1735  002DB8  0100               	movlb	0	; () banked
  1736  002DBA  0E00               	movlw	high _caltime_now
  1737  002DBC  0100               	movlb	0	; () banked
  1738  002DBE  6F8D               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  1739  002DC0  0100               	movlb	0	; () banked
  1740  002DC2  0ED3               	movlw	low _caltime_now
  1741  002DC4  0100               	movlb	0	; () banked
  1742  002DC6  6F8C               	movwf	RTCC_from_RTCC@ct& (0+255),b
  1743  002DC8  0100               	movlb	0	; () banked
  1744  002DCA  0E00               	movlw	high _epoch_now
  1745  002DCC  0100               	movlb	0	; () banked
  1746  002DCE  6F8F               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  1747  002DD0  0100               	movlb	0	; () banked
  1748  002DD2  0EDA               	movlw	low _epoch_now
  1749  002DD4  0100               	movlb	0	; () banked
  1750  002DD6  6F8E               	movwf	RTCC_from_RTCC@ep& (0+255),b
  1751  002DD8  EC3A  F01F         	call	_RTCC_from_RTCC	;wreg free
  1752                           
  1753                           ;PIC18F27J53-ChargeStation6-02.h: 310: for (uint8_t i = 0; i < 3; i++) {
  1754  002DDC  0E00               	movlw	0
  1755  002DDE  0100               	movlb	0	; () banked
  1756  002DE0  6F90               	movwf	sleep_loop@i_2492& (0+255),b
  1757  002DE2  D009               	goto	L5
  1758  002DE4                     l5450:
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;PIC18F27J53-ChargeStation6-02.h: 311: LED(i, 1);
  1762  002DE4  0E01               	movlw	1
  1763  002DE6  0100               	movlb	0	; () banked
  1764  002DE8  6F60               	movwf	LED@value& (0+255),b
  1765  002DEA  0100               	movlb	0	; () banked
  1766  002DEC  5190               	movf	sleep_loop@i_2492& (0+255),w,b
  1767  002DEE  ECFE  F01C         	call	_LED
  1768  002DF2  0100               	movlb	0	; () banked
  1769  002DF4  2B90               	incf	sleep_loop@i_2492& (0+255),f,b
  1770  002DF6                     L5:
  1771                           
  1772                           ; BSR set to: 0
  1773  002DF6  0E02               	movlw	2
  1774  002DF8  0100               	movlb	0	; () banked
  1775  002DFA  6590               	cpfsgt	sleep_loop@i_2492& (0+255),b
  1776  002DFC  D7F3               	goto	l5450
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;PIC18F27J53-ChargeStation6-02.h: 312: }
  1780                           ;PIC18F27J53-ChargeStation6-02.h: 313: T0CONbits.TMR0ON = 1;
  1781  002DFE  8ED5               	bsf	4053,7,c	;volatile
  1782                           
  1783                           ;PIC18F27J53-ChargeStation6-02.h: 314: T1CONbits.TMR1ON = 1;
  1784  002E00  80CD               	bsf	4045,0,c	;volatile
  1785                           
  1786                           ;PIC18F27J53-ChargeStation6-02.h: 315: T3CONbits.TMR3ON = 1;
  1787  002E02  8079               	bsf	3961,0,c	;volatile
  1788                           
  1789                           ;PIC18F27J53-ChargeStation6-02.h: 316: TXSTA1bits.TXEN = 1;
  1790  002E04  8AAD               	bsf	4013,5,c	;volatile
  1791                           
  1792                           ;PIC18F27J53-ChargeStation6-02.h: 317: RCSTA1bits.CREN = 1;
  1793  002E06  88AC               	bsf	4012,4,c	;volatile
  1794                           
  1795                           ;PIC18F27J53-ChargeStation6-02.h: 319: INTCONbits.T0IE = 1;
  1796  002E08  8AF2               	bsf	intcon,5,c	;volatile
  1797                           
  1798                           ;PIC18F27J53-ChargeStation6-02.h: 320: PIE1bits.TMR1IE = 1;
  1799  002E0A  809D               	bsf	3997,0,c	;volatile
  1800                           
  1801                           ;PIC18F27J53-ChargeStation6-02.h: 321: PIE2bits.TMR3IE = 1;
  1802  002E0C  82A0               	bsf	4000,1,c	;volatile
  1803                           
  1804                           ;PIC18F27J53-ChargeStation6-02.h: 322: PIE1bits.TX1IE = 1;
  1805  002E0E  889D               	bsf	3997,4,c	;volatile
  1806                           
  1807                           ;PIC18F27J53-ChargeStation6-02.h: 323: PIE1bits.RC1IE = 1;
  1808  002E10  8A9D               	bsf	3997,5,c	;volatile
  1809  002E12                     l5456:
  1810                           
  1811                           ; BSR set to: 0
  1812                           ;PIC18F27J53-ChargeStation6-02.h: 324: }
  1813                           ;PIC18F27J53-ChargeStation6-02.h: 325: }
  1814                           ;PIC18F27J53-ChargeStation6-02.h: 326: if (sleep_flag) {
  1815  002E12  0100               	movlb	0	; () banked
  1816  002E14  51D0               	movf	_sleep_flag& (0+255),w,b
  1817  002E16  B4D8               	btfsc	status,2,c
  1818  002E18  0012               	return	
  1819                           
  1820                           ; BSR set to: 0
  1821  002E1A  0003               	sleep		;# 
  1822                           
  1823                           ;PIC18F27J53-ChargeStation6-02.h: 328: __nop();
  1824  002E1C  F000               	nop	
  1825  002E1E  0012               	return	
  1826  002E20                     __end_of_sleep_loop:
  1827                           	opt stack 0
  1828                           tblptru	equ	0xFF8
  1829                           tblptrh	equ	0xFF7
  1830                           tblptrl	equ	0xFF6
  1831                           tablat	equ	0xFF5
  1832                           prodh	equ	0xFF4
  1833                           prodl	equ	0xFF3
  1834                           intcon	equ	0xFF2
  1835                           postinc0	equ	0xFEE
  1836                           wreg	equ	0xFE8
  1837                           postdec1	equ	0xFE5
  1838                           fsr1l	equ	0xFE1
  1839                           indf2	equ	0xFDF
  1840                           postinc2	equ	0xFDE
  1841                           postdec2	equ	0xFDD
  1842                           fsr2h	equ	0xFDA
  1843                           fsr2l	equ	0xFD9
  1844                           status	equ	0xFD8
  1845                           
  1846 ;; *************** function _nomal_mode_loop *****************
  1847 ;; Defined at:
  1848 ;;		line 238 in file "PIC18F27J53-ChargeStation6-02.h"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;		None
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;  i               1    4[BANK0 ] unsigned char 
  1853 ;; Return value:  Size  Location     Type
  1854 ;;		None               void
  1855 ;; Registers used:
  1856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1863 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1865 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1866 ;;Total ram usage:        1 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    5
  1869 ;; This function calls:
  1870 ;;		_LED
  1871 ;;		_OUT
  1872 ;;		_delay_set
  1873 ;;		_sw_flag_clear
  1874 ;;		_sw_flag_read
  1875 ;; This function is called by:
  1876 ;;		_main
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text2
  1881  002100                     __ptext2:
  1882                           	opt stack 0
  1883  002100                     _nomal_mode_loop:
  1884                           	opt stack 25
  1885                           
  1886                           ;PIC18F27J53-ChargeStation6-02.h: 239: uint8_t i;
  1887                           ;PIC18F27J53-ChargeStation6-02.h: 240: for (i = 0; i < 3; i++) {
  1888                           
  1889                           ;incstack = 0
  1890  002100  0E00               	movlw	0
  1891  002102  0100               	movlb	0	; () banked
  1892  002104  6F64               	movwf	nomal_mode_loop@i& (0+255),b
  1893  002106  D0F4               	goto	L9
  1894  002108                     l5336:
  1895                           
  1896                           ; BSR set to: 0
  1897                           ;PIC18F27J53-ChargeStation6-02.h: 241: if (sw_flag_read(i, 0x10)) {
  1898  002108  0E10               	movlw	16
  1899  00210A  0100               	movlb	0	; () banked
  1900  00210C  6F60               	movwf	sw_flag_read@bit_and& (0+255),b
  1901  00210E  0100               	movlb	0	; () banked
  1902  002110  5164               	movf	nomal_mode_loop@i& (0+255),w,b
  1903  002112  EC37  F01E         	call	_sw_flag_read
  1904  002116  0900               	iorlw	0
  1905  002118  B4D8               	btfsc	status,2,c
  1906  00211A  D02C               	goto	l5350
  1907                           
  1908                           ;PIC18F27J53-ChargeStation6-02.h: 242: OUT(i, 1);
  1909  00211C  0E01               	movlw	1
  1910  00211E  0100               	movlb	0	; () banked
  1911  002120  6F60               	movwf	OUT@value& (0+255),b
  1912  002122  0100               	movlb	0	; () banked
  1913  002124  5164               	movf	nomal_mode_loop@i& (0+255),w,b
  1914  002126  EC52  F01D         	call	_OUT
  1915                           
  1916                           ;PIC18F27J53-ChargeStation6-02.h: 243: LED(i, 1);
  1917  00212A  0E01               	movlw	1
  1918  00212C  0100               	movlb	0	; () banked
  1919  00212E  6F60               	movwf	LED@value& (0+255),b
  1920  002130  0100               	movlb	0	; () banked
  1921  002132  5164               	movf	nomal_mode_loop@i& (0+255),w,b
  1922  002134  ECFE  F01C         	call	_LED
  1923                           
  1924                           ;PIC18F27J53-ChargeStation6-02.h: 244: cut_cnt[i] = 0;
  1925  002138  0100               	movlb	0	; () banked
  1926  00213A  5164               	movf	nomal_mode_loop@i& (0+255),w,b
  1927  00213C  0D02               	mullw	2
  1928  00213E  0100               	movlb	0	; () banked
  1929  002140  0EBD               	movlw	low _cut_cnt
  1930  002142  24F3               	addwf	prodl,w,c
  1931  002144  6ED9               	movwf	fsr2l,c
  1932  002146  0100               	movlb	0	; () banked
  1933  002148  0E00               	movlw	high _cut_cnt
  1934  00214A  20F4               	addwfc	prodh,w,c
  1935  00214C  6EDA               	movwf	fsr2h,c
  1936  00214E  0E00               	movlw	0
  1937  002150  6EDE               	movwf	postinc2,c
  1938  002152  0E00               	movlw	0
  1939  002154  6EDD               	movwf	postdec2,c
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;PIC18F27J53-ChargeStation6-02.h: 245: print_port = i;
  1943  002156  C064  F031         	movff	nomal_mode_loop@i,_print_port
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;PIC18F27J53-ChargeStation6-02.h: 246: if (print_content == AUTO_STOP || print_content =
      +                          = ALWAYS_ON)print_content = CURRENT;
  1947  00215A  0100               	movlb	0	; () banked
  1948  00215C  51CF               	movf	_print_content& (0+255),w,b
  1949  00215E  0A07               	xorlw	7
  1950  002160  B4D8               	btfsc	status,2,c
  1951  002162  D005               	goto	l5348
  1952                           
  1953                           ; BSR set to: 0
  1954  002164  0100               	movlb	0	; () banked
  1955  002166  51CF               	movf	_print_content& (0+255),w,b
  1956  002168  0A06               	xorlw	6
  1957  00216A  A4D8               	btfss	status,2,c
  1958  00216C  D003               	goto	l5350
  1959  00216E                     l5348:
  1960                           
  1961                           ; BSR set to: 0
  1962  00216E  0E02               	movlw	2
  1963  002170  0100               	movlb	0	; () banked
  1964  002172  6FCF               	movwf	_print_content& (0+255),b
  1965  002174                     l5350:
  1966                           
  1967                           ;PIC18F27J53-ChargeStation6-02.h: 247: }
  1968                           ;PIC18F27J53-ChargeStation6-02.h: 248: if (sw_flag_read(i, 0x40)) {
  1969  002174  0E40               	movlw	64
  1970  002176  0100               	movlb	0	; () banked
  1971  002178  6F60               	movwf	sw_flag_read@bit_and& (0+255),b
  1972  00217A  0100               	movlb	0	; () banked
  1973  00217C  5164               	movf	nomal_mode_loop@i& (0+255),w,b
  1974  00217E  EC37  F01E         	call	_sw_flag_read
  1975  002182  0900               	iorlw	0
  1976  002184  B4D8               	btfsc	status,2,c
  1977  002186  D00A               	goto	l5356
  1978                           
  1979                           ;PIC18F27J53-ChargeStation6-02.h: 249: sw_flag_clear(i, 0x00);
  1980  002188  0E00               	movlw	0
  1981  00218A  0100               	movlb	0	; () banked
  1982  00218C  6F60               	movwf	sw_flag_clear@bit_and& (0+255),b
  1983  00218E  0100               	movlb	0	; () banked
  1984  002190  5164               	movf	nomal_mode_loop@i& (0+255),w,b
  1985  002192  ECF2  F01D         	call	_sw_flag_clear
  1986                           
  1987                           ;PIC18F27J53-ChargeStation6-02.h: 250: print_content = RESET;
  1988  002196  0E04               	movlw	4
  1989  002198  0100               	movlb	0	; () banked
  1990  00219A  6FCF               	movwf	_print_content& (0+255),b
  1991  00219C                     l5356:
  1992                           
  1993                           ;PIC18F27J53-ChargeStation6-02.h: 251: }
  1994                           ;PIC18F27J53-ChargeStation6-02.h: 252: if (sw_flag_read(i, 0x04)) {
  1995  00219C  0E04               	movlw	4
  1996  00219E  0100               	movlb	0	; () banked
  1997  0021A0  6F60               	movwf	sw_flag_read@bit_and& (0+255),b
  1998  0021A2  0100               	movlb	0	; () banked
  1999  0021A4  5164               	movf	nomal_mode_loop@i& (0+255),w,b
  2000  0021A6  EC37  F01E         	call	_sw_flag_read
  2001  0021AA  0900               	iorlw	0
  2002  0021AC  B4D8               	btfsc	status,2,c
  2003  0021AE  D036               	goto	l5368
  2004                           
  2005                           ;PIC18F27J53-ChargeStation6-02.h: 253: sw_flag_clear(i, 0x00);
  2006  0021B0  0E00               	movlw	0
  2007  0021B2  0100               	movlb	0	; () banked
  2008  0021B4  6F60               	movwf	sw_flag_clear@bit_and& (0+255),b
  2009  0021B6  0100               	movlb	0	; () banked
  2010  0021B8  5164               	movf	nomal_mode_loop@i& (0+255),w,b
  2011  0021BA  ECF2  F01D         	call	_sw_flag_clear
  2012                           
  2013                           ;PIC18F27J53-ChargeStation6-02.h: 254: print_content = RESETED;
  2014  0021BE  0E05               	movlw	5
  2015  0021C0  0100               	movlb	0	; () banked
  2016  0021C2  6FCF               	movwf	_print_content& (0+255),b
  2017                           
  2018                           ; BSR set to: 0
  2019                           ;PIC18F27J53-ChargeStation6-02.h: 255: S[i] = 0;
  2020  0021C4  0100               	movlb	0	; () banked
  2021  0021C6  5164               	movf	nomal_mode_loop@i& (0+255),w,b
  2022  0021C8  0D04               	mullw	4
  2023  0021CA  0100               	movlb	0	; () banked
  2024  0021CC  0EA5               	movlw	low _S
  2025  0021CE  24F3               	addwf	prodl,w,c
  2026  0021D0  6ED9               	movwf	fsr2l,c
  2027  0021D2  0100               	movlb	0	; () banked
  2028  0021D4  0E00               	movlw	high _S
  2029  0021D6  20F4               	addwfc	prodh,w,c
  2030  0021D8  6EDA               	movwf	fsr2h,c
  2031  0021DA  6ADE               	clrf	postinc2,c
  2032  0021DC  6ADE               	clrf	postinc2,c
  2033  0021DE  6ADE               	clrf	postinc2,c
  2034  0021E0  6ADD               	clrf	postdec2,c
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;PIC18F27J53-ChargeStation6-02.h: 256: s[i] = 0;
  2038  0021E2  0100               	movlb	0	; () banked
  2039  0021E4  5164               	movf	nomal_mode_loop@i& (0+255),w,b
  2040  0021E6  0D04               	mullw	4
  2041  0021E8  0100               	movlb	0	; () banked
  2042  0021EA  0EB1               	movlw	low _s
  2043  0021EC  24F3               	addwf	prodl,w,c
  2044  0021EE  6ED9               	movwf	fsr2l,c
  2045  0021F0  0100               	movlb	0	; () banked
  2046  0021F2  0E00               	movlw	high _s
  2047  0021F4  20F4               	addwfc	prodh,w,c
  2048  0021F6  6EDA               	movwf	fsr2h,c
  2049  0021F8  6ADE               	clrf	postinc2,c
  2050  0021FA  6ADE               	clrf	postinc2,c
  2051  0021FC  6ADE               	clrf	postinc2,c
  2052  0021FE  6ADD               	clrf	postdec2,c
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;PIC18F27J53-ChargeStation6-02.h: 257: delay_set(&d_display, 64);
  2056  002200  0E00               	movlw	high _d_display
  2057  002202  0100               	movlb	0	; () banked
  2058  002204  6F61               	movwf	(delay_set@d+1)& (0+255),b
  2059  002206  0E3E               	movlw	low _d_display
  2060  002208  0100               	movlb	0	; () banked
  2061  00220A  6F60               	movwf	delay_set@d& (0+255),b
  2062  00220C  0E00               	movlw	0
  2063  00220E  0100               	movlb	0	; () banked
  2064  002210  6F63               	movwf	(delay_set@value+1)& (0+255),b
  2065  002212  0E40               	movlw	64
  2066  002214  0100               	movlb	0	; () banked
  2067  002216  6F62               	movwf	delay_set@value& (0+255),b
  2068  002218  EC51  F01F         	call	_delay_set	;wreg free
  2069  00221C                     l5368:
  2070                           
  2071                           ;PIC18F27J53-ChargeStation6-02.h: 258: }
  2072                           ;PIC18F27J53-ChargeStation6-02.h: 259: if (sw_flag_read(i, 0x80)) {
  2073  00221C  0E80               	movlw	128
  2074  00221E  0100               	movlb	0	; () banked
  2075  002220  6F60               	movwf	sw_flag_read@bit_and& (0+255),b
  2076  002222  0100               	movlb	0	; () banked
  2077  002224  5164               	movf	nomal_mode_loop@i& (0+255),w,b
  2078  002226  EC37  F01E         	call	_sw_flag_read
  2079  00222A  0900               	iorlw	0
  2080  00222C  B4D8               	btfsc	status,2,c
  2081  00222E  D018               	goto	l5378
  2082                           
  2083                           ;PIC18F27J53-ChargeStation6-02.h: 260: sw_flag_clear(i, 0x00);
  2084  002230  0E00               	movlw	0
  2085  002232  0100               	movlb	0	; () banked
  2086  002234  6F60               	movwf	sw_flag_clear@bit_and& (0+255),b
  2087  002236  0100               	movlb	0	; () banked
  2088  002238  5164               	movf	nomal_mode_loop@i& (0+255),w,b
  2089  00223A  ECF2  F01D         	call	_sw_flag_clear
  2090                           
  2091                           ;PIC18F27J53-ChargeStation6-02.h: 261: if (auto_cut_ON[i]) {
  2092  00223E  0100               	movlb	0	; () banked
  2093  002240  5164               	movf	nomal_mode_loop@i& (0+255),w,b
  2094  002242  0D01               	mullw	1
  2095  002244  0E28               	movlw	low _auto_cut_ON
  2096  002246  24F3               	addwf	prodl,w,c
  2097  002248  6ED9               	movwf	fsr2l,c
  2098  00224A  0E00               	movlw	high _auto_cut_ON
  2099  00224C  20F4               	addwfc	prodh,w,c
  2100  00224E  6EDA               	movwf	fsr2h,c
  2101  002250  50DF               	movf	indf2,w,c
  2102  002252  B4D8               	btfsc	status,2,c
  2103  002254  D002               	goto	l5376
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;PIC18F27J53-ChargeStation6-02.h: 262: print_content = AUTO_STOP;
  2107  002256  0E07               	movlw	7
  2108  002258  D001               	goto	L7
  2109  00225A                     l5376:
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;PIC18F27J53-ChargeStation6-02.h: 264: print_content = ALWAYS_ON;
  2113  00225A  0E06               	movlw	6
  2114  00225C                     L7:
  2115  00225C  0100               	movlb	0	; () banked
  2116  00225E  6FCF               	movwf	_print_content& (0+255),b
  2117  002260                     l5378:
  2118                           
  2119                           ;PIC18F27J53-ChargeStation6-02.h: 265: }
  2120                           ;PIC18F27J53-ChargeStation6-02.h: 266: }
  2121                           ;PIC18F27J53-ChargeStation6-02.h: 267: if (sw_flag_read(i, 0x08)) {
  2122  002260  0E08               	movlw	8
  2123  002262  0100               	movlb	0	; () banked
  2124  002264  6F60               	movwf	sw_flag_read@bit_and& (0+255),b
  2125  002266  0100               	movlb	0	; () banked
  2126  002268  5164               	movf	nomal_mode_loop@i& (0+255),w,b
  2127  00226A  EC37  F01E         	call	_sw_flag_read
  2128  00226E  0900               	iorlw	0
  2129  002270  B4D8               	btfsc	status,2,c
  2130  002272  D03C               	goto	l5394
  2131                           
  2132                           ;PIC18F27J53-ChargeStation6-02.h: 268: sw_flag_clear(i, 0x00);
  2133  002274  0E00               	movlw	0
  2134  002276  0100               	movlb	0	; () banked
  2135  002278  6F60               	movwf	sw_flag_clear@bit_and& (0+255),b
  2136  00227A  0100               	movlb	0	; () banked
  2137  00227C  5164               	movf	nomal_mode_loop@i& (0+255),w,b
  2138  00227E  ECF2  F01D         	call	_sw_flag_clear
  2139                           
  2140                           ;PIC18F27J53-ChargeStation6-02.h: 269: if (auto_cut_ON[i]) {
  2141  002282  0100               	movlb	0	; () banked
  2142  002284  5164               	movf	nomal_mode_loop@i& (0+255),w,b
  2143  002286  0D01               	mullw	1
  2144  002288  0E28               	movlw	low _auto_cut_ON
  2145  00228A  24F3               	addwf	prodl,w,c
  2146  00228C  6ED9               	movwf	fsr2l,c
  2147  00228E  0E00               	movlw	high _auto_cut_ON
  2148  002290  20F4               	addwfc	prodh,w,c
  2149  002292  6EDA               	movwf	fsr2h,c
  2150  002294  50DF               	movf	indf2,w,c
  2151  002296  B4D8               	btfsc	status,2,c
  2152  002298  D00D               	goto	l5388
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;PIC18F27J53-ChargeStation6-02.h: 270: auto_cut_ON[i] = 0;
  2156  00229A  0100               	movlb	0	; () banked
  2157  00229C  5164               	movf	nomal_mode_loop@i& (0+255),w,b
  2158  00229E  0D01               	mullw	1
  2159  0022A0  0E28               	movlw	low _auto_cut_ON
  2160  0022A2  24F3               	addwf	prodl,w,c
  2161  0022A4  6ED9               	movwf	fsr2l,c
  2162  0022A6  0E00               	movlw	high _auto_cut_ON
  2163  0022A8  20F4               	addwfc	prodh,w,c
  2164  0022AA  6EDA               	movwf	fsr2h,c
  2165  0022AC  0E00               	movlw	0
  2166  0022AE  6EDF               	movwf	indf2,c
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;PIC18F27J53-ChargeStation6-02.h: 271: print_content = ALWAYS_ON;
  2170  0022B0  0E06               	movlw	6
  2171  0022B2  D00C               	goto	L8
  2172  0022B4                     l5388:
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;PIC18F27J53-ChargeStation6-02.h: 273: auto_cut_ON[i] = 1;
  2176  0022B4  0100               	movlb	0	; () banked
  2177  0022B6  5164               	movf	nomal_mode_loop@i& (0+255),w,b
  2178  0022B8  0D01               	mullw	1
  2179  0022BA  0E28               	movlw	low _auto_cut_ON
  2180  0022BC  24F3               	addwf	prodl,w,c
  2181  0022BE  6ED9               	movwf	fsr2l,c
  2182  0022C0  0E00               	movlw	high _auto_cut_ON
  2183  0022C2  20F4               	addwfc	prodh,w,c
  2184  0022C4  6EDA               	movwf	fsr2h,c
  2185  0022C6  0E01               	movlw	1
  2186  0022C8  6EDF               	movwf	indf2,c
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;PIC18F27J53-ChargeStation6-02.h: 274: print_content = AUTO_STOP;
  2190  0022CA  0E07               	movlw	7
  2191  0022CC                     L8:
  2192  0022CC  0100               	movlb	0	; () banked
  2193  0022CE  6FCF               	movwf	_print_content& (0+255),b
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;PIC18F27J53-ChargeStation6-02.h: 275: }
  2197                           ;PIC18F27J53-ChargeStation6-02.h: 276: delay_set(&d_display, 64);
  2198                           
  2199                           ; BSR set to: 0
  2200  0022D0  0E00               	movlw	high _d_display
  2201  0022D2  0100               	movlb	0	; () banked
  2202  0022D4  6F61               	movwf	(delay_set@d+1)& (0+255),b
  2203  0022D6  0E3E               	movlw	low _d_display
  2204  0022D8  0100               	movlb	0	; () banked
  2205  0022DA  6F60               	movwf	delay_set@d& (0+255),b
  2206  0022DC  0E00               	movlw	0
  2207  0022DE  0100               	movlb	0	; () banked
  2208  0022E0  6F63               	movwf	(delay_set@value+1)& (0+255),b
  2209  0022E2  0E40               	movlw	64
  2210  0022E4  0100               	movlb	0	; () banked
  2211  0022E6  6F62               	movwf	delay_set@value& (0+255),b
  2212  0022E8  EC51  F01F         	call	_delay_set	;wreg free
  2213  0022EC                     l5394:
  2214  0022EC  0100               	movlb	0	; () banked
  2215  0022EE  2B64               	incf	nomal_mode_loop@i& (0+255),f,b
  2216  0022F0                     L9:
  2217                           
  2218                           ; BSR set to: 0
  2219  0022F0  0E02               	movlw	2
  2220  0022F2  0100               	movlb	0	; () banked
  2221  0022F4  6564               	cpfsgt	nomal_mode_loop@i& (0+255),b
  2222  0022F6  D708               	goto	l5336
  2223                           
  2224                           ; BSR set to: 0
  2225                           ;PIC18F27J53-ChargeStation6-02.h: 277: }
  2226                           ;PIC18F27J53-ChargeStation6-02.h: 278: }
  2227                           ;PIC18F27J53-ChargeStation6-02.h: 279: if (d_display.flag) {
  2228                           
  2229                           ; BSR set to: 0
  2230  0022F8  503E               	movf	_d_display,w,c
  2231  0022FA  B4D8               	btfsc	status,2,c
  2232  0022FC  0012               	return	
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;PIC18F27J53-ChargeStation6-02.h: 280: d_display.flag=0;
  2236  0022FE  0E00               	movlw	0
  2237  002300  6E3E               	movwf	_d_display,c
  2238                           
  2239                           ;PIC18F27J53-ChargeStation6-02.h: 281: print_content = CURRENT;
  2240  002302  0E02               	movlw	2
  2241  002304  0100               	movlb	0	; () banked
  2242  002306  6FCF               	movwf	_print_content& (0+255),b
  2243                           
  2244                           ;PIC18F27J53-ChargeStation6-02.h: 282: display_flag = 1;
  2245  002308  0E01               	movlw	1
  2246  00230A  0100               	movlb	0	; () banked
  2247  00230C  6FCD               	movwf	_display_flag& (0+255),b
  2248  00230E  0012               	return	
  2249  002310                     __end_of_nomal_mode_loop:
  2250                           	opt stack 0
  2251                           tblptru	equ	0xFF8
  2252                           tblptrh	equ	0xFF7
  2253                           tblptrl	equ	0xFF6
  2254                           tablat	equ	0xFF5
  2255                           prodh	equ	0xFF4
  2256                           prodl	equ	0xFF3
  2257                           intcon	equ	0xFF2
  2258                           postinc0	equ	0xFEE
  2259                           wreg	equ	0xFE8
  2260                           postdec1	equ	0xFE5
  2261                           fsr1l	equ	0xFE1
  2262                           indf2	equ	0xFDF
  2263                           postinc2	equ	0xFDE
  2264                           postdec2	equ	0xFDD
  2265                           fsr2h	equ	0xFDA
  2266                           fsr2l	equ	0xFD9
  2267                           status	equ	0xFD8
  2268                           
  2269 ;; *************** function _sw_flag_read *****************
  2270 ;; Defined at:
  2271 ;;		line 65 in file "PIC18F27J53-ChargeStation6-02.h"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  port            1    wreg     unsigned char 
  2274 ;;  bit_and         1    0[BANK0 ] unsigned char 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;  port            1    1[BANK0 ] unsigned char 
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      unsigned char 
  2279 ;; Registers used:
  2280 ;;		wreg, status,2, status,0
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2286 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2287 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2289 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2290 ;;Total ram usage:        2 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    4
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		_nomal_mode_loop
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text3
  2301  003C6E                     __ptext3:
  2302                           	opt stack 0
  2303  003C6E                     _sw_flag_read:
  2304                           	opt stack 25
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;incstack = 0
  2308                           ;sw_flag_read@port stored from wreg
  2309  003C6E  0100               	movlb	0	; () banked
  2310  003C70  6F61               	movwf	sw_flag_read@port& (0+255),b
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;PIC18F27J53-ChargeStation6-02.h: 66: switch (port) {
  2314  003C72  D00F               	goto	l5130
  2315  003C74                     l5112:
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;PIC18F27J53-ChargeStation6-02.h: 68: return (sw0.flags) & bit_and;
  2319  003C74  5038               	movf	_sw0+2,w,c
  2320  003C76  0100               	movlb	0	; () banked
  2321  003C78  1560               	andwf	sw_flag_read@bit_and& (0+255),w,b
  2322  003C7A  0012               	return	
  2323  003C7C                     l5116:
  2324                           
  2325                           ; BSR set to: 0
  2326                           ;PIC18F27J53-ChargeStation6-02.h: 70: return (sw1.flags) & bit_and;
  2327  003C7C  503C               	movf	_sw1+2,w,c
  2328  003C7E  0100               	movlb	0	; () banked
  2329  003C80  1560               	andwf	sw_flag_read@bit_and& (0+255),w,b
  2330  003C82  0012               	return	
  2331  003C84                     l5120:
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;PIC18F27J53-ChargeStation6-02.h: 72: return (sw2.flags) & bit_and;
  2335  003C84  0100               	movlb	0	; () banked
  2336  003C86  51E0               	movf	(_sw2+2)& (0+255),w,b
  2337  003C88  0100               	movlb	0	; () banked
  2338  003C8A  1560               	andwf	sw_flag_read@bit_and& (0+255),w,b
  2339  003C8C  0012               	return	
  2340  003C8E                     l5124:
  2341                           
  2342                           ; BSR set to: 0
  2343                           ;PIC18F27J53-ChargeStation6-02.h: 74: return 0;
  2344  003C8E  0E00               	movlw	0
  2345  003C90  0012               	return	
  2346  003C92                     l5130:
  2347                           
  2348                           ; BSR set to: 0
  2349  003C92  0100               	movlb	0	; () banked
  2350  003C94  5161               	movf	sw_flag_read@port& (0+255),w,b
  2351                           
  2352                           ; Switch size 1, requested type "space"
  2353                           ; Number of cases is 3, Range of values is 0 to 2
  2354                           ; switch strategies available:
  2355                           ; Name         Instructions Cycles
  2356                           ; simple_byte           10     6 (average)
  2357                           ;	Chosen strategy is simple_byte
  2358  003C96  0A00               	xorlw	0	; case 0
  2359  003C98  B4D8               	btfsc	status,2,c
  2360  003C9A  D7EC               	goto	l5112
  2361  003C9C  0A01               	xorlw	1	; case 1
  2362  003C9E  B4D8               	btfsc	status,2,c
  2363  003CA0  D7ED               	goto	l5116
  2364  003CA2  0A03               	xorlw	3	; case 2
  2365  003CA4  B4D8               	btfsc	status,2,c
  2366  003CA6  D7EE               	goto	l5120
  2367  003CA8  D7F2               	goto	l5124
  2368  003CAA                     __end_of_sw_flag_read:
  2369                           	opt stack 0
  2370                           tblptru	equ	0xFF8
  2371                           tblptrh	equ	0xFF7
  2372                           tblptrl	equ	0xFF6
  2373                           tablat	equ	0xFF5
  2374                           prodh	equ	0xFF4
  2375                           prodl	equ	0xFF3
  2376                           intcon	equ	0xFF2
  2377                           postinc0	equ	0xFEE
  2378                           wreg	equ	0xFE8
  2379                           postdec1	equ	0xFE5
  2380                           fsr1l	equ	0xFE1
  2381                           indf2	equ	0xFDF
  2382                           postinc2	equ	0xFDE
  2383                           postdec2	equ	0xFDD
  2384                           fsr2h	equ	0xFDA
  2385                           fsr2l	equ	0xFD9
  2386                           status	equ	0xFD8
  2387                           
  2388 ;; *************** function _sw_flag_clear *****************
  2389 ;; Defined at:
  2390 ;;		line 78 in file "PIC18F27J53-ChargeStation6-02.h"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;  port            1    wreg     unsigned char 
  2393 ;;  bit_and         1    0[BANK0 ] unsigned char 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;  port            1    1[BANK0 ] unsigned char 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;		None               void
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2405 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2406 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2408 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2409 ;;Total ram usage:        2 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:    4
  2412 ;; This function calls:
  2413 ;;		Nothing
  2414 ;; This function is called by:
  2415 ;;		_nomal_mode_loop
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           	psect	text4
  2420  003BE4                     __ptext4:
  2421                           	opt stack 0
  2422  003BE4                     _sw_flag_clear:
  2423                           	opt stack 25
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;incstack = 0
  2427                           ;sw_flag_clear@port stored from wreg
  2428  003BE4  0100               	movlb	0	; () banked
  2429  003BE6  6F61               	movwf	sw_flag_clear@port& (0+255),b
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;PIC18F27J53-ChargeStation6-02.h: 79: switch (port) {
  2433  003BE8  D014               	goto	l5142
  2434  003BEA                     l5134:
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;PIC18F27J53-ChargeStation6-02.h: 81: sw0.flags &= bit_and;
  2438  003BEA  0100               	movlb	0	; () banked
  2439  003BEC  5160               	movf	sw_flag_clear@bit_and& (0+255),w,b
  2440  003BEE  1638               	andwf	_sw0+2,f,c
  2441  003BF0  0E00               	movlw	0
  2442  003BF2  1639               	andwf	_sw0+3,f,c
  2443                           
  2444                           ;PIC18F27J53-ChargeStation6-02.h: 82: break;
  2445  003BF4  0012               	return	
  2446  003BF6                     l5136:
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;PIC18F27J53-ChargeStation6-02.h: 84: sw1.flags &= bit_and;
  2450  003BF6  0100               	movlb	0	; () banked
  2451  003BF8  5160               	movf	sw_flag_clear@bit_and& (0+255),w,b
  2452  003BFA  163C               	andwf	_sw1+2,f,c
  2453  003BFC  0E00               	movlw	0
  2454  003BFE  163D               	andwf	_sw1+3,f,c
  2455                           
  2456                           ;PIC18F27J53-ChargeStation6-02.h: 85: break;
  2457  003C00  0012               	return	
  2458  003C02                     l5138:
  2459                           
  2460                           ; BSR set to: 0
  2461                           ;PIC18F27J53-ChargeStation6-02.h: 87: sw2.flags &= bit_and;
  2462  003C02  0100               	movlb	0	; () banked
  2463  003C04  5160               	movf	sw_flag_clear@bit_and& (0+255),w,b
  2464  003C06  0100               	movlb	0	; () banked
  2465  003C08  17E0               	andwf	(_sw2+2)& (0+255),f,b
  2466  003C0A  0E00               	movlw	0
  2467  003C0C  0100               	movlb	0	; () banked
  2468  003C0E  17E1               	andwf	(_sw2+3)& (0+255),f,b
  2469                           
  2470                           ;PIC18F27J53-ChargeStation6-02.h: 88: break;
  2471  003C10  0012               	return	
  2472  003C12                     l5142:
  2473                           
  2474                           ; BSR set to: 0
  2475  003C12  0100               	movlb	0	; () banked
  2476  003C14  5161               	movf	sw_flag_clear@port& (0+255),w,b
  2477                           
  2478                           ; Switch size 1, requested type "space"
  2479                           ; Number of cases is 3, Range of values is 0 to 2
  2480                           ; switch strategies available:
  2481                           ; Name         Instructions Cycles
  2482                           ; simple_byte           10     6 (average)
  2483                           ;	Chosen strategy is simple_byte
  2484  003C16  0A00               	xorlw	0	; case 0
  2485  003C18  B4D8               	btfsc	status,2,c
  2486  003C1A  D7E7               	goto	l5134
  2487  003C1C  0A01               	xorlw	1	; case 1
  2488  003C1E  B4D8               	btfsc	status,2,c
  2489  003C20  D7EA               	goto	l5136
  2490  003C22  0A03               	xorlw	3	; case 2
  2491  003C24  A4D8               	btfss	status,2,c
  2492  003C26  0012               	return	
  2493  003C28  D7EC               	goto	l5138
  2494  003C2A                     __end_of_sw_flag_clear:
  2495                           	opt stack 0
  2496                           tblptru	equ	0xFF8
  2497                           tblptrh	equ	0xFF7
  2498                           tblptrl	equ	0xFF6
  2499                           tablat	equ	0xFF5
  2500                           prodh	equ	0xFF4
  2501                           prodl	equ	0xFF3
  2502                           intcon	equ	0xFF2
  2503                           postinc0	equ	0xFEE
  2504                           wreg	equ	0xFE8
  2505                           postdec1	equ	0xFE5
  2506                           fsr1l	equ	0xFE1
  2507                           indf2	equ	0xFDF
  2508                           postinc2	equ	0xFDE
  2509                           postdec2	equ	0xFDD
  2510                           fsr2h	equ	0xFDA
  2511                           fsr2l	equ	0xFD9
  2512                           status	equ	0xFD8
  2513                           
  2514 ;; *************** function _delay_set *****************
  2515 ;; Defined at:
  2516 ;;		line 364 in file "../My_header\My_header.h"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;  d               2    0[BANK0 ] PTR struct Delay
  2519 ;;		 -> d_display(3), 
  2520 ;;  value           2    2[BANK0 ] unsigned int 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;		None
  2523 ;; Return value:  Size  Location     Type
  2524 ;;		None               void
  2525 ;; Registers used:
  2526 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2532 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2535 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2536 ;;Total ram usage:        4 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    4
  2539 ;; This function calls:
  2540 ;;		Nothing
  2541 ;; This function is called by:
  2542 ;;		_nomal_mode_loop
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           	psect	text5
  2547  003EA2                     __ptext5:
  2548                           	opt stack 0
  2549  003EA2                     _delay_set:
  2550                           	opt stack 25
  2551                           
  2552                           ;My_header\My_header.h: 365: d->cnt = value;
  2553                           
  2554                           ; BSR set to: 0
  2555                           ;incstack = 0
  2556  003EA2  0100               	movlb	0	; () banked
  2557  003EA4  EE20 F001          	lfsr	2,1
  2558  003EA8  0100               	movlb	0	; () banked
  2559  003EAA  5160               	movf	delay_set@d& (0+255),w,b
  2560  003EAC  26D9               	addwf	fsr2l,f,c
  2561  003EAE  0100               	movlb	0	; () banked
  2562  003EB0  5161               	movf	(delay_set@d+1)& (0+255),w,b
  2563  003EB2  22DA               	addwfc	fsr2h,f,c
  2564  003EB4  0100               	movlb	0	; () banked
  2565  003EB6  C062  FFDE         	movff	delay_set@value,postinc2
  2566  003EBA  0100               	movlb	0	; () banked
  2567  003EBC  C063  FFDD         	movff	delay_set@value+1,postdec2
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;My_header\My_header.h: 366: d->flag = 0;
  2571  003EC0  C060  FFD9         	movff	delay_set@d,fsr2l
  2572  003EC4  C061  FFDA         	movff	delay_set@d+1,fsr2h
  2573  003EC8  0E00               	movlw	0
  2574  003ECA  6EDF               	movwf	indf2,c
  2575                           
  2576                           ; BSR set to: 0
  2577  003ECC  0012               	return	
  2578  003ECE                     __end_of_delay_set:
  2579                           	opt stack 0
  2580                           tblptru	equ	0xFF8
  2581                           tblptrh	equ	0xFF7
  2582                           tblptrl	equ	0xFF6
  2583                           tablat	equ	0xFF5
  2584                           prodh	equ	0xFF4
  2585                           prodl	equ	0xFF3
  2586                           intcon	equ	0xFF2
  2587                           postinc0	equ	0xFEE
  2588                           wreg	equ	0xFE8
  2589                           postdec1	equ	0xFE5
  2590                           fsr1l	equ	0xFE1
  2591                           indf2	equ	0xFDF
  2592                           postinc2	equ	0xFDE
  2593                           postdec2	equ	0xFDD
  2594                           fsr2h	equ	0xFDA
  2595                           fsr2l	equ	0xFD9
  2596                           status	equ	0xFD8
  2597                           
  2598 ;; *************** function _LED *****************
  2599 ;; Defined at:
  2600 ;;		line 51 in file "PIC18F27J53-ChargeStation6-02.h"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  b               1    wreg     unsigned char 
  2603 ;;  value           1    0[BANK0 ] unsigned char 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  b               1    1[BANK0 ] unsigned char 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;		None               void
  2608 ;; Registers used:
  2609 ;;		wreg, status,2, status,0
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2615 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2616 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2618 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2619 ;;Total ram usage:        2 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    4
  2622 ;; This function calls:
  2623 ;;		Nothing
  2624 ;; This function is called by:
  2625 ;;		_nomal_mode_loop
  2626 ;;		_sleep_loop
  2627 ;;		_main
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           	psect	text6
  2632  0039FC                     __ptext6:
  2633                           	opt stack 0
  2634  0039FC                     _LED:
  2635                           	opt stack 25
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;incstack = 0
  2639                           ;LED@b stored from wreg
  2640  0039FC  0100               	movlb	0	; () banked
  2641  0039FE  6F61               	movwf	LED@b& (0+255),b
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;PIC18F27J53-ChargeStation6-02.h: 52: switch (b) {
  2645  003A00  D01B               	goto	l5108
  2646  003A02                     l552:
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;PIC18F27J53-ChargeStation6-02.h: 54: LATC2 = value;
  2650  003A02  0100               	movlb	0	; () banked
  2651  003A04  A160               	btfss	LED@value& (0+255),0,b
  2652  003A06  D001               	bra	u5175
  2653  003A08  848B               	bsf	3979,2,c	;volatile
  2654  003A0A                     u5175:
  2655  003A0A  0100               	movlb	0	; () banked
  2656  003A0C  B160               	btfsc	LED@value& (0+255),0,b
  2657  003A0E  D001               	bra	u5176
  2658  003A10  948B               	bcf	3979,2,c	;volatile
  2659  003A12                     u5176:
  2660                           
  2661                           ;PIC18F27J53-ChargeStation6-02.h: 55: break;
  2662  003A12  0012               	return	
  2663  003A14                     l554:
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;PIC18F27J53-ChargeStation6-02.h: 57: LATB7 = value;
  2667  003A14  0100               	movlb	0	; () banked
  2668  003A16  A160               	btfss	LED@value& (0+255),0,b
  2669  003A18  D001               	bra	u5185
  2670  003A1A  8E8A               	bsf	3978,7,c	;volatile
  2671  003A1C                     u5185:
  2672  003A1C  0100               	movlb	0	; () banked
  2673  003A1E  B160               	btfsc	LED@value& (0+255),0,b
  2674  003A20  D001               	bra	u5186
  2675  003A22  9E8A               	bcf	3978,7,c	;volatile
  2676  003A24                     u5186:
  2677                           
  2678                           ;PIC18F27J53-ChargeStation6-02.h: 58: break;
  2679  003A24  0012               	return	
  2680  003A26                     l555:
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;PIC18F27J53-ChargeStation6-02.h: 60: LATB6 = value;
  2684  003A26  0100               	movlb	0	; () banked
  2685  003A28  A160               	btfss	LED@value& (0+255),0,b
  2686  003A2A  D001               	bra	u5195
  2687  003A2C  8C8A               	bsf	3978,6,c	;volatile
  2688  003A2E                     u5195:
  2689  003A2E  0100               	movlb	0	; () banked
  2690  003A30  B160               	btfsc	LED@value& (0+255),0,b
  2691  003A32  D001               	bra	u5196
  2692  003A34  9C8A               	bcf	3978,6,c	;volatile
  2693  003A36                     u5196:
  2694                           
  2695                           ;PIC18F27J53-ChargeStation6-02.h: 61: break;
  2696  003A36  0012               	return	
  2697  003A38                     l5108:
  2698                           
  2699                           ; BSR set to: 0
  2700  003A38  0100               	movlb	0	; () banked
  2701  003A3A  5161               	movf	LED@b& (0+255),w,b
  2702                           
  2703                           ; Switch size 1, requested type "space"
  2704                           ; Number of cases is 3, Range of values is 0 to 2
  2705                           ; switch strategies available:
  2706                           ; Name         Instructions Cycles
  2707                           ; simple_byte           10     6 (average)
  2708                           ;	Chosen strategy is simple_byte
  2709  003A3C  0A00               	xorlw	0	; case 0
  2710  003A3E  B4D8               	btfsc	status,2,c
  2711  003A40  D7E0               	goto	l552
  2712  003A42  0A01               	xorlw	1	; case 1
  2713  003A44  B4D8               	btfsc	status,2,c
  2714  003A46  D7E6               	goto	l554
  2715  003A48  0A03               	xorlw	3	; case 2
  2716  003A4A  A4D8               	btfss	status,2,c
  2717  003A4C  0012               	return	
  2718  003A4E  D7EB               	goto	l555
  2719  003A50                     __end_of_LED:
  2720                           	opt stack 0
  2721                           tblptru	equ	0xFF8
  2722                           tblptrh	equ	0xFF7
  2723                           tblptrl	equ	0xFF6
  2724                           tablat	equ	0xFF5
  2725                           prodh	equ	0xFF4
  2726                           prodl	equ	0xFF3
  2727                           intcon	equ	0xFF2
  2728                           postinc0	equ	0xFEE
  2729                           wreg	equ	0xFE8
  2730                           postdec1	equ	0xFE5
  2731                           fsr1l	equ	0xFE1
  2732                           indf2	equ	0xFDF
  2733                           postinc2	equ	0xFDE
  2734                           postdec2	equ	0xFDD
  2735                           fsr2h	equ	0xFDA
  2736                           fsr2l	equ	0xFD9
  2737                           status	equ	0xFD8
  2738                           
  2739 ;; *************** function _main_init *****************
  2740 ;; Defined at:
  2741 ;;		line 214 in file "PIC18F27J53-ChargeStation6-02.h"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;  txbuf         200    0[BANK1 ] unsigned char [200]
  2746 ;; Return value:  Size  Location     Type
  2747 ;;		None               void
  2748 ;; Registers used:
  2749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2756 ;;      Locals:         0       0     200       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2758 ;;      Totals:         0       0     200       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2759 ;;Total ram usage:      200 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:    9
  2762 ;; This function calls:
  2763 ;;		_ADC_init
  2764 ;;		_I2C_LCD_init
  2765 ;;		_I2C_init
  2766 ;;		_RTCC_init
  2767 ;;		_UART_init
  2768 ;;		_ringbuf_init
  2769 ;;		_timer0_init
  2770 ;;		_timer1_init
  2771 ;;		_timer3_init
  2772 ;; This function is called by:
  2773 ;;		_main
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text7
  2778  003634                     __ptext7:
  2779                           	opt stack 0
  2780  003634                     _main_init:
  2781                           	opt stack 21
  2782                           
  2783                           ;PIC18F27J53-ChargeStation6-02.h: 215: OSCCONbits.IRCF = 7;
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;incstack = 0
  2787  003634  88D3               	bsf	4051,4,c	;volatile
  2788  003636  8AD3               	bsf	4051,5,c	;volatile
  2789  003638  8CD3               	bsf	4051,6,c	;volatile
  2790                           
  2791                           ;PIC18F27J53-ChargeStation6-02.h: 216: OSCTUNEbits.PLLEN = 1;
  2792  00363A  8C9B               	bsf	3995,6,c	;volatile
  2793                           
  2794                           ;PIC18F27J53-ChargeStation6-02.h: 217: OSCCONbits.SCS = 0;
  2795  00363C  0EFC               	movlw	-4
  2796  00363E  16D3               	andwf	4051,f,c	;volatile
  2797                           
  2798                           ;PIC18F27J53-ChargeStation6-02.h: 218: TRISA = 0b00011111;
  2799  003640  0E1F               	movlw	31
  2800  003642  6E92               	movwf	3986,c	;volatile
  2801                           
  2802                           ;PIC18F27J53-ChargeStation6-02.h: 219: TRISB = 0b00111111;
  2803  003644  0E3F               	movlw	63
  2804  003646  6E93               	movwf	3987,c	;volatile
  2805                           
  2806                           ;PIC18F27J53-ChargeStation6-02.h: 220: TRISC = 0b10110010;
  2807  003648  0EB2               	movlw	178
  2808  00364A  6E94               	movwf	3988,c	;volatile
  2809                           
  2810                           ;PIC18F27J53-ChargeStation6-02.h: 221: ANCON0 = 0b11111111;
  2811  00364C  010F               	movlb	15	; () banked
  2812  00364E  6948               	setf	72,b	;volatile
  2813                           
  2814                           ;PIC18F27J53-ChargeStation6-02.h: 222: ANCON1 = 0b00011000;
  2815  003650  0E18               	movlw	24
  2816  003652  010F               	movlb	15	; () banked
  2817  003654  6F49               	movwf	73,b	;volatile
  2818                           
  2819                           ; BSR set to: 15
  2820                           ;PIC18F27J53-ChargeStation6-02.h: 223: INTCON2bits.RBPU = 0;
  2821  003656  9EF1               	bcf	intcon2,7,c	;volatile
  2822                           
  2823                           ; BSR set to: 15
  2824                           ;PIC18F27J53-ChargeStation6-02.h: 225: timer0_init(6);
  2825  003658  0E06               	movlw	6
  2826  00365A  EC71  F01E         	call	_timer0_init
  2827                           
  2828                           ;PIC18F27J53-ChargeStation6-02.h: 226: timer1_init(0, 2);
  2829  00365E  0E02               	movlw	2
  2830  003660  0100               	movlb	0	; () banked
  2831  003662  6F60               	movwf	timer1_init@clock_select& (0+255),b
  2832  003664  0E00               	movlw	0
  2833  003666  ECA5  F01D         	call	_timer1_init
  2834                           
  2835                           ;PIC18F27J53-ChargeStation6-02.h: 227: timer3_init(2);
  2836  00366A  0E02               	movlw	2
  2837  00366C  EC67  F01F         	call	_timer3_init
  2838                           
  2839                           ;PIC18F27J53-ChargeStation6-02.h: 228: I2C_init();
  2840  003670  EC3D  F020         	call	_I2C_init	;wreg free
  2841                           
  2842                           ;PIC18F27J53-ChargeStation6-02.h: 229: I2C_LCD_init();
  2843  003674  ECA3  F01C         	call	_I2C_LCD_init	;wreg free
  2844                           
  2845                           ;PIC18F27J53-ChargeStation6-02.h: 230: ADC_init(0);
  2846  003678  0E00               	movlw	0
  2847  00367A  ECCE  F01F         	call	_ADC_init
  2848                           
  2849                           ;PIC18F27J53-ChargeStation6-02.h: 231: RTCC_init();
  2850  00367E  EC0C  F01F         	call	_RTCC_init	;wreg free
  2851                           
  2852                           ;PIC18F27J53-ChargeStation6-02.h: 233: UART_init();
  2853  003682  ECBE  F01F         	call	_UART_init	;wreg free
  2854                           
  2855                           ;PIC18F27J53-ChargeStation6-02.h: 234: uint8_t txbuf[200];
  2856                           ;PIC18F27J53-ChargeStation6-02.h: 235: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
  2857  003686  0101               	movlb	1	; () banked
  2858  003688  0E01               	movlw	high _tx_buf
  2859  00368A  0100               	movlb	0	; () banked
  2860  00368C  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2861  00368E  0101               	movlb	1	; () banked
  2862  003690  0EC9               	movlw	low _tx_buf
  2863  003692  0100               	movlb	0	; () banked
  2864  003694  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2865  003696  0101               	movlb	1	; () banked
  2866  003698  0E01               	movlw	high main_init@txbuf
  2867  00369A  0100               	movlb	0	; () banked
  2868  00369C  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2869  00369E  0101               	movlb	1	; () banked
  2870  0036A0  0E00               	movlw	low main_init@txbuf
  2871  0036A2  0100               	movlb	0	; () banked
  2872  0036A4  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2873  0036A6  0EC8               	movlw	200
  2874  0036A8  0100               	movlb	0	; () banked
  2875  0036AA  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2876  0036AC  ECD1  F01C         	call	_ringbuf_init	;wreg free
  2877  0036B0  0012               	return	
  2878  0036B2                     __end_of_main_init:
  2879                           	opt stack 0
  2880                           tblptru	equ	0xFF8
  2881                           tblptrh	equ	0xFF7
  2882                           tblptrl	equ	0xFF6
  2883                           tablat	equ	0xFF5
  2884                           prodh	equ	0xFF4
  2885                           prodl	equ	0xFF3
  2886                           intcon	equ	0xFF2
  2887                           intcon2	equ	0xFF1
  2888                           postinc0	equ	0xFEE
  2889                           wreg	equ	0xFE8
  2890                           postdec1	equ	0xFE5
  2891                           fsr1l	equ	0xFE1
  2892                           indf2	equ	0xFDF
  2893                           postinc2	equ	0xFDE
  2894                           postdec2	equ	0xFDD
  2895                           fsr2h	equ	0xFDA
  2896                           fsr2l	equ	0xFD9
  2897                           status	equ	0xFD8
  2898                           
  2899 ;; *************** function _timer3_init *****************
  2900 ;; Defined at:
  2901 ;;		line 86 in file "../My_header\My_header.h"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  prescaler       1    wreg     unsigned char 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  prescaler       1    1[BANK0 ] unsigned char 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;		None               void
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2916 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2917 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2918 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2919 ;;Total ram usage:        2 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:    4
  2922 ;; This function calls:
  2923 ;;		Nothing
  2924 ;; This function is called by:
  2925 ;;		_main_init
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text8
  2930  003ECE                     __ptext8:
  2931                           	opt stack 0
  2932  003ECE                     _timer3_init:
  2933                           	opt stack 25
  2934                           
  2935                           ;incstack = 0
  2936                           ;timer3_init@prescaler stored from wreg
  2937  003ECE  0100               	movlb	0	; () banked
  2938  003ED0  6F61               	movwf	timer3_init@prescaler& (0+255),b
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;My_header\My_header.h: 87: T3CONbits.TMR3CS = 0;
  2942  003ED2  0E3F               	movlw	-193
  2943  003ED4  1679               	andwf	3961,f,c	;volatile
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;My_header\My_header.h: 88: T3CONbits.T3OSCEN = 0;
  2947  003ED6  9679               	bcf	3961,3,c	;volatile
  2948                           
  2949                           ; BSR set to: 0
  2950                           ;My_header\My_header.h: 89: T3CONbits.T3CKPS = prescaler;
  2951  003ED8  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
  2952  003EDC  0100               	movlb	0	; () banked
  2953  003EDE  3B60               	swapf	??_timer3_init& (0+255),f,b
  2954  003EE0  5079               	movf	3961,w,c	;volatile
  2955  003EE2  0100               	movlb	0	; () banked
  2956  003EE4  1960               	xorwf	??_timer3_init& (0+255),w,b
  2957  003EE6  0BCF               	andlw	-49
  2958  003EE8  1960               	xorwf	??_timer3_init& (0+255),w,b
  2959  003EEA  6E79               	movwf	3961,c	;volatile
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;My_header\My_header.h: 90: T3CONbits.RD163 = 0;
  2963  003EEC  9E79               	bcf	3961,7,c	;volatile
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;My_header\My_header.h: 91: T3CONbits.TMR3ON = 1;
  2967  003EEE  8079               	bsf	3961,0,c	;volatile
  2968                           
  2969                           ; BSR set to: 0
  2970                           ;My_header\My_header.h: 92: IPR2bits.TMR3IP = 0;
  2971  003EF0  92A2               	bcf	4002,1,c	;volatile
  2972                           
  2973                           ; BSR set to: 0
  2974                           ;My_header\My_header.h: 93: PIR2bits.TMR3IF = 0;
  2975  003EF2  92A1               	bcf	4001,1,c	;volatile
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;My_header\My_header.h: 94: PIE2bits.TMR3IE = 1;
  2979  003EF4  82A0               	bsf	4000,1,c	;volatile
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;My_header\My_header.h: 95: INTCONbits.PEIE = 1;
  2983  003EF6  8CF2               	bsf	intcon,6,c	;volatile
  2984                           
  2985                           ; BSR set to: 0
  2986  003EF8  0012               	return	
  2987  003EFA                     __end_of_timer3_init:
  2988                           	opt stack 0
  2989                           tblptru	equ	0xFF8
  2990                           tblptrh	equ	0xFF7
  2991                           tblptrl	equ	0xFF6
  2992                           tablat	equ	0xFF5
  2993                           prodh	equ	0xFF4
  2994                           prodl	equ	0xFF3
  2995                           intcon	equ	0xFF2
  2996                           intcon2	equ	0xFF1
  2997                           postinc0	equ	0xFEE
  2998                           wreg	equ	0xFE8
  2999                           postdec1	equ	0xFE5
  3000                           fsr1l	equ	0xFE1
  3001                           indf2	equ	0xFDF
  3002                           postinc2	equ	0xFDE
  3003                           postdec2	equ	0xFDD
  3004                           fsr2h	equ	0xFDA
  3005                           fsr2l	equ	0xFD9
  3006                           status	equ	0xFD8
  3007                           
  3008 ;; *************** function _timer1_init *****************
  3009 ;; Defined at:
  3010 ;;		line 55 in file "../My_header\My_header.h"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  prescaler       1    wreg     unsigned char 
  3013 ;;  clock_select    1    0[BANK0 ] unsigned char 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;  prescaler       1    2[BANK0 ] unsigned char 
  3016 ;; Return value:  Size  Location     Type
  3017 ;;		None               void
  3018 ;; Registers used:
  3019 ;;		wreg, status,2, status,0
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3025 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3026 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3027 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3028 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3029 ;;Total ram usage:        3 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; Hardware stack levels required when called:    4
  3032 ;; This function calls:
  3033 ;;		Nothing
  3034 ;; This function is called by:
  3035 ;;		_main_init
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           	psect	text9
  3040  003B4A                     __ptext9:
  3041                           	opt stack 0
  3042  003B4A                     _timer1_init:
  3043                           	opt stack 25
  3044                           
  3045                           ; BSR set to: 0
  3046                           ;incstack = 0
  3047                           ;timer1_init@prescaler stored from wreg
  3048  003B4A  0100               	movlb	0	; () banked
  3049  003B4C  6F62               	movwf	timer1_init@prescaler& (0+255),b
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;My_header\My_header.h: 56: T1CONbits.TMR1CS = clock_select;
  3053  003B4E  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
  3054  003B52  0100               	movlb	0	; () banked
  3055  003B54  3B61               	swapf	??_timer1_init& (0+255),f,b
  3056  003B56  4761               	rlncf	??_timer1_init& (0+255),f,b
  3057  003B58  4761               	rlncf	??_timer1_init& (0+255),f,b
  3058  003B5A  50CD               	movf	4045,w,c	;volatile
  3059  003B5C  0100               	movlb	0	; () banked
  3060  003B5E  1961               	xorwf	??_timer1_init& (0+255),w,b
  3061  003B60  0B3F               	andlw	-193
  3062  003B62  1961               	xorwf	??_timer1_init& (0+255),w,b
  3063  003B64  6ECD               	movwf	4045,c	;volatile
  3064                           
  3065                           ;My_header\My_header.h: 57: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  3066  003B66  0100               	movlb	0	; () banked
  3067  003B68  5160               	movf	timer1_init@clock_select& (0+255),w,b
  3068  003B6A  0A02               	xorlw	2
  3069  003B6C  A4D8               	btfss	status,2,c
  3070  003B6E  D002               	goto	l138
  3071                           
  3072                           ; BSR set to: 0
  3073  003B70  86CD               	bsf	4045,3,c	;volatile
  3074  003B72  D001               	goto	l4852
  3075  003B74                     l138:
  3076                           
  3077                           ; BSR set to: 0
  3078                           ;My_header\My_header.h: 58: else T1CONbits.T1OSCEN = 0;
  3079  003B74  96CD               	bcf	4045,3,c	;volatile
  3080  003B76                     l4852:
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;My_header\My_header.h: 59: T1CONbits.T1CKPS = prescaler;
  3084  003B76  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
  3085  003B7A  0100               	movlb	0	; () banked
  3086  003B7C  3B61               	swapf	??_timer1_init& (0+255),f,b
  3087  003B7E  50CD               	movf	4045,w,c	;volatile
  3088  003B80  0100               	movlb	0	; () banked
  3089  003B82  1961               	xorwf	??_timer1_init& (0+255),w,b
  3090  003B84  0BCF               	andlw	-49
  3091  003B86  1961               	xorwf	??_timer1_init& (0+255),w,b
  3092  003B88  6ECD               	movwf	4045,c	;volatile
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;My_header\My_header.h: 60: T1CONbits.nT1SYNC = 1;
  3096  003B8A  84CD               	bsf	4045,2,c	;volatile
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;My_header\My_header.h: 61: T1CONbits.RD16 = 0;
  3100  003B8C  92CD               	bcf	4045,1,c	;volatile
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;My_header\My_header.h: 62: T1CONbits.TMR1ON = 1;
  3104  003B8E  80CD               	bsf	4045,0,c	;volatile
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;My_header\My_header.h: 63: IPR1bits.TMR1IP = 0;
  3108  003B90  909F               	bcf	3999,0,c	;volatile
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;My_header\My_header.h: 64: PIR1bits.TMR1IF = 0;
  3112  003B92  909E               	bcf	3998,0,c	;volatile
  3113                           
  3114                           ; BSR set to: 0
  3115                           ;My_header\My_header.h: 65: PIE1bits.TMR1IE = 1;
  3116  003B94  809D               	bsf	3997,0,c	;volatile
  3117                           
  3118                           ; BSR set to: 0
  3119                           ;My_header\My_header.h: 66: INTCONbits.PEIE = 1;
  3120  003B96  8CF2               	bsf	intcon,6,c	;volatile
  3121                           
  3122                           ; BSR set to: 0
  3123  003B98  0012               	return	
  3124  003B9A                     __end_of_timer1_init:
  3125                           	opt stack 0
  3126                           tblptru	equ	0xFF8
  3127                           tblptrh	equ	0xFF7
  3128                           tblptrl	equ	0xFF6
  3129                           tablat	equ	0xFF5
  3130                           prodh	equ	0xFF4
  3131                           prodl	equ	0xFF3
  3132                           intcon	equ	0xFF2
  3133                           intcon2	equ	0xFF1
  3134                           postinc0	equ	0xFEE
  3135                           wreg	equ	0xFE8
  3136                           postdec1	equ	0xFE5
  3137                           fsr1l	equ	0xFE1
  3138                           indf2	equ	0xFDF
  3139                           postinc2	equ	0xFDE
  3140                           postdec2	equ	0xFDD
  3141                           fsr2h	equ	0xFDA
  3142                           fsr2l	equ	0xFD9
  3143                           status	equ	0xFD8
  3144                           
  3145 ;; *************** function _timer0_init *****************
  3146 ;; Defined at:
  3147 ;;		line 16 in file "../My_header\My_header.h"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;  prescaler       1    wreg     unsigned char 
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;  prescaler       1    1[BANK0 ] unsigned char 
  3152 ;; Return value:  Size  Location     Type
  3153 ;;		None               void
  3154 ;; Registers used:
  3155 ;;		wreg, status,2, status,0
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3162 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3163 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3164 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3165 ;;Total ram usage:        2 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; Hardware stack levels required when called:    4
  3168 ;; This function calls:
  3169 ;;		Nothing
  3170 ;; This function is called by:
  3171 ;;		_main_init
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           	psect	text10
  3176  003CE2                     __ptext10:
  3177                           	opt stack 0
  3178  003CE2                     _timer0_init:
  3179                           	opt stack 25
  3180                           
  3181                           ; BSR set to: 0
  3182                           ;incstack = 0
  3183                           ;timer0_init@prescaler stored from wreg
  3184  003CE2  0100               	movlb	0	; () banked
  3185  003CE4  6F61               	movwf	timer0_init@prescaler& (0+255),b
  3186                           
  3187                           ; BSR set to: 0
  3188                           ;My_header\My_header.h: 17: T0CONbits.TMR0ON = 1;
  3189  003CE6  8ED5               	bsf	4053,7,c	;volatile
  3190                           
  3191                           ;My_header\My_header.h: 18: T0CONbits.T08BIT = 1;
  3192  003CE8  8CD5               	bsf	4053,6,c	;volatile
  3193                           
  3194                           ;My_header\My_header.h: 19: T0CONbits.T0CS = 0;
  3195  003CEA  9AD5               	bcf	4053,5,c	;volatile
  3196                           
  3197                           ; BSR set to: 0
  3198                           ;My_header\My_header.h: 20: if (prescaler == 0) {
  3199  003CEC  0100               	movlb	0	; () banked
  3200  003CEE  6761               	tstfsz	timer0_init@prescaler& (0+255),b
  3201  003CF0  D002               	goto	l133
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;My_header\My_header.h: 21: T0CONbits.PSA = 1;
  3205  003CF2  86D5               	bsf	4053,3,c	;volatile
  3206                           
  3207                           ;My_header\My_header.h: 22: } else {
  3208  003CF4  D00C               	goto	l4840
  3209  003CF6                     l133:
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;My_header\My_header.h: 23: T0CONbits.PSA = 0;
  3213  003CF6  96D5               	bcf	4053,3,c	;volatile
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;My_header\My_header.h: 24: T0CONbits.T0PS = prescaler - 1;
  3217  003CF8  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
  3218  003CFC  0EFF               	movlw	255
  3219  003CFE  0100               	movlb	0	; () banked
  3220  003D00  2760               	addwf	??_timer0_init& (0+255),f,b
  3221  003D02  50D5               	movf	4053,w,c	;volatile
  3222  003D04  0100               	movlb	0	; () banked
  3223  003D06  1960               	xorwf	??_timer0_init& (0+255),w,b
  3224  003D08  0BF8               	andlw	-8
  3225  003D0A  1960               	xorwf	??_timer0_init& (0+255),w,b
  3226  003D0C  6ED5               	movwf	4053,c	;volatile
  3227  003D0E                     l4840:
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;My_header\My_header.h: 25: }
  3231                           ;My_header\My_header.h: 26: INTCONbits.T0IE = 1;
  3232  003D0E  8AF2               	bsf	intcon,5,c	;volatile
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;My_header\My_header.h: 27: INTCONbits.TMR0IF = 0;
  3236  003D10  94F2               	bcf	intcon,2,c	;volatile
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;My_header\My_header.h: 28: INTCON2bits.TMR0IP = 0;
  3240  003D12  94F1               	bcf	intcon2,2,c	;volatile
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;My_header\My_header.h: 29: INTCONbits.PEIE = 1;
  3244  003D14  8CF2               	bsf	intcon,6,c	;volatile
  3245                           
  3246                           ; BSR set to: 0
  3247  003D16  0012               	return	
  3248  003D18                     __end_of_timer0_init:
  3249                           	opt stack 0
  3250                           tblptru	equ	0xFF8
  3251                           tblptrh	equ	0xFF7
  3252                           tblptrl	equ	0xFF6
  3253                           tablat	equ	0xFF5
  3254                           prodh	equ	0xFF4
  3255                           prodl	equ	0xFF3
  3256                           intcon	equ	0xFF2
  3257                           intcon2	equ	0xFF1
  3258                           postinc0	equ	0xFEE
  3259                           wreg	equ	0xFE8
  3260                           postdec1	equ	0xFE5
  3261                           fsr1l	equ	0xFE1
  3262                           indf2	equ	0xFDF
  3263                           postinc2	equ	0xFDE
  3264                           postdec2	equ	0xFDD
  3265                           fsr2h	equ	0xFDA
  3266                           fsr2l	equ	0xFD9
  3267                           status	equ	0xFD8
  3268                           
  3269 ;; *************** function _ringbuf_init *****************
  3270 ;; Defined at:
  3271 ;;		line 22 in file "../My_header\My_ringbuf.h"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  3274 ;;		 -> tx_buf(5), 
  3275 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  3276 ;;		 -> main_init@txbuf(200), 
  3277 ;;  bufsize         1    4[BANK0 ] unsigned char 
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;		None
  3280 ;; Return value:  Size  Location     Type
  3281 ;;		None               void
  3282 ;; Registers used:
  3283 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3289 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3292 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3293 ;;Total ram usage:        5 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; Hardware stack levels required when called:    4
  3296 ;; This function calls:
  3297 ;;		Nothing
  3298 ;; This function is called by:
  3299 ;;		_main_init
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           	psect	text11
  3304  0039A2                     __ptext11:
  3305                           	opt stack 0
  3306  0039A2                     _ringbuf_init:
  3307                           	opt stack 25
  3308                           
  3309                           ;My_header\My_ringbuf.h: 23: rb->buf = internal_buf;
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;incstack = 0
  3313  0039A2  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  3314  0039A6  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  3315  0039AA  0100               	movlb	0	; () banked
  3316  0039AC  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  3317  0039B0  0100               	movlb	0	; () banked
  3318  0039B2  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;My_header\My_ringbuf.h: 24: rb->size = bufsize;
  3322  0039B6  0100               	movlb	0	; () banked
  3323  0039B8  EE20 F002          	lfsr	2,2
  3324  0039BC  0100               	movlb	0	; () banked
  3325  0039BE  5160               	movf	ringbuf_init@rb& (0+255),w,b
  3326  0039C0  26D9               	addwf	fsr2l,f,c
  3327  0039C2  0100               	movlb	0	; () banked
  3328  0039C4  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  3329  0039C6  22DA               	addwfc	fsr2h,f,c
  3330  0039C8  0100               	movlb	0	; () banked
  3331  0039CA  C064  FFDF         	movff	ringbuf_init@bufsize,indf2
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;My_header\My_ringbuf.h: 25: rb->head = 0;
  3335  0039CE  0100               	movlb	0	; () banked
  3336  0039D0  EE20 F003          	lfsr	2,3
  3337  0039D4  0100               	movlb	0	; () banked
  3338  0039D6  5160               	movf	ringbuf_init@rb& (0+255),w,b
  3339  0039D8  26D9               	addwf	fsr2l,f,c
  3340  0039DA  0100               	movlb	0	; () banked
  3341  0039DC  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  3342  0039DE  22DA               	addwfc	fsr2h,f,c
  3343  0039E0  0E00               	movlw	0
  3344  0039E2  6EDF               	movwf	indf2,c
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;My_header\My_ringbuf.h: 26: rb->tail = 0;
  3348  0039E4  0100               	movlb	0	; () banked
  3349  0039E6  EE20 F004          	lfsr	2,4
  3350  0039EA  0100               	movlb	0	; () banked
  3351  0039EC  5160               	movf	ringbuf_init@rb& (0+255),w,b
  3352  0039EE  26D9               	addwf	fsr2l,f,c
  3353  0039F0  0100               	movlb	0	; () banked
  3354  0039F2  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  3355  0039F4  22DA               	addwfc	fsr2h,f,c
  3356  0039F6  0E00               	movlw	0
  3357  0039F8  6EDF               	movwf	indf2,c
  3358                           
  3359                           ; BSR set to: 0
  3360  0039FA  0012               	return	
  3361  0039FC                     __end_of_ringbuf_init:
  3362                           	opt stack 0
  3363                           tblptru	equ	0xFF8
  3364                           tblptrh	equ	0xFF7
  3365                           tblptrl	equ	0xFF6
  3366                           tablat	equ	0xFF5
  3367                           prodh	equ	0xFF4
  3368                           prodl	equ	0xFF3
  3369                           intcon	equ	0xFF2
  3370                           intcon2	equ	0xFF1
  3371                           postinc0	equ	0xFEE
  3372                           wreg	equ	0xFE8
  3373                           postdec1	equ	0xFE5
  3374                           fsr1l	equ	0xFE1
  3375                           indf2	equ	0xFDF
  3376                           postinc2	equ	0xFDE
  3377                           postdec2	equ	0xFDD
  3378                           fsr2h	equ	0xFDA
  3379                           fsr2l	equ	0xFD9
  3380                           status	equ	0xFD8
  3381                           
  3382 ;; *************** function _UART_init *****************
  3383 ;; Defined at:
  3384 ;;		line 189 in file "../My_header\My_header.h"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;		None
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;		None
  3389 ;; Return value:  Size  Location     Type
  3390 ;;		None               void
  3391 ;; Registers used:
  3392 ;;		wreg, status,2
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3402 ;;Total ram usage:        0 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; Hardware stack levels required when called:    4
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_main_init
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text12
  3413  003F7C                     __ptext12:
  3414                           	opt stack 0
  3415  003F7C                     _UART_init:
  3416                           	opt stack 25
  3417                           
  3418                           ;My_header\My_header.h: 190: TXSTA1bits.TX9 = 0;
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;incstack = 0
  3422  003F7C  9CAD               	bcf	4013,6,c	;volatile
  3423                           
  3424                           ;My_header\My_header.h: 191: TXSTA1bits.TXEN = 1;
  3425  003F7E  8AAD               	bsf	4013,5,c	;volatile
  3426                           
  3427                           ;My_header\My_header.h: 192: TXSTA1bits.SYNC = 0;
  3428  003F80  98AD               	bcf	4013,4,c	;volatile
  3429                           
  3430                           ;My_header\My_header.h: 193: TXSTA1bits.BRGH = 0;
  3431  003F82  94AD               	bcf	4013,2,c	;volatile
  3432                           
  3433                           ;My_header\My_header.h: 194: RCSTA1bits.SPEN = 1;
  3434  003F84  8EAC               	bsf	4012,7,c	;volatile
  3435                           
  3436                           ;My_header\My_header.h: 195: RCSTA1bits.RX9 = 0;
  3437  003F86  9CAC               	bcf	4012,6,c	;volatile
  3438                           
  3439                           ;My_header\My_header.h: 196: RCSTA1bits.CREN = 1;
  3440  003F88  88AC               	bsf	4012,4,c	;volatile
  3441                           
  3442                           ;My_header\My_header.h: 197: BAUDCON1bits.BRG16 = 0;
  3443  003F8A  967E               	bcf	3966,3,c	;volatile
  3444                           
  3445                           ;My_header\My_header.h: 198: SPBRG1 = 48000000 / 64 / 9600 - 1;
  3446  003F8C  0E4D               	movlw	77
  3447  003F8E  6EB0               	movwf	4016,c	;volatile
  3448                           
  3449                           ;My_header\My_header.h: 199: SPBRGH1 = 0;
  3450  003F90  0E00               	movlw	0
  3451  003F92  6E7F               	movwf	3967,c	;volatile
  3452                           
  3453                           ;My_header\My_header.h: 200: IPR1bits.RC1IP = 0;
  3454  003F94  9A9F               	bcf	3999,5,c	;volatile
  3455                           
  3456                           ;My_header\My_header.h: 201: PIE1bits.RC1IE = 1;
  3457  003F96  8A9D               	bsf	3997,5,c	;volatile
  3458                           
  3459                           ;My_header\My_header.h: 202: INTCONbits.PEIE = 1;
  3460  003F98  8CF2               	bsf	intcon,6,c	;volatile
  3461  003F9A  0012               	return	
  3462  003F9C                     __end_of_UART_init:
  3463                           	opt stack 0
  3464                           tblptru	equ	0xFF8
  3465                           tblptrh	equ	0xFF7
  3466                           tblptrl	equ	0xFF6
  3467                           tablat	equ	0xFF5
  3468                           prodh	equ	0xFF4
  3469                           prodl	equ	0xFF3
  3470                           intcon	equ	0xFF2
  3471                           intcon2	equ	0xFF1
  3472                           postinc0	equ	0xFEE
  3473                           wreg	equ	0xFE8
  3474                           postdec1	equ	0xFE5
  3475                           fsr1l	equ	0xFE1
  3476                           indf2	equ	0xFDF
  3477                           postinc2	equ	0xFDE
  3478                           postdec2	equ	0xFDD
  3479                           fsr2h	equ	0xFDA
  3480                           fsr2l	equ	0xFD9
  3481                           status	equ	0xFD8
  3482                           
  3483 ;; *************** function _RTCC_init *****************
  3484 ;; Defined at:
  3485 ;;		line 53 in file "../My_header\My_RTCC.h"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;		None
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;		None
  3490 ;; Return value:  Size  Location     Type
  3491 ;;		None               void
  3492 ;; Registers used:
  3493 ;;		wreg, status,2
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3503 ;;Total ram usage:        0 bytes
  3504 ;; Hardware stack levels used:    1
  3505 ;; Hardware stack levels required when called:    4
  3506 ;; This function calls:
  3507 ;;		Nothing
  3508 ;; This function is called by:
  3509 ;;		_main_init
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           	psect	text13
  3514  003E18                     __ptext13:
  3515                           	opt stack 0
  3516  003E18                     _RTCC_init:
  3517                           	opt stack 25
  3518                           
  3519                           ;My_header\My_RTCC.h: 54: RTCCFGbits.RTCWREN = 1;
  3520                           
  3521                           ;incstack = 0
  3522  003E18  010F               	movlb	15	; () banked
  3523  003E1A  8B3F               	bsf	63,5,b	;volatile
  3524                           
  3525                           ;My_header\My_RTCC.h: 55: if (RTCCFGbits.RTCWREN != 1) {
  3526  003E1C  010F               	movlb	15	; () banked
  3527  003E1E  BB3F               	btfsc	63,5,b	;volatile
  3528  003E20  D006               	goto	l4938
  3529                           
  3530                           ; BSR set to: 15
  3531                           ;My_header\My_RTCC.h: 56: EECON2 = 0x55;
  3532  003E22  0E55               	movlw	85
  3533  003E24  6EA7               	movwf	4007,c	;volatile
  3534                           
  3535                           ;My_header\My_RTCC.h: 57: EECON2 = 0xAA;
  3536  003E26  0EAA               	movlw	170
  3537  003E28  6EA7               	movwf	4007,c	;volatile
  3538                           
  3539                           ; BSR set to: 15
  3540                           ;My_header\My_RTCC.h: 58: RTCCFGbits.RTCWREN = 1;
  3541  003E2A  010F               	movlb	15	; () banked
  3542  003E2C  8B3F               	bsf	63,5,b	;volatile
  3543  003E2E                     l4938:
  3544                           
  3545                           ; BSR set to: 15
  3546                           ;My_header\My_RTCC.h: 59: }
  3547                           ;My_header\My_RTCC.h: 60: RTCCFGbits.RTCEN = 1;
  3548  003E2E  010F               	movlb	15	; () banked
  3549  003E30  8F3F               	bsf	63,7,b	;volatile
  3550                           
  3551                           ; BSR set to: 15
  3552                           ;My_header\My_RTCC.h: 61: RTCCFGbits.RTCOE = 0;
  3553  003E32  010F               	movlb	15	; () banked
  3554  003E34  953F               	bcf	63,2,b	;volatile
  3555                           
  3556                           ; BSR set to: 15
  3557                           ;My_header\My_RTCC.h: 62: PADCFG1bits.RTSECSEL0 = 0;
  3558  003E36  010F               	movlb	15	; () banked
  3559  003E38  933C               	bcf	60,1,b	;volatile
  3560                           
  3561                           ; BSR set to: 15
  3562                           ;My_header\My_RTCC.h: 63: PADCFG1bits.RTSECSEL1 = 1;
  3563  003E3A  010F               	movlb	15	; () banked
  3564  003E3C  853C               	bsf	60,2,b	;volatile
  3565                           
  3566                           ;My_header\My_RTCC.h: 64: RTCCAL = 0x00;
  3567  003E3E  0E00               	movlw	0
  3568  003E40  010F               	movlb	15	; () banked
  3569  003E42  6F3E               	movwf	62,b	;volatile
  3570                           
  3571                           ; BSR set to: 15
  3572  003E44  0012               	return	
  3573  003E46                     __end_of_RTCC_init:
  3574                           	opt stack 0
  3575                           tblptru	equ	0xFF8
  3576                           tblptrh	equ	0xFF7
  3577                           tblptrl	equ	0xFF6
  3578                           tablat	equ	0xFF5
  3579                           prodh	equ	0xFF4
  3580                           prodl	equ	0xFF3
  3581                           intcon	equ	0xFF2
  3582                           intcon2	equ	0xFF1
  3583                           postinc0	equ	0xFEE
  3584                           wreg	equ	0xFE8
  3585                           postdec1	equ	0xFE5
  3586                           fsr1l	equ	0xFE1
  3587                           indf2	equ	0xFDF
  3588                           postinc2	equ	0xFDE
  3589                           postdec2	equ	0xFDD
  3590                           fsr2h	equ	0xFDA
  3591                           fsr2l	equ	0xFD9
  3592                           status	equ	0xFD8
  3593                           
  3594 ;; *************** function _I2C_init *****************
  3595 ;; Defined at:
  3596 ;;		line 23 in file "../My_header\My_I2C.h"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;		None
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;		None
  3601 ;; Return value:  Size  Location     Type
  3602 ;;		None               void
  3603 ;; Registers used:
  3604 ;;		wreg, status,2
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3614 ;;Total ram usage:        0 bytes
  3615 ;; Hardware stack levels used:    1
  3616 ;; Hardware stack levels required when called:    4
  3617 ;; This function calls:
  3618 ;;		Nothing
  3619 ;; This function is called by:
  3620 ;;		_main_init
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           	psect	text14
  3625  00407A                     __ptext14:
  3626                           	opt stack 0
  3627  00407A                     _I2C_init:
  3628                           	opt stack 25
  3629                           
  3630                           ;My_header\My_I2C.h: 24: SSP1STAT = 0b10000000;
  3631                           
  3632                           ; BSR set to: 15
  3633                           ;incstack = 0
  3634  00407A  0E80               	movlw	128
  3635  00407C  6EC7               	movwf	4039,c	;volatile
  3636                           
  3637                           ;My_header\My_I2C.h: 25: SSP1CON1 = 0b00101000;
  3638  00407E  0E28               	movlw	40
  3639  004080  6EC6               	movwf	4038,c	;volatile
  3640                           
  3641                           ;My_header\My_I2C.h: 26: SSP1ADD = 0x13;
  3642  004082  0E13               	movlw	19
  3643  004084  6EC8               	movwf	4040,c	;volatile
  3644                           
  3645                           ;My_header\My_I2C.h: 29: SSP1IF = 0;
  3646  004086  969E               	bcf	3998,3,c	;volatile
  3647                           
  3648                           ;My_header\My_I2C.h: 30: BCL1IF = 0;
  3649  004088  96A1               	bcf	4001,3,c	;volatile
  3650  00408A  0012               	return	
  3651  00408C                     __end_of_I2C_init:
  3652                           	opt stack 0
  3653                           tblptru	equ	0xFF8
  3654                           tblptrh	equ	0xFF7
  3655                           tblptrl	equ	0xFF6
  3656                           tablat	equ	0xFF5
  3657                           prodh	equ	0xFF4
  3658                           prodl	equ	0xFF3
  3659                           intcon	equ	0xFF2
  3660                           intcon2	equ	0xFF1
  3661                           postinc0	equ	0xFEE
  3662                           wreg	equ	0xFE8
  3663                           postdec1	equ	0xFE5
  3664                           fsr1l	equ	0xFE1
  3665                           indf2	equ	0xFDF
  3666                           postinc2	equ	0xFDE
  3667                           postdec2	equ	0xFDD
  3668                           fsr2h	equ	0xFDA
  3669                           fsr2l	equ	0xFD9
  3670                           status	equ	0xFD8
  3671                           
  3672 ;; *************** function _I2C_LCD_init *****************
  3673 ;; Defined at:
  3674 ;;		line 163 in file "../My_header\My_I2C.h"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;		None
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;		None               void
  3681 ;; Registers used:
  3682 ;;		wreg, status,2, status,0, cstack
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3692 ;;Total ram usage:        0 bytes
  3693 ;; Hardware stack levels used:    1
  3694 ;; Hardware stack levels required when called:    8
  3695 ;; This function calls:
  3696 ;;		_Delay_ms
  3697 ;;		_I2C_LCD_Clear
  3698 ;;		_I2C_LCD_Command
  3699 ;; This function is called by:
  3700 ;;		_main_init
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	text15
  3705  003946                     __ptext15:
  3706                           	opt stack 0
  3707  003946                     _I2C_LCD_init:
  3708                           	opt stack 21
  3709                           
  3710                           ;My_header\My_I2C.h: 164: Delay_ms(40);
  3711                           
  3712                           ;incstack = 0
  3713  003946  0E00               	movlw	0
  3714  003948  0100               	movlb	0	; () banked
  3715  00394A  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
  3716  00394C  0E28               	movlw	40
  3717  00394E  0100               	movlb	0	; () banked
  3718  003950  6F60               	movwf	Delay_ms@ms& (0+255),b
  3719  003952  ECA9  F01F         	call	_Delay_ms	;wreg free
  3720                           
  3721                           ;My_header\My_I2C.h: 165: I2C_LCD_Command(0x38);
  3722  003956  0E38               	movlw	56
  3723  003958  ECC1  F01E         	call	_I2C_LCD_Command
  3724                           
  3725                           ;My_header\My_I2C.h: 166: I2C_LCD_Command(0x39);
  3726  00395C  0E39               	movlw	57
  3727  00395E  ECC1  F01E         	call	_I2C_LCD_Command
  3728                           
  3729                           ;My_header\My_I2C.h: 167: I2C_LCD_Command(0x14);
  3730  003962  0E14               	movlw	20
  3731  003964  ECC1  F01E         	call	_I2C_LCD_Command
  3732                           
  3733                           ;My_header\My_I2C.h: 168: I2C_LCD_Command(0x70);
  3734  003968  0E70               	movlw	112
  3735  00396A  ECC1  F01E         	call	_I2C_LCD_Command
  3736                           
  3737                           ;My_header\My_I2C.h: 169: I2C_LCD_Command(0x56);
  3738  00396E  0E56               	movlw	86
  3739  003970  ECC1  F01E         	call	_I2C_LCD_Command
  3740                           
  3741                           ;My_header\My_I2C.h: 170: I2C_LCD_Command(0x6C);
  3742  003974  0E6C               	movlw	108
  3743  003976  ECC1  F01E         	call	_I2C_LCD_Command
  3744                           
  3745                           ;My_header\My_I2C.h: 171: Delay_ms(200);
  3746  00397A  0E00               	movlw	0
  3747  00397C  0100               	movlb	0	; () banked
  3748  00397E  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
  3749  003980  0EC8               	movlw	200
  3750  003982  0100               	movlb	0	; () banked
  3751  003984  6F60               	movwf	Delay_ms@ms& (0+255),b
  3752  003986  ECA9  F01F         	call	_Delay_ms	;wreg free
  3753                           
  3754                           ;My_header\My_I2C.h: 172: I2C_LCD_Command(0x38);
  3755  00398A  0E38               	movlw	56
  3756  00398C  ECC1  F01E         	call	_I2C_LCD_Command
  3757                           
  3758                           ;My_header\My_I2C.h: 173: I2C_LCD_Command(0x0C);
  3759  003990  0E0C               	movlw	12
  3760  003992  ECC1  F01E         	call	_I2C_LCD_Command
  3761                           
  3762                           ;My_header\My_I2C.h: 174: I2C_LCD_Command(0x06);
  3763  003996  0E06               	movlw	6
  3764  003998  ECC1  F01E         	call	_I2C_LCD_Command
  3765                           
  3766                           ;My_header\My_I2C.h: 175: I2C_LCD_Clear();
  3767  00399C  EC0C  F020         	call	_I2C_LCD_Clear	;wreg free
  3768  0039A0  0012               	return	
  3769  0039A2                     __end_of_I2C_LCD_init:
  3770                           	opt stack 0
  3771                           tblptru	equ	0xFF8
  3772                           tblptrh	equ	0xFF7
  3773                           tblptrl	equ	0xFF6
  3774                           tablat	equ	0xFF5
  3775                           prodh	equ	0xFF4
  3776                           prodl	equ	0xFF3
  3777                           intcon	equ	0xFF2
  3778                           intcon2	equ	0xFF1
  3779                           postinc0	equ	0xFEE
  3780                           wreg	equ	0xFE8
  3781                           postdec1	equ	0xFE5
  3782                           fsr1l	equ	0xFE1
  3783                           indf2	equ	0xFDF
  3784                           postinc2	equ	0xFDE
  3785                           postdec2	equ	0xFDD
  3786                           fsr2h	equ	0xFDA
  3787                           fsr2l	equ	0xFD9
  3788                           status	equ	0xFD8
  3789                           
  3790 ;; *************** function _Delay_ms *****************
  3791 ;; Defined at:
  3792 ;;		line 348 in file "../My_header\My_header.h"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;  ms              2    0[BANK0 ] unsigned int 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;		None
  3797 ;; Return value:  Size  Location     Type
  3798 ;;		None               void
  3799 ;; Registers used:
  3800 ;;		wreg, status,2, status,0
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3806 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3808 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3809 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3810 ;;Total ram usage:        3 bytes
  3811 ;; Hardware stack levels used:    1
  3812 ;; Hardware stack levels required when called:    4
  3813 ;; This function calls:
  3814 ;;		Nothing
  3815 ;; This function is called by:
  3816 ;;		_I2C_LCD_init
  3817 ;;		_main
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	text16
  3822  003F52                     __ptext16:
  3823                           	opt stack 0
  3824  003F52                     _Delay_ms:
  3825                           	opt stack 24
  3826                           
  3827                           ;My_header\My_header.h: 349: while (ms--)_delay((unsigned long)((1)*(48000000/4000.0)));
  3828                           
  3829                           ;incstack = 0
  3830  003F52  D009               	goto	l4796
  3831  003F54                     l4794:
  3832  003F54  0E10               	movlw	16
  3833  003F56  0100               	movlb	0	; () banked
  3834  003F58  6F62               	movwf	??_Delay_ms& (0+255),b
  3835  003F5A  0E94               	movlw	148
  3836  003F5C                     u5797:
  3837  003F5C  2EE8               	decfsz	wreg,f,c
  3838  003F5E  D7FE               	goto	u5797
  3839  003F60  2F62               	decfsz	??_Delay_ms& (0+255),f,b
  3840  003F62  D7FC               	goto	u5797
  3841  003F64  D000               	nop2	
  3842  003F66                     l4796:
  3843  003F66  0100               	movlb	0	; () banked
  3844  003F68  0760               	decf	Delay_ms@ms& (0+255),f,b
  3845  003F6A  A0D8               	btfss	status,0,c
  3846  003F6C  0761               	decf	(Delay_ms@ms+1)& (0+255),f,b
  3847  003F6E  0100               	movlb	0	; () banked
  3848  003F70  2960               	incf	Delay_ms@ms& (0+255),w,b
  3849  003F72  B4D8               	btfsc	status,2,c
  3850  003F74  2961               	incf	(Delay_ms@ms+1)& (0+255),w,b
  3851  003F76  B4D8               	btfsc	status,2,c
  3852                           
  3853                           ; BSR set to: 0
  3854                           
  3855                           ; BSR set to: 0
  3856  003F78  0012               	return	
  3857  003F7A  D7EC               	goto	l4794
  3858  003F7C                     __end_of_Delay_ms:
  3859                           	opt stack 0
  3860                           tblptru	equ	0xFF8
  3861                           tblptrh	equ	0xFF7
  3862                           tblptrl	equ	0xFF6
  3863                           tablat	equ	0xFF5
  3864                           prodh	equ	0xFF4
  3865                           prodl	equ	0xFF3
  3866                           intcon	equ	0xFF2
  3867                           intcon2	equ	0xFF1
  3868                           postinc0	equ	0xFEE
  3869                           wreg	equ	0xFE8
  3870                           postdec1	equ	0xFE5
  3871                           fsr1l	equ	0xFE1
  3872                           indf2	equ	0xFDF
  3873                           postinc2	equ	0xFDE
  3874                           postdec2	equ	0xFDD
  3875                           fsr2h	equ	0xFDA
  3876                           fsr2l	equ	0xFD9
  3877                           status	equ	0xFD8
  3878                           
  3879 ;; *************** function _ADC_init *****************
  3880 ;; Defined at:
  3881 ;;		line 148 in file "../My_header\My_header.h"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;  p_ref           1    wreg     unsigned char 
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;  p_ref           1    0[BANK0 ] unsigned char 
  3886 ;; Return value:  Size  Location     Type
  3887 ;;		None               void
  3888 ;; Registers used:
  3889 ;;		wreg, status,2
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3896 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3898 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3899 ;;Total ram usage:        1 bytes
  3900 ;; Hardware stack levels used:    1
  3901 ;; Hardware stack levels required when called:    4
  3902 ;; This function calls:
  3903 ;;		Nothing
  3904 ;; This function is called by:
  3905 ;;		_main_init
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text17
  3910  003F9C                     __ptext17:
  3911                           	opt stack 0
  3912  003F9C                     _ADC_init:
  3913                           	opt stack 25
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;incstack = 0
  3917                           ;ADC_init@p_ref stored from wreg
  3918  003F9C  0100               	movlb	0	; () banked
  3919  003F9E  6F60               	movwf	ADC_init@p_ref& (0+255),b
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;My_header\My_header.h: 149: ADCON0bits.VCFG1 = 0;
  3923  003FA0  9EC2               	bcf	4034,7,c	;volatile
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;My_header\My_header.h: 150: ADCON0bits.VCFG0 = p_ref;
  3927  003FA2  0100               	movlb	0	; () banked
  3928  003FA4  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
  3929  003FA6  D002               	bra	u4835
  3930  003FA8  9CC2               	bcf	4034,6,c	;volatile
  3931  003FAA  D001               	bra	u4836
  3932  003FAC                     u4835:
  3933  003FAC  8CC2               	bsf	4034,6,c	;volatile
  3934  003FAE                     u4836:
  3935                           
  3936                           ;My_header\My_header.h: 152: ADCON1bits.ADFM = 1;
  3937  003FAE  8EC1               	bsf	4033,7,c	;volatile
  3938                           
  3939                           ;My_header\My_header.h: 153: ADCON1bits.ADCAL = 0;
  3940  003FB0  9CC1               	bcf	4033,6,c	;volatile
  3941                           
  3942                           ;My_header\My_header.h: 154: ADCON1bits.ADCS = 2;
  3943  003FB2  50C1               	movf	4033,w,c	;volatile
  3944  003FB4  0BF8               	andlw	-8
  3945  003FB6  0902               	iorlw	2
  3946  003FB8  6EC1               	movwf	4033,c	;volatile
  3947  003FBA  0012               	return	
  3948  003FBC                     __end_of_ADC_init:
  3949                           	opt stack 0
  3950                           tblptru	equ	0xFF8
  3951                           tblptrh	equ	0xFF7
  3952                           tblptrl	equ	0xFF6
  3953                           tablat	equ	0xFF5
  3954                           prodh	equ	0xFF4
  3955                           prodl	equ	0xFF3
  3956                           intcon	equ	0xFF2
  3957                           intcon2	equ	0xFF1
  3958                           postinc0	equ	0xFEE
  3959                           wreg	equ	0xFE8
  3960                           postdec1	equ	0xFE5
  3961                           fsr1l	equ	0xFE1
  3962                           indf2	equ	0xFDF
  3963                           postinc2	equ	0xFDE
  3964                           postdec2	equ	0xFDD
  3965                           fsr2h	equ	0xFDA
  3966                           fsr2l	equ	0xFD9
  3967                           status	equ	0xFD8
  3968                           
  3969 ;; *************** function _display_LCD *****************
  3970 ;; Defined at:
  3971 ;;		line 149 in file "PIC18F27J53-ChargeStation6-02.h"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;		None
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;  str            10   53[BANK0 ] unsigned char [10]
  3976 ;; Return value:  Size  Location     Type
  3977 ;;		None               void
  3978 ;; Registers used:
  3979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3986 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3988 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3989 ;;Total ram usage:       10 bytes
  3990 ;; Hardware stack levels used:    1
  3991 ;; Hardware stack levels required when called:    9
  3992 ;; This function calls:
  3993 ;;		_I2C_LCD_Clear
  3994 ;;		_I2C_LCD_Putc
  3995 ;;		_I2C_LCD_Puts
  3996 ;;		_I2C_LCD_SetCursor
  3997 ;;		___lwdiv
  3998 ;;		___lwmod
  3999 ;;		_display_port
  4000 ;;		_display_time
  4001 ;;		_utoa
  4002 ;; This function is called by:
  4003 ;;		_main
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           	psect	text18
  4008  0018F4                     __ptext18:
  4009                           	opt stack 0
  4010  0018F4                     _display_LCD:
  4011                           	opt stack 21
  4012                           
  4013                           ;PIC18F27J53-ChargeStation6-02.h: 150: I2C_LCD_Clear();
  4014                           
  4015                           ;incstack = 0
  4016  0018F4  EC0C  F020         	call	_I2C_LCD_Clear	;wreg free
  4017                           
  4018                           ;PIC18F27J53-ChargeStation6-02.h: 151: switch (print_content) {
  4019  0018F8  D151               	goto	l5302
  4020  0018FA                     l5242:
  4021                           
  4022                           ;PIC18F27J53-ChargeStation6-02.h: 153: I2C_LCD_SetCursor(0, 0);
  4023  0018FA  0E00               	movlw	0
  4024  0018FC  0100               	movlb	0	; () banked
  4025  0018FE  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  4026  001900  0E00               	movlw	0
  4027  001902  ECF4  F01E         	call	_I2C_LCD_SetCursor
  4028                           
  4029                           ;PIC18F27J53-ChargeStation6-02.h: 154: I2C_LCD_Puts("Charge");
  4030  001906  0E0F               	movlw	high STR_22
  4031  001908  0100               	movlb	0	; () banked
  4032  00190A  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4033  00190C  0E55               	movlw	low STR_22
  4034  00190E  0100               	movlb	0	; () banked
  4035  001910  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  4036  001912  ECB9  F019         	call	_I2C_LCD_Puts	;wreg free
  4037                           
  4038                           ;PIC18F27J53-ChargeStation6-02.h: 155: I2C_LCD_SetCursor(0, 1);
  4039  001916  0E01               	movlw	1
  4040  001918  0100               	movlb	0	; () banked
  4041  00191A  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  4042  00191C  0E00               	movlw	0
  4043  00191E  ECF4  F01E         	call	_I2C_LCD_SetCursor
  4044                           
  4045                           ;PIC18F27J53-ChargeStation6-02.h: 156: I2C_LCD_Puts("Station");
  4046  001922  0E0F               	movlw	high STR_23
  4047  001924  0100               	movlb	0	; () banked
  4048  001926  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4049  001928  0E37               	movlw	low STR_23
  4050  00192A  0100               	movlb	0	; () banked
  4051  00192C  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  4052  00192E  ECB9  F019         	call	_I2C_LCD_Puts	;wreg free
  4053                           
  4054                           ;PIC18F27J53-ChargeStation6-02.h: 157: break;
  4055  001932  0012               	return	
  4056  001934                     l5248:
  4057                           
  4058                           ;PIC18F27J53-ChargeStation6-02.h: 159: display_time(&caltime_now, &epoch_now);
  4059  001934  0100               	movlb	0	; () banked
  4060  001936  0E00               	movlw	high _caltime_now
  4061  001938  0100               	movlb	0	; () banked
  4062  00193A  6F91               	movwf	(display_time@ct+1)& (0+255),b
  4063  00193C  0100               	movlb	0	; () banked
  4064  00193E  0ED3               	movlw	low _caltime_now
  4065  001940  0100               	movlb	0	; () banked
  4066  001942  6F90               	movwf	display_time@ct& (0+255),b
  4067  001944  0100               	movlb	0	; () banked
  4068  001946  0E00               	movlw	high _epoch_now
  4069  001948  0100               	movlb	0	; () banked
  4070  00194A  6F93               	movwf	(display_time@ep+1)& (0+255),b
  4071  00194C  0100               	movlb	0	; () banked
  4072  00194E  0EDA               	movlw	low _epoch_now
  4073  001950  0100               	movlb	0	; () banked
  4074  001952  6F92               	movwf	display_time@ep& (0+255),b
  4075  001954  EC4D  F012         	call	_display_time	;wreg free
  4076                           
  4077                           ;PIC18F27J53-ChargeStation6-02.h: 160: break;
  4078  001958  0012               	return	
  4079  00195A                     l5250:
  4080                           
  4081                           ;PIC18F27J53-ChargeStation6-02.h: 162: display_port();
  4082  00195A  EC7A  F017         	call	_display_port	;wreg free
  4083                           
  4084                           ;PIC18F27J53-ChargeStation6-02.h: 163: I2C_LCD_SetCursor(0, 1);
  4085  00195E  0E01               	movlw	1
  4086  001960  0100               	movlb	0	; () banked
  4087  001962  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  4088  001964  0E00               	movlw	0
  4089  001966  ECF4  F01E         	call	_I2C_LCD_SetCursor
  4090                           
  4091                           ;PIC18F27J53-ChargeStation6-02.h: 164: I2C_LCD_Putc((I[print_port] % 10000) / 1000 + '0'
      +                          );
  4092  00196A  0E27               	movlw	39
  4093  00196C  0100               	movlb	0	; () banked
  4094  00196E  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  4095  001970  0E10               	movlw	16
  4096  001972  0100               	movlb	0	; () banked
  4097  001974  6F62               	movwf	___lwmod@divisor& (0+255),b
  4098  001976  5031               	movf	_print_port,w,c
  4099  001978  0D02               	mullw	2
  4100  00197A  0E22               	movlw	low _I
  4101  00197C  24F3               	addwf	prodl,w,c
  4102  00197E  6ED9               	movwf	fsr2l,c
  4103  001980  0E00               	movlw	high _I
  4104  001982  20F4               	addwfc	prodh,w,c
  4105  001984  6EDA               	movwf	fsr2h,c
  4106  001986  0100               	movlb	0	; () banked
  4107  001988  CFDE F060          	movff	postinc2,___lwmod@dividend
  4108  00198C  0100               	movlb	0	; () banked
  4109  00198E  CFDD F061          	movff	postdec2,___lwmod@dividend+1
  4110  001992  EC44  F01C         	call	___lwmod	;wreg free
  4111  001996  0100               	movlb	0	; () banked
  4112  001998  C060  F065         	movff	?___lwmod,___lwdiv@dividend
  4113  00199C  0100               	movlb	0	; () banked
  4114  00199E  C061  F066         	movff	?___lwmod+1,___lwdiv@dividend+1
  4115  0019A2  0E03               	movlw	3
  4116  0019A4  0100               	movlb	0	; () banked
  4117  0019A6  6F68               	movwf	(___lwdiv@divisor+1)& (0+255),b
  4118  0019A8  0EE8               	movlw	232
  4119  0019AA  0100               	movlb	0	; () banked
  4120  0019AC  6F67               	movwf	___lwdiv@divisor& (0+255),b
  4121  0019AE  ECD7  F01B         	call	___lwdiv	;wreg free
  4122  0019B2  0100               	movlb	0	; () banked
  4123  0019B4  5165               	movf	?___lwdiv& (0+255),w,b
  4124  0019B6  0F30               	addlw	48
  4125  0019B8  ECA7  F01E         	call	_I2C_LCD_Putc
  4126                           
  4127                           ;PIC18F27J53-ChargeStation6-02.h: 165: I2C_LCD_Putc('.');
  4128  0019BC  0E2E               	movlw	46
  4129  0019BE  ECA7  F01E         	call	_I2C_LCD_Putc
  4130                           
  4131                           ;PIC18F27J53-ChargeStation6-02.h: 166: I2C_LCD_Putc((I[print_port] % 1000) / 100 + '0');
  4132  0019C2  0E03               	movlw	3
  4133  0019C4  0100               	movlb	0	; () banked
  4134  0019C6  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  4135  0019C8  0EE8               	movlw	232
  4136  0019CA  0100               	movlb	0	; () banked
  4137  0019CC  6F62               	movwf	___lwmod@divisor& (0+255),b
  4138  0019CE  5031               	movf	_print_port,w,c
  4139  0019D0  0D02               	mullw	2
  4140  0019D2  0E22               	movlw	low _I
  4141  0019D4  24F3               	addwf	prodl,w,c
  4142  0019D6  6ED9               	movwf	fsr2l,c
  4143  0019D8  0E00               	movlw	high _I
  4144  0019DA  20F4               	addwfc	prodh,w,c
  4145  0019DC  6EDA               	movwf	fsr2h,c
  4146  0019DE  0100               	movlb	0	; () banked
  4147  0019E0  CFDE F060          	movff	postinc2,___lwmod@dividend
  4148  0019E4  0100               	movlb	0	; () banked
  4149  0019E6  CFDD F061          	movff	postdec2,___lwmod@dividend+1
  4150  0019EA  EC44  F01C         	call	___lwmod	;wreg free
  4151  0019EE  0100               	movlb	0	; () banked
  4152  0019F0  C060  F065         	movff	?___lwmod,___lwdiv@dividend
  4153  0019F4  0100               	movlb	0	; () banked
  4154  0019F6  C061  F066         	movff	?___lwmod+1,___lwdiv@dividend+1
  4155  0019FA  0E00               	movlw	0
  4156  0019FC  0100               	movlb	0	; () banked
  4157  0019FE  6F68               	movwf	(___lwdiv@divisor+1)& (0+255),b
  4158  001A00  0E64               	movlw	100
  4159  001A02  0100               	movlb	0	; () banked
  4160  001A04  6F67               	movwf	___lwdiv@divisor& (0+255),b
  4161  001A06  ECD7  F01B         	call	___lwdiv	;wreg free
  4162  001A0A  0100               	movlb	0	; () banked
  4163  001A0C  5165               	movf	?___lwdiv& (0+255),w,b
  4164  001A0E  0F30               	addlw	48
  4165  001A10  ECA7  F01E         	call	_I2C_LCD_Putc
  4166                           
  4167                           ;PIC18F27J53-ChargeStation6-02.h: 167: I2C_LCD_Putc((I[print_port] % 100) / 10 + '0');
  4168  001A14  0E00               	movlw	0
  4169  001A16  0100               	movlb	0	; () banked
  4170  001A18  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  4171  001A1A  0E64               	movlw	100
  4172  001A1C  0100               	movlb	0	; () banked
  4173  001A1E  6F62               	movwf	___lwmod@divisor& (0+255),b
  4174  001A20  5031               	movf	_print_port,w,c
  4175  001A22  0D02               	mullw	2
  4176  001A24  0E22               	movlw	low _I
  4177  001A26  24F3               	addwf	prodl,w,c
  4178  001A28  6ED9               	movwf	fsr2l,c
  4179  001A2A  0E00               	movlw	high _I
  4180  001A2C  20F4               	addwfc	prodh,w,c
  4181  001A2E  6EDA               	movwf	fsr2h,c
  4182  001A30  0100               	movlb	0	; () banked
  4183  001A32  CFDE F060          	movff	postinc2,___lwmod@dividend
  4184  001A36  0100               	movlb	0	; () banked
  4185  001A38  CFDD F061          	movff	postdec2,___lwmod@dividend+1
  4186  001A3C  EC44  F01C         	call	___lwmod	;wreg free
  4187  001A40  0100               	movlb	0	; () banked
  4188  001A42  C060  F065         	movff	?___lwmod,___lwdiv@dividend
  4189  001A46  0100               	movlb	0	; () banked
  4190  001A48  C061  F066         	movff	?___lwmod+1,___lwdiv@dividend+1
  4191  001A4C  0E00               	movlw	0
  4192  001A4E  0100               	movlb	0	; () banked
  4193  001A50  6F68               	movwf	(___lwdiv@divisor+1)& (0+255),b
  4194  001A52  0E0A               	movlw	10
  4195  001A54  0100               	movlb	0	; () banked
  4196  001A56  6F67               	movwf	___lwdiv@divisor& (0+255),b
  4197  001A58  ECD7  F01B         	call	___lwdiv	;wreg free
  4198  001A5C  0100               	movlb	0	; () banked
  4199  001A5E  5165               	movf	?___lwdiv& (0+255),w,b
  4200  001A60  0F30               	addlw	48
  4201  001A62  ECA7  F01E         	call	_I2C_LCD_Putc
  4202                           
  4203                           ;PIC18F27J53-ChargeStation6-02.h: 168: I2C_LCD_Putc((I[print_port] % 10) / 1 + '0');
  4204  001A66  5031               	movf	_print_port,w,c
  4205  001A68  0D02               	mullw	2
  4206  001A6A  0E22               	movlw	low _I
  4207  001A6C  24F3               	addwf	prodl,w,c
  4208  001A6E  6ED9               	movwf	fsr2l,c
  4209  001A70  0E00               	movlw	high _I
  4210  001A72  20F4               	addwfc	prodh,w,c
  4211  001A74  6EDA               	movwf	fsr2h,c
  4212  001A76  0100               	movlb	0	; () banked
  4213  001A78  CFDE F060          	movff	postinc2,___lwmod@dividend
  4214  001A7C  0100               	movlb	0	; () banked
  4215  001A7E  CFDD F061          	movff	postdec2,___lwmod@dividend+1
  4216  001A82  0E00               	movlw	0
  4217  001A84  0100               	movlb	0	; () banked
  4218  001A86  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  4219  001A88  0E0A               	movlw	10
  4220  001A8A  0100               	movlb	0	; () banked
  4221  001A8C  6F62               	movwf	___lwmod@divisor& (0+255),b
  4222  001A8E  EC44  F01C         	call	___lwmod	;wreg free
  4223  001A92  0100               	movlb	0	; () banked
  4224  001A94  5160               	movf	?___lwmod& (0+255),w,b
  4225  001A96  0F30               	addlw	48
  4226  001A98  ECA7  F01E         	call	_I2C_LCD_Putc
  4227                           
  4228                           ;PIC18F27J53-ChargeStation6-02.h: 169: I2C_LCD_Putc('A');
  4229  001A9C  0E41               	movlw	65
  4230  001A9E  ECA7  F01E         	call	_I2C_LCD_Putc
  4231                           
  4232                           ;PIC18F27J53-ChargeStation6-02.h: 170: break;
  4233  001AA2  0012               	return	
  4234  001AA4                     l5266:
  4235                           
  4236                           ;PIC18F27J53-ChargeStation6-02.h: 172: display_port();
  4237  001AA4  EC7A  F017         	call	_display_port	;wreg free
  4238                           
  4239                           ;PIC18F27J53-ChargeStation6-02.h: 173: I2C_LCD_SetCursor(0, 1);
  4240  001AA8  0E01               	movlw	1
  4241  001AAA  0100               	movlb	0	; () banked
  4242  001AAC  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  4243  001AAE  0E00               	movlw	0
  4244  001AB0  ECF4  F01E         	call	_I2C_LCD_SetCursor
  4245                           
  4246                           ;PIC18F27J53-ChargeStation6-02.h: 174: uint8_t str[10];
  4247                           ;PIC18F27J53-ChargeStation6-02.h: 175: utoa(str, S[print_port], 5);
  4248  001AB4  0100               	movlb	0	; () banked
  4249  001AB6  0E00               	movlw	high display_LCD@str
  4250  001AB8  0100               	movlb	0	; () banked
  4251  001ABA  6F6D               	movwf	(utoa@str+1)& (0+255),b
  4252  001ABC  0100               	movlb	0	; () banked
  4253  001ABE  0E95               	movlw	low display_LCD@str
  4254  001AC0  0100               	movlb	0	; () banked
  4255  001AC2  6F6C               	movwf	utoa@str& (0+255),b
  4256  001AC4  5031               	movf	_print_port,w,c
  4257  001AC6  0D04               	mullw	4
  4258  001AC8  0100               	movlb	0	; () banked
  4259  001ACA  0EA5               	movlw	low _S
  4260  001ACC  24F3               	addwf	prodl,w,c
  4261  001ACE  6ED9               	movwf	fsr2l,c
  4262  001AD0  0100               	movlb	0	; () banked
  4263  001AD2  0E00               	movlw	high _S
  4264  001AD4  20F4               	addwfc	prodh,w,c
  4265  001AD6  6EDA               	movwf	fsr2h,c
  4266  001AD8  0100               	movlb	0	; () banked
  4267  001ADA  CFDE F06E          	movff	postinc2,utoa@value
  4268  001ADE  0100               	movlb	0	; () banked
  4269  001AE0  CFDD F06F          	movff	postdec2,utoa@value+1
  4270  001AE4  0E05               	movlw	5
  4271  001AE6  0100               	movlb	0	; () banked
  4272  001AE8  6F70               	movwf	utoa@digits& (0+255),b
  4273  001AEA  EC04  F01A         	call	_utoa	;wreg free
  4274                           
  4275                           ;PIC18F27J53-ChargeStation6-02.h: 176: I2C_LCD_Puts(str);
  4276  001AEE  0100               	movlb	0	; () banked
  4277  001AF0  0E00               	movlw	high display_LCD@str
  4278  001AF2  0100               	movlb	0	; () banked
  4279  001AF4  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4280  001AF6  0100               	movlb	0	; () banked
  4281  001AF8  0E95               	movlw	low display_LCD@str
  4282  001AFA  0100               	movlb	0	; () banked
  4283  001AFC  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  4284  001AFE  ECB9  F019         	call	_I2C_LCD_Puts	;wreg free
  4285                           
  4286                           ;PIC18F27J53-ChargeStation6-02.h: 182: I2C_LCD_Puts("mAh");
  4287  001B02  0E0F               	movlw	high STR_24
  4288  001B04  0100               	movlb	0	; () banked
  4289  001B06  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4290  001B08  0EAA               	movlw	low STR_24
  4291  001B0A  0100               	movlb	0	; () banked
  4292  001B0C  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  4293  001B0E  ECB9  F019         	call	_I2C_LCD_Puts	;wreg free
  4294                           
  4295                           ;PIC18F27J53-ChargeStation6-02.h: 183: break;
  4296  001B12  0012               	return	
  4297  001B14                     l5276:
  4298                           
  4299                           ;PIC18F27J53-ChargeStation6-02.h: 185: display_port();
  4300  001B14  EC7A  F017         	call	_display_port	;wreg free
  4301                           
  4302                           ;PIC18F27J53-ChargeStation6-02.h: 186: I2C_LCD_SetCursor(0, 1);
  4303  001B18  0E01               	movlw	1
  4304  001B1A  0100               	movlb	0	; () banked
  4305  001B1C  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  4306  001B1E  0E00               	movlw	0
  4307  001B20  ECF4  F01E         	call	_I2C_LCD_SetCursor
  4308                           
  4309                           ;PIC18F27J53-ChargeStation6-02.h: 187: I2C_LCD_Puts("Reset?");
  4310  001B24  0E0F               	movlw	high STR_25
  4311  001B26  0100               	movlb	0	; () banked
  4312  001B28  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4313  001B2A  0E47               	movlw	low STR_25
  4314  001B2C  0100               	movlb	0	; () banked
  4315  001B2E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  4316  001B30  ECB9  F019         	call	_I2C_LCD_Puts	;wreg free
  4317                           
  4318                           ;PIC18F27J53-ChargeStation6-02.h: 188: break;
  4319  001B34  0012               	return	
  4320  001B36                     l5282:
  4321                           
  4322                           ;PIC18F27J53-ChargeStation6-02.h: 190: display_port();
  4323  001B36  EC7A  F017         	call	_display_port	;wreg free
  4324                           
  4325                           ;PIC18F27J53-ChargeStation6-02.h: 191: I2C_LCD_SetCursor(0, 1);
  4326  001B3A  0E01               	movlw	1
  4327  001B3C  0100               	movlb	0	; () banked
  4328  001B3E  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  4329  001B40  0E00               	movlw	0
  4330  001B42  ECF4  F01E         	call	_I2C_LCD_SetCursor
  4331                           
  4332                           ;PIC18F27J53-ChargeStation6-02.h: 192: I2C_LCD_Puts("Reseted");
  4333  001B46  0E0F               	movlw	high STR_26
  4334  001B48  0100               	movlb	0	; () banked
  4335  001B4A  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4336  001B4C  0E2F               	movlw	low STR_26
  4337  001B4E  0100               	movlb	0	; () banked
  4338  001B50  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  4339  001B52  ECB9  F019         	call	_I2C_LCD_Puts	;wreg free
  4340                           
  4341                           ;PIC18F27J53-ChargeStation6-02.h: 193: break;
  4342  001B56  0012               	return	
  4343  001B58                     l5288:
  4344                           
  4345                           ;PIC18F27J53-ChargeStation6-02.h: 195: display_port();
  4346  001B58  EC7A  F017         	call	_display_port	;wreg free
  4347                           
  4348                           ;PIC18F27J53-ChargeStation6-02.h: 196: I2C_LCD_SetCursor(0, 1);
  4349  001B5C  0E01               	movlw	1
  4350  001B5E  0100               	movlb	0	; () banked
  4351  001B60  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  4352  001B62  0E00               	movlw	0
  4353  001B64  ECF4  F01E         	call	_I2C_LCD_SetCursor
  4354                           
  4355                           ;PIC18F27J53-ChargeStation6-02.h: 197: I2C_LCD_Puts("AlwaysON");
  4356  001B68  0E0F               	movlw	high STR_27
  4357  001B6A  0100               	movlb	0	; () banked
  4358  001B6C  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4359  001B6E  0E0B               	movlw	low STR_27
  4360  001B70  0100               	movlb	0	; () banked
  4361  001B72  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  4362  001B74  ECB9  F019         	call	_I2C_LCD_Puts	;wreg free
  4363                           
  4364                           ;PIC18F27J53-ChargeStation6-02.h: 198: break;
  4365  001B78  0012               	return	
  4366  001B7A                     l5294:
  4367                           
  4368                           ;PIC18F27J53-ChargeStation6-02.h: 200: display_port();
  4369  001B7A  EC7A  F017         	call	_display_port	;wreg free
  4370                           
  4371                           ;PIC18F27J53-ChargeStation6-02.h: 201: I2C_LCD_SetCursor(0, 1);
  4372  001B7E  0E01               	movlw	1
  4373  001B80  0100               	movlb	0	; () banked
  4374  001B82  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  4375  001B84  0E00               	movlw	0
  4376  001B86  ECF4  F01E         	call	_I2C_LCD_SetCursor
  4377                           
  4378                           ;PIC18F27J53-ChargeStation6-02.h: 202: I2C_LCD_Puts("AutoStop");
  4379  001B8A  0E0F               	movlw	high STR_28
  4380  001B8C  0100               	movlb	0	; () banked
  4381  001B8E  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4382  001B90  0E14               	movlw	low STR_28
  4383  001B92  0100               	movlb	0	; () banked
  4384  001B94  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  4385  001B96  ECB9  F019         	call	_I2C_LCD_Puts	;wreg free
  4386                           
  4387                           ;PIC18F27J53-ChargeStation6-02.h: 203: break;
  4388  001B9A  0012               	return	
  4389  001B9C                     l5302:
  4390  001B9C  0100               	movlb	0	; () banked
  4391  001B9E  51CF               	movf	_print_content& (0+255),w,b
  4392                           
  4393                           ; Switch size 1, requested type "space"
  4394                           ; Number of cases is 8, Range of values is 0 to 7
  4395                           ; switch strategies available:
  4396                           ; Name         Instructions Cycles
  4397                           ; simple_byte           25    13 (average)
  4398                           ;	Chosen strategy is simple_byte
  4399  001BA0  0A00               	xorlw	0	; case 0
  4400  001BA2  B4D8               	btfsc	status,2,c
  4401  001BA4  D6AA               	goto	l5242
  4402  001BA6  0A01               	xorlw	1	; case 1
  4403  001BA8  B4D8               	btfsc	status,2,c
  4404  001BAA  D6C4               	goto	l5248
  4405  001BAC  0A03               	xorlw	3	; case 2
  4406  001BAE  B4D8               	btfsc	status,2,c
  4407  001BB0  D6D4               	goto	l5250
  4408  001BB2  0A01               	xorlw	1	; case 3
  4409  001BB4  B4D8               	btfsc	status,2,c
  4410  001BB6  D776               	goto	l5266
  4411  001BB8  0A07               	xorlw	7	; case 4
  4412  001BBA  B4D8               	btfsc	status,2,c
  4413  001BBC  D7AB               	goto	l5276
  4414  001BBE  0A01               	xorlw	1	; case 5
  4415  001BC0  B4D8               	btfsc	status,2,c
  4416  001BC2  D7B9               	goto	l5282
  4417  001BC4  0A03               	xorlw	3	; case 6
  4418  001BC6  B4D8               	btfsc	status,2,c
  4419  001BC8  D7C7               	goto	l5288
  4420  001BCA  0A01               	xorlw	1	; case 7
  4421  001BCC  A4D8               	btfss	status,2,c
  4422  001BCE  0012               	return	
  4423  001BD0  D7D4               	goto	l5294
  4424  001BD2                     __end_of_display_LCD:
  4425                           	opt stack 0
  4426                           tblptru	equ	0xFF8
  4427                           tblptrh	equ	0xFF7
  4428                           tblptrl	equ	0xFF6
  4429                           tablat	equ	0xFF5
  4430                           prodh	equ	0xFF4
  4431                           prodl	equ	0xFF3
  4432                           intcon	equ	0xFF2
  4433                           intcon2	equ	0xFF1
  4434                           postinc0	equ	0xFEE
  4435                           wreg	equ	0xFE8
  4436                           postdec1	equ	0xFE5
  4437                           fsr1l	equ	0xFE1
  4438                           indf2	equ	0xFDF
  4439                           postinc2	equ	0xFDE
  4440                           postdec2	equ	0xFDD
  4441                           fsr2h	equ	0xFDA
  4442                           fsr2l	equ	0xFD9
  4443                           status	equ	0xFD8
  4444                           
  4445 ;; *************** function _display_time *****************
  4446 ;; Defined at:
  4447 ;;		line 261 in file "../My_header\My_RTCC.h"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;  ct              2   48[BANK0 ] PTR struct .
  4450 ;;		 -> caltime_now(7), 
  4451 ;;  ep              2   50[BANK0 ] PTR unsigned long 
  4452 ;;		 -> epoch_now(4), 
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;		None
  4455 ;; Return value:  Size  Location     Type
  4456 ;;		None               void
  4457 ;; Registers used:
  4458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4464 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4466 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4467 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4468 ;;Total ram usage:        5 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:    8
  4471 ;; This function calls:
  4472 ;;		_I2C_LCD_Putc
  4473 ;;		_I2C_LCD_Puts
  4474 ;;		_I2C_LCD_SetCursor
  4475 ;;		_RTCC_from_RTCC
  4476 ;;		_display_dec
  4477 ;; This function is called by:
  4478 ;;		_display_LCD
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           	psect	text19
  4483  00249A                     __ptext19:
  4484                           	opt stack 0
  4485  00249A                     _display_time:
  4486                           	opt stack 21
  4487                           
  4488                           ;My_header\My_RTCC.h: 262: RTCC_from_RTCC(ct, ep);
  4489                           
  4490                           ;incstack = 0
  4491  00249A  0100               	movlb	0	; () banked
  4492  00249C  C091  F08D         	movff	display_time@ct+1,RTCC_from_RTCC@ct+1
  4493  0024A0  0100               	movlb	0	; () banked
  4494  0024A2  C090  F08C         	movff	display_time@ct,RTCC_from_RTCC@ct
  4495  0024A6  0100               	movlb	0	; () banked
  4496  0024A8  C093  F08F         	movff	display_time@ep+1,RTCC_from_RTCC@ep+1
  4497  0024AC  0100               	movlb	0	; () banked
  4498  0024AE  C092  F08E         	movff	display_time@ep,RTCC_from_RTCC@ep
  4499  0024B2  EC3A  F01F         	call	_RTCC_from_RTCC	;wreg free
  4500                           
  4501                           ;My_header\My_RTCC.h: 264: I2C_LCD_SetCursor(0, 0);
  4502  0024B6  0E00               	movlw	0
  4503  0024B8  0100               	movlb	0	; () banked
  4504  0024BA  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  4505  0024BC  0E00               	movlw	0
  4506  0024BE  ECF4  F01E         	call	_I2C_LCD_SetCursor
  4507                           
  4508                           ;My_header\My_RTCC.h: 265: display_dec(ct->YY, edit_flag.flag.YY);
  4509  0024C2  0E00               	movlw	0
  4510  0024C4  0100               	movlb	0	; () banked
  4511  0024C6  BBCE               	btfsc	_edit_flag& (0+255),5,b
  4512  0024C8  0E01               	movlw	1
  4513  0024CA  0100               	movlb	0	; () banked
  4514  0024CC  6F74               	movwf	display_dec@edit& (0+255),b
  4515  0024CE  0100               	movlb	0	; () banked
  4516  0024D0  EE20 F006          	lfsr	2,6
  4517  0024D4  0100               	movlb	0	; () banked
  4518  0024D6  5190               	movf	display_time@ct& (0+255),w,b
  4519  0024D8  26D9               	addwf	fsr2l,f,c
  4520  0024DA  0100               	movlb	0	; () banked
  4521  0024DC  5191               	movf	(display_time@ct+1)& (0+255),w,b
  4522  0024DE  22DA               	addwfc	fsr2h,f,c
  4523  0024E0  50DF               	movf	indf2,w,c
  4524  0024E2  EC74  F01C         	call	_display_dec
  4525                           
  4526                           ;My_header\My_RTCC.h: 266: I2C_LCD_Putc('/');
  4527  0024E6  0E2F               	movlw	47
  4528  0024E8  ECA7  F01E         	call	_I2C_LCD_Putc
  4529                           
  4530                           ;My_header\My_RTCC.h: 267: display_dec(ct->MM, edit_flag.flag.MM);
  4531  0024EC  0E00               	movlw	0
  4532  0024EE  0100               	movlb	0	; () banked
  4533  0024F0  B9CE               	btfsc	_edit_flag& (0+255),4,b
  4534  0024F2  0E01               	movlw	1
  4535  0024F4  0100               	movlb	0	; () banked
  4536  0024F6  6F74               	movwf	display_dec@edit& (0+255),b
  4537  0024F8  0100               	movlb	0	; () banked
  4538  0024FA  EE20 F005          	lfsr	2,5
  4539  0024FE  0100               	movlb	0	; () banked
  4540  002500  5190               	movf	display_time@ct& (0+255),w,b
  4541  002502  26D9               	addwf	fsr2l,f,c
  4542  002504  0100               	movlb	0	; () banked
  4543  002506  5191               	movf	(display_time@ct+1)& (0+255),w,b
  4544  002508  22DA               	addwfc	fsr2h,f,c
  4545  00250A  50DF               	movf	indf2,w,c
  4546  00250C  EC74  F01C         	call	_display_dec
  4547                           
  4548                           ;My_header\My_RTCC.h: 268: I2C_LCD_Putc('/');
  4549  002510  0E2F               	movlw	47
  4550  002512  ECA7  F01E         	call	_I2C_LCD_Putc
  4551                           
  4552                           ;My_header\My_RTCC.h: 269: display_dec(ct->DD, edit_flag.flag.DD);
  4553  002516  0E00               	movlw	0
  4554  002518  0100               	movlb	0	; () banked
  4555  00251A  B7CE               	btfsc	_edit_flag& (0+255),3,b
  4556  00251C  0E01               	movlw	1
  4557  00251E  0100               	movlb	0	; () banked
  4558  002520  6F74               	movwf	display_dec@edit& (0+255),b
  4559  002522  0100               	movlb	0	; () banked
  4560  002524  EE20 F004          	lfsr	2,4
  4561  002528  0100               	movlb	0	; () banked
  4562  00252A  5190               	movf	display_time@ct& (0+255),w,b
  4563  00252C  26D9               	addwf	fsr2l,f,c
  4564  00252E  0100               	movlb	0	; () banked
  4565  002530  5191               	movf	(display_time@ct+1)& (0+255),w,b
  4566  002532  22DA               	addwfc	fsr2h,f,c
  4567  002534  50DF               	movf	indf2,w,c
  4568  002536  EC74  F01C         	call	_display_dec
  4569                           
  4570                           ;My_header\My_RTCC.h: 270: I2C_LCD_Putc('/');
  4571  00253A  0E2F               	movlw	47
  4572  00253C  ECA7  F01E         	call	_I2C_LCD_Putc
  4573                           
  4574                           ;My_header\My_RTCC.h: 271: I2C_LCD_Puts(weekday_char[ct->EE]);
  4575  002540  0100               	movlb	0	; () banked
  4576  002542  EE20 F003          	lfsr	2,3
  4577  002546  0100               	movlb	0	; () banked
  4578  002548  5190               	movf	display_time@ct& (0+255),w,b
  4579  00254A  26D9               	addwf	fsr2l,f,c
  4580  00254C  0100               	movlb	0	; () banked
  4581  00254E  5191               	movf	(display_time@ct+1)& (0+255),w,b
  4582  002550  22DA               	addwfc	fsr2h,f,c
  4583  002552  50DF               	movf	indf2,w,c
  4584  002554  0100               	movlb	0	; () banked
  4585  002556  6F94               	movwf	??_display_time& (0+255),b
  4586  002558  0100               	movlb	0	; () banked
  4587  00255A  5194               	movf	??_display_time& (0+255),w,b
  4588  00255C  0D02               	mullw	2
  4589  00255E  0100               	movlb	0	; () banked
  4590  002560  0EE2               	movlw	low _weekday_char
  4591  002562  24F3               	addwf	prodl,w,c
  4592  002564  6ED9               	movwf	fsr2l,c
  4593  002566  0100               	movlb	0	; () banked
  4594  002568  0E00               	movlw	high _weekday_char
  4595  00256A  20F4               	addwfc	prodh,w,c
  4596  00256C  6EDA               	movwf	fsr2h,c
  4597  00256E  0100               	movlb	0	; () banked
  4598  002570  CFDE F064          	movff	postinc2,I2C_LCD_Puts@s
  4599  002574  0100               	movlb	0	; () banked
  4600  002576  CFDD F065          	movff	postdec2,I2C_LCD_Puts@s+1
  4601  00257A  ECB9  F019         	call	_I2C_LCD_Puts	;wreg free
  4602                           
  4603                           ;My_header\My_RTCC.h: 273: I2C_LCD_SetCursor(0, 1);
  4604  00257E  0E01               	movlw	1
  4605  002580  0100               	movlb	0	; () banked
  4606  002582  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  4607  002584  0E00               	movlw	0
  4608  002586  ECF4  F01E         	call	_I2C_LCD_SetCursor
  4609                           
  4610                           ;My_header\My_RTCC.h: 274: display_dec(ct->hh, edit_flag.flag.hh);
  4611  00258A  0E00               	movlw	0
  4612  00258C  0100               	movlb	0	; () banked
  4613  00258E  B5CE               	btfsc	_edit_flag& (0+255),2,b
  4614  002590  0E01               	movlw	1
  4615  002592  0100               	movlb	0	; () banked
  4616  002594  6F74               	movwf	display_dec@edit& (0+255),b
  4617  002596  0100               	movlb	0	; () banked
  4618  002598  EE20 F002          	lfsr	2,2
  4619  00259C  0100               	movlb	0	; () banked
  4620  00259E  5190               	movf	display_time@ct& (0+255),w,b
  4621  0025A0  26D9               	addwf	fsr2l,f,c
  4622  0025A2  0100               	movlb	0	; () banked
  4623  0025A4  5191               	movf	(display_time@ct+1)& (0+255),w,b
  4624  0025A6  22DA               	addwfc	fsr2h,f,c
  4625  0025A8  50DF               	movf	indf2,w,c
  4626  0025AA  EC74  F01C         	call	_display_dec
  4627                           
  4628                           ;My_header\My_RTCC.h: 275: if (colon) I2C_LCD_Putc(':');
  4629  0025AE  0100               	movlb	0	; () banked
  4630  0025B0  51CB               	movf	_colon& (0+255),w,b
  4631  0025B2  B4D8               	btfsc	status,2,c
  4632  0025B4  D004               	goto	l4970
  4633                           
  4634                           ; BSR set to: 0
  4635  0025B6  0E3A               	movlw	58
  4636  0025B8  ECA7  F01E         	call	_I2C_LCD_Putc
  4637  0025BC  D003               	goto	l4972
  4638  0025BE                     l4970:
  4639                           
  4640                           ;My_header\My_RTCC.h: 277: else I2C_LCD_Putc(' ');
  4641  0025BE  0E20               	movlw	32
  4642  0025C0  ECA7  F01E         	call	_I2C_LCD_Putc
  4643  0025C4                     l4972:
  4644                           
  4645                           ;My_header\My_RTCC.h: 278: display_dec(ct->mm, edit_flag.flag.mm);
  4646  0025C4  0E00               	movlw	0
  4647  0025C6  0100               	movlb	0	; () banked
  4648  0025C8  B3CE               	btfsc	_edit_flag& (0+255),1,b
  4649  0025CA  0E01               	movlw	1
  4650  0025CC  0100               	movlb	0	; () banked
  4651  0025CE  6F74               	movwf	display_dec@edit& (0+255),b
  4652  0025D0  0100               	movlb	0	; () banked
  4653  0025D2  EE20 F001          	lfsr	2,1
  4654  0025D6  0100               	movlb	0	; () banked
  4655  0025D8  5190               	movf	display_time@ct& (0+255),w,b
  4656  0025DA  26D9               	addwf	fsr2l,f,c
  4657  0025DC  0100               	movlb	0	; () banked
  4658  0025DE  5191               	movf	(display_time@ct+1)& (0+255),w,b
  4659  0025E0  22DA               	addwfc	fsr2h,f,c
  4660  0025E2  50DF               	movf	indf2,w,c
  4661  0025E4  EC74  F01C         	call	_display_dec
  4662                           
  4663                           ;My_header\My_RTCC.h: 279: I2C_LCD_Putc('-');
  4664  0025E8  0E2D               	movlw	45
  4665  0025EA  ECA7  F01E         	call	_I2C_LCD_Putc
  4666                           
  4667                           ;My_header\My_RTCC.h: 280: display_dec(ct->ss, edit_flag.flag.ss);
  4668  0025EE  0E00               	movlw	0
  4669  0025F0  0100               	movlb	0	; () banked
  4670  0025F2  B1CE               	btfsc	_edit_flag& (0+255),0,b
  4671  0025F4  0E01               	movlw	1
  4672  0025F6  0100               	movlb	0	; () banked
  4673  0025F8  6F74               	movwf	display_dec@edit& (0+255),b
  4674  0025FA  C090  FFD9         	movff	display_time@ct,fsr2l
  4675  0025FE  C091  FFDA         	movff	display_time@ct+1,fsr2h
  4676  002602  50DF               	movf	indf2,w,c
  4677  002604  EC74  F01C         	call	_display_dec
  4678  002608  0012               	return	
  4679  00260A                     __end_of_display_time:
  4680                           	opt stack 0
  4681                           tblptru	equ	0xFF8
  4682                           tblptrh	equ	0xFF7
  4683                           tblptrl	equ	0xFF6
  4684                           tablat	equ	0xFF5
  4685                           prodh	equ	0xFF4
  4686                           prodl	equ	0xFF3
  4687                           intcon	equ	0xFF2
  4688                           intcon2	equ	0xFF1
  4689                           postinc0	equ	0xFEE
  4690                           wreg	equ	0xFE8
  4691                           postdec1	equ	0xFE5
  4692                           fsr1l	equ	0xFE1
  4693                           indf2	equ	0xFDF
  4694                           postinc2	equ	0xFDE
  4695                           postdec2	equ	0xFDD
  4696                           fsr2h	equ	0xFDA
  4697                           fsr2l	equ	0xFD9
  4698                           status	equ	0xFD8
  4699                           
  4700 ;; *************** function _display_dec *****************
  4701 ;; Defined at:
  4702 ;;		line 254 in file "../My_header\My_RTCC.h"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;  dec             1    wreg     unsigned char 
  4705 ;;  edit            1   20[BANK0 ] unsigned char 
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;  dec             1   31[BANK0 ] unsigned char 
  4708 ;;  str            10   21[BANK0 ] unsigned char [10]
  4709 ;; Return value:  Size  Location     Type
  4710 ;;		None               void
  4711 ;; Registers used:
  4712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4718 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4719 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4721 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4722 ;;Total ram usage:       12 bytes
  4723 ;; Hardware stack levels used:    1
  4724 ;; Hardware stack levels required when called:    7
  4725 ;; This function calls:
  4726 ;;		_I2C_LCD_Puts
  4727 ;;		_utoa
  4728 ;; This function is called by:
  4729 ;;		_display_time
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           	psect	text20
  4734  0038E8                     __ptext20:
  4735                           	opt stack 0
  4736  0038E8                     _display_dec:
  4737                           	opt stack 21
  4738                           
  4739                           ;incstack = 0
  4740                           ;display_dec@dec stored from wreg
  4741  0038E8  0100               	movlb	0	; () banked
  4742  0038EA  6F7F               	movwf	display_dec@dec& (0+255),b
  4743                           
  4744                           ; BSR set to: 0
  4745                           ;My_header\My_RTCC.h: 255: uint8_t str[10];
  4746                           ;My_header\My_RTCC.h: 256: utoa(&str, dec, 2);
  4747  0038EC  0100               	movlb	0	; () banked
  4748  0038EE  0E00               	movlw	high display_dec@str
  4749  0038F0  0100               	movlb	0	; () banked
  4750  0038F2  6F6D               	movwf	(utoa@str+1)& (0+255),b
  4751  0038F4  0100               	movlb	0	; () banked
  4752  0038F6  0E75               	movlw	low display_dec@str
  4753  0038F8  0100               	movlb	0	; () banked
  4754  0038FA  6F6C               	movwf	utoa@str& (0+255),b
  4755  0038FC  0100               	movlb	0	; () banked
  4756  0038FE  C07F  F06E         	movff	display_dec@dec,utoa@value
  4757  003902  0100               	movlb	0	; () banked
  4758  003904  6B6F               	clrf	(utoa@value+1)& (0+255),b
  4759  003906  0E02               	movlw	2
  4760  003908  0100               	movlb	0	; () banked
  4761  00390A  6F70               	movwf	utoa@digits& (0+255),b
  4762  00390C  EC04  F01A         	call	_utoa	;wreg free
  4763                           
  4764                           ;My_header\My_RTCC.h: 257: if (edit && RTCCFGbits.HALFSEC)I2C_LCD_Puts("  ");
  4765  003910  0100               	movlb	0	; () banked
  4766  003912  5174               	movf	display_dec@edit& (0+255),w,b
  4767  003914  B4D8               	btfsc	status,2,c
  4768  003916  D00C               	goto	l4830
  4769                           
  4770                           ; BSR set to: 0
  4771  003918  010F               	movlb	15	; () banked
  4772  00391A  A73F               	btfss	63,3,b	;volatile
  4773  00391C  D009               	goto	l4830
  4774                           
  4775                           ; BSR set to: 15
  4776  00391E  0E0F               	movlw	high STR_15
  4777  003920  0100               	movlb	0	; () banked
  4778  003922  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4779  003924  0EAE               	movlw	low STR_15
  4780  003926  0100               	movlb	0	; () banked
  4781  003928  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  4782  00392A  ECB9  F019         	call	_I2C_LCD_Puts	;wreg free
  4783  00392E  0012               	return	
  4784  003930                     l4830:
  4785                           
  4786                           ;My_header\My_RTCC.h: 258: else I2C_LCD_Puts(str);
  4787  003930  0100               	movlb	0	; () banked
  4788  003932  0E00               	movlw	high display_dec@str
  4789  003934  0100               	movlb	0	; () banked
  4790  003936  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4791  003938  0100               	movlb	0	; () banked
  4792  00393A  0E75               	movlw	low display_dec@str
  4793  00393C  0100               	movlb	0	; () banked
  4794  00393E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  4795  003940  ECB9  F019         	call	_I2C_LCD_Puts	;wreg free
  4796  003944  0012               	return	
  4797  003946                     __end_of_display_dec:
  4798                           	opt stack 0
  4799                           tblptru	equ	0xFF8
  4800                           tblptrh	equ	0xFF7
  4801                           tblptrl	equ	0xFF6
  4802                           tablat	equ	0xFF5
  4803                           prodh	equ	0xFF4
  4804                           prodl	equ	0xFF3
  4805                           intcon	equ	0xFF2
  4806                           intcon2	equ	0xFF1
  4807                           postinc0	equ	0xFEE
  4808                           wreg	equ	0xFE8
  4809                           postdec1	equ	0xFE5
  4810                           fsr1l	equ	0xFE1
  4811                           indf2	equ	0xFDF
  4812                           postinc2	equ	0xFDE
  4813                           postdec2	equ	0xFDD
  4814                           fsr2h	equ	0xFDA
  4815                           fsr2l	equ	0xFD9
  4816                           status	equ	0xFD8
  4817                           
  4818 ;; *************** function _utoa *****************
  4819 ;; Defined at:
  4820 ;;		line 371 in file "../My_header\My_header.h"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  str             2   12[BANK0 ] PTR unsigned char 
  4823 ;;		 -> display_LCD@str(10), display_dec@str(10), 
  4824 ;;  value           2   14[BANK0 ] unsigned int 
  4825 ;;  digits          1   16[BANK0 ] unsigned char 
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;  v               2   18[BANK0 ] unsigned int 
  4828 ;;  d               1   17[BANK0 ] unsigned char 
  4829 ;; Return value:  Size  Location     Type
  4830 ;;		None               void
  4831 ;; Registers used:
  4832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4838 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4839 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4841 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4842 ;;Total ram usage:        8 bytes
  4843 ;; Hardware stack levels used:    1
  4844 ;; Hardware stack levels required when called:    5
  4845 ;; This function calls:
  4846 ;;		___lwdiv
  4847 ;;		___lwmod
  4848 ;; This function is called by:
  4849 ;;		_display_dec
  4850 ;;		_display_LCD
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           	psect	text21
  4855  003408                     __ptext21:
  4856                           	opt stack 0
  4857  003408                     _utoa:
  4858                           	opt stack 24
  4859                           
  4860                           ;My_header\My_header.h: 372: uint16_t v;
  4861                           ;My_header\My_header.h: 373: uint8_t d;
  4862                           ;My_header\My_header.h: 374: while (digits--) {
  4863                           
  4864                           ;incstack = 0
  4865  003408  D03C               	goto	l4646
  4866  00340A                     l247:
  4867                           
  4868                           ; BSR set to: 0
  4869                           ;My_header\My_header.h: 375: v = value;
  4870  00340A  C06E  F072         	movff	utoa@value,utoa@v
  4871  00340E  C06F  F073         	movff	utoa@value+1,utoa@v+1
  4872                           
  4873                           ;My_header\My_header.h: 376: d = digits;
  4874  003412  C070  F071         	movff	utoa@digits,utoa@d
  4875                           
  4876                           ;My_header\My_header.h: 377: while (d--) {
  4877  003416  D012               	goto	l4638
  4878  003418                     l4636:
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;My_header\My_header.h: 378: v /= 10;
  4882  003418  C072  F065         	movff	utoa@v,___lwdiv@dividend
  4883  00341C  C073  F066         	movff	utoa@v+1,___lwdiv@dividend+1
  4884  003420  0E00               	movlw	0
  4885  003422  0100               	movlb	0	; () banked
  4886  003424  6F68               	movwf	(___lwdiv@divisor+1)& (0+255),b
  4887  003426  0E0A               	movlw	10
  4888  003428  0100               	movlb	0	; () banked
  4889  00342A  6F67               	movwf	___lwdiv@divisor& (0+255),b
  4890  00342C  ECD7  F01B         	call	___lwdiv	;wreg free
  4891  003430  0100               	movlb	0	; () banked
  4892  003432  C065  F072         	movff	?___lwdiv,utoa@v
  4893  003436  0100               	movlb	0	; () banked
  4894  003438  C066  F073         	movff	?___lwdiv+1,utoa@v+1
  4895  00343C                     l4638:
  4896                           
  4897                           ; BSR set to: 0
  4898  00343C  0100               	movlb	0	; () banked
  4899  00343E  0771               	decf	utoa@d& (0+255),f,b
  4900  003440  0100               	movlb	0	; () banked
  4901  003442  2971               	incf	utoa@d& (0+255),w,b
  4902  003444  A4D8               	btfss	status,2,c
  4903  003446  D7E8               	goto	l4636
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;My_header\My_header.h: 379: }
  4907                           ;My_header\My_header.h: 380: v %= 10;
  4908                           
  4909                           ; BSR set to: 0
  4910  003448  C072  F060         	movff	utoa@v,___lwmod@dividend
  4911  00344C  C073  F061         	movff	utoa@v+1,___lwmod@dividend+1
  4912  003450  0E00               	movlw	0
  4913  003452  0100               	movlb	0	; () banked
  4914  003454  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  4915  003456  0E0A               	movlw	10
  4916  003458  0100               	movlb	0	; () banked
  4917  00345A  6F62               	movwf	___lwmod@divisor& (0+255),b
  4918  00345C  EC44  F01C         	call	___lwmod	;wreg free
  4919  003460  0100               	movlb	0	; () banked
  4920  003462  C060  F072         	movff	?___lwmod,utoa@v
  4921  003466  0100               	movlb	0	; () banked
  4922  003468  C061  F073         	movff	?___lwmod+1,utoa@v+1
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;My_header\My_header.h: 381: *str++ = '0' + v;
  4926  00346C  0100               	movlb	0	; () banked
  4927  00346E  5172               	movf	utoa@v& (0+255),w,b
  4928  003470  0F30               	addlw	48
  4929  003472  C06C  FFD9         	movff	utoa@str,fsr2l
  4930  003476  C06D  FFDA         	movff	utoa@str+1,fsr2h
  4931  00347A  6EDF               	movwf	indf2,c
  4932                           
  4933                           ; BSR set to: 0
  4934  00347C  0100               	movlb	0	; () banked
  4935  00347E  4B6C               	infsnz	utoa@str& (0+255),f,b
  4936  003480  2B6D               	incf	(utoa@str+1)& (0+255),f,b
  4937  003482                     l4646:
  4938  003482  0100               	movlb	0	; () banked
  4939  003484  0770               	decf	utoa@digits& (0+255),f,b
  4940  003486  0100               	movlb	0	; () banked
  4941  003488  2970               	incf	utoa@digits& (0+255),w,b
  4942  00348A  A4D8               	btfss	status,2,c
  4943  00348C  D7BE               	goto	l247
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;My_header\My_header.h: 382: }
  4947                           ;My_header\My_header.h: 383: *str = '\0';
  4948                           
  4949                           ; BSR set to: 0
  4950  00348E  C06C  FFD9         	movff	utoa@str,fsr2l
  4951  003492  C06D  FFDA         	movff	utoa@str+1,fsr2h
  4952  003496  0E00               	movlw	0
  4953  003498  6EDF               	movwf	indf2,c
  4954                           
  4955                           ; BSR set to: 0
  4956  00349A  0012               	return	
  4957  00349C                     __end_of_utoa:
  4958                           	opt stack 0
  4959                           tblptru	equ	0xFF8
  4960                           tblptrh	equ	0xFF7
  4961                           tblptrl	equ	0xFF6
  4962                           tablat	equ	0xFF5
  4963                           prodh	equ	0xFF4
  4964                           prodl	equ	0xFF3
  4965                           intcon	equ	0xFF2
  4966                           intcon2	equ	0xFF1
  4967                           postinc0	equ	0xFEE
  4968                           wreg	equ	0xFE8
  4969                           postdec1	equ	0xFE5
  4970                           fsr1l	equ	0xFE1
  4971                           indf2	equ	0xFDF
  4972                           postinc2	equ	0xFDE
  4973                           postdec2	equ	0xFDD
  4974                           fsr2h	equ	0xFDA
  4975                           fsr2l	equ	0xFD9
  4976                           status	equ	0xFD8
  4977                           
  4978 ;; *************** function ___lwmod *****************
  4979 ;; Defined at:
  4980 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;  dividend        2    0[BANK0 ] unsigned int 
  4983 ;;  divisor         2    2[BANK0 ] unsigned int 
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;  counter         1    4[BANK0 ] unsigned char 
  4986 ;; Return value:  Size  Location     Type
  4987 ;;                  2    0[BANK0 ] unsigned int 
  4988 ;; Registers used:
  4989 ;;		wreg, status,2, status,0
  4990 ;; Tracked objects:
  4991 ;;		On entry : 0/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: 0/0
  4994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4995 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4996 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4998 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4999 ;;Total ram usage:        5 bytes
  5000 ;; Hardware stack levels used:    1
  5001 ;; Hardware stack levels required when called:    4
  5002 ;; This function calls:
  5003 ;;		Nothing
  5004 ;; This function is called by:
  5005 ;;		_utoa
  5006 ;;		_display_LCD
  5007 ;;		_tx_sendn
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           	psect	text22
  5012  003888                     __ptext22:
  5013                           	opt stack 0
  5014  003888                     ___lwmod:
  5015                           	opt stack 24
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;incstack = 0
  5019  003888  0100               	movlb	0	; () banked
  5020  00388A  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5021  00388C  1162               	iorwf	___lwmod@divisor& (0+255),w,b
  5022  00388E  B4D8               	btfsc	status,2,c
  5023  003890  D026               	goto	l1217
  5024                           
  5025                           ; BSR set to: 0
  5026  003892  0E01               	movlw	1
  5027  003894  0100               	movlb	0	; () banked
  5028  003896  6F64               	movwf	___lwmod@counter& (0+255),b
  5029  003898  D006               	goto	l4624
  5030  00389A                     l4622:
  5031                           
  5032                           ; BSR set to: 0
  5033  00389A  0100               	movlb	0	; () banked
  5034  00389C  90D8               	bcf	status,0,c
  5035  00389E  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  5036  0038A0  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  5037  0038A2  0100               	movlb	0	; () banked
  5038  0038A4  2B64               	incf	___lwmod@counter& (0+255),f,b
  5039  0038A6                     l4624:
  5040                           
  5041                           ; BSR set to: 0
  5042  0038A6  0100               	movlb	0	; () banked
  5043  0038A8  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  5044  0038AA  D7F7               	goto	l4622
  5045  0038AC                     l4626:
  5046                           
  5047                           ; BSR set to: 0
  5048  0038AC  0100               	movlb	0	; () banked
  5049  0038AE  5162               	movf	___lwmod@divisor& (0+255),w,b
  5050  0038B0  0100               	movlb	0	; () banked
  5051  0038B2  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  5052  0038B4  0100               	movlb	0	; () banked
  5053  0038B6  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5054  0038B8  0100               	movlb	0	; () banked
  5055  0038BA  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  5056  0038BC  A0D8               	btfss	status,0,c
  5057  0038BE  D008               	goto	l4630
  5058                           
  5059                           ; BSR set to: 0
  5060  0038C0  0100               	movlb	0	; () banked
  5061  0038C2  5162               	movf	___lwmod@divisor& (0+255),w,b
  5062  0038C4  0100               	movlb	0	; () banked
  5063  0038C6  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  5064  0038C8  0100               	movlb	0	; () banked
  5065  0038CA  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5066  0038CC  0100               	movlb	0	; () banked
  5067  0038CE  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  5068  0038D0                     l4630:
  5069                           
  5070                           ; BSR set to: 0
  5071  0038D0  0100               	movlb	0	; () banked
  5072  0038D2  90D8               	bcf	status,0,c
  5073  0038D4  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  5074  0038D6  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  5075                           
  5076                           ; BSR set to: 0
  5077  0038D8  0100               	movlb	0	; () banked
  5078  0038DA  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  5079  0038DC  D7E7               	goto	l4626
  5080  0038DE                     l1217:
  5081                           
  5082                           ; BSR set to: 0
  5083  0038DE  C060  F060         	movff	___lwmod@dividend,?___lwmod
  5084  0038E2  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  5085                           
  5086                           ; BSR set to: 0
  5087  0038E6  0012               	return	
  5088  0038E8                     __end_of___lwmod:
  5089                           	opt stack 0
  5090                           tblptru	equ	0xFF8
  5091                           tblptrh	equ	0xFF7
  5092                           tblptrl	equ	0xFF6
  5093                           tablat	equ	0xFF5
  5094                           prodh	equ	0xFF4
  5095                           prodl	equ	0xFF3
  5096                           intcon	equ	0xFF2
  5097                           intcon2	equ	0xFF1
  5098                           postinc0	equ	0xFEE
  5099                           wreg	equ	0xFE8
  5100                           postdec1	equ	0xFE5
  5101                           fsr1l	equ	0xFE1
  5102                           indf2	equ	0xFDF
  5103                           postinc2	equ	0xFDE
  5104                           postdec2	equ	0xFDD
  5105                           fsr2h	equ	0xFDA
  5106                           fsr2l	equ	0xFD9
  5107                           status	equ	0xFD8
  5108                           
  5109 ;; *************** function ___lwdiv *****************
  5110 ;; Defined at:
  5111 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;  dividend        2    5[BANK0 ] unsigned int 
  5114 ;;  divisor         2    7[BANK0 ] unsigned int 
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;  quotient        2   10[BANK0 ] unsigned int 
  5117 ;;  counter         1    9[BANK0 ] unsigned char 
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  2    5[BANK0 ] unsigned int 
  5120 ;; Registers used:
  5121 ;;		wreg, status,2, status,0
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5127 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5128 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5130 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5131 ;;Total ram usage:        7 bytes
  5132 ;; Hardware stack levels used:    1
  5133 ;; Hardware stack levels required when called:    4
  5134 ;; This function calls:
  5135 ;;		Nothing
  5136 ;; This function is called by:
  5137 ;;		_utoa
  5138 ;;		_display_LCD
  5139 ;;		_tx_sendn
  5140 ;; This function uses a non-reentrant model
  5141 ;;
  5142                           
  5143                           	psect	text23
  5144  0037AE                     __ptext23:
  5145                           	opt stack 0
  5146  0037AE                     ___lwdiv:
  5147                           	opt stack 24
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;incstack = 0
  5151  0037AE  0E00               	movlw	0
  5152  0037B0  0100               	movlb	0	; () banked
  5153  0037B2  6F6B               	movwf	(___lwdiv@quotient+1)& (0+255),b
  5154  0037B4  0E00               	movlw	0
  5155  0037B6  0100               	movlb	0	; () banked
  5156  0037B8  6F6A               	movwf	___lwdiv@quotient& (0+255),b
  5157                           
  5158                           ; BSR set to: 0
  5159  0037BA  0100               	movlb	0	; () banked
  5160  0037BC  5168               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5161  0037BE  1167               	iorwf	___lwdiv@divisor& (0+255),w,b
  5162  0037C0  B4D8               	btfsc	status,2,c
  5163  0037C2  D02C               	goto	l1207
  5164                           
  5165                           ; BSR set to: 0
  5166  0037C4  0E01               	movlw	1
  5167  0037C6  0100               	movlb	0	; () banked
  5168  0037C8  6F69               	movwf	___lwdiv@counter& (0+255),b
  5169  0037CA  D006               	goto	l4604
  5170  0037CC                     l4602:
  5171                           
  5172                           ; BSR set to: 0
  5173  0037CC  0100               	movlb	0	; () banked
  5174  0037CE  90D8               	bcf	status,0,c
  5175  0037D0  3767               	rlcf	___lwdiv@divisor& (0+255),f,b
  5176  0037D2  3768               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  5177  0037D4  0100               	movlb	0	; () banked
  5178  0037D6  2B69               	incf	___lwdiv@counter& (0+255),f,b
  5179  0037D8                     l4604:
  5180                           
  5181                           ; BSR set to: 0
  5182  0037D8  0100               	movlb	0	; () banked
  5183  0037DA  AF68               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  5184  0037DC  D7F7               	goto	l4602
  5185  0037DE                     l4606:
  5186                           
  5187                           ; BSR set to: 0
  5188  0037DE  0100               	movlb	0	; () banked
  5189  0037E0  90D8               	bcf	status,0,c
  5190  0037E2  376A               	rlcf	___lwdiv@quotient& (0+255),f,b
  5191  0037E4  376B               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  5192                           
  5193                           ; BSR set to: 0
  5194  0037E6  0100               	movlb	0	; () banked
  5195  0037E8  5167               	movf	___lwdiv@divisor& (0+255),w,b
  5196  0037EA  0100               	movlb	0	; () banked
  5197  0037EC  5D65               	subwf	___lwdiv@dividend& (0+255),w,b
  5198  0037EE  0100               	movlb	0	; () banked
  5199  0037F0  5168               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5200  0037F2  0100               	movlb	0	; () banked
  5201  0037F4  5966               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  5202  0037F6  A0D8               	btfss	status,0,c
  5203  0037F8  D00A               	goto	l4614
  5204                           
  5205                           ; BSR set to: 0
  5206  0037FA  0100               	movlb	0	; () banked
  5207  0037FC  5167               	movf	___lwdiv@divisor& (0+255),w,b
  5208  0037FE  0100               	movlb	0	; () banked
  5209  003800  5F65               	subwf	___lwdiv@dividend& (0+255),f,b
  5210  003802  0100               	movlb	0	; () banked
  5211  003804  5168               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5212  003806  0100               	movlb	0	; () banked
  5213  003808  5B66               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  5214                           
  5215                           ; BSR set to: 0
  5216  00380A  0100               	movlb	0	; () banked
  5217  00380C  816A               	bsf	___lwdiv@quotient& (0+255),0,b
  5218  00380E                     l4614:
  5219                           
  5220                           ; BSR set to: 0
  5221  00380E  0100               	movlb	0	; () banked
  5222  003810  90D8               	bcf	status,0,c
  5223  003812  3368               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  5224  003814  3367               	rrcf	___lwdiv@divisor& (0+255),f,b
  5225                           
  5226                           ; BSR set to: 0
  5227  003816  0100               	movlb	0	; () banked
  5228  003818  2F69               	decfsz	___lwdiv@counter& (0+255),f,b
  5229  00381A  D7E1               	goto	l4606
  5230  00381C                     l1207:
  5231                           
  5232                           ; BSR set to: 0
  5233  00381C  C06A  F065         	movff	___lwdiv@quotient,?___lwdiv
  5234  003820  C06B  F066         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5235                           
  5236                           ; BSR set to: 0
  5237  003824  0012               	return	
  5238  003826                     __end_of___lwdiv:
  5239                           	opt stack 0
  5240                           tblptru	equ	0xFF8
  5241                           tblptrh	equ	0xFF7
  5242                           tblptrl	equ	0xFF6
  5243                           tablat	equ	0xFF5
  5244                           prodh	equ	0xFF4
  5245                           prodl	equ	0xFF3
  5246                           intcon	equ	0xFF2
  5247                           intcon2	equ	0xFF1
  5248                           postinc0	equ	0xFEE
  5249                           wreg	equ	0xFE8
  5250                           postdec1	equ	0xFE5
  5251                           fsr1l	equ	0xFE1
  5252                           indf2	equ	0xFDF
  5253                           postinc2	equ	0xFDE
  5254                           postdec2	equ	0xFDD
  5255                           fsr2h	equ	0xFDA
  5256                           fsr2l	equ	0xFD9
  5257                           status	equ	0xFD8
  5258                           
  5259 ;; *************** function _I2C_LCD_Putc *****************
  5260 ;; Defined at:
  5261 ;;		line 117 in file "../My_header\My_I2C.h"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;  c               1    wreg     unsigned char 
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;  c               1    4[BANK0 ] unsigned char 
  5266 ;;  ans             1    5[BANK0 ] unsigned char 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;		None               void
  5269 ;; Registers used:
  5270 ;;		wreg, status,2, status,0, cstack
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5277 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5279 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5280 ;;Total ram usage:        2 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:    6
  5283 ;; This function calls:
  5284 ;;		_I2C_Send
  5285 ;;		_I2C_Start
  5286 ;;		_I2C_Stop
  5287 ;; This function is called by:
  5288 ;;		_display_time
  5289 ;;		_display_LCD
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293                           	psect	text24
  5294  003D4E                     __ptext24:
  5295                           	opt stack 0
  5296  003D4E                     _I2C_LCD_Putc:
  5297                           	opt stack 22
  5298                           
  5299                           ; BSR set to: 0
  5300                           ;incstack = 0
  5301                           ;I2C_LCD_Putc@c stored from wreg
  5302  003D4E  0100               	movlb	0	; () banked
  5303  003D50  6F64               	movwf	I2C_LCD_Putc@c& (0+255),b
  5304                           
  5305                           ; BSR set to: 0
  5306                           ;My_header\My_I2C.h: 118: uint8_t ans;
  5307                           ;My_header\My_I2C.h: 120: ans = I2C_Start(0x3E, 0);
  5308  003D52  0E00               	movlw	0
  5309  003D54  0100               	movlb	0	; () banked
  5310  003D56  6F62               	movwf	I2C_Start@rw& (0+255),b
  5311  003D58  0E3E               	movlw	62
  5312  003D5A  ECDB  F01E         	call	_I2C_Start
  5313  003D5E  0100               	movlb	0	; () banked
  5314  003D60  6F65               	movwf	I2C_LCD_Putc@ans& (0+255),b
  5315                           
  5316                           ; BSR set to: 0
  5317                           ;My_header\My_I2C.h: 121: if (ans == 0) {
  5318  003D62  0100               	movlb	0	; () banked
  5319  003D64  6765               	tstfsz	I2C_LCD_Putc@ans& (0+255),b
  5320  003D66  D007               	goto	l345
  5321                           
  5322                           ; BSR set to: 0
  5323                           ;My_header\My_I2C.h: 123: I2C_Send(0b11000000);
  5324  003D68  0EC0               	movlw	192
  5325  003D6A  EC26  F020         	call	_I2C_Send
  5326                           
  5327                           ;My_header\My_I2C.h: 124: I2C_Send(c);
  5328  003D6E  0100               	movlb	0	; () banked
  5329  003D70  5164               	movf	I2C_LCD_Putc@c& (0+255),w,b
  5330  003D72  EC26  F020         	call	_I2C_Send
  5331  003D76                     l345:
  5332                           
  5333                           ;My_header\My_I2C.h: 125: }
  5334                           ;My_header\My_I2C.h: 126: I2C_Stop();
  5335  003D76  EC46  F020         	call	_I2C_Stop	;wreg free
  5336                           
  5337                           ;My_header\My_I2C.h: 127: _delay((unsigned long)((26)*(48000000/4000000.0)));
  5338  003D7A  0E68               	movlw	104
  5339  003D7C                     u5807:
  5340  003D7C  2EE8               	decfsz	wreg,f,c
  5341  003D7E  D7FE               	goto	u5807
  5342  003D80  0012               	return	
  5343  003D82                     __end_of_I2C_LCD_Putc:
  5344                           	opt stack 0
  5345                           tblptru	equ	0xFF8
  5346                           tblptrh	equ	0xFF7
  5347                           tblptrl	equ	0xFF6
  5348                           tablat	equ	0xFF5
  5349                           prodh	equ	0xFF4
  5350                           prodl	equ	0xFF3
  5351                           intcon	equ	0xFF2
  5352                           intcon2	equ	0xFF1
  5353                           postinc0	equ	0xFEE
  5354                           wreg	equ	0xFE8
  5355                           postdec1	equ	0xFE5
  5356                           fsr1l	equ	0xFE1
  5357                           indf2	equ	0xFDF
  5358                           postinc2	equ	0xFDE
  5359                           postdec2	equ	0xFDD
  5360                           fsr2h	equ	0xFDA
  5361                           fsr2l	equ	0xFD9
  5362                           status	equ	0xFD8
  5363                           
  5364 ;; *************** function _display_port *****************
  5365 ;; Defined at:
  5366 ;;		line 131 in file "PIC18F27J53-ChargeStation6-02.h"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;		None
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;		None
  5371 ;; Return value:  Size  Location     Type
  5372 ;;		None               void
  5373 ;; Registers used:
  5374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5384 ;;Total ram usage:        0 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; Hardware stack levels required when called:    8
  5387 ;; This function calls:
  5388 ;;		_I2C_LCD_Puts
  5389 ;;		_I2C_LCD_SetCursor
  5390 ;; This function is called by:
  5391 ;;		_display_LCD
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395                           	psect	text25
  5396  002EF4                     __ptext25:
  5397                           	opt stack 0
  5398  002EF4                     _display_port:
  5399                           	opt stack 21
  5400                           
  5401                           ;PIC18F27J53-ChargeStation6-02.h: 132: I2C_LCD_SetCursor(0, 0);
  5402                           
  5403                           ;incstack = 0
  5404  002EF4  0E00               	movlw	0
  5405  002EF6  0100               	movlb	0	; () banked
  5406  002EF8  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5407  002EFA  0E00               	movlw	0
  5408  002EFC  ECF4  F01E         	call	_I2C_LCD_SetCursor
  5409                           
  5410                           ;PIC18F27J53-ChargeStation6-02.h: 133: switch (print_port) {
  5411  002F00  D057               	goto	l5166
  5412  002F02                     l5146:
  5413                           
  5414                           ;PIC18F27J53-ChargeStation6-02.h: 135: if (auto_cut_ON[print_port]) I2C_LCD_Puts("Right"
      +                          );
  5415  002F02  5031               	movf	_print_port,w,c
  5416  002F04  0D01               	mullw	1
  5417  002F06  0E28               	movlw	low _auto_cut_ON
  5418  002F08  24F3               	addwf	prodl,w,c
  5419  002F0A  6ED9               	movwf	fsr2l,c
  5420  002F0C  0E00               	movlw	high _auto_cut_ON
  5421  002F0E  20F4               	addwfc	prodh,w,c
  5422  002F10  6EDA               	movwf	fsr2h,c
  5423  002F12  50DF               	movf	indf2,w,c
  5424  002F14  B4D8               	btfsc	status,2,c
  5425  002F16  D009               	goto	l5150
  5426  002F18  0E0F               	movlw	high STR_16
  5427  002F1A  0100               	movlb	0	; () banked
  5428  002F1C  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5429  002F1E  0E7E               	movlw	low STR_16
  5430  002F20  0100               	movlb	0	; () banked
  5431  002F22  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5432  002F24  ECB9  F019         	call	_I2C_LCD_Puts	;wreg free
  5433  002F28  0012               	return	
  5434  002F2A                     l5150:
  5435                           
  5436                           ;PIC18F27J53-ChargeStation6-02.h: 136: else I2C_LCD_Puts("RIGHT");
  5437  002F2A  0E0F               	movlw	high STR_17
  5438  002F2C  0100               	movlb	0	; () banked
  5439  002F2E  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5440  002F30  0E78               	movlw	low STR_17
  5441  002F32  0100               	movlb	0	; () banked
  5442  002F34  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5443  002F36  ECB9  F019         	call	_I2C_LCD_Puts	;wreg free
  5444  002F3A  0012               	return	
  5445  002F3C                     l5152:
  5446                           
  5447                           ;PIC18F27J53-ChargeStation6-02.h: 139: if (auto_cut_ON[print_port]) I2C_LCD_Puts("Center
      +                          ");
  5448  002F3C  5031               	movf	_print_port,w,c
  5449  002F3E  0D01               	mullw	1
  5450  002F40  0E28               	movlw	low _auto_cut_ON
  5451  002F42  24F3               	addwf	prodl,w,c
  5452  002F44  6ED9               	movwf	fsr2l,c
  5453  002F46  0E00               	movlw	high _auto_cut_ON
  5454  002F48  20F4               	addwfc	prodh,w,c
  5455  002F4A  6EDA               	movwf	fsr2h,c
  5456  002F4C  50DF               	movf	indf2,w,c
  5457  002F4E  B4D8               	btfsc	status,2,c
  5458  002F50  D009               	goto	l5156
  5459  002F52  0E0F               	movlw	high STR_18
  5460  002F54  0100               	movlb	0	; () banked
  5461  002F56  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5462  002F58  0E5C               	movlw	low STR_18
  5463  002F5A  0100               	movlb	0	; () banked
  5464  002F5C  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5465  002F5E  ECB9  F019         	call	_I2C_LCD_Puts	;wreg free
  5466  002F62  0012               	return	
  5467  002F64                     l5156:
  5468                           
  5469                           ;PIC18F27J53-ChargeStation6-02.h: 140: else I2C_LCD_Puts("CENTER");
  5470  002F64  0E0F               	movlw	high STR_19
  5471  002F66  0100               	movlb	0	; () banked
  5472  002F68  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5473  002F6A  0E4E               	movlw	low STR_19
  5474  002F6C  0100               	movlb	0	; () banked
  5475  002F6E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5476  002F70  ECB9  F019         	call	_I2C_LCD_Puts	;wreg free
  5477  002F74  0012               	return	
  5478  002F76                     l5158:
  5479                           
  5480                           ;PIC18F27J53-ChargeStation6-02.h: 143: if (auto_cut_ON[print_port]) I2C_LCD_Puts("Left")
      +                          ;
  5481  002F76  5031               	movf	_print_port,w,c
  5482  002F78  0D01               	mullw	1
  5483  002F7A  0E28               	movlw	low _auto_cut_ON
  5484  002F7C  24F3               	addwf	prodl,w,c
  5485  002F7E  6ED9               	movwf	fsr2l,c
  5486  002F80  0E00               	movlw	high _auto_cut_ON
  5487  002F82  20F4               	addwfc	prodh,w,c
  5488  002F84  6EDA               	movwf	fsr2h,c
  5489  002F86  50DF               	movf	indf2,w,c
  5490  002F88  B4D8               	btfsc	status,2,c
  5491  002F8A  D009               	goto	l5162
  5492  002F8C  0E0F               	movlw	high STR_20
  5493  002F8E  0100               	movlb	0	; () banked
  5494  002F90  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5495  002F92  0E89               	movlw	low STR_20
  5496  002F94  0100               	movlb	0	; () banked
  5497  002F96  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5498  002F98  ECB9  F019         	call	_I2C_LCD_Puts	;wreg free
  5499  002F9C  0012               	return	
  5500  002F9E                     l5162:
  5501                           
  5502                           ;PIC18F27J53-ChargeStation6-02.h: 144: else I2C_LCD_Puts("LEFT");
  5503  002F9E  0E0F               	movlw	high STR_21
  5504  002FA0  0100               	movlb	0	; () banked
  5505  002FA2  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5506  002FA4  0E84               	movlw	low STR_21
  5507  002FA6  0100               	movlb	0	; () banked
  5508  002FA8  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5509  002FAA  ECB9  F019         	call	_I2C_LCD_Puts	;wreg free
  5510  002FAE  0012               	return	
  5511  002FB0                     l5166:
  5512  002FB0  5031               	movf	_print_port,w,c
  5513                           
  5514                           ; Switch size 1, requested type "space"
  5515                           ; Number of cases is 3, Range of values is 0 to 2
  5516                           ; switch strategies available:
  5517                           ; Name         Instructions Cycles
  5518                           ; simple_byte           10     6 (average)
  5519                           ;	Chosen strategy is simple_byte
  5520  002FB2  0A00               	xorlw	0	; case 0
  5521  002FB4  B4D8               	btfsc	status,2,c
  5522  002FB6  D7A5               	goto	l5146
  5523  002FB8  0A01               	xorlw	1	; case 1
  5524  002FBA  B4D8               	btfsc	status,2,c
  5525  002FBC  D7BF               	goto	l5152
  5526  002FBE  0A03               	xorlw	3	; case 2
  5527  002FC0  A4D8               	btfss	status,2,c
  5528  002FC2  0012               	return	
  5529  002FC4  D7D8               	goto	l5158
  5530  002FC6                     __end_of_display_port:
  5531                           	opt stack 0
  5532                           tblptru	equ	0xFF8
  5533                           tblptrh	equ	0xFF7
  5534                           tblptrl	equ	0xFF6
  5535                           tablat	equ	0xFF5
  5536                           prodh	equ	0xFF4
  5537                           prodl	equ	0xFF3
  5538                           intcon	equ	0xFF2
  5539                           intcon2	equ	0xFF1
  5540                           postinc0	equ	0xFEE
  5541                           wreg	equ	0xFE8
  5542                           postdec1	equ	0xFE5
  5543                           fsr1l	equ	0xFE1
  5544                           indf2	equ	0xFDF
  5545                           postinc2	equ	0xFDE
  5546                           postdec2	equ	0xFDD
  5547                           fsr2h	equ	0xFDA
  5548                           fsr2l	equ	0xFD9
  5549                           status	equ	0xFD8
  5550                           
  5551 ;; *************** function _I2C_LCD_SetCursor *****************
  5552 ;; Defined at:
  5553 ;;		line 111 in file "../My_header\My_I2C.h"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;  col             1    wreg     unsigned char 
  5556 ;;  row             1    6[BANK0 ] unsigned char 
  5557 ;; Auto vars:     Size  Location     Type
  5558 ;;  col             1    9[BANK0 ] unsigned char 
  5559 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
  5560 ;; Return value:  Size  Location     Type
  5561 ;;		None               void
  5562 ;; Registers used:
  5563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5564 ;; Tracked objects:
  5565 ;;		On entry : 0/0
  5566 ;;		On exit  : 0/0
  5567 ;;		Unchanged: 0/0
  5568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5569 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5570 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5572 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5573 ;;Total ram usage:        4 bytes
  5574 ;; Hardware stack levels used:    1
  5575 ;; Hardware stack levels required when called:    7
  5576 ;; This function calls:
  5577 ;;		_I2C_LCD_Command
  5578 ;; This function is called by:
  5579 ;;		_display_time
  5580 ;;		_display_port
  5581 ;;		_display_LCD
  5582 ;;		_main
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           	psect	text26
  5587  003DE8                     __ptext26:
  5588                           	opt stack 0
  5589  003DE8                     _I2C_LCD_SetCursor:
  5590                           	opt stack 21
  5591                           
  5592                           ;incstack = 0
  5593                           ;I2C_LCD_SetCursor@col stored from wreg
  5594  003DE8  0100               	movlb	0	; () banked
  5595  003DEA  6F69               	movwf	I2C_LCD_SetCursor@col& (0+255),b
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;My_header\My_I2C.h: 112: uint8_t row_offsets[] = {0x00, 0x40};
  5599  003DEC  C041  F067         	movff	I2C_LCD_SetCursor@F9846,I2C_LCD_SetCursor@row_offsets
  5600  003DF0  C042  F068         	movff	I2C_LCD_SetCursor@F9846+1,I2C_LCD_SetCursor@row_offsets+1
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;My_header\My_I2C.h: 114: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
  5604  003DF4  0100               	movlb	0	; () banked
  5605  003DF6  5166               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
  5606  003DF8  0D01               	mullw	1
  5607  003DFA  0100               	movlb	0	; () banked
  5608  003DFC  0E67               	movlw	low I2C_LCD_SetCursor@row_offsets
  5609  003DFE  24F3               	addwf	prodl,w,c
  5610  003E00  6ED9               	movwf	fsr2l,c
  5611  003E02  0100               	movlb	0	; () banked
  5612  003E04  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
  5613  003E06  20F4               	addwfc	prodh,w,c
  5614  003E08  6EDA               	movwf	fsr2h,c
  5615  003E0A  50DF               	movf	indf2,w,c
  5616  003E0C  0100               	movlb	0	; () banked
  5617  003E0E  2569               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
  5618  003E10  0980               	iorlw	128
  5619  003E12  ECC1  F01E         	call	_I2C_LCD_Command
  5620  003E16  0012               	return	
  5621  003E18                     __end_of_I2C_LCD_SetCursor:
  5622                           	opt stack 0
  5623                           tblptru	equ	0xFF8
  5624                           tblptrh	equ	0xFF7
  5625                           tblptrl	equ	0xFF6
  5626                           tablat	equ	0xFF5
  5627                           prodh	equ	0xFF4
  5628                           prodl	equ	0xFF3
  5629                           intcon	equ	0xFF2
  5630                           intcon2	equ	0xFF1
  5631                           postinc0	equ	0xFEE
  5632                           wreg	equ	0xFE8
  5633                           postdec1	equ	0xFE5
  5634                           fsr1l	equ	0xFE1
  5635                           indf2	equ	0xFDF
  5636                           postinc2	equ	0xFDE
  5637                           postdec2	equ	0xFDD
  5638                           fsr2h	equ	0xFDA
  5639                           fsr2l	equ	0xFD9
  5640                           status	equ	0xFD8
  5641                           
  5642 ;; *************** function _I2C_LCD_Puts *****************
  5643 ;; Defined at:
  5644 ;;		line 130 in file "../My_header\My_I2C.h"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  s               2    4[BANK0 ] PTR const unsigned char 
  5647 ;;		 -> STR_30(8), STR_29(7), STR_28(9), STR_27(9), 
  5648 ;;		 -> STR_26(8), STR_25(7), STR_24(4), display_LCD@str(10), 
  5649 ;;		 -> STR_23(8), STR_22(7), STR_21(5), STR_20(5), 
  5650 ;;		 -> STR_19(7), STR_18(7), STR_17(6), STR_16(6), 
  5651 ;;		 -> STR_15(3), display_dec@str(10), STR_7(4), STR_6(4), 
  5652 ;;		 -> STR_5(4), STR_4(4), STR_3(4), STR_2(4), 
  5653 ;;		 -> STR_1(4), 
  5654 ;; Auto vars:     Size  Location     Type
  5655 ;;  ans             2    7[BANK0 ] int 
  5656 ;; Return value:  Size  Location     Type
  5657 ;;		None               void
  5658 ;; Registers used:
  5659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5660 ;; Tracked objects:
  5661 ;;		On entry : 0/0
  5662 ;;		On exit  : 0/0
  5663 ;;		Unchanged: 0/0
  5664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5665 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5666 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5667 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5668 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5669 ;;Total ram usage:        5 bytes
  5670 ;; Hardware stack levels used:    1
  5671 ;; Hardware stack levels required when called:    6
  5672 ;; This function calls:
  5673 ;;		_I2C_Send
  5674 ;;		_I2C_Start
  5675 ;;		_I2C_Stop
  5676 ;; This function is called by:
  5677 ;;		_display_dec
  5678 ;;		_display_time
  5679 ;;		_display_port
  5680 ;;		_display_LCD
  5681 ;;		_main
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text27
  5686  003372                     __ptext27:
  5687                           	opt stack 0
  5688  003372                     _I2C_LCD_Puts:
  5689                           	opt stack 21
  5690                           
  5691                           ;My_header\My_I2C.h: 131: int ans;
  5692                           ;My_header\My_I2C.h: 133: ans = I2C_Start(0x3E, 0);
  5693                           
  5694                           ;incstack = 0
  5695  003372  0E00               	movlw	0
  5696  003374  0100               	movlb	0	; () banked
  5697  003376  6F62               	movwf	I2C_Start@rw& (0+255),b
  5698  003378  0E3E               	movlw	62
  5699  00337A  ECDB  F01E         	call	_I2C_Start
  5700  00337E  0100               	movlb	0	; () banked
  5701  003380  6F66               	movwf	??_I2C_LCD_Puts& (0+255),b
  5702  003382  0100               	movlb	0	; () banked
  5703  003384  5166               	movf	??_I2C_LCD_Puts& (0+255),w,b
  5704  003386  0100               	movlb	0	; () banked
  5705  003388  6F67               	movwf	I2C_LCD_Puts@ans& (0+255),b
  5706  00338A  0100               	movlb	0	; () banked
  5707  00338C  6B68               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
  5708                           
  5709                           ; BSR set to: 0
  5710                           ;My_header\My_I2C.h: 134: if (ans == 0) {
  5711  00338E  0100               	movlb	0	; () banked
  5712  003390  5168               	movf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
  5713  003392  1167               	iorwf	I2C_LCD_Puts@ans& (0+255),w,b
  5714  003394  A4D8               	btfss	status,2,c
  5715  003396  D035               	goto	l4672
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;My_header\My_I2C.h: 135: I2C_Send(0b01000000);
  5719  003398  0E40               	movlw	64
  5720  00339A  EC26  F020         	call	_I2C_Send
  5721                           
  5722                           ;My_header\My_I2C.h: 136: while (*s) {
  5723  00339E  D01B               	goto	l4670
  5724  0033A0                     l4664:
  5725                           
  5726                           ;My_header\My_I2C.h: 137: I2C_Send(*s++);
  5727  0033A0  0100               	movlb	0	; () banked
  5728  0033A2  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  5729  0033A6  0100               	movlb	0	; () banked
  5730  0033A8  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  5731  0033AC  0E00               	movlw	low (__smallconst shr (0+16))
  5732  0033AE  6EF8               	movwf	tblptru,c
  5733  0033B0  0E0E               	movlw	(high __ramtop+-1)
  5734  0033B2  64F7               	cpfsgt	tblptrh,c
  5735  0033B4  D003               	bra	u4677
  5736  0033B6  0008               	tblrd		*
  5737  0033B8  50F5               	movf	tablat,w,c
  5738  0033BA  D005               	bra	u4670
  5739  0033BC                     u4677:
  5740  0033BC  CFF6 FFD9          	movff	tblptrl,fsr2l
  5741  0033C0  CFF7 FFDA          	movff	tblptrh,fsr2h
  5742  0033C4  50DF               	movf	indf2,w,c
  5743  0033C6                     u4670:
  5744  0033C6  EC26  F020         	call	_I2C_Send
  5745  0033CA  0100               	movlb	0	; () banked
  5746  0033CC  4B64               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
  5747  0033CE  2B65               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
  5748                           
  5749                           ; BSR set to: 0
  5750                           ;My_header\My_I2C.h: 138: _delay((unsigned long)((26)*(48000000/4000000.0)));
  5751  0033D0  0E68               	movlw	104
  5752  0033D2                     u5817:
  5753  0033D2  2EE8               	decfsz	wreg,f,c
  5754  0033D4  D7FE               	goto	u5817
  5755  0033D6                     l4670:
  5756  0033D6  0100               	movlb	0	; () banked
  5757  0033D8  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  5758  0033DC  0100               	movlb	0	; () banked
  5759  0033DE  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  5760  0033E2  0E00               	movlw	low (__smallconst shr (0+16))
  5761  0033E4  6EF8               	movwf	tblptru,c
  5762  0033E6  0E0E               	movlw	(high __ramtop+-1)
  5763  0033E8  64F7               	cpfsgt	tblptrh,c
  5764  0033EA  D003               	bra	u4687
  5765  0033EC  0008               	tblrd		*
  5766  0033EE  50F5               	movf	tablat,w,c
  5767  0033F0  D005               	bra	u4680
  5768  0033F2                     u4687:
  5769  0033F2  CFF6 FFD9          	movff	tblptrl,fsr2l
  5770  0033F6  CFF7 FFDA          	movff	tblptrh,fsr2h
  5771  0033FA  50DF               	movf	indf2,w,c
  5772  0033FC                     u4680:
  5773  0033FC  0900               	iorlw	0
  5774  0033FE  A4D8               	btfss	status,2,c
  5775  003400  D7CF               	goto	l4664
  5776  003402                     l4672:
  5777                           
  5778                           ;My_header\My_I2C.h: 139: }
  5779                           ;My_header\My_I2C.h: 140: }
  5780                           ;My_header\My_I2C.h: 141: I2C_Stop();
  5781  003402  EC46  F020         	call	_I2C_Stop	;wreg free
  5782  003406  0012               	return	
  5783  003408                     __end_of_I2C_LCD_Puts:
  5784                           	opt stack 0
  5785                           tblptru	equ	0xFF8
  5786                           tblptrh	equ	0xFF7
  5787                           tblptrl	equ	0xFF6
  5788                           tablat	equ	0xFF5
  5789                           prodh	equ	0xFF4
  5790                           prodl	equ	0xFF3
  5791                           intcon	equ	0xFF2
  5792                           intcon2	equ	0xFF1
  5793                           postinc0	equ	0xFEE
  5794                           wreg	equ	0xFE8
  5795                           postdec1	equ	0xFE5
  5796                           fsr1l	equ	0xFE1
  5797                           indf2	equ	0xFDF
  5798                           postinc2	equ	0xFDE
  5799                           postdec2	equ	0xFDD
  5800                           fsr2h	equ	0xFDA
  5801                           fsr2l	equ	0xFD9
  5802                           status	equ	0xFD8
  5803                           
  5804 ;; *************** function _I2C_LCD_Clear *****************
  5805 ;; Defined at:
  5806 ;;		line 106 in file "../My_header\My_I2C.h"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;		None
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;		None
  5811 ;; Return value:  Size  Location     Type
  5812 ;;		None               void
  5813 ;; Registers used:
  5814 ;;		wreg, status,2, status,0, cstack
  5815 ;; Tracked objects:
  5816 ;;		On entry : 0/0
  5817 ;;		On exit  : 0/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5822 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5823 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5824 ;;Total ram usage:        1 bytes
  5825 ;; Hardware stack levels used:    1
  5826 ;; Hardware stack levels required when called:    7
  5827 ;; This function calls:
  5828 ;;		_I2C_LCD_Command
  5829 ;; This function is called by:
  5830 ;;		_I2C_LCD_init
  5831 ;;		_display_LCD
  5832 ;;		_main
  5833 ;; This function uses a non-reentrant model
  5834 ;;
  5835                           
  5836                           	psect	text28
  5837  004018                     __ptext28:
  5838                           	opt stack 0
  5839  004018                     _I2C_LCD_Clear:
  5840                           	opt stack 21
  5841                           
  5842                           ;My_header\My_I2C.h: 107: I2C_LCD_Command(0x01);
  5843                           
  5844                           ;incstack = 0
  5845  004018  0E01               	movlw	1
  5846  00401A  ECC1  F01E         	call	_I2C_LCD_Command
  5847                           
  5848                           ;My_header\My_I2C.h: 108: _delay((unsigned long)((1100)*(48000000/4000000.0)));
  5849  00401E  0E12               	movlw	18
  5850  004020  0100               	movlb	0	; () banked
  5851  004022  6F66               	movwf	??_I2C_LCD_Clear& (0+255),b
  5852  004024  0E23               	movlw	35
  5853  004026                     u5827:
  5854  004026  2EE8               	decfsz	wreg,f,c
  5855  004028  D7FE               	goto	u5827
  5856  00402A  2F66               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
  5857  00402C  D7FC               	goto	u5827
  5858  00402E  F000               	nop	
  5859  004030  0012               	return	
  5860  004032                     __end_of_I2C_LCD_Clear:
  5861                           	opt stack 0
  5862                           tblptru	equ	0xFF8
  5863                           tblptrh	equ	0xFF7
  5864                           tblptrl	equ	0xFF6
  5865                           tablat	equ	0xFF5
  5866                           prodh	equ	0xFF4
  5867                           prodl	equ	0xFF3
  5868                           intcon	equ	0xFF2
  5869                           intcon2	equ	0xFF1
  5870                           postinc0	equ	0xFEE
  5871                           wreg	equ	0xFE8
  5872                           postdec1	equ	0xFE5
  5873                           fsr1l	equ	0xFE1
  5874                           indf2	equ	0xFDF
  5875                           postinc2	equ	0xFDE
  5876                           postdec2	equ	0xFDD
  5877                           fsr2h	equ	0xFDA
  5878                           fsr2l	equ	0xFD9
  5879                           status	equ	0xFD8
  5880                           
  5881 ;; *************** function _I2C_LCD_Command *****************
  5882 ;; Defined at:
  5883 ;;		line 93 in file "../My_header\My_I2C.h"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;  c               1    wreg     unsigned char 
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;  c               1    4[BANK0 ] unsigned char 
  5888 ;;  ans             1    5[BANK0 ] unsigned char 
  5889 ;; Return value:  Size  Location     Type
  5890 ;;		None               void
  5891 ;; Registers used:
  5892 ;;		wreg, status,2, status,0, cstack
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5899 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5901 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5902 ;;Total ram usage:        2 bytes
  5903 ;; Hardware stack levels used:    1
  5904 ;; Hardware stack levels required when called:    6
  5905 ;; This function calls:
  5906 ;;		_I2C_Send
  5907 ;;		_I2C_Start
  5908 ;;		_I2C_Stop
  5909 ;; This function is called by:
  5910 ;;		_I2C_LCD_Clear
  5911 ;;		_I2C_LCD_SetCursor
  5912 ;;		_I2C_LCD_init
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           
  5916                           	psect	text29
  5917  003D82                     __ptext29:
  5918                           	opt stack 0
  5919  003D82                     _I2C_LCD_Command:
  5920                           	opt stack 22
  5921                           
  5922                           ;incstack = 0
  5923                           ;I2C_LCD_Command@c stored from wreg
  5924  003D82  0100               	movlb	0	; () banked
  5925  003D84  6F64               	movwf	I2C_LCD_Command@c& (0+255),b
  5926                           
  5927                           ; BSR set to: 0
  5928                           ;My_header\My_I2C.h: 94: uint8_t ans;
  5929                           ;My_header\My_I2C.h: 96: ans = I2C_Start(0x3E, 0);
  5930  003D86  0E00               	movlw	0
  5931  003D88  0100               	movlb	0	; () banked
  5932  003D8A  6F62               	movwf	I2C_Start@rw& (0+255),b
  5933  003D8C  0E3E               	movlw	62
  5934  003D8E  ECDB  F01E         	call	_I2C_Start
  5935  003D92  0100               	movlb	0	; () banked
  5936  003D94  6F65               	movwf	I2C_LCD_Command@ans& (0+255),b
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;My_header\My_I2C.h: 97: if (ans == 0) {
  5940  003D96  0100               	movlb	0	; () banked
  5941  003D98  6765               	tstfsz	I2C_LCD_Command@ans& (0+255),b
  5942  003D9A  D007               	goto	l333
  5943                           
  5944                           ; BSR set to: 0
  5945                           ;My_header\My_I2C.h: 99: I2C_Send(0b10000000);
  5946  003D9C  0E80               	movlw	128
  5947  003D9E  EC26  F020         	call	_I2C_Send
  5948                           
  5949                           ;My_header\My_I2C.h: 100: I2C_Send(c);
  5950  003DA2  0100               	movlb	0	; () banked
  5951  003DA4  5164               	movf	I2C_LCD_Command@c& (0+255),w,b
  5952  003DA6  EC26  F020         	call	_I2C_Send
  5953  003DAA                     l333:
  5954                           
  5955                           ;My_header\My_I2C.h: 101: }
  5956                           ;My_header\My_I2C.h: 102: I2C_Stop();
  5957  003DAA  EC46  F020         	call	_I2C_Stop	;wreg free
  5958                           
  5959                           ;My_header\My_I2C.h: 103: _delay((unsigned long)((26)*(48000000/4000000.0)));
  5960  003DAE  0E68               	movlw	104
  5961  003DB0                     u5837:
  5962  003DB0  2EE8               	decfsz	wreg,f,c
  5963  003DB2  D7FE               	goto	u5837
  5964  003DB4  0012               	return	
  5965  003DB6                     __end_of_I2C_LCD_Command:
  5966                           	opt stack 0
  5967                           tblptru	equ	0xFF8
  5968                           tblptrh	equ	0xFF7
  5969                           tblptrl	equ	0xFF6
  5970                           tablat	equ	0xFF5
  5971                           prodh	equ	0xFF4
  5972                           prodl	equ	0xFF3
  5973                           intcon	equ	0xFF2
  5974                           intcon2	equ	0xFF1
  5975                           postinc0	equ	0xFEE
  5976                           wreg	equ	0xFE8
  5977                           postdec1	equ	0xFE5
  5978                           fsr1l	equ	0xFE1
  5979                           indf2	equ	0xFDF
  5980                           postinc2	equ	0xFDE
  5981                           postdec2	equ	0xFDD
  5982                           fsr2h	equ	0xFDA
  5983                           fsr2l	equ	0xFD9
  5984                           status	equ	0xFD8
  5985                           
  5986 ;; *************** function _I2C_Stop *****************
  5987 ;; Defined at:
  5988 ;;		line 57 in file "../My_header\My_I2C.h"
  5989 ;; Parameters:    Size  Location     Type
  5990 ;;		None
  5991 ;; Auto vars:     Size  Location     Type
  5992 ;;		None
  5993 ;; Return value:  Size  Location     Type
  5994 ;;		None               void
  5995 ;; Registers used:
  5996 ;;		wreg, status,2, status,0, cstack
  5997 ;; Tracked objects:
  5998 ;;		On entry : 0/0
  5999 ;;		On exit  : 0/0
  6000 ;;		Unchanged: 0/0
  6001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6006 ;;Total ram usage:        0 bytes
  6007 ;; Hardware stack levels used:    1
  6008 ;; Hardware stack levels required when called:    5
  6009 ;; This function calls:
  6010 ;;		_I2C_IdleCheck
  6011 ;; This function is called by:
  6012 ;;		_I2C_LCD_Command
  6013 ;;		_I2C_LCD_Putc
  6014 ;;		_I2C_LCD_Puts
  6015 ;;		_I2C_LCD_CreateChar
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           	psect	text30
  6020  00408C                     __ptext30:
  6021                           	opt stack 0
  6022  00408C                     _I2C_Stop:
  6023                           	opt stack 22
  6024                           
  6025                           ;My_header\My_I2C.h: 59: I2C_IdleCheck(0x5);
  6026                           
  6027                           ;incstack = 0
  6028  00408C  0E05               	movlw	5
  6029  00408E  ECFD  F01F         	call	_I2C_IdleCheck
  6030                           
  6031                           ;My_header\My_I2C.h: 60: SSP1CON2bits.PEN = 1;
  6032  004092  84C5               	bsf	4037,2,c	;volatile
  6033  004094  0012               	return	
  6034  004096                     __end_of_I2C_Stop:
  6035                           	opt stack 0
  6036                           tblptru	equ	0xFF8
  6037                           tblptrh	equ	0xFF7
  6038                           tblptrl	equ	0xFF6
  6039                           tablat	equ	0xFF5
  6040                           prodh	equ	0xFF4
  6041                           prodl	equ	0xFF3
  6042                           intcon	equ	0xFF2
  6043                           intcon2	equ	0xFF1
  6044                           postinc0	equ	0xFEE
  6045                           wreg	equ	0xFE8
  6046                           postdec1	equ	0xFE5
  6047                           fsr1l	equ	0xFE1
  6048                           indf2	equ	0xFDF
  6049                           postinc2	equ	0xFDE
  6050                           postdec2	equ	0xFDD
  6051                           fsr2h	equ	0xFDA
  6052                           fsr2l	equ	0xFD9
  6053                           status	equ	0xFD8
  6054                           
  6055 ;; *************** function _I2C_Start *****************
  6056 ;; Defined at:
  6057 ;;		line 33 in file "../My_header\My_I2C.h"
  6058 ;; Parameters:    Size  Location     Type
  6059 ;;  adrs            1    wreg     unsigned char 
  6060 ;;  rw              1    2[BANK0 ] unsigned char 
  6061 ;; Auto vars:     Size  Location     Type
  6062 ;;  adrs            1    3[BANK0 ] unsigned char 
  6063 ;; Return value:  Size  Location     Type
  6064 ;;                  1    wreg      unsigned char 
  6065 ;; Registers used:
  6066 ;;		wreg, status,2, status,0, cstack
  6067 ;; Tracked objects:
  6068 ;;		On entry : 0/0
  6069 ;;		On exit  : 0/0
  6070 ;;		Unchanged: 0/0
  6071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6072 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6073 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6075 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6076 ;;Total ram usage:        2 bytes
  6077 ;; Hardware stack levels used:    1
  6078 ;; Hardware stack levels required when called:    5
  6079 ;; This function calls:
  6080 ;;		_I2C_IdleCheck
  6081 ;; This function is called by:
  6082 ;;		_I2C_LCD_Command
  6083 ;;		_I2C_LCD_Putc
  6084 ;;		_I2C_LCD_Puts
  6085 ;;		_I2C_LCD_CreateChar
  6086 ;; This function uses a non-reentrant model
  6087 ;;
  6088                           
  6089                           	psect	text31
  6090  003DB6                     __ptext31:
  6091                           	opt stack 0
  6092  003DB6                     _I2C_Start:
  6093                           	opt stack 22
  6094                           
  6095                           ;incstack = 0
  6096                           ;I2C_Start@adrs stored from wreg
  6097  003DB6  0100               	movlb	0	; () banked
  6098  003DB8  6F63               	movwf	I2C_Start@adrs& (0+255),b
  6099                           
  6100                           ; BSR set to: 0
  6101                           ;My_header\My_I2C.h: 35: I2C_IdleCheck(0x5);
  6102  003DBA  0E05               	movlw	5
  6103  003DBC  ECFD  F01F         	call	_I2C_IdleCheck
  6104                           
  6105                           ;My_header\My_I2C.h: 36: SSP1CON2bits.SEN = 1;
  6106  003DC0  80C5               	bsf	4037,0,c	;volatile
  6107                           
  6108                           ;My_header\My_I2C.h: 38: I2C_IdleCheck(0x5);
  6109  003DC2  0E05               	movlw	5
  6110  003DC4  ECFD  F01F         	call	_I2C_IdleCheck
  6111                           
  6112                           ;My_header\My_I2C.h: 39: SSP1IF = 0;
  6113  003DC8  969E               	bcf	3998,3,c	;volatile
  6114                           
  6115                           ;My_header\My_I2C.h: 40: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
  6116  003DCA  0100               	movlb	0	; () banked
  6117  003DCC  5163               	movf	I2C_Start@adrs& (0+255),w,b
  6118  003DCE  0100               	movlb	0	; () banked
  6119  003DD0  2563               	addwf	I2C_Start@adrs& (0+255),w,b
  6120  003DD2  0100               	movlb	0	; () banked
  6121  003DD4  2562               	addwf	I2C_Start@rw& (0+255),w,b
  6122  003DD6  6EC9               	movwf	4041,c	;volatile
  6123  003DD8                     l309:
  6124                           
  6125                           ; BSR set to: 0
  6126  003DD8  A69E               	btfss	3998,3,c	;volatile
  6127  003DDA  D7FE               	goto	l309
  6128                           
  6129                           ; BSR set to: 0
  6130                           ;My_header\My_I2C.h: 42: return SSP1CON2bits.ACKSTAT;
  6131                           
  6132                           ; BSR set to: 0
  6133  003DDC  ACC5               	btfss	4037,6,c	;volatile
  6134  003DDE  D002               	goto	u4500
  6135  003DE0  0E01               	movlw	1
  6136  003DE2  0012               	return	
  6137  003DE4                     u4500:
  6138  003DE4  0E00               	movlw	0
  6139  003DE6  0012               	return	
  6140  003DE8                     __end_of_I2C_Start:
  6141                           	opt stack 0
  6142                           tblptru	equ	0xFF8
  6143                           tblptrh	equ	0xFF7
  6144                           tblptrl	equ	0xFF6
  6145                           tablat	equ	0xFF5
  6146                           prodh	equ	0xFF4
  6147                           prodl	equ	0xFF3
  6148                           intcon	equ	0xFF2
  6149                           intcon2	equ	0xFF1
  6150                           postinc0	equ	0xFEE
  6151                           wreg	equ	0xFE8
  6152                           postdec1	equ	0xFE5
  6153                           fsr1l	equ	0xFE1
  6154                           indf2	equ	0xFDF
  6155                           postinc2	equ	0xFDE
  6156                           postdec2	equ	0xFDD
  6157                           fsr2h	equ	0xFDA
  6158                           fsr2l	equ	0xFD9
  6159                           status	equ	0xFD8
  6160                           
  6161 ;; *************** function _I2C_Send *****************
  6162 ;; Defined at:
  6163 ;;		line 63 in file "../My_header\My_I2C.h"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;  data            1    wreg     unsigned char 
  6166 ;; Auto vars:     Size  Location     Type
  6167 ;;  data            1    2[BANK0 ] unsigned char 
  6168 ;; Return value:  Size  Location     Type
  6169 ;;                  1    wreg      unsigned char 
  6170 ;; Registers used:
  6171 ;;		wreg, status,2, status,0, cstack
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/0
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6178 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6180 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6181 ;;Total ram usage:        1 bytes
  6182 ;; Hardware stack levels used:    1
  6183 ;; Hardware stack levels required when called:    5
  6184 ;; This function calls:
  6185 ;;		_I2C_IdleCheck
  6186 ;; This function is called by:
  6187 ;;		_I2C_LCD_Command
  6188 ;;		_I2C_LCD_Putc
  6189 ;;		_I2C_LCD_Puts
  6190 ;;		_I2C_LCD_CreateChar
  6191 ;; This function uses a non-reentrant model
  6192 ;;
  6193                           
  6194                           	psect	text32
  6195  00404C                     __ptext32:
  6196                           	opt stack 0
  6197  00404C                     _I2C_Send:
  6198                           	opt stack 22
  6199                           
  6200                           ; BSR set to: 0
  6201                           ;incstack = 0
  6202                           ;I2C_Send@data stored from wreg
  6203  00404C  0100               	movlb	0	; () banked
  6204  00404E  6F62               	movwf	I2C_Send@data& (0+255),b
  6205                           
  6206                           ; BSR set to: 0
  6207                           ;My_header\My_I2C.h: 64: I2C_IdleCheck(0x5);
  6208  004050  0E05               	movlw	5
  6209  004052  ECFD  F01F         	call	_I2C_IdleCheck
  6210                           
  6211                           ;My_header\My_I2C.h: 65: SSP1IF = 0;
  6212  004056  969E               	bcf	3998,3,c	;volatile
  6213                           
  6214                           ;My_header\My_I2C.h: 66: SSP1BUF = data;
  6215  004058  C062  FFC9         	movff	I2C_Send@data,4041	;volatile
  6216  00405C                     l324:
  6217  00405C  A69E               	btfss	3998,3,c	;volatile
  6218  00405E  D7FE               	goto	l324
  6219                           
  6220                           ;My_header\My_I2C.h: 68: return SSP1CON2bits.ACKSTAT;
  6221                           ;	Return value of _I2C_Send is never used
  6222  004060  50C5               	movf	4037,w,c	;volatile
  6223  004062  0012               	return	
  6224  004064                     __end_of_I2C_Send:
  6225                           	opt stack 0
  6226                           tblptru	equ	0xFF8
  6227                           tblptrh	equ	0xFF7
  6228                           tblptrl	equ	0xFF6
  6229                           tablat	equ	0xFF5
  6230                           prodh	equ	0xFF4
  6231                           prodl	equ	0xFF3
  6232                           intcon	equ	0xFF2
  6233                           intcon2	equ	0xFF1
  6234                           postinc0	equ	0xFEE
  6235                           wreg	equ	0xFE8
  6236                           postdec1	equ	0xFE5
  6237                           fsr1l	equ	0xFE1
  6238                           indf2	equ	0xFDF
  6239                           postinc2	equ	0xFDE
  6240                           postdec2	equ	0xFDD
  6241                           fsr2h	equ	0xFDA
  6242                           fsr2l	equ	0xFD9
  6243                           status	equ	0xFD8
  6244                           
  6245 ;; *************** function _I2C_IdleCheck *****************
  6246 ;; Defined at:
  6247 ;;		line 19 in file "../My_header\My_I2C.h"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  mask            1    wreg     unsigned char 
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;  mask            1    1[BANK0 ] unsigned char 
  6252 ;; Return value:  Size  Location     Type
  6253 ;;		None               void
  6254 ;; Registers used:
  6255 ;;		wreg, status,2, status,0
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6262 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6263 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6264 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6265 ;;Total ram usage:        2 bytes
  6266 ;; Hardware stack levels used:    1
  6267 ;; Hardware stack levels required when called:    4
  6268 ;; This function calls:
  6269 ;;		Nothing
  6270 ;; This function is called by:
  6271 ;;		_I2C_Start
  6272 ;;		_I2C_Stop
  6273 ;;		_I2C_Send
  6274 ;;		_I2C_rStart
  6275 ;;		_I2C_Receive
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           	psect	text33
  6280  003FFA                     __ptext33:
  6281                           	opt stack 0
  6282  003FFA                     _I2C_IdleCheck:
  6283                           	opt stack 22
  6284                           
  6285                           ;incstack = 0
  6286                           ;I2C_IdleCheck@mask stored from wreg
  6287  003FFA  0100               	movlb	0	; () banked
  6288  003FFC  6F61               	movwf	I2C_IdleCheck@mask& (0+255),b
  6289  003FFE                     l4430:
  6290                           
  6291                           ; BSR set to: 0
  6292  003FFE  50C7               	movf	4039,w,c	;volatile
  6293  004000  0100               	movlb	0	; () banked
  6294  004002  1561               	andwf	I2C_IdleCheck@mask& (0+255),w,b
  6295  004004  0100               	movlb	0	; () banked
  6296  004006  6F60               	movwf	??_I2C_IdleCheck& (0+255),b
  6297  004008  50C5               	movf	4037,w,c	;volatile
  6298  00400A  0B1F               	andlw	31
  6299  00400C  0100               	movlb	0	; () banked
  6300  00400E  1160               	iorwf	??_I2C_IdleCheck& (0+255),w,b
  6301  004010  0900               	iorlw	0
  6302  004012  B4D8               	btfsc	status,2,c
  6303                           
  6304                           ; BSR set to: 0
  6305                           
  6306                           ; BSR set to: 0
  6307  004014  0012               	return	
  6308  004016  D7F3               	goto	l4430
  6309  004018                     __end_of_I2C_IdleCheck:
  6310                           	opt stack 0
  6311                           tblptru	equ	0xFF8
  6312                           tblptrh	equ	0xFF7
  6313                           tblptrl	equ	0xFF6
  6314                           tablat	equ	0xFF5
  6315                           prodh	equ	0xFF4
  6316                           prodl	equ	0xFF3
  6317                           intcon	equ	0xFF2
  6318                           intcon2	equ	0xFF1
  6319                           postinc0	equ	0xFEE
  6320                           wreg	equ	0xFE8
  6321                           postdec1	equ	0xFE5
  6322                           fsr1l	equ	0xFE1
  6323                           indf2	equ	0xFDF
  6324                           postinc2	equ	0xFDE
  6325                           postdec2	equ	0xFDD
  6326                           fsr2h	equ	0xFDA
  6327                           fsr2l	equ	0xFD9
  6328                           status	equ	0xFD8
  6329                           
  6330 ;; *************** function _RTCC_time_set *****************
  6331 ;; Defined at:
  6332 ;;		line 344 in file "../My_header\My_RTCC.h"
  6333 ;; Parameters:    Size  Location     Type
  6334 ;;  mode            2    6[BANK1 ] PTR struct button
  6335 ;;		 -> sw(4), 
  6336 ;;  cnt_inc         2    8[BANK1 ] PTR struct button
  6337 ;;		 -> sw0(4), 
  6338 ;;  cnt_dec         2   10[BANK1 ] PTR struct button
  6339 ;;		 -> sw1(4), 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;		None
  6342 ;; Return value:  Size  Location     Type
  6343 ;;		None               void
  6344 ;; Registers used:
  6345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6351 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6354 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6355 ;;Total ram usage:        6 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:    9
  6358 ;; This function calls:
  6359 ;;		_RTCC_time_set_cursor
  6360 ;;		_RTCC_time_set_dec
  6361 ;;		_RTCC_time_set_inc
  6362 ;;		_RTCC_time_set_toggle
  6363 ;; This function is called by:
  6364 ;;		_main
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           	psect	text34
  6369  00260A                     __ptext34:
  6370                           	opt stack 0
  6371  00260A                     _RTCC_time_set:
  6372                           	opt stack 21
  6373                           
  6374                           ;My_header\My_RTCC.h: 345: if (mode->flag.long_holding_3) {
  6375                           
  6376                           ; BSR set to: 0
  6377                           ;incstack = 0
  6378  00260A  0101               	movlb	1	; () banked
  6379  00260C  EE20 F003          	lfsr	2,3
  6380  002610  0101               	movlb	1	; () banked
  6381  002612  5106               	movf	RTCC_time_set@mode& (0+255),w,b
  6382  002614  26D9               	addwf	fsr2l,f,c
  6383  002616  0101               	movlb	1	; () banked
  6384  002618  5107               	movf	(RTCC_time_set@mode+1)& (0+255),w,b
  6385  00261A  22DA               	addwfc	fsr2h,f,c
  6386  00261C  A6DF               	btfss	indf2,3,c
  6387  00261E  D034               	goto	l5186
  6388                           
  6389                           ; BSR set to: 1
  6390                           ;My_header\My_RTCC.h: 346: mode->flag.long_holding_3 = 0;
  6391  002620  0101               	movlb	1	; () banked
  6392  002622  EE20 F003          	lfsr	2,3
  6393  002626  0101               	movlb	1	; () banked
  6394  002628  5106               	movf	RTCC_time_set@mode& (0+255),w,b
  6395  00262A  26D9               	addwf	fsr2l,f,c
  6396  00262C  0101               	movlb	1	; () banked
  6397  00262E  5107               	movf	(RTCC_time_set@mode+1)& (0+255),w,b
  6398  002630  22DA               	addwfc	fsr2h,f,c
  6399  002632  0101               	movlb	1	; () banked
  6400  002634  96DF               	bcf	indf2,3,c
  6401                           
  6402                           ; BSR set to: 1
  6403                           ;My_header\My_RTCC.h: 347: RTCC_time_set_toggle();
  6404  002636  EC32  F020         	call	_RTCC_time_set_toggle	;wreg free
  6405                           
  6406                           ;My_header\My_RTCC.h: 348: mode->flags = 0;
  6407  00263A  0101               	movlb	1	; () banked
  6408  00263C  EE20 F002          	lfsr	2,2
  6409  002640  0101               	movlb	1	; () banked
  6410  002642  5106               	movf	RTCC_time_set@mode& (0+255),w,b
  6411  002644  26D9               	addwf	fsr2l,f,c
  6412  002646  0101               	movlb	1	; () banked
  6413  002648  5107               	movf	(RTCC_time_set@mode+1)& (0+255),w,b
  6414  00264A  22DA               	addwfc	fsr2h,f,c
  6415  00264C  0E00               	movlw	0
  6416  00264E  6EDE               	movwf	postinc2,c
  6417  002650  0E00               	movlw	0
  6418  002652  6EDD               	movwf	postdec2,c
  6419                           
  6420                           ; BSR set to: 1
  6421                           ;My_header\My_RTCC.h: 349: cnt_inc->flags = 0;
  6422  002654  0101               	movlb	1	; () banked
  6423  002656  EE20 F002          	lfsr	2,2
  6424  00265A  0101               	movlb	1	; () banked
  6425  00265C  5108               	movf	RTCC_time_set@cnt_inc& (0+255),w,b
  6426  00265E  26D9               	addwf	fsr2l,f,c
  6427  002660  0101               	movlb	1	; () banked
  6428  002662  5109               	movf	(RTCC_time_set@cnt_inc+1)& (0+255),w,b
  6429  002664  22DA               	addwfc	fsr2h,f,c
  6430  002666  0E00               	movlw	0
  6431  002668  6EDE               	movwf	postinc2,c
  6432  00266A  0E00               	movlw	0
  6433  00266C  6EDD               	movwf	postdec2,c
  6434                           
  6435                           ; BSR set to: 1
  6436                           ;My_header\My_RTCC.h: 350: cnt_dec->flags = 0;
  6437  00266E  0101               	movlb	1	; () banked
  6438  002670  EE20 F002          	lfsr	2,2
  6439  002674  0101               	movlb	1	; () banked
  6440  002676  510A               	movf	RTCC_time_set@cnt_dec& (0+255),w,b
  6441  002678  26D9               	addwf	fsr2l,f,c
  6442  00267A  0101               	movlb	1	; () banked
  6443  00267C  510B               	movf	(RTCC_time_set@cnt_dec+1)& (0+255),w,b
  6444  00267E  22DA               	addwfc	fsr2h,f,c
  6445  002680  0E00               	movlw	0
  6446  002682  6EDE               	movwf	postinc2,c
  6447  002684  0E00               	movlw	0
  6448  002686  6EDD               	movwf	postdec2,c
  6449  002688                     l5186:
  6450                           
  6451                           ; BSR set to: 1
  6452                           ;My_header\My_RTCC.h: 351: }
  6453                           ;My_header\My_RTCC.h: 352: if (edit_flag.flags) {
  6454  002688  0100               	movlb	0	; () banked
  6455  00268A  51CE               	movf	_edit_flag& (0+255),w,b
  6456  00268C  B4D8               	btfsc	status,2,c
  6457  00268E  0012               	return	
  6458                           
  6459                           ; BSR set to: 0
  6460                           ;My_header\My_RTCC.h: 353: if (mode->flag.press) {
  6461  002690  0101               	movlb	1	; () banked
  6462  002692  EE20 F002          	lfsr	2,2
  6463  002696  0101               	movlb	1	; () banked
  6464  002698  5106               	movf	RTCC_time_set@mode& (0+255),w,b
  6465  00269A  26D9               	addwf	fsr2l,f,c
  6466  00269C  0101               	movlb	1	; () banked
  6467  00269E  5107               	movf	(RTCC_time_set@mode+1)& (0+255),w,b
  6468  0026A0  22DA               	addwfc	fsr2h,f,c
  6469  0026A2  A0DF               	btfss	indf2,0,c
  6470  0026A4  D00D               	goto	l5194
  6471                           
  6472                           ; BSR set to: 1
  6473                           ;My_header\My_RTCC.h: 354: mode->flag.press = 0;
  6474  0026A6  0101               	movlb	1	; () banked
  6475  0026A8  EE20 F002          	lfsr	2,2
  6476  0026AC  0101               	movlb	1	; () banked
  6477  0026AE  5106               	movf	RTCC_time_set@mode& (0+255),w,b
  6478  0026B0  26D9               	addwf	fsr2l,f,c
  6479  0026B2  0101               	movlb	1	; () banked
  6480  0026B4  5107               	movf	(RTCC_time_set@mode+1)& (0+255),w,b
  6481  0026B6  22DA               	addwfc	fsr2h,f,c
  6482  0026B8  0101               	movlb	1	; () banked
  6483  0026BA  90DF               	bcf	indf2,0,c
  6484                           
  6485                           ; BSR set to: 1
  6486                           ;My_header\My_RTCC.h: 355: RTCC_time_set_cursor();
  6487  0026BC  EC28  F01D         	call	_RTCC_time_set_cursor	;wreg free
  6488  0026C0                     l5194:
  6489                           
  6490                           ;My_header\My_RTCC.h: 356: }
  6491                           ;My_header\My_RTCC.h: 357: if (cnt_inc->flag.press) {
  6492  0026C0  0101               	movlb	1	; () banked
  6493  0026C2  EE20 F002          	lfsr	2,2
  6494  0026C6  0101               	movlb	1	; () banked
  6495  0026C8  5108               	movf	RTCC_time_set@cnt_inc& (0+255),w,b
  6496  0026CA  26D9               	addwf	fsr2l,f,c
  6497  0026CC  0101               	movlb	1	; () banked
  6498  0026CE  5109               	movf	(RTCC_time_set@cnt_inc+1)& (0+255),w,b
  6499  0026D0  22DA               	addwfc	fsr2h,f,c
  6500  0026D2  A0DF               	btfss	indf2,0,c
  6501  0026D4  D01D               	goto	l5200
  6502                           
  6503                           ; BSR set to: 1
  6504                           ;My_header\My_RTCC.h: 358: cnt_inc->flag.press = 0;
  6505  0026D6  0101               	movlb	1	; () banked
  6506  0026D8  EE20 F002          	lfsr	2,2
  6507  0026DC  0101               	movlb	1	; () banked
  6508  0026DE  5108               	movf	RTCC_time_set@cnt_inc& (0+255),w,b
  6509  0026E0  26D9               	addwf	fsr2l,f,c
  6510  0026E2  0101               	movlb	1	; () banked
  6511  0026E4  5109               	movf	(RTCC_time_set@cnt_inc+1)& (0+255),w,b
  6512  0026E6  22DA               	addwfc	fsr2h,f,c
  6513  0026E8  0101               	movlb	1	; () banked
  6514  0026EA  90DF               	bcf	indf2,0,c
  6515                           
  6516                           ; BSR set to: 1
  6517                           ;My_header\My_RTCC.h: 359: RTCC_time_set_inc(&caltime_now, &epoch_now);
  6518  0026EC  0100               	movlb	0	; () banked
  6519  0026EE  0E00               	movlw	high _caltime_now
  6520  0026F0  0100               	movlb	0	; () banked
  6521  0026F2  6FA0               	movwf	(RTCC_time_set_inc@ct+1)& (0+255),b
  6522  0026F4  0100               	movlb	0	; () banked
  6523  0026F6  0ED3               	movlw	low _caltime_now
  6524  0026F8  0100               	movlb	0	; () banked
  6525  0026FA  6F9F               	movwf	RTCC_time_set_inc@ct& (0+255),b
  6526  0026FC  0100               	movlb	0	; () banked
  6527  0026FE  0E00               	movlw	high _epoch_now
  6528  002700  0100               	movlb	0	; () banked
  6529  002702  6FA2               	movwf	(RTCC_time_set_inc@ep+1)& (0+255),b
  6530  002704  0100               	movlb	0	; () banked
  6531  002706  0EDA               	movlw	low _epoch_now
  6532  002708  0100               	movlb	0	; () banked
  6533  00270A  6FA1               	movwf	RTCC_time_set_inc@ep& (0+255),b
  6534  00270C  ECFB  F00A         	call	_RTCC_time_set_inc	;wreg free
  6535  002710                     l5200:
  6536                           
  6537                           ;My_header\My_RTCC.h: 360: }
  6538                           ;My_header\My_RTCC.h: 361: if (cnt_dec->flag.press) {
  6539  002710  0101               	movlb	1	; () banked
  6540  002712  EE20 F002          	lfsr	2,2
  6541  002716  0101               	movlb	1	; () banked
  6542  002718  510A               	movf	RTCC_time_set@cnt_dec& (0+255),w,b
  6543  00271A  26D9               	addwf	fsr2l,f,c
  6544  00271C  0101               	movlb	1	; () banked
  6545  00271E  510B               	movf	(RTCC_time_set@cnt_dec+1)& (0+255),w,b
  6546  002720  22DA               	addwfc	fsr2h,f,c
  6547  002722  A0DF               	btfss	indf2,0,c
  6548  002724  0012               	return	
  6549                           
  6550                           ; BSR set to: 1
  6551                           ;My_header\My_RTCC.h: 362: cnt_dec->flag.press = 0;
  6552  002726  0101               	movlb	1	; () banked
  6553  002728  EE20 F002          	lfsr	2,2
  6554  00272C  0101               	movlb	1	; () banked
  6555  00272E  510A               	movf	RTCC_time_set@cnt_dec& (0+255),w,b
  6556  002730  26D9               	addwf	fsr2l,f,c
  6557  002732  0101               	movlb	1	; () banked
  6558  002734  510B               	movf	(RTCC_time_set@cnt_dec+1)& (0+255),w,b
  6559  002736  22DA               	addwfc	fsr2h,f,c
  6560  002738  0101               	movlb	1	; () banked
  6561  00273A  90DF               	bcf	indf2,0,c
  6562                           
  6563                           ; BSR set to: 1
  6564                           ;My_header\My_RTCC.h: 363: RTCC_time_set_dec(&caltime_now, &epoch_now);
  6565  00273C  0100               	movlb	0	; () banked
  6566  00273E  0E00               	movlw	high _caltime_now
  6567  002740  0100               	movlb	0	; () banked
  6568  002742  6FA0               	movwf	(RTCC_time_set_dec@ct+1)& (0+255),b
  6569  002744  0100               	movlb	0	; () banked
  6570  002746  0ED3               	movlw	low _caltime_now
  6571  002748  0100               	movlb	0	; () banked
  6572  00274A  6F9F               	movwf	RTCC_time_set_dec@ct& (0+255),b
  6573  00274C  0100               	movlb	0	; () banked
  6574  00274E  0E00               	movlw	high _epoch_now
  6575  002750  0100               	movlb	0	; () banked
  6576  002752  6FA2               	movwf	(RTCC_time_set_dec@ep+1)& (0+255),b
  6577  002754  0100               	movlb	0	; () banked
  6578  002756  0EDA               	movlw	low _epoch_now
  6579  002758  0100               	movlb	0	; () banked
  6580  00275A  6FA1               	movwf	RTCC_time_set_dec@ep& (0+255),b
  6581  00275C  EC79  F009         	call	_RTCC_time_set_dec	;wreg free
  6582  002760  0012               	return	
  6583  002762                     __end_of_RTCC_time_set:
  6584                           	opt stack 0
  6585                           tblptru	equ	0xFF8
  6586                           tblptrh	equ	0xFF7
  6587                           tblptrl	equ	0xFF6
  6588                           tablat	equ	0xFF5
  6589                           prodh	equ	0xFF4
  6590                           prodl	equ	0xFF3
  6591                           intcon	equ	0xFF2
  6592                           intcon2	equ	0xFF1
  6593                           postinc0	equ	0xFEE
  6594                           wreg	equ	0xFE8
  6595                           postdec1	equ	0xFE5
  6596                           fsr1l	equ	0xFE1
  6597                           indf2	equ	0xFDF
  6598                           postinc2	equ	0xFDE
  6599                           postdec2	equ	0xFDD
  6600                           fsr2h	equ	0xFDA
  6601                           fsr2l	equ	0xFD9
  6602                           status	equ	0xFD8
  6603                           
  6604 ;; *************** function _RTCC_time_set_toggle *****************
  6605 ;; Defined at:
  6606 ;;		line 285 in file "../My_header\My_RTCC.h"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;		None
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;		None
  6611 ;; Return value:  Size  Location     Type
  6612 ;;		None               void
  6613 ;; Registers used:
  6614 ;;		wreg, status,2
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6624 ;;Total ram usage:        0 bytes
  6625 ;; Hardware stack levels used:    1
  6626 ;; Hardware stack levels required when called:    4
  6627 ;; This function calls:
  6628 ;;		Nothing
  6629 ;; This function is called by:
  6630 ;;		_RTCC_time_set
  6631 ;; This function uses a non-reentrant model
  6632 ;;
  6633                           
  6634                           	psect	text35
  6635  004064                     __ptext35:
  6636                           	opt stack 0
  6637  004064                     _RTCC_time_set_toggle:
  6638                           	opt stack 25
  6639                           
  6640                           ;My_header\My_RTCC.h: 286: if (edit_flag.flags) {
  6641                           
  6642                           ;incstack = 0
  6643  004064  0100               	movlb	0	; () banked
  6644  004066  51CE               	movf	_edit_flag& (0+255),w,b
  6645  004068  B4D8               	btfsc	status,2,c
  6646  00406A  D004               	goto	l448
  6647                           
  6648                           ; BSR set to: 0
  6649                           ;My_header\My_RTCC.h: 287: edit_flag.flags = 0;
  6650  00406C  0E00               	movlw	0
  6651  00406E  0100               	movlb	0	; () banked
  6652  004070  6FCE               	movwf	_edit_flag& (0+255),b
  6653                           
  6654                           ;My_header\My_RTCC.h: 288: } else {
  6655  004072  0012               	return	
  6656  004074                     l448:
  6657                           
  6658                           ; BSR set to: 0
  6659                           ;My_header\My_RTCC.h: 289: edit_flag.flag.ss = 1;
  6660  004074  0100               	movlb	0	; () banked
  6661  004076  81CE               	bsf	_edit_flag& (0+255),0,b
  6662  004078  0012               	return	
  6663  00407A                     __end_of_RTCC_time_set_toggle:
  6664                           	opt stack 0
  6665                           tblptru	equ	0xFF8
  6666                           tblptrh	equ	0xFF7
  6667                           tblptrl	equ	0xFF6
  6668                           tablat	equ	0xFF5
  6669                           prodh	equ	0xFF4
  6670                           prodl	equ	0xFF3
  6671                           intcon	equ	0xFF2
  6672                           intcon2	equ	0xFF1
  6673                           postinc0	equ	0xFEE
  6674                           wreg	equ	0xFE8
  6675                           postdec1	equ	0xFE5
  6676                           fsr1l	equ	0xFE1
  6677                           indf2	equ	0xFDF
  6678                           postinc2	equ	0xFDE
  6679                           postdec2	equ	0xFDD
  6680                           fsr2h	equ	0xFDA
  6681                           fsr2l	equ	0xFD9
  6682                           status	equ	0xFD8
  6683                           
  6684 ;; *************** function _RTCC_time_set_inc *****************
  6685 ;; Defined at:
  6686 ;;		line 302 in file "../My_header\My_RTCC.h"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;  ct              2   63[BANK0 ] PTR struct .
  6689 ;;		 -> caltime_now(7), 
  6690 ;;  ep              2   65[BANK0 ] PTR unsigned long 
  6691 ;;		 -> epoch_now(4), 
  6692 ;; Auto vars:     Size  Location     Type
  6693 ;;  i               1   67[BANK0 ] unsigned char 
  6694 ;;  i               1   68[BANK0 ] unsigned char 
  6695 ;; Return value:  Size  Location     Type
  6696 ;;		None               void
  6697 ;; Registers used:
  6698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6704 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6705 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6706 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6707 ;;      Totals:         0       6       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6708 ;;Total ram usage:       12 bytes
  6709 ;; Hardware stack levels used:    1
  6710 ;; Hardware stack levels required when called:    8
  6711 ;; This function calls:
  6712 ;;		_RTCC_from_RTCC
  6713 ;;		_RTCC_from_epoch
  6714 ;;		___lmul
  6715 ;;		_month_length
  6716 ;; This function is called by:
  6717 ;;		_RTCC_time_set
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           	psect	text36
  6722  0015F6                     __ptext36:
  6723                           	opt stack 0
  6724  0015F6                     _RTCC_time_set_inc:
  6725                           	opt stack 21
  6726                           
  6727                           ;My_header\My_RTCC.h: 303: RTCC_from_RTCC(ct, ep);
  6728                           
  6729                           ; BSR set to: 0
  6730                           ;incstack = 0
  6731  0015F6  0100               	movlb	0	; () banked
  6732  0015F8  C0A0  F08D         	movff	RTCC_time_set_inc@ct+1,RTCC_from_RTCC@ct+1
  6733  0015FC  0100               	movlb	0	; () banked
  6734  0015FE  C09F  F08C         	movff	RTCC_time_set_inc@ct,RTCC_from_RTCC@ct
  6735  001602  0100               	movlb	0	; () banked
  6736  001604  C0A2  F08F         	movff	RTCC_time_set_inc@ep+1,RTCC_from_RTCC@ep+1
  6737  001608  0100               	movlb	0	; () banked
  6738  00160A  C0A1  F08E         	movff	RTCC_time_set_inc@ep,RTCC_from_RTCC@ep
  6739  00160E  EC3A  F01F         	call	_RTCC_from_RTCC	;wreg free
  6740                           
  6741                           ;My_header\My_RTCC.h: 304: if (edit_flag.flag.ss) *ep += 1;
  6742  001612  0100               	movlb	0	; () banked
  6743  001614  A1CE               	btfss	_edit_flag& (0+255),0,b
  6744  001616  D009               	goto	l5000
  6745                           
  6746                           ; BSR set to: 0
  6747  001618  C0A1  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  6748  00161C  C0A2  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  6749  001620  2ADE               	incf	postinc2,f,c
  6750  001622  0E00               	movlw	0
  6751  001624  22DE               	addwfc	postinc2,f,c
  6752  001626  22DE               	addwfc	postinc2,f,c
  6753  001628  22DD               	addwfc	postdec2,f,c
  6754  00162A                     l5000:
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;My_header\My_RTCC.h: 305: if (edit_flag.flag.mm) *ep += ((epoch_t)60);
  6758  00162A  0100               	movlb	0	; () banked
  6759  00162C  A3CE               	btfss	_edit_flag& (0+255),1,b
  6760  00162E  D00C               	goto	l5004
  6761                           
  6762                           ; BSR set to: 0
  6763  001630  0E3C               	movlw	60
  6764  001632  C0A1  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  6765  001636  C0A2  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  6766  00163A  26DE               	addwf	postinc2,f,c
  6767  00163C  0E00               	movlw	0
  6768  00163E  22DE               	addwfc	postinc2,f,c
  6769  001640  22DE               	addwfc	postinc2,f,c
  6770  001642  22DD               	addwfc	postdec2,f,c
  6771  001644  52DD               	movf	postdec2,f,c
  6772  001646  52DD               	movf	postdec2,f,c
  6773  001648                     l5004:
  6774                           
  6775                           ; BSR set to: 0
  6776                           ;My_header\My_RTCC.h: 306: if (edit_flag.flag.hh) *ep += ((epoch_t)60*60);
  6777  001648  0100               	movlb	0	; () banked
  6778  00164A  A5CE               	btfss	_edit_flag& (0+255),2,b
  6779  00164C  D00E               	goto	l5008
  6780                           
  6781                           ; BSR set to: 0
  6782  00164E  C0A1  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  6783  001652  C0A2  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  6784  001656  0E10               	movlw	16
  6785  001658  26DE               	addwf	postinc2,f,c
  6786  00165A  0E0E               	movlw	14
  6787  00165C  22DE               	addwfc	postinc2,f,c
  6788  00165E  0E00               	movlw	0
  6789  001660  22DE               	addwfc	postinc2,f,c
  6790  001662  0E00               	movlw	0
  6791  001664  22DD               	addwfc	postdec2,f,c
  6792  001666  52DD               	movf	postdec2,f,c
  6793  001668  52DD               	movf	postdec2,f,c
  6794  00166A                     l5008:
  6795                           
  6796                           ; BSR set to: 0
  6797                           ;My_header\My_RTCC.h: 307: if (edit_flag.flag.DD) *ep += ((epoch_t)60*60*24);
  6798  00166A  0100               	movlb	0	; () banked
  6799  00166C  A7CE               	btfss	_edit_flag& (0+255),3,b
  6800  00166E  D00E               	goto	l5012
  6801                           
  6802                           ; BSR set to: 0
  6803  001670  C0A1  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  6804  001674  C0A2  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  6805  001678  0E80               	movlw	128
  6806  00167A  26DE               	addwf	postinc2,f,c
  6807  00167C  0E51               	movlw	81
  6808  00167E  22DE               	addwfc	postinc2,f,c
  6809  001680  0E01               	movlw	1
  6810  001682  22DE               	addwfc	postinc2,f,c
  6811  001684  0E00               	movlw	0
  6812  001686  22DD               	addwfc	postdec2,f,c
  6813  001688  52DD               	movf	postdec2,f,c
  6814  00168A  52DD               	movf	postdec2,f,c
  6815  00168C                     l5012:
  6816                           
  6817                           ; BSR set to: 0
  6818                           ;My_header\My_RTCC.h: 308: if (edit_flag.flag.MM) *ep += ((epoch_t)60*60*24) * month_len
      +                          gth(ct->YY, ct->MM);
  6819  00168C  0100               	movlb	0	; () banked
  6820  00168E  A9CE               	btfss	_edit_flag& (0+255),4,b
  6821  001690  D049               	goto	l5016
  6822                           
  6823                           ; BSR set to: 0
  6824  001692  0100               	movlb	0	; () banked
  6825  001694  EE20 F005          	lfsr	2,5
  6826  001698  0100               	movlb	0	; () banked
  6827  00169A  519F               	movf	RTCC_time_set_inc@ct& (0+255),w,b
  6828  00169C  26D9               	addwf	fsr2l,f,c
  6829  00169E  0100               	movlb	0	; () banked
  6830  0016A0  51A0               	movf	(RTCC_time_set_inc@ct+1)& (0+255),w,b
  6831  0016A2  22DA               	addwfc	fsr2h,f,c
  6832  0016A4  50DF               	movf	indf2,w,c
  6833  0016A6  0100               	movlb	0	; () banked
  6834  0016A8  6F66               	movwf	month_length@month& (0+255),b
  6835  0016AA  0100               	movlb	0	; () banked
  6836  0016AC  EE20 F006          	lfsr	2,6
  6837  0016B0  0100               	movlb	0	; () banked
  6838  0016B2  519F               	movf	RTCC_time_set_inc@ct& (0+255),w,b
  6839  0016B4  26D9               	addwf	fsr2l,f,c
  6840  0016B6  0100               	movlb	0	; () banked
  6841  0016B8  51A0               	movf	(RTCC_time_set_inc@ct+1)& (0+255),w,b
  6842  0016BA  22DA               	addwfc	fsr2h,f,c
  6843  0016BC  50DF               	movf	indf2,w,c
  6844  0016BE  EC32  F016         	call	_month_length
  6845  0016C2  0101               	movlb	1	; () banked
  6846  0016C4  6F00               	movwf	??_RTCC_time_set_inc& (0+255),b
  6847  0016C6  0101               	movlb	1	; () banked
  6848  0016C8  5100               	movf	??_RTCC_time_set_inc& (0+255),w,b
  6849  0016CA  0100               	movlb	0	; () banked
  6850  0016CC  6F6D               	movwf	___lmul@multiplier& (0+255),b
  6851  0016CE  0100               	movlb	0	; () banked
  6852  0016D0  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  6853  0016D2  0100               	movlb	0	; () banked
  6854  0016D4  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  6855  0016D6  0100               	movlb	0	; () banked
  6856  0016D8  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  6857  0016DA  0E80               	movlw	128
  6858  0016DC  0100               	movlb	0	; () banked
  6859  0016DE  6F71               	movwf	___lmul@multiplicand& (0+255),b
  6860  0016E0  0E51               	movlw	81
  6861  0016E2  0100               	movlb	0	; () banked
  6862  0016E4  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6863  0016E6  0E01               	movlw	1
  6864  0016E8  0100               	movlb	0	; () banked
  6865  0016EA  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6866  0016EC  0E00               	movlw	0
  6867  0016EE  0100               	movlb	0	; () banked
  6868  0016F0  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6869  0016F2  EC96  F01A         	call	___lmul	;wreg free
  6870  0016F6  C06D  F101         	movff	?___lmul,??_RTCC_time_set_inc+1
  6871  0016FA  C06E  F102         	movff	?___lmul+1,??_RTCC_time_set_inc+2
  6872  0016FE  C06F  F103         	movff	?___lmul+2,??_RTCC_time_set_inc+3
  6873  001702  C070  F104         	movff	?___lmul+3,??_RTCC_time_set_inc+4
  6874  001706  C0A1  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  6875  00170A  C0A2  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  6876  00170E  0101               	movlb	1	; () banked
  6877  001710  5101               	movf	(??_RTCC_time_set_inc+1)& (0+255),w,b
  6878  001712  26DE               	addwf	postinc2,f,c
  6879  001714  5102               	movf	(??_RTCC_time_set_inc+2)& (0+255),w,b
  6880  001716  22DE               	addwfc	postinc2,f,c
  6881  001718  5103               	movf	(??_RTCC_time_set_inc+3)& (0+255),w,b
  6882  00171A  22DE               	addwfc	postinc2,f,c
  6883  00171C  5104               	movf	(??_RTCC_time_set_inc+4)& (0+255),w,b
  6884  00171E  22DD               	addwfc	postdec2,f,c
  6885  001720  52DD               	movf	postdec2,f,c
  6886  001722  52DD               	movf	postdec2,f,c
  6887  001724                     l5016:
  6888                           
  6889                           ;My_header\My_RTCC.h: 309: if (edit_flag.flag.YY) {
  6890  001724  0100               	movlb	0	; () banked
  6891  001726  ABCE               	btfss	_edit_flag& (0+255),5,b
  6892  001728  D0A9               	goto	l5038
  6893                           
  6894                           ; BSR set to: 0
  6895                           ;My_header\My_RTCC.h: 310: for (uint8_t i = ct->MM; i <= 12; i++) {
  6896  00172A  0100               	movlb	0	; () banked
  6897  00172C  EE20 F005          	lfsr	2,5
  6898  001730  0100               	movlb	0	; () banked
  6899  001732  519F               	movf	RTCC_time_set_inc@ct& (0+255),w,b
  6900  001734  26D9               	addwf	fsr2l,f,c
  6901  001736  0100               	movlb	0	; () banked
  6902  001738  51A0               	movf	(RTCC_time_set_inc@ct+1)& (0+255),w,b
  6903  00173A  22DA               	addwfc	fsr2h,f,c
  6904  00173C  50DF               	movf	indf2,w,c
  6905  00173E  0100               	movlb	0	; () banked
  6906  001740  6FA4               	movwf	RTCC_time_set_inc@i& (0+255),b
  6907  001742  D041               	goto	L10
  6908  001744                     l5024:
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;My_header\My_RTCC.h: 311: *ep += ((epoch_t)60*60*24) * month_length(ct->YY, i);
  6912  001744  C0A4  F066         	movff	RTCC_time_set_inc@i,month_length@month
  6913  001748  0100               	movlb	0	; () banked
  6914  00174A  EE20 F006          	lfsr	2,6
  6915  00174E  0100               	movlb	0	; () banked
  6916  001750  519F               	movf	RTCC_time_set_inc@ct& (0+255),w,b
  6917  001752  26D9               	addwf	fsr2l,f,c
  6918  001754  0100               	movlb	0	; () banked
  6919  001756  51A0               	movf	(RTCC_time_set_inc@ct+1)& (0+255),w,b
  6920  001758  22DA               	addwfc	fsr2h,f,c
  6921  00175A  50DF               	movf	indf2,w,c
  6922  00175C  EC32  F016         	call	_month_length
  6923  001760  0101               	movlb	1	; () banked
  6924  001762  6F00               	movwf	??_RTCC_time_set_inc& (0+255),b
  6925  001764  0101               	movlb	1	; () banked
  6926  001766  5100               	movf	??_RTCC_time_set_inc& (0+255),w,b
  6927  001768  0100               	movlb	0	; () banked
  6928  00176A  6F6D               	movwf	___lmul@multiplier& (0+255),b
  6929  00176C  0100               	movlb	0	; () banked
  6930  00176E  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  6931  001770  0100               	movlb	0	; () banked
  6932  001772  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  6933  001774  0100               	movlb	0	; () banked
  6934  001776  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  6935  001778  0E80               	movlw	128
  6936  00177A  0100               	movlb	0	; () banked
  6937  00177C  6F71               	movwf	___lmul@multiplicand& (0+255),b
  6938  00177E  0E51               	movlw	81
  6939  001780  0100               	movlb	0	; () banked
  6940  001782  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6941  001784  0E01               	movlw	1
  6942  001786  0100               	movlb	0	; () banked
  6943  001788  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6944  00178A  0E00               	movlw	0
  6945  00178C  0100               	movlb	0	; () banked
  6946  00178E  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6947  001790  EC96  F01A         	call	___lmul	;wreg free
  6948  001794  C06D  F101         	movff	?___lmul,??_RTCC_time_set_inc+1
  6949  001798  C06E  F102         	movff	?___lmul+1,??_RTCC_time_set_inc+2
  6950  00179C  C06F  F103         	movff	?___lmul+2,??_RTCC_time_set_inc+3
  6951  0017A0  C070  F104         	movff	?___lmul+3,??_RTCC_time_set_inc+4
  6952  0017A4  C0A1  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  6953  0017A8  C0A2  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  6954  0017AC  0101               	movlb	1	; () banked
  6955  0017AE  5101               	movf	(??_RTCC_time_set_inc+1)& (0+255),w,b
  6956  0017B0  26DE               	addwf	postinc2,f,c
  6957  0017B2  5102               	movf	(??_RTCC_time_set_inc+2)& (0+255),w,b
  6958  0017B4  22DE               	addwfc	postinc2,f,c
  6959  0017B6  5103               	movf	(??_RTCC_time_set_inc+3)& (0+255),w,b
  6960  0017B8  22DE               	addwfc	postinc2,f,c
  6961  0017BA  5104               	movf	(??_RTCC_time_set_inc+4)& (0+255),w,b
  6962  0017BC  22DD               	addwfc	postdec2,f,c
  6963  0017BE  52DD               	movf	postdec2,f,c
  6964  0017C0  52DD               	movf	postdec2,f,c
  6965                           
  6966                           ; BSR set to: 1
  6967  0017C2  0100               	movlb	0	; () banked
  6968  0017C4  2BA4               	incf	RTCC_time_set_inc@i& (0+255),f,b
  6969  0017C6                     L10:
  6970                           
  6971                           ; BSR set to: 0
  6972  0017C6  0E0C               	movlw	12
  6973  0017C8  0100               	movlb	0	; () banked
  6974  0017CA  65A4               	cpfsgt	RTCC_time_set_inc@i& (0+255),b
  6975  0017CC  D7BB               	goto	l5024
  6976                           
  6977                           ; BSR set to: 0
  6978                           ;My_header\My_RTCC.h: 312: }
  6979                           ;My_header\My_RTCC.h: 313: for (uint8_t i = 1; i < ct->MM; i++) {
  6980                           
  6981                           ; BSR set to: 0
  6982  0017CE  0E01               	movlw	1
  6983  0017D0  0100               	movlb	0	; () banked
  6984  0017D2  6FA3               	movwf	RTCC_time_set_inc@i_2190& (0+255),b
  6985  0017D4  D045               	goto	l5036
  6986  0017D6                     l5032:
  6987                           
  6988                           ; BSR set to: 0
  6989                           ;My_header\My_RTCC.h: 314: *ep += ((epoch_t)60*60*24) * month_length(ct->YY + 1, i);
  6990  0017D6  C0A3  F066         	movff	RTCC_time_set_inc@i_2190,month_length@month
  6991  0017DA  0100               	movlb	0	; () banked
  6992  0017DC  EE20 F006          	lfsr	2,6
  6993  0017E0  0100               	movlb	0	; () banked
  6994  0017E2  519F               	movf	RTCC_time_set_inc@ct& (0+255),w,b
  6995  0017E4  26D9               	addwf	fsr2l,f,c
  6996  0017E6  0100               	movlb	0	; () banked
  6997  0017E8  51A0               	movf	(RTCC_time_set_inc@ct+1)& (0+255),w,b
  6998  0017EA  22DA               	addwfc	fsr2h,f,c
  6999  0017EC  50DF               	movf	indf2,w,c
  7000  0017EE  0101               	movlb	1	; () banked
  7001  0017F0  6F00               	movwf	??_RTCC_time_set_inc& (0+255),b
  7002  0017F2  0101               	movlb	1	; () banked
  7003  0017F4  2900               	incf	??_RTCC_time_set_inc& (0+255),w,b
  7004  0017F6  EC32  F016         	call	_month_length
  7005  0017FA  0101               	movlb	1	; () banked
  7006  0017FC  6F01               	movwf	(??_RTCC_time_set_inc+1)& (0+255),b
  7007  0017FE  0101               	movlb	1	; () banked
  7008  001800  5101               	movf	(??_RTCC_time_set_inc+1)& (0+255),w,b
  7009  001802  0100               	movlb	0	; () banked
  7010  001804  6F6D               	movwf	___lmul@multiplier& (0+255),b
  7011  001806  0100               	movlb	0	; () banked
  7012  001808  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  7013  00180A  0100               	movlb	0	; () banked
  7014  00180C  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  7015  00180E  0100               	movlb	0	; () banked
  7016  001810  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  7017  001812  0E80               	movlw	128
  7018  001814  0100               	movlb	0	; () banked
  7019  001816  6F71               	movwf	___lmul@multiplicand& (0+255),b
  7020  001818  0E51               	movlw	81
  7021  00181A  0100               	movlb	0	; () banked
  7022  00181C  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7023  00181E  0E01               	movlw	1
  7024  001820  0100               	movlb	0	; () banked
  7025  001822  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7026  001824  0E00               	movlw	0
  7027  001826  0100               	movlb	0	; () banked
  7028  001828  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7029  00182A  EC96  F01A         	call	___lmul	;wreg free
  7030  00182E  C06D  F102         	movff	?___lmul,??_RTCC_time_set_inc+2
  7031  001832  C06E  F103         	movff	?___lmul+1,??_RTCC_time_set_inc+3
  7032  001836  C06F  F104         	movff	?___lmul+2,??_RTCC_time_set_inc+4
  7033  00183A  C070  F105         	movff	?___lmul+3,??_RTCC_time_set_inc+5
  7034  00183E  C0A1  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  7035  001842  C0A2  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  7036  001846  0101               	movlb	1	; () banked
  7037  001848  5102               	movf	(??_RTCC_time_set_inc+2)& (0+255),w,b
  7038  00184A  26DE               	addwf	postinc2,f,c
  7039  00184C  5103               	movf	(??_RTCC_time_set_inc+3)& (0+255),w,b
  7040  00184E  22DE               	addwfc	postinc2,f,c
  7041  001850  5104               	movf	(??_RTCC_time_set_inc+4)& (0+255),w,b
  7042  001852  22DE               	addwfc	postinc2,f,c
  7043  001854  5105               	movf	(??_RTCC_time_set_inc+5)& (0+255),w,b
  7044  001856  22DD               	addwfc	postdec2,f,c
  7045  001858  52DD               	movf	postdec2,f,c
  7046  00185A  52DD               	movf	postdec2,f,c
  7047                           
  7048                           ; BSR set to: 1
  7049  00185C  0100               	movlb	0	; () banked
  7050  00185E  2BA3               	incf	RTCC_time_set_inc@i_2190& (0+255),f,b
  7051  001860                     l5036:
  7052                           
  7053                           ; BSR set to: 0
  7054  001860  0100               	movlb	0	; () banked
  7055  001862  EE20 F005          	lfsr	2,5
  7056  001866  0100               	movlb	0	; () banked
  7057  001868  519F               	movf	RTCC_time_set_inc@ct& (0+255),w,b
  7058  00186A  26D9               	addwf	fsr2l,f,c
  7059  00186C  0100               	movlb	0	; () banked
  7060  00186E  51A0               	movf	(RTCC_time_set_inc@ct+1)& (0+255),w,b
  7061  001870  22DA               	addwfc	fsr2h,f,c
  7062  001872  50DF               	movf	indf2,w,c
  7063  001874  0100               	movlb	0	; () banked
  7064  001876  5DA3               	subwf	RTCC_time_set_inc@i_2190& (0+255),w,b
  7065  001878  A0D8               	btfss	status,0,c
  7066  00187A  D7AD               	goto	l5032
  7067  00187C                     l5038:
  7068                           
  7069                           ; BSR set to: 0
  7070                           ;My_header\My_RTCC.h: 315: }
  7071                           ;My_header\My_RTCC.h: 316: }
  7072                           ;My_header\My_RTCC.h: 318: if (*ep >= 3155760000)*ep -= 3155760000;
  7073  00187C  C0A1  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  7074  001880  C0A2  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  7075  001884  CFDE F100          	movff	postinc2,??_RTCC_time_set_inc
  7076  001888  CFDE F101          	movff	postinc2,??_RTCC_time_set_inc+1
  7077  00188C  CFDE F102          	movff	postinc2,??_RTCC_time_set_inc+2
  7078  001890  CFDE F103          	movff	postinc2,??_RTCC_time_set_inc+3
  7079  001894  0E80               	movlw	128
  7080  001896  0101               	movlb	1	; () banked
  7081  001898  5D00               	subwf	??_RTCC_time_set_inc& (0+255),w,b
  7082  00189A  0E13               	movlw	19
  7083  00189C  5901               	subwfb	(??_RTCC_time_set_inc+1)& (0+255),w,b
  7084  00189E  0E19               	movlw	25
  7085  0018A0  5902               	subwfb	(??_RTCC_time_set_inc+2)& (0+255),w,b
  7086  0018A2  0EBC               	movlw	188
  7087  0018A4  0101               	movlb	1	; () banked
  7088  0018A6  5903               	subwfb	(??_RTCC_time_set_inc+3)& (0+255),w,b
  7089  0018A8  A0D8               	btfss	status,0,c
  7090  0018AA  D00E               	goto	l5042
  7091                           
  7092                           ; BSR set to: 1
  7093  0018AC  C0A1  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  7094  0018B0  C0A2  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  7095  0018B4  0E80               	movlw	128
  7096  0018B6  5EDE               	subwf	postinc2,f,c
  7097  0018B8  0E13               	movlw	19
  7098  0018BA  5ADE               	subwfb	postinc2,f,c
  7099  0018BC  0E19               	movlw	25
  7100  0018BE  5ADE               	subwfb	postinc2,f,c
  7101  0018C0  0EBC               	movlw	188
  7102  0018C2  5ADD               	subwfb	postdec2,f,c
  7103  0018C4  52DD               	movf	postdec2,f,c
  7104  0018C6  52DD               	movf	postdec2,f,c
  7105  0018C8                     l5042:
  7106                           
  7107                           ; BSR set to: 1
  7108                           ;My_header\My_RTCC.h: 319: RTCC_from_epoch(&caltime_now, &epoch_now);
  7109  0018C8  0100               	movlb	0	; () banked
  7110  0018CA  0E00               	movlw	high _caltime_now
  7111  0018CC  0100               	movlb	0	; () banked
  7112  0018CE  6F9C               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  7113  0018D0  0100               	movlb	0	; () banked
  7114  0018D2  0ED3               	movlw	low _caltime_now
  7115  0018D4  0100               	movlb	0	; () banked
  7116  0018D6  6F9B               	movwf	RTCC_from_epoch@ct& (0+255),b
  7117  0018D8  0100               	movlb	0	; () banked
  7118  0018DA  0E00               	movlw	high _epoch_now
  7119  0018DC  0100               	movlb	0	; () banked
  7120  0018DE  6F9E               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  7121  0018E0  0100               	movlb	0	; () banked
  7122  0018E2  0EDA               	movlw	low _epoch_now
  7123  0018E4  0100               	movlb	0	; () banked
  7124  0018E6  6F9D               	movwf	RTCC_from_epoch@ep& (0+255),b
  7125  0018E8  EC23  F01F         	call	_RTCC_from_epoch	;wreg free
  7126                           
  7127                           ;My_header\My_RTCC.h: 320: time_change_flag = 1;
  7128  0018EC  0E01               	movlw	1
  7129  0018EE  0100               	movlb	0	; () banked
  7130  0018F0  6FD1               	movwf	_time_change_flag& (0+255),b
  7131                           
  7132                           ; BSR set to: 0
  7133  0018F2  0012               	return	
  7134  0018F4                     __end_of_RTCC_time_set_inc:
  7135                           	opt stack 0
  7136                           tblptru	equ	0xFF8
  7137                           tblptrh	equ	0xFF7
  7138                           tblptrl	equ	0xFF6
  7139                           tablat	equ	0xFF5
  7140                           prodh	equ	0xFF4
  7141                           prodl	equ	0xFF3
  7142                           intcon	equ	0xFF2
  7143                           intcon2	equ	0xFF1
  7144                           postinc0	equ	0xFEE
  7145                           wreg	equ	0xFE8
  7146                           postdec1	equ	0xFE5
  7147                           fsr1l	equ	0xFE1
  7148                           indf2	equ	0xFDF
  7149                           postinc2	equ	0xFDE
  7150                           postdec2	equ	0xFDD
  7151                           fsr2h	equ	0xFDA
  7152                           fsr2l	equ	0xFD9
  7153                           status	equ	0xFD8
  7154                           
  7155 ;; *************** function _RTCC_time_set_dec *****************
  7156 ;; Defined at:
  7157 ;;		line 323 in file "../My_header\My_RTCC.h"
  7158 ;; Parameters:    Size  Location     Type
  7159 ;;  ct              2   63[BANK0 ] PTR struct .
  7160 ;;		 -> caltime_now(7), 
  7161 ;;  ep              2   65[BANK0 ] PTR unsigned long 
  7162 ;;		 -> epoch_now(4), 
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;  i               1   67[BANK0 ] unsigned char 
  7165 ;;  i               1   68[BANK0 ] unsigned char 
  7166 ;; Return value:  Size  Location     Type
  7167 ;;		None               void
  7168 ;; Registers used:
  7169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7175 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7176 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7177 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7178 ;;      Totals:         0       6       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7179 ;;Total ram usage:       12 bytes
  7180 ;; Hardware stack levels used:    1
  7181 ;; Hardware stack levels required when called:    8
  7182 ;; This function calls:
  7183 ;;		_RTCC_from_RTCC
  7184 ;;		_RTCC_from_epoch
  7185 ;;		___lmul
  7186 ;;		_month_length
  7187 ;; This function is called by:
  7188 ;;		_RTCC_time_set
  7189 ;; This function uses a non-reentrant model
  7190 ;;
  7191                           
  7192                           	psect	text37
  7193  0012F2                     __ptext37:
  7194                           	opt stack 0
  7195  0012F2                     _RTCC_time_set_dec:
  7196                           	opt stack 21
  7197                           
  7198                           ;My_header\My_RTCC.h: 324: RTCC_from_RTCC(ct, ep);
  7199                           
  7200                           ; BSR set to: 0
  7201                           ;incstack = 0
  7202  0012F2  0100               	movlb	0	; () banked
  7203  0012F4  C0A0  F08D         	movff	RTCC_time_set_dec@ct+1,RTCC_from_RTCC@ct+1
  7204  0012F8  0100               	movlb	0	; () banked
  7205  0012FA  C09F  F08C         	movff	RTCC_time_set_dec@ct,RTCC_from_RTCC@ct
  7206  0012FE  0100               	movlb	0	; () banked
  7207  001300  C0A2  F08F         	movff	RTCC_time_set_dec@ep+1,RTCC_from_RTCC@ep+1
  7208  001304  0100               	movlb	0	; () banked
  7209  001306  C0A1  F08E         	movff	RTCC_time_set_dec@ep,RTCC_from_RTCC@ep
  7210  00130A  EC3A  F01F         	call	_RTCC_from_RTCC	;wreg free
  7211                           
  7212                           ;My_header\My_RTCC.h: 325: if (edit_flag.flag.ss) *ep -= 1;
  7213  00130E  0100               	movlb	0	; () banked
  7214  001310  A1CE               	btfss	_edit_flag& (0+255),0,b
  7215  001312  D009               	goto	l5052
  7216                           
  7217                           ; BSR set to: 0
  7218  001314  C0A1  FFD9         	movff	RTCC_time_set_dec@ep,fsr2l
  7219  001318  C0A2  FFDA         	movff	RTCC_time_set_dec@ep+1,fsr2h
  7220  00131C  06DE               	decf	postinc2,f,c
  7221  00131E  0E00               	movlw	0
  7222  001320  5ADE               	subwfb	postinc2,f,c
  7223  001322  5ADE               	subwfb	postinc2,f,c
  7224  001324  5ADD               	subwfb	postdec2,f,c
  7225  001326                     l5052:
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;My_header\My_RTCC.h: 326: if (edit_flag.flag.mm) *ep -= ((epoch_t)60);
  7229  001326  0100               	movlb	0	; () banked
  7230  001328  A3CE               	btfss	_edit_flag& (0+255),1,b
  7231  00132A  D00C               	goto	l5056
  7232                           
  7233                           ; BSR set to: 0
  7234  00132C  0E3C               	movlw	60
  7235  00132E  C0A1  FFD9         	movff	RTCC_time_set_dec@ep,fsr2l
  7236  001332  C0A2  FFDA         	movff	RTCC_time_set_dec@ep+1,fsr2h
  7237  001336  5EDE               	subwf	postinc2,f,c
  7238  001338  0E00               	movlw	0
  7239  00133A  5ADE               	subwfb	postinc2,f,c
  7240  00133C  5ADE               	subwfb	postinc2,f,c
  7241  00133E  5ADD               	subwfb	postdec2,f,c
  7242  001340  52DD               	movf	postdec2,f,c
  7243  001342  52DD               	movf	postdec2,f,c
  7244  001344                     l5056:
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;My_header\My_RTCC.h: 327: if (edit_flag.flag.hh) *ep -= ((epoch_t)60*60);
  7248  001344  0100               	movlb	0	; () banked
  7249  001346  A5CE               	btfss	_edit_flag& (0+255),2,b
  7250  001348  D00E               	goto	l5060
  7251                           
  7252                           ; BSR set to: 0
  7253  00134A  C0A1  FFD9         	movff	RTCC_time_set_dec@ep,fsr2l
  7254  00134E  C0A2  FFDA         	movff	RTCC_time_set_dec@ep+1,fsr2h
  7255  001352  0E10               	movlw	16
  7256  001354  5EDE               	subwf	postinc2,f,c
  7257  001356  0E0E               	movlw	14
  7258  001358  5ADE               	subwfb	postinc2,f,c
  7259  00135A  0E00               	movlw	0
  7260  00135C  5ADE               	subwfb	postinc2,f,c
  7261  00135E  0E00               	movlw	0
  7262  001360  5ADD               	subwfb	postdec2,f,c
  7263  001362  52DD               	movf	postdec2,f,c
  7264  001364  52DD               	movf	postdec2,f,c
  7265  001366                     l5060:
  7266                           
  7267                           ; BSR set to: 0
  7268                           ;My_header\My_RTCC.h: 328: if (edit_flag.flag.DD) *ep -= ((epoch_t)60*60*24);
  7269  001366  0100               	movlb	0	; () banked
  7270  001368  A7CE               	btfss	_edit_flag& (0+255),3,b
  7271  00136A  D00E               	goto	l5064
  7272                           
  7273                           ; BSR set to: 0
  7274  00136C  C0A1  FFD9         	movff	RTCC_time_set_dec@ep,fsr2l
  7275  001370  C0A2  FFDA         	movff	RTCC_time_set_dec@ep+1,fsr2h
  7276  001374  0E80               	movlw	128
  7277  001376  5EDE               	subwf	postinc2,f,c
  7278  001378  0E51               	movlw	81
  7279  00137A  5ADE               	subwfb	postinc2,f,c
  7280  00137C  0E01               	movlw	1
  7281  00137E  5ADE               	subwfb	postinc2,f,c
  7282  001380  0E00               	movlw	0
  7283  001382  5ADD               	subwfb	postdec2,f,c
  7284  001384  52DD               	movf	postdec2,f,c
  7285  001386  52DD               	movf	postdec2,f,c
  7286  001388                     l5064:
  7287                           
  7288                           ; BSR set to: 0
  7289                           ;My_header\My_RTCC.h: 329: if (edit_flag.flag.MM) *ep -= ((epoch_t)60*60*24) * month_len
      +                          gth(ct->YY, ct->MM);
  7290  001388  0100               	movlb	0	; () banked
  7291  00138A  A9CE               	btfss	_edit_flag& (0+255),4,b
  7292  00138C  D049               	goto	l5068
  7293                           
  7294                           ; BSR set to: 0
  7295  00138E  0100               	movlb	0	; () banked
  7296  001390  EE20 F005          	lfsr	2,5
  7297  001394  0100               	movlb	0	; () banked
  7298  001396  519F               	movf	RTCC_time_set_dec@ct& (0+255),w,b
  7299  001398  26D9               	addwf	fsr2l,f,c
  7300  00139A  0100               	movlb	0	; () banked
  7301  00139C  51A0               	movf	(RTCC_time_set_dec@ct+1)& (0+255),w,b
  7302  00139E  22DA               	addwfc	fsr2h,f,c
  7303  0013A0  50DF               	movf	indf2,w,c
  7304  0013A2  0100               	movlb	0	; () banked
  7305  0013A4  6F66               	movwf	month_length@month& (0+255),b
  7306  0013A6  0100               	movlb	0	; () banked
  7307  0013A8  EE20 F006          	lfsr	2,6
  7308  0013AC  0100               	movlb	0	; () banked
  7309  0013AE  519F               	movf	RTCC_time_set_dec@ct& (0+255),w,b
  7310  0013B0  26D9               	addwf	fsr2l,f,c
  7311  0013B2  0100               	movlb	0	; () banked
  7312  0013B4  51A0               	movf	(RTCC_time_set_dec@ct+1)& (0+255),w,b
  7313  0013B6  22DA               	addwfc	fsr2h,f,c
  7314  0013B8  50DF               	movf	indf2,w,c
  7315  0013BA  EC32  F016         	call	_month_length
  7316  0013BE  0101               	movlb	1	; () banked
  7317  0013C0  6F00               	movwf	??_RTCC_time_set_dec& (0+255),b
  7318  0013C2  0101               	movlb	1	; () banked
  7319  0013C4  5100               	movf	??_RTCC_time_set_dec& (0+255),w,b
  7320  0013C6  0100               	movlb	0	; () banked
  7321  0013C8  6F6D               	movwf	___lmul@multiplier& (0+255),b
  7322  0013CA  0100               	movlb	0	; () banked
  7323  0013CC  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  7324  0013CE  0100               	movlb	0	; () banked
  7325  0013D0  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  7326  0013D2  0100               	movlb	0	; () banked
  7327  0013D4  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  7328  0013D6  0E80               	movlw	128
  7329  0013D8  0100               	movlb	0	; () banked
  7330  0013DA  6F71               	movwf	___lmul@multiplicand& (0+255),b
  7331  0013DC  0E51               	movlw	81
  7332  0013DE  0100               	movlb	0	; () banked
  7333  0013E0  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7334  0013E2  0E01               	movlw	1
  7335  0013E4  0100               	movlb	0	; () banked
  7336  0013E6  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7337  0013E8  0E00               	movlw	0
  7338  0013EA  0100               	movlb	0	; () banked
  7339  0013EC  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7340  0013EE  EC96  F01A         	call	___lmul	;wreg free
  7341  0013F2  C06D  F101         	movff	?___lmul,??_RTCC_time_set_dec+1
  7342  0013F6  C06E  F102         	movff	?___lmul+1,??_RTCC_time_set_dec+2
  7343  0013FA  C06F  F103         	movff	?___lmul+2,??_RTCC_time_set_dec+3
  7344  0013FE  C070  F104         	movff	?___lmul+3,??_RTCC_time_set_dec+4
  7345  001402  C0A1  FFD9         	movff	RTCC_time_set_dec@ep,fsr2l
  7346  001406  C0A2  FFDA         	movff	RTCC_time_set_dec@ep+1,fsr2h
  7347  00140A  0101               	movlb	1	; () banked
  7348  00140C  5101               	movf	(??_RTCC_time_set_dec+1)& (0+255),w,b
  7349  00140E  5EDE               	subwf	postinc2,f,c
  7350  001410  5102               	movf	(??_RTCC_time_set_dec+2)& (0+255),w,b
  7351  001412  5ADE               	subwfb	postinc2,f,c
  7352  001414  5103               	movf	(??_RTCC_time_set_dec+3)& (0+255),w,b
  7353  001416  5ADE               	subwfb	postinc2,f,c
  7354  001418  5104               	movf	(??_RTCC_time_set_dec+4)& (0+255),w,b
  7355  00141A  5ADD               	subwfb	postdec2,f,c
  7356  00141C  52DD               	movf	postdec2,f,c
  7357  00141E  52DD               	movf	postdec2,f,c
  7358  001420                     l5068:
  7359                           
  7360                           ;My_header\My_RTCC.h: 330: if (edit_flag.flag.YY) {
  7361  001420  0100               	movlb	0	; () banked
  7362  001422  ABCE               	btfss	_edit_flag& (0+255),5,b
  7363  001424  D0AC               	goto	l5090
  7364                           
  7365                           ; BSR set to: 0
  7366                           ;My_header\My_RTCC.h: 331: for (uint8_t i = ct->MM; i >= 1; i--) {
  7367  001426  0100               	movlb	0	; () banked
  7368  001428  EE20 F005          	lfsr	2,5
  7369  00142C  0100               	movlb	0	; () banked
  7370  00142E  519F               	movf	RTCC_time_set_dec@ct& (0+255),w,b
  7371  001430  26D9               	addwf	fsr2l,f,c
  7372  001432  0100               	movlb	0	; () banked
  7373  001434  51A0               	movf	(RTCC_time_set_dec@ct+1)& (0+255),w,b
  7374  001436  22DA               	addwfc	fsr2h,f,c
  7375  001438  50DF               	movf	indf2,w,c
  7376  00143A  0100               	movlb	0	; () banked
  7377  00143C  6FA4               	movwf	RTCC_time_set_dec@i& (0+255),b
  7378  00143E  D041               	goto	L11
  7379  001440                     l5076:
  7380                           
  7381                           ; BSR set to: 0
  7382                           ;My_header\My_RTCC.h: 332: *ep -= ((epoch_t)60*60*24) * month_length(ct->YY, i);
  7383  001440  C0A4  F066         	movff	RTCC_time_set_dec@i,month_length@month
  7384  001444  0100               	movlb	0	; () banked
  7385  001446  EE20 F006          	lfsr	2,6
  7386  00144A  0100               	movlb	0	; () banked
  7387  00144C  519F               	movf	RTCC_time_set_dec@ct& (0+255),w,b
  7388  00144E  26D9               	addwf	fsr2l,f,c
  7389  001450  0100               	movlb	0	; () banked
  7390  001452  51A0               	movf	(RTCC_time_set_dec@ct+1)& (0+255),w,b
  7391  001454  22DA               	addwfc	fsr2h,f,c
  7392  001456  50DF               	movf	indf2,w,c
  7393  001458  EC32  F016         	call	_month_length
  7394  00145C  0101               	movlb	1	; () banked
  7395  00145E  6F00               	movwf	??_RTCC_time_set_dec& (0+255),b
  7396  001460  0101               	movlb	1	; () banked
  7397  001462  5100               	movf	??_RTCC_time_set_dec& (0+255),w,b
  7398  001464  0100               	movlb	0	; () banked
  7399  001466  6F6D               	movwf	___lmul@multiplier& (0+255),b
  7400  001468  0100               	movlb	0	; () banked
  7401  00146A  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  7402  00146C  0100               	movlb	0	; () banked
  7403  00146E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  7404  001470  0100               	movlb	0	; () banked
  7405  001472  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  7406  001474  0E80               	movlw	128
  7407  001476  0100               	movlb	0	; () banked
  7408  001478  6F71               	movwf	___lmul@multiplicand& (0+255),b
  7409  00147A  0E51               	movlw	81
  7410  00147C  0100               	movlb	0	; () banked
  7411  00147E  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7412  001480  0E01               	movlw	1
  7413  001482  0100               	movlb	0	; () banked
  7414  001484  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7415  001486  0E00               	movlw	0
  7416  001488  0100               	movlb	0	; () banked
  7417  00148A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7418  00148C  EC96  F01A         	call	___lmul	;wreg free
  7419  001490  C06D  F101         	movff	?___lmul,??_RTCC_time_set_dec+1
  7420  001494  C06E  F102         	movff	?___lmul+1,??_RTCC_time_set_dec+2
  7421  001498  C06F  F103         	movff	?___lmul+2,??_RTCC_time_set_dec+3
  7422  00149C  C070  F104         	movff	?___lmul+3,??_RTCC_time_set_dec+4
  7423  0014A0  C0A1  FFD9         	movff	RTCC_time_set_dec@ep,fsr2l
  7424  0014A4  C0A2  FFDA         	movff	RTCC_time_set_dec@ep+1,fsr2h
  7425  0014A8  0101               	movlb	1	; () banked
  7426  0014AA  5101               	movf	(??_RTCC_time_set_dec+1)& (0+255),w,b
  7427  0014AC  5EDE               	subwf	postinc2,f,c
  7428  0014AE  5102               	movf	(??_RTCC_time_set_dec+2)& (0+255),w,b
  7429  0014B0  5ADE               	subwfb	postinc2,f,c
  7430  0014B2  5103               	movf	(??_RTCC_time_set_dec+3)& (0+255),w,b
  7431  0014B4  5ADE               	subwfb	postinc2,f,c
  7432  0014B6  5104               	movf	(??_RTCC_time_set_dec+4)& (0+255),w,b
  7433  0014B8  5ADD               	subwfb	postdec2,f,c
  7434  0014BA  52DD               	movf	postdec2,f,c
  7435  0014BC  52DD               	movf	postdec2,f,c
  7436                           
  7437                           ; BSR set to: 1
  7438  0014BE  0100               	movlb	0	; () banked
  7439  0014C0  07A4               	decf	RTCC_time_set_dec@i& (0+255),f,b
  7440  0014C2                     L11:
  7441                           
  7442                           ; BSR set to: 0
  7443  0014C2  0100               	movlb	0	; () banked
  7444  0014C4  67A4               	tstfsz	RTCC_time_set_dec@i& (0+255),b
  7445  0014C6  D7BC               	goto	l5076
  7446                           
  7447                           ; BSR set to: 0
  7448                           ;My_header\My_RTCC.h: 333: }
  7449                           ;My_header\My_RTCC.h: 334: for (uint8_t i = 12; i > ct->MM; i--) {
  7450                           
  7451                           ; BSR set to: 0
  7452  0014C8  0E0C               	movlw	12
  7453  0014CA  0100               	movlb	0	; () banked
  7454  0014CC  6FA3               	movwf	RTCC_time_set_dec@i_2203& (0+255),b
  7455  0014CE  D045               	goto	l5088
  7456  0014D0                     l5084:
  7457                           
  7458                           ;My_header\My_RTCC.h: 335: *ep -= ((epoch_t)60*60*24) * month_length(ct->YY - 1, i);
  7459  0014D0  C0A3  F066         	movff	RTCC_time_set_dec@i_2203,month_length@month
  7460  0014D4  0100               	movlb	0	; () banked
  7461  0014D6  EE20 F006          	lfsr	2,6
  7462  0014DA  0100               	movlb	0	; () banked
  7463  0014DC  519F               	movf	RTCC_time_set_dec@ct& (0+255),w,b
  7464  0014DE  26D9               	addwf	fsr2l,f,c
  7465  0014E0  0100               	movlb	0	; () banked
  7466  0014E2  51A0               	movf	(RTCC_time_set_dec@ct+1)& (0+255),w,b
  7467  0014E4  22DA               	addwfc	fsr2h,f,c
  7468  0014E6  50DF               	movf	indf2,w,c
  7469  0014E8  0101               	movlb	1	; () banked
  7470  0014EA  6F00               	movwf	??_RTCC_time_set_dec& (0+255),b
  7471  0014EC  0101               	movlb	1	; () banked
  7472  0014EE  0500               	decf	??_RTCC_time_set_dec& (0+255),w,b
  7473  0014F0  EC32  F016         	call	_month_length
  7474  0014F4  0101               	movlb	1	; () banked
  7475  0014F6  6F01               	movwf	(??_RTCC_time_set_dec+1)& (0+255),b
  7476  0014F8  0101               	movlb	1	; () banked
  7477  0014FA  5101               	movf	(??_RTCC_time_set_dec+1)& (0+255),w,b
  7478  0014FC  0100               	movlb	0	; () banked
  7479  0014FE  6F6D               	movwf	___lmul@multiplier& (0+255),b
  7480  001500  0100               	movlb	0	; () banked
  7481  001502  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  7482  001504  0100               	movlb	0	; () banked
  7483  001506  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  7484  001508  0100               	movlb	0	; () banked
  7485  00150A  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  7486  00150C  0E80               	movlw	128
  7487  00150E  0100               	movlb	0	; () banked
  7488  001510  6F71               	movwf	___lmul@multiplicand& (0+255),b
  7489  001512  0E51               	movlw	81
  7490  001514  0100               	movlb	0	; () banked
  7491  001516  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7492  001518  0E01               	movlw	1
  7493  00151A  0100               	movlb	0	; () banked
  7494  00151C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7495  00151E  0E00               	movlw	0
  7496  001520  0100               	movlb	0	; () banked
  7497  001522  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7498  001524  EC96  F01A         	call	___lmul	;wreg free
  7499  001528  C06D  F102         	movff	?___lmul,??_RTCC_time_set_dec+2
  7500  00152C  C06E  F103         	movff	?___lmul+1,??_RTCC_time_set_dec+3
  7501  001530  C06F  F104         	movff	?___lmul+2,??_RTCC_time_set_dec+4
  7502  001534  C070  F105         	movff	?___lmul+3,??_RTCC_time_set_dec+5
  7503  001538  C0A1  FFD9         	movff	RTCC_time_set_dec@ep,fsr2l
  7504  00153C  C0A2  FFDA         	movff	RTCC_time_set_dec@ep+1,fsr2h
  7505  001540  0101               	movlb	1	; () banked
  7506  001542  5102               	movf	(??_RTCC_time_set_dec+2)& (0+255),w,b
  7507  001544  5EDE               	subwf	postinc2,f,c
  7508  001546  5103               	movf	(??_RTCC_time_set_dec+3)& (0+255),w,b
  7509  001548  5ADE               	subwfb	postinc2,f,c
  7510  00154A  5104               	movf	(??_RTCC_time_set_dec+4)& (0+255),w,b
  7511  00154C  5ADE               	subwfb	postinc2,f,c
  7512  00154E  5105               	movf	(??_RTCC_time_set_dec+5)& (0+255),w,b
  7513  001550  5ADD               	subwfb	postdec2,f,c
  7514  001552  52DD               	movf	postdec2,f,c
  7515  001554  52DD               	movf	postdec2,f,c
  7516                           
  7517                           ; BSR set to: 1
  7518  001556  0100               	movlb	0	; () banked
  7519  001558  07A3               	decf	RTCC_time_set_dec@i_2203& (0+255),f,b
  7520  00155A                     l5088:
  7521                           
  7522                           ; BSR set to: 0
  7523  00155A  0100               	movlb	0	; () banked
  7524  00155C  EE20 F005          	lfsr	2,5
  7525  001560  0100               	movlb	0	; () banked
  7526  001562  519F               	movf	RTCC_time_set_dec@ct& (0+255),w,b
  7527  001564  26D9               	addwf	fsr2l,f,c
  7528  001566  0100               	movlb	0	; () banked
  7529  001568  51A0               	movf	(RTCC_time_set_dec@ct+1)& (0+255),w,b
  7530  00156A  22DA               	addwfc	fsr2h,f,c
  7531  00156C  50DF               	movf	indf2,w,c
  7532  00156E  0101               	movlb	1	; () banked
  7533  001570  6F00               	movwf	??_RTCC_time_set_dec& (0+255),b
  7534  001572  0100               	movlb	0	; () banked
  7535  001574  51A3               	movf	RTCC_time_set_dec@i_2203& (0+255),w,b
  7536  001576  0101               	movlb	1	; () banked
  7537  001578  5D00               	subwf	??_RTCC_time_set_dec& (0+255),w,b
  7538  00157A  A0D8               	btfss	status,0,c
  7539  00157C  D7A9               	goto	l5084
  7540  00157E                     l5090:
  7541                           
  7542                           ;My_header\My_RTCC.h: 336: }
  7543                           ;My_header\My_RTCC.h: 337: }
  7544                           ;My_header\My_RTCC.h: 339: if (*ep >= 3155760000)*ep += 3155760000;
  7545  00157E  C0A1  FFD9         	movff	RTCC_time_set_dec@ep,fsr2l
  7546  001582  C0A2  FFDA         	movff	RTCC_time_set_dec@ep+1,fsr2h
  7547  001586  CFDE F100          	movff	postinc2,??_RTCC_time_set_dec
  7548  00158A  CFDE F101          	movff	postinc2,??_RTCC_time_set_dec+1
  7549  00158E  CFDE F102          	movff	postinc2,??_RTCC_time_set_dec+2
  7550  001592  CFDE F103          	movff	postinc2,??_RTCC_time_set_dec+3
  7551  001596  0E80               	movlw	128
  7552  001598  0101               	movlb	1	; () banked
  7553  00159A  5D00               	subwf	??_RTCC_time_set_dec& (0+255),w,b
  7554  00159C  0E13               	movlw	19
  7555  00159E  5901               	subwfb	(??_RTCC_time_set_dec+1)& (0+255),w,b
  7556  0015A0  0E19               	movlw	25
  7557  0015A2  5902               	subwfb	(??_RTCC_time_set_dec+2)& (0+255),w,b
  7558  0015A4  0EBC               	movlw	188
  7559  0015A6  0101               	movlb	1	; () banked
  7560  0015A8  5903               	subwfb	(??_RTCC_time_set_dec+3)& (0+255),w,b
  7561  0015AA  A0D8               	btfss	status,0,c
  7562  0015AC  D00E               	goto	l5094
  7563                           
  7564                           ; BSR set to: 1
  7565  0015AE  C0A1  FFD9         	movff	RTCC_time_set_dec@ep,fsr2l
  7566  0015B2  C0A2  FFDA         	movff	RTCC_time_set_dec@ep+1,fsr2h
  7567  0015B6  0E80               	movlw	128
  7568  0015B8  26DE               	addwf	postinc2,f,c
  7569  0015BA  0E13               	movlw	19
  7570  0015BC  22DE               	addwfc	postinc2,f,c
  7571  0015BE  0E19               	movlw	25
  7572  0015C0  22DE               	addwfc	postinc2,f,c
  7573  0015C2  0EBC               	movlw	188
  7574  0015C4  22DD               	addwfc	postdec2,f,c
  7575  0015C6  52DD               	movf	postdec2,f,c
  7576  0015C8  52DD               	movf	postdec2,f,c
  7577  0015CA                     l5094:
  7578                           
  7579                           ; BSR set to: 1
  7580                           ;My_header\My_RTCC.h: 340: RTCC_from_epoch(&caltime_now, &epoch_now);
  7581  0015CA  0100               	movlb	0	; () banked
  7582  0015CC  0E00               	movlw	high _caltime_now
  7583  0015CE  0100               	movlb	0	; () banked
  7584  0015D0  6F9C               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  7585  0015D2  0100               	movlb	0	; () banked
  7586  0015D4  0ED3               	movlw	low _caltime_now
  7587  0015D6  0100               	movlb	0	; () banked
  7588  0015D8  6F9B               	movwf	RTCC_from_epoch@ct& (0+255),b
  7589  0015DA  0100               	movlb	0	; () banked
  7590  0015DC  0E00               	movlw	high _epoch_now
  7591  0015DE  0100               	movlb	0	; () banked
  7592  0015E0  6F9E               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  7593  0015E2  0100               	movlb	0	; () banked
  7594  0015E4  0EDA               	movlw	low _epoch_now
  7595  0015E6  0100               	movlb	0	; () banked
  7596  0015E8  6F9D               	movwf	RTCC_from_epoch@ep& (0+255),b
  7597  0015EA  EC23  F01F         	call	_RTCC_from_epoch	;wreg free
  7598                           
  7599                           ;My_header\My_RTCC.h: 341: time_change_flag = 1;
  7600  0015EE  0E01               	movlw	1
  7601  0015F0  0100               	movlb	0	; () banked
  7602  0015F2  6FD1               	movwf	_time_change_flag& (0+255),b
  7603                           
  7604                           ; BSR set to: 0
  7605  0015F4  0012               	return	
  7606  0015F6                     __end_of_RTCC_time_set_dec:
  7607                           	opt stack 0
  7608                           tblptru	equ	0xFF8
  7609                           tblptrh	equ	0xFF7
  7610                           tblptrl	equ	0xFF6
  7611                           tablat	equ	0xFF5
  7612                           prodh	equ	0xFF4
  7613                           prodl	equ	0xFF3
  7614                           intcon	equ	0xFF2
  7615                           intcon2	equ	0xFF1
  7616                           postinc0	equ	0xFEE
  7617                           wreg	equ	0xFE8
  7618                           postdec1	equ	0xFE5
  7619                           fsr1l	equ	0xFE1
  7620                           indf2	equ	0xFDF
  7621                           postinc2	equ	0xFDE
  7622                           postdec2	equ	0xFDD
  7623                           fsr2h	equ	0xFDA
  7624                           fsr2l	equ	0xFD9
  7625                           status	equ	0xFD8
  7626                           
  7627 ;; *************** function _RTCC_from_epoch *****************
  7628 ;; Defined at:
  7629 ;;		line 247 in file "../My_header\My_RTCC.h"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;  ct              2   59[BANK0 ] PTR struct .
  7632 ;;		 -> caltime_now(7), 
  7633 ;;  ep              2   61[BANK0 ] PTR unsigned long 
  7634 ;;		 -> epoch_now(4), 
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;		None
  7637 ;; Return value:  Size  Location     Type
  7638 ;;		None               void
  7639 ;; Registers used:
  7640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7641 ;; Tracked objects:
  7642 ;;		On entry : 0/0
  7643 ;;		On exit  : 0/0
  7644 ;;		Unchanged: 0/0
  7645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7646 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7649 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7650 ;;Total ram usage:        4 bytes
  7651 ;; Hardware stack levels used:    1
  7652 ;; Hardware stack levels required when called:    7
  7653 ;; This function calls:
  7654 ;;		_caltime_to_RTCC
  7655 ;;		_epoch_to_caltime
  7656 ;; This function is called by:
  7657 ;;		_RTCC_time_set_inc
  7658 ;;		_RTCC_time_set_dec
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662                           	psect	text38
  7663  003E46                     __ptext38:
  7664                           	opt stack 0
  7665  003E46                     _RTCC_from_epoch:
  7666                           	opt stack 21
  7667                           
  7668                           ;My_header\My_RTCC.h: 248: epoch_to_caltime(ct, ep);
  7669                           
  7670                           ; BSR set to: 0
  7671                           ;incstack = 0
  7672  003E46  0100               	movlb	0	; () banked
  7673  003E48  C09C  F08A         	movff	RTCC_from_epoch@ct+1,epoch_to_caltime@ct+1
  7674  003E4C  0100               	movlb	0	; () banked
  7675  003E4E  C09B  F089         	movff	RTCC_from_epoch@ct,epoch_to_caltime@ct
  7676  003E52  0100               	movlb	0	; () banked
  7677  003E54  C09E  F08C         	movff	RTCC_from_epoch@ep+1,epoch_to_caltime@ep+1
  7678  003E58  0100               	movlb	0	; () banked
  7679  003E5A  C09D  F08B         	movff	RTCC_from_epoch@ep,epoch_to_caltime@ep
  7680  003E5E  EC4A  F00F         	call	_epoch_to_caltime	;wreg free
  7681                           
  7682                           ;My_header\My_RTCC.h: 249: caltime_to_RTCC(ct);
  7683  003E62  0100               	movlb	0	; () banked
  7684  003E64  C09C  F06A         	movff	RTCC_from_epoch@ct+1,caltime_to_RTCC@ct+1
  7685  003E68  0100               	movlb	0	; () banked
  7686  003E6A  C09B  F069         	movff	RTCC_from_epoch@ct,caltime_to_RTCC@ct
  7687  003E6E  EC50  F015         	call	_caltime_to_RTCC	;wreg free
  7688  003E72  0012               	return	
  7689  003E74                     __end_of_RTCC_from_epoch:
  7690                           	opt stack 0
  7691                           tblptru	equ	0xFF8
  7692                           tblptrh	equ	0xFF7
  7693                           tblptrl	equ	0xFF6
  7694                           tablat	equ	0xFF5
  7695                           prodh	equ	0xFF4
  7696                           prodl	equ	0xFF3
  7697                           intcon	equ	0xFF2
  7698                           intcon2	equ	0xFF1
  7699                           postinc0	equ	0xFEE
  7700                           wreg	equ	0xFE8
  7701                           postdec1	equ	0xFE5
  7702                           fsr1l	equ	0xFE1
  7703                           indf2	equ	0xFDF
  7704                           postinc2	equ	0xFDE
  7705                           postdec2	equ	0xFDD
  7706                           fsr2h	equ	0xFDA
  7707                           fsr2l	equ	0xFD9
  7708                           status	equ	0xFD8
  7709                           
  7710 ;; *************** function _epoch_to_caltime *****************
  7711 ;; Defined at:
  7712 ;;		line 162 in file "../My_header\My_RTCC.h"
  7713 ;; Parameters:    Size  Location     Type
  7714 ;;  ct              2   41[BANK0 ] PTR struct .
  7715 ;;		 -> caltime_now(7), 
  7716 ;;  ep              2   43[BANK0 ] PTR unsigned long 
  7717 ;;		 -> epoch_now(4), 
  7718 ;; Auto vars:     Size  Location     Type
  7719 ;;  num             4   55[BANK0 ] unsigned long 
  7720 ;;  day             2   51[BANK0 ] unsigned int 
  7721 ;;  day_since_ep    2   49[BANK0 ] unsigned int 
  7722 ;;  month           1   54[BANK0 ] unsigned char 
  7723 ;;  year            1   53[BANK0 ] unsigned char 
  7724 ;; Return value:  Size  Location     Type
  7725 ;;		None               void
  7726 ;; Registers used:
  7727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  7728 ;; Tracked objects:
  7729 ;;		On entry : 0/0
  7730 ;;		On exit  : 0/0
  7731 ;;		Unchanged: 0/0
  7732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7733 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7734 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7735 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7736 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7737 ;;Total ram usage:       18 bytes
  7738 ;; Hardware stack levels used:    1
  7739 ;; Hardware stack levels required when called:    6
  7740 ;; This function calls:
  7741 ;;		_get_quot_rem
  7742 ;;		_month_length
  7743 ;; This function is called by:
  7744 ;;		_RTCC_from_epoch
  7745 ;; This function uses a non-reentrant model
  7746 ;;
  7747                           
  7748                           	psect	text39
  7749  001E94                     __ptext39:
  7750                           	opt stack 0
  7751  001E94                     _epoch_to_caltime:
  7752                           	opt stack 21
  7753                           
  7754                           ;My_header\My_RTCC.h: 165: static uint16_t day_cache = 0;
  7755                           ;My_header\My_RTCC.h: 166: static uint8_t month_cache = 1;
  7756                           ;My_header\My_RTCC.h: 167: static uint8_t year_cache = 0;
  7757                           ;My_header\My_RTCC.h: 168: uint16_t day_since_epoch;
  7758                           ;My_header\My_RTCC.h: 169: uint16_t day;
  7759                           ;My_header\My_RTCC.h: 170: uint8_t year = 0;
  7760                           
  7761                           ;incstack = 0
  7762  001E94  0E00               	movlw	0
  7763  001E96  0100               	movlb	0	; () banked
  7764  001E98  6F95               	movwf	epoch_to_caltime@year& (0+255),b
  7765                           
  7766                           ;My_header\My_RTCC.h: 171: uint8_t month = 1;
  7767  001E9A  0E01               	movlw	1
  7768  001E9C  0100               	movlb	0	; () banked
  7769  001E9E  6F96               	movwf	epoch_to_caltime@month& (0+255),b
  7770                           
  7771                           ; BSR set to: 0
  7772                           ;My_header\My_RTCC.h: 172: epoch_t num;
  7773                           ;My_header\My_RTCC.h: 174: num = *ep;
  7774  001EA0  C08B  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  7775  001EA4  C08C  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  7776  001EA8  0100               	movlb	0	; () banked
  7777  001EAA  CFDE F097          	movff	postinc2,epoch_to_caltime@num
  7778  001EAE  0100               	movlb	0	; () banked
  7779  001EB0  CFDE F098          	movff	postinc2,epoch_to_caltime@num+1
  7780  001EB4  0100               	movlb	0	; () banked
  7781  001EB6  CFDE F099          	movff	postinc2,epoch_to_caltime@num+2
  7782  001EBA  0100               	movlb	0	; () banked
  7783  001EBC  CFDE F09A          	movff	postinc2,epoch_to_caltime@num+3
  7784                           
  7785                           ; BSR set to: 0
  7786                           ;My_header\My_RTCC.h: 175: ct->ss = get_quot_rem(&num, 60);
  7787  001EC0  0100               	movlb	0	; () banked
  7788  001EC2  0E00               	movlw	high epoch_to_caltime@num
  7789  001EC4  0100               	movlb	0	; () banked
  7790  001EC6  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7791  001EC8  0100               	movlb	0	; () banked
  7792  001ECA  0E97               	movlw	low epoch_to_caltime@num
  7793  001ECC  0100               	movlb	0	; () banked
  7794  001ECE  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7795  001ED0  0E3C               	movlw	60
  7796  001ED2  0100               	movlb	0	; () banked
  7797  001ED4  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7798  001ED6  ECD1  F014         	call	_get_quot_rem	;wreg free
  7799  001EDA  C079  F08D         	movff	?_get_quot_rem,??_epoch_to_caltime
  7800  001EDE  C07A  F08E         	movff	?_get_quot_rem+1,??_epoch_to_caltime+1
  7801  001EE2  C07B  F08F         	movff	?_get_quot_rem+2,??_epoch_to_caltime+2
  7802  001EE6  C07C  F090         	movff	?_get_quot_rem+3,??_epoch_to_caltime+3
  7803  001EEA  0100               	movlb	0	; () banked
  7804  001EEC  518D               	movf	??_epoch_to_caltime& (0+255),w,b
  7805  001EEE  C089  FFD9         	movff	epoch_to_caltime@ct,fsr2l
  7806  001EF2  C08A  FFDA         	movff	epoch_to_caltime@ct+1,fsr2h
  7807  001EF6  6EDF               	movwf	indf2,c
  7808                           
  7809                           ; BSR set to: 0
  7810                           ;My_header\My_RTCC.h: 176: ct->mm = get_quot_rem(&num, 60);
  7811  001EF8  0100               	movlb	0	; () banked
  7812  001EFA  0E00               	movlw	high epoch_to_caltime@num
  7813  001EFC  0100               	movlb	0	; () banked
  7814  001EFE  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7815  001F00  0100               	movlb	0	; () banked
  7816  001F02  0E97               	movlw	low epoch_to_caltime@num
  7817  001F04  0100               	movlb	0	; () banked
  7818  001F06  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7819  001F08  0E3C               	movlw	60
  7820  001F0A  0100               	movlb	0	; () banked
  7821  001F0C  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7822  001F0E  ECD1  F014         	call	_get_quot_rem	;wreg free
  7823  001F12  C079  F08D         	movff	?_get_quot_rem,??_epoch_to_caltime
  7824  001F16  C07A  F08E         	movff	?_get_quot_rem+1,??_epoch_to_caltime+1
  7825  001F1A  C07B  F08F         	movff	?_get_quot_rem+2,??_epoch_to_caltime+2
  7826  001F1E  C07C  F090         	movff	?_get_quot_rem+3,??_epoch_to_caltime+3
  7827  001F22  0100               	movlb	0	; () banked
  7828  001F24  EE20 F001          	lfsr	2,1
  7829  001F28  0100               	movlb	0	; () banked
  7830  001F2A  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  7831  001F2C  26D9               	addwf	fsr2l,f,c
  7832  001F2E  0100               	movlb	0	; () banked
  7833  001F30  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7834  001F32  22DA               	addwfc	fsr2h,f,c
  7835  001F34  C08D  FFDF         	movff	??_epoch_to_caltime,indf2
  7836                           
  7837                           ; BSR set to: 0
  7838                           ;My_header\My_RTCC.h: 177: ct->hh = get_quot_rem(&num, 24);
  7839  001F38  0100               	movlb	0	; () banked
  7840  001F3A  0E00               	movlw	high epoch_to_caltime@num
  7841  001F3C  0100               	movlb	0	; () banked
  7842  001F3E  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7843  001F40  0100               	movlb	0	; () banked
  7844  001F42  0E97               	movlw	low epoch_to_caltime@num
  7845  001F44  0100               	movlb	0	; () banked
  7846  001F46  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7847  001F48  0E18               	movlw	24
  7848  001F4A  0100               	movlb	0	; () banked
  7849  001F4C  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7850  001F4E  ECD1  F014         	call	_get_quot_rem	;wreg free
  7851  001F52  C079  F08D         	movff	?_get_quot_rem,??_epoch_to_caltime
  7852  001F56  C07A  F08E         	movff	?_get_quot_rem+1,??_epoch_to_caltime+1
  7853  001F5A  C07B  F08F         	movff	?_get_quot_rem+2,??_epoch_to_caltime+2
  7854  001F5E  C07C  F090         	movff	?_get_quot_rem+3,??_epoch_to_caltime+3
  7855  001F62  0100               	movlb	0	; () banked
  7856  001F64  EE20 F002          	lfsr	2,2
  7857  001F68  0100               	movlb	0	; () banked
  7858  001F6A  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  7859  001F6C  26D9               	addwf	fsr2l,f,c
  7860  001F6E  0100               	movlb	0	; () banked
  7861  001F70  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7862  001F72  22DA               	addwfc	fsr2h,f,c
  7863  001F74  C08D  FFDF         	movff	??_epoch_to_caltime,indf2
  7864                           
  7865                           ; BSR set to: 0
  7866                           ;My_header\My_RTCC.h: 181: day = num;
  7867  001F78  C097  F093         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  7868  001F7C  C098  F094         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  7869                           
  7870                           ; BSR set to: 0
  7871                           ;My_header\My_RTCC.h: 182: day_since_epoch = day;
  7872  001F80  C093  F091         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  7873  001F84  C094  F092         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  7874                           
  7875                           ; BSR set to: 0
  7876                           ;My_header\My_RTCC.h: 184: num += 6;
  7877  001F88  0E06               	movlw	6
  7878  001F8A  0100               	movlb	0	; () banked
  7879  001F8C  2797               	addwf	epoch_to_caltime@num& (0+255),f,b
  7880  001F8E  0E00               	movlw	0
  7881  001F90  0100               	movlb	0	; () banked
  7882  001F92  2398               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  7883  001F94  0100               	movlb	0	; () banked
  7884  001F96  2399               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  7885  001F98  0100               	movlb	0	; () banked
  7886  001F9A  239A               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;My_header\My_RTCC.h: 185: ct->EE = get_quot_rem(&num, 7);
  7890  001F9C  0100               	movlb	0	; () banked
  7891  001F9E  0E00               	movlw	high epoch_to_caltime@num
  7892  001FA0  0100               	movlb	0	; () banked
  7893  001FA2  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7894  001FA4  0100               	movlb	0	; () banked
  7895  001FA6  0E97               	movlw	low epoch_to_caltime@num
  7896  001FA8  0100               	movlb	0	; () banked
  7897  001FAA  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7898  001FAC  0E07               	movlw	7
  7899  001FAE  0100               	movlb	0	; () banked
  7900  001FB0  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7901  001FB2  ECD1  F014         	call	_get_quot_rem	;wreg free
  7902  001FB6  C079  F08D         	movff	?_get_quot_rem,??_epoch_to_caltime
  7903  001FBA  C07A  F08E         	movff	?_get_quot_rem+1,??_epoch_to_caltime+1
  7904  001FBE  C07B  F08F         	movff	?_get_quot_rem+2,??_epoch_to_caltime+2
  7905  001FC2  C07C  F090         	movff	?_get_quot_rem+3,??_epoch_to_caltime+3
  7906  001FC6  0100               	movlb	0	; () banked
  7907  001FC8  EE20 F003          	lfsr	2,3
  7908  001FCC  0100               	movlb	0	; () banked
  7909  001FCE  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  7910  001FD0  26D9               	addwf	fsr2l,f,c
  7911  001FD2  0100               	movlb	0	; () banked
  7912  001FD4  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7913  001FD6  22DA               	addwfc	fsr2h,f,c
  7914  001FD8  C08D  FFDF         	movff	??_epoch_to_caltime,indf2
  7915                           
  7916                           ;My_header\My_RTCC.h: 194: while (day >= month_length(year, month)) {
  7917  001FDC  D041               	goto	l4748
  7918  001FDE                     l410:
  7919                           
  7920                           ; BSR set to: 0
  7921                           ;My_header\My_RTCC.h: 195: LATB2 = 1;
  7922  001FDE  848A               	bsf	3978,2,c	;volatile
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;My_header\My_RTCC.h: 196: day = day - month_length(year, month);
  7926  001FE0  C096  F066         	movff	epoch_to_caltime@month,month_length@month
  7927  001FE4  0100               	movlb	0	; () banked
  7928  001FE6  5195               	movf	epoch_to_caltime@year& (0+255),w,b
  7929  001FE8  EC32  F016         	call	_month_length
  7930  001FEC  0100               	movlb	0	; () banked
  7931  001FEE  6F8D               	movwf	??_epoch_to_caltime& (0+255),b
  7932  001FF0  6B8E               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  7933  001FF2  0100               	movlb	0	; () banked
  7934  001FF4  1F8D               	comf	??_epoch_to_caltime& (0+255),f,b
  7935  001FF6  1F8E               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  7936  001FF8  4B8D               	infsnz	??_epoch_to_caltime& (0+255),f,b
  7937  001FFA  2B8E               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  7938  001FFC  0100               	movlb	0	; () banked
  7939  001FFE  5193               	movf	epoch_to_caltime@day& (0+255),w,b
  7940  002000  0100               	movlb	0	; () banked
  7941  002002  258D               	addwf	??_epoch_to_caltime& (0+255),w,b
  7942  002004  0100               	movlb	0	; () banked
  7943  002006  6F93               	movwf	epoch_to_caltime@day& (0+255),b
  7944  002008  0100               	movlb	0	; () banked
  7945  00200A  5194               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  7946  00200C  0100               	movlb	0	; () banked
  7947  00200E  218E               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  7948  002010  0100               	movlb	0	; () banked
  7949  002012  6F94               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  7950                           
  7951                           ; BSR set to: 0
  7952                           ;My_header\My_RTCC.h: 197: if (month == 12) {
  7953  002014  0100               	movlb	0	; () banked
  7954  002016  5196               	movf	epoch_to_caltime@month& (0+255),w,b
  7955  002018  0A0C               	xorlw	12
  7956  00201A  A4D8               	btfss	status,2,c
  7957  00201C  D01B               	goto	l4742
  7958                           
  7959                           ; BSR set to: 0
  7960                           ;My_header\My_RTCC.h: 198: month = 1;
  7961  00201E  0E01               	movlw	1
  7962  002020  0100               	movlb	0	; () banked
  7963  002022  6F96               	movwf	epoch_to_caltime@month& (0+255),b
  7964                           
  7965                           ; BSR set to: 0
  7966                           ;My_header\My_RTCC.h: 199: year++;
  7967  002024  0100               	movlb	0	; () banked
  7968  002026  2B95               	incf	epoch_to_caltime@year& (0+255),f,b
  7969                           
  7970                           ; BSR set to: 0
  7971                           ;My_header\My_RTCC.h: 201: if (year >= 100) {
  7972  002028  0E63               	movlw	99
  7973  00202A  0100               	movlb	0	; () banked
  7974  00202C  6595               	cpfsgt	epoch_to_caltime@year& (0+255),b
  7975  00202E  D014               	goto	l4744
  7976                           
  7977                           ; BSR set to: 0
  7978                           ;My_header\My_RTCC.h: 202: *ep -= 3155760000;
  7979  002030  C08B  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  7980  002034  C08C  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  7981  002038  0E80               	movlw	128
  7982  00203A  5EDE               	subwf	postinc2,f,c
  7983  00203C  0E13               	movlw	19
  7984  00203E  5ADE               	subwfb	postinc2,f,c
  7985  002040  0E19               	movlw	25
  7986  002042  5ADE               	subwfb	postinc2,f,c
  7987  002044  0EBC               	movlw	188
  7988  002046  5ADD               	subwfb	postdec2,f,c
  7989  002048  52DD               	movf	postdec2,f,c
  7990  00204A  52DD               	movf	postdec2,f,c
  7991                           
  7992                           ; BSR set to: 0
  7993                           ;My_header\My_RTCC.h: 203: year = 0;
  7994  00204C  0E00               	movlw	0
  7995  00204E  0100               	movlb	0	; () banked
  7996  002050  6F95               	movwf	epoch_to_caltime@year& (0+255),b
  7997  002052  D002               	goto	l4744
  7998  002054                     l4742:
  7999                           
  8000                           ; BSR set to: 0
  8001                           ;My_header\My_RTCC.h: 206: month++;
  8002  002054  0100               	movlb	0	; () banked
  8003  002056  2B96               	incf	epoch_to_caltime@month& (0+255),f,b
  8004  002058                     l4744:
  8005                           
  8006                           ; BSR set to: 0
  8007                           ;My_header\My_RTCC.h: 207: }
  8008                           ;My_header\My_RTCC.h: 208: month_cache = month;
  8009  002058  C096  F0FE         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  8010                           
  8011                           ; BSR set to: 0
  8012                           ;My_header\My_RTCC.h: 209: year_cache = year;
  8013  00205C  C095  F0D2         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  8014  002060                     l4748:
  8015                           
  8016                           ; BSR set to: 0
  8017  002060  C096  F066         	movff	epoch_to_caltime@month,month_length@month
  8018  002064  0100               	movlb	0	; () banked
  8019  002066  5195               	movf	epoch_to_caltime@year& (0+255),w,b
  8020  002068  EC32  F016         	call	_month_length
  8021  00206C  0100               	movlb	0	; () banked
  8022  00206E  6F8D               	movwf	??_epoch_to_caltime& (0+255),b
  8023  002070  0100               	movlb	0	; () banked
  8024  002072  518D               	movf	??_epoch_to_caltime& (0+255),w,b
  8025  002074  0100               	movlb	0	; () banked
  8026  002076  5D93               	subwf	epoch_to_caltime@day& (0+255),w,b
  8027  002078  0E00               	movlw	0
  8028  00207A  0100               	movlb	0	; () banked
  8029  00207C  5994               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  8030  00207E  B0D8               	btfsc	status,0,c
  8031  002080  D7AE               	goto	l410
  8032                           
  8033                           ; BSR set to: 0
  8034                           ;My_header\My_RTCC.h: 210: }
  8035                           ;My_header\My_RTCC.h: 211: day_cache = day_since_epoch - day;
  8036                           
  8037                           ; BSR set to: 0
  8038  002082  0100               	movlb	0	; () banked
  8039  002084  C093  F08D         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  8040  002088  0100               	movlb	0	; () banked
  8041  00208A  C094  F08E         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  8042  00208E  0100               	movlb	0	; () banked
  8043  002090  1F8D               	comf	??_epoch_to_caltime& (0+255),f,b
  8044  002092  1F8E               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  8045  002094  4B8D               	infsnz	??_epoch_to_caltime& (0+255),f,b
  8046  002096  2B8E               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  8047  002098  0100               	movlb	0	; () banked
  8048  00209A  5191               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  8049  00209C  0100               	movlb	0	; () banked
  8050  00209E  258D               	addwf	??_epoch_to_caltime& (0+255),w,b
  8051  0020A0  0100               	movlb	0	; () banked
  8052  0020A2  6FC9               	movwf	epoch_to_caltime@day_cache& (0+255),b
  8053  0020A4  0100               	movlb	0	; () banked
  8054  0020A6  5192               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  8055  0020A8  0100               	movlb	0	; () banked
  8056  0020AA  218E               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  8057  0020AC  0100               	movlb	0	; () banked
  8058  0020AE  6FCA               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  8059                           
  8060                           ; BSR set to: 0
  8061                           ;My_header\My_RTCC.h: 212: day++;
  8062  0020B0  0100               	movlb	0	; () banked
  8063  0020B2  4B93               	infsnz	epoch_to_caltime@day& (0+255),f,b
  8064  0020B4  2B94               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  8065                           
  8066                           ; BSR set to: 0
  8067                           ;My_header\My_RTCC.h: 214: ct->YY = year;
  8068  0020B6  0100               	movlb	0	; () banked
  8069  0020B8  EE20 F006          	lfsr	2,6
  8070  0020BC  0100               	movlb	0	; () banked
  8071  0020BE  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  8072  0020C0  26D9               	addwf	fsr2l,f,c
  8073  0020C2  0100               	movlb	0	; () banked
  8074  0020C4  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8075  0020C6  22DA               	addwfc	fsr2h,f,c
  8076  0020C8  0100               	movlb	0	; () banked
  8077  0020CA  C095  FFDF         	movff	epoch_to_caltime@year,indf2
  8078                           
  8079                           ; BSR set to: 0
  8080                           ;My_header\My_RTCC.h: 215: ct->MM = month;
  8081  0020CE  0100               	movlb	0	; () banked
  8082  0020D0  EE20 F005          	lfsr	2,5
  8083  0020D4  0100               	movlb	0	; () banked
  8084  0020D6  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  8085  0020D8  26D9               	addwf	fsr2l,f,c
  8086  0020DA  0100               	movlb	0	; () banked
  8087  0020DC  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8088  0020DE  22DA               	addwfc	fsr2h,f,c
  8089  0020E0  0100               	movlb	0	; () banked
  8090  0020E2  C096  FFDF         	movff	epoch_to_caltime@month,indf2
  8091                           
  8092                           ; BSR set to: 0
  8093                           ;My_header\My_RTCC.h: 216: ct->DD = day;
  8094  0020E6  0100               	movlb	0	; () banked
  8095  0020E8  EE20 F004          	lfsr	2,4
  8096  0020EC  0100               	movlb	0	; () banked
  8097  0020EE  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  8098  0020F0  26D9               	addwf	fsr2l,f,c
  8099  0020F2  0100               	movlb	0	; () banked
  8100  0020F4  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8101  0020F6  22DA               	addwfc	fsr2h,f,c
  8102  0020F8  0100               	movlb	0	; () banked
  8103  0020FA  C093  FFDF         	movff	epoch_to_caltime@day,indf2
  8104                           
  8105                           ; BSR set to: 0
  8106  0020FE  0012               	return	
  8107  002100                     __end_of_epoch_to_caltime:
  8108                           	opt stack 0
  8109                           tblptru	equ	0xFF8
  8110                           tblptrh	equ	0xFF7
  8111                           tblptrl	equ	0xFF6
  8112                           tablat	equ	0xFF5
  8113                           prodh	equ	0xFF4
  8114                           prodl	equ	0xFF3
  8115                           intcon	equ	0xFF2
  8116                           intcon2	equ	0xFF1
  8117                           postinc0	equ	0xFEE
  8118                           wreg	equ	0xFE8
  8119                           postdec1	equ	0xFE5
  8120                           fsr1l	equ	0xFE1
  8121                           indf2	equ	0xFDF
  8122                           postinc2	equ	0xFDE
  8123                           postdec2	equ	0xFDD
  8124                           fsr2h	equ	0xFDA
  8125                           fsr2l	equ	0xFD9
  8126                           status	equ	0xFD8
  8127                           
  8128 ;; *************** function _get_quot_rem *****************
  8129 ;; Defined at:
  8130 ;;		line 117 in file "../My_header\My_RTCC.h"
  8131 ;; Parameters:    Size  Location     Type
  8132 ;;  quot            2   25[BANK0 ] PTR unsigned long 
  8133 ;;		 -> epoch_to_caltime@num(4), 
  8134 ;;  div             1   27[BANK0 ] unsigned char 
  8135 ;; Auto vars:     Size  Location     Type
  8136 ;;  num             4   37[BANK0 ] unsigned long 
  8137 ;; Return value:  Size  Location     Type
  8138 ;;                  4   25[BANK0 ] unsigned long 
  8139 ;; Registers used:
  8140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8141 ;; Tracked objects:
  8142 ;;		On entry : 0/0
  8143 ;;		On exit  : 0/0
  8144 ;;		Unchanged: 0/0
  8145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8146 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8147 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8148 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8149 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8150 ;;Total ram usage:       16 bytes
  8151 ;; Hardware stack levels used:    1
  8152 ;; Hardware stack levels required when called:    5
  8153 ;; This function calls:
  8154 ;;		___lldiv
  8155 ;;		___lmul
  8156 ;; This function is called by:
  8157 ;;		_epoch_to_caltime
  8158 ;; This function uses a non-reentrant model
  8159 ;;
  8160                           
  8161                           	psect	text40
  8162  0029A2                     __ptext40:
  8163                           	opt stack 0
  8164  0029A2                     _get_quot_rem:
  8165                           	opt stack 21
  8166                           
  8167                           ;My_header\My_RTCC.h: 120: epoch_t num = *quot;
  8168                           
  8169                           ; BSR set to: 0
  8170                           ;incstack = 0
  8171  0029A2  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  8172  0029A6  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  8173  0029AA  0100               	movlb	0	; () banked
  8174  0029AC  CFDE F085          	movff	postinc2,get_quot_rem@num
  8175  0029B0  0100               	movlb	0	; () banked
  8176  0029B2  CFDE F086          	movff	postinc2,get_quot_rem@num+1
  8177  0029B6  0100               	movlb	0	; () banked
  8178  0029B8  CFDE F087          	movff	postinc2,get_quot_rem@num+2
  8179  0029BC  0100               	movlb	0	; () banked
  8180  0029BE  CFDE F088          	movff	postinc2,get_quot_rem@num+3
  8181                           
  8182                           ; BSR set to: 0
  8183                           ;My_header\My_RTCC.h: 121: return num - (*quot = num / div) * div;
  8184  0029C2  0100               	movlb	0	; () banked
  8185  0029C4  517B               	movf	get_quot_rem@div& (0+255),w,b
  8186  0029C6  0100               	movlb	0	; () banked
  8187  0029C8  6F64               	movwf	___lldiv@divisor& (0+255),b
  8188  0029CA  0100               	movlb	0	; () banked
  8189  0029CC  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
  8190  0029CE  0100               	movlb	0	; () banked
  8191  0029D0  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
  8192  0029D2  0100               	movlb	0	; () banked
  8193  0029D4  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
  8194  0029D6  C085  F060         	movff	get_quot_rem@num,___lldiv@dividend
  8195  0029DA  C086  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  8196  0029DE  C087  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  8197  0029E2  C088  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  8198  0029E6  EC10  F017         	call	___lldiv	;wreg free
  8199  0029EA  C060  F07D         	movff	?___lldiv,??_get_quot_rem
  8200  0029EE  C061  F07E         	movff	?___lldiv+1,??_get_quot_rem+1
  8201  0029F2  C062  F07F         	movff	?___lldiv+2,??_get_quot_rem+2
  8202  0029F6  C063  F080         	movff	?___lldiv+3,??_get_quot_rem+3
  8203  0029FA  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  8204  0029FE  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  8205  002A02  C07D  FFDE         	movff	??_get_quot_rem,postinc2
  8206  002A06  C07E  FFDE         	movff	??_get_quot_rem+1,postinc2
  8207  002A0A  C07F  FFDE         	movff	??_get_quot_rem+2,postinc2
  8208  002A0E  C080  FFDD         	movff	??_get_quot_rem+3,postdec2
  8209  002A12  06D9               	decf	fsr2l,f,c
  8210  002A14  06D9               	decf	fsr2l,f,c
  8211  002A16  0100               	movlb	0	; () banked
  8212  002A18  CFDE F06D          	movff	postinc2,___lmul@multiplier
  8213  002A1C  0100               	movlb	0	; () banked
  8214  002A1E  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
  8215  002A22  0100               	movlb	0	; () banked
  8216  002A24  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
  8217  002A28  0100               	movlb	0	; () banked
  8218  002A2A  CFDD F070          	movff	postdec2,___lmul@multiplier+3
  8219  002A2E  52DD               	movf	postdec2,f,c
  8220  002A30  52DD               	movf	postdec2,f,c
  8221  002A32  0100               	movlb	0	; () banked
  8222  002A34  517B               	movf	get_quot_rem@div& (0+255),w,b
  8223  002A36  0100               	movlb	0	; () banked
  8224  002A38  6F71               	movwf	___lmul@multiplicand& (0+255),b
  8225  002A3A  0100               	movlb	0	; () banked
  8226  002A3C  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
  8227  002A3E  0100               	movlb	0	; () banked
  8228  002A40  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
  8229  002A42  0100               	movlb	0	; () banked
  8230  002A44  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
  8231  002A46  EC96  F01A         	call	___lmul	;wreg free
  8232  002A4A  C06D  F081         	movff	?___lmul,??_get_quot_rem+4
  8233  002A4E  C06E  F082         	movff	?___lmul+1,??_get_quot_rem+5
  8234  002A52  C06F  F083         	movff	?___lmul+2,??_get_quot_rem+6
  8235  002A56  C070  F084         	movff	?___lmul+3,??_get_quot_rem+7
  8236  002A5A  0100               	movlb	0	; () banked
  8237  002A5C  1F81               	comf	(??_get_quot_rem+4)& (0+255),f,b
  8238  002A5E  1F82               	comf	(??_get_quot_rem+5)& (0+255),f,b
  8239  002A60  1F83               	comf	(??_get_quot_rem+6)& (0+255),f,b
  8240  002A62  1F84               	comf	(??_get_quot_rem+7)& (0+255),f,b
  8241  002A64  2B81               	incf	(??_get_quot_rem+4)& (0+255),f,b
  8242  002A66  0E00               	movlw	0
  8243  002A68  2382               	addwfc	(??_get_quot_rem+5)& (0+255),f,b
  8244  002A6A  2383               	addwfc	(??_get_quot_rem+6)& (0+255),f,b
  8245  002A6C  2384               	addwfc	(??_get_quot_rem+7)& (0+255),f,b
  8246  002A6E  0100               	movlb	0	; () banked
  8247  002A70  5185               	movf	get_quot_rem@num& (0+255),w,b
  8248  002A72  0100               	movlb	0	; () banked
  8249  002A74  2581               	addwf	(??_get_quot_rem+4)& (0+255),w,b
  8250  002A76  0100               	movlb	0	; () banked
  8251  002A78  6F79               	movwf	?_get_quot_rem& (0+255),b
  8252  002A7A  0100               	movlb	0	; () banked
  8253  002A7C  5186               	movf	(get_quot_rem@num+1)& (0+255),w,b
  8254  002A7E  0100               	movlb	0	; () banked
  8255  002A80  2182               	addwfc	(??_get_quot_rem+5)& (0+255),w,b
  8256  002A82  0100               	movlb	0	; () banked
  8257  002A84  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
  8258  002A86  0100               	movlb	0	; () banked
  8259  002A88  5187               	movf	(get_quot_rem@num+2)& (0+255),w,b
  8260  002A8A  0100               	movlb	0	; () banked
  8261  002A8C  2183               	addwfc	(??_get_quot_rem+6)& (0+255),w,b
  8262  002A8E  0100               	movlb	0	; () banked
  8263  002A90  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
  8264  002A92  0100               	movlb	0	; () banked
  8265  002A94  5188               	movf	(get_quot_rem@num+3)& (0+255),w,b
  8266  002A96  0100               	movlb	0	; () banked
  8267  002A98  2184               	addwfc	(??_get_quot_rem+7)& (0+255),w,b
  8268  002A9A  0100               	movlb	0	; () banked
  8269  002A9C  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
  8270  002A9E  0012               	return	
  8271  002AA0                     __end_of_get_quot_rem:
  8272                           	opt stack 0
  8273                           tblptru	equ	0xFF8
  8274                           tblptrh	equ	0xFF7
  8275                           tblptrl	equ	0xFF6
  8276                           tablat	equ	0xFF5
  8277                           prodh	equ	0xFF4
  8278                           prodl	equ	0xFF3
  8279                           intcon	equ	0xFF2
  8280                           intcon2	equ	0xFF1
  8281                           postinc0	equ	0xFEE
  8282                           wreg	equ	0xFE8
  8283                           postdec1	equ	0xFE5
  8284                           fsr1l	equ	0xFE1
  8285                           indf2	equ	0xFDF
  8286                           postinc2	equ	0xFDE
  8287                           postdec2	equ	0xFDD
  8288                           fsr2h	equ	0xFDA
  8289                           fsr2l	equ	0xFD9
  8290                           status	equ	0xFD8
  8291                           
  8292 ;; *************** function ___lldiv *****************
  8293 ;; Defined at:
  8294 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  8295 ;; Parameters:    Size  Location     Type
  8296 ;;  dividend        4    0[BANK0 ] unsigned long 
  8297 ;;  divisor         4    4[BANK0 ] unsigned long 
  8298 ;; Auto vars:     Size  Location     Type
  8299 ;;  quotient        4    8[BANK0 ] unsigned long 
  8300 ;;  counter         1   12[BANK0 ] unsigned char 
  8301 ;; Return value:  Size  Location     Type
  8302 ;;                  4    0[BANK0 ] unsigned long 
  8303 ;; Registers used:
  8304 ;;		wreg, status,2, status,0
  8305 ;; Tracked objects:
  8306 ;;		On entry : 0/0
  8307 ;;		On exit  : 0/0
  8308 ;;		Unchanged: 0/0
  8309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8310 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8311 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8313 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8314 ;;Total ram usage:       13 bytes
  8315 ;; Hardware stack levels used:    1
  8316 ;; Hardware stack levels required when called:    4
  8317 ;; This function calls:
  8318 ;;		Nothing
  8319 ;; This function is called by:
  8320 ;;		_get_quot_rem
  8321 ;;		_CTMU_read
  8322 ;; This function uses a non-reentrant model
  8323 ;;
  8324                           
  8325                           	psect	text41
  8326  002E20                     __ptext41:
  8327                           	opt stack 0
  8328  002E20                     ___lldiv:
  8329                           	opt stack 21
  8330                           
  8331                           ; BSR set to: 0
  8332                           ;incstack = 0
  8333  002E20  0E00               	movlw	0
  8334  002E22  0100               	movlb	0	; () banked
  8335  002E24  6F68               	movwf	___lldiv@quotient& (0+255),b
  8336  002E26  0E00               	movlw	0
  8337  002E28  0100               	movlb	0	; () banked
  8338  002E2A  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  8339  002E2C  0E00               	movlw	0
  8340  002E2E  0100               	movlb	0	; () banked
  8341  002E30  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  8342  002E32  0E00               	movlw	0
  8343  002E34  0100               	movlb	0	; () banked
  8344  002E36  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  8345                           
  8346                           ; BSR set to: 0
  8347  002E38  0100               	movlb	0	; () banked
  8348  002E3A  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8349  002E3C  1164               	iorwf	___lldiv@divisor& (0+255),w,b
  8350  002E3E  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  8351  002E40  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  8352  002E42  B4D8               	btfsc	status,2,c
  8353  002E44  D04E               	goto	l1144
  8354                           
  8355                           ; BSR set to: 0
  8356  002E46  0E01               	movlw	1
  8357  002E48  0100               	movlb	0	; () banked
  8358  002E4A  6F6C               	movwf	___lldiv@counter& (0+255),b
  8359  002E4C  D00C               	goto	l4530
  8360  002E4E                     l4528:
  8361                           
  8362                           ; BSR set to: 0
  8363  002E4E  0100               	movlb	0	; () banked
  8364  002E50  90D8               	bcf	status,0,c
  8365  002E52  0100               	movlb	0	; () banked
  8366  002E54  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  8367  002E56  0100               	movlb	0	; () banked
  8368  002E58  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  8369  002E5A  0100               	movlb	0	; () banked
  8370  002E5C  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  8371  002E5E  0100               	movlb	0	; () banked
  8372  002E60  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  8373  002E62  0100               	movlb	0	; () banked
  8374  002E64  2B6C               	incf	___lldiv@counter& (0+255),f,b
  8375  002E66                     l4530:
  8376                           
  8377                           ; BSR set to: 0
  8378  002E66  0100               	movlb	0	; () banked
  8379  002E68  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  8380  002E6A  D7F1               	goto	l4528
  8381  002E6C                     l4532:
  8382                           
  8383                           ; BSR set to: 0
  8384  002E6C  0100               	movlb	0	; () banked
  8385  002E6E  90D8               	bcf	status,0,c
  8386  002E70  0100               	movlb	0	; () banked
  8387  002E72  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  8388  002E74  0100               	movlb	0	; () banked
  8389  002E76  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  8390  002E78  0100               	movlb	0	; () banked
  8391  002E7A  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  8392  002E7C  0100               	movlb	0	; () banked
  8393  002E7E  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  8394                           
  8395                           ; BSR set to: 0
  8396  002E80  0100               	movlb	0	; () banked
  8397  002E82  5164               	movf	___lldiv@divisor& (0+255),w,b
  8398  002E84  0100               	movlb	0	; () banked
  8399  002E86  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  8400  002E88  0100               	movlb	0	; () banked
  8401  002E8A  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8402  002E8C  0100               	movlb	0	; () banked
  8403  002E8E  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  8404  002E90  0100               	movlb	0	; () banked
  8405  002E92  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8406  002E94  0100               	movlb	0	; () banked
  8407  002E96  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  8408  002E98  0100               	movlb	0	; () banked
  8409  002E9A  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8410  002E9C  0100               	movlb	0	; () banked
  8411  002E9E  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  8412  002EA0  A0D8               	btfss	status,0,c
  8413  002EA2  D012               	goto	l4540
  8414                           
  8415                           ; BSR set to: 0
  8416  002EA4  0100               	movlb	0	; () banked
  8417  002EA6  5164               	movf	___lldiv@divisor& (0+255),w,b
  8418  002EA8  0100               	movlb	0	; () banked
  8419  002EAA  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  8420  002EAC  0100               	movlb	0	; () banked
  8421  002EAE  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8422  002EB0  0100               	movlb	0	; () banked
  8423  002EB2  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  8424  002EB4  0100               	movlb	0	; () banked
  8425  002EB6  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8426  002EB8  0100               	movlb	0	; () banked
  8427  002EBA  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  8428  002EBC  0100               	movlb	0	; () banked
  8429  002EBE  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8430  002EC0  0100               	movlb	0	; () banked
  8431  002EC2  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  8432                           
  8433                           ; BSR set to: 0
  8434  002EC4  0100               	movlb	0	; () banked
  8435  002EC6  8168               	bsf	___lldiv@quotient& (0+255),0,b
  8436  002EC8                     l4540:
  8437                           
  8438                           ; BSR set to: 0
  8439  002EC8  0100               	movlb	0	; () banked
  8440  002ECA  90D8               	bcf	status,0,c
  8441  002ECC  0100               	movlb	0	; () banked
  8442  002ECE  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  8443  002ED0  0100               	movlb	0	; () banked
  8444  002ED2  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  8445  002ED4  0100               	movlb	0	; () banked
  8446  002ED6  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  8447  002ED8  0100               	movlb	0	; () banked
  8448  002EDA  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  8449                           
  8450                           ; BSR set to: 0
  8451  002EDC  0100               	movlb	0	; () banked
  8452  002EDE  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  8453  002EE0  D7C5               	goto	l4532
  8454  002EE2                     l1144:
  8455                           
  8456                           ; BSR set to: 0
  8457  002EE2  C068  F060         	movff	___lldiv@quotient,?___lldiv
  8458  002EE6  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  8459  002EEA  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  8460  002EEE  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  8461                           
  8462                           ; BSR set to: 0
  8463  002EF2  0012               	return	
  8464  002EF4                     __end_of___lldiv:
  8465                           	opt stack 0
  8466                           tblptru	equ	0xFF8
  8467                           tblptrh	equ	0xFF7
  8468                           tblptrl	equ	0xFF6
  8469                           tablat	equ	0xFF5
  8470                           prodh	equ	0xFF4
  8471                           prodl	equ	0xFF3
  8472                           intcon	equ	0xFF2
  8473                           intcon2	equ	0xFF1
  8474                           postinc0	equ	0xFEE
  8475                           wreg	equ	0xFE8
  8476                           postdec1	equ	0xFE5
  8477                           fsr1l	equ	0xFE1
  8478                           indf2	equ	0xFDF
  8479                           postinc2	equ	0xFDE
  8480                           postdec2	equ	0xFDD
  8481                           fsr2h	equ	0xFDA
  8482                           fsr2l	equ	0xFD9
  8483                           status	equ	0xFD8
  8484                           
  8485 ;; *************** function _caltime_to_RTCC *****************
  8486 ;; Defined at:
  8487 ;;		line 142 in file "../My_header\My_RTCC.h"
  8488 ;; Parameters:    Size  Location     Type
  8489 ;;  ct              2    9[BANK0 ] PTR struct .
  8490 ;;		 -> caltime_now(7), 
  8491 ;; Auto vars:     Size  Location     Type
  8492 ;;		None
  8493 ;; Return value:  Size  Location     Type
  8494 ;;		None               void
  8495 ;; Registers used:
  8496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8497 ;; Tracked objects:
  8498 ;;		On entry : 0/0
  8499 ;;		On exit  : 0/0
  8500 ;;		Unchanged: 0/0
  8501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8502 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8505 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8506 ;;Total ram usage:        2 bytes
  8507 ;; Hardware stack levels used:    1
  8508 ;; Hardware stack levels required when called:    6
  8509 ;; This function calls:
  8510 ;;		_d_to_x
  8511 ;; This function is called by:
  8512 ;;		_RTCC_from_epoch
  8513 ;;		_RTCC_from_caltime
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516                           
  8517                           	psect	text42
  8518  002AA0                     __ptext42:
  8519                           	opt stack 0
  8520  002AA0                     _caltime_to_RTCC:
  8521                           	opt stack 21
  8522                           
  8523                           ;My_header\My_RTCC.h: 144: RTCCFGbits.RTCPTR0 = 1;
  8524                           
  8525                           ; BSR set to: 0
  8526                           ;incstack = 0
  8527  002AA0  010F               	movlb	15	; () banked
  8528  002AA2  813F               	bsf	63,0,b	;volatile
  8529                           
  8530                           ;My_header\My_RTCC.h: 145: RTCCFGbits.RTCPTR1 = 1;
  8531  002AA4  010F               	movlb	15	; () banked
  8532  002AA6  833F               	bsf	63,1,b	;volatile
  8533                           
  8534                           ; BSR set to: 15
  8535                           ;My_header\My_RTCC.h: 146: RTCVALL = d_to_x(ct->YY);
  8536  002AA8  0100               	movlb	0	; () banked
  8537  002AAA  EE20 F006          	lfsr	2,6
  8538  002AAE  0100               	movlb	0	; () banked
  8539  002AB0  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
  8540  002AB2  26D9               	addwf	fsr2l,f,c
  8541  002AB4  0100               	movlb	0	; () banked
  8542  002AB6  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  8543  002AB8  22DA               	addwfc	fsr2h,f,c
  8544  002ABA  50DF               	movf	indf2,w,c
  8545  002ABC  EC7D  F01F         	call	_d_to_x
  8546  002AC0  010F               	movlb	15	; () banked
  8547  002AC2  6F3A               	movwf	58,b	;volatile
  8548                           
  8549                           ; BSR set to: 15
  8550                           ;My_header\My_RTCC.h: 147: RTCVALH = 0x00;
  8551  002AC4  0E00               	movlw	0
  8552  002AC6  010F               	movlb	15	; () banked
  8553  002AC8  6F3B               	movwf	59,b	;volatile
  8554                           
  8555                           ; BSR set to: 15
  8556                           ;My_header\My_RTCC.h: 148: RTCCFGbits.RTCPTR0 = 0;
  8557  002ACA  010F               	movlb	15	; () banked
  8558  002ACC  913F               	bcf	63,0,b	;volatile
  8559                           
  8560                           ; BSR set to: 15
  8561                           ;My_header\My_RTCC.h: 149: RTCCFGbits.RTCPTR1 = 1;
  8562  002ACE  010F               	movlb	15	; () banked
  8563  002AD0  833F               	bsf	63,1,b	;volatile
  8564                           
  8565                           ; BSR set to: 15
  8566                           ;My_header\My_RTCC.h: 150: RTCVALL = d_to_x(ct->DD);
  8567  002AD2  0100               	movlb	0	; () banked
  8568  002AD4  EE20 F004          	lfsr	2,4
  8569  002AD8  0100               	movlb	0	; () banked
  8570  002ADA  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
  8571  002ADC  26D9               	addwf	fsr2l,f,c
  8572  002ADE  0100               	movlb	0	; () banked
  8573  002AE0  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  8574  002AE2  22DA               	addwfc	fsr2h,f,c
  8575  002AE4  50DF               	movf	indf2,w,c
  8576  002AE6  EC7D  F01F         	call	_d_to_x
  8577  002AEA  010F               	movlb	15	; () banked
  8578  002AEC  6F3A               	movwf	58,b	;volatile
  8579                           
  8580                           ; BSR set to: 15
  8581                           ;My_header\My_RTCC.h: 151: RTCVALH = d_to_x(ct->MM);
  8582  002AEE  0100               	movlb	0	; () banked
  8583  002AF0  EE20 F005          	lfsr	2,5
  8584  002AF4  0100               	movlb	0	; () banked
  8585  002AF6  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
  8586  002AF8  26D9               	addwf	fsr2l,f,c
  8587  002AFA  0100               	movlb	0	; () banked
  8588  002AFC  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  8589  002AFE  22DA               	addwfc	fsr2h,f,c
  8590  002B00  50DF               	movf	indf2,w,c
  8591  002B02  EC7D  F01F         	call	_d_to_x
  8592  002B06  010F               	movlb	15	; () banked
  8593  002B08  6F3B               	movwf	59,b	;volatile
  8594                           
  8595                           ; BSR set to: 15
  8596                           ;My_header\My_RTCC.h: 152: RTCCFGbits.RTCPTR0 = 1;
  8597  002B0A  010F               	movlb	15	; () banked
  8598  002B0C  813F               	bsf	63,0,b	;volatile
  8599                           
  8600                           ; BSR set to: 15
  8601                           ;My_header\My_RTCC.h: 153: RTCCFGbits.RTCPTR1 = 0;
  8602  002B0E  010F               	movlb	15	; () banked
  8603  002B10  933F               	bcf	63,1,b	;volatile
  8604                           
  8605                           ; BSR set to: 15
  8606                           ;My_header\My_RTCC.h: 154: RTCVALL = d_to_x(ct->hh);
  8607  002B12  0100               	movlb	0	; () banked
  8608  002B14  EE20 F002          	lfsr	2,2
  8609  002B18  0100               	movlb	0	; () banked
  8610  002B1A  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
  8611  002B1C  26D9               	addwf	fsr2l,f,c
  8612  002B1E  0100               	movlb	0	; () banked
  8613  002B20  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  8614  002B22  22DA               	addwfc	fsr2h,f,c
  8615  002B24  50DF               	movf	indf2,w,c
  8616  002B26  EC7D  F01F         	call	_d_to_x
  8617  002B2A  010F               	movlb	15	; () banked
  8618  002B2C  6F3A               	movwf	58,b	;volatile
  8619                           
  8620                           ; BSR set to: 15
  8621                           ;My_header\My_RTCC.h: 155: RTCVALH = d_to_x(ct->EE);
  8622  002B2E  0100               	movlb	0	; () banked
  8623  002B30  EE20 F003          	lfsr	2,3
  8624  002B34  0100               	movlb	0	; () banked
  8625  002B36  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
  8626  002B38  26D9               	addwf	fsr2l,f,c
  8627  002B3A  0100               	movlb	0	; () banked
  8628  002B3C  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  8629  002B3E  22DA               	addwfc	fsr2h,f,c
  8630  002B40  50DF               	movf	indf2,w,c
  8631  002B42  EC7D  F01F         	call	_d_to_x
  8632  002B46  010F               	movlb	15	; () banked
  8633  002B48  6F3B               	movwf	59,b	;volatile
  8634                           
  8635                           ; BSR set to: 15
  8636                           ;My_header\My_RTCC.h: 156: RTCCFGbits.RTCPTR0 = 0;
  8637  002B4A  010F               	movlb	15	; () banked
  8638  002B4C  913F               	bcf	63,0,b	;volatile
  8639                           
  8640                           ; BSR set to: 15
  8641                           ;My_header\My_RTCC.h: 157: RTCCFGbits.RTCPTR1 = 0;
  8642  002B4E  010F               	movlb	15	; () banked
  8643  002B50  933F               	bcf	63,1,b	;volatile
  8644                           
  8645                           ; BSR set to: 15
  8646                           ;My_header\My_RTCC.h: 158: RTCVALL = d_to_x(ct->ss);
  8647  002B52  C069  FFD9         	movff	caltime_to_RTCC@ct,fsr2l
  8648  002B56  C06A  FFDA         	movff	caltime_to_RTCC@ct+1,fsr2h
  8649  002B5A  50DF               	movf	indf2,w,c
  8650  002B5C  EC7D  F01F         	call	_d_to_x
  8651  002B60  010F               	movlb	15	; () banked
  8652  002B62  6F3A               	movwf	58,b	;volatile
  8653                           
  8654                           ; BSR set to: 15
  8655                           ;My_header\My_RTCC.h: 159: RTCVALH = d_to_x(ct->mm);
  8656  002B64  0100               	movlb	0	; () banked
  8657  002B66  EE20 F001          	lfsr	2,1
  8658  002B6A  0100               	movlb	0	; () banked
  8659  002B6C  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
  8660  002B6E  26D9               	addwf	fsr2l,f,c
  8661  002B70  0100               	movlb	0	; () banked
  8662  002B72  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  8663  002B74  22DA               	addwfc	fsr2h,f,c
  8664  002B76  50DF               	movf	indf2,w,c
  8665  002B78  EC7D  F01F         	call	_d_to_x
  8666  002B7C  010F               	movlb	15	; () banked
  8667  002B7E  6F3B               	movwf	59,b	;volatile
  8668                           
  8669                           ; BSR set to: 15
  8670  002B80  0012               	return	
  8671  002B82                     __end_of_caltime_to_RTCC:
  8672                           	opt stack 0
  8673                           tblptru	equ	0xFF8
  8674                           tblptrh	equ	0xFF7
  8675                           tblptrl	equ	0xFF6
  8676                           tablat	equ	0xFF5
  8677                           prodh	equ	0xFF4
  8678                           prodl	equ	0xFF3
  8679                           intcon	equ	0xFF2
  8680                           intcon2	equ	0xFF1
  8681                           postinc0	equ	0xFEE
  8682                           wreg	equ	0xFE8
  8683                           postdec1	equ	0xFE5
  8684                           fsr1l	equ	0xFE1
  8685                           indf2	equ	0xFDF
  8686                           postinc2	equ	0xFDE
  8687                           postdec2	equ	0xFDD
  8688                           fsr2h	equ	0xFDA
  8689                           fsr2l	equ	0xFD9
  8690                           status	equ	0xFD8
  8691                           
  8692 ;; *************** function _d_to_x *****************
  8693 ;; Defined at:
  8694 ;;		line 70 in file "../My_header\My_RTCC.h"
  8695 ;; Parameters:    Size  Location     Type
  8696 ;;  dec             1    wreg     unsigned char 
  8697 ;; Auto vars:     Size  Location     Type
  8698 ;;  dec             1    8[BANK0 ] unsigned char 
  8699 ;; Return value:  Size  Location     Type
  8700 ;;                  1    wreg      unsigned char 
  8701 ;; Registers used:
  8702 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8703 ;; Tracked objects:
  8704 ;;		On entry : 0/0
  8705 ;;		On exit  : 0/0
  8706 ;;		Unchanged: 0/0
  8707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8709 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8711 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8712 ;;Total ram usage:        1 bytes
  8713 ;; Hardware stack levels used:    1
  8714 ;; Hardware stack levels required when called:    5
  8715 ;; This function calls:
  8716 ;;		___awdiv
  8717 ;; This function is called by:
  8718 ;;		_caltime_to_RTCC
  8719 ;; This function uses a non-reentrant model
  8720 ;;
  8721                           
  8722                           	psect	text43
  8723  003EFA                     __ptext43:
  8724                           	opt stack 0
  8725  003EFA                     _d_to_x:
  8726                           	opt stack 21
  8727                           
  8728                           ; BSR set to: 15
  8729                           ;incstack = 0
  8730                           ;d_to_x@dec stored from wreg
  8731  003EFA  0100               	movlb	0	; () banked
  8732  003EFC  6F68               	movwf	d_to_x@dec& (0+255),b
  8733                           
  8734                           ; BSR set to: 0
  8735                           ;My_header\My_RTCC.h: 73: return dec / 10 * 6 + dec;
  8736  003EFE  0100               	movlb	0	; () banked
  8737  003F00  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
  8738  003F04  0100               	movlb	0	; () banked
  8739  003F06  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  8740  003F08  0E00               	movlw	0
  8741  003F0A  0100               	movlb	0	; () banked
  8742  003F0C  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  8743  003F0E  0E0A               	movlw	10
  8744  003F10  0100               	movlb	0	; () banked
  8745  003F12  6F62               	movwf	___awdiv@divisor& (0+255),b
  8746  003F14  ECC1  F015         	call	___awdiv	;wreg free
  8747  003F18  0100               	movlb	0	; () banked
  8748  003F1A  5160               	movf	?___awdiv& (0+255),w,b
  8749  003F1C  0D06               	mullw	6
  8750  003F1E  50F3               	movf	prodl,w,c
  8751  003F20  0100               	movlb	0	; () banked
  8752  003F22  2568               	addwf	d_to_x@dec& (0+255),w,b
  8753  003F24  0012               	return	
  8754  003F26                     __end_of_d_to_x:
  8755                           	opt stack 0
  8756                           tblptru	equ	0xFF8
  8757                           tblptrh	equ	0xFF7
  8758                           tblptrl	equ	0xFF6
  8759                           tablat	equ	0xFF5
  8760                           prodh	equ	0xFF4
  8761                           prodl	equ	0xFF3
  8762                           intcon	equ	0xFF2
  8763                           intcon2	equ	0xFF1
  8764                           postinc0	equ	0xFEE
  8765                           wreg	equ	0xFE8
  8766                           postdec1	equ	0xFE5
  8767                           fsr1l	equ	0xFE1
  8768                           indf2	equ	0xFDF
  8769                           postinc2	equ	0xFDE
  8770                           postdec2	equ	0xFDD
  8771                           fsr2h	equ	0xFDA
  8772                           fsr2l	equ	0xFD9
  8773                           status	equ	0xFD8
  8774                           
  8775 ;; *************** function ___awdiv *****************
  8776 ;; Defined at:
  8777 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  8778 ;; Parameters:    Size  Location     Type
  8779 ;;  dividend        2    0[BANK0 ] int 
  8780 ;;  divisor         2    2[BANK0 ] int 
  8781 ;; Auto vars:     Size  Location     Type
  8782 ;;  quotient        2    6[BANK0 ] int 
  8783 ;;  sign            1    5[BANK0 ] unsigned char 
  8784 ;;  counter         1    4[BANK0 ] unsigned char 
  8785 ;; Return value:  Size  Location     Type
  8786 ;;                  2    0[BANK0 ] int 
  8787 ;; Registers used:
  8788 ;;		wreg, status,2, status,0, prodl
  8789 ;; Tracked objects:
  8790 ;;		On entry : 0/0
  8791 ;;		On exit  : 0/0
  8792 ;;		Unchanged: 0/0
  8793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8794 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8795 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8797 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8798 ;;Total ram usage:        8 bytes
  8799 ;; Hardware stack levels used:    1
  8800 ;; Hardware stack levels required when called:    4
  8801 ;; This function calls:
  8802 ;;		Nothing
  8803 ;; This function is called by:
  8804 ;;		_d_to_x
  8805 ;; This function uses a non-reentrant model
  8806 ;;
  8807                           
  8808                           	psect	text44
  8809  002B82                     __ptext44:
  8810                           	opt stack 0
  8811  002B82                     ___awdiv:
  8812                           	opt stack 21
  8813                           
  8814                           ; BSR set to: 0
  8815                           ;incstack = 0
  8816  002B82  0E00               	movlw	0
  8817  002B84  0100               	movlb	0	; () banked
  8818  002B86  6F65               	movwf	___awdiv@sign& (0+255),b
  8819                           
  8820                           ; BSR set to: 0
  8821  002B88  0100               	movlb	0	; () banked
  8822  002B8A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8823  002B8C  0A80               	xorlw	128
  8824  002B8E  6EF3               	movwf	prodl,c
  8825  002B90  0E80               	movlw	128
  8826  002B92  5CF3               	subwf	prodl,w,c
  8827  002B94  0E00               	movlw	0
  8828  002B96  B4D8               	btfsc	status,2,c
  8829  002B98  5D62               	subwf	___awdiv@divisor& (0+255),w,b
  8830  002B9A  B0D8               	btfsc	status,0,c
  8831  002B9C  D009               	goto	l4450
  8832                           
  8833                           ; BSR set to: 0
  8834  002B9E  0100               	movlb	0	; () banked
  8835  002BA0  6D62               	negf	___awdiv@divisor& (0+255),b
  8836  002BA2  0100               	movlb	0	; () banked
  8837  002BA4  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8838  002BA6  B0D8               	btfsc	status,0,c
  8839  002BA8  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8840                           
  8841                           ; BSR set to: 0
  8842  002BAA  0E01               	movlw	1
  8843  002BAC  0100               	movlb	0	; () banked
  8844  002BAE  6F65               	movwf	___awdiv@sign& (0+255),b
  8845  002BB0                     l4450:
  8846                           
  8847                           ; BSR set to: 0
  8848  002BB0  0100               	movlb	0	; () banked
  8849  002BB2  5161               	movf	(___awdiv@dividend+1)& (0+255),w,b
  8850  002BB4  0A80               	xorlw	128
  8851  002BB6  6EF3               	movwf	prodl,c
  8852  002BB8  0E80               	movlw	128
  8853  002BBA  5CF3               	subwf	prodl,w,c
  8854  002BBC  0E00               	movlw	0
  8855  002BBE  B4D8               	btfsc	status,2,c
  8856  002BC0  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  8857  002BC2  B0D8               	btfsc	status,0,c
  8858  002BC4  D009               	goto	l4456
  8859                           
  8860                           ; BSR set to: 0
  8861  002BC6  0100               	movlb	0	; () banked
  8862  002BC8  6D60               	negf	___awdiv@dividend& (0+255),b
  8863  002BCA  0100               	movlb	0	; () banked
  8864  002BCC  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8865  002BCE  B0D8               	btfsc	status,0,c
  8866  002BD0  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8867                           
  8868                           ; BSR set to: 0
  8869  002BD2  0E01               	movlw	1
  8870  002BD4  0100               	movlb	0	; () banked
  8871  002BD6  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  8872  002BD8                     l4456:
  8873                           
  8874                           ; BSR set to: 0
  8875  002BD8  0E00               	movlw	0
  8876  002BDA  0100               	movlb	0	; () banked
  8877  002BDC  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  8878  002BDE  0E00               	movlw	0
  8879  002BE0  0100               	movlb	0	; () banked
  8880  002BE2  6F66               	movwf	___awdiv@quotient& (0+255),b
  8881                           
  8882                           ; BSR set to: 0
  8883  002BE4  0100               	movlb	0	; () banked
  8884  002BE6  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8885  002BE8  1162               	iorwf	___awdiv@divisor& (0+255),w,b
  8886  002BEA  B4D8               	btfsc	status,2,c
  8887  002BEC  D02C               	goto	l4478
  8888                           
  8889                           ; BSR set to: 0
  8890  002BEE  0E01               	movlw	1
  8891  002BF0  0100               	movlb	0	; () banked
  8892  002BF2  6F64               	movwf	___awdiv@counter& (0+255),b
  8893  002BF4  D006               	goto	l4464
  8894  002BF6                     l4462:
  8895                           
  8896                           ; BSR set to: 0
  8897  002BF6  0100               	movlb	0	; () banked
  8898  002BF8  90D8               	bcf	status,0,c
  8899  002BFA  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  8900  002BFC  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8901  002BFE  0100               	movlb	0	; () banked
  8902  002C00  2B64               	incf	___awdiv@counter& (0+255),f,b
  8903  002C02                     l4464:
  8904                           
  8905                           ; BSR set to: 0
  8906  002C02  0100               	movlb	0	; () banked
  8907  002C04  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8908  002C06  D7F7               	goto	l4462
  8909  002C08                     l4466:
  8910                           
  8911                           ; BSR set to: 0
  8912  002C08  0100               	movlb	0	; () banked
  8913  002C0A  90D8               	bcf	status,0,c
  8914  002C0C  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  8915  002C0E  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8916                           
  8917                           ; BSR set to: 0
  8918  002C10  0100               	movlb	0	; () banked
  8919  002C12  5162               	movf	___awdiv@divisor& (0+255),w,b
  8920  002C14  0100               	movlb	0	; () banked
  8921  002C16  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  8922  002C18  0100               	movlb	0	; () banked
  8923  002C1A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8924  002C1C  0100               	movlb	0	; () banked
  8925  002C1E  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8926  002C20  A0D8               	btfss	status,0,c
  8927  002C22  D00A               	goto	l4474
  8928                           
  8929                           ; BSR set to: 0
  8930  002C24  0100               	movlb	0	; () banked
  8931  002C26  5162               	movf	___awdiv@divisor& (0+255),w,b
  8932  002C28  0100               	movlb	0	; () banked
  8933  002C2A  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  8934  002C2C  0100               	movlb	0	; () banked
  8935  002C2E  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8936  002C30  0100               	movlb	0	; () banked
  8937  002C32  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8938                           
  8939                           ; BSR set to: 0
  8940  002C34  0100               	movlb	0	; () banked
  8941  002C36  8166               	bsf	___awdiv@quotient& (0+255),0,b
  8942  002C38                     l4474:
  8943                           
  8944                           ; BSR set to: 0
  8945  002C38  0100               	movlb	0	; () banked
  8946  002C3A  90D8               	bcf	status,0,c
  8947  002C3C  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8948  002C3E  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  8949                           
  8950                           ; BSR set to: 0
  8951  002C40  0100               	movlb	0	; () banked
  8952  002C42  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  8953  002C44  D7E1               	goto	l4466
  8954  002C46                     l4478:
  8955                           
  8956                           ; BSR set to: 0
  8957  002C46  0100               	movlb	0	; () banked
  8958  002C48  5165               	movf	___awdiv@sign& (0+255),w,b
  8959  002C4A  B4D8               	btfsc	status,2,c
  8960  002C4C  D006               	goto	l4482
  8961                           
  8962                           ; BSR set to: 0
  8963  002C4E  0100               	movlb	0	; () banked
  8964  002C50  6D66               	negf	___awdiv@quotient& (0+255),b
  8965  002C52  0100               	movlb	0	; () banked
  8966  002C54  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8967  002C56  B0D8               	btfsc	status,0,c
  8968  002C58  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8969  002C5A                     l4482:
  8970                           
  8971                           ; BSR set to: 0
  8972  002C5A  C066  F060         	movff	___awdiv@quotient,?___awdiv
  8973  002C5E  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  8974  002C62  0012               	return	
  8975  002C64                     __end_of___awdiv:
  8976                           	opt stack 0
  8977                           tblptru	equ	0xFF8
  8978                           tblptrh	equ	0xFF7
  8979                           tblptrl	equ	0xFF6
  8980                           tablat	equ	0xFF5
  8981                           prodh	equ	0xFF4
  8982                           prodl	equ	0xFF3
  8983                           intcon	equ	0xFF2
  8984                           intcon2	equ	0xFF1
  8985                           postinc0	equ	0xFEE
  8986                           wreg	equ	0xFE8
  8987                           postdec1	equ	0xFE5
  8988                           fsr1l	equ	0xFE1
  8989                           indf2	equ	0xFDF
  8990                           postinc2	equ	0xFDE
  8991                           postdec2	equ	0xFDD
  8992                           fsr2h	equ	0xFDA
  8993                           fsr2l	equ	0xFD9
  8994                           status	equ	0xFD8
  8995                           
  8996 ;; *************** function _RTCC_from_RTCC *****************
  8997 ;; Defined at:
  8998 ;;		line 237 in file "../My_header\My_RTCC.h"
  8999 ;; Parameters:    Size  Location     Type
  9000 ;;  ct              2   44[BANK0 ] PTR struct .
  9001 ;;		 -> caltime_now(7), 
  9002 ;;  ep              2   46[BANK0 ] PTR unsigned long 
  9003 ;;		 -> epoch_now(4), 
  9004 ;; Auto vars:     Size  Location     Type
  9005 ;;		None
  9006 ;; Return value:  Size  Location     Type
  9007 ;;		None               void
  9008 ;; Registers used:
  9009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9010 ;; Tracked objects:
  9011 ;;		On entry : 0/0
  9012 ;;		On exit  : 0/0
  9013 ;;		Unchanged: 0/0
  9014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9015 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9018 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9019 ;;Total ram usage:        4 bytes
  9020 ;; Hardware stack levels used:    1
  9021 ;; Hardware stack levels required when called:    7
  9022 ;; This function calls:
  9023 ;;		_RTCC_to_caltime
  9024 ;;		_caltime_to_epoch
  9025 ;; This function is called by:
  9026 ;;		_display_time
  9027 ;;		_RTCC_time_set_inc
  9028 ;;		_RTCC_time_set_dec
  9029 ;;		_sleep_loop
  9030 ;;		_main
  9031 ;; This function uses a non-reentrant model
  9032 ;;
  9033                           
  9034                           	psect	text45
  9035  003E74                     __ptext45:
  9036                           	opt stack 0
  9037  003E74                     _RTCC_from_RTCC:
  9038                           	opt stack 22
  9039                           
  9040                           ;My_header\My_RTCC.h: 238: RTCC_to_caltime(ct);
  9041                           
  9042                           ; BSR set to: 0
  9043                           ;incstack = 0
  9044  003E74  0100               	movlb	0	; () banked
  9045  003E76  C08D  F063         	movff	RTCC_from_RTCC@ct+1,RTCC_to_caltime@ct+1
  9046  003E7A  0100               	movlb	0	; () banked
  9047  003E7C  C08C  F062         	movff	RTCC_from_RTCC@ct,RTCC_to_caltime@ct
  9048  003E80  ECE3  F017         	call	_RTCC_to_caltime	;wreg free
  9049                           
  9050                           ;My_header\My_RTCC.h: 239: caltime_to_epoch(ct, ep);
  9051  003E84  0100               	movlb	0	; () banked
  9052  003E86  C08D  F07A         	movff	RTCC_from_RTCC@ct+1,caltime_to_epoch@ct+1
  9053  003E8A  0100               	movlb	0	; () banked
  9054  003E8C  C08C  F079         	movff	RTCC_from_RTCC@ct,caltime_to_epoch@ct
  9055  003E90  0100               	movlb	0	; () banked
  9056  003E92  C08F  F07C         	movff	RTCC_from_RTCC@ep+1,caltime_to_epoch@ep+1
  9057  003E96  0100               	movlb	0	; () banked
  9058  003E98  C08E  F07B         	movff	RTCC_from_RTCC@ep,caltime_to_epoch@ep
  9059  003E9C  ECD9  F007         	call	_caltime_to_epoch	;wreg free
  9060  003EA0  0012               	return	
  9061  003EA2                     __end_of_RTCC_from_RTCC:
  9062                           	opt stack 0
  9063                           tblptru	equ	0xFF8
  9064                           tblptrh	equ	0xFF7
  9065                           tblptrl	equ	0xFF6
  9066                           tablat	equ	0xFF5
  9067                           prodh	equ	0xFF4
  9068                           prodl	equ	0xFF3
  9069                           intcon	equ	0xFF2
  9070                           intcon2	equ	0xFF1
  9071                           postinc0	equ	0xFEE
  9072                           wreg	equ	0xFE8
  9073                           postdec1	equ	0xFE5
  9074                           fsr1l	equ	0xFE1
  9075                           indf2	equ	0xFDF
  9076                           postinc2	equ	0xFDE
  9077                           postdec2	equ	0xFDD
  9078                           fsr2h	equ	0xFDA
  9079                           fsr2l	equ	0xFD9
  9080                           status	equ	0xFD8
  9081                           
  9082 ;; *************** function _caltime_to_epoch *****************
  9083 ;; Defined at:
  9084 ;;		line 219 in file "../My_header\My_RTCC.h"
  9085 ;; Parameters:    Size  Location     Type
  9086 ;;  ct              2   25[BANK0 ] PTR struct .
  9087 ;;		 -> caltime_now(7), 
  9088 ;;  ep              2   27[BANK0 ] PTR unsigned long 
  9089 ;;		 -> epoch_now(4), 
  9090 ;; Auto vars:     Size  Location     Type
  9091 ;;  month           1   43[BANK0 ] unsigned char 
  9092 ;;  month           1   38[BANK0 ] unsigned char 
  9093 ;;  year            1   37[BANK0 ] unsigned char 
  9094 ;;  epoch           4   39[BANK0 ] unsigned long 
  9095 ;; Return value:  Size  Location     Type
  9096 ;;		None               void
  9097 ;; Registers used:
  9098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  9099 ;; Tracked objects:
  9100 ;;		On entry : 0/0
  9101 ;;		On exit  : 0/0
  9102 ;;		Unchanged: 0/0
  9103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9104 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9105 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9106 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9107 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9108 ;;Total ram usage:       19 bytes
  9109 ;; Hardware stack levels used:    1
  9110 ;; Hardware stack levels required when called:    6
  9111 ;; This function calls:
  9112 ;;		___lmul
  9113 ;;		_month_length
  9114 ;; This function is called by:
  9115 ;;		_RTCC_from_RTCC
  9116 ;;		_RTCC_from_caltime
  9117 ;; This function uses a non-reentrant model
  9118 ;;
  9119                           
  9120                           	psect	text46
  9121  000FB2                     __ptext46:
  9122                           	opt stack 0
  9123  000FB2                     _caltime_to_epoch:
  9124                           	opt stack 22
  9125                           
  9126                           ;My_header\My_RTCC.h: 220: epoch_t epoch = 0;
  9127                           
  9128                           ;incstack = 0
  9129  000FB2  0E00               	movlw	0
  9130  000FB4  0100               	movlb	0	; () banked
  9131  000FB6  6F87               	movwf	caltime_to_epoch@epoch& (0+255),b
  9132  000FB8  0E00               	movlw	0
  9133  000FBA  0100               	movlb	0	; () banked
  9134  000FBC  6F88               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
  9135  000FBE  0E00               	movlw	0
  9136  000FC0  0100               	movlb	0	; () banked
  9137  000FC2  6F89               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
  9138  000FC4  0E00               	movlw	0
  9139  000FC6  0100               	movlb	0	; () banked
  9140  000FC8  6F8A               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
  9141                           
  9142                           ;My_header\My_RTCC.h: 221: for (uint8_t year = 0; year < ct->YY; year++) {
  9143  000FCA  0E00               	movlw	0
  9144  000FCC  0100               	movlb	0	; () banked
  9145  000FCE  6F85               	movwf	caltime_to_epoch@year& (0+255),b
  9146  000FD0  D044               	goto	l4776
  9147  000FD2                     l4762:
  9148                           
  9149                           ; BSR set to: 0
  9150                           ;My_header\My_RTCC.h: 222: for (uint8_t month = 1; month <= 12; month++) {
  9151  000FD2  0E01               	movlw	1
  9152  000FD4  0100               	movlb	0	; () banked
  9153  000FD6  6F8B               	movwf	caltime_to_epoch@month& (0+255),b
  9154  000FD8  D03A               	goto	L12
  9155  000FDA                     l4768:
  9156                           
  9157                           ; BSR set to: 0
  9158                           ;My_header\My_RTCC.h: 223: epoch += ((epoch_t)60*60*24) * month_length(year, month);
  9159  000FDA  C08B  F066         	movff	caltime_to_epoch@month,month_length@month
  9160  000FDE  0100               	movlb	0	; () banked
  9161  000FE0  5185               	movf	caltime_to_epoch@year& (0+255),w,b
  9162  000FE2  EC32  F016         	call	_month_length
  9163  000FE6  0100               	movlb	0	; () banked
  9164  000FE8  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
  9165  000FEA  0100               	movlb	0	; () banked
  9166  000FEC  517D               	movf	??_caltime_to_epoch& (0+255),w,b
  9167  000FEE  0100               	movlb	0	; () banked
  9168  000FF0  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9169  000FF2  0100               	movlb	0	; () banked
  9170  000FF4  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9171  000FF6  0100               	movlb	0	; () banked
  9172  000FF8  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9173  000FFA  0100               	movlb	0	; () banked
  9174  000FFC  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9175  000FFE  0E80               	movlw	128
  9176  001000  0100               	movlb	0	; () banked
  9177  001002  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9178  001004  0E51               	movlw	81
  9179  001006  0100               	movlb	0	; () banked
  9180  001008  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9181  00100A  0E01               	movlw	1
  9182  00100C  0100               	movlb	0	; () banked
  9183  00100E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9184  001010  0E00               	movlw	0
  9185  001012  0100               	movlb	0	; () banked
  9186  001014  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9187  001016  EC96  F01A         	call	___lmul	;wreg free
  9188  00101A  C06D  F07E         	movff	?___lmul,??_caltime_to_epoch+1
  9189  00101E  C06E  F07F         	movff	?___lmul+1,??_caltime_to_epoch+2
  9190  001022  C06F  F080         	movff	?___lmul+2,??_caltime_to_epoch+3
  9191  001026  C070  F081         	movff	?___lmul+3,??_caltime_to_epoch+4
  9192  00102A  0100               	movlb	0	; () banked
  9193  00102C  517E               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  9194  00102E  0100               	movlb	0	; () banked
  9195  001030  2787               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9196  001032  0100               	movlb	0	; () banked
  9197  001034  517F               	movf	(??_caltime_to_epoch+2)& (0+255),w,b
  9198  001036  0100               	movlb	0	; () banked
  9199  001038  2388               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9200  00103A  0100               	movlb	0	; () banked
  9201  00103C  5180               	movf	(??_caltime_to_epoch+3)& (0+255),w,b
  9202  00103E  0100               	movlb	0	; () banked
  9203  001040  2389               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9204  001042  0100               	movlb	0	; () banked
  9205  001044  5181               	movf	(??_caltime_to_epoch+4)& (0+255),w,b
  9206  001046  0100               	movlb	0	; () banked
  9207  001048  238A               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9208                           
  9209                           ; BSR set to: 0
  9210  00104A  0100               	movlb	0	; () banked
  9211  00104C  2B8B               	incf	caltime_to_epoch@month& (0+255),f,b
  9212  00104E                     L12:
  9213                           
  9214                           ; BSR set to: 0
  9215  00104E  0E0C               	movlw	12
  9216  001050  0100               	movlb	0	; () banked
  9217  001052  658B               	cpfsgt	caltime_to_epoch@month& (0+255),b
  9218  001054  D7C2               	goto	l4768
  9219                           
  9220                           ; BSR set to: 0
  9221                           
  9222                           ; BSR set to: 0
  9223  001056  0100               	movlb	0	; () banked
  9224  001058  2B85               	incf	caltime_to_epoch@year& (0+255),f,b
  9225  00105A                     l4776:
  9226                           
  9227                           ; BSR set to: 0
  9228  00105A  0100               	movlb	0	; () banked
  9229  00105C  EE20 F006          	lfsr	2,6
  9230  001060  0100               	movlb	0	; () banked
  9231  001062  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
  9232  001064  26D9               	addwf	fsr2l,f,c
  9233  001066  0100               	movlb	0	; () banked
  9234  001068  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  9235  00106A  22DA               	addwfc	fsr2h,f,c
  9236  00106C  50DF               	movf	indf2,w,c
  9237  00106E  0100               	movlb	0	; () banked
  9238  001070  5D85               	subwf	caltime_to_epoch@year& (0+255),w,b
  9239  001072  A0D8               	btfss	status,0,c
  9240  001074  D7AE               	goto	l4762
  9241                           
  9242                           ; BSR set to: 0
  9243                           ;My_header\My_RTCC.h: 224: }
  9244                           ;My_header\My_RTCC.h: 225: }
  9245                           ;My_header\My_RTCC.h: 226: for (uint8_t month = 1; month < ct->MM; month++) {
  9246                           
  9247                           ; BSR set to: 0
  9248  001076  0E01               	movlw	1
  9249  001078  0100               	movlb	0	; () banked
  9250  00107A  6F86               	movwf	caltime_to_epoch@month_2136& (0+255),b
  9251  00107C  D042               	goto	l4784
  9252  00107E                     l4780:
  9253                           
  9254                           ; BSR set to: 0
  9255                           ;My_header\My_RTCC.h: 227: epoch += ((epoch_t)60*60*24) * month_length(ct->YY, month);
  9256  00107E  C086  F066         	movff	caltime_to_epoch@month_2136,month_length@month
  9257  001082  0100               	movlb	0	; () banked
  9258  001084  EE20 F006          	lfsr	2,6
  9259  001088  0100               	movlb	0	; () banked
  9260  00108A  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
  9261  00108C  26D9               	addwf	fsr2l,f,c
  9262  00108E  0100               	movlb	0	; () banked
  9263  001090  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  9264  001092  22DA               	addwfc	fsr2h,f,c
  9265  001094  50DF               	movf	indf2,w,c
  9266  001096  EC32  F016         	call	_month_length
  9267  00109A  0100               	movlb	0	; () banked
  9268  00109C  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
  9269  00109E  0100               	movlb	0	; () banked
  9270  0010A0  517D               	movf	??_caltime_to_epoch& (0+255),w,b
  9271  0010A2  0100               	movlb	0	; () banked
  9272  0010A4  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9273  0010A6  0100               	movlb	0	; () banked
  9274  0010A8  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9275  0010AA  0100               	movlb	0	; () banked
  9276  0010AC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9277  0010AE  0100               	movlb	0	; () banked
  9278  0010B0  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9279  0010B2  0E80               	movlw	128
  9280  0010B4  0100               	movlb	0	; () banked
  9281  0010B6  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9282  0010B8  0E51               	movlw	81
  9283  0010BA  0100               	movlb	0	; () banked
  9284  0010BC  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9285  0010BE  0E01               	movlw	1
  9286  0010C0  0100               	movlb	0	; () banked
  9287  0010C2  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9288  0010C4  0E00               	movlw	0
  9289  0010C6  0100               	movlb	0	; () banked
  9290  0010C8  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9291  0010CA  EC96  F01A         	call	___lmul	;wreg free
  9292  0010CE  C06D  F07E         	movff	?___lmul,??_caltime_to_epoch+1
  9293  0010D2  C06E  F07F         	movff	?___lmul+1,??_caltime_to_epoch+2
  9294  0010D6  C06F  F080         	movff	?___lmul+2,??_caltime_to_epoch+3
  9295  0010DA  C070  F081         	movff	?___lmul+3,??_caltime_to_epoch+4
  9296  0010DE  0100               	movlb	0	; () banked
  9297  0010E0  517E               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  9298  0010E2  0100               	movlb	0	; () banked
  9299  0010E4  2787               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9300  0010E6  0100               	movlb	0	; () banked
  9301  0010E8  517F               	movf	(??_caltime_to_epoch+2)& (0+255),w,b
  9302  0010EA  0100               	movlb	0	; () banked
  9303  0010EC  2388               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9304  0010EE  0100               	movlb	0	; () banked
  9305  0010F0  5180               	movf	(??_caltime_to_epoch+3)& (0+255),w,b
  9306  0010F2  0100               	movlb	0	; () banked
  9307  0010F4  2389               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9308  0010F6  0100               	movlb	0	; () banked
  9309  0010F8  5181               	movf	(??_caltime_to_epoch+4)& (0+255),w,b
  9310  0010FA  0100               	movlb	0	; () banked
  9311  0010FC  238A               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9312                           
  9313                           ; BSR set to: 0
  9314  0010FE  0100               	movlb	0	; () banked
  9315  001100  2B86               	incf	caltime_to_epoch@month_2136& (0+255),f,b
  9316  001102                     l4784:
  9317                           
  9318                           ; BSR set to: 0
  9319  001102  0100               	movlb	0	; () banked
  9320  001104  EE20 F005          	lfsr	2,5
  9321  001108  0100               	movlb	0	; () banked
  9322  00110A  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
  9323  00110C  26D9               	addwf	fsr2l,f,c
  9324  00110E  0100               	movlb	0	; () banked
  9325  001110  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  9326  001112  22DA               	addwfc	fsr2h,f,c
  9327  001114  50DF               	movf	indf2,w,c
  9328  001116  0100               	movlb	0	; () banked
  9329  001118  5D86               	subwf	caltime_to_epoch@month_2136& (0+255),w,b
  9330  00111A  A0D8               	btfss	status,0,c
  9331  00111C  D7B0               	goto	l4780
  9332                           
  9333                           ; BSR set to: 0
  9334                           ;My_header\My_RTCC.h: 228: }
  9335                           ;My_header\My_RTCC.h: 229: epoch += ((epoch_t)60*60*24) * (ct->DD - 1);
  9336                           
  9337                           ; BSR set to: 0
  9338  00111E  0EFF               	movlw	255
  9339  001120  0100               	movlb	0	; () banked
  9340  001122  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
  9341  001124  0EFF               	movlw	255
  9342  001126  6F7E               	movwf	(??_caltime_to_epoch+1)& (0+255),b
  9343  001128  0100               	movlb	0	; () banked
  9344  00112A  EE20 F004          	lfsr	2,4
  9345  00112E  0100               	movlb	0	; () banked
  9346  001130  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
  9347  001132  26D9               	addwf	fsr2l,f,c
  9348  001134  0100               	movlb	0	; () banked
  9349  001136  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  9350  001138  22DA               	addwfc	fsr2h,f,c
  9351  00113A  50DF               	movf	indf2,w,c
  9352  00113C  0100               	movlb	0	; () banked
  9353  00113E  6F7F               	movwf	(??_caltime_to_epoch+2)& (0+255),b
  9354  001140  6B80               	clrf	(??_caltime_to_epoch+3)& (0+255),b
  9355  001142  0100               	movlb	0	; () banked
  9356  001144  517D               	movf	??_caltime_to_epoch& (0+255),w,b
  9357  001146  0100               	movlb	0	; () banked
  9358  001148  277F               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
  9359  00114A  0100               	movlb	0	; () banked
  9360  00114C  517E               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  9361  00114E  0100               	movlb	0	; () banked
  9362  001150  2380               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
  9363  001152  0100               	movlb	0	; () banked
  9364  001154  C07F  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
  9365  001158  0100               	movlb	0	; () banked
  9366  00115A  C080  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
  9367  00115E  0100               	movlb	0	; () banked
  9368  001160  0E00               	movlw	0
  9369  001162  0100               	movlb	0	; () banked
  9370  001164  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  9371  001166  0EFF               	movlw	-1
  9372  001168  0100               	movlb	0	; () banked
  9373  00116A  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
  9374  00116C  0100               	movlb	0	; () banked
  9375  00116E  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
  9376  001170  0E80               	movlw	128
  9377  001172  0100               	movlb	0	; () banked
  9378  001174  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9379  001176  0E51               	movlw	81
  9380  001178  0100               	movlb	0	; () banked
  9381  00117A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9382  00117C  0E01               	movlw	1
  9383  00117E  0100               	movlb	0	; () banked
  9384  001180  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9385  001182  0E00               	movlw	0
  9386  001184  0100               	movlb	0	; () banked
  9387  001186  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9388  001188  EC96  F01A         	call	___lmul	;wreg free
  9389  00118C  C06D  F081         	movff	?___lmul,??_caltime_to_epoch+4
  9390  001190  C06E  F082         	movff	?___lmul+1,??_caltime_to_epoch+5
  9391  001194  C06F  F083         	movff	?___lmul+2,??_caltime_to_epoch+6
  9392  001198  C070  F084         	movff	?___lmul+3,??_caltime_to_epoch+7
  9393  00119C  0100               	movlb	0	; () banked
  9394  00119E  5181               	movf	(??_caltime_to_epoch+4)& (0+255),w,b
  9395  0011A0  0100               	movlb	0	; () banked
  9396  0011A2  2787               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9397  0011A4  0100               	movlb	0	; () banked
  9398  0011A6  5182               	movf	(??_caltime_to_epoch+5)& (0+255),w,b
  9399  0011A8  0100               	movlb	0	; () banked
  9400  0011AA  2388               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9401  0011AC  0100               	movlb	0	; () banked
  9402  0011AE  5183               	movf	(??_caltime_to_epoch+6)& (0+255),w,b
  9403  0011B0  0100               	movlb	0	; () banked
  9404  0011B2  2389               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9405  0011B4  0100               	movlb	0	; () banked
  9406  0011B6  5184               	movf	(??_caltime_to_epoch+7)& (0+255),w,b
  9407  0011B8  0100               	movlb	0	; () banked
  9408  0011BA  238A               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9409                           
  9410                           ;My_header\My_RTCC.h: 230: epoch += ((epoch_t)60*60) * ct->hh;
  9411  0011BC  0100               	movlb	0	; () banked
  9412  0011BE  EE20 F002          	lfsr	2,2
  9413  0011C2  0100               	movlb	0	; () banked
  9414  0011C4  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
  9415  0011C6  26D9               	addwf	fsr2l,f,c
  9416  0011C8  0100               	movlb	0	; () banked
  9417  0011CA  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  9418  0011CC  22DA               	addwfc	fsr2h,f,c
  9419  0011CE  50DF               	movf	indf2,w,c
  9420  0011D0  0100               	movlb	0	; () banked
  9421  0011D2  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
  9422  0011D4  0100               	movlb	0	; () banked
  9423  0011D6  517D               	movf	??_caltime_to_epoch& (0+255),w,b
  9424  0011D8  0100               	movlb	0	; () banked
  9425  0011DA  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9426  0011DC  0100               	movlb	0	; () banked
  9427  0011DE  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9428  0011E0  0100               	movlb	0	; () banked
  9429  0011E2  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9430  0011E4  0100               	movlb	0	; () banked
  9431  0011E6  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9432  0011E8  0E10               	movlw	16
  9433  0011EA  0100               	movlb	0	; () banked
  9434  0011EC  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9435  0011EE  0E0E               	movlw	14
  9436  0011F0  0100               	movlb	0	; () banked
  9437  0011F2  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9438  0011F4  0E00               	movlw	0
  9439  0011F6  0100               	movlb	0	; () banked
  9440  0011F8  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9441  0011FA  0E00               	movlw	0
  9442  0011FC  0100               	movlb	0	; () banked
  9443  0011FE  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9444  001200  EC96  F01A         	call	___lmul	;wreg free
  9445  001204  C06D  F07E         	movff	?___lmul,??_caltime_to_epoch+1
  9446  001208  C06E  F07F         	movff	?___lmul+1,??_caltime_to_epoch+2
  9447  00120C  C06F  F080         	movff	?___lmul+2,??_caltime_to_epoch+3
  9448  001210  C070  F081         	movff	?___lmul+3,??_caltime_to_epoch+4
  9449  001214  0100               	movlb	0	; () banked
  9450  001216  517E               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  9451  001218  0100               	movlb	0	; () banked
  9452  00121A  2787               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9453  00121C  0100               	movlb	0	; () banked
  9454  00121E  517F               	movf	(??_caltime_to_epoch+2)& (0+255),w,b
  9455  001220  0100               	movlb	0	; () banked
  9456  001222  2388               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9457  001224  0100               	movlb	0	; () banked
  9458  001226  5180               	movf	(??_caltime_to_epoch+3)& (0+255),w,b
  9459  001228  0100               	movlb	0	; () banked
  9460  00122A  2389               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9461  00122C  0100               	movlb	0	; () banked
  9462  00122E  5181               	movf	(??_caltime_to_epoch+4)& (0+255),w,b
  9463  001230  0100               	movlb	0	; () banked
  9464  001232  238A               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9465                           
  9466                           ;My_header\My_RTCC.h: 231: epoch += ((epoch_t)60) * ct->mm;
  9467  001234  0100               	movlb	0	; () banked
  9468  001236  EE20 F001          	lfsr	2,1
  9469  00123A  0100               	movlb	0	; () banked
  9470  00123C  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
  9471  00123E  26D9               	addwf	fsr2l,f,c
  9472  001240  0100               	movlb	0	; () banked
  9473  001242  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  9474  001244  22DA               	addwfc	fsr2h,f,c
  9475  001246  50DF               	movf	indf2,w,c
  9476  001248  0100               	movlb	0	; () banked
  9477  00124A  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
  9478  00124C  0100               	movlb	0	; () banked
  9479  00124E  517D               	movf	??_caltime_to_epoch& (0+255),w,b
  9480  001250  0100               	movlb	0	; () banked
  9481  001252  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9482  001254  0100               	movlb	0	; () banked
  9483  001256  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9484  001258  0100               	movlb	0	; () banked
  9485  00125A  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9486  00125C  0100               	movlb	0	; () banked
  9487  00125E  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9488  001260  0E3C               	movlw	60
  9489  001262  0100               	movlb	0	; () banked
  9490  001264  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9491  001266  0E00               	movlw	0
  9492  001268  0100               	movlb	0	; () banked
  9493  00126A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9494  00126C  0E00               	movlw	0
  9495  00126E  0100               	movlb	0	; () banked
  9496  001270  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9497  001272  0E00               	movlw	0
  9498  001274  0100               	movlb	0	; () banked
  9499  001276  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9500  001278  EC96  F01A         	call	___lmul	;wreg free
  9501  00127C  C06D  F07E         	movff	?___lmul,??_caltime_to_epoch+1
  9502  001280  C06E  F07F         	movff	?___lmul+1,??_caltime_to_epoch+2
  9503  001284  C06F  F080         	movff	?___lmul+2,??_caltime_to_epoch+3
  9504  001288  C070  F081         	movff	?___lmul+3,??_caltime_to_epoch+4
  9505  00128C  0100               	movlb	0	; () banked
  9506  00128E  517E               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  9507  001290  0100               	movlb	0	; () banked
  9508  001292  2787               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9509  001294  0100               	movlb	0	; () banked
  9510  001296  517F               	movf	(??_caltime_to_epoch+2)& (0+255),w,b
  9511  001298  0100               	movlb	0	; () banked
  9512  00129A  2388               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9513  00129C  0100               	movlb	0	; () banked
  9514  00129E  5180               	movf	(??_caltime_to_epoch+3)& (0+255),w,b
  9515  0012A0  0100               	movlb	0	; () banked
  9516  0012A2  2389               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9517  0012A4  0100               	movlb	0	; () banked
  9518  0012A6  5181               	movf	(??_caltime_to_epoch+4)& (0+255),w,b
  9519  0012A8  0100               	movlb	0	; () banked
  9520  0012AA  238A               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9521                           
  9522                           ; BSR set to: 0
  9523                           ;My_header\My_RTCC.h: 232: epoch += ct->ss;
  9524  0012AC  C079  FFD9         	movff	caltime_to_epoch@ct,fsr2l
  9525  0012B0  C07A  FFDA         	movff	caltime_to_epoch@ct+1,fsr2h
  9526  0012B4  50DF               	movf	indf2,w,c
  9527  0012B6  0100               	movlb	0	; () banked
  9528  0012B8  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
  9529  0012BA  0100               	movlb	0	; () banked
  9530  0012BC  517D               	movf	??_caltime_to_epoch& (0+255),w,b
  9531  0012BE  0100               	movlb	0	; () banked
  9532  0012C0  2787               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9533  0012C2  0E00               	movlw	0
  9534  0012C4  0100               	movlb	0	; () banked
  9535  0012C6  2388               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9536  0012C8  0100               	movlb	0	; () banked
  9537  0012CA  2389               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9538  0012CC  0100               	movlb	0	; () banked
  9539  0012CE  238A               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9540                           
  9541                           ; BSR set to: 0
  9542                           ;My_header\My_RTCC.h: 234: *ep = epoch;
  9543  0012D0  C07B  FFD9         	movff	caltime_to_epoch@ep,fsr2l
  9544  0012D4  C07C  FFDA         	movff	caltime_to_epoch@ep+1,fsr2h
  9545  0012D8  0100               	movlb	0	; () banked
  9546  0012DA  C087  FFDE         	movff	caltime_to_epoch@epoch,postinc2
  9547  0012DE  0100               	movlb	0	; () banked
  9548  0012E0  C088  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
  9549  0012E4  0100               	movlb	0	; () banked
  9550  0012E6  C089  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
  9551  0012EA  0100               	movlb	0	; () banked
  9552  0012EC  C08A  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
  9553                           
  9554                           ; BSR set to: 0
  9555  0012F0  0012               	return	
  9556  0012F2                     __end_of_caltime_to_epoch:
  9557                           	opt stack 0
  9558                           tblptru	equ	0xFF8
  9559                           tblptrh	equ	0xFF7
  9560                           tblptrl	equ	0xFF6
  9561                           tablat	equ	0xFF5
  9562                           prodh	equ	0xFF4
  9563                           prodl	equ	0xFF3
  9564                           intcon	equ	0xFF2
  9565                           intcon2	equ	0xFF1
  9566                           postinc0	equ	0xFEE
  9567                           wreg	equ	0xFE8
  9568                           postdec1	equ	0xFE5
  9569                           fsr1l	equ	0xFE1
  9570                           indf2	equ	0xFDF
  9571                           postinc2	equ	0xFDE
  9572                           postdec2	equ	0xFDD
  9573                           fsr2h	equ	0xFDA
  9574                           fsr2l	equ	0xFD9
  9575                           status	equ	0xFD8
  9576                           
  9577 ;; *************** function _month_length *****************
  9578 ;; Defined at:
  9579 ;;		line 84 in file "../My_header\My_RTCC.h"
  9580 ;; Parameters:    Size  Location     Type
  9581 ;;  year            1    wreg     unsigned char 
  9582 ;;  month           1    6[BANK0 ] unsigned char 
  9583 ;; Auto vars:     Size  Location     Type
  9584 ;;  year            1   11[BANK0 ] unsigned char 
  9585 ;; Return value:  Size  Location     Type
  9586 ;;                  1    wreg      unsigned char 
  9587 ;; Registers used:
  9588 ;;		wreg, status,2, status,0, prodl, cstack
  9589 ;; Tracked objects:
  9590 ;;		On entry : 0/0
  9591 ;;		On exit  : 0/0
  9592 ;;		Unchanged: 0/0
  9593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9594 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9595 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9596 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9597 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9598 ;;Total ram usage:        6 bytes
  9599 ;; Hardware stack levels used:    1
  9600 ;; Hardware stack levels required when called:    5
  9601 ;; This function calls:
  9602 ;;		___awmod
  9603 ;; This function is called by:
  9604 ;;		_epoch_to_caltime
  9605 ;;		_caltime_to_epoch
  9606 ;;		_RTCC_time_set_inc
  9607 ;;		_RTCC_time_set_dec
  9608 ;; This function uses a non-reentrant model
  9609 ;;
  9610                           
  9611                           	psect	text47
  9612  002C64                     __ptext47:
  9613                           	opt stack 0
  9614  002C64                     _month_length:
  9615                           	opt stack 22
  9616                           
  9617                           ; BSR set to: 0
  9618                           ;incstack = 0
  9619                           ;month_length@year stored from wreg
  9620  002C64  0100               	movlb	0	; () banked
  9621  002C66  6F6B               	movwf	month_length@year& (0+255),b
  9622                           
  9623                           ; BSR set to: 0
  9624                           ;My_header\My_RTCC.h: 85: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year %
      +                           400);
  9625  002C68  0100               	movlb	0	; () banked
  9626  002C6A  5166               	movf	month_length@month& (0+255),w,b
  9627  002C6C  0A02               	xorlw	2
  9628  002C6E  A4D8               	btfss	status,2,c
  9629  002C70  D041               	goto	l4586
  9630                           
  9631                           ; BSR set to: 0
  9632  002C72  0100               	movlb	0	; () banked
  9633  002C74  C06B  F060         	movff	month_length@year,___awmod@dividend
  9634  002C78  0100               	movlb	0	; () banked
  9635  002C7A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9636  002C7C  0E00               	movlw	0
  9637  002C7E  0100               	movlb	0	; () banked
  9638  002C80  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9639  002C82  0E64               	movlw	100
  9640  002C84  0100               	movlb	0	; () banked
  9641  002C86  6F62               	movwf	___awmod@divisor& (0+255),b
  9642  002C88  EC47  F018         	call	___awmod	;wreg free
  9643  002C8C  0100               	movlb	0	; () banked
  9644  002C8E  5161               	movf	(?___awmod+1)& (0+255),w,b
  9645  002C90  0100               	movlb	0	; () banked
  9646  002C92  1160               	iorwf	?___awmod& (0+255),w,b
  9647  002C94  A4D8               	btfss	status,2,c
  9648  002C96  D002               	goto	u4530
  9649  002C98  0E01               	movlw	1
  9650  002C9A  D001               	goto	u4536
  9651  002C9C                     u4530:
  9652  002C9C  0E00               	movlw	0
  9653  002C9E                     u4536:
  9654  002C9E  0800               	sublw	0
  9655  002CA0  0100               	movlb	0	; () banked
  9656  002CA2  6F67               	movwf	??_month_length& (0+255),b
  9657  002CA4  0100               	movlb	0	; () banked
  9658  002CA6  C06B  F060         	movff	month_length@year,___awmod@dividend
  9659  002CAA  0100               	movlb	0	; () banked
  9660  002CAC  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9661  002CAE  0E01               	movlw	1
  9662  002CB0  0100               	movlb	0	; () banked
  9663  002CB2  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9664  002CB4  0E90               	movlw	144
  9665  002CB6  0100               	movlb	0	; () banked
  9666  002CB8  6F62               	movwf	___awmod@divisor& (0+255),b
  9667  002CBA  EC47  F018         	call	___awmod	;wreg free
  9668  002CBE  0100               	movlb	0	; () banked
  9669  002CC0  5161               	movf	(?___awmod+1)& (0+255),w,b
  9670  002CC2  0100               	movlb	0	; () banked
  9671  002CC4  1160               	iorwf	?___awmod& (0+255),w,b
  9672  002CC6  A4D8               	btfss	status,2,c
  9673  002CC8  D002               	goto	u4540
  9674  002CCA  0E01               	movlw	1
  9675  002CCC  D001               	goto	u4546
  9676  002CCE                     u4540:
  9677  002CCE  0E00               	movlw	0
  9678  002CD0                     u4546:
  9679  002CD0  0100               	movlb	0	; () banked
  9680  002CD2  6F68               	movwf	(??_month_length+1)& (0+255),b
  9681  002CD4  C06B  F069         	movff	month_length@year,??_month_length+2
  9682  002CD8  0E03               	movlw	3
  9683  002CDA  0100               	movlb	0	; () banked
  9684  002CDC  1769               	andwf	(??_month_length+2)& (0+255),f,b
  9685  002CDE  A4D8               	btfss	status,2,c
  9686  002CE0  D002               	goto	u4550
  9687  002CE2  0E01               	movlw	1
  9688  002CE4  D001               	goto	u4556
  9689  002CE6                     u4550:
  9690  002CE6  0E00               	movlw	0
  9691  002CE8                     u4556:
  9692  002CE8  0100               	movlb	0	; () banked
  9693  002CEA  2568               	addwf	(??_month_length+1)& (0+255),w,b
  9694  002CEC  0100               	movlb	0	; () banked
  9695  002CEE  2567               	addwf	??_month_length& (0+255),w,b
  9696  002CF0  0F1C               	addlw	28
  9697  002CF2  0012               	return	
  9698  002CF4                     l4586:
  9699                           
  9700                           ; BSR set to: 0
  9701                           ;My_header\My_RTCC.h: 86: else return 31 - (((-(month & 1)^month)&13) == 4);
  9702  002CF4  0100               	movlb	0	; () banked
  9703  002CF6  5166               	movf	month_length@month& (0+255),w,b
  9704  002CF8  0B01               	andlw	1
  9705  002CFA  0100               	movlb	0	; () banked
  9706  002CFC  6F67               	movwf	??_month_length& (0+255),b
  9707  002CFE  6B68               	clrf	(??_month_length+1)& (0+255),b
  9708  002D00  0100               	movlb	0	; () banked
  9709  002D02  1F67               	comf	??_month_length& (0+255),f,b
  9710  002D04  1F68               	comf	(??_month_length+1)& (0+255),f,b
  9711  002D06  4B67               	infsnz	??_month_length& (0+255),f,b
  9712  002D08  2B68               	incf	(??_month_length+1)& (0+255),f,b
  9713  002D0A  0100               	movlb	0	; () banked
  9714  002D0C  5166               	movf	month_length@month& (0+255),w,b
  9715  002D0E  0100               	movlb	0	; () banked
  9716  002D10  6F69               	movwf	(??_month_length+2)& (0+255),b
  9717  002D12  6B6A               	clrf	(??_month_length+3)& (0+255),b
  9718  002D14  0100               	movlb	0	; () banked
  9719  002D16  5167               	movf	??_month_length& (0+255),w,b
  9720  002D18  0100               	movlb	0	; () banked
  9721  002D1A  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
  9722  002D1C  0100               	movlb	0	; () banked
  9723  002D1E  5168               	movf	(??_month_length+1)& (0+255),w,b
  9724  002D20  0100               	movlb	0	; () banked
  9725  002D22  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
  9726  002D24  0E0D               	movlw	13
  9727  002D26  0100               	movlb	0	; () banked
  9728  002D28  1769               	andwf	(??_month_length+2)& (0+255),f,b
  9729  002D2A  0E00               	movlw	0
  9730  002D2C  176A               	andwf	(??_month_length+3)& (0+255),f,b
  9731  002D2E  0100               	movlb	0	; () banked
  9732  002D30  5169               	movf	(??_month_length+2)& (0+255),w,b
  9733  002D32  0A04               	xorlw	4
  9734  002D34  116A               	iorwf	(??_month_length+3)& (0+255),w,b
  9735  002D36  A4D8               	btfss	status,2,c
  9736  002D38  D002               	goto	u4560
  9737  002D3A  0E01               	movlw	1
  9738  002D3C  D001               	goto	u4566
  9739  002D3E                     u4560:
  9740  002D3E  0E00               	movlw	0
  9741  002D40                     u4566:
  9742  002D40  0800               	sublw	0
  9743  002D42  0F1F               	addlw	31
  9744  002D44  0012               	return	
  9745  002D46                     __end_of_month_length:
  9746                           	opt stack 0
  9747                           tblptru	equ	0xFF8
  9748                           tblptrh	equ	0xFF7
  9749                           tblptrl	equ	0xFF6
  9750                           tablat	equ	0xFF5
  9751                           prodh	equ	0xFF4
  9752                           prodl	equ	0xFF3
  9753                           intcon	equ	0xFF2
  9754                           intcon2	equ	0xFF1
  9755                           postinc0	equ	0xFEE
  9756                           wreg	equ	0xFE8
  9757                           postdec1	equ	0xFE5
  9758                           fsr1l	equ	0xFE1
  9759                           indf2	equ	0xFDF
  9760                           postinc2	equ	0xFDE
  9761                           postdec2	equ	0xFDD
  9762                           fsr2h	equ	0xFDA
  9763                           fsr2l	equ	0xFD9
  9764                           status	equ	0xFD8
  9765                           
  9766 ;; *************** function ___awmod *****************
  9767 ;; Defined at:
  9768 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  9769 ;; Parameters:    Size  Location     Type
  9770 ;;  dividend        2    0[BANK0 ] int 
  9771 ;;  divisor         2    2[BANK0 ] int 
  9772 ;; Auto vars:     Size  Location     Type
  9773 ;;  sign            1    5[BANK0 ] unsigned char 
  9774 ;;  counter         1    4[BANK0 ] unsigned char 
  9775 ;; Return value:  Size  Location     Type
  9776 ;;                  2    0[BANK0 ] int 
  9777 ;; Registers used:
  9778 ;;		wreg, status,2, status,0, prodl
  9779 ;; Tracked objects:
  9780 ;;		On entry : 0/0
  9781 ;;		On exit  : 0/0
  9782 ;;		Unchanged: 0/0
  9783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9784 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9785 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9787 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9788 ;;Total ram usage:        6 bytes
  9789 ;; Hardware stack levels used:    1
  9790 ;; Hardware stack levels required when called:    4
  9791 ;; This function calls:
  9792 ;;		Nothing
  9793 ;; This function is called by:
  9794 ;;		_month_length
  9795 ;; This function uses a non-reentrant model
  9796 ;;
  9797                           
  9798                           	psect	text48
  9799  00308E                     __ptext48:
  9800                           	opt stack 0
  9801  00308E                     ___awmod:
  9802                           	opt stack 22
  9803                           
  9804                           ; BSR set to: 0
  9805                           ;incstack = 0
  9806  00308E  0E00               	movlw	0
  9807  003090  0100               	movlb	0	; () banked
  9808  003092  6F65               	movwf	___awmod@sign& (0+255),b
  9809                           
  9810                           ; BSR set to: 0
  9811  003094  0100               	movlb	0	; () banked
  9812  003096  5161               	movf	(___awmod@dividend+1)& (0+255),w,b
  9813  003098  0A80               	xorlw	128
  9814  00309A  6EF3               	movwf	prodl,c
  9815  00309C  0E80               	movlw	128
  9816  00309E  5CF3               	subwf	prodl,w,c
  9817  0030A0  0E00               	movlw	0
  9818  0030A2  B4D8               	btfsc	status,2,c
  9819  0030A4  5D60               	subwf	___awmod@dividend& (0+255),w,b
  9820  0030A6  B0D8               	btfsc	status,0,c
  9821  0030A8  D009               	goto	l4494
  9822                           
  9823                           ; BSR set to: 0
  9824  0030AA  0100               	movlb	0	; () banked
  9825  0030AC  6D60               	negf	___awmod@dividend& (0+255),b
  9826  0030AE  0100               	movlb	0	; () banked
  9827  0030B0  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  9828  0030B2  B0D8               	btfsc	status,0,c
  9829  0030B4  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  9830                           
  9831                           ; BSR set to: 0
  9832  0030B6  0E01               	movlw	1
  9833  0030B8  0100               	movlb	0	; () banked
  9834  0030BA  6F65               	movwf	___awmod@sign& (0+255),b
  9835  0030BC                     l4494:
  9836                           
  9837                           ; BSR set to: 0
  9838  0030BC  0100               	movlb	0	; () banked
  9839  0030BE  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  9840  0030C0  0A80               	xorlw	128
  9841  0030C2  6EF3               	movwf	prodl,c
  9842  0030C4  0E80               	movlw	128
  9843  0030C6  5CF3               	subwf	prodl,w,c
  9844  0030C8  0E00               	movlw	0
  9845  0030CA  B4D8               	btfsc	status,2,c
  9846  0030CC  5D62               	subwf	___awmod@divisor& (0+255),w,b
  9847  0030CE  B0D8               	btfsc	status,0,c
  9848  0030D0  D006               	goto	l4498
  9849                           
  9850                           ; BSR set to: 0
  9851  0030D2  0100               	movlb	0	; () banked
  9852  0030D4  6D62               	negf	___awmod@divisor& (0+255),b
  9853  0030D6  0100               	movlb	0	; () banked
  9854  0030D8  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  9855  0030DA  B0D8               	btfsc	status,0,c
  9856  0030DC  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  9857  0030DE                     l4498:
  9858                           
  9859                           ; BSR set to: 0
  9860  0030DE  0100               	movlb	0	; () banked
  9861  0030E0  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  9862  0030E2  1162               	iorwf	___awmod@divisor& (0+255),w,b
  9863  0030E4  B4D8               	btfsc	status,2,c
  9864  0030E6  D026               	goto	l4514
  9865                           
  9866                           ; BSR set to: 0
  9867  0030E8  0E01               	movlw	1
  9868  0030EA  0100               	movlb	0	; () banked
  9869  0030EC  6F64               	movwf	___awmod@counter& (0+255),b
  9870  0030EE  D006               	goto	l4504
  9871  0030F0                     l4502:
  9872                           
  9873                           ; BSR set to: 0
  9874  0030F0  0100               	movlb	0	; () banked
  9875  0030F2  90D8               	bcf	status,0,c
  9876  0030F4  3762               	rlcf	___awmod@divisor& (0+255),f,b
  9877  0030F6  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9878  0030F8  0100               	movlb	0	; () banked
  9879  0030FA  2B64               	incf	___awmod@counter& (0+255),f,b
  9880  0030FC                     l4504:
  9881                           
  9882                           ; BSR set to: 0
  9883  0030FC  0100               	movlb	0	; () banked
  9884  0030FE  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9885  003100  D7F7               	goto	l4502
  9886  003102                     l4506:
  9887                           
  9888                           ; BSR set to: 0
  9889  003102  0100               	movlb	0	; () banked
  9890  003104  5162               	movf	___awmod@divisor& (0+255),w,b
  9891  003106  0100               	movlb	0	; () banked
  9892  003108  5D60               	subwf	___awmod@dividend& (0+255),w,b
  9893  00310A  0100               	movlb	0	; () banked
  9894  00310C  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  9895  00310E  0100               	movlb	0	; () banked
  9896  003110  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9897  003112  A0D8               	btfss	status,0,c
  9898  003114  D008               	goto	l4510
  9899                           
  9900                           ; BSR set to: 0
  9901  003116  0100               	movlb	0	; () banked
  9902  003118  5162               	movf	___awmod@divisor& (0+255),w,b
  9903  00311A  0100               	movlb	0	; () banked
  9904  00311C  5F60               	subwf	___awmod@dividend& (0+255),f,b
  9905  00311E  0100               	movlb	0	; () banked
  9906  003120  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  9907  003122  0100               	movlb	0	; () banked
  9908  003124  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9909  003126                     l4510:
  9910                           
  9911                           ; BSR set to: 0
  9912  003126  0100               	movlb	0	; () banked
  9913  003128  90D8               	bcf	status,0,c
  9914  00312A  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9915  00312C  3362               	rrcf	___awmod@divisor& (0+255),f,b
  9916                           
  9917                           ; BSR set to: 0
  9918  00312E  0100               	movlb	0	; () banked
  9919  003130  2F64               	decfsz	___awmod@counter& (0+255),f,b
  9920  003132  D7E7               	goto	l4506
  9921  003134                     l4514:
  9922                           
  9923                           ; BSR set to: 0
  9924  003134  0100               	movlb	0	; () banked
  9925  003136  5165               	movf	___awmod@sign& (0+255),w,b
  9926  003138  B4D8               	btfsc	status,2,c
  9927  00313A  D006               	goto	l4518
  9928                           
  9929                           ; BSR set to: 0
  9930  00313C  0100               	movlb	0	; () banked
  9931  00313E  6D60               	negf	___awmod@dividend& (0+255),b
  9932  003140  0100               	movlb	0	; () banked
  9933  003142  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  9934  003144  B0D8               	btfsc	status,0,c
  9935  003146  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  9936  003148                     l4518:
  9937                           
  9938                           ; BSR set to: 0
  9939  003148  C060  F060         	movff	___awmod@dividend,?___awmod
  9940  00314C  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  9941  003150  0012               	return	
  9942  003152                     __end_of___awmod:
  9943                           	opt stack 0
  9944                           tblptru	equ	0xFF8
  9945                           tblptrh	equ	0xFF7
  9946                           tblptrl	equ	0xFF6
  9947                           tablat	equ	0xFF5
  9948                           prodh	equ	0xFF4
  9949                           prodl	equ	0xFF3
  9950                           intcon	equ	0xFF2
  9951                           intcon2	equ	0xFF1
  9952                           postinc0	equ	0xFEE
  9953                           wreg	equ	0xFE8
  9954                           postdec1	equ	0xFE5
  9955                           fsr1l	equ	0xFE1
  9956                           indf2	equ	0xFDF
  9957                           postinc2	equ	0xFDE
  9958                           postdec2	equ	0xFDD
  9959                           fsr2h	equ	0xFDA
  9960                           fsr2l	equ	0xFD9
  9961                           status	equ	0xFD8
  9962                           
  9963 ;; *************** function ___lmul *****************
  9964 ;; Defined at:
  9965 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
  9966 ;; Parameters:    Size  Location     Type
  9967 ;;  multiplier      4   13[BANK0 ] unsigned long 
  9968 ;;  multiplicand    4   17[BANK0 ] unsigned long 
  9969 ;; Auto vars:     Size  Location     Type
  9970 ;;  product         4   21[BANK0 ] unsigned long 
  9971 ;; Return value:  Size  Location     Type
  9972 ;;                  4   13[BANK0 ] unsigned long 
  9973 ;; Registers used:
  9974 ;;		wreg, status,2, status,0
  9975 ;; Tracked objects:
  9976 ;;		On entry : 0/0
  9977 ;;		On exit  : 0/0
  9978 ;;		Unchanged: 0/0
  9979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9980 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9981 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9983 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9984 ;;Total ram usage:       12 bytes
  9985 ;; Hardware stack levels used:    1
  9986 ;; Hardware stack levels required when called:    4
  9987 ;; This function calls:
  9988 ;;		Nothing
  9989 ;; This function is called by:
  9990 ;;		_get_quot_rem
  9991 ;;		_caltime_to_epoch
  9992 ;;		_RTCC_time_set_inc
  9993 ;;		_RTCC_time_set_dec
  9994 ;; This function uses a non-reentrant model
  9995 ;;
  9996                           
  9997                           	psect	text49
  9998  00352C                     __ptext49:
  9999                           	opt stack 0
 10000  00352C                     ___lmul:
 10001                           	opt stack 23
 10002                           
 10003                           ; BSR set to: 0
 10004                           ;incstack = 0
 10005  00352C  0E00               	movlw	0
 10006  00352E  0100               	movlb	0	; () banked
 10007  003530  6F75               	movwf	___lmul@product& (0+255),b
 10008  003532  0E00               	movlw	0
 10009  003534  0100               	movlb	0	; () banked
 10010  003536  6F76               	movwf	(___lmul@product+1)& (0+255),b
 10011  003538  0E00               	movlw	0
 10012  00353A  0100               	movlb	0	; () banked
 10013  00353C  6F77               	movwf	(___lmul@product+2)& (0+255),b
 10014  00353E  0E00               	movlw	0
 10015  003540  0100               	movlb	0	; () banked
 10016  003542  6F78               	movwf	(___lmul@product+3)& (0+255),b
 10017  003544                     l4434:
 10018                           
 10019                           ; BSR set to: 0
 10020  003544  0100               	movlb	0	; () banked
 10021  003546  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 10022  003548  D010               	goto	l4438
 10023                           
 10024                           ; BSR set to: 0
 10025  00354A  0100               	movlb	0	; () banked
 10026  00354C  5171               	movf	___lmul@multiplicand& (0+255),w,b
 10027  00354E  0100               	movlb	0	; () banked
 10028  003550  2775               	addwf	___lmul@product& (0+255),f,b
 10029  003552  0100               	movlb	0	; () banked
 10030  003554  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 10031  003556  0100               	movlb	0	; () banked
 10032  003558  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 10033  00355A  0100               	movlb	0	; () banked
 10034  00355C  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 10035  00355E  0100               	movlb	0	; () banked
 10036  003560  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 10037  003562  0100               	movlb	0	; () banked
 10038  003564  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 10039  003566  0100               	movlb	0	; () banked
 10040  003568  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 10041  00356A                     l4438:
 10042                           
 10043                           ; BSR set to: 0
 10044  00356A  0100               	movlb	0	; () banked
 10045  00356C  90D8               	bcf	status,0,c
 10046  00356E  0100               	movlb	0	; () banked
 10047  003570  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 10048  003572  0100               	movlb	0	; () banked
 10049  003574  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 10050  003576  0100               	movlb	0	; () banked
 10051  003578  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 10052  00357A  0100               	movlb	0	; () banked
 10053  00357C  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 10054                           
 10055                           ; BSR set to: 0
 10056  00357E  0100               	movlb	0	; () banked
 10057  003580  90D8               	bcf	status,0,c
 10058  003582  0100               	movlb	0	; () banked
 10059  003584  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 10060  003586  0100               	movlb	0	; () banked
 10061  003588  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 10062  00358A  0100               	movlb	0	; () banked
 10063  00358C  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 10064  00358E  0100               	movlb	0	; () banked
 10065  003590  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 10066  003592  0100               	movlb	0	; () banked
 10067  003594  5170               	movf	(___lmul@multiplier+3)& (0+255),w,b
 10068  003596  116D               	iorwf	___lmul@multiplier& (0+255),w,b
 10069  003598  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 10070  00359A  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 10071  00359C  A4D8               	btfss	status,2,c
 10072  00359E  D7D2               	goto	l4434
 10073                           
 10074                           ; BSR set to: 0
 10075  0035A0  C075  F06D         	movff	___lmul@product,?___lmul
 10076  0035A4  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 10077  0035A8  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 10078  0035AC  C078  F070         	movff	___lmul@product+3,?___lmul+3
 10079                           
 10080                           ; BSR set to: 0
 10081  0035B0  0012               	return	
 10082  0035B2                     __end_of___lmul:
 10083                           	opt stack 0
 10084                           tblptru	equ	0xFF8
 10085                           tblptrh	equ	0xFF7
 10086                           tblptrl	equ	0xFF6
 10087                           tablat	equ	0xFF5
 10088                           prodh	equ	0xFF4
 10089                           prodl	equ	0xFF3
 10090                           intcon	equ	0xFF2
 10091                           intcon2	equ	0xFF1
 10092                           postinc0	equ	0xFEE
 10093                           wreg	equ	0xFE8
 10094                           postdec1	equ	0xFE5
 10095                           fsr1l	equ	0xFE1
 10096                           indf2	equ	0xFDF
 10097                           postinc2	equ	0xFDE
 10098                           postdec2	equ	0xFDD
 10099                           fsr2h	equ	0xFDA
 10100                           fsr2l	equ	0xFD9
 10101                           status	equ	0xFD8
 10102                           
 10103 ;; *************** function _RTCC_to_caltime *****************
 10104 ;; Defined at:
 10105 ;;		line 126 in file "../My_header\My_RTCC.h"
 10106 ;; Parameters:    Size  Location     Type
 10107 ;;  ct              2    2[BANK0 ] PTR struct .
 10108 ;;		 -> caltime_now(7), 
 10109 ;; Auto vars:     Size  Location     Type
 10110 ;;  dumy            1    4[BANK0 ] unsigned char 
 10111 ;; Return value:  Size  Location     Type
 10112 ;;		None               void
 10113 ;; Registers used:
 10114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10115 ;; Tracked objects:
 10116 ;;		On entry : 0/0
 10117 ;;		On exit  : 0/0
 10118 ;;		Unchanged: 0/0
 10119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10120 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10121 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10123 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10124 ;;Total ram usage:        3 bytes
 10125 ;; Hardware stack levels used:    1
 10126 ;; Hardware stack levels required when called:    5
 10127 ;; This function calls:
 10128 ;;		_x_to_d
 10129 ;; This function is called by:
 10130 ;;		_RTCC_from_RTCC
 10131 ;; This function uses a non-reentrant model
 10132 ;;
 10133                           
 10134                           	psect	text50
 10135  002FC6                     __ptext50:
 10136                           	opt stack 0
 10137  002FC6                     _RTCC_to_caltime:
 10138                           	opt stack 23
 10139                           
 10140                           ;My_header\My_RTCC.h: 129: RTCCFGbits.RTCPTR0 = 1;
 10141                           
 10142                           ; BSR set to: 0
 10143                           ;incstack = 0
 10144  002FC6  010F               	movlb	15	; () banked
 10145  002FC8  813F               	bsf	63,0,b	;volatile
 10146                           
 10147                           ;My_header\My_RTCC.h: 130: RTCCFGbits.RTCPTR1 = 1;
 10148  002FCA  010F               	movlb	15	; () banked
 10149  002FCC  833F               	bsf	63,1,b	;volatile
 10150                           
 10151                           ; BSR set to: 15
 10152                           ;My_header\My_RTCC.h: 132: ct->YY = x_to_d(RTCVALL);
 10153  002FCE  0100               	movlb	0	; () banked
 10154  002FD0  EE20 F006          	lfsr	2,6
 10155  002FD4  0100               	movlb	0	; () banked
 10156  002FD6  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 10157  002FD8  26D9               	addwf	fsr2l,f,c
 10158  002FDA  0100               	movlb	0	; () banked
 10159  002FDC  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 10160  002FDE  22DA               	addwfc	fsr2h,f,c
 10161  002FE0  010F               	movlb	15	; () banked
 10162  002FE2  513A               	movf	58,w,b	;volatile
 10163  002FE4  ECDE  F01F         	call	_x_to_d
 10164  002FE8  6EDF               	movwf	indf2,c
 10165                           
 10166                           ;My_header\My_RTCC.h: 133: uint8_t dumy = RTCVALH;
 10167  002FEA  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 10168                           
 10169                           ;My_header\My_RTCC.h: 134: ct->DD = x_to_d(RTCVALL);
 10170  002FEE  0100               	movlb	0	; () banked
 10171  002FF0  EE20 F004          	lfsr	2,4
 10172  002FF4  0100               	movlb	0	; () banked
 10173  002FF6  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 10174  002FF8  26D9               	addwf	fsr2l,f,c
 10175  002FFA  0100               	movlb	0	; () banked
 10176  002FFC  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 10177  002FFE  22DA               	addwfc	fsr2h,f,c
 10178  003000  010F               	movlb	15	; () banked
 10179  003002  513A               	movf	58,w,b	;volatile
 10180  003004  ECDE  F01F         	call	_x_to_d
 10181  003008  6EDF               	movwf	indf2,c
 10182                           
 10183                           ;My_header\My_RTCC.h: 135: ct->MM = x_to_d(RTCVALH);
 10184  00300A  0100               	movlb	0	; () banked
 10185  00300C  EE20 F005          	lfsr	2,5
 10186  003010  0100               	movlb	0	; () banked
 10187  003012  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 10188  003014  26D9               	addwf	fsr2l,f,c
 10189  003016  0100               	movlb	0	; () banked
 10190  003018  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 10191  00301A  22DA               	addwfc	fsr2h,f,c
 10192  00301C  010F               	movlb	15	; () banked
 10193  00301E  513B               	movf	59,w,b	;volatile
 10194  003020  ECDE  F01F         	call	_x_to_d
 10195  003024  6EDF               	movwf	indf2,c
 10196                           
 10197                           ;My_header\My_RTCC.h: 136: ct->hh = x_to_d(RTCVALL);
 10198  003026  0100               	movlb	0	; () banked
 10199  003028  EE20 F002          	lfsr	2,2
 10200  00302C  0100               	movlb	0	; () banked
 10201  00302E  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 10202  003030  26D9               	addwf	fsr2l,f,c
 10203  003032  0100               	movlb	0	; () banked
 10204  003034  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 10205  003036  22DA               	addwfc	fsr2h,f,c
 10206  003038  010F               	movlb	15	; () banked
 10207  00303A  513A               	movf	58,w,b	;volatile
 10208  00303C  ECDE  F01F         	call	_x_to_d
 10209  003040  6EDF               	movwf	indf2,c
 10210                           
 10211                           ;My_header\My_RTCC.h: 137: ct->EE = x_to_d(RTCVALH);
 10212  003042  0100               	movlb	0	; () banked
 10213  003044  EE20 F003          	lfsr	2,3
 10214  003048  0100               	movlb	0	; () banked
 10215  00304A  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 10216  00304C  26D9               	addwf	fsr2l,f,c
 10217  00304E  0100               	movlb	0	; () banked
 10218  003050  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 10219  003052  22DA               	addwfc	fsr2h,f,c
 10220  003054  010F               	movlb	15	; () banked
 10221  003056  513B               	movf	59,w,b	;volatile
 10222  003058  ECDE  F01F         	call	_x_to_d
 10223  00305C  6EDF               	movwf	indf2,c
 10224                           
 10225                           ;My_header\My_RTCC.h: 138: ct->ss = x_to_d(RTCVALL);
 10226  00305E  010F               	movlb	15	; () banked
 10227  003060  513A               	movf	58,w,b	;volatile
 10228  003062  ECDE  F01F         	call	_x_to_d
 10229  003066  C062  FFD9         	movff	RTCC_to_caltime@ct,fsr2l
 10230  00306A  C063  FFDA         	movff	RTCC_to_caltime@ct+1,fsr2h
 10231  00306E  6EDF               	movwf	indf2,c
 10232                           
 10233                           ;My_header\My_RTCC.h: 139: ct->mm = x_to_d(RTCVALH);
 10234  003070  0100               	movlb	0	; () banked
 10235  003072  EE20 F001          	lfsr	2,1
 10236  003076  0100               	movlb	0	; () banked
 10237  003078  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 10238  00307A  26D9               	addwf	fsr2l,f,c
 10239  00307C  0100               	movlb	0	; () banked
 10240  00307E  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 10241  003080  22DA               	addwfc	fsr2h,f,c
 10242  003082  010F               	movlb	15	; () banked
 10243  003084  513B               	movf	59,w,b	;volatile
 10244  003086  ECDE  F01F         	call	_x_to_d
 10245  00308A  6EDF               	movwf	indf2,c
 10246  00308C  0012               	return	
 10247  00308E                     __end_of_RTCC_to_caltime:
 10248                           	opt stack 0
 10249                           tblptru	equ	0xFF8
 10250                           tblptrh	equ	0xFF7
 10251                           tblptrl	equ	0xFF6
 10252                           tablat	equ	0xFF5
 10253                           prodh	equ	0xFF4
 10254                           prodl	equ	0xFF3
 10255                           intcon	equ	0xFF2
 10256                           intcon2	equ	0xFF1
 10257                           postinc0	equ	0xFEE
 10258                           wreg	equ	0xFE8
 10259                           postdec1	equ	0xFE5
 10260                           fsr1l	equ	0xFE1
 10261                           indf2	equ	0xFDF
 10262                           postinc2	equ	0xFDE
 10263                           postdec2	equ	0xFDD
 10264                           fsr2h	equ	0xFDA
 10265                           fsr2l	equ	0xFD9
 10266                           status	equ	0xFD8
 10267                           
 10268 ;; *************** function _x_to_d *****************
 10269 ;; Defined at:
 10270 ;;		line 78 in file "../My_header\My_RTCC.h"
 10271 ;; Parameters:    Size  Location     Type
 10272 ;;  hex             1    wreg     unsigned char 
 10273 ;; Auto vars:     Size  Location     Type
 10274 ;;  hex             1    1[BANK0 ] unsigned char 
 10275 ;; Return value:  Size  Location     Type
 10276 ;;                  1    wreg      unsigned char 
 10277 ;; Registers used:
 10278 ;;		wreg, status,2, status,0, prodl, prodh
 10279 ;; Tracked objects:
 10280 ;;		On entry : 0/0
 10281 ;;		On exit  : 0/0
 10282 ;;		Unchanged: 0/0
 10283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10285 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10286 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10287 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10288 ;;Total ram usage:        2 bytes
 10289 ;; Hardware stack levels used:    1
 10290 ;; Hardware stack levels required when called:    4
 10291 ;; This function calls:
 10292 ;;		Nothing
 10293 ;; This function is called by:
 10294 ;;		_RTCC_to_caltime
 10295 ;; This function uses a non-reentrant model
 10296 ;;
 10297                           
 10298                           	psect	text51
 10299  003FBC                     __ptext51:
 10300                           	opt stack 0
 10301  003FBC                     _x_to_d:
 10302                           	opt stack 23
 10303                           
 10304                           ;incstack = 0
 10305                           ;x_to_d@hex stored from wreg
 10306  003FBC  0100               	movlb	0	; () banked
 10307  003FBE  6F61               	movwf	x_to_d@hex& (0+255),b
 10308                           
 10309                           ; BSR set to: 0
 10310                           ;My_header\My_RTCC.h: 79: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 10311  003FC0  C061  F060         	movff	x_to_d@hex,??_x_to_d
 10312  003FC4  0E0F               	movlw	15
 10313  003FC6  0100               	movlb	0	; () banked
 10314  003FC8  1760               	andwf	??_x_to_d& (0+255),f,b
 10315  003FCA  0100               	movlb	0	; () banked
 10316  003FCC  3961               	swapf	x_to_d@hex& (0+255),w,b
 10317  003FCE  0B0F               	andlw	15
 10318  003FD0  0B0F               	andlw	15
 10319  003FD2  0D0A               	mullw	10
 10320  003FD4  50F3               	movf	prodl,w,c
 10321  003FD6  0100               	movlb	0	; () banked
 10322  003FD8  2560               	addwf	??_x_to_d& (0+255),w,b
 10323  003FDA  0012               	return	
 10324  003FDC                     __end_of_x_to_d:
 10325                           	opt stack 0
 10326                           tblptru	equ	0xFF8
 10327                           tblptrh	equ	0xFF7
 10328                           tblptrl	equ	0xFF6
 10329                           tablat	equ	0xFF5
 10330                           prodh	equ	0xFF4
 10331                           prodl	equ	0xFF3
 10332                           intcon	equ	0xFF2
 10333                           intcon2	equ	0xFF1
 10334                           postinc0	equ	0xFEE
 10335                           wreg	equ	0xFE8
 10336                           postdec1	equ	0xFE5
 10337                           fsr1l	equ	0xFE1
 10338                           indf2	equ	0xFDF
 10339                           postinc2	equ	0xFDE
 10340                           postdec2	equ	0xFDD
 10341                           fsr2h	equ	0xFDA
 10342                           fsr2l	equ	0xFD9
 10343                           status	equ	0xFD8
 10344                           
 10345 ;; *************** function _RTCC_time_set_cursor *****************
 10346 ;; Defined at:
 10347 ;;		line 293 in file "../My_header\My_RTCC.h"
 10348 ;; Parameters:    Size  Location     Type
 10349 ;;		None
 10350 ;; Auto vars:     Size  Location     Type
 10351 ;;		None
 10352 ;; Return value:  Size  Location     Type
 10353 ;;		None               void
 10354 ;; Registers used:
 10355 ;;		wreg, status,2
 10356 ;; Tracked objects:
 10357 ;;		On entry : 0/0
 10358 ;;		On exit  : 0/0
 10359 ;;		Unchanged: 0/0
 10360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10365 ;;Total ram usage:        0 bytes
 10366 ;; Hardware stack levels used:    1
 10367 ;; Hardware stack levels required when called:    4
 10368 ;; This function calls:
 10369 ;;		Nothing
 10370 ;; This function is called by:
 10371 ;;		_RTCC_time_set
 10372 ;; This function uses a non-reentrant model
 10373 ;;
 10374                           
 10375                           	psect	text52
 10376  003A50                     __ptext52:
 10377                           	opt stack 0
 10378  003A50                     _RTCC_time_set_cursor:
 10379                           	opt stack 25
 10380                           
 10381                           ;My_header\My_RTCC.h: 294: if (edit_flag.flag.ss)edit_flag.flags = 0x02;
 10382                           
 10383                           ; BSR set to: 0
 10384                           ;incstack = 0
 10385  003A50  0100               	movlb	0	; () banked
 10386  003A52  A1CE               	btfss	_edit_flag& (0+255),0,b
 10387  003A54  D004               	goto	l453
 10388                           
 10389                           ; BSR set to: 0
 10390  003A56  0E02               	movlw	2
 10391  003A58  0100               	movlb	0	; () banked
 10392  003A5A  6FCE               	movwf	_edit_flag& (0+255),b
 10393  003A5C  0012               	return	
 10394  003A5E                     l453:
 10395                           
 10396                           ; BSR set to: 0
 10397                           ;My_header\My_RTCC.h: 295: else if (edit_flag.flag.mm)edit_flag.flags = 0x04;
 10398  003A5E  0100               	movlb	0	; () banked
 10399  003A60  A3CE               	btfss	_edit_flag& (0+255),1,b
 10400  003A62  D004               	goto	l455
 10401                           
 10402                           ; BSR set to: 0
 10403  003A64  0E04               	movlw	4
 10404  003A66  0100               	movlb	0	; () banked
 10405  003A68  6FCE               	movwf	_edit_flag& (0+255),b
 10406  003A6A  0012               	return	
 10407  003A6C                     l455:
 10408                           
 10409                           ; BSR set to: 0
 10410                           ;My_header\My_RTCC.h: 296: else if (edit_flag.flag.hh)edit_flag.flags = 0x08;
 10411  003A6C  0100               	movlb	0	; () banked
 10412  003A6E  A5CE               	btfss	_edit_flag& (0+255),2,b
 10413  003A70  D004               	goto	l457
 10414                           
 10415                           ; BSR set to: 0
 10416  003A72  0E08               	movlw	8
 10417  003A74  0100               	movlb	0	; () banked
 10418  003A76  6FCE               	movwf	_edit_flag& (0+255),b
 10419  003A78  0012               	return	
 10420  003A7A                     l457:
 10421                           
 10422                           ; BSR set to: 0
 10423                           ;My_header\My_RTCC.h: 297: else if (edit_flag.flag.DD)edit_flag.flags = 0x10;
 10424  003A7A  0100               	movlb	0	; () banked
 10425  003A7C  A7CE               	btfss	_edit_flag& (0+255),3,b
 10426  003A7E  D004               	goto	l459
 10427                           
 10428                           ; BSR set to: 0
 10429  003A80  0E10               	movlw	16
 10430  003A82  0100               	movlb	0	; () banked
 10431  003A84  6FCE               	movwf	_edit_flag& (0+255),b
 10432  003A86  0012               	return	
 10433  003A88                     l459:
 10434                           
 10435                           ; BSR set to: 0
 10436                           ;My_header\My_RTCC.h: 298: else if (edit_flag.flag.MM)edit_flag.flags = 0x20;
 10437  003A88  0100               	movlb	0	; () banked
 10438  003A8A  A9CE               	btfss	_edit_flag& (0+255),4,b
 10439  003A8C  D004               	goto	l461
 10440                           
 10441                           ; BSR set to: 0
 10442  003A8E  0E20               	movlw	32
 10443  003A90  0100               	movlb	0	; () banked
 10444  003A92  6FCE               	movwf	_edit_flag& (0+255),b
 10445  003A94  0012               	return	
 10446  003A96                     l461:
 10447                           
 10448                           ; BSR set to: 0
 10449                           ;My_header\My_RTCC.h: 299: else if (edit_flag.flag.YY)edit_flag.flags = 0x01;
 10450  003A96  0100               	movlb	0	; () banked
 10451  003A98  ABCE               	btfss	_edit_flag& (0+255),5,b
 10452  003A9A  0012               	return	
 10453                           
 10454                           ; BSR set to: 0
 10455  003A9C  0E01               	movlw	1
 10456  003A9E  0100               	movlb	0	; () banked
 10457  003AA0  6FCE               	movwf	_edit_flag& (0+255),b
 10458  003AA2  0012               	return	
 10459  003AA4                     __end_of_RTCC_time_set_cursor:
 10460                           	opt stack 0
 10461                           tblptru	equ	0xFF8
 10462                           tblptrh	equ	0xFF7
 10463                           tblptrl	equ	0xFF6
 10464                           tablat	equ	0xFF5
 10465                           prodh	equ	0xFF4
 10466                           prodl	equ	0xFF3
 10467                           intcon	equ	0xFF2
 10468                           intcon2	equ	0xFF1
 10469                           postinc0	equ	0xFEE
 10470                           wreg	equ	0xFE8
 10471                           postdec1	equ	0xFE5
 10472                           fsr1l	equ	0xFE1
 10473                           indf2	equ	0xFDF
 10474                           postinc2	equ	0xFDE
 10475                           postdec2	equ	0xFDD
 10476                           fsr2h	equ	0xFDA
 10477                           fsr2l	equ	0xFD9
 10478                           status	equ	0xFD8
 10479                           
 10480 ;; *************** function _RTCC_loop *****************
 10481 ;; Defined at:
 10482 ;;		line 368 in file "../My_header\My_RTCC.h"
 10483 ;; Parameters:    Size  Location     Type
 10484 ;;		None
 10485 ;; Auto vars:     Size  Location     Type
 10486 ;;		None
 10487 ;; Return value:  Size  Location     Type
 10488 ;;		None               void
 10489 ;; Registers used:
 10490 ;;		wreg, status,2, status,0
 10491 ;; Tracked objects:
 10492 ;;		On entry : 0/0
 10493 ;;		On exit  : 0/0
 10494 ;;		Unchanged: 0/0
 10495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10500 ;;Total ram usage:        0 bytes
 10501 ;; Hardware stack levels used:    1
 10502 ;; Hardware stack levels required when called:    4
 10503 ;; This function calls:
 10504 ;;		Nothing
 10505 ;; This function is called by:
 10506 ;;		_main
 10507 ;; This function uses a non-reentrant model
 10508 ;;
 10509                           
 10510                           	psect	text53
 10511  0036B2                     __ptext53:
 10512                           	opt stack 0
 10513  0036B2                     _RTCC_loop:
 10514                           	opt stack 26
 10515                           
 10516                           ;My_header\My_RTCC.h: 369: static uint8_t prev_halfsec;
 10517                           ;My_header\My_RTCC.h: 370: if (RTCCFGbits.HALFSEC != prev_halfsec) {
 10518                           
 10519                           ; BSR set to: 0
 10520                           ;incstack = 0
 10521  0036B2  010F               	movlb	15	; () banked
 10522  0036B4  A73F               	btfss	63,3,b	;volatile
 10523  0036B6  D002               	goto	u5280
 10524  0036B8  0E01               	movlw	1
 10525  0036BA  D001               	goto	u5286
 10526  0036BC                     u5280:
 10527  0036BC  0E00               	movlw	0
 10528  0036BE                     u5286:
 10529  0036BE  1830               	xorwf	RTCC_loop@prev_halfsec,w,c
 10530  0036C0  B4D8               	btfsc	status,2,c
 10531  0036C2  0012               	return	
 10532                           
 10533                           ; BSR set to: 15
 10534                           ;My_header\My_RTCC.h: 371: prev_halfsec = RTCCFGbits.HALFSEC;
 10535  0036C4  0E00               	movlw	0
 10536  0036C6  010F               	movlb	15	; () banked
 10537  0036C8  B73F               	btfsc	63,3,b	;volatile
 10538  0036CA  0E01               	movlw	1
 10539  0036CC  6E30               	movwf	RTCC_loop@prev_halfsec,c
 10540                           
 10541                           ;My_header\My_RTCC.h: 372: colon = RTCCFGbits.HALFSEC;
 10542  0036CE  0E00               	movlw	0
 10543  0036D0  010F               	movlb	15	; () banked
 10544  0036D2  B73F               	btfsc	63,3,b	;volatile
 10545  0036D4  0E01               	movlw	1
 10546  0036D6  0100               	movlb	0	; () banked
 10547  0036D8  6FCB               	movwf	_colon& (0+255),b
 10548                           
 10549                           ; BSR set to: 0
 10550                           ;My_header\My_RTCC.h: 373: if (!RTCCFGbits.HALFSEC) {
 10551  0036DA  010F               	movlb	15	; () banked
 10552  0036DC  B73F               	btfsc	63,3,b	;volatile
 10553  0036DE  D024               	goto	l5216
 10554                           
 10555                           ; BSR set to: 15
 10556                           ;My_header\My_RTCC.h: 374: epoch_now++;
 10557  0036E0  0E01               	movlw	1
 10558  0036E2  0100               	movlb	0	; () banked
 10559  0036E4  27DA               	addwf	_epoch_now& (0+255),f,b
 10560  0036E6  0E00               	movlw	0
 10561  0036E8  0100               	movlb	0	; () banked
 10562  0036EA  23DB               	addwfc	(_epoch_now+1)& (0+255),f,b
 10563  0036EC  0100               	movlb	0	; () banked
 10564  0036EE  23DC               	addwfc	(_epoch_now+2)& (0+255),f,b
 10565  0036F0  0100               	movlb	0	; () banked
 10566  0036F2  23DD               	addwfc	(_epoch_now+3)& (0+255),f,b
 10567                           
 10568                           ;My_header\My_RTCC.h: 375: if (epoch_now >= 3155760000)epoch_now -= 3155760000;
 10569  0036F4  0E80               	movlw	128
 10570  0036F6  0100               	movlb	0	; () banked
 10571  0036F8  5DDA               	subwf	_epoch_now& (0+255),w,b
 10572  0036FA  0E13               	movlw	19
 10573  0036FC  0100               	movlb	0	; () banked
 10574  0036FE  59DB               	subwfb	(_epoch_now+1)& (0+255),w,b
 10575  003700  0E19               	movlw	25
 10576  003702  0100               	movlb	0	; () banked
 10577  003704  59DC               	subwfb	(_epoch_now+2)& (0+255),w,b
 10578  003706  0EBC               	movlw	188
 10579  003708  0100               	movlb	0	; () banked
 10580  00370A  59DD               	subwfb	(_epoch_now+3)& (0+255),w,b
 10581  00370C  A0D8               	btfss	status,0,c
 10582  00370E  D00C               	goto	l5216
 10583                           
 10584                           ; BSR set to: 0
 10585  003710  0E80               	movlw	128
 10586  003712  0100               	movlb	0	; () banked
 10587  003714  5FDA               	subwf	_epoch_now& (0+255),f,b
 10588  003716  0E13               	movlw	19
 10589  003718  0100               	movlb	0	; () banked
 10590  00371A  5BDB               	subwfb	(_epoch_now+1)& (0+255),f,b
 10591  00371C  0E19               	movlw	25
 10592  00371E  0100               	movlb	0	; () banked
 10593  003720  5BDC               	subwfb	(_epoch_now+2)& (0+255),f,b
 10594  003722  0EBC               	movlw	188
 10595  003724  0100               	movlb	0	; () banked
 10596  003726  5BDD               	subwfb	(_epoch_now+3)& (0+255),f,b
 10597  003728                     l5216:
 10598                           
 10599                           ;My_header\My_RTCC.h: 376: }
 10600                           ;My_header\My_RTCC.h: 377: time_change_flag = 1;
 10601  003728  0E01               	movlw	1
 10602  00372A  0100               	movlb	0	; () banked
 10603  00372C  6FD1               	movwf	_time_change_flag& (0+255),b
 10604  00372E  0012               	return	
 10605  003730                     __end_of_RTCC_loop:
 10606                           	opt stack 0
 10607                           tblptru	equ	0xFF8
 10608                           tblptrh	equ	0xFF7
 10609                           tblptrl	equ	0xFF6
 10610                           tablat	equ	0xFF5
 10611                           prodh	equ	0xFF4
 10612                           prodl	equ	0xFF3
 10613                           intcon	equ	0xFF2
 10614                           intcon2	equ	0xFF1
 10615                           postinc0	equ	0xFEE
 10616                           wreg	equ	0xFE8
 10617                           postdec1	equ	0xFE5
 10618                           fsr1l	equ	0xFE1
 10619                           indf2	equ	0xFDF
 10620                           postinc2	equ	0xFDE
 10621                           postdec2	equ	0xFDD
 10622                           fsr2h	equ	0xFDA
 10623                           fsr2l	equ	0xFD9
 10624                           status	equ	0xFD8
 10625                           
 10626 ;; *************** function _Auto_cut *****************
 10627 ;; Defined at:
 10628 ;;		line 115 in file "PIC18F27J53-ChargeStation6-02.h"
 10629 ;; Parameters:    Size  Location     Type
 10630 ;;		None
 10631 ;; Auto vars:     Size  Location     Type
 10632 ;;  i               1   12[BANK0 ] unsigned char 
 10633 ;; Return value:  Size  Location     Type
 10634 ;;		None               void
 10635 ;; Registers used:
 10636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10637 ;; Tracked objects:
 10638 ;;		On entry : 0/0
 10639 ;;		On exit  : 0/0
 10640 ;;		Unchanged: 0/0
 10641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10643 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10644 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10645 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10646 ;;Total ram usage:        3 bytes
 10647 ;; Hardware stack levels used:    1
 10648 ;; Hardware stack levels required when called:    5
 10649 ;; This function calls:
 10650 ;;		_ADC
 10651 ;;		_OUT
 10652 ;;		___wmul
 10653 ;; This function is called by:
 10654 ;;		_main
 10655 ;; This function uses a non-reentrant model
 10656 ;;
 10657                           
 10658                           	psect	text54
 10659  002762                     __ptext54:
 10660                           	opt stack 0
 10661  002762                     _Auto_cut:
 10662                           	opt stack 25
 10663                           
 10664                           ;PIC18F27J53-ChargeStation6-02.h: 116: for (uint8_t i = 0; i < 3; i++) {
 10665                           
 10666                           ;incstack = 0
 10667  002762  0E00               	movlw	0
 10668  002764  0100               	movlb	0	; () banked
 10669  002766  6F6C               	movwf	Auto_cut@i& (0+255),b
 10670                           
 10671                           ; BSR set to: 0
 10672  002768  0E02               	movlw	2
 10673  00276A  0100               	movlb	0	; () banked
 10674  00276C  656C               	cpfsgt	Auto_cut@i& (0+255),b
 10675  00276E  D001               	goto	l5224
 10676  002770  0012               	return	
 10677  002772                     l5224:
 10678                           
 10679                           ; BSR set to: 0
 10680                           ;PIC18F27J53-ChargeStation6-02.h: 117: I[i] = 13 * ADC(i + 8) / 16;
 10681  002772  0100               	movlb	0	; () banked
 10682  002774  516C               	movf	Auto_cut@i& (0+255),w,b
 10683  002776  0F08               	addlw	8
 10684  002778  EC93  F01F         	call	_ADC
 10685  00277C  0100               	movlb	0	; () banked
 10686  00277E  C060  F064         	movff	?_ADC,___wmul@multiplier
 10687  002782  0100               	movlb	0	; () banked
 10688  002784  C061  F065         	movff	?_ADC+1,___wmul@multiplier+1
 10689  002788  0E00               	movlw	0
 10690  00278A  0100               	movlb	0	; () banked
 10691  00278C  6F67               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10692  00278E  0E0D               	movlw	13
 10693  002790  0100               	movlb	0	; () banked
 10694  002792  6F66               	movwf	___wmul@multiplicand& (0+255),b
 10695  002794  EC8C  F01E         	call	___wmul	;wreg free
 10696  002798  0E04               	movlw	4
 10697  00279A  0100               	movlb	0	; () banked
 10698  00279C  6F6A               	movwf	??_Auto_cut& (0+255),b
 10699  00279E                     u5335:
 10700  00279E  0100               	movlb	0	; () banked
 10701  0027A0  90D8               	bcf	status,0,c
 10702  0027A2  3365               	rrcf	(?___wmul+1)& (0+255),f,b
 10703  0027A4  3364               	rrcf	?___wmul& (0+255),f,b
 10704  0027A6  0100               	movlb	0	; () banked
 10705  0027A8  2F6A               	decfsz	??_Auto_cut& (0+255),f,b
 10706  0027AA  D7F9               	goto	u5335
 10707  0027AC  0100               	movlb	0	; () banked
 10708  0027AE  516C               	movf	Auto_cut@i& (0+255),w,b
 10709  0027B0  0D02               	mullw	2
 10710  0027B2  0E22               	movlw	low _I
 10711  0027B4  24F3               	addwf	prodl,w,c
 10712  0027B6  6ED9               	movwf	fsr2l,c
 10713  0027B8  0E00               	movlw	high _I
 10714  0027BA  20F4               	addwfc	prodh,w,c
 10715  0027BC  6EDA               	movwf	fsr2h,c
 10716  0027BE  0100               	movlb	0	; () banked
 10717  0027C0  C064  FFDE         	movff	?___wmul,postinc2
 10718  0027C4  0100               	movlb	0	; () banked
 10719  0027C6  C065  FFDD         	movff	?___wmul+1,postdec2
 10720                           
 10721                           ; BSR set to: 0
 10722                           ;PIC18F27J53-ChargeStation6-02.h: 118: if (auto_cut_ON[i]) {
 10723  0027CA  0100               	movlb	0	; () banked
 10724  0027CC  516C               	movf	Auto_cut@i& (0+255),w,b
 10725  0027CE  0D01               	mullw	1
 10726  0027D0  0E28               	movlw	low _auto_cut_ON
 10727  0027D2  24F3               	addwf	prodl,w,c
 10728  0027D4  6ED9               	movwf	fsr2l,c
 10729  0027D6  0E00               	movlw	high _auto_cut_ON
 10730  0027D8  20F4               	addwfc	prodh,w,c
 10731  0027DA  6EDA               	movwf	fsr2h,c
 10732  0027DC  50DF               	movf	indf2,w,c
 10733  0027DE  B4D8               	btfsc	status,2,c
 10734  0027E0  D04F               	goto	l5236
 10735                           
 10736                           ; BSR set to: 0
 10737                           ;PIC18F27J53-ChargeStation6-02.h: 119: if (I[i] < 100) {
 10738  0027E2  0100               	movlb	0	; () banked
 10739  0027E4  516C               	movf	Auto_cut@i& (0+255),w,b
 10740  0027E6  0D02               	mullw	2
 10741  0027E8  0E22               	movlw	low _I
 10742  0027EA  24F3               	addwf	prodl,w,c
 10743  0027EC  6ED9               	movwf	fsr2l,c
 10744  0027EE  0E00               	movlw	high _I
 10745  0027F0  20F4               	addwfc	prodh,w,c
 10746  0027F2  6EDA               	movwf	fsr2h,c
 10747  0027F4  CFDE F06A          	movff	postinc2,??_Auto_cut
 10748  0027F8  CFDD F06B          	movff	postdec2,??_Auto_cut+1
 10749  0027FC  0E64               	movlw	100
 10750  0027FE  0100               	movlb	0	; () banked
 10751  002800  5D6A               	subwf	??_Auto_cut& (0+255),w,b
 10752  002802  0E00               	movlw	0
 10753  002804  596B               	subwfb	(??_Auto_cut+1)& (0+255),w,b
 10754  002806  B0D8               	btfsc	status,0,c
 10755  002808  D02C               	goto	l5234
 10756                           
 10757                           ; BSR set to: 0
 10758                           ;PIC18F27J53-ChargeStation6-02.h: 120: cut_cnt[i]++;
 10759  00280A  0100               	movlb	0	; () banked
 10760  00280C  516C               	movf	Auto_cut@i& (0+255),w,b
 10761  00280E  0D02               	mullw	2
 10762  002810  0100               	movlb	0	; () banked
 10763  002812  0EBD               	movlw	low _cut_cnt
 10764  002814  24F3               	addwf	prodl,w,c
 10765  002816  6ED9               	movwf	fsr2l,c
 10766  002818  0100               	movlb	0	; () banked
 10767  00281A  0E00               	movlw	high _cut_cnt
 10768  00281C  20F4               	addwfc	prodh,w,c
 10769  00281E  6EDA               	movwf	fsr2h,c
 10770  002820  2ADE               	incf	postinc2,f,c
 10771  002822  0E00               	movlw	0
 10772  002824  22DD               	addwfc	postdec2,f,c
 10773                           
 10774                           ;PIC18F27J53-ChargeStation6-02.h: 121: if (cut_cnt[i] >= 46 * 6) {
 10775  002826  0100               	movlb	0	; () banked
 10776  002828  516C               	movf	Auto_cut@i& (0+255),w,b
 10777  00282A  0D02               	mullw	2
 10778  00282C  0100               	movlb	0	; () banked
 10779  00282E  0EBD               	movlw	low _cut_cnt
 10780  002830  24F3               	addwf	prodl,w,c
 10781  002832  6ED9               	movwf	fsr2l,c
 10782  002834  0100               	movlb	0	; () banked
 10783  002836  0E00               	movlw	high _cut_cnt
 10784  002838  20F4               	addwfc	prodh,w,c
 10785  00283A  6EDA               	movwf	fsr2h,c
 10786  00283C  CFDE F06A          	movff	postinc2,??_Auto_cut
 10787  002840  CFDD F06B          	movff	postdec2,??_Auto_cut+1
 10788  002844  0E14               	movlw	20
 10789  002846  0100               	movlb	0	; () banked
 10790  002848  5D6A               	subwf	??_Auto_cut& (0+255),w,b
 10791  00284A  0E01               	movlw	1
 10792  00284C  596B               	subwfb	(??_Auto_cut+1)& (0+255),w,b
 10793  00284E  A0D8               	btfss	status,0,c
 10794  002850  D017               	goto	l5236
 10795                           
 10796                           ; BSR set to: 0
 10797                           ;PIC18F27J53-ChargeStation6-02.h: 122: OUT(i, 0);
 10798  002852  0E00               	movlw	0
 10799  002854  0100               	movlb	0	; () banked
 10800  002856  6F60               	movwf	OUT@value& (0+255),b
 10801  002858  0100               	movlb	0	; () banked
 10802  00285A  516C               	movf	Auto_cut@i& (0+255),w,b
 10803  00285C  EC52  F01D         	call	_OUT
 10804  002860  D00F               	goto	l5236
 10805  002862                     l5234:
 10806                           
 10807                           ;PIC18F27J53-ChargeStation6-02.h: 125: cut_cnt[i] = 0;
 10808  002862  0100               	movlb	0	; () banked
 10809  002864  516C               	movf	Auto_cut@i& (0+255),w,b
 10810  002866  0D02               	mullw	2
 10811  002868  0100               	movlb	0	; () banked
 10812  00286A  0EBD               	movlw	low _cut_cnt
 10813  00286C  24F3               	addwf	prodl,w,c
 10814  00286E  6ED9               	movwf	fsr2l,c
 10815  002870  0100               	movlb	0	; () banked
 10816  002872  0E00               	movlw	high _cut_cnt
 10817  002874  20F4               	addwfc	prodh,w,c
 10818  002876  6EDA               	movwf	fsr2h,c
 10819  002878  0E00               	movlw	0
 10820  00287A  6EDE               	movwf	postinc2,c
 10821  00287C  0E00               	movlw	0
 10822  00287E  6EDD               	movwf	postdec2,c
 10823  002880                     l5236:
 10824  002880  0100               	movlb	0	; () banked
 10825  002882  2B6C               	incf	Auto_cut@i& (0+255),f,b
 10826                           
 10827                           ; BSR set to: 0
 10828  002884  0E02               	movlw	2
 10829  002886  0100               	movlb	0	; () banked
 10830  002888  656C               	cpfsgt	Auto_cut@i& (0+255),b
 10831  00288A  D773               	goto	l5224
 10832  00288C  0012               	return	
 10833  00288E                     __end_of_Auto_cut:
 10834                           	opt stack 0
 10835                           tblptru	equ	0xFF8
 10836                           tblptrh	equ	0xFF7
 10837                           tblptrl	equ	0xFF6
 10838                           tablat	equ	0xFF5
 10839                           prodh	equ	0xFF4
 10840                           prodl	equ	0xFF3
 10841                           intcon	equ	0xFF2
 10842                           intcon2	equ	0xFF1
 10843                           postinc0	equ	0xFEE
 10844                           wreg	equ	0xFE8
 10845                           postdec1	equ	0xFE5
 10846                           fsr1l	equ	0xFE1
 10847                           indf2	equ	0xFDF
 10848                           postinc2	equ	0xFDE
 10849                           postdec2	equ	0xFDD
 10850                           fsr2h	equ	0xFDA
 10851                           fsr2l	equ	0xFD9
 10852                           status	equ	0xFD8
 10853                           
 10854 ;; *************** function ___wmul *****************
 10855 ;; Defined at:
 10856 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
 10857 ;; Parameters:    Size  Location     Type
 10858 ;;  multiplier      2    4[BANK0 ] unsigned int 
 10859 ;;  multiplicand    2    6[BANK0 ] unsigned int 
 10860 ;; Auto vars:     Size  Location     Type
 10861 ;;  product         2    8[BANK0 ] unsigned int 
 10862 ;; Return value:  Size  Location     Type
 10863 ;;                  2    4[BANK0 ] unsigned int 
 10864 ;; Registers used:
 10865 ;;		wreg, status,2, status,0, prodl, prodh
 10866 ;; Tracked objects:
 10867 ;;		On entry : 0/0
 10868 ;;		On exit  : 0/0
 10869 ;;		Unchanged: 0/0
 10870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10871 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10872 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10874 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10875 ;;Total ram usage:        6 bytes
 10876 ;; Hardware stack levels used:    1
 10877 ;; Hardware stack levels required when called:    4
 10878 ;; This function calls:
 10879 ;;		Nothing
 10880 ;; This function is called by:
 10881 ;;		_Auto_cut
 10882 ;; This function uses a non-reentrant model
 10883 ;;
 10884                           
 10885                           	psect	text55
 10886  003D18                     __ptext55:
 10887                           	opt stack 0
 10888  003D18                     ___wmul:
 10889                           	opt stack 25
 10890                           
 10891                           ; BSR set to: 0
 10892                           ;incstack = 0
 10893  003D18  0100               	movlb	0	; () banked
 10894  003D1A  5164               	movf	___wmul@multiplier& (0+255),w,b
 10895  003D1C  0100               	movlb	0	; () banked
 10896  003D1E  0366               	mulwf	___wmul@multiplicand& (0+255),b
 10897  003D20  CFF3 F068          	movff	prodl,___wmul@product
 10898  003D24  CFF4 F069          	movff	prodh,___wmul@product+1
 10899  003D28  0100               	movlb	0	; () banked
 10900  003D2A  5164               	movf	___wmul@multiplier& (0+255),w,b
 10901  003D2C  0100               	movlb	0	; () banked
 10902  003D2E  0367               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10903  003D30  50F3               	movf	prodl,w,c
 10904  003D32  0100               	movlb	0	; () banked
 10905  003D34  2769               	addwf	(___wmul@product+1)& (0+255),f,b
 10906  003D36  0100               	movlb	0	; () banked
 10907  003D38  5165               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10908  003D3A  0100               	movlb	0	; () banked
 10909  003D3C  0366               	mulwf	___wmul@multiplicand& (0+255),b
 10910  003D3E  50F3               	movf	prodl,w,c
 10911  003D40  0100               	movlb	0	; () banked
 10912  003D42  2769               	addwf	(___wmul@product+1)& (0+255),f,b
 10913                           
 10914                           ; BSR set to: 0
 10915  003D44  C068  F064         	movff	___wmul@product,?___wmul
 10916  003D48  C069  F065         	movff	___wmul@product+1,?___wmul+1
 10917  003D4C  0012               	return	
 10918  003D4E                     __end_of___wmul:
 10919                           	opt stack 0
 10920                           tblptru	equ	0xFF8
 10921                           tblptrh	equ	0xFF7
 10922                           tblptrl	equ	0xFF6
 10923                           tablat	equ	0xFF5
 10924                           prodh	equ	0xFF4
 10925                           prodl	equ	0xFF3
 10926                           intcon	equ	0xFF2
 10927                           intcon2	equ	0xFF1
 10928                           postinc0	equ	0xFEE
 10929                           wreg	equ	0xFE8
 10930                           postdec1	equ	0xFE5
 10931                           fsr1l	equ	0xFE1
 10932                           indf2	equ	0xFDF
 10933                           postinc2	equ	0xFDE
 10934                           postdec2	equ	0xFDD
 10935                           fsr2h	equ	0xFDA
 10936                           fsr2l	equ	0xFD9
 10937                           status	equ	0xFD8
 10938                           
 10939 ;; *************** function _OUT *****************
 10940 ;; Defined at:
 10941 ;;		line 37 in file "PIC18F27J53-ChargeStation6-02.h"
 10942 ;; Parameters:    Size  Location     Type
 10943 ;;  b               1    wreg     unsigned char 
 10944 ;;  value           1    0[BANK0 ] unsigned char 
 10945 ;; Auto vars:     Size  Location     Type
 10946 ;;  b               1    1[BANK0 ] unsigned char 
 10947 ;; Return value:  Size  Location     Type
 10948 ;;		None               void
 10949 ;; Registers used:
 10950 ;;		wreg, status,2, status,0
 10951 ;; Tracked objects:
 10952 ;;		On entry : 0/0
 10953 ;;		On exit  : 0/0
 10954 ;;		Unchanged: 0/0
 10955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10956 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10957 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10959 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10960 ;;Total ram usage:        2 bytes
 10961 ;; Hardware stack levels used:    1
 10962 ;; Hardware stack levels required when called:    4
 10963 ;; This function calls:
 10964 ;;		Nothing
 10965 ;; This function is called by:
 10966 ;;		_Auto_cut
 10967 ;;		_nomal_mode_loop
 10968 ;;		_sleep_loop
 10969 ;;		_main
 10970 ;; This function uses a non-reentrant model
 10971 ;;
 10972                           
 10973                           	psect	text56
 10974  003AA4                     __ptext56:
 10975                           	opt stack 0
 10976  003AA4                     _OUT:
 10977                           	opt stack 25
 10978                           
 10979                           ; BSR set to: 0
 10980                           ;incstack = 0
 10981                           ;OUT@b stored from wreg
 10982  003AA4  0100               	movlb	0	; () banked
 10983  003AA6  6F61               	movwf	OUT@b& (0+255),b
 10984                           
 10985                           ; BSR set to: 0
 10986                           ;PIC18F27J53-ChargeStation6-02.h: 38: switch (b) {
 10987  003AA8  D01B               	goto	l5102
 10988  003AAA                     l544:
 10989                           
 10990                           ; BSR set to: 0
 10991                           ;PIC18F27J53-ChargeStation6-02.h: 40: LATA5 = value;
 10992  003AAA  0100               	movlb	0	; () banked
 10993  003AAC  A160               	btfss	OUT@value& (0+255),0,b
 10994  003AAE  D001               	bra	u5145
 10995  003AB0  8A89               	bsf	3977,5,c	;volatile
 10996  003AB2                     u5145:
 10997  003AB2  0100               	movlb	0	; () banked
 10998  003AB4  B160               	btfsc	OUT@value& (0+255),0,b
 10999  003AB6  D001               	bra	u5146
 11000  003AB8  9A89               	bcf	3977,5,c	;volatile
 11001  003ABA                     u5146:
 11002                           
 11003                           ;PIC18F27J53-ChargeStation6-02.h: 41: break;
 11004  003ABA  0012               	return	
 11005  003ABC                     l546:
 11006                           
 11007                           ; BSR set to: 0
 11008                           ;PIC18F27J53-ChargeStation6-02.h: 43: LATA6 = value;
 11009  003ABC  0100               	movlb	0	; () banked
 11010  003ABE  A160               	btfss	OUT@value& (0+255),0,b
 11011  003AC0  D001               	bra	u5155
 11012  003AC2  8C89               	bsf	3977,6,c	;volatile
 11013  003AC4                     u5155:
 11014  003AC4  0100               	movlb	0	; () banked
 11015  003AC6  B160               	btfsc	OUT@value& (0+255),0,b
 11016  003AC8  D001               	bra	u5156
 11017  003ACA  9C89               	bcf	3977,6,c	;volatile
 11018  003ACC                     u5156:
 11019                           
 11020                           ;PIC18F27J53-ChargeStation6-02.h: 44: break;
 11021  003ACC  0012               	return	
 11022  003ACE                     l547:
 11023                           
 11024                           ; BSR set to: 0
 11025                           ;PIC18F27J53-ChargeStation6-02.h: 46: LATA7 = value;
 11026  003ACE  0100               	movlb	0	; () banked
 11027  003AD0  A160               	btfss	OUT@value& (0+255),0,b
 11028  003AD2  D001               	bra	u5165
 11029  003AD4  8E89               	bsf	3977,7,c	;volatile
 11030  003AD6                     u5165:
 11031  003AD6  0100               	movlb	0	; () banked
 11032  003AD8  B160               	btfsc	OUT@value& (0+255),0,b
 11033  003ADA  D001               	bra	u5166
 11034  003ADC  9E89               	bcf	3977,7,c	;volatile
 11035  003ADE                     u5166:
 11036                           
 11037                           ;PIC18F27J53-ChargeStation6-02.h: 47: break;
 11038  003ADE  0012               	return	
 11039  003AE0                     l5102:
 11040                           
 11041                           ; BSR set to: 0
 11042  003AE0  0100               	movlb	0	; () banked
 11043  003AE2  5161               	movf	OUT@b& (0+255),w,b
 11044                           
 11045                           ; Switch size 1, requested type "space"
 11046                           ; Number of cases is 3, Range of values is 0 to 2
 11047                           ; switch strategies available:
 11048                           ; Name         Instructions Cycles
 11049                           ; simple_byte           10     6 (average)
 11050                           ;	Chosen strategy is simple_byte
 11051  003AE4  0A00               	xorlw	0	; case 0
 11052  003AE6  B4D8               	btfsc	status,2,c
 11053  003AE8  D7E0               	goto	l544
 11054  003AEA  0A01               	xorlw	1	; case 1
 11055  003AEC  B4D8               	btfsc	status,2,c
 11056  003AEE  D7E6               	goto	l546
 11057  003AF0  0A03               	xorlw	3	; case 2
 11058  003AF2  A4D8               	btfss	status,2,c
 11059  003AF4  0012               	return	
 11060  003AF6  D7EB               	goto	l547
 11061  003AF8                     __end_of_OUT:
 11062                           	opt stack 0
 11063                           tblptru	equ	0xFF8
 11064                           tblptrh	equ	0xFF7
 11065                           tblptrl	equ	0xFF6
 11066                           tablat	equ	0xFF5
 11067                           prodh	equ	0xFF4
 11068                           prodl	equ	0xFF3
 11069                           intcon	equ	0xFF2
 11070                           intcon2	equ	0xFF1
 11071                           postinc0	equ	0xFEE
 11072                           wreg	equ	0xFE8
 11073                           postdec1	equ	0xFE5
 11074                           fsr1l	equ	0xFE1
 11075                           indf2	equ	0xFDF
 11076                           postinc2	equ	0xFDE
 11077                           postdec2	equ	0xFDD
 11078                           fsr2h	equ	0xFDA
 11079                           fsr2l	equ	0xFD9
 11080                           status	equ	0xFD8
 11081                           
 11082 ;; *************** function _ADC *****************
 11083 ;; Defined at:
 11084 ;;		line 169 in file "../My_header\My_header.h"
 11085 ;; Parameters:    Size  Location     Type
 11086 ;;  ch              1    wreg     unsigned char 
 11087 ;; Auto vars:     Size  Location     Type
 11088 ;;  ch              1    3[BANK0 ] unsigned char 
 11089 ;; Return value:  Size  Location     Type
 11090 ;;                  2    0[BANK0 ] unsigned int 
 11091 ;; Registers used:
 11092 ;;		wreg, status,2, status,0
 11093 ;; Tracked objects:
 11094 ;;		On entry : 0/0
 11095 ;;		On exit  : 0/0
 11096 ;;		Unchanged: 0/0
 11097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11098 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11099 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11100 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11101 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11102 ;;Total ram usage:        4 bytes
 11103 ;; Hardware stack levels used:    1
 11104 ;; Hardware stack levels required when called:    4
 11105 ;; This function calls:
 11106 ;;		Nothing
 11107 ;; This function is called by:
 11108 ;;		_Auto_cut
 11109 ;; This function uses a non-reentrant model
 11110 ;;
 11111                           
 11112                           	psect	text57
 11113  003F26                     __ptext57:
 11114                           	opt stack 0
 11115  003F26                     _ADC:
 11116                           	opt stack 25
 11117                           
 11118                           ; BSR set to: 0
 11119                           ;incstack = 0
 11120                           ;ADC@ch stored from wreg
 11121  003F26  0100               	movlb	0	; () banked
 11122  003F28  6F63               	movwf	ADC@ch& (0+255),b
 11123                           
 11124                           ; BSR set to: 0
 11125                           ;My_header\My_header.h: 170: ADCON0bits.CHS = ch;
 11126  003F2A  C063  F062         	movff	ADC@ch,??_ADC
 11127  003F2E  0100               	movlb	0	; () banked
 11128  003F30  4762               	rlncf	??_ADC& (0+255),f,b
 11129  003F32  4762               	rlncf	??_ADC& (0+255),f,b
 11130  003F34  50C2               	movf	4034,w,c	;volatile
 11131  003F36  0100               	movlb	0	; () banked
 11132  003F38  1962               	xorwf	??_ADC& (0+255),w,b
 11133  003F3A  0BC3               	andlw	-61
 11134  003F3C  1962               	xorwf	??_ADC& (0+255),w,b
 11135  003F3E  6EC2               	movwf	4034,c	;volatile
 11136                           
 11137                           ; BSR set to: 0
 11138                           ;My_header\My_header.h: 171: ADCON0bits.ADON = 1;
 11139  003F40  80C2               	bsf	4034,0,c	;volatile
 11140                           
 11141                           ; BSR set to: 0
 11142                           ;My_header\My_header.h: 173: ADCON0bits.GO_nDONE = 1;
 11143  003F42  82C2               	bsf	4034,1,c	;volatile
 11144  003F44                     l155:
 11145                           
 11146                           ; BSR set to: 0
 11147  003F44  B2C2               	btfsc	4034,1,c	;volatile
 11148  003F46  D7FE               	goto	l155
 11149                           
 11150                           ; BSR set to: 0
 11151                           ;My_header\My_header.h: 175: return ADRES;
 11152  003F48  CFC3 F060          	movff	4035,?_ADC	;volatile
 11153  003F4C  CFC4 F061          	movff	4036,?_ADC+1	;volatile
 11154                           
 11155                           ; BSR set to: 0
 11156  003F50  0012               	return	
 11157  003F52                     __end_of_ADC:
 11158                           	opt stack 0
 11159                           tblptru	equ	0xFF8
 11160                           tblptrh	equ	0xFF7
 11161                           tblptrl	equ	0xFF6
 11162                           tablat	equ	0xFF5
 11163                           prodh	equ	0xFF4
 11164                           prodl	equ	0xFF3
 11165                           intcon	equ	0xFF2
 11166                           intcon2	equ	0xFF1
 11167                           postinc0	equ	0xFEE
 11168                           wreg	equ	0xFE8
 11169                           postdec1	equ	0xFE5
 11170                           fsr1l	equ	0xFE1
 11171                           indf2	equ	0xFDF
 11172                           postinc2	equ	0xFDE
 11173                           postdec2	equ	0xFDD
 11174                           fsr2h	equ	0xFDA
 11175                           fsr2l	equ	0xFD9
 11176                           status	equ	0xFD8
 11177                           
 11178 ;; *************** function _ISR *****************
 11179 ;; Defined at:
 11180 ;;		line 55 in file "PIC18F27J53-ChargeStation6-02.c"
 11181 ;; Parameters:    Size  Location     Type
 11182 ;;		None
 11183 ;; Auto vars:     Size  Location     Type
 11184 ;;  ascii           1   32[COMRAM] unsigned char 
 11185 ;; Return value:  Size  Location     Type
 11186 ;;		None               void
 11187 ;; Registers used:
 11188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11189 ;; Tracked objects:
 11190 ;;		On entry : 0/0
 11191 ;;		On exit  : 0/0
 11192 ;;		Unchanged: 0/0
 11193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11195 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11196 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11197 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11198 ;;Total ram usage:       15 bytes
 11199 ;; Hardware stack levels used:    1
 11200 ;; Hardware stack levels required when called:    3
 11201 ;; This function calls:
 11202 ;;		_button_timer_interrupt
 11203 ;;		_delay_timer_interrupt
 11204 ;;		_integrating
 11205 ;;		_interrupt_TXIF
 11206 ;;		_lchika
 11207 ;;		_tx_send
 11208 ;; This function is called by:
 11209 ;;		Interrupt level 2
 11210 ;; This function uses a non-reentrant model
 11211 ;;
 11212                           
 11213                           	psect	intcode
 11214  000008                     __pintcode:
 11215                           	opt stack 0
 11216  000008                     _ISR:
 11217                           	opt stack 21
 11218                           
 11219                           ; BSR set to: 0
 11220                           ;incstack = 0
 11221  000008  CFFA F013          	movff	pclath,??_ISR
 11222  00000C  CFFB F014          	movff	pclatu,??_ISR+1
 11223  000010  CFE9 F015          	movff	fsr0l,??_ISR+2
 11224  000014  CFEA F016          	movff	fsr0h,??_ISR+3
 11225  000018  CFE1 F017          	movff	fsr1l,??_ISR+4
 11226  00001C  CFE2 F018          	movff	fsr1h,??_ISR+5
 11227  000020  CFD9 F019          	movff	fsr2l,??_ISR+6
 11228  000024  CFDA F01A          	movff	fsr2h,??_ISR+7
 11229  000028  CFF3 F01B          	movff	prodl,??_ISR+8
 11230  00002C  CFF4 F01C          	movff	prodh,??_ISR+9
 11231  000030  CFF6 F01D          	movff	tblptrl,??_ISR+10
 11232  000034  CFF7 F01E          	movff	tblptrh,??_ISR+11
 11233  000038  CFF8 F01F          	movff	tblptru,??_ISR+12
 11234  00003C  CFF5 F020          	movff	tablat,??_ISR+13
 11235                           
 11236                           ;PIC18F27J53-ChargeStation6-02.c: 56: interrupt_TXIF();
 11237  000040  EC55  F01E         	call	_interrupt_TXIF	;wreg free
 11238                           
 11239                           ;PIC18F27J53-ChargeStation6-02.c: 57: if (PIE1bits.RC1IE && PIR1bits.RC1IF) {
 11240  000044  BA9D               	btfsc	3997,5,c	;volatile
 11241  000046  AA9E               	btfss	3998,5,c	;volatile
 11242  000048  D006               	goto	i2l4316
 11243                           
 11244                           ;PIC18F27J53-ChargeStation6-02.c: 58: PIR1bits.RC1IF = 0;
 11245  00004A  9A9E               	bcf	3998,5,c	;volatile
 11246                           
 11247                           ;PIC18F27J53-ChargeStation6-02.c: 59: uint8_t ascii = RCREG1;
 11248  00004C  CFAF F021          	movff	4015,ISR@ascii	;volatile
 11249                           
 11250                           ;PIC18F27J53-ChargeStation6-02.c: 60: tx_send(ascii);
 11251  000050  5021               	movf	ISR@ascii,w,c
 11252  000052  EC19  F020         	call	_tx_send
 11253  000056                     i2l4316:
 11254                           
 11255                           ;PIC18F27J53-ChargeStation6-02.c: 61: }
 11256                           ;PIC18F27J53-ChargeStation6-02.c: 62: if (INTCONbits.T0IE && INTCONbits.T0IF) {
 11257  000056  BAF2               	btfsc	intcon,5,c	;volatile
 11258  000058  A4F2               	btfss	intcon,2,c	;volatile
 11259  00005A  D015               	goto	i2l4334
 11260                           
 11261                           ;PIC18F27J53-ChargeStation6-02.c: 63: INTCONbits.T0IF = 0;
 11262  00005C  94F2               	bcf	intcon,2,c	;volatile
 11263                           
 11264                           ;PIC18F27J53-ChargeStation6-02.c: 64: static uint16_t cnt_t0;
 11265                           ;PIC18F27J53-ChargeStation6-02.c: 65: if (cnt_t0) {
 11266  00005E  502F               	movf	ISR@cnt_t0+1,w,c
 11267  000060  102E               	iorwf	ISR@cnt_t0,w,c
 11268  000062  B4D8               	btfsc	status,2,c
 11269  000064  D004               	goto	i2l4326
 11270                           
 11271                           ;PIC18F27J53-ChargeStation6-02.c: 66: cnt_t0--;
 11272  000066  062E               	decf	ISR@cnt_t0,f,c
 11273  000068  A0D8               	btfss	status,0,c
 11274  00006A  062F               	decf	ISR@cnt_t0+1,f,c
 11275                           
 11276                           ;PIC18F27J53-ChargeStation6-02.c: 67: } else {
 11277  00006C  D009               	goto	i2l4332
 11278  00006E                     i2l4326:
 11279                           
 11280                           ;PIC18F27J53-ChargeStation6-02.c: 68: cnt_t0 = 120;
 11281  00006E  0E00               	movlw	0
 11282  000070  6E2F               	movwf	ISR@cnt_t0+1,c
 11283  000072  0E78               	movlw	120
 11284  000074  6E2E               	movwf	ISR@cnt_t0,c
 11285                           
 11286                           ;PIC18F27J53-ChargeStation6-02.c: 69: lchika();
 11287  000076  EC47  F014         	call	_lchika	;wreg free
 11288                           
 11289                           ;PIC18F27J53-ChargeStation6-02.c: 70: display_flag = 1;
 11290  00007A  0E01               	movlw	1
 11291  00007C  0100               	movlb	0	; () banked
 11292  00007E  6FCD               	movwf	_display_flag& (0+255),b
 11293  000080                     i2l4332:
 11294                           
 11295                           ;PIC18F27J53-ChargeStation6-02.c: 71: }
 11296                           ;PIC18F27J53-ChargeStation6-02.c: 72: cut_flag = 1;
 11297  000080  0E01               	movlw	1
 11298  000082  0100               	movlb	0	; () banked
 11299  000084  6FCC               	movwf	_cut_flag& (0+255),b
 11300  000086                     i2l4334:
 11301                           
 11302                           ;PIC18F27J53-ChargeStation6-02.c: 73: }
 11303                           ;PIC18F27J53-ChargeStation6-02.c: 74: if (PIE1bits.TMR1IE && PIR1bits.TMR1IF) {
 11304  000086  B09D               	btfsc	3997,0,c	;volatile
 11305  000088  A09E               	btfss	3998,0,c	;volatile
 11306  00008A  D005               	goto	i2l4344
 11307                           
 11308                           ;PIC18F27J53-ChargeStation6-02.c: 75: PIR1bits.TMR1IF = 0;
 11309  00008C  909E               	bcf	3998,0,c	;volatile
 11310                           
 11311                           ;PIC18F27J53-ChargeStation6-02.c: 76: TMR1H = 0x80;
 11312  00008E  0E80               	movlw	128
 11313  000090  6ECF               	movwf	4047,c	;volatile
 11314                           
 11315                           ;PIC18F27J53-ChargeStation6-02.c: 77: integrating();
 11316  000092  ECA9  F018         	call	_integrating	;wreg free
 11317  000096                     i2l4344:
 11318                           
 11319                           ;PIC18F27J53-ChargeStation6-02.c: 78: }
 11320                           ;PIC18F27J53-ChargeStation6-02.c: 79: if (PIE2bits.TMR3IE && PIR2bits.TMR3IF) {
 11321  000096  B2A0               	btfsc	4000,1,c	;volatile
 11322  000098  A2A1               	btfss	4001,1,c	;volatile
 11323  00009A  D039               	goto	i2l673
 11324                           
 11325                           ;PIC18F27J53-ChargeStation6-02.c: 80: PIR2bits.TMR3IF = 0;
 11326  00009C  92A1               	bcf	4001,1,c	;volatile
 11327                           
 11328                           ;PIC18F27J53-ChargeStation6-02.c: 81: button_timer_interrupt(&sw, !PORTAbits.RA3);
 11329  00009E  0E00               	movlw	high _sw
 11330  0000A0  6E02               	movwf	button_timer_interrupt@bt+1,c
 11331  0000A2  0E32               	movlw	low _sw
 11332  0000A4  6E01               	movwf	button_timer_interrupt@bt,c
 11333  0000A6  B680               	btfsc	3968,3,c	;volatile
 11334  0000A8  D002               	goto	i2u416_40
 11335  0000AA  0E01               	movlw	1
 11336  0000AC  D001               	goto	i2u416_46
 11337  0000AE                     i2u416_40:
 11338  0000AE  0E00               	movlw	0
 11339  0000B0                     i2u416_46:
 11340  0000B0  6E03               	movwf	button_timer_interrupt@sw_value,c
 11341  0000B2  ECE9  F00D         	call	_button_timer_interrupt	;wreg free
 11342                           
 11343                           ;PIC18F27J53-ChargeStation6-02.c: 82: button_timer_interrupt(&sw0, !PORTAbits.RA0);
 11344  0000B6  0E00               	movlw	high _sw0
 11345  0000B8  6E02               	movwf	button_timer_interrupt@bt+1,c
 11346  0000BA  0E36               	movlw	low _sw0
 11347  0000BC  6E01               	movwf	button_timer_interrupt@bt,c
 11348  0000BE  B080               	btfsc	3968,0,c	;volatile
 11349  0000C0  D002               	goto	i2u417_40
 11350  0000C2  0E01               	movlw	1
 11351  0000C4  D001               	goto	i2u417_46
 11352  0000C6                     i2u417_40:
 11353  0000C6  0E00               	movlw	0
 11354  0000C8                     i2u417_46:
 11355  0000C8  6E03               	movwf	button_timer_interrupt@sw_value,c
 11356  0000CA  ECE9  F00D         	call	_button_timer_interrupt	;wreg free
 11357                           
 11358                           ;PIC18F27J53-ChargeStation6-02.c: 83: button_timer_interrupt(&sw1, !PORTAbits.RA1);
 11359  0000CE  0E00               	movlw	high _sw1
 11360  0000D0  6E02               	movwf	button_timer_interrupt@bt+1,c
 11361  0000D2  0E3A               	movlw	low _sw1
 11362  0000D4  6E01               	movwf	button_timer_interrupt@bt,c
 11363  0000D6  B280               	btfsc	3968,1,c	;volatile
 11364  0000D8  D002               	goto	i2u418_40
 11365  0000DA  0E01               	movlw	1
 11366  0000DC  D001               	goto	i2u418_46
 11367  0000DE                     i2u418_40:
 11368  0000DE  0E00               	movlw	0
 11369  0000E0                     i2u418_46:
 11370  0000E0  6E03               	movwf	button_timer_interrupt@sw_value,c
 11371  0000E2  ECE9  F00D         	call	_button_timer_interrupt	;wreg free
 11372                           
 11373                           ;PIC18F27J53-ChargeStation6-02.c: 84: button_timer_interrupt(&sw2, !PORTAbits.RA2);
 11374  0000E6  0100               	movlb	0	; () banked
 11375  0000E8  0E00               	movlw	high _sw2
 11376  0000EA  6E02               	movwf	button_timer_interrupt@bt+1,c
 11377  0000EC  0100               	movlb	0	; () banked
 11378  0000EE  0EDE               	movlw	low _sw2
 11379  0000F0  6E01               	movwf	button_timer_interrupt@bt,c
 11380  0000F2  B480               	btfsc	3968,2,c	;volatile
 11381  0000F4  D002               	goto	i2u419_40
 11382  0000F6  0E01               	movlw	1
 11383  0000F8  D001               	goto	i2u419_46
 11384  0000FA                     i2u419_40:
 11385  0000FA  0E00               	movlw	0
 11386  0000FC                     i2u419_46:
 11387  0000FC  6E03               	movwf	button_timer_interrupt@sw_value,c
 11388  0000FE  ECE9  F00D         	call	_button_timer_interrupt	;wreg free
 11389                           
 11390                           ;PIC18F27J53-ChargeStation6-02.c: 85: delay_timer_interrupt(&d_display);
 11391  000102  0E00               	movlw	high _d_display
 11392  000104  6E02               	movwf	delay_timer_interrupt@d+1,c
 11393  000106  0E3E               	movlw	low _d_display
 11394  000108  6E01               	movwf	delay_timer_interrupt@d,c
 11395  00010A  ECCD  F01D         	call	_delay_timer_interrupt	;wreg free
 11396  00010E                     i2l673:
 11397  00010E  C020  FFF5         	movff	??_ISR+13,tablat
 11398  000112  C01F  FFF8         	movff	??_ISR+12,tblptru
 11399  000116  C01E  FFF7         	movff	??_ISR+11,tblptrh
 11400  00011A  C01D  FFF6         	movff	??_ISR+10,tblptrl
 11401  00011E  C01C  FFF4         	movff	??_ISR+9,prodh
 11402  000122  C01B  FFF3         	movff	??_ISR+8,prodl
 11403  000126  C01A  FFDA         	movff	??_ISR+7,fsr2h
 11404  00012A  C019  FFD9         	movff	??_ISR+6,fsr2l
 11405  00012E  C018  FFE2         	movff	??_ISR+5,fsr1h
 11406  000132  C017  FFE1         	movff	??_ISR+4,fsr1l
 11407  000136  C016  FFEA         	movff	??_ISR+3,fsr0h
 11408  00013A  C015  FFE9         	movff	??_ISR+2,fsr0l
 11409  00013E  C014  FFFB         	movff	??_ISR+1,pclatu
 11410  000142  C013  FFFA         	movff	??_ISR,pclath
 11411  000146  0011               	retfie		f
 11412  000148                     __end_of_ISR:
 11413                           	opt stack 0
 11414                           pclatu	equ	0xFFB
 11415                           pclath	equ	0xFFA
 11416                           tblptru	equ	0xFF8
 11417                           tblptrh	equ	0xFF7
 11418                           tblptrl	equ	0xFF6
 11419                           tablat	equ	0xFF5
 11420                           prodh	equ	0xFF4
 11421                           prodl	equ	0xFF3
 11422                           intcon	equ	0xFF2
 11423                           intcon2	equ	0xFF1
 11424                           postinc0	equ	0xFEE
 11425                           fsr0h	equ	0xFEA
 11426                           fsr0l	equ	0xFE9
 11427                           wreg	equ	0xFE8
 11428                           postdec1	equ	0xFE5
 11429                           fsr1h	equ	0xFE2
 11430                           fsr1l	equ	0xFE1
 11431                           indf2	equ	0xFDF
 11432                           postinc2	equ	0xFDE
 11433                           postdec2	equ	0xFDD
 11434                           fsr2h	equ	0xFDA
 11435                           fsr2l	equ	0xFD9
 11436                           status	equ	0xFD8
 11437                           
 11438 ;; *************** function _tx_send *****************
 11439 ;; Defined at:
 11440 ;;		line 234 in file "../My_header\My_header.h"
 11441 ;; Parameters:    Size  Location     Type
 11442 ;;  asciicode       1    wreg     const unsigned char 
 11443 ;; Auto vars:     Size  Location     Type
 11444 ;;  asciicode       1   12[COMRAM] const unsigned char 
 11445 ;; Return value:  Size  Location     Type
 11446 ;;		None               void
 11447 ;; Registers used:
 11448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11449 ;; Tracked objects:
 11450 ;;		On entry : 0/0
 11451 ;;		On exit  : 0/0
 11452 ;;		Unchanged: 0/0
 11453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11457 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11458 ;;Total ram usage:        1 bytes
 11459 ;; Hardware stack levels used:    1
 11460 ;; Hardware stack levels required when called:    2
 11461 ;; This function calls:
 11462 ;;		_ringbuf_push
 11463 ;; This function is called by:
 11464 ;;		_ISR
 11465 ;;		_tx_sendn
 11466 ;; This function uses a non-reentrant model
 11467 ;;
 11468                           
 11469                           	psect	text59
 11470  004032                     __ptext59:
 11471                           	opt stack 0
 11472  004032                     _tx_send:
 11473                           	opt stack 21
 11474                           
 11475                           ;incstack = 0
 11476                           ;tx_send@asciicode stored from wreg
 11477  004032  6E0D               	movwf	tx_send@asciicode,c
 11478                           
 11479                           ;My_header\My_header.h: 235: ringbuf_push(&tx_buf, asciicode);
 11480  004034  0101               	movlb	1	; () banked
 11481  004036  0E01               	movlw	high _tx_buf
 11482  004038  6E06               	movwf	ringbuf_push@rb+1,c
 11483  00403A  0101               	movlb	1	; () banked
 11484  00403C  0EC9               	movlw	low _tx_buf
 11485  00403E  6E05               	movwf	ringbuf_push@rb,c
 11486  004040  C00D  F007         	movff	tx_send@asciicode,ringbuf_push@asciicode
 11487  004044  EC0B  F019         	call	_ringbuf_push	;wreg free
 11488                           
 11489                           ;My_header\My_header.h: 236: PIE1bits.TX1IE = 1;
 11490  004048  889D               	bsf	3997,4,c	;volatile
 11491  00404A  0012               	return	
 11492  00404C                     __end_of_tx_send:
 11493                           	opt stack 0
 11494                           pclatu	equ	0xFFB
 11495                           pclath	equ	0xFFA
 11496                           tblptru	equ	0xFF8
 11497                           tblptrh	equ	0xFF7
 11498                           tblptrl	equ	0xFF6
 11499                           tablat	equ	0xFF5
 11500                           prodh	equ	0xFF4
 11501                           prodl	equ	0xFF3
 11502                           intcon	equ	0xFF2
 11503                           intcon2	equ	0xFF1
 11504                           postinc0	equ	0xFEE
 11505                           fsr0h	equ	0xFEA
 11506                           fsr0l	equ	0xFE9
 11507                           wreg	equ	0xFE8
 11508                           postdec1	equ	0xFE5
 11509                           fsr1h	equ	0xFE2
 11510                           fsr1l	equ	0xFE1
 11511                           indf2	equ	0xFDF
 11512                           postinc2	equ	0xFDE
 11513                           postdec2	equ	0xFDD
 11514                           fsr2h	equ	0xFDA
 11515                           fsr2l	equ	0xFD9
 11516                           status	equ	0xFD8
 11517                           
 11518 ;; *************** function _ringbuf_push *****************
 11519 ;; Defined at:
 11520 ;;		line 37 in file "../My_header\My_ringbuf.h"
 11521 ;; Parameters:    Size  Location     Type
 11522 ;;  rb              2    4[COMRAM] PTR struct ringbuf
 11523 ;;		 -> tx_buf(5), 
 11524 ;;  asciicode       1    6[COMRAM] unsigned char 
 11525 ;; Auto vars:     Size  Location     Type
 11526 ;;		None
 11527 ;; Return value:  Size  Location     Type
 11528 ;;		None               void
 11529 ;; Registers used:
 11530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11531 ;; Tracked objects:
 11532 ;;		On entry : 0/0
 11533 ;;		On exit  : 0/0
 11534 ;;		Unchanged: 0/0
 11535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11536 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11538 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11539 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11540 ;;Total ram usage:        8 bytes
 11541 ;; Hardware stack levels used:    1
 11542 ;; Hardware stack levels required when called:    1
 11543 ;; This function calls:
 11544 ;;		_ringbuf_num
 11545 ;; This function is called by:
 11546 ;;		_tx_send
 11547 ;;		_tx_sends
 11548 ;; This function uses a non-reentrant model
 11549 ;;
 11550                           
 11551                           	psect	text60
 11552  003216                     __ptext60:
 11553                           	opt stack 0
 11554  003216                     _ringbuf_push:
 11555                           	opt stack 21
 11556                           
 11557                           ;My_header\My_ringbuf.h: 38: if (ringbuf_num(rb) < rb->size) {
 11558                           
 11559                           ;incstack = 0
 11560  003216  C006  F002         	movff	ringbuf_push@rb+1,ringbuf_num@rb+1
 11561  00321A  C005  F001         	movff	ringbuf_push@rb,ringbuf_num@rb
 11562  00321E  EC98  F01B         	call	_ringbuf_num	;wreg free
 11563  003222  6E08               	movwf	??_ringbuf_push& (0+255),c
 11564  003224  EE20 F002          	lfsr	2,2
 11565  003228  5005               	movf	ringbuf_push@rb,w,c
 11566  00322A  26D9               	addwf	fsr2l,f,c
 11567  00322C  5006               	movf	ringbuf_push@rb+1,w,c
 11568  00322E  22DA               	addwfc	fsr2h,f,c
 11569  003230  50DF               	movf	indf2,w,c
 11570  003232  5C08               	subwf	??_ringbuf_push,w,c
 11571  003234  B0D8               	btfsc	status,0,c
 11572  003236  0012               	return	
 11573                           
 11574                           ;My_header\My_ringbuf.h: 39: rb->buf[rb->head] = asciicode;
 11575  003238  EE20 F003          	lfsr	2,3
 11576  00323C  5005               	movf	ringbuf_push@rb,w,c
 11577  00323E  26D9               	addwf	fsr2l,f,c
 11578  003240  5006               	movf	ringbuf_push@rb+1,w,c
 11579  003242  22DA               	addwfc	fsr2h,f,c
 11580  003244  50DF               	movf	indf2,w,c
 11581  003246  6E08               	movwf	??_ringbuf_push& (0+255),c
 11582  003248  5008               	movf	??_ringbuf_push,w,c
 11583  00324A  0D01               	mullw	1
 11584  00324C  C005  FFD9         	movff	ringbuf_push@rb,fsr2l
 11585  003250  C006  FFDA         	movff	ringbuf_push@rb+1,fsr2h
 11586  003254  CFDE F009          	movff	postinc2,??_ringbuf_push+1
 11587  003258  CFDD F00A          	movff	postdec2,??_ringbuf_push+2
 11588  00325C  50F3               	movf	prodl,w,c
 11589  00325E  2409               	addwf	??_ringbuf_push+1,w,c
 11590  003260  6ED9               	movwf	fsr2l,c
 11591  003262  50F4               	movf	prodh,w,c
 11592  003264  200A               	addwfc	??_ringbuf_push+2,w,c
 11593  003266  6EDA               	movwf	fsr2h,c
 11594  003268  C007  FFDF         	movff	ringbuf_push@asciicode,indf2
 11595                           
 11596                           ;My_header\My_ringbuf.h: 40: if (rb->head + 1 < rb->size) rb->head++;
 11597  00326C  EE20 F002          	lfsr	2,2
 11598  003270  5005               	movf	ringbuf_push@rb,w,c
 11599  003272  26D9               	addwf	fsr2l,f,c
 11600  003274  5006               	movf	ringbuf_push@rb+1,w,c
 11601  003276  22DA               	addwfc	fsr2h,f,c
 11602  003278  50DF               	movf	indf2,w,c
 11603  00327A  6E08               	movwf	??_ringbuf_push& (0+255),c
 11604  00327C  6A09               	clrf	(??_ringbuf_push+1)& (0+255),c
 11605  00327E  EE20 F003          	lfsr	2,3
 11606  003282  5005               	movf	ringbuf_push@rb,w,c
 11607  003284  26D9               	addwf	fsr2l,f,c
 11608  003286  5006               	movf	ringbuf_push@rb+1,w,c
 11609  003288  22DA               	addwfc	fsr2h,f,c
 11610  00328A  50DF               	movf	indf2,w,c
 11611  00328C  6E0A               	movwf	(??_ringbuf_push+2)& (0+255),c
 11612  00328E  6A0B               	clrf	(??_ringbuf_push+3)& (0+255),c
 11613  003290  0E01               	movlw	1
 11614  003292  260A               	addwf	??_ringbuf_push+2,f,c
 11615  003294  0E00               	movlw	0
 11616  003296  220B               	addwfc	??_ringbuf_push+3,f,c
 11617  003298  500B               	movf	??_ringbuf_push+3,w,c
 11618  00329A  0A80               	xorlw	128
 11619  00329C  6E0C               	movwf	(??_ringbuf_push+4)& (0+255),c
 11620  00329E  5008               	movf	??_ringbuf_push,w,c
 11621  0032A0  5C0A               	subwf	??_ringbuf_push+2,w,c
 11622  0032A2  5009               	movf	??_ringbuf_push+1,w,c
 11623  0032A4  0A80               	xorlw	128
 11624  0032A6  580C               	subwfb	(??_ringbuf_push+4)& (0+255),w,c
 11625  0032A8  B0D8               	btfsc	status,0,c
 11626  0032AA  D008               	goto	i2l3396
 11627  0032AC  EE20 F003          	lfsr	2,3
 11628  0032B0  5005               	movf	ringbuf_push@rb,w,c
 11629  0032B2  26D9               	addwf	fsr2l,f,c
 11630  0032B4  5006               	movf	ringbuf_push@rb+1,w,c
 11631  0032B6  22DA               	addwfc	fsr2h,f,c
 11632  0032B8  2ADF               	incf	indf2,f,c
 11633  0032BA  0012               	return	
 11634  0032BC                     i2l3396:
 11635                           
 11636                           ;My_header\My_ringbuf.h: 41: else rb->head = 0;
 11637  0032BC  EE20 F003          	lfsr	2,3
 11638  0032C0  5005               	movf	ringbuf_push@rb,w,c
 11639  0032C2  26D9               	addwf	fsr2l,f,c
 11640  0032C4  5006               	movf	ringbuf_push@rb+1,w,c
 11641  0032C6  22DA               	addwfc	fsr2h,f,c
 11642  0032C8  0E00               	movlw	0
 11643  0032CA  6EDF               	movwf	indf2,c
 11644  0032CC  0012               	return	
 11645  0032CE                     __end_of_ringbuf_push:
 11646                           	opt stack 0
 11647                           pclatu	equ	0xFFB
 11648                           pclath	equ	0xFFA
 11649                           tblptru	equ	0xFF8
 11650                           tblptrh	equ	0xFF7
 11651                           tblptrl	equ	0xFF6
 11652                           tablat	equ	0xFF5
 11653                           prodh	equ	0xFF4
 11654                           prodl	equ	0xFF3
 11655                           intcon	equ	0xFF2
 11656                           intcon2	equ	0xFF1
 11657                           postinc0	equ	0xFEE
 11658                           fsr0h	equ	0xFEA
 11659                           fsr0l	equ	0xFE9
 11660                           wreg	equ	0xFE8
 11661                           postdec1	equ	0xFE5
 11662                           fsr1h	equ	0xFE2
 11663                           fsr1l	equ	0xFE1
 11664                           indf2	equ	0xFDF
 11665                           postinc2	equ	0xFDE
 11666                           postdec2	equ	0xFDD
 11667                           fsr2h	equ	0xFDA
 11668                           fsr2l	equ	0xFD9
 11669                           status	equ	0xFD8
 11670                           
 11671 ;; *************** function _lchika *****************
 11672 ;; Defined at:
 11673 ;;		line 92 in file "PIC18F27J53-ChargeStation6-02.h"
 11674 ;; Parameters:    Size  Location     Type
 11675 ;;		None
 11676 ;; Auto vars:     Size  Location     Type
 11677 ;;  i               1   11[COMRAM] unsigned char 
 11678 ;; Return value:  Size  Location     Type
 11679 ;;		None               void
 11680 ;; Registers used:
 11681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11682 ;; Tracked objects:
 11683 ;;		On entry : 0/0
 11684 ;;		On exit  : 0/0
 11685 ;;		Unchanged: 0/0
 11686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11689 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11690 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11691 ;;Total ram usage:        4 bytes
 11692 ;; Hardware stack levels used:    1
 11693 ;; Hardware stack levels required when called:    1
 11694 ;; This function calls:
 11695 ;;		i2_LED
 11696 ;;		i2___awdiv
 11697 ;;		i2___lwdiv
 11698 ;; This function is called by:
 11699 ;;		_ISR
 11700 ;; This function uses a non-reentrant model
 11701 ;;
 11702                           
 11703                           	psect	text61
 11704  00288E                     __ptext61:
 11705                           	opt stack 0
 11706  00288E                     _lchika:
 11707                           	opt stack 22
 11708                           
 11709                           ;PIC18F27J53-ChargeStation6-02.h: 93: uint8_t i;
 11710                           ;PIC18F27J53-ChargeStation6-02.h: 94: static uint8_t cnt[3];
 11711                           ;PIC18F27J53-ChargeStation6-02.h: 95: static uint8_t cntf[3];
 11712                           ;PIC18F27J53-ChargeStation6-02.h: 96: for (i = 0; i < 3; i++) {
 11713                           
 11714                           ;incstack = 0
 11715  00288E  0E00               	movlw	0
 11716  002890  6E0C               	movwf	lchika@i,c
 11717  002892  0E02               	movlw	2
 11718  002894  640C               	cpfsgt	lchika@i,c
 11719  002896  D001               	goto	i2l3904
 11720  002898  0012               	return	
 11721  00289A                     i2l3904:
 11722                           
 11723                           ;PIC18F27J53-ChargeStation6-02.h: 97: cnt[i]++;
 11724  00289A  500C               	movf	lchika@i,w,c
 11725  00289C  0D01               	mullw	1
 11726  00289E  0E2B               	movlw	low lchika@cnt
 11727  0028A0  24F3               	addwf	prodl,w,c
 11728  0028A2  6ED9               	movwf	fsr2l,c
 11729  0028A4  0E00               	movlw	high lchika@cnt
 11730  0028A6  20F4               	addwfc	prodh,w,c
 11731  0028A8  6EDA               	movwf	fsr2h,c
 11732  0028AA  2ADF               	incf	indf2,f,c
 11733                           
 11734                           ;PIC18F27J53-ChargeStation6-02.h: 98: if (cnt[i] % 2 == 1) {
 11735  0028AC  500C               	movf	lchika@i,w,c
 11736  0028AE  0D01               	mullw	1
 11737  0028B0  0E2B               	movlw	low lchika@cnt
 11738  0028B2  24F3               	addwf	prodl,w,c
 11739  0028B4  6ED9               	movwf	fsr2l,c
 11740  0028B6  0E00               	movlw	high lchika@cnt
 11741  0028B8  20F4               	addwfc	prodh,w,c
 11742  0028BA  6EDA               	movwf	fsr2h,c
 11743  0028BC  50DF               	movf	indf2,w,c
 11744  0028BE  6E09               	movwf	??_lchika& (0+255),c
 11745  0028C0  A009               	btfss	??_lchika,0,c
 11746  0028C2  D006               	goto	i2l3908
 11747                           
 11748                           ;PIC18F27J53-ChargeStation6-02.h: 99: LED(i, 0);
 11749  0028C4  0E00               	movlw	0
 11750  0028C6  6E01               	movwf	i2LED@value,c
 11751  0028C8  500C               	movf	lchika@i,w,c
 11752  0028CA  EC15  F01E         	call	i2_LED
 11753                           
 11754                           ;PIC18F27J53-ChargeStation6-02.h: 100: } else {
 11755  0028CE  D064               	goto	i2l3922
 11756  0028D0                     i2l3908:
 11757                           
 11758                           ;PIC18F27J53-ChargeStation6-02.h: 101: if (cnt[i] / 2 <= I[i] / 100) {
 11759  0028D0  500C               	movf	lchika@i,w,c
 11760  0028D2  0D02               	mullw	2
 11761  0028D4  0E22               	movlw	low _I
 11762  0028D6  24F3               	addwf	prodl,w,c
 11763  0028D8  6ED9               	movwf	fsr2l,c
 11764  0028DA  0E00               	movlw	high _I
 11765  0028DC  20F4               	addwfc	prodh,w,c
 11766  0028DE  6EDA               	movwf	fsr2h,c
 11767  0028E0  CFDE F001          	movff	postinc2,i2___lwdiv@dividend
 11768  0028E4  CFDD F002          	movff	postdec2,i2___lwdiv@dividend+1
 11769  0028E8  0E00               	movlw	0
 11770  0028EA  6E04               	movwf	i2___lwdiv@divisor+1,c
 11771  0028EC  0E64               	movlw	100
 11772  0028EE  6E03               	movwf	i2___lwdiv@divisor,c
 11773  0028F0  EC7C  F01D         	call	i2___lwdiv	;wreg free
 11774  0028F4  C001  F009         	movff	?i2___lwdiv,??_lchika
 11775  0028F8  C002  F00A         	movff	?i2___lwdiv+1,??_lchika+1
 11776  0028FC  500C               	movf	lchika@i,w,c
 11777  0028FE  0D01               	mullw	1
 11778  002900  0E2B               	movlw	low lchika@cnt
 11779  002902  24F3               	addwf	prodl,w,c
 11780  002904  6ED9               	movwf	fsr2l,c
 11781  002906  0E00               	movlw	high lchika@cnt
 11782  002908  20F4               	addwfc	prodh,w,c
 11783  00290A  6EDA               	movwf	fsr2h,c
 11784  00290C  50DF               	movf	indf2,w,c
 11785  00290E  6E0B               	movwf	(??_lchika+2)& (0+255),c
 11786  002910  500B               	movf	??_lchika+2,w,c
 11787  002912  6E01               	movwf	i2___awdiv@dividend,c
 11788  002914  6A02               	clrf	i2___awdiv@dividend+1,c
 11789  002916  0E00               	movlw	0
 11790  002918  6E04               	movwf	i2___awdiv@divisor+1,c
 11791  00291A  0E02               	movlw	2
 11792  00291C  6E03               	movwf	i2___awdiv@divisor,c
 11793  00291E  EC67  F019         	call	i2___awdiv	;wreg free
 11794  002922  5001               	movf	?i2___awdiv,w,c
 11795  002924  5C09               	subwf	??_lchika,w,c
 11796  002926  5002               	movf	?i2___awdiv+1,w,c
 11797  002928  580A               	subwfb	??_lchika+1,w,c
 11798  00292A  A0D8               	btfss	status,0,c
 11799  00292C  D00E               	goto	i2l3914
 11800                           
 11801                           ;PIC18F27J53-ChargeStation6-02.h: 102: LED(i, 1);
 11802  00292E  0E01               	movlw	1
 11803  002930  6E01               	movwf	i2LED@value,c
 11804  002932  500C               	movf	lchika@i,w,c
 11805  002934  EC15  F01E         	call	i2_LED
 11806                           
 11807                           ;PIC18F27J53-ChargeStation6-02.h: 103: cntf[i] = 0;
 11808  002938  500C               	movf	lchika@i,w,c
 11809  00293A  0D01               	mullw	1
 11810  00293C  0100               	movlb	0	; () banked
 11811  00293E  0EC6               	movlw	low lchika@cntf
 11812  002940  24F3               	addwf	prodl,w,c
 11813  002942  6ED9               	movwf	fsr2l,c
 11814  002944  0100               	movlb	0	; () banked
 11815  002946  0E00               	movlw	high lchika@cntf
 11816  002948  D023               	goto	L13
 11817  00294A                     i2l3914:
 11818                           
 11819                           ;PIC18F27J53-ChargeStation6-02.h: 105: cntf[i]++;
 11820  00294A  500C               	movf	lchika@i,w,c
 11821  00294C  0D01               	mullw	1
 11822  00294E  0100               	movlb	0	; () banked
 11823  002950  0EC6               	movlw	low lchika@cntf
 11824  002952  24F3               	addwf	prodl,w,c
 11825  002954  6ED9               	movwf	fsr2l,c
 11826  002956  0100               	movlb	0	; () banked
 11827  002958  0E00               	movlw	high lchika@cntf
 11828  00295A  20F4               	addwfc	prodh,w,c
 11829  00295C  6EDA               	movwf	fsr2h,c
 11830  00295E  2ADF               	incf	indf2,f,c
 11831                           
 11832                           ; BSR set to: 0
 11833                           ;PIC18F27J53-ChargeStation6-02.h: 106: LED(i, 0);
 11834  002960  0E00               	movlw	0
 11835  002962  6E01               	movwf	i2LED@value,c
 11836  002964  500C               	movf	lchika@i,w,c
 11837  002966  EC15  F01E         	call	i2_LED
 11838                           
 11839                           ;PIC18F27J53-ChargeStation6-02.h: 107: if (cntf[i] >= 2) {
 11840  00296A  500C               	movf	lchika@i,w,c
 11841  00296C  0D01               	mullw	1
 11842  00296E  0100               	movlb	0	; () banked
 11843  002970  0EC6               	movlw	low lchika@cntf
 11844  002972  24F3               	addwf	prodl,w,c
 11845  002974  6ED9               	movwf	fsr2l,c
 11846  002976  0100               	movlb	0	; () banked
 11847  002978  0E00               	movlw	high lchika@cntf
 11848  00297A  20F4               	addwfc	prodh,w,c
 11849  00297C  6EDA               	movwf	fsr2h,c
 11850  00297E  0E01               	movlw	1
 11851  002980  64DF               	cpfsgt	indf2,c
 11852  002982  D00A               	goto	i2l3922
 11853                           
 11854                           ; BSR set to: 0
 11855                           ;PIC18F27J53-ChargeStation6-02.h: 108: cnt[i] = 0;
 11856  002984  500C               	movf	lchika@i,w,c
 11857  002986  0D01               	mullw	1
 11858  002988  0E2B               	movlw	low lchika@cnt
 11859  00298A  24F3               	addwf	prodl,w,c
 11860  00298C  6ED9               	movwf	fsr2l,c
 11861  00298E  0E00               	movlw	high lchika@cnt
 11862  002990                     L13:
 11863  002990  20F4               	addwfc	prodh,w,c
 11864  002992  6EDA               	movwf	fsr2h,c
 11865  002994  0E00               	movlw	0
 11866  002996  6EDF               	movwf	indf2,c
 11867  002998                     i2l3922:
 11868  002998  2A0C               	incf	lchika@i,f,c
 11869  00299A  0E02               	movlw	2
 11870  00299C  640C               	cpfsgt	lchika@i,c
 11871  00299E  D77D               	goto	i2l3904
 11872  0029A0  0012               	return	
 11873  0029A2                     __end_of_lchika:
 11874                           	opt stack 0
 11875                           pclatu	equ	0xFFB
 11876                           pclath	equ	0xFFA
 11877                           tblptru	equ	0xFF8
 11878                           tblptrh	equ	0xFF7
 11879                           tblptrl	equ	0xFF6
 11880                           tablat	equ	0xFF5
 11881                           prodh	equ	0xFF4
 11882                           prodl	equ	0xFF3
 11883                           intcon	equ	0xFF2
 11884                           intcon2	equ	0xFF1
 11885                           postinc0	equ	0xFEE
 11886                           fsr0h	equ	0xFEA
 11887                           fsr0l	equ	0xFE9
 11888                           wreg	equ	0xFE8
 11889                           postdec1	equ	0xFE5
 11890                           fsr1h	equ	0xFE2
 11891                           fsr1l	equ	0xFE1
 11892                           indf2	equ	0xFDF
 11893                           postinc2	equ	0xFDE
 11894                           postdec2	equ	0xFDD
 11895                           fsr2h	equ	0xFDA
 11896                           fsr2l	equ	0xFD9
 11897                           status	equ	0xFD8
 11898                           
 11899 ;; *************** function i2___lwdiv *****************
 11900 ;; Defined at:
 11901 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
 11902 ;; Parameters:    Size  Location     Type
 11903 ;;  dividend        2    0[COMRAM] unsigned int 
 11904 ;;  divisor         2    2[COMRAM] unsigned int 
 11905 ;; Auto vars:     Size  Location     Type
 11906 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 11907 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 11908 ;; Return value:  Size  Location     Type
 11909 ;;                  2    0[COMRAM] unsigned int 
 11910 ;; Registers used:
 11911 ;;		wreg, status,2, status,0
 11912 ;; Tracked objects:
 11913 ;;		On entry : 0/0
 11914 ;;		On exit  : 0/0
 11915 ;;		Unchanged: 0/0
 11916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11917 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11918 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11920 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11921 ;;Total ram usage:        7 bytes
 11922 ;; Hardware stack levels used:    1
 11923 ;; This function calls:
 11924 ;;		Nothing
 11925 ;; This function is called by:
 11926 ;;		_lchika
 11927 ;; This function uses a non-reentrant model
 11928 ;;
 11929                           
 11930                           	psect	text62
 11931  003AF8                     __ptext62:
 11932                           	opt stack 0
 11933  003AF8                     i2___lwdiv:
 11934                           	opt stack 22
 11935                           
 11936                           ;incstack = 0
 11937  003AF8  0E00               	movlw	0
 11938  003AFA  6E06               	movwf	i2___lwdiv@quotient+1,c
 11939  003AFC  0E00               	movlw	0
 11940  003AFE  6E05               	movwf	i2___lwdiv@quotient,c
 11941  003B00  5004               	movf	i2___lwdiv@divisor+1,w,c
 11942  003B02  1003               	iorwf	i2___lwdiv@divisor,w,c
 11943  003B04  B4D8               	btfsc	status,2,c
 11944  003B06  D01C               	goto	i2l1207
 11945  003B08  0E01               	movlw	1
 11946  003B0A  6E07               	movwf	i2___lwdiv@counter,c
 11947  003B0C  D004               	goto	i2l3762
 11948  003B0E                     i2l3760:
 11949  003B0E  90D8               	bcf	status,0,c
 11950  003B10  3603               	rlcf	i2___lwdiv@divisor,f,c
 11951  003B12  3604               	rlcf	i2___lwdiv@divisor+1,f,c
 11952  003B14  2A07               	incf	i2___lwdiv@counter,f,c
 11953  003B16                     i2l3762:
 11954  003B16  AE04               	btfss	i2___lwdiv@divisor+1,7,c
 11955  003B18  D7FA               	goto	i2l3760
 11956  003B1A                     i2l3764:
 11957  003B1A  90D8               	bcf	status,0,c
 11958  003B1C  3605               	rlcf	i2___lwdiv@quotient,f,c
 11959  003B1E  3606               	rlcf	i2___lwdiv@quotient+1,f,c
 11960  003B20  5003               	movf	i2___lwdiv@divisor,w,c
 11961  003B22  5C01               	subwf	i2___lwdiv@dividend,w,c
 11962  003B24  5004               	movf	i2___lwdiv@divisor+1,w,c
 11963  003B26  5802               	subwfb	i2___lwdiv@dividend+1,w,c
 11964  003B28  A0D8               	btfss	status,0,c
 11965  003B2A  D005               	goto	i2l3772
 11966  003B2C  5003               	movf	i2___lwdiv@divisor,w,c
 11967  003B2E  5E01               	subwf	i2___lwdiv@dividend,f,c
 11968  003B30  5004               	movf	i2___lwdiv@divisor+1,w,c
 11969  003B32  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
 11970  003B34  8005               	bsf	i2___lwdiv@quotient,0,c
 11971  003B36                     i2l3772:
 11972  003B36  90D8               	bcf	status,0,c
 11973  003B38  3204               	rrcf	i2___lwdiv@divisor+1,f,c
 11974  003B3A  3203               	rrcf	i2___lwdiv@divisor,f,c
 11975  003B3C  2E07               	decfsz	i2___lwdiv@counter,f,c
 11976  003B3E  D7ED               	goto	i2l3764
 11977  003B40                     i2l1207:
 11978  003B40  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 11979  003B44  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 11980  003B48  0012               	return	
 11981  003B4A                     __end_ofi2___lwdiv:
 11982                           	opt stack 0
 11983                           pclatu	equ	0xFFB
 11984                           pclath	equ	0xFFA
 11985                           tblptru	equ	0xFF8
 11986                           tblptrh	equ	0xFF7
 11987                           tblptrl	equ	0xFF6
 11988                           tablat	equ	0xFF5
 11989                           prodh	equ	0xFF4
 11990                           prodl	equ	0xFF3
 11991                           intcon	equ	0xFF2
 11992                           intcon2	equ	0xFF1
 11993                           postinc0	equ	0xFEE
 11994                           fsr0h	equ	0xFEA
 11995                           fsr0l	equ	0xFE9
 11996                           wreg	equ	0xFE8
 11997                           postdec1	equ	0xFE5
 11998                           fsr1h	equ	0xFE2
 11999                           fsr1l	equ	0xFE1
 12000                           indf2	equ	0xFDF
 12001                           postinc2	equ	0xFDE
 12002                           postdec2	equ	0xFDD
 12003                           fsr2h	equ	0xFDA
 12004                           fsr2l	equ	0xFD9
 12005                           status	equ	0xFD8
 12006                           
 12007 ;; *************** function i2___awdiv *****************
 12008 ;; Defined at:
 12009 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
 12010 ;; Parameters:    Size  Location     Type
 12011 ;;  dividend        2    0[COMRAM] int 
 12012 ;;  divisor         2    2[COMRAM] int 
 12013 ;; Auto vars:     Size  Location     Type
 12014 ;;  __awdiv         2    6[COMRAM] int 
 12015 ;;  __awdiv         1    5[COMRAM] unsigned char 
 12016 ;;  __awdiv         1    4[COMRAM] unsigned char 
 12017 ;; Return value:  Size  Location     Type
 12018 ;;                  2    0[COMRAM] int 
 12019 ;; Registers used:
 12020 ;;		wreg, status,2, status,0, prodl
 12021 ;; Tracked objects:
 12022 ;;		On entry : 0/0
 12023 ;;		On exit  : 0/0
 12024 ;;		Unchanged: 0/0
 12025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12026 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12027 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12029 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12030 ;;Total ram usage:        8 bytes
 12031 ;; Hardware stack levels used:    1
 12032 ;; This function calls:
 12033 ;;		Nothing
 12034 ;; This function is called by:
 12035 ;;		_lchika
 12036 ;; This function uses a non-reentrant model
 12037 ;;
 12038                           
 12039                           	psect	text63
 12040  0032CE                     __ptext63:
 12041                           	opt stack 0
 12042  0032CE                     i2___awdiv:
 12043                           	opt stack 22
 12044                           
 12045                           ;incstack = 0
 12046  0032CE  0E00               	movlw	0
 12047  0032D0  6E06               	movwf	i2___awdiv@sign,c
 12048  0032D2  5004               	movf	i2___awdiv@divisor+1,w,c
 12049  0032D4  0A80               	xorlw	128
 12050  0032D6  6EF3               	movwf	prodl,c
 12051  0032D8  0E80               	movlw	128
 12052  0032DA  5CF3               	subwf	prodl,w,c
 12053  0032DC  0E00               	movlw	0
 12054  0032DE  B4D8               	btfsc	status,2,c
 12055  0032E0  5C03               	subwf	i2___awdiv@divisor,w,c
 12056  0032E2  B0D8               	btfsc	status,0,c
 12057  0032E4  D006               	goto	i2l3696
 12058  0032E6  6C03               	negf	i2___awdiv@divisor,c
 12059  0032E8  1E04               	comf	i2___awdiv@divisor+1,f,c
 12060  0032EA  B0D8               	btfsc	status,0,c
 12061  0032EC  2A04               	incf	i2___awdiv@divisor+1,f,c
 12062  0032EE  0E01               	movlw	1
 12063  0032F0  6E06               	movwf	i2___awdiv@sign,c
 12064  0032F2                     i2l3696:
 12065  0032F2  5002               	movf	i2___awdiv@dividend+1,w,c
 12066  0032F4  0A80               	xorlw	128
 12067  0032F6  6EF3               	movwf	prodl,c
 12068  0032F8  0E80               	movlw	128
 12069  0032FA  5CF3               	subwf	prodl,w,c
 12070  0032FC  0E00               	movlw	0
 12071  0032FE  B4D8               	btfsc	status,2,c
 12072  003300  5C01               	subwf	i2___awdiv@dividend,w,c
 12073  003302  B0D8               	btfsc	status,0,c
 12074  003304  D006               	goto	i2l3702
 12075  003306  6C01               	negf	i2___awdiv@dividend,c
 12076  003308  1E02               	comf	i2___awdiv@dividend+1,f,c
 12077  00330A  B0D8               	btfsc	status,0,c
 12078  00330C  2A02               	incf	i2___awdiv@dividend+1,f,c
 12079  00330E  0E01               	movlw	1
 12080  003310  1A06               	xorwf	i2___awdiv@sign,f,c
 12081  003312                     i2l3702:
 12082  003312  0E00               	movlw	0
 12083  003314  6E08               	movwf	i2___awdiv@quotient+1,c
 12084  003316  0E00               	movlw	0
 12085  003318  6E07               	movwf	i2___awdiv@quotient,c
 12086  00331A  5004               	movf	i2___awdiv@divisor+1,w,c
 12087  00331C  1003               	iorwf	i2___awdiv@divisor,w,c
 12088  00331E  B4D8               	btfsc	status,2,c
 12089  003320  D01C               	goto	i2l3724
 12090  003322  0E01               	movlw	1
 12091  003324  6E05               	movwf	i2___awdiv@counter,c
 12092  003326  D004               	goto	i2l3710
 12093  003328                     i2l3708:
 12094  003328  90D8               	bcf	status,0,c
 12095  00332A  3603               	rlcf	i2___awdiv@divisor,f,c
 12096  00332C  3604               	rlcf	i2___awdiv@divisor+1,f,c
 12097  00332E  2A05               	incf	i2___awdiv@counter,f,c
 12098  003330                     i2l3710:
 12099  003330  AE04               	btfss	i2___awdiv@divisor+1,7,c
 12100  003332  D7FA               	goto	i2l3708
 12101  003334                     i2l3712:
 12102  003334  90D8               	bcf	status,0,c
 12103  003336  3607               	rlcf	i2___awdiv@quotient,f,c
 12104  003338  3608               	rlcf	i2___awdiv@quotient+1,f,c
 12105  00333A  5003               	movf	i2___awdiv@divisor,w,c
 12106  00333C  5C01               	subwf	i2___awdiv@dividend,w,c
 12107  00333E  5004               	movf	i2___awdiv@divisor+1,w,c
 12108  003340  5802               	subwfb	i2___awdiv@dividend+1,w,c
 12109  003342  A0D8               	btfss	status,0,c
 12110  003344  D005               	goto	i2l3720
 12111  003346  5003               	movf	i2___awdiv@divisor,w,c
 12112  003348  5E01               	subwf	i2___awdiv@dividend,f,c
 12113  00334A  5004               	movf	i2___awdiv@divisor+1,w,c
 12114  00334C  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 12115  00334E  8007               	bsf	i2___awdiv@quotient,0,c
 12116  003350                     i2l3720:
 12117  003350  90D8               	bcf	status,0,c
 12118  003352  3204               	rrcf	i2___awdiv@divisor+1,f,c
 12119  003354  3203               	rrcf	i2___awdiv@divisor,f,c
 12120  003356  2E05               	decfsz	i2___awdiv@counter,f,c
 12121  003358  D7ED               	goto	i2l3712
 12122  00335A                     i2l3724:
 12123  00335A  5006               	movf	i2___awdiv@sign,w,c
 12124  00335C  B4D8               	btfsc	status,2,c
 12125  00335E  D004               	goto	i2l3728
 12126  003360  6C07               	negf	i2___awdiv@quotient,c
 12127  003362  1E08               	comf	i2___awdiv@quotient+1,f,c
 12128  003364  B0D8               	btfsc	status,0,c
 12129  003366  2A08               	incf	i2___awdiv@quotient+1,f,c
 12130  003368                     i2l3728:
 12131  003368  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 12132  00336C  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 12133  003370  0012               	return	
 12134  003372                     __end_ofi2___awdiv:
 12135                           	opt stack 0
 12136                           pclatu	equ	0xFFB
 12137                           pclath	equ	0xFFA
 12138                           tblptru	equ	0xFF8
 12139                           tblptrh	equ	0xFF7
 12140                           tblptrl	equ	0xFF6
 12141                           tablat	equ	0xFF5
 12142                           prodh	equ	0xFF4
 12143                           prodl	equ	0xFF3
 12144                           intcon	equ	0xFF2
 12145                           intcon2	equ	0xFF1
 12146                           postinc0	equ	0xFEE
 12147                           fsr0h	equ	0xFEA
 12148                           fsr0l	equ	0xFE9
 12149                           wreg	equ	0xFE8
 12150                           postdec1	equ	0xFE5
 12151                           fsr1h	equ	0xFE2
 12152                           fsr1l	equ	0xFE1
 12153                           indf2	equ	0xFDF
 12154                           postinc2	equ	0xFDE
 12155                           postdec2	equ	0xFDD
 12156                           fsr2h	equ	0xFDA
 12157                           fsr2l	equ	0xFD9
 12158                           status	equ	0xFD8
 12159                           
 12160 ;; *************** function i2_LED *****************
 12161 ;; Defined at:
 12162 ;;		line 51 in file "PIC18F27J53-ChargeStation6-02.h"
 12163 ;; Parameters:    Size  Location     Type
 12164 ;;  b               1    wreg     unsigned char 
 12165 ;;  value           1    0[COMRAM] unsigned char 
 12166 ;; Auto vars:     Size  Location     Type
 12167 ;;  b               1    1[COMRAM] unsigned char 
 12168 ;; Return value:  Size  Location     Type
 12169 ;;		None               void
 12170 ;; Registers used:
 12171 ;;		wreg, status,2, status,0
 12172 ;; Tracked objects:
 12173 ;;		On entry : 0/0
 12174 ;;		On exit  : 0/0
 12175 ;;		Unchanged: 0/0
 12176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12177 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12178 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12180 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12181 ;;Total ram usage:        2 bytes
 12182 ;; Hardware stack levels used:    1
 12183 ;; This function calls:
 12184 ;;		Nothing
 12185 ;; This function is called by:
 12186 ;;		_lchika
 12187 ;; This function uses a non-reentrant model
 12188 ;;
 12189                           
 12190                           	psect	text64
 12191  003C2A                     __ptext64:
 12192                           	opt stack 0
 12193  003C2A                     i2_LED:
 12194                           	opt stack 22
 12195                           
 12196                           ;incstack = 0
 12197                           ;i2LED@b stored from wreg
 12198  003C2A  6E02               	movwf	i2LED@b,c
 12199                           
 12200                           ;PIC18F27J53-ChargeStation6-02.h: 52: switch (b) {
 12201  003C2C  D015               	goto	i2l3686
 12202  003C2E                     i2l552:
 12203                           
 12204                           ;PIC18F27J53-ChargeStation6-02.h: 54: LATC2 = value;
 12205  003C2E  A001               	btfss	i2LED@value,0,c
 12206  003C30  D001               	bra	i2u316_45
 12207  003C32  848B               	bsf	3979,2,c	;volatile
 12208  003C34                     i2u316_45:
 12209  003C34  B001               	btfsc	i2LED@value,0,c
 12210  003C36  D001               	bra	i2u316_46
 12211  003C38  948B               	bcf	3979,2,c	;volatile
 12212  003C3A                     i2u316_46:
 12213                           
 12214                           ;PIC18F27J53-ChargeStation6-02.h: 55: break;
 12215  003C3A  0012               	return	
 12216  003C3C                     i2l554:
 12217                           
 12218                           ;PIC18F27J53-ChargeStation6-02.h: 57: LATB7 = value;
 12219  003C3C  A001               	btfss	i2LED@value,0,c
 12220  003C3E  D001               	bra	i2u317_45
 12221  003C40  8E8A               	bsf	3978,7,c	;volatile
 12222  003C42                     i2u317_45:
 12223  003C42  B001               	btfsc	i2LED@value,0,c
 12224  003C44  D001               	bra	i2u317_46
 12225  003C46  9E8A               	bcf	3978,7,c	;volatile
 12226  003C48                     i2u317_46:
 12227                           
 12228                           ;PIC18F27J53-ChargeStation6-02.h: 58: break;
 12229  003C48  0012               	return	
 12230  003C4A                     i2l555:
 12231                           
 12232                           ;PIC18F27J53-ChargeStation6-02.h: 60: LATB6 = value;
 12233  003C4A  A001               	btfss	i2LED@value,0,c
 12234  003C4C  D001               	bra	i2u318_45
 12235  003C4E  8C8A               	bsf	3978,6,c	;volatile
 12236  003C50                     i2u318_45:
 12237  003C50  B001               	btfsc	i2LED@value,0,c
 12238  003C52  D001               	bra	i2u318_46
 12239  003C54  9C8A               	bcf	3978,6,c	;volatile
 12240  003C56                     i2u318_46:
 12241                           
 12242                           ;PIC18F27J53-ChargeStation6-02.h: 61: break;
 12243  003C56  0012               	return	
 12244  003C58                     i2l3686:
 12245  003C58  5002               	movf	i2LED@b,w,c
 12246                           
 12247                           ; Switch size 1, requested type "space"
 12248                           ; Number of cases is 3, Range of values is 0 to 2
 12249                           ; switch strategies available:
 12250                           ; Name         Instructions Cycles
 12251                           ; simple_byte           10     6 (average)
 12252                           ;	Chosen strategy is simple_byte
 12253  003C5A  0A00               	xorlw	0	; case 0
 12254  003C5C  B4D8               	btfsc	status,2,c
 12255  003C5E  D7E7               	goto	i2l552
 12256  003C60  0A01               	xorlw	1	; case 1
 12257  003C62  B4D8               	btfsc	status,2,c
 12258  003C64  D7EB               	goto	i2l554
 12259  003C66  0A03               	xorlw	3	; case 2
 12260  003C68  A4D8               	btfss	status,2,c
 12261  003C6A  0012               	return	
 12262  003C6C  D7EE               	goto	i2l555
 12263  003C6E                     __end_ofi2_LED:
 12264                           	opt stack 0
 12265                           pclatu	equ	0xFFB
 12266                           pclath	equ	0xFFA
 12267                           tblptru	equ	0xFF8
 12268                           tblptrh	equ	0xFF7
 12269                           tblptrl	equ	0xFF6
 12270                           tablat	equ	0xFF5
 12271                           prodh	equ	0xFF4
 12272                           prodl	equ	0xFF3
 12273                           intcon	equ	0xFF2
 12274                           intcon2	equ	0xFF1
 12275                           postinc0	equ	0xFEE
 12276                           fsr0h	equ	0xFEA
 12277                           fsr0l	equ	0xFE9
 12278                           wreg	equ	0xFE8
 12279                           postdec1	equ	0xFE5
 12280                           fsr1h	equ	0xFE2
 12281                           fsr1l	equ	0xFE1
 12282                           indf2	equ	0xFDF
 12283                           postinc2	equ	0xFDE
 12284                           postdec2	equ	0xFDD
 12285                           fsr2h	equ	0xFDA
 12286                           fsr2l	equ	0xFD9
 12287                           status	equ	0xFD8
 12288                           
 12289 ;; *************** function _interrupt_TXIF *****************
 12290 ;; Defined at:
 12291 ;;		line 223 in file "../My_header\My_header.h"
 12292 ;; Parameters:    Size  Location     Type
 12293 ;;		None
 12294 ;; Auto vars:     Size  Location     Type
 12295 ;;		None
 12296 ;; Return value:  Size  Location     Type
 12297 ;;		None               void
 12298 ;; Registers used:
 12299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12300 ;; Tracked objects:
 12301 ;;		On entry : 0/0
 12302 ;;		On exit  : 0/0
 12303 ;;		Unchanged: 0/0
 12304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12309 ;;Total ram usage:        0 bytes
 12310 ;; Hardware stack levels used:    1
 12311 ;; Hardware stack levels required when called:    2
 12312 ;; This function calls:
 12313 ;;		_ringbuf_num
 12314 ;;		_ringbuf_pop
 12315 ;; This function is called by:
 12316 ;;		_ISR
 12317 ;; This function uses a non-reentrant model
 12318 ;;
 12319                           
 12320                           	psect	text65
 12321  003CAA                     __ptext65:
 12322                           	opt stack 0
 12323  003CAA                     _interrupt_TXIF:
 12324                           	opt stack 21
 12325                           
 12326                           ;My_header\My_header.h: 224: if (PIE1bits.TX1IE && PIR1bits.TX1IF) {
 12327                           
 12328                           ;incstack = 0
 12329  003CAA  A89D               	btfss	3997,4,c	;volatile
 12330  003CAC  0012               	return	
 12331  003CAE  A89E               	btfss	3998,4,c	;volatile
 12332  003CB0  0012               	return	
 12333                           
 12334                           ;My_header\My_header.h: 225: PIR1bits.TX1IF = 0;
 12335  003CB2  989E               	bcf	3998,4,c	;volatile
 12336                           
 12337                           ;My_header\My_header.h: 226: if (ringbuf_num(&tx_buf) > 0) {
 12338  003CB4  0101               	movlb	1	; () banked
 12339  003CB6  0E01               	movlw	high _tx_buf
 12340  003CB8  6E02               	movwf	ringbuf_num@rb+1,c
 12341  003CBA  0101               	movlb	1	; () banked
 12342  003CBC  0EC9               	movlw	low _tx_buf
 12343  003CBE  6E01               	movwf	ringbuf_num@rb,c
 12344  003CC0  EC98  F01B         	call	_ringbuf_num	;wreg free
 12345  003CC4  0900               	iorlw	0
 12346  003CC6  B4D8               	btfsc	status,2,c
 12347  003CC8  D00A               	goto	i2l196
 12348                           
 12349                           ;My_header\My_header.h: 227: TXREG1 = ringbuf_pop(&tx_buf);
 12350  003CCA  0101               	movlb	1	; () banked
 12351  003CCC  0E01               	movlw	high _tx_buf
 12352  003CCE  6E06               	movwf	ringbuf_pop@rb+1,c
 12353  003CD0  0101               	movlb	1	; () banked
 12354  003CD2  0EC9               	movlw	low _tx_buf
 12355  003CD4  6E05               	movwf	ringbuf_pop@rb,c
 12356  003CD6  EC4E  F01A         	call	_ringbuf_pop	;wreg free
 12357  003CDA  6EAE               	movwf	4014,c	;volatile
 12358                           
 12359                           ;My_header\My_header.h: 228: } else {
 12360  003CDC  0012               	return	
 12361  003CDE                     i2l196:
 12362                           
 12363                           ;My_header\My_header.h: 229: PIE1bits.TX1IE = 0;
 12364  003CDE  989D               	bcf	3997,4,c	;volatile
 12365  003CE0  0012               	return	
 12366  003CE2                     __end_of_interrupt_TXIF:
 12367                           	opt stack 0
 12368                           pclatu	equ	0xFFB
 12369                           pclath	equ	0xFFA
 12370                           tblptru	equ	0xFF8
 12371                           tblptrh	equ	0xFF7
 12372                           tblptrl	equ	0xFF6
 12373                           tablat	equ	0xFF5
 12374                           prodh	equ	0xFF4
 12375                           prodl	equ	0xFF3
 12376                           intcon	equ	0xFF2
 12377                           intcon2	equ	0xFF1
 12378                           postinc0	equ	0xFEE
 12379                           fsr0h	equ	0xFEA
 12380                           fsr0l	equ	0xFE9
 12381                           wreg	equ	0xFE8
 12382                           postdec1	equ	0xFE5
 12383                           fsr1h	equ	0xFE2
 12384                           fsr1l	equ	0xFE1
 12385                           indf2	equ	0xFDF
 12386                           postinc2	equ	0xFDE
 12387                           postdec2	equ	0xFDD
 12388                           fsr2h	equ	0xFDA
 12389                           fsr2l	equ	0xFD9
 12390                           status	equ	0xFD8
 12391                           
 12392 ;; *************** function _ringbuf_pop *****************
 12393 ;; Defined at:
 12394 ;;		line 45 in file "../My_header\My_ringbuf.h"
 12395 ;; Parameters:    Size  Location     Type
 12396 ;;  rb              2    4[COMRAM] PTR struct ringbuf
 12397 ;;		 -> tx_buf(5), 
 12398 ;; Auto vars:     Size  Location     Type
 12399 ;;  ret             1    9[COMRAM] unsigned char 
 12400 ;; Return value:  Size  Location     Type
 12401 ;;                  1    wreg      unsigned char 
 12402 ;; Registers used:
 12403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12404 ;; Tracked objects:
 12405 ;;		On entry : 0/0
 12406 ;;		On exit  : 0/0
 12407 ;;		Unchanged: 0/0
 12408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12409 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12410 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12411 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12412 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12413 ;;Total ram usage:        6 bytes
 12414 ;; Hardware stack levels used:    1
 12415 ;; Hardware stack levels required when called:    1
 12416 ;; This function calls:
 12417 ;;		_ringbuf_num
 12418 ;; This function is called by:
 12419 ;;		_interrupt_TXIF
 12420 ;; This function uses a non-reentrant model
 12421 ;;
 12422                           
 12423                           	psect	text66
 12424  00349C                     __ptext66:
 12425                           	opt stack 0
 12426  00349C                     _ringbuf_pop:
 12427                           	opt stack 21
 12428                           
 12429                           ;My_header\My_ringbuf.h: 46: if (ringbuf_num(rb)) {
 12430                           
 12431                           ;incstack = 0
 12432  00349C  C006  F002         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 12433  0034A0  C005  F001         	movff	ringbuf_pop@rb,ringbuf_num@rb
 12434  0034A4  EC98  F01B         	call	_ringbuf_num	;wreg free
 12435  0034A8  0900               	iorlw	0
 12436  0034AA  B4D8               	btfsc	status,2,c
 12437  0034AC  D03D               	goto	i2l3414
 12438                           
 12439                           ;My_header\My_ringbuf.h: 47: uint8_t ret = rb->buf[rb->tail];
 12440  0034AE  EE20 F004          	lfsr	2,4
 12441  0034B2  5005               	movf	ringbuf_pop@rb,w,c
 12442  0034B4  26D9               	addwf	fsr2l,f,c
 12443  0034B6  5006               	movf	ringbuf_pop@rb+1,w,c
 12444  0034B8  22DA               	addwfc	fsr2h,f,c
 12445  0034BA  50DF               	movf	indf2,w,c
 12446  0034BC  6E07               	movwf	??_ringbuf_pop& (0+255),c
 12447  0034BE  5007               	movf	??_ringbuf_pop,w,c
 12448  0034C0  0D01               	mullw	1
 12449  0034C2  C005  FFD9         	movff	ringbuf_pop@rb,fsr2l
 12450  0034C6  C006  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 12451  0034CA  CFDE F008          	movff	postinc2,??_ringbuf_pop+1
 12452  0034CE  CFDD F009          	movff	postdec2,??_ringbuf_pop+2
 12453  0034D2  50F3               	movf	prodl,w,c
 12454  0034D4  2408               	addwf	??_ringbuf_pop+1,w,c
 12455  0034D6  6ED9               	movwf	fsr2l,c
 12456  0034D8  50F4               	movf	prodh,w,c
 12457  0034DA  2009               	addwfc	??_ringbuf_pop+2,w,c
 12458  0034DC  6EDA               	movwf	fsr2h,c
 12459  0034DE  50DF               	movf	indf2,w,c
 12460  0034E0  6E0A               	movwf	ringbuf_pop@ret,c
 12461                           
 12462                           ;My_header\My_ringbuf.h: 48: rb->tail++;
 12463  0034E2  EE20 F004          	lfsr	2,4
 12464  0034E6  5005               	movf	ringbuf_pop@rb,w,c
 12465  0034E8  26D9               	addwf	fsr2l,f,c
 12466  0034EA  5006               	movf	ringbuf_pop@rb+1,w,c
 12467  0034EC  22DA               	addwfc	fsr2h,f,c
 12468  0034EE  2ADF               	incf	indf2,f,c
 12469                           
 12470                           ;My_header\My_ringbuf.h: 49: if (rb->tail >= rb->size) {
 12471  0034F0  EE20 F004          	lfsr	2,4
 12472  0034F4  5005               	movf	ringbuf_pop@rb,w,c
 12473  0034F6  26D9               	addwf	fsr2l,f,c
 12474  0034F8  5006               	movf	ringbuf_pop@rb+1,w,c
 12475  0034FA  22DA               	addwfc	fsr2h,f,c
 12476  0034FC  50DF               	movf	indf2,w,c
 12477  0034FE  6E07               	movwf	??_ringbuf_pop& (0+255),c
 12478  003500  EE20 F002          	lfsr	2,2
 12479  003504  5005               	movf	ringbuf_pop@rb,w,c
 12480  003506  26D9               	addwf	fsr2l,f,c
 12481  003508  5006               	movf	ringbuf_pop@rb+1,w,c
 12482  00350A  22DA               	addwfc	fsr2h,f,c
 12483  00350C  50DF               	movf	indf2,w,c
 12484  00350E  5C07               	subwf	??_ringbuf_pop,w,c
 12485  003510  A0D8               	btfss	status,0,c
 12486  003512  D008               	goto	i2l3408
 12487                           
 12488                           ;My_header\My_ringbuf.h: 50: rb->tail = 0;
 12489  003514  EE20 F004          	lfsr	2,4
 12490  003518  5005               	movf	ringbuf_pop@rb,w,c
 12491  00351A  26D9               	addwf	fsr2l,f,c
 12492  00351C  5006               	movf	ringbuf_pop@rb+1,w,c
 12493  00351E  22DA               	addwfc	fsr2h,f,c
 12494  003520  0E00               	movlw	0
 12495  003522  6EDF               	movwf	indf2,c
 12496  003524                     i2l3408:
 12497                           
 12498                           ;My_header\My_ringbuf.h: 51: }
 12499                           ;My_header\My_ringbuf.h: 52: return ret;
 12500  003524  500A               	movf	ringbuf_pop@ret,w,c
 12501  003526  0012               	return	
 12502  003528                     i2l3414:
 12503                           
 12504                           ;My_header\My_ringbuf.h: 54: return 0;
 12505  003528  0E00               	movlw	0
 12506  00352A  0012               	return	
 12507  00352C                     __end_of_ringbuf_pop:
 12508                           	opt stack 0
 12509                           pclatu	equ	0xFFB
 12510                           pclath	equ	0xFFA
 12511                           tblptru	equ	0xFF8
 12512                           tblptrh	equ	0xFF7
 12513                           tblptrl	equ	0xFF6
 12514                           tablat	equ	0xFF5
 12515                           prodh	equ	0xFF4
 12516                           prodl	equ	0xFF3
 12517                           intcon	equ	0xFF2
 12518                           intcon2	equ	0xFF1
 12519                           postinc0	equ	0xFEE
 12520                           fsr0h	equ	0xFEA
 12521                           fsr0l	equ	0xFE9
 12522                           wreg	equ	0xFE8
 12523                           postdec1	equ	0xFE5
 12524                           fsr1h	equ	0xFE2
 12525                           fsr1l	equ	0xFE1
 12526                           indf2	equ	0xFDF
 12527                           postinc2	equ	0xFDE
 12528                           postdec2	equ	0xFDD
 12529                           fsr2h	equ	0xFDA
 12530                           fsr2l	equ	0xFD9
 12531                           status	equ	0xFD8
 12532                           
 12533 ;; *************** function _ringbuf_num *****************
 12534 ;; Defined at:
 12535 ;;		line 29 in file "../My_header\My_ringbuf.h"
 12536 ;; Parameters:    Size  Location     Type
 12537 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 12538 ;;		 -> tx_buf(5), 
 12539 ;; Auto vars:     Size  Location     Type
 12540 ;;		None
 12541 ;; Return value:  Size  Location     Type
 12542 ;;                  1    wreg      unsigned char 
 12543 ;; Registers used:
 12544 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12545 ;; Tracked objects:
 12546 ;;		On entry : 0/0
 12547 ;;		On exit  : 0/0
 12548 ;;		Unchanged: 0/0
 12549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12552 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12553 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12554 ;;Total ram usage:        4 bytes
 12555 ;; Hardware stack levels used:    1
 12556 ;; This function calls:
 12557 ;;		Nothing
 12558 ;; This function is called by:
 12559 ;;		_ringbuf_push
 12560 ;;		_ringbuf_pop
 12561 ;;		_interrupt_TXIF
 12562 ;;		_ringbuf_backspace
 12563 ;; This function uses a non-reentrant model
 12564 ;;
 12565                           
 12566                           	psect	text67
 12567  003730                     __ptext67:
 12568                           	opt stack 0
 12569  003730                     _ringbuf_num:
 12570                           	opt stack 21
 12571                           
 12572                           ;My_header\My_ringbuf.h: 30: if (rb->head >= rb->tail) {
 12573                           
 12574                           ;incstack = 0
 12575  003730  EE20 F003          	lfsr	2,3
 12576  003734  5001               	movf	ringbuf_num@rb,w,c
 12577  003736  26D9               	addwf	fsr2l,f,c
 12578  003738  5002               	movf	ringbuf_num@rb+1,w,c
 12579  00373A  22DA               	addwfc	fsr2h,f,c
 12580  00373C  50DF               	movf	indf2,w,c
 12581  00373E  6E03               	movwf	??_ringbuf_num& (0+255),c
 12582  003740  EE20 F004          	lfsr	2,4
 12583  003744  5001               	movf	ringbuf_num@rb,w,c
 12584  003746  26D9               	addwf	fsr2l,f,c
 12585  003748  5002               	movf	ringbuf_num@rb+1,w,c
 12586  00374A  22DA               	addwfc	fsr2h,f,c
 12587  00374C  50DF               	movf	indf2,w,c
 12588  00374E  5C03               	subwf	??_ringbuf_num,w,c
 12589  003750  A0D8               	btfss	status,0,c
 12590  003752  D012               	goto	i2l3266
 12591                           
 12592                           ;My_header\My_ringbuf.h: 31: return (rb->head - rb->tail);
 12593  003754  EE20 F003          	lfsr	2,3
 12594  003758  5001               	movf	ringbuf_num@rb,w,c
 12595  00375A  26D9               	addwf	fsr2l,f,c
 12596  00375C  5002               	movf	ringbuf_num@rb+1,w,c
 12597  00375E  22DA               	addwfc	fsr2h,f,c
 12598  003760  50DF               	movf	indf2,w,c
 12599  003762  6E03               	movwf	??_ringbuf_num& (0+255),c
 12600  003764  EE20 F004          	lfsr	2,4
 12601  003768  5001               	movf	ringbuf_num@rb,w,c
 12602  00376A  26D9               	addwf	fsr2l,f,c
 12603  00376C  5002               	movf	ringbuf_num@rb+1,w,c
 12604  00376E  22DA               	addwfc	fsr2h,f,c
 12605  003770  50DF               	movf	indf2,w,c
 12606  003772  0800               	sublw	0
 12607  003774  2403               	addwf	??_ringbuf_num,w,c
 12608  003776  0012               	return	
 12609  003778                     i2l3266:
 12610                           
 12611                           ;My_header\My_ringbuf.h: 33: return (rb->size + rb->head - rb->tail);
 12612  003778  EE20 F003          	lfsr	2,3
 12613  00377C  5001               	movf	ringbuf_num@rb,w,c
 12614  00377E  26D9               	addwf	fsr2l,f,c
 12615  003780  5002               	movf	ringbuf_num@rb+1,w,c
 12616  003782  22DA               	addwfc	fsr2h,f,c
 12617  003784  50DF               	movf	indf2,w,c
 12618  003786  6E03               	movwf	??_ringbuf_num& (0+255),c
 12619  003788  EE20 F002          	lfsr	2,2
 12620  00378C  5001               	movf	ringbuf_num@rb,w,c
 12621  00378E  26D9               	addwf	fsr2l,f,c
 12622  003790  5002               	movf	ringbuf_num@rb+1,w,c
 12623  003792  22DA               	addwfc	fsr2h,f,c
 12624  003794  50DF               	movf	indf2,w,c
 12625  003796  6E04               	movwf	(??_ringbuf_num+1)& (0+255),c
 12626  003798  EE20 F004          	lfsr	2,4
 12627  00379C  5001               	movf	ringbuf_num@rb,w,c
 12628  00379E  26D9               	addwf	fsr2l,f,c
 12629  0037A0  5002               	movf	ringbuf_num@rb+1,w,c
 12630  0037A2  22DA               	addwfc	fsr2h,f,c
 12631  0037A4  50DF               	movf	indf2,w,c
 12632  0037A6  0800               	sublw	0
 12633  0037A8  2404               	addwf	??_ringbuf_num+1,w,c
 12634  0037AA  2403               	addwf	??_ringbuf_num,w,c
 12635  0037AC  0012               	return	
 12636  0037AE                     __end_of_ringbuf_num:
 12637                           	opt stack 0
 12638                           pclatu	equ	0xFFB
 12639                           pclath	equ	0xFFA
 12640                           tblptru	equ	0xFF8
 12641                           tblptrh	equ	0xFF7
 12642                           tblptrl	equ	0xFF6
 12643                           tablat	equ	0xFF5
 12644                           prodh	equ	0xFF4
 12645                           prodl	equ	0xFF3
 12646                           intcon	equ	0xFF2
 12647                           intcon2	equ	0xFF1
 12648                           postinc0	equ	0xFEE
 12649                           fsr0h	equ	0xFEA
 12650                           fsr0l	equ	0xFE9
 12651                           wreg	equ	0xFE8
 12652                           postdec1	equ	0xFE5
 12653                           fsr1h	equ	0xFE2
 12654                           fsr1l	equ	0xFE1
 12655                           indf2	equ	0xFDF
 12656                           postinc2	equ	0xFDE
 12657                           postdec2	equ	0xFDD
 12658                           fsr2h	equ	0xFDA
 12659                           fsr2l	equ	0xFD9
 12660                           status	equ	0xFD8
 12661                           
 12662 ;; *************** function _integrating *****************
 12663 ;; Defined at:
 12664 ;;		line 207 in file "PIC18F27J53-ChargeStation6-02.h"
 12665 ;; Parameters:    Size  Location     Type
 12666 ;;		None
 12667 ;; Auto vars:     Size  Location     Type
 12668 ;;  port            1   17[COMRAM] unsigned char 
 12669 ;; Return value:  Size  Location     Type
 12670 ;;		None               void
 12671 ;; Registers used:
 12672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12673 ;; Tracked objects:
 12674 ;;		On entry : 0/0
 12675 ;;		On exit  : 0/0
 12676 ;;		Unchanged: 0/0
 12677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12679 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12680 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12681 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12682 ;;Total ram usage:        5 bytes
 12683 ;; Hardware stack levels used:    1
 12684 ;; Hardware stack levels required when called:    1
 12685 ;; This function calls:
 12686 ;;		i2___lldiv
 12687 ;; This function is called by:
 12688 ;;		_ISR
 12689 ;; This function uses a non-reentrant model
 12690 ;;
 12691                           
 12692                           	psect	text68
 12693  003152                     __ptext68:
 12694                           	opt stack 0
 12695  003152                     _integrating:
 12696                           	opt stack 22
 12697                           
 12698                           ;PIC18F27J53-ChargeStation6-02.h: 208: for (uint8_t port = 0; port < 3; port++) {
 12699                           
 12700                           ;incstack = 0
 12701  003152  0E00               	movlw	0
 12702  003154  6E12               	movwf	integrating@port,c
 12703  003156  0E02               	movlw	2
 12704  003158  6412               	cpfsgt	integrating@port,c
 12705  00315A  D001               	goto	i2l4018
 12706  00315C  0012               	return	
 12707  00315E                     i2l4018:
 12708                           
 12709                           ;PIC18F27J53-ChargeStation6-02.h: 209: s[port] += I[port];
 12710  00315E  5012               	movf	integrating@port,w,c
 12711  003160  0D02               	mullw	2
 12712  003162  0E22               	movlw	low _I
 12713  003164  24F3               	addwf	prodl,w,c
 12714  003166  6ED9               	movwf	fsr2l,c
 12715  003168  0E00               	movlw	high _I
 12716  00316A  20F4               	addwfc	prodh,w,c
 12717  00316C  6EDA               	movwf	fsr2h,c
 12718  00316E  CFDE F00E          	movff	postinc2,??_integrating
 12719  003172  CFDD F00F          	movff	postdec2,??_integrating+1
 12720  003176  5012               	movf	integrating@port,w,c
 12721  003178  0D04               	mullw	4
 12722  00317A  0100               	movlb	0	; () banked
 12723  00317C  0EB1               	movlw	low _s
 12724  00317E  24F3               	addwf	prodl,w,c
 12725  003180  6ED9               	movwf	fsr2l,c
 12726  003182  0100               	movlb	0	; () banked
 12727  003184  0E00               	movlw	high _s
 12728  003186  20F4               	addwfc	prodh,w,c
 12729  003188  6EDA               	movwf	fsr2h,c
 12730  00318A  500E               	movf	??_integrating,w,c
 12731  00318C  26DE               	addwf	postinc2,f,c
 12732  00318E  500F               	movf	??_integrating+1,w,c
 12733  003190  22DE               	addwfc	postinc2,f,c
 12734  003192  0E00               	movlw	0
 12735  003194  22DE               	addwfc	postinc2,f,c
 12736  003196  22DD               	addwfc	postdec2,f,c
 12737  003198  52DD               	movf	postdec2,f,c
 12738  00319A  52DD               	movf	postdec2,f,c
 12739                           
 12740                           ; BSR set to: 0
 12741                           ;PIC18F27J53-ChargeStation6-02.h: 210: S[port] = s[port] / 3600;
 12742  00319C  5012               	movf	integrating@port,w,c
 12743  00319E  0D04               	mullw	4
 12744  0031A0  0100               	movlb	0	; () banked
 12745  0031A2  0EB1               	movlw	low _s
 12746  0031A4  24F3               	addwf	prodl,w,c
 12747  0031A6  6ED9               	movwf	fsr2l,c
 12748  0031A8  0100               	movlb	0	; () banked
 12749  0031AA  0E00               	movlw	high _s
 12750  0031AC  20F4               	addwfc	prodh,w,c
 12751  0031AE  6EDA               	movwf	fsr2h,c
 12752  0031B0  CFDE F001          	movff	postinc2,i2___lldiv@dividend
 12753  0031B4  CFDE F002          	movff	postinc2,i2___lldiv@dividend+1
 12754  0031B8  CFDE F003          	movff	postinc2,i2___lldiv@dividend+2
 12755  0031BC  CFDE F004          	movff	postinc2,i2___lldiv@dividend+3
 12756  0031C0  0E10               	movlw	16
 12757  0031C2  6E05               	movwf	i2___lldiv@divisor,c
 12758  0031C4  0E0E               	movlw	14
 12759  0031C6  6E06               	movwf	i2___lldiv@divisor+1,c
 12760  0031C8  0E00               	movlw	0
 12761  0031CA  6E07               	movwf	i2___lldiv@divisor+2,c
 12762  0031CC  0E00               	movlw	0
 12763  0031CE  6E08               	movwf	i2___lldiv@divisor+3,c
 12764  0031D0  ECD9  F01A         	call	i2___lldiv	;wreg free
 12765  0031D4  C001  F00E         	movff	?i2___lldiv,??_integrating
 12766  0031D8  C002  F00F         	movff	?i2___lldiv+1,??_integrating+1
 12767  0031DC  C003  F010         	movff	?i2___lldiv+2,??_integrating+2
 12768  0031E0  C004  F011         	movff	?i2___lldiv+3,??_integrating+3
 12769  0031E4  5012               	movf	integrating@port,w,c
 12770  0031E6  0D04               	mullw	4
 12771  0031E8  0100               	movlb	0	; () banked
 12772  0031EA  0EA5               	movlw	low _S
 12773  0031EC  24F3               	addwf	prodl,w,c
 12774  0031EE  6ED9               	movwf	fsr2l,c
 12775  0031F0  0100               	movlb	0	; () banked
 12776  0031F2  0E00               	movlw	high _S
 12777  0031F4  20F4               	addwfc	prodh,w,c
 12778  0031F6  6EDA               	movwf	fsr2h,c
 12779  0031F8  C00E  FFDE         	movff	??_integrating,postinc2
 12780  0031FC  C00F  FFDE         	movff	??_integrating+1,postinc2
 12781  003200  C010  FFDE         	movff	??_integrating+2,postinc2
 12782  003204  C011  FFDD         	movff	??_integrating+3,postdec2
 12783  003208  06D9               	decf	fsr2l,f,c
 12784  00320A  06D9               	decf	fsr2l,f,c
 12785                           
 12786                           ; BSR set to: 0
 12787  00320C  2A12               	incf	integrating@port,f,c
 12788                           
 12789                           ; BSR set to: 0
 12790  00320E  0E02               	movlw	2
 12791  003210  6412               	cpfsgt	integrating@port,c
 12792  003212  D7A5               	goto	i2l4018
 12793  003214  0012               	return	
 12794  003216                     __end_of_integrating:
 12795                           	opt stack 0
 12796                           pclatu	equ	0xFFB
 12797                           pclath	equ	0xFFA
 12798                           tblptru	equ	0xFF8
 12799                           tblptrh	equ	0xFF7
 12800                           tblptrl	equ	0xFF6
 12801                           tablat	equ	0xFF5
 12802                           prodh	equ	0xFF4
 12803                           prodl	equ	0xFF3
 12804                           intcon	equ	0xFF2
 12805                           intcon2	equ	0xFF1
 12806                           postinc0	equ	0xFEE
 12807                           fsr0h	equ	0xFEA
 12808                           fsr0l	equ	0xFE9
 12809                           wreg	equ	0xFE8
 12810                           postdec1	equ	0xFE5
 12811                           fsr1h	equ	0xFE2
 12812                           fsr1l	equ	0xFE1
 12813                           indf2	equ	0xFDF
 12814                           postinc2	equ	0xFDE
 12815                           postdec2	equ	0xFDD
 12816                           fsr2h	equ	0xFDA
 12817                           fsr2l	equ	0xFD9
 12818                           status	equ	0xFD8
 12819                           
 12820 ;; *************** function i2___lldiv *****************
 12821 ;; Defined at:
 12822 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
 12823 ;; Parameters:    Size  Location     Type
 12824 ;;  dividend        4    0[COMRAM] unsigned long 
 12825 ;;  divisor         4    4[COMRAM] unsigned long 
 12826 ;; Auto vars:     Size  Location     Type
 12827 ;;  __lldiv         4    8[COMRAM] unsigned long 
 12828 ;;  __lldiv         1   12[COMRAM] unsigned char 
 12829 ;; Return value:  Size  Location     Type
 12830 ;;                  4    0[COMRAM] unsigned long 
 12831 ;; Registers used:
 12832 ;;		wreg, status,2, status,0
 12833 ;; Tracked objects:
 12834 ;;		On entry : 0/0
 12835 ;;		On exit  : 0/0
 12836 ;;		Unchanged: 0/0
 12837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12838 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12839 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12841 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12842 ;;Total ram usage:       13 bytes
 12843 ;; Hardware stack levels used:    1
 12844 ;; This function calls:
 12845 ;;		Nothing
 12846 ;; This function is called by:
 12847 ;;		_integrating
 12848 ;; This function uses a non-reentrant model
 12849 ;;
 12850                           
 12851                           	psect	text69
 12852  0035B2                     __ptext69:
 12853                           	opt stack 0
 12854  0035B2                     i2___lldiv:
 12855                           	opt stack 22
 12856                           
 12857                           ;incstack = 0
 12858  0035B2  0E00               	movlw	0
 12859  0035B4  6E09               	movwf	i2___lldiv@quotient,c
 12860  0035B6  0E00               	movlw	0
 12861  0035B8  6E0A               	movwf	i2___lldiv@quotient+1,c
 12862  0035BA  0E00               	movlw	0
 12863  0035BC  6E0B               	movwf	i2___lldiv@quotient+2,c
 12864  0035BE  0E00               	movlw	0
 12865  0035C0  6E0C               	movwf	i2___lldiv@quotient+3,c
 12866  0035C2  5008               	movf	i2___lldiv@divisor+3,w,c
 12867  0035C4  1005               	iorwf	i2___lldiv@divisor,w,c
 12868  0035C6  1006               	iorwf	i2___lldiv@divisor+1,w,c
 12869  0035C8  1007               	iorwf	i2___lldiv@divisor+2,w,c
 12870  0035CA  B4D8               	btfsc	status,2,c
 12871  0035CC  D02A               	goto	i2l1144
 12872  0035CE  0E01               	movlw	1
 12873  0035D0  6E0D               	movwf	i2___lldiv@counter,c
 12874  0035D2  D006               	goto	i2l3740
 12875  0035D4                     i2l3738:
 12876  0035D4  90D8               	bcf	status,0,c
 12877  0035D6  3605               	rlcf	i2___lldiv@divisor,f,c
 12878  0035D8  3606               	rlcf	i2___lldiv@divisor+1,f,c
 12879  0035DA  3607               	rlcf	i2___lldiv@divisor+2,f,c
 12880  0035DC  3608               	rlcf	i2___lldiv@divisor+3,f,c
 12881  0035DE  2A0D               	incf	i2___lldiv@counter,f,c
 12882  0035E0                     i2l3740:
 12883  0035E0  AE08               	btfss	i2___lldiv@divisor+3,7,c
 12884  0035E2  D7F8               	goto	i2l3738
 12885  0035E4                     i2l3742:
 12886  0035E4  90D8               	bcf	status,0,c
 12887  0035E6  3609               	rlcf	i2___lldiv@quotient,f,c
 12888  0035E8  360A               	rlcf	i2___lldiv@quotient+1,f,c
 12889  0035EA  360B               	rlcf	i2___lldiv@quotient+2,f,c
 12890  0035EC  360C               	rlcf	i2___lldiv@quotient+3,f,c
 12891  0035EE  5005               	movf	i2___lldiv@divisor,w,c
 12892  0035F0  5C01               	subwf	i2___lldiv@dividend,w,c
 12893  0035F2  5006               	movf	i2___lldiv@divisor+1,w,c
 12894  0035F4  5802               	subwfb	i2___lldiv@dividend+1,w,c
 12895  0035F6  5007               	movf	i2___lldiv@divisor+2,w,c
 12896  0035F8  5803               	subwfb	i2___lldiv@dividend+2,w,c
 12897  0035FA  5008               	movf	i2___lldiv@divisor+3,w,c
 12898  0035FC  5804               	subwfb	i2___lldiv@dividend+3,w,c
 12899  0035FE  A0D8               	btfss	status,0,c
 12900  003600  D009               	goto	i2l3750
 12901  003602  5005               	movf	i2___lldiv@divisor,w,c
 12902  003604  5E01               	subwf	i2___lldiv@dividend,f,c
 12903  003606  5006               	movf	i2___lldiv@divisor+1,w,c
 12904  003608  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 12905  00360A  5007               	movf	i2___lldiv@divisor+2,w,c
 12906  00360C  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 12907  00360E  5008               	movf	i2___lldiv@divisor+3,w,c
 12908  003610  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 12909  003612  8009               	bsf	i2___lldiv@quotient,0,c
 12910  003614                     i2l3750:
 12911  003614  90D8               	bcf	status,0,c
 12912  003616  3208               	rrcf	i2___lldiv@divisor+3,f,c
 12913  003618  3207               	rrcf	i2___lldiv@divisor+2,f,c
 12914  00361A  3206               	rrcf	i2___lldiv@divisor+1,f,c
 12915  00361C  3205               	rrcf	i2___lldiv@divisor,f,c
 12916  00361E  2E0D               	decfsz	i2___lldiv@counter,f,c
 12917  003620  D7E1               	goto	i2l3742
 12918  003622                     i2l1144:
 12919  003622  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 12920  003626  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 12921  00362A  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 12922  00362E  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 12923  003632  0012               	return	
 12924  003634                     __end_ofi2___lldiv:
 12925                           	opt stack 0
 12926                           pclatu	equ	0xFFB
 12927                           pclath	equ	0xFFA
 12928                           tblptru	equ	0xFF8
 12929                           tblptrh	equ	0xFF7
 12930                           tblptrl	equ	0xFF6
 12931                           tablat	equ	0xFF5
 12932                           prodh	equ	0xFF4
 12933                           prodl	equ	0xFF3
 12934                           intcon	equ	0xFF2
 12935                           intcon2	equ	0xFF1
 12936                           postinc0	equ	0xFEE
 12937                           fsr0h	equ	0xFEA
 12938                           fsr0l	equ	0xFE9
 12939                           wreg	equ	0xFE8
 12940                           postdec1	equ	0xFE5
 12941                           fsr1h	equ	0xFE2
 12942                           fsr1l	equ	0xFE1
 12943                           indf2	equ	0xFDF
 12944                           postinc2	equ	0xFDE
 12945                           postdec2	equ	0xFDD
 12946                           fsr2h	equ	0xFDA
 12947                           fsr2l	equ	0xFD9
 12948                           status	equ	0xFD8
 12949                           
 12950 ;; *************** function _delay_timer_interrupt *****************
 12951 ;; Defined at:
 12952 ;;		line 359 in file "../My_header\My_header.h"
 12953 ;; Parameters:    Size  Location     Type
 12954 ;;  d               2    0[COMRAM] PTR struct Delay
 12955 ;;		 -> d_display(3), 
 12956 ;; Auto vars:     Size  Location     Type
 12957 ;;		None
 12958 ;; Return value:  Size  Location     Type
 12959 ;;		None               void
 12960 ;; Registers used:
 12961 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12962 ;; Tracked objects:
 12963 ;;		On entry : 0/0
 12964 ;;		On exit  : 0/0
 12965 ;;		Unchanged: 0/0
 12966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12967 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12970 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12971 ;;Total ram usage:        2 bytes
 12972 ;; Hardware stack levels used:    1
 12973 ;; This function calls:
 12974 ;;		Nothing
 12975 ;; This function is called by:
 12976 ;;		_ISR
 12977 ;; This function uses a non-reentrant model
 12978 ;;
 12979                           
 12980                           	psect	text70
 12981  003B9A                     __ptext70:
 12982                           	opt stack 0
 12983  003B9A                     _delay_timer_interrupt:
 12984                           	opt stack 23
 12985                           
 12986                           ;My_header\My_header.h: 360: if (d->cnt)d->cnt--;
 12987                           
 12988                           ;incstack = 0
 12989  003B9A  EE20 F001          	lfsr	2,1
 12990  003B9E  5001               	movf	delay_timer_interrupt@d,w,c
 12991  003BA0  26D9               	addwf	fsr2l,f,c
 12992  003BA2  5002               	movf	delay_timer_interrupt@d+1,w,c
 12993  003BA4  22DA               	addwfc	fsr2h,f,c
 12994  003BA6  50DE               	movf	postinc2,w,c
 12995  003BA8  10DD               	iorwf	postdec2,w,c
 12996  003BAA  B4D8               	btfsc	status,2,c
 12997  003BAC  D009               	goto	i2l238
 12998  003BAE  EE20 F001          	lfsr	2,1
 12999  003BB2  5001               	movf	delay_timer_interrupt@d,w,c
 13000  003BB4  26D9               	addwf	fsr2l,f,c
 13001  003BB6  5002               	movf	delay_timer_interrupt@d+1,w,c
 13002  003BB8  22DA               	addwfc	fsr2h,f,c
 13003  003BBA  06DE               	decf	postinc2,f,c
 13004  003BBC  0E00               	movlw	0
 13005  003BBE  5ADD               	subwfb	postdec2,f,c
 13006  003BC0                     i2l238:
 13007                           
 13008                           ;My_header\My_header.h: 361: if (d->cnt == 1)d->flag = 1;
 13009  003BC0  EE20 F001          	lfsr	2,1
 13010  003BC4  5001               	movf	delay_timer_interrupt@d,w,c
 13011  003BC6  26D9               	addwf	fsr2l,f,c
 13012  003BC8  5002               	movf	delay_timer_interrupt@d+1,w,c
 13013  003BCA  22DA               	addwfc	fsr2h,f,c
 13014  003BCC  50DE               	movf	postinc2,w,c
 13015  003BCE  0A01               	xorlw	1
 13016  003BD0  10DD               	iorwf	postdec2,w,c
 13017  003BD2  A4D8               	btfss	status,2,c
 13018  003BD4  0012               	return	
 13019  003BD6  C001  FFD9         	movff	delay_timer_interrupt@d,fsr2l
 13020  003BDA  C002  FFDA         	movff	delay_timer_interrupt@d+1,fsr2h
 13021  003BDE  0E01               	movlw	1
 13022  003BE0  6EDF               	movwf	indf2,c
 13023  003BE2  0012               	return	
 13024  003BE4                     __end_of_delay_timer_interrupt:
 13025                           	opt stack 0
 13026                           pclatu	equ	0xFFB
 13027                           pclath	equ	0xFFA
 13028                           tblptru	equ	0xFF8
 13029                           tblptrh	equ	0xFF7
 13030                           tblptrl	equ	0xFF6
 13031                           tablat	equ	0xFF5
 13032                           prodh	equ	0xFF4
 13033                           prodl	equ	0xFF3
 13034                           intcon	equ	0xFF2
 13035                           intcon2	equ	0xFF1
 13036                           postinc0	equ	0xFEE
 13037                           fsr0h	equ	0xFEA
 13038                           fsr0l	equ	0xFE9
 13039                           wreg	equ	0xFE8
 13040                           postdec1	equ	0xFE5
 13041                           fsr1h	equ	0xFE2
 13042                           fsr1l	equ	0xFE1
 13043                           indf2	equ	0xFDF
 13044                           postinc2	equ	0xFDE
 13045                           postdec2	equ	0xFDD
 13046                           fsr2h	equ	0xFDA
 13047                           fsr2l	equ	0xFD9
 13048                           status	equ	0xFD8
 13049                           
 13050 ;; *************** function _button_timer_interrupt *****************
 13051 ;; Defined at:
 13052 ;;		line 51 in file "../My_header\My_button.h"
 13053 ;; Parameters:    Size  Location     Type
 13054 ;;  bt              2    0[COMRAM] PTR struct button
 13055 ;;		 -> sw(4), sw2(4), sw1(4), sw0(4), 
 13056 ;;  sw_value        1    2[COMRAM] unsigned char 
 13057 ;; Auto vars:     Size  Location     Type
 13058 ;;		None
 13059 ;; Return value:  Size  Location     Type
 13060 ;;		None               void
 13061 ;; Registers used:
 13062 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13063 ;; Tracked objects:
 13064 ;;		On entry : 0/0
 13065 ;;		On exit  : 0/0
 13066 ;;		Unchanged: 0/0
 13067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13068 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13070 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13071 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13072 ;;Total ram usage:        5 bytes
 13073 ;; Hardware stack levels used:    1
 13074 ;; This function calls:
 13075 ;;		Nothing
 13076 ;; This function is called by:
 13077 ;;		_ISR
 13078 ;; This function uses a non-reentrant model
 13079 ;;
 13080                           
 13081                           	psect	text71
 13082  001BD2                     __ptext71:
 13083                           	opt stack 0
 13084  001BD2                     _button_timer_interrupt:
 13085                           	opt stack 23
 13086                           
 13087                           ;My_header\My_button.h: 52: if (sw_value) {
 13088                           
 13089                           ;incstack = 0
 13090  001BD2  5003               	movf	button_timer_interrupt@sw_value,w,c
 13091  001BD4  B4D8               	btfsc	status,2,c
 13092  001BD6  D09C               	goto	i2l3818
 13093                           
 13094                           ;My_header\My_button.h: 53: if (bt->cnt_sw < 350 + 1) bt->cnt_sw++;
 13095  001BD8  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 13096  001BDC  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 13097  001BE0  CFDE F004          	movff	postinc2,??_button_timer_interrupt
 13098  001BE4  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
 13099  001BE8  0E5F               	movlw	95
 13100  001BEA  5C04               	subwf	??_button_timer_interrupt,w,c
 13101  001BEC  0E01               	movlw	1
 13102  001BEE  5805               	subwfb	??_button_timer_interrupt+1,w,c
 13103  001BF0  B0D8               	btfsc	status,0,c
 13104  001BF2  D007               	goto	i2l272
 13105  001BF4  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 13106  001BF8  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 13107  001BFC  2ADE               	incf	postinc2,f,c
 13108  001BFE  0E00               	movlw	0
 13109  001C00  22DD               	addwfc	postdec2,f,c
 13110  001C02                     i2l272:
 13111                           
 13112                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 350)bt->flag.long_holding_7 = 1;
 13113  001C02  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 13114  001C06  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 13115  001C0A  2AD9               	incf	fsr2l,f,c
 13116  001C0C  50DD               	movf	postdec2,w,c
 13117  001C0E  0A01               	xorlw	1
 13118  001C10  0E5E               	movlw	94
 13119  001C12  B4D8               	btfsc	status,2,c
 13120  001C14  18DF               	xorwf	indf2,w,c
 13121  001C16  A4D8               	btfss	status,2,c
 13122  001C18  D007               	goto	i2l273
 13123  001C1A  EE20 F003          	lfsr	2,3
 13124  001C1E  5001               	movf	button_timer_interrupt@bt,w,c
 13125  001C20  26D9               	addwf	fsr2l,f,c
 13126  001C22  5002               	movf	button_timer_interrupt@bt+1,w,c
 13127  001C24  22DA               	addwfc	fsr2h,f,c
 13128  001C26  8EDF               	bsf	indf2,7,c
 13129  001C28                     i2l273:
 13130                           
 13131                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 300)bt->flag.long_holding_6 = 1;
 13132  001C28  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 13133  001C2C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 13134  001C30  2AD9               	incf	fsr2l,f,c
 13135  001C32  50DD               	movf	postdec2,w,c
 13136  001C34  0A01               	xorlw	1
 13137  001C36  0E2C               	movlw	44
 13138  001C38  B4D8               	btfsc	status,2,c
 13139  001C3A  18DF               	xorwf	indf2,w,c
 13140  001C3C  A4D8               	btfss	status,2,c
 13141  001C3E  D007               	goto	i2l274
 13142  001C40  EE20 F003          	lfsr	2,3
 13143  001C44  5001               	movf	button_timer_interrupt@bt,w,c
 13144  001C46  26D9               	addwf	fsr2l,f,c
 13145  001C48  5002               	movf	button_timer_interrupt@bt+1,w,c
 13146  001C4A  22DA               	addwfc	fsr2h,f,c
 13147  001C4C  8CDF               	bsf	indf2,6,c
 13148  001C4E                     i2l274:
 13149                           
 13150                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 250)bt->flag.long_holding_5 = 1;
 13151  001C4E  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 13152  001C52  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 13153  001C56  50DE               	movf	postinc2,w,c
 13154  001C58  0AFA               	xorlw	250
 13155  001C5A  10DD               	iorwf	postdec2,w,c
 13156  001C5C  A4D8               	btfss	status,2,c
 13157  001C5E  D007               	goto	i2l275
 13158  001C60  EE20 F003          	lfsr	2,3
 13159  001C64  5001               	movf	button_timer_interrupt@bt,w,c
 13160  001C66  26D9               	addwf	fsr2l,f,c
 13161  001C68  5002               	movf	button_timer_interrupt@bt+1,w,c
 13162  001C6A  22DA               	addwfc	fsr2h,f,c
 13163  001C6C  8ADF               	bsf	indf2,5,c
 13164  001C6E                     i2l275:
 13165                           
 13166                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 200)bt->flag.long_holding_4 = 1;
 13167  001C6E  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 13168  001C72  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 13169  001C76  50DE               	movf	postinc2,w,c
 13170  001C78  0AC8               	xorlw	200
 13171  001C7A  10DD               	iorwf	postdec2,w,c
 13172  001C7C  A4D8               	btfss	status,2,c
 13173  001C7E  D007               	goto	i2l276
 13174  001C80  EE20 F003          	lfsr	2,3
 13175  001C84  5001               	movf	button_timer_interrupt@bt,w,c
 13176  001C86  26D9               	addwf	fsr2l,f,c
 13177  001C88  5002               	movf	button_timer_interrupt@bt+1,w,c
 13178  001C8A  22DA               	addwfc	fsr2h,f,c
 13179  001C8C  88DF               	bsf	indf2,4,c
 13180  001C8E                     i2l276:
 13181                           
 13182                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 13183  001C8E  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 13184  001C92  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 13185  001C96  50DE               	movf	postinc2,w,c
 13186  001C98  0A96               	xorlw	150
 13187  001C9A  10DD               	iorwf	postdec2,w,c
 13188  001C9C  A4D8               	btfss	status,2,c
 13189  001C9E  D007               	goto	i2l277
 13190  001CA0  EE20 F003          	lfsr	2,3
 13191  001CA4  5001               	movf	button_timer_interrupt@bt,w,c
 13192  001CA6  26D9               	addwf	fsr2l,f,c
 13193  001CA8  5002               	movf	button_timer_interrupt@bt+1,w,c
 13194  001CAA  22DA               	addwfc	fsr2h,f,c
 13195  001CAC  86DF               	bsf	indf2,3,c
 13196  001CAE                     i2l277:
 13197                           
 13198                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 13199  001CAE  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 13200  001CB2  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 13201  001CB6  50DE               	movf	postinc2,w,c
 13202  001CB8  0A3C               	xorlw	60
 13203  001CBA  10DD               	iorwf	postdec2,w,c
 13204  001CBC  A4D8               	btfss	status,2,c
 13205  001CBE  D007               	goto	i2l278
 13206  001CC0  EE20 F003          	lfsr	2,3
 13207  001CC4  5001               	movf	button_timer_interrupt@bt,w,c
 13208  001CC6  26D9               	addwf	fsr2l,f,c
 13209  001CC8  5002               	movf	button_timer_interrupt@bt+1,w,c
 13210  001CCA  22DA               	addwfc	fsr2h,f,c
 13211  001CCC  84DF               	bsf	indf2,2,c
 13212  001CCE                     i2l278:
 13213                           
 13214                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 13215  001CCE  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 13216  001CD2  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 13217  001CD6  50DE               	movf	postinc2,w,c
 13218  001CD8  0A10               	xorlw	16
 13219  001CDA  10DD               	iorwf	postdec2,w,c
 13220  001CDC  A4D8               	btfss	status,2,c
 13221  001CDE  D007               	goto	i2l279
 13222  001CE0  EE20 F003          	lfsr	2,3
 13223  001CE4  5001               	movf	button_timer_interrupt@bt,w,c
 13224  001CE6  26D9               	addwf	fsr2l,f,c
 13225  001CE8  5002               	movf	button_timer_interrupt@bt+1,w,c
 13226  001CEA  22DA               	addwfc	fsr2h,f,c
 13227  001CEC  82DF               	bsf	indf2,1,c
 13228  001CEE                     i2l279:
 13229                           
 13230                           ;My_header\My_button.h: 61: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 13231  001CEE  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 13232  001CF2  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 13233  001CF6  50DE               	movf	postinc2,w,c
 13234  001CF8  0A02               	xorlw	2
 13235  001CFA  10DD               	iorwf	postdec2,w,c
 13236  001CFC  A4D8               	btfss	status,2,c
 13237  001CFE  0012               	return	
 13238  001D00  EE20 F003          	lfsr	2,3
 13239  001D04  5001               	movf	button_timer_interrupt@bt,w,c
 13240  001D06  26D9               	addwf	fsr2l,f,c
 13241  001D08  5002               	movf	button_timer_interrupt@bt+1,w,c
 13242  001D0A  22DA               	addwfc	fsr2h,f,c
 13243  001D0C  80DF               	bsf	indf2,0,c
 13244  001D0E  0012               	return	
 13245  001D10                     i2l3818:
 13246                           
 13247                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 350)bt->flag.long_hold_7 = 1;
 13248  001D10  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 13249  001D14  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 13250  001D18  CFDE F004          	movff	postinc2,??_button_timer_interrupt
 13251  001D1C  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
 13252  001D20  0E5E               	movlw	94
 13253  001D22  5C04               	subwf	??_button_timer_interrupt,w,c
 13254  001D24  0E01               	movlw	1
 13255  001D26  5805               	subwfb	??_button_timer_interrupt+1,w,c
 13256  001D28  A0D8               	btfss	status,0,c
 13257  001D2A  D008               	goto	i2l3822
 13258  001D2C  EE20 F002          	lfsr	2,2
 13259  001D30  5001               	movf	button_timer_interrupt@bt,w,c
 13260  001D32  26D9               	addwf	fsr2l,f,c
 13261  001D34  5002               	movf	button_timer_interrupt@bt+1,w,c
 13262  001D36  22DA               	addwfc	fsr2h,f,c
 13263  001D38  8EDF               	bsf	indf2,7,c
 13264  001D3A  D099               	goto	i2l3850
 13265  001D3C                     i2l3822:
 13266                           
 13267                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 300)bt->flag.long_hold_6 = 1;
 13268  001D3C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 13269  001D40  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 13270  001D44  CFDE F004          	movff	postinc2,??_button_timer_interrupt
 13271  001D48  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
 13272  001D4C  0E2C               	movlw	44
 13273  001D4E  5C04               	subwf	??_button_timer_interrupt,w,c
 13274  001D50  0E01               	movlw	1
 13275  001D52  5805               	subwfb	??_button_timer_interrupt+1,w,c
 13276  001D54  A0D8               	btfss	status,0,c
 13277  001D56  D008               	goto	i2l3826
 13278  001D58  EE20 F002          	lfsr	2,2
 13279  001D5C  5001               	movf	button_timer_interrupt@bt,w,c
 13280  001D5E  26D9               	addwf	fsr2l,f,c
 13281  001D60  5002               	movf	button_timer_interrupt@bt+1,w,c
 13282  001D62  22DA               	addwfc	fsr2h,f,c
 13283  001D64  8CDF               	bsf	indf2,6,c
 13284  001D66  D083               	goto	i2l3850
 13285  001D68                     i2l3826:
 13286                           
 13287                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 250)bt->flag.long_hold_5 = 1;
 13288  001D68  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 13289  001D6C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 13290  001D70  CFDE F004          	movff	postinc2,??_button_timer_interrupt
 13291  001D74  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
 13292  001D78  0EFA               	movlw	250
 13293  001D7A  5C04               	subwf	??_button_timer_interrupt,w,c
 13294  001D7C  0E00               	movlw	0
 13295  001D7E  5805               	subwfb	??_button_timer_interrupt+1,w,c
 13296  001D80  A0D8               	btfss	status,0,c
 13297  001D82  D008               	goto	i2l3830
 13298  001D84  EE20 F002          	lfsr	2,2
 13299  001D88  5001               	movf	button_timer_interrupt@bt,w,c
 13300  001D8A  26D9               	addwf	fsr2l,f,c
 13301  001D8C  5002               	movf	button_timer_interrupt@bt+1,w,c
 13302  001D8E  22DA               	addwfc	fsr2h,f,c
 13303  001D90  8ADF               	bsf	indf2,5,c
 13304  001D92  D06D               	goto	i2l3850
 13305  001D94                     i2l3830:
 13306                           
 13307                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 200)bt->flag.long_hold_4 = 1;
 13308  001D94  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 13309  001D98  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 13310  001D9C  CFDE F004          	movff	postinc2,??_button_timer_interrupt
 13311  001DA0  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
 13312  001DA4  0EC8               	movlw	200
 13313  001DA6  5C04               	subwf	??_button_timer_interrupt,w,c
 13314  001DA8  0E00               	movlw	0
 13315  001DAA  5805               	subwfb	??_button_timer_interrupt+1,w,c
 13316  001DAC  A0D8               	btfss	status,0,c
 13317  001DAE  D008               	goto	i2l3834
 13318  001DB0  EE20 F002          	lfsr	2,2
 13319  001DB4  5001               	movf	button_timer_interrupt@bt,w,c
 13320  001DB6  26D9               	addwf	fsr2l,f,c
 13321  001DB8  5002               	movf	button_timer_interrupt@bt+1,w,c
 13322  001DBA  22DA               	addwfc	fsr2h,f,c
 13323  001DBC  88DF               	bsf	indf2,4,c
 13324  001DBE  D057               	goto	i2l3850
 13325  001DC0                     i2l3834:
 13326                           
 13327                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 13328  001DC0  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 13329  001DC4  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 13330  001DC8  CFDE F004          	movff	postinc2,??_button_timer_interrupt
 13331  001DCC  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
 13332  001DD0  0E96               	movlw	150
 13333  001DD2  5C04               	subwf	??_button_timer_interrupt,w,c
 13334  001DD4  0E00               	movlw	0
 13335  001DD6  5805               	subwfb	??_button_timer_interrupt+1,w,c
 13336  001DD8  A0D8               	btfss	status,0,c
 13337  001DDA  D008               	goto	i2l3838
 13338  001DDC  EE20 F002          	lfsr	2,2
 13339  001DE0  5001               	movf	button_timer_interrupt@bt,w,c
 13340  001DE2  26D9               	addwf	fsr2l,f,c
 13341  001DE4  5002               	movf	button_timer_interrupt@bt+1,w,c
 13342  001DE6  22DA               	addwfc	fsr2h,f,c
 13343  001DE8  86DF               	bsf	indf2,3,c
 13344  001DEA  D041               	goto	i2l3850
 13345  001DEC                     i2l3838:
 13346                           
 13347                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 13348  001DEC  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 13349  001DF0  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 13350  001DF4  CFDE F004          	movff	postinc2,??_button_timer_interrupt
 13351  001DF8  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
 13352  001DFC  0E3C               	movlw	60
 13353  001DFE  5C04               	subwf	??_button_timer_interrupt,w,c
 13354  001E00  0E00               	movlw	0
 13355  001E02  5805               	subwfb	??_button_timer_interrupt+1,w,c
 13356  001E04  A0D8               	btfss	status,0,c
 13357  001E06  D008               	goto	i2l3842
 13358  001E08  EE20 F002          	lfsr	2,2
 13359  001E0C  5001               	movf	button_timer_interrupt@bt,w,c
 13360  001E0E  26D9               	addwf	fsr2l,f,c
 13361  001E10  5002               	movf	button_timer_interrupt@bt+1,w,c
 13362  001E12  22DA               	addwfc	fsr2h,f,c
 13363  001E14  84DF               	bsf	indf2,2,c
 13364  001E16  D02B               	goto	i2l3850
 13365  001E18                     i2l3842:
 13366                           
 13367                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 13368  001E18  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 13369  001E1C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 13370  001E20  CFDE F004          	movff	postinc2,??_button_timer_interrupt
 13371  001E24  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
 13372  001E28  0E10               	movlw	16
 13373  001E2A  5C04               	subwf	??_button_timer_interrupt,w,c
 13374  001E2C  0E00               	movlw	0
 13375  001E2E  5805               	subwfb	??_button_timer_interrupt+1,w,c
 13376  001E30  A0D8               	btfss	status,0,c
 13377  001E32  D008               	goto	i2l3846
 13378  001E34  EE20 F002          	lfsr	2,2
 13379  001E38  5001               	movf	button_timer_interrupt@bt,w,c
 13380  001E3A  26D9               	addwf	fsr2l,f,c
 13381  001E3C  5002               	movf	button_timer_interrupt@bt+1,w,c
 13382  001E3E  22DA               	addwfc	fsr2h,f,c
 13383  001E40  82DF               	bsf	indf2,1,c
 13384  001E42  D015               	goto	i2l3850
 13385  001E44                     i2l3846:
 13386                           
 13387                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 13388  001E44  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 13389  001E48  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 13390  001E4C  CFDE F004          	movff	postinc2,??_button_timer_interrupt
 13391  001E50  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
 13392  001E54  0E02               	movlw	2
 13393  001E56  5C04               	subwf	??_button_timer_interrupt,w,c
 13394  001E58  0E00               	movlw	0
 13395  001E5A  5805               	subwfb	??_button_timer_interrupt+1,w,c
 13396  001E5C  A0D8               	btfss	status,0,c
 13397  001E5E  D007               	goto	i2l3850
 13398  001E60  EE20 F002          	lfsr	2,2
 13399  001E64  5001               	movf	button_timer_interrupt@bt,w,c
 13400  001E66  26D9               	addwf	fsr2l,f,c
 13401  001E68  5002               	movf	button_timer_interrupt@bt+1,w,c
 13402  001E6A  22DA               	addwfc	fsr2h,f,c
 13403  001E6C  80DF               	bsf	indf2,0,c
 13404  001E6E                     i2l3850:
 13405                           
 13406                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
 13407  001E6E  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 13408  001E72  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 13409  001E76  0E00               	movlw	0
 13410  001E78  6EDE               	movwf	postinc2,c
 13411  001E7A  0E00               	movlw	0
 13412  001E7C  6EDD               	movwf	postdec2,c
 13413                           
 13414                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
 13415  001E7E  EE20 F002          	lfsr	2,2
 13416  001E82  5001               	movf	button_timer_interrupt@bt,w,c
 13417  001E84  26D9               	addwf	fsr2l,f,c
 13418  001E86  5002               	movf	button_timer_interrupt@bt+1,w,c
 13419  001E88  22DA               	addwfc	fsr2h,f,c
 13420  001E8A  0EFF               	movlw	255
 13421  001E8C  16DE               	andwf	postinc2,f,c
 13422  001E8E  0E00               	movlw	0
 13423  001E90  16DD               	andwf	postdec2,f,c
 13424  001E92  0012               	return	
 13425  001E94                     __end_of_button_timer_interrupt:
 13426                           	opt stack 0
 13427                           pclatu	equ	0xFFB
 13428                           pclath	equ	0xFFA
 13429                           tblptru	equ	0xFF8
 13430                           tblptrh	equ	0xFF7
 13431                           tblptrl	equ	0xFF6
 13432                           tablat	equ	0xFF5
 13433                           prodh	equ	0xFF4
 13434                           prodl	equ	0xFF3
 13435                           intcon	equ	0xFF2
 13436                           intcon2	equ	0xFF1
 13437                           postinc0	equ	0xFEE
 13438                           fsr0h	equ	0xFEA
 13439                           fsr0l	equ	0xFE9
 13440                           wreg	equ	0xFE8
 13441                           postdec1	equ	0xFE5
 13442                           fsr1h	equ	0xFE2
 13443                           fsr1l	equ	0xFE1
 13444                           indf2	equ	0xFDF
 13445                           postinc2	equ	0xFDE
 13446                           postdec2	equ	0xFDD
 13447                           fsr2h	equ	0xFDA
 13448                           fsr2l	equ	0xFD9
 13449                           status	equ	0xFD8
 13450                           pclatu	equ	0xFFB
 13451                           pclath	equ	0xFFA
 13452                           tblptru	equ	0xFF8
 13453                           tblptrh	equ	0xFF7
 13454                           tblptrl	equ	0xFF6
 13455                           tablat	equ	0xFF5
 13456                           prodh	equ	0xFF4
 13457                           prodl	equ	0xFF3
 13458                           intcon	equ	0xFF2
 13459                           intcon2	equ	0xFF1
 13460                           postinc0	equ	0xFEE
 13461                           fsr0h	equ	0xFEA
 13462                           fsr0l	equ	0xFE9
 13463                           wreg	equ	0xFE8
 13464                           postdec1	equ	0xFE5
 13465                           fsr1h	equ	0xFE2
 13466                           fsr1l	equ	0xFE1
 13467                           indf2	equ	0xFDF
 13468                           postinc2	equ	0xFDE
 13469                           postdec2	equ	0xFDD
 13470                           fsr2h	equ	0xFDA
 13471                           fsr2l	equ	0xFD9
 13472                           status	equ	0xFD8
 13473                           
 13474                           	psect	rparam
 13475  0000                     pclatu	equ	0xFFB
 13476                           pclath	equ	0xFFA
 13477                           tblptru	equ	0xFF8
 13478                           tblptrh	equ	0xFF7
 13479                           tblptrl	equ	0xFF6
 13480                           tablat	equ	0xFF5
 13481                           prodh	equ	0xFF4
 13482                           prodl	equ	0xFF3
 13483                           intcon	equ	0xFF2
 13484                           intcon2	equ	0xFF1
 13485                           postinc0	equ	0xFEE
 13486                           fsr0h	equ	0xFEA
 13487                           fsr0l	equ	0xFE9
 13488                           wreg	equ	0xFE8
 13489                           postdec1	equ	0xFE5
 13490                           fsr1h	equ	0xFE2
 13491                           fsr1l	equ	0xFE1
 13492                           indf2	equ	0xFDF
 13493                           postinc2	equ	0xFDE
 13494                           postdec2	equ	0xFDD
 13495                           fsr2h	equ	0xFDA
 13496                           fsr2l	equ	0xFD9
 13497                           status	equ	0xFD8


Data Sizes:
    Strings     176
    Constant    0
    Data        32
    BSS         97
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      66
    BANK0           160     69     160
    BANK1           256    201     206
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    RTCC_time_set@cnt_dec	PTR struct button size(2) Largest target is 4
		 -> sw1(COMRAM[4]), 

    RTCC_time_set@cnt_inc	PTR struct button size(2) Largest target is 4
		 -> sw0(COMRAM[4]), 

    RTCC_time_set@mode	PTR struct button size(2) Largest target is 4
		 -> sw(COMRAM[4]), 

    RTCC_time_set_dec@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_time_set_dec@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_time_set_inc@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_time_set_inc@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    display_time@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    display_time@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_RTCC@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    caltime_to_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    weekday_char_full	PTR const unsigned char [7] size(2) Largest target is 10
		 -> STR_14(CODE[9]), STR_13(CODE[7]), STR_12(CODE[9]), STR_11(CODE[10]), 
		 -> STR_10(CODE[8]), STR_9(CODE[7]), STR_8(CODE[7]), 

    weekday_char	PTR const unsigned char [7] size(2) Largest target is 4
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_30(CODE[8]), STR_29(CODE[7]), STR_28(CODE[9]), STR_27(CODE[9]), 
		 -> STR_26(CODE[8]), STR_25(CODE[7]), STR_24(CODE[4]), display_LCD@str(BANK0[10]), 
		 -> STR_23(CODE[8]), STR_22(CODE[7]), STR_21(CODE[5]), STR_20(CODE[5]), 
		 -> STR_19(CODE[7]), STR_18(CODE[7]), STR_17(CODE[6]), STR_16(CODE[6]), 
		 -> STR_15(CODE[3]), display_dec@str(BANK0[10]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[4]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> sw(COMRAM[4]), sw2(BANK0[4]), sw1(COMRAM[4]), sw0(COMRAM[4]), 

    utoa@str	PTR unsigned char  size(2) Largest target is 10
		 -> display_LCD@str(BANK0[10]), display_dec@str(BANK0[10]), 

    delay_set@d	PTR struct Delay size(2) Largest target is 3
		 -> d_display(COMRAM[3]), 

    delay_timer_interrupt@d	PTR struct Delay size(2) Largest target is 3
		 -> d_display(COMRAM[3]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@txbuf(BANK1[200]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@txbuf(BANK1[200]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@txbuf(BANK1[200]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@txbuf(BANK1[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> tx_buf(BANK1[5]), 

    ringbuf_push@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@txbuf(BANK1[200]), 

    ringbuf_push@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> tx_buf(BANK1[5]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@txbuf(BANK1[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> tx_buf(BANK1[5]), 

    S790ringbuf$buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@txbuf(BANK1[200]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@txbuf(BANK1[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@txbuf(BANK1[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> tx_buf(BANK1[5]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_integrating
    _tx_send->_ringbuf_push
    _ringbuf_push->_ringbuf_num
    _lchika->i2___awdiv
    _interrupt_TXIF->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num
    _integrating->i2___lldiv

Critical Paths under _main in BANK0

    _sleep_loop->_RTCC_from_RTCC
    _nomal_mode_loop->_delay_set
    _I2C_LCD_init->_I2C_LCD_Clear
    _display_LCD->_display_time
    _display_time->_RTCC_from_RTCC
    _display_dec->_utoa
    _utoa->___lwdiv
    ___lwdiv->___lwmod
    _I2C_LCD_Putc->_I2C_Start
    _display_port->_I2C_LCD_SetCursor
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Puts->_I2C_Start
    _I2C_LCD_Clear->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _RTCC_time_set->_RTCC_time_set_dec
    _RTCC_time_set->_RTCC_time_set_inc
    _RTCC_time_set_inc->_RTCC_from_epoch
    _RTCC_time_set_dec->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d
    _Auto_cut->___wmul
    ___wmul->_ADC

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_main_init
    _RTCC_time_set->_RTCC_time_set_dec
    _RTCC_time_set->_RTCC_time_set_inc

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  102577
                                            200 BANK1      1     1      0
                           _Auto_cut
                           _Delay_ms
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                                _LED
                                _OUT
                     _RTCC_from_RTCC
                          _RTCC_loop
                      _RTCC_time_set
                        _display_LCD
                          _main_init
                    _nomal_mode_loop
                         _sleep_loop
 ---------------------------------------------------------------------------------
 (1) _sleep_loop                                           2     2      0    7427
                                             48 BANK0      2     2      0
                                _LED
                                _OUT
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (1) _nomal_mode_loop                                      1     1      0    3637
                                              4 BANK0      1     1      0
                                _LED
                                _OUT
                          _delay_set
                      _sw_flag_clear
                       _sw_flag_read
 ---------------------------------------------------------------------------------
 (2) _sw_flag_read                                         2     1      1     644
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _sw_flag_clear                                        2     1      1     540
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _delay_set                                            4     0      4     509
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _LED                                                  2     1      1     747
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _main_init                                          200   200      0    2536
                                              0 BANK1    200   200      0
                           _ADC_init
                       _I2C_LCD_init
                           _I2C_init
                          _RTCC_init
                          _UART_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     197
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         5     0      5     498
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         0     0      0    1677
                           _Delay_ms
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             3     1      2     343
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _display_LCD                                         10    10      0   36840
                                             53 BANK0     10    10      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Putc
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            ___lwdiv
                            ___lwmod
                       _display_port
                       _display_time
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _display_time                                         5     1      4   19120
                                             48 BANK0      5     1      4
                       _I2C_LCD_Putc
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                     _RTCC_from_RTCC
                        _display_dec
 ---------------------------------------------------------------------------------
 (3) _display_dec                                         12    11      1    7260
                                             20 BANK0     12    11      1
                       _I2C_LCD_Puts
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 8     3      5    3817
                                             12 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    1480
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1419
                                              5 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Putc                                         2     2      0     667
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _display_port                                         0     0      0    4795
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_SetCursor                                    4     3      1    2118
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Puts                                         5     3      2    2677
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Clear                                        1     1      0     667
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Command                                      2     2      0     667
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1     509
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_time_set                                        6     0      6   37615
                                              6 BANK1      6     0      6
               _RTCC_time_set_cursor
                  _RTCC_time_set_dec
                  _RTCC_time_set_inc
               _RTCC_time_set_toggle
 ---------------------------------------------------------------------------------
 (2) _RTCC_time_set_toggle                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_time_set_inc                                   12     8      4   18481
                                             63 BANK0      6     2      4
                                              0 BANK1      6     6      0
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (2) _RTCC_time_set_dec                                   12     8      4   18481
                                             63 BANK0      6     2      4
                                              0 BANK1      6     6      0
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_epoch                                      4     0      4    8227
                                             59 BANK0      4     0      4
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _epoch_to_caltime                                    18    14      4    6440
                                             41 BANK0     18    14      4
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (5) _get_quot_rem                                        16    12      4    3182
                                             25 BANK0     16    12      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     795
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _caltime_to_RTCC                                      2     0      2    1278
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (5) _d_to_x                                               1     1      0     853
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     791
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _RTCC_from_RTCC                                       4     0      4    5911
                                             44 BANK0      4     0      4
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (3) _caltime_to_epoch                                    19    15      4    4392
                                             25 BANK0     19    15      4
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _month_length                                         6     5      1    2075
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     849
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1366
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (3) _RTCC_to_caltime                                      3     1      2     386
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (4) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _RTCC_time_set_cursor                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Auto_cut                                             3     3      0    1327
                                             10 BANK0      3     3      0
                                _ADC
                                _OUT
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     440
                                              4 BANK0      6     2      4
                                _ADC (ARG)
 ---------------------------------------------------------------------------------
 (2) _OUT                                                  2     1      1     540
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 15    15      0    5466
                                             18 COMRAM    15    15      0
             _button_timer_interrupt
              _delay_timer_interrupt
                        _integrating
                     _interrupt_TXIF
                             _lchika
                            _tx_send
 ---------------------------------------------------------------------------------
 (8) _tx_send                                              1     1      0    1086
                                             12 COMRAM     1     1      0
                       _ringbuf_push
 ---------------------------------------------------------------------------------
 (9) _ringbuf_push                                         8     5      3    1064
                                              4 COMRAM     8     5      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (8) _lchika                                               4     4      0    1020
                                              8 COMRAM     4     4      0
                              i2_LED
                          i2___awdiv
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (9) i2___lwdiv                                            7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (9) i2___awdiv                                            8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (9) i2_LED                                                2     1      1     166
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (8) _interrupt_TXIF                                       0     0      0    1286
                        _ringbuf_num
                        _ringbuf_pop
 ---------------------------------------------------------------------------------
 (9) _ringbuf_pop                                          6     4      2     776
                                              4 COMRAM     6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (10) _ringbuf_num                                         4     2      2     510
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _integrating                                          5     5      0     348
                                             13 COMRAM     5     5      0
                          i2___lldiv
 ---------------------------------------------------------------------------------
 (9) i2___lldiv                                           13     5      8     214
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (8) _delay_timer_interrupt                                2     0      2     177
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _button_timer_interrupt                               5     2      3    1526
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Auto_cut
     _ADC
     _OUT
     ___wmul
       _ADC (ARG)
   _Delay_ms
   _I2C_LCD_Clear
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _I2C_LCD_Puts
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _I2C_LCD_SetCursor
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _LED
   _OUT
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         ___lldiv (ARG)
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_loop
   _RTCC_time_set
     _RTCC_time_set_cursor
     _RTCC_time_set_dec
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
       ___lmul
         ___lldiv (ARG)
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
     _RTCC_time_set_inc
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
       ___lmul
         ___lldiv (ARG)
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
     _RTCC_time_set_toggle
   _display_LCD
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Putc
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _display_port
       _I2C_LCD_Puts
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_SetCursor
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
     _display_time
       _I2C_LCD_Putc
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_Puts
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_SetCursor
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _display_dec
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _utoa
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
     _utoa
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
   _main_init
     _ADC_init
     _I2C_LCD_init
       _Delay_ms
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_init
     _RTCC_init
     _UART_init
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _nomal_mode_loop
     _LED
     _OUT
     _delay_set
     _sw_flag_clear
     _sw_flag_read
   _sleep_loop
     _LED
     _OUT
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod

 _ISR (ROOT)
   _button_timer_interrupt
   _delay_timer_interrupt
   _integrating
     i2___lldiv
   _interrupt_TXIF
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
   _lchika
     i2_LED
     i2___awdiv
     i2___lwdiv
   _tx_send
     _ringbuf_push
       _ringbuf_num

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     C9      CE       8       80.5%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     45      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     21      42       1       69.5%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B0       6        0.0%
DATA                 0      0     1B0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat May 30 09:03:30 2015

                              _I 0022                                _S 00A5  
                              _s 00B1                     ?_display_LCD 0001  
             __size_of_I2C_Start 0032                     ?_display_dec 0074  
                             _d1 00C3                     ___awdiv@sign 0065  
                             _sw 0032              ___wmul@multiplicand 0066  
             i2___lwdiv@dividend 0001           __end_of_interrupt_TXIF 3CE2  
              ??_RTCC_from_epoch 009F                     _sw_flag_read 3C6E  
        RTCC_time_set_inc@i_2190 00A3                     __CFG_CP0$OFF 000000  
                ??_RTCC_time_set 00A5                              l133 3CF6  
                            l410 1FDE                              l138 3B74  
                            l155 3F44                              l324 405C  
                            l309 3DD8                              l333 3DAA  
                            l247 340A                              _ADC 3F26  
                            l345 3D76                              l461 3A96  
                            l453 3A5E                              l455 3A6C  
                            l544 3AAA                              l448 4074  
                            l552 3A02                              l457 3A7A  
                            l546 3ABC                              l554 3A14  
                            l547 3ACE                              l459 3A88  
                            l555 3A26                              l680 2428  
                            l678 23F0                              _LED 39FC  
                            _ISR 0008                              _OUT 3AA4  
                  ?_display_time 0090                    ?_get_quot_rem 0079  
                  ?_display_port 0001               caltime_to_epoch@ep 007B  
             caltime_to_epoch@ct 0079                              _sw0 0036  
                            _sw1 003A                              _sw2 00DE  
                  _sw_flag_clear 3BE4                              fsr2 000FD9  
                   ___awmod@sign 0065                              prod 000FF3  
                            wreg 000FE8                       _TXSTA1bits 000FAD  
                   _I2C_LCD_Putc 3D4E                     _I2C_LCD_Puts 3372  
                           ?_ADC 0060              sw_flag_read@bit_and 0060  
                           LED@b 0061                             ?_LED 0060  
              ??_I2C_LCD_Command 0064                             ?_ISR 0001  
                           ?_OUT 0060                     _I2C_LCD_init 3946  
                           l1207 381C                             l1144 2EE2  
                           l1217 38DE                             l5000 162A  
                           l5012 168C                             l5004 1648  
                           l5102 3AE0                             l5032 17D6  
                           l5024 1744                             l5016 1724  
                           l5008 166A                             l5200 2710  
                           l5120 3C84                             l5112 3C74  
                           l5042 18C8                             l5130 3C92  
                           l5060 1366                             l5052 1326  
                           l5036 1860                             l5108 3A38  
                           l5124 3C8E                             l5116 3C7C  
                           l4510 3126                             l4502 30F0  
                           l5038 187C                             l4430 3FFE  
                           l5150 2F2A                             l5302 1B9C  
                           l5134 3BEA                             l5142 3C12  
                           l5224 2772                             l5216 3728  
                           l4504 30FC                             l5064 1388  
                           l5056 1344                             l5152 2F3C  
                           l5136 3BF6                             l5234 2862  
                           l4434 3544                             l4506 3102  
                           l4514 3134                             l4450 2BB0  
                           l4530 2E66                             l5090 157E  
                           l5162 2F9E                             l5146 2F02  
                           l4602 37CC                             l5250 195A  
                           l5242 18FA                             l5138 3C02  
                           OUT@b 0061                             l5236 2880  
                           l4540 2EC8                             l4532 2E6C  
                           l5084 14D0                             l5076 1440  
                           l5068 1420                             l5156 2F64  
                           l4604 37D8                             l4438 356A  
                           l4518 3148                             l4462 2BF6  
                           l5094 15CA                             l5158 2F76  
                           l5166 2FB0                             l4614 380E  
                           l4606 37DE                             l4630 38D0  
                           l4622 389A                             l5350 2174  
                           l4464 2C02                             l4456 2BD8  
                           l4528 2E4E                             l5088 155A  
                           l4624 38A6                             l5248 1934  
                           l5336 2108                             l5440 2DB2  
                           l4482 2C5A                             l4474 2C38  
                           l4466 2C08                             l5194 26C0  
                           l5186 2688                             l4626 38AC  
                           l5282 1B36                             l5266 1AA4  
                           l5450 2DE4                             l5434 2D88  
                           l4636 3418                             l5276 1B14  
                           l5356 219C                             l5348 216E  
                           l4494 30BC                             l4478 2C46  
                           l4742 2054                             l4670 33D6  
                           l4638 343C                             l4646 3482  
                           l4830 3930                             l5294 1B7A  
                           l5622 2422                             l4744 2058  
                           l4664 33A0                             l4672 3402  
                           l5288 1B58                             l4840 3D0E  
                           l5376 225A                             l5368 221C  
                           l5456 2E12                             l4498 30DE  
                           l4586 2CF4                             l4762 0FD2  
                           l5394 22EC                             l5378 2260  
                           l5634 2452                             l5618 2414  
                           l4780 107E                             l4748 2060  
                           l4852 3B76                             l5388 22B4  
                           l5628 243A                             l5644 2494  
                           l5638 2482                             l4784 1102  
                           l4768 0FDA                             l4776 105A  
             __CFG_WPFP$PAGE_127 000000                             l4970 25BE  
                           l4794 3F54                             l4938 3E2E  
                           l4972 25C4                             l4796 3F66  
                           l5596 2394                             STR_1 0F9E  
                           STR_2 0F9A                             STR_3 0F92  
                           STR_4 0F8E                             STR_5 0FA6  
                           STR_6 0F96                             STR_7 0FA2  
                           STR_8 0F6A                             STR_9 0F63  
                           u4500 3DE4                             u5145 3AB2  
                           u5146 3ABA                             u4530 2C9C  
                           u5155 3AC4                             u5156 3ACC  
                           u4540 2CCE                             u5500 2D4E  
                           u5165 3AD6                             u5166 3ADE  
                           u4550 2CE6                             u5335 279E  
                           u5175 3A0A                             u5280 36BC  
                           u4560 2D3E                             u4536 2C9E  
                           u5176 3A12                             u5185 3A1C  
                           u4546 2CD0                             u5186 3A24  
                           u5506 2D50                             u5195 3A2E  
                           u4556 2CE8                             u5196 3A36  
                           u5286 36BE                             u4566 2D40  
                           u4670 33C6                             u4680 33FC  
                           u4835 3FAC                             u4836 3FAE  
                           u4677 33BC                             u4687 33F2  
                           u5807 3D7C                             u5817 33D2  
                           u5827 4026                             u5837 3DB0  
                           u5797 3F5C                             _main 2310  
       button_timer_interrupt@bt 0001                             fsr0h 000FEA  
                           fsr1h 000FE2               i2___lwdiv@quotient 0005  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                 __end_of_I2C_Send 4064  
                           _utoa 3408           __CFG_DSWDTOSC$T1OSCREF 000000  
               __end_of_I2C_Stop 4096                             pclat 000FFA  
               __end_of_I2C_init 408C                             prodh 000FF4  
                           prodl 000FF3                             start 0148  
               __end_of_ADC_init 3FBC                    __CFG_IESO$OFF 000000  
  __size_of_RTCC_time_set_cursor 0054                    _I2C_LCD_Clear 4018  
  __size_of_RTCC_time_set_toggle 0016                            ??_ADC 0062  
                          ADC@ch 0063                    ADC_init@p_ref 0060  
                          ??_LED 0061                            ??_ISR 0013  
         __size_of_I2C_IdleCheck 001E                            ??_OUT 0061  
              _weekday_char_full 00F0                ??_RTCC_to_caltime 0064  
                  __CFG_PLLDIV$2 000000                     _BAUDCON1bits 000F7E  
                ?_interrupt_TXIF 0001                            ?_main 0001  
                 ??_display_time 0094                   ??_get_quot_rem 007D  
                 ??_display_port 006A                  __end_of___awdiv 2C64  
                          _ADRES 000FC3                            STR_10 0F3F  
                          STR_11 0F01                            STR_20 0F89  
                          STR_12 0F26                            STR_21 0F84  
                          STR_13 0F71                            STR_30 0F37  
                          STR_22 0F55                            STR_14 0F1D  
                          STR_15 0FAE                            STR_23 0F37  
                          STR_24 0FAA                            STR_16 0F7E  
                          STR_17 0F78                            STR_25 0F47  
                          STR_18 0F5C                            STR_26 0F2F  
                          STR_19 0F4E                            STR_27 0F0B  
                          STR_28 0F14                  __end_of___awmod 3152  
                          STR_29 0F55                  __end_of___lldiv 2EF4  
                          ?_utoa 006C                  ___awdiv@divisor 0062  
                          _LATB2 007C52                            _LATA5 007C4D  
                          _LATC2 007C5A                            _LATA6 007C4E  
                          _LATA7 007C4F                            _LATB6 007C56  
                          _LATB7 007C57                  __end_of___lwdiv 3826  
                 ?_sw_flag_clear 0060                  __end_of___lwmod 38E8  
                          i2l238 3BC0                            i2l272 1C02  
                          i2l273 1C28                            i2l274 1C4E  
                          i2l275 1C6E                            i2l276 1C8E  
                          i2l196 3CDE                            i2l277 1CAE  
                          i2l278 1CCE                            i2l279 1CEE  
                          i2l552 3C2E                            i2l554 3C3C  
                          i2l555 3C4A                            i2l673 010E  
                ___awdiv@counter 0064                            i2_LED 3C2A  
                          _TMR1H 000FCF                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
       __size_of_nomal_mode_loop 0210              ___lmul@multiplicand 0071  
                 __CFG_FCMEN$OFF 000000             caltime_to_epoch@year 0085  
             __size_of_UART_init 0020            ringbuf_push@asciicode 0007  
                          _colon 00CB               __size_of_RTCC_init 002E  
             __size_of_RTCC_loop 007E                            main@i 01C8  
              __end_of_I2C_Start 3DE8                            tablat 000FF5  
         ?_delay_timer_interrupt 0001                            utoa@d 0071  
                   ?_integrating 0001                            utoa@v 0072  
               nomal_mode_loop@i 0064                            status 000FD8  
                __end_of_tx_send 404C                 __end_of_Delay_ms 3F7C  
                 delay_set@value 0062               __size_ofi2___awdiv 00A4  
              month_length@month 0066               __size_ofi2___lldiv 0082  
             __size_ofi2___lwdiv 0052                   ?_I2C_LCD_Clear 0001  
                __initialization 3826                i2___lldiv@divisor 0005  
                   __end_of_main 249A                i2___lldiv@counter 000D  
                   __end_of_utoa 349C                 __end_of_Auto_cut 288E  
            ringbuf_init@bufsize 0064                 RTCC_from_RTCC@ep 008E  
               RTCC_from_RTCC@ct 008C                           ??_main 00A5  
                         ??_utoa 0071                    __activetblptr 000003  
                         ?i2_LED 0001                           _BCL1IF 007D0B  
                  _I2C_IdleCheck 3FFA                           _ADCON0 000FC2  
                         _ADCON1 000FC1                _I2C_LCD_SetCursor 3DE8  
                         _EECON2 000FA7                           _ANCON0 000F48  
                         _ANCON1 000F49                 ___awdiv@dividend 0060  
                         i2LED@b 0002               I2C_LCD_Command@ans 0065  
                         i2l1207 3B40                           i2l1144 3622  
                         i2l4018 315E                           i2l3414 3528  
                 __CFG_WDTEN$OFF 000000                           i2l3408 3524  
                         i2l3266 3778                           i2l4332 0080  
                         i2l4316 0056                           i2l3710 3330  
                         i2l3702 3312                           i2l4326 006E  
                         i2l4334 0086                           i2l3720 3350  
                         i2l3712 3334                           i2l4344 0096  
                         i2l3740 35E0                           i2l3708 3328  
                         i2l3724 335A                           i2l3396 32BC  
                         i2l3830 1D94                           i2l3822 1D3C  
                         i2l3750 3614                           i2l3742 35E4  
                         i2l3728 3368                           i2l3760 3B0E  
                         i2l3904 289A                           i2l3842 1E18  
                         i2l3834 1DC0                           i2l3826 1D68  
                         i2l3850 1E6E                           i2l3818 1D10  
                         i2l3738 35D4                           i2l3762 3B16  
                         i2l3914 294A                           i2l3922 2998  
                         i2l3772 3B36                           i2l3764 3B1A  
                         i2l3908 28D0                           i2l3846 1E44  
                         i2l3838 1DEC                           i2l3686 3C58  
                         i2l3696 32F2               ?_I2C_LCD_SetCursor 0066  
                         _RCREG1 000FAF                           _RTCCAL 000F3E  
                         _SPBRG1 000FB0                           _SSP1IF 007CF3  
                 __CFG_WPCFG$OFF 000000                sw_flag_clear@port 0061  
                         _TXREG1 000FAE                   __CFG_WPDIS$OFF 000000  
             epoch_to_caltime@ep 008B               epoch_to_caltime@ct 0089  
            ??_I2C_LCD_SetCursor 0067                   __CFG_XINST$OFF 000000  
              ?_epoch_to_caltime 0089            caltime_to_epoch@epoch 0087  
                   ?_ringbuf_pop 0005                     ?_ringbuf_num 0001  
          caltime_to_epoch@month 008B                           ___lmul 352C  
                _caltime_to_RTCC 2AA0                           ___wmul 3D18  
             ??_epoch_to_caltime 008D                __end_of_UART_init 3F9C  
                      ??___awdiv 0064                        ??___awmod 0064  
                         _d_to_x 3EFA                        ??___lldiv 0068  
                   ?_timer0_init 0001                __end_of_RTCC_init 3E46  
                   ?_timer1_init 0060                        ??___lwdiv 0069  
              __end_of_RTCC_loop 3730                        ??___lwmod 0064  
                   ?_timer3_init 0001                           _lchika 288E  
                         clear_0 3838                           clear_1 3844  
                __CFG_CLKOEC$OFF 000000                 ___awdiv@quotient 0066  
                ___awmod@divisor 0062                  ??_sw_flag_clear 0061  
           __size_of_display_LCD 02DE                  ___awmod@counter 0064  
                         _x_to_d 3FBC                           _tx_buf 01C9  
           __size_of_display_dec 005E                   i2___awdiv@sign 0006  
      __size_of_caltime_to_epoch 0340                     __pdataCOMRAM 0041  
              __end_ofi2___awdiv 3372                        ?_I2C_Send 0001  
                      ?_I2C_Stop 0001                __end_ofi2___lldiv 3634  
              __end_ofi2___lwdiv 3B4A                     __mediumconst 0000  
                      ?_I2C_init 0001        __end_of_I2C_LCD_SetCursor 3E18  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                        ?_ADC_init 0001  
                 ?_I2C_IdleCheck 0001           delay_timer_interrupt@d 0001  
                      ??_tx_send 000D                ??_nomal_mode_loop 0064  
           __CFG_LS48MHZ$SYS48X8 000000                       __accesstop 0060  
        __end_of__initialization 3882             __end_of_display_time 260A  
           __end_of_get_quot_rem 2AA0             __end_of_display_port 2FC6  
                ??_I2C_LCD_Clear 0066                  _RTCC_from_epoch 3E46  
                  __end_ofi2_LED 3C6E             __CFG_WPEND$PAGE_WPFP 000000  
                 __pcstackCOMRAM 0001               i2___lldiv@dividend 0001  
                   __pidataBANK0 3FDC                  __CFG_DSWDTPS$G2 000000  
                _I2C_LCD_Command 3D82               __size_of_delay_set 002C  
                        ??i2_LED 0002          sleep_loop@prev_power_sw 00FF  
               I2C_LCD_Command@c 0064                       ??_I2C_Send 0062  
                     ??_I2C_Stop 0062                       ??_I2C_init 0060  
                      ?_Delay_ms 0060                       ??_ADC_init 0060  
     caltime_to_epoch@month_2136 0086               i2___lldiv@quotient 0009  
             __size_of_main_init 007E                       __pbssBANK0 00A5  
                     __pbssBANK1 01C9                        ?_Auto_cut 0001  
              _RTCC_time_set_dec 12F2                _RTCC_time_set_inc 15F6  
                      ISR@cnt_t0 002E          __end_of_caltime_to_RTCC 2B82  
                _RTCC_to_caltime 2FC6               ?_RTCC_time_set_dec 009F  
             ?_RTCC_time_set_inc 009F             __size_of_integrating 00C4  
               ??_interrupt_TXIF 000B                          ?___lmul 006D  
                        ?___wmul 0064              ??_RTCC_time_set_dec 0100  
            ??_RTCC_time_set_inc 0100                          ?_d_to_x 0001  
                        ?_lchika 0001             I2C_LCD_SetCursor@col 0069  
                 ___lmul@product 0075             I2C_LCD_SetCursor@row 0066  
                        ?_x_to_d 0001                     I2C_Send@data 0062  
             __CFG_OSC$INTOSCPLL 000000                  ??_I2C_IdleCheck 0060  
          __end_of_RTCC_time_set 2762     __end_of_RTCC_time_set_cursor 3AA4  
                     ??_Delay_ms 0062       __size_of_I2C_LCD_SetCursor 0030  
   __end_of_RTCC_time_set_toggle 407A           I2C_LCD_SetCursor@F9846 0041  
                __CFG_WDTPS$1024 000000                          _SPBRGH1 000F7F  
                        _SSP1ADD 000FC8                          _SSP1BUF 000FC9  
                        _RTCVALH 000F3B                          _RTCVALL 000F3A  
        ??_delay_timer_interrupt 0003        __end_of_RTCC_time_set_dec 15F6  
      __end_of_RTCC_time_set_inc 18F4          __end_of_RTCC_from_epoch 3E74  
           timer1_init@prescaler 0062                       ??_Auto_cut 006A  
               __CFG_CFGPLLEN$ON 000000         ??_button_timer_interrupt 0004  
                integrating@port 0012                __end_of_delay_set 3ECE  
                  ?_month_length 0066              epoch_to_caltime@day 0093  
              RTCC_from_epoch@ep 009D                RTCC_from_epoch@ct 009B  
            epoch_to_caltime@num 0097                        _I2C_Start 3DB6  
                        __Hparam 0000                          __Lparam 0000  
        __end_of_I2C_LCD_Command 3DB6                   display_LCD@str 0095  
                  ?_ringbuf_init 0060                          ___awdiv 2B82  
                __size_of___lmul 0086                          ___awmod 308E  
                  ?_ringbuf_push 0005                          ___lldiv 2E20  
                __size_of___wmul 0036                          ___lwdiv 37AE  
                        ___lwmod 3888                  __size_of_d_to_x 002C  
                   __psmallconst 0F00             __size_of_ringbuf_pop 0090  
           __size_of_ringbuf_num 007E                  __CFG_STVREN$OFF 000000  
                __size_of_lchika 0114                __end_of_main_init 36B2  
    epoch_to_caltime@month_cache 00FE                          __pcinit 3826  
                        __ramtop 0F00             __size_of_timer0_init 0036  
           __size_of_timer1_init 0050                          __ptext0 2310  
                        __ptext1 2D46                          __ptext2 2100  
                        __ptext3 3C6E                          __ptext4 3BE4  
                        __ptext5 3EA2                          __ptext6 39FC  
                        __ptext7 3634                          __ptext8 3ECE  
                        __ptext9 3B4A                    I2C_LCD_Putc@c 0064  
           __size_of_timer3_init 002C                  __size_of_x_to_d 0020  
                  I2C_LCD_Puts@s 0064                        _T0CONbits 000FD5  
                   __size_of_ADC 002C                     __size_of_LED 0054  
               _time_change_flag 00D1                 _caltime_to_epoch 0FB2  
                   __size_of_ISR 0140                        _T1CONbits 000FCD  
                   __size_of_OUT 0054                          _cut_cnt 00BD  
        __size_of_RTCC_from_RTCC 002E                        _T3CONbits 000F79  
               ___awmod@dividend 0060                        _T5CONbits 000F22  
        __end_of_RTCC_to_caltime 308E                          _tx_send 4032  
                        lchika@i 000C            __size_of_display_time 0170  
          __size_of_get_quot_rem 00FE            __size_of_display_port 00D2  
           end_of_initialization 3882                       delay_set@d 0060  
                   _CTMUCONHbits 000FB3                     _CTMUCONLbits 000FB2  
                 ??_month_length 0067                   display_dec@dec 007F  
                 display_dec@str 0075                      sleep_loop@i 0091  
               ?_caltime_to_RTCC 0069                       ?_I2C_Start 0062  
                ___lldiv@divisor 0064             timer3_init@prescaler 0061  
                ___lldiv@counter 006C                   ??_ringbuf_init 0065  
                     _sleep_flag 00D0                   ??_ringbuf_push 0008  
                        postdec1 000FE5                          postdec2 000FDD  
                     _sleep_loop 2D46             sw_flag_clear@bit_and 0060  
                        postinc0 000FEE                          postinc2 000FDE  
                 display_time@ep 0092                   display_time@ct 0090  
                        utoa@str 006C                        _PORTAbits 000F80  
                      _PORTBbits 000F81                        _UART_init 3F7C  
               __CFG_DSBOREN$OFF 000000                        _RTCC_init 3E18  
                      _RTCC_loop 36B2                  _nomal_mode_loop 2100  
                   _display_flag 00CD        epoch_to_caltime@day_cache 00C9  
                   _display_time 249A                     _get_quot_rem 29A2  
                   _display_port 2EF4                       _print_port 0031  
      __size_of_epoch_to_caltime 026C                 __CFG_CPUDIV$OSC1 000000  
              __size_of_I2C_Send 0018                __size_of_I2C_Stop 000A  
                      i2___awdiv 32CE       __size_of_RTCC_time_set_dec 0304  
              __size_of_I2C_init 0012       __size_of_RTCC_time_set_inc 02FE  
              i2___lwdiv@divisor 0003                        i2___lldiv 35B2  
              __size_of_ADC_init 0020                        i2___lwdiv 3AF8  
              i2___lwdiv@counter 0007                 ?_RTCC_from_epoch 009B  
                      Auto_cut@i 006C  __size_of_button_timer_interrupt 02C2  
        timer1_init@clock_select 0060                 __CFG_IOL1WAY$OFF 000000  
             i2___awdiv@dividend 0001             _RTCC_time_set_cursor 3A50  
            __CFG_MSSP7B_EN$MSK7 000000                 ?_I2C_LCD_Command 0001  
                 ringbuf_init@rb 0060                       lchika@cntf 00C6  
           _RTCC_time_set_toggle 4064                    ??_display_LCD 0095  
                 ringbuf_pop@ret 000A                    ??_display_dec 0075  
                 __end_of___lmul 35B2                   __end_of___wmul 3D4E  
                  ?_sw_flag_read 0060                   ringbuf_push@rb 0005  
                 __end_of_d_to_x 3F26                    __pidataCOMRAM 4096  
                 __end_of_lchika 29A2                       ?_UART_init 0001  
                     ?_RTCC_init 0001                       ?_RTCC_loop 0001  
               __CFG_DSWDTEN$OFF 000000            __end_of_sw_flag_clear 3C2A  
               sleep_loop@i_2492 0090                   __end_of_x_to_d 3FDC  
          epoch_to_caltime@month 0096              start_initialization 3826  
               month_length@year 006B                      __end_of_ADC 3F52  
             i2___awdiv@quotient 0007                      __end_of_LED 3A50  
           RTCC_time_set@cnt_dec 010A                      __end_of_ISR 0148  
           RTCC_time_set@cnt_inc 0108                      __end_of_OUT 3AF8  
                  ?_I2C_LCD_Putc 0001                    ?_I2C_LCD_Puts 0064  
                  ?_I2C_LCD_init 0001                       ?i2___awdiv 0001  
              __size_of_Delay_ms 002A                       ?i2___lldiv 0001  
               ?_RTCC_to_caltime 0062                       ?i2___lwdiv 0001  
              __size_of_Auto_cut 012C                      ??_I2C_Start 0063  
          ?_RTCC_time_set_cursor 0001            __end_of_I2C_LCD_Clear 4032  
          ?_RTCC_time_set_toggle 0001                         ??___lmul 0075  
                    ?_sleep_loop 0001                         ??___wmul 0068  
        __end_of_nomal_mode_loop 2310                         ??_d_to_x 0068  
                 ??_sw_flag_read 0061                __CFG_ADCSEL$BIT12 000000  
                    __pdataBANK0 00E2                         ??_lchika 0009  
         _button_timer_interrupt 1BD2                         ??_x_to_d 0060  
           __end_of_month_length 2D46                   _RTCC_from_RTCC 3E74  
            __end_of_display_LCD 1BD2              __end_of_display_dec 3946  
                    __pbssCOMRAM 0022              RTCC_to_caltime@dumy 0064  
                       LED@value 0060                    __pcstackBANK0 0060  
                  __pcstackBANK1 0100                   ??_I2C_LCD_Putc 0064  
               sw_flag_read@port 0061                   ??_I2C_LCD_Puts 0066  
                 ??_I2C_LCD_init 0067              __end_of__stringdata 0FB1  
                    _caltime_now 00D3             __end_of_ringbuf_init 39FC  
           __end_of_ringbuf_push 32CE                 tx_send@asciicode 000D  
 __size_of_delay_timer_interrupt 004A    __end_of_delay_timer_interrupt 3BE4  
                      _d_display 003E                    ??_integrating 000E  
       __end_of_caltime_to_epoch 12F2                         ISR@ascii 0021  
               ___lwdiv@dividend 0065                        _delay_set 3EA2  
                      _edit_flag 00CE                        __pintcode 0008  
                       ?___awdiv 0060                         ?___awmod 0060  
                       ?___lldiv 0060                         ?___lwdiv 0065  
                       ?___lwmod 0060                  I2C_LCD_Putc@ans 0065  
         __end_of_RTCC_from_RTCC 3EA2                  I2C_LCD_Puts@ans 0067  
                    ??_UART_init 0060                      ??_RTCC_init 0060  
                    ??_RTCC_loop 0060                      __smallconst 0F00  
                 __size_ofi2_LED 0044                        _epoch_now 00DA  
                      _main_init 3634                      I2C_Start@rw 0062  
               _epoch_to_caltime 1E94                         _I2C_Send 404C  
                       OUT@value 0060                         _I2C_Stop 408C  
           __CFG_RTCOSC$T1OSCREF 000000                         _I2C_init 407A  
                       _ADC_init 3F9C            __end_of_I2C_IdleCheck 4018  
                    _PADCFG1bits 000F3C                 ___lwdiv@quotient 006A  
                    ??i2___awdiv 0005                         ?_tx_send 0001  
                    ??i2___lldiv 0009                      ??i2___lwdiv 0005  
            __size_of_sleep_loop 00DA                        d_to_x@dec 0068  
                       _CTMUCONH 000FB3                         _CTMUCONL 000FB2  
                       _CTMUICON 000FB1         ringbuf_init@internal_buf 0062  
                 ___wmul@product 0068                         _IPR1bits 000F9F  
                       _IPR2bits 000FA2                         _PIE1bits 000F9D  
         ??_RTCC_time_set_cursor 0060                         _PIE2bits 000FA0  
                       _IPR5bits 000F99                         _PIE5bits 000F91  
         ??_RTCC_time_set_toggle 0060                         i2u316_45 3C34  
                       i2u316_46 3C3A                         i2u317_45 3C42  
                       i2u317_46 3C48                         i2u318_45 3C50  
                       i2u318_46 3C56                         i2u416_40 00AE  
                     ?_delay_set 0060                         i2u416_46 00B0  
                       i2u417_40 00C6                         _PIR1bits 000F9E  
                       i2u417_46 00C8                         i2u418_40 00DE  
                       i2u418_46 00E0                         i2u419_40 00FA  
                       _PIR2bits 000FA1                         i2u419_46 00FC  
                       _PIR5bits 000F98       epoch_to_caltime@year_cache 00D2  
         __size_of_RTCC_time_set 0158                    ??_ringbuf_pop 0007  
                  ??_ringbuf_num 0003              __end_of_integrating 3216  
                       _SSP1CON1 000FC6                         _SSP1CON2 000FC5  
                  ??_timer0_init 0060                    ??_timer1_init 0061  
                    _display_LCD 18F4                    ??_timer3_init 0060  
               ?_nomal_mode_loop 0001                         _SSP1STAT 000FC7  
                    _display_dec 38E8                  ?_RTCC_from_RTCC 008C  
                     _ADCON0bits 000FC2                       _ADCON1bits 000FC1  
                    __stringdata 0F01                ___wmul@multiplier 0064  
               __CFG_SOSCSEL$LOW 000000   button_timer_interrupt@sw_value 0003  
        __size_of_interrupt_TXIF 0038                       ?_main_init 0001  
              i2___awdiv@divisor 0003                         _Delay_ms 3F52  
              i2___awdiv@counter 0005                        lchika@cnt 002B  
                  ringbuf_pop@rb 0005                    ringbuf_num@rb 0001  
                  I2C_Start@adrs 0063                ___lmul@multiplier 006D  
                    _INTCON2bits 000FF1                        copy_data0 385E  
           __end_of_sw_flag_read 3CAA                         _Auto_cut 2762  
           epoch_to_caltime@year 0095                      _auto_cut_ON 0028  
                       __Hrparam 0000                         __Lrparam 0000  
           __end_of_I2C_LCD_Putc 3D82             __end_of_I2C_LCD_Puts 3408  
           __end_of_I2C_LCD_init 39A2            __size_of_month_length 00E2  
            RTCC_time_set_dec@ep 00A1              RTCC_time_set_dec@ct 009F  
       __size_of_caltime_to_RTCC 00E2                 __size_of___awdiv 00E2  
               __size_of___awmod 00C4                I2C_IdleCheck@mask 0061  
               __size_of___lldiv 00D4                       utoa@digits 0070  
               __size_of___lwdiv 0078              RTCC_time_set_inc@ep 00A1  
            RTCC_time_set_inc@ct 009F                 __size_of___lwmod 0060  
            __end_of_ringbuf_pop 352C              __end_of_ringbuf_num 37AE  
            __end_of_timer0_init 3D18            __size_of_ringbuf_init 005A  
            __end_of_timer1_init 3B9A              __end_of_timer3_init 3EFA  
          __size_of_ringbuf_push 00B8                    _RTCC_time_set 260A  
                     i2LED@value 0001                  ___lwdiv@divisor 0067  
                ___lwdiv@counter 0069             timer0_init@prescaler 0061  
                       __ptext10 3CE2                         __ptext11 39A2  
                       __ptext20 38E8                         __ptext12 3F7C  
                       __ptext21 3408                         __ptext13 3E18  
                       __ptext30 408C                         __ptext22 3888  
                       __ptext14 407A                         __ptext31 3DB6  
                       __ptext23 37AE                         __ptext15 3946  
                       __ptext40 29A2                         __ptext32 404C  
                       __ptext24 3D4E                         __ptext16 3F52  
                       __ptext41 2E20                         __ptext33 3FFA  
                       __ptext25 2EF4                         __ptext17 3F9C  
                       __ptext50 2FC6                         __ptext42 2AA0  
                       __ptext34 260A                         __ptext26 3DE8  
                       __ptext18 18F4                         __ptext51 3FBC  
                       __ptext43 3EFA                         __ptext35 4064  
                       __ptext27 3372                         __ptext19 249A  
                       __ptext60 3216                         __ptext52 3A50  
                       __ptext44 2B82                         __ptext36 15F6  
                       __ptext28 4018                         __ptext61 288E  
                       __ptext53 36B2                         __ptext45 3E74  
                       __ptext37 12F2                         __ptext29 3D82  
                       __ptext70 3B9A                         __ptext62 3AF8  
                       __ptext54 2762                         __ptext46 0FB2  
                       __ptext38 3E46                         __ptext71 1BD2  
                       __ptext63 32CE                         __ptext55 3D18  
                       __ptext47 2C64                         __ptext39 1E94  
                       __ptext64 3C2A                         __ptext56 3AA4  
                       __ptext48 308E                         __ptext65 3CAA  
                       __ptext57 3F26                         __ptext49 352C  
                       __ptext66 349C                         __ptext67 3730  
                       __ptext59 4032                         __ptext68 3152  
                       __ptext69 35B2                     _SSP1CON2bits 000FC5  
          RTCC_loop@prev_halfsec 0030                 __size_of_tx_send 001A  
                       _cut_flag 00CC                      _integrating 3152  
                  __size_of_main 018A                    __size_of_utoa 0094  
                   _month_length 2C64         __size_of_RTCC_from_epoch 002E  
                    ??_delay_set 0064                     ??_sleep_loop 0090  
        ?_button_timer_interrupt 0001                     _ringbuf_init 39A2  
                   _ringbuf_push 3216                        x_to_d@hex 0061  
       __size_of_I2C_LCD_Command 0034                   main_init@txbuf 0100  
                    ??_main_init 0067                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                   ?_RTCC_time_set 0106  
   I2C_LCD_SetCursor@row_offsets 0067                       Delay_ms@ms 0060  
                display_dec@edit 0074               RTCC_time_set_dec@i 00A4  
               get_quot_rem@quot 0079               RTCC_time_set_inc@i 00A4  
              RTCC_to_caltime@ct 0062                     _weekday_char 00E2  
                      utoa@value 006E                         intlevel2 0000  
             __end_of_sleep_loop 2E20                 ___lwmod@dividend 0060  
               ___lldiv@dividend 0060                       _RCSTA1bits 000FAC  
              ?_caltime_to_epoch 0079         __end_of_epoch_to_caltime 2100  
         __size_of_sw_flag_clear 0046         __size_of_RTCC_to_caltime 00C8  
                  _print_content 00CF                       _OSCCONbits 000FD3  
 __end_of_button_timer_interrupt 1E94               ??_caltime_to_epoch 007D  
        RTCC_time_set_dec@i_2203 00A3                      _ringbuf_pop 349C  
                    _ringbuf_num 3730                      _timer0_init 3CE2  
                    _timer1_init 3B4A                      _timer3_init 3ECE  
              RTCC_time_set@mode 0106                  get_quot_rem@div 007B  
                get_quot_rem@num 0085                       _RTCCFGbits 000F3F  
                 _interrupt_TXIF 3CAA                 ___lldiv@quotient 0068  
              caltime_to_RTCC@ct 0069                  ___lwmod@divisor 0062  
              ??_caltime_to_RTCC 006B                  ___lwmod@counter 0064  
          __size_of_sw_flag_read 003C           __size_of_I2C_LCD_Clear 001A  
epoch_to_caltime@day_since_epoch 0091            __size_of_I2C_LCD_Putc 0034  
          __size_of_I2C_LCD_Puts 0096            _delay_timer_interrupt 3B9A  
          __size_of_I2C_LCD_init 005C                 ??_RTCC_from_RTCC 0090  
