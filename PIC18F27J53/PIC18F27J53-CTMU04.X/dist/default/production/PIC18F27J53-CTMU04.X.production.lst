

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Jul 18 21:42:13 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           	psect	idataBANK0
    54  001F80                     __pidataBANK0:
    55                           	opt stack 0
    56                           
    57                           ;initializer for I2C_LCD_SetCursor@F9845
    58  001F80  00                 	db	0
    59  001F81  40                 	db	64
    60  0000                     _ANCON0	set	3912
    61  0000                     _ANCON1	set	3913
    62  0000                     _T5CONbits	set	3874
    63  0000                     _ADRES	set	4035
    64  0000                     _ADCON0bits	set	4034
    65  0000                     _ADCON1bits	set	4033
    66  0000                     _BAUDCON1bits	set	3966
    67  0000                     _CTMUCONH	set	4019
    68  0000                     _CTMUCONHbits	set	4019
    69  0000                     _CTMUCONL	set	4018
    70  0000                     _CTMUCONLbits	set	4018
    71  0000                     _CTMUICON	set	4017
    72  0000                     _INTCON2bits	set	4081
    73  0000                     _INTCONbits	set	4082
    74  0000                     _IPR1bits	set	3999
    75  0000                     _IPR2bits	set	4002
    76  0000                     _IPR5bits	set	3993
    77  0000                     _OSCCONbits	set	4051
    78  0000                     _OSCTUNEbits	set	3995
    79  0000                     _PIE1bits	set	3997
    80  0000                     _PIE2bits	set	4000
    81  0000                     _PIE5bits	set	3985
    82  0000                     _PIR1bits	set	3998
    83  0000                     _PIR2bits	set	4001
    84  0000                     _PIR5bits	set	3992
    85  0000                     _RCREG1	set	4015
    86  0000                     _RCSTA1bits	set	4012
    87  0000                     _SPBRG1	set	4016
    88  0000                     _SPBRGH1	set	3967
    89  0000                     _SSP1ADD	set	4040
    90  0000                     _SSP1BUF	set	4041
    91  0000                     _SSP1CON1	set	4038
    92  0000                     _SSP1CON2	set	4037
    93  0000                     _SSP1CON2bits	set	4037
    94  0000                     _SSP1STAT	set	4039
    95  0000                     _T0CONbits	set	4053
    96  0000                     _T1CONbits	set	4045
    97  0000                     _T3CONbits	set	3961
    98  0000                     _TMR1H	set	4047
    99  0000                     _TRISA	set	3986
   100  0000                     _TRISB	set	3987
   101  0000                     _TRISC	set	3988
   102  0000                     _TXREG1	set	4014
   103  0000                     _TXSTA1bits	set	4013
   104  0000                     _BCL1IF	set	32011
   105  0000                     _LATB2	set	31826
   106  0000                     _LATB3	set	31827
   107  0000                     _LATB6	set	31830
   108  0000                     _LATB7	set	31831
   109  0000                     _SSP1IF	set	31987
   110                           
   111                           	psect	smallconst
   112  000F00                     __psmallconst:
   113                           	opt stack 0
   114  000F00  00                 	db	0
   115  000F01                     STR_2:
   116  000F01  20                 	db	32
   117  000F02  20                 	db	32
   118  000F03  43                 	db	67	;'C'
   119  000F04  54                 	db	84	;'T'
   120  000F05  4D                 	db	77	;'M'
   121  000F06  55                 	db	85	;'U'
   122  000F07  20                 	db	32
   123  000F08  20                 	db	32
   124  000F09  00                 	db	0
   125  000F0A                     STR_1:
   126  000F0A  31                 	db	49	;'1'
   127  000F0B  38                 	db	56	;'8'
   128  000F0C  46                 	db	70	;'F'
   129  000F0D  32                 	db	50	;'2'
   130  000F0E  37                 	db	55	;'7'
   131  000F0F  4A                 	db	74	;'J'
   132  000F10  35                 	db	53	;'5'
   133  000F11  33                 	db	51	;'3'
   134  000F12  00                 	db	0
   135                           
   136                           ; #config settings
   137  000F13  00                 	db	0	; dummy byte at the end
   138  0000                     
   139                           	psect	cinit
   140  001D24                     __pcinit:
   141                           	opt stack 0
   142  001D24                     start_initialization:
   143                           	opt stack 0
   144  001D24                     __initialization:
   145                           	opt stack 0
   146                           
   147                           ; Clear objects allocated to BANK2 (250 bytes)
   148  001D24  EE02  F000         	lfsr	0,__pbssBANK2
   149  001D28  0EFA               	movlw	250
   150  001D2A                     clear_0:
   151  001D2A  6AEE               	clrf	postinc0,c
   152  001D2C  06E8               	decf	wreg,f,c
   153  001D2E  E1FD               	bnz	clear_0
   154                           
   155                           ; Clear objects allocated to BANK1 (250 bytes)
   156  001D30  EE01  F000         	lfsr	0,__pbssBANK1
   157  001D34  0EFA               	movlw	250
   158  001D36                     clear_1:
   159  001D36  6AEE               	clrf	postinc0,c
   160  001D38  06E8               	decf	wreg,f,c
   161  001D3A  E1FD               	bnz	clear_1
   162                           
   163                           ; Clear objects allocated to COMRAM (25 bytes)
   164  001D3C  EE00  F031         	lfsr	0,__pbssCOMRAM
   165  001D40  0E19               	movlw	25
   166  001D42                     clear_2:
   167  001D42  6AEE               	clrf	postinc0,c
   168  001D44  06E8               	decf	wreg,f,c
   169  001D46  E1FD               	bnz	clear_2
   170                           
   171                           ; Initialize objects allocated to BANK0 (2 bytes)
   172                           ; load TBLPTR registers with __pidataBANK0
   173  001D48  0E80               	movlw	low __pidataBANK0
   174  001D4A  6EF6               	movwf	tblptrl,c
   175  001D4C  0E1F               	movlw	high __pidataBANK0
   176  001D4E  6EF7               	movwf	tblptrh,c
   177  001D50  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   178  001D52  6EF8               	movwf	tblptru,c
   179  001D54  0009               	tblrd		*+	;fetch initializer
   180  001D56  CFF5 F07D          	movff	tablat,__pdataBANK0
   181  001D5A  0009               	tblrd		*+	;fetch initializer
   182  001D5C  CFF5 F07E          	movff	tablat,__pdataBANK0+1
   183  001D60                     end_of_initialization:
   184                           	opt stack 0
   185  001D60                     __end_of__initialization:
   186                           	opt stack 0
   187  001D60  0E00               	movlw	low (__Lsmallconst shr (0+16))
   188  001D62  6EF8               	movwf	tblptru,c
   189  001D64  0E0F               	movlw	high __Lsmallconst
   190  001D66  6EF7               	movwf	tblptrh,c
   191  001D68  0100               	movlb	0
   192  001D6A  EF45  F009         	goto	_main	;jump to C main() function
   193                           tblptru	equ	0xFF8
   194                           tblptrh	equ	0xFF7
   195                           tblptrl	equ	0xFF6
   196                           tablat	equ	0xFF5
   197                           postinc0	equ	0xFEE
   198                           wreg	equ	0xFE8
   199                           
   200                           	psect	bssCOMRAM
   201  000031                     __pbssCOMRAM:
   202                           	opt stack 0
   203  000031                     _d1:
   204                           	opt stack 0
   205  000031                     	ds	3
   206  000034                     _ctmu_value:
   207                           	opt stack 0
   208  000034                     	ds	2
   209  000036                     _rx_buf:
   210                           	opt stack 0
   211  000036                     	ds	8
   212  00003E                     _tx_buf:
   213                           	opt stack 0
   214  00003E                     	ds	8
   215  000046                     _ct:
   216                           	opt stack 0
   217  000046                     	ds	4
   218                           tblptru	equ	0xFF8
   219                           tblptrh	equ	0xFF7
   220                           tblptrl	equ	0xFF6
   221                           tablat	equ	0xFF5
   222                           postinc0	equ	0xFEE
   223                           wreg	equ	0xFE8
   224                           
   225                           	psect	dataBANK0
   226  00007D                     __pdataBANK0:
   227                           	opt stack 0
   228  00007D                     I2C_LCD_SetCursor@F9845:
   229                           	opt stack 0
   230  00007D                     	ds	2
   231                           tblptru	equ	0xFF8
   232                           tblptrh	equ	0xFF7
   233                           tblptrl	equ	0xFF6
   234                           tablat	equ	0xFF5
   235                           postinc0	equ	0xFEE
   236                           wreg	equ	0xFE8
   237                           
   238                           	psect	bssBANK1
   239  000100                     __pbssBANK1:
   240                           	opt stack 0
   241  000100                     main_init@txbuf:
   242                           	opt stack 0
   243  000100                     	ds	250
   244                           tblptru	equ	0xFF8
   245                           tblptrh	equ	0xFF7
   246                           tblptrl	equ	0xFF6
   247                           tablat	equ	0xFF5
   248                           postinc0	equ	0xFEE
   249                           wreg	equ	0xFE8
   250                           
   251                           	psect	bssBANK2
   252  000200                     __pbssBANK2:
   253                           	opt stack 0
   254  000200                     main_init@rxbuf:
   255                           	opt stack 0
   256  000200                     	ds	250
   257                           tblptru	equ	0xFF8
   258                           tblptrh	equ	0xFF7
   259                           tblptrl	equ	0xFF6
   260                           tablat	equ	0xFF5
   261                           postinc0	equ	0xFEE
   262                           wreg	equ	0xFE8
   263                           
   264                           	psect	cstackBANK0
   265  000060                     __pcstackBANK0:
   266                           	opt stack 0
   267  000060                     ??_timer0_init:
   268  000060                     ??_timer3_init:
   269  000060                     ??_I2C_IdleCheck:
   270  000060                     ?_ringbuf_num:
   271                           	opt stack 0
   272  000060                     ?___lldiv:
   273                           	opt stack 0
   274  000060                     timer1_init@clock_select:
   275                           	opt stack 0
   276  000060                     ringbuf_init@rb:
   277                           	opt stack 0
   278  000060                     ringbuf_num@rb:
   279                           	opt stack 0
   280  000060                     Delay_ms@ms:
   281                           	opt stack 0
   282  000060                     ___lldiv@dividend:
   283                           	opt stack 0
   284                           
   285                           ; 4 bytes @ 0x0
   286  000060                     	ds	1
   287  000061                     ??_timer1_init:
   288  000061                     timer0_init@prescaler:
   289                           	opt stack 0
   290  000061                     timer3_init@prescaler:
   291                           	opt stack 0
   292  000061                     I2C_IdleCheck@mask:
   293                           	opt stack 0
   294                           
   295                           ; 1 bytes @ 0x1
   296  000061                     	ds	1
   297  000062                     ??_ringbuf_num:
   298  000062                     ??_Delay_ms:
   299  000062                     timer1_init@prescaler:
   300                           	opt stack 0
   301  000062                     I2C_Start@rw:
   302                           	opt stack 0
   303  000062                     I2C_Send@data:
   304                           	opt stack 0
   305  000062                     ringbuf_init@internal_buf:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x2
   309  000062                     	ds	1
   310  000063                     I2C_Start@adrs:
   311                           	opt stack 0
   312                           
   313                           ; 1 bytes @ 0x3
   314  000063                     	ds	1
   315  000064                     I2C_LCD_Command@c:
   316                           	opt stack 0
   317  000064                     ringbuf_init@bufsize:
   318                           	opt stack 0
   319  000064                     I2C_LCD_Puts@s:
   320                           	opt stack 0
   321  000064                     ___lldiv@divisor:
   322                           	opt stack 0
   323                           
   324                           ; 4 bytes @ 0x4
   325  000064                     	ds	1
   326  000065                     I2C_LCD_Command@ans:
   327                           	opt stack 0
   328                           
   329                           ; 1 bytes @ 0x5
   330  000065                     	ds	1
   331  000066                     ??_I2C_LCD_Clear:
   332  000066                     ??_I2C_LCD_Puts:
   333  000066                     I2C_LCD_SetCursor@row:
   334                           	opt stack 0
   335                           
   336                           ; 1 bytes @ 0x6
   337  000066                     	ds	1
   338  000067                     I2C_LCD_SetCursor@row_offsets:
   339                           	opt stack 0
   340  000067                     I2C_LCD_Puts@ans:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0x7
   344  000067                     	ds	1
   345  000068                     ringbuf_put@rb:
   346                           	opt stack 0
   347  000068                     ringbuf_pop@rb:
   348                           	opt stack 0
   349  000068                     ___lldiv@quotient:
   350                           	opt stack 0
   351                           
   352                           ; 4 bytes @ 0x8
   353  000068                     	ds	1
   354  000069                     I2C_LCD_SetCursor@col:
   355                           	opt stack 0
   356                           
   357                           ; 1 bytes @ 0x9
   358  000069                     	ds	1
   359  00006A                     ??_ringbuf_pop:
   360  00006A                     ringbuf_put@asciicode:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0xA
   364  00006A                     	ds	1
   365  00006B                     ??_ringbuf_put:
   366                           
   367                           ; 0 bytes @ 0xB
   368  00006B                     	ds	1
   369  00006C                     ___lldiv@counter:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0xC
   373  00006C                     	ds	1
   374  00006D                     ?_CTMU_read:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0xD
   378  00006D                     	ds	1
   379  00006E                     ringbuf_pop@ret:
   380                           	opt stack 0
   381                           
   382                           ; 1 bytes @ 0xE
   383  00006E                     	ds	1
   384  00006F                     ??_CTMU_read:
   385  00006F                     tx_send@asciicode:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0xF
   389  00006F                     	ds	1
   390  000070                     CTMU_read@ch:
   391                           	opt stack 0
   392                           
   393                           ; 1 bytes @ 0x10
   394  000070                     	ds	1
   395  000071                     CTMU_read@sum:
   396                           	opt stack 0
   397                           
   398                           ; 4 bytes @ 0x11
   399  000071                     	ds	4
   400  000075                     CTMU_read@i:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x15
   404  000075                     	ds	1
   405  000076                     ?___lwdiv:
   406                           	opt stack 0
   407  000076                     ___lwdiv@dividend:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x16
   411  000076                     	ds	2
   412  000078                     ___lwdiv@divisor:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x18
   416  000078                     	ds	2
   417  00007A                     ___lwdiv@quotient:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x1A
   421  00007A                     	ds	2
   422  00007C                     ___lwdiv@counter:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x1C
   426  00007C                     	ds	1
   427  00007D                     tblptru	equ	0xFF8
   428                           tblptrh	equ	0xFF7
   429                           tblptrl	equ	0xFF6
   430                           tablat	equ	0xFF5
   431                           postinc0	equ	0xFEE
   432                           wreg	equ	0xFE8
   433                           
   434                           ; 0 bytes @ 0x1D
   435                           
   436                           	psect	cstackCOMRAM
   437  000001                     __pcstackCOMRAM:
   438                           	opt stack 0
   439  000001                     ?i2_ringbuf_num:
   440                           	opt stack 0
   441  000001                     ?i2___lldiv:
   442                           	opt stack 0
   443  000001                     i2ringbuf_num@rb:
   444                           	opt stack 0
   445  000001                     i2___lldiv@dividend:
   446                           	opt stack 0
   447                           
   448                           ; 4 bytes @ 0x0
   449  000001                     	ds	2
   450  000003                     ??i2_ringbuf_num:
   451                           
   452                           ; 0 bytes @ 0x2
   453  000003                     	ds	2
   454  000005                     i2___lldiv@divisor:
   455                           	opt stack 0
   456                           
   457                           ; 4 bytes @ 0x4
   458  000005                     	ds	4
   459  000009                     i2ringbuf_put@rb:
   460                           	opt stack 0
   461  000009                     i2ringbuf_pop@rb:
   462                           	opt stack 0
   463  000009                     i2___lldiv@quotient:
   464                           	opt stack 0
   465                           
   466                           ; 4 bytes @ 0x8
   467  000009                     	ds	2
   468  00000B                     ??i2_ringbuf_pop:
   469  00000B                     i2ringbuf_put@asciicode:
   470                           	opt stack 0
   471                           
   472                           ; 1 bytes @ 0xA
   473  00000B                     	ds	1
   474  00000C                     ??i2_ringbuf_put:
   475                           
   476                           ; 0 bytes @ 0xB
   477  00000C                     	ds	1
   478  00000D                     i2___lldiv@counter:
   479                           	opt stack 0
   480                           
   481                           ; 1 bytes @ 0xC
   482  00000D                     	ds	1
   483  00000E                     ?i2_CTMU_read:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0xD
   487  00000E                     	ds	1
   488  00000F                     i2ringbuf_pop@ret:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0xE
   492  00000F                     	ds	1
   493  000010                     ??i2_CTMU_read:
   494  000010                     UART_ISR@ascii:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0xF
   498  000010                     	ds	1
   499  000011                     i2CTMU_read@ch:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x10
   503  000011                     	ds	1
   504  000012                     i2CTMU_read@sum:
   505                           	opt stack 0
   506                           
   507                           ; 4 bytes @ 0x11
   508  000012                     	ds	4
   509  000016                     i2CTMU_read@i:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x15
   513  000016                     	ds	1
   514  000017                     ?i2___lwdiv:
   515                           	opt stack 0
   516  000017                     i2___lwdiv@dividend:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x16
   520  000017                     	ds	2
   521  000019                     i2___lwdiv@divisor:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x18
   525  000019                     	ds	2
   526  00001B                     i2___lwdiv@quotient:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x1A
   530  00001B                     	ds	2
   531  00001D                     i2___lwdiv@counter:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0x1C
   535  00001D                     	ds	1
   536  00001E                     button_timer_interrupt@bt:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x1D
   540  00001E                     	ds	2
   541  000020                     button_timer_interrupt@sw_value:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x1F
   545  000020                     	ds	1
   546  000021                     
   547                           ; 0 bytes @ 0x20
   548  000021                     	ds	2
   549  000023                     ??_ISR:
   550                           
   551                           ; 0 bytes @ 0x22
   552  000023                     	ds	14
   553                           tblptru	equ	0xFF8
   554                           tblptrh	equ	0xFF7
   555                           tblptrl	equ	0xFF6
   556                           tablat	equ	0xFF5
   557                           postinc0	equ	0xFEE
   558                           wreg	equ	0xFE8
   559                           
   560 ;;
   561 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   562 ;;
   563 ;; *************** function _main *****************
   564 ;; Defined at:
   565 ;;		line 83 in file "PIC18F27J53-CTMU04.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;		None
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;		None               void
   572 ;; Registers used:
   573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   583 ;;Total ram usage:        0 bytes
   584 ;; Hardware stack levels required when called:   10
   585 ;; This function calls:
   586 ;;		_CTMU_read
   587 ;;		_Delay_ms
   588 ;;		_I2C_LCD_Clear
   589 ;;		_I2C_LCD_Puts
   590 ;;		_I2C_LCD_SetCursor
   591 ;;		___lwdiv
   592 ;;		_main_init
   593 ;;		_ringbuf_num
   594 ;;		_ringbuf_pop
   595 ;;		_tx_send
   596 ;; This function is called by:
   597 ;;		Startup code after reset
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           	psect	text0
   602  00128A                     __ptext0:
   603                           	opt stack 0
   604  00128A                     _main:
   605                           	opt stack 21
   606                           
   607                           ;PIC18F27J53-CTMU04.c: 84: main_init();
   608                           
   609                           ;incstack = 0
   610  00128A  ECB9  F00C         	call	_main_init	;wreg free
   611                           
   612                           ;PIC18F27J53-CTMU04.c: 86: INTCONbits.GIE = 1;
   613  00128E  8EF2               	bsf	intcon,7,c	;volatile
   614                           
   615                           ;PIC18F27J53-CTMU04.c: 88: I2C_LCD_Clear();
   616  001290  EC9E  F00F         	call	_I2C_LCD_Clear	;wreg free
   617                           
   618                           ;PIC18F27J53-CTMU04.c: 89: I2C_LCD_SetCursor(0, 0);
   619  001294  0E00               	movlw	0
   620  001296  0100               	movlb	0	; () banked
   621  001298  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
   622  00129A  0E00               	movlw	0
   623  00129C  EC38  F00F         	call	_I2C_LCD_SetCursor
   624                           
   625                           ;PIC18F27J53-CTMU04.c: 90: I2C_LCD_Puts("18F27J53");
   626  0012A0  0E0A               	movlw	low STR_1
   627  0012A2  0100               	movlb	0	; () banked
   628  0012A4  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
   629  0012A6  0E0F               	movlw	high STR_1
   630  0012A8  0100               	movlb	0	; () banked
   631  0012AA  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
   632  0012AC  EC8A  F00D         	call	_I2C_LCD_Puts	;wreg free
   633                           
   634                           ;PIC18F27J53-CTMU04.c: 91: I2C_LCD_SetCursor(0, 1);
   635  0012B0  0E01               	movlw	1
   636  0012B2  0100               	movlb	0	; () banked
   637  0012B4  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
   638  0012B6  0E00               	movlw	0
   639  0012B8  EC38  F00F         	call	_I2C_LCD_SetCursor
   640                           
   641                           ;PIC18F27J53-CTMU04.c: 92: I2C_LCD_Puts("  CTMU  ");
   642  0012BC  0E01               	movlw	low STR_2
   643  0012BE  0100               	movlb	0	; () banked
   644  0012C0  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
   645  0012C2  0E0F               	movlw	high STR_2
   646  0012C4  0100               	movlb	0	; () banked
   647  0012C6  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
   648  0012C8  EC8A  F00D         	call	_I2C_LCD_Puts	;wreg free
   649                           
   650                           ;PIC18F27J53-CTMU04.c: 93: Delay_ms(200);
   651  0012CC  0E00               	movlw	0
   652  0012CE  0100               	movlb	0	; () banked
   653  0012D0  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
   654  0012D2  0EC8               	movlw	200
   655  0012D4  6F60               	movwf	Delay_ms@ms& (0+255),b
   656  0012D6  EC0B  F00F         	call	_Delay_ms	;wreg free
   657                           
   658                           ;PIC18F27J53-CTMU04.c: 94: ctmu_value = 4 * CTMU_read(0) / 5;
   659  0012DA  0E00               	movlw	0
   660  0012DC  EC8B  F00A         	call	_CTMU_read
   661  0012E0  0100               	movlb	0	; () banked
   662  0012E2  90D8               	bcf	status,0,c
   663  0012E4  376D               	rlcf	?_CTMU_read& (0+255),f,b
   664  0012E6  376E               	rlcf	(?_CTMU_read+1)& (0+255),f,b
   665  0012E8  0100               	movlb	0	; () banked
   666  0012EA  90D8               	bcf	status,0,c
   667  0012EC  376D               	rlcf	?_CTMU_read& (0+255),f,b
   668  0012EE  376E               	rlcf	(?_CTMU_read+1)& (0+255),f,b
   669  0012F0  C06D  F076         	movff	?_CTMU_read,___lwdiv@dividend
   670  0012F4  C06E  F077         	movff	?_CTMU_read+1,___lwdiv@dividend+1
   671  0012F8  0E00               	movlw	0
   672  0012FA  0100               	movlb	0	; () banked
   673  0012FC  6F79               	movwf	(___lwdiv@divisor+1)& (0+255),b
   674  0012FE  0E05               	movlw	5
   675  001300  6F78               	movwf	___lwdiv@divisor& (0+255),b
   676  001302  EC49  F00D         	call	___lwdiv	;wreg free
   677  001306  C076  F034         	movff	?___lwdiv,_ctmu_value
   678  00130A  C077  F035         	movff	?___lwdiv+1,_ctmu_value+1
   679  00130E  D000               	goto	l2364
   680  001310                     l2364:
   681                           
   682                           ;PIC18F27J53-CTMU04.c: 97: if (ringbuf_num(&rx_buf)) {
   683  001310  0E36               	movlw	low _rx_buf
   684  001312  0100               	movlb	0	; () banked
   685  001314  6F60               	movwf	ringbuf_num@rb& (0+255),b
   686  001316  0E00               	movlw	high _rx_buf
   687  001318  0100               	movlb	0	; () banked
   688  00131A  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
   689  00131C  ECCD  F008         	call	_ringbuf_num	;wreg free
   690  001320  0100               	movlb	0	; () banked
   691  001322  5160               	movf	?_ringbuf_num& (0+255),w,b
   692  001324  0100               	movlb	0	; () banked
   693  001326  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
   694  001328  B4D8               	btfsc	status,2,c
   695  00132A  D00B               	goto	l2368
   696                           
   697                           ; BSR set to: 0
   698                           ;PIC18F27J53-CTMU04.c: 98: tx_send(ringbuf_pop(&rx_buf));
   699  00132C  0E36               	movlw	low _rx_buf
   700  00132E  0100               	movlb	0	; () banked
   701  001330  6F68               	movwf	ringbuf_pop@rb& (0+255),b
   702  001332  0E00               	movlw	high _rx_buf
   703  001334  0100               	movlb	0	; () banked
   704  001336  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
   705  001338  EC23  F00A         	call	_ringbuf_pop	;wreg free
   706  00133C  EC82  F00F         	call	_tx_send
   707  001340  D000               	goto	l2368
   708  001342                     l2368:
   709                           
   710                           ;PIC18F27J53-CTMU04.c: 99: }
   711                           ;PIC18F27J53-CTMU04.c: 100: if (ct.flag.pressing)LATB7 = 1;
   712  001342  A049               	btfss	_ct+3,0,c
   713  001344  D002               	goto	l350
   714  001346  8E8A               	bsf	3978,7,c	;volatile
   715  001348  D001               	goto	l351
   716  00134A                     l350:
   717                           
   718                           ;PIC18F27J53-CTMU04.c: 101: else LATB7 = 0;
   719  00134A  9E8A               	bcf	3978,7,c	;volatile
   720  00134C                     l351:
   721                           
   722                           ;PIC18F27J53-CTMU04.c: 102: if (ct.flag.long_holding_2)LATB6 = 1;
   723  00134C  A449               	btfss	_ct+3,2,c
   724  00134E  D002               	goto	l352
   725  001350  8C8A               	bsf	3978,6,c	;volatile
   726  001352  D001               	goto	l353
   727  001354                     l352:
   728                           
   729                           ;PIC18F27J53-CTMU04.c: 103: else LATB6 = 0;
   730  001354  9C8A               	bcf	3978,6,c	;volatile
   731  001356                     l353:
   732                           
   733                           ;PIC18F27J53-CTMU04.c: 104: if (ct.flag.long_holding_4)LATB3 = 1;
   734  001356  A849               	btfss	_ct+3,4,c
   735  001358  D002               	goto	l354
   736  00135A  868A               	bsf	3978,3,c	;volatile
   737  00135C  D001               	goto	l355
   738  00135E                     l354:
   739                           
   740                           ;PIC18F27J53-CTMU04.c: 105: else LATB3 = 0;
   741  00135E  968A               	bcf	3978,3,c	;volatile
   742  001360                     l355:
   743                           
   744                           ;PIC18F27J53-CTMU04.c: 106: if (ct.flag.long_holding_5)LATB2 = 1;
   745  001360  AA49               	btfss	_ct+3,5,c
   746  001362  D002               	goto	l356
   747  001364  848A               	bsf	3978,2,c	;volatile
   748  001366  D7D4               	goto	l2364
   749  001368                     l356:
   750                           
   751                           ;PIC18F27J53-CTMU04.c: 107: else LATB2 = 0;
   752  001368  948A               	bcf	3978,2,c	;volatile
   753  00136A  D7D2               	goto	l2364
   754  00136C  EF66  F000         	goto	start
   755  001370                     __end_of_main:
   756                           	opt stack 0
   757                           tblptru	equ	0xFF8
   758                           tblptrh	equ	0xFF7
   759                           tblptrl	equ	0xFF6
   760                           tablat	equ	0xFF5
   761                           intcon	equ	0xFF2
   762                           postinc0	equ	0xFEE
   763                           wreg	equ	0xFE8
   764                           status	equ	0xFD8
   765                           
   766 ;; *************** function _tx_send *****************
   767 ;; Defined at:
   768 ;;		line 222 in file "../My_header\My_header.h"
   769 ;; Parameters:    Size  Location     Type
   770 ;;  asciicode       1    wreg     const unsigned char 
   771 ;; Auto vars:     Size  Location     Type
   772 ;;  asciicode       1   15[BANK0 ] const unsigned char 
   773 ;; Return value:  Size  Location     Type
   774 ;;		None               void
   775 ;; Registers used:
   776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   783 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   785 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   786 ;;Total ram usage:        1 bytes
   787 ;; Hardware stack levels used:    1
   788 ;; Hardware stack levels required when called:    6
   789 ;; This function calls:
   790 ;;		_ringbuf_put
   791 ;; This function is called by:
   792 ;;		_main
   793 ;;		_tx_sendn
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           	psect	text1
   798  001F04                     __ptext1:
   799                           	opt stack 0
   800  001F04                     _tx_send:
   801                           	opt stack 24
   802                           
   803                           ;incstack = 0
   804                           ;tx_send@asciicode stored from wreg
   805  001F04  0100               	movlb	0	; () banked
   806  001F06  6F6F               	movwf	tx_send@asciicode& (0+255),b
   807                           
   808                           ; BSR set to: 0
   809                           ;My_header\My_header.h: 223: ringbuf_put(&tx_buf, asciicode);
   810  001F08  0E3E               	movlw	low _tx_buf
   811  001F0A  0100               	movlb	0	; () banked
   812  001F0C  6F68               	movwf	ringbuf_put@rb& (0+255),b
   813  001F0E  0E00               	movlw	high _tx_buf
   814  001F10  0100               	movlb	0	; () banked
   815  001F12  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
   816  001F14  C06F  F06A         	movff	tx_send@asciicode,ringbuf_put@asciicode
   817  001F18  ECB8  F009         	call	_ringbuf_put	;wreg free
   818                           
   819                           ;My_header\My_header.h: 224: PIE1bits.TXIE = 1;
   820  001F1C  889D               	bsf	3997,4,c	;volatile
   821  001F1E  0012               	return		;funcret
   822  001F20                     __end_of_tx_send:
   823                           	opt stack 0
   824                           tblptru	equ	0xFF8
   825                           tblptrh	equ	0xFF7
   826                           tblptrl	equ	0xFF6
   827                           tablat	equ	0xFF5
   828                           intcon	equ	0xFF2
   829                           postinc0	equ	0xFEE
   830                           wreg	equ	0xFE8
   831                           status	equ	0xFD8
   832                           
   833 ;; *************** function _ringbuf_put *****************
   834 ;; Defined at:
   835 ;;		line 39 in file "../My_header\My_ringbuf.h"
   836 ;; Parameters:    Size  Location     Type
   837 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
   838 ;;		 -> rx_buf(8), tx_buf(8), 
   839 ;;  asciicode       1   10[BANK0 ] unsigned char 
   840 ;; Auto vars:     Size  Location     Type
   841 ;;		None
   842 ;; Return value:  Size  Location     Type
   843 ;;		None               void
   844 ;; Registers used:
   845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   851 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   853 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   854 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   855 ;;Total ram usage:        7 bytes
   856 ;; Hardware stack levels used:    1
   857 ;; Hardware stack levels required when called:    5
   858 ;; This function calls:
   859 ;;		_ringbuf_num
   860 ;; This function is called by:
   861 ;;		_tx_send
   862 ;;		_ringbuf_put_num
   863 ;;		_ringbuf_put_str
   864 ;;		_tx_sends
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           	psect	text2
   869  001370                     __ptext2:
   870                           	opt stack 0
   871  001370                     _ringbuf_put:
   872                           	opt stack 24
   873                           
   874                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
   875                           
   876                           ;incstack = 0
   877  001370  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
   878  001374  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
   879  001378  ECCD  F008         	call	_ringbuf_num	;wreg free
   880  00137C  0100               	movlb	0	; () banked
   881  00137E  EE20 F002          	lfsr	2,2
   882  001382  5168               	movf	ringbuf_put@rb& (0+255),w,b
   883  001384  26D9               	addwf	fsr2l,f,c
   884  001386  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
   885  001388  22DA               	addwfc	fsr2h,f,c
   886  00138A  50DE               	movf	postinc2,w,c
   887  00138C  0100               	movlb	0	; () banked
   888  00138E  5D60               	subwf	?_ringbuf_num& (0+255),w,b
   889  001390  50DE               	movf	postinc2,w,c
   890  001392  0100               	movlb	0	; () banked
   891  001394  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
   892  001396  B0D8               	btfsc	status,0,c
   893  001398  0012               	return	
   894                           
   895                           ; BSR set to: 0
   896                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
   897  00139A  0100               	movlb	0	; () banked
   898  00139C  EE20 F004          	lfsr	2,4
   899  0013A0  5168               	movf	ringbuf_put@rb& (0+255),w,b
   900  0013A2  26D9               	addwf	fsr2l,f,c
   901  0013A4  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
   902  0013A6  22DA               	addwfc	fsr2h,f,c
   903  0013A8  CFDE F06B          	movff	postinc2,??_ringbuf_put
   904  0013AC  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
   905  0013B0  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
   906  0013B4  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
   907  0013B8  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
   908  0013BC  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
   909  0013C0  0100               	movlb	0	; () banked
   910  0013C2  516B               	movf	??_ringbuf_put& (0+255),w,b
   911  0013C4  0100               	movlb	0	; () banked
   912  0013C6  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
   913  0013C8  6ED9               	movwf	fsr2l,c
   914  0013CA  0100               	movlb	0	; () banked
   915  0013CC  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
   916  0013CE  0100               	movlb	0	; () banked
   917  0013D0  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
   918  0013D2  6EDA               	movwf	fsr2h,c
   919  0013D4  C06A  FFDF         	movff	ringbuf_put@asciicode,indf2
   920                           
   921                           ; BSR set to: 0
   922                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
   923  0013D8  0100               	movlb	0	; () banked
   924  0013DA  EE20 F002          	lfsr	2,2
   925  0013DE  5168               	movf	ringbuf_put@rb& (0+255),w,b
   926  0013E0  26D9               	addwf	fsr2l,f,c
   927  0013E2  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
   928  0013E4  22DA               	addwfc	fsr2h,f,c
   929  0013E6  0100               	movlb	0	; () banked
   930  0013E8  EE10 F004          	lfsr	1,4
   931  0013EC  5168               	movf	ringbuf_put@rb& (0+255),w,b
   932  0013EE  26E1               	addwf	fsr1l,f,c
   933  0013F0  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
   934  0013F2  22E2               	addwfc	fsr1h,f,c
   935  0013F4  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
   936  0013F8  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
   937  0013FC  0E01               	movlw	1
   938  0013FE  0100               	movlb	0	; () banked
   939  001400  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
   940  001402  0E00               	movlw	0
   941  001404  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
   942  001406  50DE               	movf	postinc2,w,c
   943  001408  0100               	movlb	0	; () banked
   944  00140A  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
   945  00140C  50DE               	movf	postinc2,w,c
   946  00140E  0100               	movlb	0	; () banked
   947  001410  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
   948  001412  B0D8               	btfsc	status,0,c
   949  001414  D00B               	goto	l1842
   950                           
   951                           ; BSR set to: 0
   952  001416  0100               	movlb	0	; () banked
   953  001418  EE20 F004          	lfsr	2,4
   954  00141C  5168               	movf	ringbuf_put@rb& (0+255),w,b
   955  00141E  26D9               	addwf	fsr2l,f,c
   956  001420  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
   957  001422  22DA               	addwfc	fsr2h,f,c
   958  001424  2ADE               	incf	postinc2,f,c
   959  001426  0E00               	movlw	0
   960  001428  22DD               	addwfc	postdec2,f,c
   961  00142A  0012               	return	
   962  00142C                     l1842:
   963                           
   964                           ; BSR set to: 0
   965                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
   966  00142C  0100               	movlb	0	; () banked
   967  00142E  EE20 F004          	lfsr	2,4
   968  001432  5168               	movf	ringbuf_put@rb& (0+255),w,b
   969  001434  26D9               	addwf	fsr2l,f,c
   970  001436  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
   971  001438  22DA               	addwfc	fsr2h,f,c
   972  00143A  0E00               	movlw	0
   973  00143C  6EDE               	movwf	postinc2,c
   974  00143E  0E00               	movlw	0
   975  001440  6EDD               	movwf	postdec2,c
   976                           
   977                           ; BSR set to: 0
   978  001442  0012               	return	
   979                           
   980                           ; BSR set to: 0
   981                           
   982                           ; BSR set to: 0
   983  001444  0012               	return		;funcret
   984  001446                     __end_of_ringbuf_put:
   985                           	opt stack 0
   986                           tblptru	equ	0xFF8
   987                           tblptrh	equ	0xFF7
   988                           tblptrl	equ	0xFF6
   989                           tablat	equ	0xFF5
   990                           intcon	equ	0xFF2
   991                           postinc0	equ	0xFEE
   992                           wreg	equ	0xFE8
   993                           postinc1	equ	0xFE6
   994                           postdec1	equ	0xFE5
   995                           fsr1h	equ	0xFE2
   996                           fsr1l	equ	0xFE1
   997                           indf2	equ	0xFDF
   998                           postinc2	equ	0xFDE
   999                           postdec2	equ	0xFDD
  1000                           fsr2h	equ	0xFDA
  1001                           fsr2l	equ	0xFD9
  1002                           status	equ	0xFD8
  1003                           
  1004 ;; *************** function _ringbuf_pop *****************
  1005 ;; Defined at:
  1006 ;;		line 64 in file "../My_header\My_ringbuf.h"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  1009 ;;		 -> rx_buf(8), tx_buf(8), 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  ret             1   14[BANK0 ] unsigned char 
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  1    wreg      unsigned char 
  1014 ;; Registers used:
  1015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1021 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1022 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1023 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1024 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1025 ;;Total ram usage:        7 bytes
  1026 ;; Hardware stack levels used:    1
  1027 ;; Hardware stack levels required when called:    5
  1028 ;; This function calls:
  1029 ;;		_ringbuf_num
  1030 ;; This function is called by:
  1031 ;;		_main
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           	psect	text3
  1036  001446                     __ptext3:
  1037                           	opt stack 0
  1038  001446                     _ringbuf_pop:
  1039                           	opt stack 25
  1040                           
  1041                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
  1042                           
  1043                           ; BSR set to: 0
  1044                           ;incstack = 0
  1045  001446  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
  1046  00144A  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  1047  00144E  ECCD  F008         	call	_ringbuf_num	;wreg free
  1048  001452  0100               	movlb	0	; () banked
  1049  001454  5160               	movf	?_ringbuf_num& (0+255),w,b
  1050  001456  0100               	movlb	0	; () banked
  1051  001458  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  1052  00145A  B4D8               	btfsc	status,2,c
  1053  00145C  D059               	goto	l1964
  1054                           
  1055                           ; BSR set to: 0
  1056                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
  1057  00145E  0100               	movlb	0	; () banked
  1058  001460  EE20 F006          	lfsr	2,6
  1059  001464  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  1060  001466  26D9               	addwf	fsr2l,f,c
  1061  001468  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  1062  00146A  22DA               	addwfc	fsr2h,f,c
  1063  00146C  CFDE F06A          	movff	postinc2,??_ringbuf_pop
  1064  001470  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
  1065  001474  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
  1066  001478  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  1067  00147C  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
  1068  001480  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
  1069  001484  0100               	movlb	0	; () banked
  1070  001486  516A               	movf	??_ringbuf_pop& (0+255),w,b
  1071  001488  0100               	movlb	0	; () banked
  1072  00148A  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  1073  00148C  6ED9               	movwf	fsr2l,c
  1074  00148E  0100               	movlb	0	; () banked
  1075  001490  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  1076  001492  0100               	movlb	0	; () banked
  1077  001494  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  1078  001496  6EDA               	movwf	fsr2h,c
  1079  001498  50DF               	movf	indf2,w,c
  1080  00149A  0100               	movlb	0	; () banked
  1081  00149C  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
  1085  00149E  0100               	movlb	0	; () banked
  1086  0014A0  EE20 F002          	lfsr	2,2
  1087  0014A4  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  1088  0014A6  26D9               	addwf	fsr2l,f,c
  1089  0014A8  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  1090  0014AA  22DA               	addwfc	fsr2h,f,c
  1091  0014AC  0100               	movlb	0	; () banked
  1092  0014AE  EE10 F006          	lfsr	1,6
  1093  0014B2  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  1094  0014B4  26E1               	addwf	fsr1l,f,c
  1095  0014B6  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  1096  0014B8  22E2               	addwfc	fsr1h,f,c
  1097  0014BA  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
  1098  0014BE  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
  1099  0014C2  0E01               	movlw	1
  1100  0014C4  0100               	movlb	0	; () banked
  1101  0014C6  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  1102  0014C8  0E00               	movlw	0
  1103  0014CA  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  1104  0014CC  50DE               	movf	postinc2,w,c
  1105  0014CE  0100               	movlb	0	; () banked
  1106  0014D0  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  1107  0014D2  50DE               	movf	postinc2,w,c
  1108  0014D4  0100               	movlb	0	; () banked
  1109  0014D6  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  1110  0014D8  B0D8               	btfsc	status,0,c
  1111  0014DA  D00B               	goto	l1956
  1112                           
  1113                           ; BSR set to: 0
  1114                           ;My_header\My_ringbuf.h: 68: rb->tail++;
  1115  0014DC  0100               	movlb	0	; () banked
  1116  0014DE  EE20 F006          	lfsr	2,6
  1117  0014E2  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  1118  0014E4  26D9               	addwf	fsr2l,f,c
  1119  0014E6  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  1120  0014E8  22DA               	addwfc	fsr2h,f,c
  1121  0014EA  2ADE               	incf	postinc2,f,c
  1122  0014EC  0E00               	movlw	0
  1123  0014EE  22DD               	addwfc	postdec2,f,c
  1124                           
  1125                           ;My_header\My_ringbuf.h: 69: } else {
  1126  0014F0  D00C               	goto	l1958
  1127  0014F2                     l1956:
  1128                           
  1129                           ; BSR set to: 0
  1130                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
  1131  0014F2  0100               	movlb	0	; () banked
  1132  0014F4  EE20 F006          	lfsr	2,6
  1133  0014F8  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  1134  0014FA  26D9               	addwf	fsr2l,f,c
  1135  0014FC  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  1136  0014FE  22DA               	addwfc	fsr2h,f,c
  1137  001500  0E00               	movlw	0
  1138  001502  6EDE               	movwf	postinc2,c
  1139  001504  0E00               	movlw	0
  1140  001506  6EDD               	movwf	postdec2,c
  1141  001508  D000               	goto	l1958
  1142  00150A                     l1958:
  1143                           
  1144                           ; BSR set to: 0
  1145                           ;My_header\My_ringbuf.h: 71: }
  1146                           ;My_header\My_ringbuf.h: 72: return ret;
  1147  00150A  0100               	movlb	0	; () banked
  1148  00150C  516E               	movf	ringbuf_pop@ret& (0+255),w,b
  1149                           
  1150                           ; BSR set to: 0
  1151                           ;My_header\My_ringbuf.h: 73: } else {
  1152                           
  1153                           ; BSR set to: 0
  1154  00150E  0012               	return	
  1155  001510                     l1964:
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;My_header\My_ringbuf.h: 74: return 0;
  1159  001510  0E00               	movlw	0
  1160                           
  1161                           ; BSR set to: 0
  1162  001512  0012               	return	
  1163                           
  1164                           ; BSR set to: 0
  1165                           
  1166                           ; BSR set to: 0
  1167  001514  0012               	return		;funcret
  1168  001516                     __end_of_ringbuf_pop:
  1169                           	opt stack 0
  1170                           tblptru	equ	0xFF8
  1171                           tblptrh	equ	0xFF7
  1172                           tblptrl	equ	0xFF6
  1173                           tablat	equ	0xFF5
  1174                           intcon	equ	0xFF2
  1175                           postinc0	equ	0xFEE
  1176                           wreg	equ	0xFE8
  1177                           postinc1	equ	0xFE6
  1178                           postdec1	equ	0xFE5
  1179                           fsr1h	equ	0xFE2
  1180                           fsr1l	equ	0xFE1
  1181                           indf2	equ	0xFDF
  1182                           postinc2	equ	0xFDE
  1183                           postdec2	equ	0xFDD
  1184                           fsr2h	equ	0xFDA
  1185                           fsr2l	equ	0xFD9
  1186                           status	equ	0xFD8
  1187                           
  1188 ;; *************** function _ringbuf_num *****************
  1189 ;; Defined at:
  1190 ;;		line 31 in file "../My_header\My_ringbuf.h"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  1193 ;;		 -> rx_buf(8), tx_buf(8), 
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;		None
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  2    0[BANK0 ] unsigned int 
  1198 ;; Registers used:
  1199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1205 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1207 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1208 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1209 ;;Total ram usage:        8 bytes
  1210 ;; Hardware stack levels used:    1
  1211 ;; Hardware stack levels required when called:    4
  1212 ;; This function calls:
  1213 ;;		Nothing
  1214 ;; This function is called by:
  1215 ;;		_ringbuf_put
  1216 ;;		_ringbuf_pop
  1217 ;;		_main
  1218 ;;		_ringbuf_backspace
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text4
  1223  00119A                     __ptext4:
  1224                           	opt stack 0
  1225  00119A                     _ringbuf_num:
  1226                           	opt stack 24
  1227                           
  1228                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;incstack = 0
  1232  00119A  0100               	movlb	0	; () banked
  1233  00119C  EE20 F006          	lfsr	2,6
  1234  0011A0  5160               	movf	ringbuf_num@rb& (0+255),w,b
  1235  0011A2  26D9               	addwf	fsr2l,f,c
  1236  0011A4  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  1237  0011A6  22DA               	addwfc	fsr2h,f,c
  1238  0011A8  0100               	movlb	0	; () banked
  1239  0011AA  EE10 F004          	lfsr	1,4
  1240  0011AE  5160               	movf	ringbuf_num@rb& (0+255),w,b
  1241  0011B0  26E1               	addwf	fsr1l,f,c
  1242  0011B2  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  1243  0011B4  22E2               	addwfc	fsr1h,f,c
  1244  0011B6  50DE               	movf	postinc2,w,c
  1245  0011B8  5CE6               	subwf	postinc1,w,c
  1246  0011BA  50DE               	movf	postinc2,w,c
  1247  0011BC  58E6               	subwfb	postinc1,w,c
  1248  0011BE  A0D8               	btfss	status,0,c
  1249  0011C0  D028               	goto	l1742
  1250                           
  1251                           ; BSR set to: 0
  1252                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
  1253  0011C2  0100               	movlb	0	; () banked
  1254  0011C4  EE20 F004          	lfsr	2,4
  1255  0011C8  5160               	movf	ringbuf_num@rb& (0+255),w,b
  1256  0011CA  26D9               	addwf	fsr2l,f,c
  1257  0011CC  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  1258  0011CE  22DA               	addwfc	fsr2h,f,c
  1259  0011D0  CFDE F062          	movff	postinc2,??_ringbuf_num
  1260  0011D4  CFDD F063          	movff	postdec2,??_ringbuf_num+1
  1261  0011D8  0100               	movlb	0	; () banked
  1262  0011DA  EE20 F006          	lfsr	2,6
  1263  0011DE  5160               	movf	ringbuf_num@rb& (0+255),w,b
  1264  0011E0  26D9               	addwf	fsr2l,f,c
  1265  0011E2  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  1266  0011E4  22DA               	addwfc	fsr2h,f,c
  1267  0011E6  CFDE F064          	movff	postinc2,??_ringbuf_num+2
  1268  0011EA  CFDD F065          	movff	postdec2,??_ringbuf_num+3
  1269  0011EE  0100               	movlb	0	; () banked
  1270  0011F0  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
  1271  0011F2  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
  1272  0011F4  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
  1273  0011F6  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
  1274  0011F8  0100               	movlb	0	; () banked
  1275  0011FA  5162               	movf	??_ringbuf_num& (0+255),w,b
  1276  0011FC  0100               	movlb	0	; () banked
  1277  0011FE  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
  1278  001200  0100               	movlb	0	; () banked
  1279  001202  6F60               	movwf	?_ringbuf_num& (0+255),b
  1280  001204  0100               	movlb	0	; () banked
  1281  001206  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
  1282  001208  0100               	movlb	0	; () banked
  1283  00120A  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
  1284  00120C  0100               	movlb	0	; () banked
  1285  00120E  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
  1286                           
  1287                           ; BSR set to: 0
  1288                           ;My_header\My_ringbuf.h: 34: } else {
  1289                           
  1290                           ; BSR set to: 0
  1291  001210  0012               	return	
  1292  001212                     l1742:
  1293                           
  1294                           ; BSR set to: 0
  1295                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
  1296  001212  0100               	movlb	0	; () banked
  1297  001214  EE20 F004          	lfsr	2,4
  1298  001218  5160               	movf	ringbuf_num@rb& (0+255),w,b
  1299  00121A  26D9               	addwf	fsr2l,f,c
  1300  00121C  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  1301  00121E  22DA               	addwfc	fsr2h,f,c
  1302  001220  CFDE F062          	movff	postinc2,??_ringbuf_num
  1303  001224  CFDD F063          	movff	postdec2,??_ringbuf_num+1
  1304  001228  0100               	movlb	0	; () banked
  1305  00122A  EE20 F002          	lfsr	2,2
  1306  00122E  5160               	movf	ringbuf_num@rb& (0+255),w,b
  1307  001230  26D9               	addwf	fsr2l,f,c
  1308  001232  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  1309  001234  22DA               	addwfc	fsr2h,f,c
  1310  001236  CFDE F064          	movff	postinc2,??_ringbuf_num+2
  1311  00123A  CFDD F065          	movff	postdec2,??_ringbuf_num+3
  1312  00123E  0100               	movlb	0	; () banked
  1313  001240  EE20 F006          	lfsr	2,6
  1314  001244  5160               	movf	ringbuf_num@rb& (0+255),w,b
  1315  001246  26D9               	addwf	fsr2l,f,c
  1316  001248  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  1317  00124A  22DA               	addwfc	fsr2h,f,c
  1318  00124C  CFDE F066          	movff	postinc2,??_ringbuf_num+4
  1319  001250  CFDD F067          	movff	postdec2,??_ringbuf_num+5
  1320  001254  0100               	movlb	0	; () banked
  1321  001256  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
  1322  001258  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
  1323  00125A  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
  1324  00125C  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
  1325  00125E  0100               	movlb	0	; () banked
  1326  001260  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
  1327  001262  0100               	movlb	0	; () banked
  1328  001264  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
  1329  001266  0100               	movlb	0	; () banked
  1330  001268  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
  1331  00126A  0100               	movlb	0	; () banked
  1332  00126C  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
  1333  00126E  0100               	movlb	0	; () banked
  1334  001270  5162               	movf	??_ringbuf_num& (0+255),w,b
  1335  001272  0100               	movlb	0	; () banked
  1336  001274  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
  1337  001276  0100               	movlb	0	; () banked
  1338  001278  6F60               	movwf	?_ringbuf_num& (0+255),b
  1339  00127A  0100               	movlb	0	; () banked
  1340  00127C  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
  1341  00127E  0100               	movlb	0	; () banked
  1342  001280  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
  1343  001282  0100               	movlb	0	; () banked
  1344  001284  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
  1345                           
  1346                           ; BSR set to: 0
  1347  001286  0012               	return	
  1348                           
  1349                           ; BSR set to: 0
  1350                           
  1351                           ; BSR set to: 0
  1352  001288  0012               	return		;funcret
  1353  00128A                     __end_of_ringbuf_num:
  1354                           	opt stack 0
  1355                           tblptru	equ	0xFF8
  1356                           tblptrh	equ	0xFF7
  1357                           tblptrl	equ	0xFF6
  1358                           tablat	equ	0xFF5
  1359                           intcon	equ	0xFF2
  1360                           postinc0	equ	0xFEE
  1361                           wreg	equ	0xFE8
  1362                           postinc1	equ	0xFE6
  1363                           postdec1	equ	0xFE5
  1364                           fsr1h	equ	0xFE2
  1365                           fsr1l	equ	0xFE1
  1366                           indf2	equ	0xFDF
  1367                           postinc2	equ	0xFDE
  1368                           postdec2	equ	0xFDD
  1369                           fsr2h	equ	0xFDA
  1370                           fsr2l	equ	0xFD9
  1371                           status	equ	0xFD8
  1372                           
  1373 ;; *************** function _main_init *****************
  1374 ;; Defined at:
  1375 ;;		line 58 in file "PIC18F27J53-CTMU04.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;		None
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;		None
  1380 ;; Return value:  Size  Location     Type
  1381 ;;		None               void
  1382 ;; Registers used:
  1383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1393 ;;Total ram usage:        0 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; Hardware stack levels required when called:    9
  1396 ;; This function calls:
  1397 ;;		_CTMU_init
  1398 ;;		_I2C_LCD_init
  1399 ;;		_I2C_init
  1400 ;;		_OSC_init
  1401 ;;		_UART_init
  1402 ;;		_ringbuf_init
  1403 ;;		_timer0_init
  1404 ;;		_timer1_init
  1405 ;;		_timer3_init
  1406 ;; This function is called by:
  1407 ;;		_main
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           	psect	text5
  1412  001972                     __ptext5:
  1413                           	opt stack 0
  1414  001972                     _main_init:
  1415                           	opt stack 21
  1416                           
  1417                           ;PIC18F27J53-CTMU04.c: 59: OSC_init();
  1418                           
  1419                           ; BSR set to: 0
  1420                           ;incstack = 0
  1421  001972  ECB4  F00F         	call	_OSC_init	;wreg free
  1422                           
  1423                           ;PIC18F27J53-CTMU04.c: 60: TRISA = 0b11101111;
  1424  001976  0EEF               	movlw	239
  1425  001978  6E92               	movwf	3986,c	;volatile
  1426                           
  1427                           ;PIC18F27J53-CTMU04.c: 61: TRISB = 0b00110001;
  1428  00197A  0E31               	movlw	49
  1429  00197C  6E93               	movwf	3987,c	;volatile
  1430                           
  1431                           ;PIC18F27J53-CTMU04.c: 62: TRISC = 0b10110010;
  1432  00197E  0EB2               	movlw	178
  1433  001980  6E94               	movwf	3988,c	;volatile
  1434                           
  1435                           ;PIC18F27J53-CTMU04.c: 63: ANCON0 = 0b11110000;
  1436  001982  0EF0               	movlw	240
  1437  001984  010F               	movlb	15	; () banked
  1438  001986  6F48               	movwf	72,b	;volatile
  1439                           
  1440                           ; BSR set to: 15
  1441                           ;PIC18F27J53-CTMU04.c: 64: ANCON1 = 0b00011111;
  1442  001988  0E1F               	movlw	31
  1443  00198A  010F               	movlb	15	; () banked
  1444  00198C  6F49               	movwf	73,b	;volatile
  1445                           
  1446                           ; BSR set to: 15
  1447                           ;PIC18F27J53-CTMU04.c: 65: INTCON2bits.RBPU = 0;
  1448  00198E  9EF1               	bcf	intcon2,7,c	;volatile
  1449                           
  1450                           ; BSR set to: 15
  1451                           ;PIC18F27J53-CTMU04.c: 67: timer0_init(6);
  1452  001990  0E06               	movlw	6
  1453  001992  ECB7  F00E         	call	_timer0_init
  1454                           
  1455                           ;PIC18F27J53-CTMU04.c: 68: timer1_init(0, 2);
  1456  001996  0E02               	movlw	2
  1457  001998  0100               	movlb	0	; () banked
  1458  00199A  6F60               	movwf	timer1_init@clock_select& (0+255),b
  1459  00199C  0E00               	movlw	0
  1460  00199E  EC42  F00E         	call	_timer1_init
  1461                           
  1462                           ;PIC18F27J53-CTMU04.c: 69: timer3_init(2);
  1463  0019A2  0E02               	movlw	2
  1464  0019A4  EC22  F00F         	call	_timer3_init
  1465                           
  1466                           ;PIC18F27J53-CTMU04.c: 70: I2C_init();
  1467  0019A8  ECAB  F00F         	call	_I2C_init	;wreg free
  1468                           
  1469                           ;PIC18F27J53-CTMU04.c: 71: I2C_LCD_init();
  1470  0019AC  ECEC  F00D         	call	_I2C_LCD_init	;wreg free
  1471                           
  1472                           ;PIC18F27J53-CTMU04.c: 73: CTMU_init();
  1473  0019B0  EC4E  F00F         	call	_CTMU_init	;wreg free
  1474                           
  1475                           ;PIC18F27J53-CTMU04.c: 75: UART_init();
  1476  0019B4  EC62  F00F         	call	_UART_init	;wreg free
  1477                           
  1478                           ;PIC18F27J53-CTMU04.c: 76: static uint8_t txbuf[250];
  1479                           ;PIC18F27J53-CTMU04.c: 77: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
  1480  0019B8  0E3E               	movlw	low _tx_buf
  1481  0019BA  0100               	movlb	0	; () banked
  1482  0019BC  6F60               	movwf	ringbuf_init@rb& (0+255),b
  1483  0019BE  0E00               	movlw	high _tx_buf
  1484  0019C0  0100               	movlb	0	; () banked
  1485  0019C2  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  1486  0019C4  0E00               	movlw	low main_init@txbuf
  1487  0019C6  0100               	movlb	0	; () banked
  1488  0019C8  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  1489  0019CA  0E01               	movlw	high main_init@txbuf
  1490  0019CC  0100               	movlb	0	; () banked
  1491  0019CE  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  1492  0019D0  0E00               	movlw	0
  1493  0019D2  0100               	movlb	0	; () banked
  1494  0019D4  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  1495  0019D6  0EFA               	movlw	250
  1496  0019D8  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  1497  0019DA  EC18  F00E         	call	_ringbuf_init	;wreg free
  1498                           
  1499                           ;PIC18F27J53-CTMU04.c: 78: static uint8_t rxbuf[250];
  1500                           ;PIC18F27J53-CTMU04.c: 79: ringbuf_init(&rx_buf, rxbuf, sizeof (rxbuf));
  1501  0019DE  0E36               	movlw	low _rx_buf
  1502  0019E0  0100               	movlb	0	; () banked
  1503  0019E2  6F60               	movwf	ringbuf_init@rb& (0+255),b
  1504  0019E4  0E00               	movlw	high _rx_buf
  1505  0019E6  0100               	movlb	0	; () banked
  1506  0019E8  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  1507  0019EA  0E00               	movlw	low main_init@rxbuf
  1508  0019EC  0100               	movlb	0	; () banked
  1509  0019EE  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  1510  0019F0  0E02               	movlw	high main_init@rxbuf
  1511  0019F2  0100               	movlb	0	; () banked
  1512  0019F4  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  1513  0019F6  0E00               	movlw	0
  1514  0019F8  0100               	movlb	0	; () banked
  1515  0019FA  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  1516  0019FC  0EFA               	movlw	250
  1517  0019FE  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  1518  001A00  EC18  F00E         	call	_ringbuf_init	;wreg free
  1519  001A04  0012               	return		;funcret
  1520  001A06                     __end_of_main_init:
  1521                           	opt stack 0
  1522                           tblptru	equ	0xFF8
  1523                           tblptrh	equ	0xFF7
  1524                           tblptrl	equ	0xFF6
  1525                           tablat	equ	0xFF5
  1526                           intcon	equ	0xFF2
  1527                           intcon2	equ	0xFF1
  1528                           postinc0	equ	0xFEE
  1529                           wreg	equ	0xFE8
  1530                           postinc1	equ	0xFE6
  1531                           postdec1	equ	0xFE5
  1532                           fsr1h	equ	0xFE2
  1533                           fsr1l	equ	0xFE1
  1534                           indf2	equ	0xFDF
  1535                           postinc2	equ	0xFDE
  1536                           postdec2	equ	0xFDD
  1537                           fsr2h	equ	0xFDA
  1538                           fsr2l	equ	0xFD9
  1539                           status	equ	0xFD8
  1540                           
  1541 ;; *************** function _timer3_init *****************
  1542 ;; Defined at:
  1543 ;;		line 85 in file "../My_header\My_header.h"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;  prescaler       1    wreg     unsigned char 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  prescaler       1    1[BANK0 ] unsigned char 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;		None               void
  1550 ;; Registers used:
  1551 ;;		wreg, status,2, status,0
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1558 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1559 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1560 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1561 ;;Total ram usage:        2 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; Hardware stack levels required when called:    4
  1564 ;; This function calls:
  1565 ;;		Nothing
  1566 ;; This function is called by:
  1567 ;;		_main_init
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text6
  1572  001E44                     __ptext6:
  1573                           	opt stack 0
  1574  001E44                     _timer3_init:
  1575                           	opt stack 25
  1576                           
  1577                           ;incstack = 0
  1578                           ;timer3_init@prescaler stored from wreg
  1579  001E44  0100               	movlb	0	; () banked
  1580  001E46  6F61               	movwf	timer3_init@prescaler& (0+255),b
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;My_header\My_header.h: 86: T3CONbits.TMR3CS = 0;
  1584  001E48  0E3F               	movlw	-193
  1585  001E4A  1679               	andwf	3961,f,c	;volatile
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;My_header\My_header.h: 87: T3CONbits.T3OSCEN = 0;
  1589  001E4C  9679               	bcf	3961,3,c	;volatile
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;My_header\My_header.h: 88: T3CONbits.T3CKPS = prescaler;
  1593  001E4E  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
  1594  001E52  0100               	movlb	0	; () banked
  1595  001E54  3B60               	swapf	??_timer3_init& (0+255),f,b
  1596  001E56  5079               	movf	3961,w,c	;volatile
  1597  001E58  0100               	movlb	0	; () banked
  1598  001E5A  1960               	xorwf	??_timer3_init& (0+255),w,b
  1599  001E5C  0BCF               	andlw	-49
  1600  001E5E  1960               	xorwf	??_timer3_init& (0+255),w,b
  1601  001E60  6E79               	movwf	3961,c	;volatile
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;My_header\My_header.h: 89: T3CONbits.RD163 = 0;
  1605  001E62  9E79               	bcf	3961,7,c	;volatile
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;My_header\My_header.h: 90: T3CONbits.TMR3ON = 1;
  1609  001E64  8079               	bsf	3961,0,c	;volatile
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;My_header\My_header.h: 91: IPR2bits.TMR3IP = 0;
  1613  001E66  92A2               	bcf	4002,1,c	;volatile
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;My_header\My_header.h: 92: PIR2bits.TMR3IF = 0;
  1617  001E68  92A1               	bcf	4001,1,c	;volatile
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;My_header\My_header.h: 93: PIE2bits.TMR3IE = 1;
  1621  001E6A  82A0               	bsf	4000,1,c	;volatile
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;My_header\My_header.h: 94: INTCONbits.PEIE = 1;
  1625  001E6C  8CF2               	bsf	intcon,6,c	;volatile
  1626                           
  1627                           ; BSR set to: 0
  1628  001E6E  0012               	return		;funcret
  1629  001E70                     __end_of_timer3_init:
  1630                           	opt stack 0
  1631                           tblptru	equ	0xFF8
  1632                           tblptrh	equ	0xFF7
  1633                           tblptrl	equ	0xFF6
  1634                           tablat	equ	0xFF5
  1635                           intcon	equ	0xFF2
  1636                           intcon2	equ	0xFF1
  1637                           postinc0	equ	0xFEE
  1638                           wreg	equ	0xFE8
  1639                           postinc1	equ	0xFE6
  1640                           postdec1	equ	0xFE5
  1641                           fsr1h	equ	0xFE2
  1642                           fsr1l	equ	0xFE1
  1643                           indf2	equ	0xFDF
  1644                           postinc2	equ	0xFDE
  1645                           postdec2	equ	0xFDD
  1646                           fsr2h	equ	0xFDA
  1647                           fsr2l	equ	0xFD9
  1648                           status	equ	0xFD8
  1649                           
  1650 ;; *************** function _timer1_init *****************
  1651 ;; Defined at:
  1652 ;;		line 54 in file "../My_header\My_header.h"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;  prescaler       1    wreg     unsigned char 
  1655 ;;  clock_select    1    0[BANK0 ] unsigned char 
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;  prescaler       1    2[BANK0 ] unsigned char 
  1658 ;; Return value:  Size  Location     Type
  1659 ;;		None               void
  1660 ;; Registers used:
  1661 ;;		wreg, status,2, status,0
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1667 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1668 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1669 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1670 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1671 ;;Total ram usage:        3 bytes
  1672 ;; Hardware stack levels used:    1
  1673 ;; Hardware stack levels required when called:    4
  1674 ;; This function calls:
  1675 ;;		Nothing
  1676 ;; This function is called by:
  1677 ;;		_main_init
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           	psect	text7
  1682  001C84                     __ptext7:
  1683                           	opt stack 0
  1684  001C84                     _timer1_init:
  1685                           	opt stack 25
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;incstack = 0
  1689                           ;timer1_init@prescaler stored from wreg
  1690  001C84  0100               	movlb	0	; () banked
  1691  001C86  6F62               	movwf	timer1_init@prescaler& (0+255),b
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;My_header\My_header.h: 55: T1CONbits.TMR1CS = clock_select;
  1695  001C88  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
  1696  001C8C  0100               	movlb	0	; () banked
  1697  001C8E  3B61               	swapf	??_timer1_init& (0+255),f,b
  1698  001C90  4761               	rlncf	??_timer1_init& (0+255),f,b
  1699  001C92  4761               	rlncf	??_timer1_init& (0+255),f,b
  1700  001C94  50CD               	movf	4045,w,c	;volatile
  1701  001C96  0100               	movlb	0	; () banked
  1702  001C98  1961               	xorwf	??_timer1_init& (0+255),w,b
  1703  001C9A  0B3F               	andlw	-193
  1704  001C9C  1961               	xorwf	??_timer1_init& (0+255),w,b
  1705  001C9E  6ECD               	movwf	4045,c	;volatile
  1706                           
  1707                           ;My_header\My_header.h: 56: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  1708  001CA0  0E02               	movlw	2
  1709  001CA2  0100               	movlb	0	; () banked
  1710  001CA4  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
  1711  001CA6  A4D8               	btfss	status,2,c
  1712  001CA8  D002               	goto	l110
  1713                           
  1714                           ; BSR set to: 0
  1715  001CAA  86CD               	bsf	4045,3,c	;volatile
  1716  001CAC  D002               	goto	l1788
  1717  001CAE                     l110:
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;My_header\My_header.h: 57: else T1CONbits.T1OSCEN = 0;
  1721  001CAE  96CD               	bcf	4045,3,c	;volatile
  1722  001CB0  D000               	goto	l1788
  1723  001CB2                     l1788:
  1724                           
  1725                           ; BSR set to: 0
  1726                           ;My_header\My_header.h: 58: T1CONbits.T1CKPS = prescaler;
  1727  001CB2  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
  1728  001CB6  0100               	movlb	0	; () banked
  1729  001CB8  3B61               	swapf	??_timer1_init& (0+255),f,b
  1730  001CBA  50CD               	movf	4045,w,c	;volatile
  1731  001CBC  0100               	movlb	0	; () banked
  1732  001CBE  1961               	xorwf	??_timer1_init& (0+255),w,b
  1733  001CC0  0BCF               	andlw	-49
  1734  001CC2  1961               	xorwf	??_timer1_init& (0+255),w,b
  1735  001CC4  6ECD               	movwf	4045,c	;volatile
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;My_header\My_header.h: 59: T1CONbits.nT1SYNC = 1;
  1739  001CC6  84CD               	bsf	4045,2,c	;volatile
  1740                           
  1741                           ; BSR set to: 0
  1742                           ;My_header\My_header.h: 60: T1CONbits.RD16 = 0;
  1743  001CC8  92CD               	bcf	4045,1,c	;volatile
  1744                           
  1745                           ; BSR set to: 0
  1746                           ;My_header\My_header.h: 61: T1CONbits.TMR1ON = 1;
  1747  001CCA  80CD               	bsf	4045,0,c	;volatile
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;My_header\My_header.h: 62: IPR1bits.TMR1IP = 0;
  1751  001CCC  909F               	bcf	3999,0,c	;volatile
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;My_header\My_header.h: 63: PIR1bits.TMR1IF = 0;
  1755  001CCE  909E               	bcf	3998,0,c	;volatile
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;My_header\My_header.h: 64: PIE1bits.TMR1IE = 1;
  1759  001CD0  809D               	bsf	3997,0,c	;volatile
  1760                           
  1761                           ; BSR set to: 0
  1762                           ;My_header\My_header.h: 65: INTCONbits.PEIE = 1;
  1763  001CD2  8CF2               	bsf	intcon,6,c	;volatile
  1764                           
  1765                           ; BSR set to: 0
  1766  001CD4  0012               	return		;funcret
  1767  001CD6                     __end_of_timer1_init:
  1768                           	opt stack 0
  1769                           tblptru	equ	0xFF8
  1770                           tblptrh	equ	0xFF7
  1771                           tblptrl	equ	0xFF6
  1772                           tablat	equ	0xFF5
  1773                           intcon	equ	0xFF2
  1774                           intcon2	equ	0xFF1
  1775                           postinc0	equ	0xFEE
  1776                           wreg	equ	0xFE8
  1777                           postinc1	equ	0xFE6
  1778                           postdec1	equ	0xFE5
  1779                           fsr1h	equ	0xFE2
  1780                           fsr1l	equ	0xFE1
  1781                           indf2	equ	0xFDF
  1782                           postinc2	equ	0xFDE
  1783                           postdec2	equ	0xFDD
  1784                           fsr2h	equ	0xFDA
  1785                           fsr2l	equ	0xFD9
  1786                           status	equ	0xFD8
  1787                           
  1788 ;; *************** function _timer0_init *****************
  1789 ;; Defined at:
  1790 ;;		line 15 in file "../My_header\My_header.h"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  prescaler       1    wreg     unsigned char 
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;  prescaler       1    1[BANK0 ] unsigned char 
  1795 ;; Return value:  Size  Location     Type
  1796 ;;		None               void
  1797 ;; Registers used:
  1798 ;;		wreg, status,2, status,0
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1805 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1806 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1807 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1808 ;;Total ram usage:        2 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; Hardware stack levels required when called:    4
  1811 ;; This function calls:
  1812 ;;		Nothing
  1813 ;; This function is called by:
  1814 ;;		_main_init
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           	psect	text8
  1819  001D6E                     __ptext8:
  1820                           	opt stack 0
  1821  001D6E                     _timer0_init:
  1822                           	opt stack 25
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;incstack = 0
  1826                           ;timer0_init@prescaler stored from wreg
  1827  001D6E  0100               	movlb	0	; () banked
  1828  001D70  6F61               	movwf	timer0_init@prescaler& (0+255),b
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;My_header\My_header.h: 16: T0CONbits.TMR0ON = 1;
  1832  001D72  8ED5               	bsf	4053,7,c	;volatile
  1833                           
  1834                           ;My_header\My_header.h: 17: T0CONbits.T08BIT = 1;
  1835  001D74  8CD5               	bsf	4053,6,c	;volatile
  1836                           
  1837                           ;My_header\My_header.h: 18: T0CONbits.T0CS = 0;
  1838  001D76  9AD5               	bcf	4053,5,c	;volatile
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;My_header\My_header.h: 19: if (prescaler == 0) {
  1842  001D78  0100               	movlb	0	; () banked
  1843  001D7A  5161               	movf	timer0_init@prescaler& (0+255),w,b
  1844  001D7C  0100               	movlb	0	; () banked
  1845  001D7E  A4D8               	btfss	status,2,c
  1846  001D80  D002               	goto	l105
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;My_header\My_header.h: 20: T0CONbits.PSA = 1;
  1850  001D82  86D5               	bsf	4053,3,c	;volatile
  1851                           
  1852                           ;My_header\My_header.h: 21: } else {
  1853  001D84  D00D               	goto	l1776
  1854  001D86                     l105:
  1855                           
  1856                           ; BSR set to: 0
  1857                           ;My_header\My_header.h: 22: T0CONbits.PSA = 0;
  1858  001D86  96D5               	bcf	4053,3,c	;volatile
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;My_header\My_header.h: 23: T0CONbits.T0PS = prescaler - 1;
  1862  001D88  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
  1863  001D8C  0EFF               	movlw	255
  1864  001D8E  0100               	movlb	0	; () banked
  1865  001D90  2760               	addwf	??_timer0_init& (0+255),f,b
  1866  001D92  50D5               	movf	4053,w,c	;volatile
  1867  001D94  0100               	movlb	0	; () banked
  1868  001D96  1960               	xorwf	??_timer0_init& (0+255),w,b
  1869  001D98  0BF8               	andlw	-8
  1870  001D9A  1960               	xorwf	??_timer0_init& (0+255),w,b
  1871  001D9C  6ED5               	movwf	4053,c	;volatile
  1872  001D9E  D000               	goto	l1776
  1873  001DA0                     l1776:
  1874                           
  1875                           ; BSR set to: 0
  1876                           ;My_header\My_header.h: 24: }
  1877                           ;My_header\My_header.h: 25: INTCONbits.T0IE = 1;
  1878  001DA0  8AF2               	bsf	intcon,5,c	;volatile
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;My_header\My_header.h: 26: INTCONbits.TMR0IF = 0;
  1882  001DA2  94F2               	bcf	intcon,2,c	;volatile
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;My_header\My_header.h: 27: INTCON2bits.TMR0IP = 0;
  1886  001DA4  94F1               	bcf	intcon2,2,c	;volatile
  1887                           
  1888                           ; BSR set to: 0
  1889                           ;My_header\My_header.h: 28: INTCONbits.PEIE = 1;
  1890  001DA6  8CF2               	bsf	intcon,6,c	;volatile
  1891                           
  1892                           ; BSR set to: 0
  1893  001DA8  0012               	return		;funcret
  1894  001DAA                     __end_of_timer0_init:
  1895                           	opt stack 0
  1896                           tblptru	equ	0xFF8
  1897                           tblptrh	equ	0xFF7
  1898                           tblptrl	equ	0xFF6
  1899                           tablat	equ	0xFF5
  1900                           intcon	equ	0xFF2
  1901                           intcon2	equ	0xFF1
  1902                           postinc0	equ	0xFEE
  1903                           wreg	equ	0xFE8
  1904                           postinc1	equ	0xFE6
  1905                           postdec1	equ	0xFE5
  1906                           fsr1h	equ	0xFE2
  1907                           fsr1l	equ	0xFE1
  1908                           indf2	equ	0xFDF
  1909                           postinc2	equ	0xFDE
  1910                           postdec2	equ	0xFDD
  1911                           fsr2h	equ	0xFDA
  1912                           fsr2l	equ	0xFD9
  1913                           status	equ	0xFD8
  1914                           
  1915 ;; *************** function _ringbuf_init *****************
  1916 ;; Defined at:
  1917 ;;		line 24 in file "../My_header\My_ringbuf.h"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  1920 ;;		 -> rx_buf(8), tx_buf(8), 
  1921 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  1922 ;;		 -> main_init@rxbuf(250), main_init@txbuf(250), 
  1923 ;;  bufsize         2    4[BANK0 ] unsigned int 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;		None
  1926 ;; Return value:  Size  Location     Type
  1927 ;;		None               void
  1928 ;; Registers used:
  1929 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1935 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1938 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1939 ;;Total ram usage:        6 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; Hardware stack levels required when called:    4
  1942 ;; This function calls:
  1943 ;;		Nothing
  1944 ;; This function is called by:
  1945 ;;		_main_init
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           	psect	text9
  1950  001C30                     __ptext9:
  1951                           	opt stack 0
  1952  001C30                     _ringbuf_init:
  1953                           	opt stack 25
  1954                           
  1955                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;incstack = 0
  1959  001C30  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  1960  001C34  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  1961  001C38  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  1962  001C3C  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  1963                           
  1964                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
  1965  001C40  0100               	movlb	0	; () banked
  1966  001C42  EE20 F002          	lfsr	2,2
  1967  001C46  5160               	movf	ringbuf_init@rb& (0+255),w,b
  1968  001C48  26D9               	addwf	fsr2l,f,c
  1969  001C4A  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  1970  001C4C  22DA               	addwfc	fsr2h,f,c
  1971  001C4E  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  1972  001C52  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
  1976  001C56  0100               	movlb	0	; () banked
  1977  001C58  EE20 F004          	lfsr	2,4
  1978  001C5C  5160               	movf	ringbuf_init@rb& (0+255),w,b
  1979  001C5E  26D9               	addwf	fsr2l,f,c
  1980  001C60  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  1981  001C62  22DA               	addwfc	fsr2h,f,c
  1982  001C64  0E00               	movlw	0
  1983  001C66  6EDE               	movwf	postinc2,c
  1984  001C68  0E00               	movlw	0
  1985  001C6A  6EDD               	movwf	postdec2,c
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
  1989  001C6C  0100               	movlb	0	; () banked
  1990  001C6E  EE20 F006          	lfsr	2,6
  1991  001C72  5160               	movf	ringbuf_init@rb& (0+255),w,b
  1992  001C74  26D9               	addwf	fsr2l,f,c
  1993  001C76  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  1994  001C78  22DA               	addwfc	fsr2h,f,c
  1995  001C7A  0E00               	movlw	0
  1996  001C7C  6EDE               	movwf	postinc2,c
  1997  001C7E  0E00               	movlw	0
  1998  001C80  6EDD               	movwf	postdec2,c
  1999                           
  2000                           ; BSR set to: 0
  2001  001C82  0012               	return		;funcret
  2002  001C84                     __end_of_ringbuf_init:
  2003                           	opt stack 0
  2004                           tblptru	equ	0xFF8
  2005                           tblptrh	equ	0xFF7
  2006                           tblptrl	equ	0xFF6
  2007                           tablat	equ	0xFF5
  2008                           intcon	equ	0xFF2
  2009                           intcon2	equ	0xFF1
  2010                           postinc0	equ	0xFEE
  2011                           wreg	equ	0xFE8
  2012                           postinc1	equ	0xFE6
  2013                           postdec1	equ	0xFE5
  2014                           fsr1h	equ	0xFE2
  2015                           fsr1l	equ	0xFE1
  2016                           indf2	equ	0xFDF
  2017                           postinc2	equ	0xFDE
  2018                           postdec2	equ	0xFDD
  2019                           fsr2h	equ	0xFDA
  2020                           fsr2l	equ	0xFD9
  2021                           status	equ	0xFD8
  2022                           
  2023 ;; *************** function _UART_init *****************
  2024 ;; Defined at:
  2025 ;;		line 192 in file "../My_header\My_header.h"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;		None
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;		None
  2030 ;; Return value:  Size  Location     Type
  2031 ;;		None               void
  2032 ;; Registers used:
  2033 ;;		wreg, status,2
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2043 ;;Total ram usage:        0 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; Hardware stack levels required when called:    4
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		_main_init
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           	psect	text10
  2054  001EC4                     __ptext10:
  2055                           	opt stack 0
  2056  001EC4                     _UART_init:
  2057                           	opt stack 25
  2058                           
  2059                           ;My_header\My_header.h: 193: TXSTA1bits.TX9 = 0;
  2060                           
  2061                           ; BSR set to: 0
  2062                           ;incstack = 0
  2063  001EC4  9CAD               	bcf	4013,6,c	;volatile
  2064                           
  2065                           ;My_header\My_header.h: 194: TXSTA1bits.TXEN = 1;
  2066  001EC6  8AAD               	bsf	4013,5,c	;volatile
  2067                           
  2068                           ;My_header\My_header.h: 195: TXSTA1bits.SYNC = 0;
  2069  001EC8  98AD               	bcf	4013,4,c	;volatile
  2070                           
  2071                           ;My_header\My_header.h: 196: TXSTA1bits.BRGH = 0;
  2072  001ECA  94AD               	bcf	4013,2,c	;volatile
  2073                           
  2074                           ;My_header\My_header.h: 197: RCSTA1bits.SPEN = 1;
  2075  001ECC  8EAC               	bsf	4012,7,c	;volatile
  2076                           
  2077                           ;My_header\My_header.h: 198: RCSTA1bits.RX9 = 0;
  2078  001ECE  9CAC               	bcf	4012,6,c	;volatile
  2079                           
  2080                           ;My_header\My_header.h: 199: RCSTA1bits.CREN = 1;
  2081  001ED0  88AC               	bsf	4012,4,c	;volatile
  2082                           
  2083                           ;My_header\My_header.h: 200: BAUDCON1bits.BRG16 = 0;
  2084  001ED2  967E               	bcf	3966,3,c	;volatile
  2085                           
  2086                           ;My_header\My_header.h: 201: SPBRG1 = 48000000 / 64 / 9600 - 1;
  2087  001ED4  0E4D               	movlw	77
  2088  001ED6  6EB0               	movwf	4016,c	;volatile
  2089                           
  2090                           ;My_header\My_header.h: 202: SPBRGH1 = 0;
  2091  001ED8  0E00               	movlw	0
  2092  001EDA  6E7F               	movwf	3967,c	;volatile
  2093                           
  2094                           ;My_header\My_header.h: 203: IPR1bits.RC1IP = 0;
  2095  001EDC  9A9F               	bcf	3999,5,c	;volatile
  2096                           
  2097                           ;My_header\My_header.h: 204: PIE1bits.RCIE = 1;
  2098  001EDE  8A9D               	bsf	3997,5,c	;volatile
  2099                           
  2100                           ;My_header\My_header.h: 205: INTCONbits.PEIE = 1;
  2101  001EE0  8CF2               	bsf	intcon,6,c	;volatile
  2102  001EE2  0012               	return		;funcret
  2103  001EE4                     __end_of_UART_init:
  2104                           	opt stack 0
  2105                           tblptru	equ	0xFF8
  2106                           tblptrh	equ	0xFF7
  2107                           tblptrl	equ	0xFF6
  2108                           tablat	equ	0xFF5
  2109                           intcon	equ	0xFF2
  2110                           intcon2	equ	0xFF1
  2111                           postinc0	equ	0xFEE
  2112                           wreg	equ	0xFE8
  2113                           postinc1	equ	0xFE6
  2114                           postdec1	equ	0xFE5
  2115                           fsr1h	equ	0xFE2
  2116                           fsr1l	equ	0xFE1
  2117                           indf2	equ	0xFDF
  2118                           postinc2	equ	0xFDE
  2119                           postdec2	equ	0xFDD
  2120                           fsr2h	equ	0xFDA
  2121                           fsr2l	equ	0xFD9
  2122                           status	equ	0xFD8
  2123                           
  2124 ;; *************** function _OSC_init *****************
  2125 ;; Defined at:
  2126 ;;		line 119 in file "../My_header\My_header.h"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;		None
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;		None
  2131 ;; Return value:  Size  Location     Type
  2132 ;;		None               void
  2133 ;; Registers used:
  2134 ;;		wreg, status,2
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2144 ;;Total ram usage:        0 bytes
  2145 ;; Hardware stack levels used:    1
  2146 ;; Hardware stack levels required when called:    4
  2147 ;; This function calls:
  2148 ;;		Nothing
  2149 ;; This function is called by:
  2150 ;;		_main_init
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text11
  2155  001F68                     __ptext11:
  2156                           	opt stack 0
  2157  001F68                     _OSC_init:
  2158                           	opt stack 25
  2159                           
  2160                           ;My_header\My_header.h: 120: OSCCONbits.IRCF = 7;
  2161                           
  2162                           ;incstack = 0
  2163  001F68  88D3               	bsf	4051,4,c	;volatile
  2164  001F6A  8AD3               	bsf	4051,5,c	;volatile
  2165  001F6C  8CD3               	bsf	4051,6,c	;volatile
  2166                           
  2167                           ;My_header\My_header.h: 121: OSCTUNEbits.PLLEN = 1;
  2168  001F6E  8C9B               	bsf	3995,6,c	;volatile
  2169                           
  2170                           ;My_header\My_header.h: 122: OSCCONbits.SCS = 0;
  2171  001F70  0EFC               	movlw	-4
  2172  001F72  16D3               	andwf	4051,f,c	;volatile
  2173  001F74  0012               	return		;funcret
  2174  001F76                     __end_of_OSC_init:
  2175                           	opt stack 0
  2176                           tblptru	equ	0xFF8
  2177                           tblptrh	equ	0xFF7
  2178                           tblptrl	equ	0xFF6
  2179                           tablat	equ	0xFF5
  2180                           intcon	equ	0xFF2
  2181                           intcon2	equ	0xFF1
  2182                           postinc0	equ	0xFEE
  2183                           wreg	equ	0xFE8
  2184                           postinc1	equ	0xFE6
  2185                           postdec1	equ	0xFE5
  2186                           fsr1h	equ	0xFE2
  2187                           fsr1l	equ	0xFE1
  2188                           indf2	equ	0xFDF
  2189                           postinc2	equ	0xFDE
  2190                           postdec2	equ	0xFDD
  2191                           fsr2h	equ	0xFDA
  2192                           fsr2l	equ	0xFD9
  2193                           status	equ	0xFD8
  2194                           
  2195 ;; *************** function _I2C_init *****************
  2196 ;; Defined at:
  2197 ;;		line 25 in file "../My_header\My_I2C.h"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;		None
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;		None               void
  2204 ;; Registers used:
  2205 ;;		wreg, status,2
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2215 ;;Total ram usage:        0 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    4
  2218 ;; This function calls:
  2219 ;;		Nothing
  2220 ;; This function is called by:
  2221 ;;		_main_init
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text12
  2226  001F56                     __ptext12:
  2227                           	opt stack 0
  2228  001F56                     _I2C_init:
  2229                           	opt stack 25
  2230                           
  2231                           ;My_header\My_I2C.h: 26: SSP1STAT = 0b10000000;
  2232                           
  2233                           ;incstack = 0
  2234  001F56  0E80               	movlw	128
  2235  001F58  6EC7               	movwf	4039,c	;volatile
  2236                           
  2237                           ;My_header\My_I2C.h: 27: SSP1CON1 = 0b00101000;
  2238  001F5A  0E28               	movlw	40
  2239  001F5C  6EC6               	movwf	4038,c	;volatile
  2240                           
  2241                           ;My_header\My_I2C.h: 28: SSP1ADD = 0x13;
  2242  001F5E  0E13               	movlw	19
  2243  001F60  6EC8               	movwf	4040,c	;volatile
  2244                           
  2245                           ;My_header\My_I2C.h: 31: SSP1IF = 0;
  2246  001F62  969E               	bcf	3998,3,c	;volatile
  2247                           
  2248                           ;My_header\My_I2C.h: 32: BCL1IF = 0;
  2249  001F64  96A1               	bcf	4001,3,c	;volatile
  2250  001F66  0012               	return		;funcret
  2251  001F68                     __end_of_I2C_init:
  2252                           	opt stack 0
  2253                           tblptru	equ	0xFF8
  2254                           tblptrh	equ	0xFF7
  2255                           tblptrl	equ	0xFF6
  2256                           tablat	equ	0xFF5
  2257                           intcon	equ	0xFF2
  2258                           intcon2	equ	0xFF1
  2259                           postinc0	equ	0xFEE
  2260                           wreg	equ	0xFE8
  2261                           postinc1	equ	0xFE6
  2262                           postdec1	equ	0xFE5
  2263                           fsr1h	equ	0xFE2
  2264                           fsr1l	equ	0xFE1
  2265                           indf2	equ	0xFDF
  2266                           postinc2	equ	0xFDE
  2267                           postdec2	equ	0xFDD
  2268                           fsr2h	equ	0xFDA
  2269                           fsr2l	equ	0xFD9
  2270                           status	equ	0xFD8
  2271                           
  2272 ;; *************** function _I2C_LCD_init *****************
  2273 ;; Defined at:
  2274 ;;		line 164 in file "../My_header\My_I2C.h"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;		None               void
  2281 ;; Registers used:
  2282 ;;		wreg, status,2, status,0, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2292 ;;Total ram usage:        0 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; Hardware stack levels required when called:    8
  2295 ;; This function calls:
  2296 ;;		_Delay_ms
  2297 ;;		_I2C_LCD_Clear
  2298 ;;		_I2C_LCD_Command
  2299 ;; This function is called by:
  2300 ;;		_main_init
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text13
  2305  001BD8                     __ptext13:
  2306                           	opt stack 0
  2307  001BD8                     _I2C_LCD_init:
  2308                           	opt stack 21
  2309                           
  2310                           ;My_header\My_I2C.h: 165: Delay_ms(40);
  2311                           
  2312                           ;incstack = 0
  2313  001BD8  0E00               	movlw	0
  2314  001BDA  0100               	movlb	0	; () banked
  2315  001BDC  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
  2316  001BDE  0E28               	movlw	40
  2317  001BE0  6F60               	movwf	Delay_ms@ms& (0+255),b
  2318  001BE2  EC0B  F00F         	call	_Delay_ms	;wreg free
  2319                           
  2320                           ;My_header\My_I2C.h: 166: I2C_LCD_Command(0x38);
  2321  001BE6  0E38               	movlw	56
  2322  001BE8  ECD5  F00E         	call	_I2C_LCD_Command
  2323                           
  2324                           ;My_header\My_I2C.h: 167: I2C_LCD_Command(0x39);
  2325  001BEC  0E39               	movlw	57
  2326  001BEE  ECD5  F00E         	call	_I2C_LCD_Command
  2327                           
  2328                           ;My_header\My_I2C.h: 168: I2C_LCD_Command(0x14);
  2329  001BF2  0E14               	movlw	20
  2330  001BF4  ECD5  F00E         	call	_I2C_LCD_Command
  2331                           
  2332                           ;My_header\My_I2C.h: 169: I2C_LCD_Command(0x70);
  2333  001BF8  0E70               	movlw	112
  2334  001BFA  ECD5  F00E         	call	_I2C_LCD_Command
  2335                           
  2336                           ;My_header\My_I2C.h: 170: I2C_LCD_Command(0x56);
  2337  001BFE  0E56               	movlw	86
  2338  001C00  ECD5  F00E         	call	_I2C_LCD_Command
  2339                           
  2340                           ;My_header\My_I2C.h: 171: I2C_LCD_Command(0x6C);
  2341  001C04  0E6C               	movlw	108
  2342  001C06  ECD5  F00E         	call	_I2C_LCD_Command
  2343                           
  2344                           ;My_header\My_I2C.h: 172: Delay_ms(200);
  2345  001C0A  0E00               	movlw	0
  2346  001C0C  0100               	movlb	0	; () banked
  2347  001C0E  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
  2348  001C10  0EC8               	movlw	200
  2349  001C12  6F60               	movwf	Delay_ms@ms& (0+255),b
  2350  001C14  EC0B  F00F         	call	_Delay_ms	;wreg free
  2351                           
  2352                           ;My_header\My_I2C.h: 173: I2C_LCD_Command(0x38);
  2353  001C18  0E38               	movlw	56
  2354  001C1A  ECD5  F00E         	call	_I2C_LCD_Command
  2355                           
  2356                           ;My_header\My_I2C.h: 174: I2C_LCD_Command(0x0C);
  2357  001C1E  0E0C               	movlw	12
  2358  001C20  ECD5  F00E         	call	_I2C_LCD_Command
  2359                           
  2360                           ;My_header\My_I2C.h: 175: I2C_LCD_Command(0x06);
  2361  001C24  0E06               	movlw	6
  2362  001C26  ECD5  F00E         	call	_I2C_LCD_Command
  2363                           
  2364                           ;My_header\My_I2C.h: 176: I2C_LCD_Clear();
  2365  001C2A  EC9E  F00F         	call	_I2C_LCD_Clear	;wreg free
  2366  001C2E  0012               	return		;funcret
  2367  001C30                     __end_of_I2C_LCD_init:
  2368                           	opt stack 0
  2369                           tblptru	equ	0xFF8
  2370                           tblptrh	equ	0xFF7
  2371                           tblptrl	equ	0xFF6
  2372                           tablat	equ	0xFF5
  2373                           intcon	equ	0xFF2
  2374                           intcon2	equ	0xFF1
  2375                           postinc0	equ	0xFEE
  2376                           wreg	equ	0xFE8
  2377                           postinc1	equ	0xFE6
  2378                           postdec1	equ	0xFE5
  2379                           fsr1h	equ	0xFE2
  2380                           fsr1l	equ	0xFE1
  2381                           indf2	equ	0xFDF
  2382                           postinc2	equ	0xFDE
  2383                           postdec2	equ	0xFDD
  2384                           fsr2h	equ	0xFDA
  2385                           fsr2l	equ	0xFD9
  2386                           status	equ	0xFD8
  2387                           
  2388 ;; *************** function _I2C_LCD_Clear *****************
  2389 ;; Defined at:
  2390 ;;		line 107 in file "../My_header\My_I2C.h"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;		None
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;		None
  2395 ;; Return value:  Size  Location     Type
  2396 ;;		None               void
  2397 ;; Registers used:
  2398 ;;		wreg, status,2, status,0, cstack
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2406 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2407 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2408 ;;Total ram usage:        1 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; Hardware stack levels required when called:    7
  2411 ;; This function calls:
  2412 ;;		_I2C_LCD_Command
  2413 ;; This function is called by:
  2414 ;;		_I2C_LCD_init
  2415 ;;		_main
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           	psect	text14
  2420  001F3C                     __ptext14:
  2421                           	opt stack 0
  2422  001F3C                     _I2C_LCD_Clear:
  2423                           	opt stack 21
  2424                           
  2425                           ;My_header\My_I2C.h: 108: I2C_LCD_Command(0x01);
  2426                           
  2427                           ;incstack = 0
  2428  001F3C  0E01               	movlw	1
  2429  001F3E  ECD5  F00E         	call	_I2C_LCD_Command
  2430                           
  2431                           ;My_header\My_I2C.h: 109: _delay((unsigned long)((1100)*(48000000/4000000.0)));
  2432  001F42  0E12               	movlw	18
  2433  001F44  0100               	movlb	0	; () banked
  2434  001F46  6F66               	movwf	??_I2C_LCD_Clear& (0+255),b
  2435  001F48  0E23               	movlw	35
  2436  001F4A                     u1737:
  2437  001F4A  2EE8               	decfsz	wreg,f,c
  2438  001F4C  D7FE               	goto	u1737
  2439  001F4E  2F66               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
  2440  001F50  D7FC               	goto	u1737
  2441  001F52  F000               	nop	
  2442  001F54  0012               	return		;funcret
  2443  001F56                     __end_of_I2C_LCD_Clear:
  2444                           	opt stack 0
  2445                           tblptru	equ	0xFF8
  2446                           tblptrh	equ	0xFF7
  2447                           tblptrl	equ	0xFF6
  2448                           tablat	equ	0xFF5
  2449                           intcon	equ	0xFF2
  2450                           intcon2	equ	0xFF1
  2451                           postinc0	equ	0xFEE
  2452                           wreg	equ	0xFE8
  2453                           postinc1	equ	0xFE6
  2454                           postdec1	equ	0xFE5
  2455                           fsr1h	equ	0xFE2
  2456                           fsr1l	equ	0xFE1
  2457                           indf2	equ	0xFDF
  2458                           postinc2	equ	0xFDE
  2459                           postdec2	equ	0xFDD
  2460                           fsr2h	equ	0xFDA
  2461                           fsr2l	equ	0xFD9
  2462                           status	equ	0xFD8
  2463                           
  2464 ;; *************** function _Delay_ms *****************
  2465 ;; Defined at:
  2466 ;;		line 333 in file "../My_header\My_header.h"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  ms              2    0[BANK0 ] unsigned int 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;		None               void
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, status,0
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2480 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2482 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2483 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2484 ;;Total ram usage:        3 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    4
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		_I2C_LCD_init
  2491 ;;		_main
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           	psect	text15
  2496  001E16                     __ptext15:
  2497                           	opt stack 0
  2498  001E16                     _Delay_ms:
  2499                           	opt stack 24
  2500                           
  2501                           ;My_header\My_header.h: 334: while (ms--)_delay((unsigned long)((1)*(48000000/4000.0)));
  2502                           
  2503                           ;incstack = 0
  2504  001E16  D00A               	goto	l1750
  2505  001E18                     l1748:
  2506  001E18  0E10               	movlw	16
  2507  001E1A  0100               	movlb	0	; () banked
  2508  001E1C  6F62               	movwf	??_Delay_ms& (0+255),b
  2509  001E1E  0E94               	movlw	148
  2510  001E20                     u1747:
  2511  001E20  2EE8               	decfsz	wreg,f,c
  2512  001E22  D7FE               	goto	u1747
  2513  001E24  2F62               	decfsz	??_Delay_ms& (0+255),f,b
  2514  001E26  D7FC               	goto	u1747
  2515  001E28  D000               	nop2	
  2516  001E2A  D000               	goto	l1750
  2517  001E2C                     l1750:
  2518  001E2C  0100               	movlb	0	; () banked
  2519  001E2E  0760               	decf	Delay_ms@ms& (0+255),f,b
  2520  001E30  A0D8               	btfss	status,0,c
  2521  001E32  0761               	decf	(Delay_ms@ms+1)& (0+255),f,b
  2522  001E34  0100               	movlb	0	; () banked
  2523  001E36  2960               	incf	Delay_ms@ms& (0+255),w,b
  2524  001E38  E1EF               	bnz	l1748
  2525  001E3A  0100               	movlb	0	; () banked
  2526  001E3C  2961               	incf	(Delay_ms@ms+1)& (0+255),w,b
  2527  001E3E  A4D8               	btfss	status,2,c
  2528  001E40  D7EB               	goto	l1748
  2529                           
  2530                           ; BSR set to: 0
  2531                           
  2532                           ; BSR set to: 0
  2533  001E42  0012               	return		;funcret
  2534  001E44                     __end_of_Delay_ms:
  2535                           	opt stack 0
  2536                           tblptru	equ	0xFF8
  2537                           tblptrh	equ	0xFF7
  2538                           tblptrl	equ	0xFF6
  2539                           tablat	equ	0xFF5
  2540                           intcon	equ	0xFF2
  2541                           intcon2	equ	0xFF1
  2542                           postinc0	equ	0xFEE
  2543                           wreg	equ	0xFE8
  2544                           postinc1	equ	0xFE6
  2545                           postdec1	equ	0xFE5
  2546                           fsr1h	equ	0xFE2
  2547                           fsr1l	equ	0xFE1
  2548                           indf2	equ	0xFDF
  2549                           postinc2	equ	0xFDE
  2550                           postdec2	equ	0xFDD
  2551                           fsr2h	equ	0xFDA
  2552                           fsr2l	equ	0xFD9
  2553                           status	equ	0xFD8
  2554                           
  2555 ;; *************** function _CTMU_init *****************
  2556 ;; Defined at:
  2557 ;;		line 289 in file "../My_header\My_header.h"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;		None
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;		None
  2562 ;; Return value:  Size  Location     Type
  2563 ;;		None               void
  2564 ;; Registers used:
  2565 ;;		wreg, status,2
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2575 ;;Total ram usage:        0 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:    4
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_main_init
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           	psect	text16
  2586  001E9C                     __ptext16:
  2587                           	opt stack 0
  2588  001E9C                     _CTMU_init:
  2589                           	opt stack 25
  2590                           
  2591                           ;My_header\My_header.h: 290: CTMUCONH = 0x00;
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;incstack = 0
  2595  001E9C  0E00               	movlw	0
  2596  001E9E  6EB3               	movwf	4019,c	;volatile
  2597                           
  2598                           ;My_header\My_header.h: 291: CTMUCONL = 0x90;
  2599  001EA0  0E90               	movlw	144
  2600  001EA2  6EB2               	movwf	4018,c	;volatile
  2601                           
  2602                           ;My_header\My_header.h: 292: CTMUICON = 0x01;
  2603  001EA4  0E01               	movlw	1
  2604  001EA6  6EB1               	movwf	4017,c	;volatile
  2605                           
  2606                           ;My_header\My_header.h: 294: ADCON1bits.ADFM = 1;
  2607  001EA8  8EC1               	bsf	4033,7,c	;volatile
  2608                           
  2609                           ;My_header\My_header.h: 295: ADCON1bits.ADCAL = 0;
  2610  001EAA  9CC1               	bcf	4033,6,c	;volatile
  2611                           
  2612                           ;My_header\My_header.h: 296: ADCON1bits.ACQT = 1;
  2613  001EAC  50C1               	movf	4033,w,c	;volatile
  2614  001EAE  0BC7               	andlw	-57
  2615  001EB0  0908               	iorlw	8
  2616  001EB2  6EC1               	movwf	4033,c	;volatile
  2617                           
  2618                           ;My_header\My_header.h: 297: ADCON1bits.ADCS = 6;
  2619  001EB4  50C1               	movf	4033,w,c	;volatile
  2620  001EB6  0BF8               	andlw	-8
  2621  001EB8  0906               	iorlw	6
  2622  001EBA  6EC1               	movwf	4033,c	;volatile
  2623                           
  2624                           ;My_header\My_header.h: 299: ADCON0bits.VCFG0 = 0;
  2625  001EBC  9CC2               	bcf	4034,6,c	;volatile
  2626                           
  2627                           ;My_header\My_header.h: 300: ADCON0bits.VCFG1 = 0;
  2628  001EBE  9EC2               	bcf	4034,7,c	;volatile
  2629                           
  2630                           ;My_header\My_header.h: 301: ADCON0bits.ADON = 1;
  2631  001EC0  80C2               	bsf	4034,0,c	;volatile
  2632  001EC2  0012               	return		;funcret
  2633  001EC4                     __end_of_CTMU_init:
  2634                           	opt stack 0
  2635                           tblptru	equ	0xFF8
  2636                           tblptrh	equ	0xFF7
  2637                           tblptrl	equ	0xFF6
  2638                           tablat	equ	0xFF5
  2639                           intcon	equ	0xFF2
  2640                           intcon2	equ	0xFF1
  2641                           postinc0	equ	0xFEE
  2642                           wreg	equ	0xFE8
  2643                           postinc1	equ	0xFE6
  2644                           postdec1	equ	0xFE5
  2645                           fsr1h	equ	0xFE2
  2646                           fsr1l	equ	0xFE1
  2647                           indf2	equ	0xFDF
  2648                           postinc2	equ	0xFDE
  2649                           postdec2	equ	0xFDD
  2650                           fsr2h	equ	0xFDA
  2651                           fsr2l	equ	0xFD9
  2652                           status	equ	0xFD8
  2653                           
  2654 ;; *************** function ___lwdiv *****************
  2655 ;; Defined at:
  2656 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;  dividend        2   22[BANK0 ] unsigned int 
  2659 ;;  divisor         2   24[BANK0 ] unsigned int 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  quotient        2   26[BANK0 ] unsigned int 
  2662 ;;  counter         1   28[BANK0 ] unsigned char 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  2   22[BANK0 ] unsigned int 
  2665 ;; Registers used:
  2666 ;;		wreg, status,2, status,0
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2672 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2673 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2675 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2676 ;;Total ram usage:        7 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:    4
  2679 ;; This function calls:
  2680 ;;		Nothing
  2681 ;; This function is called by:
  2682 ;;		_main
  2683 ;;		_ringbuf_put_num
  2684 ;;		_tx_sendn
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           	psect	text17
  2689  001A92                     __ptext17:
  2690                           	opt stack 0
  2691  001A92                     ___lwdiv:
  2692                           	opt stack 26
  2693                           
  2694                           ;incstack = 0
  2695  001A92  0E00               	movlw	0
  2696  001A94  0100               	movlb	0	; () banked
  2697  001A96  6F7B               	movwf	(___lwdiv@quotient+1)& (0+255),b
  2698  001A98  0E00               	movlw	0
  2699  001A9A  6F7A               	movwf	___lwdiv@quotient& (0+255),b
  2700                           
  2701                           ; BSR set to: 0
  2702  001A9C  0100               	movlb	0	; () banked
  2703  001A9E  5178               	movf	___lwdiv@divisor& (0+255),w,b
  2704  001AA0  0100               	movlb	0	; () banked
  2705  001AA2  1179               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  2706  001AA4  B4D8               	btfsc	status,2,c
  2707  001AA6  D031               	goto	l881
  2708                           
  2709                           ; BSR set to: 0
  2710  001AA8  0E01               	movlw	1
  2711  001AAA  0100               	movlb	0	; () banked
  2712  001AAC  6F7C               	movwf	___lwdiv@counter& (0+255),b
  2713  001AAE  D007               	goto	l2142
  2714  001AB0                     l2140:
  2715                           
  2716                           ; BSR set to: 0
  2717  001AB0  0100               	movlb	0	; () banked
  2718  001AB2  90D8               	bcf	status,0,c
  2719  001AB4  3778               	rlcf	___lwdiv@divisor& (0+255),f,b
  2720  001AB6  3779               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  2721  001AB8  0100               	movlb	0	; () banked
  2722  001ABA  2B7C               	incf	___lwdiv@counter& (0+255),f,b
  2723  001ABC  D000               	goto	l2142
  2724  001ABE                     l2142:
  2725                           
  2726                           ; BSR set to: 0
  2727  001ABE  0100               	movlb	0	; () banked
  2728  001AC0  BF79               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  2729  001AC2  D002               	goto	l2144
  2730  001AC4  D7F5               	goto	l2140
  2731                           
  2732                           ; BSR set to: 0
  2733  001AC6  D000               	goto	l2144
  2734  001AC8                     l2144:
  2735                           
  2736                           ; BSR set to: 0
  2737  001AC8  0100               	movlb	0	; () banked
  2738  001ACA  90D8               	bcf	status,0,c
  2739  001ACC  377A               	rlcf	___lwdiv@quotient& (0+255),f,b
  2740  001ACE  377B               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  2741                           
  2742                           ; BSR set to: 0
  2743  001AD0  0100               	movlb	0	; () banked
  2744  001AD2  5178               	movf	___lwdiv@divisor& (0+255),w,b
  2745  001AD4  0100               	movlb	0	; () banked
  2746  001AD6  5D76               	subwf	___lwdiv@dividend& (0+255),w,b
  2747  001AD8  0100               	movlb	0	; () banked
  2748  001ADA  5179               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2749  001ADC  0100               	movlb	0	; () banked
  2750  001ADE  5977               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  2751  001AE0  A0D8               	btfss	status,0,c
  2752  001AE2  D00B               	goto	l2152
  2753                           
  2754                           ; BSR set to: 0
  2755  001AE4  0100               	movlb	0	; () banked
  2756  001AE6  5178               	movf	___lwdiv@divisor& (0+255),w,b
  2757  001AE8  0100               	movlb	0	; () banked
  2758  001AEA  5F76               	subwf	___lwdiv@dividend& (0+255),f,b
  2759  001AEC  0100               	movlb	0	; () banked
  2760  001AEE  5179               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2761  001AF0  0100               	movlb	0	; () banked
  2762  001AF2  5B77               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  2763                           
  2764                           ; BSR set to: 0
  2765  001AF4  0100               	movlb	0	; () banked
  2766  001AF6  817A               	bsf	___lwdiv@quotient& (0+255),0,b
  2767  001AF8  D000               	goto	l2152
  2768  001AFA                     l2152:
  2769                           
  2770                           ; BSR set to: 0
  2771  001AFA  0100               	movlb	0	; () banked
  2772  001AFC  90D8               	bcf	status,0,c
  2773  001AFE  3379               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  2774  001B00  3378               	rrcf	___lwdiv@divisor& (0+255),f,b
  2775                           
  2776                           ; BSR set to: 0
  2777  001B02  0100               	movlb	0	; () banked
  2778  001B04  2F7C               	decfsz	___lwdiv@counter& (0+255),f,b
  2779  001B06  D7E0               	goto	l2144
  2780  001B08  D000               	goto	l881
  2781  001B0A                     l881:
  2782                           
  2783                           ; BSR set to: 0
  2784  001B0A  C07A  F076         	movff	___lwdiv@quotient,?___lwdiv
  2785  001B0E  C07B  F077         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2786                           
  2787                           ; BSR set to: 0
  2788  001B12  0012               	return		;funcret
  2789  001B14                     __end_of___lwdiv:
  2790                           	opt stack 0
  2791                           tblptru	equ	0xFF8
  2792                           tblptrh	equ	0xFF7
  2793                           tblptrl	equ	0xFF6
  2794                           tablat	equ	0xFF5
  2795                           intcon	equ	0xFF2
  2796                           intcon2	equ	0xFF1
  2797                           postinc0	equ	0xFEE
  2798                           wreg	equ	0xFE8
  2799                           postinc1	equ	0xFE6
  2800                           postdec1	equ	0xFE5
  2801                           fsr1h	equ	0xFE2
  2802                           fsr1l	equ	0xFE1
  2803                           indf2	equ	0xFDF
  2804                           postinc2	equ	0xFDE
  2805                           postdec2	equ	0xFDD
  2806                           fsr2h	equ	0xFDA
  2807                           fsr2l	equ	0xFD9
  2808                           status	equ	0xFD8
  2809                           
  2810 ;; *************** function _I2C_LCD_SetCursor *****************
  2811 ;; Defined at:
  2812 ;;		line 112 in file "../My_header\My_I2C.h"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  col             1    wreg     unsigned char 
  2815 ;;  row             1    6[BANK0 ] unsigned char 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  col             1    9[BANK0 ] unsigned char 
  2818 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
  2819 ;; Return value:  Size  Location     Type
  2820 ;;		None               void
  2821 ;; Registers used:
  2822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2828 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2829 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2831 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2832 ;;Total ram usage:        4 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:    7
  2835 ;; This function calls:
  2836 ;;		_I2C_LCD_Command
  2837 ;; This function is called by:
  2838 ;;		_main
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           	psect	text18
  2843  001E70                     __ptext18:
  2844                           	opt stack 0
  2845  001E70                     _I2C_LCD_SetCursor:
  2846                           	opt stack 23
  2847                           
  2848                           ; BSR set to: 0
  2849                           ;incstack = 0
  2850                           ;I2C_LCD_SetCursor@col stored from wreg
  2851  001E70  0100               	movlb	0	; () banked
  2852  001E72  6F69               	movwf	I2C_LCD_SetCursor@col& (0+255),b
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;My_header\My_I2C.h: 113: uint8_t row_offsets[] = {0x00, 0x40};
  2856  001E74  C07D  F067         	movff	I2C_LCD_SetCursor@F9845,I2C_LCD_SetCursor@row_offsets
  2857  001E78  C07E  F068         	movff	I2C_LCD_SetCursor@F9845+1,I2C_LCD_SetCursor@row_offsets+1
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;My_header\My_I2C.h: 115: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
  2861  001E7C  0100               	movlb	0	; () banked
  2862  001E7E  5166               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
  2863  001E80  0D01               	mullw	1
  2864  001E82  0E67               	movlw	low I2C_LCD_SetCursor@row_offsets
  2865  001E84  24F3               	addwf	prodl,w,c
  2866  001E86  6ED9               	movwf	fsr2l,c
  2867  001E88  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
  2868  001E8A  20F4               	addwfc	prodh,w,c
  2869  001E8C  6EDA               	movwf	fsr2h,c
  2870  001E8E  50DF               	movf	indf2,w,c
  2871  001E90  0100               	movlb	0	; () banked
  2872  001E92  2569               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
  2873  001E94  0980               	iorlw	128
  2874  001E96  ECD5  F00E         	call	_I2C_LCD_Command
  2875  001E9A  0012               	return		;funcret
  2876  001E9C                     __end_of_I2C_LCD_SetCursor:
  2877                           	opt stack 0
  2878                           tblptru	equ	0xFF8
  2879                           tblptrh	equ	0xFF7
  2880                           tblptrl	equ	0xFF6
  2881                           tablat	equ	0xFF5
  2882                           prodh	equ	0xFF4
  2883                           prodl	equ	0xFF3
  2884                           intcon	equ	0xFF2
  2885                           intcon2	equ	0xFF1
  2886                           postinc0	equ	0xFEE
  2887                           wreg	equ	0xFE8
  2888                           postinc1	equ	0xFE6
  2889                           postdec1	equ	0xFE5
  2890                           fsr1h	equ	0xFE2
  2891                           fsr1l	equ	0xFE1
  2892                           indf2	equ	0xFDF
  2893                           postinc2	equ	0xFDE
  2894                           postdec2	equ	0xFDD
  2895                           fsr2h	equ	0xFDA
  2896                           fsr2l	equ	0xFD9
  2897                           status	equ	0xFD8
  2898                           
  2899 ;; *************** function _I2C_LCD_Command *****************
  2900 ;; Defined at:
  2901 ;;		line 94 in file "../My_header\My_I2C.h"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  c               1    wreg     unsigned char 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  c               1    4[BANK0 ] unsigned char 
  2906 ;;  ans             1    5[BANK0 ] unsigned char 
  2907 ;; Return value:  Size  Location     Type
  2908 ;;		None               void
  2909 ;; Registers used:
  2910 ;;		wreg, status,2, status,0, cstack
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2917 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2919 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2920 ;;Total ram usage:        2 bytes
  2921 ;; Hardware stack levels used:    1
  2922 ;; Hardware stack levels required when called:    6
  2923 ;; This function calls:
  2924 ;;		_I2C_Send
  2925 ;;		_I2C_Start
  2926 ;;		_I2C_Stop
  2927 ;; This function is called by:
  2928 ;;		_I2C_LCD_Clear
  2929 ;;		_I2C_LCD_SetCursor
  2930 ;;		_I2C_LCD_init
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           	psect	text19
  2935  001DAA                     __ptext19:
  2936                           	opt stack 0
  2937  001DAA                     _I2C_LCD_Command:
  2938                           	opt stack 22
  2939                           
  2940                           ;incstack = 0
  2941                           ;I2C_LCD_Command@c stored from wreg
  2942  001DAA  0100               	movlb	0	; () banked
  2943  001DAC  6F64               	movwf	I2C_LCD_Command@c& (0+255),b
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;My_header\My_I2C.h: 95: uint8_t ans;
  2947                           ;My_header\My_I2C.h: 97: ans = I2C_Start(0x3E, 0);
  2948  001DAE  0E00               	movlw	0
  2949  001DB0  0100               	movlb	0	; () banked
  2950  001DB2  6F62               	movwf	I2C_Start@rw& (0+255),b
  2951  001DB4  0E3E               	movlw	62
  2952  001DB6  ECF1  F00E         	call	_I2C_Start
  2953  001DBA  0100               	movlb	0	; () banked
  2954  001DBC  6F65               	movwf	I2C_LCD_Command@ans& (0+255),b
  2955                           
  2956                           ; BSR set to: 0
  2957                           ;My_header\My_I2C.h: 98: if (ans == 0) {
  2958  001DBE  0100               	movlb	0	; () banked
  2959  001DC0  5165               	movf	I2C_LCD_Command@ans& (0+255),w,b
  2960  001DC2  0100               	movlb	0	; () banked
  2961  001DC4  A4D8               	btfss	status,2,c
  2962  001DC6  D007               	goto	l299
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;My_header\My_I2C.h: 100: I2C_Send(0b10000000);
  2966  001DC8  0E80               	movlw	128
  2967  001DCA  EC90  F00F         	call	_I2C_Send
  2968                           
  2969                           ;My_header\My_I2C.h: 101: I2C_Send(c);
  2970  001DCE  0100               	movlb	0	; () banked
  2971  001DD0  5164               	movf	I2C_LCD_Command@c& (0+255),w,b
  2972  001DD2  EC90  F00F         	call	_I2C_Send
  2973  001DD6                     l299:
  2974                           
  2975                           ;My_header\My_I2C.h: 102: }
  2976                           ;My_header\My_I2C.h: 103: I2C_Stop();
  2977  001DD6  ECBB  F00F         	call	_I2C_Stop	;wreg free
  2978                           
  2979                           ;My_header\My_I2C.h: 104: _delay((unsigned long)((26)*(48000000/4000000.0)));
  2980  001DDA  0E68               	movlw	104
  2981  001DDC                     u1757:
  2982  001DDC  2EE8               	decfsz	wreg,f,c
  2983  001DDE  D7FE               	goto	u1757
  2984  001DE0  0012               	return		;funcret
  2985  001DE2                     __end_of_I2C_LCD_Command:
  2986                           	opt stack 0
  2987                           tblptru	equ	0xFF8
  2988                           tblptrh	equ	0xFF7
  2989                           tblptrl	equ	0xFF6
  2990                           tablat	equ	0xFF5
  2991                           prodh	equ	0xFF4
  2992                           prodl	equ	0xFF3
  2993                           intcon	equ	0xFF2
  2994                           intcon2	equ	0xFF1
  2995                           postinc0	equ	0xFEE
  2996                           wreg	equ	0xFE8
  2997                           postinc1	equ	0xFE6
  2998                           postdec1	equ	0xFE5
  2999                           fsr1h	equ	0xFE2
  3000                           fsr1l	equ	0xFE1
  3001                           indf2	equ	0xFDF
  3002                           postinc2	equ	0xFDE
  3003                           postdec2	equ	0xFDD
  3004                           fsr2h	equ	0xFDA
  3005                           fsr2l	equ	0xFD9
  3006                           status	equ	0xFD8
  3007                           
  3008 ;; *************** function _I2C_LCD_Puts *****************
  3009 ;; Defined at:
  3010 ;;		line 131 in file "../My_header\My_I2C.h"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  s               2    4[BANK0 ] PTR const unsigned char 
  3013 ;;		 -> STR_2(9), STR_1(9), 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;  ans             2    7[BANK0 ] int 
  3016 ;; Return value:  Size  Location     Type
  3017 ;;		None               void
  3018 ;; Registers used:
  3019 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3025 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3026 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3027 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3028 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3029 ;;Total ram usage:        5 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; Hardware stack levels required when called:    6
  3032 ;; This function calls:
  3033 ;;		_I2C_Send
  3034 ;;		_I2C_Start
  3035 ;;		_I2C_Stop
  3036 ;; This function is called by:
  3037 ;;		_main
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           	psect	text20
  3042  001B14                     __ptext20:
  3043                           	opt stack 0
  3044  001B14                     _I2C_LCD_Puts:
  3045                           	opt stack 24
  3046                           
  3047                           ;My_header\My_I2C.h: 132: int ans;
  3048                           ;My_header\My_I2C.h: 134: ans = I2C_Start(0x3E, 0);
  3049                           
  3050                           ;incstack = 0
  3051  001B14  0E00               	movlw	0
  3052  001B16  0100               	movlb	0	; () banked
  3053  001B18  6F62               	movwf	I2C_Start@rw& (0+255),b
  3054  001B1A  0E3E               	movlw	62
  3055  001B1C  ECF1  F00E         	call	_I2C_Start
  3056  001B20  0100               	movlb	0	; () banked
  3057  001B22  6F66               	movwf	??_I2C_LCD_Puts& (0+255),b
  3058  001B24  0100               	movlb	0	; () banked
  3059  001B26  5166               	movf	??_I2C_LCD_Puts& (0+255),w,b
  3060  001B28  0100               	movlb	0	; () banked
  3061  001B2A  6F67               	movwf	I2C_LCD_Puts@ans& (0+255),b
  3062  001B2C  6B68               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;My_header\My_I2C.h: 135: if (ans == 0) {
  3066  001B2E  0100               	movlb	0	; () banked
  3067  001B30  5167               	movf	I2C_LCD_Puts@ans& (0+255),w,b
  3068  001B32  0100               	movlb	0	; () banked
  3069  001B34  1168               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
  3070  001B36  A4D8               	btfss	status,2,c
  3071  001B38  D01E               	goto	l2100
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;My_header\My_I2C.h: 136: I2C_Send(0b01000000);
  3075  001B3A  0E40               	movlw	64
  3076  001B3C  EC90  F00F         	call	_I2C_Send
  3077                           
  3078                           ;My_header\My_I2C.h: 137: while (*s) {
  3079  001B40  D00F               	goto	l2098
  3080  001B42                     l2092:
  3081                           
  3082                           ;My_header\My_I2C.h: 138: I2C_Send(*s++);
  3083  001B42  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  3084  001B46  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  3085  001B4A                     	if	0	;tblptru may be non-zero
  3086  001B4A                     	endif
  3087  001B4A                     	if	0	;tblptru may be non-zero
  3088  001B4A                     	endif
  3089  001B4A  0008               	tblrd		*
  3090  001B4C  50F5               	movf	tablat,w,c
  3091  001B4E  EC90  F00F         	call	_I2C_Send
  3092  001B52  0100               	movlb	0	; () banked
  3093  001B54  4B64               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
  3094  001B56  2B65               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;My_header\My_I2C.h: 139: _delay((unsigned long)((26)*(48000000/4000000.0)));
  3098  001B58  0E68               	movlw	104
  3099  001B5A                     u1767:
  3100  001B5A  2EE8               	decfsz	wreg,f,c
  3101  001B5C  D7FE               	goto	u1767
  3102  001B5E  D000               	goto	l2098
  3103  001B60                     l2098:
  3104  001B60  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  3105  001B64  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  3106  001B68                     	if	0	;tblptru may be non-zero
  3107  001B68                     	endif
  3108  001B68                     	if	0	;tblptru may be non-zero
  3109  001B68                     	endif
  3110  001B68  0008               	tblrd		*
  3111  001B6A  50F5               	movf	tablat,w,c
  3112  001B6C  0900               	iorlw	0
  3113  001B6E  B4D8               	btfsc	status,2,c
  3114  001B70  D002               	goto	l2100
  3115  001B72  D7E7               	goto	l2092
  3116  001B74  D000               	goto	l2100
  3117  001B76                     l2100:
  3118                           
  3119                           ;My_header\My_I2C.h: 140: }
  3120                           ;My_header\My_I2C.h: 141: }
  3121                           ;My_header\My_I2C.h: 142: I2C_Stop();
  3122  001B76  ECBB  F00F         	call	_I2C_Stop	;wreg free
  3123  001B7A  0012               	return		;funcret
  3124  001B7C                     __end_of_I2C_LCD_Puts:
  3125                           	opt stack 0
  3126                           tblptru	equ	0xFF8
  3127                           tblptrh	equ	0xFF7
  3128                           tblptrl	equ	0xFF6
  3129                           tablat	equ	0xFF5
  3130                           prodh	equ	0xFF4
  3131                           prodl	equ	0xFF3
  3132                           intcon	equ	0xFF2
  3133                           intcon2	equ	0xFF1
  3134                           postinc0	equ	0xFEE
  3135                           wreg	equ	0xFE8
  3136                           postinc1	equ	0xFE6
  3137                           postdec1	equ	0xFE5
  3138                           fsr1h	equ	0xFE2
  3139                           fsr1l	equ	0xFE1
  3140                           indf2	equ	0xFDF
  3141                           postinc2	equ	0xFDE
  3142                           postdec2	equ	0xFDD
  3143                           fsr2h	equ	0xFDA
  3144                           fsr2l	equ	0xFD9
  3145                           status	equ	0xFD8
  3146                           
  3147 ;; *************** function _I2C_Stop *****************
  3148 ;; Defined at:
  3149 ;;		line 59 in file "../My_header\My_I2C.h"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;		None
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;		None
  3154 ;; Return value:  Size  Location     Type
  3155 ;;		None               void
  3156 ;; Registers used:
  3157 ;;		wreg, status,2, status,0, cstack
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3167 ;;Total ram usage:        0 bytes
  3168 ;; Hardware stack levels used:    1
  3169 ;; Hardware stack levels required when called:    5
  3170 ;; This function calls:
  3171 ;;		_I2C_IdleCheck
  3172 ;; This function is called by:
  3173 ;;		_I2C_LCD_Command
  3174 ;;		_I2C_LCD_Puts
  3175 ;;		_I2C_LCD_Putc
  3176 ;;		_I2C_LCD_CreateChar
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           	psect	text21
  3181  001F76                     __ptext21:
  3182                           	opt stack 0
  3183  001F76                     _I2C_Stop:
  3184                           	opt stack 22
  3185                           
  3186                           ;My_header\My_I2C.h: 61: I2C_IdleCheck(0x5);
  3187                           
  3188                           ;incstack = 0
  3189  001F76  0E05               	movlw	5
  3190  001F78  EC72  F00F         	call	_I2C_IdleCheck
  3191                           
  3192                           ;My_header\My_I2C.h: 62: SSP1CON2bits.PEN = 1;
  3193  001F7C  84C5               	bsf	4037,2,c	;volatile
  3194  001F7E  0012               	return		;funcret
  3195  001F80                     __end_of_I2C_Stop:
  3196                           	opt stack 0
  3197                           tblptru	equ	0xFF8
  3198                           tblptrh	equ	0xFF7
  3199                           tblptrl	equ	0xFF6
  3200                           tablat	equ	0xFF5
  3201                           prodh	equ	0xFF4
  3202                           prodl	equ	0xFF3
  3203                           intcon	equ	0xFF2
  3204                           intcon2	equ	0xFF1
  3205                           postinc0	equ	0xFEE
  3206                           wreg	equ	0xFE8
  3207                           postinc1	equ	0xFE6
  3208                           postdec1	equ	0xFE5
  3209                           fsr1h	equ	0xFE2
  3210                           fsr1l	equ	0xFE1
  3211                           indf2	equ	0xFDF
  3212                           postinc2	equ	0xFDE
  3213                           postdec2	equ	0xFDD
  3214                           fsr2h	equ	0xFDA
  3215                           fsr2l	equ	0xFD9
  3216                           status	equ	0xFD8
  3217                           
  3218 ;; *************** function _I2C_Start *****************
  3219 ;; Defined at:
  3220 ;;		line 35 in file "../My_header\My_I2C.h"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  adrs            1    wreg     unsigned char 
  3223 ;;  rw              1    2[BANK0 ] unsigned char 
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;  adrs            1    3[BANK0 ] unsigned char 
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      unsigned char 
  3228 ;; Registers used:
  3229 ;;		wreg, status,2, status,0, cstack
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3235 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3236 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3238 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3239 ;;Total ram usage:        2 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; Hardware stack levels required when called:    5
  3242 ;; This function calls:
  3243 ;;		_I2C_IdleCheck
  3244 ;; This function is called by:
  3245 ;;		_I2C_LCD_Command
  3246 ;;		_I2C_LCD_Puts
  3247 ;;		_I2C_LCD_Putc
  3248 ;;		_I2C_LCD_CreateChar
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           	psect	text22
  3253  001DE2                     __ptext22:
  3254                           	opt stack 0
  3255  001DE2                     _I2C_Start:
  3256                           	opt stack 22
  3257                           
  3258                           ;incstack = 0
  3259                           ;I2C_Start@adrs stored from wreg
  3260  001DE2  0100               	movlb	0	; () banked
  3261  001DE4  6F63               	movwf	I2C_Start@adrs& (0+255),b
  3262                           
  3263                           ; BSR set to: 0
  3264                           ;My_header\My_I2C.h: 37: I2C_IdleCheck(0x5);
  3265  001DE6  0E05               	movlw	5
  3266  001DE8  EC72  F00F         	call	_I2C_IdleCheck
  3267                           
  3268                           ;My_header\My_I2C.h: 38: SSP1CON2bits.SEN = 1;
  3269  001DEC  80C5               	bsf	4037,0,c	;volatile
  3270                           
  3271                           ;My_header\My_I2C.h: 40: I2C_IdleCheck(0x5);
  3272  001DEE  0E05               	movlw	5
  3273  001DF0  EC72  F00F         	call	_I2C_IdleCheck
  3274                           
  3275                           ;My_header\My_I2C.h: 41: SSP1IF = 0;
  3276  001DF4  969E               	bcf	3998,3,c	;volatile
  3277                           
  3278                           ;My_header\My_I2C.h: 42: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
  3279  001DF6  0100               	movlb	0	; () banked
  3280  001DF8  5163               	movf	I2C_Start@adrs& (0+255),w,b
  3281  001DFA  2563               	addwf	I2C_Start@adrs& (0+255),w,b
  3282  001DFC  0100               	movlb	0	; () banked
  3283  001DFE  2562               	addwf	I2C_Start@rw& (0+255),w,b
  3284  001E00  6EC9               	movwf	4041,c	;volatile
  3285                           
  3286                           ;My_header\My_I2C.h: 43: while (!SSP1IF);
  3287  001E02  D000               	goto	l275
  3288  001E04                     l275:
  3289                           
  3290                           ; BSR set to: 0
  3291  001E04  A69E               	btfss	3998,3,c	;volatile
  3292  001E06  D7FE               	goto	l275
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;My_header\My_I2C.h: 44: return SSP1CON2bits.ACKSTAT;
  3296                           
  3297                           ; BSR set to: 0
  3298  001E08  ACC5               	btfss	4037,6,c	;volatile
  3299  001E0A  D002               	goto	u900
  3300  001E0C  0E01               	movlw	1
  3301  001E0E  0012               	return	
  3302  001E10                     u900:
  3303  001E10  0E00               	movlw	0
  3304  001E12  0012               	return	
  3305                           
  3306                           ; BSR set to: 0
  3307                           
  3308                           ; BSR set to: 0
  3309  001E14  0012               	return		;funcret
  3310  001E16                     __end_of_I2C_Start:
  3311                           	opt stack 0
  3312                           tblptru	equ	0xFF8
  3313                           tblptrh	equ	0xFF7
  3314                           tblptrl	equ	0xFF6
  3315                           tablat	equ	0xFF5
  3316                           prodh	equ	0xFF4
  3317                           prodl	equ	0xFF3
  3318                           intcon	equ	0xFF2
  3319                           intcon2	equ	0xFF1
  3320                           postinc0	equ	0xFEE
  3321                           wreg	equ	0xFE8
  3322                           postinc1	equ	0xFE6
  3323                           postdec1	equ	0xFE5
  3324                           fsr1h	equ	0xFE2
  3325                           fsr1l	equ	0xFE1
  3326                           indf2	equ	0xFDF
  3327                           postinc2	equ	0xFDE
  3328                           postdec2	equ	0xFDD
  3329                           fsr2h	equ	0xFDA
  3330                           fsr2l	equ	0xFD9
  3331                           status	equ	0xFD8
  3332                           
  3333 ;; *************** function _I2C_Send *****************
  3334 ;; Defined at:
  3335 ;;		line 65 in file "../My_header\My_I2C.h"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;  data            1    wreg     unsigned char 
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;  data            1    2[BANK0 ] unsigned char 
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  1    wreg      unsigned char 
  3342 ;; Registers used:
  3343 ;;		wreg, status,2, status,0, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3350 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3352 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3353 ;;Total ram usage:        1 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:    5
  3356 ;; This function calls:
  3357 ;;		_I2C_IdleCheck
  3358 ;; This function is called by:
  3359 ;;		_I2C_LCD_Command
  3360 ;;		_I2C_LCD_Puts
  3361 ;;		_I2C_LCD_Putc
  3362 ;;		_I2C_LCD_CreateChar
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           	psect	text23
  3367  001F20                     __ptext23:
  3368                           	opt stack 0
  3369  001F20                     _I2C_Send:
  3370                           	opt stack 22
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;incstack = 0
  3374                           ;I2C_Send@data stored from wreg
  3375  001F20  0100               	movlb	0	; () banked
  3376  001F22  6F62               	movwf	I2C_Send@data& (0+255),b
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;My_header\My_I2C.h: 66: I2C_IdleCheck(0x5);
  3380  001F24  0E05               	movlw	5
  3381  001F26  EC72  F00F         	call	_I2C_IdleCheck
  3382                           
  3383                           ;My_header\My_I2C.h: 67: SSP1IF = 0;
  3384  001F2A  969E               	bcf	3998,3,c	;volatile
  3385                           
  3386                           ;My_header\My_I2C.h: 68: SSP1BUF = data;
  3387  001F2C  C062  FFC9         	movff	I2C_Send@data,4041	;volatile
  3388                           
  3389                           ;My_header\My_I2C.h: 69: while (!SSP1IF);
  3390  001F30  D000               	goto	l290
  3391  001F32                     l290:
  3392  001F32  A69E               	btfss	3998,3,c	;volatile
  3393  001F34  D7FE               	goto	l290
  3394                           
  3395                           ;My_header\My_I2C.h: 70: return SSP1CON2bits.ACKSTAT;
  3396                           ;	Return value of _I2C_Send is never used
  3397  001F36  50C5               	movf	4037,w,c	;volatile
  3398  001F38  0012               	return	
  3399  001F3A  0012               	return		;funcret
  3400  001F3C                     __end_of_I2C_Send:
  3401                           	opt stack 0
  3402                           tblptru	equ	0xFF8
  3403                           tblptrh	equ	0xFF7
  3404                           tblptrl	equ	0xFF6
  3405                           tablat	equ	0xFF5
  3406                           prodh	equ	0xFF4
  3407                           prodl	equ	0xFF3
  3408                           intcon	equ	0xFF2
  3409                           intcon2	equ	0xFF1
  3410                           postinc0	equ	0xFEE
  3411                           wreg	equ	0xFE8
  3412                           postinc1	equ	0xFE6
  3413                           postdec1	equ	0xFE5
  3414                           fsr1h	equ	0xFE2
  3415                           fsr1l	equ	0xFE1
  3416                           indf2	equ	0xFDF
  3417                           postinc2	equ	0xFDE
  3418                           postdec2	equ	0xFDD
  3419                           fsr2h	equ	0xFDA
  3420                           fsr2l	equ	0xFD9
  3421                           status	equ	0xFD8
  3422                           
  3423 ;; *************** function _I2C_IdleCheck *****************
  3424 ;; Defined at:
  3425 ;;		line 21 in file "../My_header\My_I2C.h"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  mask            1    wreg     unsigned char 
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;  mask            1    1[BANK0 ] unsigned char 
  3430 ;; Return value:  Size  Location     Type
  3431 ;;		None               void
  3432 ;; Registers used:
  3433 ;;		wreg, status,2, status,0
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3440 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3441 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3442 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3443 ;;Total ram usage:        2 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; Hardware stack levels required when called:    4
  3446 ;; This function calls:
  3447 ;;		Nothing
  3448 ;; This function is called by:
  3449 ;;		_I2C_Start
  3450 ;;		_I2C_Stop
  3451 ;;		_I2C_Send
  3452 ;;		_I2C_rStart
  3453 ;;		_I2C_Receive
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           	psect	text24
  3458  001EE4                     __ptext24:
  3459                           	opt stack 0
  3460  001EE4                     _I2C_IdleCheck:
  3461                           	opt stack 22
  3462                           
  3463                           ;incstack = 0
  3464                           ;I2C_IdleCheck@mask stored from wreg
  3465  001EE4  0100               	movlb	0	; () banked
  3466  001EE6  6F61               	movwf	I2C_IdleCheck@mask& (0+255),b
  3467                           
  3468                           ; BSR set to: 0
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;My_header\My_I2C.h: 22: while ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
  3472  001EE8  D000               	goto	l1698
  3473  001EEA                     l1698:
  3474                           
  3475                           ; BSR set to: 0
  3476  001EEA  50C7               	movf	4039,w,c	;volatile
  3477  001EEC  0100               	movlb	0	; () banked
  3478  001EEE  1561               	andwf	I2C_IdleCheck@mask& (0+255),w,b
  3479  001EF0  0100               	movlb	0	; () banked
  3480  001EF2  6F60               	movwf	??_I2C_IdleCheck& (0+255),b
  3481  001EF4  50C5               	movf	4037,w,c	;volatile
  3482  001EF6  0B1F               	andlw	31
  3483  001EF8  0100               	movlb	0	; () banked
  3484  001EFA  1160               	iorwf	??_I2C_IdleCheck& (0+255),w,b
  3485  001EFC  0900               	iorlw	0
  3486  001EFE  A4D8               	btfss	status,2,c
  3487  001F00  D7F4               	goto	l1698
  3488                           
  3489                           ; BSR set to: 0
  3490                           
  3491                           ; BSR set to: 0
  3492  001F02  0012               	return		;funcret
  3493  001F04                     __end_of_I2C_IdleCheck:
  3494                           	opt stack 0
  3495                           tblptru	equ	0xFF8
  3496                           tblptrh	equ	0xFF7
  3497                           tblptrl	equ	0xFF6
  3498                           tablat	equ	0xFF5
  3499                           prodh	equ	0xFF4
  3500                           prodl	equ	0xFF3
  3501                           intcon	equ	0xFF2
  3502                           intcon2	equ	0xFF1
  3503                           postinc0	equ	0xFEE
  3504                           wreg	equ	0xFE8
  3505                           postinc1	equ	0xFE6
  3506                           postdec1	equ	0xFE5
  3507                           fsr1h	equ	0xFE2
  3508                           fsr1l	equ	0xFE1
  3509                           indf2	equ	0xFDF
  3510                           postinc2	equ	0xFDE
  3511                           postdec2	equ	0xFDD
  3512                           fsr2h	equ	0xFDA
  3513                           fsr2l	equ	0xFD9
  3514                           status	equ	0xFD8
  3515                           
  3516 ;; *************** function _CTMU_read *****************
  3517 ;; Defined at:
  3518 ;;		line 304 in file "../My_header\My_header.h"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;  ch              1    wreg     unsigned char 
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;  ch              1   16[BANK0 ] unsigned char 
  3523 ;;  i               1   21[BANK0 ] unsigned char 
  3524 ;;  sum             4   17[BANK0 ] unsigned long 
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  2   13[BANK0 ] unsigned int 
  3527 ;; Registers used:
  3528 ;;		wreg, status,2, status,0, cstack
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3534 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3535 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3536 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3537 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3538 ;;Total ram usage:        9 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; Hardware stack levels required when called:    5
  3541 ;; This function calls:
  3542 ;;		___lldiv
  3543 ;; This function is called by:
  3544 ;;		_main
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           	psect	text25
  3549  001516                     __ptext25:
  3550                           	opt stack 0
  3551  001516                     _CTMU_read:
  3552                           	opt stack 25
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;incstack = 0
  3556                           ;CTMU_read@ch stored from wreg
  3557  001516  0100               	movlb	0	; () banked
  3558  001518  6F70               	movwf	CTMU_read@ch& (0+255),b
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;My_header\My_header.h: 305: uint32_t sum = 0;
  3562  00151A  0E00               	movlw	0
  3563  00151C  0100               	movlb	0	; () banked
  3564  00151E  6F71               	movwf	CTMU_read@sum& (0+255),b
  3565  001520  0E00               	movlw	0
  3566  001522  6F72               	movwf	(CTMU_read@sum+1)& (0+255),b
  3567  001524  0E00               	movlw	0
  3568  001526  6F73               	movwf	(CTMU_read@sum+2)& (0+255),b
  3569  001528  0E00               	movlw	0
  3570  00152A  6F74               	movwf	(CTMU_read@sum+3)& (0+255),b
  3571                           
  3572                           ;My_header\My_header.h: 306: for (uint8_t i = 0; i < 10; i++) {
  3573  00152C  0E00               	movlw	0
  3574  00152E  0100               	movlb	0	; () banked
  3575  001530  6F75               	movwf	CTMU_read@i& (0+255),b
  3576  001532                     l1988:
  3577                           
  3578                           ; BSR set to: 0
  3579  001532  0E09               	movlw	9
  3580  001534  0100               	movlb	0	; () banked
  3581  001536  6575               	cpfsgt	CTMU_read@i& (0+255),b
  3582  001538  D001               	goto	l1992
  3583                           
  3584                           ; BSR set to: 0
  3585  00153A  D02C               	goto	l2020
  3586  00153C                     l1992:
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;My_header\My_header.h: 307: ADCON0bits.CHS = ch;
  3590  00153C  C070  F06F         	movff	CTMU_read@ch,??_CTMU_read
  3591  001540  0100               	movlb	0	; () banked
  3592  001542  476F               	rlncf	??_CTMU_read& (0+255),f,b
  3593  001544  476F               	rlncf	??_CTMU_read& (0+255),f,b
  3594  001546  50C2               	movf	4034,w,c	;volatile
  3595  001548  0100               	movlb	0	; () banked
  3596  00154A  196F               	xorwf	??_CTMU_read& (0+255),w,b
  3597  00154C  0BC3               	andlw	-61
  3598  00154E  196F               	xorwf	??_CTMU_read& (0+255),w,b
  3599  001550  6EC2               	movwf	4034,c	;volatile
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;My_header\My_header.h: 308: CTMUCONHbits.CTMUEN = 1;
  3603  001552  8EB3               	bsf	4019,7,c	;volatile
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;My_header\My_header.h: 309: CTMUCONLbits.EDG1STAT = 0;
  3607  001554  90B2               	bcf	4018,0,c	;volatile
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;My_header\My_header.h: 310: CTMUCONLbits.EDG2STAT = 0;
  3611  001556  92B2               	bcf	4018,1,c	;volatile
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;My_header\My_header.h: 313: CTMUCONHbits.IDISSEN = 1;
  3615  001558  82B3               	bsf	4019,1,c	;volatile
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;My_header\My_header.h: 314: _delay((unsigned long)((20)*(48000000/4000000.0)));
  3619  00155A  0E50               	movlw	80
  3620  00155C                     u1777:
  3621  00155C  2EE8               	decfsz	wreg,f,c
  3622  00155E  D7FE               	goto	u1777
  3623                           
  3624                           ;My_header\My_header.h: 315: CTMUCONHbits.IDISSEN = 0;
  3625  001560  92B3               	bcf	4019,1,c	;volatile
  3626                           
  3627                           ;My_header\My_header.h: 317: CTMUCONLbits.EDG1STAT = 1;
  3628  001562  80B2               	bsf	4018,0,c	;volatile
  3629                           
  3630                           ;My_header\My_header.h: 318: _delay((unsigned long)((5)*(48000000/4000000.0)));
  3631  001564  0E14               	movlw	20
  3632  001566                     u1787:
  3633  001566  2EE8               	decfsz	wreg,f,c
  3634  001568  D7FE               	goto	u1787
  3635                           
  3636                           ;My_header\My_header.h: 319: CTMUCONLbits.EDG1STAT = 0;
  3637  00156A  90B2               	bcf	4018,0,c	;volatile
  3638                           
  3639                           ;My_header\My_header.h: 321: PIR1bits.ADIF = 0;
  3640  00156C  9C9E               	bcf	3998,6,c	;volatile
  3641                           
  3642                           ;My_header\My_header.h: 322: ADCON0bits.GO = 1;
  3643  00156E  82C2               	bsf	4034,1,c	;volatile
  3644                           
  3645                           ;My_header\My_header.h: 323: while (!PIR1bits.ADIF);
  3646  001570  D000               	goto	l215
  3647  001572                     l215:
  3648  001572  AC9E               	btfss	3998,6,c	;volatile
  3649  001574  D7FE               	goto	l215
  3650                           
  3651                           ;My_header\My_header.h: 324: sum += ADRES;
  3652  001576  50C3               	movf	4035,w,c	;volatile
  3653  001578  0100               	movlb	0	; () banked
  3654  00157A  2771               	addwf	CTMU_read@sum& (0+255),f,b
  3655  00157C  50C4               	movf	4036,w,c	;volatile
  3656  00157E  0100               	movlb	0	; () banked
  3657  001580  2372               	addwfc	(CTMU_read@sum+1)& (0+255),f,b
  3658  001582  0E00               	movlw	0
  3659  001584  0100               	movlb	0	; () banked
  3660  001586  2373               	addwfc	(CTMU_read@sum+2)& (0+255),f,b
  3661  001588  0E00               	movlw	0
  3662  00158A  0100               	movlb	0	; () banked
  3663  00158C  2374               	addwfc	(CTMU_read@sum+3)& (0+255),f,b
  3664  00158E  0100               	movlb	0	; () banked
  3665  001590  2B75               	incf	CTMU_read@i& (0+255),f,b
  3666  001592  D7CF               	goto	l1988
  3667  001594                     l2020:
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;My_header\My_header.h: 325: }
  3671                           ;My_header\My_header.h: 326: return sum / 10 / 4;
  3672  001594  C071  F060         	movff	CTMU_read@sum,___lldiv@dividend
  3673  001598  C072  F061         	movff	CTMU_read@sum+1,___lldiv@dividend+1
  3674  00159C  C073  F062         	movff	CTMU_read@sum+2,___lldiv@dividend+2
  3675  0015A0  C074  F063         	movff	CTMU_read@sum+3,___lldiv@dividend+3
  3676  0015A4  0E0A               	movlw	10
  3677  0015A6  0100               	movlb	0	; () banked
  3678  0015A8  6F64               	movwf	___lldiv@divisor& (0+255),b
  3679  0015AA  0E00               	movlw	0
  3680  0015AC  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  3681  0015AE  0E00               	movlw	0
  3682  0015B0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  3683  0015B2  0E00               	movlw	0
  3684  0015B4  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  3685  0015B6  ECEE  F00A         	call	___lldiv	;wreg free
  3686  0015BA  0E03               	movlw	3
  3687  0015BC  D007               	goto	u1200
  3688  0015BE                     u1205:
  3689  0015BE  0100               	movlb	0	; () banked
  3690  0015C0  90D8               	bcf	status,0,c
  3691  0015C2  3363               	rrcf	(?___lldiv+3)& (0+255),f,b
  3692  0015C4  3362               	rrcf	(?___lldiv+2)& (0+255),f,b
  3693  0015C6  0100               	movlb	0	; () banked
  3694  0015C8  3361               	rrcf	(?___lldiv+1)& (0+255),f,b
  3695  0015CA  3360               	rrcf	?___lldiv& (0+255),f,b
  3696  0015CC                     u1200:
  3697  0015CC  2EE8               	decfsz	wreg,f,c
  3698  0015CE  D7F7               	goto	u1205
  3699  0015D0  C060  F06D         	movff	?___lldiv,?_CTMU_read
  3700  0015D4  C061  F06E         	movff	?___lldiv+1,?_CTMU_read+1
  3701  0015D8  0012               	return	
  3702                           
  3703                           ; BSR set to: 0
  3704                           
  3705                           ; BSR set to: 0
  3706  0015DA  0012               	return		;funcret
  3707  0015DC                     __end_of_CTMU_read:
  3708                           	opt stack 0
  3709                           tblptru	equ	0xFF8
  3710                           tblptrh	equ	0xFF7
  3711                           tblptrl	equ	0xFF6
  3712                           tablat	equ	0xFF5
  3713                           prodh	equ	0xFF4
  3714                           prodl	equ	0xFF3
  3715                           intcon	equ	0xFF2
  3716                           intcon2	equ	0xFF1
  3717                           postinc0	equ	0xFEE
  3718                           wreg	equ	0xFE8
  3719                           postinc1	equ	0xFE6
  3720                           postdec1	equ	0xFE5
  3721                           fsr1h	equ	0xFE2
  3722                           fsr1l	equ	0xFE1
  3723                           indf2	equ	0xFDF
  3724                           postinc2	equ	0xFDE
  3725                           postdec2	equ	0xFDD
  3726                           fsr2h	equ	0xFDA
  3727                           fsr2l	equ	0xFD9
  3728                           status	equ	0xFD8
  3729                           
  3730 ;; *************** function ___lldiv *****************
  3731 ;; Defined at:
  3732 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;  dividend        4    0[BANK0 ] unsigned long 
  3735 ;;  divisor         4    4[BANK0 ] unsigned long 
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;  quotient        4    8[BANK0 ] unsigned long 
  3738 ;;  counter         1   12[BANK0 ] unsigned char 
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  4    0[BANK0 ] unsigned long 
  3741 ;; Registers used:
  3742 ;;		wreg, status,2, status,0
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3748 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3749 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3751 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3752 ;;Total ram usage:       13 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; Hardware stack levels required when called:    4
  3755 ;; This function calls:
  3756 ;;		Nothing
  3757 ;; This function is called by:
  3758 ;;		_CTMU_read
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           
  3762                           	psect	text26
  3763  0015DC                     __ptext26:
  3764                           	opt stack 0
  3765  0015DC                     ___lldiv:
  3766                           	opt stack 25
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;incstack = 0
  3770  0015DC  0E00               	movlw	0
  3771  0015DE  0100               	movlb	0	; () banked
  3772  0015E0  6F68               	movwf	___lldiv@quotient& (0+255),b
  3773  0015E2  0E00               	movlw	0
  3774  0015E4  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  3775  0015E6  0E00               	movlw	0
  3776  0015E8  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  3777  0015EA  0E00               	movlw	0
  3778  0015EC  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  3779                           
  3780                           ; BSR set to: 0
  3781  0015EE  0100               	movlb	0	; () banked
  3782  0015F0  5164               	movf	___lldiv@divisor& (0+255),w,b
  3783  0015F2  0100               	movlb	0	; () banked
  3784  0015F4  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  3785  0015F6  0100               	movlb	0	; () banked
  3786  0015F8  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  3787  0015FA  0100               	movlb	0	; () banked
  3788  0015FC  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  3789  0015FE  B4D8               	btfsc	status,2,c
  3790  001600  D047               	goto	l818
  3791                           
  3792                           ; BSR set to: 0
  3793  001602  0E01               	movlw	1
  3794  001604  0100               	movlb	0	; () banked
  3795  001606  6F6C               	movwf	___lldiv@counter& (0+255),b
  3796  001608  D009               	goto	l1882
  3797  00160A                     l1880:
  3798                           
  3799                           ; BSR set to: 0
  3800  00160A  0100               	movlb	0	; () banked
  3801  00160C  90D8               	bcf	status,0,c
  3802  00160E  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  3803  001610  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  3804  001612  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  3805  001614  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  3806  001616  0100               	movlb	0	; () banked
  3807  001618  2B6C               	incf	___lldiv@counter& (0+255),f,b
  3808  00161A  D000               	goto	l1882
  3809  00161C                     l1882:
  3810                           
  3811                           ; BSR set to: 0
  3812  00161C  0100               	movlb	0	; () banked
  3813  00161E  BF67               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
  3814  001620  D002               	goto	l1884
  3815  001622  D7F3               	goto	l1880
  3816                           
  3817                           ; BSR set to: 0
  3818  001624  D000               	goto	l1884
  3819  001626                     l1884:
  3820                           
  3821                           ; BSR set to: 0
  3822  001626  0100               	movlb	0	; () banked
  3823  001628  90D8               	bcf	status,0,c
  3824  00162A  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  3825  00162C  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  3826  00162E  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  3827  001630  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  3828                           
  3829                           ; BSR set to: 0
  3830  001632  0100               	movlb	0	; () banked
  3831  001634  5164               	movf	___lldiv@divisor& (0+255),w,b
  3832  001636  0100               	movlb	0	; () banked
  3833  001638  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  3834  00163A  0100               	movlb	0	; () banked
  3835  00163C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3836  00163E  0100               	movlb	0	; () banked
  3837  001640  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  3838  001642  0100               	movlb	0	; () banked
  3839  001644  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3840  001646  0100               	movlb	0	; () banked
  3841  001648  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  3842  00164A  0100               	movlb	0	; () banked
  3843  00164C  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3844  00164E  0100               	movlb	0	; () banked
  3845  001650  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  3846  001652  A0D8               	btfss	status,0,c
  3847  001654  D013               	goto	l1892
  3848                           
  3849                           ; BSR set to: 0
  3850  001656  0100               	movlb	0	; () banked
  3851  001658  5164               	movf	___lldiv@divisor& (0+255),w,b
  3852  00165A  0100               	movlb	0	; () banked
  3853  00165C  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  3854  00165E  0100               	movlb	0	; () banked
  3855  001660  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3856  001662  0100               	movlb	0	; () banked
  3857  001664  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  3858  001666  0100               	movlb	0	; () banked
  3859  001668  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3860  00166A  0100               	movlb	0	; () banked
  3861  00166C  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  3862  00166E  0100               	movlb	0	; () banked
  3863  001670  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3864  001672  0100               	movlb	0	; () banked
  3865  001674  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  3866                           
  3867                           ; BSR set to: 0
  3868  001676  0100               	movlb	0	; () banked
  3869  001678  8168               	bsf	___lldiv@quotient& (0+255),0,b
  3870  00167A  D000               	goto	l1892
  3871  00167C                     l1892:
  3872                           
  3873                           ; BSR set to: 0
  3874  00167C  0100               	movlb	0	; () banked
  3875  00167E  90D8               	bcf	status,0,c
  3876  001680  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  3877  001682  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  3878  001684  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  3879  001686  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  3880                           
  3881                           ; BSR set to: 0
  3882  001688  0100               	movlb	0	; () banked
  3883  00168A  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  3884  00168C  D7CC               	goto	l1884
  3885  00168E  D000               	goto	l818
  3886  001690                     l818:
  3887                           
  3888                           ; BSR set to: 0
  3889  001690  C068  F060         	movff	___lldiv@quotient,?___lldiv
  3890  001694  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  3891  001698  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  3892  00169C  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  3893                           
  3894                           ; BSR set to: 0
  3895  0016A0  0012               	return		;funcret
  3896  0016A2                     __end_of___lldiv:
  3897                           	opt stack 0
  3898                           tblptru	equ	0xFF8
  3899                           tblptrh	equ	0xFF7
  3900                           tblptrl	equ	0xFF6
  3901                           tablat	equ	0xFF5
  3902                           prodh	equ	0xFF4
  3903                           prodl	equ	0xFF3
  3904                           intcon	equ	0xFF2
  3905                           intcon2	equ	0xFF1
  3906                           postinc0	equ	0xFEE
  3907                           wreg	equ	0xFE8
  3908                           postinc1	equ	0xFE6
  3909                           postdec1	equ	0xFE5
  3910                           fsr1h	equ	0xFE2
  3911                           fsr1l	equ	0xFE1
  3912                           indf2	equ	0xFDF
  3913                           postinc2	equ	0xFDE
  3914                           postdec2	equ	0xFDD
  3915                           fsr2h	equ	0xFDA
  3916                           fsr2l	equ	0xFD9
  3917                           status	equ	0xFD8
  3918                           
  3919 ;; *************** function _ISR *****************
  3920 ;; Defined at:
  3921 ;;		line 43 in file "PIC18F27J53-CTMU04.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;		None
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;		None
  3926 ;; Return value:  Size  Location     Type
  3927 ;;		None               void
  3928 ;; Registers used:
  3929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3937 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3938 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3939 ;;Total ram usage:       14 bytes
  3940 ;; Hardware stack levels used:    1
  3941 ;; Hardware stack levels required when called:    3
  3942 ;; This function calls:
  3943 ;;		_UART_ISR
  3944 ;;		_button_timer_interrupt
  3945 ;;		i2_CTMU_read
  3946 ;;		i2___lwdiv
  3947 ;; This function is called by:
  3948 ;;		Interrupt level 2
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           	psect	intcode
  3953  000008                     __pintcode:
  3954                           	opt stack 0
  3955  000008                     _ISR:
  3956                           	opt stack 21
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;incstack = 0
  3960  000008  CFFA F023          	movff	pclath,??_ISR
  3961  00000C  CFFB F024          	movff	pclatu,??_ISR+1
  3962  000010  CFE9 F025          	movff	fsr0l,??_ISR+2
  3963  000014  CFEA F026          	movff	fsr0h,??_ISR+3
  3964  000018  CFE1 F027          	movff	fsr1l,??_ISR+4
  3965  00001C  CFE2 F028          	movff	fsr1h,??_ISR+5
  3966  000020  CFD9 F029          	movff	fsr2l,??_ISR+6
  3967  000024  CFDA F02A          	movff	fsr2h,??_ISR+7
  3968  000028  CFF3 F02B          	movff	prodl,??_ISR+8
  3969  00002C  CFF4 F02C          	movff	prodh,??_ISR+9
  3970  000030  CFF6 F02D          	movff	tblptrl,??_ISR+10
  3971  000034  CFF7 F02E          	movff	tblptrh,??_ISR+11
  3972  000038  CFF8 F02F          	movff	tblptru,??_ISR+12
  3973  00003C  CFF5 F030          	movff	tablat,??_ISR+13
  3974                           
  3975                           ;PIC18F27J53-CTMU04.c: 44: UART_ISR();
  3976  000040  EC6B  F00E         	call	_UART_ISR	;wreg free
  3977                           
  3978                           ;PIC18F27J53-CTMU04.c: 45: if (INTCONbits.T0IF) {
  3979  000044  B4F2               	btfsc	intcon,2,c	;volatile
  3980                           
  3981                           ;PIC18F27J53-CTMU04.c: 46: INTCONbits.T0IF = 0;
  3982  000046  94F2               	bcf	intcon,2,c	;volatile
  3983                           
  3984                           ;PIC18F27J53-CTMU04.c: 47: }
  3985                           ;PIC18F27J53-CTMU04.c: 48: if (PIR1bits.TMR1IF) {
  3986  000048  A09E               	btfss	3998,0,c	;volatile
  3987  00004A  D004               	goto	i2l2340
  3988                           
  3989                           ;PIC18F27J53-CTMU04.c: 49: PIR1bits.TMR1IF = 0;
  3990  00004C  909E               	bcf	3998,0,c	;volatile
  3991                           
  3992                           ;PIC18F27J53-CTMU04.c: 50: TMR1H = 0x80;
  3993  00004E  0E80               	movlw	128
  3994  000050  6ECF               	movwf	4047,c	;volatile
  3995  000052  D000               	goto	i2l2340
  3996  000054                     i2l2340:
  3997                           
  3998                           ;PIC18F27J53-CTMU04.c: 51: }
  3999                           ;PIC18F27J53-CTMU04.c: 52: if (PIR2bits.TMR3IF) {
  4000  000054  A2A1               	btfss	4001,1,c	;volatile
  4001  000056  D01D               	goto	i2l338
  4002                           
  4003                           ;PIC18F27J53-CTMU04.c: 53: PIR2bits.TMR3IF = 0;
  4004  000058  92A1               	bcf	4001,1,c	;volatile
  4005                           
  4006                           ;PIC18F27J53-CTMU04.c: 54: button_timer_interrupt(&ct, !(CTMU_read(0) / ctmu_value));
  4007  00005A  0E46               	movlw	low _ct
  4008  00005C  6E1E               	movwf	button_timer_interrupt@bt,c
  4009  00005E  0E00               	movlw	high _ct
  4010  000060  6E1F               	movwf	button_timer_interrupt@bt+1,c
  4011  000062  0E00               	movlw	0
  4012  000064  EC64  F00C         	call	i2_CTMU_read
  4013  000068  C00E  F017         	movff	?i2_CTMU_read,i2___lwdiv@dividend
  4014  00006C  C00F  F018         	movff	?i2_CTMU_read+1,i2___lwdiv@dividend+1
  4015  000070  C034  F019         	movff	_ctmu_value,i2___lwdiv@divisor
  4016  000074  C035  F01A         	movff	_ctmu_value+1,i2___lwdiv@divisor+1
  4017  000078  ECBE  F00D         	call	i2___lwdiv	;wreg free
  4018  00007C  5017               	movf	?i2___lwdiv,w,c
  4019  00007E  1018               	iorwf	?i2___lwdiv+1,w,c
  4020  000080  A4D8               	btfss	status,2,c
  4021  000082  D002               	goto	i2u166_40
  4022  000084  0E01               	movlw	1
  4023  000086  D001               	goto	i2u167_40
  4024  000088                     i2u166_40:
  4025  000088  0E00               	movlw	0
  4026  00008A                     i2u167_40:
  4027  00008A  6E20               	movwf	button_timer_interrupt@sw_value,c
  4028  00008C  EC8A  F007         	call	_button_timer_interrupt	;wreg free
  4029  000090  D000               	goto	i2l338
  4030  000092                     i2l338:
  4031  000092  C030  FFF5         	movff	??_ISR+13,tablat
  4032  000096  C02F  FFF8         	movff	??_ISR+12,tblptru
  4033  00009A  C02E  FFF7         	movff	??_ISR+11,tblptrh
  4034  00009E  C02D  FFF6         	movff	??_ISR+10,tblptrl
  4035  0000A2  C02C  FFF4         	movff	??_ISR+9,prodh
  4036  0000A6  C02B  FFF3         	movff	??_ISR+8,prodl
  4037  0000AA  C02A  FFDA         	movff	??_ISR+7,fsr2h
  4038  0000AE  C029  FFD9         	movff	??_ISR+6,fsr2l
  4039  0000B2  C028  FFE2         	movff	??_ISR+5,fsr1h
  4040  0000B6  C027  FFE1         	movff	??_ISR+4,fsr1l
  4041  0000BA  C026  FFEA         	movff	??_ISR+3,fsr0h
  4042  0000BE  C025  FFE9         	movff	??_ISR+2,fsr0l
  4043  0000C2  C024  FFFB         	movff	??_ISR+1,pclatu
  4044  0000C6  C023  FFFA         	movff	??_ISR,pclath
  4045  0000CA  0011               	retfie		f
  4046  0000CC                     __end_of_ISR:
  4047                           	opt stack 0
  4048                           pclatu	equ	0xFFB
  4049                           pclath	equ	0xFFA
  4050                           tblptru	equ	0xFF8
  4051                           tblptrh	equ	0xFF7
  4052                           tblptrl	equ	0xFF6
  4053                           tablat	equ	0xFF5
  4054                           prodh	equ	0xFF4
  4055                           prodl	equ	0xFF3
  4056                           intcon	equ	0xFF2
  4057                           intcon2	equ	0xFF1
  4058                           postinc0	equ	0xFEE
  4059                           fsr0h	equ	0xFEA
  4060                           fsr0l	equ	0xFE9
  4061                           wreg	equ	0xFE8
  4062                           postinc1	equ	0xFE6
  4063                           postdec1	equ	0xFE5
  4064                           fsr1h	equ	0xFE2
  4065                           fsr1l	equ	0xFE1
  4066                           indf2	equ	0xFDF
  4067                           postinc2	equ	0xFDE
  4068                           postdec2	equ	0xFDD
  4069                           fsr2h	equ	0xFDA
  4070                           fsr2l	equ	0xFD9
  4071                           status	equ	0xFD8
  4072                           
  4073 ;; *************** function i2___lwdiv *****************
  4074 ;; Defined at:
  4075 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;  dividend        2   22[COMRAM] unsigned int 
  4078 ;;  divisor         2   24[COMRAM] unsigned int 
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;  __lwdiv         2   26[COMRAM] unsigned int 
  4081 ;;  __lwdiv         1   28[COMRAM] unsigned char 
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  2   22[COMRAM] unsigned int 
  4084 ;; Registers used:
  4085 ;;		wreg, status,2, status,0
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4091 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4092 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4094 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4095 ;;Total ram usage:        7 bytes
  4096 ;; Hardware stack levels used:    1
  4097 ;; This function calls:
  4098 ;;		Nothing
  4099 ;; This function is called by:
  4100 ;;		_ISR
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           	psect	text28
  4105  001B7C                     __ptext28:
  4106                           	opt stack 0
  4107  001B7C                     i2___lwdiv:
  4108                           	opt stack 23
  4109                           
  4110                           ;incstack = 0
  4111  001B7C  0E00               	movlw	0
  4112  001B7E  6E1C               	movwf	i2___lwdiv@quotient+1,c
  4113  001B80  0E00               	movlw	0
  4114  001B82  6E1B               	movwf	i2___lwdiv@quotient,c
  4115  001B84  5019               	movf	i2___lwdiv@divisor,w,c
  4116  001B86  101A               	iorwf	i2___lwdiv@divisor+1,w,c
  4117  001B88  B4D8               	btfsc	status,2,c
  4118  001B8A  D021               	goto	i2l881
  4119  001B8C  0E01               	movlw	1
  4120  001B8E  6E1D               	movwf	i2___lwdiv@counter,c
  4121  001B90  D005               	goto	i2l2202
  4122  001B92                     i2l2200:
  4123  001B92  90D8               	bcf	status,0,c
  4124  001B94  3619               	rlcf	i2___lwdiv@divisor,f,c
  4125  001B96  361A               	rlcf	i2___lwdiv@divisor+1,f,c
  4126  001B98  2A1D               	incf	i2___lwdiv@counter,f,c
  4127  001B9A  D000               	goto	i2l2202
  4128  001B9C                     i2l2202:
  4129  001B9C  BE1A               	btfsc	i2___lwdiv@divisor+1,7,c
  4130  001B9E  D002               	goto	i2l2204
  4131  001BA0  D7F8               	goto	i2l2200
  4132  001BA2  D000               	goto	i2l2204
  4133  001BA4                     i2l2204:
  4134  001BA4  90D8               	bcf	status,0,c
  4135  001BA6  361B               	rlcf	i2___lwdiv@quotient,f,c
  4136  001BA8  361C               	rlcf	i2___lwdiv@quotient+1,f,c
  4137  001BAA  5019               	movf	i2___lwdiv@divisor,w,c
  4138  001BAC  5C17               	subwf	i2___lwdiv@dividend,w,c
  4139  001BAE  501A               	movf	i2___lwdiv@divisor+1,w,c
  4140  001BB0  5818               	subwfb	i2___lwdiv@dividend+1,w,c
  4141  001BB2  A0D8               	btfss	status,0,c
  4142  001BB4  D006               	goto	i2l2212
  4143  001BB6  5019               	movf	i2___lwdiv@divisor,w,c
  4144  001BB8  5E17               	subwf	i2___lwdiv@dividend,f,c
  4145  001BBA  501A               	movf	i2___lwdiv@divisor+1,w,c
  4146  001BBC  5A18               	subwfb	i2___lwdiv@dividend+1,f,c
  4147  001BBE  801B               	bsf	i2___lwdiv@quotient,0,c
  4148  001BC0  D000               	goto	i2l2212
  4149  001BC2                     i2l2212:
  4150  001BC2  90D8               	bcf	status,0,c
  4151  001BC4  321A               	rrcf	i2___lwdiv@divisor+1,f,c
  4152  001BC6  3219               	rrcf	i2___lwdiv@divisor,f,c
  4153  001BC8  2E1D               	decfsz	i2___lwdiv@counter,f,c
  4154  001BCA  D7EC               	goto	i2l2204
  4155  001BCC  D000               	goto	i2l881
  4156  001BCE                     i2l881:
  4157  001BCE  C01B  F017         	movff	i2___lwdiv@quotient,?i2___lwdiv
  4158  001BD2  C01C  F018         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  4159  001BD6  0012               	return		;funcret
  4160  001BD8                     __end_ofi2___lwdiv:
  4161                           	opt stack 0
  4162                           pclatu	equ	0xFFB
  4163                           pclath	equ	0xFFA
  4164                           tblptru	equ	0xFF8
  4165                           tblptrh	equ	0xFF7
  4166                           tblptrl	equ	0xFF6
  4167                           tablat	equ	0xFF5
  4168                           prodh	equ	0xFF4
  4169                           prodl	equ	0xFF3
  4170                           intcon	equ	0xFF2
  4171                           intcon2	equ	0xFF1
  4172                           postinc0	equ	0xFEE
  4173                           fsr0h	equ	0xFEA
  4174                           fsr0l	equ	0xFE9
  4175                           wreg	equ	0xFE8
  4176                           postinc1	equ	0xFE6
  4177                           postdec1	equ	0xFE5
  4178                           fsr1h	equ	0xFE2
  4179                           fsr1l	equ	0xFE1
  4180                           indf2	equ	0xFDF
  4181                           postinc2	equ	0xFDE
  4182                           postdec2	equ	0xFDD
  4183                           fsr2h	equ	0xFDA
  4184                           fsr2l	equ	0xFD9
  4185                           status	equ	0xFD8
  4186                           
  4187 ;; *************** function i2_CTMU_read *****************
  4188 ;; Defined at:
  4189 ;;		line 304 in file "../My_header\My_header.h"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;  ch              1    wreg     unsigned char 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  ch              1   16[COMRAM] unsigned char 
  4194 ;;  CTMU_read       4   17[COMRAM] unsigned long 
  4195 ;;  CTMU_read       1   21[COMRAM] unsigned char 
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  2   13[COMRAM] unsigned int 
  4198 ;; Registers used:
  4199 ;;		wreg, status,2, status,0, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4205 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4206 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4207 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4208 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4209 ;;Total ram usage:        9 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; Hardware stack levels required when called:    1
  4212 ;; This function calls:
  4213 ;;		i2___lldiv
  4214 ;; This function is called by:
  4215 ;;		_ISR
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text29
  4220  0018C8                     __ptext29:
  4221                           	opt stack 0
  4222  0018C8                     i2_CTMU_read:
  4223                           	opt stack 22
  4224                           
  4225                           ;incstack = 0
  4226                           ;i2CTMU_read@ch stored from wreg
  4227  0018C8  6E11               	movwf	i2CTMU_read@ch,c
  4228                           
  4229                           ;My_header\My_header.h: 305: uint32_t sum = 0;
  4230  0018CA  0E00               	movlw	0
  4231  0018CC  6E12               	movwf	i2CTMU_read@sum,c
  4232  0018CE  0E00               	movlw	0
  4233  0018D0  6E13               	movwf	i2CTMU_read@sum+1,c
  4234  0018D2  0E00               	movlw	0
  4235  0018D4  6E14               	movwf	i2CTMU_read@sum+2,c
  4236  0018D6  0E00               	movlw	0
  4237  0018D8  6E15               	movwf	i2CTMU_read@sum+3,c
  4238                           
  4239                           ;My_header\My_header.h: 306: for (uint8_t i = 0; i < 10; i++) {
  4240  0018DA  0E00               	movlw	0
  4241  0018DC  6E16               	movwf	i2CTMU_read@i,c
  4242  0018DE                     i2l2158:
  4243  0018DE  0E09               	movlw	9
  4244  0018E0  6416               	cpfsgt	i2CTMU_read@i,c
  4245  0018E2  D001               	goto	i2l2162
  4246  0018E4  D025               	goto	i2l2190
  4247  0018E6                     i2l2162:
  4248                           
  4249                           ;My_header\My_header.h: 307: ADCON0bits.CHS = ch;
  4250  0018E6  C011  F010         	movff	i2CTMU_read@ch,??i2_CTMU_read
  4251  0018EA  4610               	rlncf	??i2_CTMU_read,f,c
  4252  0018EC  4610               	rlncf	??i2_CTMU_read,f,c
  4253  0018EE  50C2               	movf	4034,w,c	;volatile
  4254  0018F0  1810               	xorwf	??i2_CTMU_read,w,c
  4255  0018F2  0BC3               	andlw	-61
  4256  0018F4  1810               	xorwf	??i2_CTMU_read,w,c
  4257  0018F6  6EC2               	movwf	4034,c	;volatile
  4258                           
  4259                           ;My_header\My_header.h: 308: CTMUCONHbits.CTMUEN = 1;
  4260  0018F8  8EB3               	bsf	4019,7,c	;volatile
  4261                           
  4262                           ;My_header\My_header.h: 309: CTMUCONLbits.EDG1STAT = 0;
  4263  0018FA  90B2               	bcf	4018,0,c	;volatile
  4264                           
  4265                           ;My_header\My_header.h: 310: CTMUCONLbits.EDG2STAT = 0;
  4266  0018FC  92B2               	bcf	4018,1,c	;volatile
  4267                           
  4268                           ;My_header\My_header.h: 313: CTMUCONHbits.IDISSEN = 1;
  4269  0018FE  82B3               	bsf	4019,1,c	;volatile
  4270                           
  4271                           ;My_header\My_header.h: 314: _delay((unsigned long)((20)*(48000000/4000000.0)));
  4272  001900  0E50               	movlw	80
  4273  001902                     i2u179_47:
  4274  001902  2EE8               	decfsz	wreg,f,c
  4275  001904  D7FE               	goto	i2u179_47
  4276                           
  4277                           ;My_header\My_header.h: 315: CTMUCONHbits.IDISSEN = 0;
  4278  001906  92B3               	bcf	4019,1,c	;volatile
  4279                           
  4280                           ;My_header\My_header.h: 317: CTMUCONLbits.EDG1STAT = 1;
  4281  001908  80B2               	bsf	4018,0,c	;volatile
  4282                           
  4283                           ;My_header\My_header.h: 318: _delay((unsigned long)((5)*(48000000/4000000.0)));
  4284  00190A  0E14               	movlw	20
  4285  00190C                     i2u180_47:
  4286  00190C  2EE8               	decfsz	wreg,f,c
  4287  00190E  D7FE               	goto	i2u180_47
  4288                           
  4289                           ;My_header\My_header.h: 319: CTMUCONLbits.EDG1STAT = 0;
  4290  001910  90B2               	bcf	4018,0,c	;volatile
  4291                           
  4292                           ;My_header\My_header.h: 321: PIR1bits.ADIF = 0;
  4293  001912  9C9E               	bcf	3998,6,c	;volatile
  4294                           
  4295                           ;My_header\My_header.h: 322: ADCON0bits.GO = 1;
  4296  001914  82C2               	bsf	4034,1,c	;volatile
  4297                           
  4298                           ;My_header\My_header.h: 323: while (!PIR1bits.ADIF);
  4299  001916  D000               	goto	i2l215
  4300  001918                     i2l215:
  4301  001918  AC9E               	btfss	3998,6,c	;volatile
  4302  00191A  D7FE               	goto	i2l215
  4303                           
  4304                           ;My_header\My_header.h: 324: sum += ADRES;
  4305  00191C  50C3               	movf	4035,w,c	;volatile
  4306  00191E  2612               	addwf	i2CTMU_read@sum,f,c
  4307  001920  50C4               	movf	4036,w,c	;volatile
  4308  001922  2213               	addwfc	i2CTMU_read@sum+1,f,c
  4309  001924  0E00               	movlw	0
  4310  001926  2214               	addwfc	i2CTMU_read@sum+2,f,c
  4311  001928  0E00               	movlw	0
  4312  00192A  2215               	addwfc	i2CTMU_read@sum+3,f,c
  4313  00192C  2A16               	incf	i2CTMU_read@i,f,c
  4314  00192E  D7D7               	goto	i2l2158
  4315  001930                     i2l2190:
  4316                           
  4317                           ;My_header\My_header.h: 325: }
  4318                           ;My_header\My_header.h: 326: return sum / 10 / 4;
  4319  001930  C012  F001         	movff	i2CTMU_read@sum,i2___lldiv@dividend
  4320  001934  C013  F002         	movff	i2CTMU_read@sum+1,i2___lldiv@dividend+1
  4321  001938  C014  F003         	movff	i2CTMU_read@sum+2,i2___lldiv@dividend+2
  4322  00193C  C015  F004         	movff	i2CTMU_read@sum+3,i2___lldiv@dividend+3
  4323  001940  0E0A               	movlw	10
  4324  001942  6E05               	movwf	i2___lldiv@divisor,c
  4325  001944  0E00               	movlw	0
  4326  001946  6E06               	movwf	i2___lldiv@divisor+1,c
  4327  001948  0E00               	movlw	0
  4328  00194A  6E07               	movwf	i2___lldiv@divisor+2,c
  4329  00194C  0E00               	movlw	0
  4330  00194E  6E08               	movwf	i2___lldiv@divisor+3,c
  4331  001950  EC03  F00D         	call	i2___lldiv	;wreg free
  4332  001954  0E03               	movlw	3
  4333  001956  D005               	goto	i2u147_40
  4334  001958                     i2u147_45:
  4335  001958  90D8               	bcf	status,0,c
  4336  00195A  3204               	rrcf	?i2___lldiv+3,f,c
  4337  00195C  3203               	rrcf	?i2___lldiv+2,f,c
  4338  00195E  3202               	rrcf	?i2___lldiv+1,f,c
  4339  001960  3201               	rrcf	?i2___lldiv,f,c
  4340  001962                     i2u147_40:
  4341  001962  2EE8               	decfsz	wreg,f,c
  4342  001964  D7F9               	goto	i2u147_45
  4343  001966  C001  F00E         	movff	?i2___lldiv,?i2_CTMU_read
  4344  00196A  C002  F00F         	movff	?i2___lldiv+1,?i2_CTMU_read+1
  4345  00196E  0012               	return	
  4346  001970  0012               	return		;funcret
  4347  001972                     __end_ofi2_CTMU_read:
  4348                           	opt stack 0
  4349                           pclatu	equ	0xFFB
  4350                           pclath	equ	0xFFA
  4351                           tblptru	equ	0xFF8
  4352                           tblptrh	equ	0xFF7
  4353                           tblptrl	equ	0xFF6
  4354                           tablat	equ	0xFF5
  4355                           prodh	equ	0xFF4
  4356                           prodl	equ	0xFF3
  4357                           intcon	equ	0xFF2
  4358                           intcon2	equ	0xFF1
  4359                           postinc0	equ	0xFEE
  4360                           fsr0h	equ	0xFEA
  4361                           fsr0l	equ	0xFE9
  4362                           wreg	equ	0xFE8
  4363                           postinc1	equ	0xFE6
  4364                           postdec1	equ	0xFE5
  4365                           fsr1h	equ	0xFE2
  4366                           fsr1l	equ	0xFE1
  4367                           indf2	equ	0xFDF
  4368                           postinc2	equ	0xFDE
  4369                           postdec2	equ	0xFDD
  4370                           fsr2h	equ	0xFDA
  4371                           fsr2l	equ	0xFD9
  4372                           status	equ	0xFD8
  4373                           
  4374 ;; *************** function i2___lldiv *****************
  4375 ;; Defined at:
  4376 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;  dividend        4    0[COMRAM] unsigned long 
  4379 ;;  divisor         4    4[COMRAM] unsigned long 
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;  __lldiv         4    8[COMRAM] unsigned long 
  4382 ;;  __lldiv         1   12[COMRAM] unsigned char 
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  4    0[COMRAM] unsigned long 
  4385 ;; Registers used:
  4386 ;;		wreg, status,2, status,0
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4392 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4393 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4395 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4396 ;;Total ram usage:       13 bytes
  4397 ;; Hardware stack levels used:    1
  4398 ;; This function calls:
  4399 ;;		Nothing
  4400 ;; This function is called by:
  4401 ;;		i2_CTMU_read
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405                           	psect	text30
  4406  001A06                     __ptext30:
  4407                           	opt stack 0
  4408  001A06                     i2___lldiv:
  4409                           	opt stack 22
  4410                           
  4411                           ;incstack = 0
  4412  001A06  0E00               	movlw	0
  4413  001A08  6E09               	movwf	i2___lldiv@quotient,c
  4414  001A0A  0E00               	movlw	0
  4415  001A0C  6E0A               	movwf	i2___lldiv@quotient+1,c
  4416  001A0E  0E00               	movlw	0
  4417  001A10  6E0B               	movwf	i2___lldiv@quotient+2,c
  4418  001A12  0E00               	movlw	0
  4419  001A14  6E0C               	movwf	i2___lldiv@quotient+3,c
  4420  001A16  5005               	movf	i2___lldiv@divisor,w,c
  4421  001A18  1006               	iorwf	i2___lldiv@divisor+1,w,c
  4422  001A1A  1007               	iorwf	i2___lldiv@divisor+2,w,c
  4423  001A1C  1008               	iorwf	i2___lldiv@divisor+3,w,c
  4424  001A1E  B4D8               	btfsc	status,2,c
  4425  001A20  D02F               	goto	i2l818
  4426  001A22  0E01               	movlw	1
  4427  001A24  6E0D               	movwf	i2___lldiv@counter,c
  4428  001A26  D007               	goto	i2l1934
  4429  001A28                     i2l1932:
  4430  001A28  90D8               	bcf	status,0,c
  4431  001A2A  3605               	rlcf	i2___lldiv@divisor,f,c
  4432  001A2C  3606               	rlcf	i2___lldiv@divisor+1,f,c
  4433  001A2E  3607               	rlcf	i2___lldiv@divisor+2,f,c
  4434  001A30  3608               	rlcf	i2___lldiv@divisor+3,f,c
  4435  001A32  2A0D               	incf	i2___lldiv@counter,f,c
  4436  001A34  D000               	goto	i2l1934
  4437  001A36                     i2l1934:
  4438  001A36  BE08               	btfsc	i2___lldiv@divisor+3,7,c
  4439  001A38  D002               	goto	i2l1936
  4440  001A3A  D7F6               	goto	i2l1932
  4441  001A3C  D000               	goto	i2l1936
  4442  001A3E                     i2l1936:
  4443  001A3E  90D8               	bcf	status,0,c
  4444  001A40  3609               	rlcf	i2___lldiv@quotient,f,c
  4445  001A42  360A               	rlcf	i2___lldiv@quotient+1,f,c
  4446  001A44  360B               	rlcf	i2___lldiv@quotient+2,f,c
  4447  001A46  360C               	rlcf	i2___lldiv@quotient+3,f,c
  4448  001A48  5005               	movf	i2___lldiv@divisor,w,c
  4449  001A4A  5C01               	subwf	i2___lldiv@dividend,w,c
  4450  001A4C  5006               	movf	i2___lldiv@divisor+1,w,c
  4451  001A4E  5802               	subwfb	i2___lldiv@dividend+1,w,c
  4452  001A50  5007               	movf	i2___lldiv@divisor+2,w,c
  4453  001A52  5803               	subwfb	i2___lldiv@dividend+2,w,c
  4454  001A54  5008               	movf	i2___lldiv@divisor+3,w,c
  4455  001A56  5804               	subwfb	i2___lldiv@dividend+3,w,c
  4456  001A58  A0D8               	btfss	status,0,c
  4457  001A5A  D00A               	goto	i2l1944
  4458  001A5C  5005               	movf	i2___lldiv@divisor,w,c
  4459  001A5E  5E01               	subwf	i2___lldiv@dividend,f,c
  4460  001A60  5006               	movf	i2___lldiv@divisor+1,w,c
  4461  001A62  5A02               	subwfb	i2___lldiv@dividend+1,f,c
  4462  001A64  5007               	movf	i2___lldiv@divisor+2,w,c
  4463  001A66  5A03               	subwfb	i2___lldiv@dividend+2,f,c
  4464  001A68  5008               	movf	i2___lldiv@divisor+3,w,c
  4465  001A6A  5A04               	subwfb	i2___lldiv@dividend+3,f,c
  4466  001A6C  8009               	bsf	i2___lldiv@quotient,0,c
  4467  001A6E  D000               	goto	i2l1944
  4468  001A70                     i2l1944:
  4469  001A70  90D8               	bcf	status,0,c
  4470  001A72  3208               	rrcf	i2___lldiv@divisor+3,f,c
  4471  001A74  3207               	rrcf	i2___lldiv@divisor+2,f,c
  4472  001A76  3206               	rrcf	i2___lldiv@divisor+1,f,c
  4473  001A78  3205               	rrcf	i2___lldiv@divisor,f,c
  4474  001A7A  2E0D               	decfsz	i2___lldiv@counter,f,c
  4475  001A7C  D7E0               	goto	i2l1936
  4476  001A7E  D000               	goto	i2l818
  4477  001A80                     i2l818:
  4478  001A80  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
  4479  001A84  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
  4480  001A88  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
  4481  001A8C  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
  4482  001A90  0012               	return		;funcret
  4483  001A92                     __end_ofi2___lldiv:
  4484                           	opt stack 0
  4485                           pclatu	equ	0xFFB
  4486                           pclath	equ	0xFFA
  4487                           tblptru	equ	0xFF8
  4488                           tblptrh	equ	0xFF7
  4489                           tblptrl	equ	0xFF6
  4490                           tablat	equ	0xFF5
  4491                           prodh	equ	0xFF4
  4492                           prodl	equ	0xFF3
  4493                           intcon	equ	0xFF2
  4494                           intcon2	equ	0xFF1
  4495                           postinc0	equ	0xFEE
  4496                           fsr0h	equ	0xFEA
  4497                           fsr0l	equ	0xFE9
  4498                           wreg	equ	0xFE8
  4499                           postinc1	equ	0xFE6
  4500                           postdec1	equ	0xFE5
  4501                           fsr1h	equ	0xFE2
  4502                           fsr1l	equ	0xFE1
  4503                           indf2	equ	0xFDF
  4504                           postinc2	equ	0xFDE
  4505                           postdec2	equ	0xFDD
  4506                           fsr2h	equ	0xFDA
  4507                           fsr2l	equ	0xFD9
  4508                           status	equ	0xFD8
  4509                           
  4510 ;; *************** function _button_timer_interrupt *****************
  4511 ;; Defined at:
  4512 ;;		line 51 in file "../My_header\My_button.h"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;  bt              2   29[COMRAM] PTR struct button
  4515 ;;		 -> ct(4), 
  4516 ;;  sw_value        1   31[COMRAM] unsigned char 
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;		None
  4519 ;; Return value:  Size  Location     Type
  4520 ;;		None               void
  4521 ;; Registers used:
  4522 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4528 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4530 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4531 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4532 ;;Total ram usage:        5 bytes
  4533 ;; Hardware stack levels used:    1
  4534 ;; This function calls:
  4535 ;;		Nothing
  4536 ;; This function is called by:
  4537 ;;		_ISR
  4538 ;; This function uses a non-reentrant model
  4539 ;;
  4540                           
  4541                           	psect	text31
  4542  000F14                     __ptext31:
  4543                           	opt stack 0
  4544  000F14                     _button_timer_interrupt:
  4545                           	opt stack 23
  4546                           
  4547                           ;My_header\My_button.h: 52: if (sw_value) {
  4548                           
  4549                           ;incstack = 0
  4550  000F14  5020               	movf	button_timer_interrupt@sw_value,w,c
  4551  000F16  B4D8               	btfsc	status,2,c
  4552  000F18  D098               	goto	i2l2046
  4553                           
  4554                           ;My_header\My_button.h: 53: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
  4555  000F1A  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4556  000F1E  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4557  000F22  0E84               	movlw	132
  4558  000F24  18DE               	xorwf	postinc2,w,c
  4559  000F26  E10B               	bnz	i2l238
  4560  000F28  0E03               	movlw	3
  4561  000F2A  18DE               	xorwf	postinc2,w,c
  4562  000F2C  A4D8               	btfss	status,2,c
  4563  000F2E  D007               	goto	i2l238
  4564  000F30  EE20 F003          	lfsr	2,3
  4565  000F34  501E               	movf	button_timer_interrupt@bt,w,c
  4566  000F36  26D9               	addwf	fsr2l,f,c
  4567  000F38  501F               	movf	button_timer_interrupt@bt+1,w,c
  4568  000F3A  22DA               	addwfc	fsr2h,f,c
  4569  000F3C  8EDF               	bsf	indf2,7,c
  4570  000F3E                     i2l238:
  4571                           
  4572                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
  4573  000F3E  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4574  000F42  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4575  000F46  0EBC               	movlw	188
  4576  000F48  18DE               	xorwf	postinc2,w,c
  4577  000F4A  E10B               	bnz	i2l239
  4578  000F4C  0E02               	movlw	2
  4579  000F4E  18DE               	xorwf	postinc2,w,c
  4580  000F50  A4D8               	btfss	status,2,c
  4581  000F52  D007               	goto	i2l239
  4582  000F54  EE20 F003          	lfsr	2,3
  4583  000F58  501E               	movf	button_timer_interrupt@bt,w,c
  4584  000F5A  26D9               	addwf	fsr2l,f,c
  4585  000F5C  501F               	movf	button_timer_interrupt@bt+1,w,c
  4586  000F5E  22DA               	addwfc	fsr2h,f,c
  4587  000F60  8CDF               	bsf	indf2,6,c
  4588  000F62                     i2l239:
  4589                           
  4590                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
  4591  000F62  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4592  000F66  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4593  000F6A  0EF4               	movlw	244
  4594  000F6C  18DE               	xorwf	postinc2,w,c
  4595  000F6E  E10A               	bnz	i2l240
  4596  000F70  04DE               	decf	postinc2,w,c
  4597  000F72  A4D8               	btfss	status,2,c
  4598  000F74  D007               	goto	i2l240
  4599  000F76  EE20 F003          	lfsr	2,3
  4600  000F7A  501E               	movf	button_timer_interrupt@bt,w,c
  4601  000F7C  26D9               	addwf	fsr2l,f,c
  4602  000F7E  501F               	movf	button_timer_interrupt@bt+1,w,c
  4603  000F80  22DA               	addwfc	fsr2h,f,c
  4604  000F82  8ADF               	bsf	indf2,5,c
  4605  000F84                     i2l240:
  4606                           
  4607                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
  4608  000F84  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4609  000F88  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4610  000F8C  0E2C               	movlw	44
  4611  000F8E  18DE               	xorwf	postinc2,w,c
  4612  000F90  E10A               	bnz	i2l241
  4613  000F92  04DE               	decf	postinc2,w,c
  4614  000F94  A4D8               	btfss	status,2,c
  4615  000F96  D007               	goto	i2l241
  4616  000F98  EE20 F003          	lfsr	2,3
  4617  000F9C  501E               	movf	button_timer_interrupt@bt,w,c
  4618  000F9E  26D9               	addwf	fsr2l,f,c
  4619  000FA0  501F               	movf	button_timer_interrupt@bt+1,w,c
  4620  000FA2  22DA               	addwfc	fsr2h,f,c
  4621  000FA4  88DF               	bsf	indf2,4,c
  4622  000FA6                     i2l241:
  4623                           
  4624                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
  4625  000FA6  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4626  000FAA  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4627  000FAE  0E96               	movlw	150
  4628  000FB0  18DE               	xorwf	postinc2,w,c
  4629  000FB2  10DE               	iorwf	postinc2,w,c
  4630  000FB4  A4D8               	btfss	status,2,c
  4631  000FB6  D007               	goto	i2l242
  4632  000FB8  EE20 F003          	lfsr	2,3
  4633  000FBC  501E               	movf	button_timer_interrupt@bt,w,c
  4634  000FBE  26D9               	addwf	fsr2l,f,c
  4635  000FC0  501F               	movf	button_timer_interrupt@bt+1,w,c
  4636  000FC2  22DA               	addwfc	fsr2h,f,c
  4637  000FC4  86DF               	bsf	indf2,3,c
  4638  000FC6                     i2l242:
  4639                           
  4640                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
  4641  000FC6  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4642  000FCA  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4643  000FCE  0E3C               	movlw	60
  4644  000FD0  18DE               	xorwf	postinc2,w,c
  4645  000FD2  10DE               	iorwf	postinc2,w,c
  4646  000FD4  A4D8               	btfss	status,2,c
  4647  000FD6  D007               	goto	i2l243
  4648  000FD8  EE20 F003          	lfsr	2,3
  4649  000FDC  501E               	movf	button_timer_interrupt@bt,w,c
  4650  000FDE  26D9               	addwf	fsr2l,f,c
  4651  000FE0  501F               	movf	button_timer_interrupt@bt+1,w,c
  4652  000FE2  22DA               	addwfc	fsr2h,f,c
  4653  000FE4  84DF               	bsf	indf2,2,c
  4654  000FE6                     i2l243:
  4655                           
  4656                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
  4657  000FE6  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4658  000FEA  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4659  000FEE  0E10               	movlw	16
  4660  000FF0  18DE               	xorwf	postinc2,w,c
  4661  000FF2  10DE               	iorwf	postinc2,w,c
  4662  000FF4  A4D8               	btfss	status,2,c
  4663  000FF6  D007               	goto	i2l244
  4664  000FF8  EE20 F003          	lfsr	2,3
  4665  000FFC  501E               	movf	button_timer_interrupt@bt,w,c
  4666  000FFE  26D9               	addwf	fsr2l,f,c
  4667  001000  501F               	movf	button_timer_interrupt@bt+1,w,c
  4668  001002  22DA               	addwfc	fsr2h,f,c
  4669  001004  82DF               	bsf	indf2,1,c
  4670  001006                     i2l244:
  4671                           
  4672                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
  4673  001006  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4674  00100A  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4675  00100E  0E02               	movlw	2
  4676  001010  18DE               	xorwf	postinc2,w,c
  4677  001012  10DE               	iorwf	postinc2,w,c
  4678  001014  A4D8               	btfss	status,2,c
  4679  001016  D007               	goto	i2l245
  4680  001018  EE20 F003          	lfsr	2,3
  4681  00101C  501E               	movf	button_timer_interrupt@bt,w,c
  4682  00101E  26D9               	addwf	fsr2l,f,c
  4683  001020  501F               	movf	button_timer_interrupt@bt+1,w,c
  4684  001022  22DA               	addwfc	fsr2h,f,c
  4685  001024  80DF               	bsf	indf2,0,c
  4686  001026                     i2l245:
  4687                           
  4688                           ;My_header\My_button.h: 61: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
  4689  001026  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4690  00102A  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4691  00102E  0E85               	movlw	133
  4692  001030  5CDE               	subwf	postinc2,w,c
  4693  001032  0E03               	movlw	3
  4694  001034  58DE               	subwfb	postinc2,w,c
  4695  001036  B0D8               	btfsc	status,0,c
  4696  001038  0012               	return	
  4697  00103A  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4698  00103E  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4699  001042  2ADE               	incf	postinc2,f,c
  4700  001044  0E00               	movlw	0
  4701  001046  22DD               	addwfc	postdec2,f,c
  4702                           
  4703                           ;My_header\My_button.h: 62: } else {
  4704  001048  0012               	return	
  4705  00104A                     i2l2046:
  4706                           
  4707                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
  4708  00104A  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4709  00104E  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4710  001052  0E84               	movlw	132
  4711  001054  5CDE               	subwf	postinc2,w,c
  4712  001056  0E03               	movlw	3
  4713  001058  58DE               	subwfb	postinc2,w,c
  4714  00105A  A0D8               	btfss	status,0,c
  4715  00105C  D008               	goto	i2l2050
  4716  00105E  EE20 F002          	lfsr	2,2
  4717  001062  501E               	movf	button_timer_interrupt@bt,w,c
  4718  001064  26D9               	addwf	fsr2l,f,c
  4719  001066  501F               	movf	button_timer_interrupt@bt+1,w,c
  4720  001068  22DA               	addwfc	fsr2h,f,c
  4721  00106A  8EDF               	bsf	indf2,7,c
  4722  00106C  D082               	goto	i2l2078
  4723  00106E                     i2l2050:
  4724                           
  4725                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
  4726  00106E  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4727  001072  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4728  001076  0EBC               	movlw	188
  4729  001078  5CDE               	subwf	postinc2,w,c
  4730  00107A  0E02               	movlw	2
  4731  00107C  58DE               	subwfb	postinc2,w,c
  4732  00107E  A0D8               	btfss	status,0,c
  4733  001080  D008               	goto	i2l2054
  4734  001082  EE20 F002          	lfsr	2,2
  4735  001086  501E               	movf	button_timer_interrupt@bt,w,c
  4736  001088  26D9               	addwf	fsr2l,f,c
  4737  00108A  501F               	movf	button_timer_interrupt@bt+1,w,c
  4738  00108C  22DA               	addwfc	fsr2h,f,c
  4739  00108E  8CDF               	bsf	indf2,6,c
  4740  001090  D070               	goto	i2l2078
  4741  001092                     i2l2054:
  4742                           
  4743                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
  4744  001092  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4745  001096  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4746  00109A  0EF4               	movlw	244
  4747  00109C  5CDE               	subwf	postinc2,w,c
  4748  00109E  0E01               	movlw	1
  4749  0010A0  58DE               	subwfb	postinc2,w,c
  4750  0010A2  A0D8               	btfss	status,0,c
  4751  0010A4  D008               	goto	i2l2058
  4752  0010A6  EE20 F002          	lfsr	2,2
  4753  0010AA  501E               	movf	button_timer_interrupt@bt,w,c
  4754  0010AC  26D9               	addwf	fsr2l,f,c
  4755  0010AE  501F               	movf	button_timer_interrupt@bt+1,w,c
  4756  0010B0  22DA               	addwfc	fsr2h,f,c
  4757  0010B2  8ADF               	bsf	indf2,5,c
  4758  0010B4  D05E               	goto	i2l2078
  4759  0010B6                     i2l2058:
  4760                           
  4761                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
  4762  0010B6  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4763  0010BA  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4764  0010BE  0E2C               	movlw	44
  4765  0010C0  5CDE               	subwf	postinc2,w,c
  4766  0010C2  0E01               	movlw	1
  4767  0010C4  58DE               	subwfb	postinc2,w,c
  4768  0010C6  A0D8               	btfss	status,0,c
  4769  0010C8  D008               	goto	i2l2062
  4770  0010CA  EE20 F002          	lfsr	2,2
  4771  0010CE  501E               	movf	button_timer_interrupt@bt,w,c
  4772  0010D0  26D9               	addwf	fsr2l,f,c
  4773  0010D2  501F               	movf	button_timer_interrupt@bt+1,w,c
  4774  0010D4  22DA               	addwfc	fsr2h,f,c
  4775  0010D6  88DF               	bsf	indf2,4,c
  4776  0010D8  D04C               	goto	i2l2078
  4777  0010DA                     i2l2062:
  4778                           
  4779                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
  4780  0010DA  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4781  0010DE  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4782  0010E2  0E01               	movlw	1
  4783  0010E4  50DB               	movf	plusw2,w,c
  4784  0010E6  E104               	bnz	i2u135_40
  4785  0010E8  0E96               	movlw	150
  4786  0010EA  5CDE               	subwf	postinc2,w,c
  4787  0010EC  A0D8               	btfss	status,0,c
  4788  0010EE  D008               	goto	i2l2066
  4789  0010F0                     i2u135_40:
  4790  0010F0  EE20 F002          	lfsr	2,2
  4791  0010F4  501E               	movf	button_timer_interrupt@bt,w,c
  4792  0010F6  26D9               	addwf	fsr2l,f,c
  4793  0010F8  501F               	movf	button_timer_interrupt@bt+1,w,c
  4794  0010FA  22DA               	addwfc	fsr2h,f,c
  4795  0010FC  86DF               	bsf	indf2,3,c
  4796  0010FE  D039               	goto	i2l2078
  4797  001100                     i2l2066:
  4798                           
  4799                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
  4800  001100  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4801  001104  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4802  001108  0E01               	movlw	1
  4803  00110A  50DB               	movf	plusw2,w,c
  4804  00110C  E104               	bnz	i2u136_40
  4805  00110E  0E3C               	movlw	60
  4806  001110  5CDE               	subwf	postinc2,w,c
  4807  001112  A0D8               	btfss	status,0,c
  4808  001114  D008               	goto	i2l2070
  4809  001116                     i2u136_40:
  4810  001116  EE20 F002          	lfsr	2,2
  4811  00111A  501E               	movf	button_timer_interrupt@bt,w,c
  4812  00111C  26D9               	addwf	fsr2l,f,c
  4813  00111E  501F               	movf	button_timer_interrupt@bt+1,w,c
  4814  001120  22DA               	addwfc	fsr2h,f,c
  4815  001122  84DF               	bsf	indf2,2,c
  4816  001124  D026               	goto	i2l2078
  4817  001126                     i2l2070:
  4818                           
  4819                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
  4820  001126  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4821  00112A  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4822  00112E  0E01               	movlw	1
  4823  001130  50DB               	movf	plusw2,w,c
  4824  001132  E104               	bnz	i2u137_40
  4825  001134  0E10               	movlw	16
  4826  001136  5CDE               	subwf	postinc2,w,c
  4827  001138  A0D8               	btfss	status,0,c
  4828  00113A  D008               	goto	i2l2074
  4829  00113C                     i2u137_40:
  4830  00113C  EE20 F002          	lfsr	2,2
  4831  001140  501E               	movf	button_timer_interrupt@bt,w,c
  4832  001142  26D9               	addwf	fsr2l,f,c
  4833  001144  501F               	movf	button_timer_interrupt@bt+1,w,c
  4834  001146  22DA               	addwfc	fsr2h,f,c
  4835  001148  82DF               	bsf	indf2,1,c
  4836  00114A  D013               	goto	i2l2078
  4837  00114C                     i2l2074:
  4838                           
  4839                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
  4840  00114C  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4841  001150  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4842  001154  0E01               	movlw	1
  4843  001156  50DB               	movf	plusw2,w,c
  4844  001158  E104               	bnz	i2u138_40
  4845  00115A  0E02               	movlw	2
  4846  00115C  5CDE               	subwf	postinc2,w,c
  4847  00115E  A0D8               	btfss	status,0,c
  4848  001160  D008               	goto	i2l2078
  4849  001162                     i2u138_40:
  4850  001162  EE20 F002          	lfsr	2,2
  4851  001166  501E               	movf	button_timer_interrupt@bt,w,c
  4852  001168  26D9               	addwf	fsr2l,f,c
  4853  00116A  501F               	movf	button_timer_interrupt@bt+1,w,c
  4854  00116C  22DA               	addwfc	fsr2h,f,c
  4855  00116E  80DF               	bsf	indf2,0,c
  4856  001170  D000               	goto	i2l2078
  4857  001172                     i2l2078:
  4858                           
  4859                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
  4860  001172  C01E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  4861  001176  C01F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  4862  00117A  0E00               	movlw	0
  4863  00117C  6EDE               	movwf	postinc2,c
  4864  00117E  0E00               	movlw	0
  4865  001180  6EDD               	movwf	postdec2,c
  4866                           
  4867                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
  4868  001182  EE20 F002          	lfsr	2,2
  4869  001186  501E               	movf	button_timer_interrupt@bt,w,c
  4870  001188  26D9               	addwf	fsr2l,f,c
  4871  00118A  501F               	movf	button_timer_interrupt@bt+1,w,c
  4872  00118C  22DA               	addwfc	fsr2h,f,c
  4873  00118E  0EFF               	movlw	255
  4874  001190  16DE               	andwf	postinc2,f,c
  4875  001192  0E00               	movlw	0
  4876  001194  16DD               	andwf	postdec2,f,c
  4877  001196  0012               	return	
  4878  001198  0012               	return		;funcret
  4879  00119A                     __end_of_button_timer_interrupt:
  4880                           	opt stack 0
  4881                           pclatu	equ	0xFFB
  4882                           pclath	equ	0xFFA
  4883                           tblptru	equ	0xFF8
  4884                           tblptrh	equ	0xFF7
  4885                           tblptrl	equ	0xFF6
  4886                           tablat	equ	0xFF5
  4887                           prodh	equ	0xFF4
  4888                           prodl	equ	0xFF3
  4889                           intcon	equ	0xFF2
  4890                           intcon2	equ	0xFF1
  4891                           postinc0	equ	0xFEE
  4892                           fsr0h	equ	0xFEA
  4893                           fsr0l	equ	0xFE9
  4894                           wreg	equ	0xFE8
  4895                           postinc1	equ	0xFE6
  4896                           postdec1	equ	0xFE5
  4897                           fsr1h	equ	0xFE2
  4898                           fsr1l	equ	0xFE1
  4899                           indf2	equ	0xFDF
  4900                           postinc2	equ	0xFDE
  4901                           postdec2	equ	0xFDD
  4902                           plusw2	equ	0xFDB
  4903                           fsr2h	equ	0xFDA
  4904                           fsr2l	equ	0xFD9
  4905                           status	equ	0xFD8
  4906                           
  4907 ;; *************** function _UART_ISR *****************
  4908 ;; Defined at:
  4909 ;;		line 208 in file "../My_header\My_header.h"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;		None
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;  ascii           1   15[COMRAM] unsigned char 
  4914 ;; Return value:  Size  Location     Type
  4915 ;;		None               void
  4916 ;; Registers used:
  4917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4918 ;; Tracked objects:
  4919 ;;		On entry : 0/0
  4920 ;;		On exit  : 0/0
  4921 ;;		Unchanged: 0/0
  4922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4924 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4926 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4927 ;;Total ram usage:        1 bytes
  4928 ;; Hardware stack levels used:    1
  4929 ;; Hardware stack levels required when called:    2
  4930 ;; This function calls:
  4931 ;;		i2_ringbuf_num
  4932 ;;		i2_ringbuf_pop
  4933 ;;		i2_ringbuf_put
  4934 ;; This function is called by:
  4935 ;;		_ISR
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           	psect	text32
  4940  001CD6                     __ptext32:
  4941                           	opt stack 0
  4942  001CD6                     _UART_ISR:
  4943                           	opt stack 21
  4944                           
  4945                           ;My_header\My_header.h: 209: if (PIE1bits.TXIE && PIR1bits.TXIF) {
  4946                           
  4947                           ;incstack = 0
  4948  001CD6  B89D               	btfsc	3997,4,c	;volatile
  4949  001CD8  A89E               	btfss	3998,4,c	;volatile
  4950  001CDA  D014               	goto	i2l185
  4951                           
  4952                           ;My_header\My_header.h: 210: if (ringbuf_num(&tx_buf)) {
  4953  001CDC  0E3E               	movlw	low _tx_buf
  4954  001CDE  6E01               	movwf	i2ringbuf_num@rb,c
  4955  001CE0  0E00               	movlw	high _tx_buf
  4956  001CE2  6E02               	movwf	i2ringbuf_num@rb+1,c
  4957  001CE4  EC51  F00B         	call	i2_ringbuf_num	;wreg free
  4958  001CE8  5001               	movf	?i2_ringbuf_num,w,c
  4959  001CEA  1002               	iorwf	?i2_ringbuf_num+1,w,c
  4960  001CEC  B4D8               	btfsc	status,2,c
  4961  001CEE  D008               	goto	i2l186
  4962                           
  4963                           ;My_header\My_header.h: 211: TXREG1 = ringbuf_pop(&tx_buf);
  4964  001CF0  0E3E               	movlw	low _tx_buf
  4965  001CF2  6E09               	movwf	i2ringbuf_pop@rb,c
  4966  001CF4  0E00               	movlw	high _tx_buf
  4967  001CF6  6E0A               	movwf	i2ringbuf_pop@rb+1,c
  4968  001CF8  EC0C  F00C         	call	i2_ringbuf_pop	;wreg free
  4969  001CFC  6EAE               	movwf	4014,c	;volatile
  4970                           
  4971                           ;My_header\My_header.h: 212: } else {
  4972  001CFE  D002               	goto	i2l185
  4973  001D00                     i2l186:
  4974                           
  4975                           ;My_header\My_header.h: 213: PIE1bits.TXIE = 0;
  4976  001D00  989D               	bcf	3997,4,c	;volatile
  4977  001D02  D000               	goto	i2l185
  4978  001D04                     i2l185:
  4979                           
  4980                           ;My_header\My_header.h: 214: }
  4981                           ;My_header\My_header.h: 215: }
  4982                           ;My_header\My_header.h: 216: if (PIR1bits.RCIF && PIE1bits.RCIE) {
  4983  001D04  AA9E               	btfss	3998,5,c	;volatile
  4984  001D06  0012               	return	
  4985  001D08  AA9D               	btfss	3997,5,c	;volatile
  4986  001D0A  0012               	return	
  4987                           
  4988                           ;My_header\My_header.h: 217: char ascii = RCREG1;
  4989  001D0C  CFAF F010          	movff	4015,UART_ISR@ascii	;volatile
  4990                           
  4991                           ;My_header\My_header.h: 218: ringbuf_put(&rx_buf, ascii);
  4992  001D10  0E36               	movlw	low _rx_buf
  4993  001D12  6E09               	movwf	i2ringbuf_put@rb,c
  4994  001D14  0E00               	movlw	high _rx_buf
  4995  001D16  6E0A               	movwf	i2ringbuf_put@rb+1,c
  4996  001D18  C010  F00B         	movff	UART_ISR@ascii,i2ringbuf_put@asciicode
  4997  001D1C  ECB0  F00B         	call	i2_ringbuf_put	;wreg free
  4998  001D20  0012               	return	
  4999  001D22  0012               	return		;funcret
  5000  001D24                     __end_of_UART_ISR:
  5001                           	opt stack 0
  5002                           pclatu	equ	0xFFB
  5003                           pclath	equ	0xFFA
  5004                           tblptru	equ	0xFF8
  5005                           tblptrh	equ	0xFF7
  5006                           tblptrl	equ	0xFF6
  5007                           tablat	equ	0xFF5
  5008                           prodh	equ	0xFF4
  5009                           prodl	equ	0xFF3
  5010                           intcon	equ	0xFF2
  5011                           intcon2	equ	0xFF1
  5012                           postinc0	equ	0xFEE
  5013                           fsr0h	equ	0xFEA
  5014                           fsr0l	equ	0xFE9
  5015                           wreg	equ	0xFE8
  5016                           postinc1	equ	0xFE6
  5017                           postdec1	equ	0xFE5
  5018                           fsr1h	equ	0xFE2
  5019                           fsr1l	equ	0xFE1
  5020                           indf2	equ	0xFDF
  5021                           postinc2	equ	0xFDE
  5022                           postdec2	equ	0xFDD
  5023                           plusw2	equ	0xFDB
  5024                           fsr2h	equ	0xFDA
  5025                           fsr2l	equ	0xFD9
  5026                           status	equ	0xFD8
  5027                           
  5028 ;; *************** function i2_ringbuf_put *****************
  5029 ;; Defined at:
  5030 ;;		line 39 in file "../My_header\My_ringbuf.h"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  rb              2    8[COMRAM] PTR struct ringbuf
  5033 ;;		 -> rx_buf(8), tx_buf(8), 
  5034 ;;  asciicode       1   10[COMRAM] unsigned char 
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;		None
  5037 ;; Return value:  Size  Location     Type
  5038 ;;		None               void
  5039 ;; Registers used:
  5040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5046 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5048 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5049 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5050 ;;Total ram usage:        7 bytes
  5051 ;; Hardware stack levels used:    1
  5052 ;; Hardware stack levels required when called:    1
  5053 ;; This function calls:
  5054 ;;		i2_ringbuf_num
  5055 ;; This function is called by:
  5056 ;;		_UART_ISR
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           	psect	text33
  5061  001760                     __ptext33:
  5062                           	opt stack 0
  5063  001760                     i2_ringbuf_put:
  5064                           	opt stack 21
  5065                           
  5066                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
  5067                           
  5068                           ;incstack = 0
  5069  001760  C009  F001         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
  5070  001764  C00A  F002         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
  5071  001768  EC51  F00B         	call	i2_ringbuf_num	;wreg free
  5072  00176C  EE20 F002          	lfsr	2,2
  5073  001770  5009               	movf	i2ringbuf_put@rb,w,c
  5074  001772  26D9               	addwf	fsr2l,f,c
  5075  001774  500A               	movf	i2ringbuf_put@rb+1,w,c
  5076  001776  22DA               	addwfc	fsr2h,f,c
  5077  001778  50DE               	movf	postinc2,w,c
  5078  00177A  5C01               	subwf	?i2_ringbuf_num,w,c
  5079  00177C  50DE               	movf	postinc2,w,c
  5080  00177E  5802               	subwfb	?i2_ringbuf_num+1,w,c
  5081  001780  B0D8               	btfsc	status,0,c
  5082  001782  0012               	return	
  5083                           
  5084                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
  5085  001784  EE20 F004          	lfsr	2,4
  5086  001788  5009               	movf	i2ringbuf_put@rb,w,c
  5087  00178A  26D9               	addwf	fsr2l,f,c
  5088  00178C  500A               	movf	i2ringbuf_put@rb+1,w,c
  5089  00178E  22DA               	addwfc	fsr2h,f,c
  5090  001790  CFDE F00C          	movff	postinc2,??i2_ringbuf_put
  5091  001794  CFDD F00D          	movff	postdec2,??i2_ringbuf_put+1
  5092  001798  C009  FFD9         	movff	i2ringbuf_put@rb,fsr2l
  5093  00179C  C00A  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
  5094  0017A0  CFDE F00E          	movff	postinc2,??i2_ringbuf_put+2
  5095  0017A4  CFDD F00F          	movff	postdec2,??i2_ringbuf_put+3
  5096  0017A8  500C               	movf	??i2_ringbuf_put,w,c
  5097  0017AA  240E               	addwf	??i2_ringbuf_put+2,w,c
  5098  0017AC  6ED9               	movwf	fsr2l,c
  5099  0017AE  500D               	movf	??i2_ringbuf_put+1,w,c
  5100  0017B0  200F               	addwfc	??i2_ringbuf_put+3,w,c
  5101  0017B2  6EDA               	movwf	fsr2h,c
  5102  0017B4  C00B  FFDF         	movff	i2ringbuf_put@asciicode,indf2
  5103                           
  5104                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
  5105  0017B8  EE20 F002          	lfsr	2,2
  5106  0017BC  5009               	movf	i2ringbuf_put@rb,w,c
  5107  0017BE  26D9               	addwf	fsr2l,f,c
  5108  0017C0  500A               	movf	i2ringbuf_put@rb+1,w,c
  5109  0017C2  22DA               	addwfc	fsr2h,f,c
  5110  0017C4  EE10 F004          	lfsr	1,4
  5111  0017C8  5009               	movf	i2ringbuf_put@rb,w,c
  5112  0017CA  26E1               	addwf	fsr1l,f,c
  5113  0017CC  500A               	movf	i2ringbuf_put@rb+1,w,c
  5114  0017CE  22E2               	addwfc	fsr1h,f,c
  5115  0017D0  CFE6 F00E          	movff	postinc1,??i2_ringbuf_put+2
  5116  0017D4  CFE5 F00F          	movff	postdec1,??i2_ringbuf_put+3
  5117  0017D8  0E01               	movlw	1
  5118  0017DA  260E               	addwf	??i2_ringbuf_put+2,f,c
  5119  0017DC  0E00               	movlw	0
  5120  0017DE  220F               	addwfc	??i2_ringbuf_put+3,f,c
  5121  0017E0  50DE               	movf	postinc2,w,c
  5122  0017E2  5C0E               	subwf	??i2_ringbuf_put+2,w,c
  5123  0017E4  50DE               	movf	postinc2,w,c
  5124  0017E6  580F               	subwfb	??i2_ringbuf_put+3,w,c
  5125  0017E8  B0D8               	btfsc	status,0,c
  5126  0017EA  D00A               	goto	i2l1904
  5127  0017EC  EE20 F004          	lfsr	2,4
  5128  0017F0  5009               	movf	i2ringbuf_put@rb,w,c
  5129  0017F2  26D9               	addwf	fsr2l,f,c
  5130  0017F4  500A               	movf	i2ringbuf_put@rb+1,w,c
  5131  0017F6  22DA               	addwfc	fsr2h,f,c
  5132  0017F8  2ADE               	incf	postinc2,f,c
  5133  0017FA  0E00               	movlw	0
  5134  0017FC  22DD               	addwfc	postdec2,f,c
  5135  0017FE  0012               	return	
  5136  001800                     i2l1904:
  5137                           
  5138                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
  5139  001800  EE20 F004          	lfsr	2,4
  5140  001804  5009               	movf	i2ringbuf_put@rb,w,c
  5141  001806  26D9               	addwf	fsr2l,f,c
  5142  001808  500A               	movf	i2ringbuf_put@rb+1,w,c
  5143  00180A  22DA               	addwfc	fsr2h,f,c
  5144  00180C  0E00               	movlw	0
  5145  00180E  6EDE               	movwf	postinc2,c
  5146  001810  0E00               	movlw	0
  5147  001812  6EDD               	movwf	postdec2,c
  5148  001814  0012               	return	
  5149  001816  0012               	return		;funcret
  5150  001818                     __end_ofi2_ringbuf_put:
  5151                           	opt stack 0
  5152                           pclatu	equ	0xFFB
  5153                           pclath	equ	0xFFA
  5154                           tblptru	equ	0xFF8
  5155                           tblptrh	equ	0xFF7
  5156                           tblptrl	equ	0xFF6
  5157                           tablat	equ	0xFF5
  5158                           prodh	equ	0xFF4
  5159                           prodl	equ	0xFF3
  5160                           intcon	equ	0xFF2
  5161                           intcon2	equ	0xFF1
  5162                           postinc0	equ	0xFEE
  5163                           fsr0h	equ	0xFEA
  5164                           fsr0l	equ	0xFE9
  5165                           wreg	equ	0xFE8
  5166                           postinc1	equ	0xFE6
  5167                           postdec1	equ	0xFE5
  5168                           fsr1h	equ	0xFE2
  5169                           fsr1l	equ	0xFE1
  5170                           indf2	equ	0xFDF
  5171                           postinc2	equ	0xFDE
  5172                           postdec2	equ	0xFDD
  5173                           plusw2	equ	0xFDB
  5174                           fsr2h	equ	0xFDA
  5175                           fsr2l	equ	0xFD9
  5176                           status	equ	0xFD8
  5177                           
  5178 ;; *************** function i2_ringbuf_pop *****************
  5179 ;; Defined at:
  5180 ;;		line 64 in file "../My_header\My_ringbuf.h"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;  rb              2    8[COMRAM] PTR struct ringbuf
  5183 ;;		 -> rx_buf(8), tx_buf(8), 
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  1    wreg      unsigned char 
  5188 ;; Registers used:
  5189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5195 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5196 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5197 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5198 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5199 ;;Total ram usage:        7 bytes
  5200 ;; Hardware stack levels used:    1
  5201 ;; Hardware stack levels required when called:    1
  5202 ;; This function calls:
  5203 ;;		i2_ringbuf_num
  5204 ;; This function is called by:
  5205 ;;		_UART_ISR
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text34
  5210  001818                     __ptext34:
  5211                           	opt stack 0
  5212  001818                     i2_ringbuf_pop:
  5213                           	opt stack 21
  5214                           
  5215                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
  5216                           
  5217                           ;incstack = 0
  5218  001818  C009  F001         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
  5219  00181C  C00A  F002         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
  5220  001820  EC51  F00B         	call	i2_ringbuf_num	;wreg free
  5221  001824  5001               	movf	?i2_ringbuf_num,w,c
  5222  001826  1002               	iorwf	?i2_ringbuf_num+1,w,c
  5223  001828  B4D8               	btfsc	status,2,c
  5224  00182A  D04B               	goto	i2l1922
  5225                           
  5226                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
  5227  00182C  EE20 F006          	lfsr	2,6
  5228  001830  5009               	movf	i2ringbuf_pop@rb,w,c
  5229  001832  26D9               	addwf	fsr2l,f,c
  5230  001834  500A               	movf	i2ringbuf_pop@rb+1,w,c
  5231  001836  22DA               	addwfc	fsr2h,f,c
  5232  001838  CFDE F00B          	movff	postinc2,??i2_ringbuf_pop
  5233  00183C  CFDD F00C          	movff	postdec2,??i2_ringbuf_pop+1
  5234  001840  C009  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
  5235  001844  C00A  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
  5236  001848  CFDE F00D          	movff	postinc2,??i2_ringbuf_pop+2
  5237  00184C  CFDD F00E          	movff	postdec2,??i2_ringbuf_pop+3
  5238  001850  500B               	movf	??i2_ringbuf_pop,w,c
  5239  001852  240D               	addwf	??i2_ringbuf_pop+2,w,c
  5240  001854  6ED9               	movwf	fsr2l,c
  5241  001856  500C               	movf	??i2_ringbuf_pop+1,w,c
  5242  001858  200E               	addwfc	??i2_ringbuf_pop+3,w,c
  5243  00185A  6EDA               	movwf	fsr2h,c
  5244  00185C  50DF               	movf	indf2,w,c
  5245  00185E  6E0F               	movwf	i2ringbuf_pop@ret,c
  5246                           
  5247                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
  5248  001860  EE20 F002          	lfsr	2,2
  5249  001864  5009               	movf	i2ringbuf_pop@rb,w,c
  5250  001866  26D9               	addwf	fsr2l,f,c
  5251  001868  500A               	movf	i2ringbuf_pop@rb+1,w,c
  5252  00186A  22DA               	addwfc	fsr2h,f,c
  5253  00186C  EE10 F006          	lfsr	1,6
  5254  001870  5009               	movf	i2ringbuf_pop@rb,w,c
  5255  001872  26E1               	addwf	fsr1l,f,c
  5256  001874  500A               	movf	i2ringbuf_pop@rb+1,w,c
  5257  001876  22E2               	addwfc	fsr1h,f,c
  5258  001878  CFE6 F00D          	movff	postinc1,??i2_ringbuf_pop+2
  5259  00187C  CFE5 F00E          	movff	postdec1,??i2_ringbuf_pop+3
  5260  001880  0E01               	movlw	1
  5261  001882  260D               	addwf	??i2_ringbuf_pop+2,f,c
  5262  001884  0E00               	movlw	0
  5263  001886  220E               	addwfc	??i2_ringbuf_pop+3,f,c
  5264  001888  50DE               	movf	postinc2,w,c
  5265  00188A  5C0D               	subwf	??i2_ringbuf_pop+2,w,c
  5266  00188C  50DE               	movf	postinc2,w,c
  5267  00188E  580E               	subwfb	??i2_ringbuf_pop+3,w,c
  5268  001890  B0D8               	btfsc	status,0,c
  5269  001892  D00A               	goto	i2l1914
  5270                           
  5271                           ;My_header\My_ringbuf.h: 68: rb->tail++;
  5272  001894  EE20 F006          	lfsr	2,6
  5273  001898  5009               	movf	i2ringbuf_pop@rb,w,c
  5274  00189A  26D9               	addwf	fsr2l,f,c
  5275  00189C  500A               	movf	i2ringbuf_pop@rb+1,w,c
  5276  00189E  22DA               	addwfc	fsr2h,f,c
  5277  0018A0  2ADE               	incf	postinc2,f,c
  5278  0018A2  0E00               	movlw	0
  5279  0018A4  22DD               	addwfc	postdec2,f,c
  5280                           
  5281                           ;My_header\My_ringbuf.h: 69: } else {
  5282  0018A6  D00B               	goto	i2l1916
  5283  0018A8                     i2l1914:
  5284                           
  5285                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
  5286  0018A8  EE20 F006          	lfsr	2,6
  5287  0018AC  5009               	movf	i2ringbuf_pop@rb,w,c
  5288  0018AE  26D9               	addwf	fsr2l,f,c
  5289  0018B0  500A               	movf	i2ringbuf_pop@rb+1,w,c
  5290  0018B2  22DA               	addwfc	fsr2h,f,c
  5291  0018B4  0E00               	movlw	0
  5292  0018B6  6EDE               	movwf	postinc2,c
  5293  0018B8  0E00               	movlw	0
  5294  0018BA  6EDD               	movwf	postdec2,c
  5295  0018BC  D000               	goto	i2l1916
  5296  0018BE                     i2l1916:
  5297                           
  5298                           ;My_header\My_ringbuf.h: 71: }
  5299                           ;My_header\My_ringbuf.h: 72: return ret;
  5300  0018BE  500F               	movf	i2ringbuf_pop@ret,w,c
  5301                           
  5302                           ;My_header\My_ringbuf.h: 73: } else {
  5303  0018C0  0012               	return	
  5304  0018C2                     i2l1922:
  5305                           
  5306                           ;My_header\My_ringbuf.h: 74: return 0;
  5307  0018C2  0E00               	movlw	0
  5308  0018C4  0012               	return	
  5309  0018C6  0012               	return		;funcret
  5310  0018C8                     __end_ofi2_ringbuf_pop:
  5311                           	opt stack 0
  5312                           pclatu	equ	0xFFB
  5313                           pclath	equ	0xFFA
  5314                           tblptru	equ	0xFF8
  5315                           tblptrh	equ	0xFF7
  5316                           tblptrl	equ	0xFF6
  5317                           tablat	equ	0xFF5
  5318                           prodh	equ	0xFF4
  5319                           prodl	equ	0xFF3
  5320                           intcon	equ	0xFF2
  5321                           intcon2	equ	0xFF1
  5322                           postinc0	equ	0xFEE
  5323                           fsr0h	equ	0xFEA
  5324                           fsr0l	equ	0xFE9
  5325                           wreg	equ	0xFE8
  5326                           postinc1	equ	0xFE6
  5327                           postdec1	equ	0xFE5
  5328                           fsr1h	equ	0xFE2
  5329                           fsr1l	equ	0xFE1
  5330                           indf2	equ	0xFDF
  5331                           postinc2	equ	0xFDE
  5332                           postdec2	equ	0xFDD
  5333                           plusw2	equ	0xFDB
  5334                           fsr2h	equ	0xFDA
  5335                           fsr2l	equ	0xFD9
  5336                           status	equ	0xFD8
  5337                           
  5338 ;; *************** function i2_ringbuf_num *****************
  5339 ;; Defined at:
  5340 ;;		line 31 in file "../My_header\My_ringbuf.h"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;  rb              2    0[COMRAM] PTR struct ringbuf
  5343 ;;		 -> rx_buf(8), tx_buf(8), 
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;		None
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  2    0[COMRAM] unsigned int 
  5348 ;; Registers used:
  5349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5355 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5357 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5358 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5359 ;;Total ram usage:        8 bytes
  5360 ;; Hardware stack levels used:    1
  5361 ;; This function calls:
  5362 ;;		Nothing
  5363 ;; This function is called by:
  5364 ;;		_UART_ISR
  5365 ;;		i2_ringbuf_put
  5366 ;;		i2_ringbuf_pop
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           	psect	text35
  5371  0016A2                     __ptext35:
  5372                           	opt stack 0
  5373  0016A2                     i2_ringbuf_num:
  5374                           	opt stack 21
  5375                           
  5376                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
  5377                           
  5378                           ;incstack = 0
  5379  0016A2  EE20 F006          	lfsr	2,6
  5380  0016A6  5001               	movf	i2ringbuf_num@rb,w,c
  5381  0016A8  26D9               	addwf	fsr2l,f,c
  5382  0016AA  5002               	movf	i2ringbuf_num@rb+1,w,c
  5383  0016AC  22DA               	addwfc	fsr2h,f,c
  5384  0016AE  EE10 F004          	lfsr	1,4
  5385  0016B2  5001               	movf	i2ringbuf_num@rb,w,c
  5386  0016B4  26E1               	addwf	fsr1l,f,c
  5387  0016B6  5002               	movf	i2ringbuf_num@rb+1,w,c
  5388  0016B8  22E2               	addwfc	fsr1h,f,c
  5389  0016BA  50DE               	movf	postinc2,w,c
  5390  0016BC  5CE6               	subwf	postinc1,w,c
  5391  0016BE  50DE               	movf	postinc2,w,c
  5392  0016C0  58E6               	subwfb	postinc1,w,c
  5393  0016C2  A0D8               	btfss	status,0,c
  5394  0016C4  D01F               	goto	i2l1764
  5395                           
  5396                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
  5397  0016C6  EE20 F004          	lfsr	2,4
  5398  0016CA  5001               	movf	i2ringbuf_num@rb,w,c
  5399  0016CC  26D9               	addwf	fsr2l,f,c
  5400  0016CE  5002               	movf	i2ringbuf_num@rb+1,w,c
  5401  0016D0  22DA               	addwfc	fsr2h,f,c
  5402  0016D2  CFDE F003          	movff	postinc2,??i2_ringbuf_num
  5403  0016D6  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
  5404  0016DA  EE20 F006          	lfsr	2,6
  5405  0016DE  5001               	movf	i2ringbuf_num@rb,w,c
  5406  0016E0  26D9               	addwf	fsr2l,f,c
  5407  0016E2  5002               	movf	i2ringbuf_num@rb+1,w,c
  5408  0016E4  22DA               	addwfc	fsr2h,f,c
  5409  0016E6  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
  5410  0016EA  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
  5411  0016EE  1E05               	comf	??i2_ringbuf_num+2,f,c
  5412  0016F0  1E06               	comf	??i2_ringbuf_num+3,f,c
  5413  0016F2  4A05               	infsnz	??i2_ringbuf_num+2,f,c
  5414  0016F4  2A06               	incf	??i2_ringbuf_num+3,f,c
  5415  0016F6  5003               	movf	??i2_ringbuf_num,w,c
  5416  0016F8  2405               	addwf	??i2_ringbuf_num+2,w,c
  5417  0016FA  6E01               	movwf	?i2_ringbuf_num,c
  5418  0016FC  5004               	movf	??i2_ringbuf_num+1,w,c
  5419  0016FE  2006               	addwfc	??i2_ringbuf_num+3,w,c
  5420  001700  6E02               	movwf	?i2_ringbuf_num+1,c
  5421                           
  5422                           ;My_header\My_ringbuf.h: 34: } else {
  5423  001702  0012               	return	
  5424  001704                     i2l1764:
  5425                           
  5426                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
  5427  001704  EE20 F004          	lfsr	2,4
  5428  001708  5001               	movf	i2ringbuf_num@rb,w,c
  5429  00170A  26D9               	addwf	fsr2l,f,c
  5430  00170C  5002               	movf	i2ringbuf_num@rb+1,w,c
  5431  00170E  22DA               	addwfc	fsr2h,f,c
  5432  001710  CFDE F003          	movff	postinc2,??i2_ringbuf_num
  5433  001714  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
  5434  001718  EE20 F002          	lfsr	2,2
  5435  00171C  5001               	movf	i2ringbuf_num@rb,w,c
  5436  00171E  26D9               	addwf	fsr2l,f,c
  5437  001720  5002               	movf	i2ringbuf_num@rb+1,w,c
  5438  001722  22DA               	addwfc	fsr2h,f,c
  5439  001724  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
  5440  001728  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
  5441  00172C  EE20 F006          	lfsr	2,6
  5442  001730  5001               	movf	i2ringbuf_num@rb,w,c
  5443  001732  26D9               	addwf	fsr2l,f,c
  5444  001734  5002               	movf	i2ringbuf_num@rb+1,w,c
  5445  001736  22DA               	addwfc	fsr2h,f,c
  5446  001738  CFDE F007          	movff	postinc2,??i2_ringbuf_num+4
  5447  00173C  CFDD F008          	movff	postdec2,??i2_ringbuf_num+5
  5448  001740  1E07               	comf	??i2_ringbuf_num+4,f,c
  5449  001742  1E08               	comf	??i2_ringbuf_num+5,f,c
  5450  001744  4A07               	infsnz	??i2_ringbuf_num+4,f,c
  5451  001746  2A08               	incf	??i2_ringbuf_num+5,f,c
  5452  001748  5005               	movf	??i2_ringbuf_num+2,w,c
  5453  00174A  2607               	addwf	??i2_ringbuf_num+4,f,c
  5454  00174C  5006               	movf	??i2_ringbuf_num+3,w,c
  5455  00174E  2208               	addwfc	??i2_ringbuf_num+5,f,c
  5456  001750  5003               	movf	??i2_ringbuf_num,w,c
  5457  001752  2407               	addwf	??i2_ringbuf_num+4,w,c
  5458  001754  6E01               	movwf	?i2_ringbuf_num,c
  5459  001756  5004               	movf	??i2_ringbuf_num+1,w,c
  5460  001758  2008               	addwfc	??i2_ringbuf_num+5,w,c
  5461  00175A  6E02               	movwf	?i2_ringbuf_num+1,c
  5462  00175C  0012               	return	
  5463  00175E  0012               	return		;funcret
  5464  001760                     __end_ofi2_ringbuf_num:
  5465                           	opt stack 0
  5466                           pclatu	equ	0xFFB
  5467                           pclath	equ	0xFFA
  5468                           tblptru	equ	0xFF8
  5469                           tblptrh	equ	0xFF7
  5470                           tblptrl	equ	0xFF6
  5471                           tablat	equ	0xFF5
  5472                           prodh	equ	0xFF4
  5473                           prodl	equ	0xFF3
  5474                           intcon	equ	0xFF2
  5475                           intcon2	equ	0xFF1
  5476                           postinc0	equ	0xFEE
  5477                           fsr0h	equ	0xFEA
  5478                           fsr0l	equ	0xFE9
  5479                           wreg	equ	0xFE8
  5480                           postinc1	equ	0xFE6
  5481                           postdec1	equ	0xFE5
  5482                           fsr1h	equ	0xFE2
  5483                           fsr1l	equ	0xFE1
  5484                           indf2	equ	0xFDF
  5485                           postinc2	equ	0xFDE
  5486                           postdec2	equ	0xFDD
  5487                           plusw2	equ	0xFDB
  5488                           fsr2h	equ	0xFDA
  5489                           fsr2l	equ	0xFD9
  5490                           status	equ	0xFD8
  5491                           pclatu	equ	0xFFB
  5492                           pclath	equ	0xFFA
  5493                           tblptru	equ	0xFF8
  5494                           tblptrh	equ	0xFF7
  5495                           tblptrl	equ	0xFF6
  5496                           tablat	equ	0xFF5
  5497                           prodh	equ	0xFF4
  5498                           prodl	equ	0xFF3
  5499                           intcon	equ	0xFF2
  5500                           intcon2	equ	0xFF1
  5501                           postinc0	equ	0xFEE
  5502                           fsr0h	equ	0xFEA
  5503                           fsr0l	equ	0xFE9
  5504                           wreg	equ	0xFE8
  5505                           postinc1	equ	0xFE6
  5506                           postdec1	equ	0xFE5
  5507                           fsr1h	equ	0xFE2
  5508                           fsr1l	equ	0xFE1
  5509                           indf2	equ	0xFDF
  5510                           postinc2	equ	0xFDE
  5511                           postdec2	equ	0xFDD
  5512                           plusw2	equ	0xFDB
  5513                           fsr2h	equ	0xFDA
  5514                           fsr2l	equ	0xFD9
  5515                           status	equ	0xFD8
  5516                           
  5517                           	psect	rparam
  5518  0000                     pclatu	equ	0xFFB
  5519                           pclath	equ	0xFFA
  5520                           tblptru	equ	0xFF8
  5521                           tblptrh	equ	0xFF7
  5522                           tblptrl	equ	0xFF6
  5523                           tablat	equ	0xFF5
  5524                           prodh	equ	0xFF4
  5525                           prodl	equ	0xFF3
  5526                           intcon	equ	0xFF2
  5527                           intcon2	equ	0xFF1
  5528                           postinc0	equ	0xFEE
  5529                           fsr0h	equ	0xFEA
  5530                           fsr0l	equ	0xFE9
  5531                           wreg	equ	0xFE8
  5532                           postinc1	equ	0xFE6
  5533                           postdec1	equ	0xFE5
  5534                           fsr1h	equ	0xFE2
  5535                           fsr1l	equ	0xFE1
  5536                           indf2	equ	0xFDF
  5537                           postinc2	equ	0xFDE
  5538                           postdec2	equ	0xFDD
  5539                           plusw2	equ	0xFDB
  5540                           fsr2h	equ	0xFDA
  5541                           fsr2l	equ	0xFD9
  5542                           status	equ	0xFD8


Data Sizes:
    Strings     18
    Constant    0
    Data        2
    BSS         525
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     48      73
    BANK0           160     29      31
    BANK1           256      0     250
    BANK2           256      0     250
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), STR_1(CODE[9]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> ct(COMRAM[4]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(COMRAM[8]), tx_buf(COMRAM[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(COMRAM[8]), tx_buf(COMRAM[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(COMRAM[8]), tx_buf(COMRAM[8]), 

    S790ringbuf$buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BANK1[250]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(COMRAM[8]), tx_buf(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_button_timer_interrupt
    i2___lwdiv->i2_CTMU_read
    i2_CTMU_read->i2___lldiv
    _button_timer_interrupt->i2___lwdiv
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _main->___lwdiv
    _tx_send->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    ___lwdiv->_CTMU_read
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_LCD_Puts->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _CTMU_read->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8937
                          _CTMU_read
                           _Delay_ms
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            ___lwdiv
                          _main_init
                        _ringbuf_num
                        _ringbuf_pop
                            _tx_send
 ---------------------------------------------------------------------------------
 (1) _tx_send                                              1     1      0    1631
                                             15 BANK0      1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put                                          7     4      3    1609
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _ringbuf_pop                                          7     5      2     902
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (3) _ringbuf_num                                          8     6      2     573
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    2242
                          _CTMU_init
                       _I2C_LCD_init
                           _I2C_init
                           _OSC_init
                          _UART_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     155
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6     666
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         0     0      0    1355
                           _Delay_ms
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Clear                                        1     1      0     533
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             3     1      2     289
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _CTMU_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     822
                                             22 BANK0      7     3      4
                          _CTMU_read (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_SetCursor                                    4     3      1     779
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Command                                      2     2      0     533
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_Puts                                         5     3      2     734
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      22
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1     422
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      44
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CTMU_read                                            9     7      2     432
                                             13 BANK0      9     7      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     340
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 14    14      0    2684
                                             34 COMRAM    14    14      0
                           _UART_ISR
             _button_timer_interrupt
                        i2_CTMU_read
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (8) i2___lwdiv                                            7     3      4     214
                                             22 COMRAM     7     3      4
                        i2_CTMU_read (ARG)
 ---------------------------------------------------------------------------------
 (8) i2_CTMU_read                                          9     7      2     306
                                             13 COMRAM     9     7      2
                          i2___lldiv
 ---------------------------------------------------------------------------------
 (9) i2___lldiv                                           13     5      8     214
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (8) _button_timer_interrupt                               5     2      3     992
                                             29 COMRAM     5     2      3
                        i2_CTMU_read (ARG)
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) _UART_ISR                                             1     1      0    1172
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (9) i2_ringbuf_put                                        7     4      3     482
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (9) i2_ringbuf_pop                                        7     5      2     435
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (10) i2_ringbuf_num                                       8     6      2     232
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CTMU_read
     ___lldiv
   _Delay_ms
   _I2C_LCD_Clear
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _I2C_LCD_Puts
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _I2C_LCD_SetCursor
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   ___lwdiv
     _CTMU_read (ARG)
       ___lldiv
   _main_init
     _CTMU_init
     _I2C_LCD_init
       _Delay_ms
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_init
     _OSC_init
     _UART_init
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _ringbuf_num
   _ringbuf_pop
     _ringbuf_num
   _tx_send
     _ringbuf_put
       _ringbuf_num

 _ISR (ROOT)
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _button_timer_interrupt
     i2_CTMU_read (ARG)
       i2___lldiv
     i2___lwdiv (ARG)
       i2_CTMU_read (ARG)
         i2___lldiv
   i2_CTMU_read
     i2___lldiv
   i2___lwdiv
     i2_CTMU_read (ARG)
       i2___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      FA      10       97.7%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      FA       8       97.7%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1D      1F       5       19.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     30      49       1       76.8%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     25C       6        0.0%
DATA                 0      0     25C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Jul 18 21:42:13 2015

             __size_of_I2C_Start 0034                               _d1 0031  
                             _ct 0046               i2___lwdiv@dividend 0017  
                   __CFG_CP0$OFF 000000                              l110 1CAE  
                            l105 1D86                              l215 1572  
                            l350 134A                              l351 134C  
                            l352 1354                              l353 1356  
                            l290 1F32                              l354 135E  
                            l275 1E04                              l355 1360  
                            l356 1368                              l299 1DD6  
                            l818 1690                              l881 1B0A  
                            _ISR 0008                              u900 1E10  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAD                     _I2C_LCD_Puts 1B14  
              ??_I2C_LCD_Command 0064                             ?_ISR 0001  
                   _I2C_LCD_init 1BD8                             l2020 1594  
                           l2100 1B76                             l2140 1AB0  
                           l2142 1ABE                             l2152 1AFA  
                           l2144 1AC8                             l2092 1B42  
                           l2098 1B60                             l2364 1310  
                           l1750 1E2C                             l1742 1212  
                           l2368 1342                             l1842 142C  
                           l1748 1E18                             l1880 160A  
                           l1776 1DA0                             l1882 161C  
                           l1698 1EEA                             l1892 167C  
                           l1884 1626                             l1788 1CB2  
                           l1956 14F2                             l1964 1510  
                           l1958 150A                             l1992 153C  
                           l1988 1532               __CFG_WPFP$PAGE_127 000000  
                           STR_1 0F0A                             STR_2 0F01  
                           u1200 15CC                             u1205 15BE  
                           u1737 1F4A                             u1747 1E20  
                           u1757 1DDC                             u1767 1B5A  
                           u1777 155C                             u1787 1566  
                           _main 128A         button_timer_interrupt@bt 001E  
                           fsr0h 000FEA                             fsr1h 000FE2  
             i2___lwdiv@quotient 001B                             fsr0l 000FE9  
                           fsr2h 000FDA                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
               __end_of_I2C_Send 1F3C           __CFG_DSWDTOSC$T1OSCREF 000000  
               __end_of_I2C_Stop 1F80                             pclat 000FFA  
               __end_of_I2C_init 1F68                             prodh 000FF4  
                           prodl 000FF3                             start 00CC  
                  __CFG_IESO$OFF 000000               __size_of_CTMU_init 0028  
             __size_of_CTMU_read 00C6                     ___param_bank 000010  
                  _I2C_LCD_Clear 1F3C            __end_ofi2_ringbuf_pop 18C8  
          __end_ofi2_ringbuf_num 1760            __end_ofi2_ringbuf_put 1818  
                          ??_ISR 0023           __size_of_I2C_IdleCheck 0020  
                  __CFG_PLLDIV$2 000000                     _BAUDCON1bits 000F7E  
                          ?_main 0001                            _ADRES 000FC3  
                __end_of___lldiv 16A2                            _LATB2 007C52  
                          _LATB3 007C53                            _LATB6 007C56  
                          _LATB7 007C57                  __end_of___lwdiv 1B14  
                          i2l215 1918                            i2l240 0F84  
                          i2l241 0FA6                            i2l242 0FC6  
                          i2l243 0FE6                            i2l244 1006  
                          i2l245 1026                            i2l238 0F3E  
                          i2l239 0F62                            i2l185 1D04  
                          i2l186 1D00                            i2l338 0092  
                          i2l818 1A80                            i2l881 1BCE  
                          _TMR1H 000FCF                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                 __CFG_FCMEN$OFF 000000                 __end_of_UART_ISR 1D24  
             __size_of_UART_init 0020                 __end_of_OSC_init 1F76  
              __end_of_I2C_Start 1E16                     ?i2_CTMU_read 000E  
                          tablat 000FF5                            plusw2 000FDB  
                          status 000FD8                  __end_of_tx_send 1F20  
               __end_of_Delay_ms 1E44                      CTMU_read@ch 0070  
             __size_ofi2___lldiv 008C               __size_ofi2___lwdiv 005C  
                 ?_I2C_LCD_Clear 0001                  __initialization 1D24  
              i2___lldiv@divisor 0005                     __end_of_main 1370  
              i2___lldiv@counter 000D              ringbuf_init@bufsize 0064  
                         ??_main 007D                    __activetblptr 000001  
              __end_of_CTMU_init 1EC4                __end_of_CTMU_read 15DC  
                         _BCL1IF 007D0B                    _I2C_IdleCheck 1EE4  
              _I2C_LCD_SetCursor 1E70                           _ANCON0 000F48  
                         _ANCON1 000F49               I2C_LCD_Command@ans 0065  
                         i2l2200 1B92                           i2l2050 106E  
                         i2l2202 1B9C                           i2l2212 1BC2  
                         i2l2204 1BA4                           i2l2070 1126  
                         i2l2062 10DA                           i2l2054 1092  
                         i2l2046 104A                           i2l2074 114C  
                         i2l2066 1100                           i2l2058 10B6  
                         i2l2162 18E6                           i2l2340 0054  
                         i2l2078 1172                           i2l2190 1930  
                         i2l2158 18DE                   __CFG_WDTEN$OFF 000000  
                         i2l1904 1800                           i2l1914 18A8  
                         i2l1922 18C2                           i2l1764 1704  
                         i2l1916 18BE                           i2l1932 1A28  
                         i2l1934 1A36                           i2l1944 1A70  
                         i2l1936 1A3E               ?_I2C_LCD_SetCursor 0066  
                         _RCREG1 000FAF                           _SPBRG1 000FB0  
                         _SSP1IF 007CF3                   __CFG_WPCFG$OFF 000000  
                         _TXREG1 000FAE                  i2ringbuf_pop@rb 0009  
                i2ringbuf_num@rb 0001                  i2ringbuf_put@rb 0009  
                 __CFG_WPDIS$OFF 000000              ??_I2C_LCD_SetCursor 0067  
                 __CFG_XINST$OFF 000000                     ?_ringbuf_pop 0068  
                   ?_ringbuf_num 0060                     ?_ringbuf_put 0068  
              __end_of_UART_init 1EE4                        ??___lldiv 0068  
                   ?_timer0_init 0001                     ?_timer1_init 0060  
                      ??___lwdiv 007A                     ?_timer3_init 0001  
                         clear_0 1D2A                           clear_1 1D36  
                         clear_2 1D42                  __CFG_CLKOEC$OFF 000000  
                         _rx_buf 0036                           _tx_buf 003E  
                      ?_I2C_Send 0001                        ?_I2C_Stop 0001  
              __end_ofi2___lldiv 1A92                __end_ofi2___lwdiv 1BD8  
                   __mediumconst 0000                        ?_I2C_init 0001  
      __end_of_I2C_LCD_SetCursor 1E9C                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                 ?_I2C_IdleCheck 0001                        ??_tx_send 006F  
           __CFG_LS48MHZ$SYS48X8 000000                       __accesstop 0060  
        __end_of__initialization 1D60                     CTMU_read@sum 0071  
                  ___rparam_used 000001                  ??_I2C_LCD_Clear 0066  
           __CFG_WPEND$PAGE_WPFP 000000                   __pcstackCOMRAM 0001  
             i2___lldiv@dividend 0001                     __pidataBANK0 1F80  
                      ?_UART_ISR 0001                        ?_OSC_init 0001  
                __CFG_DSWDTPS$G2 000000                  _I2C_LCD_Command 1DAA  
               I2C_LCD_Command@c 0064                       ??_I2C_Send 0062  
                     ??_I2C_Stop 0062                       ??_I2C_init 0060  
                      ?_Delay_ms 0060               i2___lldiv@quotient 0009  
             __size_of_main_init 0094                       __pbssBANK1 0100  
                     __pbssBANK2 0200             __size_ofi2_CTMU_read 00AA  
                     ??_UART_ISR 0010                       ??_OSC_init 0060  
           I2C_LCD_SetCursor@col 0069             I2C_LCD_SetCursor@row 0066  
                   I2C_Send@data 0062               __CFG_OSC$INTOSCPLL 000000  
                ??_I2C_IdleCheck 0060                       ??_Delay_ms 0062  
     __size_of_I2C_LCD_SetCursor 002C                     i2CTMU_read@i 0016  
         I2C_LCD_SetCursor@F9845 007D                  __CFG_WDTPS$1024 000000  
                        _SPBRGH1 000F7F                          _SSP1ADD 000FC8  
                        _SSP1BUF 000FC9             timer1_init@prescaler 0062  
               i2ringbuf_pop@ret 000F                 __CFG_CFGPLLEN$ON 000000  
       ??_button_timer_interrupt 0021                        _I2C_Start 1DE2  
                        __Hparam 0000                          __Lparam 0000  
                     _ctmu_value 0034          __end_of_I2C_LCD_Command 1DE2  
                  ?_ringbuf_init 0060                          ___lldiv 15DC  
                        ___lwdiv 1A92                     __psmallconst 0F00  
           __size_of_ringbuf_pop 00D0             __size_of_ringbuf_num 00F0  
           __size_of_ringbuf_put 00D6                  __CFG_STVREN$OFF 000000  
              __end_of_main_init 1A06                          __pcinit 1D24  
                        __ramtop 0F00             __size_of_timer0_init 003C  
           __size_of_timer1_init 0052                          __ptext0 128A  
                        __ptext1 1F04                          __ptext2 1370  
                        __ptext3 1446                          __ptext4 119A  
                        __ptext5 1972                          __ptext6 1E44  
                        __ptext7 1C84                          __ptext8 1D6E  
                        __ptext9 1C30             __size_of_timer3_init 002C  
                  I2C_LCD_Puts@s 0064                        _T0CONbits 000FD5  
                   __size_of_ISR 00C4                        _T1CONbits 000FCD  
                      _T3CONbits 000F79                        _T5CONbits 000F22  
                        _tx_send 1F04             end_of_initialization 1D60  
         __size_ofi2_ringbuf_pop 00B0           __size_ofi2_ringbuf_num 00BE  
         __size_ofi2_ringbuf_put 00B8                        _CTMU_init 1E9C  
                      _CTMU_read 1516                     _CTMUCONHbits 000FB3  
                   _CTMUCONLbits 000FB2                       ?_I2C_Start 0062  
                ___lldiv@divisor 0064             timer3_init@prescaler 0061  
                ___lldiv@counter 006C                   i2CTMU_read@sum 0012  
                 ??_ringbuf_init 0066                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                      _UART_init 1EC4                 __CFG_DSBOREN$OFF 000000  
         i2ringbuf_put@asciicode 000B                 __CFG_CPUDIV$OSC1 000000  
              __size_of_I2C_Send 001C                __size_of_I2C_Stop 000A  
              __size_of_I2C_init 0012                i2___lwdiv@divisor 0019  
                      i2___lldiv 1A06                        i2___lwdiv 1B7C  
              i2___lwdiv@counter 001D                       ?_CTMU_init 0001  
                     ?_CTMU_read 006D  __size_of_button_timer_interrupt 0286  
        timer1_init@clock_select 0060                 __CFG_IOL1WAY$OFF 000000  
            __CFG_MSSP7B_EN$MSK7 000000                 ?_I2C_LCD_Command 0001  
                 ringbuf_init@rb 0060                   ringbuf_pop@ret 006E  
                  i2_ringbuf_pop 1818                    i2_ringbuf_num 16A2  
                  i2_ringbuf_put 1760                __size_of_UART_ISR 004E  
                     ?_UART_init 0001                __size_of_OSC_init 000E  
               __CFG_DSWDTEN$OFF 000000              start_initialization 1D24  
                     CTMU_read@i 0075                      __end_of_ISR 00CC  
                  ?_I2C_LCD_Puts 0064                    ?_I2C_LCD_init 0001  
                  UART_ISR@ascii 0010                __size_of_Delay_ms 002E  
                     ?i2___lldiv 0001                       ?i2___lwdiv 0017  
                    ??_I2C_Start 0063            __end_of_I2C_LCD_Clear 1F56  
                 ?i2_ringbuf_pop 0009                   ?i2_ringbuf_num 0001  
                 ?i2_ringbuf_put 0009                __CFG_ADCSEL$BIT12 000000  
                    __pdataBANK0 007D           _button_timer_interrupt 0F14  
                    __pbssCOMRAM 0031                    __pcstackBANK0 0060  
                 ??_I2C_LCD_Puts 0066                   ??_I2C_LCD_init 0067  
           __end_of_ringbuf_init 1C84                 tx_send@asciicode 006F  
                  ??i2_CTMU_read 0010                      ??_CTMU_init 0060  
                    ??_CTMU_read 006F                 ___lwdiv@dividend 0076  
                      __pintcode 0008                         ?___lldiv 0060  
                       ?___lwdiv 0076                  I2C_LCD_Puts@ans 0067  
                    ??_UART_init 0060                      __smallconst 0F00  
                      _main_init 1972                      I2C_Start@rw 0062  
                       _I2C_Send 1F20                         _I2C_Stop 1F76  
           __CFG_RTCOSC$T1OSCREF 000000                         _I2C_init 1F56  
          __end_of_I2C_IdleCheck 1F04                 ___lwdiv@quotient 007A  
                       ?_tx_send 0001                      ??i2___lldiv 0009  
                    ??i2___lwdiv 001B                         _CTMUCONH 000FB3  
                       _CTMUCONL 000FB2                         _CTMUICON 000FB1  
       ringbuf_init@internal_buf 0062                         _IPR1bits 000F9F  
                       _IPR2bits 000FA2                         _PIE1bits 000F9D  
                       _PIE2bits 000FA0                         _IPR5bits 000F99  
                       _PIE5bits 000F91              __end_ofi2_CTMU_read 1972  
                       i2u135_40 10F0                         i2u136_40 1116  
                       i2u137_40 113C                    i2CTMU_read@ch 0011  
                       i2u138_40 1162                         i2u147_40 1962  
                       i2u147_45 1958                  ??i2_ringbuf_pop 000B  
                ??i2_ringbuf_num 0003                         i2u180_47 190C  
                       i2u166_40 0088                  ??i2_ringbuf_put 000C  
                       i2u167_40 008A                         _PIR1bits 000F9E  
                       _PIR2bits 000FA1                         i2u179_47 1902  
                       _PIR5bits 000F98                    ??_ringbuf_pop 006A  
                  ??_ringbuf_num 0062                    ??_ringbuf_put 006B  
                       _UART_ISR 1CD6                         _SSP1CON1 000FC6  
                       _SSP1CON2 000FC5                    ??_timer0_init 0060  
                  ??_timer1_init 0061                    ??_timer3_init 0060  
                       _SSP1STAT 000FC7                         _OSC_init 1F68  
                     _ADCON0bits 000FC2                       _ADCON1bits 000FC1  
               __CFG_SOSCSEL$LOW 000000   button_timer_interrupt@sw_value 0020  
                     ?_main_init 0001                         _Delay_ms 1E16  
                  ringbuf_pop@rb 0068                    ringbuf_num@rb 0060  
                  I2C_Start@adrs 0063                    ringbuf_put@rb 0068  
                    _INTCON2bits 000FF1                         __Hrparam 0000  
                       __Lrparam 0000                     __Lsmallconst 0F00  
           __end_of_I2C_LCD_Puts 1B7C             __end_of_I2C_LCD_init 1C30  
              I2C_IdleCheck@mask 0061                 __size_of___lldiv 00C6  
               __size_of___lwdiv 0082              __end_of_ringbuf_pop 1516  
            __end_of_ringbuf_num 128A              __end_of_ringbuf_put 1446  
            __end_of_timer0_init 1DAA            __size_of_ringbuf_init 0054  
            __end_of_timer1_init 1CD6              __end_of_timer3_init 1E70  
                ___lwdiv@divisor 0078                  ___lwdiv@counter 007C  
           timer0_init@prescaler 0061                         __ptext10 1EC4  
                       __ptext11 1F68                         __ptext20 1B14  
                       __ptext12 1F56                         __ptext21 1F76  
                       __ptext13 1BD8                         __ptext30 1A06  
                       __ptext22 1DE2                         __ptext14 1F3C  
                       __ptext31 0F14                         __ptext23 1F20  
                       __ptext15 1E16                         __ptext32 1CD6  
                       __ptext24 1EE4                         __ptext16 1E9C  
                       __ptext33 1760                         __ptext25 1516  
                       __ptext17 1A92                         __ptext34 1818  
                       __ptext26 15DC                         __ptext18 1E70  
                       __ptext35 16A2                         __ptext19 1DAA  
                       __ptext28 1B7C                         __ptext29 18C8  
                   _SSP1CON2bits 000FC5                 __size_of_tx_send 001C  
                    i2_CTMU_read 18C8                    __size_of_main 00E6  
        ?_button_timer_interrupt 001E                     _ringbuf_init 1C30  
       __size_of_I2C_LCD_Command 0038                   main_init@rxbuf 0200  
                 main_init@txbuf 0100                      ??_main_init 0067  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
           ringbuf_put@asciicode 006A     I2C_LCD_SetCursor@row_offsets 0067  
                     Delay_ms@ms 0060                         intlevel2 0000  
               ___lldiv@dividend 0060                       _RCSTA1bits 000FAC  
                     _OSCCONbits 000FD3   __end_of_button_timer_interrupt 119A  
                    _ringbuf_pop 1446                      _ringbuf_num 119A  
                    _ringbuf_put 1370                      _timer0_init 1D6E  
                    _timer1_init 1C84                      _timer3_init 1E44  
               ___lldiv@quotient 0068           __size_of_I2C_LCD_Clear 001A  
          __size_of_I2C_LCD_Puts 0068            __size_of_I2C_LCD_init 0058  
