

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Oct 06 17:32:44 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    75  0000                     
    76                           	psect	idataBANK0
    77  012E58                     __pidataBANK0:
    78                           	opt stack 0
    79                           
    80                           ;initializer for epoch_to_caltime@month_cache
    81  012E58  01                 	db	1
    82                           
    83                           	psect	mediumconst
    84  00FDE6                     __pmediumconst:
    85                           	opt stack 0
    86  00FDE6  00                 	db	0
    87  00FDE7                     _dpowers:
    88                           	opt stack 0
    89  00FDE7  0001               	dw	1
    90  00FDE9  000A               	dw	10
    91  00FDEB  0064               	dw	100
    92  00FDED  03E8               	dw	1000
    93  00FDEF  2710               	dw	10000
    94  00FDF1                     __end_of_dpowers:
    95                           	opt stack 0
    96  00FDF1                     _weekday_3char:
    97                           	opt stack 0
    98  00FDF1  53                 	db	83
    99  00FDF2  55                 	db	85
   100  00FDF3  4E                 	db	78
   101  00FDF4  00                 	db	0
   102  00FDF5  4D                 	db	77
   103  00FDF6  4F                 	db	79
   104  00FDF7  4E                 	db	78
   105  00FDF8  00                 	db	0
   106  00FDF9  54                 	db	84
   107  00FDFA  55                 	db	85
   108  00FDFB  45                 	db	69
   109  00FDFC  00                 	db	0
   110  00FDFD  57                 	db	87
   111  00FDFE  45                 	db	69
   112  00FDFF  44                 	db	68
   113  00FE00  00                 	db	0
   114  00FE01  54                 	db	84
   115  00FE02  48                 	db	72
   116  00FE03  55                 	db	85
   117  00FE04  00                 	db	0
   118  00FE05  46                 	db	70
   119  00FE06  52                 	db	82
   120  00FE07  49                 	db	73
   121  00FE08  00                 	db	0
   122  00FE09  53                 	db	83
   123  00FE0A  41                 	db	65
   124  00FE0B  54                 	db	84
   125  00FE0C  00                 	db	0
   126  00FE0D                     __end_of_weekday_3char:
   127                           	opt stack 0
   128  0000                     _PPSCONbits	set	3775
   129  0000                     _RPOR3	set	3779
   130  0000                     _RPOR4	set	3780
   131  0000                     _RPOR5	set	3781
   132  0000                     _ANCON0	set	3912
   133  0000                     _ANCON1	set	3913
   134  0000                     _CCP3CONbits	set	3861
   135  0000                     _CCP4CONbits	set	3858
   136  0000                     _CCPR3L	set	3862
   137  0000                     _CCPR3Lbits	set	3862
   138  0000                     _CCPR4L	set	3859
   139  0000                     _CCPR4Lbits	set	3859
   140  0000                     _CCPTMRS0bits	set	3922
   141  0000                     _CCPTMRS1bits	set	3921
   142  0000                     _PADCFG1bits	set	3900
   143  0000                     _RTCCAL	set	3902
   144  0000                     _RTCCFGbits	set	3903
   145  0000                     _RTCVALH	set	3899
   146  0000                     _RTCVALL	set	3898
   147  0000                     _T5CONbits	set	3874
   148  0000                     _ADRES	set	4035
   149  0000                     _ADCON0bits	set	4034
   150  0000                     _ADCON1bits	set	4033
   151  0000                     _BAUDCON1bits	set	3966
   152  0000                     _CCP1CONbits	set	4026
   153  0000                     _CCP2CONbits	set	4020
   154  0000                     _CCPR1L	set	4027
   155  0000                     _CCPR1Lbits	set	4027
   156  0000                     _CCPR2L	set	4021
   157  0000                     _CCPR2Lbits	set	4021
   158  0000                     _CTMUCONH	set	4019
   159  0000                     _CTMUCONHbits	set	4019
   160  0000                     _CTMUCONL	set	4018
   161  0000                     _CTMUCONLbits	set	4018
   162  0000                     _CTMUICON	set	4017
   163  0000                     _EECON2	set	4007
   164  0000                     _INTCON2bits	set	4081
   165  0000                     _INTCONbits	set	4082
   166  0000                     _IPR1bits	set	3999
   167  0000                     _IPR2bits	set	4002
   168  0000                     _IPR5bits	set	3993
   169  0000                     _OSCCONbits	set	4051
   170  0000                     _OSCTUNEbits	set	3995
   171  0000                     _PIE1bits	set	3997
   172  0000                     _PIE2bits	set	4000
   173  0000                     _PIE5bits	set	3985
   174  0000                     _PIR1bits	set	3998
   175  0000                     _PIR2bits	set	4001
   176  0000                     _PIR5bits	set	3992
   177  0000                     _PORTAbits	set	3968
   178  0000                     _PR2	set	4043
   179  0000                     _RCREG1	set	4015
   180  0000                     _RCSTA1bits	set	4012
   181  0000                     _SPBRG1	set	4016
   182  0000                     _SPBRGH1	set	3967
   183  0000                     _T0CONbits	set	4053
   184  0000                     _T1CONbits	set	4045
   185  0000                     _T2CONbits	set	4042
   186  0000                     _T3CONbits	set	3961
   187  0000                     _TMR1H	set	4047
   188  0000                     _TRISA	set	3986
   189  0000                     _TRISB	set	3987
   190  0000                     _TRISC	set	3988
   191  0000                     _TXREG1	set	4014
   192  0000                     _TXSTA1bits	set	4013
   193  0000                     _LATB2	set	31826
   194  00FE0D                     STR_24:
   195  00FE0D  09                 	db	9
   196  00FE0E  2A                 	db	42
   197  00FE0F  2A                 	db	42
   198  00FE10  2A                 	db	42
   199  00FE11  2A                 	db	42
   200  00FE12  2A                 	db	42
   201  00FE13  2A                 	db	42
   202  00FE14  2A                 	db	42
   203  00FE15  2A                 	db	42
   204  00FE16  2A                 	db	42
   205  00FE17  2A                 	db	42
   206  00FE18  2A                 	db	42
   207  00FE19  2A                 	db	42
   208  00FE1A  2A                 	db	42
   209  00FE1B  2A                 	db	42
   210  00FE1C  2A                 	db	42
   211  00FE1D  2A                 	db	42
   212  00FE1E  2A                 	db	42
   213  00FE1F  2A                 	db	42
   214  00FE20  2A                 	db	42
   215  00FE21  2A                 	db	42
   216  00FE22  2A                 	db	42
   217  00FE23  2A                 	db	42
   218  00FE24  2A                 	db	42
   219  00FE25  2A                 	db	42
   220  00FE26  2A                 	db	42
   221  00FE27  2A                 	db	42
   222  00FE28  0A                 	db	10
   223  00FE29  09                 	db	9
   224  00FE2A  2A                 	db	42
   225  00FE2B  2A                 	db	42
   226  00FE2C  2A                 	db	42
   227  00FE2D  2A                 	db	42
   228  00FE2E  20                 	db	32
   229  00FE2F  4B                 	db	75	;'K'
   230  00FE30  69                 	db	105	;'i'
   231  00FE31  6C                 	db	108	;'l'
   232  00FE32  6C                 	db	108	;'l'
   233  00FE33  69                 	db	105	;'i'
   234  00FE34  66                 	db	102	;'f'
   235  00FE35  69                 	db	105	;'i'
   236  00FE36  73                 	db	115	;'s'
   237  00FE37  68                 	db	104	;'h'
   238  00FE38  20                 	db	32
   239  00FE39  4C                 	db	76	;'L'
   240  00FE3A  69                 	db	105	;'i'
   241  00FE3B  67                 	db	103	;'g'
   242  00FE3C  68                 	db	104	;'h'
   243  00FE3D  74                 	db	116	;'t'
   244  00FE3E  20                 	db	32
   245  00FE3F  20                 	db	32
   246  00FE40  2A                 	db	42
   247  00FE41  2A                 	db	42
   248  00FE42  2A                 	db	42
   249  00FE43  2A                 	db	42
   250  00FE44  0A                 	db	10
   251  00FE45  09                 	db	9
   252  00FE46  2A                 	db	42
   253  00FE47  2A                 	db	42
   254  00FE48  2A                 	db	42
   255  00FE49  2A                 	db	42
   256  00FE4A  20                 	db	32
   257  00FE4B  4D                 	db	77	;'M'
   258  00FE4C  61                 	db	97	;'a'
   259  00FE4D  64                 	db	100	;'d'
   260  00FE4E  65                 	db	101	;'e'
   261  00FE4F  20                 	db	32
   262  00FE50  62                 	db	98	;'b'
   263  00FE51  79                 	db	121	;'y'
   264  00FE52  20                 	db	32
   265  00FE53  40                 	db	64	;'@'
   266  00FE54  52                 	db	82	;'R'
   267  00FE55  79                 	db	121	;'y'
   268  00FE56  6F                 	db	111	;'o'
   269  00FE57  6B                 	db	107	;'k'
   270  00FE58  65                 	db	101	;'e'
   271  00FE59  72                 	db	114	;'r'
   272  00FE5A  69                 	db	105	;'i'
   273  00FE5B  20                 	db	32
   274  00FE5C  2A                 	db	42
   275  00FE5D  2A                 	db	42
   276  00FE5E  2A                 	db	42
   277  00FE5F  2A                 	db	42
   278  00FE60  0A                 	db	10
   279  00FE61  09                 	db	9
   280  00FE62  2A                 	db	42
   281  00FE63  2A                 	db	42
   282  00FE64  2A                 	db	42
   283  00FE65  2A                 	db	42
   284  00FE66  2A                 	db	42
   285  00FE67  2A                 	db	42
   286  00FE68  2A                 	db	42
   287  00FE69  2A                 	db	42
   288  00FE6A  2A                 	db	42
   289  00FE6B  2A                 	db	42
   290  00FE6C  2A                 	db	42
   291  00FE6D  2A                 	db	42
   292  00FE6E  2A                 	db	42
   293  00FE6F  2A                 	db	42
   294  00FE70  2A                 	db	42
   295  00FE71  2A                 	db	42
   296  00FE72  2A                 	db	42
   297  00FE73  2A                 	db	42
   298  00FE74  2A                 	db	42
   299  00FE75  2A                 	db	42
   300  00FE76  2A                 	db	42
   301  00FE77  2A                 	db	42
   302  00FE78  2A                 	db	42
   303  00FE79  2A                 	db	42
   304  00FE7A  2A                 	db	42
   305  00FE7B  2A                 	db	42
   306  00FE7C  0A                 	db	10
   307  00FE7D  0A                 	db	10
   308  00FE7E  09                 	db	9
   309  00FE7F  63                 	db	99	;'c'
   310  00FE80  6F                 	db	111	;'o'
   311  00FE81  6D                 	db	109	;'m'
   312  00FE82  6D                 	db	109	;'m'
   313  00FE83  61                 	db	97	;'a'
   314  00FE84  6E                 	db	110	;'n'
   315  00FE85  64                 	db	100	;'d'
   316  00FE86  20                 	db	32
   317  00FE87  09                 	db	9
   318  00FE88  6F                 	db	111	;'o'
   319  00FE89  70                 	db	112	;'p'
   320  00FE8A  65                 	db	101	;'e'
   321  00FE8B  6C                 	db	108	;'l'
   322  00FE8C  61                 	db	97	;'a'
   323  00FE8D  6E                 	db	110	;'n'
   324  00FE8E  64                 	db	100	;'d'
   325  00FE8F  31                 	db	49	;'1'
   326  00FE90  09                 	db	9
   327  00FE91  6F                 	db	111	;'o'
   328  00FE92  70                 	db	112	;'p'
   329  00FE93  65                 	db	101	;'e'
   330  00FE94  6C                 	db	108	;'l'
   331  00FE95  61                 	db	97	;'a'
   332  00FE96  6E                 	db	110	;'n'
   333  00FE97  64                 	db	100	;'d'
   334  00FE98  32                 	db	50	;'2'
   335  00FE99  0A                 	db	10
   336  00FE9A  0A                 	db	10
   337  00FE9B  09                 	db	9
   338  00FE9C  70                 	db	112	;'p'
   339  00FE9D  72                 	db	114	;'r'
   340  00FE9E  69                 	db	105	;'i'
   341  00FE9F  6E                 	db	110	;'n'
   342  00FEA0  74                 	db	116	;'t'
   343  00FEA1  5F                 	db	95	;'_'
   344  00FEA2  74                 	db	116	;'t'
   345  00FEA3  69                 	db	105	;'i'
   346  00FEA4  6D                 	db	109	;'m'
   347  00FEA5  65                 	db	101	;'e'
   348  00FEA6  28                 	db	40
   349  00FEA7  74                 	db	116	;'t'
   350  00FEA8  29                 	db	41
   351  00FEA9  0A                 	db	10
   352  00FEAA  09                 	db	9
   353  00FEAB  61                 	db	97	;'a'
   354  00FEAC  64                 	db	100	;'d'
   355  00FEAD  6A                 	db	106	;'j'
   356  00FEAE  75                 	db	117	;'u'
   357  00FEAF  73                 	db	115	;'s'
   358  00FEB0  74                 	db	116	;'t'
   359  00FEB1  5F                 	db	95	;'_'
   360  00FEB2  74                 	db	116	;'t'
   361  00FEB3  69                 	db	105	;'i'
   362  00FEB4  6D                 	db	109	;'m'
   363  00FEB5  65                 	db	101	;'e'
   364  00FEB6  28                 	db	40
   365  00FEB7  61                 	db	97	;'a'
   366  00FEB8  74                 	db	116	;'t'
   367  00FEB9  29                 	db	41
   368  00FEBA  20                 	db	32
   369  00FEBB  5B                 	db	91	;'['
   370  00FEBC  68                 	db	104	;'h'
   371  00FEBD  61                 	db	97	;'a'
   372  00FEBE  6E                 	db	110	;'n'
   373  00FEBF  64                 	db	100	;'d'
   374  00FEC0  3A                 	db	58	;':'
   375  00FEC1  79                 	db	121	;'y'
   376  00FEC2  2C                 	db	44
   377  00FEC3  4D                 	db	77	;'M'
   378  00FEC4  2C                 	db	44
   379  00FEC5  64                 	db	100	;'d'
   380  00FEC6  2C                 	db	44
   381  00FEC7  68                 	db	104	;'h'
   382  00FEC8  2C                 	db	44
   383  00FEC9  6D                 	db	109	;'m'
   384  00FECA  2C                 	db	44
   385  00FECB  73                 	db	115	;'s'
   386  00FECC  5D                 	db	93	;']'
   387  00FECD  20                 	db	32
   388  00FECE  5B                 	db	91	;'['
   389  00FECF  76                 	db	118	;'v'
   390  00FED0  61                 	db	97	;'a'
   391  00FED1  6C                 	db	108	;'l'
   392  00FED2  75                 	db	117	;'u'
   393  00FED3  65                 	db	101	;'e'
   394  00FED4  28                 	db	40
   395  00FED5  64                 	db	100	;'d'
   396  00FED6  65                 	db	101	;'e'
   397  00FED7  63                 	db	99	;'c'
   398  00FED8  69                 	db	105	;'i'
   399  00FED9  6D                 	db	109	;'m'
   400  00FEDA  61                 	db	97	;'a'
   401  00FEDB  6C                 	db	108	;'l'
   402  00FEDC  29                 	db	41
   403  00FEDD  5D                 	db	93	;']'
   404  00FEDE  0A                 	db	10
   405  00FEDF  09                 	db	9
   406  00FEE0  70                 	db	112	;'p'
   407  00FEE1  77                 	db	119	;'w'
   408  00FEE2  6D                 	db	109	;'m'
   409  00FEE3  20                 	db	32
   410  00FEE4  5B                 	db	91	;'['
   411  00FEE5  63                 	db	99	;'c'
   412  00FEE6  6F                 	db	111	;'o'
   413  00FEE7  6C                 	db	108	;'l'
   414  00FEE8  6F                 	db	111	;'o'
   415  00FEE9  72                 	db	114	;'r'
   416  00FEEA  3A                 	db	58	;':'
   417  00FEEB  52                 	db	82	;'R'
   418  00FEEC  2C                 	db	44
   419  00FEED  47                 	db	71	;'G'
   420  00FEEE  2C                 	db	44
   421  00FEEF  42                 	db	66	;'B'
   422  00FEF0  2C                 	db	44
   423  00FEF1  57                 	db	87	;'W'
   424  00FEF2  5D                 	db	93	;']'
   425  00FEF3  20                 	db	32
   426  00FEF4  5B                 	db	91	;'['
   427  00FEF5  76                 	db	118	;'v'
   428  00FEF6  61                 	db	97	;'a'
   429  00FEF7  6C                 	db	108	;'l'
   430  00FEF8  75                 	db	117	;'u'
   431  00FEF9  65                 	db	101	;'e'
   432  00FEFA  28                 	db	40
   433  00FEFB  25                 	db	37
   434  00FEFC  29                 	db	41
   435  00FEFD  3A                 	db	58	;':'
   436  00FEFE  30                 	db	48	;'0'
   437  00FEFF  7E                 	db	126
   438  00FF00  31                 	db	49	;'1'
   439  00FF01  30                 	db	48	;'0'
   440  00FF02  30                 	db	48	;'0'
   441  00FF03  5D                 	db	93	;']'
   442  00FF04  0A                 	db	10
   443  00FF05  09                 	db	9
   444  00FF06  70                 	db	112	;'p'
   445  00FF07  77                 	db	119	;'w'
   446  00FF08  6D                 	db	109	;'m'
   447  00FF09  20                 	db	32
   448  00FF0A  63                 	db	99	;'c'
   449  00FF0B  6C                 	db	108	;'l'
   450  00FF0C  65                 	db	101	;'e'
   451  00FF0D  61                 	db	97	;'a'
   452  00FF0E  72                 	db	114	;'r'
   453  00FF0F  0A                 	db	10
   454  00FF10  09                 	db	9
   455  00FF11  73                 	db	115	;'s'
   456  00FF12  65                 	db	101	;'e'
   457  00FF13  74                 	db	116	;'t'
   458  00FF14  20                 	db	32
   459  00FF15  74                 	db	116	;'t'
   460  00FF16  69                 	db	105	;'i'
   461  00FF17  6D                 	db	109	;'m'
   462  00FF18  65                 	db	101	;'e'
   463  00FF19  5F                 	db	95	;'_'
   464  00FF1A  73                 	db	115	;'s'
   465  00FF1B  79                 	db	121	;'y'
   466  00FF1C  6E                 	db	110	;'n'
   467  00FF1D  63                 	db	99	;'c'
   468  00FF1E  5F                 	db	95	;'_'
   469  00FF1F  6D                 	db	109	;'m'
   470  00FF20  6F                 	db	111	;'o'
   471  00FF21  64                 	db	100	;'d'
   472  00FF22  65                 	db	101	;'e'
   473  00FF23  28                 	db	40
   474  00FF24  73                 	db	115	;'s'
   475  00FF25  79                 	db	121	;'y'
   476  00FF26  6E                 	db	110	;'n'
   477  00FF27  63                 	db	99	;'c'
   478  00FF28  29                 	db	41
   479  00FF29  0A                 	db	10
   480  00FF2A  09                 	db	9
   481  00FF2B  73                 	db	115	;'s'
   482  00FF2C  65                 	db	101	;'e'
   483  00FF2D  74                 	db	116	;'t'
   484  00FF2E  20                 	db	32
   485  00FF2F  41                 	db	65	;'A'
   486  00FF30  44                 	db	68	;'D'
   487  00FF31  43                 	db	67	;'C'
   488  00FF32  5F                 	db	95	;'_'
   489  00FF33  6D                 	db	109	;'m'
   490  00FF34  6F                 	db	111	;'o'
   491  00FF35  64                 	db	100	;'d'
   492  00FF36  65                 	db	101	;'e'
   493  00FF37  28                 	db	40
   494  00FF38  61                 	db	97	;'a'
   495  00FF39  64                 	db	100	;'d'
   496  00FF3A  63                 	db	99	;'c'
   497  00FF3B  29                 	db	41
   498  00FF3C  0A                 	db	10
   499  00FF3D  09                 	db	9
   500  00FF3E  52                 	db	82	;'R'
   501  00FF3F  45                 	db	69	;'E'
   502  00FF40  53                 	db	83	;'S'
   503  00FF41  45                 	db	69	;'E'
   504  00FF42  54                 	db	84	;'T'
   505  00FF43  28                 	db	40
   506  00FF44  29                 	db	41
   507  00FF45  3B                 	db	59	;';'
   508  00FF46  0A                 	db	10
   509  00FF47  00                 	db	0
   510  00FF48                     STR_4:
   511  00FF48  09                 	db	9
   512  00FF49  32                 	db	50	;'2'
   513  00FF4A  30                 	db	48	;'0'
   514  00FF4B  25                 	db	37
   515  00FF4C  30                 	db	48	;'0'
   516  00FF4D  32                 	db	50	;'2'
   517  00FF4E  64                 	db	100	;'d'
   518  00FF4F  2F                 	db	47
   519  00FF50  25                 	db	37
   520  00FF51  30                 	db	48	;'0'
   521  00FF52  32                 	db	50	;'2'
   522  00FF53  64                 	db	100	;'d'
   523  00FF54  2F                 	db	47
   524  00FF55  25                 	db	37
   525  00FF56  30                 	db	48	;'0'
   526  00FF57  32                 	db	50	;'2'
   527  00FF58  64                 	db	100	;'d'
   528  00FF59  28                 	db	40
   529  00FF5A  25                 	db	37
   530  00FF5B  73                 	db	115	;'s'
   531  00FF5C  29                 	db	41
   532  00FF5D  25                 	db	37
   533  00FF5E  30                 	db	48	;'0'
   534  00FF5F  32                 	db	50	;'2'
   535  00FF60  64                 	db	100	;'d'
   536  00FF61  3A                 	db	58	;':'
   537  00FF62  25                 	db	37
   538  00FF63  30                 	db	48	;'0'
   539  00FF64  32                 	db	50	;'2'
   540  00FF65  64                 	db	100	;'d'
   541  00FF66  2D                 	db	45
   542  00FF67  25                 	db	37
   543  00FF68  30                 	db	48	;'0'
   544  00FF69  32                 	db	50	;'2'
   545  00FF6A  64                 	db	100	;'d'
   546  00FF6B  0A                 	db	10
   547  00FF6C  00                 	db	0
   548  00FF6D                     STR_9:
   549  00FF6D  61                 	db	97	;'a'
   550  00FF6E  64                 	db	100	;'d'
   551  00FF6F  6A                 	db	106	;'j'
   552  00FF70  75                 	db	117	;'u'
   553  00FF71  73                 	db	115	;'s'
   554  00FF72  74                 	db	116	;'t'
   555  00FF73  5F                 	db	95	;'_'
   556  00FF74  74                 	db	116	;'t'
   557  00FF75  69                 	db	105	;'i'
   558  00FF76  6D                 	db	109	;'m'
   559  00FF77  65                 	db	101	;'e'
   560  00FF78  00                 	db	0
   561  00FF79                     STR_6:
   562  00FF79  70                 	db	112	;'p'
   563  00FF7A  72                 	db	114	;'r'
   564  00FF7B  69                 	db	105	;'i'
   565  00FF7C  6E                 	db	110	;'n'
   566  00FF7D  74                 	db	116	;'t'
   567  00FF7E  5F                 	db	95	;'_'
   568  00FF7F  74                 	db	116	;'t'
   569  00FF80  69                 	db	105	;'i'
   570  00FF81  6D                 	db	109	;'m'
   571  00FF82  65                 	db	101	;'e'
   572  00FF83  00                 	db	0
   573  00FF84                     STR_25:
   574  00FF84  52                 	db	82	;'R'
   575  00FF85  45                 	db	69	;'E'
   576  00FF86  53                 	db	83	;'S'
   577  00FF87  45                 	db	69	;'E'
   578  00FF88  54                 	db	84	;'T'
   579  00FF89  28                 	db	40
   580  00FF8A  29                 	db	41
   581  00FF8B  3B                 	db	59	;';'
   582  00FF8C  00                 	db	0
   583  00FF8D                     STR_5:
   584  00FF8D  09                 	db	9
   585  00FF8E  65                 	db	101	;'e'
   586  00FF8F  72                 	db	114	;'r'
   587  00FF90  72                 	db	114	;'r'
   588  00FF91  6F                 	db	111	;'o'
   589  00FF92  72                 	db	114	;'r'
   590  00FF93  0A                 	db	10
   591  00FF94  00                 	db	0
   592  00FF95                     STR_41:
   593  00FF95  28                 	db	40
   594  00FF96  6E                 	db	110	;'n'
   595  00FF97  75                 	db	117	;'u'
   596  00FF98  6C                 	db	108	;'l'
   597  00FF99  6C                 	db	108	;'l'
   598  00FF9A  29                 	db	41
   599  00FF9B  00                 	db	0
   600  00FF9C                     STR_21:
   601  00FF9C  73                 	db	115	;'s'
   602  00FF9D  65                 	db	101	;'e'
   603  00FF9E  63                 	db	99	;'c'
   604  00FF9F  6F                 	db	111	;'o'
   605  00FFA0  6E                 	db	110	;'n'
   606  00FFA1  64                 	db	100	;'d'
   607  00FFA2  00                 	db	0
   608  00FFA3                     STR_19:
   609  00FFA3  6D                 	db	109	;'m'
   610  00FFA4  69                 	db	105	;'i'
   611  00FFA5  6E                 	db	110	;'n'
   612  00FFA6  75                 	db	117	;'u'
   613  00FFA7  74                 	db	116	;'t'
   614  00FFA8  65                 	db	101	;'e'
   615  00FFA9  00                 	db	0
   616  00FFAA                     STR_13:
   617  00FFAA  6D                 	db	109	;'m'
   618  00FFAB  6F                 	db	111	;'o'
   619  00FFAC  6E                 	db	110	;'n'
   620  00FFAD  74                 	db	116	;'t'
   621  00FFAE  68                 	db	104	;'h'
   622  00FFAF  00                 	db	0
   623  00FFB0                     STR_40:
   624  00FFB0  63                 	db	99	;'c'
   625  00FFB1  6C                 	db	108	;'l'
   626  00FFB2  65                 	db	101	;'e'
   627  00FFB3  61                 	db	97	;'a'
   628  00FFB4  72                 	db	114	;'r'
   629  00FFB5  00                 	db	0
   630  00FFB6                     STR_27:
   631  00FFB6  73                 	db	115	;'s'
   632  00FFB7  79                 	db	121	;'y'
   633  00FFB8  6E                 	db	110	;'n'
   634  00FFB9  63                 	db	99	;'c'
   635  00FFBA  00                 	db	0
   636  00FFBB                     STR_22:
   637  00FFBB  68                 	db	104	;'h'
   638  00FFBC  65                 	db	101	;'e'
   639  00FFBD  6C                 	db	108	;'l'
   640  00FFBE  70                 	db	112	;'p'
   641  00FFBF  00                 	db	0
   642  00FFC0                     STR_11:
   643  00FFC0  79                 	db	121	;'y'
   644  00FFC1  65                 	db	101	;'e'
   645  00FFC2  61                 	db	97	;'a'
   646  00FFC3  72                 	db	114	;'r'
   647  00FFC4  00                 	db	0
   648  00FFC5                     STR_17:
   649  00FFC5  68                 	db	104	;'h'
   650  00FFC6  6F                 	db	111	;'o'
   651  00FFC7  75                 	db	117	;'u'
   652  00FFC8  72                 	db	114	;'r'
   653  00FFC9  00                 	db	0
   654  00FFCA                     STR_1:
   655  00FFCA  08                 	db	8
   656  00FFCB  20                 	db	32
   657  00FFCC  08                 	db	8
   658  00FFCD  00                 	db	0
   659  00FFCE                     STR_29:
   660  00FFCE  41                 	db	65	;'A'
   661  00FFCF  44                 	db	68	;'D'
   662  00FFD0  43                 	db	67	;'C'
   663  00FFD1  00                 	db	0
   664  00FFD2                     STR_31:
   665  00FFD2  50                 	db	80	;'P'
   666  00FFD3  57                 	db	87	;'W'
   667  00FFD4  4D                 	db	77	;'M'
   668  00FFD5  00                 	db	0
   669  00FFD6                     STR_28:
   670  00FFD6  61                 	db	97	;'a'
   671  00FFD7  64                 	db	100	;'d'
   672  00FFD8  63                 	db	99	;'c'
   673  00FFD9  00                 	db	0
   674  00FFDA                     STR_30:
   675  00FFDA  70                 	db	112	;'p'
   676  00FFDB  77                 	db	119	;'w'
   677  00FFDC  6D                 	db	109	;'m'
   678  00FFDD  00                 	db	0
   679  00FFDE                     STR_26:
   680  00FFDE  73                 	db	115	;'s'
   681  00FFDF  65                 	db	101	;'e'
   682  00FFE0  74                 	db	116	;'t'
   683  00FFE1  00                 	db	0
   684  00FFE2                     STR_15:
   685  00FFE2  64                 	db	100	;'d'
   686  00FFE3  61                 	db	97	;'a'
   687  00FFE4  79                 	db	121	;'y'
   688  00FFE5  00                 	db	0
   689  00FFE6  20                 	db	32
   690  00FFE7  20                 	db	32
   691  00FFE8  00                 	db	0
   692  00FFE9                     STR_8:
   693  00FFE9  61                 	db	97	;'a'
   694  00FFEA  74                 	db	116	;'t'
   695  00FFEB  00                 	db	0
   696  00FFEC                     STR_23:
   697  00FFEC  3F                 	db	63	;'?'
   698  00FFED  00                 	db	0
   699  00FFEE                     STR_37:
   700  00FFEE  42                 	db	66	;'B'
   701  00FFEF  00                 	db	0
   702  00FFF0                     STR_35:
   703  00FFF0  47                 	db	71	;'G'
   704  00FFF1  00                 	db	0
   705  00FFF2                     STR_33:
   706  00FFF2  52                 	db	82	;'R'
   707  00FFF3  00                 	db	0
   708  00FFF4                     STR_39:
   709  00FFF4  57                 	db	87	;'W'
   710  00FFF5  00                 	db	0
   711  00FFF6                     STR_36:
   712  00FFF6  62                 	db	98	;'b'
   713  00FFF7  00                 	db	0
   714  00FFF8                     STR_34:
   715  00FFF8  67                 	db	103	;'g'
   716  00FFF9  00                 	db	0
   717  00FFFA                     STR_20:
   718  00FFFA  73                 	db	115	;'s'
   719  00FFFB  00                 	db	0
   720  00FFFC                     STR_38:
   721  00FFFC  77                 	db	119	;'w'
   722  00FFFD  00                 	db	0
   723  0000                     
   724                           ; #config settings
   725  00FFFE  00                 	db	0	; dummy byte at the end
   726  0000                     
   727                           	psect	cinit
   728  012A92                     __pcinit:
   729                           	opt stack 0
   730  012A92                     start_initialization:
   731                           	opt stack 0
   732  012A92                     __initialization:
   733                           	opt stack 0
   734                           
   735                           ; Clear objects allocated to BIGRAM (1000 bytes)
   736  012A92  EE02  F0FA         	lfsr	0,__pbssBIGRAM
   737  012A96  EE13 F0E8          	lfsr	1,1000
   738  012A9A                     clear_0:
   739  012A9A  6AEE               	clrf	postinc0,c
   740  012A9C  50E5               	movf	postdec1,w,c
   741  012A9E  50E1               	movf	fsr1l,w,c
   742  012AA0  E1FC               	bnz	clear_0
   743  012AA2  50E2               	movf	fsr1h,w,c
   744  012AA4  E1FA               	bnz	clear_0
   745                           
   746                           ; Clear objects allocated to BANK2 (250 bytes)
   747  012AA6  EE02  F000         	lfsr	0,__pbssBANK2
   748  012AAA  0EFA               	movlw	250
   749  012AAC                     clear_1:
   750  012AAC  6AEE               	clrf	postinc0,c
   751  012AAE  06E8               	decf	wreg,f,c
   752  012AB0  E1FD               	bnz	clear_1
   753                           
   754                           ; Clear objects allocated to BANK1 (60 bytes)
   755  012AB2  EE01  F081         	lfsr	0,__pbssBANK1
   756  012AB6  0E3C               	movlw	60
   757  012AB8                     clear_2:
   758  012AB8  6AEE               	clrf	postinc0,c
   759  012ABA  06E8               	decf	wreg,f,c
   760  012ABC  E1FD               	bnz	clear_2
   761                           
   762                           ; Clear objects allocated to BANK0 (62 bytes)
   763  012ABE  EE00  F0C1         	lfsr	0,__pbssBANK0
   764  012AC2  0E3E               	movlw	62
   765  012AC4                     clear_3:
   766  012AC4  6AEE               	clrf	postinc0,c
   767  012AC6  06E8               	decf	wreg,f,c
   768  012AC8  E1FD               	bnz	clear_3
   769                           
   770                           ; Clear objects allocated to COMRAM (27 bytes)
   771  012ACA  EE00  F027         	lfsr	0,__pbssCOMRAM
   772  012ACE  0E1B               	movlw	27
   773  012AD0                     clear_4:
   774  012AD0  6AEE               	clrf	postinc0,c
   775  012AD2  06E8               	decf	wreg,f,c
   776  012AD4  E1FD               	bnz	clear_4
   777                           
   778                           ; Initialize objects allocated to BANK0 (1 bytes)
   779                           ; load TBLPTR registers with __pidataBANK0
   780  012AD6  0E58               	movlw	low __pidataBANK0
   781  012AD8  6EF6               	movwf	tblptrl,c
   782  012ADA  0E2E               	movlw	high __pidataBANK0
   783  012ADC  6EF7               	movwf	tblptrh,c
   784  012ADE  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   785  012AE0  6EF8               	movwf	tblptru,c
   786  012AE2  0009               	tblrd		*+	;fetch initializer
   787  012AE4  CFF5 F0FF          	movff	tablat,__pdataBANK0
   788  012AE8                     end_of_initialization:
   789                           	opt stack 0
   790  012AE8                     __end_of__initialization:
   791                           	opt stack 0
   792  012AE8  0100               	movlb	0
   793  012AEA  EFB0  F091         	goto	_main	;jump to C main() function
   794                           tblptru	equ	0xFF8
   795                           tblptrh	equ	0xFF7
   796                           tblptrl	equ	0xFF6
   797                           tablat	equ	0xFF5
   798                           postinc0	equ	0xFEE
   799                           wreg	equ	0xFE8
   800                           postdec1	equ	0xFE5
   801                           fsr1h	equ	0xFE2
   802                           fsr1l	equ	0xFE1
   803                           
   804                           	psect	bssCOMRAM
   805  000027                     __pbssCOMRAM:
   806                           	opt stack 0
   807  000027                     _d1:
   808                           	opt stack 0
   809  000027                     	ds	3
   810  00002A                     millis_timer@cnt:
   811                           	opt stack 0
   812  00002A                     	ds	2
   813  00002C                     _ADC_flag:
   814                           	opt stack 0
   815  00002C                     	ds	1
   816  00002D                     _edit_flag:
   817                           	opt stack 0
   818  00002D                     	ds	1
   819  00002E                     _tx_buf:
   820                           	opt stack 0
   821  00002E                     	ds	8
   822  000036                     _sw_B:
   823                           	opt stack 0
   824  000036                     	ds	4
   825  00003A                     _sw_G:
   826                           	opt stack 0
   827  00003A                     	ds	4
   828  00003E                     _sw_R:
   829                           	opt stack 0
   830  00003E                     	ds	4
   831                           tblptru	equ	0xFF8
   832                           tblptrh	equ	0xFF7
   833                           tblptrl	equ	0xFF6
   834                           tablat	equ	0xFF5
   835                           postinc0	equ	0xFEE
   836                           wreg	equ	0xFE8
   837                           postdec1	equ	0xFE5
   838                           fsr1h	equ	0xFE2
   839                           fsr1l	equ	0xFE1
   840                           
   841                           	psect	bssBANK0
   842  0000C1                     __pbssBANK0:
   843                           	opt stack 0
   844  0000C1                     _ms:
   845                           	opt stack 0
   846  0000C1                     	ds	4
   847  0000C5                     epoch_to_caltime@day_cache:
   848                           	opt stack 0
   849  0000C5                     	ds	2
   850  0000C7                     RTCC_loop@prev_halfsec:
   851                           	opt stack 0
   852  0000C7                     	ds	1
   853  0000C8                     _colon:
   854                           	opt stack 0
   855  0000C8                     	ds	1
   856  0000C9                     _halfsec:
   857                           	opt stack 0
   858  0000C9                     	ds	1
   859  0000CA                     _light_mode:
   860                           	opt stack 0
   861  0000CA                     	ds	1
   862  0000CB                     _time_change_flag:
   863                           	opt stack 0
   864  0000CB                     	ds	1
   865  0000CC                     epoch_to_caltime@year_cache:
   866                           	opt stack 0
   867  0000CC                     	ds	1
   868  0000CD                     my_terminal_loop@command_init:
   869                           	opt stack 0
   870  0000CD                     	ds	1
   871  0000CE                     my_terminal_loop@op0:
   872                           	opt stack 0
   873  0000CE                     	ds	20
   874  0000E2                     _rx_buf:
   875                           	opt stack 0
   876  0000E2                     	ds	8
   877  0000EA                     my_terminal_loop@command:
   878                           	opt stack 0
   879  0000EA                     	ds	8
   880  0000F2                     _caltime_now:
   881                           	opt stack 0
   882  0000F2                     	ds	7
   883  0000F9                     _epoch_now:
   884                           	opt stack 0
   885  0000F9                     	ds	4
   886  0000FD                     light_loop@_2506:
   887                           	opt stack 0
   888  0000FD                     	ds	1
   889  0000FE                     light_loop@n:
   890                           	opt stack 0
   891  0000FE                     	ds	1
   892                           tblptru	equ	0xFF8
   893                           tblptrh	equ	0xFF7
   894                           tblptrl	equ	0xFF6
   895                           tablat	equ	0xFF5
   896                           postinc0	equ	0xFEE
   897                           wreg	equ	0xFE8
   898                           postdec1	equ	0xFE5
   899                           fsr1h	equ	0xFE2
   900                           fsr1l	equ	0xFE1
   901                           
   902                           	psect	dataBANK0
   903  0000FF                     __pdataBANK0:
   904                           	opt stack 0
   905  0000FF                     epoch_to_caltime@month_cache:
   906                           	opt stack 0
   907  0000FF                     	ds	1
   908                           tblptru	equ	0xFF8
   909                           tblptrh	equ	0xFF7
   910                           tblptrl	equ	0xFF6
   911                           tablat	equ	0xFF5
   912                           postinc0	equ	0xFEE
   913                           wreg	equ	0xFE8
   914                           postdec1	equ	0xFE5
   915                           fsr1h	equ	0xFE2
   916                           fsr1l	equ	0xFE1
   917                           
   918                           	psect	bssBANK1
   919  000181                     __pbssBANK1:
   920                           	opt stack 0
   921  000181                     my_terminal_loop@op1:
   922                           	opt stack 0
   923  000181                     	ds	20
   924  000195                     my_terminal_loop@op2:
   925                           	opt stack 0
   926  000195                     	ds	20
   927  0001A9                     my_terminal_loop@op3:
   928                           	opt stack 0
   929  0001A9                     	ds	20
   930                           tblptru	equ	0xFF8
   931                           tblptrh	equ	0xFF7
   932                           tblptrl	equ	0xFF6
   933                           tablat	equ	0xFF5
   934                           postinc0	equ	0xFEE
   935                           wreg	equ	0xFE8
   936                           postdec1	equ	0xFE5
   937                           fsr1h	equ	0xFE2
   938                           fsr1l	equ	0xFE1
   939                           
   940                           	psect	bssBANK2
   941  000200                     __pbssBANK2:
   942                           	opt stack 0
   943  000200                     main_init@rxbuf:
   944                           	opt stack 0
   945  000200                     	ds	250
   946                           tblptru	equ	0xFF8
   947                           tblptrh	equ	0xFF7
   948                           tblptrl	equ	0xFF6
   949                           tablat	equ	0xFF5
   950                           postinc0	equ	0xFEE
   951                           wreg	equ	0xFE8
   952                           postdec1	equ	0xFE5
   953                           fsr1h	equ	0xFE2
   954                           fsr1l	equ	0xFE1
   955                           
   956                           	psect	bssBIGRAM
   957  0002FA                     __pbssBIGRAM:
   958                           	opt stack 0
   959  0002FA                     main_init@txbuf:
   960                           	opt stack 0
   961  0002FA                     	ds	1000
   962                           tblptru	equ	0xFF8
   963                           tblptrh	equ	0xFF7
   964                           tblptrl	equ	0xFF6
   965                           tablat	equ	0xFF5
   966                           postinc0	equ	0xFEE
   967                           wreg	equ	0xFE8
   968                           postdec1	equ	0xFE5
   969                           fsr1h	equ	0xFE2
   970                           fsr1l	equ	0xFE1
   971                           
   972                           	psect	cstackBANK1
   973  000100                     __pcstackBANK1:
   974                           	opt stack 0
   975  000100                     command_time@tx:
   976                           	opt stack 0
   977                           
   978                           ; 2 bytes @ 0x0
   979  000100                     	ds	2
   980  000102                     command_time@op0:
   981                           	opt stack 0
   982                           
   983                           ; 2 bytes @ 0x2
   984  000102                     	ds	2
   985  000104                     command_time@op1:
   986                           	opt stack 0
   987                           
   988                           ; 2 bytes @ 0x4
   989  000104                     	ds	2
   990  000106                     command_time@op2:
   991                           	opt stack 0
   992                           
   993                           ; 2 bytes @ 0x6
   994  000106                     	ds	2
   995  000108                     command_operation@tx:
   996                           	opt stack 0
   997                           
   998                           ; 2 bytes @ 0x8
   999  000108                     	ds	2
  1000  00010A                     command_operation@op0:
  1001                           	opt stack 0
  1002                           
  1003                           ; 2 bytes @ 0xA
  1004  00010A                     	ds	2
  1005  00010C                     command_operation@op1:
  1006                           	opt stack 0
  1007                           
  1008                           ; 2 bytes @ 0xC
  1009  00010C                     	ds	2
  1010  00010E                     command_operation@op2:
  1011                           	opt stack 0
  1012                           
  1013                           ; 2 bytes @ 0xE
  1014  00010E                     	ds	2
  1015  000110                     command_operation@op3:
  1016                           	opt stack 0
  1017                           
  1018                           ; 2 bytes @ 0x10
  1019  000110                     	ds	2
  1020  000112                     my_terminal_loop@tx:
  1021                           	opt stack 0
  1022                           
  1023                           ; 2 bytes @ 0x12
  1024  000112                     	ds	2
  1025  000114                     my_terminal_loop@rx:
  1026                           	opt stack 0
  1027                           
  1028                           ; 2 bytes @ 0x14
  1029  000114                     	ds	2
  1030  000116                     ??_my_terminal_loop:
  1031                           
  1032                           ; 0 bytes @ 0x16
  1033  000116                     	ds	2
  1034  000118                     my_terminal_loop@buf:
  1035                           	opt stack 0
  1036                           
  1037                           ; 100 bytes @ 0x18
  1038  000118                     	ds	100
  1039  00017C                     _my_terminal_loop$3199:
  1040                           	opt stack 0
  1041                           
  1042                           ; 2 bytes @ 0x7C
  1043  00017C                     	ds	2
  1044  00017E                     my_terminal_loop@i_2284:
  1045                           	opt stack 0
  1046                           
  1047                           ; 1 bytes @ 0x7E
  1048  00017E                     	ds	1
  1049  00017F                     my_terminal_loop@ascii:
  1050                           	opt stack 0
  1051                           
  1052                           ; 1 bytes @ 0x7F
  1053  00017F                     	ds	1
  1054  000180                     my_terminal_loop@i:
  1055                           	opt stack 0
  1056                           
  1057                           ; 1 bytes @ 0x80
  1058  000180                     	ds	1
  1059                           tblptru	equ	0xFF8
  1060                           tblptrh	equ	0xFF7
  1061                           tblptrl	equ	0xFF6
  1062                           tablat	equ	0xFF5
  1063                           postinc0	equ	0xFEE
  1064                           wreg	equ	0xFE8
  1065                           postdec1	equ	0xFE5
  1066                           fsr1h	equ	0xFE2
  1067                           fsr1l	equ	0xFE1
  1068                           
  1069                           	psect	cstackBANK0
  1070  000060                     __pcstackBANK0:
  1071                           	opt stack 0
  1072  000060                     ??_month_length:
  1073  000060                     ??_my_atoi:
  1074  000060                     d_to_x@dec:
  1075                           	opt stack 0
  1076  000060                     ___llmod@counter:
  1077                           	opt stack 0
  1078  000060                     ringbuf_put@rb:
  1079                           	opt stack 0
  1080  000060                     ringbuf_pop@rb:
  1081                           	opt stack 0
  1082  000060                     ringbuf_backspace@rb:
  1083                           	opt stack 0
  1084                           
  1085                           ; 2 bytes @ 0x0
  1086  000060                     	ds	1
  1087  000061                     caltime_to_RTCC@ct:
  1088                           	opt stack 0
  1089                           
  1090                           ; 2 bytes @ 0x1
  1091  000061                     	ds	1
  1092  000062                     ??_ringbuf_pop:
  1093  000062                     ??_ringbuf_backspace:
  1094  000062                     ringbuf_put@asciicode:
  1095                           	opt stack 0
  1096                           
  1097                           ; 1 bytes @ 0x2
  1098  000062                     	ds	1
  1099  000063                     ??_ringbuf_put:
  1100                           
  1101                           ; 0 bytes @ 0x3
  1102  000063                     	ds	1
  1103  000064                     ?___lmul:
  1104                           	opt stack 0
  1105  000064                     my_atoi@ret:
  1106                           	opt stack 0
  1107  000064                     ___lmul@multiplier:
  1108                           	opt stack 0
  1109                           
  1110                           ; 4 bytes @ 0x4
  1111  000064                     	ds	2
  1112  000066                     ?___lwdiv:
  1113                           	opt stack 0
  1114  000066                     ringbuf_pop@ret:
  1115                           	opt stack 0
  1116  000066                     ___lwdiv@dividend:
  1117                           	opt stack 0
  1118                           
  1119                           ; 2 bytes @ 0x6
  1120  000066                     	ds	1
  1121  000067                     ringbuf_put_str@rb:
  1122                           	opt stack 0
  1123  000067                     tx_sends@asciicode:
  1124                           	opt stack 0
  1125                           
  1126                           ; 2 bytes @ 0x7
  1127  000067                     	ds	1
  1128  000068                     ___lwdiv@divisor:
  1129                           	opt stack 0
  1130  000068                     ___lmul@multiplicand:
  1131                           	opt stack 0
  1132                           
  1133                           ; 4 bytes @ 0x8
  1134  000068                     	ds	1
  1135  000069                     ringbuf_put_str@str:
  1136                           	opt stack 0
  1137                           
  1138                           ; 2 bytes @ 0x9
  1139  000069                     	ds	1
  1140  00006A                     ___lwdiv@counter:
  1141                           	opt stack 0
  1142                           
  1143                           ; 1 bytes @ 0xA
  1144  00006A                     	ds	1
  1145  00006B                     ___lwdiv@quotient:
  1146                           	opt stack 0
  1147                           
  1148                           ; 2 bytes @ 0xB
  1149  00006B                     	ds	1
  1150  00006C                     ___lmul@product:
  1151                           	opt stack 0
  1152                           
  1153                           ; 4 bytes @ 0xC
  1154  00006C                     	ds	1
  1155  00006D                     ?___lwmod:
  1156                           	opt stack 0
  1157  00006D                     PWM_set@value:
  1158                           	opt stack 0
  1159  00006D                     ___lwmod@dividend:
  1160                           	opt stack 0
  1161                           
  1162                           ; 2 bytes @ 0xD
  1163  00006D                     	ds	2
  1164  00006F                     ??_PWM_set:
  1165  00006F                     ___lwmod@divisor:
  1166                           	opt stack 0
  1167                           
  1168                           ; 2 bytes @ 0xF
  1169  00006F                     	ds	1
  1170  000070                     ?___lldiv:
  1171                           	opt stack 0
  1172  000070                     caltime_to_epoch@ct:
  1173                           	opt stack 0
  1174  000070                     ___lldiv@dividend:
  1175                           	opt stack 0
  1176                           
  1177                           ; 4 bytes @ 0x10
  1178  000070                     	ds	1
  1179  000071                     PWM_set@color:
  1180                           	opt stack 0
  1181  000071                     ___lwmod@counter:
  1182                           	opt stack 0
  1183                           
  1184                           ; 1 bytes @ 0x11
  1185  000071                     	ds	1
  1186  000072                     ?_sprintf:
  1187                           	opt stack 0
  1188  000072                     ringbuf_put_num@rb:
  1189                           	opt stack 0
  1190  000072                     caltime_to_epoch@ep:
  1191                           	opt stack 0
  1192  000072                     sprintf@sp:
  1193                           	opt stack 0
  1194                           
  1195                           ; 2 bytes @ 0x12
  1196  000072                     	ds	2
  1197  000074                     ??_caltime_to_epoch:
  1198  000074                     ringbuf_put_num@value:
  1199                           	opt stack 0
  1200  000074                     sprintf@f:
  1201                           	opt stack 0
  1202  000074                     ___lldiv@divisor:
  1203                           	opt stack 0
  1204                           
  1205                           ; 4 bytes @ 0x14
  1206  000074                     	ds	2
  1207  000076                     ringbuf_put_num@digits:
  1208                           	opt stack 0
  1209                           
  1210                           ; 1 bytes @ 0x16
  1211  000076                     	ds	1
  1212  000077                     ringbuf_put_num@i:
  1213                           	opt stack 0
  1214                           
  1215                           ; 1 bytes @ 0x17
  1216  000077                     	ds	1
  1217  000078                     caltime_to_epoch@year:
  1218                           	opt stack 0
  1219  000078                     ringbuf_put_num@temp:
  1220                           	opt stack 0
  1221  000078                     ___lldiv@quotient:
  1222                           	opt stack 0
  1223                           
  1224                           ; 4 bytes @ 0x18
  1225  000078                     	ds	1
  1226  000079                     caltime_to_epoch@month_2079:
  1227                           	opt stack 0
  1228                           
  1229                           ; 1 bytes @ 0x19
  1230  000079                     	ds	1
  1231  00007A                     caltime_to_epoch@epoch:
  1232                           	opt stack 0
  1233                           
  1234                           ; 4 bytes @ 0x1A
  1235  00007A                     	ds	2
  1236  00007C                     ___lldiv@counter:
  1237                           	opt stack 0
  1238                           
  1239                           ; 1 bytes @ 0x1C
  1240  00007C                     	ds	1
  1241  00007D                     ?_get_quot_rem:
  1242                           	opt stack 0
  1243  00007D                     get_quot_rem@quot:
  1244                           	opt stack 0
  1245                           
  1246                           ; 2 bytes @ 0x1D
  1247  00007D                     	ds	1
  1248  00007E                     caltime_to_epoch@month:
  1249                           	opt stack 0
  1250                           
  1251                           ; 1 bytes @ 0x1E
  1252  00007E                     	ds	1
  1253  00007F                     get_quot_rem@div:
  1254                           	opt stack 0
  1255  00007F                     RTCC_from_RTCC@ct:
  1256                           	opt stack 0
  1257                           
  1258                           ; 2 bytes @ 0x1F
  1259  00007F                     	ds	2
  1260  000081                     RTCC_from_RTCC@ep:
  1261                           	opt stack 0
  1262  000081                     get_quot_rem@num:
  1263                           	opt stack 0
  1264                           
  1265                           ; 4 bytes @ 0x21
  1266  000081                     	ds	2
  1267  000083                     ??_light_loop:
  1268                           
  1269                           ; 0 bytes @ 0x23
  1270  000083                     	ds	1
  1271  000084                     ??_sprintf:
  1272                           
  1273                           ; 0 bytes @ 0x24
  1274  000084                     	ds	1
  1275  000085                     epoch_to_caltime@ct:
  1276                           	opt stack 0
  1277                           
  1278                           ; 2 bytes @ 0x25
  1279  000085                     	ds	2
  1280  000087                     light_loop@value:
  1281                           	opt stack 0
  1282  000087                     epoch_to_caltime@ep:
  1283                           	opt stack 0
  1284                           
  1285                           ; 2 bytes @ 0x27
  1286  000087                     	ds	1
  1287  000088                     light_loop@value_2507:
  1288                           	opt stack 0
  1289  000088                     sprintf@prec:
  1290                           	opt stack 0
  1291                           
  1292                           ; 1 bytes @ 0x28
  1293  000088                     	ds	1
  1294  000089                     ??_epoch_to_caltime:
  1295  000089                     sprintf@ap:
  1296                           	opt stack 0
  1297  000089                     light_loop@temp:
  1298                           	opt stack 0
  1299                           
  1300                           ; 4 bytes @ 0x29
  1301  000089                     	ds	2
  1302  00008B                     epoch_to_caltime@day_since_epoch:
  1303                           	opt stack 0
  1304  00008B                     sprintf@cp:
  1305                           	opt stack 0
  1306                           
  1307                           ; 2 bytes @ 0x2B
  1308  00008B                     	ds	2
  1309  00008D                     light_loop@i:
  1310                           	opt stack 0
  1311  00008D                     epoch_to_caltime@day:
  1312                           	opt stack 0
  1313  00008D                     sprintf@val:
  1314                           	opt stack 0
  1315                           
  1316                           ; 2 bytes @ 0x2D
  1317  00008D                     	ds	2
  1318  00008F                     epoch_to_caltime@year:
  1319                           	opt stack 0
  1320  00008F                     sprintf@len:
  1321                           	opt stack 0
  1322                           
  1323                           ; 2 bytes @ 0x2F
  1324  00008F                     	ds	1
  1325  000090                     epoch_to_caltime@month:
  1326                           	opt stack 0
  1327                           
  1328                           ; 1 bytes @ 0x30
  1329  000090                     	ds	1
  1330  000091                     sprintf@flag:
  1331                           	opt stack 0
  1332  000091                     epoch_to_caltime@num:
  1333                           	opt stack 0
  1334                           
  1335                           ; 4 bytes @ 0x31
  1336  000091                     	ds	1
  1337  000092                     sprintf@c:
  1338                           	opt stack 0
  1339                           
  1340                           ; 1 bytes @ 0x32
  1341  000092                     	ds	1
  1342  000093                     sprintf@width:
  1343                           	opt stack 0
  1344                           
  1345                           ; 2 bytes @ 0x33
  1346  000093                     	ds	2
  1347  000095                     RTCC_from_caltime@ct:
  1348                           	opt stack 0
  1349  000095                     RTCC_from_epoch@ct:
  1350                           	opt stack 0
  1351  000095                     print_time@tx:
  1352                           	opt stack 0
  1353                           
  1354                           ; 2 bytes @ 0x35
  1355  000095                     	ds	2
  1356  000097                     RTCC_from_caltime@ep:
  1357                           	opt stack 0
  1358  000097                     RTCC_from_epoch@ep:
  1359                           	opt stack 0
  1360  000097                     print_time@str:
  1361                           	opt stack 0
  1362                           
  1363                           ; 30 bytes @ 0x37
  1364  000097                     	ds	30
  1365  0000B5                     command_at_hand@tx:
  1366                           	opt stack 0
  1367                           
  1368                           ; 2 bytes @ 0x55
  1369  0000B5                     	ds	2
  1370  0000B7                     command_at_hand@hand:
  1371                           	opt stack 0
  1372                           
  1373                           ; 2 bytes @ 0x57
  1374  0000B7                     	ds	2
  1375  0000B9                     command_at_hand@min:
  1376                           	opt stack 0
  1377                           
  1378                           ; 1 bytes @ 0x59
  1379  0000B9                     	ds	1
  1380  0000BA                     command_at_hand@max:
  1381                           	opt stack 0
  1382                           
  1383                           ; 1 bytes @ 0x5A
  1384  0000BA                     	ds	1
  1385  0000BB                     command_at_hand@value:
  1386                           	opt stack 0
  1387                           
  1388                           ; 1 bytes @ 0x5B
  1389  0000BB                     	ds	1
  1390  0000BC                     _command_time$3200:
  1391                           	opt stack 0
  1392                           
  1393                           ; 1 bytes @ 0x5C
  1394  0000BC                     	ds	1
  1395  0000BD                     _command_operation$3201:
  1396                           	opt stack 0
  1397                           
  1398                           ; 2 bytes @ 0x5D
  1399  0000BD                     	ds	2
  1400  0000BF                     _command_operation$3202:
  1401                           	opt stack 0
  1402                           
  1403                           ; 2 bytes @ 0x5F
  1404  0000BF                     	ds	2
  1405                           tblptru	equ	0xFF8
  1406                           tblptrh	equ	0xFF7
  1407                           tblptrl	equ	0xFF6
  1408                           tablat	equ	0xFF5
  1409                           postinc0	equ	0xFEE
  1410                           wreg	equ	0xFE8
  1411                           postdec1	equ	0xFE5
  1412                           fsr1h	equ	0xFE2
  1413                           fsr1l	equ	0xFE1
  1414                           
  1415                           	psect	cstackCOMRAM
  1416  000001                     __pcstackCOMRAM:
  1417                           	opt stack 0
  1418  000001                     ?i2_ringbuf_num:
  1419                           	opt stack 0
  1420  000001                     button_timer_interrupt@bt:
  1421                           	opt stack 0
  1422  000001                     i2ringbuf_num@rb:
  1423                           	opt stack 0
  1424                           
  1425                           ; 2 bytes @ 0x0
  1426  000001                     	ds	2
  1427  000003                     ??i2_ringbuf_num:
  1428  000003                     button_timer_interrupt@sw_value:
  1429                           	opt stack 0
  1430                           
  1431                           ; 1 bytes @ 0x2
  1432  000003                     	ds	1
  1433  000004                     
  1434                           ; 0 bytes @ 0x3
  1435  000004                     	ds	5
  1436  000009                     i2ringbuf_put@rb:
  1437                           	opt stack 0
  1438  000009                     i2ringbuf_pop@rb:
  1439                           	opt stack 0
  1440                           
  1441                           ; 2 bytes @ 0x8
  1442  000009                     	ds	2
  1443  00000B                     ??i2_ringbuf_pop:
  1444  00000B                     i2ringbuf_put@asciicode:
  1445                           	opt stack 0
  1446                           
  1447                           ; 1 bytes @ 0xA
  1448  00000B                     	ds	1
  1449  00000C                     ??i2_ringbuf_put:
  1450                           
  1451                           ; 0 bytes @ 0xB
  1452  00000C                     	ds	3
  1453  00000F                     i2ringbuf_pop@ret:
  1454                           	opt stack 0
  1455                           
  1456                           ; 1 bytes @ 0xE
  1457  00000F                     	ds	1
  1458  000010                     UART_ISR@ascii:
  1459                           	opt stack 0
  1460                           
  1461                           ; 1 bytes @ 0xF
  1462  000010                     	ds	1
  1463  000011                     ??_ISR:
  1464                           
  1465                           ; 0 bytes @ 0x10
  1466  000011                     	ds	14
  1467  00001F                     ??_isdigit:
  1468  00001F                     ??_timer0_init:
  1469  00001F                     ??_timer3_init:
  1470  00001F                     ??_x_to_d:
  1471  00001F                     ?_ringbuf_num:
  1472                           	opt stack 0
  1473  00001F                     ?___wmul:
  1474                           	opt stack 0
  1475  00001F                     ?___awdiv:
  1476                           	opt stack 0
  1477  00001F                     ?___awmod:
  1478                           	opt stack 0
  1479  00001F                     ?___llmod:
  1480                           	opt stack 0
  1481  00001F                     timer1_init@clock_select:
  1482                           	opt stack 0
  1483  00001F                     ADC_init@p_ref:
  1484                           	opt stack 0
  1485  00001F                     PWM_init@PR:
  1486                           	opt stack 0
  1487  00001F                     ringbuf_init@rb:
  1488                           	opt stack 0
  1489  00001F                     ringbuf_num@rb:
  1490                           	opt stack 0
  1491  00001F                     ringbuf_delete@rb:
  1492                           	opt stack 0
  1493  00001F                     my_strcmp@str1:
  1494                           	opt stack 0
  1495  00001F                     ___wmul@multiplier:
  1496                           	opt stack 0
  1497  00001F                     ___awdiv@dividend:
  1498                           	opt stack 0
  1499  00001F                     ___awmod@dividend:
  1500                           	opt stack 0
  1501  00001F                     ___llmod@dividend:
  1502                           	opt stack 0
  1503                           
  1504                           ; 4 bytes @ 0x1E
  1505  00001F                     	ds	1
  1506  000020                     ??_timer1_init:
  1507  000020                     timer0_init@prescaler:
  1508                           	opt stack 0
  1509  000020                     timer3_init@prescaler:
  1510                           	opt stack 0
  1511  000020                     x_to_d@hex:
  1512                           	opt stack 0
  1513  000020                     _isdigit$2847:
  1514                           	opt stack 0
  1515                           
  1516                           ; 1 bytes @ 0x1F
  1517  000020                     	ds	1
  1518  000021                     ??_ringbuf_num:
  1519  000021                     timer1_init@prescaler:
  1520                           	opt stack 0
  1521  000021                     isdigit@c:
  1522                           	opt stack 0
  1523  000021                     ringbuf_init@internal_buf:
  1524                           	opt stack 0
  1525  000021                     RTCC_to_caltime@ct:
  1526                           	opt stack 0
  1527  000021                     my_strcmp@str2:
  1528                           	opt stack 0
  1529  000021                     ___wmul@multiplicand:
  1530                           	opt stack 0
  1531  000021                     ___awdiv@divisor:
  1532                           	opt stack 0
  1533  000021                     ___awmod@divisor:
  1534                           	opt stack 0
  1535                           
  1536                           ; 2 bytes @ 0x20
  1537  000021                     	ds	2
  1538  000023                     ??_my_strcmp:
  1539  000023                     RTCC_to_caltime@dumy:
  1540                           	opt stack 0
  1541  000023                     ___awdiv@counter:
  1542                           	opt stack 0
  1543  000023                     ___awmod@counter:
  1544                           	opt stack 0
  1545  000023                     ringbuf_init@bufsize:
  1546                           	opt stack 0
  1547  000023                     ___wmul@product:
  1548                           	opt stack 0
  1549  000023                     ___llmod@divisor:
  1550                           	opt stack 0
  1551                           
  1552                           ; 4 bytes @ 0x22
  1553  000023                     	ds	1
  1554  000024                     ___awdiv@sign:
  1555                           	opt stack 0
  1556  000024                     ___awmod@sign:
  1557                           	opt stack 0
  1558                           
  1559                           ; 1 bytes @ 0x23
  1560  000024                     	ds	1
  1561  000025                     ?_my_atoi:
  1562                           	opt stack 0
  1563  000025                     month_length@month:
  1564                           	opt stack 0
  1565  000025                     my_atoi@str:
  1566                           	opt stack 0
  1567  000025                     ___awdiv@quotient:
  1568                           	opt stack 0
  1569                           
  1570                           ; 2 bytes @ 0x24
  1571  000025                     	ds	1
  1572  000026                     month_length@year:
  1573                           	opt stack 0
  1574                           
  1575                           ; 1 bytes @ 0x25
  1576  000026                     	ds	1
  1577  000027                     tblptru	equ	0xFF8
  1578                           tblptrh	equ	0xFF7
  1579                           tblptrl	equ	0xFF6
  1580                           tablat	equ	0xFF5
  1581                           postinc0	equ	0xFEE
  1582                           wreg	equ	0xFE8
  1583                           postdec1	equ	0xFE5
  1584                           fsr1h	equ	0xFE2
  1585                           fsr1l	equ	0xFE1
  1586                           
  1587                           ; 0 bytes @ 0x26
  1588 ;;
  1589 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1590 ;;
  1591 ;; *************** function _main *****************
  1592 ;; Defined at:
  1593 ;;		line 298 in file "PIC18F27J53-killifish_light04.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;		None
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;		None
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  2  670[None  ] int 
  1600 ;; Registers used:
  1601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1611 ;;Total ram usage:        0 bytes
  1612 ;; Hardware stack levels required when called:   13
  1613 ;; This function calls:
  1614 ;;		_RTCC_from_RTCC
  1615 ;;		_RTCC_from_epoch
  1616 ;;		_RTCC_loop
  1617 ;;		_light_loop
  1618 ;;		_main_init
  1619 ;;		_my_terminal_loop
  1620 ;;		_ringbuf_num
  1621 ;; This function is called by:
  1622 ;;		Startup code after reset
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text0
  1627  012360                     __ptext0:
  1628                           	opt stack 0
  1629  012360                     _main:
  1630                           	opt stack 18
  1631                           
  1632                           ;PIC18F27J53-killifish_light04.c: 299: main_init();
  1633                           
  1634                           ;incstack = 0
  1635  012360  EC6D  F093         	call	_main_init	;wreg free
  1636                           
  1637                           ;PIC18F27J53-killifish_light04.c: 301: RTCC_from_RTCC(&caltime_now, &epoch_now);
  1638  012364  0EF2               	movlw	low _caltime_now
  1639  012366  0100               	movlb	0	; () banked
  1640  012368  6F7F               	movwf	RTCC_from_RTCC@ct& (0+255),b
  1641  01236A  0E00               	movlw	high _caltime_now
  1642  01236C  0100               	movlb	0	; () banked
  1643  01236E  6F80               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  1644  012370  0EF9               	movlw	low _epoch_now
  1645  012372  0100               	movlb	0	; () banked
  1646  012374  6F81               	movwf	RTCC_from_RTCC@ep& (0+255),b
  1647  012376  0E00               	movlw	high _epoch_now
  1648  012378  0100               	movlb	0	; () banked
  1649  01237A  6F82               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  1650  01237C  ECD8  F096         	call	_RTCC_from_RTCC	;wreg free
  1651                           
  1652                           ;PIC18F27J53-killifish_light04.c: 302: if (caltime_now.DD == 0) {
  1653  012380  0100               	movlb	0	; () banked
  1654  012382  51F6               	movf	(_caltime_now+4)& (0+255),w,b
  1655  012384  A4D8               	btfss	status,2,c
  1656  012386  D018               	goto	l5693
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;PIC18F27J53-killifish_light04.c: 303: epoch_now = 0;
  1660  012388  0E00               	movlw	0
  1661  01238A  0100               	movlb	0	; () banked
  1662  01238C  6FF9               	movwf	_epoch_now& (0+255),b
  1663  01238E  0E00               	movlw	0
  1664  012390  6FFA               	movwf	(_epoch_now+1)& (0+255),b
  1665  012392  0E00               	movlw	0
  1666  012394  6FFB               	movwf	(_epoch_now+2)& (0+255),b
  1667  012396  0E00               	movlw	0
  1668  012398  6FFC               	movwf	(_epoch_now+3)& (0+255),b
  1669                           
  1670                           ; BSR set to: 0
  1671                           ;PIC18F27J53-killifish_light04.c: 304: RTCC_from_epoch(&caltime_now, &epoch_now);
  1672  01239A  0EF2               	movlw	low _caltime_now
  1673  01239C  0100               	movlb	0	; () banked
  1674  01239E  6F95               	movwf	RTCC_from_epoch@ct& (0+255),b
  1675  0123A0  0E00               	movlw	high _caltime_now
  1676  0123A2  0100               	movlb	0	; () banked
  1677  0123A4  6F96               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  1678  0123A6  0EF9               	movlw	low _epoch_now
  1679  0123A8  0100               	movlb	0	; () banked
  1680  0123AA  6F97               	movwf	RTCC_from_epoch@ep& (0+255),b
  1681  0123AC  0E00               	movlw	high _epoch_now
  1682  0123AE  0100               	movlb	0	; () banked
  1683  0123B0  6F98               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  1684  0123B2  ECE9  F096         	call	_RTCC_from_epoch	;wreg free
  1685  0123B6  D000               	goto	l5693
  1686  0123B8                     l5693:
  1687                           
  1688                           ;PIC18F27J53-killifish_light04.c: 308: INTCONbits.GIE = 0;
  1689  0123B8  9EF2               	bcf	intcon,7,c	;volatile
  1690                           
  1691                           ;PIC18F27J53-killifish_light04.c: 309: RTCC_loop();
  1692  0123BA  ECC5  F095         	call	_RTCC_loop	;wreg free
  1693                           
  1694                           ;PIC18F27J53-killifish_light04.c: 310: my_terminal_loop(&tx_buf, &rx_buf);
  1695  0123BE  0E2E               	movlw	low _tx_buf
  1696  0123C0  0101               	movlb	1	; () banked
  1697  0123C2  6F12               	movwf	my_terminal_loop@tx& (0+255),b
  1698  0123C4  0E00               	movlw	high _tx_buf
  1699  0123C6  0101               	movlb	1	; () banked
  1700  0123C8  6F13               	movwf	(my_terminal_loop@tx+1)& (0+255),b
  1701  0123CA  0EE2               	movlw	low _rx_buf
  1702  0123CC  0101               	movlb	1	; () banked
  1703  0123CE  6F14               	movwf	my_terminal_loop@rx& (0+255),b
  1704  0123D0  0E00               	movlw	high _rx_buf
  1705  0123D2  0101               	movlb	1	; () banked
  1706  0123D4  6F15               	movwf	(my_terminal_loop@rx+1)& (0+255),b
  1707  0123D6  EC3F  F084         	call	_my_terminal_loop	;wreg free
  1708                           
  1709                           ;PIC18F27J53-killifish_light04.c: 311: if (ringbuf_num(&tx_buf))PIE1bits.TXIE = 1;
  1710  0123DA  0E2E               	movlw	low _tx_buf
  1711  0123DC  6E1F               	movwf	ringbuf_num@rb,c
  1712  0123DE  0E00               	movlw	high _tx_buf
  1713  0123E0  6E20               	movwf	ringbuf_num@rb+1,c
  1714  0123E2  EC3E  F08F         	call	_ringbuf_num	;wreg free
  1715  0123E6  501F               	movf	?_ringbuf_num,w,c
  1716  0123E8  1020               	iorwf	?_ringbuf_num+1,w,c
  1717  0123EA  B4D8               	btfsc	status,2,c
  1718  0123EC  D002               	goto	l5703
  1719  0123EE  889D               	bsf	3997,4,c	;volatile
  1720  0123F0  D000               	goto	l5703
  1721  0123F2                     l5703:
  1722                           
  1723                           ;PIC18F27J53-killifish_light04.c: 312: light_loop();
  1724  0123F2  ECFB  F089         	call	_light_loop	;wreg free
  1725                           
  1726                           ;PIC18F27J53-killifish_light04.c: 313: INTCONbits.GIE = 1;
  1727  0123F6  8EF2               	bsf	intcon,7,c	;volatile
  1728  0123F8  D7DF               	goto	l5693
  1729                           
  1730                           ;PIC18F27J53-killifish_light04.c: 314: }
  1731                           ;PIC18F27J53-killifish_light04.c: 315: return 0;
  1732                           ;	Return value of _main is never used
  1733  0123FA  EF71  F000         	goto	start
  1734  0123FE                     __end_of_main:
  1735                           	opt stack 0
  1736                           tblptru	equ	0xFF8
  1737                           tblptrh	equ	0xFF7
  1738                           tblptrl	equ	0xFF6
  1739                           tablat	equ	0xFF5
  1740                           intcon	equ	0xFF2
  1741                           postinc0	equ	0xFEE
  1742                           wreg	equ	0xFE8
  1743                           postdec1	equ	0xFE5
  1744                           fsr1h	equ	0xFE2
  1745                           fsr1l	equ	0xFE1
  1746                           status	equ	0xFD8
  1747                           
  1748 ;; *************** function _my_terminal_loop *****************
  1749 ;; Defined at:
  1750 ;;		line 22 in file "../My_header\My_terminal.h"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;  tx              2   18[BANK1 ] PTR struct ringbuf
  1753 ;;		 -> tx_buf(8), 
  1754 ;;  rx              2   20[BANK1 ] PTR struct ringbuf
  1755 ;;		 -> rx_buf(8), 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  i               1  126[BANK1 ] unsigned char 
  1758 ;;  i               1  128[BANK1 ] unsigned char 
  1759 ;;  ascii           1  127[BANK1 ] unsigned char 
  1760 ;;  buf           100   24[BANK1 ] unsigned char [100]
  1761 ;; Return value:  Size  Location     Type
  1762 ;;		None               void
  1763 ;; Registers used:
  1764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1770 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1771 ;;      Locals:         0       0     105       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1772 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1773 ;;      Totals:         0       0     111       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1774 ;;Total ram usage:      111 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; Hardware stack levels required when called:   12
  1777 ;; This function calls:
  1778 ;;		_command_operation
  1779 ;;		_ringbuf_backspace
  1780 ;;		_ringbuf_delete
  1781 ;;		_ringbuf_init
  1782 ;;		_ringbuf_num
  1783 ;;		_ringbuf_pop
  1784 ;;		_ringbuf_put
  1785 ;;		_ringbuf_put_num
  1786 ;;		_ringbuf_put_str
  1787 ;; This function is called by:
  1788 ;;		_main
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           	psect	text1
  1793  01087E                     __ptext1:
  1794                           	opt stack 0
  1795  01087E                     _my_terminal_loop:
  1796                           	opt stack 18
  1797                           
  1798                           ;My_header\My_terminal.h: 23: static ringbuf_t command;
  1799                           ;My_header\My_terminal.h: 24: static uint8_t command_init = 0;
  1800                           ;My_header\My_terminal.h: 25: if (command_init == 0) {
  1801                           
  1802                           ;incstack = 0
  1803  01087E  0100               	movlb	0	; () banked
  1804  010880  51CD               	movf	my_terminal_loop@command_init& (0+255),w,b
  1805  010882  0100               	movlb	0	; () banked
  1806  010884  A4D8               	btfss	status,2,c
  1807  010886  D012               	goto	l5447
  1808                           
  1809                           ; BSR set to: 0
  1810                           ;My_header\My_terminal.h: 26: command_init = 1;
  1811  010888  0E01               	movlw	1
  1812  01088A  0100               	movlb	0	; () banked
  1813  01088C  6FCD               	movwf	my_terminal_loop@command_init& (0+255),b
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;My_header\My_terminal.h: 27: char buf[100];
  1817                           ;My_header\My_terminal.h: 28: ringbuf_init(&command, buf, sizeof (buf));
  1818  01088E  0EEA               	movlw	low my_terminal_loop@command
  1819  010890  6E1F               	movwf	ringbuf_init@rb,c
  1820  010892  0E00               	movlw	high my_terminal_loop@command
  1821  010894  6E20               	movwf	ringbuf_init@rb+1,c
  1822  010896  0E18               	movlw	low my_terminal_loop@buf
  1823  010898  6E21               	movwf	ringbuf_init@internal_buf,c
  1824  01089A  0E01               	movlw	high my_terminal_loop@buf
  1825  01089C  6E22               	movwf	ringbuf_init@internal_buf+1,c
  1826  01089E  0E00               	movlw	0
  1827  0108A0  6E24               	movwf	ringbuf_init@bufsize+1,c
  1828  0108A2  0E64               	movlw	100
  1829  0108A4  6E23               	movwf	ringbuf_init@bufsize,c
  1830  0108A6  EC77  F095         	call	_ringbuf_init	;wreg free
  1831  0108AA  D000               	goto	l5447
  1832  0108AC                     l5447:
  1833                           
  1834                           ;My_header\My_terminal.h: 29: }
  1835                           ;My_header\My_terminal.h: 30: if (ringbuf_num(rx)) {
  1836  0108AC  C114  F01F         	movff	my_terminal_loop@rx,ringbuf_num@rb
  1837  0108B0  C115  F020         	movff	my_terminal_loop@rx+1,ringbuf_num@rb+1
  1838  0108B4  EC3E  F08F         	call	_ringbuf_num	;wreg free
  1839  0108B8  501F               	movf	?_ringbuf_num,w,c
  1840  0108BA  1020               	iorwf	?_ringbuf_num+1,w,c
  1841  0108BC  B4D8               	btfsc	status,2,c
  1842  0108BE  0012               	return	
  1843                           
  1844                           ;My_header\My_terminal.h: 31: char ascii = ringbuf_pop(rx);
  1845  0108C0  C114  F060         	movff	my_terminal_loop@rx,ringbuf_pop@rb
  1846  0108C4  C115  F061         	movff	my_terminal_loop@rx+1,ringbuf_pop@rb+1
  1847  0108C8  EC11  F08E         	call	_ringbuf_pop	;wreg free
  1848  0108CC  0101               	movlb	1	; () banked
  1849  0108CE  6F7F               	movwf	my_terminal_loop@ascii& (0+255),b
  1850                           
  1851                           ;My_header\My_terminal.h: 32: switch (ascii) {
  1852  0108D0  D171               	goto	l5511
  1853  0108D2                     l5451:
  1854                           
  1855                           ; BSR set to: 1
  1856                           ;My_header\My_terminal.h: 34: ringbuf_put(&command, '\0');
  1857  0108D2  0EEA               	movlw	low my_terminal_loop@command
  1858  0108D4  0100               	movlb	0	; () banked
  1859  0108D6  6F60               	movwf	ringbuf_put@rb& (0+255),b
  1860  0108D8  0E00               	movlw	high my_terminal_loop@command
  1861  0108DA  0100               	movlb	0	; () banked
  1862  0108DC  6F61               	movwf	(ringbuf_put@rb+1)& (0+255),b
  1863  0108DE  0E00               	movlw	0
  1864  0108E0  0100               	movlb	0	; () banked
  1865  0108E2  6F62               	movwf	ringbuf_put@asciicode& (0+255),b
  1866  0108E4  EC3F  F08D         	call	_ringbuf_put	;wreg free
  1867                           
  1868                           ;My_header\My_terminal.h: 35: ringbuf_put(tx, '\t');
  1869  0108E8  C112  F060         	movff	my_terminal_loop@tx,ringbuf_put@rb
  1870  0108EC  C113  F061         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
  1871  0108F0  0E09               	movlw	9
  1872  0108F2  0100               	movlb	0	; () banked
  1873  0108F4  6F62               	movwf	ringbuf_put@asciicode& (0+255),b
  1874  0108F6  EC3F  F08D         	call	_ringbuf_put	;wreg free
  1875                           
  1876                           ;My_header\My_terminal.h: 36: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  1877  0108FA  0EEA               	movlw	low my_terminal_loop@command
  1878  0108FC  6E1F               	movwf	ringbuf_num@rb,c
  1879  0108FE  0E00               	movlw	high my_terminal_loop@command
  1880  010900  6E20               	movwf	ringbuf_num@rb+1,c
  1881  010902  EC3E  F08F         	call	_ringbuf_num	;wreg free
  1882  010906  0EFF               	movlw	255
  1883  010908  241F               	addwf	?_ringbuf_num,w,c
  1884  01090A  0101               	movlb	1	; () banked
  1885  01090C  6F7C               	movwf	_my_terminal_loop$3199& (0+255),b
  1886  01090E  0EFF               	movlw	255
  1887  010910  2020               	addwfc	?_ringbuf_num+1,w,c
  1888  010912  0101               	movlb	1	; () banked
  1889  010914  6F7D               	movwf	(_my_terminal_loop$3199+1)& (0+255),b
  1890                           
  1891                           ;My_header\My_terminal.h: 36: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  1892  010916  C112  F072         	movff	my_terminal_loop@tx,ringbuf_put_num@rb
  1893  01091A  C113  F073         	movff	my_terminal_loop@tx+1,ringbuf_put_num@rb+1
  1894  01091E  C17C  F074         	movff	_my_terminal_loop$3199,ringbuf_put_num@value
  1895  010922  C17D  F075         	movff	_my_terminal_loop$3199+1,ringbuf_put_num@value+1
  1896  010926  0E02               	movlw	2
  1897  010928  0100               	movlb	0	; () banked
  1898  01092A  6F76               	movwf	ringbuf_put_num@digits& (0+255),b
  1899  01092C  EC2A  F093         	call	_ringbuf_put_num	;wreg free
  1900                           
  1901                           ;My_header\My_terminal.h: 37: ringbuf_put(tx, '\n');
  1902  010930  C112  F060         	movff	my_terminal_loop@tx,ringbuf_put@rb
  1903  010934  C113  F061         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
  1904  010938  0E0A               	movlw	10
  1905  01093A  0100               	movlb	0	; () banked
  1906  01093C  6F62               	movwf	ringbuf_put@asciicode& (0+255),b
  1907  01093E  EC3F  F08D         	call	_ringbuf_put	;wreg free
  1908                           
  1909                           ;My_header\My_terminal.h: 38: static char op0[20];
  1910                           ;My_header\My_terminal.h: 39: static char op1[20];
  1911                           ;My_header\My_terminal.h: 40: static char op2[20];
  1912                           ;My_header\My_terminal.h: 41: static char op3[20];
  1913                           ;My_header\My_terminal.h: 42: uint8_t i;
  1914                           ;My_header\My_terminal.h: 43: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  1915  010942  0E00               	movlw	0
  1916  010944  0101               	movlb	1	; () banked
  1917  010946  6F80               	movwf	my_terminal_loop@i& (0+255),b
  1918  010948  D003               	goto	l5457
  1919  01094A                     l5455:
  1920                           
  1921                           ; BSR set to: 1
  1922  01094A  0101               	movlb	1	; () banked
  1923  01094C  2B80               	incf	my_terminal_loop@i& (0+255),f,b
  1924  01094E  D000               	goto	l5457
  1925  010950                     l5457:
  1926                           
  1927                           ; BSR set to: 1
  1928  010950  0EEA               	movlw	low my_terminal_loop@command
  1929  010952  0100               	movlb	0	; () banked
  1930  010954  6F60               	movwf	ringbuf_pop@rb& (0+255),b
  1931  010956  0E00               	movlw	high my_terminal_loop@command
  1932  010958  0100               	movlb	0	; () banked
  1933  01095A  6F61               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  1934  01095C  EC11  F08E         	call	_ringbuf_pop	;wreg free
  1935  010960  0101               	movlb	1	; () banked
  1936  010962  6F16               	movwf	??_my_terminal_loop& (0+255),b
  1937  010964  0101               	movlb	1	; () banked
  1938  010966  5180               	movf	my_terminal_loop@i& (0+255),w,b
  1939  010968  0D01               	mullw	1
  1940  01096A  0ECE               	movlw	low my_terminal_loop@op0
  1941  01096C  24F3               	addwf	prodl,w,c
  1942  01096E  6ED9               	movwf	fsr2l,c
  1943  010970  0E00               	movlw	high my_terminal_loop@op0
  1944  010972  20F4               	addwfc	prodh,w,c
  1945  010974  6EDA               	movwf	fsr2h,c
  1946  010976  C116  FFDF         	movff	??_my_terminal_loop,indf2
  1947  01097A  50DF               	movf	indf2,w,c
  1948  01097C  A4D8               	btfss	status,2,c
  1949  01097E  D7E5               	goto	l5455
  1950                           
  1951                           ; BSR set to: 1
  1952                           ;My_header\My_terminal.h: 44: op0[i] = '\0';
  1953                           
  1954                           ; BSR set to: 1
  1955  010980  0101               	movlb	1	; () banked
  1956  010982  5180               	movf	my_terminal_loop@i& (0+255),w,b
  1957  010984  0D01               	mullw	1
  1958  010986  0ECE               	movlw	low my_terminal_loop@op0
  1959  010988  24F3               	addwf	prodl,w,c
  1960  01098A  6ED9               	movwf	fsr2l,c
  1961  01098C  0E00               	movlw	high my_terminal_loop@op0
  1962  01098E  20F4               	addwfc	prodh,w,c
  1963  010990  6EDA               	movwf	fsr2h,c
  1964  010992  0E00               	movlw	0
  1965  010994  6EDF               	movwf	indf2,c
  1966                           
  1967                           ; BSR set to: 1
  1968                           ;My_header\My_terminal.h: 45: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  1969  010996  0E00               	movlw	0
  1970  010998  0101               	movlb	1	; () banked
  1971  01099A  6F80               	movwf	my_terminal_loop@i& (0+255),b
  1972  01099C  D003               	goto	l5465
  1973  01099E                     l5463:
  1974                           
  1975                           ; BSR set to: 1
  1976  01099E  0101               	movlb	1	; () banked
  1977  0109A0  2B80               	incf	my_terminal_loop@i& (0+255),f,b
  1978  0109A2  D000               	goto	l5465
  1979  0109A4                     l5465:
  1980                           
  1981                           ; BSR set to: 1
  1982  0109A4  0EEA               	movlw	low my_terminal_loop@command
  1983  0109A6  0100               	movlb	0	; () banked
  1984  0109A8  6F60               	movwf	ringbuf_pop@rb& (0+255),b
  1985  0109AA  0E00               	movlw	high my_terminal_loop@command
  1986  0109AC  0100               	movlb	0	; () banked
  1987  0109AE  6F61               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  1988  0109B0  EC11  F08E         	call	_ringbuf_pop	;wreg free
  1989  0109B4  0101               	movlb	1	; () banked
  1990  0109B6  6F16               	movwf	??_my_terminal_loop& (0+255),b
  1991  0109B8  0101               	movlb	1	; () banked
  1992  0109BA  5180               	movf	my_terminal_loop@i& (0+255),w,b
  1993  0109BC  0D01               	mullw	1
  1994  0109BE  0E81               	movlw	low my_terminal_loop@op1
  1995  0109C0  24F3               	addwf	prodl,w,c
  1996  0109C2  6ED9               	movwf	fsr2l,c
  1997  0109C4  0E01               	movlw	high my_terminal_loop@op1
  1998  0109C6  20F4               	addwfc	prodh,w,c
  1999  0109C8  6EDA               	movwf	fsr2h,c
  2000  0109CA  C116  FFDF         	movff	??_my_terminal_loop,indf2
  2001  0109CE  50DF               	movf	indf2,w,c
  2002  0109D0  A4D8               	btfss	status,2,c
  2003  0109D2  D7E5               	goto	l5463
  2004                           
  2005                           ; BSR set to: 1
  2006                           ;My_header\My_terminal.h: 46: op1[i] = '\0';
  2007                           
  2008                           ; BSR set to: 1
  2009  0109D4  0101               	movlb	1	; () banked
  2010  0109D6  5180               	movf	my_terminal_loop@i& (0+255),w,b
  2011  0109D8  0D01               	mullw	1
  2012  0109DA  0E81               	movlw	low my_terminal_loop@op1
  2013  0109DC  24F3               	addwf	prodl,w,c
  2014  0109DE  6ED9               	movwf	fsr2l,c
  2015  0109E0  0E01               	movlw	high my_terminal_loop@op1
  2016  0109E2  20F4               	addwfc	prodh,w,c
  2017  0109E4  6EDA               	movwf	fsr2h,c
  2018  0109E6  0E00               	movlw	0
  2019  0109E8  6EDF               	movwf	indf2,c
  2020                           
  2021                           ; BSR set to: 1
  2022                           ;My_header\My_terminal.h: 47: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  2023  0109EA  0E00               	movlw	0
  2024  0109EC  0101               	movlb	1	; () banked
  2025  0109EE  6F80               	movwf	my_terminal_loop@i& (0+255),b
  2026  0109F0  D003               	goto	l5473
  2027  0109F2                     l5471:
  2028                           
  2029                           ; BSR set to: 1
  2030  0109F2  0101               	movlb	1	; () banked
  2031  0109F4  2B80               	incf	my_terminal_loop@i& (0+255),f,b
  2032  0109F6  D000               	goto	l5473
  2033  0109F8                     l5473:
  2034                           
  2035                           ; BSR set to: 1
  2036  0109F8  0EEA               	movlw	low my_terminal_loop@command
  2037  0109FA  0100               	movlb	0	; () banked
  2038  0109FC  6F60               	movwf	ringbuf_pop@rb& (0+255),b
  2039  0109FE  0E00               	movlw	high my_terminal_loop@command
  2040  010A00  0100               	movlb	0	; () banked
  2041  010A02  6F61               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2042  010A04  EC11  F08E         	call	_ringbuf_pop	;wreg free
  2043  010A08  0101               	movlb	1	; () banked
  2044  010A0A  6F16               	movwf	??_my_terminal_loop& (0+255),b
  2045  010A0C  0101               	movlb	1	; () banked
  2046  010A0E  5180               	movf	my_terminal_loop@i& (0+255),w,b
  2047  010A10  0D01               	mullw	1
  2048  010A12  0E95               	movlw	low my_terminal_loop@op2
  2049  010A14  24F3               	addwf	prodl,w,c
  2050  010A16  6ED9               	movwf	fsr2l,c
  2051  010A18  0E01               	movlw	high my_terminal_loop@op2
  2052  010A1A  20F4               	addwfc	prodh,w,c
  2053  010A1C  6EDA               	movwf	fsr2h,c
  2054  010A1E  C116  FFDF         	movff	??_my_terminal_loop,indf2
  2055  010A22  50DF               	movf	indf2,w,c
  2056  010A24  A4D8               	btfss	status,2,c
  2057  010A26  D7E5               	goto	l5471
  2058                           
  2059                           ; BSR set to: 1
  2060                           ;My_header\My_terminal.h: 48: op2[i] = '\0';
  2061                           
  2062                           ; BSR set to: 1
  2063  010A28  0101               	movlb	1	; () banked
  2064  010A2A  5180               	movf	my_terminal_loop@i& (0+255),w,b
  2065  010A2C  0D01               	mullw	1
  2066  010A2E  0E95               	movlw	low my_terminal_loop@op2
  2067  010A30  24F3               	addwf	prodl,w,c
  2068  010A32  6ED9               	movwf	fsr2l,c
  2069  010A34  0E01               	movlw	high my_terminal_loop@op2
  2070  010A36  20F4               	addwfc	prodh,w,c
  2071  010A38  6EDA               	movwf	fsr2h,c
  2072  010A3A  0E00               	movlw	0
  2073  010A3C  6EDF               	movwf	indf2,c
  2074                           
  2075                           ; BSR set to: 1
  2076                           ;My_header\My_terminal.h: 49: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  2077  010A3E  0E00               	movlw	0
  2078  010A40  0101               	movlb	1	; () banked
  2079  010A42  6F80               	movwf	my_terminal_loop@i& (0+255),b
  2080  010A44  D003               	goto	l5481
  2081  010A46                     l5479:
  2082                           
  2083                           ; BSR set to: 1
  2084  010A46  0101               	movlb	1	; () banked
  2085  010A48  2B80               	incf	my_terminal_loop@i& (0+255),f,b
  2086  010A4A  D000               	goto	l5481
  2087  010A4C                     l5481:
  2088                           
  2089                           ; BSR set to: 1
  2090  010A4C  0EEA               	movlw	low my_terminal_loop@command
  2091  010A4E  0100               	movlb	0	; () banked
  2092  010A50  6F60               	movwf	ringbuf_pop@rb& (0+255),b
  2093  010A52  0E00               	movlw	high my_terminal_loop@command
  2094  010A54  0100               	movlb	0	; () banked
  2095  010A56  6F61               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2096  010A58  EC11  F08E         	call	_ringbuf_pop	;wreg free
  2097  010A5C  0101               	movlb	1	; () banked
  2098  010A5E  6F16               	movwf	??_my_terminal_loop& (0+255),b
  2099  010A60  0101               	movlb	1	; () banked
  2100  010A62  5180               	movf	my_terminal_loop@i& (0+255),w,b
  2101  010A64  0D01               	mullw	1
  2102  010A66  0EA9               	movlw	low my_terminal_loop@op3
  2103  010A68  24F3               	addwf	prodl,w,c
  2104  010A6A  6ED9               	movwf	fsr2l,c
  2105  010A6C  0E01               	movlw	high my_terminal_loop@op3
  2106  010A6E  20F4               	addwfc	prodh,w,c
  2107  010A70  6EDA               	movwf	fsr2h,c
  2108  010A72  C116  FFDF         	movff	??_my_terminal_loop,indf2
  2109  010A76  50DF               	movf	indf2,w,c
  2110  010A78  A4D8               	btfss	status,2,c
  2111  010A7A  D7E5               	goto	l5479
  2112                           
  2113                           ; BSR set to: 1
  2114                           ;My_header\My_terminal.h: 50: op3[i] = '\0';
  2115                           
  2116                           ; BSR set to: 1
  2117  010A7C  0101               	movlb	1	; () banked
  2118  010A7E  5180               	movf	my_terminal_loop@i& (0+255),w,b
  2119  010A80  0D01               	mullw	1
  2120  010A82  0EA9               	movlw	low my_terminal_loop@op3
  2121  010A84  24F3               	addwf	prodl,w,c
  2122  010A86  6ED9               	movwf	fsr2l,c
  2123  010A88  0E01               	movlw	high my_terminal_loop@op3
  2124  010A8A  20F4               	addwfc	prodh,w,c
  2125  010A8C  6EDA               	movwf	fsr2h,c
  2126  010A8E  0E00               	movlw	0
  2127  010A90  6EDF               	movwf	indf2,c
  2128                           
  2129                           ; BSR set to: 1
  2130                           ;My_header\My_terminal.h: 51: command_operation(tx, op0, op1, op2, op3);
  2131  010A92  C112  F108         	movff	my_terminal_loop@tx,command_operation@tx
  2132  010A96  C113  F109         	movff	my_terminal_loop@tx+1,command_operation@tx+1
  2133  010A9A  0ECE               	movlw	low my_terminal_loop@op0
  2134  010A9C  0101               	movlb	1	; () banked
  2135  010A9E  6F0A               	movwf	command_operation@op0& (0+255),b
  2136  010AA0  0E00               	movlw	high my_terminal_loop@op0
  2137  010AA2  0101               	movlb	1	; () banked
  2138  010AA4  6F0B               	movwf	(command_operation@op0+1)& (0+255),b
  2139  010AA6  0E81               	movlw	low my_terminal_loop@op1
  2140  010AA8  0101               	movlb	1	; () banked
  2141  010AAA  6F0C               	movwf	command_operation@op1& (0+255),b
  2142  010AAC  0E01               	movlw	high my_terminal_loop@op1
  2143  010AAE  0101               	movlb	1	; () banked
  2144  010AB0  6F0D               	movwf	(command_operation@op1+1)& (0+255),b
  2145  010AB2  0E95               	movlw	low my_terminal_loop@op2
  2146  010AB4  0101               	movlb	1	; () banked
  2147  010AB6  6F0E               	movwf	command_operation@op2& (0+255),b
  2148  010AB8  0E01               	movlw	high my_terminal_loop@op2
  2149  010ABA  0101               	movlb	1	; () banked
  2150  010ABC  6F0F               	movwf	(command_operation@op2+1)& (0+255),b
  2151  010ABE  0EA9               	movlw	low my_terminal_loop@op3
  2152  010AC0  0101               	movlb	1	; () banked
  2153  010AC2  6F10               	movwf	command_operation@op3& (0+255),b
  2154  010AC4  0E01               	movlw	high my_terminal_loop@op3
  2155  010AC6  0101               	movlb	1	; () banked
  2156  010AC8  6F11               	movwf	(command_operation@op3+1)& (0+255),b
  2157  010ACA  EC53  F082         	call	_command_operation	;wreg free
  2158                           
  2159                           ;My_header\My_terminal.h: 52: break;
  2160  010ACE  0012               	return	
  2161  010AD0                     l5487:
  2162                           
  2163                           ;My_header\My_terminal.h: 54: ringbuf_put(&command, '\0');
  2164  010AD0  0EEA               	movlw	low my_terminal_loop@command
  2165  010AD2  0100               	movlb	0	; () banked
  2166  010AD4  6F60               	movwf	ringbuf_put@rb& (0+255),b
  2167  010AD6  0E00               	movlw	high my_terminal_loop@command
  2168  010AD8  0100               	movlb	0	; () banked
  2169  010ADA  6F61               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2170  010ADC  0E00               	movlw	0
  2171  010ADE  0100               	movlb	0	; () banked
  2172  010AE0  6F62               	movwf	ringbuf_put@asciicode& (0+255),b
  2173  010AE2  EC3F  F08D         	call	_ringbuf_put	;wreg free
  2174                           
  2175                           ;My_header\My_terminal.h: 55: ringbuf_put(tx, ' ');
  2176  010AE6  C112  F060         	movff	my_terminal_loop@tx,ringbuf_put@rb
  2177  010AEA  C113  F061         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
  2178  010AEE  0E20               	movlw	32
  2179  010AF0  0100               	movlb	0	; () banked
  2180  010AF2  6F62               	movwf	ringbuf_put@asciicode& (0+255),b
  2181  010AF4  EC3F  F08D         	call	_ringbuf_put	;wreg free
  2182                           
  2183                           ;My_header\My_terminal.h: 56: break;
  2184  010AF8  0012               	return	
  2185  010AFA                     l5489:
  2186                           
  2187                           ;My_header\My_terminal.h: 58: ringbuf_backspace(&command);
  2188  010AFA  0EEA               	movlw	low my_terminal_loop@command
  2189  010AFC  0100               	movlb	0	; () banked
  2190  010AFE  6F60               	movwf	ringbuf_backspace@rb& (0+255),b
  2191  010B00  0E00               	movlw	high my_terminal_loop@command
  2192  010B02  0100               	movlb	0	; () banked
  2193  010B04  6F61               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  2194  010B06  ECE4  F092         	call	_ringbuf_backspace	;wreg free
  2195                           
  2196                           ;My_header\My_terminal.h: 59: ringbuf_put_str(tx, "\b \b");
  2197  010B0A  C112  F067         	movff	my_terminal_loop@tx,ringbuf_put_str@rb
  2198  010B0E  C113  F068         	movff	my_terminal_loop@tx+1,ringbuf_put_str@rb+1
  2199  010B12  0ECA               	movlw	low STR_1
  2200  010B14  0100               	movlb	0	; () banked
  2201  010B16  6F69               	movwf	ringbuf_put_str@str& (0+255),b
  2202  010B18  0EFF               	movlw	high STR_1
  2203  010B1A  0100               	movlb	0	; () banked
  2204  010B1C  6F6A               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2205  010B1E  EC16  F095         	call	_ringbuf_put_str	;wreg free
  2206                           
  2207                           ;My_header\My_terminal.h: 60: break;
  2208  010B22  0012               	return	
  2209  010B24                     l5493:
  2210                           
  2211                           ;My_header\My_terminal.h: 62: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbu
      +                          f_put_str(tx, "\b \b");
  2212  010B24  0E00               	movlw	0
  2213  010B26  0101               	movlb	1	; () banked
  2214  010B28  6F7E               	movwf	my_terminal_loop@i_2284& (0+255),b
  2215  010B2A  D00F               	goto	l5499
  2216  010B2C                     l5495:
  2217                           
  2218                           ; BSR set to: 1
  2219  010B2C  C112  F067         	movff	my_terminal_loop@tx,ringbuf_put_str@rb
  2220  010B30  C113  F068         	movff	my_terminal_loop@tx+1,ringbuf_put_str@rb+1
  2221  010B34  0ECA               	movlw	low STR_1
  2222  010B36  0100               	movlb	0	; () banked
  2223  010B38  6F69               	movwf	ringbuf_put_str@str& (0+255),b
  2224  010B3A  0EFF               	movlw	high STR_1
  2225  010B3C  0100               	movlb	0	; () banked
  2226  010B3E  6F6A               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2227  010B40  EC16  F095         	call	_ringbuf_put_str	;wreg free
  2228  010B44  0101               	movlb	1	; () banked
  2229  010B46  2B7E               	incf	my_terminal_loop@i_2284& (0+255),f,b
  2230  010B48  D000               	goto	l5499
  2231  010B4A                     l5499:
  2232                           
  2233                           ; BSR set to: 1
  2234  010B4A  0EEA               	movlw	low my_terminal_loop@command
  2235  010B4C  6E1F               	movwf	ringbuf_num@rb,c
  2236  010B4E  0E00               	movlw	high my_terminal_loop@command
  2237  010B50  6E20               	movwf	ringbuf_num@rb+1,c
  2238  010B52  EC3E  F08F         	call	_ringbuf_num	;wreg free
  2239  010B56  0101               	movlb	1	; () banked
  2240  010B58  517E               	movf	my_terminal_loop@i_2284& (0+255),w,b
  2241  010B5A  0101               	movlb	1	; () banked
  2242  010B5C  6F16               	movwf	??_my_terminal_loop& (0+255),b
  2243  010B5E  6B17               	clrf	(??_my_terminal_loop+1)& (0+255),b
  2244  010B60  501F               	movf	?_ringbuf_num,w,c
  2245  010B62  0101               	movlb	1	; () banked
  2246  010B64  5D16               	subwf	??_my_terminal_loop& (0+255),w,b
  2247  010B66  5020               	movf	?_ringbuf_num+1,w,c
  2248  010B68  0101               	movlb	1	; () banked
  2249  010B6A  5917               	subwfb	(??_my_terminal_loop+1)& (0+255),w,b
  2250  010B6C  A0D8               	btfss	status,0,c
  2251  010B6E  D7DE               	goto	l5495
  2252                           
  2253                           ; BSR set to: 1
  2254                           ;My_header\My_terminal.h: 63: ringbuf_delete(&command);
  2255                           
  2256                           ; BSR set to: 1
  2257  010B70  0EEA               	movlw	low my_terminal_loop@command
  2258  010B72  6E1F               	movwf	ringbuf_delete@rb,c
  2259  010B74  0E00               	movlw	high my_terminal_loop@command
  2260  010B76  6E20               	movwf	ringbuf_delete@rb+1,c
  2261  010B78  ECB6  F096         	call	_ringbuf_delete	;wreg free
  2262                           
  2263                           ;My_header\My_terminal.h: 64: break;
  2264  010B7C  0012               	return	
  2265  010B7E                     l5503:
  2266                           
  2267                           ;My_header\My_terminal.h: 66: if (ascii >= ' ' && ascii <= '~') {
  2268  010B7E  0E1F               	movlw	31
  2269  010B80  0101               	movlb	1	; () banked
  2270  010B82  657F               	cpfsgt	my_terminal_loop@ascii& (0+255),b
  2271  010B84  0012               	return	
  2272                           
  2273                           ; BSR set to: 1
  2274  010B86  0E7F               	movlw	127
  2275  010B88  0101               	movlb	1	; () banked
  2276  010B8A  617F               	cpfslt	my_terminal_loop@ascii& (0+255),b
  2277  010B8C  0012               	return	
  2278                           
  2279                           ; BSR set to: 1
  2280                           ;My_header\My_terminal.h: 67: ringbuf_put(&command, ascii);
  2281  010B8E  0EEA               	movlw	low my_terminal_loop@command
  2282  010B90  0100               	movlb	0	; () banked
  2283  010B92  6F60               	movwf	ringbuf_put@rb& (0+255),b
  2284  010B94  0E00               	movlw	high my_terminal_loop@command
  2285  010B96  0100               	movlb	0	; () banked
  2286  010B98  6F61               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2287  010B9A  C17F  F062         	movff	my_terminal_loop@ascii,ringbuf_put@asciicode
  2288  010B9E  EC3F  F08D         	call	_ringbuf_put	;wreg free
  2289                           
  2290                           ;My_header\My_terminal.h: 68: ringbuf_put(tx, ascii);
  2291  010BA2  C112  F060         	movff	my_terminal_loop@tx,ringbuf_put@rb
  2292  010BA6  C113  F061         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
  2293  010BAA  C17F  F062         	movff	my_terminal_loop@ascii,ringbuf_put@asciicode
  2294  010BAE  EC3F  F08D         	call	_ringbuf_put	;wreg free
  2295                           
  2296                           ;My_header\My_terminal.h: 71: }
  2297                           
  2298                           ;My_header\My_terminal.h: 69: }
  2299                           ;My_header\My_terminal.h: 70: break;
  2300  010BB2  0012               	return	
  2301  010BB4                     l5511:
  2302  010BB4  0101               	movlb	1	; () banked
  2303  010BB6  517F               	movf	my_terminal_loop@ascii& (0+255),w,b
  2304                           
  2305                           ; Switch size 1, requested type "space"
  2306                           ; Number of cases is 4, Range of values is 8 to 127
  2307                           ; switch strategies available:
  2308                           ; Name         Instructions Cycles
  2309                           ; simple_byte           13     7 (average)
  2310                           ;	Chosen strategy is simple_byte
  2311  010BB8  0A08               	xorlw	8	; case 8
  2312  010BBA  B4D8               	btfsc	status,2,c
  2313  010BBC  D79E               	goto	l5489
  2314  010BBE  0A05               	xorlw	5	; case 13
  2315  010BC0  B4D8               	btfsc	status,2,c
  2316  010BC2  D687               	goto	l5451
  2317  010BC4  0A2D               	xorlw	45	; case 32
  2318  010BC6  B4D8               	btfsc	status,2,c
  2319  010BC8  D783               	goto	l5487
  2320  010BCA  0A5F               	xorlw	95	; case 127
  2321  010BCC  B4D8               	btfsc	status,2,c
  2322  010BCE  D7AA               	goto	l5493
  2323  010BD0  D7D6               	goto	l5503
  2324                           
  2325                           ; BSR set to: 1
  2326  010BD2  0012               	return	
  2327                           
  2328                           ; BSR set to: 1
  2329  010BD4  0012               	return		;funcret
  2330  010BD6                     __end_of_my_terminal_loop:
  2331                           	opt stack 0
  2332                           tblptru	equ	0xFF8
  2333                           tblptrh	equ	0xFF7
  2334                           tblptrl	equ	0xFF6
  2335                           tablat	equ	0xFF5
  2336                           prodh	equ	0xFF4
  2337                           prodl	equ	0xFF3
  2338                           intcon	equ	0xFF2
  2339                           postinc0	equ	0xFEE
  2340                           wreg	equ	0xFE8
  2341                           postdec1	equ	0xFE5
  2342                           fsr1h	equ	0xFE2
  2343                           fsr1l	equ	0xFE1
  2344                           indf2	equ	0xFDF
  2345                           fsr2h	equ	0xFDA
  2346                           fsr2l	equ	0xFD9
  2347                           status	equ	0xFD8
  2348                           
  2349 ;; *************** function _ringbuf_put_num *****************
  2350 ;; Defined at:
  2351 ;;		line 47 in file "../My_header\My_ringbuf.h"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;  rb              2   18[BANK0 ] PTR struct ringbuf
  2354 ;;		 -> tx_buf(8), 
  2355 ;;  value           2   20[BANK0 ] const unsigned int 
  2356 ;;  digits          1   22[BANK0 ] unsigned char 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  i               1   23[BANK0 ] unsigned char 
  2359 ;;  temp            2   24[BANK0 ] unsigned int 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;		None               void
  2362 ;; Registers used:
  2363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2369 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2370 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2372 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2373 ;;Total ram usage:        8 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    6
  2376 ;; This function calls:
  2377 ;;		___lwdiv
  2378 ;;		___lwmod
  2379 ;;		_ringbuf_put
  2380 ;; This function is called by:
  2381 ;;		_my_terminal_loop
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text2
  2386  012654                     __ptext2:
  2387                           	opt stack 0
  2388  012654                     _ringbuf_put_num:
  2389                           	opt stack 23
  2390                           
  2391                           ;My_header\My_ringbuf.h: 48: while (digits--) {
  2392                           
  2393                           ;incstack = 0
  2394  012654  D03B               	goto	l5167
  2395  012656                     l184:
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;My_header\My_ringbuf.h: 49: uint16_t temp = value;
  2399  012656  C074  F078         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  2400  01265A  C075  F079         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;My_header\My_ringbuf.h: 50: for (uint8_t i = 0; i < digits; i++) {
  2404  01265E  0E00               	movlw	0
  2405  012660  0100               	movlb	0	; () banked
  2406  012662  6F77               	movwf	ringbuf_put_num@i& (0+255),b
  2407  012664  D012               	goto	l5161
  2408  012666                     l5157:
  2409                           
  2410                           ; BSR set to: 0
  2411                           ;My_header\My_ringbuf.h: 51: temp /= 10;
  2412  012666  C078  F066         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  2413  01266A  C079  F067         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  2414  01266E  0E00               	movlw	0
  2415  012670  0100               	movlb	0	; () banked
  2416  012672  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2417  012674  0E0A               	movlw	10
  2418  012676  6F68               	movwf	___lwdiv@divisor& (0+255),b
  2419  012678  ECAE  F093         	call	___lwdiv	;wreg free
  2420  01267C  C066  F078         	movff	?___lwdiv,ringbuf_put_num@temp
  2421  012680  C067  F079         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  2422  012684  0100               	movlb	0	; () banked
  2423  012686  2B77               	incf	ringbuf_put_num@i& (0+255),f,b
  2424  012688  D000               	goto	l5161
  2425  01268A                     l5161:
  2426                           
  2427                           ; BSR set to: 0
  2428  01268A  0100               	movlb	0	; () banked
  2429  01268C  5176               	movf	ringbuf_put_num@digits& (0+255),w,b
  2430  01268E  0100               	movlb	0	; () banked
  2431  012690  5D77               	subwf	ringbuf_put_num@i& (0+255),w,b
  2432  012692  A0D8               	btfss	status,0,c
  2433  012694  D7E8               	goto	l5157
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;My_header\My_ringbuf.h: 52: }
  2437                           ;My_header\My_ringbuf.h: 53: temp %= 10;
  2438                           
  2439                           ; BSR set to: 0
  2440  012696  C078  F06D         	movff	ringbuf_put_num@temp,___lwmod@dividend
  2441  01269A  C079  F06E         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  2442  01269E  0E00               	movlw	0
  2443  0126A0  0100               	movlb	0	; () banked
  2444  0126A2  6F70               	movwf	(___lwmod@divisor+1)& (0+255),b
  2445  0126A4  0E0A               	movlw	10
  2446  0126A6  6F6F               	movwf	___lwmod@divisor& (0+255),b
  2447  0126A8  ECE0  F094         	call	___lwmod	;wreg free
  2448  0126AC  C06D  F078         	movff	?___lwmod,ringbuf_put_num@temp
  2449  0126B0  C06E  F079         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  2450                           
  2451                           ;My_header\My_ringbuf.h: 54: ringbuf_put(rb, temp + '0');
  2452  0126B4  C072  F060         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  2453  0126B8  C073  F061         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  2454  0126BC  0100               	movlb	0	; () banked
  2455  0126BE  5178               	movf	ringbuf_put_num@temp& (0+255),w,b
  2456  0126C0  0F30               	addlw	48
  2457  0126C2  0100               	movlb	0	; () banked
  2458  0126C4  6F62               	movwf	ringbuf_put@asciicode& (0+255),b
  2459  0126C6  EC3F  F08D         	call	_ringbuf_put	;wreg free
  2460  0126CA  D000               	goto	l5167
  2461  0126CC                     l5167:
  2462  0126CC  0100               	movlb	0	; () banked
  2463  0126CE  0776               	decf	ringbuf_put_num@digits& (0+255),f,b
  2464  0126D0  0100               	movlb	0	; () banked
  2465  0126D2  2976               	incf	ringbuf_put_num@digits& (0+255),w,b
  2466  0126D4  A4D8               	btfss	status,2,c
  2467  0126D6  D7BF               	goto	l184
  2468                           
  2469                           ; BSR set to: 0
  2470                           
  2471                           ; BSR set to: 0
  2472  0126D8  0012               	return		;funcret
  2473  0126DA                     __end_of_ringbuf_put_num:
  2474                           	opt stack 0
  2475                           tblptru	equ	0xFF8
  2476                           tblptrh	equ	0xFF7
  2477                           tblptrl	equ	0xFF6
  2478                           tablat	equ	0xFF5
  2479                           prodh	equ	0xFF4
  2480                           prodl	equ	0xFF3
  2481                           intcon	equ	0xFF2
  2482                           postinc0	equ	0xFEE
  2483                           wreg	equ	0xFE8
  2484                           postdec1	equ	0xFE5
  2485                           fsr1h	equ	0xFE2
  2486                           fsr1l	equ	0xFE1
  2487                           indf2	equ	0xFDF
  2488                           fsr2h	equ	0xFDA
  2489                           fsr2l	equ	0xFD9
  2490                           status	equ	0xFD8
  2491                           
  2492 ;; *************** function _ringbuf_pop *****************
  2493 ;; Defined at:
  2494 ;;		line 64 in file "../My_header\My_ringbuf.h"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  2497 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  ret             1    6[BANK0 ] unsigned char 
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      unsigned char 
  2502 ;; Registers used:
  2503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2509 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2510 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2511 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2512 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2513 ;;Total ram usage:        7 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; Hardware stack levels required when called:    5
  2516 ;; This function calls:
  2517 ;;		_ringbuf_num
  2518 ;; This function is called by:
  2519 ;;		_my_terminal_loop
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text3
  2524  011C22                     __ptext3:
  2525                           	opt stack 0
  2526  011C22                     _ringbuf_pop:
  2527                           	opt stack 24
  2528                           
  2529                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;incstack = 0
  2533  011C22  C060  F01F         	movff	ringbuf_pop@rb,ringbuf_num@rb
  2534  011C26  C061  F020         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  2535  011C2A  EC3E  F08F         	call	_ringbuf_num	;wreg free
  2536  011C2E  501F               	movf	?_ringbuf_num,w,c
  2537  011C30  1020               	iorwf	?_ringbuf_num+1,w,c
  2538  011C32  B4D8               	btfsc	status,2,c
  2539  011C34  D059               	goto	l5185
  2540                           
  2541                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
  2542  011C36  0100               	movlb	0	; () banked
  2543  011C38  EE20 F006          	lfsr	2,6
  2544  011C3C  5160               	movf	ringbuf_pop@rb& (0+255),w,b
  2545  011C3E  26D9               	addwf	fsr2l,f,c
  2546  011C40  5161               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  2547  011C42  22DA               	addwfc	fsr2h,f,c
  2548  011C44  CFDE F062          	movff	postinc2,??_ringbuf_pop
  2549  011C48  CFDD F063          	movff	postdec2,??_ringbuf_pop+1
  2550  011C4C  C060  FFD9         	movff	ringbuf_pop@rb,fsr2l
  2551  011C50  C061  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  2552  011C54  CFDE F064          	movff	postinc2,??_ringbuf_pop+2
  2553  011C58  CFDD F065          	movff	postdec2,??_ringbuf_pop+3
  2554  011C5C  0100               	movlb	0	; () banked
  2555  011C5E  5162               	movf	??_ringbuf_pop& (0+255),w,b
  2556  011C60  0100               	movlb	0	; () banked
  2557  011C62  2564               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  2558  011C64  6ED9               	movwf	fsr2l,c
  2559  011C66  0100               	movlb	0	; () banked
  2560  011C68  5163               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  2561  011C6A  0100               	movlb	0	; () banked
  2562  011C6C  2165               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  2563  011C6E  6EDA               	movwf	fsr2h,c
  2564  011C70  50DF               	movf	indf2,w,c
  2565  011C72  0100               	movlb	0	; () banked
  2566  011C74  6F66               	movwf	ringbuf_pop@ret& (0+255),b
  2567                           
  2568                           ; BSR set to: 0
  2569                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
  2570  011C76  0100               	movlb	0	; () banked
  2571  011C78  EE20 F002          	lfsr	2,2
  2572  011C7C  5160               	movf	ringbuf_pop@rb& (0+255),w,b
  2573  011C7E  26D9               	addwf	fsr2l,f,c
  2574  011C80  5161               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  2575  011C82  22DA               	addwfc	fsr2h,f,c
  2576  011C84  0100               	movlb	0	; () banked
  2577  011C86  EE10 F006          	lfsr	1,6
  2578  011C8A  5160               	movf	ringbuf_pop@rb& (0+255),w,b
  2579  011C8C  26E1               	addwf	fsr1l,f,c
  2580  011C8E  5161               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  2581  011C90  22E2               	addwfc	fsr1h,f,c
  2582  011C92  CFE6 F064          	movff	postinc1,??_ringbuf_pop+2
  2583  011C96  CFE5 F065          	movff	postdec1,??_ringbuf_pop+3
  2584  011C9A  0E01               	movlw	1
  2585  011C9C  0100               	movlb	0	; () banked
  2586  011C9E  2764               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  2587  011CA0  0E00               	movlw	0
  2588  011CA2  2365               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  2589  011CA4  50DE               	movf	postinc2,w,c
  2590  011CA6  0100               	movlb	0	; () banked
  2591  011CA8  5D64               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  2592  011CAA  50DE               	movf	postinc2,w,c
  2593  011CAC  0100               	movlb	0	; () banked
  2594  011CAE  5965               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  2595  011CB0  B0D8               	btfsc	status,0,c
  2596  011CB2  D00B               	goto	l5177
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;My_header\My_ringbuf.h: 68: rb->tail++;
  2600  011CB4  0100               	movlb	0	; () banked
  2601  011CB6  EE20 F006          	lfsr	2,6
  2602  011CBA  5160               	movf	ringbuf_pop@rb& (0+255),w,b
  2603  011CBC  26D9               	addwf	fsr2l,f,c
  2604  011CBE  5161               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  2605  011CC0  22DA               	addwfc	fsr2h,f,c
  2606  011CC2  2ADE               	incf	postinc2,f,c
  2607  011CC4  0E00               	movlw	0
  2608  011CC6  22DD               	addwfc	postdec2,f,c
  2609                           
  2610                           ;My_header\My_ringbuf.h: 69: } else {
  2611  011CC8  D00C               	goto	l5179
  2612  011CCA                     l5177:
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
  2616  011CCA  0100               	movlb	0	; () banked
  2617  011CCC  EE20 F006          	lfsr	2,6
  2618  011CD0  5160               	movf	ringbuf_pop@rb& (0+255),w,b
  2619  011CD2  26D9               	addwf	fsr2l,f,c
  2620  011CD4  5161               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  2621  011CD6  22DA               	addwfc	fsr2h,f,c
  2622  011CD8  0E00               	movlw	0
  2623  011CDA  6EDE               	movwf	postinc2,c
  2624  011CDC  0E00               	movlw	0
  2625  011CDE  6EDD               	movwf	postdec2,c
  2626  011CE0  D000               	goto	l5179
  2627  011CE2                     l5179:
  2628                           
  2629                           ; BSR set to: 0
  2630                           ;My_header\My_ringbuf.h: 71: }
  2631                           ;My_header\My_ringbuf.h: 72: return ret;
  2632  011CE2  0100               	movlb	0	; () banked
  2633  011CE4  5166               	movf	ringbuf_pop@ret& (0+255),w,b
  2634                           
  2635                           ; BSR set to: 0
  2636                           ;My_header\My_ringbuf.h: 73: } else {
  2637                           
  2638                           ; BSR set to: 0
  2639  011CE6  0012               	return	
  2640  011CE8                     l5185:
  2641                           
  2642                           ;My_header\My_ringbuf.h: 74: return 0;
  2643  011CE8  0E00               	movlw	0
  2644  011CEA  0012               	return	
  2645  011CEC  0012               	return		;funcret
  2646  011CEE                     __end_of_ringbuf_pop:
  2647                           	opt stack 0
  2648                           tblptru	equ	0xFF8
  2649                           tblptrh	equ	0xFF7
  2650                           tblptrl	equ	0xFF6
  2651                           tablat	equ	0xFF5
  2652                           prodh	equ	0xFF4
  2653                           prodl	equ	0xFF3
  2654                           intcon	equ	0xFF2
  2655                           postinc0	equ	0xFEE
  2656                           wreg	equ	0xFE8
  2657                           postinc1	equ	0xFE6
  2658                           postdec1	equ	0xFE5
  2659                           fsr1h	equ	0xFE2
  2660                           fsr1l	equ	0xFE1
  2661                           indf2	equ	0xFDF
  2662                           postinc2	equ	0xFDE
  2663                           postdec2	equ	0xFDD
  2664                           fsr2h	equ	0xFDA
  2665                           fsr2l	equ	0xFD9
  2666                           status	equ	0xFD8
  2667                           
  2668 ;; *************** function _ringbuf_delete *****************
  2669 ;; Defined at:
  2670 ;;		line 85 in file "../My_header\My_ringbuf.h"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  rb              2   30[COMRAM] PTR struct ringbuf
  2673 ;;		 -> my_terminal_loop@command(8), 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;		None
  2676 ;; Return value:  Size  Location     Type
  2677 ;;		None               void
  2678 ;; Registers used:
  2679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2685 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2688 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2689 ;;Total ram usage:        2 bytes
  2690 ;; Hardware stack levels used:    1
  2691 ;; Hardware stack levels required when called:    4
  2692 ;; This function calls:
  2693 ;;		Nothing
  2694 ;; This function is called by:
  2695 ;;		_my_terminal_loop
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text4
  2700  012D6C                     __ptext4:
  2701                           	opt stack 0
  2702  012D6C                     _ringbuf_delete:
  2703                           	opt stack 25
  2704                           
  2705                           ;My_header\My_ringbuf.h: 86: rb->head = rb->tail;
  2706                           
  2707                           ;incstack = 0
  2708  012D6C  EE20 F006          	lfsr	2,6
  2709  012D70  501F               	movf	ringbuf_delete@rb,w,c
  2710  012D72  26D9               	addwf	fsr2l,f,c
  2711  012D74  5020               	movf	ringbuf_delete@rb+1,w,c
  2712  012D76  22DA               	addwfc	fsr2h,f,c
  2713  012D78  EE10 F004          	lfsr	1,4
  2714  012D7C  501F               	movf	ringbuf_delete@rb,w,c
  2715  012D7E  26E1               	addwf	fsr1l,f,c
  2716  012D80  5020               	movf	ringbuf_delete@rb+1,w,c
  2717  012D82  22E2               	addwfc	fsr1h,f,c
  2718  012D84  CFDE FFE6          	movff	postinc2,postinc1
  2719  012D88  CFDD FFE5          	movff	postdec2,postdec1
  2720  012D8C  0012               	return		;funcret
  2721  012D8E                     __end_of_ringbuf_delete:
  2722                           	opt stack 0
  2723                           tblptru	equ	0xFF8
  2724                           tblptrh	equ	0xFF7
  2725                           tblptrl	equ	0xFF6
  2726                           tablat	equ	0xFF5
  2727                           prodh	equ	0xFF4
  2728                           prodl	equ	0xFF3
  2729                           intcon	equ	0xFF2
  2730                           postinc0	equ	0xFEE
  2731                           wreg	equ	0xFE8
  2732                           postinc1	equ	0xFE6
  2733                           postdec1	equ	0xFE5
  2734                           fsr1h	equ	0xFE2
  2735                           fsr1l	equ	0xFE1
  2736                           indf2	equ	0xFDF
  2737                           postinc2	equ	0xFDE
  2738                           postdec2	equ	0xFDD
  2739                           fsr2h	equ	0xFDA
  2740                           fsr2l	equ	0xFD9
  2741                           status	equ	0xFD8
  2742                           
  2743 ;; *************** function _ringbuf_backspace *****************
  2744 ;; Defined at:
  2745 ;;		line 78 in file "../My_header\My_ringbuf.h"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  2748 ;;		 -> my_terminal_loop@command(8), 
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;		None
  2751 ;; Return value:  Size  Location     Type
  2752 ;;		None               void
  2753 ;; Registers used:
  2754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2760 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2762 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2763 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2764 ;;Total ram usage:        6 bytes
  2765 ;; Hardware stack levels used:    1
  2766 ;; Hardware stack levels required when called:    5
  2767 ;; This function calls:
  2768 ;;		_ringbuf_num
  2769 ;; This function is called by:
  2770 ;;		_my_terminal_loop
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           	psect	text5
  2775  0125C8                     __ptext5:
  2776                           	opt stack 0
  2777  0125C8                     _ringbuf_backspace:
  2778                           	opt stack 24
  2779                           
  2780                           ;My_header\My_ringbuf.h: 79: if (ringbuf_num(rb)) {
  2781                           
  2782                           ;incstack = 0
  2783  0125C8  C060  F01F         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  2784  0125CC  C061  F020         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  2785  0125D0  EC3E  F08F         	call	_ringbuf_num	;wreg free
  2786  0125D4  501F               	movf	?_ringbuf_num,w,c
  2787  0125D6  1020               	iorwf	?_ringbuf_num+1,w,c
  2788  0125D8  B4D8               	btfsc	status,2,c
  2789  0125DA  0012               	return	
  2790                           
  2791                           ;My_header\My_ringbuf.h: 80: if (rb->head) rb->head--;
  2792  0125DC  0100               	movlb	0	; () banked
  2793  0125DE  EE20 F004          	lfsr	2,4
  2794  0125E2  5160               	movf	ringbuf_backspace@rb& (0+255),w,b
  2795  0125E4  26D9               	addwf	fsr2l,f,c
  2796  0125E6  5161               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  2797  0125E8  22DA               	addwfc	fsr2h,f,c
  2798  0125EA  50DE               	movf	postinc2,w,c
  2799  0125EC  10DE               	iorwf	postinc2,w,c
  2800  0125EE  B4D8               	btfsc	status,2,c
  2801  0125F0  D00B               	goto	l5195
  2802                           
  2803                           ; BSR set to: 0
  2804  0125F2  0100               	movlb	0	; () banked
  2805  0125F4  EE20 F004          	lfsr	2,4
  2806  0125F8  5160               	movf	ringbuf_backspace@rb& (0+255),w,b
  2807  0125FA  26D9               	addwf	fsr2l,f,c
  2808  0125FC  5161               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  2809  0125FE  22DA               	addwfc	fsr2h,f,c
  2810  012600  06DE               	decf	postinc2,f,c
  2811  012602  0E00               	movlw	0
  2812  012604  5ADD               	subwfb	postdec2,f,c
  2813  012606  0012               	return	
  2814  012608                     l5195:
  2815                           
  2816                           ; BSR set to: 0
  2817                           ;My_header\My_ringbuf.h: 81: else rb->head = rb->size - 1;
  2818  012608  0EFF               	movlw	255
  2819  01260A  0100               	movlb	0	; () banked
  2820  01260C  6F62               	movwf	??_ringbuf_backspace& (0+255),b
  2821  01260E  0EFF               	movlw	255
  2822  012610  0100               	movlb	0	; () banked
  2823  012612  6F63               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  2824  012614  0100               	movlb	0	; () banked
  2825  012616  EE20 F002          	lfsr	2,2
  2826  01261A  5160               	movf	ringbuf_backspace@rb& (0+255),w,b
  2827  01261C  26D9               	addwf	fsr2l,f,c
  2828  01261E  5161               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  2829  012620  22DA               	addwfc	fsr2h,f,c
  2830  012622  CFDE F064          	movff	postinc2,??_ringbuf_backspace+2
  2831  012626  CFDD F065          	movff	postdec2,??_ringbuf_backspace+3
  2832  01262A  0100               	movlb	0	; () banked
  2833  01262C  5162               	movf	??_ringbuf_backspace& (0+255),w,b
  2834  01262E  0100               	movlb	0	; () banked
  2835  012630  2764               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  2836  012632  0100               	movlb	0	; () banked
  2837  012634  5163               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  2838  012636  0100               	movlb	0	; () banked
  2839  012638  2365               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  2840  01263A  0100               	movlb	0	; () banked
  2841  01263C  EE20 F004          	lfsr	2,4
  2842  012640  5160               	movf	ringbuf_backspace@rb& (0+255),w,b
  2843  012642  26D9               	addwf	fsr2l,f,c
  2844  012644  5161               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  2845  012646  22DA               	addwfc	fsr2h,f,c
  2846  012648  C064  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  2847  01264C  C065  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  2848                           
  2849                           ; BSR set to: 0
  2850  012650  0012               	return	
  2851                           
  2852                           ; BSR set to: 0
  2853  012652  0012               	return		;funcret
  2854  012654                     __end_of_ringbuf_backspace:
  2855                           	opt stack 0
  2856                           tblptru	equ	0xFF8
  2857                           tblptrh	equ	0xFF7
  2858                           tblptrl	equ	0xFF6
  2859                           tablat	equ	0xFF5
  2860                           prodh	equ	0xFF4
  2861                           prodl	equ	0xFF3
  2862                           intcon	equ	0xFF2
  2863                           postinc0	equ	0xFEE
  2864                           wreg	equ	0xFE8
  2865                           postinc1	equ	0xFE6
  2866                           postdec1	equ	0xFE5
  2867                           fsr1h	equ	0xFE2
  2868                           fsr1l	equ	0xFE1
  2869                           indf2	equ	0xFDF
  2870                           postinc2	equ	0xFDE
  2871                           postdec2	equ	0xFDD
  2872                           fsr2h	equ	0xFDA
  2873                           fsr2l	equ	0xFD9
  2874                           status	equ	0xFD8
  2875                           
  2876 ;; *************** function _command_operation *****************
  2877 ;; Defined at:
  2878 ;;		line 163 in file "PIC18F27J53-killifish_light04.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;  tx              2    8[BANK1 ] PTR struct ringbuf
  2881 ;;		 -> tx_buf(8), 
  2882 ;;  op0             2   10[BANK1 ] PTR unsigned char 
  2883 ;;		 -> my_terminal_loop@op0(20), 
  2884 ;;  op1             2   12[BANK1 ] PTR unsigned char 
  2885 ;;		 -> my_terminal_loop@op1(20), 
  2886 ;;  op2             2   14[BANK1 ] PTR unsigned char 
  2887 ;;		 -> my_terminal_loop@op2(20), 
  2888 ;;  op3             2   16[BANK1 ] PTR unsigned char 
  2889 ;;		 -> my_terminal_loop@op3(20), 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;		None
  2892 ;; Return value:  Size  Location     Type
  2893 ;;		None               void
  2894 ;; Registers used:
  2895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2901 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2902 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2904 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2905 ;;Total ram usage:       14 bytes
  2906 ;; Hardware stack levels used:    1
  2907 ;; Hardware stack levels required when called:   11
  2908 ;; This function calls:
  2909 ;;		_PWM_set
  2910 ;;		___lwdiv
  2911 ;;		___wmul
  2912 ;;		_command_time
  2913 ;;		_my_atoi
  2914 ;;		_my_strcmp
  2915 ;;		_tx_sends
  2916 ;; This function is called by:
  2917 ;;		_my_terminal_loop
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           	psect	text6
  2922  0104A6                     __ptext6:
  2923                           	opt stack 0
  2924  0104A6                     _command_operation:
  2925                           	opt stack 18
  2926                           
  2927                           ;PIC18F27J53-killifish_light04.c: 164: if (!my_strcmp(op0, "help") || !my_strcmp(op0, "?
      +                          ")) {
  2928                           
  2929                           ;incstack = 0
  2930  0104A6  C10A  F01F         	movff	command_operation@op0,my_strcmp@str1
  2931  0104AA  C10B  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  2932  0104AE  0EBB               	movlw	low STR_22
  2933  0104B0  6E21               	movwf	my_strcmp@str2,c
  2934  0104B2  0EFF               	movlw	high STR_22
  2935  0104B4  6E22               	movwf	my_strcmp@str2+1,c
  2936  0104B6  ECFF  F091         	call	_my_strcmp	;wreg free
  2937  0104BA  0900               	iorlw	0
  2938  0104BC  B4D8               	btfsc	status,2,c
  2939  0104BE  D00D               	goto	l5201
  2940  0104C0  C10A  F01F         	movff	command_operation@op0,my_strcmp@str1
  2941  0104C4  C10B  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  2942  0104C8  0EEC               	movlw	low STR_23
  2943  0104CA  6E21               	movwf	my_strcmp@str2,c
  2944  0104CC  0EFF               	movlw	high STR_23
  2945  0104CE  6E22               	movwf	my_strcmp@str2+1,c
  2946  0104D0  ECFF  F091         	call	_my_strcmp	;wreg free
  2947  0104D4  0900               	iorlw	0
  2948  0104D6  A4D8               	btfss	status,2,c
  2949  0104D8  D009               	goto	l5203
  2950  0104DA                     l5201:
  2951                           
  2952                           ;PIC18F27J53-killifish_light04.c: 165: tx_sends(
  2953                           ;PIC18F27J53-killifish_light04.c: 166: "\t**************************\n"
  2954                           ;PIC18F27J53-killifish_light04.c: 167: "\t**** Killifish Light  ****\n"
  2955                           ;PIC18F27J53-killifish_light04.c: 168: "\t**** Made by @Ryokeri ****\n"
  2956                           ;PIC18F27J53-killifish_light04.c: 169: "\t**************************\n\n"
  2957                           ;PIC18F27J53-killifish_light04.c: 170: "\tcommand \topeland1\topeland2\n\n"
  2958                           ;PIC18F27J53-killifish_light04.c: 171: "\tprint_time(t)\n"
  2959                           ;PIC18F27J53-killifish_light04.c: 172: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(deci
      +                          mal)]\n"
  2960  0104DA  0E0D               	movlw	low STR_24
  2961  0104DC  0100               	movlb	0	; () banked
  2962  0104DE  6F67               	movwf	tx_sends@asciicode& (0+255),b
  2963  0104E0  0EFE               	movlw	high STR_24
  2964  0104E2  0100               	movlb	0	; () banked
  2965  0104E4  6F68               	movwf	(tx_sends@asciicode+1)& (0+255),b
  2966  0104E6  ECEB  F095         	call	_tx_sends	;wreg free
  2967  0104EA  D000               	goto	l5203
  2968  0104EC                     l5203:
  2969                           
  2970                           ;PIC18F27J53-killifish_light04.c: 179: }
  2971                           ;PIC18F27J53-killifish_light04.c: 180: command_time(tx, op0, op1, op2);
  2972  0104EC  C108  F100         	movff	command_operation@tx,command_time@tx
  2973  0104F0  C109  F101         	movff	command_operation@tx+1,command_time@tx+1
  2974  0104F4  C10A  F102         	movff	command_operation@op0,command_time@op0
  2975  0104F8  C10B  F103         	movff	command_operation@op0+1,command_time@op0+1
  2976  0104FC  C10C  F104         	movff	command_operation@op1,command_time@op1
  2977  010500  C10D  F105         	movff	command_operation@op1+1,command_time@op1+1
  2978  010504  C10E  F106         	movff	command_operation@op2,command_time@op2
  2979  010508  C10F  F107         	movff	command_operation@op2+1,command_time@op2+1
  2980  01050C  ECEB  F085         	call	_command_time	;wreg free
  2981                           
  2982                           ;PIC18F27J53-killifish_light04.c: 181: if (!my_strcmp(op0, "RESET();")) {
  2983  010510  C10A  F01F         	movff	command_operation@op0,my_strcmp@str1
  2984  010514  C10B  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  2985  010518  0E84               	movlw	low STR_25
  2986  01051A  6E21               	movwf	my_strcmp@str2,c
  2987  01051C  0EFF               	movlw	high STR_25
  2988  01051E  6E22               	movwf	my_strcmp@str2+1,c
  2989  010520  ECFF  F091         	call	_my_strcmp	;wreg free
  2990  010524  0900               	iorlw	0
  2991  010526  A4D8               	btfss	status,2,c
  2992  010528  D002               	goto	l5209
  2993  01052A  00FF               	reset		;# 
  2994  01052C  D000               	goto	l5209
  2995  01052E                     l5209:
  2996                           
  2997                           ;PIC18F27J53-killifish_light04.c: 183: }
  2998                           ;PIC18F27J53-killifish_light04.c: 184: if (!my_strcmp(op0, "set")) {
  2999  01052E  C10A  F01F         	movff	command_operation@op0,my_strcmp@str1
  3000  010532  C10B  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  3001  010536  0EDE               	movlw	low STR_26
  3002  010538  6E21               	movwf	my_strcmp@str2,c
  3003  01053A  0EFF               	movlw	high STR_26
  3004  01053C  6E22               	movwf	my_strcmp@str2+1,c
  3005  01053E  ECFF  F091         	call	_my_strcmp	;wreg free
  3006  010542  0900               	iorlw	0
  3007  010544  A4D8               	btfss	status,2,c
  3008  010546  D02F               	goto	l5221
  3009                           
  3010                           ;PIC18F27J53-killifish_light04.c: 185: if (!my_strcmp(op1, "sync")) {
  3011  010548  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  3012  01054C  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3013  010550  0EB6               	movlw	low STR_27
  3014  010552  6E21               	movwf	my_strcmp@str2,c
  3015  010554  0EFF               	movlw	high STR_27
  3016  010556  6E22               	movwf	my_strcmp@str2+1,c
  3017  010558  ECFF  F091         	call	_my_strcmp	;wreg free
  3018  01055C  0900               	iorlw	0
  3019  01055E  A4D8               	btfss	status,2,c
  3020  010560  D004               	goto	l5215
  3021                           
  3022                           ;PIC18F27J53-killifish_light04.c: 186: light_mode = TIME_SYNC_mode;
  3023  010562  0E00               	movlw	0
  3024  010564  0100               	movlb	0	; () banked
  3025  010566  6FCA               	movwf	_light_mode& (0+255),b
  3026  010568  D000               	goto	l5215
  3027  01056A                     l5215:
  3028                           
  3029                           ;PIC18F27J53-killifish_light04.c: 187: }
  3030                           ;PIC18F27J53-killifish_light04.c: 188: if (!my_strcmp(op1, "adc") || !my_strcmp(op1, "AD
      +                          C")) {
  3031  01056A  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  3032  01056E  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3033  010572  0ED6               	movlw	low STR_28
  3034  010574  6E21               	movwf	my_strcmp@str2,c
  3035  010576  0EFF               	movlw	high STR_28
  3036  010578  6E22               	movwf	my_strcmp@str2+1,c
  3037  01057A  ECFF  F091         	call	_my_strcmp	;wreg free
  3038  01057E  0900               	iorlw	0
  3039  010580  B4D8               	btfsc	status,2,c
  3040  010582  D00D               	goto	l5219
  3041  010584  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  3042  010588  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3043  01058C  0ECE               	movlw	low STR_29
  3044  01058E  6E21               	movwf	my_strcmp@str2,c
  3045  010590  0EFF               	movlw	high STR_29
  3046  010592  6E22               	movwf	my_strcmp@str2+1,c
  3047  010594  ECFF  F091         	call	_my_strcmp	;wreg free
  3048  010598  0900               	iorlw	0
  3049  01059A  A4D8               	btfss	status,2,c
  3050  01059C  D004               	goto	l5221
  3051  01059E                     l5219:
  3052                           
  3053                           ;PIC18F27J53-killifish_light04.c: 189: light_mode = ADC_mode;
  3054  01059E  0E01               	movlw	1
  3055  0105A0  0100               	movlb	0	; () banked
  3056  0105A2  6FCA               	movwf	_light_mode& (0+255),b
  3057                           
  3058                           ; BSR set to: 0
  3059  0105A4  D000               	goto	l5221
  3060  0105A6                     l5221:
  3061                           
  3062                           ;PIC18F27J53-killifish_light04.c: 190: }
  3063                           ;PIC18F27J53-killifish_light04.c: 191: }
  3064                           ;PIC18F27J53-killifish_light04.c: 192: if (!my_strcmp(op0, "pwm") || !my_strcmp(op0, "PW
      +                          M")) {
  3065  0105A6  C10A  F01F         	movff	command_operation@op0,my_strcmp@str1
  3066  0105AA  C10B  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  3067  0105AE  0EDA               	movlw	low STR_30
  3068  0105B0  6E21               	movwf	my_strcmp@str2,c
  3069  0105B2  0EFF               	movlw	high STR_30
  3070  0105B4  6E22               	movwf	my_strcmp@str2+1,c
  3071  0105B6  ECFF  F091         	call	_my_strcmp	;wreg free
  3072  0105BA  0900               	iorlw	0
  3073  0105BC  B4D8               	btfsc	status,2,c
  3074  0105BE  D00D               	goto	l5225
  3075  0105C0  C10A  F01F         	movff	command_operation@op0,my_strcmp@str1
  3076  0105C4  C10B  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  3077  0105C8  0ED2               	movlw	low STR_31
  3078  0105CA  6E21               	movwf	my_strcmp@str2,c
  3079  0105CC  0EFF               	movlw	high STR_31
  3080  0105CE  6E22               	movwf	my_strcmp@str2+1,c
  3081  0105D0  ECFF  F091         	call	_my_strcmp	;wreg free
  3082  0105D4  0900               	iorlw	0
  3083  0105D6  A4D8               	btfss	status,2,c
  3084  0105D8  0012               	return	
  3085  0105DA                     l5225:
  3086                           
  3087                           ;PIC18F27J53-killifish_light04.c: 193: if (!my_strcmp(op1, "r") || !my_strcmp(op1, "R"))
      +                           {
  3088  0105DA  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  3089  0105DE  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3090  0105E2  0EB4               	movlw	low (STR_40+4)
  3091  0105E4  6E21               	movwf	my_strcmp@str2,c
  3092  0105E6  0EFF               	movlw	high (STR_40+4)
  3093  0105E8  6E22               	movwf	my_strcmp@str2+1,c
  3094  0105EA  ECFF  F091         	call	_my_strcmp	;wreg free
  3095  0105EE  0900               	iorlw	0
  3096  0105F0  B4D8               	btfsc	status,2,c
  3097  0105F2  D00D               	goto	l5229
  3098  0105F4  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  3099  0105F8  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3100  0105FC  0EF2               	movlw	low STR_33
  3101  0105FE  6E21               	movwf	my_strcmp@str2,c
  3102  010600  0EFF               	movlw	high STR_33
  3103  010602  6E22               	movwf	my_strcmp@str2+1,c
  3104  010604  ECFF  F091         	call	_my_strcmp	;wreg free
  3105  010608  0900               	iorlw	0
  3106  01060A  A4D8               	btfss	status,2,c
  3107  01060C  D02E               	goto	l5237
  3108  01060E                     l5229:
  3109                           
  3110                           ;PIC18F27J53-killifish_light04.c: 194: light_mode = COMMAND_mode;
  3111  01060E  0E02               	movlw	2
  3112  010610  0100               	movlb	0	; () banked
  3113  010612  6FCA               	movwf	_light_mode& (0+255),b
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;PIC18F27J53-killifish_light04.c: 195: PWM_set(0, my_atoi(op2) * 250 / 100);
  3117  010614  C10E  F025         	movff	command_operation@op2,my_atoi@str
  3118  010618  C10F  F026         	movff	command_operation@op2+1,my_atoi@str+1
  3119  01061C  EC60  F091         	call	_my_atoi	;wreg free
  3120  010620  C025  F0BD         	movff	?_my_atoi,_command_operation$3201
  3121  010624  C026  F0BE         	movff	?_my_atoi+1,_command_operation$3201+1
  3122                           
  3123                           ;PIC18F27J53-killifish_light04.c: 195: PWM_set(0, my_atoi(op2) * 250 / 100);
  3124  010628  C0BD  F01F         	movff	_command_operation$3201,___wmul@multiplier
  3125  01062C  C0BE  F020         	movff	_command_operation$3201+1,___wmul@multiplier+1
  3126  010630  0E00               	movlw	0
  3127  010632  6E22               	movwf	___wmul@multiplicand+1,c
  3128  010634  0EFA               	movlw	250
  3129  010636  6E21               	movwf	___wmul@multiplicand,c
  3130  010638  EC7D  F096         	call	___wmul	;wreg free
  3131  01063C  C01F  F066         	movff	?___wmul,___lwdiv@dividend
  3132  010640  C020  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  3133  010644  0E00               	movlw	0
  3134  010646  0100               	movlb	0	; () banked
  3135  010648  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3136  01064A  0E64               	movlw	100
  3137  01064C  6F68               	movwf	___lwdiv@divisor& (0+255),b
  3138  01064E  ECAE  F093         	call	___lwdiv	;wreg free
  3139  010652  C066  F0BF         	movff	?___lwdiv,_command_operation$3202
  3140  010656  C067  F0C0         	movff	?___lwdiv+1,_command_operation$3202+1
  3141                           
  3142                           ;PIC18F27J53-killifish_light04.c: 195: PWM_set(0, my_atoi(op2) * 250 / 100);
  3143  01065A  C0BF  F06D         	movff	_command_operation$3202,PWM_set@value
  3144  01065E  C0C0  F06E         	movff	_command_operation$3202+1,PWM_set@value+1
  3145  010662  0E00               	movlw	0
  3146  010664  EC04  F08C         	call	_PWM_set
  3147  010668  D000               	goto	l5237
  3148  01066A                     l5237:
  3149                           
  3150                           ;PIC18F27J53-killifish_light04.c: 196: }
  3151                           ;PIC18F27J53-killifish_light04.c: 197: if (!my_strcmp(op1, "g") || !my_strcmp(op1, "G"))
      +                           {
  3152  01066A  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  3153  01066E  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3154  010672  0EF8               	movlw	low STR_34
  3155  010674  6E21               	movwf	my_strcmp@str2,c
  3156  010676  0EFF               	movlw	high STR_34
  3157  010678  6E22               	movwf	my_strcmp@str2+1,c
  3158  01067A  ECFF  F091         	call	_my_strcmp	;wreg free
  3159  01067E  0900               	iorlw	0
  3160  010680  B4D8               	btfsc	status,2,c
  3161  010682  D00D               	goto	l5241
  3162  010684  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  3163  010688  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3164  01068C  0EF0               	movlw	low STR_35
  3165  01068E  6E21               	movwf	my_strcmp@str2,c
  3166  010690  0EFF               	movlw	high STR_35
  3167  010692  6E22               	movwf	my_strcmp@str2+1,c
  3168  010694  ECFF  F091         	call	_my_strcmp	;wreg free
  3169  010698  0900               	iorlw	0
  3170  01069A  A4D8               	btfss	status,2,c
  3171  01069C  D02E               	goto	l5249
  3172  01069E                     l5241:
  3173                           
  3174                           ;PIC18F27J53-killifish_light04.c: 198: light_mode = COMMAND_mode;
  3175  01069E  0E02               	movlw	2
  3176  0106A0  0100               	movlb	0	; () banked
  3177  0106A2  6FCA               	movwf	_light_mode& (0+255),b
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;PIC18F27J53-killifish_light04.c: 199: PWM_set(1, my_atoi(op2) * 250 / 100);
  3181  0106A4  C10E  F025         	movff	command_operation@op2,my_atoi@str
  3182  0106A8  C10F  F026         	movff	command_operation@op2+1,my_atoi@str+1
  3183  0106AC  EC60  F091         	call	_my_atoi	;wreg free
  3184  0106B0  C025  F0BD         	movff	?_my_atoi,_command_operation$3201
  3185  0106B4  C026  F0BE         	movff	?_my_atoi+1,_command_operation$3201+1
  3186                           
  3187                           ;PIC18F27J53-killifish_light04.c: 199: PWM_set(1, my_atoi(op2) * 250 / 100);
  3188  0106B8  C0BD  F01F         	movff	_command_operation$3201,___wmul@multiplier
  3189  0106BC  C0BE  F020         	movff	_command_operation$3201+1,___wmul@multiplier+1
  3190  0106C0  0E00               	movlw	0
  3191  0106C2  6E22               	movwf	___wmul@multiplicand+1,c
  3192  0106C4  0EFA               	movlw	250
  3193  0106C6  6E21               	movwf	___wmul@multiplicand,c
  3194  0106C8  EC7D  F096         	call	___wmul	;wreg free
  3195  0106CC  C01F  F066         	movff	?___wmul,___lwdiv@dividend
  3196  0106D0  C020  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  3197  0106D4  0E00               	movlw	0
  3198  0106D6  0100               	movlb	0	; () banked
  3199  0106D8  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3200  0106DA  0E64               	movlw	100
  3201  0106DC  6F68               	movwf	___lwdiv@divisor& (0+255),b
  3202  0106DE  ECAE  F093         	call	___lwdiv	;wreg free
  3203  0106E2  C066  F0BF         	movff	?___lwdiv,_command_operation$3202
  3204  0106E6  C067  F0C0         	movff	?___lwdiv+1,_command_operation$3202+1
  3205                           
  3206                           ;PIC18F27J53-killifish_light04.c: 199: PWM_set(1, my_atoi(op2) * 250 / 100);
  3207  0106EA  C0BF  F06D         	movff	_command_operation$3202,PWM_set@value
  3208  0106EE  C0C0  F06E         	movff	_command_operation$3202+1,PWM_set@value+1
  3209  0106F2  0E01               	movlw	1
  3210  0106F4  EC04  F08C         	call	_PWM_set
  3211  0106F8  D000               	goto	l5249
  3212  0106FA                     l5249:
  3213                           
  3214                           ;PIC18F27J53-killifish_light04.c: 200: }
  3215                           ;PIC18F27J53-killifish_light04.c: 201: if (!my_strcmp(op1, "b") || !my_strcmp(op1, "B"))
      +                           {
  3216  0106FA  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  3217  0106FE  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3218  010702  0EF6               	movlw	low STR_36
  3219  010704  6E21               	movwf	my_strcmp@str2,c
  3220  010706  0EFF               	movlw	high STR_36
  3221  010708  6E22               	movwf	my_strcmp@str2+1,c
  3222  01070A  ECFF  F091         	call	_my_strcmp	;wreg free
  3223  01070E  0900               	iorlw	0
  3224  010710  B4D8               	btfsc	status,2,c
  3225  010712  D00D               	goto	l5253
  3226  010714  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  3227  010718  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3228  01071C  0EEE               	movlw	low STR_37
  3229  01071E  6E21               	movwf	my_strcmp@str2,c
  3230  010720  0EFF               	movlw	high STR_37
  3231  010722  6E22               	movwf	my_strcmp@str2+1,c
  3232  010724  ECFF  F091         	call	_my_strcmp	;wreg free
  3233  010728  0900               	iorlw	0
  3234  01072A  A4D8               	btfss	status,2,c
  3235  01072C  D02E               	goto	l5261
  3236  01072E                     l5253:
  3237                           
  3238                           ;PIC18F27J53-killifish_light04.c: 202: light_mode = COMMAND_mode;
  3239  01072E  0E02               	movlw	2
  3240  010730  0100               	movlb	0	; () banked
  3241  010732  6FCA               	movwf	_light_mode& (0+255),b
  3242                           
  3243                           ; BSR set to: 0
  3244                           ;PIC18F27J53-killifish_light04.c: 203: PWM_set(2, my_atoi(op2) * 250 / 100);
  3245  010734  C10E  F025         	movff	command_operation@op2,my_atoi@str
  3246  010738  C10F  F026         	movff	command_operation@op2+1,my_atoi@str+1
  3247  01073C  EC60  F091         	call	_my_atoi	;wreg free
  3248  010740  C025  F0BD         	movff	?_my_atoi,_command_operation$3201
  3249  010744  C026  F0BE         	movff	?_my_atoi+1,_command_operation$3201+1
  3250                           
  3251                           ;PIC18F27J53-killifish_light04.c: 203: PWM_set(2, my_atoi(op2) * 250 / 100);
  3252  010748  C0BD  F01F         	movff	_command_operation$3201,___wmul@multiplier
  3253  01074C  C0BE  F020         	movff	_command_operation$3201+1,___wmul@multiplier+1
  3254  010750  0E00               	movlw	0
  3255  010752  6E22               	movwf	___wmul@multiplicand+1,c
  3256  010754  0EFA               	movlw	250
  3257  010756  6E21               	movwf	___wmul@multiplicand,c
  3258  010758  EC7D  F096         	call	___wmul	;wreg free
  3259  01075C  C01F  F066         	movff	?___wmul,___lwdiv@dividend
  3260  010760  C020  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  3261  010764  0E00               	movlw	0
  3262  010766  0100               	movlb	0	; () banked
  3263  010768  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3264  01076A  0E64               	movlw	100
  3265  01076C  6F68               	movwf	___lwdiv@divisor& (0+255),b
  3266  01076E  ECAE  F093         	call	___lwdiv	;wreg free
  3267  010772  C066  F0BF         	movff	?___lwdiv,_command_operation$3202
  3268  010776  C067  F0C0         	movff	?___lwdiv+1,_command_operation$3202+1
  3269                           
  3270                           ;PIC18F27J53-killifish_light04.c: 203: PWM_set(2, my_atoi(op2) * 250 / 100);
  3271  01077A  C0BF  F06D         	movff	_command_operation$3202,PWM_set@value
  3272  01077E  C0C0  F06E         	movff	_command_operation$3202+1,PWM_set@value+1
  3273  010782  0E02               	movlw	2
  3274  010784  EC04  F08C         	call	_PWM_set
  3275  010788  D000               	goto	l5261
  3276  01078A                     l5261:
  3277                           
  3278                           ;PIC18F27J53-killifish_light04.c: 204: }
  3279                           ;PIC18F27J53-killifish_light04.c: 205: if (!my_strcmp(op1, "w") || !my_strcmp(op1, "W"))
      +                           {
  3280  01078A  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  3281  01078E  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3282  010792  0EFC               	movlw	low STR_38
  3283  010794  6E21               	movwf	my_strcmp@str2,c
  3284  010796  0EFF               	movlw	high STR_38
  3285  010798  6E22               	movwf	my_strcmp@str2+1,c
  3286  01079A  ECFF  F091         	call	_my_strcmp	;wreg free
  3287  01079E  0900               	iorlw	0
  3288  0107A0  B4D8               	btfsc	status,2,c
  3289  0107A2  D00D               	goto	l5265
  3290  0107A4  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  3291  0107A8  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3292  0107AC  0EF4               	movlw	low STR_39
  3293  0107AE  6E21               	movwf	my_strcmp@str2,c
  3294  0107B0  0EFF               	movlw	high STR_39
  3295  0107B2  6E22               	movwf	my_strcmp@str2+1,c
  3296  0107B4  ECFF  F091         	call	_my_strcmp	;wreg free
  3297  0107B8  0900               	iorlw	0
  3298  0107BA  A4D8               	btfss	status,2,c
  3299  0107BC  D02E               	goto	l5273
  3300  0107BE                     l5265:
  3301                           
  3302                           ;PIC18F27J53-killifish_light04.c: 206: light_mode = COMMAND_mode;
  3303  0107BE  0E02               	movlw	2
  3304  0107C0  0100               	movlb	0	; () banked
  3305  0107C2  6FCA               	movwf	_light_mode& (0+255),b
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;PIC18F27J53-killifish_light04.c: 207: PWM_set(3, my_atoi(op2) * 250 / 100);
  3309  0107C4  C10E  F025         	movff	command_operation@op2,my_atoi@str
  3310  0107C8  C10F  F026         	movff	command_operation@op2+1,my_atoi@str+1
  3311  0107CC  EC60  F091         	call	_my_atoi	;wreg free
  3312  0107D0  C025  F0BD         	movff	?_my_atoi,_command_operation$3201
  3313  0107D4  C026  F0BE         	movff	?_my_atoi+1,_command_operation$3201+1
  3314                           
  3315                           ;PIC18F27J53-killifish_light04.c: 207: PWM_set(3, my_atoi(op2) * 250 / 100);
  3316  0107D8  C0BD  F01F         	movff	_command_operation$3201,___wmul@multiplier
  3317  0107DC  C0BE  F020         	movff	_command_operation$3201+1,___wmul@multiplier+1
  3318  0107E0  0E00               	movlw	0
  3319  0107E2  6E22               	movwf	___wmul@multiplicand+1,c
  3320  0107E4  0EFA               	movlw	250
  3321  0107E6  6E21               	movwf	___wmul@multiplicand,c
  3322  0107E8  EC7D  F096         	call	___wmul	;wreg free
  3323  0107EC  C01F  F066         	movff	?___wmul,___lwdiv@dividend
  3324  0107F0  C020  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  3325  0107F4  0E00               	movlw	0
  3326  0107F6  0100               	movlb	0	; () banked
  3327  0107F8  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3328  0107FA  0E64               	movlw	100
  3329  0107FC  6F68               	movwf	___lwdiv@divisor& (0+255),b
  3330  0107FE  ECAE  F093         	call	___lwdiv	;wreg free
  3331  010802  C066  F0BF         	movff	?___lwdiv,_command_operation$3202
  3332  010806  C067  F0C0         	movff	?___lwdiv+1,_command_operation$3202+1
  3333                           
  3334                           ;PIC18F27J53-killifish_light04.c: 207: PWM_set(3, my_atoi(op2) * 250 / 100);
  3335  01080A  C0BF  F06D         	movff	_command_operation$3202,PWM_set@value
  3336  01080E  C0C0  F06E         	movff	_command_operation$3202+1,PWM_set@value+1
  3337  010812  0E03               	movlw	3
  3338  010814  EC04  F08C         	call	_PWM_set
  3339  010818  D000               	goto	l5273
  3340  01081A                     l5273:
  3341                           
  3342                           ;PIC18F27J53-killifish_light04.c: 208: }
  3343                           ;PIC18F27J53-killifish_light04.c: 209: if (!my_strcmp(op1, "clear")) {
  3344  01081A  C10C  F01F         	movff	command_operation@op1,my_strcmp@str1
  3345  01081E  C10D  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3346  010822  0EB0               	movlw	low STR_40
  3347  010824  6E21               	movwf	my_strcmp@str2,c
  3348  010826  0EFF               	movlw	high STR_40
  3349  010828  6E22               	movwf	my_strcmp@str2+1,c
  3350  01082A  ECFF  F091         	call	_my_strcmp	;wreg free
  3351  01082E  0900               	iorlw	0
  3352  010830  A4D8               	btfss	status,2,c
  3353  010832  0012               	return	
  3354                           
  3355                           ;PIC18F27J53-killifish_light04.c: 210: light_mode = COMMAND_mode;
  3356  010834  0E02               	movlw	2
  3357  010836  0100               	movlb	0	; () banked
  3358  010838  6FCA               	movwf	_light_mode& (0+255),b
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;PIC18F27J53-killifish_light04.c: 211: PWM_set(0, 0);
  3362  01083A  0E00               	movlw	0
  3363  01083C  0100               	movlb	0	; () banked
  3364  01083E  6F6E               	movwf	(PWM_set@value+1)& (0+255),b
  3365  010840  0E00               	movlw	0
  3366  010842  6F6D               	movwf	PWM_set@value& (0+255),b
  3367  010844  0E00               	movlw	0
  3368  010846  EC04  F08C         	call	_PWM_set
  3369                           
  3370                           ;PIC18F27J53-killifish_light04.c: 212: PWM_set(1, 0);
  3371  01084A  0E00               	movlw	0
  3372  01084C  0100               	movlb	0	; () banked
  3373  01084E  6F6E               	movwf	(PWM_set@value+1)& (0+255),b
  3374  010850  0E00               	movlw	0
  3375  010852  6F6D               	movwf	PWM_set@value& (0+255),b
  3376  010854  0E01               	movlw	1
  3377  010856  EC04  F08C         	call	_PWM_set
  3378                           
  3379                           ;PIC18F27J53-killifish_light04.c: 213: PWM_set(2, 0);
  3380  01085A  0E00               	movlw	0
  3381  01085C  0100               	movlb	0	; () banked
  3382  01085E  6F6E               	movwf	(PWM_set@value+1)& (0+255),b
  3383  010860  0E00               	movlw	0
  3384  010862  6F6D               	movwf	PWM_set@value& (0+255),b
  3385  010864  0E02               	movlw	2
  3386  010866  EC04  F08C         	call	_PWM_set
  3387                           
  3388                           ;PIC18F27J53-killifish_light04.c: 214: PWM_set(3, 0);
  3389  01086A  0E00               	movlw	0
  3390  01086C  0100               	movlb	0	; () banked
  3391  01086E  6F6E               	movwf	(PWM_set@value+1)& (0+255),b
  3392  010870  0E00               	movlw	0
  3393  010872  6F6D               	movwf	PWM_set@value& (0+255),b
  3394  010874  0E03               	movlw	3
  3395  010876  EC04  F08C         	call	_PWM_set
  3396  01087A  0012               	return	
  3397  01087C  0012               	return		;funcret
  3398  01087E                     __end_of_command_operation:
  3399                           	opt stack 0
  3400                           tblptru	equ	0xFF8
  3401                           tblptrh	equ	0xFF7
  3402                           tblptrl	equ	0xFF6
  3403                           tablat	equ	0xFF5
  3404                           prodh	equ	0xFF4
  3405                           prodl	equ	0xFF3
  3406                           intcon	equ	0xFF2
  3407                           postinc0	equ	0xFEE
  3408                           wreg	equ	0xFE8
  3409                           postinc1	equ	0xFE6
  3410                           postdec1	equ	0xFE5
  3411                           fsr1h	equ	0xFE2
  3412                           fsr1l	equ	0xFE1
  3413                           indf2	equ	0xFDF
  3414                           postinc2	equ	0xFDE
  3415                           postdec2	equ	0xFDD
  3416                           fsr2h	equ	0xFDA
  3417                           fsr2l	equ	0xFD9
  3418                           status	equ	0xFD8
  3419                           
  3420 ;; *************** function _tx_sends *****************
  3421 ;; Defined at:
  3422 ;;		line 227 in file "../My_header\My_header.h"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  asciicode       2    7[BANK0 ] PTR const unsigned char 
  3425 ;;		 -> STR_24(315), 
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;		None
  3428 ;; Return value:  Size  Location     Type
  3429 ;;		None               void
  3430 ;; Registers used:
  3431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3437 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3440 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3441 ;;Total ram usage:        2 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; Hardware stack levels required when called:    6
  3444 ;; This function calls:
  3445 ;;		_ringbuf_put
  3446 ;; This function is called by:
  3447 ;;		_command_operation
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           	psect	text7
  3452  012BD6                     __ptext7:
  3453                           	opt stack 0
  3454  012BD6                     _tx_sends:
  3455                           	opt stack 22
  3456                           
  3457                           ;My_header\My_header.h: 228: while (*asciicode) {
  3458                           
  3459                           ;incstack = 0
  3460  012BD6  D015               	goto	l5061
  3461  012BD8                     l5057:
  3462                           
  3463                           ;My_header\My_header.h: 229: ringbuf_put(&tx_buf, *asciicode++);
  3464  012BD8  0E2E               	movlw	low _tx_buf
  3465  012BDA  0100               	movlb	0	; () banked
  3466  012BDC  6F60               	movwf	ringbuf_put@rb& (0+255),b
  3467  012BDE  0E00               	movlw	high _tx_buf
  3468  012BE0  0100               	movlb	0	; () banked
  3469  012BE2  6F61               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3470  012BE4  C067  FFF6         	movff	tx_sends@asciicode,tblptrl
  3471  012BE8  C068  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  3472  012BEC                     	if	0	;tblptru may be non-zero
  3473  012BEC                     	endif
  3474  012BEC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3475  012BEC  0E00               	movlw	low (__mediumconst shr (0+16))
  3476  012BEE  6EF8               	movwf	tblptru,c
  3477  012BF0                     	endif
  3478  012BF0  0008               	tblrd		*
  3479  012BF2  CFF5 F062          	movff	tablat,ringbuf_put@asciicode
  3480  012BF6  EC3F  F08D         	call	_ringbuf_put	;wreg free
  3481  012BFA  0100               	movlb	0	; () banked
  3482  012BFC  4B67               	infsnz	tx_sends@asciicode& (0+255),f,b
  3483  012BFE  2B68               	incf	(tx_sends@asciicode+1)& (0+255),f,b
  3484  012C00  D000               	goto	l5061
  3485  012C02                     l5061:
  3486  012C02  C067  FFF6         	movff	tx_sends@asciicode,tblptrl
  3487  012C06  C068  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  3488  012C0A                     	if	0	;tblptru may be non-zero
  3489  012C0A                     	endif
  3490  012C0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3491  012C0A  0E00               	movlw	low (__mediumconst shr (0+16))
  3492  012C0C  6EF8               	movwf	tblptru,c
  3493  012C0E                     	endif
  3494  012C0E  0008               	tblrd		*
  3495  012C10  50F5               	movf	tablat,w,c
  3496  012C12  0900               	iorlw	0
  3497  012C14  A4D8               	btfss	status,2,c
  3498  012C16  D7E0               	goto	l5057
  3499                           
  3500                           ;My_header\My_header.h: 230: }
  3501                           ;My_header\My_header.h: 231: PIE1bits.TXIE = 1;
  3502  012C18  889D               	bsf	3997,4,c	;volatile
  3503  012C1A  0012               	return		;funcret
  3504  012C1C                     __end_of_tx_sends:
  3505                           	opt stack 0
  3506                           tblptru	equ	0xFF8
  3507                           tblptrh	equ	0xFF7
  3508                           tblptrl	equ	0xFF6
  3509                           tablat	equ	0xFF5
  3510                           prodh	equ	0xFF4
  3511                           prodl	equ	0xFF3
  3512                           intcon	equ	0xFF2
  3513                           postinc0	equ	0xFEE
  3514                           wreg	equ	0xFE8
  3515                           postinc1	equ	0xFE6
  3516                           postdec1	equ	0xFE5
  3517                           fsr1h	equ	0xFE2
  3518                           fsr1l	equ	0xFE1
  3519                           indf2	equ	0xFDF
  3520                           postinc2	equ	0xFDE
  3521                           postdec2	equ	0xFDD
  3522                           fsr2h	equ	0xFDA
  3523                           fsr2l	equ	0xFD9
  3524                           status	equ	0xFD8
  3525                           
  3526 ;; *************** function _command_time *****************
  3527 ;; Defined at:
  3528 ;;		line 107 in file "../My_header\My_terminal.h"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  3531 ;;		 -> tx_buf(8), 
  3532 ;;  op0             2    2[BANK1 ] PTR unsigned char 
  3533 ;;		 -> my_terminal_loop@op0(20), 
  3534 ;;  op1             2    4[BANK1 ] PTR unsigned char 
  3535 ;;		 -> my_terminal_loop@op1(20), 
  3536 ;;  op2             2    6[BANK1 ] PTR unsigned char 
  3537 ;;		 -> my_terminal_loop@op2(20), 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;		None
  3540 ;; Return value:  Size  Location     Type
  3541 ;;		None               void
  3542 ;; Registers used:
  3543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3549 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3550 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3552 ;;      Totals:         0       1       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3553 ;;Total ram usage:        9 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:   10
  3556 ;; This function calls:
  3557 ;;		_command_at_hand
  3558 ;;		_month_length
  3559 ;;		_my_atoi
  3560 ;;		_my_strcmp
  3561 ;;		_print_time
  3562 ;; This function is called by:
  3563 ;;		_command_operation
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           	psect	text8
  3568  010BD6                     __ptext8:
  3569                           	opt stack 0
  3570  010BD6                     _command_time:
  3571                           	opt stack 18
  3572                           
  3573                           ;My_header\My_terminal.h: 108: if (!my_strcmp(op0, "print_time") || !my_strcmp(op0, "t")
      +                          ) {
  3574                           
  3575                           ;incstack = 0
  3576  010BD6  C102  F01F         	movff	command_time@op0,my_strcmp@str1
  3577  010BDA  C103  F020         	movff	command_time@op0+1,my_strcmp@str1+1
  3578  010BDE  0E79               	movlw	low STR_6
  3579  010BE0  6E21               	movwf	my_strcmp@str2,c
  3580  010BE2  0EFF               	movlw	high STR_6
  3581  010BE4  6E22               	movwf	my_strcmp@str2+1,c
  3582  010BE6  ECFF  F091         	call	_my_strcmp	;wreg free
  3583  010BEA  0900               	iorlw	0
  3584  010BEC  B4D8               	btfsc	status,2,c
  3585  010BEE  D00D               	goto	l5067
  3586  010BF0  C102  F01F         	movff	command_time@op0,my_strcmp@str1
  3587  010BF4  C103  F020         	movff	command_time@op0+1,my_strcmp@str1+1
  3588  010BF8  0EEA               	movlw	low (STR_8+1)
  3589  010BFA  6E21               	movwf	my_strcmp@str2,c
  3590  010BFC  0EFF               	movlw	high (STR_8+1)
  3591  010BFE  6E22               	movwf	my_strcmp@str2+1,c
  3592  010C00  ECFF  F091         	call	_my_strcmp	;wreg free
  3593  010C04  0900               	iorlw	0
  3594  010C06  A4D8               	btfss	status,2,c
  3595  010C08  D007               	goto	l5069
  3596  010C0A                     l5067:
  3597                           
  3598                           ;My_header\My_terminal.h: 109: print_time(tx);
  3599  010C0A  C100  F095         	movff	command_time@tx,print_time@tx
  3600  010C0E  C101  F096         	movff	command_time@tx+1,print_time@tx+1
  3601  010C12  EC4D  F092         	call	_print_time	;wreg free
  3602  010C16  D000               	goto	l5069
  3603  010C18                     l5069:
  3604                           
  3605                           ;My_header\My_terminal.h: 110: }
  3606                           ;My_header\My_terminal.h: 111: if (!my_strcmp(op0, "at") || !my_strcmp(op0, "adjust_time
      +                          ")) {
  3607  010C18  C102  F01F         	movff	command_time@op0,my_strcmp@str1
  3608  010C1C  C103  F020         	movff	command_time@op0+1,my_strcmp@str1+1
  3609  010C20  0EE9               	movlw	low STR_8
  3610  010C22  6E21               	movwf	my_strcmp@str2,c
  3611  010C24  0EFF               	movlw	high STR_8
  3612  010C26  6E22               	movwf	my_strcmp@str2+1,c
  3613  010C28  ECFF  F091         	call	_my_strcmp	;wreg free
  3614  010C2C  0900               	iorlw	0
  3615  010C2E  B4D8               	btfsc	status,2,c
  3616  010C30  D00D               	goto	l5073
  3617  010C32  C102  F01F         	movff	command_time@op0,my_strcmp@str1
  3618  010C36  C103  F020         	movff	command_time@op0+1,my_strcmp@str1+1
  3619  010C3A  0E6D               	movlw	low STR_9
  3620  010C3C  6E21               	movwf	my_strcmp@str2,c
  3621  010C3E  0EFF               	movlw	high STR_9
  3622  010C40  6E22               	movwf	my_strcmp@str2+1,c
  3623  010C42  ECFF  F091         	call	_my_strcmp	;wreg free
  3624  010C46  0900               	iorlw	0
  3625  010C48  A4D8               	btfss	status,2,c
  3626  010C4A  0012               	return	
  3627  010C4C                     l5073:
  3628                           
  3629                           ;My_header\My_terminal.h: 112: if (!my_strcmp(op1, "y") || !my_strcmp(op1, "year")) {
  3630  010C4C  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3631  010C50  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3632  010C54  0EE4               	movlw	low (STR_15+2)
  3633  010C56  6E21               	movwf	my_strcmp@str2,c
  3634  010C58  0EFF               	movlw	high (STR_15+2)
  3635  010C5A  6E22               	movwf	my_strcmp@str2+1,c
  3636  010C5C  ECFF  F091         	call	_my_strcmp	;wreg free
  3637  010C60  0900               	iorlw	0
  3638  010C62  B4D8               	btfsc	status,2,c
  3639  010C64  D00D               	goto	l5077
  3640  010C66  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3641  010C6A  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3642  010C6E  0EC0               	movlw	low STR_11
  3643  010C70  6E21               	movwf	my_strcmp@str2,c
  3644  010C72  0EFF               	movlw	high STR_11
  3645  010C74  6E22               	movwf	my_strcmp@str2+1,c
  3646  010C76  ECFF  F091         	call	_my_strcmp	;wreg free
  3647  010C7A  0900               	iorlw	0
  3648  010C7C  A4D8               	btfss	status,2,c
  3649  010C7E  D01C               	goto	l5079
  3650  010C80                     l5077:
  3651                           
  3652                           ;My_header\My_terminal.h: 113: command_at_hand(tx, &caltime_now.YY, 0, 99, my_atoi(op2))
      +                          ;
  3653  010C80  C100  F0B5         	movff	command_time@tx,command_at_hand@tx
  3654  010C84  C101  F0B6         	movff	command_time@tx+1,command_at_hand@tx+1
  3655  010C88  0EF8               	movlw	low (_caltime_now+6)
  3656  010C8A  0100               	movlb	0	; () banked
  3657  010C8C  6FB7               	movwf	command_at_hand@hand& (0+255),b
  3658  010C8E  0E00               	movlw	high (_caltime_now+6)
  3659  010C90  0100               	movlb	0	; () banked
  3660  010C92  6FB8               	movwf	(command_at_hand@hand+1)& (0+255),b
  3661  010C94  0E00               	movlw	0
  3662  010C96  0100               	movlb	0	; () banked
  3663  010C98  6FB9               	movwf	command_at_hand@min& (0+255),b
  3664  010C9A  0E63               	movlw	99
  3665  010C9C  0100               	movlb	0	; () banked
  3666  010C9E  6FBA               	movwf	command_at_hand@max& (0+255),b
  3667  010CA0  C106  F025         	movff	command_time@op2,my_atoi@str
  3668  010CA4  C107  F026         	movff	command_time@op2+1,my_atoi@str+1
  3669  010CA8  EC60  F091         	call	_my_atoi	;wreg free
  3670  010CAC  5025               	movf	?_my_atoi,w,c
  3671  010CAE  0100               	movlb	0	; () banked
  3672  010CB0  6FBB               	movwf	command_at_hand@value& (0+255),b
  3673  010CB2  ECA8  F094         	call	_command_at_hand	;wreg free
  3674  010CB6  D000               	goto	l5079
  3675  010CB8                     l5079:
  3676                           
  3677                           ;My_header\My_terminal.h: 114: }
  3678                           ;My_header\My_terminal.h: 115: if (!my_strcmp(op1, "M") || !my_strcmp(op1, "month")) {
  3679  010CB8  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3680  010CBC  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3681  010CC0  0ED4               	movlw	low (STR_31+2)
  3682  010CC2  6E21               	movwf	my_strcmp@str2,c
  3683  010CC4  0EFF               	movlw	high (STR_31+2)
  3684  010CC6  6E22               	movwf	my_strcmp@str2+1,c
  3685  010CC8  ECFF  F091         	call	_my_strcmp	;wreg free
  3686  010CCC  0900               	iorlw	0
  3687  010CCE  B4D8               	btfsc	status,2,c
  3688  010CD0  D00D               	goto	l5083
  3689  010CD2  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3690  010CD6  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3691  010CDA  0EAA               	movlw	low STR_13
  3692  010CDC  6E21               	movwf	my_strcmp@str2,c
  3693  010CDE  0EFF               	movlw	high STR_13
  3694  010CE0  6E22               	movwf	my_strcmp@str2+1,c
  3695  010CE2  ECFF  F091         	call	_my_strcmp	;wreg free
  3696  010CE6  0900               	iorlw	0
  3697  010CE8  A4D8               	btfss	status,2,c
  3698  010CEA  D01C               	goto	l5085
  3699  010CEC                     l5083:
  3700                           
  3701                           ;My_header\My_terminal.h: 116: command_at_hand(tx, &caltime_now.MM, 1, 12, my_atoi(op2))
      +                          ;
  3702  010CEC  C100  F0B5         	movff	command_time@tx,command_at_hand@tx
  3703  010CF0  C101  F0B6         	movff	command_time@tx+1,command_at_hand@tx+1
  3704  010CF4  0EF7               	movlw	low (_caltime_now+5)
  3705  010CF6  0100               	movlb	0	; () banked
  3706  010CF8  6FB7               	movwf	command_at_hand@hand& (0+255),b
  3707  010CFA  0E00               	movlw	high (_caltime_now+5)
  3708  010CFC  0100               	movlb	0	; () banked
  3709  010CFE  6FB8               	movwf	(command_at_hand@hand+1)& (0+255),b
  3710  010D00  0E01               	movlw	1
  3711  010D02  0100               	movlb	0	; () banked
  3712  010D04  6FB9               	movwf	command_at_hand@min& (0+255),b
  3713  010D06  0E0C               	movlw	12
  3714  010D08  0100               	movlb	0	; () banked
  3715  010D0A  6FBA               	movwf	command_at_hand@max& (0+255),b
  3716  010D0C  C106  F025         	movff	command_time@op2,my_atoi@str
  3717  010D10  C107  F026         	movff	command_time@op2+1,my_atoi@str+1
  3718  010D14  EC60  F091         	call	_my_atoi	;wreg free
  3719  010D18  5025               	movf	?_my_atoi,w,c
  3720  010D1A  0100               	movlb	0	; () banked
  3721  010D1C  6FBB               	movwf	command_at_hand@value& (0+255),b
  3722  010D1E  ECA8  F094         	call	_command_at_hand	;wreg free
  3723  010D22  D000               	goto	l5085
  3724  010D24                     l5085:
  3725                           
  3726                           ;My_header\My_terminal.h: 117: }
  3727                           ;My_header\My_terminal.h: 118: if (!my_strcmp(op1, "d") || !my_strcmp(op1, "day")) {
  3728  010D24  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3729  010D28  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3730  010D2C  0EA1               	movlw	low (STR_21+5)
  3731  010D2E  6E21               	movwf	my_strcmp@str2,c
  3732  010D30  0EFF               	movlw	high (STR_21+5)
  3733  010D32  6E22               	movwf	my_strcmp@str2+1,c
  3734  010D34  ECFF  F091         	call	_my_strcmp	;wreg free
  3735  010D38  0900               	iorlw	0
  3736  010D3A  B4D8               	btfsc	status,2,c
  3737  010D3C  D00D               	goto	l5089
  3738  010D3E  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3739  010D42  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3740  010D46  0EE2               	movlw	low STR_15
  3741  010D48  6E21               	movwf	my_strcmp@str2,c
  3742  010D4A  0EFF               	movlw	high STR_15
  3743  010D4C  6E22               	movwf	my_strcmp@str2+1,c
  3744  010D4E  ECFF  F091         	call	_my_strcmp	;wreg free
  3745  010D52  0900               	iorlw	0
  3746  010D54  A4D8               	btfss	status,2,c
  3747  010D56  D023               	goto	l5093
  3748  010D58                     l5089:
  3749                           
  3750                           ;My_header\My_terminal.h: 119: command_at_hand(tx, &caltime_now.DD, 1, month_length(calt
      +                          ime_now.YY, caltime_now.MM), my_atoi(op2));
  3751  010D58  C0F7  F025         	movff	_caltime_now+5,month_length@month
  3752  010D5C  0100               	movlb	0	; () banked
  3753  010D5E  51F8               	movf	(_caltime_now+6)& (0+255),w,b
  3754  010D60  EC77  F08E         	call	_month_length
  3755  010D64  0100               	movlb	0	; () banked
  3756  010D66  6FBC               	movwf	_command_time$3200& (0+255),b
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;My_header\My_terminal.h: 119: command_at_hand(tx, &caltime_now.DD, 1, month_length(calt
      +                          ime_now.YY, caltime_now.MM), my_atoi(op2));
  3760  010D68  C100  F0B5         	movff	command_time@tx,command_at_hand@tx
  3761  010D6C  C101  F0B6         	movff	command_time@tx+1,command_at_hand@tx+1
  3762  010D70  0EF6               	movlw	low (_caltime_now+4)
  3763  010D72  0100               	movlb	0	; () banked
  3764  010D74  6FB7               	movwf	command_at_hand@hand& (0+255),b
  3765  010D76  0E00               	movlw	high (_caltime_now+4)
  3766  010D78  0100               	movlb	0	; () banked
  3767  010D7A  6FB8               	movwf	(command_at_hand@hand+1)& (0+255),b
  3768  010D7C  0E01               	movlw	1
  3769  010D7E  0100               	movlb	0	; () banked
  3770  010D80  6FB9               	movwf	command_at_hand@min& (0+255),b
  3771  010D82  C0BC  F0BA         	movff	_command_time$3200,command_at_hand@max
  3772  010D86  C106  F025         	movff	command_time@op2,my_atoi@str
  3773  010D8A  C107  F026         	movff	command_time@op2+1,my_atoi@str+1
  3774  010D8E  EC60  F091         	call	_my_atoi	;wreg free
  3775  010D92  5025               	movf	?_my_atoi,w,c
  3776  010D94  0100               	movlb	0	; () banked
  3777  010D96  6FBB               	movwf	command_at_hand@value& (0+255),b
  3778  010D98  ECA8  F094         	call	_command_at_hand	;wreg free
  3779  010D9C  D000               	goto	l5093
  3780  010D9E                     l5093:
  3781                           
  3782                           ;My_header\My_terminal.h: 120: }
  3783                           ;My_header\My_terminal.h: 121: if (!my_strcmp(op1, "h") || !my_strcmp(op1, "hour")) {
  3784  010D9E  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3785  010DA2  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3786  010DA6  0EAE               	movlw	low (STR_13+4)
  3787  010DA8  6E21               	movwf	my_strcmp@str2,c
  3788  010DAA  0EFF               	movlw	high (STR_13+4)
  3789  010DAC  6E22               	movwf	my_strcmp@str2+1,c
  3790  010DAE  ECFF  F091         	call	_my_strcmp	;wreg free
  3791  010DB2  0900               	iorlw	0
  3792  010DB4  B4D8               	btfsc	status,2,c
  3793  010DB6  D00D               	goto	l5097
  3794  010DB8  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3795  010DBC  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3796  010DC0  0EC5               	movlw	low STR_17
  3797  010DC2  6E21               	movwf	my_strcmp@str2,c
  3798  010DC4  0EFF               	movlw	high STR_17
  3799  010DC6  6E22               	movwf	my_strcmp@str2+1,c
  3800  010DC8  ECFF  F091         	call	_my_strcmp	;wreg free
  3801  010DCC  0900               	iorlw	0
  3802  010DCE  A4D8               	btfss	status,2,c
  3803  010DD0  D01C               	goto	l5099
  3804  010DD2                     l5097:
  3805                           
  3806                           ;My_header\My_terminal.h: 122: command_at_hand(tx, &caltime_now.hh, 0, 23, my_atoi(op2))
      +                          ;
  3807  010DD2  C100  F0B5         	movff	command_time@tx,command_at_hand@tx
  3808  010DD6  C101  F0B6         	movff	command_time@tx+1,command_at_hand@tx+1
  3809  010DDA  0EF4               	movlw	low (_caltime_now+2)
  3810  010DDC  0100               	movlb	0	; () banked
  3811  010DDE  6FB7               	movwf	command_at_hand@hand& (0+255),b
  3812  010DE0  0E00               	movlw	high (_caltime_now+2)
  3813  010DE2  0100               	movlb	0	; () banked
  3814  010DE4  6FB8               	movwf	(command_at_hand@hand+1)& (0+255),b
  3815  010DE6  0E00               	movlw	0
  3816  010DE8  0100               	movlb	0	; () banked
  3817  010DEA  6FB9               	movwf	command_at_hand@min& (0+255),b
  3818  010DEC  0E17               	movlw	23
  3819  010DEE  0100               	movlb	0	; () banked
  3820  010DF0  6FBA               	movwf	command_at_hand@max& (0+255),b
  3821  010DF2  C106  F025         	movff	command_time@op2,my_atoi@str
  3822  010DF6  C107  F026         	movff	command_time@op2+1,my_atoi@str+1
  3823  010DFA  EC60  F091         	call	_my_atoi	;wreg free
  3824  010DFE  5025               	movf	?_my_atoi,w,c
  3825  010E00  0100               	movlb	0	; () banked
  3826  010E02  6FBB               	movwf	command_at_hand@value& (0+255),b
  3827  010E04  ECA8  F094         	call	_command_at_hand	;wreg free
  3828  010E08  D000               	goto	l5099
  3829  010E0A                     l5099:
  3830                           
  3831                           ;My_header\My_terminal.h: 123: }
  3832                           ;My_header\My_terminal.h: 124: if (!my_strcmp(op1, "m") || !my_strcmp(op1, "minute")) {
  3833  010E0A  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3834  010E0E  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3835  010E12  0EDC               	movlw	low (STR_30+2)
  3836  010E14  6E21               	movwf	my_strcmp@str2,c
  3837  010E16  0EFF               	movlw	high (STR_30+2)
  3838  010E18  6E22               	movwf	my_strcmp@str2+1,c
  3839  010E1A  ECFF  F091         	call	_my_strcmp	;wreg free
  3840  010E1E  0900               	iorlw	0
  3841  010E20  B4D8               	btfsc	status,2,c
  3842  010E22  D00D               	goto	l5103
  3843  010E24  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3844  010E28  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3845  010E2C  0EA3               	movlw	low STR_19
  3846  010E2E  6E21               	movwf	my_strcmp@str2,c
  3847  010E30  0EFF               	movlw	high STR_19
  3848  010E32  6E22               	movwf	my_strcmp@str2+1,c
  3849  010E34  ECFF  F091         	call	_my_strcmp	;wreg free
  3850  010E38  0900               	iorlw	0
  3851  010E3A  A4D8               	btfss	status,2,c
  3852  010E3C  D01C               	goto	l5105
  3853  010E3E                     l5103:
  3854                           
  3855                           ;My_header\My_terminal.h: 125: command_at_hand(tx, &caltime_now.mm, 0, 59, my_atoi(op2))
      +                          ;
  3856  010E3E  C100  F0B5         	movff	command_time@tx,command_at_hand@tx
  3857  010E42  C101  F0B6         	movff	command_time@tx+1,command_at_hand@tx+1
  3858  010E46  0EF3               	movlw	low (_caltime_now+1)
  3859  010E48  0100               	movlb	0	; () banked
  3860  010E4A  6FB7               	movwf	command_at_hand@hand& (0+255),b
  3861  010E4C  0E00               	movlw	high (_caltime_now+1)
  3862  010E4E  0100               	movlb	0	; () banked
  3863  010E50  6FB8               	movwf	(command_at_hand@hand+1)& (0+255),b
  3864  010E52  0E00               	movlw	0
  3865  010E54  0100               	movlb	0	; () banked
  3866  010E56  6FB9               	movwf	command_at_hand@min& (0+255),b
  3867  010E58  0E3B               	movlw	59
  3868  010E5A  0100               	movlb	0	; () banked
  3869  010E5C  6FBA               	movwf	command_at_hand@max& (0+255),b
  3870  010E5E  C106  F025         	movff	command_time@op2,my_atoi@str
  3871  010E62  C107  F026         	movff	command_time@op2+1,my_atoi@str+1
  3872  010E66  EC60  F091         	call	_my_atoi	;wreg free
  3873  010E6A  5025               	movf	?_my_atoi,w,c
  3874  010E6C  0100               	movlb	0	; () banked
  3875  010E6E  6FBB               	movwf	command_at_hand@value& (0+255),b
  3876  010E70  ECA8  F094         	call	_command_at_hand	;wreg free
  3877  010E74  D000               	goto	l5105
  3878  010E76                     l5105:
  3879                           
  3880                           ;My_header\My_terminal.h: 126: }
  3881                           ;My_header\My_terminal.h: 127: if (!my_strcmp(op1, "s") || !my_strcmp(op1, "second")) {
  3882  010E76  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3883  010E7A  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3884  010E7E  0EFA               	movlw	low STR_20
  3885  010E80  6E21               	movwf	my_strcmp@str2,c
  3886  010E82  0EFF               	movlw	high STR_20
  3887  010E84  6E22               	movwf	my_strcmp@str2+1,c
  3888  010E86  ECFF  F091         	call	_my_strcmp	;wreg free
  3889  010E8A  0900               	iorlw	0
  3890  010E8C  B4D8               	btfsc	status,2,c
  3891  010E8E  D00D               	goto	l5109
  3892  010E90  C104  F01F         	movff	command_time@op1,my_strcmp@str1
  3893  010E94  C105  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3894  010E98  0E9C               	movlw	low STR_21
  3895  010E9A  6E21               	movwf	my_strcmp@str2,c
  3896  010E9C  0EFF               	movlw	high STR_21
  3897  010E9E  6E22               	movwf	my_strcmp@str2+1,c
  3898  010EA0  ECFF  F091         	call	_my_strcmp	;wreg free
  3899  010EA4  0900               	iorlw	0
  3900  010EA6  A4D8               	btfss	status,2,c
  3901  010EA8  0012               	return	
  3902  010EAA                     l5109:
  3903                           
  3904                           ;My_header\My_terminal.h: 128: command_at_hand(tx, &caltime_now.ss, 0, 59, my_atoi(op2))
      +                          ;
  3905  010EAA  C100  F0B5         	movff	command_time@tx,command_at_hand@tx
  3906  010EAE  C101  F0B6         	movff	command_time@tx+1,command_at_hand@tx+1
  3907  010EB2  0EF2               	movlw	low _caltime_now
  3908  010EB4  0100               	movlb	0	; () banked
  3909  010EB6  6FB7               	movwf	command_at_hand@hand& (0+255),b
  3910  010EB8  0E00               	movlw	high _caltime_now
  3911  010EBA  0100               	movlb	0	; () banked
  3912  010EBC  6FB8               	movwf	(command_at_hand@hand+1)& (0+255),b
  3913  010EBE  0E00               	movlw	0
  3914  010EC0  0100               	movlb	0	; () banked
  3915  010EC2  6FB9               	movwf	command_at_hand@min& (0+255),b
  3916  010EC4  0E3B               	movlw	59
  3917  010EC6  0100               	movlb	0	; () banked
  3918  010EC8  6FBA               	movwf	command_at_hand@max& (0+255),b
  3919  010ECA  C106  F025         	movff	command_time@op2,my_atoi@str
  3920  010ECE  C107  F026         	movff	command_time@op2+1,my_atoi@str+1
  3921  010ED2  EC60  F091         	call	_my_atoi	;wreg free
  3922  010ED6  5025               	movf	?_my_atoi,w,c
  3923  010ED8  0100               	movlb	0	; () banked
  3924  010EDA  6FBB               	movwf	command_at_hand@value& (0+255),b
  3925  010EDC  ECA8  F094         	call	_command_at_hand	;wreg free
  3926  010EE0  0012               	return	
  3927  010EE2  0012               	return		;funcret
  3928  010EE4                     __end_of_command_time:
  3929                           	opt stack 0
  3930                           tblptru	equ	0xFF8
  3931                           tblptrh	equ	0xFF7
  3932                           tblptrl	equ	0xFF6
  3933                           tablat	equ	0xFF5
  3934                           prodh	equ	0xFF4
  3935                           prodl	equ	0xFF3
  3936                           intcon	equ	0xFF2
  3937                           postinc0	equ	0xFEE
  3938                           wreg	equ	0xFE8
  3939                           postinc1	equ	0xFE6
  3940                           postdec1	equ	0xFE5
  3941                           fsr1h	equ	0xFE2
  3942                           fsr1l	equ	0xFE1
  3943                           indf2	equ	0xFDF
  3944                           postinc2	equ	0xFDE
  3945                           postdec2	equ	0xFDD
  3946                           fsr2h	equ	0xFDA
  3947                           fsr2l	equ	0xFD9
  3948                           status	equ	0xFD8
  3949                           
  3950 ;; *************** function _my_strcmp *****************
  3951 ;; Defined at:
  3952 ;;		line 53 in file "../My_header\My_stdlib.h"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;  str1            2   30[COMRAM] PTR const unsigned char 
  3955 ;;		 -> my_terminal_loop@op1(20), my_terminal_loop@op0(20), 
  3956 ;;  str2            2   32[COMRAM] PTR const unsigned char 
  3957 ;;		 -> STR_40(6), STR_39(2), STR_38(2), STR_37(2), 
  3958 ;;		 -> STR_36(2), STR_35(2), STR_34(2), STR_33(2), 
  3959 ;;		 -> STR_32(2), STR_31(4), STR_30(4), STR_29(4), 
  3960 ;;		 -> STR_28(4), STR_27(5), STR_26(4), STR_25(9), 
  3961 ;;		 -> STR_23(2), STR_22(5), STR_21(7), STR_20(2), 
  3962 ;;		 -> STR_19(7), STR_18(2), STR_17(5), STR_16(2), 
  3963 ;;		 -> STR_15(4), STR_14(2), STR_13(6), STR_12(2), 
  3964 ;;		 -> STR_11(5), STR_10(2), STR_9(12), STR_8(3), 
  3965 ;;		 -> STR_7(2), STR_6(11), 
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;		None
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  1    wreg      char 
  3970 ;; Registers used:
  3971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3977 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3979 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3980 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3981 ;;Total ram usage:        5 bytes
  3982 ;; Hardware stack levels used:    1
  3983 ;; Hardware stack levels required when called:    4
  3984 ;; This function calls:
  3985 ;;		Nothing
  3986 ;; This function is called by:
  3987 ;;		_command_time
  3988 ;;		_command_operation
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991                           
  3992                           	psect	text9
  3993  0123FE                     __ptext9:
  3994                           	opt stack 0
  3995  0123FE                     _my_strcmp:
  3996                           	opt stack 24
  3997                           
  3998                           ;My_header\My_stdlib.h: 54: while (*str1 && *str2) {
  3999                           
  4000                           ;incstack = 0
  4001  0123FE  D027               	goto	l5033
  4002  012400                     l5025:
  4003                           
  4004                           ;My_header\My_stdlib.h: 55: if (*str1 != *str2)return (*str1 - *str2);
  4005  012400  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  4006  012404  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  4007  012408  50DF               	movf	indf2,w,c
  4008  01240A  6E23               	movwf	??_my_strcmp& (0+255),c
  4009  01240C  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  4010  012410  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  4011  012414                     	if	0	;tblptru may be non-zero
  4012  012414                     	endif
  4013  012414                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4014  012414  0E00               	movlw	low (__mediumconst shr (0+16))
  4015  012416  6EF8               	movwf	tblptru,c
  4016  012418                     	endif
  4017  012418  0008               	tblrd		*
  4018  01241A  50F5               	movf	tablat,w,c
  4019  01241C  1823               	xorwf	??_my_strcmp,w,c
  4020  01241E  B4D8               	btfsc	status,2,c
  4021  012420  D011               	goto	l5031
  4022  012422  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  4023  012426  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  4024  01242A  50DF               	movf	indf2,w,c
  4025  01242C  6E23               	movwf	??_my_strcmp& (0+255),c
  4026  01242E  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  4027  012432  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  4028  012436                     	if	0	;tblptru may be non-zero
  4029  012436                     	endif
  4030  012436                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4031  012436  0E00               	movlw	low (__mediumconst shr (0+16))
  4032  012438  6EF8               	movwf	tblptru,c
  4033  01243A                     	endif
  4034  01243A  0008               	tblrd		*
  4035  01243C  50F5               	movf	tablat,w,c
  4036  01243E  0800               	sublw	0
  4037  012440  2423               	addwf	??_my_strcmp,w,c
  4038  012442  0012               	return	
  4039  012444                     l5031:
  4040                           
  4041                           ;My_header\My_stdlib.h: 56: str1++;
  4042  012444  4A1F               	infsnz	my_strcmp@str1,f,c
  4043  012446  2A20               	incf	my_strcmp@str1+1,f,c
  4044                           
  4045                           ;My_header\My_stdlib.h: 57: str2++;
  4046  012448  4A21               	infsnz	my_strcmp@str2,f,c
  4047  01244A  2A22               	incf	my_strcmp@str2+1,f,c
  4048  01244C  D000               	goto	l5033
  4049  01244E                     l5033:
  4050  01244E  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  4051  012452  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  4052  012456  50DF               	movf	indf2,w,c
  4053  012458  B4D8               	btfsc	status,2,c
  4054  01245A  D00D               	goto	l5037
  4055  01245C  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  4056  012460  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  4057  012464                     	if	0	;tblptru may be non-zero
  4058  012464                     	endif
  4059  012464                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4060  012464  0E00               	movlw	low (__mediumconst shr (0+16))
  4061  012466  6EF8               	movwf	tblptru,c
  4062  012468                     	endif
  4063  012468  0008               	tblrd		*
  4064  01246A  50F5               	movf	tablat,w,c
  4065  01246C  0900               	iorlw	0
  4066  01246E  B4D8               	btfsc	status,2,c
  4067  012470  D002               	goto	l5037
  4068  012472  D7C6               	goto	l5025
  4069  012474  D000               	goto	l5037
  4070  012476                     l5037:
  4071                           
  4072                           ;My_header\My_stdlib.h: 58: }
  4073                           ;My_header\My_stdlib.h: 59: return (*str1 - *str2);
  4074  012476  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  4075  01247A  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  4076  01247E  50DF               	movf	indf2,w,c
  4077  012480  6E23               	movwf	??_my_strcmp& (0+255),c
  4078  012482  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  4079  012486  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  4080  01248A                     	if	0	;tblptru may be non-zero
  4081  01248A                     	endif
  4082  01248A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4083  01248A  0E00               	movlw	low (__mediumconst shr (0+16))
  4084  01248C  6EF8               	movwf	tblptru,c
  4085  01248E                     	endif
  4086  01248E  0008               	tblrd		*
  4087  012490  50F5               	movf	tablat,w,c
  4088  012492  0800               	sublw	0
  4089  012494  2423               	addwf	??_my_strcmp,w,c
  4090  012496  0012               	return	
  4091  012498  0012               	return		;funcret
  4092  01249A                     __end_of_my_strcmp:
  4093                           	opt stack 0
  4094                           tblptru	equ	0xFF8
  4095                           tblptrh	equ	0xFF7
  4096                           tblptrl	equ	0xFF6
  4097                           tablat	equ	0xFF5
  4098                           prodh	equ	0xFF4
  4099                           prodl	equ	0xFF3
  4100                           intcon	equ	0xFF2
  4101                           postinc0	equ	0xFEE
  4102                           wreg	equ	0xFE8
  4103                           postinc1	equ	0xFE6
  4104                           postdec1	equ	0xFE5
  4105                           fsr1h	equ	0xFE2
  4106                           fsr1l	equ	0xFE1
  4107                           indf2	equ	0xFDF
  4108                           postinc2	equ	0xFDE
  4109                           postdec2	equ	0xFDD
  4110                           fsr2h	equ	0xFDA
  4111                           fsr2l	equ	0xFD9
  4112                           status	equ	0xFD8
  4113                           
  4114 ;; *************** function _my_atoi *****************
  4115 ;; Defined at:
  4116 ;;		line 41 in file "../My_header\My_stdlib.h"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;  str             2   36[COMRAM] PTR const unsigned char 
  4119 ;;		 -> my_terminal_loop@op2(20), 
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;  ret             2    4[BANK0 ] unsigned int 
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  2   36[COMRAM] unsigned int 
  4124 ;; Registers used:
  4125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4131 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4132 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4133 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4134 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4135 ;;Total ram usage:        8 bytes
  4136 ;; Hardware stack levels used:    1
  4137 ;; Hardware stack levels required when called:    5
  4138 ;; This function calls:
  4139 ;;		___wmul
  4140 ;; This function is called by:
  4141 ;;		_command_time
  4142 ;;		_command_operation
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           	psect	text10
  4147  0122C0                     __ptext10:
  4148                           	opt stack 0
  4149  0122C0                     _my_atoi:
  4150                           	opt stack 23
  4151                           
  4152                           ;My_header\My_stdlib.h: 42: uint16_t ret = 0;
  4153                           
  4154                           ;incstack = 0
  4155  0122C0  0E00               	movlw	0
  4156  0122C2  0100               	movlb	0	; () banked
  4157  0122C4  6F65               	movwf	(my_atoi@ret+1)& (0+255),b
  4158  0122C6  0E00               	movlw	0
  4159  0122C8  6F64               	movwf	my_atoi@ret& (0+255),b
  4160                           
  4161                           ;My_header\My_stdlib.h: 43: while (*str) {
  4162  0122CA  D03E               	goto	l5021
  4163  0122CC                     l5011:
  4164                           
  4165                           ;My_header\My_stdlib.h: 44: if (*str >= '0' && *str <= '9') {
  4166  0122CC  C025  FFD9         	movff	my_atoi@str,fsr2l
  4167  0122D0  C026  FFDA         	movff	my_atoi@str+1,fsr2h
  4168  0122D4  0E2F               	movlw	47
  4169  0122D6  64DF               	cpfsgt	indf2,c
  4170  0122D8  D034               	goto	l5019
  4171  0122DA  C025  FFD9         	movff	my_atoi@str,fsr2l
  4172  0122DE  C026  FFDA         	movff	my_atoi@str+1,fsr2h
  4173  0122E2  0E3A               	movlw	58
  4174  0122E4  60DF               	cpfslt	indf2,c
  4175  0122E6  D02D               	goto	l5019
  4176                           
  4177                           ;My_header\My_stdlib.h: 45: ret *= 10;
  4178  0122E8  C064  F01F         	movff	my_atoi@ret,___wmul@multiplier
  4179  0122EC  C065  F020         	movff	my_atoi@ret+1,___wmul@multiplier+1
  4180  0122F0  0E00               	movlw	0
  4181  0122F2  6E22               	movwf	___wmul@multiplicand+1,c
  4182  0122F4  0E0A               	movlw	10
  4183  0122F6  6E21               	movwf	___wmul@multiplicand,c
  4184  0122F8  EC7D  F096         	call	___wmul	;wreg free
  4185  0122FC  C01F  F064         	movff	?___wmul,my_atoi@ret
  4186  012300  C020  F065         	movff	?___wmul+1,my_atoi@ret+1
  4187                           
  4188                           ;My_header\My_stdlib.h: 46: ret += *str - '0';
  4189  012304  0ED0               	movlw	208
  4190  012306  0100               	movlb	0	; () banked
  4191  012308  6F60               	movwf	??_my_atoi& (0+255),b
  4192  01230A  0EFF               	movlw	255
  4193  01230C  0100               	movlb	0	; () banked
  4194  01230E  6F61               	movwf	(??_my_atoi+1)& (0+255),b
  4195  012310  C025  FFD9         	movff	my_atoi@str,fsr2l
  4196  012314  C026  FFDA         	movff	my_atoi@str+1,fsr2h
  4197  012318  50DF               	movf	indf2,w,c
  4198  01231A  0100               	movlb	0	; () banked
  4199  01231C  6F62               	movwf	(??_my_atoi+2)& (0+255),b
  4200  01231E  6B63               	clrf	(??_my_atoi+3)& (0+255),b
  4201  012320  0100               	movlb	0	; () banked
  4202  012322  5160               	movf	??_my_atoi& (0+255),w,b
  4203  012324  0100               	movlb	0	; () banked
  4204  012326  2762               	addwf	(??_my_atoi+2)& (0+255),f,b
  4205  012328  0100               	movlb	0	; () banked
  4206  01232A  5161               	movf	(??_my_atoi+1)& (0+255),w,b
  4207  01232C  0100               	movlb	0	; () banked
  4208  01232E  2363               	addwfc	(??_my_atoi+3)& (0+255),f,b
  4209  012330  0100               	movlb	0	; () banked
  4210  012332  5162               	movf	(??_my_atoi+2)& (0+255),w,b
  4211  012334  0100               	movlb	0	; () banked
  4212  012336  2764               	addwf	my_atoi@ret& (0+255),f,b
  4213  012338  0100               	movlb	0	; () banked
  4214  01233A  5163               	movf	(??_my_atoi+3)& (0+255),w,b
  4215  01233C  0100               	movlb	0	; () banked
  4216  01233E  2365               	addwfc	(my_atoi@ret+1)& (0+255),f,b
  4217  012340  D000               	goto	l5019
  4218  012342                     l5019:
  4219                           
  4220                           ;My_header\My_stdlib.h: 47: }
  4221                           ;My_header\My_stdlib.h: 48: str++;
  4222  012342  4A25               	infsnz	my_atoi@str,f,c
  4223  012344  2A26               	incf	my_atoi@str+1,f,c
  4224  012346  D000               	goto	l5021
  4225  012348                     l5021:
  4226  012348  C025  FFD9         	movff	my_atoi@str,fsr2l
  4227  01234C  C026  FFDA         	movff	my_atoi@str+1,fsr2h
  4228  012350  50DF               	movf	indf2,w,c
  4229  012352  A4D8               	btfss	status,2,c
  4230  012354  D7BB               	goto	l5011
  4231                           
  4232                           ;My_header\My_stdlib.h: 49: }
  4233                           ;My_header\My_stdlib.h: 50: return ret;
  4234  012356  C064  F025         	movff	my_atoi@ret,?_my_atoi
  4235  01235A  C065  F026         	movff	my_atoi@ret+1,?_my_atoi+1
  4236  01235E  0012               	return		;funcret
  4237  012360                     __end_of_my_atoi:
  4238                           	opt stack 0
  4239                           tblptru	equ	0xFF8
  4240                           tblptrh	equ	0xFF7
  4241                           tblptrl	equ	0xFF6
  4242                           tablat	equ	0xFF5
  4243                           prodh	equ	0xFF4
  4244                           prodl	equ	0xFF3
  4245                           intcon	equ	0xFF2
  4246                           postinc0	equ	0xFEE
  4247                           wreg	equ	0xFE8
  4248                           postinc1	equ	0xFE6
  4249                           postdec1	equ	0xFE5
  4250                           fsr1h	equ	0xFE2
  4251                           fsr1l	equ	0xFE1
  4252                           indf2	equ	0xFDF
  4253                           postinc2	equ	0xFDE
  4254                           postdec2	equ	0xFDD
  4255                           fsr2h	equ	0xFDA
  4256                           fsr2l	equ	0xFD9
  4257                           status	equ	0xFD8
  4258                           
  4259 ;; *************** function _command_at_hand *****************
  4260 ;; Defined at:
  4261 ;;		line 96 in file "../My_header\My_terminal.h"
  4262 ;; Parameters:    Size  Location     Type
  4263 ;;  tx              2   85[BANK0 ] PTR struct ringbuf
  4264 ;;		 -> tx_buf(8), 
  4265 ;;  hand            2   87[BANK0 ] PTR unsigned char 
  4266 ;;		 -> caltime_now(7), 
  4267 ;;  min             1   89[BANK0 ] unsigned char 
  4268 ;;  max             1   90[BANK0 ] unsigned char 
  4269 ;;  value           1   91[BANK0 ] unsigned char 
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;		None
  4272 ;; Return value:  Size  Location     Type
  4273 ;;		None               void
  4274 ;; Registers used:
  4275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4281 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4284 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4285 ;;Total ram usage:        7 bytes
  4286 ;; Hardware stack levels used:    1
  4287 ;; Hardware stack levels required when called:    9
  4288 ;; This function calls:
  4289 ;;		_RTCC_from_caltime
  4290 ;;		_print_time
  4291 ;;		_ringbuf_put_str
  4292 ;; This function is called by:
  4293 ;;		_command_time
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text11
  4298  012950                     __ptext11:
  4299                           	opt stack 0
  4300  012950                     _command_at_hand:
  4301                           	opt stack 18
  4302                           
  4303                           ;My_header\My_terminal.h: 97: if (value >= min && value <= max) {
  4304                           
  4305                           ;incstack = 0
  4306  012950  0100               	movlb	0	; () banked
  4307  012952  51B9               	movf	command_at_hand@min& (0+255),w,b
  4308  012954  0100               	movlb	0	; () banked
  4309  012956  5DBB               	subwf	command_at_hand@value& (0+255),w,b
  4310  012958  A0D8               	btfss	status,0,c
  4311  01295A  D024               	goto	l5053
  4312                           
  4313                           ; BSR set to: 0
  4314  01295C  0100               	movlb	0	; () banked
  4315  01295E  51BB               	movf	command_at_hand@value& (0+255),w,b
  4316  012960  0100               	movlb	0	; () banked
  4317  012962  5DBA               	subwf	command_at_hand@max& (0+255),w,b
  4318  012964  A0D8               	btfss	status,0,c
  4319  012966  D01E               	goto	l5053
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;My_header\My_terminal.h: 98: *hand = value;
  4323  012968  C0B7  FFD9         	movff	command_at_hand@hand,fsr2l
  4324  01296C  C0B8  FFDA         	movff	command_at_hand@hand+1,fsr2h
  4325  012970  C0BB  FFDF         	movff	command_at_hand@value,indf2
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;My_header\My_terminal.h: 99: RTCC_from_caltime(&caltime_now, &epoch_now);
  4329  012974  0EF2               	movlw	low _caltime_now
  4330  012976  0100               	movlb	0	; () banked
  4331  012978  6F95               	movwf	RTCC_from_caltime@ct& (0+255),b
  4332  01297A  0E00               	movlw	high _caltime_now
  4333  01297C  0100               	movlb	0	; () banked
  4334  01297E  6F96               	movwf	(RTCC_from_caltime@ct+1)& (0+255),b
  4335  012980  0EF9               	movlw	low _epoch_now
  4336  012982  0100               	movlb	0	; () banked
  4337  012984  6F97               	movwf	RTCC_from_caltime@ep& (0+255),b
  4338  012986  0E00               	movlw	high _epoch_now
  4339  012988  0100               	movlb	0	; () banked
  4340  01298A  6F98               	movwf	(RTCC_from_caltime@ep+1)& (0+255),b
  4341  01298C  EC31  F096         	call	_RTCC_from_caltime	;wreg free
  4342                           
  4343                           ;My_header\My_terminal.h: 100: time_change_flag = 1;
  4344  012990  0E01               	movlw	1
  4345  012992  0100               	movlb	0	; () banked
  4346  012994  6FCB               	movwf	_time_change_flag& (0+255),b
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;My_header\My_terminal.h: 101: print_time(tx);
  4350  012996  C0B5  F095         	movff	command_at_hand@tx,print_time@tx
  4351  01299A  C0B6  F096         	movff	command_at_hand@tx+1,print_time@tx+1
  4352  01299E  EC4D  F092         	call	_print_time	;wreg free
  4353                           
  4354                           ;My_header\My_terminal.h: 102: } else {
  4355  0129A2  0012               	return	
  4356  0129A4                     l5053:
  4357                           
  4358                           ;My_header\My_terminal.h: 103: ringbuf_put_str(tx, "\terror\n");
  4359  0129A4  C0B5  F067         	movff	command_at_hand@tx,ringbuf_put_str@rb
  4360  0129A8  C0B6  F068         	movff	command_at_hand@tx+1,ringbuf_put_str@rb+1
  4361  0129AC  0E8D               	movlw	low STR_5
  4362  0129AE  0100               	movlb	0	; () banked
  4363  0129B0  6F69               	movwf	ringbuf_put_str@str& (0+255),b
  4364  0129B2  0EFF               	movlw	high STR_5
  4365  0129B4  0100               	movlb	0	; () banked
  4366  0129B6  6F6A               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4367  0129B8  EC16  F095         	call	_ringbuf_put_str	;wreg free
  4368  0129BC  0012               	return	
  4369  0129BE  0012               	return		;funcret
  4370  0129C0                     __end_of_command_at_hand:
  4371                           	opt stack 0
  4372                           tblptru	equ	0xFF8
  4373                           tblptrh	equ	0xFF7
  4374                           tblptrl	equ	0xFF6
  4375                           tablat	equ	0xFF5
  4376                           prodh	equ	0xFF4
  4377                           prodl	equ	0xFF3
  4378                           intcon	equ	0xFF2
  4379                           postinc0	equ	0xFEE
  4380                           wreg	equ	0xFE8
  4381                           postinc1	equ	0xFE6
  4382                           postdec1	equ	0xFE5
  4383                           fsr1h	equ	0xFE2
  4384                           fsr1l	equ	0xFE1
  4385                           indf2	equ	0xFDF
  4386                           postinc2	equ	0xFDE
  4387                           postdec2	equ	0xFDD
  4388                           fsr2h	equ	0xFDA
  4389                           fsr2l	equ	0xFD9
  4390                           status	equ	0xFD8
  4391                           
  4392 ;; *************** function _print_time *****************
  4393 ;; Defined at:
  4394 ;;		line 82 in file "../My_header\My_terminal.h"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;  tx              2   53[BANK0 ] PTR struct ringbuf
  4397 ;;		 -> tx_buf(8), 
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;  str            30   55[BANK0 ] unsigned char [30]
  4400 ;; Return value:  Size  Location     Type
  4401 ;;		None               void
  4402 ;; Registers used:
  4403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4409 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4410 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4412 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4413 ;;Total ram usage:       32 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; Hardware stack levels required when called:    8
  4416 ;; This function calls:
  4417 ;;		_RTCC_from_RTCC
  4418 ;;		_ringbuf_put_str
  4419 ;;		_sprintf
  4420 ;; This function is called by:
  4421 ;;		_command_at_hand
  4422 ;;		_command_time
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           	psect	text12
  4427  01249A                     __ptext12:
  4428                           	opt stack 0
  4429  01249A                     _print_time:
  4430                           	opt stack 19
  4431                           
  4432                           ;My_header\My_terminal.h: 83: RTCC_from_RTCC(&caltime_now, &epoch_now);
  4433                           
  4434                           ;incstack = 0
  4435  01249A  0EF2               	movlw	low _caltime_now
  4436  01249C  0100               	movlb	0	; () banked
  4437  01249E  6F7F               	movwf	RTCC_from_RTCC@ct& (0+255),b
  4438  0124A0  0E00               	movlw	high _caltime_now
  4439  0124A2  0100               	movlb	0	; () banked
  4440  0124A4  6F80               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  4441  0124A6  0EF9               	movlw	low _epoch_now
  4442  0124A8  0100               	movlb	0	; () banked
  4443  0124AA  6F81               	movwf	RTCC_from_RTCC@ep& (0+255),b
  4444  0124AC  0E00               	movlw	high _epoch_now
  4445  0124AE  0100               	movlb	0	; () banked
  4446  0124B0  6F82               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  4447  0124B2  ECD8  F096         	call	_RTCC_from_RTCC	;wreg free
  4448                           
  4449                           ;My_header\My_terminal.h: 84: char str[30];
  4450                           ;My_header\My_terminal.h: 85: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  4451                           ;My_header\My_terminal.h: 86: caltime_now.YY,
  4452                           ;My_header\My_terminal.h: 87: caltime_now.MM,
  4453                           ;My_header\My_terminal.h: 88: caltime_now.DD,
  4454                           ;My_header\My_terminal.h: 89: weekday_3char[caltime_now.EE],
  4455                           ;My_header\My_terminal.h: 90: caltime_now.hh,
  4456                           ;My_header\My_terminal.h: 91: caltime_now.mm,
  4457                           ;My_header\My_terminal.h: 92: caltime_now.ss);
  4458  0124B6  0E97               	movlw	low print_time@str
  4459  0124B8  0100               	movlb	0	; () banked
  4460  0124BA  6F72               	movwf	sprintf@sp& (0+255),b
  4461  0124BC  0E00               	movlw	high print_time@str
  4462  0124BE  0100               	movlb	0	; () banked
  4463  0124C0  6F73               	movwf	(sprintf@sp+1)& (0+255),b
  4464  0124C2  0E48               	movlw	low STR_4
  4465  0124C4  0100               	movlb	0	; () banked
  4466  0124C6  6F74               	movwf	sprintf@f& (0+255),b
  4467  0124C8  0EFF               	movlw	high STR_4
  4468  0124CA  0100               	movlb	0	; () banked
  4469  0124CC  6F75               	movwf	(sprintf@f+1)& (0+255),b
  4470  0124CE  C0F8  F076         	movff	_caltime_now+6,?_sprintf+4
  4471  0124D2  0100               	movlb	0	; () banked
  4472  0124D4  6B77               	clrf	(?_sprintf+5)& (0+255),b
  4473  0124D6  C0F7  F078         	movff	_caltime_now+5,?_sprintf+6
  4474  0124DA  0100               	movlb	0	; () banked
  4475  0124DC  6B79               	clrf	(?_sprintf+7)& (0+255),b
  4476  0124DE  C0F6  F07A         	movff	_caltime_now+4,?_sprintf+8
  4477  0124E2  0100               	movlb	0	; () banked
  4478  0124E4  6B7B               	clrf	(?_sprintf+9)& (0+255),b
  4479  0124E6  0100               	movlb	0	; () banked
  4480  0124E8  51F5               	movf	(_caltime_now+3)& (0+255),w,b
  4481  0124EA  0D04               	mullw	4
  4482  0124EC  0EF1               	movlw	low _weekday_3char
  4483  0124EE  24F3               	addwf	prodl,w,c
  4484  0124F0  0100               	movlb	0	; () banked
  4485  0124F2  6F7C               	movwf	(?_sprintf+10)& (0+255),b
  4486  0124F4  0EFD               	movlw	high _weekday_3char
  4487  0124F6  20F4               	addwfc	prodh,w,c
  4488  0124F8  0100               	movlb	0	; () banked
  4489  0124FA  6F7D               	movwf	(?_sprintf+11)& (0+255),b
  4490  0124FC  C0F4  F07E         	movff	_caltime_now+2,?_sprintf+12
  4491  012500  0100               	movlb	0	; () banked
  4492  012502  6B7F               	clrf	(?_sprintf+13)& (0+255),b
  4493  012504  C0F3  F080         	movff	_caltime_now+1,?_sprintf+14
  4494  012508  0100               	movlb	0	; () banked
  4495  01250A  6B81               	clrf	(?_sprintf+15)& (0+255),b
  4496  01250C  C0F2  F082         	movff	_caltime_now,?_sprintf+16
  4497  012510  0100               	movlb	0	; () banked
  4498  012512  6B83               	clrf	(?_sprintf+17)& (0+255),b
  4499  012514  EC00  F080         	call	_sprintf	;wreg free
  4500                           
  4501                           ;My_header\My_terminal.h: 93: ringbuf_put_str(tx, str);
  4502  012518  C095  F067         	movff	print_time@tx,ringbuf_put_str@rb
  4503  01251C  C096  F068         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  4504  012520  0E97               	movlw	low print_time@str
  4505  012522  0100               	movlb	0	; () banked
  4506  012524  6F69               	movwf	ringbuf_put_str@str& (0+255),b
  4507  012526  0E00               	movlw	high print_time@str
  4508  012528  0100               	movlb	0	; () banked
  4509  01252A  6F6A               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4510  01252C  EC16  F095         	call	_ringbuf_put_str	;wreg free
  4511  012530  0012               	return		;funcret
  4512  012532                     __end_of_print_time:
  4513                           	opt stack 0
  4514                           tblptru	equ	0xFF8
  4515                           tblptrh	equ	0xFF7
  4516                           tblptrl	equ	0xFF6
  4517                           tablat	equ	0xFF5
  4518                           prodh	equ	0xFF4
  4519                           prodl	equ	0xFF3
  4520                           intcon	equ	0xFF2
  4521                           postinc0	equ	0xFEE
  4522                           wreg	equ	0xFE8
  4523                           postinc1	equ	0xFE6
  4524                           postdec1	equ	0xFE5
  4525                           fsr1h	equ	0xFE2
  4526                           fsr1l	equ	0xFE1
  4527                           indf2	equ	0xFDF
  4528                           postinc2	equ	0xFDE
  4529                           postdec2	equ	0xFDD
  4530                           fsr2h	equ	0xFDA
  4531                           fsr2l	equ	0xFD9
  4532                           status	equ	0xFD8
  4533                           
  4534 ;; *************** function _sprintf *****************
  4535 ;; Defined at:
  4536 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;  sp              2   18[BANK0 ] PTR unsigned char 
  4539 ;;		 -> print_time@str(30), 
  4540 ;;  f               2   20[BANK0 ] PTR const unsigned char 
  4541 ;;		 -> STR_4(37), 
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;  tmpval          4    0        struct .
  4544 ;;  width           2   51[BANK0 ] int 
  4545 ;;  len             2   47[BANK0 ] unsigned int 
  4546 ;;  val             2   45[BANK0 ] unsigned int 
  4547 ;;  cp              2   43[BANK0 ] PTR const unsigned char 
  4548 ;;		 -> STR_41(7), weekday_3char(28), 
  4549 ;;  ap              2   41[BANK0 ] PTR void [1]
  4550 ;;		 -> ?_sprintf(2), 
  4551 ;;  c               1   50[BANK0 ] char 
  4552 ;;  flag            1   49[BANK0 ] unsigned char 
  4553 ;;  prec            1   40[BANK0 ] char 
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  2   18[BANK0 ] int 
  4556 ;; Registers used:
  4557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4563 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4564 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4565 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4566 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4567 ;;Total ram usage:       35 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; Hardware stack levels required when called:    5
  4570 ;; This function calls:
  4571 ;;		___lwdiv
  4572 ;;		___lwmod
  4573 ;;		___wmul
  4574 ;;		_isdigit
  4575 ;; This function is called by:
  4576 ;;		_print_time
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           	psect	text13
  4581  010000                     __ptext13:
  4582                           	opt stack 0
  4583  010000                     _sprintf:
  4584                           	opt stack 21
  4585                           
  4586                           ;doprnt.c: 494: va_list ap;
  4587                           ;doprnt.c: 499: signed char c;
  4588                           ;doprnt.c: 501: int width;
  4589                           ;doprnt.c: 506: signed char prec;
  4590                           ;doprnt.c: 508: unsigned char flag;
  4591                           ;doprnt.c: 523: union {
  4592                           ;doprnt.c: 524: unsigned long vd;
  4593                           ;doprnt.c: 525: double integ;
  4594                           ;doprnt.c: 526: } tmpval;
  4595                           ;doprnt.c: 528: unsigned int val;
  4596                           ;doprnt.c: 529: unsigned len;
  4597                           ;doprnt.c: 530: const char * cp;
  4598                           ;doprnt.c: 533: *ap = __va_start();
  4599                           
  4600                           ;incstack = 0
  4601  010000  0E76               	movlw	low (?_sprintf+4)
  4602  010002  0100               	movlb	0	; () banked
  4603  010004  6F89               	movwf	sprintf@ap& (0+255),b
  4604  010006  0E00               	movlw	high (?_sprintf+4)
  4605  010008  0100               	movlb	0	; () banked
  4606  01000A  6F8A               	movwf	(sprintf@ap+1)& (0+255),b
  4607                           
  4608                           ;doprnt.c: 536: while(c = *f++) {
  4609  01000C  D232               	goto	l4993
  4610  01000E                     l4853:
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;doprnt.c: 538: if(c != '%')
  4614  01000E  0E25               	movlw	37
  4615  010010  0100               	movlb	0	; () banked
  4616  010012  1992               	xorwf	sprintf@c& (0+255),w,b
  4617  010014  B4D8               	btfsc	status,2,c
  4618  010016  D00A               	goto	l4859
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;doprnt.c: 540: {
  4622                           ;doprnt.c: 541: ((*sp++ = (c)));
  4623  010018  C072  FFD9         	movff	sprintf@sp,fsr2l
  4624  01001C  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  4625  010020  C092  FFDF         	movff	sprintf@c,indf2
  4626                           
  4627                           ; BSR set to: 0
  4628  010024  0100               	movlb	0	; () banked
  4629  010026  4B72               	infsnz	sprintf@sp& (0+255),f,b
  4630  010028  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  4631                           
  4632                           ;doprnt.c: 542: continue;
  4633  01002A  D223               	goto	l4993
  4634  01002C                     l4859:
  4635                           
  4636                           ; BSR set to: 0
  4637                           ;doprnt.c: 543: }
  4638                           ;doprnt.c: 546: width = 0;
  4639  01002C  0E00               	movlw	0
  4640  01002E  0100               	movlb	0	; () banked
  4641  010030  6F94               	movwf	(sprintf@width+1)& (0+255),b
  4642  010032  0E00               	movlw	0
  4643  010034  6F93               	movwf	sprintf@width& (0+255),b
  4644                           
  4645                           ;doprnt.c: 548: flag = 0;
  4646  010036  0E00               	movlw	0
  4647  010038  0100               	movlb	0	; () banked
  4648  01003A  6F91               	movwf	sprintf@flag& (0+255),b
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;doprnt.c: 551: switch(*f) {
  4652                           
  4653                           ;doprnt.c: 550: for(;;) {
  4654  01003C  D007               	goto	l4865
  4655  01003E                     l4861:
  4656                           
  4657                           ;doprnt.c: 580: flag |= 0x04;
  4658  01003E  0100               	movlb	0	; () banked
  4659  010040  8591               	bsf	sprintf@flag& (0+255),2,b
  4660                           
  4661                           ;doprnt.c: 581: f++;
  4662  010042  0100               	movlb	0	; () banked
  4663  010044  4B74               	infsnz	sprintf@f& (0+255),f,b
  4664  010046  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  4665                           
  4666                           ;doprnt.c: 582: continue;
  4667  010048  D001               	goto	l4865
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;doprnt.c: 584: }
  4671  01004A  D00D               	goto	l4867
  4672  01004C                     l4865:
  4673  01004C  C074  FFF6         	movff	sprintf@f,tblptrl
  4674  010050  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4675  010054                     	if	0	;tblptru may be non-zero
  4676  010054                     	endif
  4677  010054                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4678  010054  0E00               	movlw	low (__mediumconst shr (0+16))
  4679  010056  6EF8               	movwf	tblptru,c
  4680  010058                     	endif
  4681  010058  0008               	tblrd		*
  4682  01005A  50F5               	movf	tablat,w,c
  4683                           
  4684                           ; Switch size 1, requested type "space"
  4685                           ; Number of cases is 1, Range of values is 48 to 48
  4686                           ; switch strategies available:
  4687                           ; Name         Instructions Cycles
  4688                           ; simple_byte            4     3 (average)
  4689                           ;	Chosen strategy is simple_byte
  4690  01005C  0A30               	xorlw	48	; case 48
  4691  01005E  B4D8               	btfsc	status,2,c
  4692  010060  D7EE               	goto	l4861
  4693                           
  4694                           ;doprnt.c: 585: break;
  4695  010062  D001               	goto	l4867
  4696                           
  4697                           ;doprnt.c: 586: }
  4698  010064  D7F3               	goto	l4865
  4699  010066                     l4867:
  4700                           
  4701                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4702  010066  C074  FFF6         	movff	sprintf@f,tblptrl
  4703  01006A  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4704  01006E                     	if	0	;tblptru may be non-zero
  4705  01006E                     	endif
  4706  01006E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4707  01006E  0E00               	movlw	low (__mediumconst shr (0+16))
  4708  010070  6EF8               	movwf	tblptru,c
  4709  010072                     	endif
  4710  010072  0008               	tblrd		*
  4711  010074  50F5               	movf	tablat,w,c
  4712  010076  ECC7  F096         	call	_isdigit
  4713  01007A  A0D8               	btfss	status,0,c
  4714  01007C  D0D5               	goto	l4915
  4715                           
  4716                           ;doprnt.c: 598: width = 0;
  4717  01007E  0E00               	movlw	0
  4718  010080  0100               	movlb	0	; () banked
  4719  010082  6F94               	movwf	(sprintf@width+1)& (0+255),b
  4720  010084  0E00               	movlw	0
  4721  010086  6F93               	movwf	sprintf@width& (0+255),b
  4722  010088  D000               	goto	l4871
  4723  01008A                     l4871:
  4724                           
  4725                           ;doprnt.c: 600: width *= 10;
  4726  01008A  C093  F01F         	movff	sprintf@width,___wmul@multiplier
  4727  01008E  C094  F020         	movff	sprintf@width+1,___wmul@multiplier+1
  4728  010092  0E00               	movlw	0
  4729  010094  6E22               	movwf	___wmul@multiplicand+1,c
  4730  010096  0E0A               	movlw	10
  4731  010098  6E21               	movwf	___wmul@multiplicand,c
  4732  01009A  EC7D  F096         	call	___wmul	;wreg free
  4733  01009E  C01F  F093         	movff	?___wmul,sprintf@width
  4734  0100A2  C020  F094         	movff	?___wmul+1,sprintf@width+1
  4735                           
  4736                           ;doprnt.c: 601: width += *f++ - '0';
  4737  0100A6  0ED0               	movlw	208
  4738  0100A8  0100               	movlb	0	; () banked
  4739  0100AA  6F84               	movwf	??_sprintf& (0+255),b
  4740  0100AC  0EFF               	movlw	255
  4741  0100AE  0100               	movlb	0	; () banked
  4742  0100B0  6F85               	movwf	(??_sprintf+1)& (0+255),b
  4743  0100B2  C074  FFF6         	movff	sprintf@f,tblptrl
  4744  0100B6  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4745  0100BA                     	if	0	;tblptru may be non-zero
  4746  0100BA                     	endif
  4747  0100BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4748  0100BA  0E00               	movlw	low (__mediumconst shr (0+16))
  4749  0100BC  6EF8               	movwf	tblptru,c
  4750  0100BE                     	endif
  4751  0100BE  0008               	tblrd		*
  4752  0100C0  50F5               	movf	tablat,w,c
  4753  0100C2  0100               	movlb	0	; () banked
  4754  0100C4  6F86               	movwf	(??_sprintf+2)& (0+255),b
  4755  0100C6  6B87               	clrf	(??_sprintf+3)& (0+255),b
  4756  0100C8  0100               	movlb	0	; () banked
  4757  0100CA  5184               	movf	??_sprintf& (0+255),w,b
  4758  0100CC  0100               	movlb	0	; () banked
  4759  0100CE  2786               	addwf	(??_sprintf+2)& (0+255),f,b
  4760  0100D0  0100               	movlb	0	; () banked
  4761  0100D2  5185               	movf	(??_sprintf+1)& (0+255),w,b
  4762  0100D4  0100               	movlb	0	; () banked
  4763  0100D6  2387               	addwfc	(??_sprintf+3)& (0+255),f,b
  4764  0100D8  0100               	movlb	0	; () banked
  4765  0100DA  5186               	movf	(??_sprintf+2)& (0+255),w,b
  4766  0100DC  0100               	movlb	0	; () banked
  4767  0100DE  2793               	addwf	sprintf@width& (0+255),f,b
  4768  0100E0  0100               	movlb	0	; () banked
  4769  0100E2  5187               	movf	(??_sprintf+3)& (0+255),w,b
  4770  0100E4  0100               	movlb	0	; () banked
  4771  0100E6  2394               	addwfc	(sprintf@width+1)& (0+255),f,b
  4772                           
  4773                           ; BSR set to: 0
  4774  0100E8  0100               	movlb	0	; () banked
  4775  0100EA  4B74               	infsnz	sprintf@f& (0+255),f,b
  4776  0100EC  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  4777                           
  4778                           ; BSR set to: 0
  4779                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4780  0100EE  C074  FFF6         	movff	sprintf@f,tblptrl
  4781  0100F2  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4782  0100F6                     	if	0	;tblptru may be non-zero
  4783  0100F6                     	endif
  4784  0100F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4785  0100F6  0E00               	movlw	low (__mediumconst shr (0+16))
  4786  0100F8  6EF8               	movwf	tblptru,c
  4787  0100FA                     	endif
  4788  0100FA  0008               	tblrd		*
  4789  0100FC  50F5               	movf	tablat,w,c
  4790  0100FE  ECC7  F096         	call	_isdigit
  4791  010102  A0D8               	btfss	status,0,c
  4792  010104  D091               	goto	l4915
  4793  010106  D7C1               	goto	l4871
  4794                           
  4795                           ;doprnt.c: 608: }
  4796                           ;doprnt.c: 635: switch(c = *f++) {
  4797  010108  D08F               	goto	l4915
  4798                           
  4799                           ;doprnt.c: 638: goto alldone;
  4800                           
  4801                           ;doprnt.c: 637: case 0:
  4802  01010A  D1C5               	goto	l4995
  4803                           
  4804                           ;doprnt.c: 698: case 'i':
  4805                           ;doprnt.c: 699: break;
  4806                           
  4807                           ;doprnt.c: 697: case 'd':
  4808  01010C  D0A8               	goto	l4917
  4809  01010E                     l4879:
  4810                           
  4811                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4812  01010E  C089  FFD9         	movff	sprintf@ap,fsr2l
  4813  010112  C08A  FFDA         	movff	sprintf@ap+1,fsr2h
  4814  010116  CFDE F08B          	movff	postinc2,sprintf@cp
  4815  01011A  CFDD F08C          	movff	postdec2,sprintf@cp+1
  4816  01011E  0E02               	movlw	2
  4817  010120  0100               	movlb	0	; () banked
  4818  010122  2789               	addwf	sprintf@ap& (0+255),f,b
  4819  010124  0E00               	movlw	0
  4820  010126  238A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;doprnt.c: 740: if(!cp)
  4824  010128  0100               	movlb	0	; () banked
  4825  01012A  518B               	movf	sprintf@cp& (0+255),w,b
  4826  01012C  0100               	movlb	0	; () banked
  4827  01012E  118C               	iorwf	(sprintf@cp+1)& (0+255),w,b
  4828  010130  A4D8               	btfss	status,2,c
  4829  010132  D007               	goto	l4887
  4830                           
  4831                           ; BSR set to: 0
  4832                           ;doprnt.c: 741: cp = "(null)";
  4833  010134  0E95               	movlw	low STR_41
  4834  010136  0100               	movlb	0	; () banked
  4835  010138  6F8B               	movwf	sprintf@cp& (0+255),b
  4836  01013A  0EFF               	movlw	high STR_41
  4837  01013C  0100               	movlb	0	; () banked
  4838  01013E  6F8C               	movwf	(sprintf@cp+1)& (0+255),b
  4839  010140  D000               	goto	l4887
  4840  010142                     l4887:
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;doprnt.c: 745: len = 0;
  4844  010142  0E00               	movlw	0
  4845  010144  0100               	movlb	0	; () banked
  4846  010146  6F90               	movwf	(sprintf@len+1)& (0+255),b
  4847  010148  0E00               	movlw	0
  4848  01014A  6F8F               	movwf	sprintf@len& (0+255),b
  4849                           
  4850                           ;doprnt.c: 746: while(cp[len])
  4851  01014C  D004               	goto	l4891
  4852  01014E                     l4889:
  4853                           
  4854                           ; BSR set to: 0
  4855                           ;doprnt.c: 747: len++;
  4856  01014E  0100               	movlb	0	; () banked
  4857  010150  4B8F               	infsnz	sprintf@len& (0+255),f,b
  4858  010152  2B90               	incf	(sprintf@len+1)& (0+255),f,b
  4859  010154  D000               	goto	l4891
  4860  010156                     l4891:
  4861                           
  4862                           ; BSR set to: 0
  4863  010156  0100               	movlb	0	; () banked
  4864  010158  518F               	movf	sprintf@len& (0+255),w,b
  4865  01015A  0100               	movlb	0	; () banked
  4866  01015C  258B               	addwf	sprintf@cp& (0+255),w,b
  4867  01015E  0100               	movlb	0	; () banked
  4868  010160  6F84               	movwf	??_sprintf& (0+255),b
  4869  010162  0100               	movlb	0	; () banked
  4870  010164  5190               	movf	(sprintf@len+1)& (0+255),w,b
  4871  010166  0100               	movlb	0	; () banked
  4872  010168  218C               	addwfc	(sprintf@cp+1)& (0+255),w,b
  4873  01016A  0100               	movlb	0	; () banked
  4874  01016C  6F85               	movwf	(??_sprintf+1)& (0+255),b
  4875  01016E  C084  FFF6         	movff	??_sprintf,tblptrl
  4876  010172  C085  FFF7         	movff	??_sprintf+1,tblptrh
  4877  010176                     	if	0	;tblptru may be non-zero
  4878  010176                     	endif
  4879  010176                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4880  010176  0E00               	movlw	low (__mediumconst shr (0+16))
  4881  010178  6EF8               	movwf	tblptru,c
  4882  01017A                     	endif
  4883  01017A  0008               	tblrd		*
  4884  01017C  50F5               	movf	tablat,w,c
  4885  01017E  0900               	iorlw	0
  4886  010180  A4D8               	btfss	status,2,c
  4887  010182  D7E5               	goto	l4889
  4888                           
  4889                           ; BSR set to: 0
  4890                           ;doprnt.c: 757: if(width > len)
  4891                           
  4892                           ; BSR set to: 0
  4893  010184  0100               	movlb	0	; () banked
  4894  010186  5193               	movf	sprintf@width& (0+255),w,b
  4895  010188  0100               	movlb	0	; () banked
  4896  01018A  5D8F               	subwf	sprintf@len& (0+255),w,b
  4897  01018C  0100               	movlb	0	; () banked
  4898  01018E  5194               	movf	(sprintf@width+1)& (0+255),w,b
  4899  010190  0100               	movlb	0	; () banked
  4900  010192  5990               	subwfb	(sprintf@len+1)& (0+255),w,b
  4901  010194  B0D8               	btfsc	status,0,c
  4902  010196  D009               	goto	l4897
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;doprnt.c: 758: width -= len;
  4906  010198  0100               	movlb	0	; () banked
  4907  01019A  518F               	movf	sprintf@len& (0+255),w,b
  4908  01019C  0100               	movlb	0	; () banked
  4909  01019E  5F93               	subwf	sprintf@width& (0+255),f,b
  4910  0101A0  0100               	movlb	0	; () banked
  4911  0101A2  5190               	movf	(sprintf@len+1)& (0+255),w,b
  4912  0101A4  0100               	movlb	0	; () banked
  4913  0101A6  5B94               	subwfb	(sprintf@width+1)& (0+255),f,b
  4914  0101A8  D010               	goto	l4903
  4915  0101AA                     l4897:
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;doprnt.c: 759: else
  4919                           ;doprnt.c: 760: width = 0;
  4920  0101AA  0E00               	movlw	0
  4921  0101AC  0100               	movlb	0	; () banked
  4922  0101AE  6F94               	movwf	(sprintf@width+1)& (0+255),b
  4923  0101B0  0E00               	movlw	0
  4924  0101B2  6F93               	movwf	sprintf@width& (0+255),b
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;doprnt.c: 764: while(width--)
  4928  0101B4  D00A               	goto	l4903
  4929  0101B6                     l4899:
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;doprnt.c: 765: ((*sp++ = (' ')));
  4933  0101B6  C072  FFD9         	movff	sprintf@sp,fsr2l
  4934  0101BA  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  4935  0101BE  0E20               	movlw	32
  4936  0101C0  6EDF               	movwf	indf2,c
  4937                           
  4938                           ; BSR set to: 0
  4939  0101C2  0100               	movlb	0	; () banked
  4940  0101C4  4B72               	infsnz	sprintf@sp& (0+255),f,b
  4941  0101C6  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  4942  0101C8  D000               	goto	l4903
  4943  0101CA                     l4903:
  4944                           
  4945                           ; BSR set to: 0
  4946  0101CA  0100               	movlb	0	; () banked
  4947  0101CC  0793               	decf	sprintf@width& (0+255),f,b
  4948  0101CE  A0D8               	btfss	status,0,c
  4949  0101D0  0794               	decf	(sprintf@width+1)& (0+255),f,b
  4950  0101D2  0100               	movlb	0	; () banked
  4951  0101D4  2993               	incf	sprintf@width& (0+255),w,b
  4952  0101D6  E1EF               	bnz	l4899
  4953  0101D8  0100               	movlb	0	; () banked
  4954  0101DA  2994               	incf	(sprintf@width+1)& (0+255),w,b
  4955  0101DC  B4D8               	btfsc	status,2,c
  4956  0101DE  D016               	goto	l4911
  4957  0101E0  D7EA               	goto	l4899
  4958                           
  4959                           ; BSR set to: 0
  4960                           ;doprnt.c: 767: while(len--)
  4961  0101E2  D014               	goto	l4911
  4962  0101E4                     l4905:
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  4966  0101E4  C08B  FFF6         	movff	sprintf@cp,tblptrl
  4967  0101E8  C08C  FFF7         	movff	sprintf@cp+1,tblptrh
  4968  0101EC                     	if	0	;tblptru may be non-zero
  4969  0101EC                     	endif
  4970  0101EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4971  0101EC  0E00               	movlw	low (__mediumconst shr (0+16))
  4972  0101EE  6EF8               	movwf	tblptru,c
  4973  0101F0                     	endif
  4974  0101F0  C072  FFD9         	movff	sprintf@sp,fsr2l
  4975  0101F4  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  4976  0101F8  0008               	tblrd		*
  4977  0101FA  CFF5 FFDF          	movff	tablat,indf2
  4978                           
  4979                           ; BSR set to: 0
  4980  0101FE  0100               	movlb	0	; () banked
  4981  010200  4B8B               	infsnz	sprintf@cp& (0+255),f,b
  4982  010202  2B8C               	incf	(sprintf@cp+1)& (0+255),f,b
  4983                           
  4984                           ; BSR set to: 0
  4985  010204  0100               	movlb	0	; () banked
  4986  010206  4B72               	infsnz	sprintf@sp& (0+255),f,b
  4987  010208  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  4988  01020A  D000               	goto	l4911
  4989  01020C                     l4911:
  4990                           
  4991                           ; BSR set to: 0
  4992  01020C  0100               	movlb	0	; () banked
  4993  01020E  078F               	decf	sprintf@len& (0+255),f,b
  4994  010210  A0D8               	btfss	status,0,c
  4995  010212  0790               	decf	(sprintf@len+1)& (0+255),f,b
  4996  010214  0100               	movlb	0	; () banked
  4997  010216  298F               	incf	sprintf@len& (0+255),w,b
  4998  010218  E1E5               	bnz	l4905
  4999  01021A  0100               	movlb	0	; () banked
  5000  01021C  2990               	incf	(sprintf@len+1)& (0+255),w,b
  5001  01021E  B4D8               	btfsc	status,2,c
  5002  010220  D128               	goto	l4993
  5003  010222  D7E0               	goto	l4905
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;doprnt.c: 813: continue;
  5007                           
  5008                           ;doprnt.c: 802: default:
  5009                           
  5010                           ; BSR set to: 0
  5011                           ;doprnt.c: 774: continue;
  5012  010224  D126               	goto	l4993
  5013                           
  5014                           ; BSR set to: 0
  5015                           ;doprnt.c: 822: }
  5016  010226  D01B               	goto	l4917
  5017  010228                     l4915:
  5018  010228  C074  FFF6         	movff	sprintf@f,tblptrl
  5019  01022C  C075  FFF7         	movff	sprintf@f+1,tblptrh
  5020  010230  0100               	movlb	0	; () banked
  5021  010232  4B74               	infsnz	sprintf@f& (0+255),f,b
  5022  010234  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  5023  010236                     	if	0	;tblptru may be non-zero
  5024  010236                     	endif
  5025  010236                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5026  010236  0E00               	movlw	low (__mediumconst shr (0+16))
  5027  010238  6EF8               	movwf	tblptru,c
  5028  01023A                     	endif
  5029  01023A  0008               	tblrd		*
  5030  01023C  CFF5 F092          	movff	tablat,sprintf@c
  5031  010240  0100               	movlb	0	; () banked
  5032  010242  5192               	movf	sprintf@c& (0+255),w,b
  5033                           
  5034                           ; Switch size 1, requested type "space"
  5035                           ; Number of cases is 4, Range of values is 0 to 115
  5036                           ; switch strategies available:
  5037                           ; Name         Instructions Cycles
  5038                           ; simple_byte           13     7 (average)
  5039                           ;	Chosen strategy is simple_byte
  5040  010244  0A00               	xorlw	0	; case 0
  5041  010246  B4D8               	btfsc	status,2,c
  5042  010248  D126               	goto	l4995
  5043  01024A  0A64               	xorlw	100	; case 100
  5044  01024C  B4D8               	btfsc	status,2,c
  5045  01024E  D007               	goto	l4917
  5046  010250  0A0D               	xorlw	13	; case 105
  5047  010252  B4D8               	btfsc	status,2,c
  5048  010254  D004               	goto	l4917
  5049  010256  0A1A               	xorlw	26	; case 115
  5050  010258  B4D8               	btfsc	status,2,c
  5051  01025A  D759               	goto	l4879
  5052  01025C  D10A               	goto	l4993
  5053  01025E                     l4917:
  5054                           
  5055                           ;doprnt.c: 1253: {
  5056                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5057  01025E  C089  FFD9         	movff	sprintf@ap,fsr2l
  5058  010262  C08A  FFDA         	movff	sprintf@ap+1,fsr2h
  5059  010266  CFDE F08D          	movff	postinc2,sprintf@val
  5060  01026A  CFDD F08E          	movff	postdec2,sprintf@val+1
  5061  01026E  0E02               	movlw	2
  5062  010270  0100               	movlb	0	; () banked
  5063  010272  2789               	addwf	sprintf@ap& (0+255),f,b
  5064  010274  0E00               	movlw	0
  5065  010276  238A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;doprnt.c: 1261: if((int)val < 0) {
  5069  010278  0100               	movlb	0	; () banked
  5070  01027A  AF8E               	btfss	(sprintf@val+1)& (0+255),7,b
  5071  01027C  D009               	goto	l4927
  5072                           
  5073                           ; BSR set to: 0
  5074                           ;doprnt.c: 1262: flag |= 0x03;
  5075  01027E  0E03               	movlw	3
  5076  010280  0100               	movlb	0	; () banked
  5077  010282  1391               	iorwf	sprintf@flag& (0+255),f,b
  5078                           
  5079                           ; BSR set to: 0
  5080                           ;doprnt.c: 1263: val = -val;
  5081  010284  0100               	movlb	0	; () banked
  5082  010286  6D8D               	negf	sprintf@val& (0+255),b
  5083  010288  1F8E               	comf	(sprintf@val+1)& (0+255),f,b
  5084  01028A  B0D8               	btfsc	status,0,c
  5085  01028C  2B8E               	incf	(sprintf@val+1)& (0+255),f,b
  5086  01028E  D000               	goto	l4927
  5087  010290                     l4927:
  5088                           
  5089                           ; BSR set to: 0
  5090                           ;doprnt.c: 1264: }
  5091                           ;doprnt.c: 1266: }
  5092                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5093  010290  0E01               	movlw	1
  5094  010292  0100               	movlb	0	; () banked
  5095  010294  6F92               	movwf	sprintf@c& (0+255),b
  5096  010296                     l4929:
  5097                           
  5098                           ; BSR set to: 0
  5099  010296  0E05               	movlw	5
  5100  010298  0100               	movlb	0	; () banked
  5101  01029A  1992               	xorwf	sprintf@c& (0+255),w,b
  5102  01029C  B4D8               	btfsc	status,2,c
  5103  01029E  D01D               	goto	l4941
  5104  0102A0  D001               	goto	l4933
  5105                           
  5106                           ; BSR set to: 0
  5107  0102A2  D01B               	goto	l4941
  5108  0102A4                     l4933:
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;doprnt.c: 1306: if(val < dpowers[c])
  5112  0102A4  0100               	movlb	0	; () banked
  5113  0102A6  5192               	movf	sprintf@c& (0+255),w,b
  5114  0102A8  0D02               	mullw	2
  5115  0102AA  0EE7               	movlw	low _dpowers
  5116  0102AC  24F3               	addwf	prodl,w,c
  5117  0102AE  6EF6               	movwf	tblptrl,c
  5118  0102B0  0EFD               	movlw	high _dpowers
  5119  0102B2  20F4               	addwfc	prodh,w,c
  5120  0102B4  6EF7               	movwf	tblptrh,c
  5121  0102B6                     	if	1	;There are 3 active tblptr bytes
  5122  0102B6  6AF8               	clrf	tblptru,c
  5123  0102B8  0E00               	movlw	low (__mediumconst shr (0+16))
  5124  0102BA  22F8               	addwfc	tblptru,f,c
  5125  0102BC                     	endif
  5126  0102BC  0009               	tblrd		*+
  5127  0102BE  50F5               	movf	tablat,w,c
  5128  0102C0  0100               	movlb	0	; () banked
  5129  0102C2  5D8D               	subwf	sprintf@val& (0+255),w,b
  5130  0102C4  0009               	tblrd		*+
  5131  0102C6  50F5               	movf	tablat,w,c
  5132  0102C8  0100               	movlb	0	; () banked
  5133  0102CA  598E               	subwfb	(sprintf@val+1)& (0+255),w,b
  5134  0102CC  A0D8               	btfss	status,0,c
  5135  0102CE  D005               	goto	l4941
  5136  0102D0  D001               	goto	l4937
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;doprnt.c: 1307: break;
  5140  0102D2  D003               	goto	l4941
  5141  0102D4                     l4937:
  5142                           
  5143                           ; BSR set to: 0
  5144  0102D4  0100               	movlb	0	; () banked
  5145  0102D6  2B92               	incf	sprintf@c& (0+255),f,b
  5146  0102D8  D7DE               	goto	l4929
  5147  0102DA                     l4941:
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5151  0102DA  0100               	movlb	0	; () banked
  5152  0102DC  5193               	movf	sprintf@width& (0+255),w,b
  5153  0102DE  0100               	movlb	0	; () banked
  5154  0102E0  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5155  0102E2  B4D8               	btfsc	status,2,c
  5156  0102E4  D00C               	goto	l4947
  5157                           
  5158                           ; BSR set to: 0
  5159  0102E6  C091  F084         	movff	sprintf@flag,??_sprintf
  5160  0102EA  0E03               	movlw	3
  5161  0102EC  0100               	movlb	0	; () banked
  5162  0102EE  1784               	andwf	??_sprintf& (0+255),f,b
  5163  0102F0  B4D8               	btfsc	status,2,c
  5164  0102F2  D005               	goto	l4947
  5165                           
  5166                           ; BSR set to: 0
  5167                           ;doprnt.c: 1346: width--;
  5168  0102F4  0100               	movlb	0	; () banked
  5169  0102F6  0793               	decf	sprintf@width& (0+255),f,b
  5170  0102F8  A0D8               	btfss	status,0,c
  5171  0102FA  0794               	decf	(sprintf@width+1)& (0+255),f,b
  5172  0102FC  D000               	goto	l4947
  5173  0102FE                     l4947:
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;doprnt.c: 1381: if(width > c)
  5177  0102FE  0E80               	movlw	128
  5178  010300  0100               	movlb	0	; () banked
  5179  010302  BF92               	btfsc	sprintf@c& (0+255),7,b
  5180  010304  0E7F               	movlw	127
  5181  010306  0100               	movlb	0	; () banked
  5182  010308  6F84               	movwf	??_sprintf& (0+255),b
  5183  01030A  0100               	movlb	0	; () banked
  5184  01030C  5193               	movf	sprintf@width& (0+255),w,b
  5185  01030E  0100               	movlb	0	; () banked
  5186  010310  5D92               	subwf	sprintf@c& (0+255),w,b
  5187  010312  0100               	movlb	0	; () banked
  5188  010314  5194               	movf	(sprintf@width+1)& (0+255),w,b
  5189  010316  0A80               	xorlw	128
  5190  010318  0100               	movlb	0	; () banked
  5191  01031A  5984               	subwfb	??_sprintf& (0+255),w,b
  5192  01031C  B0D8               	btfsc	status,0,c
  5193  01031E  D00B               	goto	l4951
  5194                           
  5195                           ; BSR set to: 0
  5196                           ;doprnt.c: 1382: width -= c;
  5197  010320  0100               	movlb	0	; () banked
  5198  010322  5192               	movf	sprintf@c& (0+255),w,b
  5199  010324  0100               	movlb	0	; () banked
  5200  010326  5F93               	subwf	sprintf@width& (0+255),f,b
  5201  010328  0E00               	movlw	0
  5202  01032A  0100               	movlb	0	; () banked
  5203  01032C  BF92               	btfsc	sprintf@c& (0+255),7,b
  5204  01032E  0EFF               	movlw	255
  5205  010330  0100               	movlb	0	; () banked
  5206  010332  5B94               	subwfb	(sprintf@width+1)& (0+255),f,b
  5207  010334  D006               	goto	l4953
  5208  010336                     l4951:
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;doprnt.c: 1383: else
  5212                           ;doprnt.c: 1384: width = 0;
  5213  010336  0E00               	movlw	0
  5214  010338  0100               	movlb	0	; () banked
  5215  01033A  6F94               	movwf	(sprintf@width+1)& (0+255),b
  5216  01033C  0E00               	movlw	0
  5217  01033E  6F93               	movwf	sprintf@width& (0+255),b
  5218  010340  D000               	goto	l4953
  5219  010342                     l4953:
  5220                           
  5221                           ; BSR set to: 0
  5222                           ;doprnt.c: 1387: if(flag & 0x04) {
  5223  010342  0100               	movlb	0	; () banked
  5224  010344  A591               	btfss	sprintf@flag& (0+255),2,b
  5225  010346  D02C               	goto	l4969
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;doprnt.c: 1392: if(flag & 0x03)
  5229  010348  C091  F084         	movff	sprintf@flag,??_sprintf
  5230  01034C  0E03               	movlw	3
  5231  01034E  0100               	movlb	0	; () banked
  5232  010350  1784               	andwf	??_sprintf& (0+255),f,b
  5233  010352  B4D8               	btfsc	status,2,c
  5234  010354  D00A               	goto	l4961
  5235                           
  5236                           ; BSR set to: 0
  5237                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  5238  010356  C072  FFD9         	movff	sprintf@sp,fsr2l
  5239  01035A  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5240  01035E  0E2D               	movlw	45
  5241  010360  6EDF               	movwf	indf2,c
  5242                           
  5243                           ; BSR set to: 0
  5244  010362  0100               	movlb	0	; () banked
  5245  010364  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5246  010366  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5247  010368  D000               	goto	l4961
  5248  01036A                     l4961:
  5249                           
  5250                           ; BSR set to: 0
  5251                           ;doprnt.c: 1415: if(width)
  5252  01036A  0100               	movlb	0	; () banked
  5253  01036C  5193               	movf	sprintf@width& (0+255),w,b
  5254  01036E  0100               	movlb	0	; () banked
  5255  010370  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5256  010372  B4D8               	btfsc	status,2,c
  5257  010374  D041               	goto	l4983
  5258  010376                     l4963:
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  5262  010376  C072  FFD9         	movff	sprintf@sp,fsr2l
  5263  01037A  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5264  01037E  0E30               	movlw	48
  5265  010380  6EDF               	movwf	indf2,c
  5266                           
  5267                           ; BSR set to: 0
  5268  010382  0100               	movlb	0	; () banked
  5269  010384  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5270  010386  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;doprnt.c: 1418: while(--width);
  5274  010388  0100               	movlb	0	; () banked
  5275  01038A  0793               	decf	sprintf@width& (0+255),f,b
  5276  01038C  A0D8               	btfss	status,0,c
  5277  01038E  0794               	decf	(sprintf@width+1)& (0+255),f,b
  5278  010390  0100               	movlb	0	; () banked
  5279  010392  5193               	movf	sprintf@width& (0+255),w,b
  5280  010394  0100               	movlb	0	; () banked
  5281  010396  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5282  010398  B4D8               	btfsc	status,2,c
  5283  01039A  D02E               	goto	l4983
  5284  01039C  D7EC               	goto	l4963
  5285                           
  5286                           ; BSR set to: 0
  5287                           ;doprnt.c: 1420: } else
  5288                           
  5289                           ; BSR set to: 0
  5290  01039E  D02C               	goto	l4983
  5291  0103A0                     l4969:
  5292                           
  5293                           ; BSR set to: 0
  5294                           ;doprnt.c: 1422: {
  5295                           ;doprnt.c: 1424: if(width
  5296                           ;doprnt.c: 1428: )
  5297  0103A0  0100               	movlb	0	; () banked
  5298  0103A2  5193               	movf	sprintf@width& (0+255),w,b
  5299  0103A4  0100               	movlb	0	; () banked
  5300  0103A6  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5301  0103A8  B4D8               	btfsc	status,2,c
  5302  0103AA  D015               	goto	l4977
  5303  0103AC                     l4971:
  5304                           
  5305                           ; BSR set to: 0
  5306                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  5307  0103AC  C072  FFD9         	movff	sprintf@sp,fsr2l
  5308  0103B0  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5309  0103B4  0E20               	movlw	32
  5310  0103B6  6EDF               	movwf	indf2,c
  5311                           
  5312                           ; BSR set to: 0
  5313  0103B8  0100               	movlb	0	; () banked
  5314  0103BA  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5315  0103BC  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5316                           
  5317                           ; BSR set to: 0
  5318                           ;doprnt.c: 1431: while(--width);
  5319  0103BE  0100               	movlb	0	; () banked
  5320  0103C0  0793               	decf	sprintf@width& (0+255),f,b
  5321  0103C2  A0D8               	btfss	status,0,c
  5322  0103C4  0794               	decf	(sprintf@width+1)& (0+255),f,b
  5323  0103C6  0100               	movlb	0	; () banked
  5324  0103C8  5193               	movf	sprintf@width& (0+255),w,b
  5325  0103CA  0100               	movlb	0	; () banked
  5326  0103CC  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5327  0103CE  B4D8               	btfsc	status,2,c
  5328  0103D0  D002               	goto	l4977
  5329  0103D2  D7EC               	goto	l4971
  5330                           
  5331                           ; BSR set to: 0
  5332  0103D4  D000               	goto	l4977
  5333  0103D6                     l4977:
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;doprnt.c: 1438: if(flag & 0x03)
  5337  0103D6  C091  F084         	movff	sprintf@flag,??_sprintf
  5338  0103DA  0E03               	movlw	3
  5339  0103DC  0100               	movlb	0	; () banked
  5340  0103DE  1784               	andwf	??_sprintf& (0+255),f,b
  5341  0103E0  B4D8               	btfsc	status,2,c
  5342  0103E2  D00A               	goto	l4983
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  5346  0103E4  C072  FFD9         	movff	sprintf@sp,fsr2l
  5347  0103E8  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5348  0103EC  0E2D               	movlw	45
  5349  0103EE  6EDF               	movwf	indf2,c
  5350                           
  5351                           ; BSR set to: 0
  5352  0103F0  0100               	movlb	0	; () banked
  5353  0103F2  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5354  0103F4  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5355                           
  5356                           ; BSR set to: 0
  5357  0103F6  D000               	goto	l4983
  5358  0103F8                     l4983:
  5359                           
  5360                           ; BSR set to: 0
  5361                           ;doprnt.c: 1469: }
  5362                           ;doprnt.c: 1472: prec = c;
  5363  0103F8  C092  F088         	movff	sprintf@c,sprintf@prec
  5364                           
  5365                           ;doprnt.c: 1474: while(prec--) {
  5366  0103FC  D032               	goto	l4991
  5367  0103FE                     l4985:
  5368                           
  5369                           ; BSR set to: 0
  5370                           ;doprnt.c: 1478: {
  5371                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5372  0103FE  0100               	movlb	0	; () banked
  5373  010400  5188               	movf	sprintf@prec& (0+255),w,b
  5374  010402  0D02               	mullw	2
  5375  010404  0EE7               	movlw	low _dpowers
  5376  010406  24F3               	addwf	prodl,w,c
  5377  010408  6EF6               	movwf	tblptrl,c
  5378  01040A  0EFD               	movlw	high _dpowers
  5379  01040C  20F4               	addwfc	prodh,w,c
  5380  01040E  6EF7               	movwf	tblptrh,c
  5381  010410                     	if	1	;There are 3 active tblptr bytes
  5382  010410  6AF8               	clrf	tblptru,c
  5383  010412  0E00               	movlw	low (__mediumconst shr (0+16))
  5384  010414  22F8               	addwfc	tblptru,f,c
  5385  010416                     	endif
  5386  010416  0009               	tblrd		*+
  5387  010418  CFF5 F068          	movff	tablat,___lwdiv@divisor
  5388  01041C  000A               	tblrd		*-
  5389  01041E  CFF5 F069          	movff	tablat,___lwdiv@divisor+1
  5390  010422  C08D  F066         	movff	sprintf@val,___lwdiv@dividend
  5391  010426  C08E  F067         	movff	sprintf@val+1,___lwdiv@dividend+1
  5392  01042A  ECAE  F093         	call	___lwdiv	;wreg free
  5393  01042E  C066  F06D         	movff	?___lwdiv,___lwmod@dividend
  5394  010432  C067  F06E         	movff	?___lwdiv+1,___lwmod@dividend+1
  5395  010436  0E00               	movlw	0
  5396  010438  0100               	movlb	0	; () banked
  5397  01043A  6F70               	movwf	(___lwmod@divisor+1)& (0+255),b
  5398  01043C  0E0A               	movlw	10
  5399  01043E  6F6F               	movwf	___lwmod@divisor& (0+255),b
  5400  010440  ECE0  F094         	call	___lwmod	;wreg free
  5401  010444  0100               	movlb	0	; () banked
  5402  010446  516D               	movf	?___lwmod& (0+255),w,b
  5403  010448  0F30               	addlw	48
  5404  01044A  0100               	movlb	0	; () banked
  5405  01044C  6F92               	movwf	sprintf@c& (0+255),b
  5406                           
  5407                           ; BSR set to: 0
  5408                           ;doprnt.c: 1523: }
  5409                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5410  01044E  C072  FFD9         	movff	sprintf@sp,fsr2l
  5411  010452  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5412  010456  C092  FFDF         	movff	sprintf@c,indf2
  5413                           
  5414                           ; BSR set to: 0
  5415  01045A  0100               	movlb	0	; () banked
  5416  01045C  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5417  01045E  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5418  010460  D000               	goto	l4991
  5419  010462                     l4991:
  5420                           
  5421                           ; BSR set to: 0
  5422  010462  0100               	movlb	0	; () banked
  5423  010464  0788               	decf	sprintf@prec& (0+255),f,b
  5424  010466  0100               	movlb	0	; () banked
  5425  010468  2988               	incf	sprintf@prec& (0+255),w,b
  5426  01046A  B4D8               	btfsc	status,2,c
  5427  01046C  D002               	goto	l4993
  5428  01046E  D7C7               	goto	l4985
  5429                           
  5430                           ; BSR set to: 0
  5431  010470  D000               	goto	l4993
  5432  010472                     l4993:
  5433                           
  5434                           ; BSR set to: 0
  5435  010472  C074  FFF6         	movff	sprintf@f,tblptrl
  5436  010476  C075  FFF7         	movff	sprintf@f+1,tblptrh
  5437  01047A  0100               	movlb	0	; () banked
  5438  01047C  4B74               	infsnz	sprintf@f& (0+255),f,b
  5439  01047E  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  5440  010480                     	if	0	;tblptru may be non-zero
  5441  010480                     	endif
  5442  010480                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5443  010480  0E00               	movlw	low (__mediumconst shr (0+16))
  5444  010482  6EF8               	movwf	tblptru,c
  5445  010484                     	endif
  5446  010484  0008               	tblrd		*
  5447  010486  CFF5 F092          	movff	tablat,sprintf@c
  5448  01048A  0100               	movlb	0	; () banked
  5449  01048C  5192               	movf	sprintf@c& (0+255),w,b
  5450  01048E  B4D8               	btfsc	status,2,c
  5451  010490  D002               	goto	l4995
  5452  010492  D5BD               	goto	l4853
  5453                           
  5454                           ; BSR set to: 0
  5455  010494  D000               	goto	l4995
  5456  010496                     l4995:
  5457                           
  5458                           ;doprnt.c: 1538: *sp = 0;
  5459  010496  C072  FFD9         	movff	sprintf@sp,fsr2l
  5460  01049A  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5461  01049E  0E00               	movlw	0
  5462  0104A0  6EDF               	movwf	indf2,c
  5463  0104A2  0012               	return	
  5464                           
  5465                           ;doprnt.c: 1540: return 0;
  5466                           ;	Return value of _sprintf is never used
  5467  0104A4  0012               	return		;funcret
  5468  0104A6                     __end_of_sprintf:
  5469                           	opt stack 0
  5470                           tblptru	equ	0xFF8
  5471                           tblptrh	equ	0xFF7
  5472                           tblptrl	equ	0xFF6
  5473                           tablat	equ	0xFF5
  5474                           prodh	equ	0xFF4
  5475                           prodl	equ	0xFF3
  5476                           intcon	equ	0xFF2
  5477                           postinc0	equ	0xFEE
  5478                           wreg	equ	0xFE8
  5479                           postinc1	equ	0xFE6
  5480                           postdec1	equ	0xFE5
  5481                           fsr1h	equ	0xFE2
  5482                           fsr1l	equ	0xFE1
  5483                           indf2	equ	0xFDF
  5484                           postinc2	equ	0xFDE
  5485                           postdec2	equ	0xFDD
  5486                           fsr2h	equ	0xFDA
  5487                           fsr2l	equ	0xFD9
  5488                           status	equ	0xFD8
  5489                           
  5490 ;; *************** function _isdigit *****************
  5491 ;; Defined at:
  5492 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;  c               1    wreg     unsigned char 
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;  c               1   32[COMRAM] unsigned char 
  5497 ;; Return value:  Size  Location     Type
  5498 ;;		None               void
  5499 ;; Registers used:
  5500 ;;		wreg, status,2, status,0
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5507 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5508 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5509 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5510 ;;Total ram usage:        3 bytes
  5511 ;; Hardware stack levels used:    1
  5512 ;; Hardware stack levels required when called:    4
  5513 ;; This function calls:
  5514 ;;		Nothing
  5515 ;; This function is called by:
  5516 ;;		_sprintf
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           	psect	text14
  5521  012D8E                     __ptext14:
  5522                           	opt stack 0
  5523  012D8E                     _isdigit:
  5524                           	opt stack 21
  5525                           
  5526                           ;incstack = 0
  5527                           ;isdigit@c stored from wreg
  5528  012D8E  6E21               	movwf	isdigit@c,c
  5529  012D90  0E00               	movlw	0
  5530  012D92  6E20               	movwf	_isdigit$2847,c
  5531  012D94  0E3A               	movlw	58
  5532  012D96  6021               	cpfslt	isdigit@c,c
  5533  012D98  D006               	goto	l4711
  5534  012D9A  0E2F               	movlw	47
  5535  012D9C  6421               	cpfsgt	isdigit@c,c
  5536  012D9E  D003               	goto	l4711
  5537  012DA0  0E01               	movlw	1
  5538  012DA2  6E20               	movwf	_isdigit$2847,c
  5539  012DA4  D000               	goto	l4711
  5540  012DA6                     l4711:
  5541  012DA6  C020  F01F         	movff	_isdigit$2847,??_isdigit
  5542  012DAA  301F               	rrcf	??_isdigit,w,c
  5543  012DAC  0012               	return	
  5544  012DAE  0012               	return		;funcret
  5545  012DB0                     __end_of_isdigit:
  5546                           	opt stack 0
  5547                           tblptru	equ	0xFF8
  5548                           tblptrh	equ	0xFF7
  5549                           tblptrl	equ	0xFF6
  5550                           tablat	equ	0xFF5
  5551                           prodh	equ	0xFF4
  5552                           prodl	equ	0xFF3
  5553                           intcon	equ	0xFF2
  5554                           postinc0	equ	0xFEE
  5555                           wreg	equ	0xFE8
  5556                           postinc1	equ	0xFE6
  5557                           postdec1	equ	0xFE5
  5558                           fsr1h	equ	0xFE2
  5559                           fsr1l	equ	0xFE1
  5560                           indf2	equ	0xFDF
  5561                           postinc2	equ	0xFDE
  5562                           postdec2	equ	0xFDD
  5563                           fsr2h	equ	0xFDA
  5564                           fsr2l	equ	0xFD9
  5565                           status	equ	0xFD8
  5566                           
  5567 ;; *************** function ___lwmod *****************
  5568 ;; Defined at:
  5569 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;  dividend        2   13[BANK0 ] unsigned int 
  5572 ;;  divisor         2   15[BANK0 ] unsigned int 
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;  counter         1   17[BANK0 ] unsigned char 
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  2   13[BANK0 ] unsigned int 
  5577 ;; Registers used:
  5578 ;;		wreg, status,2, status,0
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5584 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5585 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5587 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5588 ;;Total ram usage:        5 bytes
  5589 ;; Hardware stack levels used:    1
  5590 ;; Hardware stack levels required when called:    4
  5591 ;; This function calls:
  5592 ;;		Nothing
  5593 ;; This function is called by:
  5594 ;;		_ringbuf_put_num
  5595 ;;		_sprintf
  5596 ;;		_tx_sendn
  5597 ;;		_my_utoa
  5598 ;; This function uses a non-reentrant model
  5599 ;;
  5600                           
  5601                           	psect	text15
  5602  0129C0                     __ptext15:
  5603                           	opt stack 0
  5604  0129C0                     ___lwmod:
  5605                           	opt stack 24
  5606                           
  5607                           ;incstack = 0
  5608  0129C0  0100               	movlb	0	; () banked
  5609  0129C2  516F               	movf	___lwmod@divisor& (0+255),w,b
  5610  0129C4  0100               	movlb	0	; () banked
  5611  0129C6  1170               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  5612  0129C8  B4D8               	btfsc	status,2,c
  5613  0129CA  D02B               	goto	l1276
  5614                           
  5615                           ; BSR set to: 0
  5616  0129CC  0E01               	movlw	1
  5617  0129CE  0100               	movlb	0	; () banked
  5618  0129D0  6F71               	movwf	___lwmod@counter& (0+255),b
  5619  0129D2  D007               	goto	l4749
  5620  0129D4                     l4747:
  5621                           
  5622                           ; BSR set to: 0
  5623  0129D4  0100               	movlb	0	; () banked
  5624  0129D6  90D8               	bcf	status,0,c
  5625  0129D8  376F               	rlcf	___lwmod@divisor& (0+255),f,b
  5626  0129DA  3770               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  5627  0129DC  0100               	movlb	0	; () banked
  5628  0129DE  2B71               	incf	___lwmod@counter& (0+255),f,b
  5629  0129E0  D000               	goto	l4749
  5630  0129E2                     l4749:
  5631                           
  5632                           ; BSR set to: 0
  5633  0129E2  0100               	movlb	0	; () banked
  5634  0129E4  BF70               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
  5635  0129E6  D002               	goto	l4751
  5636  0129E8  D7F5               	goto	l4747
  5637                           
  5638                           ; BSR set to: 0
  5639  0129EA  D000               	goto	l4751
  5640  0129EC                     l4751:
  5641                           
  5642                           ; BSR set to: 0
  5643  0129EC  0100               	movlb	0	; () banked
  5644  0129EE  516F               	movf	___lwmod@divisor& (0+255),w,b
  5645  0129F0  0100               	movlb	0	; () banked
  5646  0129F2  5D6D               	subwf	___lwmod@dividend& (0+255),w,b
  5647  0129F4  0100               	movlb	0	; () banked
  5648  0129F6  5170               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5649  0129F8  0100               	movlb	0	; () banked
  5650  0129FA  596E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  5651  0129FC  A0D8               	btfss	status,0,c
  5652  0129FE  D009               	goto	l4755
  5653                           
  5654                           ; BSR set to: 0
  5655  012A00  0100               	movlb	0	; () banked
  5656  012A02  516F               	movf	___lwmod@divisor& (0+255),w,b
  5657  012A04  0100               	movlb	0	; () banked
  5658  012A06  5F6D               	subwf	___lwmod@dividend& (0+255),f,b
  5659  012A08  0100               	movlb	0	; () banked
  5660  012A0A  5170               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5661  012A0C  0100               	movlb	0	; () banked
  5662  012A0E  5B6E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  5663  012A10  D000               	goto	l4755
  5664  012A12                     l4755:
  5665                           
  5666                           ; BSR set to: 0
  5667  012A12  0100               	movlb	0	; () banked
  5668  012A14  90D8               	bcf	status,0,c
  5669  012A16  3370               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  5670  012A18  336F               	rrcf	___lwmod@divisor& (0+255),f,b
  5671                           
  5672                           ; BSR set to: 0
  5673  012A1A  0100               	movlb	0	; () banked
  5674  012A1C  2F71               	decfsz	___lwmod@counter& (0+255),f,b
  5675  012A1E  D7E6               	goto	l4751
  5676  012A20  D000               	goto	l1276
  5677  012A22                     l1276:
  5678                           
  5679                           ; BSR set to: 0
  5680  012A22  C06D  F06D         	movff	___lwmod@dividend,?___lwmod
  5681  012A26  C06E  F06E         	movff	___lwmod@dividend+1,?___lwmod+1
  5682                           
  5683                           ; BSR set to: 0
  5684  012A2A  0012               	return		;funcret
  5685  012A2C                     __end_of___lwmod:
  5686                           	opt stack 0
  5687                           tblptru	equ	0xFF8
  5688                           tblptrh	equ	0xFF7
  5689                           tblptrl	equ	0xFF6
  5690                           tablat	equ	0xFF5
  5691                           prodh	equ	0xFF4
  5692                           prodl	equ	0xFF3
  5693                           intcon	equ	0xFF2
  5694                           postinc0	equ	0xFEE
  5695                           wreg	equ	0xFE8
  5696                           postinc1	equ	0xFE6
  5697                           postdec1	equ	0xFE5
  5698                           fsr1h	equ	0xFE2
  5699                           fsr1l	equ	0xFE1
  5700                           indf2	equ	0xFDF
  5701                           postinc2	equ	0xFDE
  5702                           postdec2	equ	0xFDD
  5703                           fsr2h	equ	0xFDA
  5704                           fsr2l	equ	0xFD9
  5705                           status	equ	0xFD8
  5706                           
  5707 ;; *************** function _ringbuf_put_str *****************
  5708 ;; Defined at:
  5709 ;;		line 58 in file "../My_header\My_ringbuf.h"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;  rb              2    7[BANK0 ] PTR struct ringbuf
  5712 ;;		 -> tx_buf(8), 
  5713 ;;  str             2    9[BANK0 ] PTR const unsigned char 
  5714 ;;		 -> STR_5(8), print_time@str(30), STR_3(3), print_time_dec@str(10), 
  5715 ;;		 -> STR_2(4), STR_1(4), 
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;		None
  5718 ;; Return value:  Size  Location     Type
  5719 ;;		None               void
  5720 ;; Registers used:
  5721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5727 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5730 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5731 ;;Total ram usage:        4 bytes
  5732 ;; Hardware stack levels used:    1
  5733 ;; Hardware stack levels required when called:    6
  5734 ;; This function calls:
  5735 ;;		_ringbuf_put
  5736 ;; This function is called by:
  5737 ;;		_my_terminal_loop
  5738 ;;		_print_time
  5739 ;;		_command_at_hand
  5740 ;;		_print_time_dec
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	text16
  5745  012A2C                     __ptext16:
  5746                           	opt stack 0
  5747  012A2C                     _ringbuf_put_str:
  5748                           	opt stack 23
  5749                           
  5750                           ;My_header\My_ringbuf.h: 59: while (*str) {
  5751                           
  5752                           ; BSR set to: 0
  5753                           ;incstack = 0
  5754  012A2C  D01D               	goto	l4765
  5755  012A2E                     l4761:
  5756                           
  5757                           ;My_header\My_ringbuf.h: 60: ringbuf_put(rb, *str++);
  5758  012A2E  C067  F060         	movff	ringbuf_put_str@rb,ringbuf_put@rb
  5759  012A32  C068  F061         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
  5760  012A36  C069  FFF6         	movff	ringbuf_put_str@str,tblptrl
  5761  012A3A  C06A  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  5762  012A3E  0E00               	movlw	low (__mediumconst shr (0+16))
  5763  012A40  6EF8               	movwf	tblptru,c
  5764  012A42  0E0E               	movlw	(high __ramtop+-1)
  5765  012A44  64F7               	cpfsgt	tblptrh,c
  5766  012A46  D003               	bra	u5217
  5767  012A48  0008               	tblrd		*
  5768  012A4A  50F5               	movf	tablat,w,c
  5769  012A4C  D005               	bra	u5210
  5770  012A4E                     u5217:
  5771  012A4E  CFF6 FFE1          	movff	tblptrl,fsr1l
  5772  012A52  CFF7 FFE2          	movff	tblptrh,fsr1h
  5773  012A56  50E7               	movf	indf1,w,c
  5774  012A58                     u5210:
  5775  012A58  0100               	movlb	0	; () banked
  5776  012A5A  6F62               	movwf	ringbuf_put@asciicode& (0+255),b
  5777  012A5C  EC3F  F08D         	call	_ringbuf_put	;wreg free
  5778  012A60  0100               	movlb	0	; () banked
  5779  012A62  4B69               	infsnz	ringbuf_put_str@str& (0+255),f,b
  5780  012A64  2B6A               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
  5781  012A66  D000               	goto	l4765
  5782  012A68                     l4765:
  5783  012A68  C069  FFF6         	movff	ringbuf_put_str@str,tblptrl
  5784  012A6C  C06A  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  5785  012A70  0E00               	movlw	low (__mediumconst shr (0+16))
  5786  012A72  6EF8               	movwf	tblptru,c
  5787  012A74  0E0E               	movlw	(high __ramtop+-1)
  5788  012A76  64F7               	cpfsgt	tblptrh,c
  5789  012A78  D003               	bra	u5227
  5790  012A7A  0008               	tblrd		*
  5791  012A7C  50F5               	movf	tablat,w,c
  5792  012A7E  D005               	bra	u5220
  5793  012A80                     u5227:
  5794  012A80  CFF6 FFE1          	movff	tblptrl,fsr1l
  5795  012A84  CFF7 FFE2          	movff	tblptrh,fsr1h
  5796  012A88  50E7               	movf	indf1,w,c
  5797  012A8A                     u5220:
  5798  012A8A  0900               	iorlw	0
  5799  012A8C  A4D8               	btfss	status,2,c
  5800  012A8E  D7CF               	goto	l4761
  5801  012A90  0012               	return		;funcret
  5802  012A92                     __end_of_ringbuf_put_str:
  5803                           	opt stack 0
  5804                           tblptru	equ	0xFF8
  5805                           tblptrh	equ	0xFF7
  5806                           tblptrl	equ	0xFF6
  5807                           tablat	equ	0xFF5
  5808                           prodh	equ	0xFF4
  5809                           prodl	equ	0xFF3
  5810                           intcon	equ	0xFF2
  5811                           postinc0	equ	0xFEE
  5812                           wreg	equ	0xFE8
  5813                           indf1	equ	0xFE7
  5814                           postinc1	equ	0xFE6
  5815                           postdec1	equ	0xFE5
  5816                           fsr1h	equ	0xFE2
  5817                           fsr1l	equ	0xFE1
  5818                           indf2	equ	0xFDF
  5819                           postinc2	equ	0xFDE
  5820                           postdec2	equ	0xFDD
  5821                           fsr2h	equ	0xFDA
  5822                           fsr2l	equ	0xFD9
  5823                           status	equ	0xFD8
  5824                           
  5825 ;; *************** function _ringbuf_put *****************
  5826 ;; Defined at:
  5827 ;;		line 39 in file "../My_header\My_ringbuf.h"
  5828 ;; Parameters:    Size  Location     Type
  5829 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  5830 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
  5831 ;;  asciicode       1    2[BANK0 ] unsigned char 
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;		None
  5834 ;; Return value:  Size  Location     Type
  5835 ;;		None               void
  5836 ;; Registers used:
  5837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5843 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5845 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5846 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5847 ;;Total ram usage:        7 bytes
  5848 ;; Hardware stack levels used:    1
  5849 ;; Hardware stack levels required when called:    5
  5850 ;; This function calls:
  5851 ;;		_ringbuf_num
  5852 ;; This function is called by:
  5853 ;;		_ringbuf_put_num
  5854 ;;		_ringbuf_put_str
  5855 ;;		_tx_sends
  5856 ;;		_my_terminal_loop
  5857 ;;		_tx_send
  5858 ;; This function uses a non-reentrant model
  5859 ;;
  5860                           
  5861                           	psect	text17
  5862  011A7E                     __ptext17:
  5863                           	opt stack 0
  5864  011A7E                     _ringbuf_put:
  5865                           	opt stack 23
  5866                           
  5867                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
  5868                           
  5869                           ;incstack = 0
  5870  011A7E  C060  F01F         	movff	ringbuf_put@rb,ringbuf_num@rb
  5871  011A82  C061  F020         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  5872  011A86  EC3E  F08F         	call	_ringbuf_num	;wreg free
  5873  011A8A  0100               	movlb	0	; () banked
  5874  011A8C  EE20 F002          	lfsr	2,2
  5875  011A90  5160               	movf	ringbuf_put@rb& (0+255),w,b
  5876  011A92  26D9               	addwf	fsr2l,f,c
  5877  011A94  5161               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  5878  011A96  22DA               	addwfc	fsr2h,f,c
  5879  011A98  50DE               	movf	postinc2,w,c
  5880  011A9A  5C1F               	subwf	?_ringbuf_num,w,c
  5881  011A9C  50DE               	movf	postinc2,w,c
  5882  011A9E  5820               	subwfb	?_ringbuf_num+1,w,c
  5883  011AA0  B0D8               	btfsc	status,0,c
  5884  011AA2  0012               	return	
  5885                           
  5886                           ; BSR set to: 0
  5887                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
  5888  011AA4  0100               	movlb	0	; () banked
  5889  011AA6  EE20 F004          	lfsr	2,4
  5890  011AAA  5160               	movf	ringbuf_put@rb& (0+255),w,b
  5891  011AAC  26D9               	addwf	fsr2l,f,c
  5892  011AAE  5161               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  5893  011AB0  22DA               	addwfc	fsr2h,f,c
  5894  011AB2  CFDE F063          	movff	postinc2,??_ringbuf_put
  5895  011AB6  CFDD F064          	movff	postdec2,??_ringbuf_put+1
  5896  011ABA  C060  FFD9         	movff	ringbuf_put@rb,fsr2l
  5897  011ABE  C061  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  5898  011AC2  CFDE F065          	movff	postinc2,??_ringbuf_put+2
  5899  011AC6  CFDD F066          	movff	postdec2,??_ringbuf_put+3
  5900  011ACA  0100               	movlb	0	; () banked
  5901  011ACC  5163               	movf	??_ringbuf_put& (0+255),w,b
  5902  011ACE  0100               	movlb	0	; () banked
  5903  011AD0  2565               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  5904  011AD2  6ED9               	movwf	fsr2l,c
  5905  011AD4  0100               	movlb	0	; () banked
  5906  011AD6  5164               	movf	(??_ringbuf_put+1)& (0+255),w,b
  5907  011AD8  0100               	movlb	0	; () banked
  5908  011ADA  2166               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  5909  011ADC  6EDA               	movwf	fsr2h,c
  5910  011ADE  C062  FFDF         	movff	ringbuf_put@asciicode,indf2
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
  5914  011AE2  0100               	movlb	0	; () banked
  5915  011AE4  EE20 F002          	lfsr	2,2
  5916  011AE8  5160               	movf	ringbuf_put@rb& (0+255),w,b
  5917  011AEA  26D9               	addwf	fsr2l,f,c
  5918  011AEC  5161               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  5919  011AEE  22DA               	addwfc	fsr2h,f,c
  5920  011AF0  0100               	movlb	0	; () banked
  5921  011AF2  EE10 F004          	lfsr	1,4
  5922  011AF6  5160               	movf	ringbuf_put@rb& (0+255),w,b
  5923  011AF8  26E1               	addwf	fsr1l,f,c
  5924  011AFA  5161               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  5925  011AFC  22E2               	addwfc	fsr1h,f,c
  5926  011AFE  CFE6 F065          	movff	postinc1,??_ringbuf_put+2
  5927  011B02  CFE5 F066          	movff	postdec1,??_ringbuf_put+3
  5928  011B06  0E01               	movlw	1
  5929  011B08  0100               	movlb	0	; () banked
  5930  011B0A  2765               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  5931  011B0C  0E00               	movlw	0
  5932  011B0E  2366               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  5933  011B10  50DE               	movf	postinc2,w,c
  5934  011B12  0100               	movlb	0	; () banked
  5935  011B14  5D65               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  5936  011B16  50DE               	movf	postinc2,w,c
  5937  011B18  0100               	movlb	0	; () banked
  5938  011B1A  5966               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  5939  011B1C  B0D8               	btfsc	status,0,c
  5940  011B1E  D00B               	goto	l4653
  5941                           
  5942                           ; BSR set to: 0
  5943  011B20  0100               	movlb	0	; () banked
  5944  011B22  EE20 F004          	lfsr	2,4
  5945  011B26  5160               	movf	ringbuf_put@rb& (0+255),w,b
  5946  011B28  26D9               	addwf	fsr2l,f,c
  5947  011B2A  5161               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  5948  011B2C  22DA               	addwfc	fsr2h,f,c
  5949  011B2E  2ADE               	incf	postinc2,f,c
  5950  011B30  0E00               	movlw	0
  5951  011B32  22DD               	addwfc	postdec2,f,c
  5952  011B34  0012               	return	
  5953  011B36                     l4653:
  5954                           
  5955                           ; BSR set to: 0
  5956                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
  5957  011B36  0100               	movlb	0	; () banked
  5958  011B38  EE20 F004          	lfsr	2,4
  5959  011B3C  5160               	movf	ringbuf_put@rb& (0+255),w,b
  5960  011B3E  26D9               	addwf	fsr2l,f,c
  5961  011B40  5161               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  5962  011B42  22DA               	addwfc	fsr2h,f,c
  5963  011B44  0E00               	movlw	0
  5964  011B46  6EDE               	movwf	postinc2,c
  5965  011B48  0E00               	movlw	0
  5966  011B4A  6EDD               	movwf	postdec2,c
  5967                           
  5968                           ; BSR set to: 0
  5969  011B4C  0012               	return	
  5970                           
  5971                           ; BSR set to: 0
  5972                           
  5973                           ; BSR set to: 0
  5974  011B4E  0012               	return		;funcret
  5975  011B50                     __end_of_ringbuf_put:
  5976                           	opt stack 0
  5977                           tblptru	equ	0xFF8
  5978                           tblptrh	equ	0xFF7
  5979                           tblptrl	equ	0xFF6
  5980                           tablat	equ	0xFF5
  5981                           prodh	equ	0xFF4
  5982                           prodl	equ	0xFF3
  5983                           intcon	equ	0xFF2
  5984                           postinc0	equ	0xFEE
  5985                           wreg	equ	0xFE8
  5986                           indf1	equ	0xFE7
  5987                           postinc1	equ	0xFE6
  5988                           postdec1	equ	0xFE5
  5989                           fsr1h	equ	0xFE2
  5990                           fsr1l	equ	0xFE1
  5991                           indf2	equ	0xFDF
  5992                           postinc2	equ	0xFDE
  5993                           postdec2	equ	0xFDD
  5994                           fsr2h	equ	0xFDA
  5995                           fsr2l	equ	0xFD9
  5996                           status	equ	0xFD8
  5997                           
  5998 ;; *************** function _ringbuf_num *****************
  5999 ;; Defined at:
  6000 ;;		line 31 in file "../My_header\My_ringbuf.h"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;  rb              2   30[COMRAM] PTR struct ringbuf
  6003 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;		None
  6006 ;; Return value:  Size  Location     Type
  6007 ;;                  2   30[COMRAM] unsigned int 
  6008 ;; Registers used:
  6009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6015 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6017 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6018 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6019 ;;Total ram usage:        8 bytes
  6020 ;; Hardware stack levels used:    1
  6021 ;; Hardware stack levels required when called:    4
  6022 ;; This function calls:
  6023 ;;		Nothing
  6024 ;; This function is called by:
  6025 ;;		_ringbuf_put
  6026 ;;		_ringbuf_pop
  6027 ;;		_ringbuf_backspace
  6028 ;;		_my_terminal_loop
  6029 ;;		_main
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           	psect	text18
  6034  011E7C                     __ptext18:
  6035                           	opt stack 0
  6036  011E7C                     _ringbuf_num:
  6037                           	opt stack 26
  6038                           
  6039                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;incstack = 0
  6043  011E7C  EE20 F006          	lfsr	2,6
  6044  011E80  501F               	movf	ringbuf_num@rb,w,c
  6045  011E82  26D9               	addwf	fsr2l,f,c
  6046  011E84  5020               	movf	ringbuf_num@rb+1,w,c
  6047  011E86  22DA               	addwfc	fsr2h,f,c
  6048  011E88  EE10 F004          	lfsr	1,4
  6049  011E8C  501F               	movf	ringbuf_num@rb,w,c
  6050  011E8E  26E1               	addwf	fsr1l,f,c
  6051  011E90  5020               	movf	ringbuf_num@rb+1,w,c
  6052  011E92  22E2               	addwfc	fsr1h,f,c
  6053  011E94  50DE               	movf	postinc2,w,c
  6054  011E96  5CE6               	subwf	postinc1,w,c
  6055  011E98  50DE               	movf	postinc2,w,c
  6056  011E9A  58E6               	subwfb	postinc1,w,c
  6057  011E9C  A0D8               	btfss	status,0,c
  6058  011E9E  D01F               	goto	l4549
  6059                           
  6060                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
  6061  011EA0  EE20 F004          	lfsr	2,4
  6062  011EA4  501F               	movf	ringbuf_num@rb,w,c
  6063  011EA6  26D9               	addwf	fsr2l,f,c
  6064  011EA8  5020               	movf	ringbuf_num@rb+1,w,c
  6065  011EAA  22DA               	addwfc	fsr2h,f,c
  6066  011EAC  CFDE F021          	movff	postinc2,??_ringbuf_num
  6067  011EB0  CFDD F022          	movff	postdec2,??_ringbuf_num+1
  6068  011EB4  EE20 F006          	lfsr	2,6
  6069  011EB8  501F               	movf	ringbuf_num@rb,w,c
  6070  011EBA  26D9               	addwf	fsr2l,f,c
  6071  011EBC  5020               	movf	ringbuf_num@rb+1,w,c
  6072  011EBE  22DA               	addwfc	fsr2h,f,c
  6073  011EC0  CFDE F023          	movff	postinc2,??_ringbuf_num+2
  6074  011EC4  CFDD F024          	movff	postdec2,??_ringbuf_num+3
  6075  011EC8  1E23               	comf	??_ringbuf_num+2,f,c
  6076  011ECA  1E24               	comf	??_ringbuf_num+3,f,c
  6077  011ECC  4A23               	infsnz	??_ringbuf_num+2,f,c
  6078  011ECE  2A24               	incf	??_ringbuf_num+3,f,c
  6079  011ED0  5021               	movf	??_ringbuf_num,w,c
  6080  011ED2  2423               	addwf	??_ringbuf_num+2,w,c
  6081  011ED4  6E1F               	movwf	?_ringbuf_num,c
  6082  011ED6  5022               	movf	??_ringbuf_num+1,w,c
  6083  011ED8  2024               	addwfc	??_ringbuf_num+3,w,c
  6084  011EDA  6E20               	movwf	?_ringbuf_num+1,c
  6085                           
  6086                           ;My_header\My_ringbuf.h: 34: } else {
  6087  011EDC  0012               	return	
  6088  011EDE                     l4549:
  6089                           
  6090                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
  6091  011EDE  EE20 F004          	lfsr	2,4
  6092  011EE2  501F               	movf	ringbuf_num@rb,w,c
  6093  011EE4  26D9               	addwf	fsr2l,f,c
  6094  011EE6  5020               	movf	ringbuf_num@rb+1,w,c
  6095  011EE8  22DA               	addwfc	fsr2h,f,c
  6096  011EEA  CFDE F021          	movff	postinc2,??_ringbuf_num
  6097  011EEE  CFDD F022          	movff	postdec2,??_ringbuf_num+1
  6098  011EF2  EE20 F002          	lfsr	2,2
  6099  011EF6  501F               	movf	ringbuf_num@rb,w,c
  6100  011EF8  26D9               	addwf	fsr2l,f,c
  6101  011EFA  5020               	movf	ringbuf_num@rb+1,w,c
  6102  011EFC  22DA               	addwfc	fsr2h,f,c
  6103  011EFE  CFDE F023          	movff	postinc2,??_ringbuf_num+2
  6104  011F02  CFDD F024          	movff	postdec2,??_ringbuf_num+3
  6105  011F06  EE20 F006          	lfsr	2,6
  6106  011F0A  501F               	movf	ringbuf_num@rb,w,c
  6107  011F0C  26D9               	addwf	fsr2l,f,c
  6108  011F0E  5020               	movf	ringbuf_num@rb+1,w,c
  6109  011F10  22DA               	addwfc	fsr2h,f,c
  6110  011F12  CFDE F025          	movff	postinc2,??_ringbuf_num+4
  6111  011F16  CFDD F026          	movff	postdec2,??_ringbuf_num+5
  6112  011F1A  1E25               	comf	??_ringbuf_num+4,f,c
  6113  011F1C  1E26               	comf	??_ringbuf_num+5,f,c
  6114  011F1E  4A25               	infsnz	??_ringbuf_num+4,f,c
  6115  011F20  2A26               	incf	??_ringbuf_num+5,f,c
  6116  011F22  5023               	movf	??_ringbuf_num+2,w,c
  6117  011F24  2625               	addwf	??_ringbuf_num+4,f,c
  6118  011F26  5024               	movf	??_ringbuf_num+3,w,c
  6119  011F28  2226               	addwfc	??_ringbuf_num+5,f,c
  6120  011F2A  5021               	movf	??_ringbuf_num,w,c
  6121  011F2C  2425               	addwf	??_ringbuf_num+4,w,c
  6122  011F2E  6E1F               	movwf	?_ringbuf_num,c
  6123  011F30  5022               	movf	??_ringbuf_num+1,w,c
  6124  011F32  2026               	addwfc	??_ringbuf_num+5,w,c
  6125  011F34  6E20               	movwf	?_ringbuf_num+1,c
  6126  011F36  0012               	return	
  6127  011F38  0012               	return		;funcret
  6128  011F3A                     __end_of_ringbuf_num:
  6129                           	opt stack 0
  6130                           tblptru	equ	0xFF8
  6131                           tblptrh	equ	0xFF7
  6132                           tblptrl	equ	0xFF6
  6133                           tablat	equ	0xFF5
  6134                           prodh	equ	0xFF4
  6135                           prodl	equ	0xFF3
  6136                           intcon	equ	0xFF2
  6137                           postinc0	equ	0xFEE
  6138                           wreg	equ	0xFE8
  6139                           indf1	equ	0xFE7
  6140                           postinc1	equ	0xFE6
  6141                           postdec1	equ	0xFE5
  6142                           fsr1h	equ	0xFE2
  6143                           fsr1l	equ	0xFE1
  6144                           indf2	equ	0xFDF
  6145                           postinc2	equ	0xFDE
  6146                           postdec2	equ	0xFDD
  6147                           fsr2h	equ	0xFDA
  6148                           fsr2l	equ	0xFD9
  6149                           status	equ	0xFD8
  6150                           
  6151 ;; *************** function _RTCC_from_caltime *****************
  6152 ;; Defined at:
  6153 ;;		line 236 in file "../My_header\My_RTCC.h"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;  ct              2   53[BANK0 ] PTR struct .
  6156 ;;		 -> caltime_now(7), 
  6157 ;;  ep              2   55[BANK0 ] PTR unsigned long 
  6158 ;;		 -> epoch_now(4), 
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;		None
  6161 ;; Return value:  Size  Location     Type
  6162 ;;		None               void
  6163 ;; Registers used:
  6164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6165 ;; Tracked objects:
  6166 ;;		On entry : 0/0
  6167 ;;		On exit  : 0/0
  6168 ;;		Unchanged: 0/0
  6169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6170 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6173 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6174 ;;Total ram usage:        4 bytes
  6175 ;; Hardware stack levels used:    1
  6176 ;; Hardware stack levels required when called:    7
  6177 ;; This function calls:
  6178 ;;		_caltime_to_RTCC
  6179 ;;		_caltime_to_epoch
  6180 ;;		_epoch_to_caltime
  6181 ;; This function is called by:
  6182 ;;		_command_at_hand
  6183 ;; This function uses a non-reentrant model
  6184 ;;
  6185                           
  6186                           	psect	text19
  6187  012C62                     __ptext19:
  6188                           	opt stack 0
  6189  012C62                     _RTCC_from_caltime:
  6190                           	opt stack 19
  6191                           
  6192                           ;My_header\My_RTCC.h: 237: caltime_to_epoch(ct, ep);
  6193                           
  6194                           ;incstack = 0
  6195  012C62  C095  F070         	movff	RTCC_from_caltime@ct,caltime_to_epoch@ct
  6196  012C66  C096  F071         	movff	RTCC_from_caltime@ct+1,caltime_to_epoch@ct+1
  6197  012C6A  C097  F072         	movff	RTCC_from_caltime@ep,caltime_to_epoch@ep
  6198  012C6E  C098  F073         	movff	RTCC_from_caltime@ep+1,caltime_to_epoch@ep+1
  6199  012C72  EC72  F087         	call	_caltime_to_epoch	;wreg free
  6200                           
  6201                           ;My_header\My_RTCC.h: 238: epoch_to_caltime(ct, ep);
  6202  012C76  C095  F085         	movff	RTCC_from_caltime@ct,epoch_to_caltime@ct
  6203  012C7A  C096  F086         	movff	RTCC_from_caltime@ct+1,epoch_to_caltime@ct+1
  6204  012C7E  C097  F087         	movff	RTCC_from_caltime@ep,epoch_to_caltime@ep
  6205  012C82  C098  F088         	movff	RTCC_from_caltime@ep+1,epoch_to_caltime@ep+1
  6206  012C86  EC0C  F08B         	call	_epoch_to_caltime	;wreg free
  6207                           
  6208                           ;My_header\My_RTCC.h: 239: caltime_to_RTCC(ct);
  6209  012C8A  C095  F061         	movff	RTCC_from_caltime@ct,caltime_to_RTCC@ct
  6210  012C8E  C096  F062         	movff	RTCC_from_caltime@ct+1,caltime_to_RTCC@ct+1
  6211  012C92  ECA8  F08D         	call	_caltime_to_RTCC	;wreg free
  6212  012C96  0012               	return		;funcret
  6213  012C98                     __end_of_RTCC_from_caltime:
  6214                           	opt stack 0
  6215                           tblptru	equ	0xFF8
  6216                           tblptrh	equ	0xFF7
  6217                           tblptrl	equ	0xFF6
  6218                           tablat	equ	0xFF5
  6219                           prodh	equ	0xFF4
  6220                           prodl	equ	0xFF3
  6221                           intcon	equ	0xFF2
  6222                           postinc0	equ	0xFEE
  6223                           wreg	equ	0xFE8
  6224                           indf1	equ	0xFE7
  6225                           postinc1	equ	0xFE6
  6226                           postdec1	equ	0xFE5
  6227                           fsr1h	equ	0xFE2
  6228                           fsr1l	equ	0xFE1
  6229                           indf2	equ	0xFDF
  6230                           postinc2	equ	0xFDE
  6231                           postdec2	equ	0xFDD
  6232                           fsr2h	equ	0xFDA
  6233                           fsr2l	equ	0xFD9
  6234                           status	equ	0xFD8
  6235                           
  6236 ;; *************** function _main_init *****************
  6237 ;; Defined at:
  6238 ;;		line 275 in file "PIC18F27J53-killifish_light04.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;		None
  6241 ;; Auto vars:     Size  Location     Type
  6242 ;;		None
  6243 ;; Return value:  Size  Location     Type
  6244 ;;		None               void
  6245 ;; Registers used:
  6246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6247 ;; Tracked objects:
  6248 ;;		On entry : 0/0
  6249 ;;		On exit  : 0/0
  6250 ;;		Unchanged: 0/0
  6251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6256 ;;Total ram usage:        0 bytes
  6257 ;; Hardware stack levels used:    1
  6258 ;; Hardware stack levels required when called:    5
  6259 ;; This function calls:
  6260 ;;		_ADC_init
  6261 ;;		_OSC_init
  6262 ;;		_PWM_init
  6263 ;;		_RTCC_init
  6264 ;;		_UART_init
  6265 ;;		_ringbuf_init
  6266 ;;		_timer0_init
  6267 ;;		_timer1_init
  6268 ;;		_timer3_init
  6269 ;; This function is called by:
  6270 ;;		_main
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274                           	psect	text20
  6275  0126DA                     __ptext20:
  6276                           	opt stack 0
  6277  0126DA                     _main_init:
  6278                           	opt stack 25
  6279                           
  6280                           ;PIC18F27J53-killifish_light04.c: 276: OSC_init();
  6281                           
  6282                           ;incstack = 0
  6283  0126DA  EC25  F097         	call	_OSC_init	;wreg free
  6284                           
  6285                           ;PIC18F27J53-killifish_light04.c: 277: TRISA = 0b11100111;
  6286  0126DE  0EE7               	movlw	231
  6287  0126E0  6E92               	movwf	3986,c	;volatile
  6288                           
  6289                           ;PIC18F27J53-killifish_light04.c: 278: TRISB = 0b00000000;
  6290  0126E2  0E00               	movlw	0
  6291  0126E4  6E93               	movwf	3987,c	;volatile
  6292                           
  6293                           ;PIC18F27J53-killifish_light04.c: 279: TRISC = 0b10111010;
  6294  0126E6  0EBA               	movlw	186
  6295  0126E8  6E94               	movwf	3988,c	;volatile
  6296                           
  6297                           ;PIC18F27J53-killifish_light04.c: 280: ANCON0 = 0b11111000;
  6298  0126EA  0EF8               	movlw	248
  6299  0126EC  010F               	movlb	15	; () banked
  6300  0126EE  6F48               	movwf	72,b	;volatile
  6301                           
  6302                           ; BSR set to: 15
  6303                           ;PIC18F27J53-killifish_light04.c: 281: ANCON1 = 0b00011111;
  6304  0126F0  0E1F               	movlw	31
  6305  0126F2  010F               	movlb	15	; () banked
  6306  0126F4  6F49               	movwf	73,b	;volatile
  6307                           
  6308                           ; BSR set to: 15
  6309                           ;PIC18F27J53-killifish_light04.c: 282: INTCON2bits.RBPU = 0;
  6310  0126F6  9EF1               	bcf	intcon2,7,c	;volatile
  6311                           
  6312                           ; BSR set to: 15
  6313                           ;PIC18F27J53-killifish_light04.c: 284: timer0_init(8);
  6314  0126F8  0E08               	movlw	8
  6315  0126FA  EC4C  F096         	call	_timer0_init
  6316                           
  6317                           ;PIC18F27J53-killifish_light04.c: 285: timer1_init(0, 2);
  6318  0126FE  0E02               	movlw	2
  6319  012700  6E1F               	movwf	timer1_init@clock_select,c
  6320  012702  0E00               	movlw	0
  6321  012704  EC0E  F096         	call	_timer1_init
  6322                           
  6323                           ;PIC18F27J53-killifish_light04.c: 286: timer3_init(2);
  6324  012708  0E02               	movlw	2
  6325  01270A  EC91  F096         	call	_timer3_init
  6326                           
  6327                           ;PIC18F27J53-killifish_light04.c: 287: ADC_init(0);
  6328  01270E  0E00               	movlw	0
  6329  012710  EC0A  F097         	call	_ADC_init
  6330                           
  6331                           ;PIC18F27J53-killifish_light04.c: 288: RTCC_init();
  6332  012714  EC65  F096         	call	_RTCC_init	;wreg free
  6333                           
  6334                           ;PIC18F27J53-killifish_light04.c: 289: PWM_init(250);
  6335  012718  0EFA               	movlw	250
  6336  01271A  EC58  F090         	call	_PWM_init
  6337                           
  6338                           ;PIC18F27J53-killifish_light04.c: 291: UART_init();
  6339  01271E  ECFA  F096         	call	_UART_init	;wreg free
  6340                           
  6341                           ;PIC18F27J53-killifish_light04.c: 292: static uint8_t txbuf[1000];
  6342                           ;PIC18F27J53-killifish_light04.c: 293: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
  6343  012722  0E2E               	movlw	low _tx_buf
  6344  012724  6E1F               	movwf	ringbuf_init@rb,c
  6345  012726  0E00               	movlw	high _tx_buf
  6346  012728  6E20               	movwf	ringbuf_init@rb+1,c
  6347  01272A  0EFA               	movlw	low main_init@txbuf
  6348  01272C  6E21               	movwf	ringbuf_init@internal_buf,c
  6349  01272E  0E02               	movlw	high main_init@txbuf
  6350  012730  6E22               	movwf	ringbuf_init@internal_buf+1,c
  6351  012732  0E03               	movlw	3
  6352  012734  6E24               	movwf	ringbuf_init@bufsize+1,c
  6353  012736  0EE8               	movlw	232
  6354  012738  6E23               	movwf	ringbuf_init@bufsize,c
  6355  01273A  EC77  F095         	call	_ringbuf_init	;wreg free
  6356                           
  6357                           ;PIC18F27J53-killifish_light04.c: 294: static uint8_t rxbuf[250];
  6358                           ;PIC18F27J53-killifish_light04.c: 295: ringbuf_init(&rx_buf, rxbuf, sizeof (rxbuf));
  6359  01273E  0EE2               	movlw	low _rx_buf
  6360  012740  6E1F               	movwf	ringbuf_init@rb,c
  6361  012742  0E00               	movlw	high _rx_buf
  6362  012744  6E20               	movwf	ringbuf_init@rb+1,c
  6363  012746  0E00               	movlw	low main_init@rxbuf
  6364  012748  6E21               	movwf	ringbuf_init@internal_buf,c
  6365  01274A  0E02               	movlw	high main_init@rxbuf
  6366  01274C  6E22               	movwf	ringbuf_init@internal_buf+1,c
  6367  01274E  0E00               	movlw	0
  6368  012750  6E24               	movwf	ringbuf_init@bufsize+1,c
  6369  012752  0EFA               	movlw	250
  6370  012754  6E23               	movwf	ringbuf_init@bufsize,c
  6371  012756  EC77  F095         	call	_ringbuf_init	;wreg free
  6372  01275A  0012               	return		;funcret
  6373  01275C                     __end_of_main_init:
  6374                           	opt stack 0
  6375                           tblptru	equ	0xFF8
  6376                           tblptrh	equ	0xFF7
  6377                           tblptrl	equ	0xFF6
  6378                           tablat	equ	0xFF5
  6379                           prodh	equ	0xFF4
  6380                           prodl	equ	0xFF3
  6381                           intcon	equ	0xFF2
  6382                           intcon2	equ	0xFF1
  6383                           postinc0	equ	0xFEE
  6384                           wreg	equ	0xFE8
  6385                           indf1	equ	0xFE7
  6386                           postinc1	equ	0xFE6
  6387                           postdec1	equ	0xFE5
  6388                           fsr1h	equ	0xFE2
  6389                           fsr1l	equ	0xFE1
  6390                           indf2	equ	0xFDF
  6391                           postinc2	equ	0xFDE
  6392                           postdec2	equ	0xFDD
  6393                           fsr2h	equ	0xFDA
  6394                           fsr2l	equ	0xFD9
  6395                           status	equ	0xFD8
  6396                           
  6397 ;; *************** function _timer3_init *****************
  6398 ;; Defined at:
  6399 ;;		line 85 in file "../My_header\My_header.h"
  6400 ;; Parameters:    Size  Location     Type
  6401 ;;  prescaler       1    wreg     unsigned char 
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;  prescaler       1   31[COMRAM] unsigned char 
  6404 ;; Return value:  Size  Location     Type
  6405 ;;		None               void
  6406 ;; Registers used:
  6407 ;;		wreg, status,2, status,0
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6415 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6416 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6417 ;;Total ram usage:        2 bytes
  6418 ;; Hardware stack levels used:    1
  6419 ;; Hardware stack levels required when called:    4
  6420 ;; This function calls:
  6421 ;;		Nothing
  6422 ;; This function is called by:
  6423 ;;		_main_init
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           	psect	text21
  6428  012D22                     __ptext21:
  6429                           	opt stack 0
  6430  012D22                     _timer3_init:
  6431                           	opt stack 25
  6432                           
  6433                           ;incstack = 0
  6434                           ;timer3_init@prescaler stored from wreg
  6435  012D22  6E20               	movwf	timer3_init@prescaler,c
  6436                           
  6437                           ;My_header\My_header.h: 86: T3CONbits.TMR3CS = 0;
  6438  012D24  0E3F               	movlw	-193
  6439  012D26  1679               	andwf	3961,f,c	;volatile
  6440                           
  6441                           ;My_header\My_header.h: 87: T3CONbits.T3OSCEN = 0;
  6442  012D28  9679               	bcf	3961,3,c	;volatile
  6443                           
  6444                           ;My_header\My_header.h: 88: T3CONbits.T3CKPS = prescaler;
  6445  012D2A  C020  F01F         	movff	timer3_init@prescaler,??_timer3_init
  6446  012D2E  3A1F               	swapf	??_timer3_init,f,c
  6447  012D30  5079               	movf	3961,w,c	;volatile
  6448  012D32  181F               	xorwf	??_timer3_init,w,c
  6449  012D34  0BCF               	andlw	-49
  6450  012D36  181F               	xorwf	??_timer3_init,w,c
  6451  012D38  6E79               	movwf	3961,c	;volatile
  6452                           
  6453                           ;My_header\My_header.h: 89: T3CONbits.RD163 = 0;
  6454  012D3A  9E79               	bcf	3961,7,c	;volatile
  6455                           
  6456                           ;My_header\My_header.h: 90: T3CONbits.TMR3ON = 1;
  6457  012D3C  8079               	bsf	3961,0,c	;volatile
  6458                           
  6459                           ;My_header\My_header.h: 91: IPR2bits.TMR3IP = 0;
  6460  012D3E  92A2               	bcf	4002,1,c	;volatile
  6461                           
  6462                           ;My_header\My_header.h: 92: PIR2bits.TMR3IF = 0;
  6463  012D40  92A1               	bcf	4001,1,c	;volatile
  6464                           
  6465                           ;My_header\My_header.h: 93: PIE2bits.TMR3IE = 1;
  6466  012D42  82A0               	bsf	4000,1,c	;volatile
  6467                           
  6468                           ;My_header\My_header.h: 94: INTCONbits.PEIE = 1;
  6469  012D44  8CF2               	bsf	intcon,6,c	;volatile
  6470  012D46  0012               	return		;funcret
  6471  012D48                     __end_of_timer3_init:
  6472                           	opt stack 0
  6473                           tblptru	equ	0xFF8
  6474                           tblptrh	equ	0xFF7
  6475                           tblptrl	equ	0xFF6
  6476                           tablat	equ	0xFF5
  6477                           prodh	equ	0xFF4
  6478                           prodl	equ	0xFF3
  6479                           intcon	equ	0xFF2
  6480                           intcon2	equ	0xFF1
  6481                           postinc0	equ	0xFEE
  6482                           wreg	equ	0xFE8
  6483                           indf1	equ	0xFE7
  6484                           postinc1	equ	0xFE6
  6485                           postdec1	equ	0xFE5
  6486                           fsr1h	equ	0xFE2
  6487                           fsr1l	equ	0xFE1
  6488                           indf2	equ	0xFDF
  6489                           postinc2	equ	0xFDE
  6490                           postdec2	equ	0xFDD
  6491                           fsr2h	equ	0xFDA
  6492                           fsr2l	equ	0xFD9
  6493                           status	equ	0xFD8
  6494                           
  6495 ;; *************** function _timer1_init *****************
  6496 ;; Defined at:
  6497 ;;		line 54 in file "../My_header\My_header.h"
  6498 ;; Parameters:    Size  Location     Type
  6499 ;;  prescaler       1    wreg     unsigned char 
  6500 ;;  clock_select    1   30[COMRAM] unsigned char 
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;  prescaler       1   32[COMRAM] unsigned char 
  6503 ;; Return value:  Size  Location     Type
  6504 ;;		None               void
  6505 ;; Registers used:
  6506 ;;		wreg, status,2, status,0
  6507 ;; Tracked objects:
  6508 ;;		On entry : 0/0
  6509 ;;		On exit  : 0/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6512 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6513 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6514 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6515 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6516 ;;Total ram usage:        3 bytes
  6517 ;; Hardware stack levels used:    1
  6518 ;; Hardware stack levels required when called:    4
  6519 ;; This function calls:
  6520 ;;		Nothing
  6521 ;; This function is called by:
  6522 ;;		_main_init
  6523 ;; This function uses a non-reentrant model
  6524 ;;
  6525                           
  6526                           	psect	text22
  6527  012C1C                     __ptext22:
  6528                           	opt stack 0
  6529  012C1C                     _timer1_init:
  6530                           	opt stack 25
  6531                           
  6532                           ;incstack = 0
  6533                           ;timer1_init@prescaler stored from wreg
  6534  012C1C  6E21               	movwf	timer1_init@prescaler,c
  6535                           
  6536                           ;My_header\My_header.h: 55: T1CONbits.TMR1CS = clock_select;
  6537  012C1E  C01F  F020         	movff	timer1_init@clock_select,??_timer1_init
  6538  012C22  3A20               	swapf	??_timer1_init,f,c
  6539  012C24  4620               	rlncf	??_timer1_init,f,c
  6540  012C26  4620               	rlncf	??_timer1_init,f,c
  6541  012C28  50CD               	movf	4045,w,c	;volatile
  6542  012C2A  1820               	xorwf	??_timer1_init,w,c
  6543  012C2C  0B3F               	andlw	-193
  6544  012C2E  1820               	xorwf	??_timer1_init,w,c
  6545  012C30  6ECD               	movwf	4045,c	;volatile
  6546                           
  6547                           ;My_header\My_header.h: 56: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  6548  012C32  0E02               	movlw	2
  6549  012C34  181F               	xorwf	timer1_init@clock_select,w,c
  6550  012C36  A4D8               	btfss	status,2,c
  6551  012C38  D002               	goto	l146
  6552  012C3A  86CD               	bsf	4045,3,c	;volatile
  6553  012C3C  D002               	goto	l3637
  6554  012C3E                     l146:
  6555                           
  6556                           ;My_header\My_header.h: 57: else T1CONbits.T1OSCEN = 0;
  6557  012C3E  96CD               	bcf	4045,3,c	;volatile
  6558  012C40  D000               	goto	l3637
  6559  012C42                     l3637:
  6560                           
  6561                           ;My_header\My_header.h: 58: T1CONbits.T1CKPS = prescaler;
  6562  012C42  C021  F020         	movff	timer1_init@prescaler,??_timer1_init
  6563  012C46  3A20               	swapf	??_timer1_init,f,c
  6564  012C48  50CD               	movf	4045,w,c	;volatile
  6565  012C4A  1820               	xorwf	??_timer1_init,w,c
  6566  012C4C  0BCF               	andlw	-49
  6567  012C4E  1820               	xorwf	??_timer1_init,w,c
  6568  012C50  6ECD               	movwf	4045,c	;volatile
  6569                           
  6570                           ;My_header\My_header.h: 59: T1CONbits.nT1SYNC = 1;
  6571  012C52  84CD               	bsf	4045,2,c	;volatile
  6572                           
  6573                           ;My_header\My_header.h: 60: T1CONbits.RD16 = 0;
  6574  012C54  92CD               	bcf	4045,1,c	;volatile
  6575                           
  6576                           ;My_header\My_header.h: 61: T1CONbits.TMR1ON = 1;
  6577  012C56  80CD               	bsf	4045,0,c	;volatile
  6578                           
  6579                           ;My_header\My_header.h: 62: IPR1bits.TMR1IP = 0;
  6580  012C58  909F               	bcf	3999,0,c	;volatile
  6581                           
  6582                           ;My_header\My_header.h: 63: PIR1bits.TMR1IF = 0;
  6583  012C5A  909E               	bcf	3998,0,c	;volatile
  6584                           
  6585                           ;My_header\My_header.h: 64: PIE1bits.TMR1IE = 1;
  6586  012C5C  809D               	bsf	3997,0,c	;volatile
  6587                           
  6588                           ;My_header\My_header.h: 65: INTCONbits.PEIE = 1;
  6589  012C5E  8CF2               	bsf	intcon,6,c	;volatile
  6590  012C60  0012               	return		;funcret
  6591  012C62                     __end_of_timer1_init:
  6592                           	opt stack 0
  6593                           tblptru	equ	0xFF8
  6594                           tblptrh	equ	0xFF7
  6595                           tblptrl	equ	0xFF6
  6596                           tablat	equ	0xFF5
  6597                           prodh	equ	0xFF4
  6598                           prodl	equ	0xFF3
  6599                           intcon	equ	0xFF2
  6600                           intcon2	equ	0xFF1
  6601                           postinc0	equ	0xFEE
  6602                           wreg	equ	0xFE8
  6603                           indf1	equ	0xFE7
  6604                           postinc1	equ	0xFE6
  6605                           postdec1	equ	0xFE5
  6606                           fsr1h	equ	0xFE2
  6607                           fsr1l	equ	0xFE1
  6608                           indf2	equ	0xFDF
  6609                           postinc2	equ	0xFDE
  6610                           postdec2	equ	0xFDD
  6611                           fsr2h	equ	0xFDA
  6612                           fsr2l	equ	0xFD9
  6613                           status	equ	0xFD8
  6614                           
  6615 ;; *************** function _timer0_init *****************
  6616 ;; Defined at:
  6617 ;;		line 15 in file "../My_header\My_header.h"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;  prescaler       1    wreg     unsigned char 
  6620 ;; Auto vars:     Size  Location     Type
  6621 ;;  prescaler       1   31[COMRAM] unsigned char 
  6622 ;; Return value:  Size  Location     Type
  6623 ;;		None               void
  6624 ;; Registers used:
  6625 ;;		wreg, status,2, status,0
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6632 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6633 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6634 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6635 ;;Total ram usage:        2 bytes
  6636 ;; Hardware stack levels used:    1
  6637 ;; Hardware stack levels required when called:    4
  6638 ;; This function calls:
  6639 ;;		Nothing
  6640 ;; This function is called by:
  6641 ;;		_main_init
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           	psect	text23
  6646  012C98                     __ptext23:
  6647                           	opt stack 0
  6648  012C98                     _timer0_init:
  6649                           	opt stack 25
  6650                           
  6651                           ;incstack = 0
  6652                           ;timer0_init@prescaler stored from wreg
  6653  012C98  6E20               	movwf	timer0_init@prescaler,c
  6654                           
  6655                           ;My_header\My_header.h: 16: T0CONbits.TMR0ON = 1;
  6656  012C9A  8ED5               	bsf	4053,7,c	;volatile
  6657                           
  6658                           ;My_header\My_header.h: 17: T0CONbits.T08BIT = 1;
  6659  012C9C  8CD5               	bsf	4053,6,c	;volatile
  6660                           
  6661                           ;My_header\My_header.h: 18: T0CONbits.T0CS = 0;
  6662  012C9E  9AD5               	bcf	4053,5,c	;volatile
  6663                           
  6664                           ;My_header\My_header.h: 19: if (prescaler == 0) {
  6665  012CA0  5020               	movf	timer0_init@prescaler,w,c
  6666  012CA2  A4D8               	btfss	status,2,c
  6667  012CA4  D002               	goto	l141
  6668                           
  6669                           ;My_header\My_header.h: 20: T0CONbits.PSA = 1;
  6670  012CA6  86D5               	bsf	4053,3,c	;volatile
  6671                           
  6672                           ;My_header\My_header.h: 21: } else {
  6673  012CA8  D00B               	goto	l3625
  6674  012CAA                     l141:
  6675                           
  6676                           ;My_header\My_header.h: 22: T0CONbits.PSA = 0;
  6677  012CAA  96D5               	bcf	4053,3,c	;volatile
  6678                           
  6679                           ;My_header\My_header.h: 23: T0CONbits.T0PS = prescaler - 1;
  6680  012CAC  C020  F01F         	movff	timer0_init@prescaler,??_timer0_init
  6681  012CB0  0EFF               	movlw	255
  6682  012CB2  261F               	addwf	??_timer0_init,f,c
  6683  012CB4  50D5               	movf	4053,w,c	;volatile
  6684  012CB6  181F               	xorwf	??_timer0_init,w,c
  6685  012CB8  0BF8               	andlw	-8
  6686  012CBA  181F               	xorwf	??_timer0_init,w,c
  6687  012CBC  6ED5               	movwf	4053,c	;volatile
  6688  012CBE  D000               	goto	l3625
  6689  012CC0                     l3625:
  6690                           
  6691                           ;My_header\My_header.h: 24: }
  6692                           ;My_header\My_header.h: 25: INTCONbits.T0IE = 1;
  6693  012CC0  8AF2               	bsf	intcon,5,c	;volatile
  6694                           
  6695                           ;My_header\My_header.h: 26: INTCONbits.TMR0IF = 0;
  6696  012CC2  94F2               	bcf	intcon,2,c	;volatile
  6697                           
  6698                           ;My_header\My_header.h: 27: INTCON2bits.TMR0IP = 0;
  6699  012CC4  94F1               	bcf	intcon2,2,c	;volatile
  6700                           
  6701                           ;My_header\My_header.h: 28: INTCONbits.PEIE = 1;
  6702  012CC6  8CF2               	bsf	intcon,6,c	;volatile
  6703  012CC8  0012               	return		;funcret
  6704  012CCA                     __end_of_timer0_init:
  6705                           	opt stack 0
  6706                           tblptru	equ	0xFF8
  6707                           tblptrh	equ	0xFF7
  6708                           tblptrl	equ	0xFF6
  6709                           tablat	equ	0xFF5
  6710                           prodh	equ	0xFF4
  6711                           prodl	equ	0xFF3
  6712                           intcon	equ	0xFF2
  6713                           intcon2	equ	0xFF1
  6714                           postinc0	equ	0xFEE
  6715                           wreg	equ	0xFE8
  6716                           indf1	equ	0xFE7
  6717                           postinc1	equ	0xFE6
  6718                           postdec1	equ	0xFE5
  6719                           fsr1h	equ	0xFE2
  6720                           fsr1l	equ	0xFE1
  6721                           indf2	equ	0xFDF
  6722                           postinc2	equ	0xFDE
  6723                           postdec2	equ	0xFDD
  6724                           fsr2h	equ	0xFDA
  6725                           fsr2l	equ	0xFD9
  6726                           status	equ	0xFD8
  6727                           
  6728 ;; *************** function _ringbuf_init *****************
  6729 ;; Defined at:
  6730 ;;		line 24 in file "../My_header\My_ringbuf.h"
  6731 ;; Parameters:    Size  Location     Type
  6732 ;;  rb              2   30[COMRAM] PTR struct ringbuf
  6733 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
  6734 ;;  internal_buf    2   32[COMRAM] PTR unsigned char 
  6735 ;;		 -> main_init@rxbuf(250), main_init@txbuf(1000), my_terminal_loop@buf(100), 
  6736 ;;  bufsize         2   34[COMRAM] unsigned int 
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;		None
  6739 ;; Return value:  Size  Location     Type
  6740 ;;		None               void
  6741 ;; Registers used:
  6742 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6748 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6751 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6752 ;;Total ram usage:        6 bytes
  6753 ;; Hardware stack levels used:    1
  6754 ;; Hardware stack levels required when called:    4
  6755 ;; This function calls:
  6756 ;;		Nothing
  6757 ;; This function is called by:
  6758 ;;		_my_terminal_loop
  6759 ;;		_main_init
  6760 ;; This function uses a non-reentrant model
  6761 ;;
  6762                           
  6763                           	psect	text24
  6764  012AEE                     __ptext24:
  6765                           	opt stack 0
  6766  012AEE                     _ringbuf_init:
  6767                           	opt stack 25
  6768                           
  6769                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
  6770                           
  6771                           ;incstack = 0
  6772  012AEE  C01F  FFD9         	movff	ringbuf_init@rb,fsr2l
  6773  012AF2  C020  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  6774  012AF6  C021  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  6775  012AFA  C022  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  6776                           
  6777                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
  6778  012AFE  EE20 F002          	lfsr	2,2
  6779  012B02  501F               	movf	ringbuf_init@rb,w,c
  6780  012B04  26D9               	addwf	fsr2l,f,c
  6781  012B06  5020               	movf	ringbuf_init@rb+1,w,c
  6782  012B08  22DA               	addwfc	fsr2h,f,c
  6783  012B0A  C023  FFDE         	movff	ringbuf_init@bufsize,postinc2
  6784  012B0E  C024  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  6785                           
  6786                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
  6787  012B12  EE20 F004          	lfsr	2,4
  6788  012B16  501F               	movf	ringbuf_init@rb,w,c
  6789  012B18  26D9               	addwf	fsr2l,f,c
  6790  012B1A  5020               	movf	ringbuf_init@rb+1,w,c
  6791  012B1C  22DA               	addwfc	fsr2h,f,c
  6792  012B1E  0E00               	movlw	0
  6793  012B20  6EDE               	movwf	postinc2,c
  6794  012B22  0E00               	movlw	0
  6795  012B24  6EDD               	movwf	postdec2,c
  6796                           
  6797                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
  6798  012B26  EE20 F006          	lfsr	2,6
  6799  012B2A  501F               	movf	ringbuf_init@rb,w,c
  6800  012B2C  26D9               	addwf	fsr2l,f,c
  6801  012B2E  5020               	movf	ringbuf_init@rb+1,w,c
  6802  012B30  22DA               	addwfc	fsr2h,f,c
  6803  012B32  0E00               	movlw	0
  6804  012B34  6EDE               	movwf	postinc2,c
  6805  012B36  0E00               	movlw	0
  6806  012B38  6EDD               	movwf	postdec2,c
  6807  012B3A  0012               	return		;funcret
  6808  012B3C                     __end_of_ringbuf_init:
  6809                           	opt stack 0
  6810                           tblptru	equ	0xFF8
  6811                           tblptrh	equ	0xFF7
  6812                           tblptrl	equ	0xFF6
  6813                           tablat	equ	0xFF5
  6814                           prodh	equ	0xFF4
  6815                           prodl	equ	0xFF3
  6816                           intcon	equ	0xFF2
  6817                           intcon2	equ	0xFF1
  6818                           postinc0	equ	0xFEE
  6819                           wreg	equ	0xFE8
  6820                           indf1	equ	0xFE7
  6821                           postinc1	equ	0xFE6
  6822                           postdec1	equ	0xFE5
  6823                           fsr1h	equ	0xFE2
  6824                           fsr1l	equ	0xFE1
  6825                           indf2	equ	0xFDF
  6826                           postinc2	equ	0xFDE
  6827                           postdec2	equ	0xFDD
  6828                           fsr2h	equ	0xFDA
  6829                           fsr2l	equ	0xFD9
  6830                           status	equ	0xFD8
  6831                           
  6832 ;; *************** function _UART_init *****************
  6833 ;; Defined at:
  6834 ;;		line 192 in file "../My_header\My_header.h"
  6835 ;; Parameters:    Size  Location     Type
  6836 ;;		None
  6837 ;; Auto vars:     Size  Location     Type
  6838 ;;		None
  6839 ;; Return value:  Size  Location     Type
  6840 ;;		None               void
  6841 ;; Registers used:
  6842 ;;		wreg, status,2
  6843 ;; Tracked objects:
  6844 ;;		On entry : 0/0
  6845 ;;		On exit  : 0/0
  6846 ;;		Unchanged: 0/0
  6847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6852 ;;Total ram usage:        0 bytes
  6853 ;; Hardware stack levels used:    1
  6854 ;; Hardware stack levels required when called:    4
  6855 ;; This function calls:
  6856 ;;		Nothing
  6857 ;; This function is called by:
  6858 ;;		_main_init
  6859 ;; This function uses a non-reentrant model
  6860 ;;
  6861                           
  6862                           	psect	text25
  6863  012DF4                     __ptext25:
  6864                           	opt stack 0
  6865  012DF4                     _UART_init:
  6866                           	opt stack 25
  6867                           
  6868                           ;My_header\My_header.h: 193: TXSTA1bits.TX9 = 0;
  6869                           
  6870                           ;incstack = 0
  6871  012DF4  9CAD               	bcf	4013,6,c	;volatile
  6872                           
  6873                           ;My_header\My_header.h: 194: TXSTA1bits.TXEN = 1;
  6874  012DF6  8AAD               	bsf	4013,5,c	;volatile
  6875                           
  6876                           ;My_header\My_header.h: 195: TXSTA1bits.SYNC = 0;
  6877  012DF8  98AD               	bcf	4013,4,c	;volatile
  6878                           
  6879                           ;My_header\My_header.h: 196: TXSTA1bits.BRGH = 0;
  6880  012DFA  94AD               	bcf	4013,2,c	;volatile
  6881                           
  6882                           ;My_header\My_header.h: 197: RCSTA1bits.SPEN = 1;
  6883  012DFC  8EAC               	bsf	4012,7,c	;volatile
  6884                           
  6885                           ;My_header\My_header.h: 198: RCSTA1bits.RX9 = 0;
  6886  012DFE  9CAC               	bcf	4012,6,c	;volatile
  6887                           
  6888                           ;My_header\My_header.h: 199: RCSTA1bits.CREN = 1;
  6889  012E00  88AC               	bsf	4012,4,c	;volatile
  6890                           
  6891                           ;My_header\My_header.h: 200: BAUDCON1bits.BRG16 = 0;
  6892  012E02  967E               	bcf	3966,3,c	;volatile
  6893                           
  6894                           ;My_header\My_header.h: 201: SPBRG1 = 48000000 / 64 / 9600 - 1;
  6895  012E04  0E4D               	movlw	77
  6896  012E06  6EB0               	movwf	4016,c	;volatile
  6897                           
  6898                           ;My_header\My_header.h: 202: SPBRGH1 = 0;
  6899  012E08  0E00               	movlw	0
  6900  012E0A  6E7F               	movwf	3967,c	;volatile
  6901                           
  6902                           ;My_header\My_header.h: 203: IPR1bits.RC1IP = 0;
  6903  012E0C  9A9F               	bcf	3999,5,c	;volatile
  6904                           
  6905                           ;My_header\My_header.h: 204: PIE1bits.RCIE = 1;
  6906  012E0E  8A9D               	bsf	3997,5,c	;volatile
  6907                           
  6908                           ;My_header\My_header.h: 205: INTCONbits.PEIE = 1;
  6909  012E10  8CF2               	bsf	intcon,6,c	;volatile
  6910  012E12  0012               	return		;funcret
  6911  012E14                     __end_of_UART_init:
  6912                           	opt stack 0
  6913                           tblptru	equ	0xFF8
  6914                           tblptrh	equ	0xFF7
  6915                           tblptrl	equ	0xFF6
  6916                           tablat	equ	0xFF5
  6917                           prodh	equ	0xFF4
  6918                           prodl	equ	0xFF3
  6919                           intcon	equ	0xFF2
  6920                           intcon2	equ	0xFF1
  6921                           postinc0	equ	0xFEE
  6922                           wreg	equ	0xFE8
  6923                           indf1	equ	0xFE7
  6924                           postinc1	equ	0xFE6
  6925                           postdec1	equ	0xFE5
  6926                           fsr1h	equ	0xFE2
  6927                           fsr1l	equ	0xFE1
  6928                           indf2	equ	0xFDF
  6929                           postinc2	equ	0xFDE
  6930                           postdec2	equ	0xFDD
  6931                           fsr2h	equ	0xFDA
  6932                           fsr2l	equ	0xFD9
  6933                           status	equ	0xFD8
  6934                           
  6935 ;; *************** function _RTCC_init *****************
  6936 ;; Defined at:
  6937 ;;		line 56 in file "../My_header\My_RTCC.h"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;		None
  6940 ;; Auto vars:     Size  Location     Type
  6941 ;;		None
  6942 ;; Return value:  Size  Location     Type
  6943 ;;		None               void
  6944 ;; Registers used:
  6945 ;;		wreg, status,2
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/0
  6948 ;;		On exit  : 0/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6955 ;;Total ram usage:        0 bytes
  6956 ;; Hardware stack levels used:    1
  6957 ;; Hardware stack levels required when called:    4
  6958 ;; This function calls:
  6959 ;;		Nothing
  6960 ;; This function is called by:
  6961 ;;		_main_init
  6962 ;; This function uses a non-reentrant model
  6963 ;;
  6964                           
  6965                           	psect	text26
  6966  012CCA                     __ptext26:
  6967                           	opt stack 0
  6968  012CCA                     _RTCC_init:
  6969                           	opt stack 25
  6970                           
  6971                           ;My_header\My_RTCC.h: 57: RTCCFGbits.RTCWREN = 1;
  6972                           
  6973                           ;incstack = 0
  6974  012CCA  010F               	movlb	15	; () banked
  6975  012CCC  8B3F               	bsf	63,5,b	;volatile
  6976                           
  6977                           ;My_header\My_RTCC.h: 58: if (RTCCFGbits.RTCWREN != 1) {
  6978  012CCE  010F               	movlb	15	; () banked
  6979  012CD0  BB3F               	btfsc	63,5,b	;volatile
  6980  012CD2  D007               	goto	l3755
  6981                           
  6982                           ; BSR set to: 15
  6983                           ;My_header\My_RTCC.h: 59: EECON2 = 0x55;
  6984  012CD4  0E55               	movlw	85
  6985  012CD6  6EA7               	movwf	4007,c	;volatile
  6986                           
  6987                           ;My_header\My_RTCC.h: 60: EECON2 = 0xAA;
  6988  012CD8  0EAA               	movlw	170
  6989  012CDA  6EA7               	movwf	4007,c	;volatile
  6990                           
  6991                           ; BSR set to: 15
  6992                           ;My_header\My_RTCC.h: 61: RTCCFGbits.RTCWREN = 1;
  6993  012CDC  010F               	movlb	15	; () banked
  6994  012CDE  8B3F               	bsf	63,5,b	;volatile
  6995  012CE0  D000               	goto	l3755
  6996  012CE2                     l3755:
  6997                           
  6998                           ; BSR set to: 15
  6999                           ;My_header\My_RTCC.h: 62: }
  7000                           ;My_header\My_RTCC.h: 63: RTCCFGbits.RTCEN = 1;
  7001  012CE2  010F               	movlb	15	; () banked
  7002  012CE4  8F3F               	bsf	63,7,b	;volatile
  7003                           
  7004                           ; BSR set to: 15
  7005                           ;My_header\My_RTCC.h: 64: RTCCFGbits.RTCOE = 0;
  7006  012CE6  010F               	movlb	15	; () banked
  7007  012CE8  953F               	bcf	63,2,b	;volatile
  7008                           
  7009                           ; BSR set to: 15
  7010                           ;My_header\My_RTCC.h: 65: PADCFG1bits.RTSECSEL0 = 1;
  7011  012CEA  010F               	movlb	15	; () banked
  7012  012CEC  833C               	bsf	60,1,b	;volatile
  7013                           
  7014                           ; BSR set to: 15
  7015                           ;My_header\My_RTCC.h: 66: PADCFG1bits.RTSECSEL1 = 1;
  7016  012CEE  010F               	movlb	15	; () banked
  7017  012CF0  853C               	bsf	60,2,b	;volatile
  7018                           
  7019                           ;My_header\My_RTCC.h: 67: RTCCAL = 0x00;
  7020  012CF2  0E00               	movlw	0
  7021  012CF4  010F               	movlb	15	; () banked
  7022  012CF6  6F3E               	movwf	62,b	;volatile
  7023                           
  7024                           ; BSR set to: 15
  7025  012CF8  0012               	return		;funcret
  7026  012CFA                     __end_of_RTCC_init:
  7027                           	opt stack 0
  7028                           tblptru	equ	0xFF8
  7029                           tblptrh	equ	0xFF7
  7030                           tblptrl	equ	0xFF6
  7031                           tablat	equ	0xFF5
  7032                           prodh	equ	0xFF4
  7033                           prodl	equ	0xFF3
  7034                           intcon	equ	0xFF2
  7035                           intcon2	equ	0xFF1
  7036                           postinc0	equ	0xFEE
  7037                           wreg	equ	0xFE8
  7038                           indf1	equ	0xFE7
  7039                           postinc1	equ	0xFE6
  7040                           postdec1	equ	0xFE5
  7041                           fsr1h	equ	0xFE2
  7042                           fsr1l	equ	0xFE1
  7043                           indf2	equ	0xFDF
  7044                           postinc2	equ	0xFDE
  7045                           postdec2	equ	0xFDD
  7046                           fsr2h	equ	0xFDA
  7047                           fsr2l	equ	0xFD9
  7048                           status	equ	0xFD8
  7049                           
  7050 ;; *************** function _PWM_init *****************
  7051 ;; Defined at:
  7052 ;;		line 73 in file "PIC18F27J53-killifish_light04.c"
  7053 ;; Parameters:    Size  Location     Type
  7054 ;;  PR              1    wreg     unsigned char 
  7055 ;; Auto vars:     Size  Location     Type
  7056 ;;  PR              1   30[COMRAM] unsigned char 
  7057 ;; Return value:  Size  Location     Type
  7058 ;;		None               void
  7059 ;; Registers used:
  7060 ;;		wreg, status,2, status,0
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7067 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7069 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7070 ;;Total ram usage:        1 bytes
  7071 ;; Hardware stack levels used:    1
  7072 ;; Hardware stack levels required when called:    4
  7073 ;; This function calls:
  7074 ;;		Nothing
  7075 ;; This function is called by:
  7076 ;;		_main_init
  7077 ;; This function uses a non-reentrant model
  7078 ;;
  7079                           
  7080                           	psect	text27
  7081  0120B0                     __ptext27:
  7082                           	opt stack 0
  7083  0120B0                     _PWM_init:
  7084                           	opt stack 25
  7085                           
  7086                           ; BSR set to: 15
  7087                           ;incstack = 0
  7088                           ;PWM_init@PR stored from wreg
  7089  0120B0  6E1F               	movwf	PWM_init@PR,c
  7090                           
  7091                           ;PIC18F27J53-killifish_light04.c: 74: PPSCONbits.IOLOCK = 0;
  7092  0120B2  010E               	movlb	14	; () banked
  7093  0120B4  91BF               	bcf	191,0,b	;volatile
  7094                           
  7095                           ;PIC18F27J53-killifish_light04.c: 75: if (PPSCONbits.IOLOCK != 0) {
  7096  0120B6  010E               	movlb	14	; () banked
  7097  0120B8  A1BF               	btfss	191,0,b	;volatile
  7098  0120BA  D006               	goto	l590
  7099                           
  7100                           ; BSR set to: 14
  7101                           ;PIC18F27J53-killifish_light04.c: 76: EECON2 = 0x55;
  7102  0120BC  0E55               	movlw	85
  7103  0120BE  6EA7               	movwf	4007,c	;volatile
  7104                           
  7105                           ;PIC18F27J53-killifish_light04.c: 77: EECON2 = 0xAA;
  7106  0120C0  0EAA               	movlw	170
  7107  0120C2  6EA7               	movwf	4007,c	;volatile
  7108                           
  7109                           ; BSR set to: 14
  7110                           ;PIC18F27J53-killifish_light04.c: 78: PPSCONbits.IOLOCK = 0;
  7111  0120C4  010E               	movlb	14	; () banked
  7112  0120C6  91BF               	bcf	191,0,b	;volatile
  7113  0120C8                     l590:
  7114                           
  7115                           ; BSR set to: 14
  7116                           ;PIC18F27J53-killifish_light04.c: 79: }
  7117                           ;PIC18F27J53-killifish_light04.c: 81: RPOR3 = 14;
  7118  0120C8  0E0E               	movlw	14
  7119  0120CA  010E               	movlb	14	; () banked
  7120  0120CC  6FC3               	movwf	195,b	;volatile
  7121                           
  7122                           ;PIC18F27J53-killifish_light04.c: 82: RPOR4 = 18;
  7123  0120CE  0E12               	movlw	18
  7124  0120D0  010E               	movlb	14	; () banked
  7125  0120D2  6FC4               	movwf	196,b	;volatile
  7126                           
  7127                           ;PIC18F27J53-killifish_light04.c: 83: RPOR5 = 22;
  7128  0120D4  0E16               	movlw	22
  7129  0120D6  010E               	movlb	14	; () banked
  7130  0120D8  6FC5               	movwf	197,b	;volatile
  7131                           
  7132                           ; BSR set to: 14
  7133                           ;PIC18F27J53-killifish_light04.c: 85: CCP1CONbits.CCP1M = 12;
  7134  0120DA  50BA               	movf	4026,w,c	;volatile
  7135  0120DC  0BF0               	andlw	-16
  7136  0120DE  090C               	iorlw	12
  7137  0120E0  6EBA               	movwf	4026,c	;volatile
  7138                           
  7139                           ; BSR set to: 14
  7140                           ;PIC18F27J53-killifish_light04.c: 86: CCP1CONbits.P1M = 0;
  7141  0120E2  0E3F               	movlw	-193
  7142  0120E4  16BA               	andwf	4026,f,c	;volatile
  7143                           
  7144                           ; BSR set to: 14
  7145                           ;PIC18F27J53-killifish_light04.c: 87: CCPTMRS0bits.C1TSEL = 0;
  7146  0120E6  9152               	bcf	82,0,b	;volatile
  7147  0120E8  9352               	bcf	82,1,b	;volatile
  7148  0120EA  9552               	bcf	82,2,b	;volatile
  7149                           
  7150                           ; BSR set to: 14
  7151                           ;PIC18F27J53-killifish_light04.c: 88: CCPR1Lbits.CCPR1L = 0;
  7152  0120EC  0E00               	movlw	0
  7153  0120EE  6EBB               	movwf	4027,c	;volatile
  7154                           
  7155                           ; BSR set to: 14
  7156                           ;PIC18F27J53-killifish_light04.c: 89: CCP1CONbits.DC1B = 0;
  7157  0120F0  0ECF               	movlw	-49
  7158  0120F2  16BA               	andwf	4026,f,c	;volatile
  7159                           
  7160                           ; BSR set to: 14
  7161                           ;PIC18F27J53-killifish_light04.c: 91: CCP2CONbits.CCP2M = 12;
  7162  0120F4  50B4               	movf	4020,w,c	;volatile
  7163  0120F6  0BF0               	andlw	-16
  7164  0120F8  090C               	iorlw	12
  7165  0120FA  6EB4               	movwf	4020,c	;volatile
  7166                           
  7167                           ; BSR set to: 14
  7168                           ;PIC18F27J53-killifish_light04.c: 92: CCP2CONbits.P2M = 0;
  7169  0120FC  0E3F               	movlw	-193
  7170  0120FE  16B4               	andwf	4020,f,c	;volatile
  7171                           
  7172                           ; BSR set to: 14
  7173                           ;PIC18F27J53-killifish_light04.c: 93: CCPTMRS0bits.C2TSEL = 0;
  7174  012100  9752               	bcf	82,3,b	;volatile
  7175  012102  9952               	bcf	82,4,b	;volatile
  7176  012104  9B52               	bcf	82,5,b	;volatile
  7177                           
  7178                           ; BSR set to: 14
  7179                           ;PIC18F27J53-killifish_light04.c: 94: CCPR2Lbits.CCPR2L = 0;
  7180  012106  0E00               	movlw	0
  7181  012108  6EB5               	movwf	4021,c	;volatile
  7182                           
  7183                           ; BSR set to: 14
  7184                           ;PIC18F27J53-killifish_light04.c: 95: CCP2CONbits.DC2B = 0;
  7185  01210A  0ECF               	movlw	-49
  7186  01210C  16B4               	andwf	4020,f,c	;volatile
  7187                           
  7188                           ; BSR set to: 14
  7189                           ;PIC18F27J53-killifish_light04.c: 97: CCP3CONbits.CCP3M = 12;
  7190  01210E  010F               	movlb	15	; () banked
  7191  012110  5115               	movf	21,w,b	;volatile
  7192  012112  0BF0               	andlw	-16
  7193  012114  090C               	iorlw	12
  7194  012116  6F15               	movwf	21,b	;volatile
  7195                           
  7196                           ; BSR set to: 15
  7197                           ;PIC18F27J53-killifish_light04.c: 98: CCP3CONbits.P3M = 0;
  7198  012118  0E3F               	movlw	-193
  7199  01211A  010F               	movlb	15	; () banked
  7200  01211C  1715               	andwf	21,f,b	;volatile
  7201                           
  7202                           ; BSR set to: 15
  7203                           ;PIC18F27J53-killifish_light04.c: 99: CCPTMRS0bits.C3TSEL = 0;
  7204  01211E  0E3F               	movlw	-193
  7205  012120  010F               	movlb	15	; () banked
  7206  012122  1752               	andwf	82,f,b	;volatile
  7207                           
  7208                           ; BSR set to: 15
  7209                           ;PIC18F27J53-killifish_light04.c: 100: CCPR3Lbits.CCPR3L = 0;
  7210  012124  0E00               	movlw	0
  7211  012126  010F               	movlb	15	; () banked
  7212  012128  6F16               	movwf	22,b	;volatile
  7213                           
  7214                           ; BSR set to: 15
  7215                           ;PIC18F27J53-killifish_light04.c: 101: CCP3CONbits.DC3B = 0;
  7216  01212A  0ECF               	movlw	-49
  7217  01212C  010F               	movlb	15	; () banked
  7218  01212E  1715               	andwf	21,f,b	;volatile
  7219                           
  7220                           ; BSR set to: 15
  7221                           ;PIC18F27J53-killifish_light04.c: 103: CCP4CONbits.CCP4M = 12;
  7222  012130  010F               	movlb	15	; () banked
  7223  012132  5112               	movf	18,w,b	;volatile
  7224  012134  0BF0               	andlw	-16
  7225  012136  090C               	iorlw	12
  7226  012138  6F12               	movwf	18,b	;volatile
  7227                           
  7228                           ; BSR set to: 15
  7229                           ;PIC18F27J53-killifish_light04.c: 104: CCPTMRS1bits.C4TSEL = 0;
  7230  01213A  0EFC               	movlw	-4
  7231  01213C  010F               	movlb	15	; () banked
  7232  01213E  1751               	andwf	81,f,b	;volatile
  7233                           
  7234                           ; BSR set to: 15
  7235                           ;PIC18F27J53-killifish_light04.c: 105: CCPR4Lbits.CCPR4L = 0;
  7236  012140  0E00               	movlw	0
  7237  012142  010F               	movlb	15	; () banked
  7238  012144  6F13               	movwf	19,b	;volatile
  7239                           
  7240                           ; BSR set to: 15
  7241                           ;PIC18F27J53-killifish_light04.c: 106: CCP4CONbits.DC4B = 0;
  7242  012146  0ECF               	movlw	-49
  7243  012148  010F               	movlb	15	; () banked
  7244  01214A  1712               	andwf	18,f,b	;volatile
  7245                           
  7246                           ; BSR set to: 15
  7247                           ;PIC18F27J53-killifish_light04.c: 108: T2CONbits.T2OUTPS = 0;
  7248  01214C  96CA               	bcf	4042,3,c	;volatile
  7249  01214E  98CA               	bcf	4042,4,c	;volatile
  7250  012150  9ACA               	bcf	4042,5,c	;volatile
  7251  012152  9CCA               	bcf	4042,6,c	;volatile
  7252                           
  7253                           ; BSR set to: 15
  7254                           ;PIC18F27J53-killifish_light04.c: 109: T2CONbits.T2CKPS = 2;
  7255  012154  50CA               	movf	4042,w,c	;volatile
  7256  012156  0BFC               	andlw	-4
  7257  012158  0902               	iorlw	2
  7258  01215A  6ECA               	movwf	4042,c	;volatile
  7259                           
  7260                           ; BSR set to: 15
  7261                           ;PIC18F27J53-killifish_light04.c: 110: PR2 = PR - 1;
  7262  01215C  041F               	decf	PWM_init@PR,w,c
  7263  01215E  6ECB               	movwf	4043,c	;volatile
  7264                           
  7265                           ; BSR set to: 15
  7266                           ;PIC18F27J53-killifish_light04.c: 111: T2CONbits.TMR2ON = 1;
  7267  012160  84CA               	bsf	4042,2,c	;volatile
  7268                           
  7269                           ; BSR set to: 15
  7270  012162  0012               	return		;funcret
  7271  012164                     __end_of_PWM_init:
  7272                           	opt stack 0
  7273                           tblptru	equ	0xFF8
  7274                           tblptrh	equ	0xFF7
  7275                           tblptrl	equ	0xFF6
  7276                           tablat	equ	0xFF5
  7277                           prodh	equ	0xFF4
  7278                           prodl	equ	0xFF3
  7279                           intcon	equ	0xFF2
  7280                           intcon2	equ	0xFF1
  7281                           postinc0	equ	0xFEE
  7282                           wreg	equ	0xFE8
  7283                           indf1	equ	0xFE7
  7284                           postinc1	equ	0xFE6
  7285                           postdec1	equ	0xFE5
  7286                           fsr1h	equ	0xFE2
  7287                           fsr1l	equ	0xFE1
  7288                           indf2	equ	0xFDF
  7289                           postinc2	equ	0xFDE
  7290                           postdec2	equ	0xFDD
  7291                           fsr2h	equ	0xFDA
  7292                           fsr2l	equ	0xFD9
  7293                           status	equ	0xFD8
  7294                           
  7295 ;; *************** function _OSC_init *****************
  7296 ;; Defined at:
  7297 ;;		line 119 in file "../My_header\My_header.h"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;		None
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;		None
  7302 ;; Return value:  Size  Location     Type
  7303 ;;		None               void
  7304 ;; Registers used:
  7305 ;;		wreg, status,2
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/0
  7308 ;;		On exit  : 0/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7315 ;;Total ram usage:        0 bytes
  7316 ;; Hardware stack levels used:    1
  7317 ;; Hardware stack levels required when called:    4
  7318 ;; This function calls:
  7319 ;;		Nothing
  7320 ;; This function is called by:
  7321 ;;		_main_init
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325                           	psect	text28
  7326  012E4A                     __ptext28:
  7327                           	opt stack 0
  7328  012E4A                     _OSC_init:
  7329                           	opt stack 25
  7330                           
  7331                           ;My_header\My_header.h: 120: OSCCONbits.IRCF = 7;
  7332                           
  7333                           ; BSR set to: 15
  7334                           ;incstack = 0
  7335  012E4A  88D3               	bsf	4051,4,c	;volatile
  7336  012E4C  8AD3               	bsf	4051,5,c	;volatile
  7337  012E4E  8CD3               	bsf	4051,6,c	;volatile
  7338                           
  7339                           ;My_header\My_header.h: 121: OSCTUNEbits.PLLEN = 1;
  7340  012E50  8C9B               	bsf	3995,6,c	;volatile
  7341                           
  7342                           ;My_header\My_header.h: 122: OSCCONbits.SCS = 0;
  7343  012E52  0EFC               	movlw	-4
  7344  012E54  16D3               	andwf	4051,f,c	;volatile
  7345  012E56  0012               	return		;funcret
  7346  012E58                     __end_of_OSC_init:
  7347                           	opt stack 0
  7348                           tblptru	equ	0xFF8
  7349                           tblptrh	equ	0xFF7
  7350                           tblptrl	equ	0xFF6
  7351                           tablat	equ	0xFF5
  7352                           prodh	equ	0xFF4
  7353                           prodl	equ	0xFF3
  7354                           intcon	equ	0xFF2
  7355                           intcon2	equ	0xFF1
  7356                           postinc0	equ	0xFEE
  7357                           wreg	equ	0xFE8
  7358                           indf1	equ	0xFE7
  7359                           postinc1	equ	0xFE6
  7360                           postdec1	equ	0xFE5
  7361                           fsr1h	equ	0xFE2
  7362                           fsr1l	equ	0xFE1
  7363                           indf2	equ	0xFDF
  7364                           postinc2	equ	0xFDE
  7365                           postdec2	equ	0xFDD
  7366                           fsr2h	equ	0xFDA
  7367                           fsr2l	equ	0xFD9
  7368                           status	equ	0xFD8
  7369                           
  7370 ;; *************** function _ADC_init *****************
  7371 ;; Defined at:
  7372 ;;		line 149 in file "../My_header\My_header.h"
  7373 ;; Parameters:    Size  Location     Type
  7374 ;;  p_ref           1    wreg     unsigned char 
  7375 ;; Auto vars:     Size  Location     Type
  7376 ;;  p_ref           1   30[COMRAM] unsigned char 
  7377 ;; Return value:  Size  Location     Type
  7378 ;;		None               void
  7379 ;; Registers used:
  7380 ;;		wreg, status,2
  7381 ;; Tracked objects:
  7382 ;;		On entry : 0/0
  7383 ;;		On exit  : 0/0
  7384 ;;		Unchanged: 0/0
  7385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7387 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7389 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7390 ;;Total ram usage:        1 bytes
  7391 ;; Hardware stack levels used:    1
  7392 ;; Hardware stack levels required when called:    4
  7393 ;; This function calls:
  7394 ;;		Nothing
  7395 ;; This function is called by:
  7396 ;;		_main_init
  7397 ;; This function uses a non-reentrant model
  7398 ;;
  7399                           
  7400                           	psect	text29
  7401  012E14                     __ptext29:
  7402                           	opt stack 0
  7403  012E14                     _ADC_init:
  7404                           	opt stack 25
  7405                           
  7406                           ;incstack = 0
  7407                           ;ADC_init@p_ref stored from wreg
  7408  012E14  6E1F               	movwf	ADC_init@p_ref,c
  7409                           
  7410                           ;My_header\My_header.h: 150: ADCON0bits.VCFG1 = 0;
  7411  012E16  9EC2               	bcf	4034,7,c	;volatile
  7412                           
  7413                           ;My_header\My_header.h: 151: ADCON0bits.VCFG0 = p_ref;
  7414  012E18  B01F               	btfsc	ADC_init@p_ref,0,c
  7415  012E1A  D002               	bra	u3445
  7416  012E1C  9CC2               	bcf	4034,6,c	;volatile
  7417  012E1E  D001               	bra	u3446
  7418  012E20                     u3445:
  7419  012E20  8CC2               	bsf	4034,6,c	;volatile
  7420  012E22                     u3446:
  7421                           
  7422                           ;My_header\My_header.h: 153: ADCON1bits.ADFM = 1;
  7423  012E22  8EC1               	bsf	4033,7,c	;volatile
  7424                           
  7425                           ;My_header\My_header.h: 154: ADCON1bits.ADCAL = 0;
  7426  012E24  9CC1               	bcf	4033,6,c	;volatile
  7427                           
  7428                           ;My_header\My_header.h: 155: ADCON1bits.ADCS = 6;
  7429  012E26  50C1               	movf	4033,w,c	;volatile
  7430  012E28  0BF8               	andlw	-8
  7431  012E2A  0906               	iorlw	6
  7432  012E2C  6EC1               	movwf	4033,c	;volatile
  7433  012E2E  0012               	return		;funcret
  7434  012E30                     __end_of_ADC_init:
  7435                           	opt stack 0
  7436                           tblptru	equ	0xFF8
  7437                           tblptrh	equ	0xFF7
  7438                           tblptrl	equ	0xFF6
  7439                           tablat	equ	0xFF5
  7440                           prodh	equ	0xFF4
  7441                           prodl	equ	0xFF3
  7442                           intcon	equ	0xFF2
  7443                           intcon2	equ	0xFF1
  7444                           postinc0	equ	0xFEE
  7445                           wreg	equ	0xFE8
  7446                           indf1	equ	0xFE7
  7447                           postinc1	equ	0xFE6
  7448                           postdec1	equ	0xFE5
  7449                           fsr1h	equ	0xFE2
  7450                           fsr1l	equ	0xFE1
  7451                           indf2	equ	0xFDF
  7452                           postinc2	equ	0xFDE
  7453                           postdec2	equ	0xFDD
  7454                           fsr2h	equ	0xFDA
  7455                           fsr2l	equ	0xFD9
  7456                           status	equ	0xFD8
  7457                           
  7458 ;; *************** function _light_loop *****************
  7459 ;; Defined at:
  7460 ;;		line 219 in file "PIC18F27J53-killifish_light04.c"
  7461 ;; Parameters:    Size  Location     Type
  7462 ;;		None
  7463 ;; Auto vars:     Size  Location     Type
  7464 ;;  temp            4   41[BANK0 ] unsigned long 
  7465 ;;  value           1   40[BANK0 ] unsigned char 
  7466 ;;  value           1   39[BANK0 ] unsigned char 
  7467 ;;  i               1   45[BANK0 ] unsigned char 
  7468 ;; Return value:  Size  Location     Type
  7469 ;;		None               void
  7470 ;; Registers used:
  7471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7472 ;; Tracked objects:
  7473 ;;		On entry : 0/0
  7474 ;;		On exit  : 0/0
  7475 ;;		Unchanged: 0/0
  7476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7478 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7479 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7480 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7481 ;;Total ram usage:       11 bytes
  7482 ;; Hardware stack levels used:    1
  7483 ;; Hardware stack levels required when called:    8
  7484 ;; This function calls:
  7485 ;;		_PWM_set
  7486 ;;		_RTCC_from_RTCC
  7487 ;;		___lldiv
  7488 ;;		___llmod
  7489 ;;		___lmul
  7490 ;; This function is called by:
  7491 ;;		_main
  7492 ;; This function uses a non-reentrant model
  7493 ;;
  7494                           
  7495                           	psect	text30
  7496  0113F6                     __ptext30:
  7497                           	opt stack 0
  7498  0113F6                     _light_loop:
  7499                           	opt stack 22
  7500                           
  7501                           ;PIC18F27J53-killifish_light04.c: 220: uint8_t i;
  7502                           ;PIC18F27J53-killifish_light04.c: 221: if (time_change_flag) {
  7503                           
  7504                           ;incstack = 0
  7505  0113F6  0100               	movlb	0	; () banked
  7506  0113F8  51CB               	movf	_time_change_flag& (0+255),w,b
  7507  0113FA  B4D8               	btfsc	status,2,c
  7508  0113FC  D0B5               	goto	l643
  7509                           
  7510                           ; BSR set to: 0
  7511                           ;PIC18F27J53-killifish_light04.c: 222: time_change_flag = 0;
  7512  0113FE  0E00               	movlw	0
  7513  011400  0100               	movlb	0	; () banked
  7514  011402  6FCB               	movwf	_time_change_flag& (0+255),b
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;PIC18F27J53-killifish_light04.c: 223: RTCC_from_RTCC(&caltime_now, &epoch_now);
  7518  011404  0EF2               	movlw	low _caltime_now
  7519  011406  0100               	movlb	0	; () banked
  7520  011408  6F7F               	movwf	RTCC_from_RTCC@ct& (0+255),b
  7521  01140A  0E00               	movlw	high _caltime_now
  7522  01140C  0100               	movlb	0	; () banked
  7523  01140E  6F80               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  7524  011410  0EF9               	movlw	low _epoch_now
  7525  011412  0100               	movlb	0	; () banked
  7526  011414  6F81               	movwf	RTCC_from_RTCC@ep& (0+255),b
  7527  011416  0E00               	movlw	high _epoch_now
  7528  011418  0100               	movlb	0	; () banked
  7529  01141A  6F82               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  7530  01141C  ECD8  F096         	call	_RTCC_from_RTCC	;wreg free
  7531                           
  7532                           ;PIC18F27J53-killifish_light04.c: 224: if (light_mode == TIME_SYNC_mode) {
  7533  011420  0100               	movlb	0	; () banked
  7534  011422  51CA               	movf	_light_mode& (0+255),w,b
  7535  011424  A4D8               	btfss	status,2,c
  7536  011426  D0A0               	goto	l643
  7537                           
  7538                           ; BSR set to: 0
  7539                           ;PIC18F27J53-killifish_light04.c: 225: epoch_t temp = (epoch_t) epoch_now % ((epoch_t)60
      +                          *60*24);
  7540  011428  C0F9  F01F         	movff	_epoch_now,___llmod@dividend
  7541  01142C  C0FA  F020         	movff	_epoch_now+1,___llmod@dividend+1
  7542  011430  C0FB  F021         	movff	_epoch_now+2,___llmod@dividend+2
  7543  011434  C0FC  F022         	movff	_epoch_now+3,___llmod@dividend+3
  7544  011438  0E80               	movlw	128
  7545  01143A  6E23               	movwf	___llmod@divisor,c
  7546  01143C  0E51               	movlw	81
  7547  01143E  6E24               	movwf	___llmod@divisor+1,c
  7548  011440  0E01               	movlw	1
  7549  011442  6E25               	movwf	___llmod@divisor+2,c
  7550  011444  0E00               	movlw	0
  7551  011446  6E26               	movwf	___llmod@divisor+3,c
  7552  011448  EC6D  F094         	call	___llmod	;wreg free
  7553  01144C  C01F  F089         	movff	?___llmod,light_loop@temp
  7554  011450  C020  F08A         	movff	?___llmod+1,light_loop@temp+1
  7555  011454  C021  F08B         	movff	?___llmod+2,light_loop@temp+2
  7556  011458  C022  F08C         	movff	?___llmod+3,light_loop@temp+3
  7557                           
  7558                           ;PIC18F27J53-killifish_light04.c: 226: if (temp > ((epoch_t)60*60*24) / 2)temp = ((epoch
      +                          _t)60*60*24) - temp;
  7559  01145C  0100               	movlb	0	; () banked
  7560  01145E  518C               	movf	(light_loop@temp+3)& (0+255),w,b
  7561  011460  0100               	movlb	0	; () banked
  7562  011462  118B               	iorwf	(light_loop@temp+2)& (0+255),w,b
  7563  011464  E108               	bnz	u6410
  7564  011466  0EC1               	movlw	193
  7565  011468  0100               	movlb	0	; () banked
  7566  01146A  5D89               	subwf	light_loop@temp& (0+255),w,b
  7567  01146C  0EA8               	movlw	168
  7568  01146E  0100               	movlb	0	; () banked
  7569  011470  598A               	subwfb	(light_loop@temp+1)& (0+255),w,b
  7570  011472  A0D8               	btfss	status,0,c
  7571  011474  D027               	goto	l5527
  7572  011476                     u6410:
  7573                           
  7574                           ; BSR set to: 0
  7575  011476  C089  F083         	movff	light_loop@temp,??_light_loop
  7576  01147A  C08A  F084         	movff	light_loop@temp+1,??_light_loop+1
  7577  01147E  C08B  F085         	movff	light_loop@temp+2,??_light_loop+2
  7578  011482  C08C  F086         	movff	light_loop@temp+3,??_light_loop+3
  7579  011486  0100               	movlb	0	; () banked
  7580  011488  1F83               	comf	??_light_loop& (0+255),f,b
  7581  01148A  1F84               	comf	(??_light_loop+1)& (0+255),f,b
  7582  01148C  1F85               	comf	(??_light_loop+2)& (0+255),f,b
  7583  01148E  1F86               	comf	(??_light_loop+3)& (0+255),f,b
  7584  011490  2B83               	incf	??_light_loop& (0+255),f,b
  7585  011492  0E00               	movlw	0
  7586  011494  2384               	addwfc	(??_light_loop+1)& (0+255),f,b
  7587  011496  2385               	addwfc	(??_light_loop+2)& (0+255),f,b
  7588  011498  2386               	addwfc	(??_light_loop+3)& (0+255),f,b
  7589  01149A  0E80               	movlw	128
  7590  01149C  0100               	movlb	0	; () banked
  7591  01149E  2583               	addwf	??_light_loop& (0+255),w,b
  7592  0114A0  0100               	movlb	0	; () banked
  7593  0114A2  6F89               	movwf	light_loop@temp& (0+255),b
  7594  0114A4  0E51               	movlw	81
  7595  0114A6  0100               	movlb	0	; () banked
  7596  0114A8  2184               	addwfc	(??_light_loop+1)& (0+255),w,b
  7597  0114AA  0100               	movlb	0	; () banked
  7598  0114AC  6F8A               	movwf	(light_loop@temp+1)& (0+255),b
  7599  0114AE  0E01               	movlw	1
  7600  0114B0  0100               	movlb	0	; () banked
  7601  0114B2  2185               	addwfc	(??_light_loop+2)& (0+255),w,b
  7602  0114B4  0100               	movlb	0	; () banked
  7603  0114B6  6F8B               	movwf	(light_loop@temp+2)& (0+255),b
  7604  0114B8  0E00               	movlw	0
  7605  0114BA  0100               	movlb	0	; () banked
  7606  0114BC  2186               	addwfc	(??_light_loop+3)& (0+255),w,b
  7607  0114BE  0100               	movlb	0	; () banked
  7608  0114C0  6F8C               	movwf	(light_loop@temp+3)& (0+255),b
  7609  0114C2  D000               	goto	l5527
  7610  0114C4                     l5527:
  7611                           
  7612                           ; BSR set to: 0
  7613                           ;PIC18F27J53-killifish_light04.c: 227: temp = temp * 2 * 250 / ((epoch_t)60*60*24);
  7614  0114C4  90D8               	bcf	status,0,c
  7615  0114C6  0100               	movlb	0	; () banked
  7616  0114C8  3589               	rlcf	light_loop@temp& (0+255),w,b
  7617  0114CA  0100               	movlb	0	; () banked
  7618  0114CC  6F64               	movwf	___lmul@multiplier& (0+255),b
  7619  0114CE  0100               	movlb	0	; () banked
  7620  0114D0  358A               	rlcf	(light_loop@temp+1)& (0+255),w,b
  7621  0114D2  0100               	movlb	0	; () banked
  7622  0114D4  6F65               	movwf	(___lmul@multiplier+1)& (0+255),b
  7623  0114D6  0100               	movlb	0	; () banked
  7624  0114D8  358B               	rlcf	(light_loop@temp+2)& (0+255),w,b
  7625  0114DA  0100               	movlb	0	; () banked
  7626  0114DC  6F66               	movwf	(___lmul@multiplier+2)& (0+255),b
  7627  0114DE  0100               	movlb	0	; () banked
  7628  0114E0  358C               	rlcf	(light_loop@temp+3)& (0+255),w,b
  7629  0114E2  0100               	movlb	0	; () banked
  7630  0114E4  6F67               	movwf	(___lmul@multiplier+3)& (0+255),b
  7631  0114E6  0EFA               	movlw	250
  7632  0114E8  0100               	movlb	0	; () banked
  7633  0114EA  6F68               	movwf	___lmul@multiplicand& (0+255),b
  7634  0114EC  0E00               	movlw	0
  7635  0114EE  6F69               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7636  0114F0  0E00               	movlw	0
  7637  0114F2  6F6A               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7638  0114F4  0E00               	movlw	0
  7639  0114F6  6F6B               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7640  0114F8  EC30  F094         	call	___lmul	;wreg free
  7641  0114FC  C064  F070         	movff	?___lmul,___lldiv@dividend
  7642  011500  C065  F071         	movff	?___lmul+1,___lldiv@dividend+1
  7643  011504  C066  F072         	movff	?___lmul+2,___lldiv@dividend+2
  7644  011508  C067  F073         	movff	?___lmul+3,___lldiv@dividend+3
  7645  01150C  0E80               	movlw	128
  7646  01150E  0100               	movlb	0	; () banked
  7647  011510  6F74               	movwf	___lldiv@divisor& (0+255),b
  7648  011512  0E51               	movlw	81
  7649  011514  6F75               	movwf	(___lldiv@divisor+1)& (0+255),b
  7650  011516  0E01               	movlw	1
  7651  011518  6F76               	movwf	(___lldiv@divisor+2)& (0+255),b
  7652  01151A  0E00               	movlw	0
  7653  01151C  6F77               	movwf	(___lldiv@divisor+3)& (0+255),b
  7654  01151E  ECDB  F08E         	call	___lldiv	;wreg free
  7655  011522  C070  F089         	movff	?___lldiv,light_loop@temp
  7656  011526  C071  F08A         	movff	?___lldiv+1,light_loop@temp+1
  7657  01152A  C072  F08B         	movff	?___lldiv+2,light_loop@temp+2
  7658  01152E  C073  F08C         	movff	?___lldiv+3,light_loop@temp+3
  7659                           
  7660                           ;PIC18F27J53-killifish_light04.c: 228: PWM_set(3, temp);
  7661  011532  C089  F06D         	movff	light_loop@temp,PWM_set@value
  7662  011536  C08A  F06E         	movff	light_loop@temp+1,PWM_set@value+1
  7663  01153A  0E03               	movlw	3
  7664  01153C  EC04  F08C         	call	_PWM_set
  7665                           
  7666                           ;PIC18F27J53-killifish_light04.c: 229: for (i = 0; i < 3; i++) {
  7667  011540  0E00               	movlw	0
  7668  011542  0100               	movlb	0	; () banked
  7669  011544  6F8D               	movwf	light_loop@i& (0+255),b
  7670  011546                     l5533:
  7671                           
  7672                           ; BSR set to: 0
  7673  011546  0E02               	movlw	2
  7674  011548  0100               	movlb	0	; () banked
  7675  01154A  658D               	cpfsgt	light_loop@i& (0+255),b
  7676  01154C  D001               	goto	l5537
  7677                           
  7678                           ; BSR set to: 0
  7679  01154E  D00C               	goto	l643
  7680  011550                     l5537:
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;PIC18F27J53-killifish_light04.c: 230: PWM_set(i, temp);
  7684  011550  C089  F06D         	movff	light_loop@temp,PWM_set@value
  7685  011554  C08A  F06E         	movff	light_loop@temp+1,PWM_set@value+1
  7686  011558  0100               	movlb	0	; () banked
  7687  01155A  518D               	movf	light_loop@i& (0+255),w,b
  7688  01155C  EC04  F08C         	call	_PWM_set
  7689  011560  0100               	movlb	0	; () banked
  7690  011562  2B8D               	incf	light_loop@i& (0+255),f,b
  7691  011564  D7F0               	goto	l5533
  7692                           
  7693                           ; BSR set to: 0
  7694                           
  7695                           ; BSR set to: 0
  7696  011566  D000               	goto	l643
  7697  011568                     l643:
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;PIC18F27J53-killifish_light04.c: 231: }
  7701                           ;PIC18F27J53-killifish_light04.c: 232: }
  7702                           ;PIC18F27J53-killifish_light04.c: 233: }
  7703                           ;PIC18F27J53-killifish_light04.c: 234: if (sw_G.flag.press) {
  7704  011568  A03C               	btfss	_sw_G+2,0,c
  7705  01156A  D02A               	goto	l648
  7706                           
  7707                           ; BSR set to: 0
  7708                           ;PIC18F27J53-killifish_light04.c: 235: sw_G.flags = 0;
  7709  01156C  0E00               	movlw	0
  7710  01156E  6E3D               	movwf	_sw_G+3,c
  7711  011570  0E00               	movlw	0
  7712  011572  6E3C               	movwf	_sw_G+2,c
  7713                           
  7714                           ;PIC18F27J53-killifish_light04.c: 236: light_mode = COMMAND_mode;
  7715  011574  0E02               	movlw	2
  7716  011576  0100               	movlb	0	; () banked
  7717  011578  6FCA               	movwf	_light_mode& (0+255),b
  7718                           
  7719                           ; BSR set to: 0
  7720                           ;PIC18F27J53-killifish_light04.c: 237: static uint8_t n = 0;
  7721                           ;PIC18F27J53-killifish_light04.c: 238: if (n >= 3) n = 0;
  7722  01157A  0E02               	movlw	2
  7723  01157C  0100               	movlb	0	; () banked
  7724  01157E  65FE               	cpfsgt	light_loop@n& (0+255),b
  7725  011580  D004               	goto	l5549
  7726                           
  7727                           ; BSR set to: 0
  7728  011582  0E00               	movlw	0
  7729  011584  0100               	movlb	0	; () banked
  7730  011586  6FFE               	movwf	light_loop@n& (0+255),b
  7731  011588  D003               	goto	l5551
  7732  01158A                     l5549:
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;PIC18F27J53-killifish_light04.c: 239: else n++;
  7736  01158A  0100               	movlb	0	; () banked
  7737  01158C  2BFE               	incf	light_loop@n& (0+255),f,b
  7738  01158E  D000               	goto	l5551
  7739  011590                     l5551:
  7740                           
  7741                           ; BSR set to: 0
  7742                           ;PIC18F27J53-killifish_light04.c: 240: uint8_t value = 250 / 3 * n;
  7743  011590  0100               	movlb	0	; () banked
  7744  011592  51FE               	movf	light_loop@n& (0+255),w,b
  7745  011594  0D53               	mullw	83
  7746  011596  CFF3 F087          	movff	prodl,light_loop@value
  7747                           
  7748                           ; BSR set to: 0
  7749                           ;PIC18F27J53-killifish_light04.c: 241: for (i = 0; i < 3; i++) {
  7750  01159A  0E00               	movlw	0
  7751  01159C  0100               	movlb	0	; () banked
  7752  01159E  6F8D               	movwf	light_loop@i& (0+255),b
  7753  0115A0                     l5555:
  7754                           
  7755                           ; BSR set to: 0
  7756  0115A0  0E02               	movlw	2
  7757  0115A2  0100               	movlb	0	; () banked
  7758  0115A4  658D               	cpfsgt	light_loop@i& (0+255),b
  7759  0115A6  D001               	goto	l5559
  7760                           
  7761                           ; BSR set to: 0
  7762  0115A8  D00B               	goto	l648
  7763  0115AA                     l5559:
  7764                           
  7765                           ; BSR set to: 0
  7766                           ;PIC18F27J53-killifish_light04.c: 242: PWM_set(i, value);
  7767  0115AA  C087  F06D         	movff	light_loop@value,PWM_set@value
  7768  0115AE  0100               	movlb	0	; () banked
  7769  0115B0  6B6E               	clrf	(PWM_set@value+1)& (0+255),b
  7770  0115B2  0100               	movlb	0	; () banked
  7771  0115B4  518D               	movf	light_loop@i& (0+255),w,b
  7772  0115B6  EC04  F08C         	call	_PWM_set
  7773  0115BA  0100               	movlb	0	; () banked
  7774  0115BC  2B8D               	incf	light_loop@i& (0+255),f,b
  7775  0115BE  D7F0               	goto	l5555
  7776  0115C0                     l648:
  7777                           
  7778                           ; BSR set to: 0
  7779                           ;PIC18F27J53-killifish_light04.c: 243: }
  7780                           ;PIC18F27J53-killifish_light04.c: 244: }
  7781                           ;PIC18F27J53-killifish_light04.c: 245: if (sw_B.flag.press) {
  7782  0115C0  A038               	btfss	_sw_B+2,0,c
  7783  0115C2  D01F               	goto	l5577
  7784                           
  7785                           ; BSR set to: 0
  7786                           ;PIC18F27J53-killifish_light04.c: 246: sw_B.flags = 0;
  7787  0115C4  0E00               	movlw	0
  7788  0115C6  6E39               	movwf	_sw_B+3,c
  7789  0115C8  0E00               	movlw	0
  7790  0115CA  6E38               	movwf	_sw_B+2,c
  7791                           
  7792                           ;PIC18F27J53-killifish_light04.c: 247: light_mode = COMMAND_mode;
  7793  0115CC  0E02               	movlw	2
  7794  0115CE  0100               	movlb	0	; () banked
  7795  0115D0  6FCA               	movwf	_light_mode& (0+255),b
  7796                           
  7797                           ; BSR set to: 0
  7798                           ;PIC18F27J53-killifish_light04.c: 248: static uint8_t n = 0;
  7799                           ;PIC18F27J53-killifish_light04.c: 249: if (n >= 3) n = 0;
  7800  0115D2  0E02               	movlw	2
  7801  0115D4  0100               	movlb	0	; () banked
  7802  0115D6  65FD               	cpfsgt	light_loop@_2506& (0+255),b
  7803  0115D8  D004               	goto	l5571
  7804                           
  7805                           ; BSR set to: 0
  7806  0115DA  0E00               	movlw	0
  7807  0115DC  0100               	movlb	0	; () banked
  7808  0115DE  6FFD               	movwf	light_loop@_2506& (0+255),b
  7809  0115E0  D003               	goto	l5573
  7810  0115E2                     l5571:
  7811                           
  7812                           ; BSR set to: 0
  7813                           ;PIC18F27J53-killifish_light04.c: 250: else n++;
  7814  0115E2  0100               	movlb	0	; () banked
  7815  0115E4  2BFD               	incf	light_loop@_2506& (0+255),f,b
  7816  0115E6  D000               	goto	l5573
  7817  0115E8                     l5573:
  7818                           
  7819                           ; BSR set to: 0
  7820                           ;PIC18F27J53-killifish_light04.c: 251: uint8_t value = 250 / 3 * n;
  7821  0115E8  0100               	movlb	0	; () banked
  7822  0115EA  51FD               	movf	light_loop@_2506& (0+255),w,b
  7823  0115EC  0D53               	mullw	83
  7824  0115EE  CFF3 F088          	movff	prodl,light_loop@value_2507
  7825                           
  7826                           ; BSR set to: 0
  7827                           ;PIC18F27J53-killifish_light04.c: 252: PWM_set(3, value);
  7828  0115F2  C088  F06D         	movff	light_loop@value_2507,PWM_set@value
  7829  0115F6  0100               	movlb	0	; () banked
  7830  0115F8  6B6E               	clrf	(PWM_set@value+1)& (0+255),b
  7831  0115FA  0E03               	movlw	3
  7832  0115FC  EC04  F08C         	call	_PWM_set
  7833  011600  D000               	goto	l5577
  7834  011602                     l5577:
  7835                           
  7836                           ;PIC18F27J53-killifish_light04.c: 253: }
  7837                           ;PIC18F27J53-killifish_light04.c: 254: if (sw_R.flag.press) {
  7838  011602  A040               	btfss	_sw_R+2,0,c
  7839  011604  0012               	return	
  7840                           
  7841                           ;PIC18F27J53-killifish_light04.c: 255: sw_R.flags = 0;
  7842  011606  0E00               	movlw	0
  7843  011608  6E41               	movwf	_sw_R+3,c
  7844  01160A  0E00               	movlw	0
  7845  01160C  6E40               	movwf	_sw_R+2,c
  7846                           
  7847                           ;PIC18F27J53-killifish_light04.c: 256: light_mode = TIME_SYNC_mode;
  7848  01160E  0E00               	movlw	0
  7849  011610  0100               	movlb	0	; () banked
  7850  011612  6FCA               	movwf	_light_mode& (0+255),b
  7851  011614  0012               	return	
  7852                           
  7853                           ; BSR set to: 0
  7854  011616  0012               	return		;funcret
  7855  011618                     __end_of_light_loop:
  7856                           	opt stack 0
  7857                           tblptru	equ	0xFF8
  7858                           tblptrh	equ	0xFF7
  7859                           tblptrl	equ	0xFF6
  7860                           tablat	equ	0xFF5
  7861                           prodh	equ	0xFF4
  7862                           prodl	equ	0xFF3
  7863                           intcon	equ	0xFF2
  7864                           intcon2	equ	0xFF1
  7865                           postinc0	equ	0xFEE
  7866                           wreg	equ	0xFE8
  7867                           indf1	equ	0xFE7
  7868                           postinc1	equ	0xFE6
  7869                           postdec1	equ	0xFE5
  7870                           fsr1h	equ	0xFE2
  7871                           fsr1l	equ	0xFE1
  7872                           indf2	equ	0xFDF
  7873                           postinc2	equ	0xFDE
  7874                           postdec2	equ	0xFDD
  7875                           fsr2h	equ	0xFDA
  7876                           fsr2l	equ	0xFD9
  7877                           status	equ	0xFD8
  7878                           
  7879 ;; *************** function ___llmod *****************
  7880 ;; Defined at:
  7881 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  7882 ;; Parameters:    Size  Location     Type
  7883 ;;  dividend        4   30[COMRAM] unsigned long 
  7884 ;;  divisor         4   34[COMRAM] unsigned long 
  7885 ;; Auto vars:     Size  Location     Type
  7886 ;;  counter         1    0[BANK0 ] unsigned char 
  7887 ;; Return value:  Size  Location     Type
  7888 ;;                  4   30[COMRAM] unsigned long 
  7889 ;; Registers used:
  7890 ;;		wreg, status,2, status,0
  7891 ;; Tracked objects:
  7892 ;;		On entry : 0/0
  7893 ;;		On exit  : 0/0
  7894 ;;		Unchanged: 0/0
  7895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7896 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7897 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7899 ;;      Totals:         8       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7900 ;;Total ram usage:        9 bytes
  7901 ;; Hardware stack levels used:    1
  7902 ;; Hardware stack levels required when called:    4
  7903 ;; This function calls:
  7904 ;;		Nothing
  7905 ;; This function is called by:
  7906 ;;		_light_loop
  7907 ;;		_my_utoa32
  7908 ;; This function uses a non-reentrant model
  7909 ;;
  7910                           
  7911                           	psect	text31
  7912  0128DA                     __ptext31:
  7913                           	opt stack 0
  7914  0128DA                     ___llmod:
  7915                           	opt stack 25
  7916                           
  7917                           ;incstack = 0
  7918  0128DA  5023               	movf	___llmod@divisor,w,c
  7919  0128DC  1024               	iorwf	___llmod@divisor+1,w,c
  7920  0128DE  1025               	iorwf	___llmod@divisor+2,w,c
  7921  0128E0  1026               	iorwf	___llmod@divisor+3,w,c
  7922  0128E2  B4D8               	btfsc	status,2,c
  7923  0128E4  D02C               	goto	l1213
  7924  0128E6  0E01               	movlw	1
  7925  0128E8  0100               	movlb	0	; () banked
  7926  0128EA  6F60               	movwf	___llmod@counter& (0+255),b
  7927  0128EC  D008               	goto	l5291
  7928  0128EE                     l5289:
  7929                           
  7930                           ; BSR set to: 0
  7931  0128EE  90D8               	bcf	status,0,c
  7932  0128F0  3623               	rlcf	___llmod@divisor,f,c
  7933  0128F2  3624               	rlcf	___llmod@divisor+1,f,c
  7934  0128F4  3625               	rlcf	___llmod@divisor+2,f,c
  7935  0128F6  3626               	rlcf	___llmod@divisor+3,f,c
  7936  0128F8  0100               	movlb	0	; () banked
  7937  0128FA  2B60               	incf	___llmod@counter& (0+255),f,b
  7938  0128FC  D000               	goto	l5291
  7939  0128FE                     l5291:
  7940                           
  7941                           ; BSR set to: 0
  7942  0128FE  BE26               	btfsc	___llmod@divisor+3,7,c
  7943  012900  D002               	goto	l5293
  7944  012902  D7F5               	goto	l5289
  7945                           
  7946                           ; BSR set to: 0
  7947  012904  D000               	goto	l5293
  7948  012906                     l5293:
  7949                           
  7950                           ; BSR set to: 0
  7951  012906  5023               	movf	___llmod@divisor,w,c
  7952  012908  5C1F               	subwf	___llmod@dividend,w,c
  7953  01290A  5024               	movf	___llmod@divisor+1,w,c
  7954  01290C  5820               	subwfb	___llmod@dividend+1,w,c
  7955  01290E  5025               	movf	___llmod@divisor+2,w,c
  7956  012910  5821               	subwfb	___llmod@dividend+2,w,c
  7957  012912  5026               	movf	___llmod@divisor+3,w,c
  7958  012914  5822               	subwfb	___llmod@dividend+3,w,c
  7959  012916  A0D8               	btfss	status,0,c
  7960  012918  D009               	goto	l5297
  7961                           
  7962                           ; BSR set to: 0
  7963  01291A  5023               	movf	___llmod@divisor,w,c
  7964  01291C  5E1F               	subwf	___llmod@dividend,f,c
  7965  01291E  5024               	movf	___llmod@divisor+1,w,c
  7966  012920  5A20               	subwfb	___llmod@dividend+1,f,c
  7967  012922  5025               	movf	___llmod@divisor+2,w,c
  7968  012924  5A21               	subwfb	___llmod@dividend+2,f,c
  7969  012926  5026               	movf	___llmod@divisor+3,w,c
  7970  012928  5A22               	subwfb	___llmod@dividend+3,f,c
  7971  01292A  D000               	goto	l5297
  7972  01292C                     l5297:
  7973                           
  7974                           ; BSR set to: 0
  7975  01292C  90D8               	bcf	status,0,c
  7976  01292E  3226               	rrcf	___llmod@divisor+3,f,c
  7977  012930  3225               	rrcf	___llmod@divisor+2,f,c
  7978  012932  3224               	rrcf	___llmod@divisor+1,f,c
  7979  012934  3223               	rrcf	___llmod@divisor,f,c
  7980                           
  7981                           ; BSR set to: 0
  7982  012936  0100               	movlb	0	; () banked
  7983  012938  2F60               	decfsz	___llmod@counter& (0+255),f,b
  7984  01293A  D7E5               	goto	l5293
  7985  01293C  D000               	goto	l1213
  7986  01293E                     l1213:
  7987  01293E  C01F  F01F         	movff	___llmod@dividend,?___llmod
  7988  012942  C020  F020         	movff	___llmod@dividend+1,?___llmod+1
  7989  012946  C021  F021         	movff	___llmod@dividend+2,?___llmod+2
  7990  01294A  C022  F022         	movff	___llmod@dividend+3,?___llmod+3
  7991  01294E  0012               	return		;funcret
  7992  012950                     __end_of___llmod:
  7993                           	opt stack 0
  7994                           tblptru	equ	0xFF8
  7995                           tblptrh	equ	0xFF7
  7996                           tblptrl	equ	0xFF6
  7997                           tablat	equ	0xFF5
  7998                           prodh	equ	0xFF4
  7999                           prodl	equ	0xFF3
  8000                           intcon	equ	0xFF2
  8001                           intcon2	equ	0xFF1
  8002                           postinc0	equ	0xFEE
  8003                           wreg	equ	0xFE8
  8004                           indf1	equ	0xFE7
  8005                           postinc1	equ	0xFE6
  8006                           postdec1	equ	0xFE5
  8007                           fsr1h	equ	0xFE2
  8008                           fsr1l	equ	0xFE1
  8009                           indf2	equ	0xFDF
  8010                           postinc2	equ	0xFDE
  8011                           postdec2	equ	0xFDD
  8012                           fsr2h	equ	0xFDA
  8013                           fsr2l	equ	0xFD9
  8014                           status	equ	0xFD8
  8015                           
  8016 ;; *************** function _PWM_set *****************
  8017 ;; Defined at:
  8018 ;;		line 114 in file "PIC18F27J53-killifish_light04.c"
  8019 ;; Parameters:    Size  Location     Type
  8020 ;;  color           1    wreg     unsigned char 
  8021 ;;  value           2   13[BANK0 ] unsigned int 
  8022 ;; Auto vars:     Size  Location     Type
  8023 ;;  color           1   17[BANK0 ] unsigned char 
  8024 ;; Return value:  Size  Location     Type
  8025 ;;		None               void
  8026 ;; Registers used:
  8027 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8028 ;; Tracked objects:
  8029 ;;		On entry : 0/0
  8030 ;;		On exit  : 0/0
  8031 ;;		Unchanged: 0/0
  8032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8033 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8034 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8035 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8036 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8037 ;;Total ram usage:        5 bytes
  8038 ;; Hardware stack levels used:    1
  8039 ;; Hardware stack levels required when called:    5
  8040 ;; This function calls:
  8041 ;;		___lwdiv
  8042 ;;		___wmul
  8043 ;; This function is called by:
  8044 ;;		_command_operation
  8045 ;;		_light_loop
  8046 ;; This function uses a non-reentrant model
  8047 ;;
  8048                           
  8049                           	psect	text32
  8050  011808                     __ptext32:
  8051                           	opt stack 0
  8052  011808                     _PWM_set:
  8053                           	opt stack 23
  8054                           
  8055                           ;incstack = 0
  8056                           ;PWM_set@color stored from wreg
  8057  011808  0100               	movlb	0	; () banked
  8058  01180A  6F71               	movwf	PWM_set@color& (0+255),b
  8059                           
  8060                           ; BSR set to: 0
  8061                           ;PIC18F27J53-killifish_light04.c: 115: value = value * value / 250;
  8062  01180C  C06D  F01F         	movff	PWM_set@value,___wmul@multiplier
  8063  011810  C06E  F020         	movff	PWM_set@value+1,___wmul@multiplier+1
  8064  011814  C06D  F021         	movff	PWM_set@value,___wmul@multiplicand
  8065  011818  C06E  F022         	movff	PWM_set@value+1,___wmul@multiplicand+1
  8066  01181C  EC7D  F096         	call	___wmul	;wreg free
  8067  011820  C01F  F066         	movff	?___wmul,___lwdiv@dividend
  8068  011824  C020  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  8069  011828  0E00               	movlw	0
  8070  01182A  0100               	movlb	0	; () banked
  8071  01182C  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  8072  01182E  0EFA               	movlw	250
  8073  011830  6F68               	movwf	___lwdiv@divisor& (0+255),b
  8074  011832  ECAE  F093         	call	___lwdiv	;wreg free
  8075  011836  C066  F06D         	movff	?___lwdiv,PWM_set@value
  8076  01183A  C067  F06E         	movff	?___lwdiv+1,PWM_set@value+1
  8077                           
  8078                           ;PIC18F27J53-killifish_light04.c: 116: value = value * value / 250;
  8079  01183E  C06D  F01F         	movff	PWM_set@value,___wmul@multiplier
  8080  011842  C06E  F020         	movff	PWM_set@value+1,___wmul@multiplier+1
  8081  011846  C06D  F021         	movff	PWM_set@value,___wmul@multiplicand
  8082  01184A  C06E  F022         	movff	PWM_set@value+1,___wmul@multiplicand+1
  8083  01184E  EC7D  F096         	call	___wmul	;wreg free
  8084  011852  C01F  F066         	movff	?___wmul,___lwdiv@dividend
  8085  011856  C020  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  8086  01185A  0E00               	movlw	0
  8087  01185C  0100               	movlb	0	; () banked
  8088  01185E  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  8089  011860  0EFA               	movlw	250
  8090  011862  6F68               	movwf	___lwdiv@divisor& (0+255),b
  8091  011864  ECAE  F093         	call	___lwdiv	;wreg free
  8092  011868  C066  F06D         	movff	?___lwdiv,PWM_set@value
  8093  01186C  C067  F06E         	movff	?___lwdiv+1,PWM_set@value+1
  8094                           
  8095                           ;PIC18F27J53-killifish_light04.c: 117: value = value * 3 / 4;
  8096  011870  C06D  F01F         	movff	PWM_set@value,___wmul@multiplier
  8097  011874  C06E  F020         	movff	PWM_set@value+1,___wmul@multiplier+1
  8098  011878  0E00               	movlw	0
  8099  01187A  6E22               	movwf	___wmul@multiplicand+1,c
  8100  01187C  0E03               	movlw	3
  8101  01187E  6E21               	movwf	___wmul@multiplicand,c
  8102  011880  EC7D  F096         	call	___wmul	;wreg free
  8103  011884  90D8               	bcf	status,0,c
  8104  011886  3220               	rrcf	?___wmul+1,f,c
  8105  011888  321F               	rrcf	?___wmul,f,c
  8106  01188A  90D8               	bcf	status,0,c
  8107  01188C  3220               	rrcf	?___wmul+1,f,c
  8108  01188E  321F               	rrcf	?___wmul,f,c
  8109  011890  C01F  F06D         	movff	?___wmul,PWM_set@value
  8110  011894  C020  F06E         	movff	?___wmul+1,PWM_set@value+1
  8111                           
  8112                           ;PIC18F27J53-killifish_light04.c: 118: switch (color) {
  8113  011898  D054               	goto	l5131
  8114  01189A                     l5113:
  8115                           
  8116                           ;PIC18F27J53-killifish_light04.c: 120: if (value < 250 / 4) {
  8117  01189A  0100               	movlb	0	; () banked
  8118  01189C  516E               	movf	(PWM_set@value+1)& (0+255),w,b
  8119  01189E  E107               	bnz	l5117
  8120  0118A0  0E3E               	movlw	62
  8121  0118A2  0100               	movlb	0	; () banked
  8122  0118A4  5D6D               	subwf	PWM_set@value& (0+255),w,b
  8123  0118A6  A0D8               	btfss	status,0,c
  8124  0118A8  D06F               	goto	l5151
  8125  0118AA  D001               	goto	l5117
  8126                           
  8127                           ; BSR set to: 0
  8128                           ;PIC18F27J53-killifish_light04.c: 122: } else {
  8129  0118AC  D06D               	goto	l5151
  8130  0118AE                     l5117:
  8131                           
  8132                           ; BSR set to: 0
  8133                           ;PIC18F27J53-killifish_light04.c: 123: value = 2 * (value - 250 / 4) / 3 + 250 / 4;
  8134  0118AE  C06D  F06F         	movff	PWM_set@value,??_PWM_set
  8135  0118B2  C06E  F070         	movff	PWM_set@value+1,??_PWM_set+1
  8136  0118B6  90D8               	bcf	status,0,c
  8137  0118B8  0100               	movlb	0	; () banked
  8138  0118BA  376F               	rlcf	??_PWM_set& (0+255),f,b
  8139  0118BC  3770               	rlcf	(??_PWM_set+1)& (0+255),f,b
  8140  0118BE  0E84               	movlw	132
  8141  0118C0  0100               	movlb	0	; () banked
  8142  0118C2  256F               	addwf	??_PWM_set& (0+255),w,b
  8143  0118C4  0100               	movlb	0	; () banked
  8144  0118C6  6F66               	movwf	___lwdiv@dividend& (0+255),b
  8145  0118C8  0EFF               	movlw	255
  8146  0118CA  0100               	movlb	0	; () banked
  8147  0118CC  2170               	addwfc	(??_PWM_set+1)& (0+255),w,b
  8148  0118CE  0100               	movlb	0	; () banked
  8149  0118D0  6F67               	movwf	(___lwdiv@dividend+1)& (0+255),b
  8150  0118D2  0E00               	movlw	0
  8151  0118D4  0100               	movlb	0	; () banked
  8152  0118D6  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  8153  0118D8  0E03               	movlw	3
  8154  0118DA  6F68               	movwf	___lwdiv@divisor& (0+255),b
  8155  0118DC  ECAE  F093         	call	___lwdiv	;wreg free
  8156  0118E0  0E3E               	movlw	62
  8157  0118E2  0100               	movlb	0	; () banked
  8158  0118E4  2566               	addwf	?___lwdiv& (0+255),w,b
  8159  0118E6  0100               	movlb	0	; () banked
  8160  0118E8  6F6D               	movwf	PWM_set@value& (0+255),b
  8161  0118EA  0E00               	movlw	0
  8162  0118EC  0100               	movlb	0	; () banked
  8163  0118EE  2167               	addwfc	(?___lwdiv+1)& (0+255),w,b
  8164  0118F0  D025               	goto	L1
  8165                           
  8166                           ; BSR set to: 0
  8167                           ;PIC18F27J53-killifish_light04.c: 131: }
  8168                           ;PIC18F27J53-killifish_light04.c: 132: break;
  8169                           
  8170                           ; BSR set to: 0
  8171                           
  8172                           ; BSR set to: 0
  8173                           ;PIC18F27J53-killifish_light04.c: 129: } else {
  8174                           
  8175                           ; BSR set to: 0
  8176                           
  8177                           ; BSR set to: 0
  8178                           
  8179                           ;PIC18F27J53-killifish_light04.c: 126: case 1:
  8180                           
  8181                           ; BSR set to: 0
  8182                           ;PIC18F27J53-killifish_light04.c: 124: }
  8183                           ;PIC18F27J53-killifish_light04.c: 125: break;
  8184  0118F2  D04A               	goto	l5151
  8185  0118F4                     l5123:
  8186                           
  8187                           ; BSR set to: 0
  8188                           ;PIC18F27J53-killifish_light04.c: 134: if (value < 250 / 4) {
  8189  0118F4  0100               	movlb	0	; () banked
  8190  0118F6  516E               	movf	(PWM_set@value+1)& (0+255),w,b
  8191  0118F8  E107               	bnz	l5127
  8192  0118FA  0E3E               	movlw	62
  8193  0118FC  0100               	movlb	0	; () banked
  8194  0118FE  5D6D               	subwf	PWM_set@value& (0+255),w,b
  8195  011900  A0D8               	btfss	status,0,c
  8196  011902  D042               	goto	l5151
  8197  011904  D001               	goto	l5127
  8198                           
  8199                           ; BSR set to: 0
  8200                           ;PIC18F27J53-killifish_light04.c: 136: } else {
  8201  011906  D040               	goto	l5151
  8202  011908                     l5127:
  8203                           
  8204                           ; BSR set to: 0
  8205                           ;PIC18F27J53-killifish_light04.c: 137: value = 3 * (value - 250 / 4) / 4 + 250 / 4;
  8206  011908  0EC2               	movlw	194
  8207  01190A  0100               	movlb	0	; () banked
  8208  01190C  256D               	addwf	PWM_set@value& (0+255),w,b
  8209  01190E  6E1F               	movwf	___wmul@multiplier,c
  8210  011910  0EFF               	movlw	255
  8211  011912  0100               	movlb	0	; () banked
  8212  011914  216E               	addwfc	(PWM_set@value+1)& (0+255),w,b
  8213  011916  6E20               	movwf	___wmul@multiplier+1,c
  8214  011918  0E00               	movlw	0
  8215  01191A  6E22               	movwf	___wmul@multiplicand+1,c
  8216  01191C  0E03               	movlw	3
  8217  01191E  6E21               	movwf	___wmul@multiplicand,c
  8218  011920  EC7D  F096         	call	___wmul	;wreg free
  8219  011924  90D8               	bcf	status,0,c
  8220  011926  3220               	rrcf	?___wmul+1,f,c
  8221  011928  321F               	rrcf	?___wmul,f,c
  8222  01192A  90D8               	bcf	status,0,c
  8223  01192C  3220               	rrcf	?___wmul+1,f,c
  8224  01192E  321F               	rrcf	?___wmul,f,c
  8225  011930  0E3E               	movlw	62
  8226  011932  241F               	addwf	?___wmul,w,c
  8227  011934  0100               	movlb	0	; () banked
  8228  011936  6F6D               	movwf	PWM_set@value& (0+255),b
  8229  011938  0E00               	movlw	0
  8230  01193A  2020               	addwfc	?___wmul+1,w,c
  8231  01193C                     L1:
  8232  01193C  0100               	movlb	0	; () banked
  8233  01193E  6F6E               	movwf	(PWM_set@value+1)& (0+255),b
  8234                           
  8235                           ; BSR set to: 0
  8236                           ;PIC18F27J53-killifish_light04.c: 142: }
  8237                           
  8238                           ; BSR set to: 0
  8239                           ;PIC18F27J53-killifish_light04.c: 141: break;
  8240                           
  8241                           ;PIC18F27J53-killifish_light04.c: 140: case 3:
  8242                           
  8243                           ; BSR set to: 0
  8244                           ;PIC18F27J53-killifish_light04.c: 138: }
  8245                           ;PIC18F27J53-killifish_light04.c: 139: break;
  8246  011940  D023               	goto	l5151
  8247  011942                     l5131:
  8248  011942  0100               	movlb	0	; () banked
  8249  011944  5171               	movf	PWM_set@color& (0+255),w,b
  8250                           
  8251                           ; Switch size 1, requested type "space"
  8252                           ; Number of cases is 4, Range of values is 0 to 3
  8253                           ; switch strategies available:
  8254                           ; Name         Instructions Cycles
  8255                           ; simple_byte           13     7 (average)
  8256                           ;	Chosen strategy is simple_byte
  8257  011946  0A00               	xorlw	0	; case 0
  8258  011948  B4D8               	btfsc	status,2,c
  8259  01194A  D7A7               	goto	l5113
  8260  01194C  0A01               	xorlw	1	; case 1
  8261  01194E  B4D8               	btfsc	status,2,c
  8262  011950  D01B               	goto	l5151
  8263  011952  0A03               	xorlw	3	; case 2
  8264  011954  B4D8               	btfsc	status,2,c
  8265  011956  D7CE               	goto	l5123
  8266  011958  0A01               	xorlw	1	; case 3
  8267                           
  8268                           ; BSR set to: 0
  8269                           ;PIC18F27J53-killifish_light04.c: 143: switch (color) {
  8270  01195A  D016               	goto	l5151
  8271  01195C                     l5133:
  8272                           
  8273                           ; BSR set to: 0
  8274                           ;PIC18F27J53-killifish_light04.c: 145: CCP1CONbits.DC1B = 0;
  8275  01195C  0ECF               	movlw	-49
  8276  01195E  16BA               	andwf	4026,f,c	;volatile
  8277                           
  8278                           ; BSR set to: 0
  8279                           ;PIC18F27J53-killifish_light04.c: 146: CCPR1L = value;
  8280  011960  C06D  FFBB         	movff	PWM_set@value,4027	;volatile
  8281                           
  8282                           ;PIC18F27J53-killifish_light04.c: 147: break;
  8283  011964  0012               	return	
  8284  011966                     l5137:
  8285                           
  8286                           ; BSR set to: 0
  8287                           ;PIC18F27J53-killifish_light04.c: 149: CCP2CONbits.DC2B = 0;
  8288  011966  0ECF               	movlw	-49
  8289  011968  16B4               	andwf	4020,f,c	;volatile
  8290                           
  8291                           ; BSR set to: 0
  8292                           ;PIC18F27J53-killifish_light04.c: 150: CCPR2L = value;
  8293  01196A  C06D  FFB5         	movff	PWM_set@value,4021	;volatile
  8294                           
  8295                           ;PIC18F27J53-killifish_light04.c: 151: break;
  8296  01196E  0012               	return	
  8297  011970                     l5141:
  8298                           
  8299                           ; BSR set to: 0
  8300                           ;PIC18F27J53-killifish_light04.c: 153: CCP3CONbits.DC3B = 0;
  8301  011970  0ECF               	movlw	-49
  8302  011972  010F               	movlb	15	; () banked
  8303  011974  1715               	andwf	21,f,b	;volatile
  8304                           
  8305                           ; BSR set to: 15
  8306                           ;PIC18F27J53-killifish_light04.c: 154: CCPR3L = value;
  8307  011976  C06D  FF16         	movff	PWM_set@value,3862	;volatile
  8308                           
  8309                           ;PIC18F27J53-killifish_light04.c: 155: break;
  8310  01197A  0012               	return	
  8311  01197C                     l5145:
  8312                           
  8313                           ;PIC18F27J53-killifish_light04.c: 157: CCP4CONbits.DC4B = 0;
  8314  01197C  0ECF               	movlw	-49
  8315  01197E  010F               	movlb	15	; () banked
  8316  011980  1712               	andwf	18,f,b	;volatile
  8317                           
  8318                           ; BSR set to: 15
  8319                           ;PIC18F27J53-killifish_light04.c: 158: CCPR4L = value;
  8320  011982  C06D  FF13         	movff	PWM_set@value,3859	;volatile
  8321                           
  8322                           ; BSR set to: 15
  8323                           ;PIC18F27J53-killifish_light04.c: 160: }
  8324                           
  8325                           ;PIC18F27J53-killifish_light04.c: 159: break;
  8326  011986  0012               	return	
  8327  011988                     l5151:
  8328  011988  0100               	movlb	0	; () banked
  8329  01198A  5171               	movf	PWM_set@color& (0+255),w,b
  8330                           
  8331                           ; Switch size 1, requested type "space"
  8332                           ; Number of cases is 4, Range of values is 0 to 3
  8333                           ; switch strategies available:
  8334                           ; Name         Instructions Cycles
  8335                           ; simple_byte           13     7 (average)
  8336                           ;	Chosen strategy is simple_byte
  8337  01198C  0A00               	xorlw	0	; case 0
  8338  01198E  B4D8               	btfsc	status,2,c
  8339  011990  D7E5               	goto	l5133
  8340  011992  0A01               	xorlw	1	; case 1
  8341  011994  B4D8               	btfsc	status,2,c
  8342  011996  D7E7               	goto	l5137
  8343  011998  0A03               	xorlw	3	; case 2
  8344  01199A  B4D8               	btfsc	status,2,c
  8345  01199C  D7E9               	goto	l5141
  8346  01199E  0A01               	xorlw	1	; case 3
  8347  0119A0  A4D8               	btfss	status,2,c
  8348  0119A2  0012               	return	
  8349  0119A4  D7EB               	goto	l5145
  8350                           
  8351                           ; BSR set to: 0
  8352  0119A6  0012               	return		;funcret
  8353  0119A8                     __end_of_PWM_set:
  8354                           	opt stack 0
  8355                           tblptru	equ	0xFF8
  8356                           tblptrh	equ	0xFF7
  8357                           tblptrl	equ	0xFF6
  8358                           tablat	equ	0xFF5
  8359                           prodh	equ	0xFF4
  8360                           prodl	equ	0xFF3
  8361                           intcon	equ	0xFF2
  8362                           intcon2	equ	0xFF1
  8363                           postinc0	equ	0xFEE
  8364                           wreg	equ	0xFE8
  8365                           indf1	equ	0xFE7
  8366                           postinc1	equ	0xFE6
  8367                           postdec1	equ	0xFE5
  8368                           fsr1h	equ	0xFE2
  8369                           fsr1l	equ	0xFE1
  8370                           indf2	equ	0xFDF
  8371                           postinc2	equ	0xFDE
  8372                           postdec2	equ	0xFDD
  8373                           fsr2h	equ	0xFDA
  8374                           fsr2l	equ	0xFD9
  8375                           status	equ	0xFD8
  8376                           
  8377 ;; *************** function ___wmul *****************
  8378 ;; Defined at:
  8379 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  8380 ;; Parameters:    Size  Location     Type
  8381 ;;  multiplier      2   30[COMRAM] unsigned int 
  8382 ;;  multiplicand    2   32[COMRAM] unsigned int 
  8383 ;; Auto vars:     Size  Location     Type
  8384 ;;  product         2   34[COMRAM] unsigned int 
  8385 ;; Return value:  Size  Location     Type
  8386 ;;                  2   30[COMRAM] unsigned int 
  8387 ;; Registers used:
  8388 ;;		wreg, status,2, status,0, prodl, prodh
  8389 ;; Tracked objects:
  8390 ;;		On entry : 0/0
  8391 ;;		On exit  : 0/0
  8392 ;;		Unchanged: 0/0
  8393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8394 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8397 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8398 ;;Total ram usage:        6 bytes
  8399 ;; Hardware stack levels used:    1
  8400 ;; Hardware stack levels required when called:    4
  8401 ;; This function calls:
  8402 ;;		Nothing
  8403 ;; This function is called by:
  8404 ;;		_my_atoi
  8405 ;;		_PWM_set
  8406 ;;		_command_operation
  8407 ;;		_sprintf
  8408 ;; This function uses a non-reentrant model
  8409 ;;
  8410                           
  8411                           	psect	text33
  8412  012CFA                     __ptext33:
  8413                           	opt stack 0
  8414  012CFA                     ___wmul:
  8415                           	opt stack 23
  8416                           
  8417                           ;incstack = 0
  8418  012CFA  501F               	movf	___wmul@multiplier,w,c
  8419  012CFC  0221               	mulwf	___wmul@multiplicand,c
  8420  012CFE  CFF3 F023          	movff	prodl,___wmul@product
  8421  012D02  CFF4 F024          	movff	prodh,___wmul@product+1
  8422  012D06  501F               	movf	___wmul@multiplier,w,c
  8423  012D08  0222               	mulwf	___wmul@multiplicand+1,c
  8424  012D0A  50F3               	movf	prodl,w,c
  8425  012D0C  2624               	addwf	___wmul@product+1,f,c
  8426  012D0E  5020               	movf	___wmul@multiplier+1,w,c
  8427  012D10  0221               	mulwf	___wmul@multiplicand,c
  8428  012D12  50F3               	movf	prodl,w,c
  8429  012D14  2624               	addwf	___wmul@product+1,f,c
  8430  012D16  C023  F01F         	movff	___wmul@product,?___wmul
  8431  012D1A  C024  F020         	movff	___wmul@product+1,?___wmul+1
  8432  012D1E  0012               	return	
  8433  012D20  0012               	return		;funcret
  8434  012D22                     __end_of___wmul:
  8435                           	opt stack 0
  8436                           tblptru	equ	0xFF8
  8437                           tblptrh	equ	0xFF7
  8438                           tblptrl	equ	0xFF6
  8439                           tablat	equ	0xFF5
  8440                           prodh	equ	0xFF4
  8441                           prodl	equ	0xFF3
  8442                           intcon	equ	0xFF2
  8443                           intcon2	equ	0xFF1
  8444                           postinc0	equ	0xFEE
  8445                           wreg	equ	0xFE8
  8446                           indf1	equ	0xFE7
  8447                           postinc1	equ	0xFE6
  8448                           postdec1	equ	0xFE5
  8449                           fsr1h	equ	0xFE2
  8450                           fsr1l	equ	0xFE1
  8451                           indf2	equ	0xFDF
  8452                           postinc2	equ	0xFDE
  8453                           postdec2	equ	0xFDD
  8454                           fsr2h	equ	0xFDA
  8455                           fsr2l	equ	0xFD9
  8456                           status	equ	0xFD8
  8457                           
  8458 ;; *************** function ___lwdiv *****************
  8459 ;; Defined at:
  8460 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  8461 ;; Parameters:    Size  Location     Type
  8462 ;;  dividend        2    6[BANK0 ] unsigned int 
  8463 ;;  divisor         2    8[BANK0 ] unsigned int 
  8464 ;; Auto vars:     Size  Location     Type
  8465 ;;  quotient        2   11[BANK0 ] unsigned int 
  8466 ;;  counter         1   10[BANK0 ] unsigned char 
  8467 ;; Return value:  Size  Location     Type
  8468 ;;                  2    6[BANK0 ] unsigned int 
  8469 ;; Registers used:
  8470 ;;		wreg, status,2, status,0
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/0
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8476 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8477 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8479 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8480 ;;Total ram usage:        7 bytes
  8481 ;; Hardware stack levels used:    1
  8482 ;; Hardware stack levels required when called:    4
  8483 ;; This function calls:
  8484 ;;		Nothing
  8485 ;; This function is called by:
  8486 ;;		_ringbuf_put_num
  8487 ;;		_PWM_set
  8488 ;;		_command_operation
  8489 ;;		_sprintf
  8490 ;;		_tx_sendn
  8491 ;;		_my_utoa
  8492 ;; This function uses a non-reentrant model
  8493 ;;
  8494                           
  8495                           	psect	text34
  8496  01275C                     __ptext34:
  8497                           	opt stack 0
  8498  01275C                     ___lwdiv:
  8499                           	opt stack 24
  8500                           
  8501                           ;incstack = 0
  8502  01275C  0E00               	movlw	0
  8503  01275E  0100               	movlb	0	; () banked
  8504  012760  6F6C               	movwf	(___lwdiv@quotient+1)& (0+255),b
  8505  012762  0E00               	movlw	0
  8506  012764  6F6B               	movwf	___lwdiv@quotient& (0+255),b
  8507                           
  8508                           ; BSR set to: 0
  8509  012766  0100               	movlb	0	; () banked
  8510  012768  5168               	movf	___lwdiv@divisor& (0+255),w,b
  8511  01276A  0100               	movlb	0	; () banked
  8512  01276C  1169               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  8513  01276E  B4D8               	btfsc	status,2,c
  8514  012770  D031               	goto	l1266
  8515                           
  8516                           ; BSR set to: 0
  8517  012772  0E01               	movlw	1
  8518  012774  0100               	movlb	0	; () banked
  8519  012776  6F6A               	movwf	___lwdiv@counter& (0+255),b
  8520  012778  D007               	goto	l4729
  8521  01277A                     l4727:
  8522                           
  8523                           ; BSR set to: 0
  8524  01277A  0100               	movlb	0	; () banked
  8525  01277C  90D8               	bcf	status,0,c
  8526  01277E  3768               	rlcf	___lwdiv@divisor& (0+255),f,b
  8527  012780  3769               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  8528  012782  0100               	movlb	0	; () banked
  8529  012784  2B6A               	incf	___lwdiv@counter& (0+255),f,b
  8530  012786  D000               	goto	l4729
  8531  012788                     l4729:
  8532                           
  8533                           ; BSR set to: 0
  8534  012788  0100               	movlb	0	; () banked
  8535  01278A  BF69               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  8536  01278C  D002               	goto	l4731
  8537  01278E  D7F5               	goto	l4727
  8538                           
  8539                           ; BSR set to: 0
  8540  012790  D000               	goto	l4731
  8541  012792                     l4731:
  8542                           
  8543                           ; BSR set to: 0
  8544  012792  0100               	movlb	0	; () banked
  8545  012794  90D8               	bcf	status,0,c
  8546  012796  376B               	rlcf	___lwdiv@quotient& (0+255),f,b
  8547  012798  376C               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  8548                           
  8549                           ; BSR set to: 0
  8550  01279A  0100               	movlb	0	; () banked
  8551  01279C  5168               	movf	___lwdiv@divisor& (0+255),w,b
  8552  01279E  0100               	movlb	0	; () banked
  8553  0127A0  5D66               	subwf	___lwdiv@dividend& (0+255),w,b
  8554  0127A2  0100               	movlb	0	; () banked
  8555  0127A4  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8556  0127A6  0100               	movlb	0	; () banked
  8557  0127A8  5967               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  8558  0127AA  A0D8               	btfss	status,0,c
  8559  0127AC  D00B               	goto	l4739
  8560                           
  8561                           ; BSR set to: 0
  8562  0127AE  0100               	movlb	0	; () banked
  8563  0127B0  5168               	movf	___lwdiv@divisor& (0+255),w,b
  8564  0127B2  0100               	movlb	0	; () banked
  8565  0127B4  5F66               	subwf	___lwdiv@dividend& (0+255),f,b
  8566  0127B6  0100               	movlb	0	; () banked
  8567  0127B8  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8568  0127BA  0100               	movlb	0	; () banked
  8569  0127BC  5B67               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  8570                           
  8571                           ; BSR set to: 0
  8572  0127BE  0100               	movlb	0	; () banked
  8573  0127C0  816B               	bsf	___lwdiv@quotient& (0+255),0,b
  8574  0127C2  D000               	goto	l4739
  8575  0127C4                     l4739:
  8576                           
  8577                           ; BSR set to: 0
  8578  0127C4  0100               	movlb	0	; () banked
  8579  0127C6  90D8               	bcf	status,0,c
  8580  0127C8  3369               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  8581  0127CA  3368               	rrcf	___lwdiv@divisor& (0+255),f,b
  8582                           
  8583                           ; BSR set to: 0
  8584  0127CC  0100               	movlb	0	; () banked
  8585  0127CE  2F6A               	decfsz	___lwdiv@counter& (0+255),f,b
  8586  0127D0  D7E0               	goto	l4731
  8587  0127D2  D000               	goto	l1266
  8588  0127D4                     l1266:
  8589                           
  8590                           ; BSR set to: 0
  8591  0127D4  C06B  F066         	movff	___lwdiv@quotient,?___lwdiv
  8592  0127D8  C06C  F067         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8593                           
  8594                           ; BSR set to: 0
  8595  0127DC  0012               	return		;funcret
  8596  0127DE                     __end_of___lwdiv:
  8597                           	opt stack 0
  8598                           tblptru	equ	0xFF8
  8599                           tblptrh	equ	0xFF7
  8600                           tblptrl	equ	0xFF6
  8601                           tablat	equ	0xFF5
  8602                           prodh	equ	0xFF4
  8603                           prodl	equ	0xFF3
  8604                           intcon	equ	0xFF2
  8605                           intcon2	equ	0xFF1
  8606                           postinc0	equ	0xFEE
  8607                           wreg	equ	0xFE8
  8608                           indf1	equ	0xFE7
  8609                           postinc1	equ	0xFE6
  8610                           postdec1	equ	0xFE5
  8611                           fsr1h	equ	0xFE2
  8612                           fsr1l	equ	0xFE1
  8613                           indf2	equ	0xFDF
  8614                           postinc2	equ	0xFDE
  8615                           postdec2	equ	0xFDD
  8616                           fsr2h	equ	0xFDA
  8617                           fsr2l	equ	0xFD9
  8618                           status	equ	0xFD8
  8619                           
  8620 ;; *************** function _RTCC_loop *****************
  8621 ;; Defined at:
  8622 ;;		line 387 in file "../My_header\My_RTCC.h"
  8623 ;; Parameters:    Size  Location     Type
  8624 ;;		None
  8625 ;; Auto vars:     Size  Location     Type
  8626 ;;		None
  8627 ;; Return value:  Size  Location     Type
  8628 ;;		None               void
  8629 ;; Registers used:
  8630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8631 ;; Tracked objects:
  8632 ;;		On entry : 0/0
  8633 ;;		On exit  : 0/0
  8634 ;;		Unchanged: 0/0
  8635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8640 ;;Total ram usage:        0 bytes
  8641 ;; Hardware stack levels used:    1
  8642 ;; Hardware stack levels required when called:    8
  8643 ;; This function calls:
  8644 ;;		_RTCC_from_RTCC
  8645 ;; This function is called by:
  8646 ;;		_main
  8647 ;; This function uses a non-reentrant model
  8648 ;;
  8649                           
  8650                           	psect	text35
  8651  012B8A                     __ptext35:
  8652                           	opt stack 0
  8653  012B8A                     _RTCC_loop:
  8654                           	opt stack 22
  8655                           
  8656                           ;My_header\My_RTCC.h: 388: static uint8_t prev_halfsec;
  8657                           ;My_header\My_RTCC.h: 389: while (RTCCFGbits.RTCSYNC);
  8658                           
  8659                           ; BSR set to: 0
  8660                           ;incstack = 0
  8661  012B8A  D000               	goto	l453
  8662  012B8C                     l453:
  8663  012B8C  010F               	movlb	15	; () banked
  8664  012B8E  B93F               	btfsc	63,4,b	;volatile
  8665  012B90  D7FD               	goto	l453
  8666                           
  8667                           ; BSR set to: 15
  8668                           ;My_header\My_RTCC.h: 390: halfsec = RTCCFGbits.HALFSEC;
  8669                           
  8670                           ; BSR set to: 15
  8671  012B92  0E00               	movlw	0
  8672  012B94  B73F               	btfsc	63,3,b	;volatile
  8673  012B96  0E01               	movlw	1
  8674  012B98  0100               	movlb	0	; () banked
  8675  012B9A  6FC9               	movwf	_halfsec& (0+255),b
  8676                           
  8677                           ; BSR set to: 0
  8678                           ;My_header\My_RTCC.h: 391: if (prev_halfsec != halfsec) {
  8679  012B9C  0100               	movlb	0	; () banked
  8680  012B9E  51C9               	movf	_halfsec& (0+255),w,b
  8681  012BA0  0100               	movlb	0	; () banked
  8682  012BA2  19C7               	xorwf	RTCC_loop@prev_halfsec& (0+255),w,b
  8683  012BA4  B4D8               	btfsc	status,2,c
  8684  012BA6  0012               	return	
  8685                           
  8686                           ; BSR set to: 0
  8687                           ;My_header\My_RTCC.h: 392: prev_halfsec = halfsec;
  8688  012BA8  C0C9  F0C7         	movff	_halfsec,RTCC_loop@prev_halfsec
  8689                           
  8690                           ;My_header\My_RTCC.h: 393: colon = halfsec;
  8691  012BAC  C0C9  F0C8         	movff	_halfsec,_colon
  8692                           
  8693                           ; BSR set to: 0
  8694                           ;My_header\My_RTCC.h: 394: time_change_flag = 1;
  8695  012BB0  0E01               	movlw	1
  8696  012BB2  0100               	movlb	0	; () banked
  8697  012BB4  6FCB               	movwf	_time_change_flag& (0+255),b
  8698                           
  8699                           ; BSR set to: 0
  8700                           ;My_header\My_RTCC.h: 395: RTCC_from_RTCC(&caltime_now, &epoch_now);
  8701  012BB6  0EF2               	movlw	low _caltime_now
  8702  012BB8  0100               	movlb	0	; () banked
  8703  012BBA  6F7F               	movwf	RTCC_from_RTCC@ct& (0+255),b
  8704  012BBC  0E00               	movlw	high _caltime_now
  8705  012BBE  0100               	movlb	0	; () banked
  8706  012BC0  6F80               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  8707  012BC2  0EF9               	movlw	low _epoch_now
  8708  012BC4  0100               	movlb	0	; () banked
  8709  012BC6  6F81               	movwf	RTCC_from_RTCC@ep& (0+255),b
  8710  012BC8  0E00               	movlw	high _epoch_now
  8711  012BCA  0100               	movlb	0	; () banked
  8712  012BCC  6F82               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  8713  012BCE  ECD8  F096         	call	_RTCC_from_RTCC	;wreg free
  8714  012BD2  0012               	return	
  8715  012BD4  0012               	return		;funcret
  8716  012BD6                     __end_of_RTCC_loop:
  8717                           	opt stack 0
  8718                           tblptru	equ	0xFF8
  8719                           tblptrh	equ	0xFF7
  8720                           tblptrl	equ	0xFF6
  8721                           tablat	equ	0xFF5
  8722                           prodh	equ	0xFF4
  8723                           prodl	equ	0xFF3
  8724                           intcon	equ	0xFF2
  8725                           intcon2	equ	0xFF1
  8726                           postinc0	equ	0xFEE
  8727                           wreg	equ	0xFE8
  8728                           indf1	equ	0xFE7
  8729                           postinc1	equ	0xFE6
  8730                           postdec1	equ	0xFE5
  8731                           fsr1h	equ	0xFE2
  8732                           fsr1l	equ	0xFE1
  8733                           indf2	equ	0xFDF
  8734                           postinc2	equ	0xFDE
  8735                           postdec2	equ	0xFDD
  8736                           fsr2h	equ	0xFDA
  8737                           fsr2l	equ	0xFD9
  8738                           status	equ	0xFD8
  8739                           
  8740 ;; *************** function _RTCC_from_RTCC *****************
  8741 ;; Defined at:
  8742 ;;		line 231 in file "../My_header\My_RTCC.h"
  8743 ;; Parameters:    Size  Location     Type
  8744 ;;  ct              2   31[BANK0 ] PTR struct .
  8745 ;;		 -> caltime_now(7), 
  8746 ;;  ep              2   33[BANK0 ] PTR unsigned long 
  8747 ;;		 -> epoch_now(4), 
  8748 ;; Auto vars:     Size  Location     Type
  8749 ;;		None
  8750 ;; Return value:  Size  Location     Type
  8751 ;;		None               void
  8752 ;; Registers used:
  8753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8754 ;; Tracked objects:
  8755 ;;		On entry : 0/0
  8756 ;;		On exit  : 0/0
  8757 ;;		Unchanged: 0/0
  8758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8759 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8762 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8763 ;;Total ram usage:        4 bytes
  8764 ;; Hardware stack levels used:    1
  8765 ;; Hardware stack levels required when called:    7
  8766 ;; This function calls:
  8767 ;;		_RTCC_to_caltime
  8768 ;;		_caltime_to_epoch
  8769 ;; This function is called by:
  8770 ;;		_RTCC_loop
  8771 ;;		_print_time
  8772 ;;		_light_loop
  8773 ;;		_main
  8774 ;;		_RTCC_adjust_time_inc
  8775 ;;		_RTCC_adjust_time_dec
  8776 ;; This function uses a non-reentrant model
  8777 ;;
  8778                           
  8779                           	psect	text36
  8780  012DB0                     __ptext36:
  8781                           	opt stack 0
  8782  012DB0                     _RTCC_from_RTCC:
  8783                           	opt stack 19
  8784                           
  8785                           ;My_header\My_RTCC.h: 232: RTCC_to_caltime(ct);
  8786                           
  8787                           ;incstack = 0
  8788  012DB0  C07F  F021         	movff	RTCC_from_RTCC@ct,RTCC_to_caltime@ct
  8789  012DB4  C080  F022         	movff	RTCC_from_RTCC@ct+1,RTCC_to_caltime@ct+1
  8790  012DB8  EC0A  F091         	call	_RTCC_to_caltime	;wreg free
  8791                           
  8792                           ;My_header\My_RTCC.h: 233: caltime_to_epoch(ct, ep);
  8793  012DBC  C07F  F070         	movff	RTCC_from_RTCC@ct,caltime_to_epoch@ct
  8794  012DC0  C080  F071         	movff	RTCC_from_RTCC@ct+1,caltime_to_epoch@ct+1
  8795  012DC4  C081  F072         	movff	RTCC_from_RTCC@ep,caltime_to_epoch@ep
  8796  012DC8  C082  F073         	movff	RTCC_from_RTCC@ep+1,caltime_to_epoch@ep+1
  8797  012DCC  EC72  F087         	call	_caltime_to_epoch	;wreg free
  8798  012DD0  0012               	return		;funcret
  8799  012DD2                     __end_of_RTCC_from_RTCC:
  8800                           	opt stack 0
  8801                           tblptru	equ	0xFF8
  8802                           tblptrh	equ	0xFF7
  8803                           tblptrl	equ	0xFF6
  8804                           tablat	equ	0xFF5
  8805                           prodh	equ	0xFF4
  8806                           prodl	equ	0xFF3
  8807                           intcon	equ	0xFF2
  8808                           intcon2	equ	0xFF1
  8809                           postinc0	equ	0xFEE
  8810                           wreg	equ	0xFE8
  8811                           indf1	equ	0xFE7
  8812                           postinc1	equ	0xFE6
  8813                           postdec1	equ	0xFE5
  8814                           fsr1h	equ	0xFE2
  8815                           fsr1l	equ	0xFE1
  8816                           indf2	equ	0xFDF
  8817                           postinc2	equ	0xFDE
  8818                           postdec2	equ	0xFDD
  8819                           fsr2h	equ	0xFDA
  8820                           fsr2l	equ	0xFD9
  8821                           status	equ	0xFD8
  8822                           
  8823 ;; *************** function _caltime_to_epoch *****************
  8824 ;; Defined at:
  8825 ;;		line 211 in file "../My_header\My_RTCC.h"
  8826 ;; Parameters:    Size  Location     Type
  8827 ;;  ct              2   16[BANK0 ] PTR struct .
  8828 ;;		 -> caltime_now(7), 
  8829 ;;  ep              2   18[BANK0 ] PTR unsigned long 
  8830 ;;		 -> epoch_now(4), 
  8831 ;; Auto vars:     Size  Location     Type
  8832 ;;  month           1   30[BANK0 ] unsigned char 
  8833 ;;  month           1   25[BANK0 ] unsigned char 
  8834 ;;  year            1   24[BANK0 ] unsigned char 
  8835 ;;  epoch           4   26[BANK0 ] unsigned long 
  8836 ;; Return value:  Size  Location     Type
  8837 ;;		None               void
  8838 ;; Registers used:
  8839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8840 ;; Tracked objects:
  8841 ;;		On entry : 0/0
  8842 ;;		On exit  : 0/0
  8843 ;;		Unchanged: 0/0
  8844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8845 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8846 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8847 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8848 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8849 ;;Total ram usage:       15 bytes
  8850 ;; Hardware stack levels used:    1
  8851 ;; Hardware stack levels required when called:    6
  8852 ;; This function calls:
  8853 ;;		___lmul
  8854 ;;		_month_length
  8855 ;; This function is called by:
  8856 ;;		_RTCC_from_RTCC
  8857 ;;		_RTCC_from_caltime
  8858 ;; This function uses a non-reentrant model
  8859 ;;
  8860                           
  8861                           	psect	text37
  8862  010EE4                     __ptext37:
  8863                           	opt stack 0
  8864  010EE4                     _caltime_to_epoch:
  8865                           	opt stack 19
  8866                           
  8867                           ;My_header\My_RTCC.h: 212: epoch_t epoch = 0;
  8868                           
  8869                           ;incstack = 0
  8870  010EE4  0E00               	movlw	0
  8871  010EE6  0100               	movlb	0	; () banked
  8872  010EE8  6F7A               	movwf	caltime_to_epoch@epoch& (0+255),b
  8873  010EEA  0E00               	movlw	0
  8874  010EEC  6F7B               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
  8875  010EEE  0E00               	movlw	0
  8876  010EF0  6F7C               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
  8877  010EF2  0E00               	movlw	0
  8878  010EF4  6F7D               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
  8879                           
  8880                           ;My_header\My_RTCC.h: 213: for (uint8_t year = 0; year < ct->YY; year++) {
  8881  010EF6  0E00               	movlw	0
  8882  010EF8  0100               	movlb	0	; () banked
  8883  010EFA  6F78               	movwf	caltime_to_epoch@year& (0+255),b
  8884  010EFC  D038               	goto	l4687
  8885  010EFE                     l4673:
  8886                           
  8887                           ; BSR set to: 0
  8888                           ;My_header\My_RTCC.h: 214: for (uint8_t month = 1; month <= 12; month++) {
  8889  010EFE  0E01               	movlw	1
  8890  010F00  0100               	movlb	0	; () banked
  8891  010F02  6F7E               	movwf	caltime_to_epoch@month& (0+255),b
  8892  010F04                     l4675:
  8893                           
  8894                           ; BSR set to: 0
  8895  010F04  0E0C               	movlw	12
  8896  010F06  0100               	movlb	0	; () banked
  8897  010F08  657E               	cpfsgt	caltime_to_epoch@month& (0+255),b
  8898  010F0A  D001               	goto	l4679
  8899                           
  8900                           ; BSR set to: 0
  8901  010F0C  D02D               	goto	l4685
  8902  010F0E                     l4679:
  8903                           
  8904                           ; BSR set to: 0
  8905                           ;My_header\My_RTCC.h: 215: epoch += ((epoch_t)60*60*24) * month_length(year, month);
  8906  010F0E  C07E  F025         	movff	caltime_to_epoch@month,month_length@month
  8907  010F12  0100               	movlb	0	; () banked
  8908  010F14  5178               	movf	caltime_to_epoch@year& (0+255),w,b
  8909  010F16  EC77  F08E         	call	_month_length
  8910  010F1A  0100               	movlb	0	; () banked
  8911  010F1C  6F74               	movwf	??_caltime_to_epoch& (0+255),b
  8912  010F1E  0100               	movlb	0	; () banked
  8913  010F20  5174               	movf	??_caltime_to_epoch& (0+255),w,b
  8914  010F22  0100               	movlb	0	; () banked
  8915  010F24  6F64               	movwf	___lmul@multiplier& (0+255),b
  8916  010F26  6B65               	clrf	(___lmul@multiplier+1)& (0+255),b
  8917  010F28  6B66               	clrf	(___lmul@multiplier+2)& (0+255),b
  8918  010F2A  6B67               	clrf	(___lmul@multiplier+3)& (0+255),b
  8919  010F2C  0E80               	movlw	128
  8920  010F2E  0100               	movlb	0	; () banked
  8921  010F30  6F68               	movwf	___lmul@multiplicand& (0+255),b
  8922  010F32  0E51               	movlw	81
  8923  010F34  6F69               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8924  010F36  0E01               	movlw	1
  8925  010F38  6F6A               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8926  010F3A  0E00               	movlw	0
  8927  010F3C  6F6B               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8928  010F3E  EC30  F094         	call	___lmul	;wreg free
  8929  010F42  0100               	movlb	0	; () banked
  8930  010F44  5164               	movf	?___lmul& (0+255),w,b
  8931  010F46  0100               	movlb	0	; () banked
  8932  010F48  277A               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8933  010F4A  0100               	movlb	0	; () banked
  8934  010F4C  5165               	movf	(?___lmul+1)& (0+255),w,b
  8935  010F4E  0100               	movlb	0	; () banked
  8936  010F50  237B               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8937  010F52  0100               	movlb	0	; () banked
  8938  010F54  5166               	movf	(?___lmul+2)& (0+255),w,b
  8939  010F56  0100               	movlb	0	; () banked
  8940  010F58  237C               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8941  010F5A  0100               	movlb	0	; () banked
  8942  010F5C  5167               	movf	(?___lmul+3)& (0+255),w,b
  8943  010F5E  0100               	movlb	0	; () banked
  8944  010F60  237D               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8945                           
  8946                           ; BSR set to: 0
  8947  010F62  0100               	movlb	0	; () banked
  8948  010F64  2B7E               	incf	caltime_to_epoch@month& (0+255),f,b
  8949  010F66  D7CE               	goto	l4675
  8950  010F68                     l4685:
  8951                           
  8952                           ; BSR set to: 0
  8953  010F68  0100               	movlb	0	; () banked
  8954  010F6A  2B78               	incf	caltime_to_epoch@year& (0+255),f,b
  8955  010F6C  D000               	goto	l4687
  8956  010F6E                     l4687:
  8957                           
  8958                           ; BSR set to: 0
  8959  010F6E  0100               	movlb	0	; () banked
  8960  010F70  EE20 F006          	lfsr	2,6
  8961  010F74  5170               	movf	caltime_to_epoch@ct& (0+255),w,b
  8962  010F76  26D9               	addwf	fsr2l,f,c
  8963  010F78  5171               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8964  010F7A  22DA               	addwfc	fsr2h,f,c
  8965  010F7C  50DE               	movf	postinc2,w,c
  8966  010F7E  0100               	movlb	0	; () banked
  8967  010F80  5D78               	subwf	caltime_to_epoch@year& (0+255),w,b
  8968  010F82  A0D8               	btfss	status,0,c
  8969  010F84  D7BC               	goto	l4673
  8970                           
  8971                           ; BSR set to: 0
  8972                           ;My_header\My_RTCC.h: 216: }
  8973                           ;My_header\My_RTCC.h: 217: }
  8974                           ;My_header\My_RTCC.h: 218: for (uint8_t month = 1; month < ct->MM; month++) {
  8975                           
  8976                           ; BSR set to: 0
  8977  010F86  0E01               	movlw	1
  8978  010F88  0100               	movlb	0	; () banked
  8979  010F8A  6F79               	movwf	caltime_to_epoch@month_2079& (0+255),b
  8980  010F8C  D033               	goto	l4695
  8981  010F8E                     l4691:
  8982                           
  8983                           ; BSR set to: 0
  8984                           ;My_header\My_RTCC.h: 219: epoch += ((epoch_t)60*60*24) * month_length(ct->YY, month);
  8985  010F8E  C079  F025         	movff	caltime_to_epoch@month_2079,month_length@month
  8986  010F92  0100               	movlb	0	; () banked
  8987  010F94  EE20 F006          	lfsr	2,6
  8988  010F98  5170               	movf	caltime_to_epoch@ct& (0+255),w,b
  8989  010F9A  26D9               	addwf	fsr2l,f,c
  8990  010F9C  5171               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8991  010F9E  22DA               	addwfc	fsr2h,f,c
  8992  010FA0  50DF               	movf	indf2,w,c
  8993  010FA2  EC77  F08E         	call	_month_length
  8994  010FA6  0100               	movlb	0	; () banked
  8995  010FA8  6F74               	movwf	??_caltime_to_epoch& (0+255),b
  8996  010FAA  0100               	movlb	0	; () banked
  8997  010FAC  5174               	movf	??_caltime_to_epoch& (0+255),w,b
  8998  010FAE  0100               	movlb	0	; () banked
  8999  010FB0  6F64               	movwf	___lmul@multiplier& (0+255),b
  9000  010FB2  6B65               	clrf	(___lmul@multiplier+1)& (0+255),b
  9001  010FB4  6B66               	clrf	(___lmul@multiplier+2)& (0+255),b
  9002  010FB6  6B67               	clrf	(___lmul@multiplier+3)& (0+255),b
  9003  010FB8  0E80               	movlw	128
  9004  010FBA  0100               	movlb	0	; () banked
  9005  010FBC  6F68               	movwf	___lmul@multiplicand& (0+255),b
  9006  010FBE  0E51               	movlw	81
  9007  010FC0  6F69               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9008  010FC2  0E01               	movlw	1
  9009  010FC4  6F6A               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9010  010FC6  0E00               	movlw	0
  9011  010FC8  6F6B               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9012  010FCA  EC30  F094         	call	___lmul	;wreg free
  9013  010FCE  0100               	movlb	0	; () banked
  9014  010FD0  5164               	movf	?___lmul& (0+255),w,b
  9015  010FD2  0100               	movlb	0	; () banked
  9016  010FD4  277A               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9017  010FD6  0100               	movlb	0	; () banked
  9018  010FD8  5165               	movf	(?___lmul+1)& (0+255),w,b
  9019  010FDA  0100               	movlb	0	; () banked
  9020  010FDC  237B               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9021  010FDE  0100               	movlb	0	; () banked
  9022  010FE0  5166               	movf	(?___lmul+2)& (0+255),w,b
  9023  010FE2  0100               	movlb	0	; () banked
  9024  010FE4  237C               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9025  010FE6  0100               	movlb	0	; () banked
  9026  010FE8  5167               	movf	(?___lmul+3)& (0+255),w,b
  9027  010FEA  0100               	movlb	0	; () banked
  9028  010FEC  237D               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9029                           
  9030                           ; BSR set to: 0
  9031  010FEE  0100               	movlb	0	; () banked
  9032  010FF0  2B79               	incf	caltime_to_epoch@month_2079& (0+255),f,b
  9033  010FF2  D000               	goto	l4695
  9034  010FF4                     l4695:
  9035                           
  9036                           ; BSR set to: 0
  9037  010FF4  0100               	movlb	0	; () banked
  9038  010FF6  EE20 F005          	lfsr	2,5
  9039  010FFA  5170               	movf	caltime_to_epoch@ct& (0+255),w,b
  9040  010FFC  26D9               	addwf	fsr2l,f,c
  9041  010FFE  5171               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  9042  011000  22DA               	addwfc	fsr2h,f,c
  9043  011002  50DE               	movf	postinc2,w,c
  9044  011004  0100               	movlb	0	; () banked
  9045  011006  5D79               	subwf	caltime_to_epoch@month_2079& (0+255),w,b
  9046  011008  A0D8               	btfss	status,0,c
  9047  01100A  D7C1               	goto	l4691
  9048                           
  9049                           ; BSR set to: 0
  9050                           ;My_header\My_RTCC.h: 220: }
  9051                           ;My_header\My_RTCC.h: 221: epoch += ((epoch_t)60*60*24) * (ct->DD - 1);
  9052                           
  9053                           ; BSR set to: 0
  9054  01100C  0EFF               	movlw	255
  9055  01100E  0100               	movlb	0	; () banked
  9056  011010  6F74               	movwf	??_caltime_to_epoch& (0+255),b
  9057  011012  0EFF               	movlw	255
  9058  011014  0100               	movlb	0	; () banked
  9059  011016  6F75               	movwf	(??_caltime_to_epoch+1)& (0+255),b
  9060  011018  0100               	movlb	0	; () banked
  9061  01101A  EE20 F004          	lfsr	2,4
  9062  01101E  5170               	movf	caltime_to_epoch@ct& (0+255),w,b
  9063  011020  26D9               	addwf	fsr2l,f,c
  9064  011022  5171               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  9065  011024  22DA               	addwfc	fsr2h,f,c
  9066  011026  50DF               	movf	indf2,w,c
  9067  011028  0100               	movlb	0	; () banked
  9068  01102A  6F76               	movwf	(??_caltime_to_epoch+2)& (0+255),b
  9069  01102C  6B77               	clrf	(??_caltime_to_epoch+3)& (0+255),b
  9070  01102E  0100               	movlb	0	; () banked
  9071  011030  5174               	movf	??_caltime_to_epoch& (0+255),w,b
  9072  011032  0100               	movlb	0	; () banked
  9073  011034  2776               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
  9074  011036  0100               	movlb	0	; () banked
  9075  011038  5175               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  9076  01103A  0100               	movlb	0	; () banked
  9077  01103C  2377               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
  9078  01103E  C076  F064         	movff	??_caltime_to_epoch+2,___lmul@multiplier
  9079  011042  C077  F065         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
  9080  011046  0100               	movlb	0	; () banked
  9081  011048  0E00               	movlw	0
  9082  01104A  BF65               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  9083  01104C  0EFF               	movlw	-1
  9084  01104E  6F66               	movwf	(___lmul@multiplier+2)& (0+255),b
  9085  011050  6F67               	movwf	(___lmul@multiplier+3)& (0+255),b
  9086  011052  0E80               	movlw	128
  9087  011054  0100               	movlb	0	; () banked
  9088  011056  6F68               	movwf	___lmul@multiplicand& (0+255),b
  9089  011058  0E51               	movlw	81
  9090  01105A  6F69               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9091  01105C  0E01               	movlw	1
  9092  01105E  6F6A               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9093  011060  0E00               	movlw	0
  9094  011062  6F6B               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9095  011064  EC30  F094         	call	___lmul	;wreg free
  9096  011068  0100               	movlb	0	; () banked
  9097  01106A  5164               	movf	?___lmul& (0+255),w,b
  9098  01106C  0100               	movlb	0	; () banked
  9099  01106E  277A               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9100  011070  0100               	movlb	0	; () banked
  9101  011072  5165               	movf	(?___lmul+1)& (0+255),w,b
  9102  011074  0100               	movlb	0	; () banked
  9103  011076  237B               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9104  011078  0100               	movlb	0	; () banked
  9105  01107A  5166               	movf	(?___lmul+2)& (0+255),w,b
  9106  01107C  0100               	movlb	0	; () banked
  9107  01107E  237C               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9108  011080  0100               	movlb	0	; () banked
  9109  011082  5167               	movf	(?___lmul+3)& (0+255),w,b
  9110  011084  0100               	movlb	0	; () banked
  9111  011086  237D               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9112                           
  9113                           ;My_header\My_RTCC.h: 222: epoch += ((epoch_t)60*60) * ct->hh;
  9114  011088  0100               	movlb	0	; () banked
  9115  01108A  EE20 F002          	lfsr	2,2
  9116  01108E  5170               	movf	caltime_to_epoch@ct& (0+255),w,b
  9117  011090  26D9               	addwf	fsr2l,f,c
  9118  011092  5171               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  9119  011094  22DA               	addwfc	fsr2h,f,c
  9120  011096  50DF               	movf	indf2,w,c
  9121  011098  0100               	movlb	0	; () banked
  9122  01109A  6F74               	movwf	??_caltime_to_epoch& (0+255),b
  9123  01109C  0100               	movlb	0	; () banked
  9124  01109E  5174               	movf	??_caltime_to_epoch& (0+255),w,b
  9125  0110A0  0100               	movlb	0	; () banked
  9126  0110A2  6F64               	movwf	___lmul@multiplier& (0+255),b
  9127  0110A4  6B65               	clrf	(___lmul@multiplier+1)& (0+255),b
  9128  0110A6  6B66               	clrf	(___lmul@multiplier+2)& (0+255),b
  9129  0110A8  6B67               	clrf	(___lmul@multiplier+3)& (0+255),b
  9130  0110AA  0E10               	movlw	16
  9131  0110AC  0100               	movlb	0	; () banked
  9132  0110AE  6F68               	movwf	___lmul@multiplicand& (0+255),b
  9133  0110B0  0E0E               	movlw	14
  9134  0110B2  6F69               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9135  0110B4  0E00               	movlw	0
  9136  0110B6  6F6A               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9137  0110B8  0E00               	movlw	0
  9138  0110BA  6F6B               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9139  0110BC  EC30  F094         	call	___lmul	;wreg free
  9140  0110C0  0100               	movlb	0	; () banked
  9141  0110C2  5164               	movf	?___lmul& (0+255),w,b
  9142  0110C4  0100               	movlb	0	; () banked
  9143  0110C6  277A               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9144  0110C8  0100               	movlb	0	; () banked
  9145  0110CA  5165               	movf	(?___lmul+1)& (0+255),w,b
  9146  0110CC  0100               	movlb	0	; () banked
  9147  0110CE  237B               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9148  0110D0  0100               	movlb	0	; () banked
  9149  0110D2  5166               	movf	(?___lmul+2)& (0+255),w,b
  9150  0110D4  0100               	movlb	0	; () banked
  9151  0110D6  237C               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9152  0110D8  0100               	movlb	0	; () banked
  9153  0110DA  5167               	movf	(?___lmul+3)& (0+255),w,b
  9154  0110DC  0100               	movlb	0	; () banked
  9155  0110DE  237D               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9156                           
  9157                           ;My_header\My_RTCC.h: 223: epoch += ((epoch_t)60) * ct->mm;
  9158  0110E0  0100               	movlb	0	; () banked
  9159  0110E2  EE20 F001          	lfsr	2,1
  9160  0110E6  5170               	movf	caltime_to_epoch@ct& (0+255),w,b
  9161  0110E8  26D9               	addwf	fsr2l,f,c
  9162  0110EA  5171               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  9163  0110EC  22DA               	addwfc	fsr2h,f,c
  9164  0110EE  50DF               	movf	indf2,w,c
  9165  0110F0  0100               	movlb	0	; () banked
  9166  0110F2  6F74               	movwf	??_caltime_to_epoch& (0+255),b
  9167  0110F4  0100               	movlb	0	; () banked
  9168  0110F6  5174               	movf	??_caltime_to_epoch& (0+255),w,b
  9169  0110F8  0100               	movlb	0	; () banked
  9170  0110FA  6F64               	movwf	___lmul@multiplier& (0+255),b
  9171  0110FC  6B65               	clrf	(___lmul@multiplier+1)& (0+255),b
  9172  0110FE  6B66               	clrf	(___lmul@multiplier+2)& (0+255),b
  9173  011100  6B67               	clrf	(___lmul@multiplier+3)& (0+255),b
  9174  011102  0E3C               	movlw	60
  9175  011104  0100               	movlb	0	; () banked
  9176  011106  6F68               	movwf	___lmul@multiplicand& (0+255),b
  9177  011108  0E00               	movlw	0
  9178  01110A  6F69               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9179  01110C  0E00               	movlw	0
  9180  01110E  6F6A               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9181  011110  0E00               	movlw	0
  9182  011112  6F6B               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9183  011114  EC30  F094         	call	___lmul	;wreg free
  9184  011118  0100               	movlb	0	; () banked
  9185  01111A  5164               	movf	?___lmul& (0+255),w,b
  9186  01111C  0100               	movlb	0	; () banked
  9187  01111E  277A               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9188  011120  0100               	movlb	0	; () banked
  9189  011122  5165               	movf	(?___lmul+1)& (0+255),w,b
  9190  011124  0100               	movlb	0	; () banked
  9191  011126  237B               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9192  011128  0100               	movlb	0	; () banked
  9193  01112A  5166               	movf	(?___lmul+2)& (0+255),w,b
  9194  01112C  0100               	movlb	0	; () banked
  9195  01112E  237C               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9196  011130  0100               	movlb	0	; () banked
  9197  011132  5167               	movf	(?___lmul+3)& (0+255),w,b
  9198  011134  0100               	movlb	0	; () banked
  9199  011136  237D               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9200                           
  9201                           ; BSR set to: 0
  9202                           ;My_header\My_RTCC.h: 224: epoch += ct->ss;
  9203  011138  C070  FFD9         	movff	caltime_to_epoch@ct,fsr2l
  9204  01113C  C071  FFDA         	movff	caltime_to_epoch@ct+1,fsr2h
  9205  011140  50DF               	movf	indf2,w,c
  9206  011142  0100               	movlb	0	; () banked
  9207  011144  6F74               	movwf	??_caltime_to_epoch& (0+255),b
  9208  011146  0100               	movlb	0	; () banked
  9209  011148  5174               	movf	??_caltime_to_epoch& (0+255),w,b
  9210  01114A  0100               	movlb	0	; () banked
  9211  01114C  277A               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9212  01114E  0E00               	movlw	0
  9213  011150  237B               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9214  011152  237C               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9215  011154  237D               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9216                           
  9217                           ; BSR set to: 0
  9218                           ;My_header\My_RTCC.h: 226: *ep = epoch;
  9219  011156  C072  FFD9         	movff	caltime_to_epoch@ep,fsr2l
  9220  01115A  C073  FFDA         	movff	caltime_to_epoch@ep+1,fsr2h
  9221  01115E  C07A  FFDE         	movff	caltime_to_epoch@epoch,postinc2
  9222  011162  C07B  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
  9223  011166  C07C  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
  9224  01116A  C07D  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
  9225                           
  9226                           ; BSR set to: 0
  9227  01116E  0012               	return		;funcret
  9228  011170                     __end_of_caltime_to_epoch:
  9229                           	opt stack 0
  9230                           tblptru	equ	0xFF8
  9231                           tblptrh	equ	0xFF7
  9232                           tblptrl	equ	0xFF6
  9233                           tablat	equ	0xFF5
  9234                           prodh	equ	0xFF4
  9235                           prodl	equ	0xFF3
  9236                           intcon	equ	0xFF2
  9237                           intcon2	equ	0xFF1
  9238                           postinc0	equ	0xFEE
  9239                           wreg	equ	0xFE8
  9240                           indf1	equ	0xFE7
  9241                           postinc1	equ	0xFE6
  9242                           postdec1	equ	0xFE5
  9243                           fsr1h	equ	0xFE2
  9244                           fsr1l	equ	0xFE1
  9245                           indf2	equ	0xFDF
  9246                           postinc2	equ	0xFDE
  9247                           postdec2	equ	0xFDD
  9248                           fsr2h	equ	0xFDA
  9249                           fsr2l	equ	0xFD9
  9250                           status	equ	0xFD8
  9251                           
  9252 ;; *************** function _RTCC_to_caltime *****************
  9253 ;; Defined at:
  9254 ;;		line 121 in file "../My_header\My_RTCC.h"
  9255 ;; Parameters:    Size  Location     Type
  9256 ;;  ct              2   32[COMRAM] PTR struct .
  9257 ;;		 -> caltime_now(7), 
  9258 ;; Auto vars:     Size  Location     Type
  9259 ;;  dumy            1   34[COMRAM] unsigned char 
  9260 ;; Return value:  Size  Location     Type
  9261 ;;		None               void
  9262 ;; Registers used:
  9263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9264 ;; Tracked objects:
  9265 ;;		On entry : 0/0
  9266 ;;		On exit  : 0/0
  9267 ;;		Unchanged: 0/0
  9268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9269 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9270 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9272 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9273 ;;Total ram usage:        3 bytes
  9274 ;; Hardware stack levels used:    1
  9275 ;; Hardware stack levels required when called:    5
  9276 ;; This function calls:
  9277 ;;		_x_to_d
  9278 ;; This function is called by:
  9279 ;;		_RTCC_from_RTCC
  9280 ;; This function uses a non-reentrant model
  9281 ;;
  9282                           
  9283                           	psect	text38
  9284  012214                     __ptext38:
  9285                           	opt stack 0
  9286  012214                     _RTCC_to_caltime:
  9287                           	opt stack 20
  9288                           
  9289                           ;My_header\My_RTCC.h: 122: while (RTCCFGbits.RTCSYNC);
  9290                           
  9291                           ; BSR set to: 0
  9292                           ;incstack = 0
  9293  012214  D000               	goto	l346
  9294  012216                     l346:
  9295  012216  010F               	movlb	15	; () banked
  9296  012218  B93F               	btfsc	63,4,b	;volatile
  9297  01221A  D7FD               	goto	l346
  9298                           
  9299                           ; BSR set to: 15
  9300                           ;My_header\My_RTCC.h: 124: RTCCFGbits.RTCPTR0 = 1;
  9301  01221C  010F               	movlb	15	; () banked
  9302  01221E  813F               	bsf	63,0,b	;volatile
  9303                           
  9304                           ;My_header\My_RTCC.h: 125: RTCCFGbits.RTCPTR1 = 1;
  9305  012220  010F               	movlb	15	; () banked
  9306  012222  833F               	bsf	63,1,b	;volatile
  9307                           
  9308                           ; BSR set to: 15
  9309                           ;My_header\My_RTCC.h: 127: ct->YY = x_to_d(RTCVALL);
  9310  012224  EE20 F006          	lfsr	2,6
  9311  012228  5021               	movf	RTCC_to_caltime@ct,w,c
  9312  01222A  26D9               	addwf	fsr2l,f,c
  9313  01222C  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9314  01222E  22DA               	addwfc	fsr2h,f,c
  9315  012230  010F               	movlb	15	; () banked
  9316  012232  513A               	movf	58,w,b	;volatile
  9317  012234  EC18  F097         	call	_x_to_d
  9318  012238  6EDF               	movwf	indf2,c
  9319                           
  9320                           ;My_header\My_RTCC.h: 128: uint8_t dumy = RTCVALH;
  9321  01223A  CF3B F023          	movff	3899,RTCC_to_caltime@dumy	;volatile
  9322                           
  9323                           ;My_header\My_RTCC.h: 129: ct->DD = x_to_d(RTCVALL);
  9324  01223E  EE20 F004          	lfsr	2,4
  9325  012242  5021               	movf	RTCC_to_caltime@ct,w,c
  9326  012244  26D9               	addwf	fsr2l,f,c
  9327  012246  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9328  012248  22DA               	addwfc	fsr2h,f,c
  9329  01224A  010F               	movlb	15	; () banked
  9330  01224C  513A               	movf	58,w,b	;volatile
  9331  01224E  EC18  F097         	call	_x_to_d
  9332  012252  6EDF               	movwf	indf2,c
  9333                           
  9334                           ;My_header\My_RTCC.h: 130: ct->MM = x_to_d(RTCVALH);
  9335  012254  EE20 F005          	lfsr	2,5
  9336  012258  5021               	movf	RTCC_to_caltime@ct,w,c
  9337  01225A  26D9               	addwf	fsr2l,f,c
  9338  01225C  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9339  01225E  22DA               	addwfc	fsr2h,f,c
  9340  012260  010F               	movlb	15	; () banked
  9341  012262  513B               	movf	59,w,b	;volatile
  9342  012264  EC18  F097         	call	_x_to_d
  9343  012268  6EDF               	movwf	indf2,c
  9344                           
  9345                           ;My_header\My_RTCC.h: 131: ct->hh = x_to_d(RTCVALL);
  9346  01226A  EE20 F002          	lfsr	2,2
  9347  01226E  5021               	movf	RTCC_to_caltime@ct,w,c
  9348  012270  26D9               	addwf	fsr2l,f,c
  9349  012272  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9350  012274  22DA               	addwfc	fsr2h,f,c
  9351  012276  010F               	movlb	15	; () banked
  9352  012278  513A               	movf	58,w,b	;volatile
  9353  01227A  EC18  F097         	call	_x_to_d
  9354  01227E  6EDF               	movwf	indf2,c
  9355                           
  9356                           ;My_header\My_RTCC.h: 132: ct->EE = x_to_d(RTCVALH);
  9357  012280  EE20 F003          	lfsr	2,3
  9358  012284  5021               	movf	RTCC_to_caltime@ct,w,c
  9359  012286  26D9               	addwf	fsr2l,f,c
  9360  012288  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9361  01228A  22DA               	addwfc	fsr2h,f,c
  9362  01228C  010F               	movlb	15	; () banked
  9363  01228E  513B               	movf	59,w,b	;volatile
  9364  012290  EC18  F097         	call	_x_to_d
  9365  012294  6EDF               	movwf	indf2,c
  9366                           
  9367                           ;My_header\My_RTCC.h: 133: ct->ss = x_to_d(RTCVALL);
  9368  012296  010F               	movlb	15	; () banked
  9369  012298  513A               	movf	58,w,b	;volatile
  9370  01229A  EC18  F097         	call	_x_to_d
  9371  01229E  C021  FFD9         	movff	RTCC_to_caltime@ct,fsr2l
  9372  0122A2  C022  FFDA         	movff	RTCC_to_caltime@ct+1,fsr2h
  9373  0122A6  6EDF               	movwf	indf2,c
  9374                           
  9375                           ;My_header\My_RTCC.h: 134: ct->mm = x_to_d(RTCVALH);
  9376  0122A8  EE20 F001          	lfsr	2,1
  9377  0122AC  5021               	movf	RTCC_to_caltime@ct,w,c
  9378  0122AE  26D9               	addwf	fsr2l,f,c
  9379  0122B0  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9380  0122B2  22DA               	addwfc	fsr2h,f,c
  9381  0122B4  010F               	movlb	15	; () banked
  9382  0122B6  513B               	movf	59,w,b	;volatile
  9383  0122B8  EC18  F097         	call	_x_to_d
  9384  0122BC  6EDF               	movwf	indf2,c
  9385  0122BE  0012               	return		;funcret
  9386  0122C0                     __end_of_RTCC_to_caltime:
  9387                           	opt stack 0
  9388                           tblptru	equ	0xFF8
  9389                           tblptrh	equ	0xFF7
  9390                           tblptrl	equ	0xFF6
  9391                           tablat	equ	0xFF5
  9392                           prodh	equ	0xFF4
  9393                           prodl	equ	0xFF3
  9394                           intcon	equ	0xFF2
  9395                           intcon2	equ	0xFF1
  9396                           postinc0	equ	0xFEE
  9397                           wreg	equ	0xFE8
  9398                           indf1	equ	0xFE7
  9399                           postinc1	equ	0xFE6
  9400                           postdec1	equ	0xFE5
  9401                           fsr1h	equ	0xFE2
  9402                           fsr1l	equ	0xFE1
  9403                           indf2	equ	0xFDF
  9404                           postinc2	equ	0xFDE
  9405                           postdec2	equ	0xFDD
  9406                           fsr2h	equ	0xFDA
  9407                           fsr2l	equ	0xFD9
  9408                           status	equ	0xFD8
  9409                           
  9410 ;; *************** function _x_to_d *****************
  9411 ;; Defined at:
  9412 ;;		line 81 in file "../My_header\My_RTCC.h"
  9413 ;; Parameters:    Size  Location     Type
  9414 ;;  hex             1    wreg     unsigned char 
  9415 ;; Auto vars:     Size  Location     Type
  9416 ;;  hex             1   31[COMRAM] unsigned char 
  9417 ;; Return value:  Size  Location     Type
  9418 ;;                  1    wreg      unsigned char 
  9419 ;; Registers used:
  9420 ;;		wreg, status,2, status,0, prodl, prodh
  9421 ;; Tracked objects:
  9422 ;;		On entry : 0/0
  9423 ;;		On exit  : 0/0
  9424 ;;		Unchanged: 0/0
  9425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9427 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9428 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9429 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9430 ;;Total ram usage:        2 bytes
  9431 ;; Hardware stack levels used:    1
  9432 ;; Hardware stack levels required when called:    4
  9433 ;; This function calls:
  9434 ;;		Nothing
  9435 ;; This function is called by:
  9436 ;;		_RTCC_to_caltime
  9437 ;; This function uses a non-reentrant model
  9438 ;;
  9439                           
  9440                           	psect	text39
  9441  012E30                     __ptext39:
  9442                           	opt stack 0
  9443  012E30                     _x_to_d:
  9444                           	opt stack 20
  9445                           
  9446                           ;incstack = 0
  9447                           ;x_to_d@hex stored from wreg
  9448  012E30  6E20               	movwf	x_to_d@hex,c
  9449                           
  9450                           ;My_header\My_RTCC.h: 82: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
  9451  012E32  C020  F01F         	movff	x_to_d@hex,??_x_to_d
  9452  012E36  0E0F               	movlw	15
  9453  012E38  161F               	andwf	??_x_to_d,f,c
  9454  012E3A  3820               	swapf	x_to_d@hex,w,c
  9455  012E3C  0B0F               	andlw	15
  9456  012E3E  0B0F               	andlw	15
  9457  012E40  0D0A               	mullw	10
  9458  012E42  50F3               	movf	prodl,w,c
  9459  012E44  241F               	addwf	??_x_to_d,w,c
  9460  012E46  0012               	return	
  9461  012E48  0012               	return		;funcret
  9462  012E4A                     __end_of_x_to_d:
  9463                           	opt stack 0
  9464                           tblptru	equ	0xFF8
  9465                           tblptrh	equ	0xFF7
  9466                           tblptrl	equ	0xFF6
  9467                           tablat	equ	0xFF5
  9468                           prodh	equ	0xFF4
  9469                           prodl	equ	0xFF3
  9470                           intcon	equ	0xFF2
  9471                           intcon2	equ	0xFF1
  9472                           postinc0	equ	0xFEE
  9473                           wreg	equ	0xFE8
  9474                           indf1	equ	0xFE7
  9475                           postinc1	equ	0xFE6
  9476                           postdec1	equ	0xFE5
  9477                           fsr1h	equ	0xFE2
  9478                           fsr1l	equ	0xFE1
  9479                           indf2	equ	0xFDF
  9480                           postinc2	equ	0xFDE
  9481                           postdec2	equ	0xFDD
  9482                           fsr2h	equ	0xFDA
  9483                           fsr2l	equ	0xFD9
  9484                           status	equ	0xFD8
  9485                           
  9486 ;; *************** function _RTCC_from_epoch *****************
  9487 ;; Defined at:
  9488 ;;		line 242 in file "../My_header\My_RTCC.h"
  9489 ;; Parameters:    Size  Location     Type
  9490 ;;  ct              2   53[BANK0 ] PTR struct .
  9491 ;;		 -> caltime_now(7), 
  9492 ;;  ep              2   55[BANK0 ] PTR unsigned long 
  9493 ;;		 -> epoch_now(4), 
  9494 ;; Auto vars:     Size  Location     Type
  9495 ;;		None
  9496 ;; Return value:  Size  Location     Type
  9497 ;;		None               void
  9498 ;; Registers used:
  9499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9500 ;; Tracked objects:
  9501 ;;		On entry : 0/0
  9502 ;;		On exit  : 0/0
  9503 ;;		Unchanged: 0/0
  9504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9505 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9508 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9509 ;;Total ram usage:        4 bytes
  9510 ;; Hardware stack levels used:    1
  9511 ;; Hardware stack levels required when called:    7
  9512 ;; This function calls:
  9513 ;;		_caltime_to_RTCC
  9514 ;;		_epoch_to_caltime
  9515 ;; This function is called by:
  9516 ;;		_main
  9517 ;;		_RTCC_adjust_time_inc
  9518 ;;		_RTCC_adjust_time_dec
  9519 ;; This function uses a non-reentrant model
  9520 ;;
  9521                           
  9522                           	psect	text40
  9523  012DD2                     __ptext40:
  9524                           	opt stack 0
  9525  012DD2                     _RTCC_from_epoch:
  9526                           	opt stack 23
  9527                           
  9528                           ;My_header\My_RTCC.h: 243: epoch_to_caltime(ct, ep);
  9529                           
  9530                           ;incstack = 0
  9531  012DD2  C095  F085         	movff	RTCC_from_epoch@ct,epoch_to_caltime@ct
  9532  012DD6  C096  F086         	movff	RTCC_from_epoch@ct+1,epoch_to_caltime@ct+1
  9533  012DDA  C097  F087         	movff	RTCC_from_epoch@ep,epoch_to_caltime@ep
  9534  012DDE  C098  F088         	movff	RTCC_from_epoch@ep+1,epoch_to_caltime@ep+1
  9535  012DE2  EC0C  F08B         	call	_epoch_to_caltime	;wreg free
  9536                           
  9537                           ;My_header\My_RTCC.h: 244: caltime_to_RTCC(ct);
  9538  012DE6  C095  F061         	movff	RTCC_from_epoch@ct,caltime_to_RTCC@ct
  9539  012DEA  C096  F062         	movff	RTCC_from_epoch@ct+1,caltime_to_RTCC@ct+1
  9540  012DEE  ECA8  F08D         	call	_caltime_to_RTCC	;wreg free
  9541  012DF2  0012               	return		;funcret
  9542  012DF4                     __end_of_RTCC_from_epoch:
  9543                           	opt stack 0
  9544                           tblptru	equ	0xFF8
  9545                           tblptrh	equ	0xFF7
  9546                           tblptrl	equ	0xFF6
  9547                           tablat	equ	0xFF5
  9548                           prodh	equ	0xFF4
  9549                           prodl	equ	0xFF3
  9550                           intcon	equ	0xFF2
  9551                           intcon2	equ	0xFF1
  9552                           postinc0	equ	0xFEE
  9553                           wreg	equ	0xFE8
  9554                           indf1	equ	0xFE7
  9555                           postinc1	equ	0xFE6
  9556                           postdec1	equ	0xFE5
  9557                           fsr1h	equ	0xFE2
  9558                           fsr1l	equ	0xFE1
  9559                           indf2	equ	0xFDF
  9560                           postinc2	equ	0xFDE
  9561                           postdec2	equ	0xFDD
  9562                           fsr2h	equ	0xFDA
  9563                           fsr2l	equ	0xFD9
  9564                           status	equ	0xFD8
  9565                           
  9566 ;; *************** function _epoch_to_caltime *****************
  9567 ;; Defined at:
  9568 ;;		line 157 in file "../My_header\My_RTCC.h"
  9569 ;; Parameters:    Size  Location     Type
  9570 ;;  ct              2   37[BANK0 ] PTR struct .
  9571 ;;		 -> caltime_now(7), 
  9572 ;;  ep              2   39[BANK0 ] PTR unsigned long 
  9573 ;;		 -> epoch_now(4), 
  9574 ;; Auto vars:     Size  Location     Type
  9575 ;;  num             4   49[BANK0 ] unsigned long 
  9576 ;;  day             2   45[BANK0 ] unsigned int 
  9577 ;;  day_since_ep    2   43[BANK0 ] unsigned int 
  9578 ;;  month           1   48[BANK0 ] unsigned char 
  9579 ;;  year            1   47[BANK0 ] unsigned char 
  9580 ;; Return value:  Size  Location     Type
  9581 ;;		None               void
  9582 ;; Registers used:
  9583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9584 ;; Tracked objects:
  9585 ;;		On entry : 0/0
  9586 ;;		On exit  : 0/0
  9587 ;;		Unchanged: 0/0
  9588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9589 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9590 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9591 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9592 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9593 ;;Total ram usage:       16 bytes
  9594 ;; Hardware stack levels used:    1
  9595 ;; Hardware stack levels required when called:    6
  9596 ;; This function calls:
  9597 ;;		_get_quot_rem
  9598 ;;		_month_length
  9599 ;; This function is called by:
  9600 ;;		_RTCC_from_caltime
  9601 ;;		_RTCC_from_epoch
  9602 ;; This function uses a non-reentrant model
  9603 ;;
  9604                           
  9605                           	psect	text41
  9606  011618                     __ptext41:
  9607                           	opt stack 0
  9608  011618                     _epoch_to_caltime:
  9609                           	opt stack 19
  9610                           
  9611                           ;My_header\My_RTCC.h: 160: static uint16_t day_cache = 0;
  9612                           ;My_header\My_RTCC.h: 161: static uint8_t month_cache = 1;
  9613                           ;My_header\My_RTCC.h: 162: static uint8_t year_cache = 0;
  9614                           ;My_header\My_RTCC.h: 163: uint16_t day_since_epoch;
  9615                           ;My_header\My_RTCC.h: 164: uint16_t day;
  9616                           ;My_header\My_RTCC.h: 165: uint8_t year = 0;
  9617                           
  9618                           ;incstack = 0
  9619  011618  0E00               	movlw	0
  9620  01161A  0100               	movlb	0	; () banked
  9621  01161C  6F8F               	movwf	epoch_to_caltime@year& (0+255),b
  9622                           
  9623                           ;My_header\My_RTCC.h: 166: uint8_t month = 1;
  9624  01161E  0E01               	movlw	1
  9625  011620  0100               	movlb	0	; () banked
  9626  011622  6F90               	movwf	epoch_to_caltime@month& (0+255),b
  9627                           
  9628                           ; BSR set to: 0
  9629                           ;My_header\My_RTCC.h: 167: epoch_t num;
  9630                           ;My_header\My_RTCC.h: 169: num = *ep;
  9631  011624  C087  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  9632  011628  C088  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  9633  01162C  CFDE F091          	movff	postinc2,epoch_to_caltime@num
  9634  011630  CFDE F092          	movff	postinc2,epoch_to_caltime@num+1
  9635  011634  CFDE F093          	movff	postinc2,epoch_to_caltime@num+2
  9636  011638  CFDE F094          	movff	postinc2,epoch_to_caltime@num+3
  9637                           
  9638                           ; BSR set to: 0
  9639                           ;My_header\My_RTCC.h: 170: ct->ss = get_quot_rem(&num, 60);
  9640  01163C  0E91               	movlw	low epoch_to_caltime@num
  9641  01163E  0100               	movlb	0	; () banked
  9642  011640  6F7D               	movwf	get_quot_rem@quot& (0+255),b
  9643  011642  0E00               	movlw	high epoch_to_caltime@num
  9644  011644  0100               	movlb	0	; () banked
  9645  011646  6F7E               	movwf	(get_quot_rem@quot+1)& (0+255),b
  9646  011648  0E3C               	movlw	60
  9647  01164A  0100               	movlb	0	; () banked
  9648  01164C  6F7F               	movwf	get_quot_rem@div& (0+255),b
  9649  01164E  ECD4  F08C         	call	_get_quot_rem	;wreg free
  9650  011652  0100               	movlb	0	; () banked
  9651  011654  517D               	movf	?_get_quot_rem& (0+255),w,b
  9652  011656  C085  FFD9         	movff	epoch_to_caltime@ct,fsr2l
  9653  01165A  C086  FFDA         	movff	epoch_to_caltime@ct+1,fsr2h
  9654  01165E  6EDF               	movwf	indf2,c
  9655                           
  9656                           ; BSR set to: 0
  9657                           ;My_header\My_RTCC.h: 171: ct->mm = get_quot_rem(&num, 60);
  9658  011660  0E91               	movlw	low epoch_to_caltime@num
  9659  011662  0100               	movlb	0	; () banked
  9660  011664  6F7D               	movwf	get_quot_rem@quot& (0+255),b
  9661  011666  0E00               	movlw	high epoch_to_caltime@num
  9662  011668  0100               	movlb	0	; () banked
  9663  01166A  6F7E               	movwf	(get_quot_rem@quot+1)& (0+255),b
  9664  01166C  0E3C               	movlw	60
  9665  01166E  0100               	movlb	0	; () banked
  9666  011670  6F7F               	movwf	get_quot_rem@div& (0+255),b
  9667  011672  ECD4  F08C         	call	_get_quot_rem	;wreg free
  9668  011676  0100               	movlb	0	; () banked
  9669  011678  EE20 F001          	lfsr	2,1
  9670  01167C  5185               	movf	epoch_to_caltime@ct& (0+255),w,b
  9671  01167E  26D9               	addwf	fsr2l,f,c
  9672  011680  5186               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  9673  011682  22DA               	addwfc	fsr2h,f,c
  9674  011684  0100               	movlb	0	; () banked
  9675  011686  C07D  FFDF         	movff	?_get_quot_rem,indf2
  9676                           
  9677                           ; BSR set to: 0
  9678                           ;My_header\My_RTCC.h: 172: ct->hh = get_quot_rem(&num, 24);
  9679  01168A  0E91               	movlw	low epoch_to_caltime@num
  9680  01168C  0100               	movlb	0	; () banked
  9681  01168E  6F7D               	movwf	get_quot_rem@quot& (0+255),b
  9682  011690  0E00               	movlw	high epoch_to_caltime@num
  9683  011692  0100               	movlb	0	; () banked
  9684  011694  6F7E               	movwf	(get_quot_rem@quot+1)& (0+255),b
  9685  011696  0E18               	movlw	24
  9686  011698  0100               	movlb	0	; () banked
  9687  01169A  6F7F               	movwf	get_quot_rem@div& (0+255),b
  9688  01169C  ECD4  F08C         	call	_get_quot_rem	;wreg free
  9689  0116A0  0100               	movlb	0	; () banked
  9690  0116A2  EE20 F002          	lfsr	2,2
  9691  0116A6  5185               	movf	epoch_to_caltime@ct& (0+255),w,b
  9692  0116A8  26D9               	addwf	fsr2l,f,c
  9693  0116AA  5186               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  9694  0116AC  22DA               	addwfc	fsr2h,f,c
  9695  0116AE  0100               	movlb	0	; () banked
  9696  0116B0  C07D  FFDF         	movff	?_get_quot_rem,indf2
  9697                           
  9698                           ; BSR set to: 0
  9699                           ;My_header\My_RTCC.h: 173: day = num;
  9700  0116B4  C091  F08D         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  9701  0116B8  C092  F08E         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  9702                           
  9703                           ; BSR set to: 0
  9704                           ;My_header\My_RTCC.h: 174: day_since_epoch = day;
  9705  0116BC  C08D  F08B         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  9706  0116C0  C08E  F08C         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  9707                           
  9708                           ; BSR set to: 0
  9709                           ;My_header\My_RTCC.h: 176: num += 6;
  9710  0116C4  0E06               	movlw	6
  9711  0116C6  0100               	movlb	0	; () banked
  9712  0116C8  2791               	addwf	epoch_to_caltime@num& (0+255),f,b
  9713  0116CA  0E00               	movlw	0
  9714  0116CC  2392               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  9715  0116CE  2393               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  9716  0116D0  2394               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  9717                           
  9718                           ; BSR set to: 0
  9719                           ;My_header\My_RTCC.h: 177: ct->EE = get_quot_rem(&num, 7);
  9720  0116D2  0E91               	movlw	low epoch_to_caltime@num
  9721  0116D4  0100               	movlb	0	; () banked
  9722  0116D6  6F7D               	movwf	get_quot_rem@quot& (0+255),b
  9723  0116D8  0E00               	movlw	high epoch_to_caltime@num
  9724  0116DA  0100               	movlb	0	; () banked
  9725  0116DC  6F7E               	movwf	(get_quot_rem@quot+1)& (0+255),b
  9726  0116DE  0E07               	movlw	7
  9727  0116E0  0100               	movlb	0	; () banked
  9728  0116E2  6F7F               	movwf	get_quot_rem@div& (0+255),b
  9729  0116E4  ECD4  F08C         	call	_get_quot_rem	;wreg free
  9730  0116E8  0100               	movlb	0	; () banked
  9731  0116EA  EE20 F003          	lfsr	2,3
  9732  0116EE  5185               	movf	epoch_to_caltime@ct& (0+255),w,b
  9733  0116F0  26D9               	addwf	fsr2l,f,c
  9734  0116F2  5186               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  9735  0116F4  22DA               	addwfc	fsr2h,f,c
  9736  0116F6  0100               	movlb	0	; () banked
  9737  0116F8  C07D  FFDF         	movff	?_get_quot_rem,indf2
  9738                           
  9739                           ;My_header\My_RTCC.h: 186: while (day >= month_length(year, month)) {
  9740  0116FC  D041               	goto	l4835
  9741  0116FE                     l365:
  9742                           
  9743                           ; BSR set to: 0
  9744                           ;My_header\My_RTCC.h: 187: LATB2 = 1;
  9745  0116FE  848A               	bsf	3978,2,c	;volatile
  9746                           
  9747                           ; BSR set to: 0
  9748                           ;My_header\My_RTCC.h: 188: day = day - month_length(year, month);
  9749  011700  C090  F025         	movff	epoch_to_caltime@month,month_length@month
  9750  011704  0100               	movlb	0	; () banked
  9751  011706  518F               	movf	epoch_to_caltime@year& (0+255),w,b
  9752  011708  EC77  F08E         	call	_month_length
  9753  01170C  0100               	movlb	0	; () banked
  9754  01170E  6F89               	movwf	??_epoch_to_caltime& (0+255),b
  9755  011710  6B8A               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  9756  011712  0100               	movlb	0	; () banked
  9757  011714  1F89               	comf	??_epoch_to_caltime& (0+255),f,b
  9758  011716  1F8A               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  9759  011718  4B89               	infsnz	??_epoch_to_caltime& (0+255),f,b
  9760  01171A  2B8A               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  9761  01171C  0100               	movlb	0	; () banked
  9762  01171E  518D               	movf	epoch_to_caltime@day& (0+255),w,b
  9763  011720  0100               	movlb	0	; () banked
  9764  011722  2589               	addwf	??_epoch_to_caltime& (0+255),w,b
  9765  011724  0100               	movlb	0	; () banked
  9766  011726  6F8D               	movwf	epoch_to_caltime@day& (0+255),b
  9767  011728  0100               	movlb	0	; () banked
  9768  01172A  518E               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  9769  01172C  0100               	movlb	0	; () banked
  9770  01172E  218A               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  9771  011730  0100               	movlb	0	; () banked
  9772  011732  6F8E               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  9773                           
  9774                           ; BSR set to: 0
  9775                           ;My_header\My_RTCC.h: 189: if (month == 12) {
  9776  011734  0E0C               	movlw	12
  9777  011736  0100               	movlb	0	; () banked
  9778  011738  1990               	xorwf	epoch_to_caltime@month& (0+255),w,b
  9779  01173A  A4D8               	btfss	status,2,c
  9780  01173C  D019               	goto	l4829
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;My_header\My_RTCC.h: 190: month = 1;
  9784  01173E  0E01               	movlw	1
  9785  011740  0100               	movlb	0	; () banked
  9786  011742  6F90               	movwf	epoch_to_caltime@month& (0+255),b
  9787                           
  9788                           ; BSR set to: 0
  9789                           ;My_header\My_RTCC.h: 191: year++;
  9790  011744  0100               	movlb	0	; () banked
  9791  011746  2B8F               	incf	epoch_to_caltime@year& (0+255),f,b
  9792                           
  9793                           ; BSR set to: 0
  9794                           ;My_header\My_RTCC.h: 193: if (year >= 100) {
  9795  011748  0E63               	movlw	99
  9796  01174A  0100               	movlb	0	; () banked
  9797  01174C  658F               	cpfsgt	epoch_to_caltime@year& (0+255),b
  9798  01174E  D013               	goto	l4831
  9799                           
  9800                           ; BSR set to: 0
  9801                           ;My_header\My_RTCC.h: 194: *ep -= 3155760000;
  9802  011750  C087  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  9803  011754  C088  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  9804  011758  0E80               	movlw	128
  9805  01175A  5EDE               	subwf	postinc2,f,c
  9806  01175C  0E13               	movlw	19
  9807  01175E  5ADE               	subwfb	postinc2,f,c
  9808  011760  0E19               	movlw	25
  9809  011762  5ADE               	subwfb	postinc2,f,c
  9810  011764  0EBC               	movlw	188
  9811  011766  5ADE               	subwfb	postinc2,f,c
  9812                           
  9813                           ; BSR set to: 0
  9814                           ;My_header\My_RTCC.h: 195: year = 0;
  9815  011768  0E00               	movlw	0
  9816  01176A  0100               	movlb	0	; () banked
  9817  01176C  6F8F               	movwf	epoch_to_caltime@year& (0+255),b
  9818                           
  9819                           ; BSR set to: 0
  9820                           ;My_header\My_RTCC.h: 196: }
  9821                           ;My_header\My_RTCC.h: 197: } else {
  9822  01176E  D003               	goto	l4831
  9823  011770                     l4829:
  9824                           
  9825                           ; BSR set to: 0
  9826                           ;My_header\My_RTCC.h: 198: month++;
  9827  011770  0100               	movlb	0	; () banked
  9828  011772  2B90               	incf	epoch_to_caltime@month& (0+255),f,b
  9829  011774  D000               	goto	l4831
  9830  011776                     l4831:
  9831                           
  9832                           ; BSR set to: 0
  9833                           ;My_header\My_RTCC.h: 199: }
  9834                           ;My_header\My_RTCC.h: 200: month_cache = month;
  9835  011776  C090  F0FF         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  9836                           
  9837                           ; BSR set to: 0
  9838                           ;My_header\My_RTCC.h: 201: year_cache = year;
  9839  01177A  C08F  F0CC         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  9840  01177E  D000               	goto	l4835
  9841  011780                     l4835:
  9842                           
  9843                           ; BSR set to: 0
  9844  011780  C090  F025         	movff	epoch_to_caltime@month,month_length@month
  9845  011784  0100               	movlb	0	; () banked
  9846  011786  518F               	movf	epoch_to_caltime@year& (0+255),w,b
  9847  011788  EC77  F08E         	call	_month_length
  9848  01178C  0100               	movlb	0	; () banked
  9849  01178E  6F89               	movwf	??_epoch_to_caltime& (0+255),b
  9850  011790  0100               	movlb	0	; () banked
  9851  011792  5189               	movf	??_epoch_to_caltime& (0+255),w,b
  9852  011794  0100               	movlb	0	; () banked
  9853  011796  5D8D               	subwf	epoch_to_caltime@day& (0+255),w,b
  9854  011798  0E00               	movlw	0
  9855  01179A  598E               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  9856  01179C  B0D8               	btfsc	status,0,c
  9857  01179E  D7AF               	goto	l365
  9858                           
  9859                           ; BSR set to: 0
  9860                           ;My_header\My_RTCC.h: 202: }
  9861                           ;My_header\My_RTCC.h: 203: day_cache = day_since_epoch - day;
  9862                           
  9863                           ; BSR set to: 0
  9864  0117A0  C08D  F089         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  9865  0117A4  C08E  F08A         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  9866  0117A8  0100               	movlb	0	; () banked
  9867  0117AA  1F89               	comf	??_epoch_to_caltime& (0+255),f,b
  9868  0117AC  1F8A               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  9869  0117AE  4B89               	infsnz	??_epoch_to_caltime& (0+255),f,b
  9870  0117B0  2B8A               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  9871  0117B2  0100               	movlb	0	; () banked
  9872  0117B4  518B               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  9873  0117B6  0100               	movlb	0	; () banked
  9874  0117B8  2589               	addwf	??_epoch_to_caltime& (0+255),w,b
  9875  0117BA  0100               	movlb	0	; () banked
  9876  0117BC  6FC5               	movwf	epoch_to_caltime@day_cache& (0+255),b
  9877  0117BE  0100               	movlb	0	; () banked
  9878  0117C0  518C               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  9879  0117C2  0100               	movlb	0	; () banked
  9880  0117C4  218A               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  9881  0117C6  0100               	movlb	0	; () banked
  9882  0117C8  6FC6               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  9883                           
  9884                           ; BSR set to: 0
  9885                           ;My_header\My_RTCC.h: 204: day++;
  9886  0117CA  0100               	movlb	0	; () banked
  9887  0117CC  4B8D               	infsnz	epoch_to_caltime@day& (0+255),f,b
  9888  0117CE  2B8E               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  9889                           
  9890                           ; BSR set to: 0
  9891                           ;My_header\My_RTCC.h: 206: ct->YY = year;
  9892  0117D0  0100               	movlb	0	; () banked
  9893  0117D2  EE20 F006          	lfsr	2,6
  9894  0117D6  5185               	movf	epoch_to_caltime@ct& (0+255),w,b
  9895  0117D8  26D9               	addwf	fsr2l,f,c
  9896  0117DA  5186               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  9897  0117DC  22DA               	addwfc	fsr2h,f,c
  9898  0117DE  C08F  FFDF         	movff	epoch_to_caltime@year,indf2
  9899                           
  9900                           ; BSR set to: 0
  9901                           ;My_header\My_RTCC.h: 207: ct->MM = month;
  9902  0117E2  0100               	movlb	0	; () banked
  9903  0117E4  EE20 F005          	lfsr	2,5
  9904  0117E8  5185               	movf	epoch_to_caltime@ct& (0+255),w,b
  9905  0117EA  26D9               	addwf	fsr2l,f,c
  9906  0117EC  5186               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  9907  0117EE  22DA               	addwfc	fsr2h,f,c
  9908  0117F0  C090  FFDF         	movff	epoch_to_caltime@month,indf2
  9909                           
  9910                           ; BSR set to: 0
  9911                           ;My_header\My_RTCC.h: 208: ct->DD = day;
  9912  0117F4  0100               	movlb	0	; () banked
  9913  0117F6  EE20 F004          	lfsr	2,4
  9914  0117FA  5185               	movf	epoch_to_caltime@ct& (0+255),w,b
  9915  0117FC  26D9               	addwf	fsr2l,f,c
  9916  0117FE  5186               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  9917  011800  22DA               	addwfc	fsr2h,f,c
  9918  011802  C08D  FFDF         	movff	epoch_to_caltime@day,indf2
  9919                           
  9920                           ; BSR set to: 0
  9921  011806  0012               	return		;funcret
  9922  011808                     __end_of_epoch_to_caltime:
  9923                           	opt stack 0
  9924                           tblptru	equ	0xFF8
  9925                           tblptrh	equ	0xFF7
  9926                           tblptrl	equ	0xFF6
  9927                           tablat	equ	0xFF5
  9928                           prodh	equ	0xFF4
  9929                           prodl	equ	0xFF3
  9930                           intcon	equ	0xFF2
  9931                           intcon2	equ	0xFF1
  9932                           postinc0	equ	0xFEE
  9933                           wreg	equ	0xFE8
  9934                           indf1	equ	0xFE7
  9935                           postinc1	equ	0xFE6
  9936                           postdec1	equ	0xFE5
  9937                           fsr1h	equ	0xFE2
  9938                           fsr1l	equ	0xFE1
  9939                           indf2	equ	0xFDF
  9940                           postinc2	equ	0xFDE
  9941                           postdec2	equ	0xFDD
  9942                           fsr2h	equ	0xFDA
  9943                           fsr2l	equ	0xFD9
  9944                           status	equ	0xFD8
  9945                           
  9946 ;; *************** function _month_length *****************
  9947 ;; Defined at:
  9948 ;;		line 87 in file "../My_header\My_RTCC.h"
  9949 ;; Parameters:    Size  Location     Type
  9950 ;;  year            1    wreg     unsigned char 
  9951 ;;  month           1   36[COMRAM] unsigned char 
  9952 ;; Auto vars:     Size  Location     Type
  9953 ;;  year            1   37[COMRAM] unsigned char 
  9954 ;; Return value:  Size  Location     Type
  9955 ;;                  1    wreg      unsigned char 
  9956 ;; Registers used:
  9957 ;;		wreg, status,2, status,0, cstack
  9958 ;; Tracked objects:
  9959 ;;		On entry : 0/0
  9960 ;;		On exit  : 0/0
  9961 ;;		Unchanged: 0/0
  9962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9963 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9964 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9965 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9966 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9967 ;;Total ram usage:        6 bytes
  9968 ;; Hardware stack levels used:    1
  9969 ;; Hardware stack levels required when called:    5
  9970 ;; This function calls:
  9971 ;;		___awmod
  9972 ;; This function is called by:
  9973 ;;		_epoch_to_caltime
  9974 ;;		_caltime_to_epoch
  9975 ;;		_command_time
  9976 ;;		_RTCC_adjust_time_inc
  9977 ;;		_RTCC_adjust_time_dec
  9978 ;; This function uses a non-reentrant model
  9979 ;;
  9980                           
  9981                           	psect	text42
  9982  011CEE                     __ptext42:
  9983                           	opt stack 0
  9984  011CEE                     _month_length:
  9985                           	opt stack 19
  9986                           
  9987                           ; BSR set to: 0
  9988                           ;incstack = 0
  9989                           ;month_length@year stored from wreg
  9990  011CEE  6E26               	movwf	month_length@year,c
  9991                           
  9992                           ;My_header\My_RTCC.h: 88: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year %
      +                           400);
  9993  011CF0  0E02               	movlw	2
  9994  011CF2  1825               	xorwf	month_length@month,w,c
  9995  011CF4  A4D8               	btfss	status,2,c
  9996  011CF6  D036               	goto	l4565
  9997  011CF8  C026  F01F         	movff	month_length@year,___awmod@dividend
  9998  011CFC  6A20               	clrf	___awmod@dividend+1,c
  9999  011CFE  0E00               	movlw	0
 10000  011D00  6E22               	movwf	___awmod@divisor+1,c
 10001  011D02  0E64               	movlw	100
 10002  011D04  6E21               	movwf	___awmod@divisor,c
 10003  011D06  ECEF  F093         	call	___awmod	;wreg free
 10004  011D0A  501F               	movf	?___awmod,w,c
 10005  011D0C  1020               	iorwf	?___awmod+1,w,c
 10006  011D0E  A4D8               	btfss	status,2,c
 10007  011D10  D002               	goto	u4870
 10008  011D12  0E01               	movlw	1
 10009  011D14  D001               	goto	u4880
 10010  011D16                     u4870:
 10011  011D16  0E00               	movlw	0
 10012  011D18                     u4880:
 10013  011D18  0800               	sublw	0
 10014  011D1A  0100               	movlb	0	; () banked
 10015  011D1C  6F60               	movwf	??_month_length& (0+255),b
 10016  011D1E  C026  F01F         	movff	month_length@year,___awmod@dividend
 10017  011D22  6A20               	clrf	___awmod@dividend+1,c
 10018  011D24  0E01               	movlw	1
 10019  011D26  6E22               	movwf	___awmod@divisor+1,c
 10020  011D28  0E90               	movlw	144
 10021  011D2A  6E21               	movwf	___awmod@divisor,c
 10022  011D2C  ECEF  F093         	call	___awmod	;wreg free
 10023  011D30  501F               	movf	?___awmod,w,c
 10024  011D32  1020               	iorwf	?___awmod+1,w,c
 10025  011D34  A4D8               	btfss	status,2,c
 10026  011D36  D004               	goto	u4890
 10027  011D38  0100               	movlb	0	; () banked
 10028  011D3A  6B61               	clrf	(??_month_length+1)& (0+255),b
 10029  011D3C  2B61               	incf	(??_month_length+1)& (0+255),f,b
 10030  011D3E  D002               	goto	u4908
 10031  011D40                     u4890:
 10032  011D40  0100               	movlb	0	; () banked
 10033  011D42  6B61               	clrf	(??_month_length+1)& (0+255),b
 10034  011D44                     u4908:
 10035  011D44  C026  F062         	movff	month_length@year,??_month_length+2
 10036  011D48  0E03               	movlw	3
 10037  011D4A  0100               	movlb	0	; () banked
 10038  011D4C  1762               	andwf	(??_month_length+2)& (0+255),f,b
 10039  011D4E  A4D8               	btfss	status,2,c
 10040  011D50  D002               	goto	u4910
 10041  011D52  0E01               	movlw	1
 10042  011D54  D001               	goto	u4920
 10043  011D56                     u4910:
 10044  011D56  0E00               	movlw	0
 10045  011D58                     u4920:
 10046  011D58  0100               	movlb	0	; () banked
 10047  011D5A  2561               	addwf	(??_month_length+1)& (0+255),w,b
 10048  011D5C  0100               	movlb	0	; () banked
 10049  011D5E  2560               	addwf	??_month_length& (0+255),w,b
 10050  011D60  0F1C               	addlw	28
 10051                           
 10052                           ; BSR set to: 0
 10053                           
 10054                           ; BSR set to: 0
 10055  011D62  0012               	return	
 10056  011D64                     l4565:
 10057                           
 10058                           ;My_header\My_RTCC.h: 89: else return 31 - (((-(month & 1)^month)&13) == 4);
 10059  011D64  5025               	movf	month_length@month,w,c
 10060  011D66  0B01               	andlw	1
 10061  011D68  0100               	movlb	0	; () banked
 10062  011D6A  6F60               	movwf	??_month_length& (0+255),b
 10063  011D6C  6B61               	clrf	(??_month_length+1)& (0+255),b
 10064  011D6E  0100               	movlb	0	; () banked
 10065  011D70  1F60               	comf	??_month_length& (0+255),f,b
 10066  011D72  1F61               	comf	(??_month_length+1)& (0+255),f,b
 10067  011D74  4B60               	infsnz	??_month_length& (0+255),f,b
 10068  011D76  2B61               	incf	(??_month_length+1)& (0+255),f,b
 10069  011D78  5025               	movf	month_length@month,w,c
 10070  011D7A  0100               	movlb	0	; () banked
 10071  011D7C  6F62               	movwf	(??_month_length+2)& (0+255),b
 10072  011D7E  6B63               	clrf	(??_month_length+3)& (0+255),b
 10073  011D80  0100               	movlb	0	; () banked
 10074  011D82  5160               	movf	??_month_length& (0+255),w,b
 10075  011D84  0100               	movlb	0	; () banked
 10076  011D86  1B62               	xorwf	(??_month_length+2)& (0+255),f,b
 10077  011D88  0100               	movlb	0	; () banked
 10078  011D8A  5161               	movf	(??_month_length+1)& (0+255),w,b
 10079  011D8C  0100               	movlb	0	; () banked
 10080  011D8E  1B63               	xorwf	(??_month_length+3)& (0+255),f,b
 10081  011D90  0E0D               	movlw	13
 10082  011D92  0100               	movlb	0	; () banked
 10083  011D94  1762               	andwf	(??_month_length+2)& (0+255),f,b
 10084  011D96  0E00               	movlw	0
 10085  011D98  1763               	andwf	(??_month_length+3)& (0+255),f,b
 10086  011D9A  0E04               	movlw	4
 10087  011D9C  0100               	movlb	0	; () banked
 10088  011D9E  1962               	xorwf	(??_month_length+2)& (0+255),w,b
 10089  011DA0  0100               	movlb	0	; () banked
 10090  011DA2  1163               	iorwf	(??_month_length+3)& (0+255),w,b
 10091  011DA4  A4D8               	btfss	status,2,c
 10092  011DA6  D002               	goto	u4930
 10093  011DA8  0E01               	movlw	1
 10094  011DAA  D001               	goto	u4940
 10095  011DAC                     u4930:
 10096  011DAC  0E00               	movlw	0
 10097  011DAE                     u4940:
 10098  011DAE  0800               	sublw	0
 10099  011DB0  0F1F               	addlw	31
 10100                           
 10101                           ; BSR set to: 0
 10102  011DB2  0012               	return	
 10103                           
 10104                           ; BSR set to: 0
 10105                           
 10106                           ; BSR set to: 0
 10107  011DB4  0012               	return		;funcret
 10108  011DB6                     __end_of_month_length:
 10109                           	opt stack 0
 10110                           tblptru	equ	0xFF8
 10111                           tblptrh	equ	0xFF7
 10112                           tblptrl	equ	0xFF6
 10113                           tablat	equ	0xFF5
 10114                           prodh	equ	0xFF4
 10115                           prodl	equ	0xFF3
 10116                           intcon	equ	0xFF2
 10117                           intcon2	equ	0xFF1
 10118                           postinc0	equ	0xFEE
 10119                           wreg	equ	0xFE8
 10120                           indf1	equ	0xFE7
 10121                           postinc1	equ	0xFE6
 10122                           postdec1	equ	0xFE5
 10123                           fsr1h	equ	0xFE2
 10124                           fsr1l	equ	0xFE1
 10125                           indf2	equ	0xFDF
 10126                           postinc2	equ	0xFDE
 10127                           postdec2	equ	0xFDD
 10128                           fsr2h	equ	0xFDA
 10129                           fsr2l	equ	0xFD9
 10130                           status	equ	0xFD8
 10131                           
 10132 ;; *************** function ___awmod *****************
 10133 ;; Defined at:
 10134 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 10135 ;; Parameters:    Size  Location     Type
 10136 ;;  dividend        2   30[COMRAM] int 
 10137 ;;  divisor         2   32[COMRAM] int 
 10138 ;; Auto vars:     Size  Location     Type
 10139 ;;  sign            1   35[COMRAM] unsigned char 
 10140 ;;  counter         1   34[COMRAM] unsigned char 
 10141 ;; Return value:  Size  Location     Type
 10142 ;;                  2   30[COMRAM] int 
 10143 ;; Registers used:
 10144 ;;		wreg, status,2, status,0
 10145 ;; Tracked objects:
 10146 ;;		On entry : 0/0
 10147 ;;		On exit  : 0/0
 10148 ;;		Unchanged: 0/0
 10149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10150 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10151 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10153 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10154 ;;Total ram usage:        6 bytes
 10155 ;; Hardware stack levels used:    1
 10156 ;; Hardware stack levels required when called:    4
 10157 ;; This function calls:
 10158 ;;		Nothing
 10159 ;; This function is called by:
 10160 ;;		_month_length
 10161 ;; This function uses a non-reentrant model
 10162 ;;
 10163                           
 10164                           	psect	text43
 10165  0127DE                     __ptext43:
 10166                           	opt stack 0
 10167  0127DE                     ___awmod:
 10168                           	opt stack 19
 10169                           
 10170                           ; BSR set to: 0
 10171                           ;incstack = 0
 10172  0127DE  0E00               	movlw	0
 10173  0127E0  6E24               	movwf	___awmod@sign,c
 10174  0127E2  AE20               	btfss	___awmod@dividend+1,7,c
 10175  0127E4  D007               	goto	l4513
 10176  0127E6  6C1F               	negf	___awmod@dividend,c
 10177  0127E8  1E20               	comf	___awmod@dividend+1,f,c
 10178  0127EA  B0D8               	btfsc	status,0,c
 10179  0127EC  2A20               	incf	___awmod@dividend+1,f,c
 10180  0127EE  0E01               	movlw	1
 10181  0127F0  6E24               	movwf	___awmod@sign,c
 10182  0127F2  D000               	goto	l4513
 10183  0127F4                     l4513:
 10184  0127F4  AE22               	btfss	___awmod@divisor+1,7,c
 10185  0127F6  D005               	goto	l4517
 10186  0127F8  6C21               	negf	___awmod@divisor,c
 10187  0127FA  1E22               	comf	___awmod@divisor+1,f,c
 10188  0127FC  B0D8               	btfsc	status,0,c
 10189  0127FE  2A22               	incf	___awmod@divisor+1,f,c
 10190  012800  D000               	goto	l4517
 10191  012802                     l4517:
 10192  012802  5021               	movf	___awmod@divisor,w,c
 10193  012804  1022               	iorwf	___awmod@divisor+1,w,c
 10194  012806  B4D8               	btfsc	status,2,c
 10195  012808  D01D               	goto	l4533
 10196  01280A  0E01               	movlw	1
 10197  01280C  6E23               	movwf	___awmod@counter,c
 10198  01280E  D005               	goto	l4523
 10199  012810                     l4521:
 10200  012810  90D8               	bcf	status,0,c
 10201  012812  3621               	rlcf	___awmod@divisor,f,c
 10202  012814  3622               	rlcf	___awmod@divisor+1,f,c
 10203  012816  2A23               	incf	___awmod@counter,f,c
 10204  012818  D000               	goto	l4523
 10205  01281A                     l4523:
 10206  01281A  BE22               	btfsc	___awmod@divisor+1,7,c
 10207  01281C  D002               	goto	l4525
 10208  01281E  D7F8               	goto	l4521
 10209  012820  D000               	goto	l4525
 10210  012822                     l4525:
 10211  012822  5021               	movf	___awmod@divisor,w,c
 10212  012824  5C1F               	subwf	___awmod@dividend,w,c
 10213  012826  5022               	movf	___awmod@divisor+1,w,c
 10214  012828  5820               	subwfb	___awmod@dividend+1,w,c
 10215  01282A  A0D8               	btfss	status,0,c
 10216  01282C  D005               	goto	l4529
 10217  01282E  5021               	movf	___awmod@divisor,w,c
 10218  012830  5E1F               	subwf	___awmod@dividend,f,c
 10219  012832  5022               	movf	___awmod@divisor+1,w,c
 10220  012834  5A20               	subwfb	___awmod@dividend+1,f,c
 10221  012836  D000               	goto	l4529
 10222  012838                     l4529:
 10223  012838  90D8               	bcf	status,0,c
 10224  01283A  3222               	rrcf	___awmod@divisor+1,f,c
 10225  01283C  3221               	rrcf	___awmod@divisor,f,c
 10226  01283E  2E23               	decfsz	___awmod@counter,f,c
 10227  012840  D7F0               	goto	l4525
 10228  012842  D000               	goto	l4533
 10229  012844                     l4533:
 10230  012844  5024               	movf	___awmod@sign,w,c
 10231  012846  B4D8               	btfsc	status,2,c
 10232  012848  D005               	goto	l4537
 10233  01284A  6C1F               	negf	___awmod@dividend,c
 10234  01284C  1E20               	comf	___awmod@dividend+1,f,c
 10235  01284E  B0D8               	btfsc	status,0,c
 10236  012850  2A20               	incf	___awmod@dividend+1,f,c
 10237  012852  D000               	goto	l4537
 10238  012854                     l4537:
 10239  012854  C01F  F01F         	movff	___awmod@dividend,?___awmod
 10240  012858  C020  F020         	movff	___awmod@dividend+1,?___awmod+1
 10241  01285C  0012               	return	
 10242  01285E  0012               	return		;funcret
 10243  012860                     __end_of___awmod:
 10244                           	opt stack 0
 10245                           tblptru	equ	0xFF8
 10246                           tblptrh	equ	0xFF7
 10247                           tblptrl	equ	0xFF6
 10248                           tablat	equ	0xFF5
 10249                           prodh	equ	0xFF4
 10250                           prodl	equ	0xFF3
 10251                           intcon	equ	0xFF2
 10252                           intcon2	equ	0xFF1
 10253                           postinc0	equ	0xFEE
 10254                           wreg	equ	0xFE8
 10255                           indf1	equ	0xFE7
 10256                           postinc1	equ	0xFE6
 10257                           postdec1	equ	0xFE5
 10258                           fsr1h	equ	0xFE2
 10259                           fsr1l	equ	0xFE1
 10260                           indf2	equ	0xFDF
 10261                           postinc2	equ	0xFDE
 10262                           postdec2	equ	0xFDD
 10263                           fsr2h	equ	0xFDA
 10264                           fsr2l	equ	0xFD9
 10265                           status	equ	0xFD8
 10266                           
 10267 ;; *************** function _get_quot_rem *****************
 10268 ;; Defined at:
 10269 ;;		line 112 in file "../My_header\My_RTCC.h"
 10270 ;; Parameters:    Size  Location     Type
 10271 ;;  quot            2   29[BANK0 ] PTR unsigned long 
 10272 ;;		 -> epoch_to_caltime@num(4), 
 10273 ;;  div             1   31[BANK0 ] unsigned char 
 10274 ;; Auto vars:     Size  Location     Type
 10275 ;;  num             4   33[BANK0 ] unsigned long 
 10276 ;; Return value:  Size  Location     Type
 10277 ;;                  4   29[BANK0 ] unsigned long 
 10278 ;; Registers used:
 10279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10280 ;; Tracked objects:
 10281 ;;		On entry : 0/0
 10282 ;;		On exit  : 0/0
 10283 ;;		Unchanged: 0/0
 10284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10285 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10286 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10288 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10289 ;;Total ram usage:        8 bytes
 10290 ;; Hardware stack levels used:    1
 10291 ;; Hardware stack levels required when called:    5
 10292 ;; This function calls:
 10293 ;;		___lldiv
 10294 ;;		___lmul
 10295 ;; This function is called by:
 10296 ;;		_epoch_to_caltime
 10297 ;; This function uses a non-reentrant model
 10298 ;;
 10299                           
 10300                           	psect	text44
 10301  0119A8                     __ptext44:
 10302                           	opt stack 0
 10303  0119A8                     _get_quot_rem:
 10304                           	opt stack 19
 10305                           
 10306                           ;My_header\My_RTCC.h: 115: epoch_t num = *quot;
 10307                           
 10308                           ;incstack = 0
 10309  0119A8  C07D  FFD9         	movff	get_quot_rem@quot,fsr2l
 10310  0119AC  C07E  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 10311  0119B0  CFDE F081          	movff	postinc2,get_quot_rem@num
 10312  0119B4  CFDE F082          	movff	postinc2,get_quot_rem@num+1
 10313  0119B8  CFDE F083          	movff	postinc2,get_quot_rem@num+2
 10314  0119BC  CFDE F084          	movff	postinc2,get_quot_rem@num+3
 10315                           
 10316                           ;My_header\My_RTCC.h: 116: return num - (*quot = num / div) * div;
 10317  0119C0  0100               	movlb	0	; () banked
 10318  0119C2  517F               	movf	get_quot_rem@div& (0+255),w,b
 10319  0119C4  0100               	movlb	0	; () banked
 10320  0119C6  6F74               	movwf	___lldiv@divisor& (0+255),b
 10321  0119C8  6B75               	clrf	(___lldiv@divisor+1)& (0+255),b
 10322  0119CA  6B76               	clrf	(___lldiv@divisor+2)& (0+255),b
 10323  0119CC  6B77               	clrf	(___lldiv@divisor+3)& (0+255),b
 10324  0119CE  C081  F070         	movff	get_quot_rem@num,___lldiv@dividend
 10325  0119D2  C082  F071         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 10326  0119D6  C083  F072         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 10327  0119DA  C084  F073         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 10328  0119DE  ECDB  F08E         	call	___lldiv	;wreg free
 10329  0119E2  C07D  FFD9         	movff	get_quot_rem@quot,fsr2l
 10330  0119E6  C07E  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 10331  0119EA  0100               	movlb	0	; () banked
 10332  0119EC  C070  FFDE         	movff	?___lldiv,postinc2
 10333  0119F0  0100               	movlb	0	; () banked
 10334  0119F2  C071  FFDE         	movff	?___lldiv+1,postinc2
 10335  0119F6  0100               	movlb	0	; () banked
 10336  0119F8  C072  FFDE         	movff	?___lldiv+2,postinc2
 10337  0119FC  0100               	movlb	0	; () banked
 10338  0119FE  C073  FFDD         	movff	?___lldiv+3,postdec2
 10339  011A02  52DD               	movf	postdec2,f,c
 10340  011A04  52DD               	movf	postdec2,f,c
 10341  011A06  CFDE F064          	movff	postinc2,___lmul@multiplier
 10342  011A0A  CFDE F065          	movff	postinc2,___lmul@multiplier+1
 10343  011A0E  CFDE F066          	movff	postinc2,___lmul@multiplier+2
 10344  011A12  CFDE F067          	movff	postinc2,___lmul@multiplier+3
 10345  011A16  0100               	movlb	0	; () banked
 10346  011A18  517F               	movf	get_quot_rem@div& (0+255),w,b
 10347  011A1A  0100               	movlb	0	; () banked
 10348  011A1C  6F68               	movwf	___lmul@multiplicand& (0+255),b
 10349  011A1E  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 10350  011A20  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 10351  011A22  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 10352  011A24  EC30  F094         	call	___lmul	;wreg free
 10353  011A28  0100               	movlb	0	; () banked
 10354  011A2A  1F64               	comf	?___lmul& (0+255),f,b
 10355  011A2C  0100               	movlb	0	; () banked
 10356  011A2E  1F65               	comf	(?___lmul+1)& (0+255),f,b
 10357  011A30  0100               	movlb	0	; () banked
 10358  011A32  1F66               	comf	(?___lmul+2)& (0+255),f,b
 10359  011A34  0100               	movlb	0	; () banked
 10360  011A36  1F67               	comf	(?___lmul+3)& (0+255),f,b
 10361  011A38  0100               	movlb	0	; () banked
 10362  011A3A  2B64               	incf	?___lmul& (0+255),f,b
 10363  011A3C  0E00               	movlw	0
 10364  011A3E  0100               	movlb	0	; () banked
 10365  011A40  2365               	addwfc	(?___lmul+1)& (0+255),f,b
 10366  011A42  0100               	movlb	0	; () banked
 10367  011A44  2366               	addwfc	(?___lmul+2)& (0+255),f,b
 10368  011A46  0100               	movlb	0	; () banked
 10369  011A48  2367               	addwfc	(?___lmul+3)& (0+255),f,b
 10370  011A4A  0100               	movlb	0	; () banked
 10371  011A4C  5181               	movf	get_quot_rem@num& (0+255),w,b
 10372  011A4E  0100               	movlb	0	; () banked
 10373  011A50  2564               	addwf	?___lmul& (0+255),w,b
 10374  011A52  0100               	movlb	0	; () banked
 10375  011A54  6F7D               	movwf	?_get_quot_rem& (0+255),b
 10376  011A56  0100               	movlb	0	; () banked
 10377  011A58  5182               	movf	(get_quot_rem@num+1)& (0+255),w,b
 10378  011A5A  0100               	movlb	0	; () banked
 10379  011A5C  2165               	addwfc	(?___lmul+1)& (0+255),w,b
 10380  011A5E  0100               	movlb	0	; () banked
 10381  011A60  6F7E               	movwf	(?_get_quot_rem+1)& (0+255),b
 10382  011A62  0100               	movlb	0	; () banked
 10383  011A64  5183               	movf	(get_quot_rem@num+2)& (0+255),w,b
 10384  011A66  0100               	movlb	0	; () banked
 10385  011A68  2166               	addwfc	(?___lmul+2)& (0+255),w,b
 10386  011A6A  0100               	movlb	0	; () banked
 10387  011A6C  6F7F               	movwf	(?_get_quot_rem+2)& (0+255),b
 10388  011A6E  0100               	movlb	0	; () banked
 10389  011A70  5184               	movf	(get_quot_rem@num+3)& (0+255),w,b
 10390  011A72  0100               	movlb	0	; () banked
 10391  011A74  2167               	addwfc	(?___lmul+3)& (0+255),w,b
 10392  011A76  0100               	movlb	0	; () banked
 10393  011A78  6F80               	movwf	(?_get_quot_rem+3)& (0+255),b
 10394  011A7A  0012               	return	
 10395                           
 10396                           ; BSR set to: 0
 10397                           
 10398                           ; BSR set to: 0
 10399  011A7C  0012               	return		;funcret
 10400  011A7E                     __end_of_get_quot_rem:
 10401                           	opt stack 0
 10402                           tblptru	equ	0xFF8
 10403                           tblptrh	equ	0xFF7
 10404                           tblptrl	equ	0xFF6
 10405                           tablat	equ	0xFF5
 10406                           prodh	equ	0xFF4
 10407                           prodl	equ	0xFF3
 10408                           intcon	equ	0xFF2
 10409                           intcon2	equ	0xFF1
 10410                           postinc0	equ	0xFEE
 10411                           wreg	equ	0xFE8
 10412                           indf1	equ	0xFE7
 10413                           postinc1	equ	0xFE6
 10414                           postdec1	equ	0xFE5
 10415                           fsr1h	equ	0xFE2
 10416                           fsr1l	equ	0xFE1
 10417                           indf2	equ	0xFDF
 10418                           postinc2	equ	0xFDE
 10419                           postdec2	equ	0xFDD
 10420                           fsr2h	equ	0xFDA
 10421                           fsr2l	equ	0xFD9
 10422                           status	equ	0xFD8
 10423                           
 10424 ;; *************** function ___lmul *****************
 10425 ;; Defined at:
 10426 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
 10427 ;; Parameters:    Size  Location     Type
 10428 ;;  multiplier      4    4[BANK0 ] unsigned long 
 10429 ;;  multiplicand    4    8[BANK0 ] unsigned long 
 10430 ;; Auto vars:     Size  Location     Type
 10431 ;;  product         4   12[BANK0 ] unsigned long 
 10432 ;; Return value:  Size  Location     Type
 10433 ;;                  4    4[BANK0 ] unsigned long 
 10434 ;; Registers used:
 10435 ;;		wreg, status,2, status,0
 10436 ;; Tracked objects:
 10437 ;;		On entry : 0/0
 10438 ;;		On exit  : 0/0
 10439 ;;		Unchanged: 0/0
 10440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10441 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10442 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10444 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10445 ;;Total ram usage:       12 bytes
 10446 ;; Hardware stack levels used:    1
 10447 ;; Hardware stack levels required when called:    4
 10448 ;; This function calls:
 10449 ;;		Nothing
 10450 ;; This function is called by:
 10451 ;;		_get_quot_rem
 10452 ;;		_caltime_to_epoch
 10453 ;;		_light_loop
 10454 ;;		_RTCC_adjust_time_inc
 10455 ;;		_RTCC_adjust_time_dec
 10456 ;; This function uses a non-reentrant model
 10457 ;;
 10458                           
 10459                           	psect	text45
 10460  012860                     __ptext45:
 10461                           	opt stack 0
 10462  012860                     ___lmul:
 10463                           	opt stack 20
 10464                           
 10465                           ; BSR set to: 0
 10466                           ;incstack = 0
 10467  012860  0E00               	movlw	0
 10468  012862  0100               	movlb	0	; () banked
 10469  012864  6F6C               	movwf	___lmul@product& (0+255),b
 10470  012866  0E00               	movlw	0
 10471  012868  6F6D               	movwf	(___lmul@product+1)& (0+255),b
 10472  01286A  0E00               	movlw	0
 10473  01286C  6F6E               	movwf	(___lmul@product+2)& (0+255),b
 10474  01286E  0E00               	movlw	0
 10475  012870  6F6F               	movwf	(___lmul@product+3)& (0+255),b
 10476  012872  D000               	goto	l4571
 10477  012874                     l4571:
 10478                           
 10479                           ; BSR set to: 0
 10480  012874  0100               	movlb	0	; () banked
 10481  012876  A164               	btfss	___lmul@multiplier& (0+255),0,b
 10482  012878  D011               	goto	l4575
 10483                           
 10484                           ; BSR set to: 0
 10485  01287A  0100               	movlb	0	; () banked
 10486  01287C  5168               	movf	___lmul@multiplicand& (0+255),w,b
 10487  01287E  0100               	movlb	0	; () banked
 10488  012880  276C               	addwf	___lmul@product& (0+255),f,b
 10489  012882  0100               	movlb	0	; () banked
 10490  012884  5169               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 10491  012886  0100               	movlb	0	; () banked
 10492  012888  236D               	addwfc	(___lmul@product+1)& (0+255),f,b
 10493  01288A  0100               	movlb	0	; () banked
 10494  01288C  516A               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 10495  01288E  0100               	movlb	0	; () banked
 10496  012890  236E               	addwfc	(___lmul@product+2)& (0+255),f,b
 10497  012892  0100               	movlb	0	; () banked
 10498  012894  516B               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 10499  012896  0100               	movlb	0	; () banked
 10500  012898  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 10501  01289A  D000               	goto	l4575
 10502  01289C                     l4575:
 10503                           
 10504                           ; BSR set to: 0
 10505  01289C  0100               	movlb	0	; () banked
 10506  01289E  90D8               	bcf	status,0,c
 10507  0128A0  3768               	rlcf	___lmul@multiplicand& (0+255),f,b
 10508  0128A2  3769               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 10509  0128A4  376A               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 10510  0128A6  376B               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 10511                           
 10512                           ; BSR set to: 0
 10513  0128A8  0100               	movlb	0	; () banked
 10514  0128AA  90D8               	bcf	status,0,c
 10515  0128AC  3367               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 10516  0128AE  3366               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 10517  0128B0  3365               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 10518  0128B2  3364               	rrcf	___lmul@multiplier& (0+255),f,b
 10519  0128B4  0100               	movlb	0	; () banked
 10520  0128B6  5164               	movf	___lmul@multiplier& (0+255),w,b
 10521  0128B8  0100               	movlb	0	; () banked
 10522  0128BA  1165               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 10523  0128BC  0100               	movlb	0	; () banked
 10524  0128BE  1166               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 10525  0128C0  0100               	movlb	0	; () banked
 10526  0128C2  1167               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 10527  0128C4  A4D8               	btfss	status,2,c
 10528  0128C6  D7D6               	goto	l4571
 10529                           
 10530                           ; BSR set to: 0
 10531  0128C8  C06C  F064         	movff	___lmul@product,?___lmul
 10532  0128CC  C06D  F065         	movff	___lmul@product+1,?___lmul+1
 10533  0128D0  C06E  F066         	movff	___lmul@product+2,?___lmul+2
 10534  0128D4  C06F  F067         	movff	___lmul@product+3,?___lmul+3
 10535                           
 10536                           ; BSR set to: 0
 10537  0128D8  0012               	return		;funcret
 10538  0128DA                     __end_of___lmul:
 10539                           	opt stack 0
 10540                           tblptru	equ	0xFF8
 10541                           tblptrh	equ	0xFF7
 10542                           tblptrl	equ	0xFF6
 10543                           tablat	equ	0xFF5
 10544                           prodh	equ	0xFF4
 10545                           prodl	equ	0xFF3
 10546                           intcon	equ	0xFF2
 10547                           intcon2	equ	0xFF1
 10548                           postinc0	equ	0xFEE
 10549                           wreg	equ	0xFE8
 10550                           indf1	equ	0xFE7
 10551                           postinc1	equ	0xFE6
 10552                           postdec1	equ	0xFE5
 10553                           fsr1h	equ	0xFE2
 10554                           fsr1l	equ	0xFE1
 10555                           indf2	equ	0xFDF
 10556                           postinc2	equ	0xFDE
 10557                           postdec2	equ	0xFDD
 10558                           fsr2h	equ	0xFDA
 10559                           fsr2l	equ	0xFD9
 10560                           status	equ	0xFD8
 10561                           
 10562 ;; *************** function ___lldiv *****************
 10563 ;; Defined at:
 10564 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 10565 ;; Parameters:    Size  Location     Type
 10566 ;;  dividend        4   16[BANK0 ] unsigned long 
 10567 ;;  divisor         4   20[BANK0 ] unsigned long 
 10568 ;; Auto vars:     Size  Location     Type
 10569 ;;  quotient        4   24[BANK0 ] unsigned long 
 10570 ;;  counter         1   28[BANK0 ] unsigned char 
 10571 ;; Return value:  Size  Location     Type
 10572 ;;                  4   16[BANK0 ] unsigned long 
 10573 ;; Registers used:
 10574 ;;		wreg, status,2, status,0
 10575 ;; Tracked objects:
 10576 ;;		On entry : 0/0
 10577 ;;		On exit  : 0/0
 10578 ;;		Unchanged: 0/0
 10579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10580 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10581 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10583 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10584 ;;Total ram usage:       13 bytes
 10585 ;; Hardware stack levels used:    1
 10586 ;; Hardware stack levels required when called:    4
 10587 ;; This function calls:
 10588 ;;		Nothing
 10589 ;; This function is called by:
 10590 ;;		_get_quot_rem
 10591 ;;		_light_loop
 10592 ;;		_CTMU_read
 10593 ;;		_my_utoa32
 10594 ;; This function uses a non-reentrant model
 10595 ;;
 10596                           
 10597                           	psect	text46
 10598  011DB6                     __ptext46:
 10599                           	opt stack 0
 10600  011DB6                     ___lldiv:
 10601                           	opt stack 19
 10602                           
 10603                           ; BSR set to: 0
 10604                           ;incstack = 0
 10605  011DB6  0E00               	movlw	0
 10606  011DB8  0100               	movlb	0	; () banked
 10607  011DBA  6F78               	movwf	___lldiv@quotient& (0+255),b
 10608  011DBC  0E00               	movlw	0
 10609  011DBE  6F79               	movwf	(___lldiv@quotient+1)& (0+255),b
 10610  011DC0  0E00               	movlw	0
 10611  011DC2  6F7A               	movwf	(___lldiv@quotient+2)& (0+255),b
 10612  011DC4  0E00               	movlw	0
 10613  011DC6  6F7B               	movwf	(___lldiv@quotient+3)& (0+255),b
 10614                           
 10615                           ; BSR set to: 0
 10616  011DC8  0100               	movlb	0	; () banked
 10617  011DCA  5174               	movf	___lldiv@divisor& (0+255),w,b
 10618  011DCC  0100               	movlb	0	; () banked
 10619  011DCE  1175               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10620  011DD0  0100               	movlb	0	; () banked
 10621  011DD2  1176               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10622  011DD4  0100               	movlb	0	; () banked
 10623  011DD6  1177               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 10624  011DD8  B4D8               	btfsc	status,2,c
 10625  011DDA  D047               	goto	l1203
 10626                           
 10627                           ; BSR set to: 0
 10628  011DDC  0E01               	movlw	1
 10629  011DDE  0100               	movlb	0	; () banked
 10630  011DE0  6F7C               	movwf	___lldiv@counter& (0+255),b
 10631  011DE2  D009               	goto	l4631
 10632  011DE4                     l4629:
 10633                           
 10634                           ; BSR set to: 0
 10635  011DE4  0100               	movlb	0	; () banked
 10636  011DE6  90D8               	bcf	status,0,c
 10637  011DE8  3774               	rlcf	___lldiv@divisor& (0+255),f,b
 10638  011DEA  3775               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 10639  011DEC  3776               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 10640  011DEE  3777               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 10641  011DF0  0100               	movlb	0	; () banked
 10642  011DF2  2B7C               	incf	___lldiv@counter& (0+255),f,b
 10643  011DF4  D000               	goto	l4631
 10644  011DF6                     l4631:
 10645                           
 10646                           ; BSR set to: 0
 10647  011DF6  0100               	movlb	0	; () banked
 10648  011DF8  BF77               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
 10649  011DFA  D002               	goto	l4633
 10650  011DFC  D7F3               	goto	l4629
 10651                           
 10652                           ; BSR set to: 0
 10653  011DFE  D000               	goto	l4633
 10654  011E00                     l4633:
 10655                           
 10656                           ; BSR set to: 0
 10657  011E00  0100               	movlb	0	; () banked
 10658  011E02  90D8               	bcf	status,0,c
 10659  011E04  3778               	rlcf	___lldiv@quotient& (0+255),f,b
 10660  011E06  3779               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10661  011E08  377A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10662  011E0A  377B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10663                           
 10664                           ; BSR set to: 0
 10665  011E0C  0100               	movlb	0	; () banked
 10666  011E0E  5174               	movf	___lldiv@divisor& (0+255),w,b
 10667  011E10  0100               	movlb	0	; () banked
 10668  011E12  5D70               	subwf	___lldiv@dividend& (0+255),w,b
 10669  011E14  0100               	movlb	0	; () banked
 10670  011E16  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10671  011E18  0100               	movlb	0	; () banked
 10672  011E1A  5971               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 10673  011E1C  0100               	movlb	0	; () banked
 10674  011E1E  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10675  011E20  0100               	movlb	0	; () banked
 10676  011E22  5972               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 10677  011E24  0100               	movlb	0	; () banked
 10678  011E26  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10679  011E28  0100               	movlb	0	; () banked
 10680  011E2A  5973               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 10681  011E2C  A0D8               	btfss	status,0,c
 10682  011E2E  D013               	goto	l4641
 10683                           
 10684                           ; BSR set to: 0
 10685  011E30  0100               	movlb	0	; () banked
 10686  011E32  5174               	movf	___lldiv@divisor& (0+255),w,b
 10687  011E34  0100               	movlb	0	; () banked
 10688  011E36  5F70               	subwf	___lldiv@dividend& (0+255),f,b
 10689  011E38  0100               	movlb	0	; () banked
 10690  011E3A  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10691  011E3C  0100               	movlb	0	; () banked
 10692  011E3E  5B71               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 10693  011E40  0100               	movlb	0	; () banked
 10694  011E42  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10695  011E44  0100               	movlb	0	; () banked
 10696  011E46  5B72               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 10697  011E48  0100               	movlb	0	; () banked
 10698  011E4A  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10699  011E4C  0100               	movlb	0	; () banked
 10700  011E4E  5B73               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 10701                           
 10702                           ; BSR set to: 0
 10703  011E50  0100               	movlb	0	; () banked
 10704  011E52  8178               	bsf	___lldiv@quotient& (0+255),0,b
 10705  011E54  D000               	goto	l4641
 10706  011E56                     l4641:
 10707                           
 10708                           ; BSR set to: 0
 10709  011E56  0100               	movlb	0	; () banked
 10710  011E58  90D8               	bcf	status,0,c
 10711  011E5A  3377               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 10712  011E5C  3376               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 10713  011E5E  3375               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 10714  011E60  3374               	rrcf	___lldiv@divisor& (0+255),f,b
 10715                           
 10716                           ; BSR set to: 0
 10717  011E62  0100               	movlb	0	; () banked
 10718  011E64  2F7C               	decfsz	___lldiv@counter& (0+255),f,b
 10719  011E66  D7CC               	goto	l4633
 10720  011E68  D000               	goto	l1203
 10721  011E6A                     l1203:
 10722                           
 10723                           ; BSR set to: 0
 10724  011E6A  C078  F070         	movff	___lldiv@quotient,?___lldiv
 10725  011E6E  C079  F071         	movff	___lldiv@quotient+1,?___lldiv+1
 10726  011E72  C07A  F072         	movff	___lldiv@quotient+2,?___lldiv+2
 10727  011E76  C07B  F073         	movff	___lldiv@quotient+3,?___lldiv+3
 10728                           
 10729                           ; BSR set to: 0
 10730  011E7A  0012               	return		;funcret
 10731  011E7C                     __end_of___lldiv:
 10732                           	opt stack 0
 10733                           tblptru	equ	0xFF8
 10734                           tblptrh	equ	0xFF7
 10735                           tblptrl	equ	0xFF6
 10736                           tablat	equ	0xFF5
 10737                           prodh	equ	0xFF4
 10738                           prodl	equ	0xFF3
 10739                           intcon	equ	0xFF2
 10740                           intcon2	equ	0xFF1
 10741                           postinc0	equ	0xFEE
 10742                           wreg	equ	0xFE8
 10743                           indf1	equ	0xFE7
 10744                           postinc1	equ	0xFE6
 10745                           postdec1	equ	0xFE5
 10746                           fsr1h	equ	0xFE2
 10747                           fsr1l	equ	0xFE1
 10748                           indf2	equ	0xFDF
 10749                           postinc2	equ	0xFDE
 10750                           postdec2	equ	0xFDD
 10751                           fsr2h	equ	0xFDA
 10752                           fsr2l	equ	0xFD9
 10753                           status	equ	0xFD8
 10754                           
 10755 ;; *************** function _caltime_to_RTCC *****************
 10756 ;; Defined at:
 10757 ;;		line 137 in file "../My_header\My_RTCC.h"
 10758 ;; Parameters:    Size  Location     Type
 10759 ;;  ct              2    1[BANK0 ] PTR struct .
 10760 ;;		 -> caltime_now(7), 
 10761 ;; Auto vars:     Size  Location     Type
 10762 ;;		None
 10763 ;; Return value:  Size  Location     Type
 10764 ;;		None               void
 10765 ;; Registers used:
 10766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10767 ;; Tracked objects:
 10768 ;;		On entry : 0/0
 10769 ;;		On exit  : 0/0
 10770 ;;		Unchanged: 0/0
 10771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10772 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10775 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10776 ;;Total ram usage:        2 bytes
 10777 ;; Hardware stack levels used:    1
 10778 ;; Hardware stack levels required when called:    6
 10779 ;; This function calls:
 10780 ;;		_d_to_x
 10781 ;; This function is called by:
 10782 ;;		_RTCC_from_caltime
 10783 ;;		_RTCC_from_epoch
 10784 ;; This function uses a non-reentrant model
 10785 ;;
 10786                           
 10787                           	psect	text47
 10788  011B50                     __ptext47:
 10789                           	opt stack 0
 10790  011B50                     _caltime_to_RTCC:
 10791                           	opt stack 19
 10792                           
 10793                           ;My_header\My_RTCC.h: 138: while (RTCCFGbits.RTCSYNC);
 10794                           
 10795                           ; BSR set to: 0
 10796                           ;incstack = 0
 10797  011B50  D000               	goto	l352
 10798  011B52                     l352:
 10799  011B52  010F               	movlb	15	; () banked
 10800  011B54  B93F               	btfsc	63,4,b	;volatile
 10801  011B56  D7FD               	goto	l352
 10802                           
 10803                           ; BSR set to: 15
 10804                           ;My_header\My_RTCC.h: 139: RTCCFGbits.RTCPTR0 = 1;
 10805  011B58  010F               	movlb	15	; () banked
 10806  011B5A  813F               	bsf	63,0,b	;volatile
 10807                           
 10808                           ;My_header\My_RTCC.h: 140: RTCCFGbits.RTCPTR1 = 1;
 10809  011B5C  010F               	movlb	15	; () banked
 10810  011B5E  833F               	bsf	63,1,b	;volatile
 10811                           
 10812                           ; BSR set to: 15
 10813                           ;My_header\My_RTCC.h: 141: RTCVALL = d_to_x(ct->YY);
 10814  011B60  0100               	movlb	0	; () banked
 10815  011B62  EE20 F006          	lfsr	2,6
 10816  011B66  5161               	movf	caltime_to_RTCC@ct& (0+255),w,b
 10817  011B68  26D9               	addwf	fsr2l,f,c
 10818  011B6A  5162               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 10819  011B6C  22DA               	addwfc	fsr2h,f,c
 10820  011B6E  50DF               	movf	indf2,w,c
 10821  011B70  ECA4  F096         	call	_d_to_x
 10822  011B74  010F               	movlb	15	; () banked
 10823  011B76  6F3A               	movwf	58,b	;volatile
 10824                           
 10825                           ; BSR set to: 15
 10826                           ;My_header\My_RTCC.h: 142: RTCVALH = 0x00;
 10827  011B78  0E00               	movlw	0
 10828  011B7A  010F               	movlb	15	; () banked
 10829  011B7C  6F3B               	movwf	59,b	;volatile
 10830                           
 10831                           ; BSR set to: 15
 10832                           ;My_header\My_RTCC.h: 143: RTCCFGbits.RTCPTR0 = 0;
 10833  011B7E  010F               	movlb	15	; () banked
 10834  011B80  913F               	bcf	63,0,b	;volatile
 10835                           
 10836                           ; BSR set to: 15
 10837                           ;My_header\My_RTCC.h: 144: RTCCFGbits.RTCPTR1 = 1;
 10838  011B82  010F               	movlb	15	; () banked
 10839  011B84  833F               	bsf	63,1,b	;volatile
 10840                           
 10841                           ; BSR set to: 15
 10842                           ;My_header\My_RTCC.h: 145: RTCVALL = d_to_x(ct->DD);
 10843  011B86  0100               	movlb	0	; () banked
 10844  011B88  EE20 F004          	lfsr	2,4
 10845  011B8C  5161               	movf	caltime_to_RTCC@ct& (0+255),w,b
 10846  011B8E  26D9               	addwf	fsr2l,f,c
 10847  011B90  5162               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 10848  011B92  22DA               	addwfc	fsr2h,f,c
 10849  011B94  50DF               	movf	indf2,w,c
 10850  011B96  ECA4  F096         	call	_d_to_x
 10851  011B9A  010F               	movlb	15	; () banked
 10852  011B9C  6F3A               	movwf	58,b	;volatile
 10853                           
 10854                           ; BSR set to: 15
 10855                           ;My_header\My_RTCC.h: 146: RTCVALH = d_to_x(ct->MM);
 10856  011B9E  0100               	movlb	0	; () banked
 10857  011BA0  EE20 F005          	lfsr	2,5
 10858  011BA4  5161               	movf	caltime_to_RTCC@ct& (0+255),w,b
 10859  011BA6  26D9               	addwf	fsr2l,f,c
 10860  011BA8  5162               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 10861  011BAA  22DA               	addwfc	fsr2h,f,c
 10862  011BAC  50DF               	movf	indf2,w,c
 10863  011BAE  ECA4  F096         	call	_d_to_x
 10864  011BB2  010F               	movlb	15	; () banked
 10865  011BB4  6F3B               	movwf	59,b	;volatile
 10866                           
 10867                           ; BSR set to: 15
 10868                           ;My_header\My_RTCC.h: 147: RTCCFGbits.RTCPTR0 = 1;
 10869  011BB6  010F               	movlb	15	; () banked
 10870  011BB8  813F               	bsf	63,0,b	;volatile
 10871                           
 10872                           ; BSR set to: 15
 10873                           ;My_header\My_RTCC.h: 148: RTCCFGbits.RTCPTR1 = 0;
 10874  011BBA  010F               	movlb	15	; () banked
 10875  011BBC  933F               	bcf	63,1,b	;volatile
 10876                           
 10877                           ; BSR set to: 15
 10878                           ;My_header\My_RTCC.h: 149: RTCVALL = d_to_x(ct->hh);
 10879  011BBE  0100               	movlb	0	; () banked
 10880  011BC0  EE20 F002          	lfsr	2,2
 10881  011BC4  5161               	movf	caltime_to_RTCC@ct& (0+255),w,b
 10882  011BC6  26D9               	addwf	fsr2l,f,c
 10883  011BC8  5162               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 10884  011BCA  22DA               	addwfc	fsr2h,f,c
 10885  011BCC  50DF               	movf	indf2,w,c
 10886  011BCE  ECA4  F096         	call	_d_to_x
 10887  011BD2  010F               	movlb	15	; () banked
 10888  011BD4  6F3A               	movwf	58,b	;volatile
 10889                           
 10890                           ; BSR set to: 15
 10891                           ;My_header\My_RTCC.h: 150: RTCVALH = d_to_x(ct->EE);
 10892  011BD6  0100               	movlb	0	; () banked
 10893  011BD8  EE20 F003          	lfsr	2,3
 10894  011BDC  5161               	movf	caltime_to_RTCC@ct& (0+255),w,b
 10895  011BDE  26D9               	addwf	fsr2l,f,c
 10896  011BE0  5162               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 10897  011BE2  22DA               	addwfc	fsr2h,f,c
 10898  011BE4  50DF               	movf	indf2,w,c
 10899  011BE6  ECA4  F096         	call	_d_to_x
 10900  011BEA  010F               	movlb	15	; () banked
 10901  011BEC  6F3B               	movwf	59,b	;volatile
 10902                           
 10903                           ; BSR set to: 15
 10904                           ;My_header\My_RTCC.h: 151: RTCCFGbits.RTCPTR0 = 0;
 10905  011BEE  010F               	movlb	15	; () banked
 10906  011BF0  913F               	bcf	63,0,b	;volatile
 10907                           
 10908                           ; BSR set to: 15
 10909                           ;My_header\My_RTCC.h: 152: RTCCFGbits.RTCPTR1 = 0;
 10910  011BF2  010F               	movlb	15	; () banked
 10911  011BF4  933F               	bcf	63,1,b	;volatile
 10912                           
 10913                           ; BSR set to: 15
 10914                           ;My_header\My_RTCC.h: 153: RTCVALL = d_to_x(ct->ss);
 10915  011BF6  C061  FFD9         	movff	caltime_to_RTCC@ct,fsr2l
 10916  011BFA  C062  FFDA         	movff	caltime_to_RTCC@ct+1,fsr2h
 10917  011BFE  50DF               	movf	indf2,w,c
 10918  011C00  ECA4  F096         	call	_d_to_x
 10919  011C04  010F               	movlb	15	; () banked
 10920  011C06  6F3A               	movwf	58,b	;volatile
 10921                           
 10922                           ; BSR set to: 15
 10923                           ;My_header\My_RTCC.h: 154: RTCVALH = d_to_x(ct->mm);
 10924  011C08  0100               	movlb	0	; () banked
 10925  011C0A  EE20 F001          	lfsr	2,1
 10926  011C0E  5161               	movf	caltime_to_RTCC@ct& (0+255),w,b
 10927  011C10  26D9               	addwf	fsr2l,f,c
 10928  011C12  5162               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 10929  011C14  22DA               	addwfc	fsr2h,f,c
 10930  011C16  50DF               	movf	indf2,w,c
 10931  011C18  ECA4  F096         	call	_d_to_x
 10932  011C1C  010F               	movlb	15	; () banked
 10933  011C1E  6F3B               	movwf	59,b	;volatile
 10934                           
 10935                           ; BSR set to: 15
 10936  011C20  0012               	return		;funcret
 10937  011C22                     __end_of_caltime_to_RTCC:
 10938                           	opt stack 0
 10939                           tblptru	equ	0xFF8
 10940                           tblptrh	equ	0xFF7
 10941                           tblptrl	equ	0xFF6
 10942                           tablat	equ	0xFF5
 10943                           prodh	equ	0xFF4
 10944                           prodl	equ	0xFF3
 10945                           intcon	equ	0xFF2
 10946                           intcon2	equ	0xFF1
 10947                           postinc0	equ	0xFEE
 10948                           wreg	equ	0xFE8
 10949                           indf1	equ	0xFE7
 10950                           postinc1	equ	0xFE6
 10951                           postdec1	equ	0xFE5
 10952                           fsr1h	equ	0xFE2
 10953                           fsr1l	equ	0xFE1
 10954                           indf2	equ	0xFDF
 10955                           postinc2	equ	0xFDE
 10956                           postdec2	equ	0xFDD
 10957                           fsr2h	equ	0xFDA
 10958                           fsr2l	equ	0xFD9
 10959                           status	equ	0xFD8
 10960                           
 10961 ;; *************** function _d_to_x *****************
 10962 ;; Defined at:
 10963 ;;		line 73 in file "../My_header\My_RTCC.h"
 10964 ;; Parameters:    Size  Location     Type
 10965 ;;  dec             1    wreg     unsigned char 
 10966 ;; Auto vars:     Size  Location     Type
 10967 ;;  dec             1    0[BANK0 ] unsigned char 
 10968 ;; Return value:  Size  Location     Type
 10969 ;;                  1    wreg      unsigned char 
 10970 ;; Registers used:
 10971 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10972 ;; Tracked objects:
 10973 ;;		On entry : 0/0
 10974 ;;		On exit  : 0/0
 10975 ;;		Unchanged: 0/0
 10976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10978 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10980 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10981 ;;Total ram usage:        1 bytes
 10982 ;; Hardware stack levels used:    1
 10983 ;; Hardware stack levels required when called:    5
 10984 ;; This function calls:
 10985 ;;		___awdiv
 10986 ;; This function is called by:
 10987 ;;		_caltime_to_RTCC
 10988 ;; This function uses a non-reentrant model
 10989 ;;
 10990                           
 10991                           	psect	text48
 10992  012D48                     __ptext48:
 10993                           	opt stack 0
 10994  012D48                     _d_to_x:
 10995                           	opt stack 19
 10996                           
 10997                           ; BSR set to: 15
 10998                           ;incstack = 0
 10999                           ;d_to_x@dec stored from wreg
 11000  012D48  0100               	movlb	0	; () banked
 11001  012D4A  6F60               	movwf	d_to_x@dec& (0+255),b
 11002                           
 11003                           ; BSR set to: 0
 11004                           ;My_header\My_RTCC.h: 76: return dec / 10 * 6 + dec;
 11005  012D4C  C060  F01F         	movff	d_to_x@dec,___awdiv@dividend
 11006  012D50  6A20               	clrf	___awdiv@dividend+1,c
 11007  012D52  0E00               	movlw	0
 11008  012D54  6E22               	movwf	___awdiv@divisor+1,c
 11009  012D56  0E0A               	movlw	10
 11010  012D58  6E21               	movwf	___awdiv@divisor,c
 11011  012D5A  EC99  F092         	call	___awdiv	;wreg free
 11012  012D5E  501F               	movf	?___awdiv,w,c
 11013  012D60  0D06               	mullw	6
 11014  012D62  50F3               	movf	prodl,w,c
 11015  012D64  0100               	movlb	0	; () banked
 11016  012D66  2560               	addwf	d_to_x@dec& (0+255),w,b
 11017  012D68  0012               	return	
 11018                           
 11019                           ; BSR set to: 0
 11020                           
 11021                           ; BSR set to: 0
 11022  012D6A  0012               	return		;funcret
 11023  012D6C                     __end_of_d_to_x:
 11024                           	opt stack 0
 11025                           tblptru	equ	0xFF8
 11026                           tblptrh	equ	0xFF7
 11027                           tblptrl	equ	0xFF6
 11028                           tablat	equ	0xFF5
 11029                           prodh	equ	0xFF4
 11030                           prodl	equ	0xFF3
 11031                           intcon	equ	0xFF2
 11032                           intcon2	equ	0xFF1
 11033                           postinc0	equ	0xFEE
 11034                           wreg	equ	0xFE8
 11035                           indf1	equ	0xFE7
 11036                           postinc1	equ	0xFE6
 11037                           postdec1	equ	0xFE5
 11038                           fsr1h	equ	0xFE2
 11039                           fsr1l	equ	0xFE1
 11040                           indf2	equ	0xFDF
 11041                           postinc2	equ	0xFDE
 11042                           postdec2	equ	0xFDD
 11043                           fsr2h	equ	0xFDA
 11044                           fsr2l	equ	0xFD9
 11045                           status	equ	0xFD8
 11046                           
 11047 ;; *************** function ___awdiv *****************
 11048 ;; Defined at:
 11049 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 11050 ;; Parameters:    Size  Location     Type
 11051 ;;  dividend        2   30[COMRAM] int 
 11052 ;;  divisor         2   32[COMRAM] int 
 11053 ;; Auto vars:     Size  Location     Type
 11054 ;;  quotient        2   36[COMRAM] int 
 11055 ;;  sign            1   35[COMRAM] unsigned char 
 11056 ;;  counter         1   34[COMRAM] unsigned char 
 11057 ;; Return value:  Size  Location     Type
 11058 ;;                  2   30[COMRAM] int 
 11059 ;; Registers used:
 11060 ;;		wreg, status,2, status,0
 11061 ;; Tracked objects:
 11062 ;;		On entry : 0/0
 11063 ;;		On exit  : 0/0
 11064 ;;		Unchanged: 0/0
 11065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11066 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11067 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11069 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11070 ;;Total ram usage:        8 bytes
 11071 ;; Hardware stack levels used:    1
 11072 ;; Hardware stack levels required when called:    4
 11073 ;; This function calls:
 11074 ;;		Nothing
 11075 ;; This function is called by:
 11076 ;;		_d_to_x
 11077 ;; This function uses a non-reentrant model
 11078 ;;
 11079                           
 11080                           	psect	text49
 11081  012532                     __ptext49:
 11082                           	opt stack 0
 11083  012532                     ___awdiv:
 11084                           	opt stack 19
 11085                           
 11086                           ; BSR set to: 0
 11087                           ;incstack = 0
 11088  012532  0E00               	movlw	0
 11089  012534  6E24               	movwf	___awdiv@sign,c
 11090  012536  AE22               	btfss	___awdiv@divisor+1,7,c
 11091  012538  D007               	goto	l4587
 11092  01253A  6C21               	negf	___awdiv@divisor,c
 11093  01253C  1E22               	comf	___awdiv@divisor+1,f,c
 11094  01253E  B0D8               	btfsc	status,0,c
 11095  012540  2A22               	incf	___awdiv@divisor+1,f,c
 11096  012542  0E01               	movlw	1
 11097  012544  6E24               	movwf	___awdiv@sign,c
 11098  012546  D000               	goto	l4587
 11099  012548                     l4587:
 11100  012548  AE20               	btfss	___awdiv@dividend+1,7,c
 11101  01254A  D007               	goto	l4593
 11102  01254C  6C1F               	negf	___awdiv@dividend,c
 11103  01254E  1E20               	comf	___awdiv@dividend+1,f,c
 11104  012550  B0D8               	btfsc	status,0,c
 11105  012552  2A20               	incf	___awdiv@dividend+1,f,c
 11106  012554  0E01               	movlw	1
 11107  012556  1A24               	xorwf	___awdiv@sign,f,c
 11108  012558  D000               	goto	l4593
 11109  01255A                     l4593:
 11110  01255A  0E00               	movlw	0
 11111  01255C  6E26               	movwf	___awdiv@quotient+1,c
 11112  01255E  0E00               	movlw	0
 11113  012560  6E25               	movwf	___awdiv@quotient,c
 11114  012562  5021               	movf	___awdiv@divisor,w,c
 11115  012564  1022               	iorwf	___awdiv@divisor+1,w,c
 11116  012566  B4D8               	btfsc	status,2,c
 11117  012568  D021               	goto	l4615
 11118  01256A  0E01               	movlw	1
 11119  01256C  6E23               	movwf	___awdiv@counter,c
 11120  01256E  D005               	goto	l4601
 11121  012570                     l4599:
 11122  012570  90D8               	bcf	status,0,c
 11123  012572  3621               	rlcf	___awdiv@divisor,f,c
 11124  012574  3622               	rlcf	___awdiv@divisor+1,f,c
 11125  012576  2A23               	incf	___awdiv@counter,f,c
 11126  012578  D000               	goto	l4601
 11127  01257A                     l4601:
 11128  01257A  BE22               	btfsc	___awdiv@divisor+1,7,c
 11129  01257C  D002               	goto	l4603
 11130  01257E  D7F8               	goto	l4599
 11131  012580  D000               	goto	l4603
 11132  012582                     l4603:
 11133  012582  90D8               	bcf	status,0,c
 11134  012584  3625               	rlcf	___awdiv@quotient,f,c
 11135  012586  3626               	rlcf	___awdiv@quotient+1,f,c
 11136  012588  5021               	movf	___awdiv@divisor,w,c
 11137  01258A  5C1F               	subwf	___awdiv@dividend,w,c
 11138  01258C  5022               	movf	___awdiv@divisor+1,w,c
 11139  01258E  5820               	subwfb	___awdiv@dividend+1,w,c
 11140  012590  A0D8               	btfss	status,0,c
 11141  012592  D006               	goto	l4611
 11142  012594  5021               	movf	___awdiv@divisor,w,c
 11143  012596  5E1F               	subwf	___awdiv@dividend,f,c
 11144  012598  5022               	movf	___awdiv@divisor+1,w,c
 11145  01259A  5A20               	subwfb	___awdiv@dividend+1,f,c
 11146  01259C  8025               	bsf	___awdiv@quotient,0,c
 11147  01259E  D000               	goto	l4611
 11148  0125A0                     l4611:
 11149  0125A0  90D8               	bcf	status,0,c
 11150  0125A2  3222               	rrcf	___awdiv@divisor+1,f,c
 11151  0125A4  3221               	rrcf	___awdiv@divisor,f,c
 11152  0125A6  2E23               	decfsz	___awdiv@counter,f,c
 11153  0125A8  D7EC               	goto	l4603
 11154  0125AA  D000               	goto	l4615
 11155  0125AC                     l4615:
 11156  0125AC  5024               	movf	___awdiv@sign,w,c
 11157  0125AE  B4D8               	btfsc	status,2,c
 11158  0125B0  D005               	goto	l4619
 11159  0125B2  6C25               	negf	___awdiv@quotient,c
 11160  0125B4  1E26               	comf	___awdiv@quotient+1,f,c
 11161  0125B6  B0D8               	btfsc	status,0,c
 11162  0125B8  2A26               	incf	___awdiv@quotient+1,f,c
 11163  0125BA  D000               	goto	l4619
 11164  0125BC                     l4619:
 11165  0125BC  C025  F01F         	movff	___awdiv@quotient,?___awdiv
 11166  0125C0  C026  F020         	movff	___awdiv@quotient+1,?___awdiv+1
 11167  0125C4  0012               	return	
 11168  0125C6  0012               	return		;funcret
 11169  0125C8                     __end_of___awdiv:
 11170                           	opt stack 0
 11171                           tblptru	equ	0xFF8
 11172                           tblptrh	equ	0xFF7
 11173                           tblptrl	equ	0xFF6
 11174                           tablat	equ	0xFF5
 11175                           prodh	equ	0xFF4
 11176                           prodl	equ	0xFF3
 11177                           intcon	equ	0xFF2
 11178                           intcon2	equ	0xFF1
 11179                           postinc0	equ	0xFEE
 11180                           wreg	equ	0xFE8
 11181                           indf1	equ	0xFE7
 11182                           postinc1	equ	0xFE6
 11183                           postdec1	equ	0xFE5
 11184                           fsr1h	equ	0xFE2
 11185                           fsr1l	equ	0xFE1
 11186                           indf2	equ	0xFDF
 11187                           postinc2	equ	0xFDE
 11188                           postdec2	equ	0xFDD
 11189                           fsr2h	equ	0xFDA
 11190                           fsr2l	equ	0xFD9
 11191                           status	equ	0xFD8
 11192                           
 11193 ;; *************** function _ISR *****************
 11194 ;; Defined at:
 11195 ;;		line 55 in file "PIC18F27J53-killifish_light04.c"
 11196 ;; Parameters:    Size  Location     Type
 11197 ;;		None
 11198 ;; Auto vars:     Size  Location     Type
 11199 ;;		None
 11200 ;; Return value:  Size  Location     Type
 11201 ;;		None               void
 11202 ;; Registers used:
 11203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11204 ;; Tracked objects:
 11205 ;;		On entry : 0/0
 11206 ;;		On exit  : 0/0
 11207 ;;		Unchanged: 0/0
 11208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11211 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11212 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11213 ;;Total ram usage:       14 bytes
 11214 ;; Hardware stack levels used:    1
 11215 ;; Hardware stack levels required when called:    3
 11216 ;; This function calls:
 11217 ;;		_UART_ISR
 11218 ;;		_button_timer_interrupt
 11219 ;; This function is called by:
 11220 ;;		Interrupt level 2
 11221 ;; This function uses a non-reentrant model
 11222 ;;
 11223                           
 11224                           	psect	intcode
 11225  000008                     __pintcode:
 11226                           	opt stack 0
 11227  000008                     _ISR:
 11228                           	opt stack 18
 11229                           
 11230                           ;incstack = 0
 11231  000008  CFFA F011          	movff	pclath,??_ISR
 11232  00000C  CFFB F012          	movff	pclatu,??_ISR+1
 11233  000010  CFE9 F013          	movff	fsr0l,??_ISR+2
 11234  000014  CFEA F014          	movff	fsr0h,??_ISR+3
 11235  000018  CFE1 F015          	movff	fsr1l,??_ISR+4
 11236  00001C  CFE2 F016          	movff	fsr1h,??_ISR+5
 11237  000020  CFD9 F017          	movff	fsr2l,??_ISR+6
 11238  000024  CFDA F018          	movff	fsr2h,??_ISR+7
 11239  000028  CFF3 F019          	movff	prodl,??_ISR+8
 11240  00002C  CFF4 F01A          	movff	prodh,??_ISR+9
 11241  000030  CFF6 F01B          	movff	tblptrl,??_ISR+10
 11242  000034  CFF7 F01C          	movff	tblptrh,??_ISR+11
 11243  000038  CFF8 F01D          	movff	tblptru,??_ISR+12
 11244  00003C  CFF5 F01E          	movff	tablat,??_ISR+13
 11245                           
 11246                           ;PIC18F27J53-killifish_light04.c: 56: UART_ISR();
 11247  000040  EC9E  F095         	call	_UART_ISR	;wreg free
 11248                           
 11249                           ;PIC18F27J53-killifish_light04.c: 57: if (INTCONbits.T0IF) {
 11250  000044  B4F2               	btfsc	intcon,2,c	;volatile
 11251                           
 11252                           ;PIC18F27J53-killifish_light04.c: 58: INTCONbits.T0IF = 0;
 11253  000046  94F2               	bcf	intcon,2,c	;volatile
 11254                           
 11255                           ;PIC18F27J53-killifish_light04.c: 59: }
 11256                           ;PIC18F27J53-killifish_light04.c: 60: if (PIR1bits.TMR1IF) {
 11257  000048  A09E               	btfss	3998,0,c	;volatile
 11258  00004A  D004               	goto	i2l4473
 11259                           
 11260                           ;PIC18F27J53-killifish_light04.c: 61: PIR1bits.TMR1IF = 0;
 11261  00004C  909E               	bcf	3998,0,c	;volatile
 11262                           
 11263                           ;PIC18F27J53-killifish_light04.c: 62: TMR1H = 0x80;
 11264  00004E  0E80               	movlw	128
 11265  000050  6ECF               	movwf	4047,c	;volatile
 11266  000052  D000               	goto	i2l4473
 11267  000054                     i2l4473:
 11268                           
 11269                           ;PIC18F27J53-killifish_light04.c: 63: }
 11270                           ;PIC18F27J53-killifish_light04.c: 64: if (PIR2bits.TMR3IF) {
 11271  000054  A2A1               	btfss	4001,1,c	;volatile
 11272  000056  D028               	goto	i2l587
 11273                           
 11274                           ;PIC18F27J53-killifish_light04.c: 65: PIR2bits.TMR3IF = 0;
 11275  000058  92A1               	bcf	4001,1,c	;volatile
 11276                           
 11277                           ;PIC18F27J53-killifish_light04.c: 66: button_timer_interrupt(&sw_R, !PORTAbits.RA5);
 11278  00005A  0E3E               	movlw	low _sw_R
 11279  00005C  6E01               	movwf	button_timer_interrupt@bt,c
 11280  00005E  0E00               	movlw	high _sw_R
 11281  000060  6E02               	movwf	button_timer_interrupt@bt+1,c
 11282  000062  BA80               	btfsc	3968,5,c	;volatile
 11283  000064  D002               	goto	i2u471_40
 11284  000066  0E01               	movlw	1
 11285  000068  D001               	goto	i2u472_40
 11286  00006A                     i2u471_40:
 11287  00006A  0E00               	movlw	0
 11288  00006C                     i2u472_40:
 11289  00006C  6E03               	movwf	button_timer_interrupt@sw_value,c
 11290  00006E  ECB8  F088         	call	_button_timer_interrupt	;wreg free
 11291                           
 11292                           ;PIC18F27J53-killifish_light04.c: 67: button_timer_interrupt(&sw_G, !PORTAbits.RA6);
 11293  000072  0E3A               	movlw	low _sw_G
 11294  000074  6E01               	movwf	button_timer_interrupt@bt,c
 11295  000076  0E00               	movlw	high _sw_G
 11296  000078  6E02               	movwf	button_timer_interrupt@bt+1,c
 11297  00007A  BC80               	btfsc	3968,6,c	;volatile
 11298  00007C  D002               	goto	i2u473_40
 11299  00007E  0E01               	movlw	1
 11300  000080  D001               	goto	i2u474_40
 11301  000082                     i2u473_40:
 11302  000082  0E00               	movlw	0
 11303  000084                     i2u474_40:
 11304  000084  6E03               	movwf	button_timer_interrupt@sw_value,c
 11305  000086  ECB8  F088         	call	_button_timer_interrupt	;wreg free
 11306                           
 11307                           ;PIC18F27J53-killifish_light04.c: 68: button_timer_interrupt(&sw_B, !PORTAbits.RA7);
 11308  00008A  0E36               	movlw	low _sw_B
 11309  00008C  6E01               	movwf	button_timer_interrupt@bt,c
 11310  00008E  0E00               	movlw	high _sw_B
 11311  000090  6E02               	movwf	button_timer_interrupt@bt+1,c
 11312  000092  BE80               	btfsc	3968,7,c	;volatile
 11313  000094  D002               	goto	i2u475_40
 11314  000096  0E01               	movlw	1
 11315  000098  D001               	goto	i2u476_40
 11316  00009A                     i2u475_40:
 11317  00009A  0E00               	movlw	0
 11318  00009C                     i2u476_40:
 11319  00009C  6E03               	movwf	button_timer_interrupt@sw_value,c
 11320  00009E  ECB8  F088         	call	_button_timer_interrupt	;wreg free
 11321                           
 11322                           ;PIC18F27J53-killifish_light04.c: 69: ADC_flag = 1;
 11323  0000A2  0E01               	movlw	1
 11324  0000A4  6E2C               	movwf	_ADC_flag,c
 11325  0000A6  D000               	goto	i2l587
 11326  0000A8                     i2l587:
 11327  0000A8  C01E  FFF5         	movff	??_ISR+13,tablat
 11328  0000AC  C01D  FFF8         	movff	??_ISR+12,tblptru
 11329  0000B0  C01C  FFF7         	movff	??_ISR+11,tblptrh
 11330  0000B4  C01B  FFF6         	movff	??_ISR+10,tblptrl
 11331  0000B8  C01A  FFF4         	movff	??_ISR+9,prodh
 11332  0000BC  C019  FFF3         	movff	??_ISR+8,prodl
 11333  0000C0  C018  FFDA         	movff	??_ISR+7,fsr2h
 11334  0000C4  C017  FFD9         	movff	??_ISR+6,fsr2l
 11335  0000C8  C016  FFE2         	movff	??_ISR+5,fsr1h
 11336  0000CC  C015  FFE1         	movff	??_ISR+4,fsr1l
 11337  0000D0  C014  FFEA         	movff	??_ISR+3,fsr0h
 11338  0000D4  C013  FFE9         	movff	??_ISR+2,fsr0l
 11339  0000D8  C012  FFFB         	movff	??_ISR+1,pclatu
 11340  0000DC  C011  FFFA         	movff	??_ISR,pclath
 11341  0000E0  0011               	retfie		f
 11342  0000E2                     __end_of_ISR:
 11343                           	opt stack 0
 11344                           pclatu	equ	0xFFB
 11345                           pclath	equ	0xFFA
 11346                           tblptru	equ	0xFF8
 11347                           tblptrh	equ	0xFF7
 11348                           tblptrl	equ	0xFF6
 11349                           tablat	equ	0xFF5
 11350                           prodh	equ	0xFF4
 11351                           prodl	equ	0xFF3
 11352                           intcon	equ	0xFF2
 11353                           intcon2	equ	0xFF1
 11354                           postinc0	equ	0xFEE
 11355                           fsr0h	equ	0xFEA
 11356                           fsr0l	equ	0xFE9
 11357                           wreg	equ	0xFE8
 11358                           indf1	equ	0xFE7
 11359                           postinc1	equ	0xFE6
 11360                           postdec1	equ	0xFE5
 11361                           fsr1h	equ	0xFE2
 11362                           fsr1l	equ	0xFE1
 11363                           indf2	equ	0xFDF
 11364                           postinc2	equ	0xFDE
 11365                           postdec2	equ	0xFDD
 11366                           fsr2h	equ	0xFDA
 11367                           fsr2l	equ	0xFD9
 11368                           status	equ	0xFD8
 11369                           
 11370 ;; *************** function _button_timer_interrupt *****************
 11371 ;; Defined at:
 11372 ;;		line 51 in file "../My_header\My_button.h"
 11373 ;; Parameters:    Size  Location     Type
 11374 ;;  bt              2    0[COMRAM] PTR struct button
 11375 ;;		 -> sw_B(4), sw_G(4), sw_R(4), 
 11376 ;;  sw_value        1    2[COMRAM] unsigned char 
 11377 ;; Auto vars:     Size  Location     Type
 11378 ;;		None
 11379 ;; Return value:  Size  Location     Type
 11380 ;;		None               void
 11381 ;; Registers used:
 11382 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11383 ;; Tracked objects:
 11384 ;;		On entry : 0/0
 11385 ;;		On exit  : 0/0
 11386 ;;		Unchanged: 0/0
 11387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11388 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11390 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11391 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11392 ;;Total ram usage:        5 bytes
 11393 ;; Hardware stack levels used:    1
 11394 ;; This function calls:
 11395 ;;		Nothing
 11396 ;; This function is called by:
 11397 ;;		_ISR
 11398 ;; This function uses a non-reentrant model
 11399 ;;
 11400                           
 11401                           	psect	text51
 11402  011170                     __ptext51:
 11403                           	opt stack 0
 11404  011170                     _button_timer_interrupt:
 11405                           	opt stack 20
 11406                           
 11407                           ;My_header\My_button.h: 52: if (sw_value) {
 11408                           
 11409                           ;incstack = 0
 11410  011170  5003               	movf	button_timer_interrupt@sw_value,w,c
 11411  011172  B4D8               	btfsc	status,2,c
 11412  011174  D098               	goto	i2l3989
 11413                           
 11414                           ;My_header\My_button.h: 53: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 11415  011176  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11416  01117A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11417  01117E  0E84               	movlw	132
 11418  011180  18DE               	xorwf	postinc2,w,c
 11419  011182  E10B               	bnz	i2l286
 11420  011184  0E03               	movlw	3
 11421  011186  18DE               	xorwf	postinc2,w,c
 11422  011188  A4D8               	btfss	status,2,c
 11423  01118A  D007               	goto	i2l286
 11424  01118C  EE20 F003          	lfsr	2,3
 11425  011190  5001               	movf	button_timer_interrupt@bt,w,c
 11426  011192  26D9               	addwf	fsr2l,f,c
 11427  011194  5002               	movf	button_timer_interrupt@bt+1,w,c
 11428  011196  22DA               	addwfc	fsr2h,f,c
 11429  011198  8EDF               	bsf	indf2,7,c
 11430  01119A                     i2l286:
 11431                           
 11432                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 11433  01119A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11434  01119E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11435  0111A2  0EBC               	movlw	188
 11436  0111A4  18DE               	xorwf	postinc2,w,c
 11437  0111A6  E10B               	bnz	i2l287
 11438  0111A8  0E02               	movlw	2
 11439  0111AA  18DE               	xorwf	postinc2,w,c
 11440  0111AC  A4D8               	btfss	status,2,c
 11441  0111AE  D007               	goto	i2l287
 11442  0111B0  EE20 F003          	lfsr	2,3
 11443  0111B4  5001               	movf	button_timer_interrupt@bt,w,c
 11444  0111B6  26D9               	addwf	fsr2l,f,c
 11445  0111B8  5002               	movf	button_timer_interrupt@bt+1,w,c
 11446  0111BA  22DA               	addwfc	fsr2h,f,c
 11447  0111BC  8CDF               	bsf	indf2,6,c
 11448  0111BE                     i2l287:
 11449                           
 11450                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 11451  0111BE  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11452  0111C2  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11453  0111C6  0EF4               	movlw	244
 11454  0111C8  18DE               	xorwf	postinc2,w,c
 11455  0111CA  E10A               	bnz	i2l288
 11456  0111CC  04DE               	decf	postinc2,w,c
 11457  0111CE  A4D8               	btfss	status,2,c
 11458  0111D0  D007               	goto	i2l288
 11459  0111D2  EE20 F003          	lfsr	2,3
 11460  0111D6  5001               	movf	button_timer_interrupt@bt,w,c
 11461  0111D8  26D9               	addwf	fsr2l,f,c
 11462  0111DA  5002               	movf	button_timer_interrupt@bt+1,w,c
 11463  0111DC  22DA               	addwfc	fsr2h,f,c
 11464  0111DE  8ADF               	bsf	indf2,5,c
 11465  0111E0                     i2l288:
 11466                           
 11467                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 11468  0111E0  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11469  0111E4  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11470  0111E8  0E2C               	movlw	44
 11471  0111EA  18DE               	xorwf	postinc2,w,c
 11472  0111EC  E10A               	bnz	i2l289
 11473  0111EE  04DE               	decf	postinc2,w,c
 11474  0111F0  A4D8               	btfss	status,2,c
 11475  0111F2  D007               	goto	i2l289
 11476  0111F4  EE20 F003          	lfsr	2,3
 11477  0111F8  5001               	movf	button_timer_interrupt@bt,w,c
 11478  0111FA  26D9               	addwf	fsr2l,f,c
 11479  0111FC  5002               	movf	button_timer_interrupt@bt+1,w,c
 11480  0111FE  22DA               	addwfc	fsr2h,f,c
 11481  011200  88DF               	bsf	indf2,4,c
 11482  011202                     i2l289:
 11483                           
 11484                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 11485  011202  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11486  011206  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11487  01120A  0E96               	movlw	150
 11488  01120C  18DE               	xorwf	postinc2,w,c
 11489  01120E  10DE               	iorwf	postinc2,w,c
 11490  011210  A4D8               	btfss	status,2,c
 11491  011212  D007               	goto	i2l290
 11492  011214  EE20 F003          	lfsr	2,3
 11493  011218  5001               	movf	button_timer_interrupt@bt,w,c
 11494  01121A  26D9               	addwf	fsr2l,f,c
 11495  01121C  5002               	movf	button_timer_interrupt@bt+1,w,c
 11496  01121E  22DA               	addwfc	fsr2h,f,c
 11497  011220  86DF               	bsf	indf2,3,c
 11498  011222                     i2l290:
 11499                           
 11500                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 11501  011222  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11502  011226  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11503  01122A  0E3C               	movlw	60
 11504  01122C  18DE               	xorwf	postinc2,w,c
 11505  01122E  10DE               	iorwf	postinc2,w,c
 11506  011230  A4D8               	btfss	status,2,c
 11507  011232  D007               	goto	i2l291
 11508  011234  EE20 F003          	lfsr	2,3
 11509  011238  5001               	movf	button_timer_interrupt@bt,w,c
 11510  01123A  26D9               	addwf	fsr2l,f,c
 11511  01123C  5002               	movf	button_timer_interrupt@bt+1,w,c
 11512  01123E  22DA               	addwfc	fsr2h,f,c
 11513  011240  84DF               	bsf	indf2,2,c
 11514  011242                     i2l291:
 11515                           
 11516                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 11517  011242  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11518  011246  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11519  01124A  0E10               	movlw	16
 11520  01124C  18DE               	xorwf	postinc2,w,c
 11521  01124E  10DE               	iorwf	postinc2,w,c
 11522  011250  A4D8               	btfss	status,2,c
 11523  011252  D007               	goto	i2l292
 11524  011254  EE20 F003          	lfsr	2,3
 11525  011258  5001               	movf	button_timer_interrupt@bt,w,c
 11526  01125A  26D9               	addwf	fsr2l,f,c
 11527  01125C  5002               	movf	button_timer_interrupt@bt+1,w,c
 11528  01125E  22DA               	addwfc	fsr2h,f,c
 11529  011260  82DF               	bsf	indf2,1,c
 11530  011262                     i2l292:
 11531                           
 11532                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 11533  011262  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11534  011266  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11535  01126A  0E02               	movlw	2
 11536  01126C  18DE               	xorwf	postinc2,w,c
 11537  01126E  10DE               	iorwf	postinc2,w,c
 11538  011270  A4D8               	btfss	status,2,c
 11539  011272  D007               	goto	i2l293
 11540  011274  EE20 F003          	lfsr	2,3
 11541  011278  5001               	movf	button_timer_interrupt@bt,w,c
 11542  01127A  26D9               	addwf	fsr2l,f,c
 11543  01127C  5002               	movf	button_timer_interrupt@bt+1,w,c
 11544  01127E  22DA               	addwfc	fsr2h,f,c
 11545  011280  80DF               	bsf	indf2,0,c
 11546  011282                     i2l293:
 11547                           
 11548                           ;My_header\My_button.h: 61: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 11549  011282  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11550  011286  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11551  01128A  0E85               	movlw	133
 11552  01128C  5CDE               	subwf	postinc2,w,c
 11553  01128E  0E03               	movlw	3
 11554  011290  58DE               	subwfb	postinc2,w,c
 11555  011292  B0D8               	btfsc	status,0,c
 11556  011294  0012               	return	
 11557  011296  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11558  01129A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11559  01129E  2ADE               	incf	postinc2,f,c
 11560  0112A0  0E00               	movlw	0
 11561  0112A2  22DD               	addwfc	postdec2,f,c
 11562                           
 11563                           ;My_header\My_button.h: 62: } else {
 11564  0112A4  0012               	return	
 11565  0112A6                     i2l3989:
 11566                           
 11567                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 11568  0112A6  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11569  0112AA  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11570  0112AE  0E84               	movlw	132
 11571  0112B0  5CDE               	subwf	postinc2,w,c
 11572  0112B2  0E03               	movlw	3
 11573  0112B4  58DE               	subwfb	postinc2,w,c
 11574  0112B6  A0D8               	btfss	status,0,c
 11575  0112B8  D008               	goto	i2l3993
 11576  0112BA  EE20 F002          	lfsr	2,2
 11577  0112BE  5001               	movf	button_timer_interrupt@bt,w,c
 11578  0112C0  26D9               	addwf	fsr2l,f,c
 11579  0112C2  5002               	movf	button_timer_interrupt@bt+1,w,c
 11580  0112C4  22DA               	addwfc	fsr2h,f,c
 11581  0112C6  8EDF               	bsf	indf2,7,c
 11582  0112C8  D082               	goto	i2l4021
 11583  0112CA                     i2l3993:
 11584                           
 11585                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 11586  0112CA  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11587  0112CE  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11588  0112D2  0EBC               	movlw	188
 11589  0112D4  5CDE               	subwf	postinc2,w,c
 11590  0112D6  0E02               	movlw	2
 11591  0112D8  58DE               	subwfb	postinc2,w,c
 11592  0112DA  A0D8               	btfss	status,0,c
 11593  0112DC  D008               	goto	i2l3997
 11594  0112DE  EE20 F002          	lfsr	2,2
 11595  0112E2  5001               	movf	button_timer_interrupt@bt,w,c
 11596  0112E4  26D9               	addwf	fsr2l,f,c
 11597  0112E6  5002               	movf	button_timer_interrupt@bt+1,w,c
 11598  0112E8  22DA               	addwfc	fsr2h,f,c
 11599  0112EA  8CDF               	bsf	indf2,6,c
 11600  0112EC  D070               	goto	i2l4021
 11601  0112EE                     i2l3997:
 11602                           
 11603                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 11604  0112EE  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11605  0112F2  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11606  0112F6  0EF4               	movlw	244
 11607  0112F8  5CDE               	subwf	postinc2,w,c
 11608  0112FA  0E01               	movlw	1
 11609  0112FC  58DE               	subwfb	postinc2,w,c
 11610  0112FE  A0D8               	btfss	status,0,c
 11611  011300  D008               	goto	i2l4001
 11612  011302  EE20 F002          	lfsr	2,2
 11613  011306  5001               	movf	button_timer_interrupt@bt,w,c
 11614  011308  26D9               	addwf	fsr2l,f,c
 11615  01130A  5002               	movf	button_timer_interrupt@bt+1,w,c
 11616  01130C  22DA               	addwfc	fsr2h,f,c
 11617  01130E  8ADF               	bsf	indf2,5,c
 11618  011310  D05E               	goto	i2l4021
 11619  011312                     i2l4001:
 11620                           
 11621                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 11622  011312  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11623  011316  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11624  01131A  0E2C               	movlw	44
 11625  01131C  5CDE               	subwf	postinc2,w,c
 11626  01131E  0E01               	movlw	1
 11627  011320  58DE               	subwfb	postinc2,w,c
 11628  011322  A0D8               	btfss	status,0,c
 11629  011324  D008               	goto	i2l4005
 11630  011326  EE20 F002          	lfsr	2,2
 11631  01132A  5001               	movf	button_timer_interrupt@bt,w,c
 11632  01132C  26D9               	addwf	fsr2l,f,c
 11633  01132E  5002               	movf	button_timer_interrupt@bt+1,w,c
 11634  011330  22DA               	addwfc	fsr2h,f,c
 11635  011332  88DF               	bsf	indf2,4,c
 11636  011334  D04C               	goto	i2l4021
 11637  011336                     i2l4005:
 11638                           
 11639                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 11640  011336  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11641  01133A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11642  01133E  0E01               	movlw	1
 11643  011340  50DB               	movf	plusw2,w,c
 11644  011342  E104               	bnz	i2u397_40
 11645  011344  0E96               	movlw	150
 11646  011346  5CDE               	subwf	postinc2,w,c
 11647  011348  A0D8               	btfss	status,0,c
 11648  01134A  D008               	goto	i2l4009
 11649  01134C                     i2u397_40:
 11650  01134C  EE20 F002          	lfsr	2,2
 11651  011350  5001               	movf	button_timer_interrupt@bt,w,c
 11652  011352  26D9               	addwf	fsr2l,f,c
 11653  011354  5002               	movf	button_timer_interrupt@bt+1,w,c
 11654  011356  22DA               	addwfc	fsr2h,f,c
 11655  011358  86DF               	bsf	indf2,3,c
 11656  01135A  D039               	goto	i2l4021
 11657  01135C                     i2l4009:
 11658                           
 11659                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 11660  01135C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11661  011360  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11662  011364  0E01               	movlw	1
 11663  011366  50DB               	movf	plusw2,w,c
 11664  011368  E104               	bnz	i2u398_40
 11665  01136A  0E3C               	movlw	60
 11666  01136C  5CDE               	subwf	postinc2,w,c
 11667  01136E  A0D8               	btfss	status,0,c
 11668  011370  D008               	goto	i2l4013
 11669  011372                     i2u398_40:
 11670  011372  EE20 F002          	lfsr	2,2
 11671  011376  5001               	movf	button_timer_interrupt@bt,w,c
 11672  011378  26D9               	addwf	fsr2l,f,c
 11673  01137A  5002               	movf	button_timer_interrupt@bt+1,w,c
 11674  01137C  22DA               	addwfc	fsr2h,f,c
 11675  01137E  84DF               	bsf	indf2,2,c
 11676  011380  D026               	goto	i2l4021
 11677  011382                     i2l4013:
 11678                           
 11679                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 11680  011382  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11681  011386  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11682  01138A  0E01               	movlw	1
 11683  01138C  50DB               	movf	plusw2,w,c
 11684  01138E  E104               	bnz	i2u399_40
 11685  011390  0E10               	movlw	16
 11686  011392  5CDE               	subwf	postinc2,w,c
 11687  011394  A0D8               	btfss	status,0,c
 11688  011396  D008               	goto	i2l4017
 11689  011398                     i2u399_40:
 11690  011398  EE20 F002          	lfsr	2,2
 11691  01139C  5001               	movf	button_timer_interrupt@bt,w,c
 11692  01139E  26D9               	addwf	fsr2l,f,c
 11693  0113A0  5002               	movf	button_timer_interrupt@bt+1,w,c
 11694  0113A2  22DA               	addwfc	fsr2h,f,c
 11695  0113A4  82DF               	bsf	indf2,1,c
 11696  0113A6  D013               	goto	i2l4021
 11697  0113A8                     i2l4017:
 11698                           
 11699                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 11700  0113A8  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11701  0113AC  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11702  0113B0  0E01               	movlw	1
 11703  0113B2  50DB               	movf	plusw2,w,c
 11704  0113B4  E104               	bnz	i2u400_40
 11705  0113B6  0E02               	movlw	2
 11706  0113B8  5CDE               	subwf	postinc2,w,c
 11707  0113BA  A0D8               	btfss	status,0,c
 11708  0113BC  D008               	goto	i2l4021
 11709  0113BE                     i2u400_40:
 11710  0113BE  EE20 F002          	lfsr	2,2
 11711  0113C2  5001               	movf	button_timer_interrupt@bt,w,c
 11712  0113C4  26D9               	addwf	fsr2l,f,c
 11713  0113C6  5002               	movf	button_timer_interrupt@bt+1,w,c
 11714  0113C8  22DA               	addwfc	fsr2h,f,c
 11715  0113CA  80DF               	bsf	indf2,0,c
 11716  0113CC  D000               	goto	i2l4021
 11717  0113CE                     i2l4021:
 11718                           
 11719                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
 11720  0113CE  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11721  0113D2  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11722  0113D6  0E00               	movlw	0
 11723  0113D8  6EDE               	movwf	postinc2,c
 11724  0113DA  0E00               	movlw	0
 11725  0113DC  6EDD               	movwf	postdec2,c
 11726                           
 11727                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
 11728  0113DE  EE20 F002          	lfsr	2,2
 11729  0113E2  5001               	movf	button_timer_interrupt@bt,w,c
 11730  0113E4  26D9               	addwf	fsr2l,f,c
 11731  0113E6  5002               	movf	button_timer_interrupt@bt+1,w,c
 11732  0113E8  22DA               	addwfc	fsr2h,f,c
 11733  0113EA  0EFF               	movlw	255
 11734  0113EC  16DE               	andwf	postinc2,f,c
 11735  0113EE  0E00               	movlw	0
 11736  0113F0  16DD               	andwf	postdec2,f,c
 11737  0113F2  0012               	return	
 11738  0113F4  0012               	return		;funcret
 11739  0113F6                     __end_of_button_timer_interrupt:
 11740                           	opt stack 0
 11741                           pclatu	equ	0xFFB
 11742                           pclath	equ	0xFFA
 11743                           tblptru	equ	0xFF8
 11744                           tblptrh	equ	0xFF7
 11745                           tblptrl	equ	0xFF6
 11746                           tablat	equ	0xFF5
 11747                           prodh	equ	0xFF4
 11748                           prodl	equ	0xFF3
 11749                           intcon	equ	0xFF2
 11750                           intcon2	equ	0xFF1
 11751                           postinc0	equ	0xFEE
 11752                           fsr0h	equ	0xFEA
 11753                           fsr0l	equ	0xFE9
 11754                           wreg	equ	0xFE8
 11755                           indf1	equ	0xFE7
 11756                           postinc1	equ	0xFE6
 11757                           postdec1	equ	0xFE5
 11758                           fsr1h	equ	0xFE2
 11759                           fsr1l	equ	0xFE1
 11760                           indf2	equ	0xFDF
 11761                           postinc2	equ	0xFDE
 11762                           postdec2	equ	0xFDD
 11763                           plusw2	equ	0xFDB
 11764                           fsr2h	equ	0xFDA
 11765                           fsr2l	equ	0xFD9
 11766                           status	equ	0xFD8
 11767                           
 11768 ;; *************** function _UART_ISR *****************
 11769 ;; Defined at:
 11770 ;;		line 208 in file "../My_header\My_header.h"
 11771 ;; Parameters:    Size  Location     Type
 11772 ;;		None
 11773 ;; Auto vars:     Size  Location     Type
 11774 ;;  ascii           1   15[COMRAM] unsigned char 
 11775 ;; Return value:  Size  Location     Type
 11776 ;;		None               void
 11777 ;; Registers used:
 11778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11779 ;; Tracked objects:
 11780 ;;		On entry : 0/0
 11781 ;;		On exit  : 0/0
 11782 ;;		Unchanged: 0/0
 11783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11785 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11787 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11788 ;;Total ram usage:        1 bytes
 11789 ;; Hardware stack levels used:    1
 11790 ;; Hardware stack levels required when called:    2
 11791 ;; This function calls:
 11792 ;;		i2_ringbuf_num
 11793 ;;		i2_ringbuf_pop
 11794 ;;		i2_ringbuf_put
 11795 ;; This function is called by:
 11796 ;;		_ISR
 11797 ;; This function uses a non-reentrant model
 11798 ;;
 11799                           
 11800                           	psect	text52
 11801  012B3C                     __ptext52:
 11802                           	opt stack 0
 11803  012B3C                     _UART_ISR:
 11804                           	opt stack 18
 11805                           
 11806                           ;My_header\My_header.h: 209: if (PIE1bits.TXIE && PIR1bits.TXIF) {
 11807                           
 11808                           ;incstack = 0
 11809  012B3C  B89D               	btfsc	3997,4,c	;volatile
 11810  012B3E  A89E               	btfss	3998,4,c	;volatile
 11811  012B40  D014               	goto	i2l221
 11812                           
 11813                           ;My_header\My_header.h: 210: if (ringbuf_num(&tx_buf)) {
 11814  012B42  0E2E               	movlw	low _tx_buf
 11815  012B44  6E01               	movwf	i2ringbuf_num@rb,c
 11816  012B46  0E00               	movlw	high _tx_buf
 11817  012B48  6E02               	movwf	i2ringbuf_num@rb+1,c
 11818  012B4A  EC9D  F08F         	call	i2_ringbuf_num	;wreg free
 11819  012B4E  5001               	movf	?i2_ringbuf_num,w,c
 11820  012B50  1002               	iorwf	?i2_ringbuf_num+1,w,c
 11821  012B52  B4D8               	btfsc	status,2,c
 11822  012B54  D008               	goto	i2l222
 11823                           
 11824                           ;My_header\My_header.h: 211: TXREG1 = ringbuf_pop(&tx_buf);
 11825  012B56  0E2E               	movlw	low _tx_buf
 11826  012B58  6E09               	movwf	i2ringbuf_pop@rb,c
 11827  012B5A  0E00               	movlw	high _tx_buf
 11828  012B5C  6E0A               	movwf	i2ringbuf_pop@rb+1,c
 11829  012B5E  ECB2  F090         	call	i2_ringbuf_pop	;wreg free
 11830  012B62  6EAE               	movwf	4014,c	;volatile
 11831                           
 11832                           ;My_header\My_header.h: 212: } else {
 11833  012B64  D002               	goto	i2l221
 11834  012B66                     i2l222:
 11835                           
 11836                           ;My_header\My_header.h: 213: PIE1bits.TXIE = 0;
 11837  012B66  989D               	bcf	3997,4,c	;volatile
 11838  012B68  D000               	goto	i2l221
 11839  012B6A                     i2l221:
 11840                           
 11841                           ;My_header\My_header.h: 214: }
 11842                           ;My_header\My_header.h: 215: }
 11843                           ;My_header\My_header.h: 216: if (PIR1bits.RCIF && PIE1bits.RCIE) {
 11844  012B6A  AA9E               	btfss	3998,5,c	;volatile
 11845  012B6C  0012               	return	
 11846  012B6E  AA9D               	btfss	3997,5,c	;volatile
 11847  012B70  0012               	return	
 11848                           
 11849                           ;My_header\My_header.h: 217: char ascii = RCREG1;
 11850  012B72  CFAF F010          	movff	4015,UART_ISR@ascii	;volatile
 11851                           
 11852                           ;My_header\My_header.h: 218: ringbuf_put(&rx_buf, ascii);
 11853  012B76  0EE2               	movlw	low _rx_buf
 11854  012B78  6E09               	movwf	i2ringbuf_put@rb,c
 11855  012B7A  0E00               	movlw	high _rx_buf
 11856  012B7C  6E0A               	movwf	i2ringbuf_put@rb+1,c
 11857  012B7E  C010  F00B         	movff	UART_ISR@ascii,i2ringbuf_put@asciicode
 11858  012B82  ECFC  F08F         	call	i2_ringbuf_put	;wreg free
 11859  012B86  0012               	return	
 11860  012B88  0012               	return		;funcret
 11861  012B8A                     __end_of_UART_ISR:
 11862                           	opt stack 0
 11863                           pclatu	equ	0xFFB
 11864                           pclath	equ	0xFFA
 11865                           tblptru	equ	0xFF8
 11866                           tblptrh	equ	0xFF7
 11867                           tblptrl	equ	0xFF6
 11868                           tablat	equ	0xFF5
 11869                           prodh	equ	0xFF4
 11870                           prodl	equ	0xFF3
 11871                           intcon	equ	0xFF2
 11872                           intcon2	equ	0xFF1
 11873                           postinc0	equ	0xFEE
 11874                           fsr0h	equ	0xFEA
 11875                           fsr0l	equ	0xFE9
 11876                           wreg	equ	0xFE8
 11877                           indf1	equ	0xFE7
 11878                           postinc1	equ	0xFE6
 11879                           postdec1	equ	0xFE5
 11880                           fsr1h	equ	0xFE2
 11881                           fsr1l	equ	0xFE1
 11882                           indf2	equ	0xFDF
 11883                           postinc2	equ	0xFDE
 11884                           postdec2	equ	0xFDD
 11885                           plusw2	equ	0xFDB
 11886                           fsr2h	equ	0xFDA
 11887                           fsr2l	equ	0xFD9
 11888                           status	equ	0xFD8
 11889                           
 11890 ;; *************** function i2_ringbuf_put *****************
 11891 ;; Defined at:
 11892 ;;		line 39 in file "../My_header\My_ringbuf.h"
 11893 ;; Parameters:    Size  Location     Type
 11894 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 11895 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
 11896 ;;  asciicode       1   10[COMRAM] unsigned char 
 11897 ;; Auto vars:     Size  Location     Type
 11898 ;;		None
 11899 ;; Return value:  Size  Location     Type
 11900 ;;		None               void
 11901 ;; Registers used:
 11902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11903 ;; Tracked objects:
 11904 ;;		On entry : 0/0
 11905 ;;		On exit  : 0/0
 11906 ;;		Unchanged: 0/0
 11907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11908 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11910 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11911 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11912 ;;Total ram usage:        7 bytes
 11913 ;; Hardware stack levels used:    1
 11914 ;; Hardware stack levels required when called:    1
 11915 ;; This function calls:
 11916 ;;		i2_ringbuf_num
 11917 ;; This function is called by:
 11918 ;;		_UART_ISR
 11919 ;; This function uses a non-reentrant model
 11920 ;;
 11921                           
 11922                           	psect	text53
 11923  011FF8                     __ptext53:
 11924                           	opt stack 0
 11925  011FF8                     i2_ringbuf_put:
 11926                           	opt stack 18
 11927                           
 11928                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
 11929                           
 11930                           ;incstack = 0
 11931  011FF8  C009  F001         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
 11932  011FFC  C00A  F002         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
 11933  012000  EC9D  F08F         	call	i2_ringbuf_num	;wreg free
 11934  012004  EE20 F002          	lfsr	2,2
 11935  012008  5009               	movf	i2ringbuf_put@rb,w,c
 11936  01200A  26D9               	addwf	fsr2l,f,c
 11937  01200C  500A               	movf	i2ringbuf_put@rb+1,w,c
 11938  01200E  22DA               	addwfc	fsr2h,f,c
 11939  012010  50DE               	movf	postinc2,w,c
 11940  012012  5C01               	subwf	?i2_ringbuf_num,w,c
 11941  012014  50DE               	movf	postinc2,w,c
 11942  012016  5802               	subwfb	?i2_ringbuf_num+1,w,c
 11943  012018  B0D8               	btfsc	status,0,c
 11944  01201A  0012               	return	
 11945                           
 11946                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
 11947  01201C  EE20 F004          	lfsr	2,4
 11948  012020  5009               	movf	i2ringbuf_put@rb,w,c
 11949  012022  26D9               	addwf	fsr2l,f,c
 11950  012024  500A               	movf	i2ringbuf_put@rb+1,w,c
 11951  012026  22DA               	addwfc	fsr2h,f,c
 11952  012028  CFDE F00C          	movff	postinc2,??i2_ringbuf_put
 11953  01202C  CFDD F00D          	movff	postdec2,??i2_ringbuf_put+1
 11954  012030  C009  FFD9         	movff	i2ringbuf_put@rb,fsr2l
 11955  012034  C00A  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
 11956  012038  CFDE F00E          	movff	postinc2,??i2_ringbuf_put+2
 11957  01203C  CFDD F00F          	movff	postdec2,??i2_ringbuf_put+3
 11958  012040  500C               	movf	??i2_ringbuf_put,w,c
 11959  012042  240E               	addwf	??i2_ringbuf_put+2,w,c
 11960  012044  6ED9               	movwf	fsr2l,c
 11961  012046  500D               	movf	??i2_ringbuf_put+1,w,c
 11962  012048  200F               	addwfc	??i2_ringbuf_put+3,w,c
 11963  01204A  6EDA               	movwf	fsr2h,c
 11964  01204C  C00B  FFDF         	movff	i2ringbuf_put@asciicode,indf2
 11965                           
 11966                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
 11967  012050  EE20 F002          	lfsr	2,2
 11968  012054  5009               	movf	i2ringbuf_put@rb,w,c
 11969  012056  26D9               	addwf	fsr2l,f,c
 11970  012058  500A               	movf	i2ringbuf_put@rb+1,w,c
 11971  01205A  22DA               	addwfc	fsr2h,f,c
 11972  01205C  EE10 F004          	lfsr	1,4
 11973  012060  5009               	movf	i2ringbuf_put@rb,w,c
 11974  012062  26E1               	addwf	fsr1l,f,c
 11975  012064  500A               	movf	i2ringbuf_put@rb+1,w,c
 11976  012066  22E2               	addwfc	fsr1h,f,c
 11977  012068  CFE6 F00E          	movff	postinc1,??i2_ringbuf_put+2
 11978  01206C  CFE5 F00F          	movff	postdec1,??i2_ringbuf_put+3
 11979  012070  0E01               	movlw	1
 11980  012072  260E               	addwf	??i2_ringbuf_put+2,f,c
 11981  012074  0E00               	movlw	0
 11982  012076  220F               	addwfc	??i2_ringbuf_put+3,f,c
 11983  012078  50DE               	movf	postinc2,w,c
 11984  01207A  5C0E               	subwf	??i2_ringbuf_put+2,w,c
 11985  01207C  50DE               	movf	postinc2,w,c
 11986  01207E  580F               	subwfb	??i2_ringbuf_put+3,w,c
 11987  012080  B0D8               	btfsc	status,0,c
 11988  012082  D00A               	goto	i2l3927
 11989  012084  EE20 F004          	lfsr	2,4
 11990  012088  5009               	movf	i2ringbuf_put@rb,w,c
 11991  01208A  26D9               	addwf	fsr2l,f,c
 11992  01208C  500A               	movf	i2ringbuf_put@rb+1,w,c
 11993  01208E  22DA               	addwfc	fsr2h,f,c
 11994  012090  2ADE               	incf	postinc2,f,c
 11995  012092  0E00               	movlw	0
 11996  012094  22DD               	addwfc	postdec2,f,c
 11997  012096  0012               	return	
 11998  012098                     i2l3927:
 11999                           
 12000                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
 12001  012098  EE20 F004          	lfsr	2,4
 12002  01209C  5009               	movf	i2ringbuf_put@rb,w,c
 12003  01209E  26D9               	addwf	fsr2l,f,c
 12004  0120A0  500A               	movf	i2ringbuf_put@rb+1,w,c
 12005  0120A2  22DA               	addwfc	fsr2h,f,c
 12006  0120A4  0E00               	movlw	0
 12007  0120A6  6EDE               	movwf	postinc2,c
 12008  0120A8  0E00               	movlw	0
 12009  0120AA  6EDD               	movwf	postdec2,c
 12010  0120AC  0012               	return	
 12011  0120AE  0012               	return		;funcret
 12012  0120B0                     __end_ofi2_ringbuf_put:
 12013                           	opt stack 0
 12014                           pclatu	equ	0xFFB
 12015                           pclath	equ	0xFFA
 12016                           tblptru	equ	0xFF8
 12017                           tblptrh	equ	0xFF7
 12018                           tblptrl	equ	0xFF6
 12019                           tablat	equ	0xFF5
 12020                           prodh	equ	0xFF4
 12021                           prodl	equ	0xFF3
 12022                           intcon	equ	0xFF2
 12023                           intcon2	equ	0xFF1
 12024                           postinc0	equ	0xFEE
 12025                           fsr0h	equ	0xFEA
 12026                           fsr0l	equ	0xFE9
 12027                           wreg	equ	0xFE8
 12028                           indf1	equ	0xFE7
 12029                           postinc1	equ	0xFE6
 12030                           postdec1	equ	0xFE5
 12031                           fsr1h	equ	0xFE2
 12032                           fsr1l	equ	0xFE1
 12033                           indf2	equ	0xFDF
 12034                           postinc2	equ	0xFDE
 12035                           postdec2	equ	0xFDD
 12036                           plusw2	equ	0xFDB
 12037                           fsr2h	equ	0xFDA
 12038                           fsr2l	equ	0xFD9
 12039                           status	equ	0xFD8
 12040                           
 12041 ;; *************** function i2_ringbuf_pop *****************
 12042 ;; Defined at:
 12043 ;;		line 64 in file "../My_header\My_ringbuf.h"
 12044 ;; Parameters:    Size  Location     Type
 12045 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 12046 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
 12047 ;; Auto vars:     Size  Location     Type
 12048 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
 12049 ;; Return value:  Size  Location     Type
 12050 ;;                  1    wreg      unsigned char 
 12051 ;; Registers used:
 12052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12053 ;; Tracked objects:
 12054 ;;		On entry : 0/0
 12055 ;;		On exit  : 0/0
 12056 ;;		Unchanged: 0/0
 12057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12058 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12059 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12060 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12061 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12062 ;;Total ram usage:        7 bytes
 12063 ;; Hardware stack levels used:    1
 12064 ;; Hardware stack levels required when called:    1
 12065 ;; This function calls:
 12066 ;;		i2_ringbuf_num
 12067 ;; This function is called by:
 12068 ;;		_UART_ISR
 12069 ;; This function uses a non-reentrant model
 12070 ;;
 12071                           
 12072                           	psect	text54
 12073  012164                     __ptext54:
 12074                           	opt stack 0
 12075  012164                     i2_ringbuf_pop:
 12076                           	opt stack 18
 12077                           
 12078                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
 12079                           
 12080                           ;incstack = 0
 12081  012164  C009  F001         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 12082  012168  C00A  F002         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 12083  01216C  EC9D  F08F         	call	i2_ringbuf_num	;wreg free
 12084  012170  5001               	movf	?i2_ringbuf_num,w,c
 12085  012172  1002               	iorwf	?i2_ringbuf_num+1,w,c
 12086  012174  B4D8               	btfsc	status,2,c
 12087  012176  D04B               	goto	i2l3945
 12088                           
 12089                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
 12090  012178  EE20 F006          	lfsr	2,6
 12091  01217C  5009               	movf	i2ringbuf_pop@rb,w,c
 12092  01217E  26D9               	addwf	fsr2l,f,c
 12093  012180  500A               	movf	i2ringbuf_pop@rb+1,w,c
 12094  012182  22DA               	addwfc	fsr2h,f,c
 12095  012184  CFDE F00B          	movff	postinc2,??i2_ringbuf_pop
 12096  012188  CFDD F00C          	movff	postdec2,??i2_ringbuf_pop+1
 12097  01218C  C009  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 12098  012190  C00A  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 12099  012194  CFDE F00D          	movff	postinc2,??i2_ringbuf_pop+2
 12100  012198  CFDD F00E          	movff	postdec2,??i2_ringbuf_pop+3
 12101  01219C  500B               	movf	??i2_ringbuf_pop,w,c
 12102  01219E  240D               	addwf	??i2_ringbuf_pop+2,w,c
 12103  0121A0  6ED9               	movwf	fsr2l,c
 12104  0121A2  500C               	movf	??i2_ringbuf_pop+1,w,c
 12105  0121A4  200E               	addwfc	??i2_ringbuf_pop+3,w,c
 12106  0121A6  6EDA               	movwf	fsr2h,c
 12107  0121A8  50DF               	movf	indf2,w,c
 12108  0121AA  6E0F               	movwf	i2ringbuf_pop@ret,c
 12109                           
 12110                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
 12111  0121AC  EE20 F002          	lfsr	2,2
 12112  0121B0  5009               	movf	i2ringbuf_pop@rb,w,c
 12113  0121B2  26D9               	addwf	fsr2l,f,c
 12114  0121B4  500A               	movf	i2ringbuf_pop@rb+1,w,c
 12115  0121B6  22DA               	addwfc	fsr2h,f,c
 12116  0121B8  EE10 F006          	lfsr	1,6
 12117  0121BC  5009               	movf	i2ringbuf_pop@rb,w,c
 12118  0121BE  26E1               	addwf	fsr1l,f,c
 12119  0121C0  500A               	movf	i2ringbuf_pop@rb+1,w,c
 12120  0121C2  22E2               	addwfc	fsr1h,f,c
 12121  0121C4  CFE6 F00D          	movff	postinc1,??i2_ringbuf_pop+2
 12122  0121C8  CFE5 F00E          	movff	postdec1,??i2_ringbuf_pop+3
 12123  0121CC  0E01               	movlw	1
 12124  0121CE  260D               	addwf	??i2_ringbuf_pop+2,f,c
 12125  0121D0  0E00               	movlw	0
 12126  0121D2  220E               	addwfc	??i2_ringbuf_pop+3,f,c
 12127  0121D4  50DE               	movf	postinc2,w,c
 12128  0121D6  5C0D               	subwf	??i2_ringbuf_pop+2,w,c
 12129  0121D8  50DE               	movf	postinc2,w,c
 12130  0121DA  580E               	subwfb	??i2_ringbuf_pop+3,w,c
 12131  0121DC  B0D8               	btfsc	status,0,c
 12132  0121DE  D00A               	goto	i2l3937
 12133                           
 12134                           ;My_header\My_ringbuf.h: 68: rb->tail++;
 12135  0121E0  EE20 F006          	lfsr	2,6
 12136  0121E4  5009               	movf	i2ringbuf_pop@rb,w,c
 12137  0121E6  26D9               	addwf	fsr2l,f,c
 12138  0121E8  500A               	movf	i2ringbuf_pop@rb+1,w,c
 12139  0121EA  22DA               	addwfc	fsr2h,f,c
 12140  0121EC  2ADE               	incf	postinc2,f,c
 12141  0121EE  0E00               	movlw	0
 12142  0121F0  22DD               	addwfc	postdec2,f,c
 12143                           
 12144                           ;My_header\My_ringbuf.h: 69: } else {
 12145  0121F2  D00B               	goto	i2l3939
 12146  0121F4                     i2l3937:
 12147                           
 12148                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
 12149  0121F4  EE20 F006          	lfsr	2,6
 12150  0121F8  5009               	movf	i2ringbuf_pop@rb,w,c
 12151  0121FA  26D9               	addwf	fsr2l,f,c
 12152  0121FC  500A               	movf	i2ringbuf_pop@rb+1,w,c
 12153  0121FE  22DA               	addwfc	fsr2h,f,c
 12154  012200  0E00               	movlw	0
 12155  012202  6EDE               	movwf	postinc2,c
 12156  012204  0E00               	movlw	0
 12157  012206  6EDD               	movwf	postdec2,c
 12158  012208  D000               	goto	i2l3939
 12159  01220A                     i2l3939:
 12160                           
 12161                           ;My_header\My_ringbuf.h: 71: }
 12162                           ;My_header\My_ringbuf.h: 72: return ret;
 12163  01220A  500F               	movf	i2ringbuf_pop@ret,w,c
 12164                           
 12165                           ;My_header\My_ringbuf.h: 73: } else {
 12166  01220C  0012               	return	
 12167  01220E                     i2l3945:
 12168                           
 12169                           ;My_header\My_ringbuf.h: 74: return 0;
 12170  01220E  0E00               	movlw	0
 12171  012210  0012               	return	
 12172  012212  0012               	return		;funcret
 12173  012214                     __end_ofi2_ringbuf_pop:
 12174                           	opt stack 0
 12175                           pclatu	equ	0xFFB
 12176                           pclath	equ	0xFFA
 12177                           tblptru	equ	0xFF8
 12178                           tblptrh	equ	0xFF7
 12179                           tblptrl	equ	0xFF6
 12180                           tablat	equ	0xFF5
 12181                           prodh	equ	0xFF4
 12182                           prodl	equ	0xFF3
 12183                           intcon	equ	0xFF2
 12184                           intcon2	equ	0xFF1
 12185                           postinc0	equ	0xFEE
 12186                           fsr0h	equ	0xFEA
 12187                           fsr0l	equ	0xFE9
 12188                           wreg	equ	0xFE8
 12189                           indf1	equ	0xFE7
 12190                           postinc1	equ	0xFE6
 12191                           postdec1	equ	0xFE5
 12192                           fsr1h	equ	0xFE2
 12193                           fsr1l	equ	0xFE1
 12194                           indf2	equ	0xFDF
 12195                           postinc2	equ	0xFDE
 12196                           postdec2	equ	0xFDD
 12197                           plusw2	equ	0xFDB
 12198                           fsr2h	equ	0xFDA
 12199                           fsr2l	equ	0xFD9
 12200                           status	equ	0xFD8
 12201                           
 12202 ;; *************** function i2_ringbuf_num *****************
 12203 ;; Defined at:
 12204 ;;		line 31 in file "../My_header\My_ringbuf.h"
 12205 ;; Parameters:    Size  Location     Type
 12206 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 12207 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
 12208 ;; Auto vars:     Size  Location     Type
 12209 ;;		None
 12210 ;; Return value:  Size  Location     Type
 12211 ;;                  2    0[COMRAM] unsigned int 
 12212 ;; Registers used:
 12213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 12214 ;; Tracked objects:
 12215 ;;		On entry : 0/0
 12216 ;;		On exit  : 0/0
 12217 ;;		Unchanged: 0/0
 12218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12219 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12221 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12222 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12223 ;;Total ram usage:        8 bytes
 12224 ;; Hardware stack levels used:    1
 12225 ;; This function calls:
 12226 ;;		Nothing
 12227 ;; This function is called by:
 12228 ;;		_UART_ISR
 12229 ;;		i2_ringbuf_put
 12230 ;;		i2_ringbuf_pop
 12231 ;; This function uses a non-reentrant model
 12232 ;;
 12233                           
 12234                           	psect	text55
 12235  011F3A                     __ptext55:
 12236                           	opt stack 0
 12237  011F3A                     i2_ringbuf_num:
 12238                           	opt stack 18
 12239                           
 12240                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
 12241                           
 12242                           ;incstack = 0
 12243  011F3A  EE20 F006          	lfsr	2,6
 12244  011F3E  5001               	movf	i2ringbuf_num@rb,w,c
 12245  011F40  26D9               	addwf	fsr2l,f,c
 12246  011F42  5002               	movf	i2ringbuf_num@rb+1,w,c
 12247  011F44  22DA               	addwfc	fsr2h,f,c
 12248  011F46  EE10 F004          	lfsr	1,4
 12249  011F4A  5001               	movf	i2ringbuf_num@rb,w,c
 12250  011F4C  26E1               	addwf	fsr1l,f,c
 12251  011F4E  5002               	movf	i2ringbuf_num@rb+1,w,c
 12252  011F50  22E2               	addwfc	fsr1h,f,c
 12253  011F52  50DE               	movf	postinc2,w,c
 12254  011F54  5CE6               	subwf	postinc1,w,c
 12255  011F56  50DE               	movf	postinc2,w,c
 12256  011F58  58E6               	subwfb	postinc1,w,c
 12257  011F5A  A0D8               	btfss	status,0,c
 12258  011F5C  D01F               	goto	i2l3613
 12259                           
 12260                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
 12261  011F5E  EE20 F004          	lfsr	2,4
 12262  011F62  5001               	movf	i2ringbuf_num@rb,w,c
 12263  011F64  26D9               	addwf	fsr2l,f,c
 12264  011F66  5002               	movf	i2ringbuf_num@rb+1,w,c
 12265  011F68  22DA               	addwfc	fsr2h,f,c
 12266  011F6A  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 12267  011F6E  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 12268  011F72  EE20 F006          	lfsr	2,6
 12269  011F76  5001               	movf	i2ringbuf_num@rb,w,c
 12270  011F78  26D9               	addwf	fsr2l,f,c
 12271  011F7A  5002               	movf	i2ringbuf_num@rb+1,w,c
 12272  011F7C  22DA               	addwfc	fsr2h,f,c
 12273  011F7E  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 12274  011F82  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 12275  011F86  1E05               	comf	??i2_ringbuf_num+2,f,c
 12276  011F88  1E06               	comf	??i2_ringbuf_num+3,f,c
 12277  011F8A  4A05               	infsnz	??i2_ringbuf_num+2,f,c
 12278  011F8C  2A06               	incf	??i2_ringbuf_num+3,f,c
 12279  011F8E  5003               	movf	??i2_ringbuf_num,w,c
 12280  011F90  2405               	addwf	??i2_ringbuf_num+2,w,c
 12281  011F92  6E01               	movwf	?i2_ringbuf_num,c
 12282  011F94  5004               	movf	??i2_ringbuf_num+1,w,c
 12283  011F96  2006               	addwfc	??i2_ringbuf_num+3,w,c
 12284  011F98  6E02               	movwf	?i2_ringbuf_num+1,c
 12285                           
 12286                           ;My_header\My_ringbuf.h: 34: } else {
 12287  011F9A  0012               	return	
 12288  011F9C                     i2l3613:
 12289                           
 12290                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
 12291  011F9C  EE20 F004          	lfsr	2,4
 12292  011FA0  5001               	movf	i2ringbuf_num@rb,w,c
 12293  011FA2  26D9               	addwf	fsr2l,f,c
 12294  011FA4  5002               	movf	i2ringbuf_num@rb+1,w,c
 12295  011FA6  22DA               	addwfc	fsr2h,f,c
 12296  011FA8  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 12297  011FAC  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 12298  011FB0  EE20 F002          	lfsr	2,2
 12299  011FB4  5001               	movf	i2ringbuf_num@rb,w,c
 12300  011FB6  26D9               	addwf	fsr2l,f,c
 12301  011FB8  5002               	movf	i2ringbuf_num@rb+1,w,c
 12302  011FBA  22DA               	addwfc	fsr2h,f,c
 12303  011FBC  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 12304  011FC0  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 12305  011FC4  EE20 F006          	lfsr	2,6
 12306  011FC8  5001               	movf	i2ringbuf_num@rb,w,c
 12307  011FCA  26D9               	addwf	fsr2l,f,c
 12308  011FCC  5002               	movf	i2ringbuf_num@rb+1,w,c
 12309  011FCE  22DA               	addwfc	fsr2h,f,c
 12310  011FD0  CFDE F007          	movff	postinc2,??i2_ringbuf_num+4
 12311  011FD4  CFDD F008          	movff	postdec2,??i2_ringbuf_num+5
 12312  011FD8  1E07               	comf	??i2_ringbuf_num+4,f,c
 12313  011FDA  1E08               	comf	??i2_ringbuf_num+5,f,c
 12314  011FDC  4A07               	infsnz	??i2_ringbuf_num+4,f,c
 12315  011FDE  2A08               	incf	??i2_ringbuf_num+5,f,c
 12316  011FE0  5005               	movf	??i2_ringbuf_num+2,w,c
 12317  011FE2  2607               	addwf	??i2_ringbuf_num+4,f,c
 12318  011FE4  5006               	movf	??i2_ringbuf_num+3,w,c
 12319  011FE6  2208               	addwfc	??i2_ringbuf_num+5,f,c
 12320  011FE8  5003               	movf	??i2_ringbuf_num,w,c
 12321  011FEA  2407               	addwf	??i2_ringbuf_num+4,w,c
 12322  011FEC  6E01               	movwf	?i2_ringbuf_num,c
 12323  011FEE  5004               	movf	??i2_ringbuf_num+1,w,c
 12324  011FF0  2008               	addwfc	??i2_ringbuf_num+5,w,c
 12325  011FF2  6E02               	movwf	?i2_ringbuf_num+1,c
 12326  011FF4  0012               	return	
 12327  011FF6  0012               	return		;funcret
 12328  011FF8                     __end_ofi2_ringbuf_num:
 12329                           	opt stack 0
 12330                           pclatu	equ	0xFFB
 12331                           pclath	equ	0xFFA
 12332                           tblptru	equ	0xFF8
 12333                           tblptrh	equ	0xFF7
 12334                           tblptrl	equ	0xFF6
 12335                           tablat	equ	0xFF5
 12336                           prodh	equ	0xFF4
 12337                           prodl	equ	0xFF3
 12338                           intcon	equ	0xFF2
 12339                           intcon2	equ	0xFF1
 12340                           postinc0	equ	0xFEE
 12341                           fsr0h	equ	0xFEA
 12342                           fsr0l	equ	0xFE9
 12343                           wreg	equ	0xFE8
 12344                           indf1	equ	0xFE7
 12345                           postinc1	equ	0xFE6
 12346                           postdec1	equ	0xFE5
 12347                           fsr1h	equ	0xFE2
 12348                           fsr1l	equ	0xFE1
 12349                           indf2	equ	0xFDF
 12350                           postinc2	equ	0xFDE
 12351                           postdec2	equ	0xFDD
 12352                           plusw2	equ	0xFDB
 12353                           fsr2h	equ	0xFDA
 12354                           fsr2l	equ	0xFD9
 12355                           status	equ	0xFD8
 12356                           pclatu	equ	0xFFB
 12357                           pclath	equ	0xFFA
 12358                           tblptru	equ	0xFF8
 12359                           tblptrh	equ	0xFF7
 12360                           tblptrl	equ	0xFF6
 12361                           tablat	equ	0xFF5
 12362                           prodh	equ	0xFF4
 12363                           prodl	equ	0xFF3
 12364                           intcon	equ	0xFF2
 12365                           intcon2	equ	0xFF1
 12366                           postinc0	equ	0xFEE
 12367                           fsr0h	equ	0xFEA
 12368                           fsr0l	equ	0xFE9
 12369                           wreg	equ	0xFE8
 12370                           indf1	equ	0xFE7
 12371                           postinc1	equ	0xFE6
 12372                           postdec1	equ	0xFE5
 12373                           fsr1h	equ	0xFE2
 12374                           fsr1l	equ	0xFE1
 12375                           indf2	equ	0xFDF
 12376                           postinc2	equ	0xFDE
 12377                           postdec2	equ	0xFDD
 12378                           plusw2	equ	0xFDB
 12379                           fsr2h	equ	0xFDA
 12380                           fsr2l	equ	0xFD9
 12381                           status	equ	0xFD8
 12382                           
 12383                           	psect	rparam
 12384  0000                     pclatu	equ	0xFFB
 12385                           pclath	equ	0xFFA
 12386                           tblptru	equ	0xFF8
 12387                           tblptrh	equ	0xFF7
 12388                           tblptrl	equ	0xFF6
 12389                           tablat	equ	0xFF5
 12390                           prodh	equ	0xFF4
 12391                           prodl	equ	0xFF3
 12392                           intcon	equ	0xFF2
 12393                           intcon2	equ	0xFF1
 12394                           postinc0	equ	0xFEE
 12395                           fsr0h	equ	0xFEA
 12396                           fsr0l	equ	0xFE9
 12397                           wreg	equ	0xFE8
 12398                           indf1	equ	0xFE7
 12399                           postinc1	equ	0xFE6
 12400                           postdec1	equ	0xFE5
 12401                           fsr1h	equ	0xFE2
 12402                           fsr1l	equ	0xFE1
 12403                           indf2	equ	0xFDF
 12404                           postinc2	equ	0xFDE
 12405                           postdec2	equ	0xFDD
 12406                           plusw2	equ	0xFDB
 12407                           fsr2h	equ	0xFDA
 12408                           fsr2l	equ	0xFD9
 12409                           status	equ	0xFD8


Data Sizes:
    Strings     497
    Constant    38
    Data        1
    BSS         1399
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      65
    BANK0           160     97     160
    BANK1           256    129     189
    BANK2           256      0     250
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    command_operation@op3	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op3(BANK1[20]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_41(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_4(CODE[37]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(BANK0[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    command_operation@op2	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK1[20]), 

    command_operation@op1	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op1(BANK1[20]), 

    command_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(COMRAM[8]), 

    command_operation@op0	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op0(BANK0[20]), 

    command_time@op2	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK1[20]), 

    command_time@op1	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op1(BANK1[20]), 

    command_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(COMRAM[8]), 

    command_time@op0	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op0(BANK0[20]), 

    command_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(COMRAM[8]), 

    command_at_hand@hand	PTR unsigned char  size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(COMRAM[8]), 

    my_terminal_loop@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(COMRAM[8]), 

    my_terminal_loop@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK0[8]), 

    F10022.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    my_strcmp@str2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[6]), STR_39(CODE[2]), STR_38(CODE[2]), STR_37(CODE[2]), 
		 -> STR_36(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[4]), STR_30(CODE[4]), STR_29(CODE[4]), 
		 -> STR_28(CODE[4]), STR_27(CODE[5]), STR_26(CODE[4]), STR_25(CODE[9]), 
		 -> STR_23(CODE[2]), STR_22(CODE[5]), STR_21(CODE[7]), STR_20(CODE[2]), 
		 -> STR_19(CODE[7]), STR_18(CODE[2]), STR_17(CODE[5]), STR_16(CODE[2]), 
		 -> STR_15(CODE[4]), STR_14(CODE[2]), STR_13(CODE[6]), STR_12(CODE[2]), 
		 -> STR_11(CODE[5]), STR_10(CODE[2]), STR_9(CODE[12]), STR_8(CODE[3]), 
		 -> STR_7(CODE[2]), STR_6(CODE[11]), 

    my_strcmp@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op1(BANK1[20]), my_terminal_loop@op0(BANK0[20]), 

    my_atoi@str	PTR const unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK1[20]), 

    RTCC_from_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_RTCC@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    caltime_to_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> sw_B(COMRAM[4]), sw_G(COMRAM[4]), sw_R(COMRAM[4]), 

    tx_sends@asciicode	PTR const unsigned char  size(2) Largest target is 315
		 -> STR_24(CODE[315]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), rx_buf(BANK0[8]), tx_buf(COMRAM[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_5(CODE[8]), print_time@str(BANK0[30]), STR_3(CODE[3]), print_time_dec@str(COMRAM[10]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(COMRAM[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(COMRAM[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), rx_buf(BANK0[8]), tx_buf(COMRAM[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), rx_buf(BANK0[8]), tx_buf(COMRAM[8]), 

    S790ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), rx_buf(BANK0[8]), tx_buf(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_ringbuf_num
    _my_terminal_loop->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _ringbuf_backspace->_ringbuf_num
    _command_operation->_my_atoi
    _command_time->_month_length
    _command_time->_my_atoi
    _my_atoi->___wmul
    _command_at_hand->_my_atoi
    _ringbuf_put->_ringbuf_num
    _main_init->_ringbuf_init
    _light_loop->___llmod
    _PWM_set->_my_atoi
    ___lwdiv->_my_atoi
    _caltime_to_epoch->_month_length
    _RTCC_to_caltime->_x_to_d
    _epoch_to_caltime->_month_length
    _month_length->___awmod
    ___lmul->_month_length
    _d_to_x->___awdiv

Critical Paths under _ISR in COMRAM

    _ISR->_UART_ISR
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _my_terminal_loop->_command_operation
    _ringbuf_put_num->___lwmod
    _command_operation->_command_time
    _tx_sends->_ringbuf_put
    _command_time->_command_at_hand
    _command_at_hand->_print_time
    _print_time->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _ringbuf_put_str->_ringbuf_put
    _RTCC_from_caltime->_epoch_to_caltime
    _light_loop->_RTCC_from_RTCC
    _PWM_set->___lwdiv
    ___lwdiv->_my_atoi
    _RTCC_loop->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lldiv
    ___lmul->_month_length
    ___lldiv->___lmul
    _caltime_to_RTCC->_d_to_x

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_my_terminal_loop
    _my_terminal_loop->_command_operation
    _command_operation->_command_time

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  173700
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_loop
                         _light_loop
                          _main_init
                   _my_terminal_loop
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _my_terminal_loop                                   111   107      4  129805
                                             18 BANK1    111   107      4
                  _command_operation
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5    7887
                                             18 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    1854
                                              0 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     133
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1273
                                              0 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _command_operation                                   26    16     10  106861
                                             93 BANK0      4     4      0
                                              8 BANK1     10     0     10
                            _PWM_set
                            ___lwdiv
                             ___wmul
                       _command_time
                            _my_atoi
                          _my_strcmp
                           _tx_sends
 ---------------------------------------------------------------------------------
 (3) _tx_sends                                             2     0      2    3888
                                              7 BANK0      2     0      2
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _command_time                                         9     1      8   78242
                                             92 BANK0      1     1      0
                                              0 BANK1      8     0      8
                    _command_at_hand
                       _month_length
                            _my_atoi
                          _my_strcmp
                         _print_time
 ---------------------------------------------------------------------------------
 (3) _my_strcmp                                            5     1      4    7326
                                             30 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _my_atoi                                              8     6      2    3550
                                             36 COMRAM     2     0      2
                                              0 BANK0      6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _command_at_hand                                      7     0      7   43451
                                             85 BANK0      7     0      7
                  _RTCC_from_caltime
                            _my_atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (4) _print_time                                          32    30      2   20387
                                             53 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             39    21     18    7938
                                             18 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              3     3      0      99
                                             30 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    1064
                                             13 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_str                                      4     0      4    5063
                                              7 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _ringbuf_put                                          7     4      3    3719
                                              0 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _ringbuf_num                                          8     6      2    1014
                                             30 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    4     0      4   14633
                                             53 BANK0      4     0      4
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    1198
                           _ADC_init
                           _OSC_init
                           _PWM_init
                          _RTCC_init
                          _UART_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      22
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     155
                                             30 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      44
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6     933
                                             30 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_init                                             1     1      0      22
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      22
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _light_loop                                          11    11      0   17944
                                             35 BANK0     11    11      0
                            _PWM_set
                     _RTCC_from_RTCC
                            ___lldiv
                            ___llmod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     648
                                             30 COMRAM     8     0      8
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _PWM_set                                              5     3      2    6600
                                             13 BANK0      5     3      2
                            ___lwdiv
                             ___wmul
                            _my_atoi (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2312
                                             30 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    2529
                                              6 BANK0      7     3      4
                             ___wmul (ARG)
                            _my_atoi (ARG)
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            0     0      0    7025
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_RTCC                                       4     0      4    7025
                                             31 BANK0      4     0      4
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (6) _caltime_to_epoch                                    15    11      4    5298
                                             16 BANK0     15    11      4
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (6) _RTCC_to_caltime                                      3     1      2     386
                                             32 COMRAM     3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (7) _x_to_d                                               2     2      0      62
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_from_epoch                                      4     0      4    9689
                                             53 BANK0      4     0      4
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    16    12      4    7832
                                             37 BANK0     16    12      4
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _month_length                                         6     5      1    2179
                                             36 COMRAM     2     1      1
                                              0 BANK0      4     4      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     849
                                             30 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    4262
                                             29 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8    2168
                                              4 BANK0     12     4      8
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8    1073
                                             16 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    1140
                                              1 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0     715
                                              0 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     653
                                             30 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                14    14      0    2520
                                             16 COMRAM    14    14      0
                           _UART_ISR
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (11) _button_timer_interrupt                              5     2      3    1348
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (11) _UART_ISR                                            1     1      0    1172
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_put                                       7     4      3     482
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_pop                                       7     5      2     435
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (13) i2_ringbuf_num                                       8     6      2     232
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
           ___lmul (ARG)
             _month_length (ARG)
               ___awmod
         ___lmul
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_loop
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _light_loop
     _PWM_set
       ___lwdiv
         ___wmul (ARG)
         _my_atoi (ARG)
           ___wmul
       ___wmul
       _my_atoi (ARG)
         ___wmul
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     ___lldiv
       ___lmul (ARG)
         _month_length (ARG)
           ___awmod
     ___llmod
     ___lmul
       _month_length (ARG)
         ___awmod
   _main_init
     _ADC_init
     _OSC_init
     _PWM_init
     _RTCC_init
     _UART_init
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _my_terminal_loop
     _command_operation
       _PWM_set
         ___lwdiv
           ___wmul (ARG)
           _my_atoi (ARG)
             ___wmul
         ___wmul
         _my_atoi (ARG)
           ___wmul
       ___lwdiv
         ___wmul (ARG)
         _my_atoi (ARG)
           ___wmul
       ___wmul
       _command_time
         _command_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                   ___lmul (ARG)
                     _month_length (ARG)
                       ___awmod
                 ___lmul
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _my_atoi (ARG)
             ___wmul
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lwdiv
                 ___wmul (ARG)
                 _my_atoi (ARG)
                   ___wmul
               ___lwmod
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                   _my_atoi (ARG)
                     ___wmul
               ___wmul
               _isdigit
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num
         _month_length
           ___awmod
         _my_atoi
           ___wmul
         _my_strcmp
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lwdiv
               ___wmul (ARG)
               _my_atoi (ARG)
                 ___wmul
             ___lwmod
               ___lwdiv (ARG)
                 ___wmul (ARG)
                 _my_atoi (ARG)
                   ___wmul
             ___wmul
             _isdigit
       _my_atoi
         ___wmul
       _my_strcmp
       _tx_sends
         _ringbuf_put
           _ringbuf_num
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         ___wmul (ARG)
         _my_atoi (ARG)
           ___wmul
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
           _my_atoi (ARG)
             ___wmul
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
   _ringbuf_num

 _ISR (ROOT)
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _button_timer_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0     3E8      35       26.6%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      FA      10       97.7%
BITBANK1           100      0       0       7        0.0%
BANK1              100     81      BD       8       73.8%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     61      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     26      41       1       68.4%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     298       6        0.0%
DATA                 0      0     680       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Oct 06 17:32:44 2015

                  ?_command_time 0100                  _ringbuf_put_num 2654  
                _ringbuf_put_str 2A2C                    my_strcmp@str1 001F  
                  my_strcmp@str2 0021                               _d1 0027  
                   ___awdiv@sign 0024                               _ms 00C1  
            ___wmul@multiplicand 0021                ??_RTCC_from_epoch 0027  
                   __CFG_CP0$OFF 000000                              l141 2CAA  
                            l146 2C3E                              l352 1B52  
                            l184 2656                              l346 2216  
                            l365 16FE                              l453 2B8C  
                            l643 1568                              l590 20C8  
                            l648 15C0                              _PR2 000FCB  
                            _ISR 0008                    ?_get_quot_rem 007D  
             caltime_to_epoch@ep 0072               caltime_to_epoch@ct 0070  
              _RTCC_from_caltime 2C62                     ___awmod@sign 0024  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAD               ?_RTCC_from_caltime 0095  
                           ?_ISR 0001              command_operation@tx 0108  
               ?_command_at_hand 00B5                             l1203 1E6A  
                           l1213 293E                             l1266 27D4  
                           l1276 2A22                             l5011 22CC  
                           l5021 2348                             l5031 2444  
                           l5103 0E3E                             l5113 189A  
                           l5025 2400                             l5033 244E  
                           l5105 0E76                             l5201 04DA  
                           l5123 18F4                             l5131 1942  
                           l5019 2342                             l5203 04EC  
                           l5141 1970                             l5133 195C  
                           l5117 18AE                             l5053 29A4  
                           l5037 2476                             l5109 0EAA  
                           l5061 2C02                             l5221 05A6  
                           l5127 1908                             l5151 1988  
                           l5215 056A                             l4601 257A  
                           l4521 2810                             l4513 27F4  
                           l5145 197C                             l5137 1966  
                           l3625 2CC0                             l5073 0C4C  
                           l5057 2BD8                             l5241 069E  
                           l5225 05DA                             l5209 052E  
                           l5161 268A                             l4611 25A0  
                           l4603 2582                             l4523 281A  
                           l5083 0CEC                             l5067 0C0A  
                           l5219 059E                             l4525 2822  
                           l4533 2844                             l4517 2802  
                           l3637 2C42                             l5093 0D9E  
                           l5085 0D24                             l5077 0C80  
                           l5069 0C18                             l5261 078A  
                           l5253 072E                             l5237 066A  
                           l5229 060E                             l5157 2666  
                           l4615 25AC                             l4631 1DF6  
                           l4711 2DA6                             l5079 0CB8  
                           l5167 26CC                             l5503 0B7E  
                           l5511 0BB4                             l4641 1E56  
                           l4633 1E00                             l4537 2854  
                           l4529 2838                             l5097 0DD2  
                           l5089 0D58                             l5273 081A  
                           l5265 07BE                             l5249 06FA  
                           l5177 1CCA                             l5185 1CE8  
                           l4619 25BC                             l4571 2874  
                           l4731 2792                             l5291 28FE  
                           l3755 2CE2                             l5099 0E0A  
                           l5195 2608                             l5179 1CE2  
                           l5451 08D2                             l4629 1DE4  
                           l4565 1D64                             l5293 2906  
                           l5533 1546                             l4549 1EDE  
                           l4653 1B36                             l4575 289C  
                           l4831 1776                             l4727 277A  
                           l5551 1590                             l5527 14C4  
                           l4751 29EC                             l4911 020C  
                           l4903 01CA                             l5471 09F2  
                           l5463 099E                             l5455 094A  
                           l5447 08AC                             l5703 23F2  
                           l4593 255A                             l4673 0EFE  
                           l4729 2788                             l5297 292C  
                           l5289 28EE                             l5537 1550  
                           l4761 2A2E                             l4905 01E4  
                           l5481 0A4C                             l5473 09F8  
                           l5465 09A4                             l5457 0950  
                           l4587 2548                             l4835 1780  
                           l4691 0F8E                             l4675 0F04  
                           l4739 27C4                             l5571 15E2  
                           l5555 15A0                             l4755 2A12  
                           l4747 29D4                             l4915 0228  
                           l4829 1770                             l4685 0F68  
                           l5573 15E8                             l5549 158A  
                           l4765 2A68                             l4749 29E2  
                           l4941 02DA                             l4933 02A4  
                           l4917 025E                             l4861 003E  
                           l4853 000E                             l5493 0B24  
                           l4599 2570                             l4695 0FF4  
                           l4679 0F0E                             l4687 0F6E  
                           l5559 15AA                             l4951 0336  
                           l4927 0290                             l4871 008A  
                           l5495 0B2C                             l5487 0AD0  
                           l5479 0A46               __CFG_WPFP$PAGE_127 000000  
                           l5577 1602                             l4961 036A  
                           l4953 0342                             l4937 02D4  
                           l4929 0296                             l4865 004C  
                           l5489 0AFA                             l4971 03AC  
                           l4963 0376                             l4947 02FE  
                           l4891 0156                             l4867 0066  
                           l4859 002C                             l5499 0B4A  
                           l5693 23B8                             l4991 0462  
                           l4983 03F8                             l4887 0142  
                           l4879 010E                             l4985 03FE  
                           l4977 03D6                             l4969 03A0  
                           l4897 01AA                             l4889 014E  
                           l4993 0472                             l4899 01B6  
                           l4995 0496                             STR_1 FFCA  
                           STR_2 FFCA                             STR_3 FFE6  
                           STR_4 FF48                             STR_5 FF8D  
                           STR_6 FF79                             STR_7 FFEA  
                           STR_8 FFE9                             STR_9 FF6D  
           command_at_hand@value 00BB                             u5210 2A58  
                           u5220 2A8A                             u3445 2E20  
                           u3446 2E22                             u5217 2A4E  
                           u5227 2A80                             u6410 1476  
                           u4910 1D56                             u4920 1D58  
                           u4930 1DAC                             u4940 1DAE  
                           u4908 1D44                             u4870 1D16  
                           u4880 1D18                             u4890 1D40  
            ??_RTCC_from_caltime 0027                             _main 2360  
       button_timer_interrupt@bt 0001                             _sw_B 0036  
                           _sw_G 003A                             _sw_R 003E  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
         __CFG_DSWDTOSC$T1OSCREF 000000                             pclat 000FFA  
                           prodh 000FF4                             prodl 000FF3  
                __end_of_PWM_set 19A8                             start 00E2  
               __end_of_ADC_init 2E30                    __CFG_IESO$OFF 000000  
                   ___param_bank 000010                   ??_command_time 0027  
          __end_ofi2_ringbuf_pop 2214            __end_ofi2_ringbuf_num 1FF8  
          __end_ofi2_ringbuf_put 20B0                    ADC_init@p_ref 001F  
                          ??_ISR 0011                     print_time@tx 0095  
           command_operation@op0 010A             command_operation@op1 010C  
           command_operation@op2 010E             command_operation@op3 0110  
              ??_RTCC_to_caltime 0023                    __CFG_PLLDIV$2 000000  
                   _BAUDCON1bits 000F7E        __end_of_RTCC_from_caltime 2C98  
                          ?_main 0001                   ??_get_quot_rem 0027  
                __end_of___awdiv 25C8                            _ADRES 000FC3  
                          STR_10 FFE4                            STR_11 FFC0  
                          STR_12 FFD4                            STR_20 FFFA  
                          STR_13 FFAA                            STR_21 FF9C  
                          STR_14 FFA1                            STR_30 FFDA  
                          STR_22 FFBB                            STR_23 FFEC  
                          STR_15 FFE2                            STR_31 FFD2  
                          STR_16 FFAE                            STR_32 FFB4  
                          STR_40 FFB0                            STR_24 FE0D  
                          STR_33 FFF2                            STR_17 FFC5  
                          STR_41 FF95                            STR_25 FF84  
                          STR_18 FFDC                            STR_34 FFF8  
                          STR_26 FFDE                            STR_35 FFF0  
                          STR_27 FFB6                            STR_19 FFA3  
                          STR_36 FFF6                            STR_28 FFD6  
                __end_of___awmod 2860                            STR_37 FFEE  
                          STR_29 FFCE                            STR_38 FFFC  
                          STR_39 FFF4                  __end_of___lldiv 1E7C  
                ___awdiv@divisor 0021                  __end_of___llmod 2950  
                          _LATB2 007C52                  __end_of___lwdiv 27DE  
                __end_of___lwmod 2A2C                            i2l221 2B6A  
                          i2l222 2B66                            i2l290 1222  
                          i2l291 1242                            i2l292 1262  
                          i2l293 1282                            i2l286 119A  
                          i2l287 11BE                            i2l288 11E0  
                          i2l289 1202                            i2l587 00A8  
                ___awdiv@counter 0023                            _TMR1H 000FCF  
                          _RPOR3 000EC3                            _RPOR4 000EC4  
                          _RPOR5 000EC5                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
            ___lmul@multiplicand 0068                   __CFG_FCMEN$OFF 000000  
               __end_of_UART_ISR 2B8A             caltime_to_epoch@year 0078  
             __size_of_UART_init 0020                  __end_of_dpowers FDF1  
                          _colon 00C8                 __end_of_OSC_init 2E58  
                __end_of_isdigit 2DB0               __size_of_RTCC_init 0030  
             __size_of_RTCC_loop 004C                 ringbuf_delete@rb 001F  
                __end_of_my_atoi 2360                            tablat 000FF5  
                          plusw2 000FDB                 __end_of_PWM_init 2164  
     __size_of_ringbuf_backspace 008C                            status 000FD8  
                __end_of_sprintf 04A6                ?_my_terminal_loop 0112  
              month_length@month 0025          __end_of_ringbuf_put_num 26DA  
        __end_of_ringbuf_put_str 2A92               ??_my_terminal_loop 0116  
                __initialization 2A92                     __end_of_main 23FE  
            ringbuf_init@bufsize 0023                 RTCC_from_RTCC@ep 0081  
               RTCC_from_RTCC@ct 007F              my_terminal_loop@op0 00CE  
            my_terminal_loop@op1 0181              my_terminal_loop@op2 0195  
            my_terminal_loop@op3 01A9              my_terminal_loop@buf 0118  
                  print_time@str 0097                           ??_main 0027  
                  __activetblptr 000003           my_terminal_loop@i_2284 017E  
               ___llmod@dividend 001F                           _CCPR1L 000FBB  
                         _CCPR2L 000FB5                           _CCPR3L 000F16  
                         _CCPR4L 000F13                           _EECON2 000FA7  
                         _ANCON0 000F48                           _ANCON1 000F49  
               ___awdiv@dividend 001F                        ??_PWM_set 006F  
                         i2l4001 1312                           i2l4013 1382  
                         i2l4005 1336                           i2l4021 13CE  
                         i2l4017 13A8                           i2l4009 135C  
                 __CFG_WDTEN$OFF 000000                           i2l3613 1F9C  
                         i2l4473 0054                           i2l3927 2098  
                         i2l3937 21F4                           i2l3945 220E  
                         i2l3939 220A                           i2l3993 12CA  
                         i2l3997 12EE                           i2l3989 12A6  
                         _RCREG1 000FAF                           _RTCCAL 000F3E  
                         _SPBRG1 000FB0                   __CFG_WPCFG$OFF 000000  
                         _TXREG1 000FAE                  i2ringbuf_pop@rb 0009  
                i2ringbuf_num@rb 0001                  i2ringbuf_put@rb 0009  
                 __CFG_WPDIS$OFF 000000               epoch_to_caltime@ep 0087  
             epoch_to_caltime@ct 0085                _command_time$3200 00BC  
                 __CFG_XINST$OFF 000000                ?_epoch_to_caltime 0085  
               ringbuf_put_num@i 0077                     _CCPTMRS0bits 000F52  
                   _CCPTMRS1bits 000F51            caltime_to_epoch@epoch 007A  
                   ?_ringbuf_pop 0060                     ?_ringbuf_num 001F  
                   ?_ringbuf_put 0060            caltime_to_epoch@month 007E  
                         ___lmul 2860                  _caltime_to_RTCC 1B50  
                    light_loop@i 008D                      light_loop@n 00FE  
                         ___wmul 2CFA               ??_epoch_to_caltime 0089  
              __end_of_UART_init 2E14                        ??___awdiv 0023  
                      ??___awmod 0023                           _d_to_x 2D48  
                      ??___lldiv 0027             ringbuf_put_num@value 0074  
                   ?_timer0_init 0001                        ??___llmod 0027  
              __end_of_RTCC_init 2CFA                     ?_timer1_init 001F  
                      ??___lwdiv 0027                __end_of_RTCC_loop 2BD6  
                      ??___lwmod 0027                     ?_timer3_init 0001  
                         clear_0 2A9A                           clear_1 2AAC  
                         clear_2 2AB8                           clear_3 2AC4  
                         clear_4 2AD0                  __CFG_CLKOEC$OFF 000000  
               ___awdiv@quotient 0025                  ___awmod@divisor 0021  
                ___awmod@counter 0023                           _x_to_d 2E30  
                         _rx_buf 00E2       __size_of_RTCC_from_caltime 0036  
              _command_operation 04A6                           _tx_buf 002E  
      __size_of_caltime_to_epoch 028C                        ??_isdigit 001F  
             ?_command_operation 0108                     __mediumconst FDE6  
                         tblptrh 000FF7                           tblptrl 000FF6  
                      ??_my_atoi 0060                           tblptru 000FF8  
                      ?_ADC_init 0001                        ??_sprintf 0084  
           __end_of_command_time 0EE4                 __end_of_tx_sends 2C1C  
            ??_command_operation 0027     my_terminal_loop@command_init 00CD  
           __CFG_LS48MHZ$SYS48X8 000000                       __accesstop 0060  
        __end_of__initialization 2AE8             __end_of_get_quot_rem 1A7E  
                  ___rparam_used 000001                  _RTCC_from_epoch 2DD2  
             command_at_hand@max 00BA               command_at_hand@min 00B9  
               ?_ringbuf_put_num 0072                 ?_ringbuf_put_str 0067  
           __CFG_WPEND$PAGE_WPFP 000000                   __pcstackCOMRAM 0001  
                   __pidataBANK0 2E58                        ?_UART_ISR 0001  
                light_loop@_2506 00FD        __end_of_command_operation 087E  
                      ?_OSC_init 0001                  __CFG_DSWDTPS$G2 000000  
                      ?_PWM_init 0001                  light_loop@value 0087  
        __size_of_ringbuf_delete 0022                       ??_ADC_init 001F  
     caltime_to_epoch@month_2079 0079                     sprintf@width 0093  
             __size_of_main_init 0082                       __pbssBANK0 00C1  
                     __pbssBANK1 0181                       __pbssBANK2 0200  
        __end_of_caltime_to_RTCC 1C22                  _RTCC_to_caltime 2214  
          __end_of_weekday_3char FE0D                          ?___lmul 0064  
                     ??_UART_ISR 0010                          ?___wmul 001F  
                        ?_d_to_x 0001                   command_time@tx 0100  
                     ??_OSC_init 001F                   ___lmul@product 006C  
                        ?_x_to_d 0001                       ??_PWM_init 001F  
             __CFG_OSC$INTOSCPLL 000000               __size_of_my_strcmp 009C  
        my_terminal_loop@command 00EA                  __CFG_WDTPS$1024 000000  
                        _SPBRGH1 000F7F                          _RTCVALH 000F3B  
                        _RTCVALL 000F3A          __end_of_RTCC_from_epoch 2DF4  
           timer1_init@prescaler 0021                          _PWM_set 1808  
               i2ringbuf_pop@ret 000F                     PWM_set@color 0071  
               __CFG_CFGPLLEN$ON 000000         ??_button_timer_interrupt 0004  
                   PWM_set@value 006D                    ?_month_length 0025  
            epoch_to_caltime@day 008D                RTCC_from_epoch@ep 0097  
              RTCC_from_epoch@ct 0095              epoch_to_caltime@num 0091  
       __size_of_command_at_hand 0070                          __Hparam 0000  
                        __Lparam 0000                ringbuf_put_num@rb 0072  
              ringbuf_put_str@rb 0067                    ?_ringbuf_init 001F  
                        ___awdiv 2532                  __size_of___lmul 007A  
                        ___awmod 27DE                          ___lldiv 1DB6  
                __size_of___wmul 0028                          ___llmod 28DA  
          ringbuf_put_num@digits 0076                       _light_mode 00CA  
                        ___lwdiv 275C                       _light_loop 13F6  
                        ___lwmod 29C0                  __size_of_d_to_x 0024  
     __size_of_command_operation 03D8             __size_of_ringbuf_pop 00CC  
           __size_of_ringbuf_num 00BE             __size_of_ringbuf_put 00D2  
                __CFG_STVREN$OFF 000000                __end_of_main_init 275C  
    epoch_to_caltime@month_cache 00FF                          __pcinit 2A92  
                      ?_tx_sends 0067                          __ramtop 0F00  
      __size_of_my_terminal_loop 0358             __size_of_timer0_init 0032  
                        _halfsec 00C9             __size_of_timer1_init 0046  
                        __ptext0 2360                          __ptext1 087E  
                        __ptext2 2654                          __ptext3 1C22  
                        __ptext4 2D6C                          __ptext5 25C8  
                        __ptext6 04A6                          __ptext7 2BD6  
                        __ptext8 0BD6                          __ptext9 23FE  
           __size_of_timer3_init 0026                  __size_of_x_to_d 001A  
                      _T0CONbits 000FD5                 _time_change_flag 00CB  
               _caltime_to_epoch 0EE4                     __size_of_ISR 00DA  
                      _T1CONbits 000FCD                          _dpowers FDE7  
        __size_of_RTCC_from_RTCC 0022             light_loop@value_2507 0088  
                      _T2CONbits 000FCA            __size_of_command_time 030E  
                        _isdigit 2D8E                        _T3CONbits 000F79  
               ___awmod@dividend 001F                        _T5CONbits 000F22  
                        _my_atoi 22C0                          _sprintf 0000  
        __end_of_RTCC_to_caltime 22C0            __size_of_get_quot_rem 00D6  
           end_of_initialization 2AE8           __size_ofi2_ringbuf_pop 00B0  
         __size_ofi2_ringbuf_num 00BE           __size_ofi2_ringbuf_put 00B8  
                   _CTMUCONHbits 000FB3                     _CTMUCONLbits 000FB2  
                 ??_month_length 0060                 ?_caltime_to_RTCC 0061  
                ___lldiv@divisor 0074             timer3_init@prescaler 0020  
              __end_of_my_strcmp 249A                  ___lldiv@counter 007C  
                 ??_ringbuf_init 0025                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                   _command_time 0BD6                       ??_tx_sends 0027  
                      _PORTAbits 000F80                        _UART_init 2DF4  
               __CFG_DSBOREN$OFF 000000                        _RTCC_init 2CCA  
                      _RTCC_loop 2B8A        epoch_to_caltime@day_cache 00C5  
         i2ringbuf_put@asciicode 000B                     _get_quot_rem 19A8  
                     _print_time 249A                   _ringbuf_delete 2D6C  
      __size_of_epoch_to_caltime 01F0                 __CFG_CPUDIV$OSC1 000000  
            RTCC_from_caltime@ep 0097              RTCC_from_caltime@ct 0095  
              __size_of_ADC_init 001C                 ?_RTCC_from_epoch 0095  
__size_of_button_timer_interrupt 0286          timer1_init@clock_select 001F  
            command_at_hand@hand 00B7                      _CCP1CONbits 000FBA  
                    _CCP2CONbits 000FB4                 __CFG_IOL1WAY$OFF 000000  
                    _CCP3CONbits 000F15                      _CCP4CONbits 000F12  
            __CFG_MSSP7B_EN$MSK7 000000                   ringbuf_init@rb 001F  
                 ringbuf_pop@ret 0066                    i2_ringbuf_pop 2164  
                  i2_ringbuf_num 1F3A                      ?_light_loop 0001  
                  i2_ringbuf_put 1FF8                   __end_of___lmul 28DA  
              ??_command_at_hand 0027                   __end_of___wmul 2D22  
                 __end_of_d_to_x 2D6C                __size_of_UART_ISR 004E  
         __end_of_ringbuf_delete 2D8E                       ?_UART_init 0001  
                     ?_RTCC_init 0001                __size_of_OSC_init 000E  
                     ?_RTCC_loop 0001                 __CFG_DSWDTEN$OFF 000000  
                 __end_of_x_to_d 2E4A            epoch_to_caltime@month 0090  
            start_initialization 2A92                 month_length@year 0026  
                    __end_of_ISR 00E2                __size_of_PWM_init 00B4  
                  UART_ISR@ascii 0010               my_terminal_loop@rx 0114  
             my_terminal_loop@tx 0112                 ?_RTCC_to_caltime 0021  
                ___llmod@divisor 0023            my_terminal_loop@ascii 017F  
                ___llmod@counter 0060              ringbuf_put_num@temp 0078  
                       ??___lmul 0027                   ?i2_ringbuf_pop 0009  
                 ?i2_ringbuf_num 0001                   ?i2_ringbuf_put 0009  
                       ??___wmul 0023                         ??_d_to_x 0027  
              __CFG_ADCSEL$BIT12 000000                      __pdataBANK0 00FF  
       __size_of_ringbuf_put_num 0086         __size_of_ringbuf_put_str 0066  
         _button_timer_interrupt 1170                 _my_terminal_loop 087E  
                       ??_x_to_d 001F                  ?_ringbuf_delete 001F  
           __end_of_month_length 1DB6                   _RTCC_from_RTCC 2DB0  
                    ?_print_time 0095                      __pbssBIGRAM 02FA  
                    __pbssCOMRAM 0027                command_at_hand@tx 00B5  
            RTCC_to_caltime@dumy 0023                    __pcstackBANK0 0060  
                  __pcstackBANK1 0100                      _caltime_now 00F2  
                   _isdigit$2847 0020             __end_of_ringbuf_init 2B3C  
                       ?_PWM_set 006D                   light_loop@temp 0089  
            __size_of_light_loop 0222                      sprintf@flag 0091  
                    sprintf@prec 0088         __end_of_caltime_to_epoch 1170  
                millis_timer@cnt 002A                 ___lwdiv@dividend 0066  
                      _edit_flag 002D                        __pintcode 0008  
                  __pmediumconst FDE6                         ?___awdiv 001F  
                       ?___awmod 001F                         ?___lldiv 0070  
                       ?___llmod 001F                         ?___lwdiv 0066  
                       ?___lwmod 006D           __end_of_RTCC_from_RTCC 2DD2  
                    ??_UART_init 001F                      ??_RTCC_init 001F  
                    ??_RTCC_loop 0027                  command_time@op0 0102  
                command_time@op1 0104                  command_time@op2 0106  
              __size_of_tx_sends 0046                        _epoch_now 00F9  
                      _main_init 26DA                         ?_isdigit 0001  
               _epoch_to_caltime 1618             __CFG_RTCOSC$T1OSCREF 000000  
                       _ADC_flag 002C                         ?_my_atoi 0025  
                       _ADC_init 2E14                      _PADCFG1bits 000F3C  
            ringbuf_backspace@rb 0060            _my_terminal_loop$3199 017C  
               ___lwdiv@quotient 006B                         ?_sprintf 0072  
                     my_atoi@ret 0064                       my_atoi@str 0025  
                      d_to_x@dec 0060                         _CTMUCONH 000FB3  
                       _CTMUCONL 000FB2                         _CTMUICON 000FB1  
       ringbuf_init@internal_buf 0021                   ___wmul@product 0023  
                       _IPR1bits 000F9F                         _IPR2bits 000FA2  
                       _PIE1bits 000F9D                         _PIE2bits 000FA0  
                       _IPR5bits 000F99                         _PIE5bits 000F91  
            __size_of_print_time 0098                         i2u400_40 13BE  
                ??i2_ringbuf_pop 000B                  ??i2_ringbuf_num 0003  
                ??i2_ringbuf_put 000C                         _PIR1bits 000F9E  
                       _PIR2bits 000FA1                         i2u471_40 006A  
                       i2u472_40 006C                         i2u473_40 0082  
                       _PIR5bits 000F98                         i2u474_40 0084  
     epoch_to_caltime@year_cache 00CC                         i2u475_40 009A  
                       i2u476_40 009C                         i2u397_40 134C  
                       i2u398_40 1372                         i2u399_40 1398  
                  ??_ringbuf_pop 0062                    ??_ringbuf_num 0021  
                  ??_ringbuf_put 0063                         _UART_ISR 2B3C  
                  ??_timer0_init 001F                    ??_timer1_init 0020  
                  ??_timer3_init 001F                        _my_strcmp 23FE  
                       _OSC_init 2E4A                  ?_RTCC_from_RTCC 007F  
                     _ADCON0bits 000FC2                       _ADCON1bits 000FC1  
              ___wmul@multiplier 001F                 __CFG_SOSCSEL$LOW 000000  
                       _PWM_init 20B0   button_timer_interrupt@sw_value 0003  
                     ?_main_init 0001                ??_ringbuf_put_num 0027  
              ??_ringbuf_put_str 0027                    ringbuf_pop@rb 0060  
                  ringbuf_num@rb 001F                    ringbuf_put@rb 0060  
              ___lmul@multiplier 0064                      _INTCON2bits 000FF1  
           epoch_to_caltime@year 008F                 __size_of_PWM_set 01A0  
              my_terminal_loop@i 0180                       _CCPR1Lbits 000FBB  
                     _CCPR2Lbits 000FB5                  _command_at_hand 2950  
                     _CCPR3Lbits 000F16                       _CCPR4Lbits 000F13  
                       __Hrparam 0000                         __Lrparam 0000  
                  _weekday_3char FDF1            __size_of_month_length 00C8  
                   ??_light_loop 0083                       ?_my_strcmp 001F  
             ringbuf_put_str@str 0069         __size_of_caltime_to_RTCC 00D2  
               __size_of___awdiv 0096                 __size_of___awmod 0082  
               __size_of___lldiv 00C6                 __size_of___llmod 0076  
               __size_of___lwdiv 0082                 __size_of___lwmod 006C  
              tx_sends@asciicode 0067              __end_of_ringbuf_pop 1CEE  
            __end_of_ringbuf_num 1F3A              __end_of_ringbuf_put 1B50  
            __end_of_timer0_init 2CCA            __size_of_ringbuf_init 004E  
            __end_of_timer1_init 2C62                       sprintf@len 008F  
            __end_of_timer3_init 2D48                       sprintf@val 008D  
               __size_of_isdigit 0022                  ___lwdiv@divisor 0068  
                ___lwdiv@counter 006A             timer0_init@prescaler 0020  
                       __ptext10 22C0                         __ptext11 2950  
                       __ptext20 26DA                         __ptext12 249A  
                       __ptext21 2D22                         __ptext13 0000  
                       __ptext30 13F6                         __ptext22 2C1C  
                       __ptext14 2D8E                         __ptext31 28DA  
                       __ptext23 2C98                         __ptext15 29C0  
                       __ptext40 2DD2                         __ptext32 1808  
                       __ptext24 2AEE                         __ptext16 2A2C  
                       __ptext41 1618                         __ptext33 2CFA  
                       __ptext25 2DF4                         __ptext17 1A7E  
                       __ptext42 1CEE                         __ptext34 275C  
                       __ptext26 2CCA                         __ptext18 1E7C  
                       __ptext51 1170                         __ptext43 27DE  
                       __ptext35 2B8A                         __ptext27 20B0  
                       __ptext19 2C62                         __ptext52 2B3C  
                       __ptext44 19A8                         __ptext36 2DB0  
                       __ptext28 2E4A                         __ptext53 1FF8  
                       __ptext45 2860                         __ptext37 0EE4  
                       __ptext29 2E14                         __ptext54 2164  
                       __ptext46 1DB6                         __ptext38 2214  
                       __ptext55 1F3A                         __ptext47 1B50  
                       __ptext39 2E30                         __ptext48 2D48  
                       __ptext49 2532                 __size_of_my_atoi 00A0  
                     PWM_init@PR 001F                 __size_of_sprintf 04A6  
          RTCC_loop@prev_halfsec 00C7         __end_of_my_terminal_loop 0BD6  
             __end_of_light_loop 1618                    __size_of_main 009E  
                   _month_length 1CEE         __size_of_RTCC_from_epoch 0022  
               ??_ringbuf_delete 0021          ?_button_timer_interrupt 0001  
                   _ringbuf_init 2AEE                        x_to_d@hex 0020  
                       _tx_sends 2BD6                     ??_print_time 0027  
                 main_init@rxbuf 0200                   main_init@txbuf 02FA  
                    ??_main_init 0025                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2             ringbuf_put@asciicode 0062  
                       isdigit@c 0021          __end_of_command_at_hand 29C0  
               get_quot_rem@quot 007D                RTCC_to_caltime@ct 0021  
                       intlevel2 0000                        sprintf@ap 0089  
                      sprintf@cp 008B                        sprintf@sp 0072  
               ___lwmod@dividend 006D                 ___lldiv@dividend 0070  
                     _RCSTA1bits 000FAC                ?_caltime_to_epoch 0070  
              _ringbuf_backspace 25C8         __end_of_epoch_to_caltime 1808  
       __size_of_RTCC_to_caltime 00AC                       _OSCCONbits 000FD3  
 __end_of_button_timer_interrupt 13F6               __end_of_print_time 2532  
             ??_caltime_to_epoch 0074               ?_ringbuf_backspace 0060  
                    _ringbuf_pop 1C22                      _ringbuf_num 1E7C  
                    _ringbuf_put 1A7E                      ??_my_strcmp 0023  
                    _timer0_init 2C98                      _timer1_init 2C1C  
                    _timer3_init 2D22              ??_ringbuf_backspace 0062  
                get_quot_rem@div 007F                  get_quot_rem@num 0081  
                     _RTCCFGbits 000F3F                         sprintf@c 0092  
                       sprintf@f 0074                       _PPSCONbits 000EBF  
               ___lldiv@quotient 0078                caltime_to_RTCC@ct 0061  
                ___lwmod@divisor 006F                ??_caltime_to_RTCC 0027  
                ___lwmod@counter 0071  epoch_to_caltime@day_since_epoch 008B  
      __end_of_ringbuf_backspace 2654           _command_operation$3201 00BD  
         _command_operation$3202 00BF                 ??_RTCC_from_RTCC 0027  
