

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Jun 03 11:51:44 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    14                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    15                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           	psect	idataCOMRAM
    80  003670                     __pidataCOMRAM:
    81                           	opt stack 0
    82                           
    83                           ;initializer for _cursor_up
    84  003670  1B                 	db	27
    85  003671  5B                 	db	91
    86  003672  41                 	db	65
    87  003673  00                 	db	0
    88                           
    89                           	psect	idataBANK0
    90  003520                     __pidataBANK0:
    91                           	opt stack 0
    92                           
    93                           ;initializer for _weekday_char
    94  003520  59                 	db	low STR_1
    95  003521  0F                 	db	high STR_1
    96  003522  55                 	db	low STR_2
    97  003523  0F                 	db	high STR_2
    98  003524  4D                 	db	low STR_3
    99  003525  0F                 	db	high STR_3
   100  003526  49                 	db	low STR_4
   101  003527  0F                 	db	high STR_4
   102  003528  61                 	db	low STR_5
   103  003529  0F                 	db	high STR_5
   104  00352A  51                 	db	low STR_6
   105  00352B  0F                 	db	high STR_6
   106  00352C  5D                 	db	low STR_7
   107  00352D  0F                 	db	high STR_7
   108                           
   109                           ;initializer for _weekday_char_full
   110  00352E  2C                 	db	low STR_8
   111  00352F  0F                 	db	high STR_8
   112  003530  25                 	db	low STR_9
   113  003531  0F                 	db	high STR_9
   114  003532  1D                 	db	low STR_10
   115  003533  0F                 	db	high STR_10
   116  003534  01                 	db	low STR_11
   117  003535  0F                 	db	high STR_11
   118  003536  14                 	db	low STR_12
   119  003537  0F                 	db	high STR_12
   120  003538  33                 	db	low STR_13
   121  003539  0F                 	db	high STR_13
   122  00353A  0B                 	db	low STR_14
   123  00353B  0F                 	db	high STR_14
   124                           
   125                           ;initializer for _cursor_left
   126  00353C  1B                 	db	27
   127  00353D  5B                 	db	91
   128  00353E  44                 	db	68
   129  00353F  00                 	db	0
   130                           
   131                           ;initializer for epoch_to_caltime@month_cache
   132  003540  01                 	db	1
   133                           
   134                           ;initializer for _cursor_down
   135  003541  1B                 	db	27
   136  003542  5B                 	db	91
   137  003543  42                 	db	66
   138  003544  00                 	db	0
   139                           
   140                           ;initializer for _cursor_right
   141  003545  1B                 	db	27
   142  003546  5B                 	db	91
   143  003547  43                 	db	67
   144  003548  00                 	db	0
   145  0000                     _PPSCONbits	set	3775
   146  0000                     _RPOR3	set	3779
   147  0000                     _RPOR4	set	3780
   148  0000                     _RPOR5	set	3781
   149  0000                     _ANCON0	set	3912
   150  0000                     _ANCON1	set	3913
   151  0000                     _CCP3CONbits	set	3861
   152  0000                     _CCP4CONbits	set	3858
   153  0000                     _CCPR3L	set	3862
   154  0000                     _CCPR3Lbits	set	3862
   155  0000                     _CCPR4L	set	3859
   156  0000                     _CCPR4Lbits	set	3859
   157  0000                     _CCPTMRS0bits	set	3922
   158  0000                     _CCPTMRS1bits	set	3921
   159  0000                     _PADCFG1bits	set	3900
   160  0000                     _RTCCAL	set	3902
   161  0000                     _RTCCFGbits	set	3903
   162  0000                     _RTCVALH	set	3899
   163  0000                     _RTCVALL	set	3898
   164  0000                     _T5CONbits	set	3874
   165  0000                     _UCFGbits	set	3897
   166  0000                     _ADRES	set	4035
   167  0000                     _ADCON0	set	4034
   168  0000                     _ADCON0bits	set	4034
   169  0000                     _ADCON1	set	4033
   170  0000                     _ADCON1bits	set	4033
   171  0000                     _BAUDCON1bits	set	3966
   172  0000                     _CCP1CONbits	set	4026
   173  0000                     _CCP2CONbits	set	4020
   174  0000                     _CCPR1L	set	4027
   175  0000                     _CCPR1Lbits	set	4027
   176  0000                     _CCPR2L	set	4021
   177  0000                     _CCPR2Lbits	set	4021
   178  0000                     _CTMUCONH	set	4019
   179  0000                     _CTMUCONHbits	set	4019
   180  0000                     _CTMUCONL	set	4018
   181  0000                     _CTMUCONLbits	set	4018
   182  0000                     _CTMUICON	set	4017
   183  0000                     _EECON2	set	4007
   184  0000                     _INTCON2bits	set	4081
   185  0000                     _INTCONbits	set	4082
   186  0000                     _IPR1bits	set	3999
   187  0000                     _IPR2bits	set	4002
   188  0000                     _IPR5bits	set	3993
   189  0000                     _OSCCONbits	set	4051
   190  0000                     _OSCTUNEbits	set	3995
   191  0000                     _PIE1bits	set	3997
   192  0000                     _PIE2bits	set	4000
   193  0000                     _PIE5bits	set	3985
   194  0000                     _PIR1bits	set	3998
   195  0000                     _PIR2bits	set	4001
   196  0000                     _PIR5bits	set	3992
   197  0000                     _PORTAbits	set	3968
   198  0000                     _PR2	set	4043
   199  0000                     _RCREG1	set	4015
   200  0000                     _RCSTA1bits	set	4012
   201  0000                     _SPBRG1	set	4016
   202  0000                     _SPBRGH1	set	3967
   203  0000                     _T0CONbits	set	4053
   204  0000                     _T1CONbits	set	4045
   205  0000                     _T2CONbits	set	4042
   206  0000                     _T3CONbits	set	3961
   207  0000                     _TMR1H	set	4047
   208  0000                     _TRISA	set	3986
   209  0000                     _TRISB	set	3987
   210  0000                     _TRISC	set	3988
   211  0000                     _TXREG1	set	4014
   212  0000                     _TXSTA1bits	set	4013
   213  0000                     _GIE	set	32663
   214  0000                     _LATB2	set	31826
   215                           
   216                           	psect	smallconst
   217  000F00                     __psmallconst:
   218                           	opt stack 0
   219  000F00  00                 	db	0
   220  000F01                     STR_11:
   221  000F01  57                 	db	87	;'W'
   222  000F02  65                 	db	101	;'e'
   223  000F03  64                 	db	100	;'d'
   224  000F04  6E                 	db	110	;'n'
   225  000F05  65                 	db	101	;'e'
   226  000F06  73                 	db	115	;'s'
   227  000F07  64                 	db	100	;'d'
   228  000F08  61                 	db	97	;'a'
   229  000F09  79                 	db	121	;'y'
   230  000F0A  00                 	db	0
   231  000F0B                     STR_14:
   232  000F0B  53                 	db	83	;'S'
   233  000F0C  61                 	db	97	;'a'
   234  000F0D  74                 	db	116	;'t'
   235  000F0E  75                 	db	117	;'u'
   236  000F0F  72                 	db	114	;'r'
   237  000F10  64                 	db	100	;'d'
   238  000F11  61                 	db	97	;'a'
   239  000F12  79                 	db	121	;'y'
   240  000F13  00                 	db	0
   241  000F14                     STR_12:
   242  000F14  54                 	db	84	;'T'
   243  000F15  68                 	db	104	;'h'
   244  000F16  75                 	db	117	;'u'
   245  000F17  72                 	db	114	;'r'
   246  000F18  73                 	db	115	;'s'
   247  000F19  64                 	db	100	;'d'
   248  000F1A  61                 	db	97	;'a'
   249  000F1B  79                 	db	121	;'y'
   250  000F1C  00                 	db	0
   251  000F1D                     STR_10:
   252  000F1D  54                 	db	84	;'T'
   253  000F1E  75                 	db	117	;'u'
   254  000F1F  65                 	db	101	;'e'
   255  000F20  73                 	db	115	;'s'
   256  000F21  64                 	db	100	;'d'
   257  000F22  61                 	db	97	;'a'
   258  000F23  79                 	db	121	;'y'
   259  000F24  00                 	db	0
   260  000F25                     STR_9:
   261  000F25  4D                 	db	77	;'M'
   262  000F26  6F                 	db	111	;'o'
   263  000F27  6E                 	db	110	;'n'
   264  000F28  64                 	db	100	;'d'
   265  000F29  61                 	db	97	;'a'
   266  000F2A  79                 	db	121	;'y'
   267  000F2B  00                 	db	0
   268  000F2C                     STR_8:
   269  000F2C  53                 	db	83	;'S'
   270  000F2D  75                 	db	117	;'u'
   271  000F2E  6E                 	db	110	;'n'
   272  000F2F  64                 	db	100	;'d'
   273  000F30  61                 	db	97	;'a'
   274  000F31  79                 	db	121	;'y'
   275  000F32  00                 	db	0
   276  000F33                     STR_13:
   277  000F33  46                 	db	70	;'F'
   278  000F34  72                 	db	114	;'r'
   279  000F35  79                 	db	121	;'y'
   280  000F36  64                 	db	100	;'d'
   281  000F37  61                 	db	97	;'a'
   282  000F38  79                 	db	121	;'y'
   283  000F39  00                 	db	0
   284  000F3A                     STR_16:
   285  000F3A  08                 	db	8
   286  000F3B  5F                 	db	95	;'_'
   287  000F3C  20                 	db	32
   288  000F3D  08                 	db	8
   289  000F3E  08                 	db	8
   290  000F3F  00                 	db	0
   291  000F40                     STR_34:
   292  000F40  73                 	db	115	;'s'
   293  000F41  79                 	db	121	;'y'
   294  000F42  6E                 	db	110	;'n'
   295  000F43  63                 	db	99	;'c'
   296  000F44  00                 	db	0
   297  000F45                     STR_40:
   298  000F45  0A                 	db	10
   299  000F46  0A                 	db	10
   300  000F47  0A                 	db	10
   301  000F48  00                 	db	0
   302  000F49                     STR_4:
   303  000F49  57                 	db	87	;'W'
   304  000F4A  45                 	db	69	;'E'
   305  000F4B  44                 	db	68	;'D'
   306  000F4C  00                 	db	0
   307  000F4D                     STR_3:
   308  000F4D  54                 	db	84	;'T'
   309  000F4E  55                 	db	85	;'U'
   310  000F4F  45                 	db	69	;'E'
   311  000F50  00                 	db	0
   312  000F51                     STR_6:
   313  000F51  46                 	db	70	;'F'
   314  000F52  52                 	db	82	;'R'
   315  000F53  49                 	db	73	;'I'
   316  000F54  00                 	db	0
   317  000F55                     STR_2:
   318  000F55  4D                 	db	77	;'M'
   319  000F56  4F                 	db	79	;'O'
   320  000F57  4E                 	db	78	;'N'
   321  000F58  00                 	db	0
   322  000F59                     STR_1:
   323  000F59  53                 	db	83	;'S'
   324  000F5A  55                 	db	85	;'U'
   325  000F5B  4E                 	db	78	;'N'
   326  000F5C  00                 	db	0
   327  000F5D                     STR_7:
   328  000F5D  53                 	db	83	;'S'
   329  000F5E  41                 	db	65	;'A'
   330  000F5F  54                 	db	84	;'T'
   331  000F60  00                 	db	0
   332  000F61                     STR_5:
   333  000F61  54                 	db	84	;'T'
   334  000F62  48                 	db	72	;'H'
   335  000F63  55                 	db	85	;'U'
   336  000F64  00                 	db	0
   337  000F65                     STR_35:
   338  000F65  61                 	db	97	;'a'
   339  000F66  64                 	db	100	;'d'
   340  000F67  63                 	db	99	;'c'
   341  000F68  00                 	db	0
   342  000F69                     STR_33:
   343  000F69  73                 	db	115	;'s'
   344  000F6A  65                 	db	101	;'e'
   345  000F6B  74                 	db	116	;'t'
   346  000F6C  00                 	db	0
   347  000F6D                     STR_15:
   348  000F6D  5F                 	db	95	;'_'
   349  000F6E  08                 	db	8
   350  000F6F  00                 	db	0
   351  000F70                     STR_19:
   352  000F70  20                 	db	32
   353  000F71  20                 	db	32
   354  000F72  00                 	db	0
   355  000F73                     STR_23:
   356  000F73  29                 	db	41
   357  000F74  20                 	db	32
   358  000F75  00                 	db	0
   359  000F76                     STR_22:
   360  000F76  20                 	db	32
   361  000F77  28                 	db	40
   362  000F78  00                 	db	0
   363  000F79                     STR_26:
   364  000F79  74                 	db	116	;'t'
   365  000F7A  73                 	db	115	;'s'
   366  000F7B  00                 	db	0
   367  000F7C                     STR_24:
   368  000F7C  2D                 	db	45
   369  000F7D  00                 	db	0
   370  000F7E                     STR_20:
   371  000F7E  2F                 	db	47
   372  000F7F  00                 	db	0
   373  000F80                     STR_38:
   374  000F80  42                 	db	66	;'B'
   375  000F81  00                 	db	0
   376  000F82                     STR_37:
   377  000F82  47                 	db	71	;'G'
   378  000F83  00                 	db	0
   379  000F84                     STR_28:
   380  000F84  4D                 	db	77	;'M'
   381  000F85  00                 	db	0
   382  000F86                     STR_36:
   383  000F86  52                 	db	82	;'R'
   384  000F87  00                 	db	0
   385  000F88                     STR_39:
   386  000F88  57                 	db	87	;'W'
   387  000F89  00                 	db	0
   388  000F8A                     STR_29:
   389  000F8A  64                 	db	100	;'d'
   390  000F8B  00                 	db	0
   391  000F8C                     STR_30:
   392  000F8C  68                 	db	104	;'h'
   393  000F8D  00                 	db	0
   394  000F8E                     STR_31:
   395  000F8E  6D                 	db	109	;'m'
   396  000F8F  00                 	db	0
   397  0000                     
   398                           ; #config settings
   399  000F90  00                 	db	0	; dummy byte at the end
   400  0000                     
   401                           	psect	cinit
   402  00305C                     __pcinit:
   403                           	opt stack 0
   404  00305C                     start_initialization:
   405                           	opt stack 0
   406  00305C                     __initialization:
   407                           	opt stack 0
   408                           
   409                           ; Clear objects allocated to BANK6 (250 bytes)
   410  00305C  EE06  F000         	lfsr	0,__pbssBANK6
   411  003060  0EFA               	movlw	250
   412  003062                     clear_0:
   413  003062  6AEE               	clrf	postinc0,c
   414  003064  06E8               	decf	wreg,f,c
   415  003066  E1FD               	bnz	clear_0
   416                           
   417                           ; Clear objects allocated to BANK5 (250 bytes)
   418  003068  EE05  F000         	lfsr	0,__pbssBANK5
   419  00306C  0EFA               	movlw	250
   420  00306E                     clear_1:
   421  00306E  6AEE               	clrf	postinc0,c
   422  003070  06E8               	decf	wreg,f,c
   423  003072  E1FD               	bnz	clear_1
   424                           
   425                           ; Clear objects allocated to BANK0 (25 bytes)
   426  003074  EE00  F0D7         	lfsr	0,__pbssBANK0
   427  003078  0E19               	movlw	25
   428  00307A                     clear_2:
   429  00307A  6AEE               	clrf	postinc0,c
   430  00307C  06E8               	decf	wreg,f,c
   431  00307E  E1FD               	bnz	clear_2
   432                           
   433                           ; Clear objects allocated to COMRAM (27 bytes)
   434  003080  EE00  F021         	lfsr	0,__pbssCOMRAM
   435  003084  0E1B               	movlw	27
   436  003086                     clear_3:
   437  003086  6AEE               	clrf	postinc0,c
   438  003088  06E8               	decf	wreg,f,c
   439  00308A  E1FD               	bnz	clear_3
   440                           
   441                           ; Initialize objects allocated to BANK0 (41 bytes)
   442                           ; load TBLPTR registers with __pidataBANK0
   443  00308C  0E20               	movlw	low __pidataBANK0
   444  00308E  6EF6               	movwf	tblptrl,c
   445  003090  0E35               	movlw	high __pidataBANK0
   446  003092  6EF7               	movwf	tblptrh,c
   447  003094  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   448  003096  6EF8               	movwf	tblptru,c
   449  003098  EE00  F0AE         	lfsr	0,__pdataBANK0
   450  00309C  EE10 F029          	lfsr	1,41
   451  0030A0                     copy_data0:
   452  0030A0  0009               	tblrd		*+
   453  0030A2  CFF5 FFEE          	movff	tablat,postinc0
   454  0030A6  50E5               	movf	postdec1,w,c
   455  0030A8  50E1               	movf	fsr1l,w,c
   456  0030AA  E1FA               	bnz	copy_data0
   457                           
   458                           ; Initialize objects allocated to COMRAM (4 bytes)
   459                           ; load TBLPTR registers with __pidataCOMRAM
   460  0030AC  0E70               	movlw	low __pidataCOMRAM
   461  0030AE  6EF6               	movwf	tblptrl,c
   462  0030B0  0E36               	movlw	high __pidataCOMRAM
   463  0030B2  6EF7               	movwf	tblptrh,c
   464  0030B4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   465  0030B6  6EF8               	movwf	tblptru,c
   466  0030B8  EE00  F03C         	lfsr	0,__pdataCOMRAM
   467  0030BC  EE10 F004          	lfsr	1,4
   468  0030C0                     copy_data1:
   469  0030C0  0009               	tblrd		*+
   470  0030C2  CFF5 FFEE          	movff	tablat,postinc0
   471  0030C6  50E5               	movf	postdec1,w,c
   472  0030C8  50E1               	movf	fsr1l,w,c
   473  0030CA  E1FA               	bnz	copy_data1
   474  0030CC                     end_of_initialization:
   475                           	opt stack 0
   476  0030CC                     __end_of__initialization:
   477                           	opt stack 0
   478  0030CC  0100               	movlb	0
   479  0030CE  EF58  F00A         	goto	_main	;jump to C main() function
   480                           tblptru	equ	0xFF8
   481                           tblptrh	equ	0xFF7
   482                           tblptrl	equ	0xFF6
   483                           tablat	equ	0xFF5
   484                           postinc0	equ	0xFEE
   485                           wreg	equ	0xFE8
   486                           postdec1	equ	0xFE5
   487                           fsr1l	equ	0xFE1
   488                           
   489                           	psect	bssCOMRAM
   490  000021                     __pbssCOMRAM:
   491                           	opt stack 0
   492  000021                     _colon:
   493                           	opt stack 0
   494  000021                     	ds	1
   495  000022                     _display_flag:
   496                           	opt stack 0
   497  000022                     	ds	1
   498  000023                     _edit_flag:
   499                           	opt stack 0
   500  000023                     	ds	1
   501  000024                     _rx_flag:
   502                           	opt stack 0
   503  000024                     	ds	1
   504  000025                     _time_sync:
   505                           	opt stack 0
   506  000025                     	ds	1
   507  000026                     _rx_buf:
   508                           	opt stack 0
   509  000026                     	ds	5
   510  00002B                     _tx_buf:
   511                           	opt stack 0
   512  00002B                     	ds	5
   513  000030                     _sw_B:
   514                           	opt stack 0
   515  000030                     	ds	4
   516  000034                     _sw_G:
   517                           	opt stack 0
   518  000034                     	ds	4
   519  000038                     _sw_R:
   520                           	opt stack 0
   521  000038                     	ds	4
   522                           tblptru	equ	0xFF8
   523                           tblptrh	equ	0xFF7
   524                           tblptrl	equ	0xFF6
   525                           tablat	equ	0xFF5
   526                           postinc0	equ	0xFEE
   527                           wreg	equ	0xFE8
   528                           postdec1	equ	0xFE5
   529                           fsr1l	equ	0xFE1
   530                           
   531                           	psect	dataCOMRAM
   532  00003C                     __pdataCOMRAM:
   533                           	opt stack 0
   534  00003C                     _cursor_up:
   535                           	opt stack 0
   536  00003C                     	ds	4
   537                           tblptru	equ	0xFF8
   538                           tblptrh	equ	0xFF7
   539                           tblptrl	equ	0xFF6
   540                           tablat	equ	0xFF5
   541                           postinc0	equ	0xFEE
   542                           wreg	equ	0xFE8
   543                           postdec1	equ	0xFE5
   544                           fsr1l	equ	0xFE1
   545                           
   546                           	psect	bssBANK0
   547  0000D7                     __pbssBANK0:
   548                           	opt stack 0
   549  0000D7                     _d1:
   550                           	opt stack 0
   551  0000D7                     	ds	3
   552  0000DA                     main@prev_scan:
   553                           	opt stack 0
   554  0000DA                     	ds	3
   555  0000DD                     epoch_to_caltime@day_cache:
   556                           	opt stack 0
   557  0000DD                     	ds	2
   558  0000DF                     RTCC_loop@prev_halfsec:
   559                           	opt stack 0
   560  0000DF                     	ds	1
   561  0000E0                     _light_mode:
   562                           	opt stack 0
   563  0000E0                     	ds	1
   564  0000E1                     _time_change_flag:
   565                           	opt stack 0
   566  0000E1                     	ds	1
   567  0000E2                     epoch_to_caltime@year_cache:
   568                           	opt stack 0
   569  0000E2                     	ds	1
   570  0000E3                     _caltime_now:
   571                           	opt stack 0
   572  0000E3                     	ds	7
   573  0000EA                     _epoch_now:
   574                           	opt stack 0
   575  0000EA                     	ds	4
   576  0000EE                     main@_2505:
   577                           	opt stack 0
   578  0000EE                     	ds	1
   579  0000EF                     main@n:
   580                           	opt stack 0
   581  0000EF                     	ds	1
   582                           tblptru	equ	0xFF8
   583                           tblptrh	equ	0xFF7
   584                           tblptrl	equ	0xFF6
   585                           tablat	equ	0xFF5
   586                           postinc0	equ	0xFEE
   587                           wreg	equ	0xFE8
   588                           postdec1	equ	0xFE5
   589                           fsr1l	equ	0xFE1
   590                           
   591                           	psect	dataBANK0
   592  0000AE                     __pdataBANK0:
   593                           	opt stack 0
   594  0000AE                     _weekday_char:
   595                           	opt stack 0
   596  0000AE                     	ds	14
   597  0000BC                     _weekday_char_full:
   598                           	opt stack 0
   599  0000BC                     	ds	14
   600  0000CA                     _cursor_left:
   601                           	opt stack 0
   602  0000CA                     	ds	4
   603  0000CE                     epoch_to_caltime@month_cache:
   604                           	opt stack 0
   605  0000CE                     	ds	1
   606  0000CF                     _cursor_down:
   607                           	opt stack 0
   608  0000CF                     	ds	4
   609  0000D3                     _cursor_right:
   610                           	opt stack 0
   611  0000D3                     	ds	4
   612                           tblptru	equ	0xFF8
   613                           tblptrh	equ	0xFF7
   614                           tblptrl	equ	0xFF6
   615                           tablat	equ	0xFF5
   616                           postinc0	equ	0xFEE
   617                           wreg	equ	0xFE8
   618                           postdec1	equ	0xFE5
   619                           fsr1l	equ	0xFE1
   620                           
   621                           	psect	bssBANK5
   622  000500                     __pbssBANK5:
   623                           	opt stack 0
   624  000500                     main_init@txbuf:
   625                           	opt stack 0
   626  000500                     	ds	250
   627                           tblptru	equ	0xFF8
   628                           tblptrh	equ	0xFF7
   629                           tblptrl	equ	0xFF6
   630                           tablat	equ	0xFF5
   631                           postinc0	equ	0xFEE
   632                           wreg	equ	0xFE8
   633                           postdec1	equ	0xFE5
   634                           fsr1l	equ	0xFE1
   635                           
   636                           	psect	bssBANK6
   637  000600                     __pbssBANK6:
   638                           	opt stack 0
   639  000600                     main_init@rxbuf:
   640                           	opt stack 0
   641  000600                     	ds	250
   642                           tblptru	equ	0xFF8
   643                           tblptrh	equ	0xFF7
   644                           tblptrl	equ	0xFF6
   645                           tablat	equ	0xFF5
   646                           postinc0	equ	0xFEE
   647                           wreg	equ	0xFE8
   648                           postdec1	equ	0xFE5
   649                           fsr1l	equ	0xFE1
   650                           
   651                           	psect	cstackBANK4
   652  000400                     __pcstackBANK4:
   653                           	opt stack 0
   654  000400                     rx_operation@opland1:
   655                           	opt stack 0
   656                           
   657                           ; 250 bytes @ 0x0
   658  000400                     	ds	250
   659                           tblptru	equ	0xFF8
   660                           tblptrh	equ	0xFF7
   661                           tblptrl	equ	0xFF6
   662                           tablat	equ	0xFF5
   663                           postinc0	equ	0xFEE
   664                           wreg	equ	0xFE8
   665                           postdec1	equ	0xFE5
   666                           fsr1l	equ	0xFE1
   667                           
   668                           	psect	cstackBANK3
   669  000300                     __pcstackBANK3:
   670                           	opt stack 0
   671  000300                     rx_operation@opland2:
   672                           	opt stack 0
   673                           
   674                           ; 250 bytes @ 0x0
   675  000300                     	ds	250
   676                           tblptru	equ	0xFF8
   677                           tblptrh	equ	0xFF7
   678                           tblptrl	equ	0xFF6
   679                           tablat	equ	0xFF5
   680                           postinc0	equ	0xFEE
   681                           wreg	equ	0xFE8
   682                           postdec1	equ	0xFE5
   683                           fsr1l	equ	0xFE1
   684                           
   685                           	psect	cstackBANK2
   686  000200                     __pcstackBANK2:
   687                           	opt stack 0
   688  000200                     rx_operation@opcode:
   689                           	opt stack 0
   690                           
   691                           ; 250 bytes @ 0x0
   692  000200                     	ds	250
   693                           tblptru	equ	0xFF8
   694                           tblptrh	equ	0xFF7
   695                           tblptrl	equ	0xFF6
   696                           tablat	equ	0xFF5
   697                           postinc0	equ	0xFEE
   698                           wreg	equ	0xFE8
   699                           postdec1	equ	0xFE5
   700                           fsr1l	equ	0xFE1
   701                           
   702                           	psect	cstackBANK1
   703  000100                     __pcstackBANK1:
   704                           	opt stack 0
   705  000100                     rx_operation@cmd:
   706                           	opt stack 0
   707                           
   708                           ; 250 bytes @ 0x0
   709  000100                     	ds	250
   710                           tblptru	equ	0xFF8
   711                           tblptrh	equ	0xFF7
   712                           tblptrl	equ	0xFF6
   713                           tablat	equ	0xFF5
   714                           postinc0	equ	0xFEE
   715                           wreg	equ	0xFE8
   716                           postdec1	equ	0xFE5
   717                           fsr1l	equ	0xFE1
   718                           
   719                           	psect	cstackBANK0
   720  000060                     __pcstackBANK0:
   721                           	opt stack 0
   722  000060                     ??_timer3_init:
   723  000060                     ??_x_to_d:
   724  000060                     ?_ADC:
   725                           	opt stack 0
   726  000060                     ?___wmul:
   727                           	opt stack 0
   728  000060                     ?___awdiv:
   729                           	opt stack 0
   730  000060                     ?___awmod:
   731                           	opt stack 0
   732  000060                     ?___lwmod:
   733                           	opt stack 0
   734  000060                     ?___llmod:
   735                           	opt stack 0
   736  000060                     timer1_init@clock_select:
   737                           	opt stack 0
   738  000060                     ADC_init@p_ref:
   739                           	opt stack 0
   740  000060                     PWM_init@PR:
   741                           	opt stack 0
   742  000060                     ringbuf_init@rb:
   743                           	opt stack 0
   744  000060                     ringbuf_num@rb:
   745                           	opt stack 0
   746  000060                     atoi@str:
   747                           	opt stack 0
   748  000060                     strcmp@str1:
   749                           	opt stack 0
   750  000060                     ___wmul@multiplier:
   751                           	opt stack 0
   752  000060                     ___awdiv@dividend:
   753                           	opt stack 0
   754  000060                     ___awmod@dividend:
   755                           	opt stack 0
   756  000060                     ___lwmod@dividend:
   757                           	opt stack 0
   758  000060                     ___llmod@dividend:
   759                           	opt stack 0
   760                           
   761                           ; 4 bytes @ 0x0
   762  000060                     	ds	1
   763  000061                     ??_timer1_init:
   764  000061                     timer3_init@prescaler:
   765                           	opt stack 0
   766  000061                     x_to_d@hex:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x1
   770  000061                     	ds	1
   771  000062                     ??_ADC:
   772  000062                     ??_ringbuf_num:
   773  000062                     timer1_init@prescaler:
   774                           	opt stack 0
   775  000062                     ringbuf_init@internal_buf:
   776                           	opt stack 0
   777  000062                     strcmp@str2:
   778                           	opt stack 0
   779  000062                     RTCC_to_caltime@ct:
   780                           	opt stack 0
   781  000062                     ___wmul@multiplicand:
   782                           	opt stack 0
   783  000062                     ___awdiv@divisor:
   784                           	opt stack 0
   785  000062                     ___awmod@divisor:
   786                           	opt stack 0
   787  000062                     ___lwmod@divisor:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x2
   791  000062                     	ds	1
   792  000063                     ADC@ch:
   793                           	opt stack 0
   794  000063                     atoi@ret:
   795                           	opt stack 0
   796                           
   797                           ; 1 bytes @ 0x3
   798  000063                     	ds	1
   799  000064                     ??_strcmp:
   800  000064                     ringbuf_init@bufsize:
   801                           	opt stack 0
   802  000064                     RTCC_to_caltime@dumy:
   803                           	opt stack 0
   804  000064                     ___awdiv@counter:
   805                           	opt stack 0
   806  000064                     ___awmod@counter:
   807                           	opt stack 0
   808  000064                     ___lwmod@counter:
   809                           	opt stack 0
   810  000064                     ringbuf_push@rb:
   811                           	opt stack 0
   812  000064                     ringbuf_pop@rb:
   813                           	opt stack 0
   814  000064                     ___wmul@product:
   815                           	opt stack 0
   816  000064                     ___llmod@divisor:
   817                           	opt stack 0
   818                           
   819                           ; 4 bytes @ 0x4
   820  000064                     	ds	1
   821  000065                     ___awdiv@sign:
   822                           	opt stack 0
   823  000065                     ___awmod@sign:
   824                           	opt stack 0
   825                           
   826                           ; 1 bytes @ 0x5
   827  000065                     	ds	1
   828  000066                     ??_ringbuf_pop:
   829  000066                     ?___lwdiv:
   830                           	opt stack 0
   831  000066                     ringbuf_push@asciicode:
   832                           	opt stack 0
   833  000066                     month_length@month:
   834                           	opt stack 0
   835  000066                     ___awdiv@quotient:
   836                           	opt stack 0
   837  000066                     ___lwdiv@dividend:
   838                           	opt stack 0
   839                           
   840                           ; 2 bytes @ 0x6
   841  000066                     	ds	1
   842  000067                     ??_ringbuf_push:
   843  000067                     ??_month_length:
   844                           
   845                           ; 0 bytes @ 0x7
   846  000067                     	ds	1
   847  000068                     d_to_x@dec:
   848                           	opt stack 0
   849  000068                     ___llmod@counter:
   850                           	opt stack 0
   851  000068                     ___lwdiv@divisor:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0x8
   855  000068                     	ds	1
   856  000069                     ringbuf_pop@ret:
   857                           	opt stack 0
   858  000069                     caltime_to_RTCC@ct:
   859                           	opt stack 0
   860                           
   861                           ; 2 bytes @ 0x9
   862  000069                     	ds	1
   863  00006A                     ___lwdiv@counter:
   864                           	opt stack 0
   865                           
   866                           ; 1 bytes @ 0xA
   867  00006A                     	ds	1
   868  00006B                     month_length@year:
   869                           	opt stack 0
   870  00006B                     ___lwdiv@quotient:
   871                           	opt stack 0
   872                           
   873                           ; 2 bytes @ 0xB
   874  00006B                     	ds	1
   875  00006C                     ?___lmul:
   876                           	opt stack 0
   877  00006C                     tx_send@asciicode:
   878                           	opt stack 0
   879  00006C                     tx_sends@asciicode:
   880                           	opt stack 0
   881  00006C                     ___lmul@multiplier:
   882                           	opt stack 0
   883                           
   884                           ; 4 bytes @ 0xC
   885  00006C                     	ds	1
   886  00006D                     utoa@str:
   887                           	opt stack 0
   888  00006D                     PWM_set@value:
   889                           	opt stack 0
   890                           
   891                           ; 2 bytes @ 0xD
   892  00006D                     	ds	2
   893  00006F                     PWM_set@color:
   894                           	opt stack 0
   895  00006F                     utoa@value:
   896                           	opt stack 0
   897                           
   898                           ; 2 bytes @ 0xF
   899  00006F                     	ds	1
   900  000070                     ___lmul@multiplicand:
   901                           	opt stack 0
   902                           
   903                           ; 4 bytes @ 0x10
   904  000070                     	ds	1
   905  000071                     utoa@digits:
   906                           	opt stack 0
   907                           
   908                           ; 1 bytes @ 0x11
   909  000071                     	ds	1
   910  000072                     utoa@d:
   911                           	opt stack 0
   912                           
   913                           ; 1 bytes @ 0x12
   914  000072                     	ds	1
   915  000073                     utoa@v:
   916                           	opt stack 0
   917                           
   918                           ; 2 bytes @ 0x13
   919  000073                     	ds	1
   920  000074                     ___lmul@product:
   921                           	opt stack 0
   922                           
   923                           ; 4 bytes @ 0x14
   924  000074                     	ds	1
   925  000075                     tx_send_dec@edit:
   926                           	opt stack 0
   927                           
   928                           ; 1 bytes @ 0x15
   929  000075                     	ds	1
   930  000076                     tx_send_dec@str:
   931                           	opt stack 0
   932                           
   933                           ; 10 bytes @ 0x16
   934  000076                     	ds	2
   935  000078                     ?___lldiv:
   936                           	opt stack 0
   937  000078                     caltime_to_epoch@ct:
   938                           	opt stack 0
   939  000078                     ___lldiv@dividend:
   940                           	opt stack 0
   941                           
   942                           ; 4 bytes @ 0x18
   943  000078                     	ds	2
   944  00007A                     caltime_to_epoch@ep:
   945                           	opt stack 0
   946                           
   947                           ; 2 bytes @ 0x1A
   948  00007A                     	ds	2
   949  00007C                     ??_caltime_to_epoch:
   950  00007C                     ___lldiv@divisor:
   951                           	opt stack 0
   952                           
   953                           ; 4 bytes @ 0x1C
   954  00007C                     	ds	4
   955  000080                     caltime_to_epoch@year:
   956                           	opt stack 0
   957  000080                     tx_send_dec@dec:
   958                           	opt stack 0
   959  000080                     ___lldiv@quotient:
   960                           	opt stack 0
   961                           
   962                           ; 4 bytes @ 0x20
   963  000080                     	ds	1
   964  000081                     caltime_to_epoch@month_2102:
   965                           	opt stack 0
   966  000081                     print_time@row:
   967                           	opt stack 0
   968                           
   969                           ; 1 bytes @ 0x21
   970  000081                     	ds	1
   971  000082                     print_time@i:
   972                           	opt stack 0
   973  000082                     caltime_to_epoch@epoch:
   974                           	opt stack 0
   975                           
   976                           ; 4 bytes @ 0x22
   977  000082                     	ds	2
   978  000084                     ___lldiv@counter:
   979                           	opt stack 0
   980                           
   981                           ; 1 bytes @ 0x24
   982  000084                     	ds	1
   983  000085                     ?_get_quot_rem:
   984                           	opt stack 0
   985  000085                     get_quot_rem@quot:
   986                           	opt stack 0
   987                           
   988                           ; 2 bytes @ 0x25
   989  000085                     	ds	1
   990  000086                     caltime_to_epoch@month:
   991                           	opt stack 0
   992                           
   993                           ; 1 bytes @ 0x26
   994  000086                     	ds	1
   995  000087                     get_quot_rem@div:
   996                           	opt stack 0
   997  000087                     RTCC_from_RTCC@ct:
   998                           	opt stack 0
   999  000087                     RTCC_from_caltime@ct:
  1000                           	opt stack 0
  1001                           
  1002                           ; 2 bytes @ 0x27
  1003  000087                     	ds	2
  1004  000089                     RTCC_from_RTCC@ep:
  1005                           	opt stack 0
  1006  000089                     RTCC_from_caltime@ep:
  1007                           	opt stack 0
  1008  000089                     get_quot_rem@num:
  1009                           	opt stack 0
  1010                           
  1011                           ; 4 bytes @ 0x29
  1012  000089                     	ds	2
  1013  00008B                     ??_rx_operation:
  1014                           
  1015                           ; 0 bytes @ 0x2B
  1016  00008B                     	ds	1
  1017  00008C                     rx_operation@cnt_char:
  1018                           	opt stack 0
  1019                           
  1020                           ; 1 bytes @ 0x2C
  1021  00008C                     	ds	1
  1022  00008D                     rx_operation@i:
  1023                           	opt stack 0
  1024  00008D                     epoch_to_caltime@ct:
  1025                           	opt stack 0
  1026                           
  1027                           ; 2 bytes @ 0x2D
  1028  00008D                     	ds	2
  1029  00008F                     epoch_to_caltime@ep:
  1030                           	opt stack 0
  1031                           
  1032                           ; 2 bytes @ 0x2F
  1033  00008F                     	ds	2
  1034  000091                     ??_epoch_to_caltime:
  1035                           
  1036                           ; 0 bytes @ 0x31
  1037  000091                     	ds	2
  1038  000093                     epoch_to_caltime@day_since_epoch:
  1039                           	opt stack 0
  1040                           
  1041                           ; 2 bytes @ 0x33
  1042  000093                     	ds	2
  1043  000095                     epoch_to_caltime@day:
  1044                           	opt stack 0
  1045                           
  1046                           ; 2 bytes @ 0x35
  1047  000095                     	ds	2
  1048  000097                     epoch_to_caltime@year:
  1049                           	opt stack 0
  1050                           
  1051                           ; 1 bytes @ 0x37
  1052  000097                     	ds	1
  1053  000098                     epoch_to_caltime@month:
  1054                           	opt stack 0
  1055                           
  1056                           ; 1 bytes @ 0x38
  1057  000098                     	ds	1
  1058  000099                     epoch_to_caltime@num:
  1059                           	opt stack 0
  1060                           
  1061                           ; 4 bytes @ 0x39
  1062  000099                     	ds	4
  1063  00009D                     RTCC_from_epoch@ct:
  1064                           	opt stack 0
  1065                           
  1066                           ; 2 bytes @ 0x3D
  1067  00009D                     	ds	2
  1068  00009F                     RTCC_from_epoch@ep:
  1069                           	opt stack 0
  1070                           
  1071                           ; 2 bytes @ 0x3F
  1072  00009F                     	ds	2
  1073  0000A1                     ??_main:
  1074                           
  1075                           ; 0 bytes @ 0x41
  1076  0000A1                     	ds	4
  1077  0000A5                     main@value:
  1078                           	opt stack 0
  1079                           
  1080                           ; 1 bytes @ 0x45
  1081  0000A5                     	ds	1
  1082  0000A6                     main@value_2506:
  1083                           	opt stack 0
  1084                           
  1085                           ; 1 bytes @ 0x46
  1086  0000A6                     	ds	1
  1087  0000A7                     main@scan:
  1088                           	opt stack 0
  1089                           
  1090                           ; 1 bytes @ 0x47
  1091  0000A7                     	ds	1
  1092  0000A8                     main@temp:
  1093                           	opt stack 0
  1094                           
  1095                           ; 4 bytes @ 0x48
  1096  0000A8                     	ds	4
  1097  0000AC                     main@i:
  1098                           	opt stack 0
  1099                           
  1100                           ; 2 bytes @ 0x4C
  1101  0000AC                     	ds	2
  1102                           tblptru	equ	0xFF8
  1103                           tblptrh	equ	0xFF7
  1104                           tblptrl	equ	0xFF6
  1105                           tablat	equ	0xFF5
  1106                           postinc0	equ	0xFEE
  1107                           wreg	equ	0xFE8
  1108                           postdec1	equ	0xFE5
  1109                           fsr1l	equ	0xFE1
  1110                           
  1111                           	psect	cstackCOMRAM
  1112  000001                     __pcstackCOMRAM:
  1113                           	opt stack 0
  1114  000001                     ringbuf_delete@rb:
  1115                           	opt stack 0
  1116  000001                     button_timer_interrupt@bt:
  1117                           	opt stack 0
  1118  000001                     i2ringbuf_num@rb:
  1119                           	opt stack 0
  1120                           
  1121                           ; 2 bytes @ 0x0
  1122  000001                     	ds	2
  1123  000003                     ??i2_ringbuf_num:
  1124  000003                     button_timer_interrupt@sw_value:
  1125                           	opt stack 0
  1126                           
  1127                           ; 1 bytes @ 0x2
  1128  000003                     	ds	1
  1129  000004                     
  1130                           ; 0 bytes @ 0x3
  1131  000004                     	ds	1
  1132  000005                     ringbuf_backspace@rb:
  1133                           	opt stack 0
  1134  000005                     i2ringbuf_push@rb:
  1135                           	opt stack 0
  1136  000005                     i2ringbuf_pop@rb:
  1137                           	opt stack 0
  1138                           
  1139                           ; 2 bytes @ 0x4
  1140  000005                     	ds	2
  1141  000007                     ??_ringbuf_backspace:
  1142  000007                     ??i2_ringbuf_pop:
  1143  000007                     i2ringbuf_push@asciicode:
  1144                           	opt stack 0
  1145                           
  1146                           ; 1 bytes @ 0x6
  1147  000007                     	ds	1
  1148  000008                     ??i2_ringbuf_push:
  1149                           
  1150                           ; 0 bytes @ 0x7
  1151  000008                     	ds	2
  1152  00000A                     i2ringbuf_pop@ret:
  1153                           	opt stack 0
  1154                           
  1155                           ; 1 bytes @ 0x9
  1156  00000A                     	ds	1
  1157  00000B                     
  1158                           ; 0 bytes @ 0xA
  1159  00000B                     	ds	2
  1160  00000D                     i2tx_send@asciicode:
  1161                           	opt stack 0
  1162  00000D                     i2tx_sends@asciicode:
  1163                           	opt stack 0
  1164                           
  1165                           ; 2 bytes @ 0xC
  1166  00000D                     	ds	2
  1167  00000F                     ??_judgement:
  1168  00000F                     
  1169                           ; 0 bytes @ 0xE
  1170  00000F                     	ds	1
  1171  000010                     judgement@ascii:
  1172                           	opt stack 0
  1173                           
  1174                           ; 1 bytes @ 0xF
  1175  000010                     	ds	1
  1176  000011                     judgement@i:
  1177                           	opt stack 0
  1178                           
  1179                           ; 1 bytes @ 0x10
  1180  000011                     	ds	1
  1181  000012                     ??_ISR:
  1182                           
  1183                           ; 0 bytes @ 0x11
  1184  000012                     	ds	14
  1185  000020                     ISR@ascii:
  1186                           	opt stack 0
  1187                           
  1188                           ; 1 bytes @ 0x1F
  1189  000020                     	ds	1
  1190  000021                     tblptru	equ	0xFF8
  1191                           tblptrh	equ	0xFF7
  1192                           tblptrl	equ	0xFF6
  1193                           tablat	equ	0xFF5
  1194                           postinc0	equ	0xFEE
  1195                           wreg	equ	0xFE8
  1196                           postdec1	equ	0xFE5
  1197                           fsr1l	equ	0xFE1
  1198                           
  1199                           ; 0 bytes @ 0x20
  1200 ;;
  1201 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1202 ;;
  1203 ;; *************** function _main *****************
  1204 ;; Defined at:
  1205 ;;		line 331 in file "PIC18J27J53-killifish_light01.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;		None
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  scan            1   71[BANK0 ] unsigned char 
  1210 ;;  temp            4   72[BANK0 ] unsigned long 
  1211 ;;  value           1   70[BANK0 ] unsigned char 
  1212 ;;  value           1   69[BANK0 ] unsigned char 
  1213 ;;  i               2   76[BANK0 ] unsigned int 
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  2  585[None  ] int 
  1216 ;; Registers used:
  1217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1224 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1225 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1226 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1227 ;;Total ram usage:       13 bytes
  1228 ;; Hardware stack levels required when called:   11
  1229 ;; This function calls:
  1230 ;;		_ADC
  1231 ;;		_PWM_set
  1232 ;;		_RTCC_from_RTCC
  1233 ;;		_RTCC_from_epoch
  1234 ;;		_RTCC_loop
  1235 ;;		___lldiv
  1236 ;;		___llmod
  1237 ;;		___lmul
  1238 ;;		_main_init
  1239 ;;		_print_time
  1240 ;;		_rx_operation
  1241 ;;		_tx_sends
  1242 ;; This function is called by:
  1243 ;;		Startup code after reset
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text0
  1248  0014B0                     __ptext0:
  1249                           	opt stack 0
  1250  0014B0                     _main:
  1251                           	opt stack 20
  1252                           
  1253                           ;PIC18J27J53-killifish_light01.c: 332: main_init();
  1254                           
  1255                           ;incstack = 0
  1256  0014B0  ECED  F016         	call	_main_init	;wreg free
  1257                           
  1258                           ;PIC18J27J53-killifish_light01.c: 333: INTCONbits.GIE = 1;
  1259  0014B4  8EF2               	bsf	intcon,7,c	;volatile
  1260                           
  1261                           ;PIC18J27J53-killifish_light01.c: 336: RTCC_from_RTCC(&caltime_now, &epoch_now);
  1262  0014B6  0EE3               	movlw	low _caltime_now
  1263  0014B8  0100               	movlb	0	; () banked
  1264  0014BA  6F87               	movwf	RTCC_from_RTCC@ct& (0+255),b
  1265  0014BC  0E00               	movlw	high _caltime_now
  1266  0014BE  0100               	movlb	0	; () banked
  1267  0014C0  6F88               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  1268  0014C2  0EEA               	movlw	low _epoch_now
  1269  0014C4  0100               	movlb	0	; () banked
  1270  0014C6  6F89               	movwf	RTCC_from_RTCC@ep& (0+255),b
  1271  0014C8  0E00               	movlw	high _epoch_now
  1272  0014CA  0100               	movlb	0	; () banked
  1273  0014CC  6F8A               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  1274  0014CE  ECB6  F01A         	call	_RTCC_from_RTCC	;wreg free
  1275                           
  1276                           ;PIC18J27J53-killifish_light01.c: 337: if (caltime_now.DD == 0) {
  1277  0014D2  0100               	movlb	0	; () banked
  1278  0014D4  51E7               	movf	(_caltime_now+4)& (0+255),w,b
  1279  0014D6  A4D8               	btfss	status,2,c
  1280  0014D8  D018               	goto	l4989
  1281                           
  1282                           ; BSR set to: 0
  1283                           ;PIC18J27J53-killifish_light01.c: 338: epoch_now = 0;
  1284  0014DA  0E00               	movlw	0
  1285  0014DC  0100               	movlb	0	; () banked
  1286  0014DE  6FEA               	movwf	_epoch_now& (0+255),b
  1287  0014E0  0E00               	movlw	0
  1288  0014E2  6FEB               	movwf	(_epoch_now+1)& (0+255),b
  1289  0014E4  0E00               	movlw	0
  1290  0014E6  6FEC               	movwf	(_epoch_now+2)& (0+255),b
  1291  0014E8  0E00               	movlw	0
  1292  0014EA  6FED               	movwf	(_epoch_now+3)& (0+255),b
  1293                           
  1294                           ; BSR set to: 0
  1295                           ;PIC18J27J53-killifish_light01.c: 339: RTCC_from_epoch(&caltime_now, &epoch_now);
  1296  0014EC  0EE3               	movlw	low _caltime_now
  1297  0014EE  0100               	movlb	0	; () banked
  1298  0014F0  6F9D               	movwf	RTCC_from_epoch@ct& (0+255),b
  1299  0014F2  0E00               	movlw	high _caltime_now
  1300  0014F4  0100               	movlb	0	; () banked
  1301  0014F6  6F9E               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  1302  0014F8  0EEA               	movlw	low _epoch_now
  1303  0014FA  0100               	movlb	0	; () banked
  1304  0014FC  6F9F               	movwf	RTCC_from_epoch@ep& (0+255),b
  1305  0014FE  0E00               	movlw	high _epoch_now
  1306  001500  0100               	movlb	0	; () banked
  1307  001502  6FA0               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  1308  001504  ECD8  F01A         	call	_RTCC_from_epoch	;wreg free
  1309  001508  D000               	goto	l4989
  1310  00150A                     l4989:
  1311                           
  1312                           ;PIC18J27J53-killifish_light01.c: 340: }
  1313                           ;PIC18J27J53-killifish_light01.c: 342: tx_sends("\n\n\n");
  1314  00150A  0E45               	movlw	low STR_40
  1315  00150C  0100               	movlb	0	; () banked
  1316  00150E  6F6C               	movwf	tx_sends@asciicode& (0+255),b
  1317  001510  0E0F               	movlw	high STR_40
  1318  001512  0100               	movlb	0	; () banked
  1319  001514  6F6D               	movwf	(tx_sends@asciicode+1)& (0+255),b
  1320  001516  EC9F  F018         	call	_tx_sends	;wreg free
  1321  00151A                     l587:
  1322  00151A  0004               	clrwdt		;# 
  1323                           
  1324                           ;PIC18J27J53-killifish_light01.c: 347: RTCC_loop();
  1325  00151C  ECB7  F019         	call	_RTCC_loop	;wreg free
  1326                           
  1327                           ;PIC18J27J53-killifish_light01.c: 348: rx_operation();
  1328  001520  ECC9  F007         	call	_rx_operation	;wreg free
  1329                           
  1330                           ;PIC18J27J53-killifish_light01.c: 349: if (time_change_flag) {
  1331  001524  0100               	movlb	0	; () banked
  1332  001526  51E1               	movf	_time_change_flag& (0+255),w,b
  1333  001528  B4D8               	btfsc	status,2,c
  1334  00152A  D098               	goto	l5011
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;PIC18J27J53-killifish_light01.c: 350: time_change_flag = 0;
  1338  00152C  0E00               	movlw	0
  1339  00152E  0100               	movlb	0	; () banked
  1340  001530  6FE1               	movwf	_time_change_flag& (0+255),b
  1341                           
  1342                           ; BSR set to: 0
  1343                           ;PIC18J27J53-killifish_light01.c: 351: print_time(2);
  1344  001532  0E02               	movlw	2
  1345  001534  EC74  F017         	call	_print_time
  1346                           
  1347                           ;PIC18J27J53-killifish_light01.c: 352: if (light_mode == TIME_SYNC_mode) {
  1348  001538  0100               	movlb	0	; () banked
  1349  00153A  51E0               	movf	_light_mode& (0+255),w,b
  1350  00153C  A4D8               	btfss	status,2,c
  1351  00153E  D08E               	goto	l5011
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;PIC18J27J53-killifish_light01.c: 353: epoch_t temp = (epoch_t) epoch_now % ((epoch_t)60
      +                          *60*24);
  1355  001540  C0EA  F060         	movff	_epoch_now,___llmod@dividend
  1356  001544  C0EB  F061         	movff	_epoch_now+1,___llmod@dividend+1
  1357  001548  C0EC  F062         	movff	_epoch_now+2,___llmod@dividend+2
  1358  00154C  C0ED  F063         	movff	_epoch_now+3,___llmod@dividend+3
  1359  001550  0E80               	movlw	128
  1360  001552  0100               	movlb	0	; () banked
  1361  001554  6F64               	movwf	___llmod@divisor& (0+255),b
  1362  001556  0E51               	movlw	81
  1363  001558  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  1364  00155A  0E01               	movlw	1
  1365  00155C  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  1366  00155E  0E00               	movlw	0
  1367  001560  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  1368  001562  ECC2  F015         	call	___llmod	;wreg free
  1369  001566  C060  F0A8         	movff	?___llmod,main@temp
  1370  00156A  C061  F0A9         	movff	?___llmod+1,main@temp+1
  1371  00156E  C062  F0AA         	movff	?___llmod+2,main@temp+2
  1372  001572  C063  F0AB         	movff	?___llmod+3,main@temp+3
  1373                           
  1374                           ;PIC18J27J53-killifish_light01.c: 354: if (temp > ((epoch_t)60*60*24) / 2)temp = ((epoch
      +                          _t)60*60*24) - temp;
  1375  001576  0100               	movlb	0	; () banked
  1376  001578  51AB               	movf	(main@temp+3)& (0+255),w,b
  1377  00157A  0100               	movlb	0	; () banked
  1378  00157C  11AA               	iorwf	(main@temp+2)& (0+255),w,b
  1379  00157E  E108               	bnz	u5240
  1380  001580  0EC1               	movlw	193
  1381  001582  0100               	movlb	0	; () banked
  1382  001584  5DA8               	subwf	main@temp& (0+255),w,b
  1383  001586  0EA8               	movlw	168
  1384  001588  0100               	movlb	0	; () banked
  1385  00158A  59A9               	subwfb	(main@temp+1)& (0+255),w,b
  1386  00158C  A0D8               	btfss	status,0,c
  1387  00158E  D027               	goto	l5007
  1388  001590                     u5240:
  1389                           
  1390                           ; BSR set to: 0
  1391  001590  C0A8  F0A1         	movff	main@temp,??_main
  1392  001594  C0A9  F0A2         	movff	main@temp+1,??_main+1
  1393  001598  C0AA  F0A3         	movff	main@temp+2,??_main+2
  1394  00159C  C0AB  F0A4         	movff	main@temp+3,??_main+3
  1395  0015A0  0100               	movlb	0	; () banked
  1396  0015A2  1FA1               	comf	??_main& (0+255),f,b
  1397  0015A4  1FA2               	comf	(??_main+1)& (0+255),f,b
  1398  0015A6  1FA3               	comf	(??_main+2)& (0+255),f,b
  1399  0015A8  1FA4               	comf	(??_main+3)& (0+255),f,b
  1400  0015AA  2BA1               	incf	??_main& (0+255),f,b
  1401  0015AC  0E00               	movlw	0
  1402  0015AE  23A2               	addwfc	(??_main+1)& (0+255),f,b
  1403  0015B0  23A3               	addwfc	(??_main+2)& (0+255),f,b
  1404  0015B2  23A4               	addwfc	(??_main+3)& (0+255),f,b
  1405  0015B4  0E80               	movlw	128
  1406  0015B6  0100               	movlb	0	; () banked
  1407  0015B8  25A1               	addwf	??_main& (0+255),w,b
  1408  0015BA  0100               	movlb	0	; () banked
  1409  0015BC  6FA8               	movwf	main@temp& (0+255),b
  1410  0015BE  0E51               	movlw	81
  1411  0015C0  0100               	movlb	0	; () banked
  1412  0015C2  21A2               	addwfc	(??_main+1)& (0+255),w,b
  1413  0015C4  0100               	movlb	0	; () banked
  1414  0015C6  6FA9               	movwf	(main@temp+1)& (0+255),b
  1415  0015C8  0E01               	movlw	1
  1416  0015CA  0100               	movlb	0	; () banked
  1417  0015CC  21A3               	addwfc	(??_main+2)& (0+255),w,b
  1418  0015CE  0100               	movlb	0	; () banked
  1419  0015D0  6FAA               	movwf	(main@temp+2)& (0+255),b
  1420  0015D2  0E00               	movlw	0
  1421  0015D4  0100               	movlb	0	; () banked
  1422  0015D6  21A4               	addwfc	(??_main+3)& (0+255),w,b
  1423  0015D8  0100               	movlb	0	; () banked
  1424  0015DA  6FAB               	movwf	(main@temp+3)& (0+255),b
  1425  0015DC  D000               	goto	l5007
  1426  0015DE                     l5007:
  1427                           
  1428                           ; BSR set to: 0
  1429                           ;PIC18J27J53-killifish_light01.c: 355: temp = temp * 2 * 255 / ((epoch_t)60*60*24);
  1430  0015DE  90D8               	bcf	status,0,c
  1431  0015E0  0100               	movlb	0	; () banked
  1432  0015E2  35A8               	rlcf	main@temp& (0+255),w,b
  1433  0015E4  0100               	movlb	0	; () banked
  1434  0015E6  6F6C               	movwf	___lmul@multiplier& (0+255),b
  1435  0015E8  0100               	movlb	0	; () banked
  1436  0015EA  35A9               	rlcf	(main@temp+1)& (0+255),w,b
  1437  0015EC  0100               	movlb	0	; () banked
  1438  0015EE  6F6D               	movwf	(___lmul@multiplier+1)& (0+255),b
  1439  0015F0  0100               	movlb	0	; () banked
  1440  0015F2  35AA               	rlcf	(main@temp+2)& (0+255),w,b
  1441  0015F4  0100               	movlb	0	; () banked
  1442  0015F6  6F6E               	movwf	(___lmul@multiplier+2)& (0+255),b
  1443  0015F8  0100               	movlb	0	; () banked
  1444  0015FA  35AB               	rlcf	(main@temp+3)& (0+255),w,b
  1445  0015FC  0100               	movlb	0	; () banked
  1446  0015FE  6F6F               	movwf	(___lmul@multiplier+3)& (0+255),b
  1447  001600  0EFF               	movlw	255
  1448  001602  0100               	movlb	0	; () banked
  1449  001604  6F70               	movwf	___lmul@multiplicand& (0+255),b
  1450  001606  0E00               	movlw	0
  1451  001608  6F71               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1452  00160A  0E00               	movlw	0
  1453  00160C  6F72               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1454  00160E  0E00               	movlw	0
  1455  001610  6F73               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1456  001612  ECF1  F017         	call	___lmul	;wreg free
  1457  001616  C06C  F078         	movff	?___lmul,___lldiv@dividend
  1458  00161A  C06D  F079         	movff	?___lmul+1,___lldiv@dividend+1
  1459  00161E  C06E  F07A         	movff	?___lmul+2,___lldiv@dividend+2
  1460  001622  C06F  F07B         	movff	?___lmul+3,___lldiv@dividend+3
  1461  001626  0E80               	movlw	128
  1462  001628  0100               	movlb	0	; () banked
  1463  00162A  6F7C               	movwf	___lldiv@divisor& (0+255),b
  1464  00162C  0E51               	movlw	81
  1465  00162E  6F7D               	movwf	(___lldiv@divisor+1)& (0+255),b
  1466  001630  0E01               	movlw	1
  1467  001632  6F7E               	movwf	(___lldiv@divisor+2)& (0+255),b
  1468  001634  0E00               	movlw	0
  1469  001636  6F7F               	movwf	(___lldiv@divisor+3)& (0+255),b
  1470  001638  EC4B  F013         	call	___lldiv	;wreg free
  1471  00163C  C078  F0A8         	movff	?___lldiv,main@temp
  1472  001640  C079  F0A9         	movff	?___lldiv+1,main@temp+1
  1473  001644  C07A  F0AA         	movff	?___lldiv+2,main@temp+2
  1474  001648  C07B  F0AB         	movff	?___lldiv+3,main@temp+3
  1475                           
  1476                           ;PIC18J27J53-killifish_light01.c: 356: PWM_set(3, temp);
  1477  00164C  C0A8  F06D         	movff	main@temp,PWM_set@value
  1478  001650  C0A9  F06E         	movff	main@temp+1,PWM_set@value+1
  1479  001654  0E03               	movlw	3
  1480  001656  EC7F  F012         	call	_PWM_set
  1481  00165A  D000               	goto	l5011
  1482  00165C                     l5011:
  1483                           
  1484                           ;PIC18J27J53-killifish_light01.c: 357: }
  1485                           ;PIC18J27J53-killifish_light01.c: 358: }
  1486                           ;PIC18J27J53-killifish_light01.c: 359: if (sw_G.flag.press) {
  1487  00165C  A036               	btfss	_sw_G+2,0,c
  1488  00165E  D033               	goto	l591
  1489                           
  1490                           ;PIC18J27J53-killifish_light01.c: 360: sw_G.flags = 0;
  1491  001660  0E00               	movlw	0
  1492  001662  6E37               	movwf	_sw_G+3,c
  1493  001664  0E00               	movlw	0
  1494  001666  6E36               	movwf	_sw_G+2,c
  1495                           
  1496                           ;PIC18J27J53-killifish_light01.c: 361: light_mode = COMMAND_mode;
  1497  001668  0E02               	movlw	2
  1498  00166A  0100               	movlb	0	; () banked
  1499  00166C  6FE0               	movwf	_light_mode& (0+255),b
  1500                           
  1501                           ; BSR set to: 0
  1502                           ;PIC18J27J53-killifish_light01.c: 362: static uint8_t n = 0;
  1503                           ;PIC18J27J53-killifish_light01.c: 363: if (n >= 4) n = 0;
  1504  00166E  0E03               	movlw	3
  1505  001670  0100               	movlb	0	; () banked
  1506  001672  65EF               	cpfsgt	main@n& (0+255),b
  1507  001674  D004               	goto	l5019
  1508                           
  1509                           ; BSR set to: 0
  1510  001676  0E00               	movlw	0
  1511  001678  0100               	movlb	0	; () banked
  1512  00167A  6FEF               	movwf	main@n& (0+255),b
  1513  00167C  D003               	goto	l5021
  1514  00167E                     l5019:
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;PIC18J27J53-killifish_light01.c: 364: else n++;
  1518  00167E  0100               	movlb	0	; () banked
  1519  001680  2BEF               	incf	main@n& (0+255),f,b
  1520  001682  D000               	goto	l5021
  1521  001684                     l5021:
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;PIC18J27J53-killifish_light01.c: 365: uint8_t value = 255 / 4 * n;
  1525  001684  0100               	movlb	0	; () banked
  1526  001686  51EF               	movf	main@n& (0+255),w,b
  1527  001688  0D3F               	mullw	63
  1528  00168A  CFF3 F0A5          	movff	prodl,main@value
  1529                           
  1530                           ; BSR set to: 0
  1531                           ;PIC18J27J53-killifish_light01.c: 366: for (i = 0; i < 3; i++) {
  1532  00168E  0E00               	movlw	0
  1533  001690  0100               	movlb	0	; () banked
  1534  001692  6FAD               	movwf	(main@i+1)& (0+255),b
  1535  001694  0E00               	movlw	0
  1536  001696  6FAC               	movwf	main@i& (0+255),b
  1537  001698                     l5025:
  1538                           
  1539                           ; BSR set to: 0
  1540  001698  0100               	movlb	0	; () banked
  1541  00169A  51AD               	movf	(main@i+1)& (0+255),w,b
  1542  00169C  E114               	bnz	l591
  1543  00169E  0E03               	movlw	3
  1544  0016A0  0100               	movlb	0	; () banked
  1545  0016A2  5DAC               	subwf	main@i& (0+255),w,b
  1546  0016A4  B0D8               	btfsc	status,0,c
  1547  0016A6  D00F               	goto	l591
  1548  0016A8  D001               	goto	l5029
  1549                           
  1550                           ; BSR set to: 0
  1551  0016AA  D00D               	goto	l591
  1552  0016AC                     l5029:
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;PIC18J27J53-killifish_light01.c: 367: PWM_set(i, value);
  1556  0016AC  C0A5  F06D         	movff	main@value,PWM_set@value
  1557  0016B0  0100               	movlb	0	; () banked
  1558  0016B2  6B6E               	clrf	(PWM_set@value+1)& (0+255),b
  1559  0016B4  0100               	movlb	0	; () banked
  1560  0016B6  51AC               	movf	main@i& (0+255),w,b
  1561  0016B8  EC7F  F012         	call	_PWM_set
  1562  0016BC  0100               	movlb	0	; () banked
  1563  0016BE  4BAC               	infsnz	main@i& (0+255),f,b
  1564  0016C0  2BAD               	incf	(main@i+1)& (0+255),f,b
  1565  0016C2  D7EA               	goto	l5025
  1566                           
  1567                           ; BSR set to: 0
  1568  0016C4  D000               	goto	l591
  1569  0016C6                     l591:
  1570                           
  1571                           ;PIC18J27J53-killifish_light01.c: 368: }
  1572                           ;PIC18J27J53-killifish_light01.c: 369: }
  1573                           ;PIC18J27J53-killifish_light01.c: 370: if (sw_B.flag.press) {
  1574  0016C6  A032               	btfss	_sw_B+2,0,c
  1575  0016C8  D01F               	goto	l5047
  1576                           
  1577                           ;PIC18J27J53-killifish_light01.c: 371: sw_B.flags = 0;
  1578  0016CA  0E00               	movlw	0
  1579  0016CC  6E33               	movwf	_sw_B+3,c
  1580  0016CE  0E00               	movlw	0
  1581  0016D0  6E32               	movwf	_sw_B+2,c
  1582                           
  1583                           ;PIC18J27J53-killifish_light01.c: 372: light_mode = COMMAND_mode;
  1584  0016D2  0E02               	movlw	2
  1585  0016D4  0100               	movlb	0	; () banked
  1586  0016D6  6FE0               	movwf	_light_mode& (0+255),b
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;PIC18J27J53-killifish_light01.c: 373: static uint8_t n = 0;
  1590                           ;PIC18J27J53-killifish_light01.c: 374: if (n >= 4) n = 0;
  1591  0016D8  0E03               	movlw	3
  1592  0016DA  0100               	movlb	0	; () banked
  1593  0016DC  65EE               	cpfsgt	main@_2505& (0+255),b
  1594  0016DE  D004               	goto	l5041
  1595                           
  1596                           ; BSR set to: 0
  1597  0016E0  0E00               	movlw	0
  1598  0016E2  0100               	movlb	0	; () banked
  1599  0016E4  6FEE               	movwf	main@_2505& (0+255),b
  1600  0016E6  D003               	goto	l5043
  1601  0016E8                     l5041:
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;PIC18J27J53-killifish_light01.c: 375: else n++;
  1605  0016E8  0100               	movlb	0	; () banked
  1606  0016EA  2BEE               	incf	main@_2505& (0+255),f,b
  1607  0016EC  D000               	goto	l5043
  1608  0016EE                     l5043:
  1609                           
  1610                           ; BSR set to: 0
  1611                           ;PIC18J27J53-killifish_light01.c: 376: uint8_t value = 255 / 4 * n;
  1612  0016EE  0100               	movlb	0	; () banked
  1613  0016F0  51EE               	movf	main@_2505& (0+255),w,b
  1614  0016F2  0D3F               	mullw	63
  1615  0016F4  CFF3 F0A6          	movff	prodl,main@value_2506
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;PIC18J27J53-killifish_light01.c: 377: PWM_set(3, value);
  1619  0016F8  C0A6  F06D         	movff	main@value_2506,PWM_set@value
  1620  0016FC  0100               	movlb	0	; () banked
  1621  0016FE  6B6E               	clrf	(PWM_set@value+1)& (0+255),b
  1622  001700  0E03               	movlw	3
  1623  001702  EC7F  F012         	call	_PWM_set
  1624  001706  D000               	goto	l5047
  1625  001708                     l5047:
  1626                           
  1627                           ;PIC18J27J53-killifish_light01.c: 378: }
  1628                           ;PIC18J27J53-killifish_light01.c: 379: if (sw_R.flag.press) {
  1629  001708  A03A               	btfss	_sw_R+2,0,c
  1630  00170A  D019               	goto	l5061
  1631                           
  1632                           ;PIC18J27J53-killifish_light01.c: 380: sw_R.flags = 0;
  1633  00170C  0E00               	movlw	0
  1634  00170E  6E3B               	movwf	_sw_R+3,c
  1635  001710  0E00               	movlw	0
  1636  001712  6E3A               	movwf	_sw_R+2,c
  1637                           
  1638                           ;PIC18J27J53-killifish_light01.c: 381: if (light_mode == TIME_SYNC_mode)light_mode = ADC
      +                          _mode;
  1639  001714  0100               	movlb	0	; () banked
  1640  001716  51E0               	movf	_light_mode& (0+255),w,b
  1641  001718  A4D8               	btfss	status,2,c
  1642  00171A  D002               	goto	l5053
  1643                           
  1644                           ; BSR set to: 0
  1645  00171C  0E01               	movlw	1
  1646  00171E  D00C               	goto	L2
  1647  001720                     l5053:
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;PIC18J27J53-killifish_light01.c: 382: else if (light_mode == ADC_mode)light_mode = COMM
      +                          AND_mode;
  1651  001720  0100               	movlb	0	; () banked
  1652  001722  05E0               	decf	_light_mode& (0+255),w,b
  1653  001724  A4D8               	btfss	status,2,c
  1654  001726  D002               	goto	l5057
  1655                           
  1656                           ; BSR set to: 0
  1657  001728  0E02               	movlw	2
  1658  00172A  D006               	goto	L2
  1659  00172C                     l5057:
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;PIC18J27J53-killifish_light01.c: 383: else if (light_mode == COMMAND_mode)light_mode = 
      +                          TIME_SYNC_mode;
  1663  00172C  0E02               	movlw	2
  1664  00172E  0100               	movlb	0	; () banked
  1665  001730  19E0               	xorwf	_light_mode& (0+255),w,b
  1666  001732  A4D8               	btfss	status,2,c
  1667  001734  D004               	goto	l5061
  1668                           
  1669                           ; BSR set to: 0
  1670  001736  0E00               	movlw	0
  1671  001738                     L2:
  1672  001738  0100               	movlb	0	; () banked
  1673  00173A  6FE0               	movwf	_light_mode& (0+255),b
  1674                           
  1675                           ; BSR set to: 0
  1676                           
  1677                           ; BSR set to: 0
  1678                           
  1679                           ; BSR set to: 0
  1680  00173C  D000               	goto	l5061
  1681  00173E                     l5061:
  1682                           
  1683                           ;PIC18J27J53-killifish_light01.c: 384: }
  1684                           ;PIC18J27J53-killifish_light01.c: 385: if (light_mode == ADC_mode) {
  1685  00173E  0100               	movlb	0	; () banked
  1686  001740  05E0               	decf	_light_mode& (0+255),w,b
  1687  001742  A4D8               	btfss	status,2,c
  1688  001744  D6EA               	goto	l587
  1689                           
  1690                           ; BSR set to: 0
  1691                           ;PIC18J27J53-killifish_light01.c: 386: for (i = 0; i < 3; i++) {
  1692  001746  0E00               	movlw	0
  1693  001748  0100               	movlb	0	; () banked
  1694  00174A  6FAD               	movwf	(main@i+1)& (0+255),b
  1695  00174C  0E00               	movlw	0
  1696  00174E  6FAC               	movwf	main@i& (0+255),b
  1697                           
  1698                           ; BSR set to: 0
  1699  001750  0100               	movlb	0	; () banked
  1700  001752  51AD               	movf	(main@i+1)& (0+255),w,b
  1701  001754  E106               	bnz	u5360
  1702  001756  0E03               	movlw	3
  1703  001758  0100               	movlb	0	; () banked
  1704  00175A  5DAC               	subwf	main@i& (0+255),w,b
  1705  00175C  B0D8               	btfsc	status,0,c
  1706  00175E  D6DD               	goto	l587
  1707  001760  D001               	goto	l5069
  1708  001762                     u5360:
  1709                           
  1710                           ; BSR set to: 0
  1711  001762  D6DB               	goto	l587
  1712  001764                     l5069:
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;PIC18J27J53-killifish_light01.c: 387: uint8_t scan = (ADC(i) >> 4);
  1716  001764  0100               	movlb	0	; () banked
  1717  001766  51AC               	movf	main@i& (0+255),w,b
  1718  001768  EC4E  F01A         	call	_ADC
  1719  00176C  0E04               	movlw	4
  1720  00176E  0100               	movlb	0	; () banked
  1721  001770  6FA1               	movwf	??_main& (0+255),b
  1722  001772                     u5375:
  1723  001772  0100               	movlb	0	; () banked
  1724  001774  90D8               	bcf	status,0,c
  1725  001776  3361               	rrcf	(?_ADC+1)& (0+255),f,b
  1726  001778  3360               	rrcf	?_ADC& (0+255),f,b
  1727  00177A  0100               	movlb	0	; () banked
  1728  00177C  2FA1               	decfsz	??_main& (0+255),f,b
  1729  00177E  D7F9               	goto	u5375
  1730  001780  0100               	movlb	0	; () banked
  1731  001782  5160               	movf	?_ADC& (0+255),w,b
  1732  001784  0100               	movlb	0	; () banked
  1733  001786  6FA7               	movwf	main@scan& (0+255),b
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;PIC18J27J53-killifish_light01.c: 388: static uint8_t prev_scan[3];
  1737                           ;PIC18J27J53-killifish_light01.c: 389: if (scan != prev_scan[i]) {
  1738  001788  0EDA               	movlw	low main@prev_scan
  1739  00178A  0100               	movlb	0	; () banked
  1740  00178C  25AC               	addwf	main@i& (0+255),w,b
  1741  00178E  6ED9               	movwf	fsr2l,c
  1742  001790  0E00               	movlw	high main@prev_scan
  1743  001792  0100               	movlb	0	; () banked
  1744  001794  21AD               	addwfc	(main@i+1)& (0+255),w,b
  1745  001796  6EDA               	movwf	fsr2h,c
  1746  001798  0100               	movlb	0	; () banked
  1747  00179A  51A7               	movf	main@scan& (0+255),w,b
  1748  00179C  18DE               	xorwf	postinc2,w,c
  1749  00179E  B4D8               	btfsc	status,2,c
  1750  0017A0  D013               	goto	l5077
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;PIC18J27J53-killifish_light01.c: 390: prev_scan[i] = scan;
  1754  0017A2  0EDA               	movlw	low main@prev_scan
  1755  0017A4  0100               	movlb	0	; () banked
  1756  0017A6  25AC               	addwf	main@i& (0+255),w,b
  1757  0017A8  6ED9               	movwf	fsr2l,c
  1758  0017AA  0E00               	movlw	high main@prev_scan
  1759  0017AC  0100               	movlb	0	; () banked
  1760  0017AE  21AD               	addwfc	(main@i+1)& (0+255),w,b
  1761  0017B0  6EDA               	movwf	fsr2h,c
  1762  0017B2  C0A7  FFDF         	movff	main@scan,indf2
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;PIC18J27J53-killifish_light01.c: 391: PWM_set(i, scan);
  1766  0017B6  C0A7  F06D         	movff	main@scan,PWM_set@value
  1767  0017BA  0100               	movlb	0	; () banked
  1768  0017BC  6B6E               	clrf	(PWM_set@value+1)& (0+255),b
  1769  0017BE  0100               	movlb	0	; () banked
  1770  0017C0  51AC               	movf	main@i& (0+255),w,b
  1771  0017C2  EC7F  F012         	call	_PWM_set
  1772  0017C6  D000               	goto	l5077
  1773  0017C8                     l5077:
  1774  0017C8  0100               	movlb	0	; () banked
  1775  0017CA  4BAC               	infsnz	main@i& (0+255),f,b
  1776  0017CC  2BAD               	incf	(main@i+1)& (0+255),f,b
  1777                           
  1778                           ; BSR set to: 0
  1779  0017CE  0100               	movlb	0	; () banked
  1780  0017D0  51AD               	movf	(main@i+1)& (0+255),w,b
  1781  0017D2  E101               	bnz	u5390
  1782  0017D4  D7C0               	goto	L3
  1783  0017D6                     u5390:
  1784                           
  1785                           ; BSR set to: 0
  1786                           
  1787                           ; BSR set to: 0
  1788                           
  1789                           ; BSR set to: 0
  1790  0017D6  D6A1               	goto	l587
  1791                           
  1792                           ; BSR set to: 0
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;PIC18J27J53-killifish_light01.c: 392: }
  1796                           ;PIC18J27J53-killifish_light01.c: 393: }
  1797                           ;PIC18J27J53-killifish_light01.c: 394: }
  1798                           ;PIC18J27J53-killifish_light01.c: 395: }
  1799                           ;PIC18J27J53-killifish_light01.c: 396: return 0;
  1800                           ;	Return value of _main is never used
  1801  0017D8  EF78  F000         	goto	start
  1802  0017DC                     __end_of_main:
  1803                           	opt stack 0
  1804                           tblptru	equ	0xFF8
  1805                           tblptrh	equ	0xFF7
  1806                           tblptrl	equ	0xFF6
  1807                           tablat	equ	0xFF5
  1808                           prodl	equ	0xFF3
  1809                           intcon	equ	0xFF2
  1810                           postinc0	equ	0xFEE
  1811                           wreg	equ	0xFE8
  1812                           postdec1	equ	0xFE5
  1813                           fsr1l	equ	0xFE1
  1814                           indf2	equ	0xFDF
  1815                           postinc2	equ	0xFDE
  1816                           fsr2h	equ	0xFDA
  1817                           fsr2l	equ	0xFD9
  1818                           status	equ	0xFD8
  1819                           
  1820 ;; *************** function _rx_operation *****************
  1821 ;; Defined at:
  1822 ;;		line 230 in file "PIC18J27J53-killifish_light01.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;		None
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;  opland1       250    0[BANK4 ] unsigned char [250]
  1827 ;;  opland2       250    0[BANK3 ] unsigned char [250]
  1828 ;;  opcode        250    0[BANK2 ] unsigned char [250]
  1829 ;;  cmd           250    0[BANK1 ] unsigned char [250]
  1830 ;;  i               1   45[BANK0 ] unsigned char 
  1831 ;;  cnt_char        1   44[BANK0 ] unsigned char 
  1832 ;; Return value:  Size  Location     Type
  1833 ;;		None               void
  1834 ;; Registers used:
  1835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1842 ;;      Locals:         0       2     250     250     250     250       0       0       0       0       0       0       
      +0       0       0       0
  1843 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1844 ;;      Totals:         0       3     250     250     250     250       0       0       0       0       0       0       
      +0       0       0       0
  1845 ;;Total ram usage:     1003 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; Hardware stack levels required when called:    9
  1848 ;; This function calls:
  1849 ;;		_PWM_set
  1850 ;;		_RTCC_from_caltime
  1851 ;;		_atoi
  1852 ;;		_ringbuf_pop
  1853 ;;		_strcmp
  1854 ;; This function is called by:
  1855 ;;		_main
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           	psect	text1
  1860  000F92                     __ptext1:
  1861                           	opt stack 0
  1862  000F92                     _rx_operation:
  1863                           	opt stack 21
  1864                           
  1865                           ;PIC18J27J53-killifish_light01.c: 231: if (rx_flag) {
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;incstack = 0
  1869  000F92  5024               	movf	_rx_flag,w,c
  1870  000F94  B4D8               	btfsc	status,2,c
  1871  000F96  0012               	return	
  1872                           
  1873                           ;PIC18J27J53-killifish_light01.c: 232: uint8_t i;
  1874                           ;PIC18J27J53-killifish_light01.c: 233: rx_flag = 0;
  1875  000F98  0E00               	movlw	0
  1876  000F9A  6E24               	movwf	_rx_flag,c
  1877                           
  1878                           ;PIC18J27J53-killifish_light01.c: 234: uint8_t opcode[250];
  1879                           ;PIC18J27J53-killifish_light01.c: 235: uint8_t opland1[250];
  1880                           ;PIC18J27J53-killifish_light01.c: 236: uint8_t opland2[250];
  1881                           ;PIC18J27J53-killifish_light01.c: 238: uint8_t cnt_char = 0;
  1882  000F9C  0E00               	movlw	0
  1883  000F9E  0100               	movlb	0	; () banked
  1884  000FA0  6F8C               	movwf	rx_operation@cnt_char& (0+255),b
  1885                           
  1886                           ;PIC18J27J53-killifish_light01.c: 239: uint8_t cmd[250];
  1887                           ;PIC18J27J53-killifish_light01.c: 241: for (i = 0; opcode[i] = ringbuf_pop(&rx_buf); i++
      +                          ) {
  1888  000FA2  0E00               	movlw	0
  1889  000FA4  0100               	movlb	0	; () banked
  1890  000FA6  6F8D               	movwf	rx_operation@i& (0+255),b
  1891  000FA8  D019               	goto	l4733
  1892  000FAA                     l4727:
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;PIC18J27J53-killifish_light01.c: 242: cmd[cnt_char++] = opcode[i];
  1896  000FAA  0100               	movlb	0	; () banked
  1897  000FAC  518D               	movf	rx_operation@i& (0+255),w,b
  1898  000FAE  0D01               	mullw	1
  1899  000FB0  0E00               	movlw	low rx_operation@opcode
  1900  000FB2  24F3               	addwf	prodl,w,c
  1901  000FB4  6ED9               	movwf	fsr2l,c
  1902  000FB6  0E02               	movlw	high rx_operation@opcode
  1903  000FB8  20F4               	addwfc	prodh,w,c
  1904  000FBA  6EDA               	movwf	fsr2h,c
  1905  000FBC  0100               	movlb	0	; () banked
  1906  000FBE  518C               	movf	rx_operation@cnt_char& (0+255),w,b
  1907  000FC0  0D01               	mullw	1
  1908  000FC2  0E00               	movlw	low rx_operation@cmd
  1909  000FC4  24F3               	addwf	prodl,w,c
  1910  000FC6  6EE1               	movwf	fsr1l,c
  1911  000FC8  0E01               	movlw	high rx_operation@cmd
  1912  000FCA  20F4               	addwfc	prodh,w,c
  1913  000FCC  6EE2               	movwf	fsr1h,c
  1914  000FCE  CFDF FFE7          	movff	indf2,indf1
  1915                           
  1916                           ; BSR set to: 0
  1917  000FD2  0100               	movlb	0	; () banked
  1918  000FD4  2B8C               	incf	rx_operation@cnt_char& (0+255),f,b
  1919                           
  1920                           ; BSR set to: 0
  1921  000FD6  0100               	movlb	0	; () banked
  1922  000FD8  2B8D               	incf	rx_operation@i& (0+255),f,b
  1923  000FDA  D000               	goto	l4733
  1924  000FDC                     l4733:
  1925                           
  1926                           ; BSR set to: 0
  1927  000FDC  0E26               	movlw	low _rx_buf
  1928  000FDE  0100               	movlb	0	; () banked
  1929  000FE0  6F64               	movwf	ringbuf_pop@rb& (0+255),b
  1930  000FE2  0E00               	movlw	high _rx_buf
  1931  000FE4  0100               	movlb	0	; () banked
  1932  000FE6  6F65               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  1933  000FE8  EC6F  F015         	call	_ringbuf_pop	;wreg free
  1934  000FEC  0100               	movlb	0	; () banked
  1935  000FEE  6F8B               	movwf	??_rx_operation& (0+255),b
  1936  000FF0  0100               	movlb	0	; () banked
  1937  000FF2  518D               	movf	rx_operation@i& (0+255),w,b
  1938  000FF4  0D01               	mullw	1
  1939  000FF6  0E00               	movlw	low rx_operation@opcode
  1940  000FF8  24F3               	addwf	prodl,w,c
  1941  000FFA  6ED9               	movwf	fsr2l,c
  1942  000FFC  0E02               	movlw	high rx_operation@opcode
  1943  000FFE  20F4               	addwfc	prodh,w,c
  1944  001000  6EDA               	movwf	fsr2h,c
  1945  001002  C08B  FFDF         	movff	??_rx_operation,indf2
  1946  001006  50DF               	movf	indf2,w,c
  1947  001008  A4D8               	btfss	status,2,c
  1948  00100A  D7CF               	goto	l4727
  1949                           
  1950                           ; BSR set to: 0
  1951                           ;PIC18J27J53-killifish_light01.c: 243: }
  1952                           ;PIC18J27J53-killifish_light01.c: 244: opcode[i] = '\0';
  1953                           
  1954                           ; BSR set to: 0
  1955  00100C  0100               	movlb	0	; () banked
  1956  00100E  518D               	movf	rx_operation@i& (0+255),w,b
  1957  001010  0D01               	mullw	1
  1958  001012  0E00               	movlw	low rx_operation@opcode
  1959  001014  24F3               	addwf	prodl,w,c
  1960  001016  6ED9               	movwf	fsr2l,c
  1961  001018  0E02               	movlw	high rx_operation@opcode
  1962  00101A  20F4               	addwfc	prodh,w,c
  1963  00101C  6EDA               	movwf	fsr2h,c
  1964  00101E  0E00               	movlw	0
  1965  001020  6EDF               	movwf	indf2,c
  1966                           
  1967                           ;PIC18J27J53-killifish_light01.c: 245: cmd[cnt_char++] = ' ';
  1968  001022  0100               	movlb	0	; () banked
  1969  001024  518C               	movf	rx_operation@cnt_char& (0+255),w,b
  1970  001026  0D01               	mullw	1
  1971  001028  0E00               	movlw	low rx_operation@cmd
  1972  00102A  24F3               	addwf	prodl,w,c
  1973  00102C  6ED9               	movwf	fsr2l,c
  1974  00102E  0E01               	movlw	high rx_operation@cmd
  1975  001030  20F4               	addwfc	prodh,w,c
  1976  001032  6EDA               	movwf	fsr2h,c
  1977  001034  0E20               	movlw	32
  1978  001036  6EDF               	movwf	indf2,c
  1979                           
  1980                           ; BSR set to: 0
  1981  001038  0100               	movlb	0	; () banked
  1982  00103A  2B8C               	incf	rx_operation@cnt_char& (0+255),f,b
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;PIC18J27J53-killifish_light01.c: 246: for (i = 0; opland1[i] = ringbuf_pop(&rx_buf); i+
      +                          +) {
  1986  00103C  0E00               	movlw	0
  1987  00103E  0100               	movlb	0	; () banked
  1988  001040  6F8D               	movwf	rx_operation@i& (0+255),b
  1989  001042  D019               	goto	l4747
  1990  001044                     l4741:
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;PIC18J27J53-killifish_light01.c: 247: cmd[cnt_char++] = opcode[i];
  1994  001044  0100               	movlb	0	; () banked
  1995  001046  518D               	movf	rx_operation@i& (0+255),w,b
  1996  001048  0D01               	mullw	1
  1997  00104A  0E00               	movlw	low rx_operation@opcode
  1998  00104C  24F3               	addwf	prodl,w,c
  1999  00104E  6ED9               	movwf	fsr2l,c
  2000  001050  0E02               	movlw	high rx_operation@opcode
  2001  001052  20F4               	addwfc	prodh,w,c
  2002  001054  6EDA               	movwf	fsr2h,c
  2003  001056  0100               	movlb	0	; () banked
  2004  001058  518C               	movf	rx_operation@cnt_char& (0+255),w,b
  2005  00105A  0D01               	mullw	1
  2006  00105C  0E00               	movlw	low rx_operation@cmd
  2007  00105E  24F3               	addwf	prodl,w,c
  2008  001060  6EE1               	movwf	fsr1l,c
  2009  001062  0E01               	movlw	high rx_operation@cmd
  2010  001064  20F4               	addwfc	prodh,w,c
  2011  001066  6EE2               	movwf	fsr1h,c
  2012  001068  CFDF FFE7          	movff	indf2,indf1
  2013                           
  2014                           ; BSR set to: 0
  2015  00106C  0100               	movlb	0	; () banked
  2016  00106E  2B8C               	incf	rx_operation@cnt_char& (0+255),f,b
  2017                           
  2018                           ; BSR set to: 0
  2019  001070  0100               	movlb	0	; () banked
  2020  001072  2B8D               	incf	rx_operation@i& (0+255),f,b
  2021  001074  D000               	goto	l4747
  2022  001076                     l4747:
  2023                           
  2024                           ; BSR set to: 0
  2025  001076  0E26               	movlw	low _rx_buf
  2026  001078  0100               	movlb	0	; () banked
  2027  00107A  6F64               	movwf	ringbuf_pop@rb& (0+255),b
  2028  00107C  0E00               	movlw	high _rx_buf
  2029  00107E  0100               	movlb	0	; () banked
  2030  001080  6F65               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2031  001082  EC6F  F015         	call	_ringbuf_pop	;wreg free
  2032  001086  0100               	movlb	0	; () banked
  2033  001088  6F8B               	movwf	??_rx_operation& (0+255),b
  2034  00108A  0100               	movlb	0	; () banked
  2035  00108C  518D               	movf	rx_operation@i& (0+255),w,b
  2036  00108E  0D01               	mullw	1
  2037  001090  0E00               	movlw	low rx_operation@opland1
  2038  001092  24F3               	addwf	prodl,w,c
  2039  001094  6ED9               	movwf	fsr2l,c
  2040  001096  0E04               	movlw	high rx_operation@opland1
  2041  001098  20F4               	addwfc	prodh,w,c
  2042  00109A  6EDA               	movwf	fsr2h,c
  2043  00109C  C08B  FFDF         	movff	??_rx_operation,indf2
  2044  0010A0  50DF               	movf	indf2,w,c
  2045  0010A2  A4D8               	btfss	status,2,c
  2046  0010A4  D7CF               	goto	l4741
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;PIC18J27J53-killifish_light01.c: 248: }
  2050                           ;PIC18J27J53-killifish_light01.c: 249: opland1[i] = '\0';
  2051                           
  2052                           ; BSR set to: 0
  2053  0010A6  0100               	movlb	0	; () banked
  2054  0010A8  518D               	movf	rx_operation@i& (0+255),w,b
  2055  0010AA  0D01               	mullw	1
  2056  0010AC  0E00               	movlw	low rx_operation@opland1
  2057  0010AE  24F3               	addwf	prodl,w,c
  2058  0010B0  6ED9               	movwf	fsr2l,c
  2059  0010B2  0E04               	movlw	high rx_operation@opland1
  2060  0010B4  20F4               	addwfc	prodh,w,c
  2061  0010B6  6EDA               	movwf	fsr2h,c
  2062  0010B8  0E00               	movlw	0
  2063  0010BA  6EDF               	movwf	indf2,c
  2064                           
  2065                           ;PIC18J27J53-killifish_light01.c: 250: cmd[cnt_char++] = ' ';
  2066  0010BC  0100               	movlb	0	; () banked
  2067  0010BE  518C               	movf	rx_operation@cnt_char& (0+255),w,b
  2068  0010C0  0D01               	mullw	1
  2069  0010C2  0E00               	movlw	low rx_operation@cmd
  2070  0010C4  24F3               	addwf	prodl,w,c
  2071  0010C6  6ED9               	movwf	fsr2l,c
  2072  0010C8  0E01               	movlw	high rx_operation@cmd
  2073  0010CA  20F4               	addwfc	prodh,w,c
  2074  0010CC  6EDA               	movwf	fsr2h,c
  2075  0010CE  0E20               	movlw	32
  2076  0010D0  6EDF               	movwf	indf2,c
  2077                           
  2078                           ; BSR set to: 0
  2079  0010D2  0100               	movlb	0	; () banked
  2080  0010D4  2B8C               	incf	rx_operation@cnt_char& (0+255),f,b
  2081                           
  2082                           ; BSR set to: 0
  2083                           ;PIC18J27J53-killifish_light01.c: 251: for (i = 0; opland2[i] = ringbuf_pop(&rx_buf); i+
      +                          +) {
  2084  0010D6  0E00               	movlw	0
  2085  0010D8  0100               	movlb	0	; () banked
  2086  0010DA  6F8D               	movwf	rx_operation@i& (0+255),b
  2087  0010DC  D019               	goto	l4761
  2088  0010DE                     l4755:
  2089                           
  2090                           ; BSR set to: 0
  2091                           ;PIC18J27J53-killifish_light01.c: 252: cmd[cnt_char++] = opcode[i];
  2092  0010DE  0100               	movlb	0	; () banked
  2093  0010E0  518D               	movf	rx_operation@i& (0+255),w,b
  2094  0010E2  0D01               	mullw	1
  2095  0010E4  0E00               	movlw	low rx_operation@opcode
  2096  0010E6  24F3               	addwf	prodl,w,c
  2097  0010E8  6ED9               	movwf	fsr2l,c
  2098  0010EA  0E02               	movlw	high rx_operation@opcode
  2099  0010EC  20F4               	addwfc	prodh,w,c
  2100  0010EE  6EDA               	movwf	fsr2h,c
  2101  0010F0  0100               	movlb	0	; () banked
  2102  0010F2  518C               	movf	rx_operation@cnt_char& (0+255),w,b
  2103  0010F4  0D01               	mullw	1
  2104  0010F6  0E00               	movlw	low rx_operation@cmd
  2105  0010F8  24F3               	addwf	prodl,w,c
  2106  0010FA  6EE1               	movwf	fsr1l,c
  2107  0010FC  0E01               	movlw	high rx_operation@cmd
  2108  0010FE  20F4               	addwfc	prodh,w,c
  2109  001100  6EE2               	movwf	fsr1h,c
  2110  001102  CFDF FFE7          	movff	indf2,indf1
  2111                           
  2112                           ; BSR set to: 0
  2113  001106  0100               	movlb	0	; () banked
  2114  001108  2B8C               	incf	rx_operation@cnt_char& (0+255),f,b
  2115                           
  2116                           ; BSR set to: 0
  2117  00110A  0100               	movlb	0	; () banked
  2118  00110C  2B8D               	incf	rx_operation@i& (0+255),f,b
  2119  00110E  D000               	goto	l4761
  2120  001110                     l4761:
  2121                           
  2122                           ; BSR set to: 0
  2123  001110  0E26               	movlw	low _rx_buf
  2124  001112  0100               	movlb	0	; () banked
  2125  001114  6F64               	movwf	ringbuf_pop@rb& (0+255),b
  2126  001116  0E00               	movlw	high _rx_buf
  2127  001118  0100               	movlb	0	; () banked
  2128  00111A  6F65               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2129  00111C  EC6F  F015         	call	_ringbuf_pop	;wreg free
  2130  001120  0100               	movlb	0	; () banked
  2131  001122  6F8B               	movwf	??_rx_operation& (0+255),b
  2132  001124  0100               	movlb	0	; () banked
  2133  001126  518D               	movf	rx_operation@i& (0+255),w,b
  2134  001128  0D01               	mullw	1
  2135  00112A  0E00               	movlw	low rx_operation@opland2
  2136  00112C  24F3               	addwf	prodl,w,c
  2137  00112E  6ED9               	movwf	fsr2l,c
  2138  001130  0E03               	movlw	high rx_operation@opland2
  2139  001132  20F4               	addwfc	prodh,w,c
  2140  001134  6EDA               	movwf	fsr2h,c
  2141  001136  C08B  FFDF         	movff	??_rx_operation,indf2
  2142  00113A  50DF               	movf	indf2,w,c
  2143  00113C  A4D8               	btfss	status,2,c
  2144  00113E  D7CF               	goto	l4755
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;PIC18J27J53-killifish_light01.c: 253: }
  2148                           ;PIC18J27J53-killifish_light01.c: 254: opland2[i] = '\0';
  2149                           
  2150                           ; BSR set to: 0
  2151  001140  0100               	movlb	0	; () banked
  2152  001142  518D               	movf	rx_operation@i& (0+255),w,b
  2153  001144  0D01               	mullw	1
  2154  001146  0E00               	movlw	low rx_operation@opland2
  2155  001148  24F3               	addwf	prodl,w,c
  2156  00114A  6ED9               	movwf	fsr2l,c
  2157  00114C  0E03               	movlw	high rx_operation@opland2
  2158  00114E  20F4               	addwfc	prodh,w,c
  2159  001150  6EDA               	movwf	fsr2h,c
  2160  001152  0E00               	movlw	0
  2161  001154  6EDF               	movwf	indf2,c
  2162                           
  2163                           ;PIC18J27J53-killifish_light01.c: 255: cmd[cnt_char] = '\0';
  2164  001156  0100               	movlb	0	; () banked
  2165  001158  518C               	movf	rx_operation@cnt_char& (0+255),w,b
  2166  00115A  0D01               	mullw	1
  2167  00115C  0E00               	movlw	low rx_operation@cmd
  2168  00115E  24F3               	addwf	prodl,w,c
  2169  001160  6ED9               	movwf	fsr2l,c
  2170  001162  0E01               	movlw	high rx_operation@cmd
  2171  001164  20F4               	addwfc	prodh,w,c
  2172  001166  6EDA               	movwf	fsr2h,c
  2173  001168  0E00               	movlw	0
  2174  00116A  6EDF               	movwf	indf2,c
  2175                           
  2176                           ; BSR set to: 0
  2177                           ;PIC18J27J53-killifish_light01.c: 257: if (!strcmp(opcode, "ts")) {
  2178  00116C  0E00               	movlw	low rx_operation@opcode
  2179  00116E  0100               	movlb	0	; () banked
  2180  001170  6F60               	movwf	strcmp@str1& (0+255),b
  2181  001172  0E02               	movlw	high rx_operation@opcode
  2182  001174  0100               	movlb	0	; () banked
  2183  001176  6F61               	movwf	(strcmp@str1+1)& (0+255),b
  2184  001178  0E79               	movlw	low STR_26
  2185  00117A  0100               	movlb	0	; () banked
  2186  00117C  6F62               	movwf	strcmp@str2& (0+255),b
  2187  00117E  0E0F               	movlw	high STR_26
  2188  001180  0100               	movlb	0	; () banked
  2189  001182  6F63               	movwf	(strcmp@str2+1)& (0+255),b
  2190  001184  EC19  F015         	call	_strcmp	;wreg free
  2191  001188  0900               	iorlw	0
  2192  00118A  A4D8               	btfss	status,2,c
  2193  00118C  D0B9               	goto	l4793
  2194                           
  2195                           ;PIC18J27J53-killifish_light01.c: 258: if (!strcmp(opland1, "y")) {
  2196  00118E  0E00               	movlw	low rx_operation@opland1
  2197  001190  0100               	movlb	0	; () banked
  2198  001192  6F60               	movwf	strcmp@str1& (0+255),b
  2199  001194  0E04               	movlw	high rx_operation@opland1
  2200  001196  0100               	movlb	0	; () banked
  2201  001198  6F61               	movwf	(strcmp@str1+1)& (0+255),b
  2202  00119A  0E2A               	movlw	low (STR_9+5)
  2203  00119C  0100               	movlb	0	; () banked
  2204  00119E  6F62               	movwf	strcmp@str2& (0+255),b
  2205  0011A0  0E0F               	movlw	high (STR_9+5)
  2206  0011A2  0100               	movlb	0	; () banked
  2207  0011A4  6F63               	movwf	(strcmp@str2+1)& (0+255),b
  2208  0011A6  EC19  F015         	call	_strcmp	;wreg free
  2209  0011AA  0900               	iorlw	0
  2210  0011AC  A4D8               	btfss	status,2,c
  2211  0011AE  D00B               	goto	l4771
  2212                           
  2213                           ;PIC18J27J53-killifish_light01.c: 259: caltime_now.YY = atoi(opland2);
  2214  0011B0  0E00               	movlw	low rx_operation@opland2
  2215  0011B2  0100               	movlb	0	; () banked
  2216  0011B4  6F60               	movwf	atoi@str& (0+255),b
  2217  0011B6  0E03               	movlw	high rx_operation@opland2
  2218  0011B8  0100               	movlb	0	; () banked
  2219  0011BA  6F61               	movwf	(atoi@str+1)& (0+255),b
  2220  0011BC  EC07  F019         	call	_atoi	;wreg free
  2221  0011C0  0100               	movlb	0	; () banked
  2222  0011C2  6FE9               	movwf	(_caltime_now+6)& (0+255),b
  2223  0011C4  D000               	goto	l4771
  2224  0011C6                     l4771:
  2225                           
  2226                           ;PIC18J27J53-killifish_light01.c: 260: }
  2227                           ;PIC18J27J53-killifish_light01.c: 261: if (!strcmp(opland1, "M")) {
  2228  0011C6  0E00               	movlw	low rx_operation@opland1
  2229  0011C8  0100               	movlb	0	; () banked
  2230  0011CA  6F60               	movwf	strcmp@str1& (0+255),b
  2231  0011CC  0E04               	movlw	high rx_operation@opland1
  2232  0011CE  0100               	movlb	0	; () banked
  2233  0011D0  6F61               	movwf	(strcmp@str1+1)& (0+255),b
  2234  0011D2  0E84               	movlw	low STR_28
  2235  0011D4  0100               	movlb	0	; () banked
  2236  0011D6  6F62               	movwf	strcmp@str2& (0+255),b
  2237  0011D8  0E0F               	movlw	high STR_28
  2238  0011DA  0100               	movlb	0	; () banked
  2239  0011DC  6F63               	movwf	(strcmp@str2+1)& (0+255),b
  2240  0011DE  EC19  F015         	call	_strcmp	;wreg free
  2241  0011E2  0900               	iorlw	0
  2242  0011E4  A4D8               	btfss	status,2,c
  2243  0011E6  D00B               	goto	l4775
  2244                           
  2245                           ;PIC18J27J53-killifish_light01.c: 262: caltime_now.MM = atoi(opland2);
  2246  0011E8  0E00               	movlw	low rx_operation@opland2
  2247  0011EA  0100               	movlb	0	; () banked
  2248  0011EC  6F60               	movwf	atoi@str& (0+255),b
  2249  0011EE  0E03               	movlw	high rx_operation@opland2
  2250  0011F0  0100               	movlb	0	; () banked
  2251  0011F2  6F61               	movwf	(atoi@str+1)& (0+255),b
  2252  0011F4  EC07  F019         	call	_atoi	;wreg free
  2253  0011F8  0100               	movlb	0	; () banked
  2254  0011FA  6FE8               	movwf	(_caltime_now+5)& (0+255),b
  2255  0011FC  D000               	goto	l4775
  2256  0011FE                     l4775:
  2257                           
  2258                           ;PIC18J27J53-killifish_light01.c: 263: }
  2259                           ;PIC18J27J53-killifish_light01.c: 264: if (!strcmp(opland1, "d")) {
  2260  0011FE  0E00               	movlw	low rx_operation@opland1
  2261  001200  0100               	movlb	0	; () banked
  2262  001202  6F60               	movwf	strcmp@str1& (0+255),b
  2263  001204  0E04               	movlw	high rx_operation@opland1
  2264  001206  0100               	movlb	0	; () banked
  2265  001208  6F61               	movwf	(strcmp@str1+1)& (0+255),b
  2266  00120A  0E8A               	movlw	low STR_29
  2267  00120C  0100               	movlb	0	; () banked
  2268  00120E  6F62               	movwf	strcmp@str2& (0+255),b
  2269  001210  0E0F               	movlw	high STR_29
  2270  001212  0100               	movlb	0	; () banked
  2271  001214  6F63               	movwf	(strcmp@str2+1)& (0+255),b
  2272  001216  EC19  F015         	call	_strcmp	;wreg free
  2273  00121A  0900               	iorlw	0
  2274  00121C  A4D8               	btfss	status,2,c
  2275  00121E  D00B               	goto	l4779
  2276                           
  2277                           ;PIC18J27J53-killifish_light01.c: 265: caltime_now.DD = atoi(opland2);
  2278  001220  0E00               	movlw	low rx_operation@opland2
  2279  001222  0100               	movlb	0	; () banked
  2280  001224  6F60               	movwf	atoi@str& (0+255),b
  2281  001226  0E03               	movlw	high rx_operation@opland2
  2282  001228  0100               	movlb	0	; () banked
  2283  00122A  6F61               	movwf	(atoi@str+1)& (0+255),b
  2284  00122C  EC07  F019         	call	_atoi	;wreg free
  2285  001230  0100               	movlb	0	; () banked
  2286  001232  6FE7               	movwf	(_caltime_now+4)& (0+255),b
  2287  001234  D000               	goto	l4779
  2288  001236                     l4779:
  2289                           
  2290                           ;PIC18J27J53-killifish_light01.c: 266: }
  2291                           ;PIC18J27J53-killifish_light01.c: 267: if (!strcmp(opland1, "h")) {
  2292  001236  0E00               	movlw	low rx_operation@opland1
  2293  001238  0100               	movlb	0	; () banked
  2294  00123A  6F60               	movwf	strcmp@str1& (0+255),b
  2295  00123C  0E04               	movlw	high rx_operation@opland1
  2296  00123E  0100               	movlb	0	; () banked
  2297  001240  6F61               	movwf	(strcmp@str1+1)& (0+255),b
  2298  001242  0E8C               	movlw	low STR_30
  2299  001244  0100               	movlb	0	; () banked
  2300  001246  6F62               	movwf	strcmp@str2& (0+255),b
  2301  001248  0E0F               	movlw	high STR_30
  2302  00124A  0100               	movlb	0	; () banked
  2303  00124C  6F63               	movwf	(strcmp@str2+1)& (0+255),b
  2304  00124E  EC19  F015         	call	_strcmp	;wreg free
  2305  001252  0900               	iorlw	0
  2306  001254  A4D8               	btfss	status,2,c
  2307  001256  D00B               	goto	l4783
  2308                           
  2309                           ;PIC18J27J53-killifish_light01.c: 268: caltime_now.hh = atoi(opland2);
  2310  001258  0E00               	movlw	low rx_operation@opland2
  2311  00125A  0100               	movlb	0	; () banked
  2312  00125C  6F60               	movwf	atoi@str& (0+255),b
  2313  00125E  0E03               	movlw	high rx_operation@opland2
  2314  001260  0100               	movlb	0	; () banked
  2315  001262  6F61               	movwf	(atoi@str+1)& (0+255),b
  2316  001264  EC07  F019         	call	_atoi	;wreg free
  2317  001268  0100               	movlb	0	; () banked
  2318  00126A  6FE5               	movwf	(_caltime_now+2)& (0+255),b
  2319  00126C  D000               	goto	l4783
  2320  00126E                     l4783:
  2321                           
  2322                           ;PIC18J27J53-killifish_light01.c: 269: }
  2323                           ;PIC18J27J53-killifish_light01.c: 270: if (!strcmp(opland1, "m")) {
  2324  00126E  0E00               	movlw	low rx_operation@opland1
  2325  001270  0100               	movlb	0	; () banked
  2326  001272  6F60               	movwf	strcmp@str1& (0+255),b
  2327  001274  0E04               	movlw	high rx_operation@opland1
  2328  001276  0100               	movlb	0	; () banked
  2329  001278  6F61               	movwf	(strcmp@str1+1)& (0+255),b
  2330  00127A  0E8E               	movlw	low STR_31
  2331  00127C  0100               	movlb	0	; () banked
  2332  00127E  6F62               	movwf	strcmp@str2& (0+255),b
  2333  001280  0E0F               	movlw	high STR_31
  2334  001282  0100               	movlb	0	; () banked
  2335  001284  6F63               	movwf	(strcmp@str2+1)& (0+255),b
  2336  001286  EC19  F015         	call	_strcmp	;wreg free
  2337  00128A  0900               	iorlw	0
  2338  00128C  A4D8               	btfss	status,2,c
  2339  00128E  D00B               	goto	l4787
  2340                           
  2341                           ;PIC18J27J53-killifish_light01.c: 271: caltime_now.mm = atoi(opland2);
  2342  001290  0E00               	movlw	low rx_operation@opland2
  2343  001292  0100               	movlb	0	; () banked
  2344  001294  6F60               	movwf	atoi@str& (0+255),b
  2345  001296  0E03               	movlw	high rx_operation@opland2
  2346  001298  0100               	movlb	0	; () banked
  2347  00129A  6F61               	movwf	(atoi@str+1)& (0+255),b
  2348  00129C  EC07  F019         	call	_atoi	;wreg free
  2349  0012A0  0100               	movlb	0	; () banked
  2350  0012A2  6FE4               	movwf	(_caltime_now+1)& (0+255),b
  2351  0012A4  D000               	goto	l4787
  2352  0012A6                     l4787:
  2353                           
  2354                           ;PIC18J27J53-killifish_light01.c: 272: }
  2355                           ;PIC18J27J53-killifish_light01.c: 273: if (!strcmp(opland1, "s")) {
  2356  0012A6  0E00               	movlw	low rx_operation@opland1
  2357  0012A8  0100               	movlb	0	; () banked
  2358  0012AA  6F60               	movwf	strcmp@str1& (0+255),b
  2359  0012AC  0E04               	movlw	high rx_operation@opland1
  2360  0012AE  0100               	movlb	0	; () banked
  2361  0012B0  6F61               	movwf	(strcmp@str1+1)& (0+255),b
  2362  0012B2  0E7A               	movlw	low (STR_26+1)
  2363  0012B4  0100               	movlb	0	; () banked
  2364  0012B6  6F62               	movwf	strcmp@str2& (0+255),b
  2365  0012B8  0E0F               	movlw	high (STR_26+1)
  2366  0012BA  0100               	movlb	0	; () banked
  2367  0012BC  6F63               	movwf	(strcmp@str2+1)& (0+255),b
  2368  0012BE  EC19  F015         	call	_strcmp	;wreg free
  2369  0012C2  0900               	iorlw	0
  2370  0012C4  A4D8               	btfss	status,2,c
  2371  0012C6  D00A               	goto	l568
  2372                           
  2373                           ;PIC18J27J53-killifish_light01.c: 274: caltime_now.ss = atoi(opland2);
  2374  0012C8  0E00               	movlw	low rx_operation@opland2
  2375  0012CA  0100               	movlb	0	; () banked
  2376  0012CC  6F60               	movwf	atoi@str& (0+255),b
  2377  0012CE  0E03               	movlw	high rx_operation@opland2
  2378  0012D0  0100               	movlb	0	; () banked
  2379  0012D2  6F61               	movwf	(atoi@str+1)& (0+255),b
  2380  0012D4  EC07  F019         	call	_atoi	;wreg free
  2381  0012D8  0100               	movlb	0	; () banked
  2382  0012DA  6FE3               	movwf	_caltime_now& (0+255),b
  2383  0012DC                     l568:
  2384                           
  2385                           ;PIC18J27J53-killifish_light01.c: 275: }
  2386                           ;PIC18J27J53-killifish_light01.c: 276: RTCC_from_caltime(&caltime_now, &epoch_now);
  2387  0012DC  0EE3               	movlw	low _caltime_now
  2388  0012DE  0100               	movlb	0	; () banked
  2389  0012E0  6F87               	movwf	RTCC_from_caltime@ct& (0+255),b
  2390  0012E2  0E00               	movlw	high _caltime_now
  2391  0012E4  0100               	movlb	0	; () banked
  2392  0012E6  6F88               	movwf	(RTCC_from_caltime@ct+1)& (0+255),b
  2393  0012E8  0EEA               	movlw	low _epoch_now
  2394  0012EA  0100               	movlb	0	; () banked
  2395  0012EC  6F89               	movwf	RTCC_from_caltime@ep& (0+255),b
  2396  0012EE  0E00               	movlw	high _epoch_now
  2397  0012F0  0100               	movlb	0	; () banked
  2398  0012F2  6F8A               	movwf	(RTCC_from_caltime@ep+1)& (0+255),b
  2399  0012F4  ECA5  F01A         	call	_RTCC_from_caltime	;wreg free
  2400                           
  2401                           ;PIC18J27J53-killifish_light01.c: 277: time_change_flag = 1;
  2402  0012F8  0E01               	movlw	1
  2403  0012FA  0100               	movlb	0	; () banked
  2404  0012FC  6FE1               	movwf	_time_change_flag& (0+255),b
  2405  0012FE  D000               	goto	l4793
  2406  001300                     l4793:
  2407                           
  2408                           ;PIC18J27J53-killifish_light01.c: 278: }
  2409                           ;PIC18J27J53-killifish_light01.c: 279: if (!strcmp(opcode, "set")) {
  2410  001300  0E00               	movlw	low rx_operation@opcode
  2411  001302  0100               	movlb	0	; () banked
  2412  001304  6F60               	movwf	strcmp@str1& (0+255),b
  2413  001306  0E02               	movlw	high rx_operation@opcode
  2414  001308  0100               	movlb	0	; () banked
  2415  00130A  6F61               	movwf	(strcmp@str1+1)& (0+255),b
  2416  00130C  0E69               	movlw	low STR_33
  2417  00130E  0100               	movlb	0	; () banked
  2418  001310  6F62               	movwf	strcmp@str2& (0+255),b
  2419  001312  0E0F               	movlw	high STR_33
  2420  001314  0100               	movlb	0	; () banked
  2421  001316  6F63               	movwf	(strcmp@str2+1)& (0+255),b
  2422  001318  EC19  F015         	call	_strcmp	;wreg free
  2423  00131C  0900               	iorlw	0
  2424  00131E  A4D8               	btfss	status,2,c
  2425  001320  0012               	return	
  2426                           
  2427                           ;PIC18J27J53-killifish_light01.c: 280: if (!strcmp(opland1, "sync")) {
  2428  001322  0E00               	movlw	low rx_operation@opland1
  2429  001324  0100               	movlb	0	; () banked
  2430  001326  6F60               	movwf	strcmp@str1& (0+255),b
  2431  001328  0E04               	movlw	high rx_operation@opland1
  2432  00132A  0100               	movlb	0	; () banked
  2433  00132C  6F61               	movwf	(strcmp@str1+1)& (0+255),b
  2434  00132E  0E40               	movlw	low STR_34
  2435  001330  0100               	movlb	0	; () banked
  2436  001332  6F62               	movwf	strcmp@str2& (0+255),b
  2437  001334  0E0F               	movlw	high STR_34
  2438  001336  0100               	movlb	0	; () banked
  2439  001338  6F63               	movwf	(strcmp@str2+1)& (0+255),b
  2440  00133A  EC19  F015         	call	_strcmp	;wreg free
  2441  00133E  0900               	iorlw	0
  2442  001340  A4D8               	btfss	status,2,c
  2443  001342  D004               	goto	l4799
  2444                           
  2445                           ;PIC18J27J53-killifish_light01.c: 281: light_mode = TIME_SYNC_mode;
  2446  001344  0E00               	movlw	0
  2447  001346  0100               	movlb	0	; () banked
  2448  001348  6FE0               	movwf	_light_mode& (0+255),b
  2449  00134A  D000               	goto	l4799
  2450  00134C                     l4799:
  2451                           
  2452                           ;PIC18J27J53-killifish_light01.c: 282: }
  2453                           ;PIC18J27J53-killifish_light01.c: 283: if (!strcmp(opland1, "adc")) {
  2454  00134C  0E00               	movlw	low rx_operation@opland1
  2455  00134E  0100               	movlb	0	; () banked
  2456  001350  6F60               	movwf	strcmp@str1& (0+255),b
  2457  001352  0E04               	movlw	high rx_operation@opland1
  2458  001354  0100               	movlb	0	; () banked
  2459  001356  6F61               	movwf	(strcmp@str1+1)& (0+255),b
  2460  001358  0E65               	movlw	low STR_35
  2461  00135A  0100               	movlb	0	; () banked
  2462  00135C  6F62               	movwf	strcmp@str2& (0+255),b
  2463  00135E  0E0F               	movlw	high STR_35
  2464  001360  0100               	movlb	0	; () banked
  2465  001362  6F63               	movwf	(strcmp@str2+1)& (0+255),b
  2466  001364  EC19  F015         	call	_strcmp	;wreg free
  2467  001368  0900               	iorlw	0
  2468  00136A  A4D8               	btfss	status,2,c
  2469  00136C  D004               	goto	l4803
  2470                           
  2471                           ;PIC18J27J53-killifish_light01.c: 284: light_mode = ADC_mode;
  2472  00136E  0E01               	movlw	1
  2473  001370  0100               	movlb	0	; () banked
  2474  001372  6FE0               	movwf	_light_mode& (0+255),b
  2475  001374  D000               	goto	l4803
  2476  001376                     l4803:
  2477                           
  2478                           ;PIC18J27J53-killifish_light01.c: 285: }
  2479                           ;PIC18J27J53-killifish_light01.c: 286: if (!strcmp(opland1, "R")) {
  2480  001376  0E00               	movlw	low rx_operation@opland1
  2481  001378  0100               	movlb	0	; () banked
  2482  00137A  6F60               	movwf	strcmp@str1& (0+255),b
  2483  00137C  0E04               	movlw	high rx_operation@opland1
  2484  00137E  0100               	movlb	0	; () banked
  2485  001380  6F61               	movwf	(strcmp@str1+1)& (0+255),b
  2486  001382  0E86               	movlw	low STR_36
  2487  001384  0100               	movlb	0	; () banked
  2488  001386  6F62               	movwf	strcmp@str2& (0+255),b
  2489  001388  0E0F               	movlw	high STR_36
  2490  00138A  0100               	movlb	0	; () banked
  2491  00138C  6F63               	movwf	(strcmp@str2+1)& (0+255),b
  2492  00138E  EC19  F015         	call	_strcmp	;wreg free
  2493  001392  0900               	iorlw	0
  2494  001394  A4D8               	btfss	status,2,c
  2495  001396  D016               	goto	l4809
  2496                           
  2497                           ;PIC18J27J53-killifish_light01.c: 287: light_mode = COMMAND_mode;
  2498  001398  0E02               	movlw	2
  2499  00139A  0100               	movlb	0	; () banked
  2500  00139C  6FE0               	movwf	_light_mode& (0+255),b
  2501                           
  2502                           ; BSR set to: 0
  2503                           ;PIC18J27J53-killifish_light01.c: 288: PWM_set(0, atoi(opland2));
  2504  00139E  0E00               	movlw	low rx_operation@opland2
  2505  0013A0  0100               	movlb	0	; () banked
  2506  0013A2  6F60               	movwf	atoi@str& (0+255),b
  2507  0013A4  0E03               	movlw	high rx_operation@opland2
  2508  0013A6  0100               	movlb	0	; () banked
  2509  0013A8  6F61               	movwf	(atoi@str+1)& (0+255),b
  2510  0013AA  EC07  F019         	call	_atoi	;wreg free
  2511  0013AE  0100               	movlb	0	; () banked
  2512  0013B0  6F8B               	movwf	??_rx_operation& (0+255),b
  2513  0013B2  0100               	movlb	0	; () banked
  2514  0013B4  518B               	movf	??_rx_operation& (0+255),w,b
  2515  0013B6  0100               	movlb	0	; () banked
  2516  0013B8  6F6D               	movwf	PWM_set@value& (0+255),b
  2517  0013BA  6B6E               	clrf	(PWM_set@value+1)& (0+255),b
  2518  0013BC  0E00               	movlw	0
  2519  0013BE  EC7F  F012         	call	_PWM_set
  2520  0013C2  D000               	goto	l4809
  2521  0013C4                     l4809:
  2522                           
  2523                           ;PIC18J27J53-killifish_light01.c: 289: }
  2524                           ;PIC18J27J53-killifish_light01.c: 290: if (!strcmp(opland1, "G")) {
  2525  0013C4  0E00               	movlw	low rx_operation@opland1
  2526  0013C6  0100               	movlb	0	; () banked
  2527  0013C8  6F60               	movwf	strcmp@str1& (0+255),b
  2528  0013CA  0E04               	movlw	high rx_operation@opland1
  2529  0013CC  0100               	movlb	0	; () banked
  2530  0013CE  6F61               	movwf	(strcmp@str1+1)& (0+255),b
  2531  0013D0  0E82               	movlw	low STR_37
  2532  0013D2  0100               	movlb	0	; () banked
  2533  0013D4  6F62               	movwf	strcmp@str2& (0+255),b
  2534  0013D6  0E0F               	movlw	high STR_37
  2535  0013D8  0100               	movlb	0	; () banked
  2536  0013DA  6F63               	movwf	(strcmp@str2+1)& (0+255),b
  2537  0013DC  EC19  F015         	call	_strcmp	;wreg free
  2538  0013E0  0900               	iorlw	0
  2539  0013E2  A4D8               	btfss	status,2,c
  2540  0013E4  D016               	goto	l4815
  2541                           
  2542                           ;PIC18J27J53-killifish_light01.c: 291: light_mode = COMMAND_mode;
  2543  0013E6  0E02               	movlw	2
  2544  0013E8  0100               	movlb	0	; () banked
  2545  0013EA  6FE0               	movwf	_light_mode& (0+255),b
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;PIC18J27J53-killifish_light01.c: 292: PWM_set(1, atoi(opland2));
  2549  0013EC  0E00               	movlw	low rx_operation@opland2
  2550  0013EE  0100               	movlb	0	; () banked
  2551  0013F0  6F60               	movwf	atoi@str& (0+255),b
  2552  0013F2  0E03               	movlw	high rx_operation@opland2
  2553  0013F4  0100               	movlb	0	; () banked
  2554  0013F6  6F61               	movwf	(atoi@str+1)& (0+255),b
  2555  0013F8  EC07  F019         	call	_atoi	;wreg free
  2556  0013FC  0100               	movlb	0	; () banked
  2557  0013FE  6F8B               	movwf	??_rx_operation& (0+255),b
  2558  001400  0100               	movlb	0	; () banked
  2559  001402  518B               	movf	??_rx_operation& (0+255),w,b
  2560  001404  0100               	movlb	0	; () banked
  2561  001406  6F6D               	movwf	PWM_set@value& (0+255),b
  2562  001408  6B6E               	clrf	(PWM_set@value+1)& (0+255),b
  2563  00140A  0E01               	movlw	1
  2564  00140C  EC7F  F012         	call	_PWM_set
  2565  001410  D000               	goto	l4815
  2566  001412                     l4815:
  2567                           
  2568                           ;PIC18J27J53-killifish_light01.c: 293: }
  2569                           ;PIC18J27J53-killifish_light01.c: 294: if (!strcmp(opland1, "B")) {
  2570  001412  0E00               	movlw	low rx_operation@opland1
  2571  001414  0100               	movlb	0	; () banked
  2572  001416  6F60               	movwf	strcmp@str1& (0+255),b
  2573  001418  0E04               	movlw	high rx_operation@opland1
  2574  00141A  0100               	movlb	0	; () banked
  2575  00141C  6F61               	movwf	(strcmp@str1+1)& (0+255),b
  2576  00141E  0E80               	movlw	low STR_38
  2577  001420  0100               	movlb	0	; () banked
  2578  001422  6F62               	movwf	strcmp@str2& (0+255),b
  2579  001424  0E0F               	movlw	high STR_38
  2580  001426  0100               	movlb	0	; () banked
  2581  001428  6F63               	movwf	(strcmp@str2+1)& (0+255),b
  2582  00142A  EC19  F015         	call	_strcmp	;wreg free
  2583  00142E  0900               	iorlw	0
  2584  001430  A4D8               	btfss	status,2,c
  2585  001432  D016               	goto	l4821
  2586                           
  2587                           ;PIC18J27J53-killifish_light01.c: 295: light_mode = COMMAND_mode;
  2588  001434  0E02               	movlw	2
  2589  001436  0100               	movlb	0	; () banked
  2590  001438  6FE0               	movwf	_light_mode& (0+255),b
  2591                           
  2592                           ; BSR set to: 0
  2593                           ;PIC18J27J53-killifish_light01.c: 296: PWM_set(2, atoi(opland2));
  2594  00143A  0E00               	movlw	low rx_operation@opland2
  2595  00143C  0100               	movlb	0	; () banked
  2596  00143E  6F60               	movwf	atoi@str& (0+255),b
  2597  001440  0E03               	movlw	high rx_operation@opland2
  2598  001442  0100               	movlb	0	; () banked
  2599  001444  6F61               	movwf	(atoi@str+1)& (0+255),b
  2600  001446  EC07  F019         	call	_atoi	;wreg free
  2601  00144A  0100               	movlb	0	; () banked
  2602  00144C  6F8B               	movwf	??_rx_operation& (0+255),b
  2603  00144E  0100               	movlb	0	; () banked
  2604  001450  518B               	movf	??_rx_operation& (0+255),w,b
  2605  001452  0100               	movlb	0	; () banked
  2606  001454  6F6D               	movwf	PWM_set@value& (0+255),b
  2607  001456  6B6E               	clrf	(PWM_set@value+1)& (0+255),b
  2608  001458  0E02               	movlw	2
  2609  00145A  EC7F  F012         	call	_PWM_set
  2610  00145E  D000               	goto	l4821
  2611  001460                     l4821:
  2612                           
  2613                           ;PIC18J27J53-killifish_light01.c: 297: }
  2614                           ;PIC18J27J53-killifish_light01.c: 298: if (!strcmp(opland1, "W")) {
  2615  001460  0E00               	movlw	low rx_operation@opland1
  2616  001462  0100               	movlb	0	; () banked
  2617  001464  6F60               	movwf	strcmp@str1& (0+255),b
  2618  001466  0E04               	movlw	high rx_operation@opland1
  2619  001468  0100               	movlb	0	; () banked
  2620  00146A  6F61               	movwf	(strcmp@str1+1)& (0+255),b
  2621  00146C  0E88               	movlw	low STR_39
  2622  00146E  0100               	movlb	0	; () banked
  2623  001470  6F62               	movwf	strcmp@str2& (0+255),b
  2624  001472  0E0F               	movlw	high STR_39
  2625  001474  0100               	movlb	0	; () banked
  2626  001476  6F63               	movwf	(strcmp@str2+1)& (0+255),b
  2627  001478  EC19  F015         	call	_strcmp	;wreg free
  2628  00147C  0900               	iorlw	0
  2629  00147E  A4D8               	btfss	status,2,c
  2630  001480  0012               	return	
  2631                           
  2632                           ;PIC18J27J53-killifish_light01.c: 299: light_mode = COMMAND_mode;
  2633  001482  0E02               	movlw	2
  2634  001484  0100               	movlb	0	; () banked
  2635  001486  6FE0               	movwf	_light_mode& (0+255),b
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;PIC18J27J53-killifish_light01.c: 300: PWM_set(3, atoi(opland2));
  2639  001488  0E00               	movlw	low rx_operation@opland2
  2640  00148A  0100               	movlb	0	; () banked
  2641  00148C  6F60               	movwf	atoi@str& (0+255),b
  2642  00148E  0E03               	movlw	high rx_operation@opland2
  2643  001490  0100               	movlb	0	; () banked
  2644  001492  6F61               	movwf	(atoi@str+1)& (0+255),b
  2645  001494  EC07  F019         	call	_atoi	;wreg free
  2646  001498  0100               	movlb	0	; () banked
  2647  00149A  6F8B               	movwf	??_rx_operation& (0+255),b
  2648  00149C  0100               	movlb	0	; () banked
  2649  00149E  518B               	movf	??_rx_operation& (0+255),w,b
  2650  0014A0  0100               	movlb	0	; () banked
  2651  0014A2  6F6D               	movwf	PWM_set@value& (0+255),b
  2652  0014A4  6B6E               	clrf	(PWM_set@value+1)& (0+255),b
  2653  0014A6  0E03               	movlw	3
  2654  0014A8  EC7F  F012         	call	_PWM_set
  2655  0014AC  0012               	return	
  2656  0014AE  0012               	return		;funcret
  2657  0014B0                     __end_of_rx_operation:
  2658                           	opt stack 0
  2659                           tblptru	equ	0xFF8
  2660                           tblptrh	equ	0xFF7
  2661                           tblptrl	equ	0xFF6
  2662                           tablat	equ	0xFF5
  2663                           prodh	equ	0xFF4
  2664                           prodl	equ	0xFF3
  2665                           intcon	equ	0xFF2
  2666                           postinc0	equ	0xFEE
  2667                           wreg	equ	0xFE8
  2668                           indf1	equ	0xFE7
  2669                           postdec1	equ	0xFE5
  2670                           fsr1h	equ	0xFE2
  2671                           fsr1l	equ	0xFE1
  2672                           indf2	equ	0xFDF
  2673                           postinc2	equ	0xFDE
  2674                           fsr2h	equ	0xFDA
  2675                           fsr2l	equ	0xFD9
  2676                           status	equ	0xFD8
  2677                           
  2678 ;; *************** function _strcmp *****************
  2679 ;; Defined at:
  2680 ;;		line 398 in file "../My_header\My_header.h"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  str1            2    0[BANK0 ] PTR const unsigned char 
  2683 ;;		 -> rx_operation@opland1(250), rx_operation@opcode(250), 
  2684 ;;  str2            2    2[BANK0 ] PTR const unsigned char 
  2685 ;;		 -> STR_39(2), STR_38(2), STR_37(2), STR_36(2), 
  2686 ;;		 -> STR_35(4), STR_34(5), STR_33(4), STR_32(2), 
  2687 ;;		 -> STR_31(2), STR_30(2), STR_29(2), STR_28(2), 
  2688 ;;		 -> STR_27(2), STR_26(3), 
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;		None
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  1    wreg      char 
  2693 ;; Registers used:
  2694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2700 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2702 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2703 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2704 ;;Total ram usage:        5 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:    5
  2707 ;; This function calls:
  2708 ;;		Nothing
  2709 ;; This function is called by:
  2710 ;;		_rx_operation
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text2
  2715  002A32                     __ptext2:
  2716                           	opt stack 0
  2717  002A32                     _strcmp:
  2718                           	opt stack 24
  2719                           
  2720                           ;My_header\My_header.h: 399: while (*str1 && *str2) {
  2721                           
  2722                           ;incstack = 0
  2723  002A32  D02D               	goto	l4413
  2724  002A34                     l4405:
  2725                           
  2726                           ;My_header\My_header.h: 400: if (*str1 != *str2)return (*str1 - *str2);
  2727  002A34  C060  FFD9         	movff	strcmp@str1,fsr2l
  2728  002A38  C061  FFDA         	movff	strcmp@str1+1,fsr2h
  2729  002A3C  50DF               	movf	indf2,w,c
  2730  002A3E  0100               	movlb	0	; () banked
  2731  002A40  6F64               	movwf	??_strcmp& (0+255),b
  2732  002A42  C062  FFF6         	movff	strcmp@str2,tblptrl
  2733  002A46  C063  FFF7         	movff	strcmp@str2+1,tblptrh
  2734  002A4A                     	if	0	;tblptru may be non-zero
  2735  002A4A                     	endif
  2736  002A4A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2737  002A4A  0E00               	movlw	low (__mediumconst shr (0+16))
  2738  002A4C  6EF8               	movwf	tblptru,c
  2739  002A4E                     	endif
  2740  002A4E  0008               	tblrd		*
  2741  002A50  50F5               	movf	tablat,w,c
  2742  002A52  0100               	movlb	0	; () banked
  2743  002A54  1964               	xorwf	??_strcmp& (0+255),w,b
  2744  002A56  B4D8               	btfsc	status,2,c
  2745  002A58  D013               	goto	l4411
  2746                           
  2747                           ; BSR set to: 0
  2748  002A5A  C060  FFD9         	movff	strcmp@str1,fsr2l
  2749  002A5E  C061  FFDA         	movff	strcmp@str1+1,fsr2h
  2750  002A62  50DF               	movf	indf2,w,c
  2751  002A64  0100               	movlb	0	; () banked
  2752  002A66  6F64               	movwf	??_strcmp& (0+255),b
  2753  002A68  C062  FFF6         	movff	strcmp@str2,tblptrl
  2754  002A6C  C063  FFF7         	movff	strcmp@str2+1,tblptrh
  2755  002A70                     	if	0	;tblptru may be non-zero
  2756  002A70                     	endif
  2757  002A70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2758  002A70  0E00               	movlw	low (__mediumconst shr (0+16))
  2759  002A72  6EF8               	movwf	tblptru,c
  2760  002A74                     	endif
  2761  002A74  0008               	tblrd		*
  2762  002A76  50F5               	movf	tablat,w,c
  2763  002A78  0800               	sublw	0
  2764  002A7A  0100               	movlb	0	; () banked
  2765  002A7C  2564               	addwf	??_strcmp& (0+255),w,b
  2766                           
  2767                           ; BSR set to: 0
  2768  002A7E  0012               	return	
  2769  002A80                     l4411:
  2770                           
  2771                           ; BSR set to: 0
  2772                           ;My_header\My_header.h: 401: str1++;
  2773  002A80  0100               	movlb	0	; () banked
  2774  002A82  4B60               	infsnz	strcmp@str1& (0+255),f,b
  2775  002A84  2B61               	incf	(strcmp@str1+1)& (0+255),f,b
  2776                           
  2777                           ;My_header\My_header.h: 402: str2++;
  2778  002A86  0100               	movlb	0	; () banked
  2779  002A88  4B62               	infsnz	strcmp@str2& (0+255),f,b
  2780  002A8A  2B63               	incf	(strcmp@str2+1)& (0+255),f,b
  2781  002A8C  D000               	goto	l4413
  2782  002A8E                     l4413:
  2783  002A8E  C060  FFD9         	movff	strcmp@str1,fsr2l
  2784  002A92  C061  FFDA         	movff	strcmp@str1+1,fsr2h
  2785  002A96  50DF               	movf	indf2,w,c
  2786  002A98  B4D8               	btfsc	status,2,c
  2787  002A9A  D00D               	goto	l4417
  2788  002A9C  C062  FFF6         	movff	strcmp@str2,tblptrl
  2789  002AA0  C063  FFF7         	movff	strcmp@str2+1,tblptrh
  2790  002AA4                     	if	0	;tblptru may be non-zero
  2791  002AA4                     	endif
  2792  002AA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2793  002AA4  0E00               	movlw	low (__mediumconst shr (0+16))
  2794  002AA6  6EF8               	movwf	tblptru,c
  2795  002AA8                     	endif
  2796  002AA8  0008               	tblrd		*
  2797  002AAA  50F5               	movf	tablat,w,c
  2798  002AAC  0900               	iorlw	0
  2799  002AAE  B4D8               	btfsc	status,2,c
  2800  002AB0  D002               	goto	l4417
  2801  002AB2  D7C0               	goto	l4405
  2802  002AB4  D000               	goto	l4417
  2803  002AB6                     l4417:
  2804                           
  2805                           ;My_header\My_header.h: 403: }
  2806                           ;My_header\My_header.h: 404: return (*str1 - *str2);
  2807  002AB6  C060  FFD9         	movff	strcmp@str1,fsr2l
  2808  002ABA  C061  FFDA         	movff	strcmp@str1+1,fsr2h
  2809  002ABE  50DF               	movf	indf2,w,c
  2810  002AC0  0100               	movlb	0	; () banked
  2811  002AC2  6F64               	movwf	??_strcmp& (0+255),b
  2812  002AC4  C062  FFF6         	movff	strcmp@str2,tblptrl
  2813  002AC8  C063  FFF7         	movff	strcmp@str2+1,tblptrh
  2814  002ACC                     	if	0	;tblptru may be non-zero
  2815  002ACC                     	endif
  2816  002ACC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2817  002ACC  0E00               	movlw	low (__mediumconst shr (0+16))
  2818  002ACE  6EF8               	movwf	tblptru,c
  2819  002AD0                     	endif
  2820  002AD0  0008               	tblrd		*
  2821  002AD2  50F5               	movf	tablat,w,c
  2822  002AD4  0800               	sublw	0
  2823  002AD6  0100               	movlb	0	; () banked
  2824  002AD8  2564               	addwf	??_strcmp& (0+255),w,b
  2825  002ADA  0012               	return	
  2826                           
  2827                           ; BSR set to: 0
  2828                           
  2829                           ; BSR set to: 0
  2830  002ADC  0012               	return		;funcret
  2831  002ADE                     __end_of_strcmp:
  2832                           	opt stack 0
  2833                           tblptru	equ	0xFF8
  2834                           tblptrh	equ	0xFF7
  2835                           tblptrl	equ	0xFF6
  2836                           tablat	equ	0xFF5
  2837                           prodh	equ	0xFF4
  2838                           prodl	equ	0xFF3
  2839                           intcon	equ	0xFF2
  2840                           postinc0	equ	0xFEE
  2841                           wreg	equ	0xFE8
  2842                           indf1	equ	0xFE7
  2843                           postdec1	equ	0xFE5
  2844                           fsr1h	equ	0xFE2
  2845                           fsr1l	equ	0xFE1
  2846                           indf2	equ	0xFDF
  2847                           postinc2	equ	0xFDE
  2848                           fsr2h	equ	0xFDA
  2849                           fsr2l	equ	0xFD9
  2850                           status	equ	0xFD8
  2851                           
  2852 ;; *************** function _ringbuf_pop *****************
  2853 ;; Defined at:
  2854 ;;		line 45 in file "../My_header\My_ringbuf.h"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  rb              2    4[BANK0 ] PTR struct ringbuf
  2857 ;;		 -> rx_buf(5), tx_buf(5), 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;  ret             1    9[BANK0 ] unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      unsigned char 
  2862 ;; Registers used:
  2863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2869 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2870 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2871 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2872 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2873 ;;Total ram usage:        6 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    6
  2876 ;; This function calls:
  2877 ;;		_ringbuf_num
  2878 ;; This function is called by:
  2879 ;;		_rx_operation
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           	psect	text3
  2884  002ADE                     __ptext3:
  2885                           	opt stack 0
  2886  002ADE                     _ringbuf_pop:
  2887                           	opt stack 23
  2888                           
  2889                           ;My_header\My_ringbuf.h: 46: if (ringbuf_num(rb)) {
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;incstack = 0
  2893  002ADE  C064  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
  2894  002AE2  C065  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  2895  002AE6  EC14  F016         	call	_ringbuf_num	;wreg free
  2896  002AEA  0900               	iorlw	0
  2897  002AEC  B4D8               	btfsc	status,2,c
  2898  002AEE  D047               	goto	l4381
  2899                           
  2900                           ;My_header\My_ringbuf.h: 47: uint8_t ret = rb->buf[rb->tail];
  2901  002AF0  0100               	movlb	0	; () banked
  2902  002AF2  EE20 F004          	lfsr	2,4
  2903  002AF6  5164               	movf	ringbuf_pop@rb& (0+255),w,b
  2904  002AF8  26D9               	addwf	fsr2l,f,c
  2905  002AFA  5165               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  2906  002AFC  22DA               	addwfc	fsr2h,f,c
  2907  002AFE  50DF               	movf	indf2,w,c
  2908  002B00  0100               	movlb	0	; () banked
  2909  002B02  6F66               	movwf	??_ringbuf_pop& (0+255),b
  2910  002B04  0100               	movlb	0	; () banked
  2911  002B06  5166               	movf	??_ringbuf_pop& (0+255),w,b
  2912  002B08  0D01               	mullw	1
  2913  002B0A  C064  FFD9         	movff	ringbuf_pop@rb,fsr2l
  2914  002B0E  C065  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  2915  002B12  CFDE F067          	movff	postinc2,??_ringbuf_pop+1
  2916  002B16  CFDD F068          	movff	postdec2,??_ringbuf_pop+2
  2917  002B1A  50F3               	movf	prodl,w,c
  2918  002B1C  0100               	movlb	0	; () banked
  2919  002B1E  2567               	addwf	(??_ringbuf_pop+1)& (0+255),w,b
  2920  002B20  6ED9               	movwf	fsr2l,c
  2921  002B22  50F4               	movf	prodh,w,c
  2922  002B24  0100               	movlb	0	; () banked
  2923  002B26  2168               	addwfc	(??_ringbuf_pop+2)& (0+255),w,b
  2924  002B28  6EDA               	movwf	fsr2h,c
  2925  002B2A  50DF               	movf	indf2,w,c
  2926  002B2C  0100               	movlb	0	; () banked
  2927  002B2E  6F69               	movwf	ringbuf_pop@ret& (0+255),b
  2928                           
  2929                           ; BSR set to: 0
  2930                           ;My_header\My_ringbuf.h: 48: rb->tail++;
  2931  002B30  0100               	movlb	0	; () banked
  2932  002B32  EE20 F004          	lfsr	2,4
  2933  002B36  5164               	movf	ringbuf_pop@rb& (0+255),w,b
  2934  002B38  26D9               	addwf	fsr2l,f,c
  2935  002B3A  5165               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  2936  002B3C  22DA               	addwfc	fsr2h,f,c
  2937  002B3E  2ADF               	incf	indf2,f,c
  2938                           
  2939                           ; BSR set to: 0
  2940                           ;My_header\My_ringbuf.h: 49: if (rb->tail >= rb->size) {
  2941  002B40  0100               	movlb	0	; () banked
  2942  002B42  EE20 F002          	lfsr	2,2
  2943  002B46  5164               	movf	ringbuf_pop@rb& (0+255),w,b
  2944  002B48  26D9               	addwf	fsr2l,f,c
  2945  002B4A  5165               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  2946  002B4C  22DA               	addwfc	fsr2h,f,c
  2947  002B4E  0100               	movlb	0	; () banked
  2948  002B50  EE10 F004          	lfsr	1,4
  2949  002B54  5164               	movf	ringbuf_pop@rb& (0+255),w,b
  2950  002B56  26E1               	addwf	fsr1l,f,c
  2951  002B58  5165               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  2952  002B5A  22E2               	addwfc	fsr1h,f,c
  2953  002B5C  50DE               	movf	postinc2,w,c
  2954  002B5E  5CE6               	subwf	postinc1,w,c
  2955  002B60  A0D8               	btfss	status,0,c
  2956  002B62  D00A               	goto	l4375
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;My_header\My_ringbuf.h: 50: rb->tail = 0;
  2960  002B64  0100               	movlb	0	; () banked
  2961  002B66  EE20 F004          	lfsr	2,4
  2962  002B6A  5164               	movf	ringbuf_pop@rb& (0+255),w,b
  2963  002B6C  26D9               	addwf	fsr2l,f,c
  2964  002B6E  5165               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  2965  002B70  22DA               	addwfc	fsr2h,f,c
  2966  002B72  0E00               	movlw	0
  2967  002B74  6EDF               	movwf	indf2,c
  2968  002B76  D000               	goto	l4375
  2969  002B78                     l4375:
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;My_header\My_ringbuf.h: 51: }
  2973                           ;My_header\My_ringbuf.h: 52: return ret;
  2974  002B78  0100               	movlb	0	; () banked
  2975  002B7A  5169               	movf	ringbuf_pop@ret& (0+255),w,b
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;My_header\My_ringbuf.h: 53: } else {
  2979                           
  2980                           ; BSR set to: 0
  2981  002B7C  0012               	return	
  2982  002B7E                     l4381:
  2983                           
  2984                           ;My_header\My_ringbuf.h: 54: return 0;
  2985  002B7E  0E00               	movlw	0
  2986  002B80  0012               	return	
  2987  002B82  0012               	return		;funcret
  2988  002B84                     __end_of_ringbuf_pop:
  2989                           	opt stack 0
  2990                           tblptru	equ	0xFF8
  2991                           tblptrh	equ	0xFF7
  2992                           tblptrl	equ	0xFF6
  2993                           tablat	equ	0xFF5
  2994                           prodh	equ	0xFF4
  2995                           prodl	equ	0xFF3
  2996                           intcon	equ	0xFF2
  2997                           postinc0	equ	0xFEE
  2998                           wreg	equ	0xFE8
  2999                           indf1	equ	0xFE7
  3000                           postinc1	equ	0xFE6
  3001                           postdec1	equ	0xFE5
  3002                           fsr1h	equ	0xFE2
  3003                           fsr1l	equ	0xFE1
  3004                           indf2	equ	0xFDF
  3005                           postinc2	equ	0xFDE
  3006                           postdec2	equ	0xFDD
  3007                           fsr2h	equ	0xFDA
  3008                           fsr2l	equ	0xFD9
  3009                           status	equ	0xFD8
  3010                           
  3011 ;; *************** function _atoi *****************
  3012 ;; Defined at:
  3013 ;;		line 386 in file "../My_header\My_header.h"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  str             2    0[BANK0 ] PTR const unsigned char 
  3016 ;;		 -> rx_operation@opland2(250), 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  ret             1    3[BANK0 ] unsigned char 
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      unsigned char 
  3021 ;; Registers used:
  3022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3028 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3029 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3030 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3031 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3032 ;;Total ram usage:        4 bytes
  3033 ;; Hardware stack levels used:    1
  3034 ;; Hardware stack levels required when called:    5
  3035 ;; This function calls:
  3036 ;;		Nothing
  3037 ;; This function is called by:
  3038 ;;		_rx_operation
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text4
  3043  00320E                     __ptext4:
  3044                           	opt stack 0
  3045  00320E                     _atoi:
  3046                           	opt stack 24
  3047                           
  3048                           ;My_header\My_header.h: 387: uint8_t ret = 0;
  3049                           
  3050                           ;incstack = 0
  3051  00320E  0E00               	movlw	0
  3052  003210  0100               	movlb	0	; () banked
  3053  003212  6F63               	movwf	atoi@ret& (0+255),b
  3054                           
  3055                           ;My_header\My_header.h: 388: while (*str) {
  3056  003214  D020               	goto	l4397
  3057  003216                     l4387:
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;My_header\My_header.h: 389: if (*str >= '0' && *str <= '9') {
  3061  003216  C060  FFD9         	movff	atoi@str,fsr2l
  3062  00321A  C061  FFDA         	movff	atoi@str+1,fsr2h
  3063  00321E  0E2F               	movlw	47
  3064  003220  64DF               	cpfsgt	indf2,c
  3065  003222  D015               	goto	l4395
  3066                           
  3067                           ; BSR set to: 0
  3068  003224  C060  FFD9         	movff	atoi@str,fsr2l
  3069  003228  C061  FFDA         	movff	atoi@str+1,fsr2h
  3070  00322C  0E3A               	movlw	58
  3071  00322E  60DF               	cpfslt	indf2,c
  3072  003230  D00E               	goto	l4395
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;My_header\My_header.h: 390: ret *= 10;
  3076  003232  0E0A               	movlw	10
  3077  003234  0100               	movlb	0	; () banked
  3078  003236  0363               	mulwf	atoi@ret& (0+255),b
  3079  003238  50F3               	movf	prodl,w,c
  3080  00323A  6F63               	movwf	atoi@ret& (0+255),b
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;My_header\My_header.h: 391: ret += *str - '0';
  3084  00323C  C060  FFD9         	movff	atoi@str,fsr2l
  3085  003240  C061  FFDA         	movff	atoi@str+1,fsr2h
  3086  003244  50DF               	movf	indf2,w,c
  3087  003246  0FD0               	addlw	208
  3088  003248  0100               	movlb	0	; () banked
  3089  00324A  2763               	addwf	atoi@ret& (0+255),f,b
  3090  00324C  D000               	goto	l4395
  3091  00324E                     l4395:
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;My_header\My_header.h: 392: }
  3095                           ;My_header\My_header.h: 393: str++;
  3096  00324E  0100               	movlb	0	; () banked
  3097  003250  4B60               	infsnz	atoi@str& (0+255),f,b
  3098  003252  2B61               	incf	(atoi@str+1)& (0+255),f,b
  3099  003254  D000               	goto	l4397
  3100  003256                     l4397:
  3101                           
  3102                           ; BSR set to: 0
  3103  003256  C060  FFD9         	movff	atoi@str,fsr2l
  3104  00325A  C061  FFDA         	movff	atoi@str+1,fsr2h
  3105  00325E  50DF               	movf	indf2,w,c
  3106  003260  A4D8               	btfss	status,2,c
  3107  003262  D7D9               	goto	l4387
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;My_header\My_header.h: 394: }
  3111                           ;My_header\My_header.h: 395: return ret;
  3112                           
  3113                           ; BSR set to: 0
  3114  003264  0100               	movlb	0	; () banked
  3115  003266  5163               	movf	atoi@ret& (0+255),w,b
  3116  003268  0012               	return	
  3117                           
  3118                           ; BSR set to: 0
  3119                           
  3120                           ; BSR set to: 0
  3121  00326A  0012               	return		;funcret
  3122  00326C                     __end_of_atoi:
  3123                           	opt stack 0
  3124                           tblptru	equ	0xFF8
  3125                           tblptrh	equ	0xFF7
  3126                           tblptrl	equ	0xFF6
  3127                           tablat	equ	0xFF5
  3128                           prodh	equ	0xFF4
  3129                           prodl	equ	0xFF3
  3130                           intcon	equ	0xFF2
  3131                           postinc0	equ	0xFEE
  3132                           wreg	equ	0xFE8
  3133                           indf1	equ	0xFE7
  3134                           postinc1	equ	0xFE6
  3135                           postdec1	equ	0xFE5
  3136                           fsr1h	equ	0xFE2
  3137                           fsr1l	equ	0xFE1
  3138                           indf2	equ	0xFDF
  3139                           postinc2	equ	0xFDE
  3140                           postdec2	equ	0xFDD
  3141                           fsr2h	equ	0xFDA
  3142                           fsr2l	equ	0xFD9
  3143                           status	equ	0xFD8
  3144                           
  3145 ;; *************** function _RTCC_from_caltime *****************
  3146 ;; Defined at:
  3147 ;;		line 242 in file "../My_header\My_RTCC.h"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;  ct              2   39[BANK0 ] PTR struct .
  3150 ;;		 -> caltime_now(7), 
  3151 ;;  ep              2   41[BANK0 ] PTR unsigned long 
  3152 ;;		 -> epoch_now(4), 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;		None
  3155 ;; Return value:  Size  Location     Type
  3156 ;;		None               void
  3157 ;; Registers used:
  3158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3164 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3167 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3168 ;;Total ram usage:        4 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; Hardware stack levels required when called:    8
  3171 ;; This function calls:
  3172 ;;		_caltime_to_RTCC
  3173 ;;		_caltime_to_epoch
  3174 ;; This function is called by:
  3175 ;;		_rx_operation
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           	psect	text5
  3180  00354A                     __ptext5:
  3181                           	opt stack 0
  3182  00354A                     _RTCC_from_caltime:
  3183                           	opt stack 21
  3184                           
  3185                           ;My_header\My_RTCC.h: 243: caltime_to_RTCC(ct);
  3186                           
  3187                           ; BSR set to: 0
  3188                           ;incstack = 0
  3189  00354A  C087  F069         	movff	RTCC_from_caltime@ct,caltime_to_RTCC@ct
  3190  00354E  C088  F06A         	movff	RTCC_from_caltime@ct+1,caltime_to_RTCC@ct+1
  3191  003552  ECE6  F012         	call	_caltime_to_RTCC	;wreg free
  3192                           
  3193                           ;My_header\My_RTCC.h: 244: caltime_to_epoch(ct, ep);
  3194  003556  C087  F078         	movff	RTCC_from_caltime@ct,caltime_to_epoch@ct
  3195  00355A  C088  F079         	movff	RTCC_from_caltime@ct+1,caltime_to_epoch@ct+1
  3196  00355E  C089  F07A         	movff	RTCC_from_caltime@ep,caltime_to_epoch@ep
  3197  003562  C08A  F07B         	movff	RTCC_from_caltime@ep+1,caltime_to_epoch@ep+1
  3198  003566  ECEE  F00B         	call	_caltime_to_epoch	;wreg free
  3199  00356A  0012               	return		;funcret
  3200  00356C                     __end_of_RTCC_from_caltime:
  3201                           	opt stack 0
  3202                           tblptru	equ	0xFF8
  3203                           tblptrh	equ	0xFF7
  3204                           tblptrl	equ	0xFF6
  3205                           tablat	equ	0xFF5
  3206                           prodh	equ	0xFF4
  3207                           prodl	equ	0xFF3
  3208                           intcon	equ	0xFF2
  3209                           postinc0	equ	0xFEE
  3210                           wreg	equ	0xFE8
  3211                           indf1	equ	0xFE7
  3212                           postinc1	equ	0xFE6
  3213                           postdec1	equ	0xFE5
  3214                           fsr1h	equ	0xFE2
  3215                           fsr1l	equ	0xFE1
  3216                           indf2	equ	0xFDF
  3217                           postinc2	equ	0xFDE
  3218                           postdec2	equ	0xFDD
  3219                           fsr2h	equ	0xFDA
  3220                           fsr2l	equ	0xFD9
  3221                           status	equ	0xFD8
  3222                           
  3223 ;; *************** function _PWM_set *****************
  3224 ;; Defined at:
  3225 ;;		line 162 in file "PIC18J27J53-killifish_light01.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  color           1    wreg     unsigned char 
  3228 ;;  value           2   13[BANK0 ] unsigned int 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  color           1   15[BANK0 ] unsigned char 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;		None               void
  3233 ;; Registers used:
  3234 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3240 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3241 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3243 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3244 ;;Total ram usage:        3 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    6
  3247 ;; This function calls:
  3248 ;;		___lwdiv
  3249 ;;		___wmul
  3250 ;; This function is called by:
  3251 ;;		_rx_operation
  3252 ;;		_main
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           	psect	text6
  3257  0024FE                     __ptext6:
  3258                           	opt stack 0
  3259  0024FE                     _PWM_set:
  3260                           	opt stack 23
  3261                           
  3262                           ;incstack = 0
  3263                           ;PWM_set@color stored from wreg
  3264  0024FE  0100               	movlb	0	; () banked
  3265  002500  6F6F               	movwf	PWM_set@color& (0+255),b
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;PIC18J27J53-killifish_light01.c: 163: value = value * value / 255;
  3269  002502  C06D  F060         	movff	PWM_set@value,___wmul@multiplier
  3270  002506  C06E  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
  3271  00250A  C06D  F062         	movff	PWM_set@value,___wmul@multiplicand
  3272  00250E  C06E  F063         	movff	PWM_set@value+1,___wmul@multiplicand+1
  3273  002512  EC01  F01A         	call	___wmul	;wreg free
  3274  002516  C060  F066         	movff	?___wmul,___lwdiv@dividend
  3275  00251A  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  3276  00251E  0E00               	movlw	0
  3277  002520  0100               	movlb	0	; () banked
  3278  002522  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3279  002524  6968               	setf	___lwdiv@divisor& (0+255),b
  3280  002526  EC33  F017         	call	___lwdiv	;wreg free
  3281  00252A  C066  F06D         	movff	?___lwdiv,PWM_set@value
  3282  00252E  C067  F06E         	movff	?___lwdiv+1,PWM_set@value+1
  3283                           
  3284                           ;PIC18J27J53-killifish_light01.c: 164: switch (color) {
  3285  002532  D03C               	goto	l4551
  3286  002534                     l4533:
  3287                           
  3288                           ;PIC18J27J53-killifish_light01.c: 166: CCP1CONbits.DC1B = 0;
  3289  002534  0ECF               	movlw	-49
  3290  002536  16BA               	andwf	4026,f,c	;volatile
  3291                           
  3292                           ;PIC18J27J53-killifish_light01.c: 167: CCPR1L = value * 2 / 3;
  3293  002538  90D8               	bcf	status,0,c
  3294  00253A  0100               	movlb	0	; () banked
  3295  00253C  356D               	rlcf	PWM_set@value& (0+255),w,b
  3296  00253E  0100               	movlb	0	; () banked
  3297  002540  6F66               	movwf	___lwdiv@dividend& (0+255),b
  3298  002542  0100               	movlb	0	; () banked
  3299  002544  356E               	rlcf	(PWM_set@value+1)& (0+255),w,b
  3300  002546  0100               	movlb	0	; () banked
  3301  002548  6F67               	movwf	(___lwdiv@dividend+1)& (0+255),b
  3302  00254A  0E00               	movlw	0
  3303  00254C  0100               	movlb	0	; () banked
  3304  00254E  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3305  002550  0E03               	movlw	3
  3306  002552  6F68               	movwf	___lwdiv@divisor& (0+255),b
  3307  002554  EC33  F017         	call	___lwdiv	;wreg free
  3308  002558  0100               	movlb	0	; () banked
  3309  00255A  5166               	movf	?___lwdiv& (0+255),w,b
  3310  00255C  6EBB               	movwf	4027,c	;volatile
  3311                           
  3312                           ;PIC18J27J53-killifish_light01.c: 168: break;
  3313  00255E  0012               	return	
  3314  002560                     l4537:
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;PIC18J27J53-killifish_light01.c: 170: CCP2CONbits.DC2B = 0;
  3318  002560  0ECF               	movlw	-49
  3319  002562  16B4               	andwf	4020,f,c	;volatile
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;PIC18J27J53-killifish_light01.c: 171: CCPR2L = value;
  3323  002564  C06D  FFB5         	movff	PWM_set@value,4021	;volatile
  3324                           
  3325                           ;PIC18J27J53-killifish_light01.c: 172: break;
  3326  002568  0012               	return	
  3327  00256A                     l4541:
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;PIC18J27J53-killifish_light01.c: 174: CCP3CONbits.DC3B = 0;
  3331  00256A  0ECF               	movlw	-49
  3332  00256C  010F               	movlb	15	; () banked
  3333  00256E  1715               	andwf	21,f,b	;volatile
  3334                           
  3335                           ; BSR set to: 15
  3336                           ;PIC18J27J53-killifish_light01.c: 175: CCPR3L = value * 3 / 4;
  3337  002570  C06D  F060         	movff	PWM_set@value,___wmul@multiplier
  3338  002574  C06E  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
  3339  002578  0E00               	movlw	0
  3340  00257A  0100               	movlb	0	; () banked
  3341  00257C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3342  00257E  0E03               	movlw	3
  3343  002580  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3344  002582  EC01  F01A         	call	___wmul	;wreg free
  3345  002586  0100               	movlb	0	; () banked
  3346  002588  90D8               	bcf	status,0,c
  3347  00258A  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  3348  00258C  3360               	rrcf	?___wmul& (0+255),f,b
  3349  00258E  0100               	movlb	0	; () banked
  3350  002590  90D8               	bcf	status,0,c
  3351  002592  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  3352  002594  3360               	rrcf	?___wmul& (0+255),f,b
  3353  002596  0100               	movlb	0	; () banked
  3354  002598  5160               	movf	?___wmul& (0+255),w,b
  3355  00259A  010F               	movlb	15	; () banked
  3356  00259C  6F16               	movwf	22,b	;volatile
  3357                           
  3358                           ;PIC18J27J53-killifish_light01.c: 176: break;
  3359  00259E  0012               	return	
  3360  0025A0                     l4545:
  3361                           
  3362                           ;PIC18J27J53-killifish_light01.c: 178: CCP4CONbits.DC4B = 0;
  3363  0025A0  0ECF               	movlw	-49
  3364  0025A2  010F               	movlb	15	; () banked
  3365  0025A4  1712               	andwf	18,f,b	;volatile
  3366                           
  3367                           ; BSR set to: 15
  3368                           ;PIC18J27J53-killifish_light01.c: 179: CCPR4L = value;
  3369  0025A6  C06D  FF13         	movff	PWM_set@value,3859	;volatile
  3370                           
  3371                           ; BSR set to: 15
  3372                           ;PIC18J27J53-killifish_light01.c: 181: }
  3373                           
  3374                           ;PIC18J27J53-killifish_light01.c: 180: break;
  3375  0025AA  0012               	return	
  3376  0025AC                     l4551:
  3377  0025AC  0100               	movlb	0	; () banked
  3378  0025AE  516F               	movf	PWM_set@color& (0+255),w,b
  3379                           
  3380                           ; Switch size 1, requested type "space"
  3381                           ; Number of cases is 4, Range of values is 0 to 3
  3382                           ; switch strategies available:
  3383                           ; Name         Instructions Cycles
  3384                           ; simple_byte           13     7 (average)
  3385                           ;	Chosen strategy is simple_byte
  3386  0025B0  0A00               	xorlw	0	; case 0
  3387  0025B2  B4D8               	btfsc	status,2,c
  3388  0025B4  D7BF               	goto	l4533
  3389  0025B6  0A01               	xorlw	1	; case 1
  3390  0025B8  B4D8               	btfsc	status,2,c
  3391  0025BA  D7D2               	goto	l4537
  3392  0025BC  0A03               	xorlw	3	; case 2
  3393  0025BE  B4D8               	btfsc	status,2,c
  3394  0025C0  D7D4               	goto	l4541
  3395  0025C2  0A01               	xorlw	1	; case 3
  3396  0025C4  A4D8               	btfss	status,2,c
  3397  0025C6  0012               	return	
  3398  0025C8  D7EB               	goto	l4545
  3399                           
  3400                           ; BSR set to: 0
  3401  0025CA  0012               	return		;funcret
  3402  0025CC                     __end_of_PWM_set:
  3403                           	opt stack 0
  3404                           tblptru	equ	0xFF8
  3405                           tblptrh	equ	0xFF7
  3406                           tblptrl	equ	0xFF6
  3407                           tablat	equ	0xFF5
  3408                           prodh	equ	0xFF4
  3409                           prodl	equ	0xFF3
  3410                           intcon	equ	0xFF2
  3411                           postinc0	equ	0xFEE
  3412                           wreg	equ	0xFE8
  3413                           indf1	equ	0xFE7
  3414                           postinc1	equ	0xFE6
  3415                           postdec1	equ	0xFE5
  3416                           fsr1h	equ	0xFE2
  3417                           fsr1l	equ	0xFE1
  3418                           indf2	equ	0xFDF
  3419                           postinc2	equ	0xFDE
  3420                           postdec2	equ	0xFDD
  3421                           fsr2h	equ	0xFDA
  3422                           fsr2l	equ	0xFD9
  3423                           status	equ	0xFD8
  3424                           
  3425 ;; *************** function ___wmul *****************
  3426 ;; Defined at:
  3427 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3430 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  product         2    4[BANK0 ] unsigned int 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  2    0[BANK0 ] unsigned int 
  3435 ;; Registers used:
  3436 ;;		wreg, status,2, status,0, prodl, prodh
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3442 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3443 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3445 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3446 ;;Total ram usage:        6 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; Hardware stack levels required when called:    5
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		_PWM_set
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           	psect	text7
  3457  003402                     __ptext7:
  3458                           	opt stack 0
  3459  003402                     ___wmul:
  3460                           	opt stack 23
  3461                           
  3462                           ;incstack = 0
  3463  003402  0100               	movlb	0	; () banked
  3464  003404  5160               	movf	___wmul@multiplier& (0+255),w,b
  3465  003406  0100               	movlb	0	; () banked
  3466  003408  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3467  00340A  CFF3 F064          	movff	prodl,___wmul@product
  3468  00340E  CFF4 F065          	movff	prodh,___wmul@product+1
  3469  003412  0100               	movlb	0	; () banked
  3470  003414  5160               	movf	___wmul@multiplier& (0+255),w,b
  3471  003416  0100               	movlb	0	; () banked
  3472  003418  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3473  00341A  50F3               	movf	prodl,w,c
  3474  00341C  0100               	movlb	0	; () banked
  3475  00341E  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3476  003420  0100               	movlb	0	; () banked
  3477  003422  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3478  003424  0100               	movlb	0	; () banked
  3479  003426  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3480  003428  50F3               	movf	prodl,w,c
  3481  00342A  0100               	movlb	0	; () banked
  3482  00342C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3483                           
  3484                           ; BSR set to: 0
  3485  00342E  C064  F060         	movff	___wmul@product,?___wmul
  3486  003432  C065  F061         	movff	___wmul@product+1,?___wmul+1
  3487  003436  0012               	return	
  3488                           
  3489                           ; BSR set to: 0
  3490                           
  3491                           ; BSR set to: 0
  3492  003438  0012               	return		;funcret
  3493  00343A                     __end_of___wmul:
  3494                           	opt stack 0
  3495                           tblptru	equ	0xFF8
  3496                           tblptrh	equ	0xFF7
  3497                           tblptrl	equ	0xFF6
  3498                           tablat	equ	0xFF5
  3499                           prodh	equ	0xFF4
  3500                           prodl	equ	0xFF3
  3501                           intcon	equ	0xFF2
  3502                           postinc0	equ	0xFEE
  3503                           wreg	equ	0xFE8
  3504                           indf1	equ	0xFE7
  3505                           postinc1	equ	0xFE6
  3506                           postdec1	equ	0xFE5
  3507                           fsr1h	equ	0xFE2
  3508                           fsr1l	equ	0xFE1
  3509                           indf2	equ	0xFDF
  3510                           postinc2	equ	0xFDE
  3511                           postdec2	equ	0xFDD
  3512                           fsr2h	equ	0xFDA
  3513                           fsr2l	equ	0xFD9
  3514                           status	equ	0xFD8
  3515                           
  3516 ;; *************** function _print_time *****************
  3517 ;; Defined at:
  3518 ;;		line 210 in file "PIC18J27J53-killifish_light01.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;  row             1    wreg     unsigned char 
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;  row             1   33[BANK0 ] unsigned char 
  3523 ;;  i               1   34[BANK0 ] unsigned char 
  3524 ;; Return value:  Size  Location     Type
  3525 ;;		None               void
  3526 ;; Registers used:
  3527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3534 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3536 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3537 ;;Total ram usage:        2 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; Hardware stack levels required when called:   10
  3540 ;; This function calls:
  3541 ;;		_tx_send
  3542 ;;		_tx_send_time
  3543 ;;		_tx_sends
  3544 ;; This function is called by:
  3545 ;;		_main
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           	psect	text8
  3550  002EE8                     __ptext8:
  3551                           	opt stack 0
  3552  002EE8                     _print_time:
  3553                           	opt stack 20
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;incstack = 0
  3557                           ;print_time@row stored from wreg
  3558  002EE8  0100               	movlb	0	; () banked
  3559  002EEA  6F81               	movwf	print_time@row& (0+255),b
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;PIC18J27J53-killifish_light01.c: 211: uint8_t i;
  3563                           ;PIC18J27J53-killifish_light01.c: 212: GIE = 0;
  3564  002EEC  9EF2               	bcf	intcon,7,c	;volatile
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;PIC18J27J53-killifish_light01.c: 213: for (i = 0; i < row; i++) tx_sends(cursor_down);
  3568  002EEE  0E00               	movlw	0
  3569  002EF0  0100               	movlb	0	; () banked
  3570  002EF2  6F82               	movwf	print_time@i& (0+255),b
  3571  002EF4  D00B               	goto	l4699
  3572  002EF6                     l4695:
  3573                           
  3574                           ; BSR set to: 0
  3575  002EF6  0ECF               	movlw	low _cursor_down
  3576  002EF8  0100               	movlb	0	; () banked
  3577  002EFA  6F6C               	movwf	tx_sends@asciicode& (0+255),b
  3578  002EFC  0E00               	movlw	high _cursor_down
  3579  002EFE  0100               	movlb	0	; () banked
  3580  002F00  6F6D               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3581  002F02  EC9F  F018         	call	_tx_sends	;wreg free
  3582  002F06  0100               	movlb	0	; () banked
  3583  002F08  2B82               	incf	print_time@i& (0+255),f,b
  3584  002F0A  D000               	goto	l4699
  3585  002F0C                     l4699:
  3586                           
  3587                           ; BSR set to: 0
  3588  002F0C  0100               	movlb	0	; () banked
  3589  002F0E  5181               	movf	print_time@row& (0+255),w,b
  3590  002F10  0100               	movlb	0	; () banked
  3591  002F12  5D82               	subwf	print_time@i& (0+255),w,b
  3592  002F14  A0D8               	btfss	status,0,c
  3593  002F16  D7EF               	goto	l4695
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;PIC18J27J53-killifish_light01.c: 214: tx_send_time();
  3597                           
  3598                           ; BSR set to: 0
  3599  002F18  EC41  F010         	call	_tx_send_time	;wreg free
  3600                           
  3601                           ;PIC18J27J53-killifish_light01.c: 215: for (i = 0; i < 26; i++) tx_send('\b');
  3602  002F1C  0E00               	movlw	0
  3603  002F1E  0100               	movlb	0	; () banked
  3604  002F20  6F82               	movwf	print_time@i& (0+255),b
  3605  002F22                     l4705:
  3606                           
  3607                           ; BSR set to: 0
  3608  002F22  0E19               	movlw	25
  3609  002F24  0100               	movlb	0	; () banked
  3610  002F26  6582               	cpfsgt	print_time@i& (0+255),b
  3611  002F28  D001               	goto	l4709
  3612                           
  3613                           ; BSR set to: 0
  3614  002F2A  D006               	goto	l4715
  3615  002F2C                     l4709:
  3616                           
  3617                           ; BSR set to: 0
  3618  002F2C  0E08               	movlw	8
  3619  002F2E  EC18  F01B         	call	_tx_send
  3620  002F32  0100               	movlb	0	; () banked
  3621  002F34  2B82               	incf	print_time@i& (0+255),f,b
  3622  002F36  D7F5               	goto	l4705
  3623  002F38                     l4715:
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;PIC18J27J53-killifish_light01.c: 216: for (i = 0; i < row; i++) tx_sends(cursor_up);
  3627  002F38  0E00               	movlw	0
  3628  002F3A  0100               	movlb	0	; () banked
  3629  002F3C  6F82               	movwf	print_time@i& (0+255),b
  3630  002F3E  D00B               	goto	l4721
  3631  002F40                     l4717:
  3632                           
  3633                           ; BSR set to: 0
  3634  002F40  0E3C               	movlw	low _cursor_up
  3635  002F42  0100               	movlb	0	; () banked
  3636  002F44  6F6C               	movwf	tx_sends@asciicode& (0+255),b
  3637  002F46  0E00               	movlw	high _cursor_up
  3638  002F48  0100               	movlb	0	; () banked
  3639  002F4A  6F6D               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3640  002F4C  EC9F  F018         	call	_tx_sends	;wreg free
  3641  002F50  0100               	movlb	0	; () banked
  3642  002F52  2B82               	incf	print_time@i& (0+255),f,b
  3643  002F54  D000               	goto	l4721
  3644  002F56                     l4721:
  3645                           
  3646                           ; BSR set to: 0
  3647  002F56  0100               	movlb	0	; () banked
  3648  002F58  5181               	movf	print_time@row& (0+255),w,b
  3649  002F5A  0100               	movlb	0	; () banked
  3650  002F5C  5D82               	subwf	print_time@i& (0+255),w,b
  3651  002F5E  A0D8               	btfss	status,0,c
  3652  002F60  D7EF               	goto	l4717
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;PIC18J27J53-killifish_light01.c: 217: GIE = 1;
  3656  002F62  8EF2               	bsf	intcon,7,c	;volatile
  3657                           
  3658                           ; BSR set to: 0
  3659  002F64  0012               	return		;funcret
  3660  002F66                     __end_of_print_time:
  3661                           	opt stack 0
  3662                           tblptru	equ	0xFF8
  3663                           tblptrh	equ	0xFF7
  3664                           tblptrl	equ	0xFF6
  3665                           tablat	equ	0xFF5
  3666                           prodh	equ	0xFF4
  3667                           prodl	equ	0xFF3
  3668                           intcon	equ	0xFF2
  3669                           postinc0	equ	0xFEE
  3670                           wreg	equ	0xFE8
  3671                           indf1	equ	0xFE7
  3672                           postinc1	equ	0xFE6
  3673                           postdec1	equ	0xFE5
  3674                           fsr1h	equ	0xFE2
  3675                           fsr1l	equ	0xFE1
  3676                           indf2	equ	0xFDF
  3677                           postinc2	equ	0xFDE
  3678                           postdec2	equ	0xFDD
  3679                           fsr2h	equ	0xFDA
  3680                           fsr2l	equ	0xFD9
  3681                           status	equ	0xFD8
  3682                           
  3683 ;; *************** function _tx_send_time *****************
  3684 ;; Defined at:
  3685 ;;		line 191 in file "PIC18J27J53-killifish_light01.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;		None
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;		None
  3690 ;; Return value:  Size  Location     Type
  3691 ;;		None               void
  3692 ;; Registers used:
  3693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3703 ;;Total ram usage:        0 bytes
  3704 ;; Hardware stack levels used:    1
  3705 ;; Hardware stack levels required when called:    9
  3706 ;; This function calls:
  3707 ;;		_tx_send
  3708 ;;		_tx_send_dec
  3709 ;;		_tx_sends
  3710 ;; This function is called by:
  3711 ;;		_print_time
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           	psect	text9
  3716  002082                     __ptext9:
  3717                           	opt stack 0
  3718  002082                     _tx_send_time:
  3719                           	opt stack 20
  3720                           
  3721                           ;PIC18J27J53-killifish_light01.c: 192: tx_send_dec(20, edit_flag.flag.YY);
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;incstack = 0
  3725  002082  0E00               	movlw	0
  3726  002084  BA23               	btfsc	_edit_flag,5,c
  3727  002086  0E01               	movlw	1
  3728  002088  0100               	movlb	0	; () banked
  3729  00208A  6F75               	movwf	tx_send_dec@edit& (0+255),b
  3730  00208C  0E14               	movlw	20
  3731  00208E  EC36  F019         	call	_tx_send_dec
  3732                           
  3733                           ;PIC18J27J53-killifish_light01.c: 193: tx_send_dec(caltime_now.YY, edit_flag.flag.YY);
  3734  002092  0E00               	movlw	0
  3735  002094  BA23               	btfsc	_edit_flag,5,c
  3736  002096  0E01               	movlw	1
  3737  002098  0100               	movlb	0	; () banked
  3738  00209A  6F75               	movwf	tx_send_dec@edit& (0+255),b
  3739  00209C  0100               	movlb	0	; () banked
  3740  00209E  51E9               	movf	(_caltime_now+6)& (0+255),w,b
  3741  0020A0  EC36  F019         	call	_tx_send_dec
  3742                           
  3743                           ;PIC18J27J53-killifish_light01.c: 194: tx_sends("/");
  3744  0020A4  0E7E               	movlw	low STR_20
  3745  0020A6  0100               	movlb	0	; () banked
  3746  0020A8  6F6C               	movwf	tx_sends@asciicode& (0+255),b
  3747  0020AA  0E0F               	movlw	high STR_20
  3748  0020AC  0100               	movlb	0	; () banked
  3749  0020AE  6F6D               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3750  0020B0  EC9F  F018         	call	_tx_sends	;wreg free
  3751                           
  3752                           ;PIC18J27J53-killifish_light01.c: 195: tx_send_dec(caltime_now.MM, edit_flag.flag.MM);
  3753  0020B4  0E00               	movlw	0
  3754  0020B6  B823               	btfsc	_edit_flag,4,c
  3755  0020B8  0E01               	movlw	1
  3756  0020BA  0100               	movlb	0	; () banked
  3757  0020BC  6F75               	movwf	tx_send_dec@edit& (0+255),b
  3758  0020BE  0100               	movlb	0	; () banked
  3759  0020C0  51E8               	movf	(_caltime_now+5)& (0+255),w,b
  3760  0020C2  EC36  F019         	call	_tx_send_dec
  3761                           
  3762                           ;PIC18J27J53-killifish_light01.c: 196: tx_sends("/");
  3763  0020C6  0E7E               	movlw	low STR_20
  3764  0020C8  0100               	movlb	0	; () banked
  3765  0020CA  6F6C               	movwf	tx_sends@asciicode& (0+255),b
  3766  0020CC  0E0F               	movlw	high STR_20
  3767  0020CE  0100               	movlb	0	; () banked
  3768  0020D0  6F6D               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3769  0020D2  EC9F  F018         	call	_tx_sends	;wreg free
  3770                           
  3771                           ;PIC18J27J53-killifish_light01.c: 197: tx_send_dec(caltime_now.DD, edit_flag.flag.DD);
  3772  0020D6  0E00               	movlw	0
  3773  0020D8  B623               	btfsc	_edit_flag,3,c
  3774  0020DA  0E01               	movlw	1
  3775  0020DC  0100               	movlb	0	; () banked
  3776  0020DE  6F75               	movwf	tx_send_dec@edit& (0+255),b
  3777  0020E0  0100               	movlb	0	; () banked
  3778  0020E2  51E7               	movf	(_caltime_now+4)& (0+255),w,b
  3779  0020E4  EC36  F019         	call	_tx_send_dec
  3780                           
  3781                           ;PIC18J27J53-killifish_light01.c: 198: tx_sends(" (");
  3782  0020E8  0E76               	movlw	low STR_22
  3783  0020EA  0100               	movlb	0	; () banked
  3784  0020EC  6F6C               	movwf	tx_sends@asciicode& (0+255),b
  3785  0020EE  0E0F               	movlw	high STR_22
  3786  0020F0  0100               	movlb	0	; () banked
  3787  0020F2  6F6D               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3788  0020F4  EC9F  F018         	call	_tx_sends	;wreg free
  3789                           
  3790                           ;PIC18J27J53-killifish_light01.c: 199: tx_sends(weekday_char[caltime_now.EE]);
  3791  0020F8  0100               	movlb	0	; () banked
  3792  0020FA  51E6               	movf	(_caltime_now+3)& (0+255),w,b
  3793  0020FC  0D02               	mullw	2
  3794  0020FE  0EAE               	movlw	low _weekday_char
  3795  002100  24F3               	addwf	prodl,w,c
  3796  002102  6ED9               	movwf	fsr2l,c
  3797  002104  0E00               	movlw	high _weekday_char
  3798  002106  20F4               	addwfc	prodh,w,c
  3799  002108  6EDA               	movwf	fsr2h,c
  3800  00210A  CFDE F06C          	movff	postinc2,tx_sends@asciicode
  3801  00210E  CFDD F06D          	movff	postdec2,tx_sends@asciicode+1
  3802  002112  EC9F  F018         	call	_tx_sends	;wreg free
  3803                           
  3804                           ;PIC18J27J53-killifish_light01.c: 200: tx_sends(") ");
  3805  002116  0E73               	movlw	low STR_23
  3806  002118  0100               	movlb	0	; () banked
  3807  00211A  6F6C               	movwf	tx_sends@asciicode& (0+255),b
  3808  00211C  0E0F               	movlw	high STR_23
  3809  00211E  0100               	movlb	0	; () banked
  3810  002120  6F6D               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3811  002122  EC9F  F018         	call	_tx_sends	;wreg free
  3812                           
  3813                           ;PIC18J27J53-killifish_light01.c: 201: tx_send_dec(caltime_now.hh, edit_flag.flag.hh);
  3814  002126  0E00               	movlw	0
  3815  002128  B423               	btfsc	_edit_flag,2,c
  3816  00212A  0E01               	movlw	1
  3817  00212C  0100               	movlb	0	; () banked
  3818  00212E  6F75               	movwf	tx_send_dec@edit& (0+255),b
  3819  002130  0100               	movlb	0	; () banked
  3820  002132  51E5               	movf	(_caltime_now+2)& (0+255),w,b
  3821  002134  EC36  F019         	call	_tx_send_dec
  3822                           
  3823                           ;PIC18J27J53-killifish_light01.c: 202: if (colon)tx_send(':');
  3824  002138  5021               	movf	_colon,w,c
  3825  00213A  B4D8               	btfsc	status,2,c
  3826  00213C  D004               	goto	l4559
  3827  00213E  0E3A               	movlw	58
  3828  002140  EC18  F01B         	call	_tx_send
  3829  002144  D004               	goto	l4561
  3830  002146                     l4559:
  3831                           
  3832                           ;PIC18J27J53-killifish_light01.c: 203: else tx_send(' ');
  3833  002146  0E20               	movlw	32
  3834  002148  EC18  F01B         	call	_tx_send
  3835  00214C  D000               	goto	l4561
  3836  00214E                     l4561:
  3837                           
  3838                           ;PIC18J27J53-killifish_light01.c: 204: tx_send_dec(caltime_now.mm, edit_flag.flag.mm);
  3839  00214E  0E00               	movlw	0
  3840  002150  B223               	btfsc	_edit_flag,1,c
  3841  002152  0E01               	movlw	1
  3842  002154  0100               	movlb	0	; () banked
  3843  002156  6F75               	movwf	tx_send_dec@edit& (0+255),b
  3844  002158  0100               	movlb	0	; () banked
  3845  00215A  51E4               	movf	(_caltime_now+1)& (0+255),w,b
  3846  00215C  EC36  F019         	call	_tx_send_dec
  3847                           
  3848                           ;PIC18J27J53-killifish_light01.c: 205: tx_sends("-");
  3849  002160  0E7C               	movlw	low STR_24
  3850  002162  0100               	movlb	0	; () banked
  3851  002164  6F6C               	movwf	tx_sends@asciicode& (0+255),b
  3852  002166  0E0F               	movlw	high STR_24
  3853  002168  0100               	movlb	0	; () banked
  3854  00216A  6F6D               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3855  00216C  EC9F  F018         	call	_tx_sends	;wreg free
  3856                           
  3857                           ;PIC18J27J53-killifish_light01.c: 206: tx_send_dec(caltime_now.ss, edit_flag.flag.ss);
  3858  002170  0E00               	movlw	0
  3859  002172  B023               	btfsc	_edit_flag,0,c
  3860  002174  0E01               	movlw	1
  3861  002176  0100               	movlb	0	; () banked
  3862  002178  6F75               	movwf	tx_send_dec@edit& (0+255),b
  3863  00217A  0100               	movlb	0	; () banked
  3864  00217C  51E3               	movf	_caltime_now& (0+255),w,b
  3865  00217E  EC36  F019         	call	_tx_send_dec
  3866                           
  3867                           ;PIC18J27J53-killifish_light01.c: 207: tx_sends(" ");
  3868  002182  0E71               	movlw	low (STR_19+1)
  3869  002184  0100               	movlb	0	; () banked
  3870  002186  6F6C               	movwf	tx_sends@asciicode& (0+255),b
  3871  002188  0E0F               	movlw	high (STR_19+1)
  3872  00218A  0100               	movlb	0	; () banked
  3873  00218C  6F6D               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3874  00218E  EC9F  F018         	call	_tx_sends	;wreg free
  3875  002192  0012               	return		;funcret
  3876  002194                     __end_of_tx_send_time:
  3877                           	opt stack 0
  3878                           tblptru	equ	0xFF8
  3879                           tblptrh	equ	0xFF7
  3880                           tblptrl	equ	0xFF6
  3881                           tablat	equ	0xFF5
  3882                           prodh	equ	0xFF4
  3883                           prodl	equ	0xFF3
  3884                           intcon	equ	0xFF2
  3885                           postinc0	equ	0xFEE
  3886                           wreg	equ	0xFE8
  3887                           indf1	equ	0xFE7
  3888                           postinc1	equ	0xFE6
  3889                           postdec1	equ	0xFE5
  3890                           fsr1h	equ	0xFE2
  3891                           fsr1l	equ	0xFE1
  3892                           indf2	equ	0xFDF
  3893                           postinc2	equ	0xFDE
  3894                           postdec2	equ	0xFDD
  3895                           fsr2h	equ	0xFDA
  3896                           fsr2l	equ	0xFD9
  3897                           status	equ	0xFD8
  3898                           
  3899 ;; *************** function _tx_send_dec *****************
  3900 ;; Defined at:
  3901 ;;		line 184 in file "PIC18J27J53-killifish_light01.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;  dec             1    wreg     unsigned char 
  3904 ;;  edit            1   21[BANK0 ] unsigned char 
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;  dec             1   32[BANK0 ] unsigned char 
  3907 ;;  str            10   22[BANK0 ] unsigned char [10]
  3908 ;; Return value:  Size  Location     Type
  3909 ;;		None               void
  3910 ;; Registers used:
  3911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3917 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3918 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3920 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3921 ;;Total ram usage:       12 bytes
  3922 ;; Hardware stack levels used:    1
  3923 ;; Hardware stack levels required when called:    8
  3924 ;; This function calls:
  3925 ;;		_tx_sends
  3926 ;;		_utoa
  3927 ;; This function is called by:
  3928 ;;		_tx_send_time
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932                           	psect	text10
  3933  00326C                     __ptext10:
  3934                           	opt stack 0
  3935  00326C                     _tx_send_dec:
  3936                           	opt stack 20
  3937                           
  3938                           ;incstack = 0
  3939                           ;tx_send_dec@dec stored from wreg
  3940  00326C  0100               	movlb	0	; () banked
  3941  00326E  6F80               	movwf	tx_send_dec@dec& (0+255),b
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;PIC18J27J53-killifish_light01.c: 185: uint8_t str[10];
  3945                           ;PIC18J27J53-killifish_light01.c: 186: utoa(&str, dec, 2);
  3946  003270  0E76               	movlw	low tx_send_dec@str
  3947  003272  0100               	movlb	0	; () banked
  3948  003274  6F6D               	movwf	utoa@str& (0+255),b
  3949  003276  0E00               	movlw	high tx_send_dec@str
  3950  003278  0100               	movlb	0	; () banked
  3951  00327A  6F6E               	movwf	(utoa@str+1)& (0+255),b
  3952  00327C  C080  F06F         	movff	tx_send_dec@dec,utoa@value
  3953  003280  0100               	movlb	0	; () banked
  3954  003282  6B70               	clrf	(utoa@value+1)& (0+255),b
  3955  003284  0E02               	movlw	2
  3956  003286  0100               	movlb	0	; () banked
  3957  003288  6F71               	movwf	utoa@digits& (0+255),b
  3958  00328A  ECA7  F016         	call	_utoa	;wreg free
  3959                           
  3960                           ;PIC18J27J53-killifish_light01.c: 187: if (edit && RTCCFGbits.HALFSEC)tx_sends("  ");
  3961  00328E  0100               	movlb	0	; () banked
  3962  003290  5175               	movf	tx_send_dec@edit& (0+255),w,b
  3963  003292  0100               	movlb	0	; () banked
  3964  003294  B4D8               	btfsc	status,2,c
  3965  003296  D00C               	goto	l4301
  3966                           
  3967                           ; BSR set to: 0
  3968  003298  010F               	movlb	15	; () banked
  3969  00329A  A73F               	btfss	63,3,b	;volatile
  3970  00329C  D009               	goto	l4301
  3971                           
  3972                           ; BSR set to: 15
  3973  00329E  0E70               	movlw	low STR_19
  3974  0032A0  0100               	movlb	0	; () banked
  3975  0032A2  6F6C               	movwf	tx_sends@asciicode& (0+255),b
  3976  0032A4  0E0F               	movlw	high STR_19
  3977  0032A6  0100               	movlb	0	; () banked
  3978  0032A8  6F6D               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3979  0032AA  EC9F  F018         	call	_tx_sends	;wreg free
  3980  0032AE  0012               	return	
  3981  0032B0                     l4301:
  3982                           
  3983                           ;PIC18J27J53-killifish_light01.c: 188: else tx_sends(str);
  3984  0032B0  0E76               	movlw	low tx_send_dec@str
  3985  0032B2  0100               	movlb	0	; () banked
  3986  0032B4  6F6C               	movwf	tx_sends@asciicode& (0+255),b
  3987  0032B6  0E00               	movlw	high tx_send_dec@str
  3988  0032B8  0100               	movlb	0	; () banked
  3989  0032BA  6F6D               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3990  0032BC  EC9F  F018         	call	_tx_sends	;wreg free
  3991  0032C0  0012               	return	
  3992  0032C2  0012               	return		;funcret
  3993  0032C4                     __end_of_tx_send_dec:
  3994                           	opt stack 0
  3995                           tblptru	equ	0xFF8
  3996                           tblptrh	equ	0xFF7
  3997                           tblptrl	equ	0xFF6
  3998                           tablat	equ	0xFF5
  3999                           prodh	equ	0xFF4
  4000                           prodl	equ	0xFF3
  4001                           intcon	equ	0xFF2
  4002                           postinc0	equ	0xFEE
  4003                           wreg	equ	0xFE8
  4004                           indf1	equ	0xFE7
  4005                           postinc1	equ	0xFE6
  4006                           postdec1	equ	0xFE5
  4007                           fsr1h	equ	0xFE2
  4008                           fsr1l	equ	0xFE1
  4009                           indf2	equ	0xFDF
  4010                           postinc2	equ	0xFDE
  4011                           postdec2	equ	0xFDD
  4012                           fsr2h	equ	0xFDA
  4013                           fsr2l	equ	0xFD9
  4014                           status	equ	0xFD8
  4015                           
  4016 ;; *************** function _utoa *****************
  4017 ;; Defined at:
  4018 ;;		line 371 in file "../My_header\My_header.h"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  str             2   13[BANK0 ] PTR unsigned char 
  4021 ;;		 -> tx_send_dec@str(10), 
  4022 ;;  value           2   15[BANK0 ] unsigned int 
  4023 ;;  digits          1   17[BANK0 ] unsigned char 
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;  v               2   19[BANK0 ] unsigned int 
  4026 ;;  d               1   18[BANK0 ] unsigned char 
  4027 ;; Return value:  Size  Location     Type
  4028 ;;		None               void
  4029 ;; Registers used:
  4030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4036 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4037 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4039 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4040 ;;Total ram usage:        8 bytes
  4041 ;; Hardware stack levels used:    1
  4042 ;; Hardware stack levels required when called:    6
  4043 ;; This function calls:
  4044 ;;		___lwdiv
  4045 ;;		___lwmod
  4046 ;; This function is called by:
  4047 ;;		_tx_send_dec
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           	psect	text11
  4052  002D4E                     __ptext11:
  4053                           	opt stack 0
  4054  002D4E                     _utoa:
  4055                           	opt stack 21
  4056                           
  4057                           ;My_header\My_header.h: 372: uint16_t v;
  4058                           ;My_header\My_header.h: 373: uint8_t d;
  4059                           ;My_header\My_header.h: 374: while (digits--) {
  4060                           
  4061                           ;incstack = 0
  4062  002D4E  D038               	goto	l4159
  4063  002D50                     l267:
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;My_header\My_header.h: 375: v = value;
  4067  002D50  C06F  F073         	movff	utoa@value,utoa@v
  4068  002D54  C070  F074         	movff	utoa@value+1,utoa@v+1
  4069                           
  4070                           ;My_header\My_header.h: 376: d = digits;
  4071  002D58  C071  F072         	movff	utoa@digits,utoa@d
  4072                           
  4073                           ;My_header\My_header.h: 377: while (d--) {
  4074  002D5C  D010               	goto	l4151
  4075  002D5E                     l4149:
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;My_header\My_header.h: 378: v /= 10;
  4079  002D5E  C073  F066         	movff	utoa@v,___lwdiv@dividend
  4080  002D62  C074  F067         	movff	utoa@v+1,___lwdiv@dividend+1
  4081  002D66  0E00               	movlw	0
  4082  002D68  0100               	movlb	0	; () banked
  4083  002D6A  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  4084  002D6C  0E0A               	movlw	10
  4085  002D6E  6F68               	movwf	___lwdiv@divisor& (0+255),b
  4086  002D70  EC33  F017         	call	___lwdiv	;wreg free
  4087  002D74  C066  F073         	movff	?___lwdiv,utoa@v
  4088  002D78  C067  F074         	movff	?___lwdiv+1,utoa@v+1
  4089  002D7C  D000               	goto	l4151
  4090  002D7E                     l4151:
  4091  002D7E  0100               	movlb	0	; () banked
  4092  002D80  0772               	decf	utoa@d& (0+255),f,b
  4093  002D82  0100               	movlb	0	; () banked
  4094  002D84  2972               	incf	utoa@d& (0+255),w,b
  4095  002D86  A4D8               	btfss	status,2,c
  4096  002D88  D7EA               	goto	l4149
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;My_header\My_header.h: 379: }
  4100                           ;My_header\My_header.h: 380: v %= 10;
  4101                           
  4102                           ; BSR set to: 0
  4103  002D8A  C073  F060         	movff	utoa@v,___lwmod@dividend
  4104  002D8E  C074  F061         	movff	utoa@v+1,___lwmod@dividend+1
  4105  002D92  0E00               	movlw	0
  4106  002D94  0100               	movlb	0	; () banked
  4107  002D96  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  4108  002D98  0E0A               	movlw	10
  4109  002D9A  6F62               	movwf	___lwmod@divisor& (0+255),b
  4110  002D9C  EC69  F018         	call	___lwmod	;wreg free
  4111  002DA0  C060  F073         	movff	?___lwmod,utoa@v
  4112  002DA4  C061  F074         	movff	?___lwmod+1,utoa@v+1
  4113                           
  4114                           ;My_header\My_header.h: 381: *str++ = '0' + v;
  4115  002DA8  0100               	movlb	0	; () banked
  4116  002DAA  5173               	movf	utoa@v& (0+255),w,b
  4117  002DAC  0F30               	addlw	48
  4118  002DAE  C06D  FFD9         	movff	utoa@str,fsr2l
  4119  002DB2  C06E  FFDA         	movff	utoa@str+1,fsr2h
  4120  002DB6  6EDF               	movwf	indf2,c
  4121                           
  4122                           ; BSR set to: 0
  4123  002DB8  0100               	movlb	0	; () banked
  4124  002DBA  4B6D               	infsnz	utoa@str& (0+255),f,b
  4125  002DBC  2B6E               	incf	(utoa@str+1)& (0+255),f,b
  4126  002DBE  D000               	goto	l4159
  4127  002DC0                     l4159:
  4128  002DC0  0100               	movlb	0	; () banked
  4129  002DC2  0771               	decf	utoa@digits& (0+255),f,b
  4130  002DC4  0100               	movlb	0	; () banked
  4131  002DC6  2971               	incf	utoa@digits& (0+255),w,b
  4132  002DC8  A4D8               	btfss	status,2,c
  4133  002DCA  D7C2               	goto	l267
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;My_header\My_header.h: 382: }
  4137                           ;My_header\My_header.h: 383: *str = '\0';
  4138                           
  4139                           ; BSR set to: 0
  4140  002DCC  C06D  FFD9         	movff	utoa@str,fsr2l
  4141  002DD0  C06E  FFDA         	movff	utoa@str+1,fsr2h
  4142  002DD4  0E00               	movlw	0
  4143  002DD6  6EDF               	movwf	indf2,c
  4144                           
  4145                           ; BSR set to: 0
  4146  002DD8  0012               	return		;funcret
  4147  002DDA                     __end_of_utoa:
  4148                           	opt stack 0
  4149                           tblptru	equ	0xFF8
  4150                           tblptrh	equ	0xFF7
  4151                           tblptrl	equ	0xFF6
  4152                           tablat	equ	0xFF5
  4153                           prodh	equ	0xFF4
  4154                           prodl	equ	0xFF3
  4155                           intcon	equ	0xFF2
  4156                           postinc0	equ	0xFEE
  4157                           wreg	equ	0xFE8
  4158                           indf1	equ	0xFE7
  4159                           postinc1	equ	0xFE6
  4160                           postdec1	equ	0xFE5
  4161                           fsr1h	equ	0xFE2
  4162                           fsr1l	equ	0xFE1
  4163                           indf2	equ	0xFDF
  4164                           postinc2	equ	0xFDE
  4165                           postdec2	equ	0xFDD
  4166                           fsr2h	equ	0xFDA
  4167                           fsr2l	equ	0xFD9
  4168                           status	equ	0xFD8
  4169                           
  4170 ;; *************** function ___lwmod *****************
  4171 ;; Defined at:
  4172 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  dividend        2    0[BANK0 ] unsigned int 
  4175 ;;  divisor         2    2[BANK0 ] unsigned int 
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;  counter         1    4[BANK0 ] unsigned char 
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  2    0[BANK0 ] unsigned int 
  4180 ;; Registers used:
  4181 ;;		wreg, status,2, status,0
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4187 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4188 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4190 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4191 ;;Total ram usage:        5 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; Hardware stack levels required when called:    5
  4194 ;; This function calls:
  4195 ;;		Nothing
  4196 ;; This function is called by:
  4197 ;;		_utoa
  4198 ;;		_tx_sendn
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           	psect	text12
  4203  0030D2                     __ptext12:
  4204                           	opt stack 0
  4205  0030D2                     ___lwmod:
  4206                           	opt stack 21
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;incstack = 0
  4210  0030D2  0100               	movlb	0	; () banked
  4211  0030D4  5162               	movf	___lwmod@divisor& (0+255),w,b
  4212  0030D6  0100               	movlb	0	; () banked
  4213  0030D8  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  4214  0030DA  B4D8               	btfsc	status,2,c
  4215  0030DC  D02B               	goto	l1148
  4216                           
  4217                           ; BSR set to: 0
  4218  0030DE  0E01               	movlw	1
  4219  0030E0  0100               	movlb	0	; () banked
  4220  0030E2  6F64               	movwf	___lwmod@counter& (0+255),b
  4221  0030E4  D007               	goto	l4129
  4222  0030E6                     l4127:
  4223                           
  4224                           ; BSR set to: 0
  4225  0030E6  0100               	movlb	0	; () banked
  4226  0030E8  90D8               	bcf	status,0,c
  4227  0030EA  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  4228  0030EC  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  4229  0030EE  0100               	movlb	0	; () banked
  4230  0030F0  2B64               	incf	___lwmod@counter& (0+255),f,b
  4231  0030F2  D000               	goto	l4129
  4232  0030F4                     l4129:
  4233                           
  4234                           ; BSR set to: 0
  4235  0030F4  0100               	movlb	0	; () banked
  4236  0030F6  BF63               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
  4237  0030F8  D002               	goto	l4131
  4238  0030FA  D7F5               	goto	l4127
  4239                           
  4240                           ; BSR set to: 0
  4241  0030FC  D000               	goto	l4131
  4242  0030FE                     l4131:
  4243                           
  4244                           ; BSR set to: 0
  4245  0030FE  0100               	movlb	0	; () banked
  4246  003100  5162               	movf	___lwmod@divisor& (0+255),w,b
  4247  003102  0100               	movlb	0	; () banked
  4248  003104  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  4249  003106  0100               	movlb	0	; () banked
  4250  003108  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4251  00310A  0100               	movlb	0	; () banked
  4252  00310C  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  4253  00310E  A0D8               	btfss	status,0,c
  4254  003110  D009               	goto	l4135
  4255                           
  4256                           ; BSR set to: 0
  4257  003112  0100               	movlb	0	; () banked
  4258  003114  5162               	movf	___lwmod@divisor& (0+255),w,b
  4259  003116  0100               	movlb	0	; () banked
  4260  003118  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  4261  00311A  0100               	movlb	0	; () banked
  4262  00311C  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4263  00311E  0100               	movlb	0	; () banked
  4264  003120  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  4265  003122  D000               	goto	l4135
  4266  003124                     l4135:
  4267                           
  4268                           ; BSR set to: 0
  4269  003124  0100               	movlb	0	; () banked
  4270  003126  90D8               	bcf	status,0,c
  4271  003128  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  4272  00312A  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  4273                           
  4274                           ; BSR set to: 0
  4275  00312C  0100               	movlb	0	; () banked
  4276  00312E  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  4277  003130  D7E6               	goto	l4131
  4278  003132  D000               	goto	l1148
  4279  003134                     l1148:
  4280                           
  4281                           ; BSR set to: 0
  4282  003134  C060  F060         	movff	___lwmod@dividend,?___lwmod
  4283  003138  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  4284                           
  4285                           ; BSR set to: 0
  4286  00313C  0012               	return		;funcret
  4287  00313E                     __end_of___lwmod:
  4288                           	opt stack 0
  4289                           tblptru	equ	0xFF8
  4290                           tblptrh	equ	0xFF7
  4291                           tblptrl	equ	0xFF6
  4292                           tablat	equ	0xFF5
  4293                           prodh	equ	0xFF4
  4294                           prodl	equ	0xFF3
  4295                           intcon	equ	0xFF2
  4296                           postinc0	equ	0xFEE
  4297                           wreg	equ	0xFE8
  4298                           indf1	equ	0xFE7
  4299                           postinc1	equ	0xFE6
  4300                           postdec1	equ	0xFE5
  4301                           fsr1h	equ	0xFE2
  4302                           fsr1l	equ	0xFE1
  4303                           indf2	equ	0xFDF
  4304                           postinc2	equ	0xFDE
  4305                           postdec2	equ	0xFDD
  4306                           fsr2h	equ	0xFDA
  4307                           fsr2l	equ	0xFD9
  4308                           status	equ	0xFD8
  4309                           
  4310 ;; *************** function ___lwdiv *****************
  4311 ;; Defined at:
  4312 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  4313 ;; Parameters:    Size  Location     Type
  4314 ;;  dividend        2    6[BANK0 ] unsigned int 
  4315 ;;  divisor         2    8[BANK0 ] unsigned int 
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;  quotient        2   11[BANK0 ] unsigned int 
  4318 ;;  counter         1   10[BANK0 ] unsigned char 
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  2    6[BANK0 ] unsigned int 
  4321 ;; Registers used:
  4322 ;;		wreg, status,2, status,0
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4328 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4329 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4331 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4332 ;;Total ram usage:        7 bytes
  4333 ;; Hardware stack levels used:    1
  4334 ;; Hardware stack levels required when called:    5
  4335 ;; This function calls:
  4336 ;;		Nothing
  4337 ;; This function is called by:
  4338 ;;		_utoa
  4339 ;;		_PWM_set
  4340 ;;		_tx_sendn
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           	psect	text13
  4345  002E66                     __ptext13:
  4346                           	opt stack 0
  4347  002E66                     ___lwdiv:
  4348                           	opt stack 23
  4349                           
  4350                           ; BSR set to: 0
  4351                           ;incstack = 0
  4352  002E66  0E00               	movlw	0
  4353  002E68  0100               	movlb	0	; () banked
  4354  002E6A  6F6C               	movwf	(___lwdiv@quotient+1)& (0+255),b
  4355  002E6C  0E00               	movlw	0
  4356  002E6E  6F6B               	movwf	___lwdiv@quotient& (0+255),b
  4357                           
  4358                           ; BSR set to: 0
  4359  002E70  0100               	movlb	0	; () banked
  4360  002E72  5168               	movf	___lwdiv@divisor& (0+255),w,b
  4361  002E74  0100               	movlb	0	; () banked
  4362  002E76  1169               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  4363  002E78  B4D8               	btfsc	status,2,c
  4364  002E7A  D031               	goto	l1138
  4365                           
  4366                           ; BSR set to: 0
  4367  002E7C  0E01               	movlw	1
  4368  002E7E  0100               	movlb	0	; () banked
  4369  002E80  6F6A               	movwf	___lwdiv@counter& (0+255),b
  4370  002E82  D007               	goto	l4109
  4371  002E84                     l4107:
  4372                           
  4373                           ; BSR set to: 0
  4374  002E84  0100               	movlb	0	; () banked
  4375  002E86  90D8               	bcf	status,0,c
  4376  002E88  3768               	rlcf	___lwdiv@divisor& (0+255),f,b
  4377  002E8A  3769               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  4378  002E8C  0100               	movlb	0	; () banked
  4379  002E8E  2B6A               	incf	___lwdiv@counter& (0+255),f,b
  4380  002E90  D000               	goto	l4109
  4381  002E92                     l4109:
  4382                           
  4383                           ; BSR set to: 0
  4384  002E92  0100               	movlb	0	; () banked
  4385  002E94  BF69               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  4386  002E96  D002               	goto	l4111
  4387  002E98  D7F5               	goto	l4107
  4388                           
  4389                           ; BSR set to: 0
  4390  002E9A  D000               	goto	l4111
  4391  002E9C                     l4111:
  4392                           
  4393                           ; BSR set to: 0
  4394  002E9C  0100               	movlb	0	; () banked
  4395  002E9E  90D8               	bcf	status,0,c
  4396  002EA0  376B               	rlcf	___lwdiv@quotient& (0+255),f,b
  4397  002EA2  376C               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  4398                           
  4399                           ; BSR set to: 0
  4400  002EA4  0100               	movlb	0	; () banked
  4401  002EA6  5168               	movf	___lwdiv@divisor& (0+255),w,b
  4402  002EA8  0100               	movlb	0	; () banked
  4403  002EAA  5D66               	subwf	___lwdiv@dividend& (0+255),w,b
  4404  002EAC  0100               	movlb	0	; () banked
  4405  002EAE  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  4406  002EB0  0100               	movlb	0	; () banked
  4407  002EB2  5967               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  4408  002EB4  A0D8               	btfss	status,0,c
  4409  002EB6  D00B               	goto	l4119
  4410                           
  4411                           ; BSR set to: 0
  4412  002EB8  0100               	movlb	0	; () banked
  4413  002EBA  5168               	movf	___lwdiv@divisor& (0+255),w,b
  4414  002EBC  0100               	movlb	0	; () banked
  4415  002EBE  5F66               	subwf	___lwdiv@dividend& (0+255),f,b
  4416  002EC0  0100               	movlb	0	; () banked
  4417  002EC2  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  4418  002EC4  0100               	movlb	0	; () banked
  4419  002EC6  5B67               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  4420                           
  4421                           ; BSR set to: 0
  4422  002EC8  0100               	movlb	0	; () banked
  4423  002ECA  816B               	bsf	___lwdiv@quotient& (0+255),0,b
  4424  002ECC  D000               	goto	l4119
  4425  002ECE                     l4119:
  4426                           
  4427                           ; BSR set to: 0
  4428  002ECE  0100               	movlb	0	; () banked
  4429  002ED0  90D8               	bcf	status,0,c
  4430  002ED2  3369               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  4431  002ED4  3368               	rrcf	___lwdiv@divisor& (0+255),f,b
  4432                           
  4433                           ; BSR set to: 0
  4434  002ED6  0100               	movlb	0	; () banked
  4435  002ED8  2F6A               	decfsz	___lwdiv@counter& (0+255),f,b
  4436  002EDA  D7E0               	goto	l4111
  4437  002EDC  D000               	goto	l1138
  4438  002EDE                     l1138:
  4439                           
  4440                           ; BSR set to: 0
  4441  002EDE  C06B  F066         	movff	___lwdiv@quotient,?___lwdiv
  4442  002EE2  C06C  F067         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4443                           
  4444                           ; BSR set to: 0
  4445  002EE6  0012               	return		;funcret
  4446  002EE8                     __end_of___lwdiv:
  4447                           	opt stack 0
  4448                           tblptru	equ	0xFF8
  4449                           tblptrh	equ	0xFF7
  4450                           tblptrl	equ	0xFF6
  4451                           tablat	equ	0xFF5
  4452                           prodh	equ	0xFF4
  4453                           prodl	equ	0xFF3
  4454                           intcon	equ	0xFF2
  4455                           postinc0	equ	0xFEE
  4456                           wreg	equ	0xFE8
  4457                           indf1	equ	0xFE7
  4458                           postinc1	equ	0xFE6
  4459                           postdec1	equ	0xFE5
  4460                           fsr1h	equ	0xFE2
  4461                           fsr1l	equ	0xFE1
  4462                           indf2	equ	0xFDF
  4463                           postinc2	equ	0xFDE
  4464                           postdec2	equ	0xFDD
  4465                           fsr2h	equ	0xFDA
  4466                           fsr2l	equ	0xFD9
  4467                           status	equ	0xFD8
  4468                           
  4469 ;; *************** function _tx_sends *****************
  4470 ;; Defined at:
  4471 ;;		line 239 in file "../My_header\My_header.h"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;  asciicode       2   12[BANK0 ] PTR const unsigned char 
  4474 ;;		 -> STR_40(4), STR_25(2), STR_24(2), STR_23(3), 
  4475 ;;		 -> STR_22(3), STR_21(2), STR_20(2), STR_19(3), 
  4476 ;;		 -> tx_send_dec@str(10), cursor_up(4), STR_18(3), STR_17(6), 
  4477 ;;		 -> STR_16(6), STR_15(3), cursor_right(4), cursor_down(4), 
  4478 ;;		 -> STR_7(4), STR_6(4), STR_5(4), STR_4(4), 
  4479 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;		None
  4482 ;; Return value:  Size  Location     Type
  4483 ;;		None               void
  4484 ;; Registers used:
  4485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4486 ;; Tracked objects:
  4487 ;;		On entry : 0/0
  4488 ;;		On exit  : 0/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4491 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4494 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4495 ;;Total ram usage:        2 bytes
  4496 ;; Hardware stack levels used:    1
  4497 ;; Hardware stack levels required when called:    7
  4498 ;; This function calls:
  4499 ;;		_ringbuf_push
  4500 ;; This function is called by:
  4501 ;;		_tx_send_dec
  4502 ;;		_tx_send_time
  4503 ;;		_print_time
  4504 ;;		_main
  4505 ;;		_print
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           	psect	text14
  4510  00313E                     __ptext14:
  4511                           	opt stack 0
  4512  00313E                     _tx_sends:
  4513                           	opt stack 23
  4514                           
  4515                           ;My_header\My_header.h: 240: while (*asciicode) {
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;incstack = 0
  4519  00313E  D01F               	goto	l4145
  4520  003140                     l4141:
  4521                           
  4522                           ;My_header\My_header.h: 241: ringbuf_push(&tx_buf, *asciicode++);
  4523  003140  0E2B               	movlw	low _tx_buf
  4524  003142  0100               	movlb	0	; () banked
  4525  003144  6F64               	movwf	ringbuf_push@rb& (0+255),b
  4526  003146  0E00               	movlw	high _tx_buf
  4527  003148  0100               	movlb	0	; () banked
  4528  00314A  6F65               	movwf	(ringbuf_push@rb+1)& (0+255),b
  4529  00314C  C06C  FFF6         	movff	tx_sends@asciicode,tblptrl
  4530  003150  C06D  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  4531  003154  0E00               	movlw	low (__smallconst shr (0+16))
  4532  003156  6EF8               	movwf	tblptru,c
  4533  003158  0E0E               	movlw	(high __ramtop+-1)
  4534  00315A  64F7               	cpfsgt	tblptrh,c
  4535  00315C  D003               	bra	u4207
  4536  00315E  0008               	tblrd		*
  4537  003160  50F5               	movf	tablat,w,c
  4538  003162  D005               	bra	u4200
  4539  003164                     u4207:
  4540  003164  CFF6 FFE1          	movff	tblptrl,fsr1l
  4541  003168  CFF7 FFE2          	movff	tblptrh,fsr1h
  4542  00316C  50E7               	movf	indf1,w,c
  4543  00316E                     u4200:
  4544  00316E  0100               	movlb	0	; () banked
  4545  003170  6F66               	movwf	ringbuf_push@asciicode& (0+255),b
  4546  003172  ECCA  F010         	call	_ringbuf_push	;wreg free
  4547  003176  0100               	movlb	0	; () banked
  4548  003178  4B6C               	infsnz	tx_sends@asciicode& (0+255),f,b
  4549  00317A  2B6D               	incf	(tx_sends@asciicode+1)& (0+255),f,b
  4550  00317C  D000               	goto	l4145
  4551  00317E                     l4145:
  4552  00317E  C06C  FFF6         	movff	tx_sends@asciicode,tblptrl
  4553  003182  C06D  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  4554  003186  0E00               	movlw	low (__smallconst shr (0+16))
  4555  003188  6EF8               	movwf	tblptru,c
  4556  00318A  0E0E               	movlw	(high __ramtop+-1)
  4557  00318C  64F7               	cpfsgt	tblptrh,c
  4558  00318E  D003               	bra	u4217
  4559  003190  0008               	tblrd		*
  4560  003192  50F5               	movf	tablat,w,c
  4561  003194  D005               	bra	u4210
  4562  003196                     u4217:
  4563  003196  CFF6 FFE1          	movff	tblptrl,fsr1l
  4564  00319A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4565  00319E  50E7               	movf	indf1,w,c
  4566  0031A0                     u4210:
  4567  0031A0  0900               	iorlw	0
  4568  0031A2  A4D8               	btfss	status,2,c
  4569  0031A4  D7CD               	goto	l4141
  4570                           
  4571                           ;My_header\My_header.h: 242: }
  4572                           ;My_header\My_header.h: 243: PIE1bits.TX1IE = 1;
  4573  0031A6  889D               	bsf	3997,4,c	;volatile
  4574  0031A8  0012               	return		;funcret
  4575  0031AA                     __end_of_tx_sends:
  4576                           	opt stack 0
  4577                           tblptru	equ	0xFF8
  4578                           tblptrh	equ	0xFF7
  4579                           tblptrl	equ	0xFF6
  4580                           tablat	equ	0xFF5
  4581                           prodh	equ	0xFF4
  4582                           prodl	equ	0xFF3
  4583                           intcon	equ	0xFF2
  4584                           postinc0	equ	0xFEE
  4585                           wreg	equ	0xFE8
  4586                           indf1	equ	0xFE7
  4587                           postinc1	equ	0xFE6
  4588                           postdec1	equ	0xFE5
  4589                           fsr1h	equ	0xFE2
  4590                           fsr1l	equ	0xFE1
  4591                           indf2	equ	0xFDF
  4592                           postinc2	equ	0xFDE
  4593                           postdec2	equ	0xFDD
  4594                           fsr2h	equ	0xFDA
  4595                           fsr2l	equ	0xFD9
  4596                           status	equ	0xFD8
  4597                           
  4598 ;; *************** function _tx_send *****************
  4599 ;; Defined at:
  4600 ;;		line 234 in file "../My_header\My_header.h"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;  asciicode       1    wreg     const unsigned char 
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;  asciicode       1   12[BANK0 ] const unsigned char 
  4605 ;; Return value:  Size  Location     Type
  4606 ;;		None               void
  4607 ;; Registers used:
  4608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4615 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4617 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4618 ;;Total ram usage:        1 bytes
  4619 ;; Hardware stack levels used:    1
  4620 ;; Hardware stack levels required when called:    7
  4621 ;; This function calls:
  4622 ;;		_ringbuf_push
  4623 ;; This function is called by:
  4624 ;;		_tx_send_time
  4625 ;;		_print_time
  4626 ;;		_tx_sendn
  4627 ;;		_print
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631                           	psect	text15
  4632  003630                     __ptext15:
  4633                           	opt stack 0
  4634  003630                     _tx_send:
  4635                           	opt stack 21
  4636                           
  4637                           ;incstack = 0
  4638                           ;tx_send@asciicode stored from wreg
  4639  003630  0100               	movlb	0	; () banked
  4640  003632  6F6C               	movwf	tx_send@asciicode& (0+255),b
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;My_header\My_header.h: 235: ringbuf_push(&tx_buf, asciicode);
  4644  003634  0E2B               	movlw	low _tx_buf
  4645  003636  0100               	movlb	0	; () banked
  4646  003638  6F64               	movwf	ringbuf_push@rb& (0+255),b
  4647  00363A  0E00               	movlw	high _tx_buf
  4648  00363C  0100               	movlb	0	; () banked
  4649  00363E  6F65               	movwf	(ringbuf_push@rb+1)& (0+255),b
  4650  003640  C06C  F066         	movff	tx_send@asciicode,ringbuf_push@asciicode
  4651  003644  ECCA  F010         	call	_ringbuf_push	;wreg free
  4652                           
  4653                           ;My_header\My_header.h: 236: PIE1bits.TX1IE = 1;
  4654  003648  889D               	bsf	3997,4,c	;volatile
  4655  00364A  0012               	return		;funcret
  4656  00364C                     __end_of_tx_send:
  4657                           	opt stack 0
  4658                           tblptru	equ	0xFF8
  4659                           tblptrh	equ	0xFF7
  4660                           tblptrl	equ	0xFF6
  4661                           tablat	equ	0xFF5
  4662                           prodh	equ	0xFF4
  4663                           prodl	equ	0xFF3
  4664                           intcon	equ	0xFF2
  4665                           postinc0	equ	0xFEE
  4666                           wreg	equ	0xFE8
  4667                           indf1	equ	0xFE7
  4668                           postinc1	equ	0xFE6
  4669                           postdec1	equ	0xFE5
  4670                           fsr1h	equ	0xFE2
  4671                           fsr1l	equ	0xFE1
  4672                           indf2	equ	0xFDF
  4673                           postinc2	equ	0xFDE
  4674                           postdec2	equ	0xFDD
  4675                           fsr2h	equ	0xFDA
  4676                           fsr2l	equ	0xFD9
  4677                           status	equ	0xFD8
  4678                           
  4679 ;; *************** function _ringbuf_push *****************
  4680 ;; Defined at:
  4681 ;;		line 37 in file "../My_header\My_ringbuf.h"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;  rb              2    4[BANK0 ] PTR struct ringbuf
  4684 ;;		 -> rx_buf(5), tx_buf(5), 
  4685 ;;  asciicode       1    6[BANK0 ] unsigned char 
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;		None
  4688 ;; Return value:  Size  Location     Type
  4689 ;;		None               void
  4690 ;; Registers used:
  4691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4697 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4699 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4700 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4701 ;;Total ram usage:        8 bytes
  4702 ;; Hardware stack levels used:    1
  4703 ;; Hardware stack levels required when called:    6
  4704 ;; This function calls:
  4705 ;;		_ringbuf_num
  4706 ;; This function is called by:
  4707 ;;		_tx_send
  4708 ;;		_tx_sends
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           	psect	text16
  4713  002194                     __ptext16:
  4714                           	opt stack 0
  4715  002194                     _ringbuf_push:
  4716                           	opt stack 23
  4717                           
  4718                           ;My_header\My_ringbuf.h: 38: if (ringbuf_num(rb) < rb->size) {
  4719                           
  4720                           ;incstack = 0
  4721  002194  C064  F060         	movff	ringbuf_push@rb,ringbuf_num@rb
  4722  002198  C065  F061         	movff	ringbuf_push@rb+1,ringbuf_num@rb+1
  4723  00219C  EC14  F016         	call	_ringbuf_num	;wreg free
  4724  0021A0  0100               	movlb	0	; () banked
  4725  0021A2  6F67               	movwf	??_ringbuf_push& (0+255),b
  4726  0021A4  0100               	movlb	0	; () banked
  4727  0021A6  EE20 F002          	lfsr	2,2
  4728  0021AA  5164               	movf	ringbuf_push@rb& (0+255),w,b
  4729  0021AC  26D9               	addwf	fsr2l,f,c
  4730  0021AE  5165               	movf	(ringbuf_push@rb+1)& (0+255),w,b
  4731  0021B0  22DA               	addwfc	fsr2h,f,c
  4732  0021B2  50DE               	movf	postinc2,w,c
  4733  0021B4  0100               	movlb	0	; () banked
  4734  0021B6  5D67               	subwf	??_ringbuf_push& (0+255),w,b
  4735  0021B8  B0D8               	btfsc	status,0,c
  4736  0021BA  0012               	return	
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;My_header\My_ringbuf.h: 39: rb->buf[rb->head] = asciicode;
  4740  0021BC  0100               	movlb	0	; () banked
  4741  0021BE  EE20 F003          	lfsr	2,3
  4742  0021C2  5164               	movf	ringbuf_push@rb& (0+255),w,b
  4743  0021C4  26D9               	addwf	fsr2l,f,c
  4744  0021C6  5165               	movf	(ringbuf_push@rb+1)& (0+255),w,b
  4745  0021C8  22DA               	addwfc	fsr2h,f,c
  4746  0021CA  50DF               	movf	indf2,w,c
  4747  0021CC  0100               	movlb	0	; () banked
  4748  0021CE  6F67               	movwf	??_ringbuf_push& (0+255),b
  4749  0021D0  0100               	movlb	0	; () banked
  4750  0021D2  5167               	movf	??_ringbuf_push& (0+255),w,b
  4751  0021D4  0D01               	mullw	1
  4752  0021D6  C064  FFD9         	movff	ringbuf_push@rb,fsr2l
  4753  0021DA  C065  FFDA         	movff	ringbuf_push@rb+1,fsr2h
  4754  0021DE  CFDE F068          	movff	postinc2,??_ringbuf_push+1
  4755  0021E2  CFDD F069          	movff	postdec2,??_ringbuf_push+2
  4756  0021E6  50F3               	movf	prodl,w,c
  4757  0021E8  0100               	movlb	0	; () banked
  4758  0021EA  2568               	addwf	(??_ringbuf_push+1)& (0+255),w,b
  4759  0021EC  6ED9               	movwf	fsr2l,c
  4760  0021EE  50F4               	movf	prodh,w,c
  4761  0021F0  0100               	movlb	0	; () banked
  4762  0021F2  2169               	addwfc	(??_ringbuf_push+2)& (0+255),w,b
  4763  0021F4  6EDA               	movwf	fsr2h,c
  4764  0021F6  C066  FFDF         	movff	ringbuf_push@asciicode,indf2
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;My_header\My_ringbuf.h: 40: if (rb->head + 1 < rb->size) rb->head++;
  4768  0021FA  0100               	movlb	0	; () banked
  4769  0021FC  EE20 F002          	lfsr	2,2
  4770  002200  5164               	movf	ringbuf_push@rb& (0+255),w,b
  4771  002202  26D9               	addwf	fsr2l,f,c
  4772  002204  5165               	movf	(ringbuf_push@rb+1)& (0+255),w,b
  4773  002206  22DA               	addwfc	fsr2h,f,c
  4774  002208  50DF               	movf	indf2,w,c
  4775  00220A  0100               	movlb	0	; () banked
  4776  00220C  6F67               	movwf	??_ringbuf_push& (0+255),b
  4777  00220E  6B68               	clrf	(??_ringbuf_push+1)& (0+255),b
  4778  002210  0100               	movlb	0	; () banked
  4779  002212  EE20 F003          	lfsr	2,3
  4780  002216  5164               	movf	ringbuf_push@rb& (0+255),w,b
  4781  002218  26D9               	addwf	fsr2l,f,c
  4782  00221A  5165               	movf	(ringbuf_push@rb+1)& (0+255),w,b
  4783  00221C  22DA               	addwfc	fsr2h,f,c
  4784  00221E  50DF               	movf	indf2,w,c
  4785  002220  0100               	movlb	0	; () banked
  4786  002222  6F69               	movwf	(??_ringbuf_push+2)& (0+255),b
  4787  002224  6B6A               	clrf	(??_ringbuf_push+3)& (0+255),b
  4788  002226  0E01               	movlw	1
  4789  002228  0100               	movlb	0	; () banked
  4790  00222A  2769               	addwf	(??_ringbuf_push+2)& (0+255),f,b
  4791  00222C  0E00               	movlw	0
  4792  00222E  236A               	addwfc	(??_ringbuf_push+3)& (0+255),f,b
  4793  002230  0100               	movlb	0	; () banked
  4794  002232  5167               	movf	??_ringbuf_push& (0+255),w,b
  4795  002234  0100               	movlb	0	; () banked
  4796  002236  5D69               	subwf	(??_ringbuf_push+2)& (0+255),w,b
  4797  002238  0100               	movlb	0	; () banked
  4798  00223A  516A               	movf	(??_ringbuf_push+3)& (0+255),w,b
  4799  00223C  0A80               	xorlw	128
  4800  00223E  0100               	movlb	0	; () banked
  4801  002240  6F6B               	movwf	(??_ringbuf_push+4)& (0+255),b
  4802  002242  0100               	movlb	0	; () banked
  4803  002244  5168               	movf	(??_ringbuf_push+1)& (0+255),w,b
  4804  002246  0A80               	xorlw	128
  4805  002248  0100               	movlb	0	; () banked
  4806  00224A  596B               	subwfb	(??_ringbuf_push+4)& (0+255),w,b
  4807  00224C  B0D8               	btfsc	status,0,c
  4808  00224E  D009               	goto	l4019
  4809                           
  4810                           ; BSR set to: 0
  4811  002250  0100               	movlb	0	; () banked
  4812  002252  EE20 F003          	lfsr	2,3
  4813  002256  5164               	movf	ringbuf_push@rb& (0+255),w,b
  4814  002258  26D9               	addwf	fsr2l,f,c
  4815  00225A  5165               	movf	(ringbuf_push@rb+1)& (0+255),w,b
  4816  00225C  22DA               	addwfc	fsr2h,f,c
  4817  00225E  2ADF               	incf	indf2,f,c
  4818  002260  0012               	return	
  4819  002262                     l4019:
  4820                           
  4821                           ; BSR set to: 0
  4822                           ;My_header\My_ringbuf.h: 41: else rb->head = 0;
  4823  002262  0100               	movlb	0	; () banked
  4824  002264  EE20 F003          	lfsr	2,3
  4825  002268  5164               	movf	ringbuf_push@rb& (0+255),w,b
  4826  00226A  26D9               	addwf	fsr2l,f,c
  4827  00226C  5165               	movf	(ringbuf_push@rb+1)& (0+255),w,b
  4828  00226E  22DA               	addwfc	fsr2h,f,c
  4829  002270  0E00               	movlw	0
  4830  002272  6EDF               	movwf	indf2,c
  4831                           
  4832                           ; BSR set to: 0
  4833  002274  0012               	return	
  4834                           
  4835                           ; BSR set to: 0
  4836                           
  4837                           ; BSR set to: 0
  4838  002276  0012               	return		;funcret
  4839  002278                     __end_of_ringbuf_push:
  4840                           	opt stack 0
  4841                           tblptru	equ	0xFF8
  4842                           tblptrh	equ	0xFF7
  4843                           tblptrl	equ	0xFF6
  4844                           tablat	equ	0xFF5
  4845                           prodh	equ	0xFF4
  4846                           prodl	equ	0xFF3
  4847                           intcon	equ	0xFF2
  4848                           postinc0	equ	0xFEE
  4849                           wreg	equ	0xFE8
  4850                           indf1	equ	0xFE7
  4851                           postinc1	equ	0xFE6
  4852                           postdec1	equ	0xFE5
  4853                           fsr1h	equ	0xFE2
  4854                           fsr1l	equ	0xFE1
  4855                           indf2	equ	0xFDF
  4856                           postinc2	equ	0xFDE
  4857                           postdec2	equ	0xFDD
  4858                           fsr2h	equ	0xFDA
  4859                           fsr2l	equ	0xFD9
  4860                           status	equ	0xFD8
  4861                           
  4862 ;; *************** function _ringbuf_num *****************
  4863 ;; Defined at:
  4864 ;;		line 29 in file "../My_header\My_ringbuf.h"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  4867 ;;		 -> rx_buf(5), tx_buf(5), 
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;		None
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1    wreg      unsigned char 
  4872 ;; Registers used:
  4873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4879 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4881 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4882 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4883 ;;Total ram usage:        4 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; Hardware stack levels required when called:    5
  4886 ;; This function calls:
  4887 ;;		Nothing
  4888 ;; This function is called by:
  4889 ;;		_ringbuf_push
  4890 ;;		_ringbuf_pop
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text17
  4895  002C28                     __ptext17:
  4896                           	opt stack 0
  4897  002C28                     _ringbuf_num:
  4898                           	opt stack 23
  4899                           
  4900                           ;My_header\My_ringbuf.h: 30: if (rb->head >= rb->tail) {
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;incstack = 0
  4904  002C28  0100               	movlb	0	; () banked
  4905  002C2A  EE20 F004          	lfsr	2,4
  4906  002C2E  5160               	movf	ringbuf_num@rb& (0+255),w,b
  4907  002C30  26D9               	addwf	fsr2l,f,c
  4908  002C32  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  4909  002C34  22DA               	addwfc	fsr2h,f,c
  4910  002C36  0100               	movlb	0	; () banked
  4911  002C38  EE10 F003          	lfsr	1,3
  4912  002C3C  5160               	movf	ringbuf_num@rb& (0+255),w,b
  4913  002C3E  26E1               	addwf	fsr1l,f,c
  4914  002C40  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  4915  002C42  22E2               	addwfc	fsr1h,f,c
  4916  002C44  50DE               	movf	postinc2,w,c
  4917  002C46  5CE6               	subwf	postinc1,w,c
  4918  002C48  A0D8               	btfss	status,0,c
  4919  002C4A  D016               	goto	l4007
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;My_header\My_ringbuf.h: 31: return (rb->head - rb->tail);
  4923  002C4C  0100               	movlb	0	; () banked
  4924  002C4E  EE20 F003          	lfsr	2,3
  4925  002C52  5160               	movf	ringbuf_num@rb& (0+255),w,b
  4926  002C54  26D9               	addwf	fsr2l,f,c
  4927  002C56  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  4928  002C58  22DA               	addwfc	fsr2h,f,c
  4929  002C5A  50DF               	movf	indf2,w,c
  4930  002C5C  0100               	movlb	0	; () banked
  4931  002C5E  6F62               	movwf	??_ringbuf_num& (0+255),b
  4932  002C60  0100               	movlb	0	; () banked
  4933  002C62  EE20 F004          	lfsr	2,4
  4934  002C66  5160               	movf	ringbuf_num@rb& (0+255),w,b
  4935  002C68  26D9               	addwf	fsr2l,f,c
  4936  002C6A  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  4937  002C6C  22DA               	addwfc	fsr2h,f,c
  4938  002C6E  50DF               	movf	indf2,w,c
  4939  002C70  0800               	sublw	0
  4940  002C72  0100               	movlb	0	; () banked
  4941  002C74  2562               	addwf	??_ringbuf_num& (0+255),w,b
  4942                           
  4943                           ; BSR set to: 0
  4944                           ;My_header\My_ringbuf.h: 32: } else {
  4945                           
  4946                           ; BSR set to: 0
  4947  002C76  0012               	return	
  4948  002C78                     l4007:
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;My_header\My_ringbuf.h: 33: return (rb->size + rb->head - rb->tail);
  4952  002C78  0100               	movlb	0	; () banked
  4953  002C7A  EE20 F003          	lfsr	2,3
  4954  002C7E  5160               	movf	ringbuf_num@rb& (0+255),w,b
  4955  002C80  26D9               	addwf	fsr2l,f,c
  4956  002C82  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  4957  002C84  22DA               	addwfc	fsr2h,f,c
  4958  002C86  50DF               	movf	indf2,w,c
  4959  002C88  0100               	movlb	0	; () banked
  4960  002C8A  6F62               	movwf	??_ringbuf_num& (0+255),b
  4961  002C8C  0100               	movlb	0	; () banked
  4962  002C8E  EE20 F002          	lfsr	2,2
  4963  002C92  5160               	movf	ringbuf_num@rb& (0+255),w,b
  4964  002C94  26D9               	addwf	fsr2l,f,c
  4965  002C96  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  4966  002C98  22DA               	addwfc	fsr2h,f,c
  4967  002C9A  50DF               	movf	indf2,w,c
  4968  002C9C  0100               	movlb	0	; () banked
  4969  002C9E  6F63               	movwf	(??_ringbuf_num+1)& (0+255),b
  4970  002CA0  0100               	movlb	0	; () banked
  4971  002CA2  EE20 F004          	lfsr	2,4
  4972  002CA6  5160               	movf	ringbuf_num@rb& (0+255),w,b
  4973  002CA8  26D9               	addwf	fsr2l,f,c
  4974  002CAA  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  4975  002CAC  22DA               	addwfc	fsr2h,f,c
  4976  002CAE  50DF               	movf	indf2,w,c
  4977  002CB0  0800               	sublw	0
  4978  002CB2  0100               	movlb	0	; () banked
  4979  002CB4  2563               	addwf	(??_ringbuf_num+1)& (0+255),w,b
  4980  002CB6  0100               	movlb	0	; () banked
  4981  002CB8  2562               	addwf	??_ringbuf_num& (0+255),w,b
  4982                           
  4983                           ; BSR set to: 0
  4984  002CBA  0012               	return	
  4985                           
  4986                           ; BSR set to: 0
  4987                           
  4988                           ; BSR set to: 0
  4989  002CBC  0012               	return		;funcret
  4990  002CBE                     __end_of_ringbuf_num:
  4991                           	opt stack 0
  4992                           tblptru	equ	0xFF8
  4993                           tblptrh	equ	0xFF7
  4994                           tblptrl	equ	0xFF6
  4995                           tablat	equ	0xFF5
  4996                           prodh	equ	0xFF4
  4997                           prodl	equ	0xFF3
  4998                           intcon	equ	0xFF2
  4999                           postinc0	equ	0xFEE
  5000                           wreg	equ	0xFE8
  5001                           indf1	equ	0xFE7
  5002                           postinc1	equ	0xFE6
  5003                           postdec1	equ	0xFE5
  5004                           fsr1h	equ	0xFE2
  5005                           fsr1l	equ	0xFE1
  5006                           indf2	equ	0xFDF
  5007                           postinc2	equ	0xFDE
  5008                           postdec2	equ	0xFDD
  5009                           fsr2h	equ	0xFDA
  5010                           fsr2l	equ	0xFD9
  5011                           status	equ	0xFD8
  5012                           
  5013 ;; *************** function _main_init *****************
  5014 ;; Defined at:
  5015 ;;		line 306 in file "PIC18J27J53-killifish_light01.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;		None
  5018 ;; Auto vars:     Size  Location     Type
  5019 ;;		None
  5020 ;; Return value:  Size  Location     Type
  5021 ;;		None               void
  5022 ;; Registers used:
  5023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5033 ;;Total ram usage:        0 bytes
  5034 ;; Hardware stack levels used:    1
  5035 ;; Hardware stack levels required when called:    6
  5036 ;; This function calls:
  5037 ;;		_ADC_init
  5038 ;;		_OSC_init
  5039 ;;		_PWM_init
  5040 ;;		_RTCC_init
  5041 ;;		_UART_init
  5042 ;;		_ringbuf_init
  5043 ;;		_timer1_init
  5044 ;;		_timer3_init
  5045 ;; This function is called by:
  5046 ;;		_main
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           	psect	text18
  5051  002DDA                     __ptext18:
  5052                           	opt stack 0
  5053  002DDA                     _main_init:
  5054                           	opt stack 24
  5055                           
  5056                           ;PIC18J27J53-killifish_light01.c: 308: OSC_init();
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;incstack = 0
  5060  002DDA  EC31  F01B         	call	_OSC_init	;wreg free
  5061                           
  5062                           ;PIC18J27J53-killifish_light01.c: 309: TRISA = 0b11101111;
  5063  002DDE  0EEF               	movlw	239
  5064  002DE0  6E92               	movwf	3986,c	;volatile
  5065                           
  5066                           ;PIC18J27J53-killifish_light01.c: 310: TRISB = 0b00000000;
  5067  002DE2  0E00               	movlw	0
  5068  002DE4  6E93               	movwf	3987,c	;volatile
  5069                           
  5070                           ;PIC18J27J53-killifish_light01.c: 311: TRISC = 0b10110010;
  5071  002DE6  0EB2               	movlw	178
  5072  002DE8  6E94               	movwf	3988,c	;volatile
  5073                           
  5074                           ;PIC18J27J53-killifish_light01.c: 312: ANCON0 = 0b11111000;
  5075  002DEA  0EF8               	movlw	248
  5076  002DEC  010F               	movlb	15	; () banked
  5077  002DEE  6F48               	movwf	72,b	;volatile
  5078                           
  5079                           ; BSR set to: 15
  5080                           ;PIC18J27J53-killifish_light01.c: 313: ANCON1 = 0b00011111;
  5081  002DF0  0E1F               	movlw	31
  5082  002DF2  010F               	movlb	15	; () banked
  5083  002DF4  6F49               	movwf	73,b	;volatile
  5084                           
  5085                           ; BSR set to: 15
  5086                           ;PIC18J27J53-killifish_light01.c: 315: UCFGbits.UOEMON = 0;
  5087  002DF6  010F               	movlb	15	; () banked
  5088  002DF8  9D39               	bcf	57,6,b	;volatile
  5089                           
  5090                           ; BSR set to: 15
  5091                           ;PIC18J27J53-killifish_light01.c: 318: timer1_init(0, 2);
  5092  002DFA  0E02               	movlw	2
  5093  002DFC  0100               	movlb	0	; () banked
  5094  002DFE  6F60               	movwf	timer1_init@clock_select& (0+255),b
  5095  002E00  0E00               	movlw	0
  5096  002E02  EC8E  F019         	call	_timer1_init
  5097                           
  5098                           ;PIC18J27J53-killifish_light01.c: 319: timer3_init(2);
  5099  002E06  0E02               	movlw	2
  5100  002E08  EC65  F01A         	call	_timer3_init
  5101                           
  5102                           ;PIC18J27J53-killifish_light01.c: 320: ADC_init(0);
  5103  002E0C  0E00               	movlw	0
  5104  002E0E  ECF9  F01A         	call	_ADC_init
  5105                           
  5106                           ;PIC18J27J53-killifish_light01.c: 321: RTCC_init();
  5107  002E12  EC36  F01A         	call	_RTCC_init	;wreg free
  5108                           
  5109                           ;PIC18J27J53-killifish_light01.c: 322: PWM_init(255);
  5110  002E16  0EFF               	movlw	255
  5111  002E18  EC0B  F014         	call	_PWM_init
  5112                           
  5113                           ;PIC18J27J53-killifish_light01.c: 324: UART_init();
  5114  002E1C  ECE9  F01A         	call	_UART_init	;wreg free
  5115                           
  5116                           ;PIC18J27J53-killifish_light01.c: 325: static uint8_t txbuf[250];
  5117                           ;PIC18J27J53-killifish_light01.c: 326: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
  5118  002E20  0E2B               	movlw	low _tx_buf
  5119  002E22  0100               	movlb	0	; () banked
  5120  002E24  6F60               	movwf	ringbuf_init@rb& (0+255),b
  5121  002E26  0E00               	movlw	high _tx_buf
  5122  002E28  0100               	movlb	0	; () banked
  5123  002E2A  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  5124  002E2C  0E00               	movlw	low main_init@txbuf
  5125  002E2E  0100               	movlb	0	; () banked
  5126  002E30  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  5127  002E32  0E05               	movlw	high main_init@txbuf
  5128  002E34  0100               	movlb	0	; () banked
  5129  002E36  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  5130  002E38  0EFA               	movlw	250
  5131  002E3A  0100               	movlb	0	; () banked
  5132  002E3C  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  5133  002E3E  ECDD  F019         	call	_ringbuf_init	;wreg free
  5134                           
  5135                           ;PIC18J27J53-killifish_light01.c: 327: static uint8_t rxbuf[250];
  5136                           ;PIC18J27J53-killifish_light01.c: 328: ringbuf_init(&rx_buf, rxbuf, sizeof (rxbuf));
  5137  002E42  0E26               	movlw	low _rx_buf
  5138  002E44  0100               	movlb	0	; () banked
  5139  002E46  6F60               	movwf	ringbuf_init@rb& (0+255),b
  5140  002E48  0E00               	movlw	high _rx_buf
  5141  002E4A  0100               	movlb	0	; () banked
  5142  002E4C  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  5143  002E4E  0E00               	movlw	low main_init@rxbuf
  5144  002E50  0100               	movlb	0	; () banked
  5145  002E52  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  5146  002E54  0E06               	movlw	high main_init@rxbuf
  5147  002E56  0100               	movlb	0	; () banked
  5148  002E58  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  5149  002E5A  0EFA               	movlw	250
  5150  002E5C  0100               	movlb	0	; () banked
  5151  002E5E  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  5152  002E60  ECDD  F019         	call	_ringbuf_init	;wreg free
  5153  002E64  0012               	return		;funcret
  5154  002E66                     __end_of_main_init:
  5155                           	opt stack 0
  5156                           tblptru	equ	0xFF8
  5157                           tblptrh	equ	0xFF7
  5158                           tblptrl	equ	0xFF6
  5159                           tablat	equ	0xFF5
  5160                           prodh	equ	0xFF4
  5161                           prodl	equ	0xFF3
  5162                           intcon	equ	0xFF2
  5163                           postinc0	equ	0xFEE
  5164                           wreg	equ	0xFE8
  5165                           indf1	equ	0xFE7
  5166                           postinc1	equ	0xFE6
  5167                           postdec1	equ	0xFE5
  5168                           fsr1h	equ	0xFE2
  5169                           fsr1l	equ	0xFE1
  5170                           indf2	equ	0xFDF
  5171                           postinc2	equ	0xFDE
  5172                           postdec2	equ	0xFDD
  5173                           fsr2h	equ	0xFDA
  5174                           fsr2l	equ	0xFD9
  5175                           status	equ	0xFD8
  5176                           
  5177 ;; *************** function _timer3_init *****************
  5178 ;; Defined at:
  5179 ;;		line 86 in file "../My_header\My_header.h"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;  prescaler       1    wreg     unsigned char 
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;  prescaler       1    1[BANK0 ] unsigned char 
  5184 ;; Return value:  Size  Location     Type
  5185 ;;		None               void
  5186 ;; Registers used:
  5187 ;;		wreg, status,2, status,0
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5194 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5195 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5196 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5197 ;;Total ram usage:        2 bytes
  5198 ;; Hardware stack levels used:    1
  5199 ;; Hardware stack levels required when called:    5
  5200 ;; This function calls:
  5201 ;;		Nothing
  5202 ;; This function is called by:
  5203 ;;		_main_init
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           	psect	text19
  5208  0034CA                     __ptext19:
  5209                           	opt stack 0
  5210  0034CA                     _timer3_init:
  5211                           	opt stack 24
  5212                           
  5213                           ;incstack = 0
  5214                           ;timer3_init@prescaler stored from wreg
  5215  0034CA  0100               	movlb	0	; () banked
  5216  0034CC  6F61               	movwf	timer3_init@prescaler& (0+255),b
  5217                           
  5218                           ; BSR set to: 0
  5219                           ;My_header\My_header.h: 87: T3CONbits.TMR3CS = 0;
  5220  0034CE  0E3F               	movlw	-193
  5221  0034D0  1679               	andwf	3961,f,c	;volatile
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;My_header\My_header.h: 88: T3CONbits.T3OSCEN = 0;
  5225  0034D2  9679               	bcf	3961,3,c	;volatile
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;My_header\My_header.h: 89: T3CONbits.T3CKPS = prescaler;
  5229  0034D4  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
  5230  0034D8  0100               	movlb	0	; () banked
  5231  0034DA  3B60               	swapf	??_timer3_init& (0+255),f,b
  5232  0034DC  5079               	movf	3961,w,c	;volatile
  5233  0034DE  0100               	movlb	0	; () banked
  5234  0034E0  1960               	xorwf	??_timer3_init& (0+255),w,b
  5235  0034E2  0BCF               	andlw	-49
  5236  0034E4  1960               	xorwf	??_timer3_init& (0+255),w,b
  5237  0034E6  6E79               	movwf	3961,c	;volatile
  5238                           
  5239                           ; BSR set to: 0
  5240                           ;My_header\My_header.h: 90: T3CONbits.RD163 = 0;
  5241  0034E8  9E79               	bcf	3961,7,c	;volatile
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;My_header\My_header.h: 91: T3CONbits.TMR3ON = 1;
  5245  0034EA  8079               	bsf	3961,0,c	;volatile
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;My_header\My_header.h: 92: IPR2bits.TMR3IP = 0;
  5249  0034EC  92A2               	bcf	4002,1,c	;volatile
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;My_header\My_header.h: 93: PIR2bits.TMR3IF = 0;
  5253  0034EE  92A1               	bcf	4001,1,c	;volatile
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;My_header\My_header.h: 94: PIE2bits.TMR3IE = 1;
  5257  0034F0  82A0               	bsf	4000,1,c	;volatile
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;My_header\My_header.h: 95: INTCONbits.PEIE = 1;
  5261  0034F2  8CF2               	bsf	intcon,6,c	;volatile
  5262                           
  5263                           ; BSR set to: 0
  5264  0034F4  0012               	return		;funcret
  5265  0034F6                     __end_of_timer3_init:
  5266                           	opt stack 0
  5267                           tblptru	equ	0xFF8
  5268                           tblptrh	equ	0xFF7
  5269                           tblptrl	equ	0xFF6
  5270                           tablat	equ	0xFF5
  5271                           prodh	equ	0xFF4
  5272                           prodl	equ	0xFF3
  5273                           intcon	equ	0xFF2
  5274                           postinc0	equ	0xFEE
  5275                           wreg	equ	0xFE8
  5276                           indf1	equ	0xFE7
  5277                           postinc1	equ	0xFE6
  5278                           postdec1	equ	0xFE5
  5279                           fsr1h	equ	0xFE2
  5280                           fsr1l	equ	0xFE1
  5281                           indf2	equ	0xFDF
  5282                           postinc2	equ	0xFDE
  5283                           postdec2	equ	0xFDD
  5284                           fsr2h	equ	0xFDA
  5285                           fsr2l	equ	0xFD9
  5286                           status	equ	0xFD8
  5287                           
  5288 ;; *************** function _timer1_init *****************
  5289 ;; Defined at:
  5290 ;;		line 55 in file "../My_header\My_header.h"
  5291 ;; Parameters:    Size  Location     Type
  5292 ;;  prescaler       1    wreg     unsigned char 
  5293 ;;  clock_select    1    0[BANK0 ] unsigned char 
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;  prescaler       1    2[BANK0 ] unsigned char 
  5296 ;; Return value:  Size  Location     Type
  5297 ;;		None               void
  5298 ;; Registers used:
  5299 ;;		wreg, status,2, status,0
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5305 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5306 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5307 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5308 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5309 ;;Total ram usage:        3 bytes
  5310 ;; Hardware stack levels used:    1
  5311 ;; Hardware stack levels required when called:    5
  5312 ;; This function calls:
  5313 ;;		Nothing
  5314 ;; This function is called by:
  5315 ;;		_main_init
  5316 ;; This function uses a non-reentrant model
  5317 ;;
  5318                           
  5319                           	psect	text20
  5320  00331C                     __ptext20:
  5321                           	opt stack 0
  5322  00331C                     _timer1_init:
  5323                           	opt stack 24
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;incstack = 0
  5327                           ;timer1_init@prescaler stored from wreg
  5328  00331C  0100               	movlb	0	; () banked
  5329  00331E  6F62               	movwf	timer1_init@prescaler& (0+255),b
  5330                           
  5331                           ; BSR set to: 0
  5332                           ;My_header\My_header.h: 56: T1CONbits.TMR1CS = clock_select;
  5333  003320  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
  5334  003324  0100               	movlb	0	; () banked
  5335  003326  3B61               	swapf	??_timer1_init& (0+255),f,b
  5336  003328  4761               	rlncf	??_timer1_init& (0+255),f,b
  5337  00332A  4761               	rlncf	??_timer1_init& (0+255),f,b
  5338  00332C  50CD               	movf	4045,w,c	;volatile
  5339  00332E  0100               	movlb	0	; () banked
  5340  003330  1961               	xorwf	??_timer1_init& (0+255),w,b
  5341  003332  0B3F               	andlw	-193
  5342  003334  1961               	xorwf	??_timer1_init& (0+255),w,b
  5343  003336  6ECD               	movwf	4045,c	;volatile
  5344                           
  5345                           ;My_header\My_header.h: 57: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  5346  003338  0E02               	movlw	2
  5347  00333A  0100               	movlb	0	; () banked
  5348  00333C  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
  5349  00333E  A4D8               	btfss	status,2,c
  5350  003340  D002               	goto	l158
  5351                           
  5352                           ; BSR set to: 0
  5353  003342  86CD               	bsf	4045,3,c	;volatile
  5354  003344  D002               	goto	l4313
  5355  003346                     l158:
  5356                           
  5357                           ; BSR set to: 0
  5358                           ;My_header\My_header.h: 58: else T1CONbits.T1OSCEN = 0;
  5359  003346  96CD               	bcf	4045,3,c	;volatile
  5360  003348  D000               	goto	l4313
  5361  00334A                     l4313:
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;My_header\My_header.h: 59: T1CONbits.T1CKPS = prescaler;
  5365  00334A  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
  5366  00334E  0100               	movlb	0	; () banked
  5367  003350  3B61               	swapf	??_timer1_init& (0+255),f,b
  5368  003352  50CD               	movf	4045,w,c	;volatile
  5369  003354  0100               	movlb	0	; () banked
  5370  003356  1961               	xorwf	??_timer1_init& (0+255),w,b
  5371  003358  0BCF               	andlw	-49
  5372  00335A  1961               	xorwf	??_timer1_init& (0+255),w,b
  5373  00335C  6ECD               	movwf	4045,c	;volatile
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;My_header\My_header.h: 60: T1CONbits.nT1SYNC = 1;
  5377  00335E  84CD               	bsf	4045,2,c	;volatile
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;My_header\My_header.h: 61: T1CONbits.RD16 = 0;
  5381  003360  92CD               	bcf	4045,1,c	;volatile
  5382                           
  5383                           ; BSR set to: 0
  5384                           ;My_header\My_header.h: 62: T1CONbits.TMR1ON = 1;
  5385  003362  80CD               	bsf	4045,0,c	;volatile
  5386                           
  5387                           ; BSR set to: 0
  5388                           ;My_header\My_header.h: 63: IPR1bits.TMR1IP = 0;
  5389  003364  909F               	bcf	3999,0,c	;volatile
  5390                           
  5391                           ; BSR set to: 0
  5392                           ;My_header\My_header.h: 64: PIR1bits.TMR1IF = 0;
  5393  003366  909E               	bcf	3998,0,c	;volatile
  5394                           
  5395                           ; BSR set to: 0
  5396                           ;My_header\My_header.h: 65: PIE1bits.TMR1IE = 1;
  5397  003368  809D               	bsf	3997,0,c	;volatile
  5398                           
  5399                           ; BSR set to: 0
  5400                           ;My_header\My_header.h: 66: INTCONbits.PEIE = 1;
  5401  00336A  8CF2               	bsf	intcon,6,c	;volatile
  5402                           
  5403                           ; BSR set to: 0
  5404  00336C  0012               	return		;funcret
  5405  00336E                     __end_of_timer1_init:
  5406                           	opt stack 0
  5407                           tblptru	equ	0xFF8
  5408                           tblptrh	equ	0xFF7
  5409                           tblptrl	equ	0xFF6
  5410                           tablat	equ	0xFF5
  5411                           prodh	equ	0xFF4
  5412                           prodl	equ	0xFF3
  5413                           intcon	equ	0xFF2
  5414                           postinc0	equ	0xFEE
  5415                           wreg	equ	0xFE8
  5416                           indf1	equ	0xFE7
  5417                           postinc1	equ	0xFE6
  5418                           postdec1	equ	0xFE5
  5419                           fsr1h	equ	0xFE2
  5420                           fsr1l	equ	0xFE1
  5421                           indf2	equ	0xFDF
  5422                           postinc2	equ	0xFDE
  5423                           postdec2	equ	0xFDD
  5424                           fsr2h	equ	0xFDA
  5425                           fsr2l	equ	0xFD9
  5426                           status	equ	0xFD8
  5427                           
  5428 ;; *************** function _ringbuf_init *****************
  5429 ;; Defined at:
  5430 ;;		line 22 in file "../My_header\My_ringbuf.h"
  5431 ;; Parameters:    Size  Location     Type
  5432 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  5433 ;;		 -> rx_buf(5), tx_buf(5), 
  5434 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  5435 ;;		 -> main_init@rxbuf(250), main_init@txbuf(250), 
  5436 ;;  bufsize         1    4[BANK0 ] unsigned char 
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;		None
  5439 ;; Return value:  Size  Location     Type
  5440 ;;		None               void
  5441 ;; Registers used:
  5442 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5443 ;; Tracked objects:
  5444 ;;		On entry : 0/0
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5448 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5451 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5452 ;;Total ram usage:        5 bytes
  5453 ;; Hardware stack levels used:    1
  5454 ;; Hardware stack levels required when called:    5
  5455 ;; This function calls:
  5456 ;;		Nothing
  5457 ;; This function is called by:
  5458 ;;		_main_init
  5459 ;; This function uses a non-reentrant model
  5460 ;;
  5461                           
  5462                           	psect	text21
  5463  0033BA                     __ptext21:
  5464                           	opt stack 0
  5465  0033BA                     _ringbuf_init:
  5466                           	opt stack 24
  5467                           
  5468                           ;My_header\My_ringbuf.h: 23: rb->buf = internal_buf;
  5469                           
  5470                           ; BSR set to: 0
  5471                           ;incstack = 0
  5472  0033BA  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  5473  0033BE  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  5474  0033C2  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  5475  0033C6  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  5476                           
  5477                           ;My_header\My_ringbuf.h: 24: rb->size = bufsize;
  5478  0033CA  0100               	movlb	0	; () banked
  5479  0033CC  EE20 F002          	lfsr	2,2
  5480  0033D0  5160               	movf	ringbuf_init@rb& (0+255),w,b
  5481  0033D2  26D9               	addwf	fsr2l,f,c
  5482  0033D4  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  5483  0033D6  22DA               	addwfc	fsr2h,f,c
  5484  0033D8  C064  FFDF         	movff	ringbuf_init@bufsize,indf2
  5485                           
  5486                           ; BSR set to: 0
  5487                           ;My_header\My_ringbuf.h: 25: rb->head = 0;
  5488  0033DC  0100               	movlb	0	; () banked
  5489  0033DE  EE20 F003          	lfsr	2,3
  5490  0033E2  5160               	movf	ringbuf_init@rb& (0+255),w,b
  5491  0033E4  26D9               	addwf	fsr2l,f,c
  5492  0033E6  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  5493  0033E8  22DA               	addwfc	fsr2h,f,c
  5494  0033EA  0E00               	movlw	0
  5495  0033EC  6EDF               	movwf	indf2,c
  5496                           
  5497                           ; BSR set to: 0
  5498                           ;My_header\My_ringbuf.h: 26: rb->tail = 0;
  5499  0033EE  0100               	movlb	0	; () banked
  5500  0033F0  EE20 F004          	lfsr	2,4
  5501  0033F4  5160               	movf	ringbuf_init@rb& (0+255),w,b
  5502  0033F6  26D9               	addwf	fsr2l,f,c
  5503  0033F8  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  5504  0033FA  22DA               	addwfc	fsr2h,f,c
  5505  0033FC  0E00               	movlw	0
  5506  0033FE  6EDF               	movwf	indf2,c
  5507                           
  5508                           ; BSR set to: 0
  5509  003400  0012               	return		;funcret
  5510  003402                     __end_of_ringbuf_init:
  5511                           	opt stack 0
  5512                           tblptru	equ	0xFF8
  5513                           tblptrh	equ	0xFF7
  5514                           tblptrl	equ	0xFF6
  5515                           tablat	equ	0xFF5
  5516                           prodh	equ	0xFF4
  5517                           prodl	equ	0xFF3
  5518                           intcon	equ	0xFF2
  5519                           postinc0	equ	0xFEE
  5520                           wreg	equ	0xFE8
  5521                           indf1	equ	0xFE7
  5522                           postinc1	equ	0xFE6
  5523                           postdec1	equ	0xFE5
  5524                           fsr1h	equ	0xFE2
  5525                           fsr1l	equ	0xFE1
  5526                           indf2	equ	0xFDF
  5527                           postinc2	equ	0xFDE
  5528                           postdec2	equ	0xFDD
  5529                           fsr2h	equ	0xFDA
  5530                           fsr2l	equ	0xFD9
  5531                           status	equ	0xFD8
  5532                           
  5533 ;; *************** function _UART_init *****************
  5534 ;; Defined at:
  5535 ;;		line 189 in file "../My_header\My_header.h"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;		None
  5538 ;; Auto vars:     Size  Location     Type
  5539 ;;		None
  5540 ;; Return value:  Size  Location     Type
  5541 ;;		None               void
  5542 ;; Registers used:
  5543 ;;		wreg, status,2
  5544 ;; Tracked objects:
  5545 ;;		On entry : 0/0
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5553 ;;Total ram usage:        0 bytes
  5554 ;; Hardware stack levels used:    1
  5555 ;; Hardware stack levels required when called:    5
  5556 ;; This function calls:
  5557 ;;		Nothing
  5558 ;; This function is called by:
  5559 ;;		_main_init
  5560 ;; This function uses a non-reentrant model
  5561 ;;
  5562                           
  5563                           	psect	text22
  5564  0035D2                     __ptext22:
  5565                           	opt stack 0
  5566  0035D2                     _UART_init:
  5567                           	opt stack 24
  5568                           
  5569                           ;My_header\My_header.h: 190: TXSTA1bits.TX9 = 0;
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;incstack = 0
  5573  0035D2  9CAD               	bcf	4013,6,c	;volatile
  5574                           
  5575                           ;My_header\My_header.h: 191: TXSTA1bits.TXEN = 1;
  5576  0035D4  8AAD               	bsf	4013,5,c	;volatile
  5577                           
  5578                           ;My_header\My_header.h: 192: TXSTA1bits.SYNC = 0;
  5579  0035D6  98AD               	bcf	4013,4,c	;volatile
  5580                           
  5581                           ;My_header\My_header.h: 193: TXSTA1bits.BRGH = 0;
  5582  0035D8  94AD               	bcf	4013,2,c	;volatile
  5583                           
  5584                           ;My_header\My_header.h: 194: RCSTA1bits.SPEN = 1;
  5585  0035DA  8EAC               	bsf	4012,7,c	;volatile
  5586                           
  5587                           ;My_header\My_header.h: 195: RCSTA1bits.RX9 = 0;
  5588  0035DC  9CAC               	bcf	4012,6,c	;volatile
  5589                           
  5590                           ;My_header\My_header.h: 196: RCSTA1bits.CREN = 1;
  5591  0035DE  88AC               	bsf	4012,4,c	;volatile
  5592                           
  5593                           ;My_header\My_header.h: 197: BAUDCON1bits.BRG16 = 0;
  5594  0035E0  967E               	bcf	3966,3,c	;volatile
  5595                           
  5596                           ;My_header\My_header.h: 198: SPBRG1 = 48000000 / 64 / 9600 - 1;
  5597  0035E2  0E4D               	movlw	77
  5598  0035E4  6EB0               	movwf	4016,c	;volatile
  5599                           
  5600                           ;My_header\My_header.h: 199: SPBRGH1 = 0;
  5601  0035E6  0E00               	movlw	0
  5602  0035E8  6E7F               	movwf	3967,c	;volatile
  5603                           
  5604                           ;My_header\My_header.h: 200: IPR1bits.RC1IP = 0;
  5605  0035EA  9A9F               	bcf	3999,5,c	;volatile
  5606                           
  5607                           ;My_header\My_header.h: 201: PIE1bits.RC1IE = 1;
  5608  0035EC  8A9D               	bsf	3997,5,c	;volatile
  5609                           
  5610                           ;My_header\My_header.h: 202: INTCONbits.PEIE = 1;
  5611  0035EE  8CF2               	bsf	intcon,6,c	;volatile
  5612  0035F0  0012               	return		;funcret
  5613  0035F2                     __end_of_UART_init:
  5614                           	opt stack 0
  5615                           tblptru	equ	0xFF8
  5616                           tblptrh	equ	0xFF7
  5617                           tblptrl	equ	0xFF6
  5618                           tablat	equ	0xFF5
  5619                           prodh	equ	0xFF4
  5620                           prodl	equ	0xFF3
  5621                           intcon	equ	0xFF2
  5622                           postinc0	equ	0xFEE
  5623                           wreg	equ	0xFE8
  5624                           indf1	equ	0xFE7
  5625                           postinc1	equ	0xFE6
  5626                           postdec1	equ	0xFE5
  5627                           fsr1h	equ	0xFE2
  5628                           fsr1l	equ	0xFE1
  5629                           indf2	equ	0xFDF
  5630                           postinc2	equ	0xFDE
  5631                           postdec2	equ	0xFDD
  5632                           fsr2h	equ	0xFDA
  5633                           fsr2l	equ	0xFD9
  5634                           status	equ	0xFD8
  5635                           
  5636 ;; *************** function _RTCC_init *****************
  5637 ;; Defined at:
  5638 ;;		line 53 in file "../My_header\My_RTCC.h"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;		None
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;		None
  5643 ;; Return value:  Size  Location     Type
  5644 ;;		None               void
  5645 ;; Registers used:
  5646 ;;		wreg, status,2
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5656 ;;Total ram usage:        0 bytes
  5657 ;; Hardware stack levels used:    1
  5658 ;; Hardware stack levels required when called:    5
  5659 ;; This function calls:
  5660 ;;		Nothing
  5661 ;; This function is called by:
  5662 ;;		_main_init
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           	psect	text23
  5667  00346C                     __ptext23:
  5668                           	opt stack 0
  5669  00346C                     _RTCC_init:
  5670                           	opt stack 24
  5671                           
  5672                           ;My_header\My_RTCC.h: 54: RTCCFGbits.RTCWREN = 1;
  5673                           
  5674                           ;incstack = 0
  5675  00346C  010F               	movlb	15	; () banked
  5676  00346E  8B3F               	bsf	63,5,b	;volatile
  5677                           
  5678                           ;My_header\My_RTCC.h: 55: if (RTCCFGbits.RTCWREN != 1) {
  5679  003470  010F               	movlb	15	; () banked
  5680  003472  BB3F               	btfsc	63,5,b	;volatile
  5681  003474  D007               	goto	l3117
  5682                           
  5683                           ; BSR set to: 15
  5684                           ;My_header\My_RTCC.h: 56: EECON2 = 0x55;
  5685  003476  0E55               	movlw	85
  5686  003478  6EA7               	movwf	4007,c	;volatile
  5687                           
  5688                           ;My_header\My_RTCC.h: 57: EECON2 = 0xAA;
  5689  00347A  0EAA               	movlw	170
  5690  00347C  6EA7               	movwf	4007,c	;volatile
  5691                           
  5692                           ; BSR set to: 15
  5693                           ;My_header\My_RTCC.h: 58: RTCCFGbits.RTCWREN = 1;
  5694  00347E  010F               	movlb	15	; () banked
  5695  003480  8B3F               	bsf	63,5,b	;volatile
  5696  003482  D000               	goto	l3117
  5697  003484                     l3117:
  5698                           
  5699                           ; BSR set to: 15
  5700                           ;My_header\My_RTCC.h: 59: }
  5701                           ;My_header\My_RTCC.h: 60: RTCCFGbits.RTCEN = 1;
  5702  003484  010F               	movlb	15	; () banked
  5703  003486  8F3F               	bsf	63,7,b	;volatile
  5704                           
  5705                           ; BSR set to: 15
  5706                           ;My_header\My_RTCC.h: 61: RTCCFGbits.RTCOE = 0;
  5707  003488  010F               	movlb	15	; () banked
  5708  00348A  953F               	bcf	63,2,b	;volatile
  5709                           
  5710                           ; BSR set to: 15
  5711                           ;My_header\My_RTCC.h: 62: PADCFG1bits.RTSECSEL0 = 0;
  5712  00348C  010F               	movlb	15	; () banked
  5713  00348E  933C               	bcf	60,1,b	;volatile
  5714                           
  5715                           ; BSR set to: 15
  5716                           ;My_header\My_RTCC.h: 63: PADCFG1bits.RTSECSEL1 = 1;
  5717  003490  010F               	movlb	15	; () banked
  5718  003492  853C               	bsf	60,2,b	;volatile
  5719                           
  5720                           ;My_header\My_RTCC.h: 64: RTCCAL = 0x00;
  5721  003494  0E00               	movlw	0
  5722  003496  010F               	movlb	15	; () banked
  5723  003498  6F3E               	movwf	62,b	;volatile
  5724                           
  5725                           ; BSR set to: 15
  5726  00349A  0012               	return		;funcret
  5727  00349C                     __end_of_RTCC_init:
  5728                           	opt stack 0
  5729                           tblptru	equ	0xFF8
  5730                           tblptrh	equ	0xFF7
  5731                           tblptrl	equ	0xFF6
  5732                           tablat	equ	0xFF5
  5733                           prodh	equ	0xFF4
  5734                           prodl	equ	0xFF3
  5735                           intcon	equ	0xFF2
  5736                           postinc0	equ	0xFEE
  5737                           wreg	equ	0xFE8
  5738                           indf1	equ	0xFE7
  5739                           postinc1	equ	0xFE6
  5740                           postdec1	equ	0xFE5
  5741                           fsr1h	equ	0xFE2
  5742                           fsr1l	equ	0xFE1
  5743                           indf2	equ	0xFDF
  5744                           postinc2	equ	0xFDE
  5745                           postdec2	equ	0xFDD
  5746                           fsr2h	equ	0xFDA
  5747                           fsr2l	equ	0xFD9
  5748                           status	equ	0xFD8
  5749                           
  5750 ;; *************** function _PWM_init *****************
  5751 ;; Defined at:
  5752 ;;		line 121 in file "PIC18J27J53-killifish_light01.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;  PR              1    wreg     unsigned char 
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;  PR              1    0[BANK0 ] unsigned char 
  5757 ;; Return value:  Size  Location     Type
  5758 ;;		None               void
  5759 ;; Registers used:
  5760 ;;		wreg, status,2, status,0
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5767 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5769 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5770 ;;Total ram usage:        1 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:    5
  5773 ;; This function calls:
  5774 ;;		Nothing
  5775 ;; This function is called by:
  5776 ;;		_main_init
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           	psect	text24
  5781  002816                     __ptext24:
  5782                           	opt stack 0
  5783  002816                     _PWM_init:
  5784                           	opt stack 24
  5785                           
  5786                           ; BSR set to: 15
  5787                           ;incstack = 0
  5788                           ;PWM_init@PR stored from wreg
  5789  002816  0100               	movlb	0	; () banked
  5790  002818  6F60               	movwf	PWM_init@PR& (0+255),b
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;PIC18J27J53-killifish_light01.c: 122: PPSCONbits.IOLOCK = 0;
  5794  00281A  010E               	movlb	14	; () banked
  5795  00281C  91BF               	bcf	191,0,b	;volatile
  5796                           
  5797                           ;PIC18J27J53-killifish_light01.c: 123: if (PPSCONbits.IOLOCK != 0) {
  5798  00281E  010E               	movlb	14	; () banked
  5799  002820  A1BF               	btfss	191,0,b	;volatile
  5800  002822  D006               	goto	l506
  5801                           
  5802                           ; BSR set to: 14
  5803                           ;PIC18J27J53-killifish_light01.c: 124: EECON2 = 0x55;
  5804  002824  0E55               	movlw	85
  5805  002826  6EA7               	movwf	4007,c	;volatile
  5806                           
  5807                           ;PIC18J27J53-killifish_light01.c: 125: EECON2 = 0xAA;
  5808  002828  0EAA               	movlw	170
  5809  00282A  6EA7               	movwf	4007,c	;volatile
  5810                           
  5811                           ; BSR set to: 14
  5812                           ;PIC18J27J53-killifish_light01.c: 126: PPSCONbits.IOLOCK = 0;
  5813  00282C  010E               	movlb	14	; () banked
  5814  00282E  91BF               	bcf	191,0,b	;volatile
  5815  002830                     l506:
  5816                           
  5817                           ; BSR set to: 14
  5818                           ;PIC18J27J53-killifish_light01.c: 127: }
  5819                           ;PIC18J27J53-killifish_light01.c: 129: RPOR3 = 14;
  5820  002830  0E0E               	movlw	14
  5821  002832  010E               	movlb	14	; () banked
  5822  002834  6FC3               	movwf	195,b	;volatile
  5823                           
  5824                           ;PIC18J27J53-killifish_light01.c: 130: RPOR4 = 18;
  5825  002836  0E12               	movlw	18
  5826  002838  010E               	movlb	14	; () banked
  5827  00283A  6FC4               	movwf	196,b	;volatile
  5828                           
  5829                           ;PIC18J27J53-killifish_light01.c: 131: RPOR5 = 22;
  5830  00283C  0E16               	movlw	22
  5831  00283E  010E               	movlb	14	; () banked
  5832  002840  6FC5               	movwf	197,b	;volatile
  5833                           
  5834                           ; BSR set to: 14
  5835                           ;PIC18J27J53-killifish_light01.c: 133: CCP1CONbits.CCP1M = 12;
  5836  002842  50BA               	movf	4026,w,c	;volatile
  5837  002844  0BF0               	andlw	-16
  5838  002846  090C               	iorlw	12
  5839  002848  6EBA               	movwf	4026,c	;volatile
  5840                           
  5841                           ; BSR set to: 14
  5842                           ;PIC18J27J53-killifish_light01.c: 134: CCP1CONbits.P1M = 0;
  5843  00284A  0E3F               	movlw	-193
  5844  00284C  16BA               	andwf	4026,f,c	;volatile
  5845                           
  5846                           ; BSR set to: 14
  5847                           ;PIC18J27J53-killifish_light01.c: 135: CCPTMRS0bits.C1TSEL = 0;
  5848  00284E  9152               	bcf	82,0,b	;volatile
  5849  002850  9352               	bcf	82,1,b	;volatile
  5850  002852  9552               	bcf	82,2,b	;volatile
  5851                           
  5852                           ; BSR set to: 14
  5853                           ;PIC18J27J53-killifish_light01.c: 136: CCPR1Lbits.CCPR1L = 0;
  5854  002854  0E00               	movlw	0
  5855  002856  6EBB               	movwf	4027,c	;volatile
  5856                           
  5857                           ; BSR set to: 14
  5858                           ;PIC18J27J53-killifish_light01.c: 137: CCP1CONbits.DC1B = 0;
  5859  002858  0ECF               	movlw	-49
  5860  00285A  16BA               	andwf	4026,f,c	;volatile
  5861                           
  5862                           ; BSR set to: 14
  5863                           ;PIC18J27J53-killifish_light01.c: 139: CCP2CONbits.CCP2M = 12;
  5864  00285C  50B4               	movf	4020,w,c	;volatile
  5865  00285E  0BF0               	andlw	-16
  5866  002860  090C               	iorlw	12
  5867  002862  6EB4               	movwf	4020,c	;volatile
  5868                           
  5869                           ; BSR set to: 14
  5870                           ;PIC18J27J53-killifish_light01.c: 140: CCP2CONbits.P2M = 0;
  5871  002864  0E3F               	movlw	-193
  5872  002866  16B4               	andwf	4020,f,c	;volatile
  5873                           
  5874                           ; BSR set to: 14
  5875                           ;PIC18J27J53-killifish_light01.c: 141: CCPTMRS0bits.C2TSEL = 0;
  5876  002868  9752               	bcf	82,3,b	;volatile
  5877  00286A  9952               	bcf	82,4,b	;volatile
  5878  00286C  9B52               	bcf	82,5,b	;volatile
  5879                           
  5880                           ; BSR set to: 14
  5881                           ;PIC18J27J53-killifish_light01.c: 142: CCPR2Lbits.CCPR2L = 0;
  5882  00286E  0E00               	movlw	0
  5883  002870  6EB5               	movwf	4021,c	;volatile
  5884                           
  5885                           ; BSR set to: 14
  5886                           ;PIC18J27J53-killifish_light01.c: 143: CCP2CONbits.DC2B = 0;
  5887  002872  0ECF               	movlw	-49
  5888  002874  16B4               	andwf	4020,f,c	;volatile
  5889                           
  5890                           ; BSR set to: 14
  5891                           ;PIC18J27J53-killifish_light01.c: 145: CCP3CONbits.CCP3M = 12;
  5892  002876  010F               	movlb	15	; () banked
  5893  002878  5115               	movf	21,w,b	;volatile
  5894  00287A  0BF0               	andlw	-16
  5895  00287C  090C               	iorlw	12
  5896  00287E  6F15               	movwf	21,b	;volatile
  5897                           
  5898                           ; BSR set to: 15
  5899                           ;PIC18J27J53-killifish_light01.c: 146: CCP3CONbits.P3M = 0;
  5900  002880  0E3F               	movlw	-193
  5901  002882  010F               	movlb	15	; () banked
  5902  002884  1715               	andwf	21,f,b	;volatile
  5903                           
  5904                           ; BSR set to: 15
  5905                           ;PIC18J27J53-killifish_light01.c: 147: CCPTMRS0bits.C3TSEL = 0;
  5906  002886  0E3F               	movlw	-193
  5907  002888  010F               	movlb	15	; () banked
  5908  00288A  1752               	andwf	82,f,b	;volatile
  5909                           
  5910                           ; BSR set to: 15
  5911                           ;PIC18J27J53-killifish_light01.c: 148: CCPR3Lbits.CCPR3L = 0;
  5912  00288C  0E00               	movlw	0
  5913  00288E  010F               	movlb	15	; () banked
  5914  002890  6F16               	movwf	22,b	;volatile
  5915                           
  5916                           ; BSR set to: 15
  5917                           ;PIC18J27J53-killifish_light01.c: 149: CCP3CONbits.DC3B = 0;
  5918  002892  0ECF               	movlw	-49
  5919  002894  010F               	movlb	15	; () banked
  5920  002896  1715               	andwf	21,f,b	;volatile
  5921                           
  5922                           ; BSR set to: 15
  5923                           ;PIC18J27J53-killifish_light01.c: 151: CCP4CONbits.CCP4M = 12;
  5924  002898  010F               	movlb	15	; () banked
  5925  00289A  5112               	movf	18,w,b	;volatile
  5926  00289C  0BF0               	andlw	-16
  5927  00289E  090C               	iorlw	12
  5928  0028A0  6F12               	movwf	18,b	;volatile
  5929                           
  5930                           ; BSR set to: 15
  5931                           ;PIC18J27J53-killifish_light01.c: 152: CCPTMRS1bits.C4TSEL = 0;
  5932  0028A2  0EFC               	movlw	-4
  5933  0028A4  010F               	movlb	15	; () banked
  5934  0028A6  1751               	andwf	81,f,b	;volatile
  5935                           
  5936                           ; BSR set to: 15
  5937                           ;PIC18J27J53-killifish_light01.c: 153: CCPR4Lbits.CCPR4L = 0;
  5938  0028A8  0E00               	movlw	0
  5939  0028AA  010F               	movlb	15	; () banked
  5940  0028AC  6F13               	movwf	19,b	;volatile
  5941                           
  5942                           ; BSR set to: 15
  5943                           ;PIC18J27J53-killifish_light01.c: 154: CCP4CONbits.DC4B = 0;
  5944  0028AE  0ECF               	movlw	-49
  5945  0028B0  010F               	movlb	15	; () banked
  5946  0028B2  1712               	andwf	18,f,b	;volatile
  5947                           
  5948                           ; BSR set to: 15
  5949                           ;PIC18J27J53-killifish_light01.c: 156: T2CONbits.T2OUTPS = 0;
  5950  0028B4  96CA               	bcf	4042,3,c	;volatile
  5951  0028B6  98CA               	bcf	4042,4,c	;volatile
  5952  0028B8  9ACA               	bcf	4042,5,c	;volatile
  5953  0028BA  9CCA               	bcf	4042,6,c	;volatile
  5954                           
  5955                           ; BSR set to: 15
  5956                           ;PIC18J27J53-killifish_light01.c: 157: T2CONbits.T2CKPS = 2;
  5957  0028BC  50CA               	movf	4042,w,c	;volatile
  5958  0028BE  0BFC               	andlw	-4
  5959  0028C0  0902               	iorlw	2
  5960  0028C2  6ECA               	movwf	4042,c	;volatile
  5961                           
  5962                           ; BSR set to: 15
  5963                           ;PIC18J27J53-killifish_light01.c: 158: PR2 = PR - 1;
  5964  0028C4  0100               	movlb	0	; () banked
  5965  0028C6  0560               	decf	PWM_init@PR& (0+255),w,b
  5966  0028C8  6ECB               	movwf	4043,c	;volatile
  5967                           
  5968                           ; BSR set to: 0
  5969                           ;PIC18J27J53-killifish_light01.c: 159: T2CONbits.TMR2ON = 1;
  5970  0028CA  84CA               	bsf	4042,2,c	;volatile
  5971                           
  5972                           ; BSR set to: 0
  5973  0028CC  0012               	return		;funcret
  5974  0028CE                     __end_of_PWM_init:
  5975                           	opt stack 0
  5976                           tblptru	equ	0xFF8
  5977                           tblptrh	equ	0xFF7
  5978                           tblptrl	equ	0xFF6
  5979                           tablat	equ	0xFF5
  5980                           prodh	equ	0xFF4
  5981                           prodl	equ	0xFF3
  5982                           intcon	equ	0xFF2
  5983                           postinc0	equ	0xFEE
  5984                           wreg	equ	0xFE8
  5985                           indf1	equ	0xFE7
  5986                           postinc1	equ	0xFE6
  5987                           postdec1	equ	0xFE5
  5988                           fsr1h	equ	0xFE2
  5989                           fsr1l	equ	0xFE1
  5990                           indf2	equ	0xFDF
  5991                           postinc2	equ	0xFDE
  5992                           postdec2	equ	0xFDD
  5993                           fsr2h	equ	0xFDA
  5994                           fsr2l	equ	0xFD9
  5995                           status	equ	0xFD8
  5996                           
  5997 ;; *************** function _OSC_init *****************
  5998 ;; Defined at:
  5999 ;;		line 135 in file "../My_header\My_header.h"
  6000 ;; Parameters:    Size  Location     Type
  6001 ;;		None
  6002 ;; Auto vars:     Size  Location     Type
  6003 ;;		None
  6004 ;; Return value:  Size  Location     Type
  6005 ;;		None               void
  6006 ;; Registers used:
  6007 ;;		wreg, status,2
  6008 ;; Tracked objects:
  6009 ;;		On entry : 0/0
  6010 ;;		On exit  : 0/0
  6011 ;;		Unchanged: 0/0
  6012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6017 ;;Total ram usage:        0 bytes
  6018 ;; Hardware stack levels used:    1
  6019 ;; Hardware stack levels required when called:    5
  6020 ;; This function calls:
  6021 ;;		Nothing
  6022 ;; This function is called by:
  6023 ;;		_main_init
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text25
  6028  003662                     __ptext25:
  6029                           	opt stack 0
  6030  003662                     _OSC_init:
  6031                           	opt stack 24
  6032                           
  6033                           ;My_header\My_header.h: 136: OSCCONbits.IRCF = 7;
  6034                           
  6035                           ; BSR set to: 0
  6036                           ;incstack = 0
  6037  003662  88D3               	bsf	4051,4,c	;volatile
  6038  003664  8AD3               	bsf	4051,5,c	;volatile
  6039  003666  8CD3               	bsf	4051,6,c	;volatile
  6040                           
  6041                           ;My_header\My_header.h: 137: OSCTUNEbits.PLLEN = 1;
  6042  003668  8C9B               	bsf	3995,6,c	;volatile
  6043                           
  6044                           ;My_header\My_header.h: 138: OSCCONbits.SCS = 0;
  6045  00366A  0EFC               	movlw	-4
  6046  00366C  16D3               	andwf	4051,f,c	;volatile
  6047  00366E  0012               	return		;funcret
  6048  003670                     __end_of_OSC_init:
  6049                           	opt stack 0
  6050                           tblptru	equ	0xFF8
  6051                           tblptrh	equ	0xFF7
  6052                           tblptrl	equ	0xFF6
  6053                           tablat	equ	0xFF5
  6054                           prodh	equ	0xFF4
  6055                           prodl	equ	0xFF3
  6056                           intcon	equ	0xFF2
  6057                           postinc0	equ	0xFEE
  6058                           wreg	equ	0xFE8
  6059                           indf1	equ	0xFE7
  6060                           postinc1	equ	0xFE6
  6061                           postdec1	equ	0xFE5
  6062                           fsr1h	equ	0xFE2
  6063                           fsr1l	equ	0xFE1
  6064                           indf2	equ	0xFDF
  6065                           postinc2	equ	0xFDE
  6066                           postdec2	equ	0xFDD
  6067                           fsr2h	equ	0xFDA
  6068                           fsr2l	equ	0xFD9
  6069                           status	equ	0xFD8
  6070                           
  6071 ;; *************** function _ADC_init *****************
  6072 ;; Defined at:
  6073 ;;		line 148 in file "../My_header\My_header.h"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;  p_ref           1    wreg     unsigned char 
  6076 ;; Auto vars:     Size  Location     Type
  6077 ;;  p_ref           1    0[BANK0 ] unsigned char 
  6078 ;; Return value:  Size  Location     Type
  6079 ;;		None               void
  6080 ;; Registers used:
  6081 ;;		wreg, status,2
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6088 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6090 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6091 ;;Total ram usage:        1 bytes
  6092 ;; Hardware stack levels used:    1
  6093 ;; Hardware stack levels required when called:    5
  6094 ;; This function calls:
  6095 ;;		Nothing
  6096 ;; This function is called by:
  6097 ;;		_main_init
  6098 ;; This function uses a non-reentrant model
  6099 ;;
  6100                           
  6101                           	psect	text26
  6102  0035F2                     __ptext26:
  6103                           	opt stack 0
  6104  0035F2                     _ADC_init:
  6105                           	opt stack 24
  6106                           
  6107                           ;incstack = 0
  6108                           ;ADC_init@p_ref stored from wreg
  6109  0035F2  0100               	movlb	0	; () banked
  6110  0035F4  6F60               	movwf	ADC_init@p_ref& (0+255),b
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;My_header\My_header.h: 149: ADCON0bits.VCFG1 = 0;
  6114  0035F6  9EC2               	bcf	4034,7,c	;volatile
  6115                           
  6116                           ; BSR set to: 0
  6117                           ;My_header\My_header.h: 150: ADCON0bits.VCFG0 = p_ref;
  6118  0035F8  0100               	movlb	0	; () banked
  6119  0035FA  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
  6120  0035FC  D002               	bra	u4465
  6121  0035FE  9CC2               	bcf	4034,6,c	;volatile
  6122  003600  D001               	bra	u4466
  6123  003602                     u4465:
  6124  003602  8CC2               	bsf	4034,6,c	;volatile
  6125  003604                     u4466:
  6126                           
  6127                           ;My_header\My_header.h: 152: ADCON1bits.ADFM = 1;
  6128  003604  8EC1               	bsf	4033,7,c	;volatile
  6129                           
  6130                           ;My_header\My_header.h: 153: ADCON1bits.ADCAL = 0;
  6131  003606  9CC1               	bcf	4033,6,c	;volatile
  6132                           
  6133                           ;My_header\My_header.h: 154: ADCON1bits.ADCS = 2;
  6134  003608  50C1               	movf	4033,w,c	;volatile
  6135  00360A  0BF8               	andlw	-8
  6136  00360C  0902               	iorlw	2
  6137  00360E  6EC1               	movwf	4033,c	;volatile
  6138  003610  0012               	return		;funcret
  6139  003612                     __end_of_ADC_init:
  6140                           	opt stack 0
  6141                           tblptru	equ	0xFF8
  6142                           tblptrh	equ	0xFF7
  6143                           tblptrl	equ	0xFF6
  6144                           tablat	equ	0xFF5
  6145                           prodh	equ	0xFF4
  6146                           prodl	equ	0xFF3
  6147                           intcon	equ	0xFF2
  6148                           postinc0	equ	0xFEE
  6149                           wreg	equ	0xFE8
  6150                           indf1	equ	0xFE7
  6151                           postinc1	equ	0xFE6
  6152                           postdec1	equ	0xFE5
  6153                           fsr1h	equ	0xFE2
  6154                           fsr1l	equ	0xFE1
  6155                           indf2	equ	0xFDF
  6156                           postinc2	equ	0xFDE
  6157                           postdec2	equ	0xFDD
  6158                           fsr2h	equ	0xFDA
  6159                           fsr2l	equ	0xFD9
  6160                           status	equ	0xFD8
  6161                           
  6162 ;; *************** function ___llmod *****************
  6163 ;; Defined at:
  6164 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;  dividend        4    0[BANK0 ] unsigned long 
  6167 ;;  divisor         4    4[BANK0 ] unsigned long 
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;  counter         1    8[BANK0 ] unsigned char 
  6170 ;; Return value:  Size  Location     Type
  6171 ;;                  4    0[BANK0 ] unsigned long 
  6172 ;; Registers used:
  6173 ;;		wreg, status,2, status,0
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/0
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6179 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6180 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6182 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6183 ;;Total ram usage:        9 bytes
  6184 ;; Hardware stack levels used:    1
  6185 ;; Hardware stack levels required when called:    5
  6186 ;; This function calls:
  6187 ;;		Nothing
  6188 ;; This function is called by:
  6189 ;;		_main
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193                           	psect	text27
  6194  002B84                     __ptext27:
  6195                           	opt stack 0
  6196  002B84                     ___llmod:
  6197                           	opt stack 25
  6198                           
  6199                           ;incstack = 0
  6200  002B84  0100               	movlb	0	; () banked
  6201  002B86  5164               	movf	___llmod@divisor& (0+255),w,b
  6202  002B88  0100               	movlb	0	; () banked
  6203  002B8A  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  6204  002B8C  0100               	movlb	0	; () banked
  6205  002B8E  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  6206  002B90  0100               	movlb	0	; () banked
  6207  002B92  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  6208  002B94  B4D8               	btfsc	status,2,c
  6209  002B96  D03F               	goto	l1085
  6210                           
  6211                           ; BSR set to: 0
  6212  002B98  0E01               	movlw	1
  6213  002B9A  0100               	movlb	0	; () banked
  6214  002B9C  6F68               	movwf	___llmod@counter& (0+255),b
  6215  002B9E  D009               	goto	l4863
  6216  002BA0                     l4861:
  6217                           
  6218                           ; BSR set to: 0
  6219  002BA0  0100               	movlb	0	; () banked
  6220  002BA2  90D8               	bcf	status,0,c
  6221  002BA4  3764               	rlcf	___llmod@divisor& (0+255),f,b
  6222  002BA6  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  6223  002BA8  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  6224  002BAA  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  6225  002BAC  0100               	movlb	0	; () banked
  6226  002BAE  2B68               	incf	___llmod@counter& (0+255),f,b
  6227  002BB0  D000               	goto	l4863
  6228  002BB2                     l4863:
  6229                           
  6230                           ; BSR set to: 0
  6231  002BB2  0100               	movlb	0	; () banked
  6232  002BB4  BF67               	btfsc	(___llmod@divisor+3)& (0+255),7,b
  6233  002BB6  D002               	goto	l4865
  6234  002BB8  D7F3               	goto	l4861
  6235                           
  6236                           ; BSR set to: 0
  6237  002BBA  D000               	goto	l4865
  6238  002BBC                     l4865:
  6239                           
  6240                           ; BSR set to: 0
  6241  002BBC  0100               	movlb	0	; () banked
  6242  002BBE  5164               	movf	___llmod@divisor& (0+255),w,b
  6243  002BC0  0100               	movlb	0	; () banked
  6244  002BC2  5D60               	subwf	___llmod@dividend& (0+255),w,b
  6245  002BC4  0100               	movlb	0	; () banked
  6246  002BC6  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  6247  002BC8  0100               	movlb	0	; () banked
  6248  002BCA  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  6249  002BCC  0100               	movlb	0	; () banked
  6250  002BCE  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  6251  002BD0  0100               	movlb	0	; () banked
  6252  002BD2  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  6253  002BD4  0100               	movlb	0	; () banked
  6254  002BD6  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  6255  002BD8  0100               	movlb	0	; () banked
  6256  002BDA  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  6257  002BDC  A0D8               	btfss	status,0,c
  6258  002BDE  D011               	goto	l4869
  6259                           
  6260                           ; BSR set to: 0
  6261  002BE0  0100               	movlb	0	; () banked
  6262  002BE2  5164               	movf	___llmod@divisor& (0+255),w,b
  6263  002BE4  0100               	movlb	0	; () banked
  6264  002BE6  5F60               	subwf	___llmod@dividend& (0+255),f,b
  6265  002BE8  0100               	movlb	0	; () banked
  6266  002BEA  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  6267  002BEC  0100               	movlb	0	; () banked
  6268  002BEE  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  6269  002BF0  0100               	movlb	0	; () banked
  6270  002BF2  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  6271  002BF4  0100               	movlb	0	; () banked
  6272  002BF6  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  6273  002BF8  0100               	movlb	0	; () banked
  6274  002BFA  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  6275  002BFC  0100               	movlb	0	; () banked
  6276  002BFE  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  6277  002C00  D000               	goto	l4869
  6278  002C02                     l4869:
  6279                           
  6280                           ; BSR set to: 0
  6281  002C02  0100               	movlb	0	; () banked
  6282  002C04  90D8               	bcf	status,0,c
  6283  002C06  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  6284  002C08  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  6285  002C0A  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  6286  002C0C  3364               	rrcf	___llmod@divisor& (0+255),f,b
  6287                           
  6288                           ; BSR set to: 0
  6289  002C0E  0100               	movlb	0	; () banked
  6290  002C10  2F68               	decfsz	___llmod@counter& (0+255),f,b
  6291  002C12  D7D4               	goto	l4865
  6292  002C14  D000               	goto	l1085
  6293  002C16                     l1085:
  6294                           
  6295                           ; BSR set to: 0
  6296  002C16  C060  F060         	movff	___llmod@dividend,?___llmod
  6297  002C1A  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  6298  002C1E  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  6299  002C22  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  6300                           
  6301                           ; BSR set to: 0
  6302  002C26  0012               	return		;funcret
  6303  002C28                     __end_of___llmod:
  6304                           	opt stack 0
  6305                           tblptru	equ	0xFF8
  6306                           tblptrh	equ	0xFF7
  6307                           tblptrl	equ	0xFF6
  6308                           tablat	equ	0xFF5
  6309                           prodh	equ	0xFF4
  6310                           prodl	equ	0xFF3
  6311                           intcon	equ	0xFF2
  6312                           postinc0	equ	0xFEE
  6313                           wreg	equ	0xFE8
  6314                           indf1	equ	0xFE7
  6315                           postinc1	equ	0xFE6
  6316                           postdec1	equ	0xFE5
  6317                           fsr1h	equ	0xFE2
  6318                           fsr1l	equ	0xFE1
  6319                           indf2	equ	0xFDF
  6320                           postinc2	equ	0xFDE
  6321                           postdec2	equ	0xFDD
  6322                           fsr2h	equ	0xFDA
  6323                           fsr2l	equ	0xFD9
  6324                           status	equ	0xFD8
  6325                           
  6326 ;; *************** function _RTCC_loop *****************
  6327 ;; Defined at:
  6328 ;;		line 394 in file "../My_header\My_RTCC.h"
  6329 ;; Parameters:    Size  Location     Type
  6330 ;;		None
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;		None
  6333 ;; Return value:  Size  Location     Type
  6334 ;;		None               void
  6335 ;; Registers used:
  6336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6337 ;; Tracked objects:
  6338 ;;		On entry : 0/0
  6339 ;;		On exit  : 0/0
  6340 ;;		Unchanged: 0/0
  6341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6346 ;;Total ram usage:        0 bytes
  6347 ;; Hardware stack levels used:    1
  6348 ;; Hardware stack levels required when called:    9
  6349 ;; This function calls:
  6350 ;;		_RTCC_from_RTCC
  6351 ;; This function is called by:
  6352 ;;		_main
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           	psect	text28
  6357  00336E                     __ptext28:
  6358                           	opt stack 0
  6359  00336E                     _RTCC_loop:
  6360                           	opt stack 21
  6361                           
  6362                           ;My_header\My_RTCC.h: 395: static uint8_t prev_halfsec;
  6363                           ;My_header\My_RTCC.h: 396: if (RTCCFGbits.HALFSEC != prev_halfsec) {
  6364                           
  6365                           ; BSR set to: 0
  6366                           ;incstack = 0
  6367  00336E  010F               	movlb	15	; () banked
  6368  003370  A73F               	btfss	63,3,b	;volatile
  6369  003372  D002               	goto	u4810
  6370  003374  0E01               	movlw	1
  6371  003376  D001               	goto	u4816
  6372  003378                     u4810:
  6373  003378  0E00               	movlw	0
  6374  00337A                     u4816:
  6375  00337A  0100               	movlb	0	; () banked
  6376  00337C  19DF               	xorwf	RTCC_loop@prev_halfsec& (0+255),w,b
  6377  00337E  B4D8               	btfsc	status,2,c
  6378  003380  0012               	return	
  6379                           
  6380                           ; BSR set to: 0
  6381                           ;My_header\My_RTCC.h: 397: prev_halfsec = RTCCFGbits.HALFSEC;
  6382  003382  0E00               	movlw	0
  6383  003384  B73F               	btfsc	63,3,b	;volatile
  6384  003386  0E01               	movlw	1
  6385  003388  0100               	movlb	0	; () banked
  6386  00338A  6FDF               	movwf	RTCC_loop@prev_halfsec& (0+255),b
  6387                           
  6388                           ;My_header\My_RTCC.h: 398: colon = RTCCFGbits.HALFSEC;
  6389  00338C  0E00               	movlw	0
  6390  00338E  B73F               	btfsc	63,3,b	;volatile
  6391  003390  0E01               	movlw	1
  6392  003392  6E21               	movwf	_colon,c
  6393                           
  6394                           ; BSR set to: 0
  6395                           ;My_header\My_RTCC.h: 399: RTCC_from_RTCC(&caltime_now, &epoch_now);
  6396  003394  0EE3               	movlw	low _caltime_now
  6397  003396  0100               	movlb	0	; () banked
  6398  003398  6F87               	movwf	RTCC_from_RTCC@ct& (0+255),b
  6399  00339A  0E00               	movlw	high _caltime_now
  6400  00339C  0100               	movlb	0	; () banked
  6401  00339E  6F88               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  6402  0033A0  0EEA               	movlw	low _epoch_now
  6403  0033A2  0100               	movlb	0	; () banked
  6404  0033A4  6F89               	movwf	RTCC_from_RTCC@ep& (0+255),b
  6405  0033A6  0E00               	movlw	high _epoch_now
  6406  0033A8  0100               	movlb	0	; () banked
  6407  0033AA  6F8A               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  6408  0033AC  ECB6  F01A         	call	_RTCC_from_RTCC	;wreg free
  6409                           
  6410                           ;My_header\My_RTCC.h: 400: time_change_flag = 1;
  6411  0033B0  0E01               	movlw	1
  6412  0033B2  0100               	movlb	0	; () banked
  6413  0033B4  6FE1               	movwf	_time_change_flag& (0+255),b
  6414  0033B6  0012               	return	
  6415                           
  6416                           ; BSR set to: 0
  6417                           
  6418                           ; BSR set to: 0
  6419  0033B8  0012               	return		;funcret
  6420  0033BA                     __end_of_RTCC_loop:
  6421                           	opt stack 0
  6422                           tblptru	equ	0xFF8
  6423                           tblptrh	equ	0xFF7
  6424                           tblptrl	equ	0xFF6
  6425                           tablat	equ	0xFF5
  6426                           prodh	equ	0xFF4
  6427                           prodl	equ	0xFF3
  6428                           intcon	equ	0xFF2
  6429                           postinc0	equ	0xFEE
  6430                           wreg	equ	0xFE8
  6431                           indf1	equ	0xFE7
  6432                           postinc1	equ	0xFE6
  6433                           postdec1	equ	0xFE5
  6434                           fsr1h	equ	0xFE2
  6435                           fsr1l	equ	0xFE1
  6436                           indf2	equ	0xFDF
  6437                           postinc2	equ	0xFDE
  6438                           postdec2	equ	0xFDD
  6439                           fsr2h	equ	0xFDA
  6440                           fsr2l	equ	0xFD9
  6441                           status	equ	0xFD8
  6442                           
  6443 ;; *************** function _RTCC_from_RTCC *****************
  6444 ;; Defined at:
  6445 ;;		line 237 in file "../My_header\My_RTCC.h"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;  ct              2   39[BANK0 ] PTR struct .
  6448 ;;		 -> caltime_now(7), 
  6449 ;;  ep              2   41[BANK0 ] PTR unsigned long 
  6450 ;;		 -> epoch_now(4), 
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;		None
  6453 ;; Return value:  Size  Location     Type
  6454 ;;		None               void
  6455 ;; Registers used:
  6456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6462 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6465 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6466 ;;Total ram usage:        4 bytes
  6467 ;; Hardware stack levels used:    1
  6468 ;; Hardware stack levels required when called:    8
  6469 ;; This function calls:
  6470 ;;		_RTCC_to_caltime
  6471 ;;		_caltime_to_epoch
  6472 ;; This function is called by:
  6473 ;;		_RTCC_loop
  6474 ;;		_main
  6475 ;;		_RTCC_time_set_inc
  6476 ;;		_RTCC_time_set_dec
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480                           	psect	text29
  6481  00356C                     __ptext29:
  6482                           	opt stack 0
  6483  00356C                     _RTCC_from_RTCC:
  6484                           	opt stack 21
  6485                           
  6486                           ;My_header\My_RTCC.h: 238: RTCC_to_caltime(ct);
  6487                           
  6488                           ; BSR set to: 0
  6489                           ;incstack = 0
  6490  00356C  C087  F062         	movff	RTCC_from_RTCC@ct,RTCC_to_caltime@ct
  6491  003570  C088  F063         	movff	RTCC_from_RTCC@ct+1,RTCC_to_caltime@ct+1
  6492  003574  ECC1  F014         	call	_RTCC_to_caltime	;wreg free
  6493                           
  6494                           ;My_header\My_RTCC.h: 239: caltime_to_epoch(ct, ep);
  6495  003578  C087  F078         	movff	RTCC_from_RTCC@ct,caltime_to_epoch@ct
  6496  00357C  C088  F079         	movff	RTCC_from_RTCC@ct+1,caltime_to_epoch@ct+1
  6497  003580  C089  F07A         	movff	RTCC_from_RTCC@ep,caltime_to_epoch@ep
  6498  003584  C08A  F07B         	movff	RTCC_from_RTCC@ep+1,caltime_to_epoch@ep+1
  6499  003588  ECEE  F00B         	call	_caltime_to_epoch	;wreg free
  6500  00358C  0012               	return		;funcret
  6501  00358E                     __end_of_RTCC_from_RTCC:
  6502                           	opt stack 0
  6503                           tblptru	equ	0xFF8
  6504                           tblptrh	equ	0xFF7
  6505                           tblptrl	equ	0xFF6
  6506                           tablat	equ	0xFF5
  6507                           prodh	equ	0xFF4
  6508                           prodl	equ	0xFF3
  6509                           intcon	equ	0xFF2
  6510                           postinc0	equ	0xFEE
  6511                           wreg	equ	0xFE8
  6512                           indf1	equ	0xFE7
  6513                           postinc1	equ	0xFE6
  6514                           postdec1	equ	0xFE5
  6515                           fsr1h	equ	0xFE2
  6516                           fsr1l	equ	0xFE1
  6517                           indf2	equ	0xFDF
  6518                           postinc2	equ	0xFDE
  6519                           postdec2	equ	0xFDD
  6520                           fsr2h	equ	0xFDA
  6521                           fsr2l	equ	0xFD9
  6522                           status	equ	0xFD8
  6523                           
  6524 ;; *************** function _caltime_to_epoch *****************
  6525 ;; Defined at:
  6526 ;;		line 219 in file "../My_header\My_RTCC.h"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  ct              2   24[BANK0 ] PTR struct .
  6529 ;;		 -> caltime_now(7), 
  6530 ;;  ep              2   26[BANK0 ] PTR unsigned long 
  6531 ;;		 -> epoch_now(4), 
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;  month           1   38[BANK0 ] unsigned char 
  6534 ;;  month           1   33[BANK0 ] unsigned char 
  6535 ;;  year            1   32[BANK0 ] unsigned char 
  6536 ;;  epoch           4   34[BANK0 ] unsigned long 
  6537 ;; Return value:  Size  Location     Type
  6538 ;;		None               void
  6539 ;; Registers used:
  6540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6541 ;; Tracked objects:
  6542 ;;		On entry : 0/0
  6543 ;;		On exit  : 0/0
  6544 ;;		Unchanged: 0/0
  6545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6546 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6547 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6548 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6549 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6550 ;;Total ram usage:       15 bytes
  6551 ;; Hardware stack levels used:    1
  6552 ;; Hardware stack levels required when called:    7
  6553 ;; This function calls:
  6554 ;;		___lmul
  6555 ;;		_month_length
  6556 ;; This function is called by:
  6557 ;;		_RTCC_from_RTCC
  6558 ;;		_RTCC_from_caltime
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           
  6562                           	psect	text30
  6563  0017DC                     __ptext30:
  6564                           	opt stack 0
  6565  0017DC                     _caltime_to_epoch:
  6566                           	opt stack 21
  6567                           
  6568                           ;My_header\My_RTCC.h: 220: epoch_t epoch = 0;
  6569                           
  6570                           ;incstack = 0
  6571  0017DC  0E00               	movlw	0
  6572  0017DE  0100               	movlb	0	; () banked
  6573  0017E0  6F82               	movwf	caltime_to_epoch@epoch& (0+255),b
  6574  0017E2  0E00               	movlw	0
  6575  0017E4  6F83               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
  6576  0017E6  0E00               	movlw	0
  6577  0017E8  6F84               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
  6578  0017EA  0E00               	movlw	0
  6579  0017EC  6F85               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
  6580                           
  6581                           ;My_header\My_RTCC.h: 221: for (uint8_t year = 0; year < ct->YY; year++) {
  6582  0017EE  0E00               	movlw	0
  6583  0017F0  0100               	movlb	0	; () banked
  6584  0017F2  6F80               	movwf	caltime_to_epoch@year& (0+255),b
  6585  0017F4  D038               	goto	l4277
  6586  0017F6                     l4263:
  6587                           
  6588                           ; BSR set to: 0
  6589                           ;My_header\My_RTCC.h: 222: for (uint8_t month = 1; month <= 12; month++) {
  6590  0017F6  0E01               	movlw	1
  6591  0017F8  0100               	movlb	0	; () banked
  6592  0017FA  6F86               	movwf	caltime_to_epoch@month& (0+255),b
  6593  0017FC                     l4265:
  6594                           
  6595                           ; BSR set to: 0
  6596  0017FC  0E0C               	movlw	12
  6597  0017FE  0100               	movlb	0	; () banked
  6598  001800  6586               	cpfsgt	caltime_to_epoch@month& (0+255),b
  6599  001802  D001               	goto	l4269
  6600                           
  6601                           ; BSR set to: 0
  6602  001804  D02D               	goto	l4275
  6603  001806                     l4269:
  6604                           
  6605                           ; BSR set to: 0
  6606                           ;My_header\My_RTCC.h: 223: epoch += ((epoch_t)60*60*24) * month_length(year, month);
  6607  001806  C086  F066         	movff	caltime_to_epoch@month,month_length@month
  6608  00180A  0100               	movlb	0	; () banked
  6609  00180C  5180               	movf	caltime_to_epoch@year& (0+255),w,b
  6610  00180E  EC3C  F011         	call	_month_length
  6611  001812  0100               	movlb	0	; () banked
  6612  001814  6F7C               	movwf	??_caltime_to_epoch& (0+255),b
  6613  001816  0100               	movlb	0	; () banked
  6614  001818  517C               	movf	??_caltime_to_epoch& (0+255),w,b
  6615  00181A  0100               	movlb	0	; () banked
  6616  00181C  6F6C               	movwf	___lmul@multiplier& (0+255),b
  6617  00181E  6B6D               	clrf	(___lmul@multiplier+1)& (0+255),b
  6618  001820  6B6E               	clrf	(___lmul@multiplier+2)& (0+255),b
  6619  001822  6B6F               	clrf	(___lmul@multiplier+3)& (0+255),b
  6620  001824  0E80               	movlw	128
  6621  001826  0100               	movlb	0	; () banked
  6622  001828  6F70               	movwf	___lmul@multiplicand& (0+255),b
  6623  00182A  0E51               	movlw	81
  6624  00182C  6F71               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6625  00182E  0E01               	movlw	1
  6626  001830  6F72               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6627  001832  0E00               	movlw	0
  6628  001834  6F73               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6629  001836  ECF1  F017         	call	___lmul	;wreg free
  6630  00183A  0100               	movlb	0	; () banked
  6631  00183C  516C               	movf	?___lmul& (0+255),w,b
  6632  00183E  0100               	movlb	0	; () banked
  6633  001840  2782               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6634  001842  0100               	movlb	0	; () banked
  6635  001844  516D               	movf	(?___lmul+1)& (0+255),w,b
  6636  001846  0100               	movlb	0	; () banked
  6637  001848  2383               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6638  00184A  0100               	movlb	0	; () banked
  6639  00184C  516E               	movf	(?___lmul+2)& (0+255),w,b
  6640  00184E  0100               	movlb	0	; () banked
  6641  001850  2384               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6642  001852  0100               	movlb	0	; () banked
  6643  001854  516F               	movf	(?___lmul+3)& (0+255),w,b
  6644  001856  0100               	movlb	0	; () banked
  6645  001858  2385               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6646                           
  6647                           ; BSR set to: 0
  6648  00185A  0100               	movlb	0	; () banked
  6649  00185C  2B86               	incf	caltime_to_epoch@month& (0+255),f,b
  6650  00185E  D7CE               	goto	l4265
  6651  001860                     l4275:
  6652                           
  6653                           ; BSR set to: 0
  6654  001860  0100               	movlb	0	; () banked
  6655  001862  2B80               	incf	caltime_to_epoch@year& (0+255),f,b
  6656  001864  D000               	goto	l4277
  6657  001866                     l4277:
  6658                           
  6659                           ; BSR set to: 0
  6660  001866  0100               	movlb	0	; () banked
  6661  001868  EE20 F006          	lfsr	2,6
  6662  00186C  5178               	movf	caltime_to_epoch@ct& (0+255),w,b
  6663  00186E  26D9               	addwf	fsr2l,f,c
  6664  001870  5179               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6665  001872  22DA               	addwfc	fsr2h,f,c
  6666  001874  50DE               	movf	postinc2,w,c
  6667  001876  0100               	movlb	0	; () banked
  6668  001878  5D80               	subwf	caltime_to_epoch@year& (0+255),w,b
  6669  00187A  A0D8               	btfss	status,0,c
  6670  00187C  D7BC               	goto	l4263
  6671                           
  6672                           ; BSR set to: 0
  6673                           ;My_header\My_RTCC.h: 224: }
  6674                           ;My_header\My_RTCC.h: 225: }
  6675                           ;My_header\My_RTCC.h: 226: for (uint8_t month = 1; month < ct->MM; month++) {
  6676                           
  6677                           ; BSR set to: 0
  6678  00187E  0E01               	movlw	1
  6679  001880  0100               	movlb	0	; () banked
  6680  001882  6F81               	movwf	caltime_to_epoch@month_2102& (0+255),b
  6681  001884  D033               	goto	l4285
  6682  001886                     l4281:
  6683                           
  6684                           ; BSR set to: 0
  6685                           ;My_header\My_RTCC.h: 227: epoch += ((epoch_t)60*60*24) * month_length(ct->YY, month);
  6686  001886  C081  F066         	movff	caltime_to_epoch@month_2102,month_length@month
  6687  00188A  0100               	movlb	0	; () banked
  6688  00188C  EE20 F006          	lfsr	2,6
  6689  001890  5178               	movf	caltime_to_epoch@ct& (0+255),w,b
  6690  001892  26D9               	addwf	fsr2l,f,c
  6691  001894  5179               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6692  001896  22DA               	addwfc	fsr2h,f,c
  6693  001898  50DF               	movf	indf2,w,c
  6694  00189A  EC3C  F011         	call	_month_length
  6695  00189E  0100               	movlb	0	; () banked
  6696  0018A0  6F7C               	movwf	??_caltime_to_epoch& (0+255),b
  6697  0018A2  0100               	movlb	0	; () banked
  6698  0018A4  517C               	movf	??_caltime_to_epoch& (0+255),w,b
  6699  0018A6  0100               	movlb	0	; () banked
  6700  0018A8  6F6C               	movwf	___lmul@multiplier& (0+255),b
  6701  0018AA  6B6D               	clrf	(___lmul@multiplier+1)& (0+255),b
  6702  0018AC  6B6E               	clrf	(___lmul@multiplier+2)& (0+255),b
  6703  0018AE  6B6F               	clrf	(___lmul@multiplier+3)& (0+255),b
  6704  0018B0  0E80               	movlw	128
  6705  0018B2  0100               	movlb	0	; () banked
  6706  0018B4  6F70               	movwf	___lmul@multiplicand& (0+255),b
  6707  0018B6  0E51               	movlw	81
  6708  0018B8  6F71               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6709  0018BA  0E01               	movlw	1
  6710  0018BC  6F72               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6711  0018BE  0E00               	movlw	0
  6712  0018C0  6F73               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6713  0018C2  ECF1  F017         	call	___lmul	;wreg free
  6714  0018C6  0100               	movlb	0	; () banked
  6715  0018C8  516C               	movf	?___lmul& (0+255),w,b
  6716  0018CA  0100               	movlb	0	; () banked
  6717  0018CC  2782               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6718  0018CE  0100               	movlb	0	; () banked
  6719  0018D0  516D               	movf	(?___lmul+1)& (0+255),w,b
  6720  0018D2  0100               	movlb	0	; () banked
  6721  0018D4  2383               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6722  0018D6  0100               	movlb	0	; () banked
  6723  0018D8  516E               	movf	(?___lmul+2)& (0+255),w,b
  6724  0018DA  0100               	movlb	0	; () banked
  6725  0018DC  2384               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6726  0018DE  0100               	movlb	0	; () banked
  6727  0018E0  516F               	movf	(?___lmul+3)& (0+255),w,b
  6728  0018E2  0100               	movlb	0	; () banked
  6729  0018E4  2385               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6730                           
  6731                           ; BSR set to: 0
  6732  0018E6  0100               	movlb	0	; () banked
  6733  0018E8  2B81               	incf	caltime_to_epoch@month_2102& (0+255),f,b
  6734  0018EA  D000               	goto	l4285
  6735  0018EC                     l4285:
  6736                           
  6737                           ; BSR set to: 0
  6738  0018EC  0100               	movlb	0	; () banked
  6739  0018EE  EE20 F005          	lfsr	2,5
  6740  0018F2  5178               	movf	caltime_to_epoch@ct& (0+255),w,b
  6741  0018F4  26D9               	addwf	fsr2l,f,c
  6742  0018F6  5179               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6743  0018F8  22DA               	addwfc	fsr2h,f,c
  6744  0018FA  50DE               	movf	postinc2,w,c
  6745  0018FC  0100               	movlb	0	; () banked
  6746  0018FE  5D81               	subwf	caltime_to_epoch@month_2102& (0+255),w,b
  6747  001900  A0D8               	btfss	status,0,c
  6748  001902  D7C1               	goto	l4281
  6749                           
  6750                           ; BSR set to: 0
  6751                           ;My_header\My_RTCC.h: 228: }
  6752                           ;My_header\My_RTCC.h: 229: epoch += ((epoch_t)60*60*24) * (ct->DD - 1);
  6753                           
  6754                           ; BSR set to: 0
  6755  001904  0EFF               	movlw	255
  6756  001906  0100               	movlb	0	; () banked
  6757  001908  6F7C               	movwf	??_caltime_to_epoch& (0+255),b
  6758  00190A  0EFF               	movlw	255
  6759  00190C  0100               	movlb	0	; () banked
  6760  00190E  6F7D               	movwf	(??_caltime_to_epoch+1)& (0+255),b
  6761  001910  0100               	movlb	0	; () banked
  6762  001912  EE20 F004          	lfsr	2,4
  6763  001916  5178               	movf	caltime_to_epoch@ct& (0+255),w,b
  6764  001918  26D9               	addwf	fsr2l,f,c
  6765  00191A  5179               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6766  00191C  22DA               	addwfc	fsr2h,f,c
  6767  00191E  50DF               	movf	indf2,w,c
  6768  001920  0100               	movlb	0	; () banked
  6769  001922  6F7E               	movwf	(??_caltime_to_epoch+2)& (0+255),b
  6770  001924  6B7F               	clrf	(??_caltime_to_epoch+3)& (0+255),b
  6771  001926  0100               	movlb	0	; () banked
  6772  001928  517C               	movf	??_caltime_to_epoch& (0+255),w,b
  6773  00192A  0100               	movlb	0	; () banked
  6774  00192C  277E               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
  6775  00192E  0100               	movlb	0	; () banked
  6776  001930  517D               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  6777  001932  0100               	movlb	0	; () banked
  6778  001934  237F               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
  6779  001936  C07E  F06C         	movff	??_caltime_to_epoch+2,___lmul@multiplier
  6780  00193A  C07F  F06D         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
  6781  00193E  0100               	movlb	0	; () banked
  6782  001940  0E00               	movlw	0
  6783  001942  BF6D               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  6784  001944  0EFF               	movlw	-1
  6785  001946  6F6E               	movwf	(___lmul@multiplier+2)& (0+255),b
  6786  001948  6F6F               	movwf	(___lmul@multiplier+3)& (0+255),b
  6787  00194A  0E80               	movlw	128
  6788  00194C  0100               	movlb	0	; () banked
  6789  00194E  6F70               	movwf	___lmul@multiplicand& (0+255),b
  6790  001950  0E51               	movlw	81
  6791  001952  6F71               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6792  001954  0E01               	movlw	1
  6793  001956  6F72               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6794  001958  0E00               	movlw	0
  6795  00195A  6F73               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6796  00195C  ECF1  F017         	call	___lmul	;wreg free
  6797  001960  0100               	movlb	0	; () banked
  6798  001962  516C               	movf	?___lmul& (0+255),w,b
  6799  001964  0100               	movlb	0	; () banked
  6800  001966  2782               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6801  001968  0100               	movlb	0	; () banked
  6802  00196A  516D               	movf	(?___lmul+1)& (0+255),w,b
  6803  00196C  0100               	movlb	0	; () banked
  6804  00196E  2383               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6805  001970  0100               	movlb	0	; () banked
  6806  001972  516E               	movf	(?___lmul+2)& (0+255),w,b
  6807  001974  0100               	movlb	0	; () banked
  6808  001976  2384               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6809  001978  0100               	movlb	0	; () banked
  6810  00197A  516F               	movf	(?___lmul+3)& (0+255),w,b
  6811  00197C  0100               	movlb	0	; () banked
  6812  00197E  2385               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6813                           
  6814                           ;My_header\My_RTCC.h: 230: epoch += ((epoch_t)60*60) * ct->hh;
  6815  001980  0100               	movlb	0	; () banked
  6816  001982  EE20 F002          	lfsr	2,2
  6817  001986  5178               	movf	caltime_to_epoch@ct& (0+255),w,b
  6818  001988  26D9               	addwf	fsr2l,f,c
  6819  00198A  5179               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6820  00198C  22DA               	addwfc	fsr2h,f,c
  6821  00198E  50DF               	movf	indf2,w,c
  6822  001990  0100               	movlb	0	; () banked
  6823  001992  6F7C               	movwf	??_caltime_to_epoch& (0+255),b
  6824  001994  0100               	movlb	0	; () banked
  6825  001996  517C               	movf	??_caltime_to_epoch& (0+255),w,b
  6826  001998  0100               	movlb	0	; () banked
  6827  00199A  6F6C               	movwf	___lmul@multiplier& (0+255),b
  6828  00199C  6B6D               	clrf	(___lmul@multiplier+1)& (0+255),b
  6829  00199E  6B6E               	clrf	(___lmul@multiplier+2)& (0+255),b
  6830  0019A0  6B6F               	clrf	(___lmul@multiplier+3)& (0+255),b
  6831  0019A2  0E10               	movlw	16
  6832  0019A4  0100               	movlb	0	; () banked
  6833  0019A6  6F70               	movwf	___lmul@multiplicand& (0+255),b
  6834  0019A8  0E0E               	movlw	14
  6835  0019AA  6F71               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6836  0019AC  0E00               	movlw	0
  6837  0019AE  6F72               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6838  0019B0  0E00               	movlw	0
  6839  0019B2  6F73               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6840  0019B4  ECF1  F017         	call	___lmul	;wreg free
  6841  0019B8  0100               	movlb	0	; () banked
  6842  0019BA  516C               	movf	?___lmul& (0+255),w,b
  6843  0019BC  0100               	movlb	0	; () banked
  6844  0019BE  2782               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6845  0019C0  0100               	movlb	0	; () banked
  6846  0019C2  516D               	movf	(?___lmul+1)& (0+255),w,b
  6847  0019C4  0100               	movlb	0	; () banked
  6848  0019C6  2383               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6849  0019C8  0100               	movlb	0	; () banked
  6850  0019CA  516E               	movf	(?___lmul+2)& (0+255),w,b
  6851  0019CC  0100               	movlb	0	; () banked
  6852  0019CE  2384               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6853  0019D0  0100               	movlb	0	; () banked
  6854  0019D2  516F               	movf	(?___lmul+3)& (0+255),w,b
  6855  0019D4  0100               	movlb	0	; () banked
  6856  0019D6  2385               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6857                           
  6858                           ;My_header\My_RTCC.h: 231: epoch += ((epoch_t)60) * ct->mm;
  6859  0019D8  0100               	movlb	0	; () banked
  6860  0019DA  EE20 F001          	lfsr	2,1
  6861  0019DE  5178               	movf	caltime_to_epoch@ct& (0+255),w,b
  6862  0019E0  26D9               	addwf	fsr2l,f,c
  6863  0019E2  5179               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6864  0019E4  22DA               	addwfc	fsr2h,f,c
  6865  0019E6  50DF               	movf	indf2,w,c
  6866  0019E8  0100               	movlb	0	; () banked
  6867  0019EA  6F7C               	movwf	??_caltime_to_epoch& (0+255),b
  6868  0019EC  0100               	movlb	0	; () banked
  6869  0019EE  517C               	movf	??_caltime_to_epoch& (0+255),w,b
  6870  0019F0  0100               	movlb	0	; () banked
  6871  0019F2  6F6C               	movwf	___lmul@multiplier& (0+255),b
  6872  0019F4  6B6D               	clrf	(___lmul@multiplier+1)& (0+255),b
  6873  0019F6  6B6E               	clrf	(___lmul@multiplier+2)& (0+255),b
  6874  0019F8  6B6F               	clrf	(___lmul@multiplier+3)& (0+255),b
  6875  0019FA  0E3C               	movlw	60
  6876  0019FC  0100               	movlb	0	; () banked
  6877  0019FE  6F70               	movwf	___lmul@multiplicand& (0+255),b
  6878  001A00  0E00               	movlw	0
  6879  001A02  6F71               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6880  001A04  0E00               	movlw	0
  6881  001A06  6F72               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6882  001A08  0E00               	movlw	0
  6883  001A0A  6F73               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6884  001A0C  ECF1  F017         	call	___lmul	;wreg free
  6885  001A10  0100               	movlb	0	; () banked
  6886  001A12  516C               	movf	?___lmul& (0+255),w,b
  6887  001A14  0100               	movlb	0	; () banked
  6888  001A16  2782               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6889  001A18  0100               	movlb	0	; () banked
  6890  001A1A  516D               	movf	(?___lmul+1)& (0+255),w,b
  6891  001A1C  0100               	movlb	0	; () banked
  6892  001A1E  2383               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6893  001A20  0100               	movlb	0	; () banked
  6894  001A22  516E               	movf	(?___lmul+2)& (0+255),w,b
  6895  001A24  0100               	movlb	0	; () banked
  6896  001A26  2384               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6897  001A28  0100               	movlb	0	; () banked
  6898  001A2A  516F               	movf	(?___lmul+3)& (0+255),w,b
  6899  001A2C  0100               	movlb	0	; () banked
  6900  001A2E  2385               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;My_header\My_RTCC.h: 232: epoch += ct->ss;
  6904  001A30  C078  FFD9         	movff	caltime_to_epoch@ct,fsr2l
  6905  001A34  C079  FFDA         	movff	caltime_to_epoch@ct+1,fsr2h
  6906  001A38  50DF               	movf	indf2,w,c
  6907  001A3A  0100               	movlb	0	; () banked
  6908  001A3C  6F7C               	movwf	??_caltime_to_epoch& (0+255),b
  6909  001A3E  0100               	movlb	0	; () banked
  6910  001A40  517C               	movf	??_caltime_to_epoch& (0+255),w,b
  6911  001A42  0100               	movlb	0	; () banked
  6912  001A44  2782               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6913  001A46  0E00               	movlw	0
  6914  001A48  2383               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6915  001A4A  2384               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6916  001A4C  2385               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6917                           
  6918                           ; BSR set to: 0
  6919                           ;My_header\My_RTCC.h: 234: *ep = epoch;
  6920  001A4E  C07A  FFD9         	movff	caltime_to_epoch@ep,fsr2l
  6921  001A52  C07B  FFDA         	movff	caltime_to_epoch@ep+1,fsr2h
  6922  001A56  C082  FFDE         	movff	caltime_to_epoch@epoch,postinc2
  6923  001A5A  C083  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
  6924  001A5E  C084  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
  6925  001A62  C085  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
  6926                           
  6927                           ; BSR set to: 0
  6928  001A66  0012               	return		;funcret
  6929  001A68                     __end_of_caltime_to_epoch:
  6930                           	opt stack 0
  6931                           tblptru	equ	0xFF8
  6932                           tblptrh	equ	0xFF7
  6933                           tblptrl	equ	0xFF6
  6934                           tablat	equ	0xFF5
  6935                           prodh	equ	0xFF4
  6936                           prodl	equ	0xFF3
  6937                           intcon	equ	0xFF2
  6938                           postinc0	equ	0xFEE
  6939                           wreg	equ	0xFE8
  6940                           indf1	equ	0xFE7
  6941                           postinc1	equ	0xFE6
  6942                           postdec1	equ	0xFE5
  6943                           fsr1h	equ	0xFE2
  6944                           fsr1l	equ	0xFE1
  6945                           indf2	equ	0xFDF
  6946                           postinc2	equ	0xFDE
  6947                           postdec2	equ	0xFDD
  6948                           fsr2h	equ	0xFDA
  6949                           fsr2l	equ	0xFD9
  6950                           status	equ	0xFD8
  6951                           
  6952 ;; *************** function _RTCC_to_caltime *****************
  6953 ;; Defined at:
  6954 ;;		line 126 in file "../My_header\My_RTCC.h"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;  ct              2    2[BANK0 ] PTR struct .
  6957 ;;		 -> caltime_now(7), 
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;  dumy            1    4[BANK0 ] unsigned char 
  6960 ;; Return value:  Size  Location     Type
  6961 ;;		None               void
  6962 ;; Registers used:
  6963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6964 ;; Tracked objects:
  6965 ;;		On entry : 0/0
  6966 ;;		On exit  : 0/0
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6969 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6970 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6972 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6973 ;;Total ram usage:        3 bytes
  6974 ;; Hardware stack levels used:    1
  6975 ;; Hardware stack levels required when called:    6
  6976 ;; This function calls:
  6977 ;;		_x_to_d
  6978 ;; This function is called by:
  6979 ;;		_RTCC_from_RTCC
  6980 ;; This function uses a non-reentrant model
  6981 ;;
  6982                           
  6983                           	psect	text31
  6984  002982                     __ptext31:
  6985                           	opt stack 0
  6986  002982                     _RTCC_to_caltime:
  6987                           	opt stack 22
  6988                           
  6989                           ;My_header\My_RTCC.h: 129: RTCCFGbits.RTCPTR0 = 1;
  6990                           
  6991                           ; BSR set to: 0
  6992                           ;incstack = 0
  6993  002982  010F               	movlb	15	; () banked
  6994  002984  813F               	bsf	63,0,b	;volatile
  6995                           
  6996                           ;My_header\My_RTCC.h: 130: RTCCFGbits.RTCPTR1 = 1;
  6997  002986  010F               	movlb	15	; () banked
  6998  002988  833F               	bsf	63,1,b	;volatile
  6999                           
  7000                           ; BSR set to: 15
  7001                           ;My_header\My_RTCC.h: 132: ct->YY = x_to_d(RTCVALL);
  7002  00298A  0100               	movlb	0	; () banked
  7003  00298C  EE20 F006          	lfsr	2,6
  7004  002990  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
  7005  002992  26D9               	addwf	fsr2l,f,c
  7006  002994  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  7007  002996  22DA               	addwfc	fsr2h,f,c
  7008  002998  010F               	movlb	15	; () banked
  7009  00299A  513A               	movf	58,w,b	;volatile
  7010  00299C  ECC7  F01A         	call	_x_to_d
  7011  0029A0  6EDF               	movwf	indf2,c
  7012                           
  7013                           ;My_header\My_RTCC.h: 133: uint8_t dumy = RTCVALH;
  7014  0029A2  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
  7015                           
  7016                           ;My_header\My_RTCC.h: 134: ct->DD = x_to_d(RTCVALL);
  7017  0029A6  0100               	movlb	0	; () banked
  7018  0029A8  EE20 F004          	lfsr	2,4
  7019  0029AC  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
  7020  0029AE  26D9               	addwf	fsr2l,f,c
  7021  0029B0  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  7022  0029B2  22DA               	addwfc	fsr2h,f,c
  7023  0029B4  010F               	movlb	15	; () banked
  7024  0029B6  513A               	movf	58,w,b	;volatile
  7025  0029B8  ECC7  F01A         	call	_x_to_d
  7026  0029BC  6EDF               	movwf	indf2,c
  7027                           
  7028                           ;My_header\My_RTCC.h: 135: ct->MM = x_to_d(RTCVALH);
  7029  0029BE  0100               	movlb	0	; () banked
  7030  0029C0  EE20 F005          	lfsr	2,5
  7031  0029C4  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
  7032  0029C6  26D9               	addwf	fsr2l,f,c
  7033  0029C8  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  7034  0029CA  22DA               	addwfc	fsr2h,f,c
  7035  0029CC  010F               	movlb	15	; () banked
  7036  0029CE  513B               	movf	59,w,b	;volatile
  7037  0029D0  ECC7  F01A         	call	_x_to_d
  7038  0029D4  6EDF               	movwf	indf2,c
  7039                           
  7040                           ;My_header\My_RTCC.h: 136: ct->hh = x_to_d(RTCVALL);
  7041  0029D6  0100               	movlb	0	; () banked
  7042  0029D8  EE20 F002          	lfsr	2,2
  7043  0029DC  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
  7044  0029DE  26D9               	addwf	fsr2l,f,c
  7045  0029E0  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  7046  0029E2  22DA               	addwfc	fsr2h,f,c
  7047  0029E4  010F               	movlb	15	; () banked
  7048  0029E6  513A               	movf	58,w,b	;volatile
  7049  0029E8  ECC7  F01A         	call	_x_to_d
  7050  0029EC  6EDF               	movwf	indf2,c
  7051                           
  7052                           ;My_header\My_RTCC.h: 137: ct->EE = x_to_d(RTCVALH);
  7053  0029EE  0100               	movlb	0	; () banked
  7054  0029F0  EE20 F003          	lfsr	2,3
  7055  0029F4  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
  7056  0029F6  26D9               	addwf	fsr2l,f,c
  7057  0029F8  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  7058  0029FA  22DA               	addwfc	fsr2h,f,c
  7059  0029FC  010F               	movlb	15	; () banked
  7060  0029FE  513B               	movf	59,w,b	;volatile
  7061  002A00  ECC7  F01A         	call	_x_to_d
  7062  002A04  6EDF               	movwf	indf2,c
  7063                           
  7064                           ;My_header\My_RTCC.h: 138: ct->ss = x_to_d(RTCVALL);
  7065  002A06  010F               	movlb	15	; () banked
  7066  002A08  513A               	movf	58,w,b	;volatile
  7067  002A0A  ECC7  F01A         	call	_x_to_d
  7068  002A0E  C062  FFD9         	movff	RTCC_to_caltime@ct,fsr2l
  7069  002A12  C063  FFDA         	movff	RTCC_to_caltime@ct+1,fsr2h
  7070  002A16  6EDF               	movwf	indf2,c
  7071                           
  7072                           ;My_header\My_RTCC.h: 139: ct->mm = x_to_d(RTCVALH);
  7073  002A18  0100               	movlb	0	; () banked
  7074  002A1A  EE20 F001          	lfsr	2,1
  7075  002A1E  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
  7076  002A20  26D9               	addwf	fsr2l,f,c
  7077  002A22  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  7078  002A24  22DA               	addwfc	fsr2h,f,c
  7079  002A26  010F               	movlb	15	; () banked
  7080  002A28  513B               	movf	59,w,b	;volatile
  7081  002A2A  ECC7  F01A         	call	_x_to_d
  7082  002A2E  6EDF               	movwf	indf2,c
  7083  002A30  0012               	return		;funcret
  7084  002A32                     __end_of_RTCC_to_caltime:
  7085                           	opt stack 0
  7086                           tblptru	equ	0xFF8
  7087                           tblptrh	equ	0xFF7
  7088                           tblptrl	equ	0xFF6
  7089                           tablat	equ	0xFF5
  7090                           prodh	equ	0xFF4
  7091                           prodl	equ	0xFF3
  7092                           intcon	equ	0xFF2
  7093                           postinc0	equ	0xFEE
  7094                           wreg	equ	0xFE8
  7095                           indf1	equ	0xFE7
  7096                           postinc1	equ	0xFE6
  7097                           postdec1	equ	0xFE5
  7098                           fsr1h	equ	0xFE2
  7099                           fsr1l	equ	0xFE1
  7100                           indf2	equ	0xFDF
  7101                           postinc2	equ	0xFDE
  7102                           postdec2	equ	0xFDD
  7103                           fsr2h	equ	0xFDA
  7104                           fsr2l	equ	0xFD9
  7105                           status	equ	0xFD8
  7106                           
  7107 ;; *************** function _x_to_d *****************
  7108 ;; Defined at:
  7109 ;;		line 78 in file "../My_header\My_RTCC.h"
  7110 ;; Parameters:    Size  Location     Type
  7111 ;;  hex             1    wreg     unsigned char 
  7112 ;; Auto vars:     Size  Location     Type
  7113 ;;  hex             1    1[BANK0 ] unsigned char 
  7114 ;; Return value:  Size  Location     Type
  7115 ;;                  1    wreg      unsigned char 
  7116 ;; Registers used:
  7117 ;;		wreg, status,2, status,0, prodl, prodh
  7118 ;; Tracked objects:
  7119 ;;		On entry : 0/0
  7120 ;;		On exit  : 0/0
  7121 ;;		Unchanged: 0/0
  7122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7124 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7125 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7126 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7127 ;;Total ram usage:        2 bytes
  7128 ;; Hardware stack levels used:    1
  7129 ;; Hardware stack levels required when called:    5
  7130 ;; This function calls:
  7131 ;;		Nothing
  7132 ;; This function is called by:
  7133 ;;		_RTCC_to_caltime
  7134 ;; This function uses a non-reentrant model
  7135 ;;
  7136                           
  7137                           	psect	text32
  7138  00358E                     __ptext32:
  7139                           	opt stack 0
  7140  00358E                     _x_to_d:
  7141                           	opt stack 22
  7142                           
  7143                           ;incstack = 0
  7144                           ;x_to_d@hex stored from wreg
  7145  00358E  0100               	movlb	0	; () banked
  7146  003590  6F61               	movwf	x_to_d@hex& (0+255),b
  7147                           
  7148                           ; BSR set to: 0
  7149                           ;My_header\My_RTCC.h: 79: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
  7150  003592  C061  F060         	movff	x_to_d@hex,??_x_to_d
  7151  003596  0E0F               	movlw	15
  7152  003598  0100               	movlb	0	; () banked
  7153  00359A  1760               	andwf	??_x_to_d& (0+255),f,b
  7154  00359C  0100               	movlb	0	; () banked
  7155  00359E  3961               	swapf	x_to_d@hex& (0+255),w,b
  7156  0035A0  0B0F               	andlw	15
  7157  0035A2  0B0F               	andlw	15
  7158  0035A4  0D0A               	mullw	10
  7159  0035A6  50F3               	movf	prodl,w,c
  7160  0035A8  0100               	movlb	0	; () banked
  7161  0035AA  2560               	addwf	??_x_to_d& (0+255),w,b
  7162  0035AC  0012               	return	
  7163                           
  7164                           ; BSR set to: 0
  7165                           
  7166                           ; BSR set to: 0
  7167  0035AE  0012               	return		;funcret
  7168  0035B0                     __end_of_x_to_d:
  7169                           	opt stack 0
  7170                           tblptru	equ	0xFF8
  7171                           tblptrh	equ	0xFF7
  7172                           tblptrl	equ	0xFF6
  7173                           tablat	equ	0xFF5
  7174                           prodh	equ	0xFF4
  7175                           prodl	equ	0xFF3
  7176                           intcon	equ	0xFF2
  7177                           postinc0	equ	0xFEE
  7178                           wreg	equ	0xFE8
  7179                           indf1	equ	0xFE7
  7180                           postinc1	equ	0xFE6
  7181                           postdec1	equ	0xFE5
  7182                           fsr1h	equ	0xFE2
  7183                           fsr1l	equ	0xFE1
  7184                           indf2	equ	0xFDF
  7185                           postinc2	equ	0xFDE
  7186                           postdec2	equ	0xFDD
  7187                           fsr2h	equ	0xFDA
  7188                           fsr2l	equ	0xFD9
  7189                           status	equ	0xFD8
  7190                           
  7191 ;; *************** function _RTCC_from_epoch *****************
  7192 ;; Defined at:
  7193 ;;		line 247 in file "../My_header\My_RTCC.h"
  7194 ;; Parameters:    Size  Location     Type
  7195 ;;  ct              2   61[BANK0 ] PTR struct .
  7196 ;;		 -> caltime_now(7), 
  7197 ;;  ep              2   63[BANK0 ] PTR unsigned long 
  7198 ;;		 -> epoch_now(4), 
  7199 ;; Auto vars:     Size  Location     Type
  7200 ;;		None
  7201 ;; Return value:  Size  Location     Type
  7202 ;;		None               void
  7203 ;; Registers used:
  7204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7205 ;; Tracked objects:
  7206 ;;		On entry : 0/0
  7207 ;;		On exit  : 0/0
  7208 ;;		Unchanged: 0/0
  7209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7210 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7213 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7214 ;;Total ram usage:        4 bytes
  7215 ;; Hardware stack levels used:    1
  7216 ;; Hardware stack levels required when called:    8
  7217 ;; This function calls:
  7218 ;;		_caltime_to_RTCC
  7219 ;;		_epoch_to_caltime
  7220 ;; This function is called by:
  7221 ;;		_main
  7222 ;;		_RTCC_time_set_inc
  7223 ;;		_RTCC_time_set_dec
  7224 ;; This function uses a non-reentrant model
  7225 ;;
  7226                           
  7227                           	psect	text33
  7228  0035B0                     __ptext33:
  7229                           	opt stack 0
  7230  0035B0                     _RTCC_from_epoch:
  7231                           	opt stack 22
  7232                           
  7233                           ;My_header\My_RTCC.h: 248: epoch_to_caltime(ct, ep);
  7234                           
  7235                           ; BSR set to: 0
  7236                           ;incstack = 0
  7237  0035B0  C09D  F08D         	movff	RTCC_from_epoch@ct,epoch_to_caltime@ct
  7238  0035B4  C09E  F08E         	movff	RTCC_from_epoch@ct+1,epoch_to_caltime@ct+1
  7239  0035B8  C09F  F08F         	movff	RTCC_from_epoch@ep,epoch_to_caltime@ep
  7240  0035BC  C0A0  F090         	movff	RTCC_from_epoch@ep+1,epoch_to_caltime@ep+1
  7241  0035C0  EC75  F00E         	call	_epoch_to_caltime	;wreg free
  7242                           
  7243                           ;My_header\My_RTCC.h: 249: caltime_to_RTCC(ct);
  7244  0035C4  C09D  F069         	movff	RTCC_from_epoch@ct,caltime_to_RTCC@ct
  7245  0035C8  C09E  F06A         	movff	RTCC_from_epoch@ct+1,caltime_to_RTCC@ct+1
  7246  0035CC  ECE6  F012         	call	_caltime_to_RTCC	;wreg free
  7247  0035D0  0012               	return		;funcret
  7248  0035D2                     __end_of_RTCC_from_epoch:
  7249                           	opt stack 0
  7250                           tblptru	equ	0xFF8
  7251                           tblptrh	equ	0xFF7
  7252                           tblptrl	equ	0xFF6
  7253                           tablat	equ	0xFF5
  7254                           prodh	equ	0xFF4
  7255                           prodl	equ	0xFF3
  7256                           intcon	equ	0xFF2
  7257                           postinc0	equ	0xFEE
  7258                           wreg	equ	0xFE8
  7259                           indf1	equ	0xFE7
  7260                           postinc1	equ	0xFE6
  7261                           postdec1	equ	0xFE5
  7262                           fsr1h	equ	0xFE2
  7263                           fsr1l	equ	0xFE1
  7264                           indf2	equ	0xFDF
  7265                           postinc2	equ	0xFDE
  7266                           postdec2	equ	0xFDD
  7267                           fsr2h	equ	0xFDA
  7268                           fsr2l	equ	0xFD9
  7269                           status	equ	0xFD8
  7270                           
  7271 ;; *************** function _epoch_to_caltime *****************
  7272 ;; Defined at:
  7273 ;;		line 162 in file "../My_header\My_RTCC.h"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;  ct              2   45[BANK0 ] PTR struct .
  7276 ;;		 -> caltime_now(7), 
  7277 ;;  ep              2   47[BANK0 ] PTR unsigned long 
  7278 ;;		 -> epoch_now(4), 
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;  num             4   57[BANK0 ] unsigned long 
  7281 ;;  day             2   53[BANK0 ] unsigned int 
  7282 ;;  day_since_ep    2   51[BANK0 ] unsigned int 
  7283 ;;  month           1   56[BANK0 ] unsigned char 
  7284 ;;  year            1   55[BANK0 ] unsigned char 
  7285 ;; Return value:  Size  Location     Type
  7286 ;;		None               void
  7287 ;; Registers used:
  7288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/0
  7291 ;;		On exit  : 0/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7294 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7295 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7296 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7297 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7298 ;;Total ram usage:       16 bytes
  7299 ;; Hardware stack levels used:    1
  7300 ;; Hardware stack levels required when called:    7
  7301 ;; This function calls:
  7302 ;;		_get_quot_rem
  7303 ;;		_month_length
  7304 ;; This function is called by:
  7305 ;;		_RTCC_from_epoch
  7306 ;; This function uses a non-reentrant model
  7307 ;;
  7308                           
  7309                           	psect	text34
  7310  001CEA                     __ptext34:
  7311                           	opt stack 0
  7312  001CEA                     _epoch_to_caltime:
  7313                           	opt stack 22
  7314                           
  7315                           ;My_header\My_RTCC.h: 165: static uint16_t day_cache = 0;
  7316                           ;My_header\My_RTCC.h: 166: static uint8_t month_cache = 1;
  7317                           ;My_header\My_RTCC.h: 167: static uint8_t year_cache = 0;
  7318                           ;My_header\My_RTCC.h: 168: uint16_t day_since_epoch;
  7319                           ;My_header\My_RTCC.h: 169: uint16_t day;
  7320                           ;My_header\My_RTCC.h: 170: uint8_t year = 0;
  7321                           
  7322                           ;incstack = 0
  7323  001CEA  0E00               	movlw	0
  7324  001CEC  0100               	movlb	0	; () banked
  7325  001CEE  6F97               	movwf	epoch_to_caltime@year& (0+255),b
  7326                           
  7327                           ;My_header\My_RTCC.h: 171: uint8_t month = 1;
  7328  001CF0  0E01               	movlw	1
  7329  001CF2  0100               	movlb	0	; () banked
  7330  001CF4  6F98               	movwf	epoch_to_caltime@month& (0+255),b
  7331                           
  7332                           ; BSR set to: 0
  7333                           ;My_header\My_RTCC.h: 172: epoch_t num;
  7334                           ;My_header\My_RTCC.h: 174: num = *ep;
  7335  001CF6  C08F  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  7336  001CFA  C090  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  7337  001CFE  CFDE F099          	movff	postinc2,epoch_to_caltime@num
  7338  001D02  CFDE F09A          	movff	postinc2,epoch_to_caltime@num+1
  7339  001D06  CFDE F09B          	movff	postinc2,epoch_to_caltime@num+2
  7340  001D0A  CFDE F09C          	movff	postinc2,epoch_to_caltime@num+3
  7341                           
  7342                           ; BSR set to: 0
  7343                           ;My_header\My_RTCC.h: 175: ct->ss = get_quot_rem(&num, 60);
  7344  001D0E  0E99               	movlw	low epoch_to_caltime@num
  7345  001D10  0100               	movlb	0	; () banked
  7346  001D12  6F85               	movwf	get_quot_rem@quot& (0+255),b
  7347  001D14  0E00               	movlw	high epoch_to_caltime@num
  7348  001D16  0100               	movlb	0	; () banked
  7349  001D18  6F86               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7350  001D1A  0E3C               	movlw	60
  7351  001D1C  0100               	movlb	0	; () banked
  7352  001D1E  6F87               	movwf	get_quot_rem@div& (0+255),b
  7353  001D20  ECAC  F011         	call	_get_quot_rem	;wreg free
  7354  001D24  0100               	movlb	0	; () banked
  7355  001D26  5185               	movf	?_get_quot_rem& (0+255),w,b
  7356  001D28  C08D  FFD9         	movff	epoch_to_caltime@ct,fsr2l
  7357  001D2C  C08E  FFDA         	movff	epoch_to_caltime@ct+1,fsr2h
  7358  001D30  6EDF               	movwf	indf2,c
  7359                           
  7360                           ; BSR set to: 0
  7361                           ;My_header\My_RTCC.h: 176: ct->mm = get_quot_rem(&num, 60);
  7362  001D32  0E99               	movlw	low epoch_to_caltime@num
  7363  001D34  0100               	movlb	0	; () banked
  7364  001D36  6F85               	movwf	get_quot_rem@quot& (0+255),b
  7365  001D38  0E00               	movlw	high epoch_to_caltime@num
  7366  001D3A  0100               	movlb	0	; () banked
  7367  001D3C  6F86               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7368  001D3E  0E3C               	movlw	60
  7369  001D40  0100               	movlb	0	; () banked
  7370  001D42  6F87               	movwf	get_quot_rem@div& (0+255),b
  7371  001D44  ECAC  F011         	call	_get_quot_rem	;wreg free
  7372  001D48  0100               	movlb	0	; () banked
  7373  001D4A  EE20 F001          	lfsr	2,1
  7374  001D4E  518D               	movf	epoch_to_caltime@ct& (0+255),w,b
  7375  001D50  26D9               	addwf	fsr2l,f,c
  7376  001D52  518E               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7377  001D54  22DA               	addwfc	fsr2h,f,c
  7378  001D56  0100               	movlb	0	; () banked
  7379  001D58  C085  FFDF         	movff	?_get_quot_rem,indf2
  7380                           
  7381                           ; BSR set to: 0
  7382                           ;My_header\My_RTCC.h: 177: ct->hh = get_quot_rem(&num, 24);
  7383  001D5C  0E99               	movlw	low epoch_to_caltime@num
  7384  001D5E  0100               	movlb	0	; () banked
  7385  001D60  6F85               	movwf	get_quot_rem@quot& (0+255),b
  7386  001D62  0E00               	movlw	high epoch_to_caltime@num
  7387  001D64  0100               	movlb	0	; () banked
  7388  001D66  6F86               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7389  001D68  0E18               	movlw	24
  7390  001D6A  0100               	movlb	0	; () banked
  7391  001D6C  6F87               	movwf	get_quot_rem@div& (0+255),b
  7392  001D6E  ECAC  F011         	call	_get_quot_rem	;wreg free
  7393  001D72  0100               	movlb	0	; () banked
  7394  001D74  EE20 F002          	lfsr	2,2
  7395  001D78  518D               	movf	epoch_to_caltime@ct& (0+255),w,b
  7396  001D7A  26D9               	addwf	fsr2l,f,c
  7397  001D7C  518E               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7398  001D7E  22DA               	addwfc	fsr2h,f,c
  7399  001D80  0100               	movlb	0	; () banked
  7400  001D82  C085  FFDF         	movff	?_get_quot_rem,indf2
  7401                           
  7402                           ; BSR set to: 0
  7403                           ;My_header\My_RTCC.h: 181: day = num;
  7404  001D86  C099  F095         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  7405  001D8A  C09A  F096         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  7406                           
  7407                           ; BSR set to: 0
  7408                           ;My_header\My_RTCC.h: 182: day_since_epoch = day;
  7409  001D8E  C095  F093         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  7410  001D92  C096  F094         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  7411                           
  7412                           ; BSR set to: 0
  7413                           ;My_header\My_RTCC.h: 184: num += 6;
  7414  001D96  0E06               	movlw	6
  7415  001D98  0100               	movlb	0	; () banked
  7416  001D9A  2799               	addwf	epoch_to_caltime@num& (0+255),f,b
  7417  001D9C  0E00               	movlw	0
  7418  001D9E  239A               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  7419  001DA0  239B               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  7420  001DA2  239C               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  7421                           
  7422                           ; BSR set to: 0
  7423                           ;My_header\My_RTCC.h: 185: ct->EE = get_quot_rem(&num, 7);
  7424  001DA4  0E99               	movlw	low epoch_to_caltime@num
  7425  001DA6  0100               	movlb	0	; () banked
  7426  001DA8  6F85               	movwf	get_quot_rem@quot& (0+255),b
  7427  001DAA  0E00               	movlw	high epoch_to_caltime@num
  7428  001DAC  0100               	movlb	0	; () banked
  7429  001DAE  6F86               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7430  001DB0  0E07               	movlw	7
  7431  001DB2  0100               	movlb	0	; () banked
  7432  001DB4  6F87               	movwf	get_quot_rem@div& (0+255),b
  7433  001DB6  ECAC  F011         	call	_get_quot_rem	;wreg free
  7434  001DBA  0100               	movlb	0	; () banked
  7435  001DBC  EE20 F003          	lfsr	2,3
  7436  001DC0  518D               	movf	epoch_to_caltime@ct& (0+255),w,b
  7437  001DC2  26D9               	addwf	fsr2l,f,c
  7438  001DC4  518E               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7439  001DC6  22DA               	addwfc	fsr2h,f,c
  7440  001DC8  0100               	movlb	0	; () banked
  7441  001DCA  C085  FFDF         	movff	?_get_quot_rem,indf2
  7442                           
  7443                           ;My_header\My_RTCC.h: 194: while (day >= month_length(year, month)) {
  7444  001DCE  D041               	goto	l4459
  7445  001DD0                     l365:
  7446                           
  7447                           ; BSR set to: 0
  7448                           ;My_header\My_RTCC.h: 195: LATB2 = 1;
  7449  001DD0  848A               	bsf	3978,2,c	;volatile
  7450                           
  7451                           ; BSR set to: 0
  7452                           ;My_header\My_RTCC.h: 196: day = day - month_length(year, month);
  7453  001DD2  C098  F066         	movff	epoch_to_caltime@month,month_length@month
  7454  001DD6  0100               	movlb	0	; () banked
  7455  001DD8  5197               	movf	epoch_to_caltime@year& (0+255),w,b
  7456  001DDA  EC3C  F011         	call	_month_length
  7457  001DDE  0100               	movlb	0	; () banked
  7458  001DE0  6F91               	movwf	??_epoch_to_caltime& (0+255),b
  7459  001DE2  6B92               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  7460  001DE4  0100               	movlb	0	; () banked
  7461  001DE6  1F91               	comf	??_epoch_to_caltime& (0+255),f,b
  7462  001DE8  1F92               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  7463  001DEA  4B91               	infsnz	??_epoch_to_caltime& (0+255),f,b
  7464  001DEC  2B92               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  7465  001DEE  0100               	movlb	0	; () banked
  7466  001DF0  5195               	movf	epoch_to_caltime@day& (0+255),w,b
  7467  001DF2  0100               	movlb	0	; () banked
  7468  001DF4  2591               	addwf	??_epoch_to_caltime& (0+255),w,b
  7469  001DF6  0100               	movlb	0	; () banked
  7470  001DF8  6F95               	movwf	epoch_to_caltime@day& (0+255),b
  7471  001DFA  0100               	movlb	0	; () banked
  7472  001DFC  5196               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  7473  001DFE  0100               	movlb	0	; () banked
  7474  001E00  2192               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  7475  001E02  0100               	movlb	0	; () banked
  7476  001E04  6F96               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  7477                           
  7478                           ; BSR set to: 0
  7479                           ;My_header\My_RTCC.h: 197: if (month == 12) {
  7480  001E06  0E0C               	movlw	12
  7481  001E08  0100               	movlb	0	; () banked
  7482  001E0A  1998               	xorwf	epoch_to_caltime@month& (0+255),w,b
  7483  001E0C  A4D8               	btfss	status,2,c
  7484  001E0E  D019               	goto	l4453
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;My_header\My_RTCC.h: 198: month = 1;
  7488  001E10  0E01               	movlw	1
  7489  001E12  0100               	movlb	0	; () banked
  7490  001E14  6F98               	movwf	epoch_to_caltime@month& (0+255),b
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;My_header\My_RTCC.h: 199: year++;
  7494  001E16  0100               	movlb	0	; () banked
  7495  001E18  2B97               	incf	epoch_to_caltime@year& (0+255),f,b
  7496                           
  7497                           ; BSR set to: 0
  7498                           ;My_header\My_RTCC.h: 201: if (year >= 100) {
  7499  001E1A  0E63               	movlw	99
  7500  001E1C  0100               	movlb	0	; () banked
  7501  001E1E  6597               	cpfsgt	epoch_to_caltime@year& (0+255),b
  7502  001E20  D013               	goto	l4455
  7503                           
  7504                           ; BSR set to: 0
  7505                           ;My_header\My_RTCC.h: 202: *ep -= 3155760000;
  7506  001E22  C08F  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  7507  001E26  C090  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  7508  001E2A  0E80               	movlw	128
  7509  001E2C  5EDE               	subwf	postinc2,f,c
  7510  001E2E  0E13               	movlw	19
  7511  001E30  5ADE               	subwfb	postinc2,f,c
  7512  001E32  0E19               	movlw	25
  7513  001E34  5ADE               	subwfb	postinc2,f,c
  7514  001E36  0EBC               	movlw	188
  7515  001E38  5ADE               	subwfb	postinc2,f,c
  7516                           
  7517                           ; BSR set to: 0
  7518                           ;My_header\My_RTCC.h: 203: year = 0;
  7519  001E3A  0E00               	movlw	0
  7520  001E3C  0100               	movlb	0	; () banked
  7521  001E3E  6F97               	movwf	epoch_to_caltime@year& (0+255),b
  7522                           
  7523                           ; BSR set to: 0
  7524                           ;My_header\My_RTCC.h: 204: }
  7525                           ;My_header\My_RTCC.h: 205: } else {
  7526  001E40  D003               	goto	l4455
  7527  001E42                     l4453:
  7528                           
  7529                           ; BSR set to: 0
  7530                           ;My_header\My_RTCC.h: 206: month++;
  7531  001E42  0100               	movlb	0	; () banked
  7532  001E44  2B98               	incf	epoch_to_caltime@month& (0+255),f,b
  7533  001E46  D000               	goto	l4455
  7534  001E48                     l4455:
  7535                           
  7536                           ; BSR set to: 0
  7537                           ;My_header\My_RTCC.h: 207: }
  7538                           ;My_header\My_RTCC.h: 208: month_cache = month;
  7539  001E48  C098  F0CE         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;My_header\My_RTCC.h: 209: year_cache = year;
  7543  001E4C  C097  F0E2         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  7544  001E50  D000               	goto	l4459
  7545  001E52                     l4459:
  7546                           
  7547                           ; BSR set to: 0
  7548  001E52  C098  F066         	movff	epoch_to_caltime@month,month_length@month
  7549  001E56  0100               	movlb	0	; () banked
  7550  001E58  5197               	movf	epoch_to_caltime@year& (0+255),w,b
  7551  001E5A  EC3C  F011         	call	_month_length
  7552  001E5E  0100               	movlb	0	; () banked
  7553  001E60  6F91               	movwf	??_epoch_to_caltime& (0+255),b
  7554  001E62  0100               	movlb	0	; () banked
  7555  001E64  5191               	movf	??_epoch_to_caltime& (0+255),w,b
  7556  001E66  0100               	movlb	0	; () banked
  7557  001E68  5D95               	subwf	epoch_to_caltime@day& (0+255),w,b
  7558  001E6A  0E00               	movlw	0
  7559  001E6C  5996               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  7560  001E6E  B0D8               	btfsc	status,0,c
  7561  001E70  D7AF               	goto	l365
  7562                           
  7563                           ; BSR set to: 0
  7564                           ;My_header\My_RTCC.h: 210: }
  7565                           ;My_header\My_RTCC.h: 211: day_cache = day_since_epoch - day;
  7566                           
  7567                           ; BSR set to: 0
  7568  001E72  C095  F091         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  7569  001E76  C096  F092         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  7570  001E7A  0100               	movlb	0	; () banked
  7571  001E7C  1F91               	comf	??_epoch_to_caltime& (0+255),f,b
  7572  001E7E  1F92               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  7573  001E80  4B91               	infsnz	??_epoch_to_caltime& (0+255),f,b
  7574  001E82  2B92               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  7575  001E84  0100               	movlb	0	; () banked
  7576  001E86  5193               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  7577  001E88  0100               	movlb	0	; () banked
  7578  001E8A  2591               	addwf	??_epoch_to_caltime& (0+255),w,b
  7579  001E8C  0100               	movlb	0	; () banked
  7580  001E8E  6FDD               	movwf	epoch_to_caltime@day_cache& (0+255),b
  7581  001E90  0100               	movlb	0	; () banked
  7582  001E92  5194               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  7583  001E94  0100               	movlb	0	; () banked
  7584  001E96  2192               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  7585  001E98  0100               	movlb	0	; () banked
  7586  001E9A  6FDE               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  7587                           
  7588                           ; BSR set to: 0
  7589                           ;My_header\My_RTCC.h: 212: day++;
  7590  001E9C  0100               	movlb	0	; () banked
  7591  001E9E  4B95               	infsnz	epoch_to_caltime@day& (0+255),f,b
  7592  001EA0  2B96               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  7593                           
  7594                           ; BSR set to: 0
  7595                           ;My_header\My_RTCC.h: 214: ct->YY = year;
  7596  001EA2  0100               	movlb	0	; () banked
  7597  001EA4  EE20 F006          	lfsr	2,6
  7598  001EA8  518D               	movf	epoch_to_caltime@ct& (0+255),w,b
  7599  001EAA  26D9               	addwf	fsr2l,f,c
  7600  001EAC  518E               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7601  001EAE  22DA               	addwfc	fsr2h,f,c
  7602  001EB0  C097  FFDF         	movff	epoch_to_caltime@year,indf2
  7603                           
  7604                           ; BSR set to: 0
  7605                           ;My_header\My_RTCC.h: 215: ct->MM = month;
  7606  001EB4  0100               	movlb	0	; () banked
  7607  001EB6  EE20 F005          	lfsr	2,5
  7608  001EBA  518D               	movf	epoch_to_caltime@ct& (0+255),w,b
  7609  001EBC  26D9               	addwf	fsr2l,f,c
  7610  001EBE  518E               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7611  001EC0  22DA               	addwfc	fsr2h,f,c
  7612  001EC2  C098  FFDF         	movff	epoch_to_caltime@month,indf2
  7613                           
  7614                           ; BSR set to: 0
  7615                           ;My_header\My_RTCC.h: 216: ct->DD = day;
  7616  001EC6  0100               	movlb	0	; () banked
  7617  001EC8  EE20 F004          	lfsr	2,4
  7618  001ECC  518D               	movf	epoch_to_caltime@ct& (0+255),w,b
  7619  001ECE  26D9               	addwf	fsr2l,f,c
  7620  001ED0  518E               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7621  001ED2  22DA               	addwfc	fsr2h,f,c
  7622  001ED4  C095  FFDF         	movff	epoch_to_caltime@day,indf2
  7623                           
  7624                           ; BSR set to: 0
  7625  001ED8  0012               	return		;funcret
  7626  001EDA                     __end_of_epoch_to_caltime:
  7627                           	opt stack 0
  7628                           tblptru	equ	0xFF8
  7629                           tblptrh	equ	0xFF7
  7630                           tblptrl	equ	0xFF6
  7631                           tablat	equ	0xFF5
  7632                           prodh	equ	0xFF4
  7633                           prodl	equ	0xFF3
  7634                           intcon	equ	0xFF2
  7635                           postinc0	equ	0xFEE
  7636                           wreg	equ	0xFE8
  7637                           indf1	equ	0xFE7
  7638                           postinc1	equ	0xFE6
  7639                           postdec1	equ	0xFE5
  7640                           fsr1h	equ	0xFE2
  7641                           fsr1l	equ	0xFE1
  7642                           indf2	equ	0xFDF
  7643                           postinc2	equ	0xFDE
  7644                           postdec2	equ	0xFDD
  7645                           fsr2h	equ	0xFDA
  7646                           fsr2l	equ	0xFD9
  7647                           status	equ	0xFD8
  7648                           
  7649 ;; *************** function _month_length *****************
  7650 ;; Defined at:
  7651 ;;		line 84 in file "../My_header\My_RTCC.h"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;  year            1    wreg     unsigned char 
  7654 ;;  month           1    6[BANK0 ] unsigned char 
  7655 ;; Auto vars:     Size  Location     Type
  7656 ;;  year            1   11[BANK0 ] unsigned char 
  7657 ;; Return value:  Size  Location     Type
  7658 ;;                  1    wreg      unsigned char 
  7659 ;; Registers used:
  7660 ;;		wreg, status,2, status,0, cstack
  7661 ;; Tracked objects:
  7662 ;;		On entry : 0/0
  7663 ;;		On exit  : 0/0
  7664 ;;		Unchanged: 0/0
  7665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7666 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7667 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7668 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7669 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7670 ;;Total ram usage:        6 bytes
  7671 ;; Hardware stack levels used:    1
  7672 ;; Hardware stack levels required when called:    6
  7673 ;; This function calls:
  7674 ;;		___awmod
  7675 ;; This function is called by:
  7676 ;;		_epoch_to_caltime
  7677 ;;		_caltime_to_epoch
  7678 ;;		_RTCC_time_set_inc
  7679 ;;		_RTCC_time_set_dec
  7680 ;; This function uses a non-reentrant model
  7681 ;;
  7682                           
  7683                           	psect	text35
  7684  002278                     __ptext35:
  7685                           	opt stack 0
  7686  002278                     _month_length:
  7687                           	opt stack 21
  7688                           
  7689                           ; BSR set to: 0
  7690                           ;incstack = 0
  7691                           ;month_length@year stored from wreg
  7692  002278  0100               	movlb	0	; () banked
  7693  00227A  6F6B               	movwf	month_length@year& (0+255),b
  7694                           
  7695                           ; BSR set to: 0
  7696                           ;My_header\My_RTCC.h: 85: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year %
      +                           400);
  7697  00227C  0E02               	movlw	2
  7698  00227E  0100               	movlb	0	; () banked
  7699  002280  1966               	xorwf	month_length@month& (0+255),w,b
  7700  002282  A4D8               	btfss	status,2,c
  7701  002284  D03E               	goto	l4179
  7702                           
  7703                           ; BSR set to: 0
  7704  002286  C06B  F060         	movff	month_length@year,___awmod@dividend
  7705  00228A  0100               	movlb	0	; () banked
  7706  00228C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  7707  00228E  0E00               	movlw	0
  7708  002290  0100               	movlb	0	; () banked
  7709  002292  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  7710  002294  0E64               	movlw	100
  7711  002296  6F62               	movwf	___awmod@divisor& (0+255),b
  7712  002298  EC67  F014         	call	___awmod	;wreg free
  7713  00229C  0100               	movlb	0	; () banked
  7714  00229E  5160               	movf	?___awmod& (0+255),w,b
  7715  0022A0  0100               	movlb	0	; () banked
  7716  0022A2  1161               	iorwf	(?___awmod+1)& (0+255),w,b
  7717  0022A4  A4D8               	btfss	status,2,c
  7718  0022A6  D002               	goto	u4260
  7719  0022A8  0E01               	movlw	1
  7720  0022AA  D001               	goto	u4270
  7721  0022AC                     u4260:
  7722  0022AC  0E00               	movlw	0
  7723  0022AE                     u4270:
  7724  0022AE  0800               	sublw	0
  7725  0022B0  0100               	movlb	0	; () banked
  7726  0022B2  6F67               	movwf	??_month_length& (0+255),b
  7727  0022B4  C06B  F060         	movff	month_length@year,___awmod@dividend
  7728  0022B8  0100               	movlb	0	; () banked
  7729  0022BA  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  7730  0022BC  0E01               	movlw	1
  7731  0022BE  0100               	movlb	0	; () banked
  7732  0022C0  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  7733  0022C2  0E90               	movlw	144
  7734  0022C4  6F62               	movwf	___awmod@divisor& (0+255),b
  7735  0022C6  EC67  F014         	call	___awmod	;wreg free
  7736  0022CA  0100               	movlb	0	; () banked
  7737  0022CC  5160               	movf	?___awmod& (0+255),w,b
  7738  0022CE  0100               	movlb	0	; () banked
  7739  0022D0  1161               	iorwf	(?___awmod+1)& (0+255),w,b
  7740  0022D2  A4D8               	btfss	status,2,c
  7741  0022D4  D004               	goto	u4280
  7742  0022D6  0100               	movlb	0	; () banked
  7743  0022D8  6B68               	clrf	(??_month_length+1)& (0+255),b
  7744  0022DA  2B68               	incf	(??_month_length+1)& (0+255),f,b
  7745  0022DC  D002               	goto	u4298
  7746  0022DE                     u4280:
  7747  0022DE  0100               	movlb	0	; () banked
  7748  0022E0  6B68               	clrf	(??_month_length+1)& (0+255),b
  7749  0022E2                     u4298:
  7750  0022E2  C06B  F069         	movff	month_length@year,??_month_length+2
  7751  0022E6  0E03               	movlw	3
  7752  0022E8  0100               	movlb	0	; () banked
  7753  0022EA  1769               	andwf	(??_month_length+2)& (0+255),f,b
  7754  0022EC  A4D8               	btfss	status,2,c
  7755  0022EE  D002               	goto	u4300
  7756  0022F0  0E01               	movlw	1
  7757  0022F2  D001               	goto	u4310
  7758  0022F4                     u4300:
  7759  0022F4  0E00               	movlw	0
  7760  0022F6                     u4310:
  7761  0022F6  0100               	movlb	0	; () banked
  7762  0022F8  2568               	addwf	(??_month_length+1)& (0+255),w,b
  7763  0022FA  0100               	movlb	0	; () banked
  7764  0022FC  2567               	addwf	??_month_length& (0+255),w,b
  7765  0022FE  0F1C               	addlw	28
  7766                           
  7767                           ; BSR set to: 0
  7768                           
  7769                           ; BSR set to: 0
  7770  002300  0012               	return	
  7771  002302                     l4179:
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;My_header\My_RTCC.h: 86: else return 31 - (((-(month & 1)^month)&13) == 4);
  7775  002302  0100               	movlb	0	; () banked
  7776  002304  5166               	movf	month_length@month& (0+255),w,b
  7777  002306  0B01               	andlw	1
  7778  002308  0100               	movlb	0	; () banked
  7779  00230A  6F67               	movwf	??_month_length& (0+255),b
  7780  00230C  6B68               	clrf	(??_month_length+1)& (0+255),b
  7781  00230E  0100               	movlb	0	; () banked
  7782  002310  1F67               	comf	??_month_length& (0+255),f,b
  7783  002312  1F68               	comf	(??_month_length+1)& (0+255),f,b
  7784  002314  4B67               	infsnz	??_month_length& (0+255),f,b
  7785  002316  2B68               	incf	(??_month_length+1)& (0+255),f,b
  7786  002318  0100               	movlb	0	; () banked
  7787  00231A  5166               	movf	month_length@month& (0+255),w,b
  7788  00231C  0100               	movlb	0	; () banked
  7789  00231E  6F69               	movwf	(??_month_length+2)& (0+255),b
  7790  002320  6B6A               	clrf	(??_month_length+3)& (0+255),b
  7791  002322  0100               	movlb	0	; () banked
  7792  002324  5167               	movf	??_month_length& (0+255),w,b
  7793  002326  0100               	movlb	0	; () banked
  7794  002328  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
  7795  00232A  0100               	movlb	0	; () banked
  7796  00232C  5168               	movf	(??_month_length+1)& (0+255),w,b
  7797  00232E  0100               	movlb	0	; () banked
  7798  002330  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
  7799  002332  0E0D               	movlw	13
  7800  002334  0100               	movlb	0	; () banked
  7801  002336  1769               	andwf	(??_month_length+2)& (0+255),f,b
  7802  002338  0E00               	movlw	0
  7803  00233A  176A               	andwf	(??_month_length+3)& (0+255),f,b
  7804  00233C  0E04               	movlw	4
  7805  00233E  0100               	movlb	0	; () banked
  7806  002340  1969               	xorwf	(??_month_length+2)& (0+255),w,b
  7807  002342  0100               	movlb	0	; () banked
  7808  002344  116A               	iorwf	(??_month_length+3)& (0+255),w,b
  7809  002346  A4D8               	btfss	status,2,c
  7810  002348  D002               	goto	u4320
  7811  00234A  0E01               	movlw	1
  7812  00234C  D001               	goto	u4330
  7813  00234E                     u4320:
  7814  00234E  0E00               	movlw	0
  7815  002350                     u4330:
  7816  002350  0800               	sublw	0
  7817  002352  0F1F               	addlw	31
  7818                           
  7819                           ; BSR set to: 0
  7820  002354  0012               	return	
  7821                           
  7822                           ; BSR set to: 0
  7823                           
  7824                           ; BSR set to: 0
  7825  002356  0012               	return		;funcret
  7826  002358                     __end_of_month_length:
  7827                           	opt stack 0
  7828                           tblptru	equ	0xFF8
  7829                           tblptrh	equ	0xFF7
  7830                           tblptrl	equ	0xFF6
  7831                           tablat	equ	0xFF5
  7832                           prodh	equ	0xFF4
  7833                           prodl	equ	0xFF3
  7834                           intcon	equ	0xFF2
  7835                           postinc0	equ	0xFEE
  7836                           wreg	equ	0xFE8
  7837                           indf1	equ	0xFE7
  7838                           postinc1	equ	0xFE6
  7839                           postdec1	equ	0xFE5
  7840                           fsr1h	equ	0xFE2
  7841                           fsr1l	equ	0xFE1
  7842                           indf2	equ	0xFDF
  7843                           postinc2	equ	0xFDE
  7844                           postdec2	equ	0xFDD
  7845                           fsr2h	equ	0xFDA
  7846                           fsr2l	equ	0xFD9
  7847                           status	equ	0xFD8
  7848                           
  7849 ;; *************** function ___awmod *****************
  7850 ;; Defined at:
  7851 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  7852 ;; Parameters:    Size  Location     Type
  7853 ;;  dividend        2    0[BANK0 ] int 
  7854 ;;  divisor         2    2[BANK0 ] int 
  7855 ;; Auto vars:     Size  Location     Type
  7856 ;;  sign            1    5[BANK0 ] unsigned char 
  7857 ;;  counter         1    4[BANK0 ] unsigned char 
  7858 ;; Return value:  Size  Location     Type
  7859 ;;                  2    0[BANK0 ] int 
  7860 ;; Registers used:
  7861 ;;		wreg, status,2, status,0
  7862 ;; Tracked objects:
  7863 ;;		On entry : 0/0
  7864 ;;		On exit  : 0/0
  7865 ;;		Unchanged: 0/0
  7866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7867 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7868 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7870 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7871 ;;Total ram usage:        6 bytes
  7872 ;; Hardware stack levels used:    1
  7873 ;; Hardware stack levels required when called:    5
  7874 ;; This function calls:
  7875 ;;		Nothing
  7876 ;; This function is called by:
  7877 ;;		_month_length
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881                           	psect	text36
  7882  0028CE                     __ptext36:
  7883                           	opt stack 0
  7884  0028CE                     ___awmod:
  7885                           	opt stack 21
  7886                           
  7887                           ; BSR set to: 0
  7888                           ;incstack = 0
  7889  0028CE  0E00               	movlw	0
  7890  0028D0  0100               	movlb	0	; () banked
  7891  0028D2  6F65               	movwf	___awmod@sign& (0+255),b
  7892                           
  7893                           ; BSR set to: 0
  7894  0028D4  0100               	movlb	0	; () banked
  7895  0028D6  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  7896  0028D8  D009               	goto	l4073
  7897                           
  7898                           ; BSR set to: 0
  7899  0028DA  0100               	movlb	0	; () banked
  7900  0028DC  6D60               	negf	___awmod@dividend& (0+255),b
  7901  0028DE  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7902  0028E0  B0D8               	btfsc	status,0,c
  7903  0028E2  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7904                           
  7905                           ; BSR set to: 0
  7906  0028E4  0E01               	movlw	1
  7907  0028E6  0100               	movlb	0	; () banked
  7908  0028E8  6F65               	movwf	___awmod@sign& (0+255),b
  7909  0028EA  D000               	goto	l4073
  7910  0028EC                     l4073:
  7911                           
  7912                           ; BSR set to: 0
  7913  0028EC  0100               	movlb	0	; () banked
  7914  0028EE  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7915  0028F0  D006               	goto	l4077
  7916                           
  7917                           ; BSR set to: 0
  7918  0028F2  0100               	movlb	0	; () banked
  7919  0028F4  6D62               	negf	___awmod@divisor& (0+255),b
  7920  0028F6  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  7921  0028F8  B0D8               	btfsc	status,0,c
  7922  0028FA  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  7923  0028FC  D000               	goto	l4077
  7924  0028FE                     l4077:
  7925                           
  7926                           ; BSR set to: 0
  7927  0028FE  0100               	movlb	0	; () banked
  7928  002900  5162               	movf	___awmod@divisor& (0+255),w,b
  7929  002902  0100               	movlb	0	; () banked
  7930  002904  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  7931  002906  B4D8               	btfsc	status,2,c
  7932  002908  D02B               	goto	l4093
  7933                           
  7934                           ; BSR set to: 0
  7935  00290A  0E01               	movlw	1
  7936  00290C  0100               	movlb	0	; () banked
  7937  00290E  6F64               	movwf	___awmod@counter& (0+255),b
  7938  002910  D007               	goto	l4083
  7939  002912                     l4081:
  7940                           
  7941                           ; BSR set to: 0
  7942  002912  0100               	movlb	0	; () banked
  7943  002914  90D8               	bcf	status,0,c
  7944  002916  3762               	rlcf	___awmod@divisor& (0+255),f,b
  7945  002918  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7946  00291A  0100               	movlb	0	; () banked
  7947  00291C  2B64               	incf	___awmod@counter& (0+255),f,b
  7948  00291E  D000               	goto	l4083
  7949  002920                     l4083:
  7950                           
  7951                           ; BSR set to: 0
  7952  002920  0100               	movlb	0	; () banked
  7953  002922  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  7954  002924  D002               	goto	l4085
  7955  002926  D7F5               	goto	l4081
  7956                           
  7957                           ; BSR set to: 0
  7958  002928  D000               	goto	l4085
  7959  00292A                     l4085:
  7960                           
  7961                           ; BSR set to: 0
  7962  00292A  0100               	movlb	0	; () banked
  7963  00292C  5162               	movf	___awmod@divisor& (0+255),w,b
  7964  00292E  0100               	movlb	0	; () banked
  7965  002930  5D60               	subwf	___awmod@dividend& (0+255),w,b
  7966  002932  0100               	movlb	0	; () banked
  7967  002934  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7968  002936  0100               	movlb	0	; () banked
  7969  002938  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7970  00293A  A0D8               	btfss	status,0,c
  7971  00293C  D009               	goto	l4089
  7972                           
  7973                           ; BSR set to: 0
  7974  00293E  0100               	movlb	0	; () banked
  7975  002940  5162               	movf	___awmod@divisor& (0+255),w,b
  7976  002942  0100               	movlb	0	; () banked
  7977  002944  5F60               	subwf	___awmod@dividend& (0+255),f,b
  7978  002946  0100               	movlb	0	; () banked
  7979  002948  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7980  00294A  0100               	movlb	0	; () banked
  7981  00294C  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7982  00294E  D000               	goto	l4089
  7983  002950                     l4089:
  7984                           
  7985                           ; BSR set to: 0
  7986  002950  0100               	movlb	0	; () banked
  7987  002952  90D8               	bcf	status,0,c
  7988  002954  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7989  002956  3362               	rrcf	___awmod@divisor& (0+255),f,b
  7990                           
  7991                           ; BSR set to: 0
  7992  002958  0100               	movlb	0	; () banked
  7993  00295A  2F64               	decfsz	___awmod@counter& (0+255),f,b
  7994  00295C  D7E6               	goto	l4085
  7995                           
  7996                           ; BSR set to: 0
  7997  00295E  D000               	goto	l4093
  7998  002960                     l4093:
  7999                           
  8000                           ; BSR set to: 0
  8001  002960  0100               	movlb	0	; () banked
  8002  002962  5165               	movf	___awmod@sign& (0+255),w,b
  8003  002964  0100               	movlb	0	; () banked
  8004  002966  B4D8               	btfsc	status,2,c
  8005  002968  D006               	goto	l4097
  8006                           
  8007                           ; BSR set to: 0
  8008  00296A  0100               	movlb	0	; () banked
  8009  00296C  6D60               	negf	___awmod@dividend& (0+255),b
  8010  00296E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  8011  002970  B0D8               	btfsc	status,0,c
  8012  002972  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  8013  002974  D000               	goto	l4097
  8014  002976                     l4097:
  8015                           
  8016                           ; BSR set to: 0
  8017  002976  C060  F060         	movff	___awmod@dividend,?___awmod
  8018  00297A  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  8019  00297E  0012               	return	
  8020                           
  8021                           ; BSR set to: 0
  8022                           
  8023                           ; BSR set to: 0
  8024  002980  0012               	return		;funcret
  8025  002982                     __end_of___awmod:
  8026                           	opt stack 0
  8027                           tblptru	equ	0xFF8
  8028                           tblptrh	equ	0xFF7
  8029                           tblptrl	equ	0xFF6
  8030                           tablat	equ	0xFF5
  8031                           prodh	equ	0xFF4
  8032                           prodl	equ	0xFF3
  8033                           intcon	equ	0xFF2
  8034                           postinc0	equ	0xFEE
  8035                           wreg	equ	0xFE8
  8036                           indf1	equ	0xFE7
  8037                           postinc1	equ	0xFE6
  8038                           postdec1	equ	0xFE5
  8039                           fsr1h	equ	0xFE2
  8040                           fsr1l	equ	0xFE1
  8041                           indf2	equ	0xFDF
  8042                           postinc2	equ	0xFDE
  8043                           postdec2	equ	0xFDD
  8044                           fsr2h	equ	0xFDA
  8045                           fsr2l	equ	0xFD9
  8046                           status	equ	0xFD8
  8047                           
  8048 ;; *************** function _get_quot_rem *****************
  8049 ;; Defined at:
  8050 ;;		line 117 in file "../My_header\My_RTCC.h"
  8051 ;; Parameters:    Size  Location     Type
  8052 ;;  quot            2   37[BANK0 ] PTR unsigned long 
  8053 ;;		 -> epoch_to_caltime@num(4), 
  8054 ;;  div             1   39[BANK0 ] unsigned char 
  8055 ;; Auto vars:     Size  Location     Type
  8056 ;;  num             4   41[BANK0 ] unsigned long 
  8057 ;; Return value:  Size  Location     Type
  8058 ;;                  4   37[BANK0 ] unsigned long 
  8059 ;; Registers used:
  8060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8061 ;; Tracked objects:
  8062 ;;		On entry : 0/0
  8063 ;;		On exit  : 0/0
  8064 ;;		Unchanged: 0/0
  8065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8066 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8067 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8069 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8070 ;;Total ram usage:        8 bytes
  8071 ;; Hardware stack levels used:    1
  8072 ;; Hardware stack levels required when called:    6
  8073 ;; This function calls:
  8074 ;;		___lldiv
  8075 ;;		___lmul
  8076 ;; This function is called by:
  8077 ;;		_epoch_to_caltime
  8078 ;; This function uses a non-reentrant model
  8079 ;;
  8080                           
  8081                           	psect	text37
  8082  002358                     __ptext37:
  8083                           	opt stack 0
  8084  002358                     _get_quot_rem:
  8085                           	opt stack 22
  8086                           
  8087                           ;My_header\My_RTCC.h: 120: epoch_t num = *quot;
  8088                           
  8089                           ; BSR set to: 0
  8090                           ;incstack = 0
  8091  002358  C085  FFD9         	movff	get_quot_rem@quot,fsr2l
  8092  00235C  C086  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  8093  002360  CFDE F089          	movff	postinc2,get_quot_rem@num
  8094  002364  CFDE F08A          	movff	postinc2,get_quot_rem@num+1
  8095  002368  CFDE F08B          	movff	postinc2,get_quot_rem@num+2
  8096  00236C  CFDE F08C          	movff	postinc2,get_quot_rem@num+3
  8097                           
  8098                           ;My_header\My_RTCC.h: 121: return num - (*quot = num / div) * div;
  8099  002370  0100               	movlb	0	; () banked
  8100  002372  5187               	movf	get_quot_rem@div& (0+255),w,b
  8101  002374  0100               	movlb	0	; () banked
  8102  002376  6F7C               	movwf	___lldiv@divisor& (0+255),b
  8103  002378  6B7D               	clrf	(___lldiv@divisor+1)& (0+255),b
  8104  00237A  6B7E               	clrf	(___lldiv@divisor+2)& (0+255),b
  8105  00237C  6B7F               	clrf	(___lldiv@divisor+3)& (0+255),b
  8106  00237E  C089  F078         	movff	get_quot_rem@num,___lldiv@dividend
  8107  002382  C08A  F079         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  8108  002386  C08B  F07A         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  8109  00238A  C08C  F07B         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  8110  00238E  EC4B  F013         	call	___lldiv	;wreg free
  8111  002392  C085  FFD9         	movff	get_quot_rem@quot,fsr2l
  8112  002396  C086  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  8113  00239A  0100               	movlb	0	; () banked
  8114  00239C  C078  FFDE         	movff	?___lldiv,postinc2
  8115  0023A0  0100               	movlb	0	; () banked
  8116  0023A2  C079  FFDE         	movff	?___lldiv+1,postinc2
  8117  0023A6  0100               	movlb	0	; () banked
  8118  0023A8  C07A  FFDE         	movff	?___lldiv+2,postinc2
  8119  0023AC  0100               	movlb	0	; () banked
  8120  0023AE  C07B  FFDD         	movff	?___lldiv+3,postdec2
  8121  0023B2  52DD               	movf	postdec2,f,c
  8122  0023B4  52DD               	movf	postdec2,f,c
  8123  0023B6  CFDE F06C          	movff	postinc2,___lmul@multiplier
  8124  0023BA  CFDE F06D          	movff	postinc2,___lmul@multiplier+1
  8125  0023BE  CFDE F06E          	movff	postinc2,___lmul@multiplier+2
  8126  0023C2  CFDE F06F          	movff	postinc2,___lmul@multiplier+3
  8127  0023C6  0100               	movlb	0	; () banked
  8128  0023C8  5187               	movf	get_quot_rem@div& (0+255),w,b
  8129  0023CA  0100               	movlb	0	; () banked
  8130  0023CC  6F70               	movwf	___lmul@multiplicand& (0+255),b
  8131  0023CE  6B71               	clrf	(___lmul@multiplicand+1)& (0+255),b
  8132  0023D0  6B72               	clrf	(___lmul@multiplicand+2)& (0+255),b
  8133  0023D2  6B73               	clrf	(___lmul@multiplicand+3)& (0+255),b
  8134  0023D4  ECF1  F017         	call	___lmul	;wreg free
  8135  0023D8  0100               	movlb	0	; () banked
  8136  0023DA  1F6C               	comf	?___lmul& (0+255),f,b
  8137  0023DC  0100               	movlb	0	; () banked
  8138  0023DE  1F6D               	comf	(?___lmul+1)& (0+255),f,b
  8139  0023E0  0100               	movlb	0	; () banked
  8140  0023E2  1F6E               	comf	(?___lmul+2)& (0+255),f,b
  8141  0023E4  0100               	movlb	0	; () banked
  8142  0023E6  1F6F               	comf	(?___lmul+3)& (0+255),f,b
  8143  0023E8  0100               	movlb	0	; () banked
  8144  0023EA  2B6C               	incf	?___lmul& (0+255),f,b
  8145  0023EC  0E00               	movlw	0
  8146  0023EE  0100               	movlb	0	; () banked
  8147  0023F0  236D               	addwfc	(?___lmul+1)& (0+255),f,b
  8148  0023F2  0100               	movlb	0	; () banked
  8149  0023F4  236E               	addwfc	(?___lmul+2)& (0+255),f,b
  8150  0023F6  0100               	movlb	0	; () banked
  8151  0023F8  236F               	addwfc	(?___lmul+3)& (0+255),f,b
  8152  0023FA  0100               	movlb	0	; () banked
  8153  0023FC  5189               	movf	get_quot_rem@num& (0+255),w,b
  8154  0023FE  0100               	movlb	0	; () banked
  8155  002400  256C               	addwf	?___lmul& (0+255),w,b
  8156  002402  0100               	movlb	0	; () banked
  8157  002404  6F85               	movwf	?_get_quot_rem& (0+255),b
  8158  002406  0100               	movlb	0	; () banked
  8159  002408  518A               	movf	(get_quot_rem@num+1)& (0+255),w,b
  8160  00240A  0100               	movlb	0	; () banked
  8161  00240C  216D               	addwfc	(?___lmul+1)& (0+255),w,b
  8162  00240E  0100               	movlb	0	; () banked
  8163  002410  6F86               	movwf	(?_get_quot_rem+1)& (0+255),b
  8164  002412  0100               	movlb	0	; () banked
  8165  002414  518B               	movf	(get_quot_rem@num+2)& (0+255),w,b
  8166  002416  0100               	movlb	0	; () banked
  8167  002418  216E               	addwfc	(?___lmul+2)& (0+255),w,b
  8168  00241A  0100               	movlb	0	; () banked
  8169  00241C  6F87               	movwf	(?_get_quot_rem+2)& (0+255),b
  8170  00241E  0100               	movlb	0	; () banked
  8171  002420  518C               	movf	(get_quot_rem@num+3)& (0+255),w,b
  8172  002422  0100               	movlb	0	; () banked
  8173  002424  216F               	addwfc	(?___lmul+3)& (0+255),w,b
  8174  002426  0100               	movlb	0	; () banked
  8175  002428  6F88               	movwf	(?_get_quot_rem+3)& (0+255),b
  8176  00242A  0012               	return	
  8177                           
  8178                           ; BSR set to: 0
  8179                           
  8180                           ; BSR set to: 0
  8181  00242C  0012               	return		;funcret
  8182  00242E                     __end_of_get_quot_rem:
  8183                           	opt stack 0
  8184                           tblptru	equ	0xFF8
  8185                           tblptrh	equ	0xFF7
  8186                           tblptrl	equ	0xFF6
  8187                           tablat	equ	0xFF5
  8188                           prodh	equ	0xFF4
  8189                           prodl	equ	0xFF3
  8190                           intcon	equ	0xFF2
  8191                           postinc0	equ	0xFEE
  8192                           wreg	equ	0xFE8
  8193                           indf1	equ	0xFE7
  8194                           postinc1	equ	0xFE6
  8195                           postdec1	equ	0xFE5
  8196                           fsr1h	equ	0xFE2
  8197                           fsr1l	equ	0xFE1
  8198                           indf2	equ	0xFDF
  8199                           postinc2	equ	0xFDE
  8200                           postdec2	equ	0xFDD
  8201                           fsr2h	equ	0xFDA
  8202                           fsr2l	equ	0xFD9
  8203                           status	equ	0xFD8
  8204                           
  8205 ;; *************** function ___lmul *****************
  8206 ;; Defined at:
  8207 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
  8208 ;; Parameters:    Size  Location     Type
  8209 ;;  multiplier      4   12[BANK0 ] unsigned long 
  8210 ;;  multiplicand    4   16[BANK0 ] unsigned long 
  8211 ;; Auto vars:     Size  Location     Type
  8212 ;;  product         4   20[BANK0 ] unsigned long 
  8213 ;; Return value:  Size  Location     Type
  8214 ;;                  4   12[BANK0 ] unsigned long 
  8215 ;; Registers used:
  8216 ;;		wreg, status,2, status,0
  8217 ;; Tracked objects:
  8218 ;;		On entry : 0/0
  8219 ;;		On exit  : 0/0
  8220 ;;		Unchanged: 0/0
  8221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8222 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8223 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8225 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8226 ;;Total ram usage:       12 bytes
  8227 ;; Hardware stack levels used:    1
  8228 ;; Hardware stack levels required when called:    5
  8229 ;; This function calls:
  8230 ;;		Nothing
  8231 ;; This function is called by:
  8232 ;;		_get_quot_rem
  8233 ;;		_caltime_to_epoch
  8234 ;;		_main
  8235 ;;		_RTCC_time_set_inc
  8236 ;;		_RTCC_time_set_dec
  8237 ;; This function uses a non-reentrant model
  8238 ;;
  8239                           
  8240                           	psect	text38
  8241  002FE2                     __ptext38:
  8242                           	opt stack 0
  8243  002FE2                     ___lmul:
  8244                           	opt stack 22
  8245                           
  8246                           ; BSR set to: 0
  8247                           ;incstack = 0
  8248  002FE2  0E00               	movlw	0
  8249  002FE4  0100               	movlb	0	; () banked
  8250  002FE6  6F74               	movwf	___lmul@product& (0+255),b
  8251  002FE8  0E00               	movlw	0
  8252  002FEA  6F75               	movwf	(___lmul@product+1)& (0+255),b
  8253  002FEC  0E00               	movlw	0
  8254  002FEE  6F76               	movwf	(___lmul@product+2)& (0+255),b
  8255  002FF0  0E00               	movlw	0
  8256  002FF2  6F77               	movwf	(___lmul@product+3)& (0+255),b
  8257  002FF4  D000               	goto	l4185
  8258  002FF6                     l4185:
  8259                           
  8260                           ; BSR set to: 0
  8261  002FF6  0100               	movlb	0	; () banked
  8262  002FF8  A16C               	btfss	___lmul@multiplier& (0+255),0,b
  8263  002FFA  D011               	goto	l4189
  8264                           
  8265                           ; BSR set to: 0
  8266  002FFC  0100               	movlb	0	; () banked
  8267  002FFE  5170               	movf	___lmul@multiplicand& (0+255),w,b
  8268  003000  0100               	movlb	0	; () banked
  8269  003002  2774               	addwf	___lmul@product& (0+255),f,b
  8270  003004  0100               	movlb	0	; () banked
  8271  003006  5171               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  8272  003008  0100               	movlb	0	; () banked
  8273  00300A  2375               	addwfc	(___lmul@product+1)& (0+255),f,b
  8274  00300C  0100               	movlb	0	; () banked
  8275  00300E  5172               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  8276  003010  0100               	movlb	0	; () banked
  8277  003012  2376               	addwfc	(___lmul@product+2)& (0+255),f,b
  8278  003014  0100               	movlb	0	; () banked
  8279  003016  5173               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  8280  003018  0100               	movlb	0	; () banked
  8281  00301A  2377               	addwfc	(___lmul@product+3)& (0+255),f,b
  8282  00301C  D000               	goto	l4189
  8283  00301E                     l4189:
  8284                           
  8285                           ; BSR set to: 0
  8286  00301E  0100               	movlb	0	; () banked
  8287  003020  90D8               	bcf	status,0,c
  8288  003022  3770               	rlcf	___lmul@multiplicand& (0+255),f,b
  8289  003024  3771               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  8290  003026  3772               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  8291  003028  3773               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  8292                           
  8293                           ; BSR set to: 0
  8294  00302A  0100               	movlb	0	; () banked
  8295  00302C  90D8               	bcf	status,0,c
  8296  00302E  336F               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  8297  003030  336E               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  8298  003032  336D               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  8299  003034  336C               	rrcf	___lmul@multiplier& (0+255),f,b
  8300  003036  0100               	movlb	0	; () banked
  8301  003038  516C               	movf	___lmul@multiplier& (0+255),w,b
  8302  00303A  0100               	movlb	0	; () banked
  8303  00303C  116D               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  8304  00303E  0100               	movlb	0	; () banked
  8305  003040  116E               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  8306  003042  0100               	movlb	0	; () banked
  8307  003044  116F               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  8308  003046  A4D8               	btfss	status,2,c
  8309  003048  D7D6               	goto	l4185
  8310                           
  8311                           ; BSR set to: 0
  8312  00304A  C074  F06C         	movff	___lmul@product,?___lmul
  8313  00304E  C075  F06D         	movff	___lmul@product+1,?___lmul+1
  8314  003052  C076  F06E         	movff	___lmul@product+2,?___lmul+2
  8315  003056  C077  F06F         	movff	___lmul@product+3,?___lmul+3
  8316                           
  8317                           ; BSR set to: 0
  8318  00305A  0012               	return		;funcret
  8319  00305C                     __end_of___lmul:
  8320                           	opt stack 0
  8321                           tblptru	equ	0xFF8
  8322                           tblptrh	equ	0xFF7
  8323                           tblptrl	equ	0xFF6
  8324                           tablat	equ	0xFF5
  8325                           prodh	equ	0xFF4
  8326                           prodl	equ	0xFF3
  8327                           intcon	equ	0xFF2
  8328                           postinc0	equ	0xFEE
  8329                           wreg	equ	0xFE8
  8330                           indf1	equ	0xFE7
  8331                           postinc1	equ	0xFE6
  8332                           postdec1	equ	0xFE5
  8333                           fsr1h	equ	0xFE2
  8334                           fsr1l	equ	0xFE1
  8335                           indf2	equ	0xFDF
  8336                           postinc2	equ	0xFDE
  8337                           postdec2	equ	0xFDD
  8338                           fsr2h	equ	0xFDA
  8339                           fsr2l	equ	0xFD9
  8340                           status	equ	0xFD8
  8341                           
  8342 ;; *************** function ___lldiv *****************
  8343 ;; Defined at:
  8344 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;  dividend        4   24[BANK0 ] unsigned long 
  8347 ;;  divisor         4   28[BANK0 ] unsigned long 
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;  quotient        4   32[BANK0 ] unsigned long 
  8350 ;;  counter         1   36[BANK0 ] unsigned char 
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  4   24[BANK0 ] unsigned long 
  8353 ;; Registers used:
  8354 ;;		wreg, status,2, status,0
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8360 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8361 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8363 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8364 ;;Total ram usage:       13 bytes
  8365 ;; Hardware stack levels used:    1
  8366 ;; Hardware stack levels required when called:    5
  8367 ;; This function calls:
  8368 ;;		Nothing
  8369 ;; This function is called by:
  8370 ;;		_get_quot_rem
  8371 ;;		_main
  8372 ;;		_CTMU_read
  8373 ;; This function uses a non-reentrant model
  8374 ;;
  8375                           
  8376                           	psect	text39
  8377  002696                     __ptext39:
  8378                           	opt stack 0
  8379  002696                     ___lldiv:
  8380                           	opt stack 25
  8381                           
  8382                           ; BSR set to: 0
  8383                           ;incstack = 0
  8384  002696  0E00               	movlw	0
  8385  002698  0100               	movlb	0	; () banked
  8386  00269A  6F80               	movwf	___lldiv@quotient& (0+255),b
  8387  00269C  0E00               	movlw	0
  8388  00269E  6F81               	movwf	(___lldiv@quotient+1)& (0+255),b
  8389  0026A0  0E00               	movlw	0
  8390  0026A2  6F82               	movwf	(___lldiv@quotient+2)& (0+255),b
  8391  0026A4  0E00               	movlw	0
  8392  0026A6  6F83               	movwf	(___lldiv@quotient+3)& (0+255),b
  8393                           
  8394                           ; BSR set to: 0
  8395  0026A8  0100               	movlb	0	; () banked
  8396  0026AA  517C               	movf	___lldiv@divisor& (0+255),w,b
  8397  0026AC  0100               	movlb	0	; () banked
  8398  0026AE  117D               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  8399  0026B0  0100               	movlb	0	; () banked
  8400  0026B2  117E               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  8401  0026B4  0100               	movlb	0	; () banked
  8402  0026B6  117F               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  8403  0026B8  B4D8               	btfsc	status,2,c
  8404  0026BA  D047               	goto	l1075
  8405                           
  8406                           ; BSR set to: 0
  8407  0026BC  0E01               	movlw	1
  8408  0026BE  0100               	movlb	0	; () banked
  8409  0026C0  6F84               	movwf	___lldiv@counter& (0+255),b
  8410  0026C2  D009               	goto	l4201
  8411  0026C4                     l4199:
  8412                           
  8413                           ; BSR set to: 0
  8414  0026C4  0100               	movlb	0	; () banked
  8415  0026C6  90D8               	bcf	status,0,c
  8416  0026C8  377C               	rlcf	___lldiv@divisor& (0+255),f,b
  8417  0026CA  377D               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  8418  0026CC  377E               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  8419  0026CE  377F               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  8420  0026D0  0100               	movlb	0	; () banked
  8421  0026D2  2B84               	incf	___lldiv@counter& (0+255),f,b
  8422  0026D4  D000               	goto	l4201
  8423  0026D6                     l4201:
  8424                           
  8425                           ; BSR set to: 0
  8426  0026D6  0100               	movlb	0	; () banked
  8427  0026D8  BF7F               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
  8428  0026DA  D002               	goto	l4203
  8429  0026DC  D7F3               	goto	l4199
  8430                           
  8431                           ; BSR set to: 0
  8432  0026DE  D000               	goto	l4203
  8433  0026E0                     l4203:
  8434                           
  8435                           ; BSR set to: 0
  8436  0026E0  0100               	movlb	0	; () banked
  8437  0026E2  90D8               	bcf	status,0,c
  8438  0026E4  3780               	rlcf	___lldiv@quotient& (0+255),f,b
  8439  0026E6  3781               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  8440  0026E8  3782               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  8441  0026EA  3783               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  8442                           
  8443                           ; BSR set to: 0
  8444  0026EC  0100               	movlb	0	; () banked
  8445  0026EE  517C               	movf	___lldiv@divisor& (0+255),w,b
  8446  0026F0  0100               	movlb	0	; () banked
  8447  0026F2  5D78               	subwf	___lldiv@dividend& (0+255),w,b
  8448  0026F4  0100               	movlb	0	; () banked
  8449  0026F6  517D               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8450  0026F8  0100               	movlb	0	; () banked
  8451  0026FA  5979               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  8452  0026FC  0100               	movlb	0	; () banked
  8453  0026FE  517E               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8454  002700  0100               	movlb	0	; () banked
  8455  002702  597A               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  8456  002704  0100               	movlb	0	; () banked
  8457  002706  517F               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8458  002708  0100               	movlb	0	; () banked
  8459  00270A  597B               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  8460  00270C  A0D8               	btfss	status,0,c
  8461  00270E  D013               	goto	l4211
  8462                           
  8463                           ; BSR set to: 0
  8464  002710  0100               	movlb	0	; () banked
  8465  002712  517C               	movf	___lldiv@divisor& (0+255),w,b
  8466  002714  0100               	movlb	0	; () banked
  8467  002716  5F78               	subwf	___lldiv@dividend& (0+255),f,b
  8468  002718  0100               	movlb	0	; () banked
  8469  00271A  517D               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8470  00271C  0100               	movlb	0	; () banked
  8471  00271E  5B79               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  8472  002720  0100               	movlb	0	; () banked
  8473  002722  517E               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8474  002724  0100               	movlb	0	; () banked
  8475  002726  5B7A               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  8476  002728  0100               	movlb	0	; () banked
  8477  00272A  517F               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8478  00272C  0100               	movlb	0	; () banked
  8479  00272E  5B7B               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  8480                           
  8481                           ; BSR set to: 0
  8482  002730  0100               	movlb	0	; () banked
  8483  002732  8180               	bsf	___lldiv@quotient& (0+255),0,b
  8484  002734  D000               	goto	l4211
  8485  002736                     l4211:
  8486                           
  8487                           ; BSR set to: 0
  8488  002736  0100               	movlb	0	; () banked
  8489  002738  90D8               	bcf	status,0,c
  8490  00273A  337F               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  8491  00273C  337E               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  8492  00273E  337D               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  8493  002740  337C               	rrcf	___lldiv@divisor& (0+255),f,b
  8494                           
  8495                           ; BSR set to: 0
  8496  002742  0100               	movlb	0	; () banked
  8497  002744  2F84               	decfsz	___lldiv@counter& (0+255),f,b
  8498  002746  D7CC               	goto	l4203
  8499  002748  D000               	goto	l1075
  8500  00274A                     l1075:
  8501                           
  8502                           ; BSR set to: 0
  8503  00274A  C080  F078         	movff	___lldiv@quotient,?___lldiv
  8504  00274E  C081  F079         	movff	___lldiv@quotient+1,?___lldiv+1
  8505  002752  C082  F07A         	movff	___lldiv@quotient+2,?___lldiv+2
  8506  002756  C083  F07B         	movff	___lldiv@quotient+3,?___lldiv+3
  8507                           
  8508                           ; BSR set to: 0
  8509  00275A  0012               	return		;funcret
  8510  00275C                     __end_of___lldiv:
  8511                           	opt stack 0
  8512                           tblptru	equ	0xFF8
  8513                           tblptrh	equ	0xFF7
  8514                           tblptrl	equ	0xFF6
  8515                           tablat	equ	0xFF5
  8516                           prodh	equ	0xFF4
  8517                           prodl	equ	0xFF3
  8518                           intcon	equ	0xFF2
  8519                           postinc0	equ	0xFEE
  8520                           wreg	equ	0xFE8
  8521                           indf1	equ	0xFE7
  8522                           postinc1	equ	0xFE6
  8523                           postdec1	equ	0xFE5
  8524                           fsr1h	equ	0xFE2
  8525                           fsr1l	equ	0xFE1
  8526                           indf2	equ	0xFDF
  8527                           postinc2	equ	0xFDE
  8528                           postdec2	equ	0xFDD
  8529                           fsr2h	equ	0xFDA
  8530                           fsr2l	equ	0xFD9
  8531                           status	equ	0xFD8
  8532                           
  8533 ;; *************** function _caltime_to_RTCC *****************
  8534 ;; Defined at:
  8535 ;;		line 142 in file "../My_header\My_RTCC.h"
  8536 ;; Parameters:    Size  Location     Type
  8537 ;;  ct              2    9[BANK0 ] PTR struct .
  8538 ;;		 -> caltime_now(7), 
  8539 ;; Auto vars:     Size  Location     Type
  8540 ;;		None
  8541 ;; Return value:  Size  Location     Type
  8542 ;;		None               void
  8543 ;; Registers used:
  8544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8545 ;; Tracked objects:
  8546 ;;		On entry : 0/0
  8547 ;;		On exit  : 0/0
  8548 ;;		Unchanged: 0/0
  8549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8550 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8553 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8554 ;;Total ram usage:        2 bytes
  8555 ;; Hardware stack levels used:    1
  8556 ;; Hardware stack levels required when called:    7
  8557 ;; This function calls:
  8558 ;;		_d_to_x
  8559 ;; This function is called by:
  8560 ;;		_RTCC_from_caltime
  8561 ;;		_RTCC_from_epoch
  8562 ;; This function uses a non-reentrant model
  8563 ;;
  8564                           
  8565                           	psect	text40
  8566  0025CC                     __ptext40:
  8567                           	opt stack 0
  8568  0025CC                     _caltime_to_RTCC:
  8569                           	opt stack 21
  8570                           
  8571                           ;My_header\My_RTCC.h: 144: RTCCFGbits.RTCPTR0 = 1;
  8572                           
  8573                           ; BSR set to: 0
  8574                           ;incstack = 0
  8575  0025CC  010F               	movlb	15	; () banked
  8576  0025CE  813F               	bsf	63,0,b	;volatile
  8577                           
  8578                           ;My_header\My_RTCC.h: 145: RTCCFGbits.RTCPTR1 = 1;
  8579  0025D0  010F               	movlb	15	; () banked
  8580  0025D2  833F               	bsf	63,1,b	;volatile
  8581                           
  8582                           ; BSR set to: 15
  8583                           ;My_header\My_RTCC.h: 146: RTCVALL = d_to_x(ct->YY);
  8584  0025D4  0100               	movlb	0	; () banked
  8585  0025D6  EE20 F006          	lfsr	2,6
  8586  0025DA  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
  8587  0025DC  26D9               	addwf	fsr2l,f,c
  8588  0025DE  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  8589  0025E0  22DA               	addwfc	fsr2h,f,c
  8590  0025E2  50DF               	movf	indf2,w,c
  8591  0025E4  EC7B  F01A         	call	_d_to_x
  8592  0025E8  010F               	movlb	15	; () banked
  8593  0025EA  6F3A               	movwf	58,b	;volatile
  8594                           
  8595                           ; BSR set to: 15
  8596                           ;My_header\My_RTCC.h: 147: RTCVALH = 0x00;
  8597  0025EC  0E00               	movlw	0
  8598  0025EE  010F               	movlb	15	; () banked
  8599  0025F0  6F3B               	movwf	59,b	;volatile
  8600                           
  8601                           ; BSR set to: 15
  8602                           ;My_header\My_RTCC.h: 148: RTCCFGbits.RTCPTR0 = 0;
  8603  0025F2  010F               	movlb	15	; () banked
  8604  0025F4  913F               	bcf	63,0,b	;volatile
  8605                           
  8606                           ; BSR set to: 15
  8607                           ;My_header\My_RTCC.h: 149: RTCCFGbits.RTCPTR1 = 1;
  8608  0025F6  010F               	movlb	15	; () banked
  8609  0025F8  833F               	bsf	63,1,b	;volatile
  8610                           
  8611                           ; BSR set to: 15
  8612                           ;My_header\My_RTCC.h: 150: RTCVALL = d_to_x(ct->DD);
  8613  0025FA  0100               	movlb	0	; () banked
  8614  0025FC  EE20 F004          	lfsr	2,4
  8615  002600  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
  8616  002602  26D9               	addwf	fsr2l,f,c
  8617  002604  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  8618  002606  22DA               	addwfc	fsr2h,f,c
  8619  002608  50DF               	movf	indf2,w,c
  8620  00260A  EC7B  F01A         	call	_d_to_x
  8621  00260E  010F               	movlb	15	; () banked
  8622  002610  6F3A               	movwf	58,b	;volatile
  8623                           
  8624                           ; BSR set to: 15
  8625                           ;My_header\My_RTCC.h: 151: RTCVALH = d_to_x(ct->MM);
  8626  002612  0100               	movlb	0	; () banked
  8627  002614  EE20 F005          	lfsr	2,5
  8628  002618  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
  8629  00261A  26D9               	addwf	fsr2l,f,c
  8630  00261C  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  8631  00261E  22DA               	addwfc	fsr2h,f,c
  8632  002620  50DF               	movf	indf2,w,c
  8633  002622  EC7B  F01A         	call	_d_to_x
  8634  002626  010F               	movlb	15	; () banked
  8635  002628  6F3B               	movwf	59,b	;volatile
  8636                           
  8637                           ; BSR set to: 15
  8638                           ;My_header\My_RTCC.h: 152: RTCCFGbits.RTCPTR0 = 1;
  8639  00262A  010F               	movlb	15	; () banked
  8640  00262C  813F               	bsf	63,0,b	;volatile
  8641                           
  8642                           ; BSR set to: 15
  8643                           ;My_header\My_RTCC.h: 153: RTCCFGbits.RTCPTR1 = 0;
  8644  00262E  010F               	movlb	15	; () banked
  8645  002630  933F               	bcf	63,1,b	;volatile
  8646                           
  8647                           ; BSR set to: 15
  8648                           ;My_header\My_RTCC.h: 154: RTCVALL = d_to_x(ct->hh);
  8649  002632  0100               	movlb	0	; () banked
  8650  002634  EE20 F002          	lfsr	2,2
  8651  002638  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
  8652  00263A  26D9               	addwf	fsr2l,f,c
  8653  00263C  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  8654  00263E  22DA               	addwfc	fsr2h,f,c
  8655  002640  50DF               	movf	indf2,w,c
  8656  002642  EC7B  F01A         	call	_d_to_x
  8657  002646  010F               	movlb	15	; () banked
  8658  002648  6F3A               	movwf	58,b	;volatile
  8659                           
  8660                           ; BSR set to: 15
  8661                           ;My_header\My_RTCC.h: 155: RTCVALH = d_to_x(ct->EE);
  8662  00264A  0100               	movlb	0	; () banked
  8663  00264C  EE20 F003          	lfsr	2,3
  8664  002650  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
  8665  002652  26D9               	addwf	fsr2l,f,c
  8666  002654  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  8667  002656  22DA               	addwfc	fsr2h,f,c
  8668  002658  50DF               	movf	indf2,w,c
  8669  00265A  EC7B  F01A         	call	_d_to_x
  8670  00265E  010F               	movlb	15	; () banked
  8671  002660  6F3B               	movwf	59,b	;volatile
  8672                           
  8673                           ; BSR set to: 15
  8674                           ;My_header\My_RTCC.h: 156: RTCCFGbits.RTCPTR0 = 0;
  8675  002662  010F               	movlb	15	; () banked
  8676  002664  913F               	bcf	63,0,b	;volatile
  8677                           
  8678                           ; BSR set to: 15
  8679                           ;My_header\My_RTCC.h: 157: RTCCFGbits.RTCPTR1 = 0;
  8680  002666  010F               	movlb	15	; () banked
  8681  002668  933F               	bcf	63,1,b	;volatile
  8682                           
  8683                           ; BSR set to: 15
  8684                           ;My_header\My_RTCC.h: 158: RTCVALL = d_to_x(ct->ss);
  8685  00266A  C069  FFD9         	movff	caltime_to_RTCC@ct,fsr2l
  8686  00266E  C06A  FFDA         	movff	caltime_to_RTCC@ct+1,fsr2h
  8687  002672  50DF               	movf	indf2,w,c
  8688  002674  EC7B  F01A         	call	_d_to_x
  8689  002678  010F               	movlb	15	; () banked
  8690  00267A  6F3A               	movwf	58,b	;volatile
  8691                           
  8692                           ; BSR set to: 15
  8693                           ;My_header\My_RTCC.h: 159: RTCVALH = d_to_x(ct->mm);
  8694  00267C  0100               	movlb	0	; () banked
  8695  00267E  EE20 F001          	lfsr	2,1
  8696  002682  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
  8697  002684  26D9               	addwf	fsr2l,f,c
  8698  002686  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  8699  002688  22DA               	addwfc	fsr2h,f,c
  8700  00268A  50DF               	movf	indf2,w,c
  8701  00268C  EC7B  F01A         	call	_d_to_x
  8702  002690  010F               	movlb	15	; () banked
  8703  002692  6F3B               	movwf	59,b	;volatile
  8704                           
  8705                           ; BSR set to: 15
  8706  002694  0012               	return		;funcret
  8707  002696                     __end_of_caltime_to_RTCC:
  8708                           	opt stack 0
  8709                           tblptru	equ	0xFF8
  8710                           tblptrh	equ	0xFF7
  8711                           tblptrl	equ	0xFF6
  8712                           tablat	equ	0xFF5
  8713                           prodh	equ	0xFF4
  8714                           prodl	equ	0xFF3
  8715                           intcon	equ	0xFF2
  8716                           postinc0	equ	0xFEE
  8717                           wreg	equ	0xFE8
  8718                           indf1	equ	0xFE7
  8719                           postinc1	equ	0xFE6
  8720                           postdec1	equ	0xFE5
  8721                           fsr1h	equ	0xFE2
  8722                           fsr1l	equ	0xFE1
  8723                           indf2	equ	0xFDF
  8724                           postinc2	equ	0xFDE
  8725                           postdec2	equ	0xFDD
  8726                           fsr2h	equ	0xFDA
  8727                           fsr2l	equ	0xFD9
  8728                           status	equ	0xFD8
  8729                           
  8730 ;; *************** function _d_to_x *****************
  8731 ;; Defined at:
  8732 ;;		line 70 in file "../My_header\My_RTCC.h"
  8733 ;; Parameters:    Size  Location     Type
  8734 ;;  dec             1    wreg     unsigned char 
  8735 ;; Auto vars:     Size  Location     Type
  8736 ;;  dec             1    8[BANK0 ] unsigned char 
  8737 ;; Return value:  Size  Location     Type
  8738 ;;                  1    wreg      unsigned char 
  8739 ;; Registers used:
  8740 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8741 ;; Tracked objects:
  8742 ;;		On entry : 0/0
  8743 ;;		On exit  : 0/0
  8744 ;;		Unchanged: 0/0
  8745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8747 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8749 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8750 ;;Total ram usage:        1 bytes
  8751 ;; Hardware stack levels used:    1
  8752 ;; Hardware stack levels required when called:    6
  8753 ;; This function calls:
  8754 ;;		___awdiv
  8755 ;; This function is called by:
  8756 ;;		_caltime_to_RTCC
  8757 ;; This function uses a non-reentrant model
  8758 ;;
  8759                           
  8760                           	psect	text41
  8761  0034F6                     __ptext41:
  8762                           	opt stack 0
  8763  0034F6                     _d_to_x:
  8764                           	opt stack 21
  8765                           
  8766                           ; BSR set to: 15
  8767                           ;incstack = 0
  8768                           ;d_to_x@dec stored from wreg
  8769  0034F6  0100               	movlb	0	; () banked
  8770  0034F8  6F68               	movwf	d_to_x@dec& (0+255),b
  8771                           
  8772                           ; BSR set to: 0
  8773                           ;My_header\My_RTCC.h: 73: return dec / 10 * 6 + dec;
  8774  0034FA  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
  8775  0034FE  0100               	movlb	0	; () banked
  8776  003500  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  8777  003502  0E00               	movlw	0
  8778  003504  0100               	movlb	0	; () banked
  8779  003506  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  8780  003508  0E0A               	movlw	10
  8781  00350A  6F62               	movwf	___awdiv@divisor& (0+255),b
  8782  00350C  EC17  F012         	call	___awdiv	;wreg free
  8783  003510  0100               	movlb	0	; () banked
  8784  003512  5160               	movf	?___awdiv& (0+255),w,b
  8785  003514  0D06               	mullw	6
  8786  003516  50F3               	movf	prodl,w,c
  8787  003518  0100               	movlb	0	; () banked
  8788  00351A  2568               	addwf	d_to_x@dec& (0+255),w,b
  8789  00351C  0012               	return	
  8790                           
  8791                           ; BSR set to: 0
  8792                           
  8793                           ; BSR set to: 0
  8794  00351E  0012               	return		;funcret
  8795  003520                     __end_of_d_to_x:
  8796                           	opt stack 0
  8797                           tblptru	equ	0xFF8
  8798                           tblptrh	equ	0xFF7
  8799                           tblptrl	equ	0xFF6
  8800                           tablat	equ	0xFF5
  8801                           prodh	equ	0xFF4
  8802                           prodl	equ	0xFF3
  8803                           intcon	equ	0xFF2
  8804                           postinc0	equ	0xFEE
  8805                           wreg	equ	0xFE8
  8806                           indf1	equ	0xFE7
  8807                           postinc1	equ	0xFE6
  8808                           postdec1	equ	0xFE5
  8809                           fsr1h	equ	0xFE2
  8810                           fsr1l	equ	0xFE1
  8811                           indf2	equ	0xFDF
  8812                           postinc2	equ	0xFDE
  8813                           postdec2	equ	0xFDD
  8814                           fsr2h	equ	0xFDA
  8815                           fsr2l	equ	0xFD9
  8816                           status	equ	0xFD8
  8817                           
  8818 ;; *************** function ___awdiv *****************
  8819 ;; Defined at:
  8820 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  8821 ;; Parameters:    Size  Location     Type
  8822 ;;  dividend        2    0[BANK0 ] int 
  8823 ;;  divisor         2    2[BANK0 ] int 
  8824 ;; Auto vars:     Size  Location     Type
  8825 ;;  quotient        2    6[BANK0 ] int 
  8826 ;;  sign            1    5[BANK0 ] unsigned char 
  8827 ;;  counter         1    4[BANK0 ] unsigned char 
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  2    0[BANK0 ] int 
  8830 ;; Registers used:
  8831 ;;		wreg, status,2, status,0
  8832 ;; Tracked objects:
  8833 ;;		On entry : 0/0
  8834 ;;		On exit  : 0/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8837 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8838 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8840 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8841 ;;Total ram usage:        8 bytes
  8842 ;; Hardware stack levels used:    1
  8843 ;; Hardware stack levels required when called:    5
  8844 ;; This function calls:
  8845 ;;		Nothing
  8846 ;; This function is called by:
  8847 ;;		_d_to_x
  8848 ;; This function uses a non-reentrant model
  8849 ;;
  8850                           
  8851                           	psect	text42
  8852  00242E                     __ptext42:
  8853                           	opt stack 0
  8854  00242E                     ___awdiv:
  8855                           	opt stack 21
  8856                           
  8857                           ; BSR set to: 0
  8858                           ;incstack = 0
  8859  00242E  0E00               	movlw	0
  8860  002430  0100               	movlb	0	; () banked
  8861  002432  6F65               	movwf	___awdiv@sign& (0+255),b
  8862                           
  8863                           ; BSR set to: 0
  8864  002434  0100               	movlb	0	; () banked
  8865  002436  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8866  002438  D009               	goto	l4029
  8867                           
  8868                           ; BSR set to: 0
  8869  00243A  0100               	movlb	0	; () banked
  8870  00243C  6D62               	negf	___awdiv@divisor& (0+255),b
  8871  00243E  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8872  002440  B0D8               	btfsc	status,0,c
  8873  002442  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8874                           
  8875                           ; BSR set to: 0
  8876  002444  0E01               	movlw	1
  8877  002446  0100               	movlb	0	; () banked
  8878  002448  6F65               	movwf	___awdiv@sign& (0+255),b
  8879  00244A  D000               	goto	l4029
  8880  00244C                     l4029:
  8881                           
  8882                           ; BSR set to: 0
  8883  00244C  0100               	movlb	0	; () banked
  8884  00244E  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  8885  002450  D009               	goto	l4035
  8886                           
  8887                           ; BSR set to: 0
  8888  002452  0100               	movlb	0	; () banked
  8889  002454  6D60               	negf	___awdiv@dividend& (0+255),b
  8890  002456  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8891  002458  B0D8               	btfsc	status,0,c
  8892  00245A  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8893                           
  8894                           ; BSR set to: 0
  8895  00245C  0E01               	movlw	1
  8896  00245E  0100               	movlb	0	; () banked
  8897  002460  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  8898  002462  D000               	goto	l4035
  8899  002464                     l4035:
  8900                           
  8901                           ; BSR set to: 0
  8902  002464  0E00               	movlw	0
  8903  002466  0100               	movlb	0	; () banked
  8904  002468  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  8905  00246A  0E00               	movlw	0
  8906  00246C  6F66               	movwf	___awdiv@quotient& (0+255),b
  8907                           
  8908                           ; BSR set to: 0
  8909  00246E  0100               	movlb	0	; () banked
  8910  002470  5162               	movf	___awdiv@divisor& (0+255),w,b
  8911  002472  0100               	movlb	0	; () banked
  8912  002474  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8913  002476  B4D8               	btfsc	status,2,c
  8914  002478  D031               	goto	l4057
  8915                           
  8916                           ; BSR set to: 0
  8917  00247A  0E01               	movlw	1
  8918  00247C  0100               	movlb	0	; () banked
  8919  00247E  6F64               	movwf	___awdiv@counter& (0+255),b
  8920  002480  D007               	goto	l4043
  8921  002482                     l4041:
  8922                           
  8923                           ; BSR set to: 0
  8924  002482  0100               	movlb	0	; () banked
  8925  002484  90D8               	bcf	status,0,c
  8926  002486  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  8927  002488  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8928  00248A  0100               	movlb	0	; () banked
  8929  00248C  2B64               	incf	___awdiv@counter& (0+255),f,b
  8930  00248E  D000               	goto	l4043
  8931  002490                     l4043:
  8932                           
  8933                           ; BSR set to: 0
  8934  002490  0100               	movlb	0	; () banked
  8935  002492  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  8936  002494  D002               	goto	l4045
  8937  002496  D7F5               	goto	l4041
  8938                           
  8939                           ; BSR set to: 0
  8940  002498  D000               	goto	l4045
  8941  00249A                     l4045:
  8942                           
  8943                           ; BSR set to: 0
  8944  00249A  0100               	movlb	0	; () banked
  8945  00249C  90D8               	bcf	status,0,c
  8946  00249E  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  8947  0024A0  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8948                           
  8949                           ; BSR set to: 0
  8950  0024A2  0100               	movlb	0	; () banked
  8951  0024A4  5162               	movf	___awdiv@divisor& (0+255),w,b
  8952  0024A6  0100               	movlb	0	; () banked
  8953  0024A8  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  8954  0024AA  0100               	movlb	0	; () banked
  8955  0024AC  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8956  0024AE  0100               	movlb	0	; () banked
  8957  0024B0  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8958  0024B2  A0D8               	btfss	status,0,c
  8959  0024B4  D00B               	goto	l4053
  8960                           
  8961                           ; BSR set to: 0
  8962  0024B6  0100               	movlb	0	; () banked
  8963  0024B8  5162               	movf	___awdiv@divisor& (0+255),w,b
  8964  0024BA  0100               	movlb	0	; () banked
  8965  0024BC  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  8966  0024BE  0100               	movlb	0	; () banked
  8967  0024C0  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8968  0024C2  0100               	movlb	0	; () banked
  8969  0024C4  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8970                           
  8971                           ; BSR set to: 0
  8972  0024C6  0100               	movlb	0	; () banked
  8973  0024C8  8166               	bsf	___awdiv@quotient& (0+255),0,b
  8974  0024CA  D000               	goto	l4053
  8975  0024CC                     l4053:
  8976                           
  8977                           ; BSR set to: 0
  8978  0024CC  0100               	movlb	0	; () banked
  8979  0024CE  90D8               	bcf	status,0,c
  8980  0024D0  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8981  0024D2  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  8982                           
  8983                           ; BSR set to: 0
  8984  0024D4  0100               	movlb	0	; () banked
  8985  0024D6  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  8986  0024D8  D7E0               	goto	l4045
  8987                           
  8988                           ; BSR set to: 0
  8989  0024DA  D000               	goto	l4057
  8990  0024DC                     l4057:
  8991                           
  8992                           ; BSR set to: 0
  8993  0024DC  0100               	movlb	0	; () banked
  8994  0024DE  5165               	movf	___awdiv@sign& (0+255),w,b
  8995  0024E0  0100               	movlb	0	; () banked
  8996  0024E2  B4D8               	btfsc	status,2,c
  8997  0024E4  D006               	goto	l4061
  8998                           
  8999                           ; BSR set to: 0
  9000  0024E6  0100               	movlb	0	; () banked
  9001  0024E8  6D66               	negf	___awdiv@quotient& (0+255),b
  9002  0024EA  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9003  0024EC  B0D8               	btfsc	status,0,c
  9004  0024EE  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9005  0024F0  D000               	goto	l4061
  9006  0024F2                     l4061:
  9007                           
  9008                           ; BSR set to: 0
  9009  0024F2  C066  F060         	movff	___awdiv@quotient,?___awdiv
  9010  0024F6  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  9011  0024FA  0012               	return	
  9012                           
  9013                           ; BSR set to: 0
  9014                           
  9015                           ; BSR set to: 0
  9016  0024FC  0012               	return		;funcret
  9017  0024FE                     __end_of___awdiv:
  9018                           	opt stack 0
  9019                           tblptru	equ	0xFF8
  9020                           tblptrh	equ	0xFF7
  9021                           tblptrl	equ	0xFF6
  9022                           tablat	equ	0xFF5
  9023                           prodh	equ	0xFF4
  9024                           prodl	equ	0xFF3
  9025                           intcon	equ	0xFF2
  9026                           postinc0	equ	0xFEE
  9027                           wreg	equ	0xFE8
  9028                           indf1	equ	0xFE7
  9029                           postinc1	equ	0xFE6
  9030                           postdec1	equ	0xFE5
  9031                           fsr1h	equ	0xFE2
  9032                           fsr1l	equ	0xFE1
  9033                           indf2	equ	0xFDF
  9034                           postinc2	equ	0xFDE
  9035                           postdec2	equ	0xFDD
  9036                           fsr2h	equ	0xFDA
  9037                           fsr2l	equ	0xFD9
  9038                           status	equ	0xFD8
  9039                           
  9040 ;; *************** function _ADC *****************
  9041 ;; Defined at:
  9042 ;;		line 169 in file "../My_header\My_header.h"
  9043 ;; Parameters:    Size  Location     Type
  9044 ;;  ch              1    wreg     unsigned char 
  9045 ;; Auto vars:     Size  Location     Type
  9046 ;;  ch              1    3[BANK0 ] unsigned char 
  9047 ;; Return value:  Size  Location     Type
  9048 ;;                  2    0[BANK0 ] unsigned int 
  9049 ;; Registers used:
  9050 ;;		wreg, status,2, status,0
  9051 ;; Tracked objects:
  9052 ;;		On entry : 0/0
  9053 ;;		On exit  : 0/0
  9054 ;;		Unchanged: 0/0
  9055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9056 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9057 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9058 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9059 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9060 ;;Total ram usage:        4 bytes
  9061 ;; Hardware stack levels used:    1
  9062 ;; Hardware stack levels required when called:    5
  9063 ;; This function calls:
  9064 ;;		Nothing
  9065 ;; This function is called by:
  9066 ;;		_main
  9067 ;; This function uses a non-reentrant model
  9068 ;;
  9069                           
  9070                           	psect	text43
  9071  00349C                     __ptext43:
  9072                           	opt stack 0
  9073  00349C                     _ADC:
  9074                           	opt stack 25
  9075                           
  9076                           ; BSR set to: 0
  9077                           ;incstack = 0
  9078                           ;ADC@ch stored from wreg
  9079  00349C  0100               	movlb	0	; () banked
  9080  00349E  6F63               	movwf	ADC@ch& (0+255),b
  9081                           
  9082                           ; BSR set to: 0
  9083                           ;My_header\My_header.h: 170: ADCON0bits.CHS = ch;
  9084  0034A0  C063  F062         	movff	ADC@ch,??_ADC
  9085  0034A4  0100               	movlb	0	; () banked
  9086  0034A6  4762               	rlncf	??_ADC& (0+255),f,b
  9087  0034A8  4762               	rlncf	??_ADC& (0+255),f,b
  9088  0034AA  50C2               	movf	4034,w,c	;volatile
  9089  0034AC  0100               	movlb	0	; () banked
  9090  0034AE  1962               	xorwf	??_ADC& (0+255),w,b
  9091  0034B0  0BC3               	andlw	-61
  9092  0034B2  1962               	xorwf	??_ADC& (0+255),w,b
  9093  0034B4  6EC2               	movwf	4034,c	;volatile
  9094                           
  9095                           ; BSR set to: 0
  9096                           ;My_header\My_header.h: 171: ADCON0bits.ADON = 1;
  9097  0034B6  80C2               	bsf	4034,0,c	;volatile
  9098                           
  9099                           ; BSR set to: 0
  9100                           ;My_header\My_header.h: 173: ADCON0bits.GO_nDONE = 1;
  9101  0034B8  82C2               	bsf	4034,1,c	;volatile
  9102                           
  9103                           ;My_header\My_header.h: 174: while (ADCON0bits.GO_nDONE);
  9104  0034BA  D000               	goto	l175
  9105  0034BC                     l175:
  9106                           
  9107                           ; BSR set to: 0
  9108  0034BC  B2C2               	btfsc	4034,1,c	;volatile
  9109  0034BE  D7FE               	goto	l175
  9110                           
  9111                           ; BSR set to: 0
  9112                           ;My_header\My_header.h: 175: return ADRES;
  9113  0034C0  CFC3 F060          	movff	4035,?_ADC	;volatile
  9114  0034C4  CFC4 F061          	movff	4036,?_ADC+1	;volatile
  9115                           
  9116                           ; BSR set to: 0
  9117  0034C8  0012               	return		;funcret
  9118  0034CA                     __end_of_ADC:
  9119                           	opt stack 0
  9120                           tblptru	equ	0xFF8
  9121                           tblptrh	equ	0xFF7
  9122                           tblptrl	equ	0xFF6
  9123                           tablat	equ	0xFF5
  9124                           prodh	equ	0xFF4
  9125                           prodl	equ	0xFF3
  9126                           intcon	equ	0xFF2
  9127                           postinc0	equ	0xFEE
  9128                           wreg	equ	0xFE8
  9129                           indf1	equ	0xFE7
  9130                           postinc1	equ	0xFE6
  9131                           postdec1	equ	0xFE5
  9132                           fsr1h	equ	0xFE2
  9133                           fsr1l	equ	0xFE1
  9134                           indf2	equ	0xFDF
  9135                           postinc2	equ	0xFDE
  9136                           postdec2	equ	0xFDD
  9137                           fsr2h	equ	0xFDA
  9138                           fsr2l	equ	0xFD9
  9139                           status	equ	0xFD8
  9140                           
  9141 ;; *************** function _ISR *****************
  9142 ;; Defined at:
  9143 ;;		line 99 in file "PIC18J27J53-killifish_light01.c"
  9144 ;; Parameters:    Size  Location     Type
  9145 ;;		None
  9146 ;; Auto vars:     Size  Location     Type
  9147 ;;  ascii           1   31[COMRAM] unsigned char 
  9148 ;; Return value:  Size  Location     Type
  9149 ;;		None               void
  9150 ;; Registers used:
  9151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9152 ;; Tracked objects:
  9153 ;;		On entry : 0/0
  9154 ;;		On exit  : 0/0
  9155 ;;		Unchanged: 0/0
  9156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9158 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9159 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9160 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9161 ;;Total ram usage:       15 bytes
  9162 ;; Hardware stack levels used:    1
  9163 ;; Hardware stack levels required when called:    4
  9164 ;; This function calls:
  9165 ;;		_button_timer_interrupt
  9166 ;;		_interrupt_TXIF
  9167 ;;		_judgement
  9168 ;; This function is called by:
  9169 ;;		Interrupt level 2
  9170 ;; This function uses a non-reentrant model
  9171 ;;
  9172                           
  9173                           	psect	intcode
  9174  000008                     __pintcode:
  9175                           	opt stack 0
  9176  000008                     _ISR:
  9177                           	opt stack 20
  9178                           
  9179                           ; BSR set to: 0
  9180                           ;incstack = 0
  9181  000008  CFFA F012          	movff	pclath,??_ISR
  9182  00000C  CFFB F013          	movff	pclatu,??_ISR+1
  9183  000010  CFE9 F014          	movff	fsr0l,??_ISR+2
  9184  000014  CFEA F015          	movff	fsr0h,??_ISR+3
  9185  000018  CFE1 F016          	movff	fsr1l,??_ISR+4
  9186  00001C  CFE2 F017          	movff	fsr1h,??_ISR+5
  9187  000020  CFD9 F018          	movff	fsr2l,??_ISR+6
  9188  000024  CFDA F019          	movff	fsr2h,??_ISR+7
  9189  000028  CFF3 F01A          	movff	prodl,??_ISR+8
  9190  00002C  CFF4 F01B          	movff	prodh,??_ISR+9
  9191  000030  CFF6 F01C          	movff	tblptrl,??_ISR+10
  9192  000034  CFF7 F01D          	movff	tblptrh,??_ISR+11
  9193  000038  CFF8 F01E          	movff	tblptru,??_ISR+12
  9194  00003C  CFF5 F01F          	movff	tablat,??_ISR+13
  9195                           
  9196                           ;PIC18J27J53-killifish_light01.c: 100: interrupt_TXIF();
  9197  000040  EC1D  F01A         	call	_interrupt_TXIF	;wreg free
  9198                           
  9199                           ;PIC18J27J53-killifish_light01.c: 101: if (PIR1bits.RC1IF) {
  9200  000044  AA9E               	btfss	3998,5,c	;volatile
  9201  000046  D007               	goto	i2l3857
  9202                           
  9203                           ;PIC18J27J53-killifish_light01.c: 102: PIR1bits.RC1IF = 0;
  9204  000048  9A9E               	bcf	3998,5,c	;volatile
  9205                           
  9206                           ;PIC18J27J53-killifish_light01.c: 103: uint8_t ascii = RCREG1;
  9207  00004A  CFAF F020          	movff	4015,ISR@ascii	;volatile
  9208                           
  9209                           ;PIC18J27J53-killifish_light01.c: 104: judgement(ascii);
  9210  00004E  5020               	movf	ISR@ascii,w,c
  9211  000050  EC6D  F00F         	call	_judgement
  9212  000054  D000               	goto	i2l3857
  9213  000056                     i2l3857:
  9214                           
  9215                           ;PIC18J27J53-killifish_light01.c: 105: }
  9216                           ;PIC18J27J53-killifish_light01.c: 106: if (INTCONbits.T0IF) {
  9217  000056  B4F2               	btfsc	intcon,2,c	;volatile
  9218                           
  9219                           ;PIC18J27J53-killifish_light01.c: 107: INTCONbits.T0IF = 0;
  9220  000058  94F2               	bcf	intcon,2,c	;volatile
  9221                           
  9222                           ;PIC18J27J53-killifish_light01.c: 108: }
  9223                           ;PIC18J27J53-killifish_light01.c: 109: if (PIR1bits.TMR1IF) {
  9224  00005A  A09E               	btfss	3998,0,c	;volatile
  9225  00005C  D004               	goto	i2l3865
  9226                           
  9227                           ;PIC18J27J53-killifish_light01.c: 110: PIR1bits.TMR1IF = 0;
  9228  00005E  909E               	bcf	3998,0,c	;volatile
  9229                           
  9230                           ;PIC18J27J53-killifish_light01.c: 111: TMR1H = 0x80;
  9231  000060  0E80               	movlw	128
  9232  000062  6ECF               	movwf	4047,c	;volatile
  9233  000064  D000               	goto	i2l3865
  9234  000066                     i2l3865:
  9235                           
  9236                           ;PIC18J27J53-killifish_light01.c: 112: }
  9237                           ;PIC18J27J53-killifish_light01.c: 113: if (PIR2bits.TMR3IF) {
  9238  000066  A2A1               	btfss	4001,1,c	;volatile
  9239  000068  D026               	goto	i2l503
  9240                           
  9241                           ;PIC18J27J53-killifish_light01.c: 114: PIR2bits.TMR3IF = 0;
  9242  00006A  92A1               	bcf	4001,1,c	;volatile
  9243                           
  9244                           ;PIC18J27J53-killifish_light01.c: 115: button_timer_interrupt(&sw_R, !PORTAbits.RA5);
  9245  00006C  0E38               	movlw	low _sw_R
  9246  00006E  6E01               	movwf	button_timer_interrupt@bt,c
  9247  000070  0E00               	movlw	high _sw_R
  9248  000072  6E02               	movwf	button_timer_interrupt@bt+1,c
  9249  000074  BA80               	btfsc	3968,5,c	;volatile
  9250  000076  D002               	goto	i2u371_40
  9251  000078  0E01               	movlw	1
  9252  00007A  D001               	goto	i2u372_40
  9253  00007C                     i2u371_40:
  9254  00007C  0E00               	movlw	0
  9255  00007E                     i2u372_40:
  9256  00007E  6E03               	movwf	button_timer_interrupt@sw_value,c
  9257  000080  EC34  F00D         	call	_button_timer_interrupt	;wreg free
  9258                           
  9259                           ;PIC18J27J53-killifish_light01.c: 116: button_timer_interrupt(&sw_G, !PORTAbits.RA6);
  9260  000084  0E34               	movlw	low _sw_G
  9261  000086  6E01               	movwf	button_timer_interrupt@bt,c
  9262  000088  0E00               	movlw	high _sw_G
  9263  00008A  6E02               	movwf	button_timer_interrupt@bt+1,c
  9264  00008C  BC80               	btfsc	3968,6,c	;volatile
  9265  00008E  D002               	goto	i2u373_40
  9266  000090  0E01               	movlw	1
  9267  000092  D001               	goto	i2u374_40
  9268  000094                     i2u373_40:
  9269  000094  0E00               	movlw	0
  9270  000096                     i2u374_40:
  9271  000096  6E03               	movwf	button_timer_interrupt@sw_value,c
  9272  000098  EC34  F00D         	call	_button_timer_interrupt	;wreg free
  9273                           
  9274                           ;PIC18J27J53-killifish_light01.c: 117: button_timer_interrupt(&sw_B, !PORTAbits.RA7);
  9275  00009C  0E30               	movlw	low _sw_B
  9276  00009E  6E01               	movwf	button_timer_interrupt@bt,c
  9277  0000A0  0E00               	movlw	high _sw_B
  9278  0000A2  6E02               	movwf	button_timer_interrupt@bt+1,c
  9279  0000A4  BE80               	btfsc	3968,7,c	;volatile
  9280  0000A6  D002               	goto	i2u375_40
  9281  0000A8  0E01               	movlw	1
  9282  0000AA  D001               	goto	i2u376_40
  9283  0000AC                     i2u375_40:
  9284  0000AC  0E00               	movlw	0
  9285  0000AE                     i2u376_40:
  9286  0000AE  6E03               	movwf	button_timer_interrupt@sw_value,c
  9287  0000B0  EC34  F00D         	call	_button_timer_interrupt	;wreg free
  9288  0000B4  D000               	goto	i2l503
  9289  0000B6                     i2l503:
  9290  0000B6  C01F  FFF5         	movff	??_ISR+13,tablat
  9291  0000BA  C01E  FFF8         	movff	??_ISR+12,tblptru
  9292  0000BE  C01D  FFF7         	movff	??_ISR+11,tblptrh
  9293  0000C2  C01C  FFF6         	movff	??_ISR+10,tblptrl
  9294  0000C6  C01B  FFF4         	movff	??_ISR+9,prodh
  9295  0000CA  C01A  FFF3         	movff	??_ISR+8,prodl
  9296  0000CE  C019  FFDA         	movff	??_ISR+7,fsr2h
  9297  0000D2  C018  FFD9         	movff	??_ISR+6,fsr2l
  9298  0000D6  C017  FFE2         	movff	??_ISR+5,fsr1h
  9299  0000DA  C016  FFE1         	movff	??_ISR+4,fsr1l
  9300  0000DE  C015  FFEA         	movff	??_ISR+3,fsr0h
  9301  0000E2  C014  FFE9         	movff	??_ISR+2,fsr0l
  9302  0000E6  C013  FFFB         	movff	??_ISR+1,pclatu
  9303  0000EA  C012  FFFA         	movff	??_ISR,pclath
  9304  0000EE  0011               	retfie		f
  9305  0000F0                     __end_of_ISR:
  9306                           	opt stack 0
  9307                           pclatu	equ	0xFFB
  9308                           pclath	equ	0xFFA
  9309                           tblptru	equ	0xFF8
  9310                           tblptrh	equ	0xFF7
  9311                           tblptrl	equ	0xFF6
  9312                           tablat	equ	0xFF5
  9313                           prodh	equ	0xFF4
  9314                           prodl	equ	0xFF3
  9315                           intcon	equ	0xFF2
  9316                           postinc0	equ	0xFEE
  9317                           fsr0h	equ	0xFEA
  9318                           fsr0l	equ	0xFE9
  9319                           wreg	equ	0xFE8
  9320                           indf1	equ	0xFE7
  9321                           postinc1	equ	0xFE6
  9322                           postdec1	equ	0xFE5
  9323                           fsr1h	equ	0xFE2
  9324                           fsr1l	equ	0xFE1
  9325                           indf2	equ	0xFDF
  9326                           postinc2	equ	0xFDE
  9327                           postdec2	equ	0xFDD
  9328                           fsr2h	equ	0xFDA
  9329                           fsr2l	equ	0xFD9
  9330                           status	equ	0xFD8
  9331                           
  9332 ;; *************** function _judgement *****************
  9333 ;; Defined at:
  9334 ;;		line 59 in file "PIC18J27J53-killifish_light01.c"
  9335 ;; Parameters:    Size  Location     Type
  9336 ;;  ascii           1    wreg     unsigned char 
  9337 ;; Auto vars:     Size  Location     Type
  9338 ;;  ascii           1   15[COMRAM] unsigned char 
  9339 ;;  i               1   16[COMRAM] unsigned char 
  9340 ;; Return value:  Size  Location     Type
  9341 ;;		None               void
  9342 ;; Registers used:
  9343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9344 ;; Tracked objects:
  9345 ;;		On entry : 0/0
  9346 ;;		On exit  : 0/0
  9347 ;;		Unchanged: 0/0
  9348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9350 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9351 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9352 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9353 ;;Total ram usage:        3 bytes
  9354 ;; Hardware stack levels used:    1
  9355 ;; Hardware stack levels required when called:    3
  9356 ;; This function calls:
  9357 ;;		_ringbuf_backspace
  9358 ;;		_ringbuf_delete
  9359 ;;		i2_ringbuf_num
  9360 ;;		i2_ringbuf_push
  9361 ;;		i2_tx_send
  9362 ;;		i2_tx_sends
  9363 ;; This function is called by:
  9364 ;;		_ISR
  9365 ;; This function uses a non-reentrant model
  9366 ;;
  9367                           
  9368                           	psect	text45
  9369  001EDA                     __ptext45:
  9370                           	opt stack 0
  9371  001EDA                     _judgement:
  9372                           	opt stack 20
  9373                           
  9374                           ;incstack = 0
  9375                           ;judgement@ascii stored from wreg
  9376  001EDA  6E10               	movwf	judgement@ascii,c
  9377                           
  9378                           ;PIC18J27J53-killifish_light01.c: 60: uint8_t i;
  9379                           ;PIC18J27J53-killifish_light01.c: 61: tx_sends(cursor_down);
  9380  001EDC  0ECF               	movlw	low _cursor_down
  9381  001EDE  6E0D               	movwf	i2tx_sends@asciicode,c
  9382  001EE0  0E00               	movlw	high _cursor_down
  9383  001EE2  6E0E               	movwf	i2tx_sends@asciicode+1,c
  9384  001EE4  ECD5  F018         	call	i2_tx_sends	;wreg free
  9385                           
  9386                           ;PIC18J27J53-killifish_light01.c: 62: for (i = 0; i < ringbuf_num(&rx_buf); i++) tx_send
      +                          s(cursor_right);
  9387  001EE8  0E00               	movlw	0
  9388  001EEA  6E11               	movwf	judgement@i,c
  9389  001EEC  D008               	goto	i2l3521
  9390  001EEE                     i2l3517:
  9391  001EEE  0ED3               	movlw	low _cursor_right
  9392  001EF0  6E0D               	movwf	i2tx_sends@asciicode,c
  9393  001EF2  0E00               	movlw	high _cursor_right
  9394  001EF4  6E0E               	movwf	i2tx_sends@asciicode+1,c
  9395  001EF6  ECD5  F018         	call	i2_tx_sends	;wreg free
  9396  001EFA  2A11               	incf	judgement@i,f,c
  9397  001EFC  D000               	goto	i2l3521
  9398  001EFE                     i2l3521:
  9399  001EFE  0E26               	movlw	low _rx_buf
  9400  001F00  6E01               	movwf	i2ringbuf_num@rb,c
  9401  001F02  0E00               	movlw	high _rx_buf
  9402  001F04  6E02               	movwf	i2ringbuf_num@rb+1,c
  9403  001F06  ECB3  F017         	call	i2_ringbuf_num	;wreg free
  9404  001F0A  6E0F               	movwf	??_judgement& (0+255),c
  9405  001F0C  500F               	movf	??_judgement,w,c
  9406  001F0E  5C11               	subwf	judgement@i,w,c
  9407  001F10  B0D8               	btfsc	status,0,c
  9408  001F12  D064               	goto	i2l3557
  9409  001F14  D7EC               	goto	i2l3517
  9410                           
  9411                           ;PIC18J27J53-killifish_light01.c: 64: switch (ascii) {
  9412  001F16  D062               	goto	i2l3557
  9413  001F18                     i2l3523:
  9414                           
  9415                           ;PIC18J27J53-killifish_light01.c: 66: rx_flag = 1;
  9416  001F18  0E01               	movlw	1
  9417  001F1A  6E24               	movwf	_rx_flag,c
  9418                           
  9419                           ;PIC18J27J53-killifish_light01.c: 67: ringbuf_push(&rx_buf, '\0');
  9420  001F1C  0E26               	movlw	low _rx_buf
  9421  001F1E  6E05               	movwf	i2ringbuf_push@rb,c
  9422  001F20  0E00               	movlw	high _rx_buf
  9423  001F22  6E06               	movwf	i2ringbuf_push@rb+1,c
  9424  001F24  0E00               	movlw	0
  9425  001F26  6E07               	movwf	i2ringbuf_push@asciicode,c
  9426  001F28  ECAE  F013         	call	i2_ringbuf_push	;wreg free
  9427                           
  9428                           ;PIC18J27J53-killifish_light01.c: 68: tx_send(' ');
  9429  001F2C  0E20               	movlw	32
  9430  001F2E  EC26  F01B         	call	i2_tx_send
  9431                           
  9432                           ;PIC18J27J53-killifish_light01.c: 69: break;
  9433  001F32  D062               	goto	i2l3559
  9434  001F34                     i2l3529:
  9435                           
  9436                           ;PIC18J27J53-killifish_light01.c: 71: ringbuf_push(&rx_buf, '\0');
  9437  001F34  0E26               	movlw	low _rx_buf
  9438  001F36  6E05               	movwf	i2ringbuf_push@rb,c
  9439  001F38  0E00               	movlw	high _rx_buf
  9440  001F3A  6E06               	movwf	i2ringbuf_push@rb+1,c
  9441  001F3C  0E00               	movlw	0
  9442  001F3E  6E07               	movwf	i2ringbuf_push@asciicode,c
  9443  001F40  ECAE  F013         	call	i2_ringbuf_push	;wreg free
  9444                           
  9445                           ;PIC18J27J53-killifish_light01.c: 72: tx_send(' ');
  9446  001F44  0E20               	movlw	32
  9447  001F46  EC26  F01B         	call	i2_tx_send
  9448                           
  9449                           ;PIC18J27J53-killifish_light01.c: 73: tx_sends("_\b");
  9450  001F4A  0E6D               	movlw	low STR_15
  9451  001F4C  6E0D               	movwf	i2tx_sends@asciicode,c
  9452  001F4E  0E0F               	movlw	high STR_15
  9453  001F50  6E0E               	movwf	i2tx_sends@asciicode+1,c
  9454  001F52  ECD5  F018         	call	i2_tx_sends	;wreg free
  9455                           
  9456                           ;PIC18J27J53-killifish_light01.c: 74: break;
  9457  001F56  D050               	goto	i2l3559
  9458  001F58                     i2l3533:
  9459                           
  9460                           ;PIC18J27J53-killifish_light01.c: 76: ringbuf_backspace(&rx_buf);
  9461  001F58  0E26               	movlw	low _rx_buf
  9462  001F5A  6E05               	movwf	ringbuf_backspace@rb,c
  9463  001F5C  0E00               	movlw	high _rx_buf
  9464  001F5E  6E06               	movwf	ringbuf_backspace@rb+1,c
  9465  001F60  EC62  F019         	call	_ringbuf_backspace	;wreg free
  9466                           
  9467                           ;PIC18J27J53-killifish_light01.c: 77: tx_sends("\b_ \b\b");
  9468  001F64  0E3A               	movlw	low STR_16
  9469  001F66  6E0D               	movwf	i2tx_sends@asciicode,c
  9470  001F68  0E0F               	movlw	high STR_16
  9471  001F6A  6E0E               	movwf	i2tx_sends@asciicode+1,c
  9472  001F6C  ECD5  F018         	call	i2_tx_sends	;wreg free
  9473                           
  9474                           ;PIC18J27J53-killifish_light01.c: 78: break;
  9475  001F70  D043               	goto	i2l3559
  9476  001F72                     i2l3537:
  9477                           
  9478                           ;PIC18J27J53-killifish_light01.c: 80: for (i = 0; i < ringbuf_num(&rx_buf); i++) tx_send
      +                          s("\b_ \b\b");
  9479  001F72  0E00               	movlw	0
  9480  001F74  6E11               	movwf	judgement@i,c
  9481  001F76  D008               	goto	i2l3543
  9482  001F78                     i2l3539:
  9483  001F78  0E3A               	movlw	low STR_16
  9484  001F7A  6E0D               	movwf	i2tx_sends@asciicode,c
  9485  001F7C  0E0F               	movlw	high STR_16
  9486  001F7E  6E0E               	movwf	i2tx_sends@asciicode+1,c
  9487  001F80  ECD5  F018         	call	i2_tx_sends	;wreg free
  9488  001F84  2A11               	incf	judgement@i,f,c
  9489  001F86  D000               	goto	i2l3543
  9490  001F88                     i2l3543:
  9491  001F88  0E26               	movlw	low _rx_buf
  9492  001F8A  6E01               	movwf	i2ringbuf_num@rb,c
  9493  001F8C  0E00               	movlw	high _rx_buf
  9494  001F8E  6E02               	movwf	i2ringbuf_num@rb+1,c
  9495  001F90  ECB3  F017         	call	i2_ringbuf_num	;wreg free
  9496  001F94  6E0F               	movwf	??_judgement& (0+255),c
  9497  001F96  500F               	movf	??_judgement,w,c
  9498  001F98  5C11               	subwf	judgement@i,w,c
  9499  001F9A  A0D8               	btfss	status,0,c
  9500  001F9C  D7ED               	goto	i2l3539
  9501                           
  9502                           ;PIC18J27J53-killifish_light01.c: 81: ringbuf_delete(&rx_buf);
  9503  001F9E  0E26               	movlw	low _rx_buf
  9504  001FA0  6E01               	movwf	ringbuf_delete@rb,c
  9505  001FA2  0E00               	movlw	high _rx_buf
  9506  001FA4  6E02               	movwf	ringbuf_delete@rb+1,c
  9507  001FA6  EC09  F01B         	call	_ringbuf_delete	;wreg free
  9508                           
  9509                           ;PIC18J27J53-killifish_light01.c: 82: break;
  9510  001FAA  D026               	goto	i2l3559
  9511  001FAC                     i2l3547:
  9512                           
  9513                           ;PIC18J27J53-killifish_light01.c: 84: if (ascii >= ' ' && ascii <= '~') {
  9514  001FAC  0E1F               	movlw	31
  9515  001FAE  6410               	cpfsgt	judgement@ascii,c
  9516  001FB0  D023               	goto	i2l3559
  9517  001FB2  0E7F               	movlw	127
  9518  001FB4  6010               	cpfslt	judgement@ascii,c
  9519  001FB6  D020               	goto	i2l3559
  9520                           
  9521                           ;PIC18J27J53-killifish_light01.c: 85: ringbuf_push(&rx_buf, ascii);
  9522  001FB8  0E26               	movlw	low _rx_buf
  9523  001FBA  6E05               	movwf	i2ringbuf_push@rb,c
  9524  001FBC  0E00               	movlw	high _rx_buf
  9525  001FBE  6E06               	movwf	i2ringbuf_push@rb+1,c
  9526  001FC0  C010  F007         	movff	judgement@ascii,i2ringbuf_push@asciicode
  9527  001FC4  ECAE  F013         	call	i2_ringbuf_push	;wreg free
  9528                           
  9529                           ;PIC18J27J53-killifish_light01.c: 86: tx_send(ascii);
  9530  001FC8  5010               	movf	judgement@ascii,w,c
  9531  001FCA  EC26  F01B         	call	i2_tx_send
  9532                           
  9533                           ;PIC18J27J53-killifish_light01.c: 87: tx_sends("_\b");
  9534  001FCE  0E6D               	movlw	low STR_15
  9535  001FD0  6E0D               	movwf	i2tx_sends@asciicode,c
  9536  001FD2  0E0F               	movlw	high STR_15
  9537  001FD4  6E0E               	movwf	i2tx_sends@asciicode+1,c
  9538  001FD6  ECD5  F018         	call	i2_tx_sends	;wreg free
  9539                           
  9540                           ;PIC18J27J53-killifish_light01.c: 90: }
  9541                           
  9542                           ;PIC18J27J53-killifish_light01.c: 88: }
  9543                           ;PIC18J27J53-killifish_light01.c: 89: break;
  9544  001FDA  D00E               	goto	i2l3559
  9545  001FDC                     i2l3557:
  9546  001FDC  5010               	movf	judgement@ascii,w,c
  9547                           
  9548                           ; Switch size 1, requested type "space"
  9549                           ; Number of cases is 4, Range of values is 8 to 127
  9550                           ; switch strategies available:
  9551                           ; Name         Instructions Cycles
  9552                           ; simple_byte           13     7 (average)
  9553                           ;	Chosen strategy is simple_byte
  9554  001FDE  0A08               	xorlw	8	; case 8
  9555  001FE0  B4D8               	btfsc	status,2,c
  9556  001FE2  D7BA               	goto	i2l3533
  9557  001FE4  0A05               	xorlw	5	; case 13
  9558  001FE6  B4D8               	btfsc	status,2,c
  9559  001FE8  D797               	goto	i2l3523
  9560  001FEA  0A2D               	xorlw	45	; case 32
  9561  001FEC  B4D8               	btfsc	status,2,c
  9562  001FEE  D7A2               	goto	i2l3529
  9563  001FF0  0A5F               	xorlw	95	; case 127
  9564  001FF2  B4D8               	btfsc	status,2,c
  9565  001FF4  D7BE               	goto	i2l3537
  9566  001FF6  D7DA               	goto	i2l3547
  9567  001FF8                     i2l3559:
  9568                           
  9569                           ;PIC18J27J53-killifish_light01.c: 91: if (rx_flag) {
  9570  001FF8  5024               	movf	_rx_flag,w,c
  9571  001FFA  B4D8               	btfsc	status,2,c
  9572  001FFC  D028               	goto	i2l3577
  9573                           
  9574                           ;PIC18J27J53-killifish_light01.c: 92: for (i = 0; i < ringbuf_num(&rx_buf); i++) tx_send
      +                          ('\b');
  9575  001FFE  0E00               	movlw	0
  9576  002000  6E11               	movwf	judgement@i,c
  9577  002002  D005               	goto	i2l3567
  9578  002004                     i2l3563:
  9579  002004  0E08               	movlw	8
  9580  002006  EC26  F01B         	call	i2_tx_send
  9581  00200A  2A11               	incf	judgement@i,f,c
  9582  00200C  D000               	goto	i2l3567
  9583  00200E                     i2l3567:
  9584  00200E  0E26               	movlw	low _rx_buf
  9585  002010  6E01               	movwf	i2ringbuf_num@rb,c
  9586  002012  0E00               	movlw	high _rx_buf
  9587  002014  6E02               	movwf	i2ringbuf_num@rb+1,c
  9588  002016  ECB3  F017         	call	i2_ringbuf_num	;wreg free
  9589  00201A  6E0F               	movwf	??_judgement& (0+255),c
  9590  00201C  500F               	movf	??_judgement,w,c
  9591  00201E  5C11               	subwf	judgement@i,w,c
  9592  002020  A0D8               	btfss	status,0,c
  9593  002022  D7F0               	goto	i2l3563
  9594                           
  9595                           ;PIC18J27J53-killifish_light01.c: 93: for (i = 0; i < ringbuf_num(&rx_buf); i++) tx_send
      +                          (' ');
  9596  002024  0E00               	movlw	0
  9597  002026  6E11               	movwf	judgement@i,c
  9598  002028  D005               	goto	i2l3575
  9599  00202A                     i2l3571:
  9600  00202A  0E20               	movlw	32
  9601  00202C  EC26  F01B         	call	i2_tx_send
  9602  002030  2A11               	incf	judgement@i,f,c
  9603  002032  D000               	goto	i2l3575
  9604  002034                     i2l3575:
  9605  002034  0E26               	movlw	low _rx_buf
  9606  002036  6E01               	movwf	i2ringbuf_num@rb,c
  9607  002038  0E00               	movlw	high _rx_buf
  9608  00203A  6E02               	movwf	i2ringbuf_num@rb+1,c
  9609  00203C  ECB3  F017         	call	i2_ringbuf_num	;wreg free
  9610  002040  6E0F               	movwf	??_judgement& (0+255),c
  9611  002042  500F               	movf	??_judgement,w,c
  9612  002044  5C11               	subwf	judgement@i,w,c
  9613  002046  B0D8               	btfsc	status,0,c
  9614  002048  D002               	goto	i2l3577
  9615  00204A  D7EF               	goto	i2l3571
  9616  00204C  D000               	goto	i2l3577
  9617  00204E                     i2l3577:
  9618                           
  9619                           ;PIC18J27J53-killifish_light01.c: 94: }
  9620                           ;PIC18J27J53-killifish_light01.c: 95: for (i = 0; i < ringbuf_num(&rx_buf); i++) tx_send
      +                          ('\b');
  9621  00204E  0E00               	movlw	0
  9622  002050  6E11               	movwf	judgement@i,c
  9623  002052  D005               	goto	i2l3583
  9624  002054                     i2l3579:
  9625  002054  0E08               	movlw	8
  9626  002056  EC26  F01B         	call	i2_tx_send
  9627  00205A  2A11               	incf	judgement@i,f,c
  9628  00205C  D000               	goto	i2l3583
  9629  00205E                     i2l3583:
  9630  00205E  0E26               	movlw	low _rx_buf
  9631  002060  6E01               	movwf	i2ringbuf_num@rb,c
  9632  002062  0E00               	movlw	high _rx_buf
  9633  002064  6E02               	movwf	i2ringbuf_num@rb+1,c
  9634  002066  ECB3  F017         	call	i2_ringbuf_num	;wreg free
  9635  00206A  6E0F               	movwf	??_judgement& (0+255),c
  9636  00206C  500F               	movf	??_judgement,w,c
  9637  00206E  5C11               	subwf	judgement@i,w,c
  9638  002070  A0D8               	btfss	status,0,c
  9639  002072  D7F0               	goto	i2l3579
  9640                           
  9641                           ;PIC18J27J53-killifish_light01.c: 96: tx_sends(cursor_up);
  9642  002074  0E3C               	movlw	low _cursor_up
  9643  002076  6E0D               	movwf	i2tx_sends@asciicode,c
  9644  002078  0E00               	movlw	high _cursor_up
  9645  00207A  6E0E               	movwf	i2tx_sends@asciicode+1,c
  9646  00207C  ECD5  F018         	call	i2_tx_sends	;wreg free
  9647  002080  0012               	return		;funcret
  9648  002082                     __end_of_judgement:
  9649                           	opt stack 0
  9650                           pclatu	equ	0xFFB
  9651                           pclath	equ	0xFFA
  9652                           tblptru	equ	0xFF8
  9653                           tblptrh	equ	0xFF7
  9654                           tblptrl	equ	0xFF6
  9655                           tablat	equ	0xFF5
  9656                           prodh	equ	0xFF4
  9657                           prodl	equ	0xFF3
  9658                           intcon	equ	0xFF2
  9659                           postinc0	equ	0xFEE
  9660                           fsr0h	equ	0xFEA
  9661                           fsr0l	equ	0xFE9
  9662                           wreg	equ	0xFE8
  9663                           indf1	equ	0xFE7
  9664                           postinc1	equ	0xFE6
  9665                           postdec1	equ	0xFE5
  9666                           fsr1h	equ	0xFE2
  9667                           fsr1l	equ	0xFE1
  9668                           indf2	equ	0xFDF
  9669                           postinc2	equ	0xFDE
  9670                           postdec2	equ	0xFDD
  9671                           fsr2h	equ	0xFDA
  9672                           fsr2l	equ	0xFD9
  9673                           status	equ	0xFD8
  9674                           
  9675 ;; *************** function i2_tx_sends *****************
  9676 ;; Defined at:
  9677 ;;		line 239 in file "../My_header\My_header.h"
  9678 ;; Parameters:    Size  Location     Type
  9679 ;;  asciicode       2   12[COMRAM] PTR const unsigned char 
  9680 ;;		 -> STR_40(4), STR_25(2), STR_24(2), STR_23(3), 
  9681 ;;		 -> STR_22(3), STR_21(2), STR_20(2), STR_19(3), 
  9682 ;;		 -> tx_send_dec@str(10), cursor_up(4), STR_18(3), STR_17(6), 
  9683 ;;		 -> STR_16(6), STR_15(3), cursor_right(4), cursor_down(4), 
  9684 ;;		 -> STR_7(4), STR_6(4), STR_5(4), STR_4(4), 
  9685 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  9686 ;; Auto vars:     Size  Location     Type
  9687 ;;		None
  9688 ;; Return value:  Size  Location     Type
  9689 ;;		None               void
  9690 ;; Registers used:
  9691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9692 ;; Tracked objects:
  9693 ;;		On entry : 0/0
  9694 ;;		On exit  : 0/0
  9695 ;;		Unchanged: 0/0
  9696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9697 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9700 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9701 ;;Total ram usage:        2 bytes
  9702 ;; Hardware stack levels used:    1
  9703 ;; Hardware stack levels required when called:    2
  9704 ;; This function calls:
  9705 ;;		i2_ringbuf_push
  9706 ;; This function is called by:
  9707 ;;		_judgement
  9708 ;; This function uses a non-reentrant model
  9709 ;;
  9710                           
  9711                           	psect	text46
  9712  0031AA                     __ptext46:
  9713                           	opt stack 0
  9714  0031AA                     i2_tx_sends:
  9715                           	opt stack 20
  9716                           
  9717                           ;My_header\My_header.h: 240: while (*asciicode) {
  9718                           
  9719                           ;incstack = 0
  9720  0031AA  D01B               	goto	i2l3303
  9721  0031AC                     i2l3299:
  9722                           
  9723                           ;My_header\My_header.h: 241: ringbuf_push(&tx_buf, *asciicode++);
  9724  0031AC  0E2B               	movlw	low _tx_buf
  9725  0031AE  6E05               	movwf	i2ringbuf_push@rb,c
  9726  0031B0  0E00               	movlw	high _tx_buf
  9727  0031B2  6E06               	movwf	i2ringbuf_push@rb+1,c
  9728  0031B4  C00D  FFF6         	movff	i2tx_sends@asciicode,tblptrl
  9729  0031B8  C00E  FFF7         	movff	i2tx_sends@asciicode+1,tblptrh
  9730  0031BC  0E00               	movlw	low (__smallconst shr (0+16))
  9731  0031BE  6EF8               	movwf	tblptru,c
  9732  0031C0  0E0E               	movlw	(high __ramtop+-1)
  9733  0031C2  64F7               	cpfsgt	tblptrh,c
  9734  0031C4  D003               	bra	i2u270_47
  9735  0031C6  0008               	tblrd		*
  9736  0031C8  50F5               	movf	tablat,w,c
  9737  0031CA  D005               	bra	i2u270_40
  9738  0031CC                     i2u270_47:
  9739  0031CC  CFF6 FFE1          	movff	tblptrl,fsr1l
  9740  0031D0  CFF7 FFE2          	movff	tblptrh,fsr1h
  9741  0031D4  50E7               	movf	indf1,w,c
  9742  0031D6                     i2u270_40:
  9743  0031D6  6E07               	movwf	i2ringbuf_push@asciicode,c
  9744  0031D8  ECAE  F013         	call	i2_ringbuf_push	;wreg free
  9745  0031DC  4A0D               	infsnz	i2tx_sends@asciicode,f,c
  9746  0031DE  2A0E               	incf	i2tx_sends@asciicode+1,f,c
  9747  0031E0  D000               	goto	i2l3303
  9748  0031E2                     i2l3303:
  9749  0031E2  C00D  FFF6         	movff	i2tx_sends@asciicode,tblptrl
  9750  0031E6  C00E  FFF7         	movff	i2tx_sends@asciicode+1,tblptrh
  9751  0031EA  0E00               	movlw	low (__smallconst shr (0+16))
  9752  0031EC  6EF8               	movwf	tblptru,c
  9753  0031EE  0E0E               	movlw	(high __ramtop+-1)
  9754  0031F0  64F7               	cpfsgt	tblptrh,c
  9755  0031F2  D003               	bra	i2u271_47
  9756  0031F4  0008               	tblrd		*
  9757  0031F6  50F5               	movf	tablat,w,c
  9758  0031F8  D005               	bra	i2u271_40
  9759  0031FA                     i2u271_47:
  9760  0031FA  CFF6 FFE1          	movff	tblptrl,fsr1l
  9761  0031FE  CFF7 FFE2          	movff	tblptrh,fsr1h
  9762  003202  50E7               	movf	indf1,w,c
  9763  003204                     i2u271_40:
  9764  003204  0900               	iorlw	0
  9765  003206  A4D8               	btfss	status,2,c
  9766  003208  D7D1               	goto	i2l3299
  9767                           
  9768                           ;My_header\My_header.h: 242: }
  9769                           ;My_header\My_header.h: 243: PIE1bits.TX1IE = 1;
  9770  00320A  889D               	bsf	3997,4,c	;volatile
  9771  00320C  0012               	return		;funcret
  9772  00320E                     __end_ofi2_tx_sends:
  9773                           	opt stack 0
  9774                           pclatu	equ	0xFFB
  9775                           pclath	equ	0xFFA
  9776                           tblptru	equ	0xFF8
  9777                           tblptrh	equ	0xFF7
  9778                           tblptrl	equ	0xFF6
  9779                           tablat	equ	0xFF5
  9780                           prodh	equ	0xFF4
  9781                           prodl	equ	0xFF3
  9782                           intcon	equ	0xFF2
  9783                           postinc0	equ	0xFEE
  9784                           fsr0h	equ	0xFEA
  9785                           fsr0l	equ	0xFE9
  9786                           wreg	equ	0xFE8
  9787                           indf1	equ	0xFE7
  9788                           postinc1	equ	0xFE6
  9789                           postdec1	equ	0xFE5
  9790                           fsr1h	equ	0xFE2
  9791                           fsr1l	equ	0xFE1
  9792                           indf2	equ	0xFDF
  9793                           postinc2	equ	0xFDE
  9794                           postdec2	equ	0xFDD
  9795                           fsr2h	equ	0xFDA
  9796                           fsr2l	equ	0xFD9
  9797                           status	equ	0xFD8
  9798                           
  9799 ;; *************** function i2_tx_send *****************
  9800 ;; Defined at:
  9801 ;;		line 234 in file "../My_header\My_header.h"
  9802 ;; Parameters:    Size  Location     Type
  9803 ;;  asciicode       1    wreg     const unsigned char 
  9804 ;; Auto vars:     Size  Location     Type
  9805 ;;  asciicode       1   12[COMRAM] const unsigned char 
  9806 ;; Return value:  Size  Location     Type
  9807 ;;		None               void
  9808 ;; Registers used:
  9809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9810 ;; Tracked objects:
  9811 ;;		On entry : 0/0
  9812 ;;		On exit  : 0/0
  9813 ;;		Unchanged: 0/0
  9814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9818 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9819 ;;Total ram usage:        1 bytes
  9820 ;; Hardware stack levels used:    1
  9821 ;; Hardware stack levels required when called:    2
  9822 ;; This function calls:
  9823 ;;		i2_ringbuf_push
  9824 ;; This function is called by:
  9825 ;;		_judgement
  9826 ;; This function uses a non-reentrant model
  9827 ;;
  9828                           
  9829                           	psect	text47
  9830  00364C                     __ptext47:
  9831                           	opt stack 0
  9832  00364C                     i2_tx_send:
  9833                           	opt stack 20
  9834                           
  9835                           ;incstack = 0
  9836                           ;i2tx_send@asciicode stored from wreg
  9837  00364C  6E0D               	movwf	i2tx_send@asciicode,c
  9838                           
  9839                           ;My_header\My_header.h: 235: ringbuf_push(&tx_buf, asciicode);
  9840  00364E  0E2B               	movlw	low _tx_buf
  9841  003650  6E05               	movwf	i2ringbuf_push@rb,c
  9842  003652  0E00               	movlw	high _tx_buf
  9843  003654  6E06               	movwf	i2ringbuf_push@rb+1,c
  9844  003656  C00D  F007         	movff	i2tx_send@asciicode,i2ringbuf_push@asciicode
  9845  00365A  ECAE  F013         	call	i2_ringbuf_push	;wreg free
  9846                           
  9847                           ;My_header\My_header.h: 236: PIE1bits.TX1IE = 1;
  9848  00365E  889D               	bsf	3997,4,c	;volatile
  9849  003660  0012               	return		;funcret
  9850  003662                     __end_ofi2_tx_send:
  9851                           	opt stack 0
  9852                           pclatu	equ	0xFFB
  9853                           pclath	equ	0xFFA
  9854                           tblptru	equ	0xFF8
  9855                           tblptrh	equ	0xFF7
  9856                           tblptrl	equ	0xFF6
  9857                           tablat	equ	0xFF5
  9858                           prodh	equ	0xFF4
  9859                           prodl	equ	0xFF3
  9860                           intcon	equ	0xFF2
  9861                           postinc0	equ	0xFEE
  9862                           fsr0h	equ	0xFEA
  9863                           fsr0l	equ	0xFE9
  9864                           wreg	equ	0xFE8
  9865                           indf1	equ	0xFE7
  9866                           postinc1	equ	0xFE6
  9867                           postdec1	equ	0xFE5
  9868                           fsr1h	equ	0xFE2
  9869                           fsr1l	equ	0xFE1
  9870                           indf2	equ	0xFDF
  9871                           postinc2	equ	0xFDE
  9872                           postdec2	equ	0xFDD
  9873                           fsr2h	equ	0xFDA
  9874                           fsr2l	equ	0xFD9
  9875                           status	equ	0xFD8
  9876                           
  9877 ;; *************** function i2_ringbuf_push *****************
  9878 ;; Defined at:
  9879 ;;		line 37 in file "../My_header\My_ringbuf.h"
  9880 ;; Parameters:    Size  Location     Type
  9881 ;;  rb              2    4[COMRAM] PTR struct ringbuf
  9882 ;;		 -> rx_buf(5), tx_buf(5), 
  9883 ;;  asciicode       1    6[COMRAM] unsigned char 
  9884 ;; Auto vars:     Size  Location     Type
  9885 ;;		None
  9886 ;; Return value:  Size  Location     Type
  9887 ;;		None               void
  9888 ;; Registers used:
  9889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9890 ;; Tracked objects:
  9891 ;;		On entry : 0/0
  9892 ;;		On exit  : 0/0
  9893 ;;		Unchanged: 0/0
  9894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9895 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9897 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9898 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9899 ;;Total ram usage:        8 bytes
  9900 ;; Hardware stack levels used:    1
  9901 ;; Hardware stack levels required when called:    1
  9902 ;; This function calls:
  9903 ;;		i2_ringbuf_num
  9904 ;; This function is called by:
  9905 ;;		_judgement
  9906 ;;		i2_tx_send
  9907 ;;		i2_tx_sends
  9908 ;; This function uses a non-reentrant model
  9909 ;;
  9910                           
  9911                           	psect	text48
  9912  00275C                     __ptext48:
  9913                           	opt stack 0
  9914  00275C                     i2_ringbuf_push:
  9915                           	opt stack 20
  9916                           
  9917                           ;My_header\My_ringbuf.h: 38: if (ringbuf_num(rb) < rb->size) {
  9918                           
  9919                           ;incstack = 0
  9920  00275C  C005  F001         	movff	i2ringbuf_push@rb,i2ringbuf_num@rb
  9921  002760  C006  F002         	movff	i2ringbuf_push@rb+1,i2ringbuf_num@rb+1
  9922  002764  ECB3  F017         	call	i2_ringbuf_num	;wreg free
  9923  002768  6E08               	movwf	??i2_ringbuf_push& (0+255),c
  9924  00276A  EE20 F002          	lfsr	2,2
  9925  00276E  5005               	movf	i2ringbuf_push@rb,w,c
  9926  002770  26D9               	addwf	fsr2l,f,c
  9927  002772  5006               	movf	i2ringbuf_push@rb+1,w,c
  9928  002774  22DA               	addwfc	fsr2h,f,c
  9929  002776  50DE               	movf	postinc2,w,c
  9930  002778  5C08               	subwf	??i2_ringbuf_push,w,c
  9931  00277A  B0D8               	btfsc	status,0,c
  9932  00277C  0012               	return	
  9933                           
  9934                           ;My_header\My_ringbuf.h: 39: rb->buf[rb->head] = asciicode;
  9935  00277E  EE20 F003          	lfsr	2,3
  9936  002782  5005               	movf	i2ringbuf_push@rb,w,c
  9937  002784  26D9               	addwf	fsr2l,f,c
  9938  002786  5006               	movf	i2ringbuf_push@rb+1,w,c
  9939  002788  22DA               	addwfc	fsr2h,f,c
  9940  00278A  50DF               	movf	indf2,w,c
  9941  00278C  6E08               	movwf	??i2_ringbuf_push& (0+255),c
  9942  00278E  5008               	movf	??i2_ringbuf_push,w,c
  9943  002790  0D01               	mullw	1
  9944  002792  C005  FFD9         	movff	i2ringbuf_push@rb,fsr2l
  9945  002796  C006  FFDA         	movff	i2ringbuf_push@rb+1,fsr2h
  9946  00279A  CFDE F009          	movff	postinc2,??i2_ringbuf_push+1
  9947  00279E  CFDD F00A          	movff	postdec2,??i2_ringbuf_push+2
  9948  0027A2  50F3               	movf	prodl,w,c
  9949  0027A4  2409               	addwf	??i2_ringbuf_push+1,w,c
  9950  0027A6  6ED9               	movwf	fsr2l,c
  9951  0027A8  50F4               	movf	prodh,w,c
  9952  0027AA  200A               	addwfc	??i2_ringbuf_push+2,w,c
  9953  0027AC  6EDA               	movwf	fsr2h,c
  9954  0027AE  C007  FFDF         	movff	i2ringbuf_push@asciicode,indf2
  9955                           
  9956                           ;My_header\My_ringbuf.h: 40: if (rb->head + 1 < rb->size) rb->head++;
  9957  0027B2  EE20 F002          	lfsr	2,2
  9958  0027B6  5005               	movf	i2ringbuf_push@rb,w,c
  9959  0027B8  26D9               	addwf	fsr2l,f,c
  9960  0027BA  5006               	movf	i2ringbuf_push@rb+1,w,c
  9961  0027BC  22DA               	addwfc	fsr2h,f,c
  9962  0027BE  50DF               	movf	indf2,w,c
  9963  0027C0  6E08               	movwf	??i2_ringbuf_push& (0+255),c
  9964  0027C2  6A09               	clrf	(??i2_ringbuf_push+1)& (0+255),c
  9965  0027C4  EE20 F003          	lfsr	2,3
  9966  0027C8  5005               	movf	i2ringbuf_push@rb,w,c
  9967  0027CA  26D9               	addwf	fsr2l,f,c
  9968  0027CC  5006               	movf	i2ringbuf_push@rb+1,w,c
  9969  0027CE  22DA               	addwfc	fsr2h,f,c
  9970  0027D0  50DF               	movf	indf2,w,c
  9971  0027D2  6E0A               	movwf	(??i2_ringbuf_push+2)& (0+255),c
  9972  0027D4  6A0B               	clrf	(??i2_ringbuf_push+3)& (0+255),c
  9973  0027D6  0E01               	movlw	1
  9974  0027D8  260A               	addwf	??i2_ringbuf_push+2,f,c
  9975  0027DA  0E00               	movlw	0
  9976  0027DC  220B               	addwfc	??i2_ringbuf_push+3,f,c
  9977  0027DE  5008               	movf	??i2_ringbuf_push,w,c
  9978  0027E0  5C0A               	subwf	??i2_ringbuf_push+2,w,c
  9979  0027E2  500B               	movf	??i2_ringbuf_push+3,w,c
  9980  0027E4  0A80               	xorlw	128
  9981  0027E6  6E0C               	movwf	(??i2_ringbuf_push+4)& (0+255),c
  9982  0027E8  5009               	movf	??i2_ringbuf_push+1,w,c
  9983  0027EA  0A80               	xorlw	128
  9984  0027EC  580C               	subwfb	(??i2_ringbuf_push+4)& (0+255),w,c
  9985  0027EE  B0D8               	btfsc	status,0,c
  9986  0027F0  D008               	goto	i2l2973
  9987  0027F2  EE20 F003          	lfsr	2,3
  9988  0027F6  5005               	movf	i2ringbuf_push@rb,w,c
  9989  0027F8  26D9               	addwf	fsr2l,f,c
  9990  0027FA  5006               	movf	i2ringbuf_push@rb+1,w,c
  9991  0027FC  22DA               	addwfc	fsr2h,f,c
  9992  0027FE  2ADF               	incf	indf2,f,c
  9993  002800  0012               	return	
  9994  002802                     i2l2973:
  9995                           
  9996                           ;My_header\My_ringbuf.h: 41: else rb->head = 0;
  9997  002802  EE20 F003          	lfsr	2,3
  9998  002806  5005               	movf	i2ringbuf_push@rb,w,c
  9999  002808  26D9               	addwf	fsr2l,f,c
 10000  00280A  5006               	movf	i2ringbuf_push@rb+1,w,c
 10001  00280C  22DA               	addwfc	fsr2h,f,c
 10002  00280E  0E00               	movlw	0
 10003  002810  6EDF               	movwf	indf2,c
 10004  002812  0012               	return	
 10005  002814  0012               	return		;funcret
 10006  002816                     __end_ofi2_ringbuf_push:
 10007                           	opt stack 0
 10008                           pclatu	equ	0xFFB
 10009                           pclath	equ	0xFFA
 10010                           tblptru	equ	0xFF8
 10011                           tblptrh	equ	0xFF7
 10012                           tblptrl	equ	0xFF6
 10013                           tablat	equ	0xFF5
 10014                           prodh	equ	0xFF4
 10015                           prodl	equ	0xFF3
 10016                           intcon	equ	0xFF2
 10017                           postinc0	equ	0xFEE
 10018                           fsr0h	equ	0xFEA
 10019                           fsr0l	equ	0xFE9
 10020                           wreg	equ	0xFE8
 10021                           indf1	equ	0xFE7
 10022                           postinc1	equ	0xFE6
 10023                           postdec1	equ	0xFE5
 10024                           fsr1h	equ	0xFE2
 10025                           fsr1l	equ	0xFE1
 10026                           indf2	equ	0xFDF
 10027                           postinc2	equ	0xFDE
 10028                           postdec2	equ	0xFDD
 10029                           fsr2h	equ	0xFDA
 10030                           fsr2l	equ	0xFD9
 10031                           status	equ	0xFD8
 10032                           
 10033 ;; *************** function _ringbuf_delete *****************
 10034 ;; Defined at:
 10035 ;;		line 65 in file "../My_header\My_ringbuf.h"
 10036 ;; Parameters:    Size  Location     Type
 10037 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 10038 ;;		 -> rx_buf(5), 
 10039 ;; Auto vars:     Size  Location     Type
 10040 ;;		None
 10041 ;; Return value:  Size  Location     Type
 10042 ;;		None               void
 10043 ;; Registers used:
 10044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10045 ;; Tracked objects:
 10046 ;;		On entry : 0/0
 10047 ;;		On exit  : 0/0
 10048 ;;		Unchanged: 0/0
 10049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10050 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10053 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10054 ;;Total ram usage:        2 bytes
 10055 ;; Hardware stack levels used:    1
 10056 ;; This function calls:
 10057 ;;		Nothing
 10058 ;; This function is called by:
 10059 ;;		_judgement
 10060 ;; This function uses a non-reentrant model
 10061 ;;
 10062                           
 10063                           	psect	text49
 10064  003612                     __ptext49:
 10065                           	opt stack 0
 10066  003612                     _ringbuf_delete:
 10067                           	opt stack 22
 10068                           
 10069                           ;My_header\My_ringbuf.h: 66: rb->head = rb->tail;
 10070                           
 10071                           ;incstack = 0
 10072  003612  EE20 F004          	lfsr	2,4
 10073  003616  5001               	movf	ringbuf_delete@rb,w,c
 10074  003618  26D9               	addwf	fsr2l,f,c
 10075  00361A  5002               	movf	ringbuf_delete@rb+1,w,c
 10076  00361C  22DA               	addwfc	fsr2h,f,c
 10077  00361E  EE10 F003          	lfsr	1,3
 10078  003622  5001               	movf	ringbuf_delete@rb,w,c
 10079  003624  26E1               	addwf	fsr1l,f,c
 10080  003626  5002               	movf	ringbuf_delete@rb+1,w,c
 10081  003628  22E2               	addwfc	fsr1h,f,c
 10082  00362A  CFDF FFE7          	movff	indf2,indf1
 10083  00362E  0012               	return		;funcret
 10084  003630                     __end_of_ringbuf_delete:
 10085                           	opt stack 0
 10086                           pclatu	equ	0xFFB
 10087                           pclath	equ	0xFFA
 10088                           tblptru	equ	0xFF8
 10089                           tblptrh	equ	0xFF7
 10090                           tblptrl	equ	0xFF6
 10091                           tablat	equ	0xFF5
 10092                           prodh	equ	0xFF4
 10093                           prodl	equ	0xFF3
 10094                           intcon	equ	0xFF2
 10095                           postinc0	equ	0xFEE
 10096                           fsr0h	equ	0xFEA
 10097                           fsr0l	equ	0xFE9
 10098                           wreg	equ	0xFE8
 10099                           indf1	equ	0xFE7
 10100                           postinc1	equ	0xFE6
 10101                           postdec1	equ	0xFE5
 10102                           fsr1h	equ	0xFE2
 10103                           fsr1l	equ	0xFE1
 10104                           indf2	equ	0xFDF
 10105                           postinc2	equ	0xFDE
 10106                           postdec2	equ	0xFDD
 10107                           fsr2h	equ	0xFDA
 10108                           fsr2l	equ	0xFD9
 10109                           status	equ	0xFD8
 10110                           
 10111 ;; *************** function _ringbuf_backspace *****************
 10112 ;; Defined at:
 10113 ;;		line 58 in file "../My_header\My_ringbuf.h"
 10114 ;; Parameters:    Size  Location     Type
 10115 ;;  rb              2    4[COMRAM] PTR struct ringbuf
 10116 ;;		 -> rx_buf(5), 
 10117 ;; Auto vars:     Size  Location     Type
 10118 ;;		None
 10119 ;; Return value:  Size  Location     Type
 10120 ;;		None               void
 10121 ;; Registers used:
 10122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10123 ;; Tracked objects:
 10124 ;;		On entry : 0/0
 10125 ;;		On exit  : 0/0
 10126 ;;		Unchanged: 0/0
 10127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10130 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10131 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10132 ;;Total ram usage:        3 bytes
 10133 ;; Hardware stack levels used:    1
 10134 ;; Hardware stack levels required when called:    1
 10135 ;; This function calls:
 10136 ;;		i2_ringbuf_num
 10137 ;; This function is called by:
 10138 ;;		_judgement
 10139 ;; This function uses a non-reentrant model
 10140 ;;
 10141                           
 10142                           	psect	text50
 10143  0032C4                     __ptext50:
 10144                           	opt stack 0
 10145  0032C4                     _ringbuf_backspace:
 10146                           	opt stack 21
 10147                           
 10148                           ;My_header\My_ringbuf.h: 59: if (ringbuf_num(rb)) {
 10149                           
 10150                           ;incstack = 0
 10151  0032C4  C005  F001         	movff	ringbuf_backspace@rb,i2ringbuf_num@rb
 10152  0032C8  C006  F002         	movff	ringbuf_backspace@rb+1,i2ringbuf_num@rb+1
 10153  0032CC  ECB3  F017         	call	i2_ringbuf_num	;wreg free
 10154  0032D0  0900               	iorlw	0
 10155  0032D2  B4D8               	btfsc	status,2,c
 10156  0032D4  0012               	return	
 10157                           
 10158                           ;My_header\My_ringbuf.h: 60: if (rb->head) rb->head--;
 10159  0032D6  EE20 F003          	lfsr	2,3
 10160  0032DA  5005               	movf	ringbuf_backspace@rb,w,c
 10161  0032DC  26D9               	addwf	fsr2l,f,c
 10162  0032DE  5006               	movf	ringbuf_backspace@rb+1,w,c
 10163  0032E0  22DA               	addwfc	fsr2h,f,c
 10164  0032E2  50DF               	movf	indf2,w,c
 10165  0032E4  B4D8               	btfsc	status,2,c
 10166  0032E6  D008               	goto	i2l3061
 10167  0032E8  EE20 F003          	lfsr	2,3
 10168  0032EC  5005               	movf	ringbuf_backspace@rb,w,c
 10169  0032EE  26D9               	addwf	fsr2l,f,c
 10170  0032F0  5006               	movf	ringbuf_backspace@rb+1,w,c
 10171  0032F2  22DA               	addwfc	fsr2h,f,c
 10172  0032F4  06DF               	decf	indf2,f,c
 10173  0032F6  0012               	return	
 10174  0032F8                     i2l3061:
 10175                           
 10176                           ;My_header\My_ringbuf.h: 61: else rb->head = rb->size - 1;
 10177  0032F8  EE20 F003          	lfsr	2,3
 10178  0032FC  5005               	movf	ringbuf_backspace@rb,w,c
 10179  0032FE  26D9               	addwf	fsr2l,f,c
 10180  003300  5006               	movf	ringbuf_backspace@rb+1,w,c
 10181  003302  22DA               	addwfc	fsr2h,f,c
 10182  003304  EE10 F002          	lfsr	1,2
 10183  003308  5005               	movf	ringbuf_backspace@rb,w,c
 10184  00330A  26E1               	addwf	fsr1l,f,c
 10185  00330C  5006               	movf	ringbuf_backspace@rb+1,w,c
 10186  00330E  22E2               	addwfc	fsr1h,f,c
 10187  003310  50E7               	movf	indf1,w,c
 10188  003312  6E07               	movwf	??_ringbuf_backspace& (0+255),c
 10189  003314  0407               	decf	??_ringbuf_backspace,w,c
 10190  003316  6EDF               	movwf	indf2,c
 10191  003318  0012               	return	
 10192  00331A  0012               	return		;funcret
 10193  00331C                     __end_of_ringbuf_backspace:
 10194                           	opt stack 0
 10195                           pclatu	equ	0xFFB
 10196                           pclath	equ	0xFFA
 10197                           tblptru	equ	0xFF8
 10198                           tblptrh	equ	0xFF7
 10199                           tblptrl	equ	0xFF6
 10200                           tablat	equ	0xFF5
 10201                           prodh	equ	0xFF4
 10202                           prodl	equ	0xFF3
 10203                           intcon	equ	0xFF2
 10204                           postinc0	equ	0xFEE
 10205                           fsr0h	equ	0xFEA
 10206                           fsr0l	equ	0xFE9
 10207                           wreg	equ	0xFE8
 10208                           indf1	equ	0xFE7
 10209                           postinc1	equ	0xFE6
 10210                           postdec1	equ	0xFE5
 10211                           fsr1h	equ	0xFE2
 10212                           fsr1l	equ	0xFE1
 10213                           indf2	equ	0xFDF
 10214                           postinc2	equ	0xFDE
 10215                           postdec2	equ	0xFDD
 10216                           fsr2h	equ	0xFDA
 10217                           fsr2l	equ	0xFD9
 10218                           status	equ	0xFD8
 10219                           
 10220 ;; *************** function _interrupt_TXIF *****************
 10221 ;; Defined at:
 10222 ;;		line 223 in file "../My_header\My_header.h"
 10223 ;; Parameters:    Size  Location     Type
 10224 ;;		None
 10225 ;; Auto vars:     Size  Location     Type
 10226 ;;		None
 10227 ;; Return value:  Size  Location     Type
 10228 ;;		None               void
 10229 ;; Registers used:
 10230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10231 ;; Tracked objects:
 10232 ;;		On entry : 0/0
 10233 ;;		On exit  : 0/0
 10234 ;;		Unchanged: 0/0
 10235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10240 ;;Total ram usage:        0 bytes
 10241 ;; Hardware stack levels used:    1
 10242 ;; Hardware stack levels required when called:    2
 10243 ;; This function calls:
 10244 ;;		i2_ringbuf_num
 10245 ;;		i2_ringbuf_pop
 10246 ;; This function is called by:
 10247 ;;		_ISR
 10248 ;; This function uses a non-reentrant model
 10249 ;;
 10250                           
 10251                           	psect	text51
 10252  00343A                     __ptext51:
 10253                           	opt stack 0
 10254  00343A                     _interrupt_TXIF:
 10255                           	opt stack 21
 10256                           
 10257                           ;My_header\My_header.h: 224: if (PIE1bits.TX1IE && PIR1bits.TX1IF) {
 10258                           
 10259                           ;incstack = 0
 10260  00343A  A89D               	btfss	3997,4,c	;volatile
 10261  00343C  0012               	return	
 10262  00343E  A89E               	btfss	3998,4,c	;volatile
 10263  003440  0012               	return	
 10264                           
 10265                           ;My_header\My_header.h: 225: PIR1bits.TX1IF = 0;
 10266  003442  989E               	bcf	3998,4,c	;volatile
 10267                           
 10268                           ;My_header\My_header.h: 226: if (ringbuf_num(&tx_buf) > 0) {
 10269  003444  0E2B               	movlw	low _tx_buf
 10270  003446  6E01               	movwf	i2ringbuf_num@rb,c
 10271  003448  0E00               	movlw	high _tx_buf
 10272  00344A  6E02               	movwf	i2ringbuf_num@rb+1,c
 10273  00344C  ECB3  F017         	call	i2_ringbuf_num	;wreg free
 10274  003450  0900               	iorlw	0
 10275  003452  B4D8               	btfsc	status,2,c
 10276  003454  D008               	goto	i2l216
 10277                           
 10278                           ;My_header\My_header.h: 227: TXREG1 = ringbuf_pop(&tx_buf);
 10279  003456  0E2B               	movlw	low _tx_buf
 10280  003458  6E05               	movwf	i2ringbuf_pop@rb,c
 10281  00345A  0E00               	movlw	high _tx_buf
 10282  00345C  6E06               	movwf	i2ringbuf_pop@rb+1,c
 10283  00345E  EC5F  F016         	call	i2_ringbuf_pop	;wreg free
 10284  003462  6EAE               	movwf	4014,c	;volatile
 10285                           
 10286                           ;My_header\My_header.h: 228: } else {
 10287  003464  0012               	return	
 10288  003466                     i2l216:
 10289                           
 10290                           ;My_header\My_header.h: 229: PIE1bits.TX1IE = 0;
 10291  003466  989D               	bcf	3997,4,c	;volatile
 10292  003468  0012               	return	
 10293  00346A  0012               	return		;funcret
 10294  00346C                     __end_of_interrupt_TXIF:
 10295                           	opt stack 0
 10296                           pclatu	equ	0xFFB
 10297                           pclath	equ	0xFFA
 10298                           tblptru	equ	0xFF8
 10299                           tblptrh	equ	0xFF7
 10300                           tblptrl	equ	0xFF6
 10301                           tablat	equ	0xFF5
 10302                           prodh	equ	0xFF4
 10303                           prodl	equ	0xFF3
 10304                           intcon	equ	0xFF2
 10305                           postinc0	equ	0xFEE
 10306                           fsr0h	equ	0xFEA
 10307                           fsr0l	equ	0xFE9
 10308                           wreg	equ	0xFE8
 10309                           indf1	equ	0xFE7
 10310                           postinc1	equ	0xFE6
 10311                           postdec1	equ	0xFE5
 10312                           fsr1h	equ	0xFE2
 10313                           fsr1l	equ	0xFE1
 10314                           indf2	equ	0xFDF
 10315                           postinc2	equ	0xFDE
 10316                           postdec2	equ	0xFDD
 10317                           fsr2h	equ	0xFDA
 10318                           fsr2l	equ	0xFD9
 10319                           status	equ	0xFD8
 10320                           
 10321 ;; *************** function i2_ringbuf_pop *****************
 10322 ;; Defined at:
 10323 ;;		line 45 in file "../My_header\My_ringbuf.h"
 10324 ;; Parameters:    Size  Location     Type
 10325 ;;  rb              2    4[COMRAM] PTR struct ringbuf
 10326 ;;		 -> rx_buf(5), tx_buf(5), 
 10327 ;; Auto vars:     Size  Location     Type
 10328 ;;  ringbuf_pop     1    9[COMRAM] unsigned char 
 10329 ;; Return value:  Size  Location     Type
 10330 ;;                  1    wreg      unsigned char 
 10331 ;; Registers used:
 10332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10333 ;; Tracked objects:
 10334 ;;		On entry : 0/0
 10335 ;;		On exit  : 0/0
 10336 ;;		Unchanged: 0/0
 10337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10339 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10340 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10341 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10342 ;;Total ram usage:        6 bytes
 10343 ;; Hardware stack levels used:    1
 10344 ;; Hardware stack levels required when called:    1
 10345 ;; This function calls:
 10346 ;;		i2_ringbuf_num
 10347 ;; This function is called by:
 10348 ;;		_interrupt_TXIF
 10349 ;; This function uses a non-reentrant model
 10350 ;;
 10351                           
 10352                           	psect	text52
 10353  002CBE                     __ptext52:
 10354                           	opt stack 0
 10355  002CBE                     i2_ringbuf_pop:
 10356                           	opt stack 21
 10357                           
 10358                           ;My_header\My_ringbuf.h: 46: if (ringbuf_num(rb)) {
 10359                           
 10360                           ;incstack = 0
 10361  002CBE  C005  F001         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 10362  002CC2  C006  F002         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 10363  002CC6  ECB3  F017         	call	i2_ringbuf_num	;wreg free
 10364  002CCA  0900               	iorlw	0
 10365  002CCC  B4D8               	btfsc	status,2,c
 10366  002CCE  D03C               	goto	i2l3289
 10367                           
 10368                           ;My_header\My_ringbuf.h: 47: uint8_t ret = rb->buf[rb->tail];
 10369  002CD0  EE20 F004          	lfsr	2,4
 10370  002CD4  5005               	movf	i2ringbuf_pop@rb,w,c
 10371  002CD6  26D9               	addwf	fsr2l,f,c
 10372  002CD8  5006               	movf	i2ringbuf_pop@rb+1,w,c
 10373  002CDA  22DA               	addwfc	fsr2h,f,c
 10374  002CDC  50DF               	movf	indf2,w,c
 10375  002CDE  6E07               	movwf	??i2_ringbuf_pop& (0+255),c
 10376  002CE0  5007               	movf	??i2_ringbuf_pop,w,c
 10377  002CE2  0D01               	mullw	1
 10378  002CE4  C005  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 10379  002CE8  C006  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 10380  002CEC  CFDE F008          	movff	postinc2,??i2_ringbuf_pop+1
 10381  002CF0  CFDD F009          	movff	postdec2,??i2_ringbuf_pop+2
 10382  002CF4  50F3               	movf	prodl,w,c
 10383  002CF6  2408               	addwf	??i2_ringbuf_pop+1,w,c
 10384  002CF8  6ED9               	movwf	fsr2l,c
 10385  002CFA  50F4               	movf	prodh,w,c
 10386  002CFC  2009               	addwfc	??i2_ringbuf_pop+2,w,c
 10387  002CFE  6EDA               	movwf	fsr2h,c
 10388  002D00  50DF               	movf	indf2,w,c
 10389  002D02  6E0A               	movwf	i2ringbuf_pop@ret,c
 10390                           
 10391                           ;My_header\My_ringbuf.h: 48: rb->tail++;
 10392  002D04  EE20 F004          	lfsr	2,4
 10393  002D08  5005               	movf	i2ringbuf_pop@rb,w,c
 10394  002D0A  26D9               	addwf	fsr2l,f,c
 10395  002D0C  5006               	movf	i2ringbuf_pop@rb+1,w,c
 10396  002D0E  22DA               	addwfc	fsr2h,f,c
 10397  002D10  2ADF               	incf	indf2,f,c
 10398                           
 10399                           ;My_header\My_ringbuf.h: 49: if (rb->tail >= rb->size) {
 10400  002D12  EE20 F002          	lfsr	2,2
 10401  002D16  5005               	movf	i2ringbuf_pop@rb,w,c
 10402  002D18  26D9               	addwf	fsr2l,f,c
 10403  002D1A  5006               	movf	i2ringbuf_pop@rb+1,w,c
 10404  002D1C  22DA               	addwfc	fsr2h,f,c
 10405  002D1E  EE10 F004          	lfsr	1,4
 10406  002D22  5005               	movf	i2ringbuf_pop@rb,w,c
 10407  002D24  26E1               	addwf	fsr1l,f,c
 10408  002D26  5006               	movf	i2ringbuf_pop@rb+1,w,c
 10409  002D28  22E2               	addwfc	fsr1h,f,c
 10410  002D2A  50DE               	movf	postinc2,w,c
 10411  002D2C  5CE6               	subwf	postinc1,w,c
 10412  002D2E  A0D8               	btfss	status,0,c
 10413  002D30  D009               	goto	i2l3283
 10414                           
 10415                           ;My_header\My_ringbuf.h: 50: rb->tail = 0;
 10416  002D32  EE20 F004          	lfsr	2,4
 10417  002D36  5005               	movf	i2ringbuf_pop@rb,w,c
 10418  002D38  26D9               	addwf	fsr2l,f,c
 10419  002D3A  5006               	movf	i2ringbuf_pop@rb+1,w,c
 10420  002D3C  22DA               	addwfc	fsr2h,f,c
 10421  002D3E  0E00               	movlw	0
 10422  002D40  6EDF               	movwf	indf2,c
 10423  002D42  D000               	goto	i2l3283
 10424  002D44                     i2l3283:
 10425                           
 10426                           ;My_header\My_ringbuf.h: 51: }
 10427                           ;My_header\My_ringbuf.h: 52: return ret;
 10428  002D44  500A               	movf	i2ringbuf_pop@ret,w,c
 10429                           
 10430                           ;My_header\My_ringbuf.h: 53: } else {
 10431  002D46  0012               	return	
 10432  002D48                     i2l3289:
 10433                           
 10434                           ;My_header\My_ringbuf.h: 54: return 0;
 10435  002D48  0E00               	movlw	0
 10436  002D4A  0012               	return	
 10437  002D4C  0012               	return		;funcret
 10438  002D4E                     __end_ofi2_ringbuf_pop:
 10439                           	opt stack 0
 10440                           pclatu	equ	0xFFB
 10441                           pclath	equ	0xFFA
 10442                           tblptru	equ	0xFF8
 10443                           tblptrh	equ	0xFF7
 10444                           tblptrl	equ	0xFF6
 10445                           tablat	equ	0xFF5
 10446                           prodh	equ	0xFF4
 10447                           prodl	equ	0xFF3
 10448                           intcon	equ	0xFF2
 10449                           postinc0	equ	0xFEE
 10450                           fsr0h	equ	0xFEA
 10451                           fsr0l	equ	0xFE9
 10452                           wreg	equ	0xFE8
 10453                           indf1	equ	0xFE7
 10454                           postinc1	equ	0xFE6
 10455                           postdec1	equ	0xFE5
 10456                           fsr1h	equ	0xFE2
 10457                           fsr1l	equ	0xFE1
 10458                           indf2	equ	0xFDF
 10459                           postinc2	equ	0xFDE
 10460                           postdec2	equ	0xFDD
 10461                           fsr2h	equ	0xFDA
 10462                           fsr2l	equ	0xFD9
 10463                           status	equ	0xFD8
 10464                           
 10465 ;; *************** function i2_ringbuf_num *****************
 10466 ;; Defined at:
 10467 ;;		line 29 in file "../My_header\My_ringbuf.h"
 10468 ;; Parameters:    Size  Location     Type
 10469 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 10470 ;;		 -> rx_buf(5), tx_buf(5), 
 10471 ;; Auto vars:     Size  Location     Type
 10472 ;;		None
 10473 ;; Return value:  Size  Location     Type
 10474 ;;                  1    wreg      unsigned char 
 10475 ;; Registers used:
 10476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10477 ;; Tracked objects:
 10478 ;;		On entry : 0/0
 10479 ;;		On exit  : 0/0
 10480 ;;		Unchanged: 0/0
 10481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10482 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10484 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10485 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10486 ;;Total ram usage:        4 bytes
 10487 ;; Hardware stack levels used:    1
 10488 ;; This function calls:
 10489 ;;		Nothing
 10490 ;; This function is called by:
 10491 ;;		_ringbuf_backspace
 10492 ;;		_interrupt_TXIF
 10493 ;;		_judgement
 10494 ;;		i2_ringbuf_push
 10495 ;;		i2_ringbuf_pop
 10496 ;; This function uses a non-reentrant model
 10497 ;;
 10498                           
 10499                           	psect	text53
 10500  002F66                     __ptext53:
 10501                           	opt stack 0
 10502  002F66                     i2_ringbuf_num:
 10503                           	opt stack 20
 10504                           
 10505                           ;My_header\My_ringbuf.h: 30: if (rb->head >= rb->tail) {
 10506                           
 10507                           ;incstack = 0
 10508  002F66  EE20 F004          	lfsr	2,4
 10509  002F6A  5001               	movf	i2ringbuf_num@rb,w,c
 10510  002F6C  26D9               	addwf	fsr2l,f,c
 10511  002F6E  5002               	movf	i2ringbuf_num@rb+1,w,c
 10512  002F70  22DA               	addwfc	fsr2h,f,c
 10513  002F72  EE10 F003          	lfsr	1,3
 10514  002F76  5001               	movf	i2ringbuf_num@rb,w,c
 10515  002F78  26E1               	addwf	fsr1l,f,c
 10516  002F7A  5002               	movf	i2ringbuf_num@rb+1,w,c
 10517  002F7C  22E2               	addwfc	fsr1h,f,c
 10518  002F7E  50DE               	movf	postinc2,w,c
 10519  002F80  5CE6               	subwf	postinc1,w,c
 10520  002F82  A0D8               	btfss	status,0,c
 10521  002F84  D012               	goto	i2l2867
 10522                           
 10523                           ;My_header\My_ringbuf.h: 31: return (rb->head - rb->tail);
 10524  002F86  EE20 F003          	lfsr	2,3
 10525  002F8A  5001               	movf	i2ringbuf_num@rb,w,c
 10526  002F8C  26D9               	addwf	fsr2l,f,c
 10527  002F8E  5002               	movf	i2ringbuf_num@rb+1,w,c
 10528  002F90  22DA               	addwfc	fsr2h,f,c
 10529  002F92  50DF               	movf	indf2,w,c
 10530  002F94  6E03               	movwf	??i2_ringbuf_num& (0+255),c
 10531  002F96  EE20 F004          	lfsr	2,4
 10532  002F9A  5001               	movf	i2ringbuf_num@rb,w,c
 10533  002F9C  26D9               	addwf	fsr2l,f,c
 10534  002F9E  5002               	movf	i2ringbuf_num@rb+1,w,c
 10535  002FA0  22DA               	addwfc	fsr2h,f,c
 10536  002FA2  50DF               	movf	indf2,w,c
 10537  002FA4  0800               	sublw	0
 10538  002FA6  2403               	addwf	??i2_ringbuf_num,w,c
 10539                           
 10540                           ;My_header\My_ringbuf.h: 32: } else {
 10541  002FA8  0012               	return	
 10542  002FAA                     i2l2867:
 10543                           
 10544                           ;My_header\My_ringbuf.h: 33: return (rb->size + rb->head - rb->tail);
 10545  002FAA  EE20 F003          	lfsr	2,3
 10546  002FAE  5001               	movf	i2ringbuf_num@rb,w,c
 10547  002FB0  26D9               	addwf	fsr2l,f,c
 10548  002FB2  5002               	movf	i2ringbuf_num@rb+1,w,c
 10549  002FB4  22DA               	addwfc	fsr2h,f,c
 10550  002FB6  50DF               	movf	indf2,w,c
 10551  002FB8  6E03               	movwf	??i2_ringbuf_num& (0+255),c
 10552  002FBA  EE20 F002          	lfsr	2,2
 10553  002FBE  5001               	movf	i2ringbuf_num@rb,w,c
 10554  002FC0  26D9               	addwf	fsr2l,f,c
 10555  002FC2  5002               	movf	i2ringbuf_num@rb+1,w,c
 10556  002FC4  22DA               	addwfc	fsr2h,f,c
 10557  002FC6  50DF               	movf	indf2,w,c
 10558  002FC8  6E04               	movwf	(??i2_ringbuf_num+1)& (0+255),c
 10559  002FCA  EE20 F004          	lfsr	2,4
 10560  002FCE  5001               	movf	i2ringbuf_num@rb,w,c
 10561  002FD0  26D9               	addwf	fsr2l,f,c
 10562  002FD2  5002               	movf	i2ringbuf_num@rb+1,w,c
 10563  002FD4  22DA               	addwfc	fsr2h,f,c
 10564  002FD6  50DF               	movf	indf2,w,c
 10565  002FD8  0800               	sublw	0
 10566  002FDA  2404               	addwf	??i2_ringbuf_num+1,w,c
 10567  002FDC  2403               	addwf	??i2_ringbuf_num,w,c
 10568  002FDE  0012               	return	
 10569  002FE0  0012               	return		;funcret
 10570  002FE2                     __end_ofi2_ringbuf_num:
 10571                           	opt stack 0
 10572                           pclatu	equ	0xFFB
 10573                           pclath	equ	0xFFA
 10574                           tblptru	equ	0xFF8
 10575                           tblptrh	equ	0xFF7
 10576                           tblptrl	equ	0xFF6
 10577                           tablat	equ	0xFF5
 10578                           prodh	equ	0xFF4
 10579                           prodl	equ	0xFF3
 10580                           intcon	equ	0xFF2
 10581                           postinc0	equ	0xFEE
 10582                           fsr0h	equ	0xFEA
 10583                           fsr0l	equ	0xFE9
 10584                           wreg	equ	0xFE8
 10585                           indf1	equ	0xFE7
 10586                           postinc1	equ	0xFE6
 10587                           postdec1	equ	0xFE5
 10588                           fsr1h	equ	0xFE2
 10589                           fsr1l	equ	0xFE1
 10590                           indf2	equ	0xFDF
 10591                           postinc2	equ	0xFDE
 10592                           postdec2	equ	0xFDD
 10593                           fsr2h	equ	0xFDA
 10594                           fsr2l	equ	0xFD9
 10595                           status	equ	0xFD8
 10596                           
 10597 ;; *************** function _button_timer_interrupt *****************
 10598 ;; Defined at:
 10599 ;;		line 51 in file "../My_header\My_button.h"
 10600 ;; Parameters:    Size  Location     Type
 10601 ;;  bt              2    0[COMRAM] PTR struct button
 10602 ;;		 -> sw_B(4), sw_G(4), sw_R(4), 
 10603 ;;  sw_value        1    2[COMRAM] unsigned char 
 10604 ;; Auto vars:     Size  Location     Type
 10605 ;;		None
 10606 ;; Return value:  Size  Location     Type
 10607 ;;		None               void
 10608 ;; Registers used:
 10609 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10610 ;; Tracked objects:
 10611 ;;		On entry : 0/0
 10612 ;;		On exit  : 0/0
 10613 ;;		Unchanged: 0/0
 10614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10615 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10617 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10618 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10619 ;;Total ram usage:        5 bytes
 10620 ;; Hardware stack levels used:    1
 10621 ;; This function calls:
 10622 ;;		Nothing
 10623 ;; This function is called by:
 10624 ;;		_ISR
 10625 ;; This function uses a non-reentrant model
 10626 ;;
 10627                           
 10628                           	psect	text54
 10629  001A68                     __ptext54:
 10630                           	opt stack 0
 10631  001A68                     _button_timer_interrupt:
 10632                           	opt stack 23
 10633                           
 10634                           ;My_header\My_button.h: 52: if (sw_value) {
 10635                           
 10636                           ;incstack = 0
 10637  001A68  5003               	movf	button_timer_interrupt@sw_value,w,c
 10638  001A6A  B4D8               	btfsc	status,2,c
 10639  001A6C  D094               	goto	i2l3343
 10640                           
 10641                           ;My_header\My_button.h: 53: if (bt->cnt_sw < 350 + 1) bt->cnt_sw++;
 10642  001A6E  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10643  001A72  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10644  001A76  0E5F               	movlw	95
 10645  001A78  5CDE               	subwf	postinc2,w,c
 10646  001A7A  0E01               	movlw	1
 10647  001A7C  58DE               	subwfb	postinc2,w,c
 10648  001A7E  B0D8               	btfsc	status,0,c
 10649  001A80  D007               	goto	i2l292
 10650  001A82  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10651  001A86  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10652  001A8A  2ADE               	incf	postinc2,f,c
 10653  001A8C  0E00               	movlw	0
 10654  001A8E  22DD               	addwfc	postdec2,f,c
 10655  001A90                     i2l292:
 10656                           
 10657                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 350)bt->flag.long_holding_7 = 1;
 10658  001A90  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10659  001A94  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10660  001A98  0E5E               	movlw	94
 10661  001A9A  18DE               	xorwf	postinc2,w,c
 10662  001A9C  E10A               	bnz	i2l293
 10663  001A9E  04DE               	decf	postinc2,w,c
 10664  001AA0  A4D8               	btfss	status,2,c
 10665  001AA2  D007               	goto	i2l293
 10666  001AA4  EE20 F003          	lfsr	2,3
 10667  001AA8  5001               	movf	button_timer_interrupt@bt,w,c
 10668  001AAA  26D9               	addwf	fsr2l,f,c
 10669  001AAC  5002               	movf	button_timer_interrupt@bt+1,w,c
 10670  001AAE  22DA               	addwfc	fsr2h,f,c
 10671  001AB0  8EDF               	bsf	indf2,7,c
 10672  001AB2                     i2l293:
 10673                           
 10674                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 300)bt->flag.long_holding_6 = 1;
 10675  001AB2  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10676  001AB6  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10677  001ABA  0E2C               	movlw	44
 10678  001ABC  18DE               	xorwf	postinc2,w,c
 10679  001ABE  E10A               	bnz	i2l294
 10680  001AC0  04DE               	decf	postinc2,w,c
 10681  001AC2  A4D8               	btfss	status,2,c
 10682  001AC4  D007               	goto	i2l294
 10683  001AC6  EE20 F003          	lfsr	2,3
 10684  001ACA  5001               	movf	button_timer_interrupt@bt,w,c
 10685  001ACC  26D9               	addwf	fsr2l,f,c
 10686  001ACE  5002               	movf	button_timer_interrupt@bt+1,w,c
 10687  001AD0  22DA               	addwfc	fsr2h,f,c
 10688  001AD2  8CDF               	bsf	indf2,6,c
 10689  001AD4                     i2l294:
 10690                           
 10691                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 250)bt->flag.long_holding_5 = 1;
 10692  001AD4  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10693  001AD8  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10694  001ADC  0EFA               	movlw	250
 10695  001ADE  18DE               	xorwf	postinc2,w,c
 10696  001AE0  10DE               	iorwf	postinc2,w,c
 10697  001AE2  A4D8               	btfss	status,2,c
 10698  001AE4  D007               	goto	i2l295
 10699  001AE6  EE20 F003          	lfsr	2,3
 10700  001AEA  5001               	movf	button_timer_interrupt@bt,w,c
 10701  001AEC  26D9               	addwf	fsr2l,f,c
 10702  001AEE  5002               	movf	button_timer_interrupt@bt+1,w,c
 10703  001AF0  22DA               	addwfc	fsr2h,f,c
 10704  001AF2  8ADF               	bsf	indf2,5,c
 10705  001AF4                     i2l295:
 10706                           
 10707                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 200)bt->flag.long_holding_4 = 1;
 10708  001AF4  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10709  001AF8  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10710  001AFC  0EC8               	movlw	200
 10711  001AFE  18DE               	xorwf	postinc2,w,c
 10712  001B00  10DE               	iorwf	postinc2,w,c
 10713  001B02  A4D8               	btfss	status,2,c
 10714  001B04  D007               	goto	i2l296
 10715  001B06  EE20 F003          	lfsr	2,3
 10716  001B0A  5001               	movf	button_timer_interrupt@bt,w,c
 10717  001B0C  26D9               	addwf	fsr2l,f,c
 10718  001B0E  5002               	movf	button_timer_interrupt@bt+1,w,c
 10719  001B10  22DA               	addwfc	fsr2h,f,c
 10720  001B12  88DF               	bsf	indf2,4,c
 10721  001B14                     i2l296:
 10722                           
 10723                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 10724  001B14  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10725  001B18  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10726  001B1C  0E96               	movlw	150
 10727  001B1E  18DE               	xorwf	postinc2,w,c
 10728  001B20  10DE               	iorwf	postinc2,w,c
 10729  001B22  A4D8               	btfss	status,2,c
 10730  001B24  D007               	goto	i2l297
 10731  001B26  EE20 F003          	lfsr	2,3
 10732  001B2A  5001               	movf	button_timer_interrupt@bt,w,c
 10733  001B2C  26D9               	addwf	fsr2l,f,c
 10734  001B2E  5002               	movf	button_timer_interrupt@bt+1,w,c
 10735  001B30  22DA               	addwfc	fsr2h,f,c
 10736  001B32  86DF               	bsf	indf2,3,c
 10737  001B34                     i2l297:
 10738                           
 10739                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 10740  001B34  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10741  001B38  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10742  001B3C  0E3C               	movlw	60
 10743  001B3E  18DE               	xorwf	postinc2,w,c
 10744  001B40  10DE               	iorwf	postinc2,w,c
 10745  001B42  A4D8               	btfss	status,2,c
 10746  001B44  D007               	goto	i2l298
 10747  001B46  EE20 F003          	lfsr	2,3
 10748  001B4A  5001               	movf	button_timer_interrupt@bt,w,c
 10749  001B4C  26D9               	addwf	fsr2l,f,c
 10750  001B4E  5002               	movf	button_timer_interrupt@bt+1,w,c
 10751  001B50  22DA               	addwfc	fsr2h,f,c
 10752  001B52  84DF               	bsf	indf2,2,c
 10753  001B54                     i2l298:
 10754                           
 10755                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 10756  001B54  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10757  001B58  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10758  001B5C  0E10               	movlw	16
 10759  001B5E  18DE               	xorwf	postinc2,w,c
 10760  001B60  10DE               	iorwf	postinc2,w,c
 10761  001B62  A4D8               	btfss	status,2,c
 10762  001B64  D007               	goto	i2l299
 10763  001B66  EE20 F003          	lfsr	2,3
 10764  001B6A  5001               	movf	button_timer_interrupt@bt,w,c
 10765  001B6C  26D9               	addwf	fsr2l,f,c
 10766  001B6E  5002               	movf	button_timer_interrupt@bt+1,w,c
 10767  001B70  22DA               	addwfc	fsr2h,f,c
 10768  001B72  82DF               	bsf	indf2,1,c
 10769  001B74                     i2l299:
 10770                           
 10771                           ;My_header\My_button.h: 61: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 10772  001B74  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10773  001B78  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10774  001B7C  0E02               	movlw	2
 10775  001B7E  18DE               	xorwf	postinc2,w,c
 10776  001B80  10DE               	iorwf	postinc2,w,c
 10777  001B82  A4D8               	btfss	status,2,c
 10778  001B84  0012               	return	
 10779  001B86  EE20 F003          	lfsr	2,3
 10780  001B8A  5001               	movf	button_timer_interrupt@bt,w,c
 10781  001B8C  26D9               	addwf	fsr2l,f,c
 10782  001B8E  5002               	movf	button_timer_interrupt@bt+1,w,c
 10783  001B90  22DA               	addwfc	fsr2h,f,c
 10784  001B92  80DF               	bsf	indf2,0,c
 10785                           
 10786                           ;My_header\My_button.h: 62: } else {
 10787  001B94  0012               	return	
 10788  001B96                     i2l3343:
 10789                           
 10790                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 350)bt->flag.long_hold_7 = 1;
 10791  001B96  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10792  001B9A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10793  001B9E  0E5E               	movlw	94
 10794  001BA0  5CDE               	subwf	postinc2,w,c
 10795  001BA2  0E01               	movlw	1
 10796  001BA4  58DE               	subwfb	postinc2,w,c
 10797  001BA6  A0D8               	btfss	status,0,c
 10798  001BA8  D008               	goto	i2l3347
 10799  001BAA  EE20 F002          	lfsr	2,2
 10800  001BAE  5001               	movf	button_timer_interrupt@bt,w,c
 10801  001BB0  26D9               	addwf	fsr2l,f,c
 10802  001BB2  5002               	movf	button_timer_interrupt@bt+1,w,c
 10803  001BB4  22DA               	addwfc	fsr2h,f,c
 10804  001BB6  8EDF               	bsf	indf2,7,c
 10805  001BB8  D084               	goto	i2l3375
 10806  001BBA                     i2l3347:
 10807                           
 10808                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 300)bt->flag.long_hold_6 = 1;
 10809  001BBA  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10810  001BBE  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10811  001BC2  0E2C               	movlw	44
 10812  001BC4  5CDE               	subwf	postinc2,w,c
 10813  001BC6  0E01               	movlw	1
 10814  001BC8  58DE               	subwfb	postinc2,w,c
 10815  001BCA  A0D8               	btfss	status,0,c
 10816  001BCC  D008               	goto	i2l3351
 10817  001BCE  EE20 F002          	lfsr	2,2
 10818  001BD2  5001               	movf	button_timer_interrupt@bt,w,c
 10819  001BD4  26D9               	addwf	fsr2l,f,c
 10820  001BD6  5002               	movf	button_timer_interrupt@bt+1,w,c
 10821  001BD8  22DA               	addwfc	fsr2h,f,c
 10822  001BDA  8CDF               	bsf	indf2,6,c
 10823  001BDC  D072               	goto	i2l3375
 10824  001BDE                     i2l3351:
 10825                           
 10826                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 250)bt->flag.long_hold_5 = 1;
 10827  001BDE  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10828  001BE2  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10829  001BE6  0E01               	movlw	1
 10830  001BE8  50DB               	movf	plusw2,w,c
 10831  001BEA  E104               	bnz	i2u289_40
 10832  001BEC  0EFA               	movlw	250
 10833  001BEE  5CDE               	subwf	postinc2,w,c
 10834  001BF0  A0D8               	btfss	status,0,c
 10835  001BF2  D008               	goto	i2l3355
 10836  001BF4                     i2u289_40:
 10837  001BF4  EE20 F002          	lfsr	2,2
 10838  001BF8  5001               	movf	button_timer_interrupt@bt,w,c
 10839  001BFA  26D9               	addwf	fsr2l,f,c
 10840  001BFC  5002               	movf	button_timer_interrupt@bt+1,w,c
 10841  001BFE  22DA               	addwfc	fsr2h,f,c
 10842  001C00  8ADF               	bsf	indf2,5,c
 10843  001C02  D05F               	goto	i2l3375
 10844  001C04                     i2l3355:
 10845                           
 10846                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 200)bt->flag.long_hold_4 = 1;
 10847  001C04  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10848  001C08  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10849  001C0C  0E01               	movlw	1
 10850  001C0E  50DB               	movf	plusw2,w,c
 10851  001C10  E104               	bnz	i2u290_40
 10852  001C12  0EC8               	movlw	200
 10853  001C14  5CDE               	subwf	postinc2,w,c
 10854  001C16  A0D8               	btfss	status,0,c
 10855  001C18  D008               	goto	i2l3359
 10856  001C1A                     i2u290_40:
 10857  001C1A  EE20 F002          	lfsr	2,2
 10858  001C1E  5001               	movf	button_timer_interrupt@bt,w,c
 10859  001C20  26D9               	addwf	fsr2l,f,c
 10860  001C22  5002               	movf	button_timer_interrupt@bt+1,w,c
 10861  001C24  22DA               	addwfc	fsr2h,f,c
 10862  001C26  88DF               	bsf	indf2,4,c
 10863  001C28  D04C               	goto	i2l3375
 10864  001C2A                     i2l3359:
 10865                           
 10866                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 10867  001C2A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10868  001C2E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10869  001C32  0E01               	movlw	1
 10870  001C34  50DB               	movf	plusw2,w,c
 10871  001C36  E104               	bnz	i2u291_40
 10872  001C38  0E96               	movlw	150
 10873  001C3A  5CDE               	subwf	postinc2,w,c
 10874  001C3C  A0D8               	btfss	status,0,c
 10875  001C3E  D008               	goto	i2l3363
 10876  001C40                     i2u291_40:
 10877  001C40  EE20 F002          	lfsr	2,2
 10878  001C44  5001               	movf	button_timer_interrupt@bt,w,c
 10879  001C46  26D9               	addwf	fsr2l,f,c
 10880  001C48  5002               	movf	button_timer_interrupt@bt+1,w,c
 10881  001C4A  22DA               	addwfc	fsr2h,f,c
 10882  001C4C  86DF               	bsf	indf2,3,c
 10883  001C4E  D039               	goto	i2l3375
 10884  001C50                     i2l3363:
 10885                           
 10886                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 10887  001C50  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10888  001C54  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10889  001C58  0E01               	movlw	1
 10890  001C5A  50DB               	movf	plusw2,w,c
 10891  001C5C  E104               	bnz	i2u292_40
 10892  001C5E  0E3C               	movlw	60
 10893  001C60  5CDE               	subwf	postinc2,w,c
 10894  001C62  A0D8               	btfss	status,0,c
 10895  001C64  D008               	goto	i2l3367
 10896  001C66                     i2u292_40:
 10897  001C66  EE20 F002          	lfsr	2,2
 10898  001C6A  5001               	movf	button_timer_interrupt@bt,w,c
 10899  001C6C  26D9               	addwf	fsr2l,f,c
 10900  001C6E  5002               	movf	button_timer_interrupt@bt+1,w,c
 10901  001C70  22DA               	addwfc	fsr2h,f,c
 10902  001C72  84DF               	bsf	indf2,2,c
 10903  001C74  D026               	goto	i2l3375
 10904  001C76                     i2l3367:
 10905                           
 10906                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 10907  001C76  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10908  001C7A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10909  001C7E  0E01               	movlw	1
 10910  001C80  50DB               	movf	plusw2,w,c
 10911  001C82  E104               	bnz	i2u293_40
 10912  001C84  0E10               	movlw	16
 10913  001C86  5CDE               	subwf	postinc2,w,c
 10914  001C88  A0D8               	btfss	status,0,c
 10915  001C8A  D008               	goto	i2l3371
 10916  001C8C                     i2u293_40:
 10917  001C8C  EE20 F002          	lfsr	2,2
 10918  001C90  5001               	movf	button_timer_interrupt@bt,w,c
 10919  001C92  26D9               	addwf	fsr2l,f,c
 10920  001C94  5002               	movf	button_timer_interrupt@bt+1,w,c
 10921  001C96  22DA               	addwfc	fsr2h,f,c
 10922  001C98  82DF               	bsf	indf2,1,c
 10923  001C9A  D013               	goto	i2l3375
 10924  001C9C                     i2l3371:
 10925                           
 10926                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 10927  001C9C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10928  001CA0  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10929  001CA4  0E01               	movlw	1
 10930  001CA6  50DB               	movf	plusw2,w,c
 10931  001CA8  E104               	bnz	i2u294_40
 10932  001CAA  0E02               	movlw	2
 10933  001CAC  5CDE               	subwf	postinc2,w,c
 10934  001CAE  A0D8               	btfss	status,0,c
 10935  001CB0  D008               	goto	i2l3375
 10936  001CB2                     i2u294_40:
 10937  001CB2  EE20 F002          	lfsr	2,2
 10938  001CB6  5001               	movf	button_timer_interrupt@bt,w,c
 10939  001CB8  26D9               	addwf	fsr2l,f,c
 10940  001CBA  5002               	movf	button_timer_interrupt@bt+1,w,c
 10941  001CBC  22DA               	addwfc	fsr2h,f,c
 10942  001CBE  80DF               	bsf	indf2,0,c
 10943  001CC0  D000               	goto	i2l3375
 10944  001CC2                     i2l3375:
 10945                           
 10946                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
 10947  001CC2  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10948  001CC6  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10949  001CCA  0E00               	movlw	0
 10950  001CCC  6EDE               	movwf	postinc2,c
 10951  001CCE  0E00               	movlw	0
 10952  001CD0  6EDD               	movwf	postdec2,c
 10953                           
 10954                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
 10955  001CD2  EE20 F002          	lfsr	2,2
 10956  001CD6  5001               	movf	button_timer_interrupt@bt,w,c
 10957  001CD8  26D9               	addwf	fsr2l,f,c
 10958  001CDA  5002               	movf	button_timer_interrupt@bt+1,w,c
 10959  001CDC  22DA               	addwfc	fsr2h,f,c
 10960  001CDE  0EFF               	movlw	255
 10961  001CE0  16DE               	andwf	postinc2,f,c
 10962  001CE2  0E00               	movlw	0
 10963  001CE4  16DD               	andwf	postdec2,f,c
 10964  001CE6  0012               	return	
 10965  001CE8  0012               	return		;funcret
 10966  001CEA                     __end_of_button_timer_interrupt:
 10967                           	opt stack 0
 10968                           pclatu	equ	0xFFB
 10969                           pclath	equ	0xFFA
 10970                           tblptru	equ	0xFF8
 10971                           tblptrh	equ	0xFF7
 10972                           tblptrl	equ	0xFF6
 10973                           tablat	equ	0xFF5
 10974                           prodh	equ	0xFF4
 10975                           prodl	equ	0xFF3
 10976                           intcon	equ	0xFF2
 10977                           postinc0	equ	0xFEE
 10978                           fsr0h	equ	0xFEA
 10979                           fsr0l	equ	0xFE9
 10980                           wreg	equ	0xFE8
 10981                           indf1	equ	0xFE7
 10982                           postinc1	equ	0xFE6
 10983                           postdec1	equ	0xFE5
 10984                           fsr1h	equ	0xFE2
 10985                           fsr1l	equ	0xFE1
 10986                           indf2	equ	0xFDF
 10987                           postinc2	equ	0xFDE
 10988                           postdec2	equ	0xFDD
 10989                           plusw2	equ	0xFDB
 10990                           fsr2h	equ	0xFDA
 10991                           fsr2l	equ	0xFD9
 10992                           status	equ	0xFD8
 10993                           pclatu	equ	0xFFB
 10994                           pclath	equ	0xFFA
 10995                           tblptru	equ	0xFF8
 10996                           tblptrh	equ	0xFF7
 10997                           tblptrl	equ	0xFF6
 10998                           tablat	equ	0xFF5
 10999                           prodh	equ	0xFF4
 11000                           prodl	equ	0xFF3
 11001                           intcon	equ	0xFF2
 11002                           postinc0	equ	0xFEE
 11003                           fsr0h	equ	0xFEA
 11004                           fsr0l	equ	0xFE9
 11005                           wreg	equ	0xFE8
 11006                           indf1	equ	0xFE7
 11007                           postinc1	equ	0xFE6
 11008                           postdec1	equ	0xFE5
 11009                           fsr1h	equ	0xFE2
 11010                           fsr1l	equ	0xFE1
 11011                           indf2	equ	0xFDF
 11012                           postinc2	equ	0xFDE
 11013                           postdec2	equ	0xFDD
 11014                           plusw2	equ	0xFDB
 11015                           fsr2h	equ	0xFDA
 11016                           fsr2l	equ	0xFD9
 11017                           status	equ	0xFD8
 11018                           
 11019                           	psect	rparam
 11020  0000                     pclatu	equ	0xFFB
 11021                           pclath	equ	0xFFA
 11022                           tblptru	equ	0xFF8
 11023                           tblptrh	equ	0xFF7
 11024                           tblptrl	equ	0xFF6
 11025                           tablat	equ	0xFF5
 11026                           prodh	equ	0xFF4
 11027                           prodl	equ	0xFF3
 11028                           intcon	equ	0xFF2
 11029                           postinc0	equ	0xFEE
 11030                           fsr0h	equ	0xFEA
 11031                           fsr0l	equ	0xFE9
 11032                           wreg	equ	0xFE8
 11033                           indf1	equ	0xFE7
 11034                           postinc1	equ	0xFE6
 11035                           postdec1	equ	0xFE5
 11036                           fsr1h	equ	0xFE2
 11037                           fsr1l	equ	0xFE1
 11038                           indf2	equ	0xFDF
 11039                           postinc2	equ	0xFDE
 11040                           postdec2	equ	0xFDD
 11041                           plusw2	equ	0xFDB
 11042                           fsr2h	equ	0xFDA
 11043                           fsr2l	equ	0xFD9
 11044                           status	equ	0xFD8


Data Sizes:
    Strings     143
    Constant    0
    Data        45
    BSS         552
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     32      63
    BANK0           160     78     144
    BANK1           256    250     250
    BANK2           256    250     250
    BANK3           256    250     250
    BANK4           256    250     250
    BANK5           256      0     250
    BANK6           256      0     250
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    RTCC_from_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_RTCC@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    caltime_to_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    weekday_char_full	PTR const unsigned char [7] size(2) Largest target is 10
		 -> STR_14(CODE[9]), STR_13(CODE[7]), STR_12(CODE[9]), STR_11(CODE[10]), 
		 -> STR_10(CODE[8]), STR_9(CODE[7]), STR_8(CODE[7]), 

    weekday_char	PTR const unsigned char [7] size(2) Largest target is 4
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> sw_B(COMRAM[4]), sw_G(COMRAM[4]), sw_R(COMRAM[4]), 

    strcmp@str2	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_39(CODE[2]), STR_38(CODE[2]), STR_37(CODE[2]), STR_36(CODE[2]), 
		 -> STR_35(CODE[4]), STR_34(CODE[5]), STR_33(CODE[4]), STR_32(CODE[2]), 
		 -> STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[2]), STR_28(CODE[2]), 
		 -> STR_27(CODE[2]), STR_26(CODE[3]), 

    strcmp@str1	PTR const unsigned char  size(2) Largest target is 250
		 -> rx_operation@opland1(BANK4[250]), rx_operation@opcode(BANK2[250]), 

    atoi@str	PTR const unsigned char  size(2) Largest target is 250
		 -> rx_operation@opland2(BANK3[250]), 

    utoa@str	PTR unsigned char  size(2) Largest target is 10
		 -> tx_send_dec@str(BANK0[10]), 

    tx_sends@asciicode	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_40(CODE[4]), STR_25(CODE[2]), STR_24(CODE[2]), STR_23(CODE[3]), 
		 -> STR_22(CODE[3]), STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[3]), 
		 -> tx_send_dec@str(BANK0[10]), cursor_up(COMRAM[4]), STR_18(CODE[3]), STR_17(CODE[6]), 
		 -> STR_16(CODE[6]), STR_15(CODE[3]), cursor_right(BANK0[4]), cursor_down(BANK0[4]), 
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> rx_buf(COMRAM[5]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> rx_buf(COMRAM[5]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> rx_buf(COMRAM[5]), tx_buf(COMRAM[5]), 

    ringbuf_push@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_push@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> rx_buf(COMRAM[5]), tx_buf(COMRAM[5]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> rx_buf(COMRAM[5]), tx_buf(COMRAM[5]), 

    S790ringbuf$buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> rx_buf(COMRAM[5]), tx_buf(COMRAM[5]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_judgement
    _judgement->i2_tx_sends
    i2_tx_sends->i2_ringbuf_push
    i2_tx_send->i2_ringbuf_push
    i2_ringbuf_push->i2_ringbuf_num
    _ringbuf_backspace->i2_ringbuf_num
    _interrupt_TXIF->i2_ringbuf_pop
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _main->_RTCC_from_epoch
    _rx_operation->_RTCC_from_caltime
    _ringbuf_pop->_ringbuf_num
    _RTCC_from_caltime->_caltime_to_epoch
    _PWM_set->___lwdiv
    _tx_send_time->_tx_send_dec
    _tx_send_dec->_utoa
    _utoa->___lwdiv
    ___lwdiv->___wmul
    _tx_sends->_ringbuf_push
    _tx_send->_ringbuf_push
    _ringbuf_push->_ringbuf_num
    _main_init->_ringbuf_init
    _RTCC_loop->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _RTCC_to_caltime->_x_to_d
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _month_length->___awmod
    _get_quot_rem->___lldiv
    ___lmul->_month_length
    ___lldiv->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_rx_operation

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_rx_operation

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_rx_operation

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_rx_operation

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0   71571
                                             65 BANK0     13    13      0
                                _ADC
                            _PWM_set
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_loop
                            ___lldiv
                            ___llmod
                             ___lmul
                          _main_init
                         _print_time
                       _rx_operation
                           _tx_sends
 ---------------------------------------------------------------------------------
 (1) _rx_operation                                      1003  1003      0   17286
                                             43 BANK0      3     3      0
                                              0 BANK1    250   250      0
                                              0 BANK2    250   250      0
                                              0 BANK3    250   250      0
                                              0 BANK4    250   250      0
                            _PWM_set
                  _RTCC_from_caltime
                               _atoi
                        _ringbuf_pop
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     1      4    3166
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          6     4      2    1540
                                              4 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 4     2      2    1207
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _RTCC_from_caltime                                    4     0      4    6635
                                             39 BANK0      4     0      4
                    _caltime_to_RTCC
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (2) _PWM_set                                              3     1      2    2911
                                             13 BANK0      3     1      2
                            ___lwdiv
                             ___wmul
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     786
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _print_time                                           2     2      0   19878
                                             33 BANK0      2     2      0
                            _tx_send
                       _tx_send_time
                           _tx_sends
 ---------------------------------------------------------------------------------
 (2) _tx_send_time                                         0     0      0   13501
                            _tx_send
                        _tx_send_dec
                           _tx_sends
 ---------------------------------------------------------------------------------
 (3) _tx_send_dec                                         12    11      1    7328
                                             21 BANK0     12    11      1
                           _tx_sends
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 8     3      5    2327
                                             13 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     648
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1073
                                              6 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _tx_sends                                             2     0      2    4125
                                             12 BANK0      2     0      2
                       _ringbuf_push
 ---------------------------------------------------------------------------------
 (3) _tx_send                                              1     1      0    2048
                                             12 BANK0      1     1      0
                       _ringbuf_push
 ---------------------------------------------------------------------------------
 (2) _ringbuf_push                                         8     5      3    2017
                                              4 BANK0      8     5      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (3) _ringbuf_num                                          4     2      2     908
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    1100
                           _ADC_init
                           _OSC_init
                           _PWM_init
                          _RTCC_init
                          _UART_init
                       _ringbuf_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     197
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         5     0      5     810
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     440
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            0     0      0    6505
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (2) _RTCC_from_RTCC                                       4     0      4    6505
                                             39 BANK0      4     0      4
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (3) _caltime_to_epoch                                    15    11      4    5194
                                             24 BANK0     15    11      4
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (3) _RTCC_to_caltime                                      3     1      2     386
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (4) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_from_epoch                                      4     0      4    9169
                                             61 BANK0      4     0      4
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (2) _epoch_to_caltime                                    16    12      4    7312
                                             45 BANK0     16    12      4
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _month_length                                         6     5      1    2075
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     849
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _get_quot_rem                                         8     4      4    4054
                                             37 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    2168
                                             12 BANK0     12     4      8
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     865
                                             24 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _caltime_to_RTCC                                      2     0      2    1140
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (4) _d_to_x                                               1     1      0     715
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     653
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 15    15      0    6475
                                             17 COMRAM    15    15      0
             _button_timer_interrupt
                     _interrupt_TXIF
                          _judgement
 ---------------------------------------------------------------------------------
 (8) _judgement                                            3     3      0    4125
                                             14 COMRAM     3     3      0
                  _ringbuf_backspace
                     _ringbuf_delete
                      i2_ringbuf_num
                     i2_ringbuf_push
                          i2_tx_send
                         i2_tx_sends
 ---------------------------------------------------------------------------------
 (9) i2_tx_sends                                           2     0      2    1073
                                             12 COMRAM     2     0      2
                     i2_ringbuf_push
 ---------------------------------------------------------------------------------
 (9) i2_tx_send                                            1     1      0     868
                                             12 COMRAM     1     1      0
                     i2_ringbuf_push
 ---------------------------------------------------------------------------------
 (10) i2_ringbuf_push                                      8     5      3     846
                                              4 COMRAM     8     5      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (9) _ringbuf_delete                                       2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _ringbuf_backspace                                    3     1      2     587
                                              4 COMRAM     3     1      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (8) _interrupt_TXIF                                       0     0      0     979
                      i2_ringbuf_num
                      i2_ringbuf_pop
 ---------------------------------------------------------------------------------
 (9) i2_ringbuf_pop                                        6     4      2     591
                                              4 COMRAM     6     4      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (11) i2_ringbuf_num                                       4     2      2     388
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _button_timer_interrupt                               5     2      3    1348
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _PWM_set
     ___lwdiv
       ___wmul (ARG)
     ___wmul
     _atoi (ARG)
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
           ___lmul (ARG)
             _month_length (ARG)
               ___awmod
         ___lmul
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_loop
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   ___lldiv
     ___lmul (ARG)
       _month_length (ARG)
         ___awmod
   ___llmod
   ___lmul
     _month_length (ARG)
       ___awmod
   _main_init
     _ADC_init
     _OSC_init
     _PWM_init
     _RTCC_init
     _UART_init
     _ringbuf_init
     _timer1_init
     _timer3_init
   _print_time
     _tx_send
       _ringbuf_push
         _ringbuf_num
     _tx_send_time
       _tx_send
         _ringbuf_push
           _ringbuf_num
       _tx_send_dec
         _tx_sends
           _ringbuf_push
             _ringbuf_num
         _utoa
           ___lwdiv
             ___wmul (ARG)
           ___lwmod
       _tx_sends
         _ringbuf_push
           _ringbuf_num
     _tx_sends
       _ringbuf_push
         _ringbuf_num
   _rx_operation
     _PWM_set
       ___lwdiv
         ___wmul (ARG)
       ___wmul
       _atoi (ARG)
     _RTCC_from_caltime
       _caltime_to_RTCC
         _d_to_x
           ___awdiv
       _caltime_to_epoch
         ___lmul
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     _atoi
     _ringbuf_pop
       _ringbuf_num
     _strcmp
   _tx_sends
     _ringbuf_push
       _ringbuf_num

 _ISR (ROOT)
   _button_timer_interrupt
   _interrupt_TXIF
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
   _judgement
     _ringbuf_backspace
       i2_ringbuf_num
     _ringbuf_delete
     i2_ringbuf_num
     i2_ringbuf_push
       i2_ringbuf_num
     i2_tx_send
       i2_ringbuf_push
         i2_ringbuf_num
     i2_tx_sends
       i2_ringbuf_push
         i2_ringbuf_num

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      FA      18       97.7%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      FA      16       97.7%
BITBANK4           100      0       0      13        0.0%
BANK4              100     FA      FA      14       97.7%
BITBANK3           100      0       0      11        0.0%
BANK3              100     FA      FA      12       97.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100     FA      FA      10       97.7%
BITBANK1           100      0       0       7        0.0%
BANK1              100     FA      FA       8       97.7%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4E      90       5       90.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     20      3F       1       66.3%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     6AB       6        0.0%
DATA                 0      0     6AB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Jun 03 11:51:44 2015

          __size_of_rx_operation 051E                               _d1 00D7  
                   ___awdiv@sign 0065              ___wmul@multiplicand 0062  
         __end_of_interrupt_TXIF 346C                ??_RTCC_from_epoch 0021  
                   __CFG_CP0$OFF 000000                              l158 3346  
                            l175 34BC                              _ADC 349C  
                            l506 2830                              l267 2D50  
                            l365 1DD0                              l591 16C6  
                            l568 12DC                              l587 151A  
                            _GIE 007F97                              _PR2 000FCB  
                            _ISR 0008                    ?_get_quot_rem 0085  
             caltime_to_epoch@ep 007A               caltime_to_epoch@ct 0078  
              _RTCC_from_caltime 354A                     ___awmod@sign 0065  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAD               ?_RTCC_from_caltime 0087  
                           ?_ADC 0060                             ?_ISR 0001  
                           l1138 2EDE                             l1075 274A  
                           l1148 3134                             l1085 2C16  
                           l3117 3484                             l4007 2C78  
                           l4111 2E9C                             l4041 2482  
                           l4201 26D6                             l4043 2490  
                           l4035 2464                             l4211 2736  
                           l4203 26E0                             l4019 2262  
                           l4107 2E84                             l4131 30FE  
                           l5011 165C                             l4061 24F2  
                           l4053 24CC                             l4045 249A  
                           l4029 244C                             l4141 3140  
                           l4109 2E92                             l4301 32B0  
                           l5021 1684                             l4119 2ECE  
                           l4135 3124                             l4127 30E6  
                           l4151 2D7E                             l5007 15DE  
                           l4057 24DC                             l4081 2912  
                           l4073 28EC                             l4313 334A  
                           l4145 317E                             l4129 30F4  
                           l5041 16E8                             l5025 1698  
                           l4083 2920                             l4411 2A80  
                           l5043 16EE                             l5019 167E  
                           l4085 292A                             l4093 2960  
                           l4077 28FE                             l4149 2D5E  
                           l4405 2A34                             l4413 2A8E  
                           l5053 1720                             l5061 173E  
                           l5029 16AC                             l4263 17F6  
                           l4159 2DC0                             l5047 1708  
                           l4185 2FF6                             l4097 2976  
                           l4089 2950                             l4281 1886  
                           l4265 17FC                             l4417 2AB6  
                           l5057 172C                             l4179 2302  
                           l4275 1860                             l4189 301E  
                           l4453 1E42                             l4285 18EC  
                           l4269 1806                             l4277 1866  
                           l4541 256A                             l4533 2534  
                           l4381 2B7E                             l5077 17C8  
                           l5069 1764                             l4199 26C4  
                           l4455 1E48                             l4551 25AC  
                           l4375 2B78                             l4561 214E  
                           l4721 2F56                             l4705 2F22  
                           l4545 25A0                             l4537 2560  
                           l4459 1E52                             l4715 2F38  
                           l4395 324E                             l4387 3216  
                           l4803 1376                             l4717 2F40  
                           l4709 2F2C                             l4397 3256  
                           l4821 1460                             l4741 1044  
                           l4733 0FDC                             l4559 2146  
                           l4815 1412                             l4727 0FAA  
                           l4809 13C4                             l4761 1110  
                           l4771 11C6                             l4755 10DE  
                           l4747 1076                             l4861 2BA0  
                           l4863 2BB2                             l4695 2EF6  
                           l4783 126E                             l4775 11FE  
             __CFG_WPFP$PAGE_127 000000                             l4865 2BBC  
                           l4793 1300                             l4699 2F0C  
                           l4787 12A6                             l4779 1236  
                           l4869 2C02                             l4799 134C  
                           l4989 150A                             STR_1 0F59  
                           STR_2 0F55                             STR_3 0F4D  
                           STR_4 0F49                             STR_5 0F61  
                           STR_6 0F51                             STR_7 0F5D  
                           STR_8 0F2C                             STR_9 0F25  
                           u4200 316E                             u4210 31A0  
                           u4300 22F4                             u4310 22F6  
                           u4207 3164                             u4320 234E  
                           u4217 3196                             u4330 2350  
                           u4260 22AC                             u4270 22AE  
                           u4280 22DE                             u5240 1590  
                           u5360 1762                             u4465 3602  
                           u4298 22E2                             u4810 3378  
                           u4466 3604                             u5390 17D6  
                           u5375 1772                             u4816 337A  
            ??_RTCC_from_caltime 0021                             _atoi 320E  
                           _main 14B0         button_timer_interrupt@bt 0001  
                           _sw_B 0030                             _sw_G 0034  
                           _sw_R 0038                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                             _utoa 2D4E  
         __CFG_DSWDTOSC$T1OSCREF 000000                     _rx_operation 0F92  
                           pclat 000FFA                      _tx_send_dec 326C  
                           prodh 000FF4                             prodl 000FF3  
                __end_of_PWM_set 25CC                             start 00F0  
               __end_of_ADC_init 3612                    __CFG_IESO$OFF 000000  
                   ___param_bank 000010            __size_of_tx_send_time 0112  
          __end_ofi2_ringbuf_pop 2D4E            __end_ofi2_ringbuf_num 2FE2  
                          ??_ADC 0062                            ADC@ch 0063  
                  ADC_init@p_ref 0060                            ??_ISR 0012  
              _weekday_char_full 00BC                ??_RTCC_to_caltime 0021  
                  __CFG_PLLDIV$2 000000                     _BAUDCON1bits 000F7E  
                ?_interrupt_TXIF 0001                       i2_tx_sends 31AA  
                 i2_ringbuf_push 275C        __end_of_RTCC_from_caltime 356C  
                          ?_atoi 0060                            ?_main 0001  
                 ??_get_quot_rem 0021                  __end_of___awdiv 24FE  
                          _ADRES 000FC3                            STR_10 0F1D  
                          STR_11 0F01                            STR_20 0F7E  
                          STR_12 0F14                            STR_21 0F7E  
                          STR_13 0F33                            STR_30 0F8C  
                          STR_22 0F76                            STR_14 0F0B  
                          STR_31 0F8E                            STR_23 0F73  
                          STR_15 0F6D                            STR_32 0F7A  
                          STR_24 0F7C                            STR_40 0F45  
                          STR_16 0F3A                            STR_17 0F3A  
                          STR_25 0F71                            STR_33 0F69  
                          STR_18 0F6D                            STR_26 0F79  
                          STR_34 0F40                            STR_27 0F2A  
                          STR_19 0F70                            STR_35 0F65  
                          STR_36 0F86                            STR_28 0F84  
                __end_of___awmod 2982                            STR_29 0F8A  
                          STR_37 0F82                            STR_38 0F80  
                          STR_39 0F88                  __end_of___lldiv 275C  
                          ?_utoa 006D                  ___awdiv@divisor 0062  
                __end_of___llmod 2C28                            _LATB2 007C52  
                __end_of___lwdiv 2EE8                  __end_of___lwmod 313E  
                          i2l216 3466                    __CFG_WDTEN$ON 000000  
                          i2l503 00B6                            i2l292 1A90  
                          i2l293 1AB2                            i2l294 1AD4  
                          i2l295 1AF4                            i2l296 1B14  
                          i2l297 1B34                            i2l298 1B54  
                          i2l299 1B74                  ___awdiv@counter 0064  
                          _TMR1H 000FCF                            _RPOR3 000EC3  
                          _RPOR4 000EC4                            _RPOR5 000EC5  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94              ___lmul@multiplicand 0070  
                 __CFG_FCMEN$OFF 000000             caltime_to_epoch@year 0080  
             __size_of_UART_init 0020            ringbuf_push@asciicode 0066  
                          _colon 0021                 __end_of_OSC_init 3670  
             __size_of_RTCC_init 0030               __size_of_RTCC_loop 004C  
               ringbuf_delete@rb 0001                            main@i 00AC  
                          main@n 00EF                            tablat 000FF5  
                          plusw2 000FDB                 __end_of_PWM_init 28CE  
     __size_of_ringbuf_backspace 0058                     _tx_send_time 2082  
                          utoa@d 0072                            utoa@v 0073  
                          status 000FD8                  __end_of_tx_send 364C  
              month_length@month 0066                  __initialization 305C  
                   __end_of_atoi 326C                     __end_of_main 17DC  
                   __end_of_utoa 2DDA              ringbuf_init@bufsize 0064  
               RTCC_from_RTCC@ep 0089                 RTCC_from_RTCC@ct 0087  
         __end_ofi2_ringbuf_push 2816                    print_time@row 0081  
                         ??_atoi 0062                           ??_main 00A1  
                         ??_utoa 0021                    __activetblptr 000003  
             __size_ofi2_tx_send 0016                           _ADCON0 000FC2  
                         _ADCON1 000FC1                 ___llmod@dividend 0060  
                         _CCPR1L 000FBB                           _CCPR2L 000FB5  
                         _CCPR3L 000F16                           _CCPR4L 000F13  
                         _EECON2 000FA7                           _ANCON0 000F48  
                         _ANCON1 000F49                 ___awdiv@dividend 0060  
                      ??_PWM_set 0021                           i2l3061 32F8  
                         i2l3303 31E2                           i2l3351 1BDE  
                         i2l3343 1B96                           i2l3521 1EFE  
                         i2l3371 1C9C                           i2l3363 1C50  
                         i2l3355 1C04                           i2l3347 1BBA  
                         i2l3283 2D44                           i2l3523 1F18  
                         i2l3533 1F58                           i2l3517 1EEE  
                         i2l3367 1C76                           i2l3359 1C2A  
                         i2l3375 1CC2                           i2l3543 1F88  
                         i2l3289 2D48                           i2l3537 1F72  
                         i2l3529 1F34                           i2l3299 31AC  
                         i2l3571 202A                           i2l3563 2004  
                         i2l3547 1FAC                           i2l3539 1F78  
                         i2l3557 1FDC                           i2l3583 205E  
                         i2l3575 2034                           i2l3567 200E  
                         i2l3559 1FF8                           i2l3577 204E  
                         i2l2867 2FAA                           i2l3579 2054  
                         i2l2973 2802                           i2l3865 0066  
                         i2l3857 0056                           _RCREG1 000FAF  
                         _RTCCAL 000F3E                           _SPBRG1 000FB0  
                 __CFG_WPCFG$OFF 000000                           _TXREG1 000FAE  
                i2ringbuf_pop@rb 0005                  i2ringbuf_num@rb 0001  
                 __CFG_WPDIS$OFF 000000               epoch_to_caltime@ep 008F  
             epoch_to_caltime@ct 008D                   __CFG_XINST$OFF 000000  
              ?_epoch_to_caltime 008D                     _CCPTMRS0bits 000F52  
                   _CCPTMRS1bits 000F51            caltime_to_epoch@epoch 0082  
                   ?_ringbuf_pop 0064                     ?_ringbuf_num 0060  
          caltime_to_epoch@month 0086                           ___lmul 2FE2  
                _caltime_to_RTCC 25CC                           ___wmul 3402  
             ??_epoch_to_caltime 0091                __end_of_UART_init 35F2  
                      ??___awdiv 0021                        ??___awmod 0021  
                         _d_to_x 34F6                        ??___lldiv 0021  
                      ??___llmod 0021                __end_of_RTCC_init 349C  
                   ?_timer1_init 0060                        ??___lwdiv 0021  
              __end_of_RTCC_loop 33BA                        ??___lwmod 0021  
                   ?_timer3_init 0001                  ?i2_ringbuf_push 0005  
                         clear_0 3062                           clear_1 306E  
                         clear_2 307A                           clear_3 3086  
                __CFG_CLKOEC$OFF 000000                 ___awdiv@quotient 0066  
                ___awmod@divisor 0062                      ?i2_tx_sends 000D  
                ___awmod@counter 0064                           _x_to_d 358E  
                         _rx_buf 0026       __size_of_RTCC_from_caltime 0022  
                         _tx_buf 002B                           _strcmp 2A32  
      __size_of_caltime_to_epoch 028C                    main@prev_scan 00DA  
                   __pdataCOMRAM 003C                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                        ?_ADC_init 0001  
                      ??_tx_send 0021                 __end_of_tx_sends 31AA  
           __CFG_LS48MHZ$SYS48X8 000000                       __accesstop 0060  
        __end_of__initialization 30CC             __end_of_get_quot_rem 242E  
                  ___rparam_used 000001                  _RTCC_from_epoch 35B0  
           rx_operation@cnt_char 008C                __end_ofi2_tx_send 3662  
           __CFG_WPEND$PAGE_WPFP 000000                   __pcstackCOMRAM 0001  
                   __pidataBANK0 3520                        ?_OSC_init 0001  
                __CFG_DSWDTPS$G2 000000                        ?_PWM_init 0001  
        __size_of_ringbuf_delete 001E          i2ringbuf_push@asciicode 0007  
                     ??_ADC_init 0021       caltime_to_epoch@month_2102 0081  
             __size_of_main_init 008C                       __pbssBANK0 00D7  
                     __pbssBANK5 0500                       __pbssBANK6 0600  
                 judgement@ascii 0010              __size_ofi2_tx_sends 0064  
        __end_of_caltime_to_RTCC 2696                  _RTCC_to_caltime 2982  
                   ?_tx_send_dec 0075                 ??_interrupt_TXIF 000B  
             __size_of_judgement 01A8                          ?___lmul 006C  
                        ?___wmul 0060                          ?_d_to_x 0001  
                     ??_OSC_init 0021                   ___lmul@product 0074  
                        ?_x_to_d 0001                          ?_strcmp 0060  
                     ??_PWM_init 0021               __CFG_OSC$INTOSCPLL 000000  
                __CFG_WDTPS$1024 000000                          _SPBRGH1 000F7F  
                        _RTCVALH 000F3B                          _RTCVALL 000F3A  
        __end_of_RTCC_from_epoch 35D2             timer1_init@prescaler 0062  
                        _PWM_set 24FE                 i2ringbuf_pop@ret 000A  
                   PWM_set@color 006F                 __CFG_CFGPLLEN$ON 000000  
       ??_button_timer_interrupt 0004                     PWM_set@value 006D  
               i2ringbuf_push@rb 0005                    ?_month_length 0066  
            epoch_to_caltime@day 0095                RTCC_from_epoch@ep 009F  
              RTCC_from_epoch@ct 009D              epoch_to_caltime@num 0099  
                        __Hparam 0000                          __Lparam 0000  
                  ?_ringbuf_init 0060                          ___awdiv 242E  
                __size_of___lmul 007A                          ___awmod 28CE  
                  ?_ringbuf_push 0064                          ___lldiv 2696  
                __size_of___wmul 0038                          ___llmod 2B84  
                     _light_mode 00E0                          ___lwdiv 2E66  
                        ___lwmod 30D2                  __size_of_d_to_x 002A  
                   __psmallconst 0F00             __size_of_ringbuf_pop 00A6  
           __size_of_ringbuf_num 0096                  __CFG_STVREN$OFF 000000  
              __end_of_main_init 2E66      epoch_to_caltime@month_cache 00CE  
                        __pcinit 305C                        ?_tx_sends 006C  
                        __ramtop 0F00             __size_of_timer1_init 0052  
                        __ptext0 14B0                          __ptext1 0F92  
                        __ptext2 2A32                          __ptext3 2ADE  
                        __ptext4 320E                          __ptext5 354A  
                        __ptext6 24FE                          __ptext7 3402  
                        __ptext8 2EE8                          __ptext9 2082  
           __size_of_timer3_init 002C                  __size_of_x_to_d 0022  
                      _T0CONbits 000FD5                     __size_of_ADC 002E  
               _time_change_flag 00E1                 _caltime_to_epoch 17DC  
                __size_of_strcmp 00AC                     __size_of_ISR 00E8  
                      _T1CONbits 000FCD          __size_of_RTCC_from_RTCC 0022  
                      _T2CONbits 000FCA                        _T3CONbits 000F79  
                 main@value_2506 00A6                 ___awmod@dividend 0060  
                      _T5CONbits 000F22                __end_of_judgement 2082  
                        atoi@ret 0063                          _rx_flag 0024  
                        atoi@str 0060          __end_of_RTCC_to_caltime 2A32  
                        _tx_send 3630            __size_of_get_quot_rem 00D6  
           end_of_initialization 30CC           __size_ofi2_ringbuf_pop 0090  
         __size_ofi2_ringbuf_num 007C                     _CTMUCONHbits 000FB3  
                   _CTMUCONLbits 000FB2                   ??_month_length 0067  
               ?_caltime_to_RTCC 0069                  ___lldiv@divisor 007C  
           timer3_init@prescaler 0061                  ___lldiv@counter 0084  
               ??i2_ringbuf_push 0008                   tx_send_dec@dec 0080  
                 tx_send_dec@str 0076                   ??_ringbuf_init 0021  
                 ??_ringbuf_push 0067                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                        utoa@str 006D                     ??i2_tx_sends 000F  
                     ??_tx_sends 0021                        _PORTAbits 000F80  
                      _UART_init 35D2                 __CFG_DSBOREN$OFF 000000  
                      _RTCC_init 346C                        _RTCC_loop 336E  
                   _display_flag 0022        epoch_to_caltime@day_cache 00DD  
                   _get_quot_rem 2358                       _print_time 2EE8  
                 _ringbuf_delete 3612                    rx_operation@i 008D  
      __size_of_epoch_to_caltime 01F0                 __CFG_CPUDIV$OSC1 000000  
            RTCC_from_caltime@ep 0089              RTCC_from_caltime@ct 0087  
              __size_of_ADC_init 0020                 ?_RTCC_from_epoch 009D  
__size_of_button_timer_interrupt 0282          timer1_init@clock_select 0060  
            i2tx_sends@asciicode 000D                      _CCP1CONbits 000FBA  
                    _CCP2CONbits 000FB4                 __CFG_IOL1WAY$OFF 000000  
             __end_ofi2_tx_sends 320E                      _CCP3CONbits 000F15  
                    _CCP4CONbits 000F12             __size_of_tx_send_dec 0058  
            __CFG_MSSP7B_EN$MSK7 000000                   ringbuf_init@rb 0060  
                    print_time@i 0082                        i2_tx_send 364C  
                 ringbuf_pop@ret 0069                    i2_ringbuf_pop 2CBE  
                  i2_ringbuf_num 2F66                   __end_of___lmul 305C  
                 __end_of___wmul 343A                   ringbuf_push@rb 0064  
                 __end_of_d_to_x 3520                    __pidataCOMRAM 3670  
         __end_of_ringbuf_delete 3630                       ?_UART_init 0001  
                     ?_RTCC_init 0001                __size_of_OSC_init 000E  
                     ?_RTCC_loop 0001                 __CFG_DSWDTEN$OFF 000000  
                 __end_of_x_to_d 35B0            epoch_to_caltime@month 0098  
                 __end_of_strcmp 2ADE              start_initialization 305C  
               month_length@year 006B                      __end_of_ADC 34CA  
                    __end_of_ISR 00F0                __size_of_PWM_init 00B8  
               ?_RTCC_to_caltime 0062                    ?_rx_operation 0001  
                ___llmod@divisor 0064                  ___llmod@counter 0068  
                       ??___lmul 0021                   ?i2_ringbuf_pop 0005  
                 ?i2_ringbuf_num 0001                         ??___wmul 0021  
                       ??_d_to_x 0021                       ?i2_tx_send 0001  
              __CFG_ADCSEL$BIT12 000000                      __pdataBANK0 00AE  
         _button_timer_interrupt 1A68                         ??_x_to_d 0060  
                ?_ringbuf_delete 0001                         ??_strcmp 0064  
           __end_of_month_length 2358                   _RTCC_from_RTCC 356C  
                    ?_print_time 0001                      __pbssCOMRAM 0021  
            RTCC_to_caltime@dumy 0064                    __pcstackBANK0 0060  
                  __pcstackBANK1 0100                    __pcstackBANK2 0200  
                  __pcstackBANK3 0300                    __pcstackBANK4 0400  
                    _caltime_now 00E3             __end_of_ringbuf_init 3402  
           __end_of_ringbuf_push 2278                 tx_send@asciicode 006C  
            rx_operation@opland1 0400              rx_operation@opland2 0300  
                     judgement@i 0011                         ?_PWM_set 006D  
                  ?_tx_send_time 0001                   ??_rx_operation 008B  
       __end_of_caltime_to_epoch 1A68                         ISR@ascii 0020  
               ___lwdiv@dividend 0066                        _edit_flag 0023  
                      __pintcode 0008                         ?___awdiv 0060  
                       ?___awmod 0060                         ?___lldiv 0078  
                       ?___llmod 0060                         ?___lwdiv 0066  
                       ?___lwmod 0060                     _cursor_right 00D3  
         __end_of_RTCC_from_RTCC 358E                      ??_UART_init 0021  
                    ??_RTCC_init 0021                      ??_RTCC_loop 0021  
                    __smallconst 0F00                __size_of_tx_sends 006C  
                      _epoch_now 00EA                        _main_init 2DDA  
               _epoch_to_caltime 1CEA             __CFG_RTCOSC$T1OSCREF 000000  
                       _ADC_init 35F2                      _PADCFG1bits 000F3C  
            ringbuf_backspace@rb 0005                 ___lwdiv@quotient 006B  
                       ?_tx_send 0001                        _cursor_up 003C  
                 ??_tx_send_time 0021                        d_to_x@dec 0068  
                       _CTMUCONH 000FB3                         _CTMUCONL 000FB2  
                      _judgement 1EDA                         _CTMUICON 000FB1  
       ringbuf_init@internal_buf 0062                   ___wmul@product 0064  
                       _IPR1bits 000F9F                         _IPR2bits 000FA2  
                       _PIE1bits 000F9D                         _PIE2bits 000FA0  
                       _IPR5bits 000F99                         _PIE5bits 000F91  
            __size_of_print_time 007E                  ??i2_ringbuf_pop 0007  
                ??i2_ringbuf_num 0003                         i2u270_40 31D6  
                       i2u270_47 31CC                         i2u271_40 3204  
                       i2u271_47 31FA                         _PIR1bits 000F9E  
                       i2u290_40 1C1A                         i2u291_40 1C40  
                       i2u371_40 007C                         _PIR2bits 000FA1  
                       i2u292_40 1C66                         i2u372_40 007E  
                       i2u293_40 1C8C                         i2u373_40 0094  
                       i2u294_40 1CB2                         i2u374_40 0096  
                       i2u375_40 00AC                         i2u376_40 00AE  
                       i2u289_40 1BF4                         _PIR5bits 000F98  
     epoch_to_caltime@year_cache 00E2                    ??_ringbuf_pop 0066  
                  ??_ringbuf_num 0062                         _UCFGbits 000F39  
                  ??_timer1_init 0061                      ??i2_tx_send 000D  
                      _time_sync 0025                    ??_timer3_init 0060  
                      main@_2505 00EE                         _OSC_init 3662  
                ?_RTCC_from_RTCC 0087                       _ADCON0bits 000FC2  
                     _ADCON1bits 000FC1                ___wmul@multiplier 0060  
               __CFG_SOSCSEL$LOW 000000                         _PWM_init 2816  
 button_timer_interrupt@sw_value 0003          __size_of_interrupt_TXIF 0032  
                     ?_main_init 0001                        main@value 00A5  
                  ringbuf_pop@rb 0064                    ringbuf_num@rb 0060  
              ___lmul@multiplier 006C                      _INTCON2bits 000FF1  
                      copy_data0 30A0                        copy_data1 30C0  
           epoch_to_caltime@year 0097                       ?_judgement 0001  
               __size_of_PWM_set 00CE                       _CCPR1Lbits 000FBB  
                     _CCPR2Lbits 000FB5                       _CCPR3Lbits 000F16  
                     _CCPR4Lbits 000F13                         __Hrparam 0000  
                       __Lrparam 0000            __size_of_month_length 00E0  
       __size_of_caltime_to_RTCC 00CA                 __size_of___awdiv 00D0  
               __size_of___awmod 00B4                 __size_of___lldiv 00C6  
               __size_of___llmod 00A4                       utoa@digits 0071  
               __size_of___lwdiv 0082                 __size_of___lwmod 006C  
              tx_sends@asciicode 006C              __end_of_ringbuf_pop 2B84  
            __end_of_ringbuf_num 2CBE             __end_of_rx_operation 14B0  
             rx_operation@opcode 0200            __size_of_ringbuf_init 0048  
            __end_of_timer1_init 336E              __end_of_timer3_init 34F6  
          __size_of_ringbuf_push 00E4                  ___lwdiv@divisor 0068  
                ___lwdiv@counter 006A                         __ptext10 326C  
                       __ptext11 2D4E                         __ptext20 331C  
                       __ptext12 30D2                         __ptext21 33BA  
                       __ptext13 2E66                         __ptext30 17DC  
                       __ptext22 35D2                         __ptext14 313E  
                       __ptext31 2982                         __ptext23 346C  
                       __ptext15 3630                         __ptext40 25CC  
                       __ptext32 358E                         __ptext24 2816  
                       __ptext16 2194                         __ptext41 34F6  
                       __ptext33 35B0                         __ptext25 3662  
                       __ptext17 2C28                         __ptext50 32C4  
                       __ptext42 242E                         __ptext34 1CEA  
                       __ptext26 35F2                         __ptext18 2DDA  
                       __ptext51 343A                         __ptext43 349C  
                       __ptext35 2278                         __ptext27 2B84  
                       __ptext19 34CA                         __ptext52 2CBE  
                       __ptext36 28CE                         __ptext28 336E  
                       __ptext53 2F66                         __ptext45 1EDA  
                       __ptext37 2358                         __ptext29 356C  
                       __ptext54 1A68                         __ptext46 31AA  
                       __ptext38 2FE2                         __ptext47 364C  
                       __ptext39 2696                         __ptext48 275C  
                       __ptext49 3612                      _cursor_left 00CA  
                    _cursor_down 00CF                       PWM_init@PR 0060  
                     strcmp@str1 0060                       strcmp@str2 0062  
          RTCC_loop@prev_halfsec 00DF                 __size_of_tx_send 001C  
                  __size_of_atoi 005E                    __size_of_main 032C  
                  ??_tx_send_dec 0021                    __size_of_utoa 008C  
                   _month_length 2278         __size_of_RTCC_from_epoch 0022  
               ??_ringbuf_delete 0003          ?_button_timer_interrupt 0001  
                   _ringbuf_init 33BA                     _ringbuf_push 2194  
                      x_to_d@hex 0061                         main@scan 00A7  
                       main@temp 00A8                         _tx_sends 313E  
           __end_of_tx_send_time 2194          __size_ofi2_ringbuf_push 00BA  
                   ??_print_time 0021                   main_init@rxbuf 0600  
                 main_init@txbuf 0500                      ??_main_init 0021  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
               get_quot_rem@quot 0085                RTCC_to_caltime@ct 0062  
                   _weekday_char 00AE                        utoa@value 006F  
                       intlevel2 0000                      ??_judgement 000F  
               ___lwmod@dividend 0060                 ___lldiv@dividend 0078  
                     _RCSTA1bits 000FAC                ?_caltime_to_epoch 0078  
              _ringbuf_backspace 32C4         __end_of_epoch_to_caltime 1EDA  
       __size_of_RTCC_to_caltime 00B0                       _OSCCONbits 000FD3  
 __end_of_button_timer_interrupt 1CEA                  tx_send_dec@edit 0075  
             __end_of_print_time 2F66               ??_caltime_to_epoch 007C  
             ?_ringbuf_backspace 0005                      _ringbuf_pop 2ADE  
                    _ringbuf_num 2C28              __end_of_tx_send_dec 32C4  
                    _timer1_init 331C                      _timer3_init 34CA  
            ??_ringbuf_backspace 0007                  get_quot_rem@div 0087  
                get_quot_rem@num 0089                       _RTCCFGbits 000F3F  
                 _interrupt_TXIF 343A                       _PPSCONbits 000EBF  
               ___lldiv@quotient 0080                caltime_to_RTCC@ct 0069  
                ___lwmod@divisor 0062                ??_caltime_to_RTCC 0021  
                ___lwmod@counter 0064  epoch_to_caltime@day_since_epoch 0093  
                rx_operation@cmd 0100        __end_of_ringbuf_backspace 331C  
             i2tx_send@asciicode 000D                 ??_RTCC_from_RTCC 0021  
