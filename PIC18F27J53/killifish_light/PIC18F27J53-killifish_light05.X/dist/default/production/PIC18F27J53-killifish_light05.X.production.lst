

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Nov 09 20:25:17 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           	psect	idataCOMRAM
    80  012E5A                     __pidataCOMRAM:
    81                           	opt stack 0
    82                           
    83                           ;initializer for I2C_LCD_SetCursor@F8633
    84  012E5A  00                 	db	0
    85  012E5B  40                 	db	64
    86                           
    87                           	psect	idataBANK0
    88  012E5C                     __pidataBANK0:
    89                           	opt stack 0
    90                           
    91                           ;initializer for epoch_to_caltime@month_cache
    92  012E5C  01                 	db	1
    93                           
    94                           	psect	mediumconst
    95  00FDC2                     __pmediumconst:
    96                           	opt stack 0
    97  00FDC2  00                 	db	0
    98  00FDC3                     _dpowers:
    99                           	opt stack 0
   100  00FDC3  0001               	dw	1
   101  00FDC5  000A               	dw	10
   102  00FDC7  0064               	dw	100
   103  00FDC9  03E8               	dw	1000
   104  00FDCB  2710               	dw	10000
   105  00FDCD                     __end_of_dpowers:
   106                           	opt stack 0
   107  00FDCD                     _weekday_3char:
   108                           	opt stack 0
   109  00FDCD  53                 	db	83
   110  00FDCE  55                 	db	85
   111  00FDCF  4E                 	db	78
   112  00FDD0  00                 	db	0
   113  00FDD1  4D                 	db	77
   114  00FDD2  4F                 	db	79
   115  00FDD3  4E                 	db	78
   116  00FDD4  00                 	db	0
   117  00FDD5  54                 	db	84
   118  00FDD6  55                 	db	85
   119  00FDD7  45                 	db	69
   120  00FDD8  00                 	db	0
   121  00FDD9  57                 	db	87
   122  00FDDA  45                 	db	69
   123  00FDDB  44                 	db	68
   124  00FDDC  00                 	db	0
   125  00FDDD  54                 	db	84
   126  00FDDE  48                 	db	72
   127  00FDDF  55                 	db	85
   128  00FDE0  00                 	db	0
   129  00FDE1  46                 	db	70
   130  00FDE2  52                 	db	82
   131  00FDE3  49                 	db	73
   132  00FDE4  00                 	db	0
   133  00FDE5  53                 	db	83
   134  00FDE6  41                 	db	65
   135  00FDE7  54                 	db	84
   136  00FDE8  00                 	db	0
   137  00FDE9                     __end_of_weekday_3char:
   138                           	opt stack 0
   139  0000                     _PPSCONbits	set	3775
   140  0000                     _RPOR3	set	3779
   141  0000                     _RPOR4	set	3780
   142  0000                     _RPOR5	set	3781
   143  0000                     _ANCON0	set	3912
   144  0000                     _ANCON1	set	3913
   145  0000                     _CCP3CONbits	set	3861
   146  0000                     _CCP4CONbits	set	3858
   147  0000                     _CCPR3L	set	3862
   148  0000                     _CCPR3Lbits	set	3862
   149  0000                     _CCPR4L	set	3859
   150  0000                     _CCPR4Lbits	set	3859
   151  0000                     _CCPTMRS0bits	set	3922
   152  0000                     _CCPTMRS1bits	set	3921
   153  0000                     _PADCFG1bits	set	3900
   154  0000                     _RTCCAL	set	3902
   155  0000                     _RTCCFGbits	set	3903
   156  0000                     _RTCVALH	set	3899
   157  0000                     _RTCVALL	set	3898
   158  0000                     _T5CONbits	set	3874
   159  0000                     _ADRES	set	4035
   160  0000                     _ADCON0bits	set	4034
   161  0000                     _ADCON1bits	set	4033
   162  0000                     _BAUDCON1bits	set	3966
   163  0000                     _CCP1CONbits	set	4026
   164  0000                     _CCP2CONbits	set	4020
   165  0000                     _CCPR1L	set	4027
   166  0000                     _CCPR1Lbits	set	4027
   167  0000                     _CCPR2L	set	4021
   168  0000                     _CCPR2Lbits	set	4021
   169  0000                     _CTMUCONH	set	4019
   170  0000                     _CTMUCONHbits	set	4019
   171  0000                     _CTMUCONL	set	4018
   172  0000                     _CTMUCONLbits	set	4018
   173  0000                     _CTMUICON	set	4017
   174  0000                     _EECON2	set	4007
   175  0000                     _INTCON2bits	set	4081
   176  0000                     _INTCONbits	set	4082
   177  0000                     _IPR1bits	set	3999
   178  0000                     _IPR2bits	set	4002
   179  0000                     _IPR5bits	set	3993
   180  0000                     _LATBbits	set	3978
   181  0000                     _OSCCONbits	set	4051
   182  0000                     _OSCTUNEbits	set	3995
   183  0000                     _PIE1bits	set	3997
   184  0000                     _PIE2bits	set	4000
   185  0000                     _PIE5bits	set	3985
   186  0000                     _PIR1bits	set	3998
   187  0000                     _PIR2bits	set	4001
   188  0000                     _PIR5bits	set	3992
   189  0000                     _PORTAbits	set	3968
   190  0000                     _PR2	set	4043
   191  0000                     _RCREG1	set	4015
   192  0000                     _RCSTA1bits	set	4012
   193  0000                     _SPBRG1	set	4016
   194  0000                     _SPBRGH1	set	3967
   195  0000                     _SSP1ADD	set	4040
   196  0000                     _SSP1BUF	set	4041
   197  0000                     _SSP1CON1	set	4038
   198  0000                     _SSP1CON1bits	set	4038
   199  0000                     _SSP1CON2	set	4037
   200  0000                     _SSP1CON2bits	set	4037
   201  0000                     _SSP1STAT	set	4039
   202  0000                     _SSP1STATbits	set	4039
   203  0000                     _T0CONbits	set	4053
   204  0000                     _T1CONbits	set	4045
   205  0000                     _T2CONbits	set	4042
   206  0000                     _T3CONbits	set	3961
   207  0000                     _TMR1H	set	4047
   208  0000                     _TRISA	set	3986
   209  0000                     _TRISB	set	3987
   210  0000                     _TRISC	set	3988
   211  0000                     _TXREG1	set	4014
   212  0000                     _TXSTA1bits	set	4013
   213  0000                     _BCL1IF	set	32011
   214  0000                     _LATB2	set	31826
   215  0000                     _SSP1IF	set	31987
   216  00FDE9                     STR_43:
   217  00FDE9  09                 	db	9
   218  00FDEA  2A                 	db	42
   219  00FDEB  2A                 	db	42
   220  00FDEC  2A                 	db	42
   221  00FDED  2A                 	db	42
   222  00FDEE  2A                 	db	42
   223  00FDEF  2A                 	db	42
   224  00FDF0  2A                 	db	42
   225  00FDF1  2A                 	db	42
   226  00FDF2  2A                 	db	42
   227  00FDF3  2A                 	db	42
   228  00FDF4  2A                 	db	42
   229  00FDF5  2A                 	db	42
   230  00FDF6  2A                 	db	42
   231  00FDF7  2A                 	db	42
   232  00FDF8  2A                 	db	42
   233  00FDF9  2A                 	db	42
   234  00FDFA  2A                 	db	42
   235  00FDFB  2A                 	db	42
   236  00FDFC  2A                 	db	42
   237  00FDFD  2A                 	db	42
   238  00FDFE  2A                 	db	42
   239  00FDFF  2A                 	db	42
   240  00FE00  2A                 	db	42
   241  00FE01  2A                 	db	42
   242  00FE02  2A                 	db	42
   243  00FE03  2A                 	db	42
   244  00FE04  0A                 	db	10
   245  00FE05  09                 	db	9
   246  00FE06  2A                 	db	42
   247  00FE07  2A                 	db	42
   248  00FE08  2A                 	db	42
   249  00FE09  2A                 	db	42
   250  00FE0A  20                 	db	32
   251  00FE0B  4B                 	db	75	;'K'
   252  00FE0C  69                 	db	105	;'i'
   253  00FE0D  6C                 	db	108	;'l'
   254  00FE0E  6C                 	db	108	;'l'
   255  00FE0F  69                 	db	105	;'i'
   256  00FE10  66                 	db	102	;'f'
   257  00FE11  69                 	db	105	;'i'
   258  00FE12  73                 	db	115	;'s'
   259  00FE13  68                 	db	104	;'h'
   260  00FE14  20                 	db	32
   261  00FE15  4C                 	db	76	;'L'
   262  00FE16  69                 	db	105	;'i'
   263  00FE17  67                 	db	103	;'g'
   264  00FE18  68                 	db	104	;'h'
   265  00FE19  74                 	db	116	;'t'
   266  00FE1A  20                 	db	32
   267  00FE1B  20                 	db	32
   268  00FE1C  2A                 	db	42
   269  00FE1D  2A                 	db	42
   270  00FE1E  2A                 	db	42
   271  00FE1F  2A                 	db	42
   272  00FE20  0A                 	db	10
   273  00FE21  09                 	db	9
   274  00FE22  2A                 	db	42
   275  00FE23  2A                 	db	42
   276  00FE24  2A                 	db	42
   277  00FE25  2A                 	db	42
   278  00FE26  20                 	db	32
   279  00FE27  4D                 	db	77	;'M'
   280  00FE28  61                 	db	97	;'a'
   281  00FE29  64                 	db	100	;'d'
   282  00FE2A  65                 	db	101	;'e'
   283  00FE2B  20                 	db	32
   284  00FE2C  62                 	db	98	;'b'
   285  00FE2D  79                 	db	121	;'y'
   286  00FE2E  20                 	db	32
   287  00FE2F  40                 	db	64	;'@'
   288  00FE30  52                 	db	82	;'R'
   289  00FE31  79                 	db	121	;'y'
   290  00FE32  6F                 	db	111	;'o'
   291  00FE33  6B                 	db	107	;'k'
   292  00FE34  65                 	db	101	;'e'
   293  00FE35  72                 	db	114	;'r'
   294  00FE36  69                 	db	105	;'i'
   295  00FE37  20                 	db	32
   296  00FE38  2A                 	db	42
   297  00FE39  2A                 	db	42
   298  00FE3A  2A                 	db	42
   299  00FE3B  2A                 	db	42
   300  00FE3C  0A                 	db	10
   301  00FE3D  09                 	db	9
   302  00FE3E  2A                 	db	42
   303  00FE3F  2A                 	db	42
   304  00FE40  2A                 	db	42
   305  00FE41  2A                 	db	42
   306  00FE42  2A                 	db	42
   307  00FE43  2A                 	db	42
   308  00FE44  2A                 	db	42
   309  00FE45  2A                 	db	42
   310  00FE46  2A                 	db	42
   311  00FE47  2A                 	db	42
   312  00FE48  2A                 	db	42
   313  00FE49  2A                 	db	42
   314  00FE4A  2A                 	db	42
   315  00FE4B  2A                 	db	42
   316  00FE4C  2A                 	db	42
   317  00FE4D  2A                 	db	42
   318  00FE4E  2A                 	db	42
   319  00FE4F  2A                 	db	42
   320  00FE50  2A                 	db	42
   321  00FE51  2A                 	db	42
   322  00FE52  2A                 	db	42
   323  00FE53  2A                 	db	42
   324  00FE54  2A                 	db	42
   325  00FE55  2A                 	db	42
   326  00FE56  2A                 	db	42
   327  00FE57  2A                 	db	42
   328  00FE58  0A                 	db	10
   329  00FE59  0A                 	db	10
   330  00FE5A  09                 	db	9
   331  00FE5B  63                 	db	99	;'c'
   332  00FE5C  6F                 	db	111	;'o'
   333  00FE5D  6D                 	db	109	;'m'
   334  00FE5E  6D                 	db	109	;'m'
   335  00FE5F  61                 	db	97	;'a'
   336  00FE60  6E                 	db	110	;'n'
   337  00FE61  64                 	db	100	;'d'
   338  00FE62  20                 	db	32
   339  00FE63  09                 	db	9
   340  00FE64  6F                 	db	111	;'o'
   341  00FE65  70                 	db	112	;'p'
   342  00FE66  65                 	db	101	;'e'
   343  00FE67  6C                 	db	108	;'l'
   344  00FE68  61                 	db	97	;'a'
   345  00FE69  6E                 	db	110	;'n'
   346  00FE6A  64                 	db	100	;'d'
   347  00FE6B  31                 	db	49	;'1'
   348  00FE6C  09                 	db	9
   349  00FE6D  6F                 	db	111	;'o'
   350  00FE6E  70                 	db	112	;'p'
   351  00FE6F  65                 	db	101	;'e'
   352  00FE70  6C                 	db	108	;'l'
   353  00FE71  61                 	db	97	;'a'
   354  00FE72  6E                 	db	110	;'n'
   355  00FE73  64                 	db	100	;'d'
   356  00FE74  32                 	db	50	;'2'
   357  00FE75  0A                 	db	10
   358  00FE76  0A                 	db	10
   359  00FE77  09                 	db	9
   360  00FE78  70                 	db	112	;'p'
   361  00FE79  72                 	db	114	;'r'
   362  00FE7A  69                 	db	105	;'i'
   363  00FE7B  6E                 	db	110	;'n'
   364  00FE7C  74                 	db	116	;'t'
   365  00FE7D  5F                 	db	95	;'_'
   366  00FE7E  74                 	db	116	;'t'
   367  00FE7F  69                 	db	105	;'i'
   368  00FE80  6D                 	db	109	;'m'
   369  00FE81  65                 	db	101	;'e'
   370  00FE82  28                 	db	40
   371  00FE83  74                 	db	116	;'t'
   372  00FE84  29                 	db	41
   373  00FE85  0A                 	db	10
   374  00FE86  09                 	db	9
   375  00FE87  61                 	db	97	;'a'
   376  00FE88  64                 	db	100	;'d'
   377  00FE89  6A                 	db	106	;'j'
   378  00FE8A  75                 	db	117	;'u'
   379  00FE8B  73                 	db	115	;'s'
   380  00FE8C  74                 	db	116	;'t'
   381  00FE8D  5F                 	db	95	;'_'
   382  00FE8E  74                 	db	116	;'t'
   383  00FE8F  69                 	db	105	;'i'
   384  00FE90  6D                 	db	109	;'m'
   385  00FE91  65                 	db	101	;'e'
   386  00FE92  28                 	db	40
   387  00FE93  61                 	db	97	;'a'
   388  00FE94  74                 	db	116	;'t'
   389  00FE95  29                 	db	41
   390  00FE96  20                 	db	32
   391  00FE97  5B                 	db	91	;'['
   392  00FE98  68                 	db	104	;'h'
   393  00FE99  61                 	db	97	;'a'
   394  00FE9A  6E                 	db	110	;'n'
   395  00FE9B  64                 	db	100	;'d'
   396  00FE9C  3A                 	db	58	;':'
   397  00FE9D  79                 	db	121	;'y'
   398  00FE9E  2C                 	db	44
   399  00FE9F  4D                 	db	77	;'M'
   400  00FEA0  2C                 	db	44
   401  00FEA1  64                 	db	100	;'d'
   402  00FEA2  2C                 	db	44
   403  00FEA3  68                 	db	104	;'h'
   404  00FEA4  2C                 	db	44
   405  00FEA5  6D                 	db	109	;'m'
   406  00FEA6  2C                 	db	44
   407  00FEA7  73                 	db	115	;'s'
   408  00FEA8  5D                 	db	93	;']'
   409  00FEA9  20                 	db	32
   410  00FEAA  5B                 	db	91	;'['
   411  00FEAB  76                 	db	118	;'v'
   412  00FEAC  61                 	db	97	;'a'
   413  00FEAD  6C                 	db	108	;'l'
   414  00FEAE  75                 	db	117	;'u'
   415  00FEAF  65                 	db	101	;'e'
   416  00FEB0  28                 	db	40
   417  00FEB1  64                 	db	100	;'d'
   418  00FEB2  65                 	db	101	;'e'
   419  00FEB3  63                 	db	99	;'c'
   420  00FEB4  69                 	db	105	;'i'
   421  00FEB5  6D                 	db	109	;'m'
   422  00FEB6  61                 	db	97	;'a'
   423  00FEB7  6C                 	db	108	;'l'
   424  00FEB8  29                 	db	41
   425  00FEB9  5D                 	db	93	;']'
   426  00FEBA  0A                 	db	10
   427  00FEBB  09                 	db	9
   428  00FEBC  70                 	db	112	;'p'
   429  00FEBD  77                 	db	119	;'w'
   430  00FEBE  6D                 	db	109	;'m'
   431  00FEBF  20                 	db	32
   432  00FEC0  5B                 	db	91	;'['
   433  00FEC1  63                 	db	99	;'c'
   434  00FEC2  6F                 	db	111	;'o'
   435  00FEC3  6C                 	db	108	;'l'
   436  00FEC4  6F                 	db	111	;'o'
   437  00FEC5  72                 	db	114	;'r'
   438  00FEC6  3A                 	db	58	;':'
   439  00FEC7  52                 	db	82	;'R'
   440  00FEC8  2C                 	db	44
   441  00FEC9  47                 	db	71	;'G'
   442  00FECA  2C                 	db	44
   443  00FECB  42                 	db	66	;'B'
   444  00FECC  2C                 	db	44
   445  00FECD  57                 	db	87	;'W'
   446  00FECE  5D                 	db	93	;']'
   447  00FECF  20                 	db	32
   448  00FED0  5B                 	db	91	;'['
   449  00FED1  76                 	db	118	;'v'
   450  00FED2  61                 	db	97	;'a'
   451  00FED3  6C                 	db	108	;'l'
   452  00FED4  75                 	db	117	;'u'
   453  00FED5  65                 	db	101	;'e'
   454  00FED6  28                 	db	40
   455  00FED7  25                 	db	37
   456  00FED8  29                 	db	41
   457  00FED9  3A                 	db	58	;':'
   458  00FEDA  30                 	db	48	;'0'
   459  00FEDB  7E                 	db	126
   460  00FEDC  31                 	db	49	;'1'
   461  00FEDD  30                 	db	48	;'0'
   462  00FEDE  30                 	db	48	;'0'
   463  00FEDF  5D                 	db	93	;']'
   464  00FEE0  0A                 	db	10
   465  00FEE1  09                 	db	9
   466  00FEE2  70                 	db	112	;'p'
   467  00FEE3  77                 	db	119	;'w'
   468  00FEE4  6D                 	db	109	;'m'
   469  00FEE5  20                 	db	32
   470  00FEE6  63                 	db	99	;'c'
   471  00FEE7  6C                 	db	108	;'l'
   472  00FEE8  65                 	db	101	;'e'
   473  00FEE9  61                 	db	97	;'a'
   474  00FEEA  72                 	db	114	;'r'
   475  00FEEB  0A                 	db	10
   476  00FEEC  09                 	db	9
   477  00FEED  73                 	db	115	;'s'
   478  00FEEE  65                 	db	101	;'e'
   479  00FEEF  74                 	db	116	;'t'
   480  00FEF0  20                 	db	32
   481  00FEF1  74                 	db	116	;'t'
   482  00FEF2  69                 	db	105	;'i'
   483  00FEF3  6D                 	db	109	;'m'
   484  00FEF4  65                 	db	101	;'e'
   485  00FEF5  5F                 	db	95	;'_'
   486  00FEF6  73                 	db	115	;'s'
   487  00FEF7  79                 	db	121	;'y'
   488  00FEF8  6E                 	db	110	;'n'
   489  00FEF9  63                 	db	99	;'c'
   490  00FEFA  5F                 	db	95	;'_'
   491  00FEFB  6D                 	db	109	;'m'
   492  00FEFC  6F                 	db	111	;'o'
   493  00FEFD  64                 	db	100	;'d'
   494  00FEFE  65                 	db	101	;'e'
   495  00FEFF  28                 	db	40
   496  00FF00  73                 	db	115	;'s'
   497  00FF01  79                 	db	121	;'y'
   498  00FF02  6E                 	db	110	;'n'
   499  00FF03  63                 	db	99	;'c'
   500  00FF04  29                 	db	41
   501  00FF05  0A                 	db	10
   502  00FF06  09                 	db	9
   503  00FF07  73                 	db	115	;'s'
   504  00FF08  65                 	db	101	;'e'
   505  00FF09  74                 	db	116	;'t'
   506  00FF0A  20                 	db	32
   507  00FF0B  41                 	db	65	;'A'
   508  00FF0C  44                 	db	68	;'D'
   509  00FF0D  43                 	db	67	;'C'
   510  00FF0E  5F                 	db	95	;'_'
   511  00FF0F  6D                 	db	109	;'m'
   512  00FF10  6F                 	db	111	;'o'
   513  00FF11  64                 	db	100	;'d'
   514  00FF12  65                 	db	101	;'e'
   515  00FF13  28                 	db	40
   516  00FF14  61                 	db	97	;'a'
   517  00FF15  64                 	db	100	;'d'
   518  00FF16  63                 	db	99	;'c'
   519  00FF17  29                 	db	41
   520  00FF18  0A                 	db	10
   521  00FF19  09                 	db	9
   522  00FF1A  52                 	db	82	;'R'
   523  00FF1B  45                 	db	69	;'E'
   524  00FF1C  53                 	db	83	;'S'
   525  00FF1D  45                 	db	69	;'E'
   526  00FF1E  54                 	db	84	;'T'
   527  00FF1F  28                 	db	40
   528  00FF20  29                 	db	41
   529  00FF21  3B                 	db	59	;';'
   530  00FF22  0A                 	db	10
   531  00FF23  00                 	db	0
   532  00FF24                     STR_23:
   533  00FF24  09                 	db	9
   534  00FF25  32                 	db	50	;'2'
   535  00FF26  30                 	db	48	;'0'
   536  00FF27  25                 	db	37
   537  00FF28  30                 	db	48	;'0'
   538  00FF29  32                 	db	50	;'2'
   539  00FF2A  64                 	db	100	;'d'
   540  00FF2B  2F                 	db	47
   541  00FF2C  25                 	db	37
   542  00FF2D  30                 	db	48	;'0'
   543  00FF2E  32                 	db	50	;'2'
   544  00FF2F  64                 	db	100	;'d'
   545  00FF30  2F                 	db	47
   546  00FF31  25                 	db	37
   547  00FF32  30                 	db	48	;'0'
   548  00FF33  32                 	db	50	;'2'
   549  00FF34  64                 	db	100	;'d'
   550  00FF35  28                 	db	40
   551  00FF36  25                 	db	37
   552  00FF37  73                 	db	115	;'s'
   553  00FF38  29                 	db	41
   554  00FF39  25                 	db	37
   555  00FF3A  30                 	db	48	;'0'
   556  00FF3B  32                 	db	50	;'2'
   557  00FF3C  64                 	db	100	;'d'
   558  00FF3D  3A                 	db	58	;':'
   559  00FF3E  25                 	db	37
   560  00FF3F  30                 	db	48	;'0'
   561  00FF40  32                 	db	50	;'2'
   562  00FF41  64                 	db	100	;'d'
   563  00FF42  2D                 	db	45
   564  00FF43  25                 	db	37
   565  00FF44  30                 	db	48	;'0'
   566  00FF45  32                 	db	50	;'2'
   567  00FF46  64                 	db	100	;'d'
   568  00FF47  0A                 	db	10
   569  00FF48  00                 	db	0
   570  00FF49                     STR_46:
   571  00FF49  57                 	db	87	;'W'
   572  00FF4A  52                 	db	82	;'R'
   573  00FF4B  45                 	db	69	;'E'
   574  00FF4C  4E                 	db	78	;'N'
   575  00FF4D  3D                 	db	61	;'='
   576  00FF4E  25                 	db	37
   577  00FF4F  64                 	db	100	;'d'
   578  00FF50  2C                 	db	44
   579  00FF51  45                 	db	69	;'E'
   580  00FF52  4E                 	db	78	;'N'
   581  00FF53  3D                 	db	61	;'='
   582  00FF54  25                 	db	37
   583  00FF55  64                 	db	100	;'d'
   584  00FF56  0A                 	db	10
   585  00FF57  00                 	db	0
   586  00FF58                     STR_28:
   587  00FF58  61                 	db	97	;'a'
   588  00FF59  64                 	db	100	;'d'
   589  00FF5A  6A                 	db	106	;'j'
   590  00FF5B  75                 	db	117	;'u'
   591  00FF5C  73                 	db	115	;'s'
   592  00FF5D  74                 	db	116	;'t'
   593  00FF5E  5F                 	db	95	;'_'
   594  00FF5F  74                 	db	116	;'t'
   595  00FF60  69                 	db	105	;'i'
   596  00FF61  6D                 	db	109	;'m'
   597  00FF62  65                 	db	101	;'e'
   598  00FF63  00                 	db	0
   599  00FF64                     STR_25:
   600  00FF64  70                 	db	112	;'p'
   601  00FF65  72                 	db	114	;'r'
   602  00FF66  69                 	db	105	;'i'
   603  00FF67  6E                 	db	110	;'n'
   604  00FF68  74                 	db	116	;'t'
   605  00FF69  5F                 	db	95	;'_'
   606  00FF6A  74                 	db	116	;'t'
   607  00FF6B  69                 	db	105	;'i'
   608  00FF6C  6D                 	db	109	;'m'
   609  00FF6D  65                 	db	101	;'e'
   610  00FF6E  00                 	db	0
   611  00FF6F                     STR_44:
   612  00FF6F  52                 	db	82	;'R'
   613  00FF70  45                 	db	69	;'E'
   614  00FF71  53                 	db	83	;'S'
   615  00FF72  45                 	db	69	;'E'
   616  00FF73  54                 	db	84	;'T'
   617  00FF74  28                 	db	40
   618  00FF75  29                 	db	41
   619  00FF76  3B                 	db	59	;';'
   620  00FF77  00                 	db	0
   621  00FF78                     STR_15:
   622  00FF78  20                 	db	32
   623  00FF79  20                 	db	32
   624  00FF7A  20                 	db	32
   625  00FF7B  20                 	db	32
   626  00FF7C  20                 	db	32
   627  00FF7D  20                 	db	32
   628  00FF7E  20                 	db	32
   629  00FF7F  20                 	db	32
   630  00FF80  00                 	db	0
   631  00FF81                     STR_24:
   632  00FF81  09                 	db	9
   633  00FF82  65                 	db	101	;'e'
   634  00FF83  72                 	db	114	;'r'
   635  00FF84  72                 	db	114	;'r'
   636  00FF85  6F                 	db	111	;'o'
   637  00FF86  72                 	db	114	;'r'
   638  00FF87  0A                 	db	10
   639  00FF88  00                 	db	0
   640  00FF89                     STR_62:
   641  00FF89  28                 	db	40
   642  00FF8A  6E                 	db	110	;'n'
   643  00FF8B  75                 	db	117	;'u'
   644  00FF8C  6C                 	db	108	;'l'
   645  00FF8D  6C                 	db	108	;'l'
   646  00FF8E  29                 	db	41
   647  00FF8F  00                 	db	0
   648  00FF90                     STR_40:
   649  00FF90  73                 	db	115	;'s'
   650  00FF91  65                 	db	101	;'e'
   651  00FF92  63                 	db	99	;'c'
   652  00FF93  6F                 	db	111	;'o'
   653  00FF94  6E                 	db	110	;'n'
   654  00FF95  64                 	db	100	;'d'
   655  00FF96  00                 	db	0
   656  00FF97                     STR_38:
   657  00FF97  6D                 	db	109	;'m'
   658  00FF98  69                 	db	105	;'i'
   659  00FF99  6E                 	db	110	;'n'
   660  00FF9A  75                 	db	117	;'u'
   661  00FF9B  74                 	db	116	;'t'
   662  00FF9C  65                 	db	101	;'e'
   663  00FF9D  00                 	db	0
   664  00FF9E                     STR_61:
   665  00FF9E  63                 	db	99	;'c'
   666  00FF9F  6C                 	db	108	;'l'
   667  00FFA0  65                 	db	101	;'e'
   668  00FFA1  61                 	db	97	;'a'
   669  00FFA2  72                 	db	114	;'r'
   670  00FFA3  00                 	db	0
   671  00FFA4                     STR_32:
   672  00FFA4  6D                 	db	109	;'m'
   673  00FFA5  6F                 	db	111	;'o'
   674  00FFA6  6E                 	db	110	;'n'
   675  00FFA7  74                 	db	116	;'t'
   676  00FFA8  68                 	db	104	;'h'
   677  00FFA9  00                 	db	0
   678  00FFAA                     STR_48:
   679  00FFAA  73                 	db	115	;'s'
   680  00FFAB  79                 	db	121	;'y'
   681  00FFAC  6E                 	db	110	;'n'
   682  00FFAD  63                 	db	99	;'c'
   683  00FFAE  00                 	db	0
   684  00FFAF                     STR_41:
   685  00FFAF  68                 	db	104	;'h'
   686  00FFB0  65                 	db	101	;'e'
   687  00FFB1  6C                 	db	108	;'l'
   688  00FFB2  70                 	db	112	;'p'
   689  00FFB3  00                 	db	0
   690  00FFB4                     STR_30:
   691  00FFB4  79                 	db	121	;'y'
   692  00FFB5  65                 	db	101	;'e'
   693  00FFB6  61                 	db	97	;'a'
   694  00FFB7  72                 	db	114	;'r'
   695  00FFB8  00                 	db	0
   696  00FFB9                     STR_36:
   697  00FFB9  68                 	db	104	;'h'
   698  00FFBA  6F                 	db	111	;'o'
   699  00FFBB  75                 	db	117	;'u'
   700  00FFBC  72                 	db	114	;'r'
   701  00FFBD  00                 	db	0
   702  00FFBE                     STR_1:
   703  00FFBE  25                 	db	37
   704  00FFBF  30                 	db	48	;'0'
   705  00FFC0  32                 	db	50	;'2'
   706  00FFC1  64                 	db	100	;'d'
   707  00FFC2  00                 	db	0
   708  00FFC3                     STR_50:
   709  00FFC3  41                 	db	65	;'A'
   710  00FFC4  44                 	db	68	;'D'
   711  00FFC5  43                 	db	67	;'C'
   712  00FFC6  00                 	db	0
   713  00FFC7                     STR_52:
   714  00FFC7  50                 	db	80	;'P'
   715  00FFC8  57                 	db	87	;'W'
   716  00FFC9  4D                 	db	77	;'M'
   717  00FFCA  00                 	db	0
   718  00FFCB                     STR_49:
   719  00FFCB  61                 	db	97	;'a'
   720  00FFCC  64                 	db	100	;'d'
   721  00FFCD  63                 	db	99	;'c'
   722  00FFCE  00                 	db	0
   723  00FFCF                     STR_51:
   724  00FFCF  70                 	db	112	;'p'
   725  00FFD0  77                 	db	119	;'w'
   726  00FFD1  6D                 	db	109	;'m'
   727  00FFD2  00                 	db	0
   728  00FFD3                     STR_47:
   729  00FFD3  73                 	db	115	;'s'
   730  00FFD4  65                 	db	101	;'e'
   731  00FFD5  74                 	db	116	;'t'
   732  00FFD6  00                 	db	0
   733  00FFD7                     STR_19:
   734  00FFD7  08                 	db	8
   735  00FFD8  20                 	db	32
   736  00FFD9  08                 	db	8
   737  00FFDA  00                 	db	0
   738  00FFDB                     STR_34:
   739  00FFDB  64                 	db	100	;'d'
   740  00FFDC  61                 	db	97	;'a'
   741  00FFDD  79                 	db	121	;'y'
   742  00FFDE  00                 	db	0
   743  00FFDF                     STR_45:
   744  00FFDF  65                 	db	101	;'e'
   745  00FFE0  6E                 	db	110	;'n'
   746  00FFE1  00                 	db	0
   747  00FFE2                     STR_27:
   748  00FFE2  61                 	db	97	;'a'
   749  00FFE3  74                 	db	116	;'t'
   750  00FFE4  00                 	db	0
   751  00FFE5                     STR_42:
   752  00FFE5  3F                 	db	63	;'?'
   753  00FFE6  00                 	db	0
   754  00FFE7                     STR_58:
   755  00FFE7  42                 	db	66	;'B'
   756  00FFE8  00                 	db	0
   757  00FFE9                     STR_56:
   758  00FFE9  47                 	db	71	;'G'
   759  00FFEA  00                 	db	0
   760  00FFEB                     STR_54:
   761  00FFEB  52                 	db	82	;'R'
   762  00FFEC  00                 	db	0
   763  00FFED                     STR_60:
   764  00FFED  57                 	db	87	;'W'
   765  00FFEE  00                 	db	0
   766  00FFEF                     STR_57:
   767  00FFEF  62                 	db	98	;'b'
   768  00FFF0  00                 	db	0
   769  00FFF1                     STR_55:
   770  00FFF1  67                 	db	103	;'g'
   771  00FFF2  00                 	db	0
   772  00FFF3                     STR_59:
   773  00FFF3  77                 	db	119	;'w'
   774  00FFF4  00                 	db	0
   775  00FFF5                     STR_39:
   776  00FFF5  73                 	db	115	;'s'
   777  00FFF6  00                 	db	0
   778  00FFF7  28                 	db	40
   779  00FFF8  00                 	db	0
   780  00FFF9                     STR_9:
   781  00FFF9  2D                 	db	45
   782  00FFFA  00                 	db	0
   783  00FFFB                     STR_4:
   784  00FFFB  2F                 	db	47
   785  00FFFC  00                 	db	0
   786  00FFFD                     STR_7:
   787  00FFFD  3A                 	db	58	;':'
   788  00FFFE  00                 	db	0
   789  0000                     
   790                           ; #config settings
   791  00FFFF  00                 	db	0	; dummy byte at the end
   792  0000                     
   793                           	psect	cinit
   794  0127D0                     __pcinit:
   795                           	opt stack 0
   796  0127D0                     start_initialization:
   797                           	opt stack 0
   798  0127D0                     __initialization:
   799                           	opt stack 0
   800                           
   801                           ; Clear objects allocated to BIGRAM (1000 bytes)
   802  0127D0  EE02  F0FA         	lfsr	0,__pbssBIGRAM
   803  0127D4  EE13 F0E8          	lfsr	1,1000
   804  0127D8                     clear_0:
   805  0127D8  6AEE               	clrf	postinc0,c
   806  0127DA  50E5               	movf	postdec1,w,c
   807  0127DC  50E1               	movf	fsr1l,w,c
   808  0127DE  E1FC               	bnz	clear_0
   809  0127E0  50E2               	movf	fsr1h,w,c
   810  0127E2  E1FA               	bnz	clear_0
   811                           
   812                           ; Clear objects allocated to BANK2 (250 bytes)
   813  0127E4  EE02  F000         	lfsr	0,__pbssBANK2
   814  0127E8  0EFA               	movlw	250
   815  0127EA                     clear_1:
   816  0127EA  6AEE               	clrf	postinc0,c
   817  0127EC  06E8               	decf	wreg,f,c
   818  0127EE  E1FD               	bnz	clear_1
   819                           
   820                           ; Clear objects allocated to BANK1 (112 bytes)
   821  0127F0  EE01  F08B         	lfsr	0,__pbssBANK1
   822  0127F4  0E70               	movlw	112
   823  0127F6                     clear_2:
   824  0127F6  6AEE               	clrf	postinc0,c
   825  0127F8  06E8               	decf	wreg,f,c
   826  0127FA  E1FD               	bnz	clear_2
   827                           
   828                           ; Clear objects allocated to BANK0 (28 bytes)
   829  0127FC  EE00  F0D3         	lfsr	0,__pbssBANK0
   830  012800  0E1C               	movlw	28
   831  012802                     clear_3:
   832  012802  6AEE               	clrf	postinc0,c
   833  012804  06E8               	decf	wreg,f,c
   834  012806  E1FD               	bnz	clear_3
   835                           
   836                           ; Clear objects allocated to COMRAM (26 bytes)
   837  012808  EE00  F024         	lfsr	0,__pbssCOMRAM
   838  01280C  0E1A               	movlw	26
   839  01280E                     clear_4:
   840  01280E  6AEE               	clrf	postinc0,c
   841  012810  06E8               	decf	wreg,f,c
   842  012812  E1FD               	bnz	clear_4
   843                           
   844                           ; Initialize objects allocated to BANK0 (1 bytes)
   845                           ; load TBLPTR registers with __pidataBANK0
   846  012814  0E5C               	movlw	low __pidataBANK0
   847  012816  6EF6               	movwf	tblptrl,c
   848  012818  0E2E               	movlw	high __pidataBANK0
   849  01281A  6EF7               	movwf	tblptrh,c
   850  01281C  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   851  01281E  6EF8               	movwf	tblptru,c
   852  012820  0009               	tblrd		*+	;fetch initializer
   853  012822  CFF5 F0EF          	movff	tablat,__pdataBANK0
   854                           
   855                           ; Initialize objects allocated to COMRAM (2 bytes)
   856                           ; load TBLPTR registers with __pidataCOMRAM
   857  012826  0E5A               	movlw	low __pidataCOMRAM
   858  012828  6EF6               	movwf	tblptrl,c
   859  01282A  0E2E               	movlw	high __pidataCOMRAM
   860  01282C  6EF7               	movwf	tblptrh,c
   861  01282E  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   862  012830  6EF8               	movwf	tblptru,c
   863  012832  0009               	tblrd		*+	;fetch initializer
   864  012834  CFF5 F03E          	movff	tablat,__pdataCOMRAM
   865  012838  0009               	tblrd		*+	;fetch initializer
   866  01283A  CFF5 F03F          	movff	tablat,__pdataCOMRAM+1
   867  01283E                     end_of_initialization:
   868                           	opt stack 0
   869  01283E                     __end_of__initialization:
   870                           	opt stack 0
   871  01283E  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   872  012840  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   873  012842  0100               	movlb	0
   874  012844  EF24  F094         	goto	_main	;jump to C main() function
   875                           tblptru	equ	0xFF8
   876                           tblptrh	equ	0xFF7
   877                           tblptrl	equ	0xFF6
   878                           tablat	equ	0xFF5
   879                           postinc0	equ	0xFEE
   880                           wreg	equ	0xFE8
   881                           postdec1	equ	0xFE5
   882                           fsr1h	equ	0xFE2
   883                           fsr1l	equ	0xFE1
   884                           
   885                           	psect	bssCOMRAM
   886  000024                     __pbssCOMRAM:
   887                           	opt stack 0
   888  000024                     millis_timer@cnt:
   889                           	opt stack 0
   890  000024                     	ds	2
   891  000026                     RTCC_loop@prev_halfsec:
   892                           	opt stack 0
   893  000026                     	ds	1
   894  000027                     _ADC_flag:
   895                           	opt stack 0
   896  000027                     	ds	1
   897  000028                     _now:
   898                           	opt stack 0
   899  000028                     	ds	14
   900  000036                     _sw_G:
   901                           	opt stack 0
   902  000036                     	ds	4
   903  00003A                     _sw_R:
   904                           	opt stack 0
   905  00003A                     	ds	4
   906                           tblptru	equ	0xFF8
   907                           tblptrh	equ	0xFF7
   908                           tblptrl	equ	0xFF6
   909                           tablat	equ	0xFF5
   910                           postinc0	equ	0xFEE
   911                           wreg	equ	0xFE8
   912                           postdec1	equ	0xFE5
   913                           fsr1h	equ	0xFE2
   914                           fsr1l	equ	0xFE1
   915                           
   916                           	psect	dataCOMRAM
   917  00003E                     __pdataCOMRAM:
   918                           	opt stack 0
   919  00003E                     I2C_LCD_SetCursor@F8633:
   920                           	opt stack 0
   921  00003E                     	ds	2
   922                           tblptru	equ	0xFF8
   923                           tblptrh	equ	0xFF7
   924                           tblptrl	equ	0xFF6
   925                           tablat	equ	0xFF5
   926                           postinc0	equ	0xFEE
   927                           wreg	equ	0xFE8
   928                           postdec1	equ	0xFE5
   929                           fsr1h	equ	0xFE2
   930                           fsr1l	equ	0xFE1
   931                           
   932                           	psect	bssBANK0
   933  0000D3                     __pbssBANK0:
   934                           	opt stack 0
   935  0000D3                     epoch_to_caltime@day_cache:
   936                           	opt stack 0
   937  0000D3                     	ds	2
   938  0000D5                     _light_mode:
   939                           	opt stack 0
   940  0000D5                     	ds	1
   941  0000D6                     _time_change_flag:
   942                           	opt stack 0
   943  0000D6                     	ds	1
   944  0000D7                     epoch_to_caltime@year_cache:
   945                           	opt stack 0
   946  0000D7                     	ds	1
   947  0000D8                     terminal_loop@command_init:
   948                           	opt stack 0
   949  0000D8                     	ds	1
   950  0000D9                     _tx_buf:
   951                           	opt stack 0
   952  0000D9                     	ds	8
   953  0000E1                     terminal_loop@command:
   954                           	opt stack 0
   955  0000E1                     	ds	8
   956  0000E9                     _sw_B:
   957                           	opt stack 0
   958  0000E9                     	ds	4
   959  0000ED                     light_loop@_3706:
   960                           	opt stack 0
   961  0000ED                     	ds	1
   962  0000EE                     light_loop@n:
   963                           	opt stack 0
   964  0000EE                     	ds	1
   965                           tblptru	equ	0xFF8
   966                           tblptrh	equ	0xFF7
   967                           tblptrl	equ	0xFF6
   968                           tablat	equ	0xFF5
   969                           postinc0	equ	0xFEE
   970                           wreg	equ	0xFE8
   971                           postdec1	equ	0xFE5
   972                           fsr1h	equ	0xFE2
   973                           fsr1l	equ	0xFE1
   974                           
   975                           	psect	dataBANK0
   976  0000EF                     __pdataBANK0:
   977                           	opt stack 0
   978  0000EF                     epoch_to_caltime@month_cache:
   979                           	opt stack 0
   980  0000EF                     	ds	1
   981                           tblptru	equ	0xFF8
   982                           tblptrh	equ	0xFF7
   983                           tblptrl	equ	0xFF6
   984                           tablat	equ	0xFF5
   985                           postinc0	equ	0xFEE
   986                           wreg	equ	0xFE8
   987                           postdec1	equ	0xFE5
   988                           fsr1h	equ	0xFE2
   989                           fsr1l	equ	0xFE1
   990                           
   991                           	psect	bssBANK1
   992  00018B                     __pbssBANK1:
   993                           	opt stack 0
   994  00018B                     _ms:
   995                           	opt stack 0
   996  00018B                     	ds	4
   997  00018F                     terminal_loop@op0:
   998                           	opt stack 0
   999  00018F                     	ds	25
  1000  0001A8                     terminal_loop@op1:
  1001                           	opt stack 0
  1002  0001A8                     	ds	25
  1003  0001C1                     terminal_loop@op2:
  1004                           	opt stack 0
  1005  0001C1                     	ds	25
  1006  0001DA                     terminal_loop@op3:
  1007                           	opt stack 0
  1008  0001DA                     	ds	25
  1009  0001F3                     _rx_buf:
  1010                           	opt stack 0
  1011  0001F3                     	ds	8
  1012                           tblptru	equ	0xFF8
  1013                           tblptrh	equ	0xFF7
  1014                           tblptrl	equ	0xFF6
  1015                           tablat	equ	0xFF5
  1016                           postinc0	equ	0xFEE
  1017                           wreg	equ	0xFE8
  1018                           postdec1	equ	0xFE5
  1019                           fsr1h	equ	0xFE2
  1020                           fsr1l	equ	0xFE1
  1021                           
  1022                           	psect	bssBANK2
  1023  000200                     __pbssBANK2:
  1024                           	opt stack 0
  1025  000200                     main_init@rxbuf:
  1026                           	opt stack 0
  1027  000200                     	ds	250
  1028                           tblptru	equ	0xFF8
  1029                           tblptrh	equ	0xFF7
  1030                           tblptrl	equ	0xFF6
  1031                           tablat	equ	0xFF5
  1032                           postinc0	equ	0xFEE
  1033                           wreg	equ	0xFE8
  1034                           postdec1	equ	0xFE5
  1035                           fsr1h	equ	0xFE2
  1036                           fsr1l	equ	0xFE1
  1037                           
  1038                           	psect	bssBIGRAM
  1039  0002FA                     __pbssBIGRAM:
  1040                           	opt stack 0
  1041  0002FA                     main_init@txbuf:
  1042                           	opt stack 0
  1043  0002FA                     	ds	1000
  1044                           tblptru	equ	0xFF8
  1045                           tblptrh	equ	0xFF7
  1046                           tblptrl	equ	0xFF6
  1047                           tablat	equ	0xFF5
  1048                           postinc0	equ	0xFEE
  1049                           wreg	equ	0xFE8
  1050                           postdec1	equ	0xFE5
  1051                           fsr1h	equ	0xFE2
  1052                           fsr1l	equ	0xFE1
  1053                           
  1054                           	psect	cstackBANK1
  1055  000100                     __pcstackBANK1:
  1056                           	opt stack 0
  1057  000100                     terminal_operation@str:
  1058                           	opt stack 0
  1059                           
  1060                           ; 30 bytes @ 0x0
  1061  000100                     	ds	30
  1062  00011E                     _terminal_operation$4485:
  1063                           	opt stack 0
  1064                           
  1065                           ; 2 bytes @ 0x1E
  1066  00011E                     	ds	2
  1067  000120                     _terminal_operation$4486:
  1068                           	opt stack 0
  1069                           
  1070                           ; 2 bytes @ 0x20
  1071  000120                     	ds	2
  1072  000122                     terminal_loop@buf:
  1073                           	opt stack 0
  1074                           
  1075                           ; 100 bytes @ 0x22
  1076  000122                     	ds	100
  1077  000186                     _terminal_loop$4483:
  1078                           	opt stack 0
  1079                           
  1080                           ; 2 bytes @ 0x86
  1081  000186                     	ds	2
  1082  000188                     terminal_loop@i_2775:
  1083                           	opt stack 0
  1084                           
  1085                           ; 1 bytes @ 0x88
  1086  000188                     	ds	1
  1087  000189                     terminal_loop@ascii:
  1088                           	opt stack 0
  1089                           
  1090                           ; 1 bytes @ 0x89
  1091  000189                     	ds	1
  1092  00018A                     terminal_loop@i:
  1093                           	opt stack 0
  1094                           
  1095                           ; 1 bytes @ 0x8A
  1096  00018A                     	ds	1
  1097                           tblptru	equ	0xFF8
  1098                           tblptrh	equ	0xFF7
  1099                           tblptrl	equ	0xFF6
  1100                           tablat	equ	0xFF5
  1101                           postinc0	equ	0xFEE
  1102                           wreg	equ	0xFE8
  1103                           postdec1	equ	0xFE5
  1104                           fsr1h	equ	0xFE2
  1105                           fsr1l	equ	0xFE1
  1106                           
  1107                           	psect	cstackBANK0
  1108  000060                     __pcstackBANK0:
  1109                           	opt stack 0
  1110  000060                     ??_ringbuf_num:
  1111  000060                     ??_strcmp:
  1112  000060                     ?___llmod:
  1113                           	opt stack 0
  1114  000060                     RTCC_to_caltime@dumy:
  1115                           	opt stack 0
  1116  000060                     ___awmod@counter:
  1117                           	opt stack 0
  1118  000060                     ringbuf_init@rb:
  1119                           	opt stack 0
  1120  000060                     ___wmul@product:
  1121                           	opt stack 0
  1122  000060                     ___llmod@dividend:
  1123                           	opt stack 0
  1124                           
  1125                           ; 4 bytes @ 0x0
  1126  000060                     	ds	1
  1127  000061                     ___awmod@sign:
  1128                           	opt stack 0
  1129  000061                     strcmp@r:
  1130                           	opt stack 0
  1131                           
  1132                           ; 1 bytes @ 0x1
  1133  000061                     	ds	1
  1134  000062                     ?_atoi:
  1135                           	opt stack 0
  1136  000062                     ?___lwdiv:
  1137                           	opt stack 0
  1138  000062                     month_length@month:
  1139                           	opt stack 0
  1140  000062                     ringbuf_init@internal_buf:
  1141                           	opt stack 0
  1142  000062                     atoi@s:
  1143                           	opt stack 0
  1144  000062                     ___lwdiv@dividend:
  1145                           	opt stack 0
  1146                           
  1147                           ; 2 bytes @ 0x2
  1148  000062                     	ds	1
  1149  000063                     ??_month_length:
  1150                           
  1151                           ; 0 bytes @ 0x3
  1152  000063                     	ds	1
  1153  000064                     ??_atoi:
  1154  000064                     ringbuf_init@bufsize:
  1155                           	opt stack 0
  1156  000064                     ___lwdiv@divisor:
  1157                           	opt stack 0
  1158  000064                     ___llmod@divisor:
  1159                           	opt stack 0
  1160                           
  1161                           ; 4 bytes @ 0x4
  1162  000064                     	ds	2
  1163  000066                     ??_ringbuf_pop:
  1164  000066                     ??_ringbuf_backspace:
  1165  000066                     atoi@sign:
  1166                           	opt stack 0
  1167  000066                     ___lwdiv@counter:
  1168                           	opt stack 0
  1169  000066                     ringbuf_put@rb:
  1170                           	opt stack 0
  1171                           
  1172                           ; 2 bytes @ 0x6
  1173  000066                     	ds	1
  1174  000067                     month_length@year:
  1175                           	opt stack 0
  1176  000067                     atoi@a:
  1177                           	opt stack 0
  1178  000067                     ___lwdiv@quotient:
  1179                           	opt stack 0
  1180                           
  1181                           ; 2 bytes @ 0x7
  1182  000067                     	ds	1
  1183  000068                     ?___lmul:
  1184                           	opt stack 0
  1185  000068                     ringbuf_put@asciicode:
  1186                           	opt stack 0
  1187  000068                     ___lmul@multiplier:
  1188                           	opt stack 0
  1189                           
  1190                           ; 4 bytes @ 0x8
  1191  000068                     	ds	1
  1192  000069                     ??_ringbuf_put:
  1193  000069                     ?___awdiv:
  1194                           	opt stack 0
  1195  000069                     ?___lwmod:
  1196                           	opt stack 0
  1197  000069                     ___awdiv@dividend:
  1198                           	opt stack 0
  1199  000069                     ___lwmod@dividend:
  1200                           	opt stack 0
  1201                           
  1202                           ; 2 bytes @ 0x9
  1203  000069                     	ds	1
  1204  00006A                     ringbuf_pop@ret:
  1205                           	opt stack 0
  1206                           
  1207                           ; 1 bytes @ 0xA
  1208  00006A                     	ds	1
  1209  00006B                     ___awdiv@divisor:
  1210                           	opt stack 0
  1211  00006B                     ___lwmod@divisor:
  1212                           	opt stack 0
  1213                           
  1214                           ; 2 bytes @ 0xB
  1215  00006B                     	ds	1
  1216  00006C                     ___lmul@multiplicand:
  1217                           	opt stack 0
  1218                           
  1219                           ; 4 bytes @ 0xC
  1220  00006C                     	ds	1
  1221  00006D                     ___awdiv@counter:
  1222                           	opt stack 0
  1223  00006D                     ___lwmod@counter:
  1224                           	opt stack 0
  1225  00006D                     ringbuf_put_str@rb:
  1226                           	opt stack 0
  1227                           
  1228                           ; 2 bytes @ 0xD
  1229  00006D                     	ds	1
  1230  00006E                     ?_sprintf:
  1231                           	opt stack 0
  1232  00006E                     ___awdiv@sign:
  1233                           	opt stack 0
  1234  00006E                     ringbuf_put_num@rb:
  1235                           	opt stack 0
  1236  00006E                     sprintf@sp:
  1237                           	opt stack 0
  1238                           
  1239                           ; 2 bytes @ 0xE
  1240  00006E                     	ds	1
  1241  00006F                     ringbuf_put_str@str:
  1242                           	opt stack 0
  1243  00006F                     ___awdiv@quotient:
  1244                           	opt stack 0
  1245                           
  1246                           ; 2 bytes @ 0xF
  1247  00006F                     	ds	1
  1248  000070                     ringbuf_put_num@value:
  1249                           	opt stack 0
  1250  000070                     sprintf@f:
  1251                           	opt stack 0
  1252  000070                     ___lmul@product:
  1253                           	opt stack 0
  1254                           
  1255                           ; 4 bytes @ 0x10
  1256  000070                     	ds	1
  1257  000071                     d_to_x@dec:
  1258                           	opt stack 0
  1259  000071                     PWM_set@value:
  1260                           	opt stack 0
  1261                           
  1262                           ; 2 bytes @ 0x11
  1263  000071                     	ds	1
  1264  000072                     ringbuf_put_num@digits:
  1265                           	opt stack 0
  1266  000072                     caltime_to_RTCC@tm:
  1267                           	opt stack 0
  1268                           
  1269                           ; 2 bytes @ 0x12
  1270  000072                     	ds	1
  1271  000073                     ??_PWM_set:
  1272  000073                     ringbuf_put_num@i:
  1273                           	opt stack 0
  1274                           
  1275                           ; 1 bytes @ 0x13
  1276  000073                     	ds	1
  1277  000074                     ?___lldiv:
  1278                           	opt stack 0
  1279  000074                     ringbuf_put_num@temp:
  1280                           	opt stack 0
  1281  000074                     caltime_to_epoch@tm:
  1282                           	opt stack 0
  1283  000074                     ___lldiv@dividend:
  1284                           	opt stack 0
  1285                           
  1286                           ; 4 bytes @ 0x14
  1287  000074                     	ds	1
  1288  000075                     PWM_set@color:
  1289                           	opt stack 0
  1290                           
  1291                           ; 1 bytes @ 0x15
  1292  000075                     	ds	1
  1293  000076                     ??_caltime_to_epoch:
  1294                           
  1295                           ; 0 bytes @ 0x16
  1296  000076                     	ds	2
  1297  000078                     ___lldiv@divisor:
  1298                           	opt stack 0
  1299                           
  1300                           ; 4 bytes @ 0x18
  1301  000078                     	ds	2
  1302  00007A                     caltime_to_epoch@year:
  1303                           	opt stack 0
  1304                           
  1305                           ; 1 bytes @ 0x1A
  1306  00007A                     	ds	1
  1307  00007B                     caltime_to_epoch@month_1932:
  1308                           	opt stack 0
  1309                           
  1310                           ; 1 bytes @ 0x1B
  1311  00007B                     	ds	1
  1312  00007C                     caltime_to_epoch@epoch:
  1313                           	opt stack 0
  1314  00007C                     ___lldiv@quotient:
  1315                           	opt stack 0
  1316                           
  1317                           ; 4 bytes @ 0x1C
  1318  00007C                     	ds	4
  1319  000080                     ??_sprintf:
  1320  000080                     caltime_to_epoch@month:
  1321                           	opt stack 0
  1322  000080                     ___lldiv@counter:
  1323                           	opt stack 0
  1324                           
  1325                           ; 1 bytes @ 0x20
  1326  000080                     	ds	1
  1327  000081                     ?_get_quot_rem:
  1328                           	opt stack 0
  1329  000081                     get_quot_rem@quot:
  1330                           	opt stack 0
  1331  000081                     RTCC_from_RTCC@tm:
  1332                           	opt stack 0
  1333                           
  1334                           ; 2 bytes @ 0x21
  1335  000081                     	ds	2
  1336  000083                     ??_light_loop:
  1337  000083                     get_quot_rem@div:
  1338                           	opt stack 0
  1339                           
  1340                           ; 1 bytes @ 0x23
  1341  000083                     	ds	1
  1342  000084                     sprintf@prec:
  1343                           	opt stack 0
  1344                           
  1345                           ; 1 bytes @ 0x24
  1346  000084                     	ds	1
  1347  000085                     sprintf@ap:
  1348                           	opt stack 0
  1349  000085                     get_quot_rem@num:
  1350                           	opt stack 0
  1351                           
  1352                           ; 4 bytes @ 0x25
  1353  000085                     	ds	2
  1354  000087                     light_loop@value:
  1355                           	opt stack 0
  1356  000087                     sprintf@cp:
  1357                           	opt stack 0
  1358                           
  1359                           ; 2 bytes @ 0x27
  1360  000087                     	ds	1
  1361  000088                     light_loop@value_3707:
  1362                           	opt stack 0
  1363                           
  1364                           ; 1 bytes @ 0x28
  1365  000088                     	ds	1
  1366  000089                     epoch_to_caltime@tm:
  1367                           	opt stack 0
  1368  000089                     sprintf@val:
  1369                           	opt stack 0
  1370  000089                     light_loop@temp:
  1371                           	opt stack 0
  1372                           
  1373                           ; 4 bytes @ 0x29
  1374  000089                     	ds	2
  1375  00008B                     ??_epoch_to_caltime:
  1376  00008B                     sprintf@len:
  1377                           	opt stack 0
  1378                           
  1379                           ; 2 bytes @ 0x2B
  1380  00008B                     	ds	2
  1381  00008D                     light_loop@i:
  1382                           	opt stack 0
  1383  00008D                     sprintf@flag:
  1384                           	opt stack 0
  1385  00008D                     epoch_to_caltime@day_since_epoch:
  1386                           	opt stack 0
  1387                           
  1388                           ; 2 bytes @ 0x2D
  1389  00008D                     	ds	1
  1390  00008E                     sprintf@c:
  1391                           	opt stack 0
  1392                           
  1393                           ; 1 bytes @ 0x2E
  1394  00008E                     	ds	1
  1395  00008F                     epoch_to_caltime@day:
  1396                           	opt stack 0
  1397  00008F                     sprintf@width:
  1398                           	opt stack 0
  1399                           
  1400                           ; 2 bytes @ 0x2F
  1401  00008F                     	ds	2
  1402  000091                     epoch_to_caltime@year:
  1403                           	opt stack 0
  1404  000091                     print_time@tx:
  1405                           	opt stack 0
  1406                           
  1407                           ; 2 bytes @ 0x31
  1408  000091                     	ds	1
  1409  000092                     epoch_to_caltime@month:
  1410                           	opt stack 0
  1411                           
  1412                           ; 1 bytes @ 0x32
  1413  000092                     	ds	1
  1414  000093                     epoch_to_caltime@num:
  1415                           	opt stack 0
  1416  000093                     print_time@str:
  1417                           	opt stack 0
  1418                           
  1419                           ; 30 bytes @ 0x33
  1420  000093                     	ds	4
  1421  000097                     RTCC_from_caltime@tm:
  1422                           	opt stack 0
  1423  000097                     RTCC_from_epoch@tm:
  1424                           	opt stack 0
  1425                           
  1426                           ; 2 bytes @ 0x37
  1427  000097                     	ds	26
  1428  0000B1                     terminal_at_hand@tx:
  1429                           	opt stack 0
  1430                           
  1431                           ; 2 bytes @ 0x51
  1432  0000B1                     	ds	2
  1433  0000B3                     terminal_at_hand@hand:
  1434                           	opt stack 0
  1435                           
  1436                           ; 2 bytes @ 0x53
  1437  0000B3                     	ds	2
  1438  0000B5                     terminal_at_hand@min:
  1439                           	opt stack 0
  1440                           
  1441                           ; 1 bytes @ 0x55
  1442  0000B5                     	ds	1
  1443  0000B6                     terminal_at_hand@max:
  1444                           	opt stack 0
  1445                           
  1446                           ; 1 bytes @ 0x56
  1447  0000B6                     	ds	1
  1448  0000B7                     terminal_at_hand@value:
  1449                           	opt stack 0
  1450                           
  1451                           ; 1 bytes @ 0x57
  1452  0000B7                     	ds	1
  1453  0000B8                     terminal_time@tx:
  1454                           	opt stack 0
  1455                           
  1456                           ; 2 bytes @ 0x58
  1457  0000B8                     	ds	2
  1458  0000BA                     terminal_time@op0:
  1459                           	opt stack 0
  1460                           
  1461                           ; 2 bytes @ 0x5A
  1462  0000BA                     	ds	2
  1463  0000BC                     terminal_time@op1:
  1464                           	opt stack 0
  1465                           
  1466                           ; 2 bytes @ 0x5C
  1467  0000BC                     	ds	2
  1468  0000BE                     terminal_time@op2:
  1469                           	opt stack 0
  1470                           
  1471                           ; 2 bytes @ 0x5E
  1472  0000BE                     	ds	2
  1473  0000C0                     _terminal_time$4484:
  1474                           	opt stack 0
  1475                           
  1476                           ; 1 bytes @ 0x60
  1477  0000C0                     	ds	1
  1478  0000C1                     terminal_operation@tx:
  1479                           	opt stack 0
  1480                           
  1481                           ; 2 bytes @ 0x61
  1482  0000C1                     	ds	2
  1483  0000C3                     terminal_operation@op0:
  1484                           	opt stack 0
  1485                           
  1486                           ; 2 bytes @ 0x63
  1487  0000C3                     	ds	2
  1488  0000C5                     terminal_operation@op1:
  1489                           	opt stack 0
  1490                           
  1491                           ; 2 bytes @ 0x65
  1492  0000C5                     	ds	2
  1493  0000C7                     terminal_operation@op2:
  1494                           	opt stack 0
  1495                           
  1496                           ; 2 bytes @ 0x67
  1497  0000C7                     	ds	2
  1498  0000C9                     terminal_operation@op3:
  1499                           	opt stack 0
  1500                           
  1501                           ; 2 bytes @ 0x69
  1502  0000C9                     	ds	2
  1503  0000CB                     ??_terminal_operation:
  1504                           
  1505                           ; 0 bytes @ 0x6B
  1506  0000CB                     	ds	2
  1507  0000CD                     terminal_loop@tx:
  1508                           	opt stack 0
  1509                           
  1510                           ; 2 bytes @ 0x6D
  1511  0000CD                     	ds	2
  1512  0000CF                     terminal_loop@rx:
  1513                           	opt stack 0
  1514                           
  1515                           ; 2 bytes @ 0x6F
  1516  0000CF                     	ds	2
  1517  0000D1                     ??_terminal_loop:
  1518                           
  1519                           ; 0 bytes @ 0x71
  1520  0000D1                     	ds	2
  1521                           tblptru	equ	0xFF8
  1522                           tblptrh	equ	0xFF7
  1523                           tblptrl	equ	0xFF6
  1524                           tablat	equ	0xFF5
  1525                           postinc0	equ	0xFEE
  1526                           wreg	equ	0xFE8
  1527                           postdec1	equ	0xFE5
  1528                           fsr1h	equ	0xFE2
  1529                           fsr1l	equ	0xFE1
  1530                           
  1531                           	psect	cstackCOMRAM
  1532  000001                     __pcstackCOMRAM:
  1533                           	opt stack 0
  1534  000001                     ?i2_ringbuf_num:
  1535                           	opt stack 0
  1536  000001                     button_timer_interrupt@bt:
  1537                           	opt stack 0
  1538  000001                     i2ringbuf_num@rb:
  1539                           	opt stack 0
  1540                           
  1541                           ; 2 bytes @ 0x0
  1542  000001                     	ds	2
  1543  000003                     ??i2_ringbuf_num:
  1544  000003                     button_timer_interrupt@sw_value:
  1545                           	opt stack 0
  1546                           
  1547                           ; 1 bytes @ 0x2
  1548  000003                     	ds	1
  1549  000004                     
  1550                           ; 0 bytes @ 0x3
  1551  000004                     	ds	5
  1552  000009                     i2ringbuf_put@rb:
  1553                           	opt stack 0
  1554  000009                     i2ringbuf_pop@rb:
  1555                           	opt stack 0
  1556                           
  1557                           ; 2 bytes @ 0x8
  1558  000009                     	ds	2
  1559  00000B                     ??i2_ringbuf_pop:
  1560  00000B                     i2ringbuf_put@asciicode:
  1561                           	opt stack 0
  1562                           
  1563                           ; 1 bytes @ 0xA
  1564  00000B                     	ds	1
  1565  00000C                     ??i2_ringbuf_put:
  1566                           
  1567                           ; 0 bytes @ 0xB
  1568  00000C                     	ds	3
  1569  00000F                     i2ringbuf_pop@ret:
  1570                           	opt stack 0
  1571                           
  1572                           ; 1 bytes @ 0xE
  1573  00000F                     	ds	1
  1574  000010                     UART_ISR@ascii:
  1575                           	opt stack 0
  1576                           
  1577                           ; 1 bytes @ 0xF
  1578  000010                     	ds	1
  1579  000011                     ??_ISR:
  1580                           
  1581                           ; 0 bytes @ 0x10
  1582  000011                     	ds	15
  1583  000020                     ??_isdigit:
  1584  000020                     ??_timer0_init:
  1585  000020                     ??_timer3_init:
  1586  000020                     ??_x_to_d:
  1587  000020                     ?_ringbuf_num:
  1588                           	opt stack 0
  1589  000020                     ?_strcmp:
  1590                           	opt stack 0
  1591  000020                     ?___wmul:
  1592                           	opt stack 0
  1593  000020                     ?___awmod:
  1594                           	opt stack 0
  1595  000020                     timer1_init@clock_select:
  1596                           	opt stack 0
  1597  000020                     ADC_init@p_ref:
  1598                           	opt stack 0
  1599  000020                     PWM_init@PR:
  1600                           	opt stack 0
  1601  000020                     ___llmod@counter:
  1602                           	opt stack 0
  1603  000020                     ringbuf_num@rb:
  1604                           	opt stack 0
  1605  000020                     ringbuf_delete@rb:
  1606                           	opt stack 0
  1607  000020                     ___wmul@multiplier:
  1608                           	opt stack 0
  1609  000020                     ___awmod@dividend:
  1610                           	opt stack 0
  1611  000020                     strcmp@s1:
  1612                           	opt stack 0
  1613                           
  1614                           ; 2 bytes @ 0x1F
  1615  000020                     	ds	1
  1616  000021                     ??_timer1_init:
  1617  000021                     timer0_init@prescaler:
  1618                           	opt stack 0
  1619  000021                     timer3_init@prescaler:
  1620                           	opt stack 0
  1621  000021                     x_to_d@hex:
  1622                           	opt stack 0
  1623  000021                     _isdigit$3997:
  1624                           	opt stack 0
  1625                           
  1626                           ; 1 bytes @ 0x20
  1627  000021                     	ds	1
  1628  000022                     timer1_init@prescaler:
  1629                           	opt stack 0
  1630  000022                     isdigit@c:
  1631                           	opt stack 0
  1632  000022                     tx_sends@asciicode:
  1633                           	opt stack 0
  1634  000022                     ringbuf_pop@rb:
  1635                           	opt stack 0
  1636  000022                     ringbuf_backspace@rb:
  1637                           	opt stack 0
  1638  000022                     RTCC_to_caltime@tm:
  1639                           	opt stack 0
  1640  000022                     ___wmul@multiplicand:
  1641                           	opt stack 0
  1642  000022                     ___awmod@divisor:
  1643                           	opt stack 0
  1644  000022                     strcmp@s2:
  1645                           	opt stack 0
  1646                           
  1647                           ; 2 bytes @ 0x21
  1648  000022                     	ds	1
  1649  000023                     
  1650                           ; 0 bytes @ 0x22
  1651  000023                     	ds	1
  1652  000024                     tblptru	equ	0xFF8
  1653                           tblptrh	equ	0xFF7
  1654                           tblptrl	equ	0xFF6
  1655                           tablat	equ	0xFF5
  1656                           postinc0	equ	0xFEE
  1657                           wreg	equ	0xFE8
  1658                           postdec1	equ	0xFE5
  1659                           fsr1h	equ	0xFE2
  1660                           fsr1l	equ	0xFE1
  1661                           
  1662                           ; 0 bytes @ 0x23
  1663 ;;
  1664 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1665 ;;
  1666 ;; *************** function _main *****************
  1667 ;; Defined at:
  1668 ;;		line 308 in file "PIC18F27J53-killifish_light05.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;		None
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;		None
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  2  864[None  ] int 
  1675 ;; Registers used:
  1676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1686 ;;Total ram usage:        0 bytes
  1687 ;; Hardware stack levels required when called:   13
  1688 ;; This function calls:
  1689 ;;		_RTCC_from_RTCC
  1690 ;;		_RTCC_from_epoch
  1691 ;;		_RTCC_loop
  1692 ;;		_light_loop
  1693 ;;		_main_init
  1694 ;;		_ringbuf_num
  1695 ;;		_terminal_loop
  1696 ;; This function is called by:
  1697 ;;		Startup code after reset
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text0
  1702  012848                     __ptext0:
  1703                           	opt stack 0
  1704  012848                     _main:
  1705                           	opt stack 18
  1706                           
  1707                           ;PIC18F27J53-killifish_light05.c: 309: main_init();
  1708                           
  1709                           ;incstack = 0
  1710  012848  EC4D  F092         	call	_main_init	;wreg free
  1711                           
  1712                           ;PIC18F27J53-killifish_light05.c: 311: RTCC_from_RTCC(&now);
  1713  01284C  0E28               	movlw	low _now
  1714  01284E  0100               	movlb	0	; () banked
  1715  012850  6F81               	movwf	RTCC_from_RTCC@tm& (0+255),b
  1716  012852  0E00               	movlw	high _now
  1717  012854  0100               	movlb	0	; () banked
  1718  012856  6F82               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  1719  012858  EC00  F097         	call	_RTCC_from_RTCC	;wreg free
  1720                           
  1721                           ;PIC18F27J53-killifish_light05.c: 312: if (now.DD == 0) {
  1722  01285C  5030               	movf	_now+8,w,c
  1723  01285E  A4D8               	btfss	status,2,c
  1724  012860  D010               	goto	l6251
  1725                           
  1726                           ;PIC18F27J53-killifish_light05.c: 313: now.epoch = 0;
  1727  012862  0E00               	movlw	0
  1728  012864  6E28               	movwf	_now,c
  1729  012866  0E00               	movlw	0
  1730  012868  6E29               	movwf	_now+1,c
  1731  01286A  0E00               	movlw	0
  1732  01286C  6E2A               	movwf	_now+2,c
  1733  01286E  0E00               	movlw	0
  1734  012870  6E2B               	movwf	_now+3,c
  1735                           
  1736                           ;PIC18F27J53-killifish_light05.c: 314: RTCC_from_epoch(&now);
  1737  012872  0E28               	movlw	low _now
  1738  012874  0100               	movlb	0	; () banked
  1739  012876  6F97               	movwf	RTCC_from_epoch@tm& (0+255),b
  1740  012878  0E00               	movlw	high _now
  1741  01287A  0100               	movlb	0	; () banked
  1742  01287C  6F98               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  1743  01287E  EC0D  F097         	call	_RTCC_from_epoch	;wreg free
  1744  012882                     l6251:
  1745                           
  1746                           ;PIC18F27J53-killifish_light05.c: 318: INTCONbits.GIE = 0;
  1747  012882  9EF2               	bcf	intcon,7,c	;volatile
  1748                           
  1749                           ;PIC18F27J53-killifish_light05.c: 319: RTCC_loop();
  1750  012884  EC28  F096         	call	_RTCC_loop	;wreg free
  1751                           
  1752                           ;PIC18F27J53-killifish_light05.c: 320: terminal_loop(&tx_buf, &rx_buf);
  1753  012888  0ED9               	movlw	low _tx_buf
  1754  01288A  0100               	movlb	0	; () banked
  1755  01288C  6FCD               	movwf	terminal_loop@tx& (0+255),b
  1756  01288E  0E00               	movlw	high _tx_buf
  1757  012890  0100               	movlb	0	; () banked
  1758  012892  6FCE               	movwf	(terminal_loop@tx+1)& (0+255),b
  1759  012894  0EF3               	movlw	low _rx_buf
  1760  012896  0100               	movlb	0	; () banked
  1761  012898  6FCF               	movwf	terminal_loop@rx& (0+255),b
  1762  01289A  0E01               	movlw	high _rx_buf
  1763  01289C  0100               	movlb	0	; () banked
  1764  01289E  6FD0               	movwf	(terminal_loop@rx+1)& (0+255),b
  1765  0128A0  EC62  F084         	call	_terminal_loop	;wreg free
  1766                           
  1767                           ;PIC18F27J53-killifish_light05.c: 321: if (ringbuf_num(&tx_buf))PIE1bits.TXIE = 1;
  1768  0128A4  0ED9               	movlw	low _tx_buf
  1769  0128A6  6E20               	movwf	ringbuf_num@rb,c
  1770  0128A8  0E00               	movlw	high _tx_buf
  1771  0128AA  6E21               	movwf	ringbuf_num@rb+1,c
  1772  0128AC  EC5F  F08D         	call	_ringbuf_num	;wreg free
  1773  0128B0  5020               	movf	?_ringbuf_num,w,c
  1774  0128B2  1021               	iorwf	?_ringbuf_num+1,w,c
  1775  0128B4  A4D8               	btfss	status,2,c
  1776  0128B6  889D               	bsf	3997,4,c	;volatile
  1777                           
  1778                           ;PIC18F27J53-killifish_light05.c: 322: light_loop();
  1779  0128B8  EC1E  F08A         	call	_light_loop	;wreg free
  1780                           
  1781                           ;PIC18F27J53-killifish_light05.c: 323: INTCONbits.GIE = 1;
  1782  0128BC  8EF2               	bsf	intcon,7,c	;volatile
  1783  0128BE  D7E1               	goto	l6251
  1784  0128C0                     __end_of_main:
  1785                           	opt stack 0
  1786                           tblptru	equ	0xFF8
  1787                           tblptrh	equ	0xFF7
  1788                           tblptrl	equ	0xFF6
  1789                           tablat	equ	0xFF5
  1790                           intcon	equ	0xFF2
  1791                           postinc0	equ	0xFEE
  1792                           wreg	equ	0xFE8
  1793                           postdec1	equ	0xFE5
  1794                           fsr1h	equ	0xFE2
  1795                           fsr1l	equ	0xFE1
  1796                           status	equ	0xFD8
  1797                           
  1798 ;; *************** function _terminal_loop *****************
  1799 ;; Defined at:
  1800 ;;		line 8 in file "../My_library/My_terminal.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  tx              2  109[BANK0 ] PTR struct ringbuf
  1803 ;;		 -> tx_buf(8), 
  1804 ;;  rx              2  111[BANK0 ] PTR struct ringbuf
  1805 ;;		 -> rx_buf(8), 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;  i               1  136[BANK1 ] unsigned char 
  1808 ;;  i               1  138[BANK1 ] unsigned char 
  1809 ;;  ascii           1  137[BANK1 ] unsigned char 
  1810 ;;  buf           100   34[BANK1 ] unsigned char [100]
  1811 ;; Return value:  Size  Location     Type
  1812 ;;		None               void
  1813 ;; Registers used:
  1814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1820 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1821 ;;      Locals:         0       0     105       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1822 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1823 ;;      Totals:         0       6     105       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1824 ;;Total ram usage:      111 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; Hardware stack levels required when called:   12
  1827 ;; This function calls:
  1828 ;;		_ringbuf_backspace
  1829 ;;		_ringbuf_delete
  1830 ;;		_ringbuf_init
  1831 ;;		_ringbuf_num
  1832 ;;		_ringbuf_pop
  1833 ;;		_ringbuf_put
  1834 ;;		_ringbuf_put_num
  1835 ;;		_ringbuf_put_str
  1836 ;;		_terminal_operation
  1837 ;; This function is called by:
  1838 ;;		_main
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text1
  1843  0108C4                     __ptext1:
  1844                           	opt stack 0
  1845  0108C4                     _terminal_loop:
  1846                           	opt stack 18
  1847                           
  1848                           ;My_terminal.c: 9: static ringbuf_t command;
  1849                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  1850                           ;My_terminal.c: 11: if (command_init == 0) {
  1851                           
  1852                           ;incstack = 0
  1853  0108C4  0100               	movlb	0	; () banked
  1854  0108C6  51D8               	movf	terminal_loop@command_init& (0+255),w,b
  1855  0108C8  0100               	movlb	0	; () banked
  1856  0108CA  A4D8               	btfss	status,2,c
  1857  0108CC  D016               	goto	l5929
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;My_terminal.c: 12: command_init = 1;
  1861  0108CE  0E01               	movlw	1
  1862  0108D0  0100               	movlb	0	; () banked
  1863  0108D2  6FD8               	movwf	terminal_loop@command_init& (0+255),b
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;My_terminal.c: 13: char buf[100];
  1867                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  1868  0108D4  0EE1               	movlw	low terminal_loop@command
  1869  0108D6  0100               	movlb	0	; () banked
  1870  0108D8  6F60               	movwf	ringbuf_init@rb& (0+255),b
  1871  0108DA  0E00               	movlw	high terminal_loop@command
  1872  0108DC  0100               	movlb	0	; () banked
  1873  0108DE  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  1874  0108E0  0E22               	movlw	low terminal_loop@buf
  1875  0108E2  0100               	movlb	0	; () banked
  1876  0108E4  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  1877  0108E6  0E01               	movlw	high terminal_loop@buf
  1878  0108E8  0100               	movlb	0	; () banked
  1879  0108EA  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  1880  0108EC  0E00               	movlw	0
  1881  0108EE  0100               	movlb	0	; () banked
  1882  0108F0  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  1883  0108F2  0E64               	movlw	100
  1884  0108F4  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  1885  0108F6  EC96  F095         	call	_ringbuf_init	;wreg free
  1886  0108FA                     l5929:
  1887                           
  1888                           ;My_terminal.c: 15: }
  1889                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  1890  0108FA  C0CF  F020         	movff	terminal_loop@rx,ringbuf_num@rb
  1891  0108FE  C0D0  F021         	movff	terminal_loop@rx+1,ringbuf_num@rb+1
  1892  010902  EC5F  F08D         	call	_ringbuf_num	;wreg free
  1893  010906  5020               	movf	?_ringbuf_num,w,c
  1894  010908  1021               	iorwf	?_ringbuf_num+1,w,c
  1895  01090A  B4D8               	btfsc	status,2,c
  1896  01090C  0012               	return	
  1897                           
  1898                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  1899  01090E  C0CF  F022         	movff	terminal_loop@rx,ringbuf_pop@rb
  1900  010912  C0D0  F023         	movff	terminal_loop@rx+1,ringbuf_pop@rb+1
  1901  010916  EC6F  F08F         	call	_ringbuf_pop	;wreg free
  1902  01091A  0101               	movlb	1	; () banked
  1903  01091C  6F89               	movwf	terminal_loop@ascii& (0+255),b
  1904                           
  1905                           ;My_terminal.c: 18: switch (ascii) {
  1906  01091E  D162               	goto	l5993
  1907  010920                     l5933:
  1908                           
  1909                           ; BSR set to: 1
  1910                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  1911  010920  0EE1               	movlw	low terminal_loop@command
  1912  010922  0100               	movlb	0	; () banked
  1913  010924  6F66               	movwf	ringbuf_put@rb& (0+255),b
  1914  010926  0E00               	movlw	high terminal_loop@command
  1915  010928  0100               	movlb	0	; () banked
  1916  01092A  6F67               	movwf	(ringbuf_put@rb+1)& (0+255),b
  1917  01092C  0E00               	movlw	0
  1918  01092E  0100               	movlb	0	; () banked
  1919  010930  6F68               	movwf	ringbuf_put@asciicode& (0+255),b
  1920  010932  ECA0  F08E         	call	_ringbuf_put	;wreg free
  1921                           
  1922                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  1923  010936  C0CD  F066         	movff	terminal_loop@tx,ringbuf_put@rb
  1924  01093A  C0CE  F067         	movff	terminal_loop@tx+1,ringbuf_put@rb+1
  1925  01093E  0E09               	movlw	9
  1926  010940  0100               	movlb	0	; () banked
  1927  010942  6F68               	movwf	ringbuf_put@asciicode& (0+255),b
  1928  010944  ECA0  F08E         	call	_ringbuf_put	;wreg free
  1929                           
  1930                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  1931  010948  0EE1               	movlw	low terminal_loop@command
  1932  01094A  6E20               	movwf	ringbuf_num@rb,c
  1933  01094C  0E00               	movlw	high terminal_loop@command
  1934  01094E  6E21               	movwf	ringbuf_num@rb+1,c
  1935  010950  EC5F  F08D         	call	_ringbuf_num	;wreg free
  1936  010954  0EFF               	movlw	255
  1937  010956  2420               	addwf	?_ringbuf_num,w,c
  1938  010958  0101               	movlb	1	; () banked
  1939  01095A  6F86               	movwf	_terminal_loop$4483& (0+255),b
  1940  01095C  0EFF               	movlw	255
  1941  01095E  2021               	addwfc	?_ringbuf_num+1,w,c
  1942  010960  0101               	movlb	1	; () banked
  1943  010962  6F87               	movwf	(_terminal_loop$4483+1)& (0+255),b
  1944                           
  1945                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  1946  010964  C0CD  F06E         	movff	terminal_loop@tx,ringbuf_put_num@rb
  1947  010968  C0CE  F06F         	movff	terminal_loop@tx+1,ringbuf_put_num@rb+1
  1948  01096C  C186  F070         	movff	_terminal_loop$4483,ringbuf_put_num@value
  1949  010970  C187  F071         	movff	_terminal_loop$4483+1,ringbuf_put_num@value+1
  1950  010974  0E02               	movlw	2
  1951  010976  0100               	movlb	0	; () banked
  1952  010978  6F72               	movwf	ringbuf_put_num@digits& (0+255),b
  1953  01097A  EC27  F093         	call	_ringbuf_put_num	;wreg free
  1954                           
  1955                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  1956  01097E  C0CD  F066         	movff	terminal_loop@tx,ringbuf_put@rb
  1957  010982  C0CE  F067         	movff	terminal_loop@tx+1,ringbuf_put@rb+1
  1958  010986  0E0A               	movlw	10
  1959  010988  0100               	movlb	0	; () banked
  1960  01098A  6F68               	movwf	ringbuf_put@asciicode& (0+255),b
  1961  01098C  ECA0  F08E         	call	_ringbuf_put	;wreg free
  1962                           
  1963                           ;My_terminal.c: 24: static char op0[25];
  1964                           ;My_terminal.c: 25: static char op1[25];
  1965                           ;My_terminal.c: 26: static char op2[25];
  1966                           ;My_terminal.c: 27: static char op3[25];
  1967                           ;My_terminal.c: 28: uint8_t i;
  1968                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  1969  010990  0E00               	movlw	0
  1970  010992  0101               	movlb	1	; () banked
  1971  010994  6F8A               	movwf	terminal_loop@i& (0+255),b
  1972  010996  D002               	goto	l5939
  1973  010998                     l5937:
  1974                           
  1975                           ; BSR set to: 1
  1976  010998  0101               	movlb	1	; () banked
  1977  01099A  2B8A               	incf	terminal_loop@i& (0+255),f,b
  1978  01099C                     l5939:
  1979                           
  1980                           ; BSR set to: 1
  1981  01099C  0EE1               	movlw	low terminal_loop@command
  1982  01099E  6E22               	movwf	ringbuf_pop@rb,c
  1983  0109A0  0E00               	movlw	high terminal_loop@command
  1984  0109A2  6E23               	movwf	ringbuf_pop@rb+1,c
  1985  0109A4  EC6F  F08F         	call	_ringbuf_pop	;wreg free
  1986  0109A8  0100               	movlb	0	; () banked
  1987  0109AA  6FD1               	movwf	??_terminal_loop& (0+255),b
  1988  0109AC  0101               	movlb	1	; () banked
  1989  0109AE  518A               	movf	terminal_loop@i& (0+255),w,b
  1990  0109B0  0D01               	mullw	1
  1991  0109B2  0E8F               	movlw	low terminal_loop@op0
  1992  0109B4  24F3               	addwf	prodl,w,c
  1993  0109B6  6ED9               	movwf	fsr2l,c
  1994  0109B8  0E01               	movlw	high terminal_loop@op0
  1995  0109BA  20F4               	addwfc	prodh,w,c
  1996  0109BC  6EDA               	movwf	fsr2h,c
  1997  0109BE  C0D1  FFDF         	movff	??_terminal_loop,indf2
  1998  0109C2  50DF               	movf	indf2,w,c
  1999  0109C4  A4D8               	btfss	status,2,c
  2000  0109C6  D7E8               	goto	l5937
  2001                           
  2002                           ; BSR set to: 1
  2003                           ;My_terminal.c: 30: op0[i] = '\0';
  2004                           
  2005                           ; BSR set to: 1
  2006  0109C8  0101               	movlb	1	; () banked
  2007  0109CA  518A               	movf	terminal_loop@i& (0+255),w,b
  2008  0109CC  0D01               	mullw	1
  2009  0109CE  0E8F               	movlw	low terminal_loop@op0
  2010  0109D0  24F3               	addwf	prodl,w,c
  2011  0109D2  6ED9               	movwf	fsr2l,c
  2012  0109D4  0E01               	movlw	high terminal_loop@op0
  2013  0109D6  20F4               	addwfc	prodh,w,c
  2014  0109D8  6EDA               	movwf	fsr2h,c
  2015  0109DA  0E00               	movlw	0
  2016  0109DC  6EDF               	movwf	indf2,c
  2017                           
  2018                           ; BSR set to: 1
  2019                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  2020  0109DE  0E00               	movlw	0
  2021  0109E0  0101               	movlb	1	; () banked
  2022  0109E2  6F8A               	movwf	terminal_loop@i& (0+255),b
  2023  0109E4  D002               	goto	l5947
  2024  0109E6                     l5945:
  2025                           
  2026                           ; BSR set to: 1
  2027  0109E6  0101               	movlb	1	; () banked
  2028  0109E8  2B8A               	incf	terminal_loop@i& (0+255),f,b
  2029  0109EA                     l5947:
  2030                           
  2031                           ; BSR set to: 1
  2032  0109EA  0EE1               	movlw	low terminal_loop@command
  2033  0109EC  6E22               	movwf	ringbuf_pop@rb,c
  2034  0109EE  0E00               	movlw	high terminal_loop@command
  2035  0109F0  6E23               	movwf	ringbuf_pop@rb+1,c
  2036  0109F2  EC6F  F08F         	call	_ringbuf_pop	;wreg free
  2037  0109F6  0100               	movlb	0	; () banked
  2038  0109F8  6FD1               	movwf	??_terminal_loop& (0+255),b
  2039  0109FA  0101               	movlb	1	; () banked
  2040  0109FC  518A               	movf	terminal_loop@i& (0+255),w,b
  2041  0109FE  0D01               	mullw	1
  2042  010A00  0EA8               	movlw	low terminal_loop@op1
  2043  010A02  24F3               	addwf	prodl,w,c
  2044  010A04  6ED9               	movwf	fsr2l,c
  2045  010A06  0E01               	movlw	high terminal_loop@op1
  2046  010A08  20F4               	addwfc	prodh,w,c
  2047  010A0A  6EDA               	movwf	fsr2h,c
  2048  010A0C  C0D1  FFDF         	movff	??_terminal_loop,indf2
  2049  010A10  50DF               	movf	indf2,w,c
  2050  010A12  A4D8               	btfss	status,2,c
  2051  010A14  D7E8               	goto	l5945
  2052                           
  2053                           ; BSR set to: 1
  2054                           ;My_terminal.c: 32: op1[i] = '\0';
  2055                           
  2056                           ; BSR set to: 1
  2057  010A16  0101               	movlb	1	; () banked
  2058  010A18  518A               	movf	terminal_loop@i& (0+255),w,b
  2059  010A1A  0D01               	mullw	1
  2060  010A1C  0EA8               	movlw	low terminal_loop@op1
  2061  010A1E  24F3               	addwf	prodl,w,c
  2062  010A20  6ED9               	movwf	fsr2l,c
  2063  010A22  0E01               	movlw	high terminal_loop@op1
  2064  010A24  20F4               	addwfc	prodh,w,c
  2065  010A26  6EDA               	movwf	fsr2h,c
  2066  010A28  0E00               	movlw	0
  2067  010A2A  6EDF               	movwf	indf2,c
  2068                           
  2069                           ; BSR set to: 1
  2070                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  2071  010A2C  0E00               	movlw	0
  2072  010A2E  0101               	movlb	1	; () banked
  2073  010A30  6F8A               	movwf	terminal_loop@i& (0+255),b
  2074  010A32  D002               	goto	l5955
  2075  010A34                     l5953:
  2076                           
  2077                           ; BSR set to: 1
  2078  010A34  0101               	movlb	1	; () banked
  2079  010A36  2B8A               	incf	terminal_loop@i& (0+255),f,b
  2080  010A38                     l5955:
  2081                           
  2082                           ; BSR set to: 1
  2083  010A38  0EE1               	movlw	low terminal_loop@command
  2084  010A3A  6E22               	movwf	ringbuf_pop@rb,c
  2085  010A3C  0E00               	movlw	high terminal_loop@command
  2086  010A3E  6E23               	movwf	ringbuf_pop@rb+1,c
  2087  010A40  EC6F  F08F         	call	_ringbuf_pop	;wreg free
  2088  010A44  0100               	movlb	0	; () banked
  2089  010A46  6FD1               	movwf	??_terminal_loop& (0+255),b
  2090  010A48  0101               	movlb	1	; () banked
  2091  010A4A  518A               	movf	terminal_loop@i& (0+255),w,b
  2092  010A4C  0D01               	mullw	1
  2093  010A4E  0EC1               	movlw	low terminal_loop@op2
  2094  010A50  24F3               	addwf	prodl,w,c
  2095  010A52  6ED9               	movwf	fsr2l,c
  2096  010A54  0E01               	movlw	high terminal_loop@op2
  2097  010A56  20F4               	addwfc	prodh,w,c
  2098  010A58  6EDA               	movwf	fsr2h,c
  2099  010A5A  C0D1  FFDF         	movff	??_terminal_loop,indf2
  2100  010A5E  50DF               	movf	indf2,w,c
  2101  010A60  A4D8               	btfss	status,2,c
  2102  010A62  D7E8               	goto	l5953
  2103                           
  2104                           ; BSR set to: 1
  2105                           ;My_terminal.c: 34: op2[i] = '\0';
  2106                           
  2107                           ; BSR set to: 1
  2108  010A64  0101               	movlb	1	; () banked
  2109  010A66  518A               	movf	terminal_loop@i& (0+255),w,b
  2110  010A68  0D01               	mullw	1
  2111  010A6A  0EC1               	movlw	low terminal_loop@op2
  2112  010A6C  24F3               	addwf	prodl,w,c
  2113  010A6E  6ED9               	movwf	fsr2l,c
  2114  010A70  0E01               	movlw	high terminal_loop@op2
  2115  010A72  20F4               	addwfc	prodh,w,c
  2116  010A74  6EDA               	movwf	fsr2h,c
  2117  010A76  0E00               	movlw	0
  2118  010A78  6EDF               	movwf	indf2,c
  2119                           
  2120                           ; BSR set to: 1
  2121                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  2122  010A7A  0E00               	movlw	0
  2123  010A7C  0101               	movlb	1	; () banked
  2124  010A7E  6F8A               	movwf	terminal_loop@i& (0+255),b
  2125  010A80  D002               	goto	l5963
  2126  010A82                     l5961:
  2127                           
  2128                           ; BSR set to: 1
  2129  010A82  0101               	movlb	1	; () banked
  2130  010A84  2B8A               	incf	terminal_loop@i& (0+255),f,b
  2131  010A86                     l5963:
  2132                           
  2133                           ; BSR set to: 1
  2134  010A86  0EE1               	movlw	low terminal_loop@command
  2135  010A88  6E22               	movwf	ringbuf_pop@rb,c
  2136  010A8A  0E00               	movlw	high terminal_loop@command
  2137  010A8C  6E23               	movwf	ringbuf_pop@rb+1,c
  2138  010A8E  EC6F  F08F         	call	_ringbuf_pop	;wreg free
  2139  010A92  0100               	movlb	0	; () banked
  2140  010A94  6FD1               	movwf	??_terminal_loop& (0+255),b
  2141  010A96  0101               	movlb	1	; () banked
  2142  010A98  518A               	movf	terminal_loop@i& (0+255),w,b
  2143  010A9A  0D01               	mullw	1
  2144  010A9C  0EDA               	movlw	low terminal_loop@op3
  2145  010A9E  24F3               	addwf	prodl,w,c
  2146  010AA0  6ED9               	movwf	fsr2l,c
  2147  010AA2  0E01               	movlw	high terminal_loop@op3
  2148  010AA4  20F4               	addwfc	prodh,w,c
  2149  010AA6  6EDA               	movwf	fsr2h,c
  2150  010AA8  C0D1  FFDF         	movff	??_terminal_loop,indf2
  2151  010AAC  50DF               	movf	indf2,w,c
  2152  010AAE  A4D8               	btfss	status,2,c
  2153  010AB0  D7E8               	goto	l5961
  2154                           
  2155                           ; BSR set to: 1
  2156                           ;My_terminal.c: 36: op3[i] = '\0';
  2157                           
  2158                           ; BSR set to: 1
  2159  010AB2  0101               	movlb	1	; () banked
  2160  010AB4  518A               	movf	terminal_loop@i& (0+255),w,b
  2161  010AB6  0D01               	mullw	1
  2162  010AB8  0EDA               	movlw	low terminal_loop@op3
  2163  010ABA  24F3               	addwf	prodl,w,c
  2164  010ABC  6ED9               	movwf	fsr2l,c
  2165  010ABE  0E01               	movlw	high terminal_loop@op3
  2166  010AC0  20F4               	addwfc	prodh,w,c
  2167  010AC2  6EDA               	movwf	fsr2h,c
  2168  010AC4  0E00               	movlw	0
  2169  010AC6  6EDF               	movwf	indf2,c
  2170                           
  2171                           ; BSR set to: 1
  2172                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  2173  010AC8  C0CD  F0C1         	movff	terminal_loop@tx,terminal_operation@tx
  2174  010ACC  C0CE  F0C2         	movff	terminal_loop@tx+1,terminal_operation@tx+1
  2175  010AD0  0E8F               	movlw	low terminal_loop@op0
  2176  010AD2  0100               	movlb	0	; () banked
  2177  010AD4  6FC3               	movwf	terminal_operation@op0& (0+255),b
  2178  010AD6  0E01               	movlw	high terminal_loop@op0
  2179  010AD8  0100               	movlb	0	; () banked
  2180  010ADA  6FC4               	movwf	(terminal_operation@op0+1)& (0+255),b
  2181  010ADC  0EA8               	movlw	low terminal_loop@op1
  2182  010ADE  0100               	movlb	0	; () banked
  2183  010AE0  6FC5               	movwf	terminal_operation@op1& (0+255),b
  2184  010AE2  0E01               	movlw	high terminal_loop@op1
  2185  010AE4  0100               	movlb	0	; () banked
  2186  010AE6  6FC6               	movwf	(terminal_operation@op1+1)& (0+255),b
  2187  010AE8  0EC1               	movlw	low terminal_loop@op2
  2188  010AEA  0100               	movlb	0	; () banked
  2189  010AEC  6FC7               	movwf	terminal_operation@op2& (0+255),b
  2190  010AEE  0E01               	movlw	high terminal_loop@op2
  2191  010AF0  0100               	movlb	0	; () banked
  2192  010AF2  6FC8               	movwf	(terminal_operation@op2+1)& (0+255),b
  2193  010AF4  0EDA               	movlw	low terminal_loop@op3
  2194  010AF6  0100               	movlb	0	; () banked
  2195  010AF8  6FC9               	movwf	terminal_operation@op3& (0+255),b
  2196  010AFA  0E01               	movlw	high terminal_loop@op3
  2197  010AFC  0100               	movlb	0	; () banked
  2198  010AFE  6FCA               	movwf	(terminal_operation@op3+1)& (0+255),b
  2199  010B00  EC00  F080         	call	_terminal_operation	;wreg free
  2200                           
  2201                           ;My_terminal.c: 38: break;
  2202  010B04  0012               	return	
  2203  010B06                     l5969:
  2204                           
  2205                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  2206  010B06  0EE1               	movlw	low terminal_loop@command
  2207  010B08  0100               	movlb	0	; () banked
  2208  010B0A  6F66               	movwf	ringbuf_put@rb& (0+255),b
  2209  010B0C  0E00               	movlw	high terminal_loop@command
  2210  010B0E  0100               	movlb	0	; () banked
  2211  010B10  6F67               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2212  010B12  0E00               	movlw	0
  2213  010B14  0100               	movlb	0	; () banked
  2214  010B16  6F68               	movwf	ringbuf_put@asciicode& (0+255),b
  2215  010B18  ECA0  F08E         	call	_ringbuf_put	;wreg free
  2216                           
  2217                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  2218  010B1C  C0CD  F066         	movff	terminal_loop@tx,ringbuf_put@rb
  2219  010B20  C0CE  F067         	movff	terminal_loop@tx+1,ringbuf_put@rb+1
  2220  010B24  0E20               	movlw	32
  2221  010B26  0100               	movlb	0	; () banked
  2222  010B28  6F68               	movwf	ringbuf_put@asciicode& (0+255),b
  2223  010B2A  ECA0  F08E         	call	_ringbuf_put	;wreg free
  2224                           
  2225                           ;My_terminal.c: 42: break;
  2226  010B2E  0012               	return	
  2227  010B30                     l5971:
  2228                           
  2229                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  2230  010B30  0EE1               	movlw	low terminal_loop@command
  2231  010B32  6E22               	movwf	ringbuf_backspace@rb,c
  2232  010B34  0E00               	movlw	high terminal_loop@command
  2233  010B36  6E23               	movwf	ringbuf_backspace@rb+1,c
  2234  010B38  EC68  F093         	call	_ringbuf_backspace	;wreg free
  2235                           
  2236                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  2237  010B3C  C0CD  F06D         	movff	terminal_loop@tx,ringbuf_put_str@rb
  2238  010B40  C0CE  F06E         	movff	terminal_loop@tx+1,ringbuf_put_str@rb+1
  2239  010B44  0ED7               	movlw	low STR_19
  2240  010B46  0100               	movlb	0	; () banked
  2241  010B48  6F6F               	movwf	ringbuf_put_str@str& (0+255),b
  2242  010B4A  0EFF               	movlw	high STR_19
  2243  010B4C  0100               	movlb	0	; () banked
  2244  010B4E  6F70               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2245  010B50  ECD7  F094         	call	_ringbuf_put_str	;wreg free
  2246                           
  2247                           ;My_terminal.c: 46: break;
  2248  010B54  0012               	return	
  2249  010B56                     l5975:
  2250                           
  2251                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  2252  010B56  0E00               	movlw	0
  2253  010B58  0101               	movlb	1	; () banked
  2254  010B5A  6F88               	movwf	terminal_loop@i_2775& (0+255),b
  2255  010B5C  D00E               	goto	l5981
  2256  010B5E                     l5977:
  2257  010B5E  C0CD  F06D         	movff	terminal_loop@tx,ringbuf_put_str@rb
  2258  010B62  C0CE  F06E         	movff	terminal_loop@tx+1,ringbuf_put_str@rb+1
  2259  010B66  0ED7               	movlw	low STR_19
  2260  010B68  0100               	movlb	0	; () banked
  2261  010B6A  6F6F               	movwf	ringbuf_put_str@str& (0+255),b
  2262  010B6C  0EFF               	movlw	high STR_19
  2263  010B6E  0100               	movlb	0	; () banked
  2264  010B70  6F70               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2265  010B72  ECD7  F094         	call	_ringbuf_put_str	;wreg free
  2266  010B76  0101               	movlb	1	; () banked
  2267  010B78  2B88               	incf	terminal_loop@i_2775& (0+255),f,b
  2268  010B7A                     l5981:
  2269                           
  2270                           ; BSR set to: 1
  2271  010B7A  0EE1               	movlw	low terminal_loop@command
  2272  010B7C  6E20               	movwf	ringbuf_num@rb,c
  2273  010B7E  0E00               	movlw	high terminal_loop@command
  2274  010B80  6E21               	movwf	ringbuf_num@rb+1,c
  2275  010B82  EC5F  F08D         	call	_ringbuf_num	;wreg free
  2276  010B86  0101               	movlb	1	; () banked
  2277  010B88  5188               	movf	terminal_loop@i_2775& (0+255),w,b
  2278  010B8A  0100               	movlb	0	; () banked
  2279  010B8C  6FD1               	movwf	??_terminal_loop& (0+255),b
  2280  010B8E  6BD2               	clrf	(??_terminal_loop+1)& (0+255),b
  2281  010B90  5020               	movf	?_ringbuf_num,w,c
  2282  010B92  0100               	movlb	0	; () banked
  2283  010B94  5DD1               	subwf	??_terminal_loop& (0+255),w,b
  2284  010B96  5021               	movf	?_ringbuf_num+1,w,c
  2285  010B98  0100               	movlb	0	; () banked
  2286  010B9A  59D2               	subwfb	(??_terminal_loop+1)& (0+255),w,b
  2287  010B9C  A0D8               	btfss	status,0,c
  2288  010B9E  D7DF               	goto	l5977
  2289                           
  2290                           ; BSR set to: 0
  2291                           ;My_terminal.c: 49: ringbuf_delete(&command);
  2292                           
  2293                           ; BSR set to: 0
  2294  010BA0  0EE1               	movlw	low terminal_loop@command
  2295  010BA2  6E20               	movwf	ringbuf_delete@rb,c
  2296  010BA4  0E00               	movlw	high terminal_loop@command
  2297  010BA6  6E21               	movwf	ringbuf_delete@rb+1,c
  2298  010BA8  ECC2  F096         	call	_ringbuf_delete	;wreg free
  2299                           
  2300                           ;My_terminal.c: 50: break;
  2301  010BAC  0012               	return	
  2302  010BAE                     l5985:
  2303                           
  2304                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  2305  010BAE  0E1F               	movlw	31
  2306  010BB0  0101               	movlb	1	; () banked
  2307  010BB2  6589               	cpfsgt	terminal_loop@ascii& (0+255),b
  2308  010BB4  0012               	return	
  2309                           
  2310                           ; BSR set to: 1
  2311  010BB6  0E7F               	movlw	127
  2312  010BB8  0101               	movlb	1	; () banked
  2313  010BBA  6189               	cpfslt	terminal_loop@ascii& (0+255),b
  2314  010BBC  0012               	return	
  2315                           
  2316                           ; BSR set to: 1
  2317                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  2318  010BBE  0EE1               	movlw	low terminal_loop@command
  2319  010BC0  0100               	movlb	0	; () banked
  2320  010BC2  6F66               	movwf	ringbuf_put@rb& (0+255),b
  2321  010BC4  0E00               	movlw	high terminal_loop@command
  2322  010BC6  0100               	movlb	0	; () banked
  2323  010BC8  6F67               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2324  010BCA  C189  F068         	movff	terminal_loop@ascii,ringbuf_put@asciicode
  2325  010BCE  ECA0  F08E         	call	_ringbuf_put	;wreg free
  2326                           
  2327                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  2328  010BD2  C0CD  F066         	movff	terminal_loop@tx,ringbuf_put@rb
  2329  010BD6  C0CE  F067         	movff	terminal_loop@tx+1,ringbuf_put@rb+1
  2330  010BDA  C189  F068         	movff	terminal_loop@ascii,ringbuf_put@asciicode
  2331  010BDE  ECA0  F08E         	call	_ringbuf_put	;wreg free
  2332                           
  2333                           ;My_terminal.c: 57: }
  2334                           
  2335                           ;My_terminal.c: 55: }
  2336                           ;My_terminal.c: 56: break;
  2337  010BE2  0012               	return	
  2338  010BE4                     l5993:
  2339  010BE4  0101               	movlb	1	; () banked
  2340  010BE6  5189               	movf	terminal_loop@ascii& (0+255),w,b
  2341                           
  2342                           ; Switch size 1, requested type "space"
  2343                           ; Number of cases is 4, Range of values is 8 to 127
  2344                           ; switch strategies available:
  2345                           ; Name         Instructions Cycles
  2346                           ; simple_byte           13     7 (average)
  2347                           ;	Chosen strategy is simple_byte
  2348  010BE8  0A08               	xorlw	8	; case 8
  2349  010BEA  B4D8               	btfsc	status,2,c
  2350  010BEC  D7A1               	goto	l5971
  2351  010BEE  0A05               	xorlw	5	; case 13
  2352  010BF0  B4D8               	btfsc	status,2,c
  2353  010BF2  D696               	goto	l5933
  2354  010BF4  0A2D               	xorlw	45	; case 32
  2355  010BF6  B4D8               	btfsc	status,2,c
  2356  010BF8  D786               	goto	l5969
  2357  010BFA  0A5F               	xorlw	95	; case 127
  2358  010BFC  B4D8               	btfsc	status,2,c
  2359  010BFE  D7AB               	goto	l5975
  2360  010C00  D7D6               	goto	l5985
  2361  010C02                     __end_of_terminal_loop:
  2362                           	opt stack 0
  2363                           tblptru	equ	0xFF8
  2364                           tblptrh	equ	0xFF7
  2365                           tblptrl	equ	0xFF6
  2366                           tablat	equ	0xFF5
  2367                           prodh	equ	0xFF4
  2368                           prodl	equ	0xFF3
  2369                           intcon	equ	0xFF2
  2370                           postinc0	equ	0xFEE
  2371                           wreg	equ	0xFE8
  2372                           postdec1	equ	0xFE5
  2373                           fsr1h	equ	0xFE2
  2374                           fsr1l	equ	0xFE1
  2375                           indf2	equ	0xFDF
  2376                           fsr2h	equ	0xFDA
  2377                           fsr2l	equ	0xFD9
  2378                           status	equ	0xFD8
  2379                           
  2380 ;; *************** function _terminal_operation *****************
  2381 ;; Defined at:
  2382 ;;		line 168 in file "PIC18F27J53-killifish_light05.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;  tx              2   97[BANK0 ] PTR struct ringbuf
  2385 ;;		 -> tx_buf(8), 
  2386 ;;  op0             2   99[BANK0 ] PTR unsigned char 
  2387 ;;		 -> terminal_loop@op0(25), 
  2388 ;;  op1             2  101[BANK0 ] PTR unsigned char 
  2389 ;;		 -> terminal_loop@op1(25), 
  2390 ;;  op2             2  103[BANK0 ] PTR unsigned char 
  2391 ;;		 -> terminal_loop@op2(25), 
  2392 ;;  op3             2  105[BANK0 ] PTR unsigned char 
  2393 ;;		 -> terminal_loop@op3(25), 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;  str            30    0[BANK1 ] unsigned char [30]
  2396 ;; Return value:  Size  Location     Type
  2397 ;;		None               void
  2398 ;; Registers used:
  2399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2405 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2406 ;;      Locals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2407 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2408 ;;      Totals:         0      12      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2409 ;;Total ram usage:       46 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:   11
  2412 ;; This function calls:
  2413 ;;		_PWM_set
  2414 ;;		___awdiv
  2415 ;;		___wmul
  2416 ;;		_atoi
  2417 ;;		_ringbuf_put_str
  2418 ;;		_sprintf
  2419 ;;		_strcmp
  2420 ;;		_terminal_time
  2421 ;;		_tx_sends
  2422 ;; This function is called by:
  2423 ;;		_terminal_loop
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text2
  2428  010000                     __ptext2:
  2429                           	opt stack 0
  2430  010000                     _terminal_operation:
  2431                           	opt stack 18
  2432                           
  2433                           ;PIC18F27J53-killifish_light05.c: 169: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  2434                           
  2435                           ;incstack = 0
  2436  010000  C0C3  F020         	movff	terminal_operation@op0,strcmp@s1
  2437  010004  C0C4  F021         	movff	terminal_operation@op0+1,strcmp@s1+1
  2438  010008  0EAF               	movlw	low STR_41
  2439  01000A  6E22               	movwf	strcmp@s2,c
  2440  01000C  0EFF               	movlw	high STR_41
  2441  01000E  6E23               	movwf	strcmp@s2+1,c
  2442  010010  EC6B  F095         	call	_strcmp	;wreg free
  2443  010014  5020               	movf	?_strcmp,w,c
  2444  010016  1021               	iorwf	?_strcmp+1,w,c
  2445  010018  B4D8               	btfsc	status,2,c
  2446  01001A  D00E               	goto	l5703
  2447  01001C  C0C3  F020         	movff	terminal_operation@op0,strcmp@s1
  2448  010020  C0C4  F021         	movff	terminal_operation@op0+1,strcmp@s1+1
  2449  010024  0EE5               	movlw	low STR_42
  2450  010026  6E22               	movwf	strcmp@s2,c
  2451  010028  0EFF               	movlw	high STR_42
  2452  01002A  6E23               	movwf	strcmp@s2+1,c
  2453  01002C  EC6B  F095         	call	_strcmp	;wreg free
  2454  010030  5020               	movf	?_strcmp,w,c
  2455  010032  1021               	iorwf	?_strcmp+1,w,c
  2456  010034  A4D8               	btfss	status,2,c
  2457  010036  D006               	goto	l5705
  2458  010038                     l5703:
  2459                           
  2460                           ;PIC18F27J53-killifish_light05.c: 170: tx_sends(
  2461                           ;PIC18F27J53-killifish_light05.c: 171: "\t**************************\n"
  2462                           ;PIC18F27J53-killifish_light05.c: 172: "\t**** Killifish Light  ****\n"
  2463                           ;PIC18F27J53-killifish_light05.c: 173: "\t**** Made by @Ryokeri ****\n"
  2464                           ;PIC18F27J53-killifish_light05.c: 174: "\t**************************\n\n"
  2465                           ;PIC18F27J53-killifish_light05.c: 175: "\tcommand \topeland1\topeland2\n\n"
  2466                           ;PIC18F27J53-killifish_light05.c: 176: "\tprint_time(t)\n"
  2467                           ;PIC18F27J53-killifish_light05.c: 177: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(deci
      +                          mal)]\n"
  2468  010038  0EE9               	movlw	low STR_43
  2469  01003A  6E22               	movwf	tx_sends@asciicode,c
  2470  01003C  0EFD               	movlw	high STR_43
  2471  01003E  6E23               	movwf	tx_sends@asciicode+1,c
  2472  010040  EC07  F096         	call	_tx_sends	;wreg free
  2473  010044                     l5705:
  2474                           
  2475                           ;PIC18F27J53-killifish_light05.c: 184: }
  2476                           ;PIC18F27J53-killifish_light05.c: 185: terminal_time(tx, op0, op1, op2);
  2477  010044  C0C1  F0B8         	movff	terminal_operation@tx,terminal_time@tx
  2478  010048  C0C2  F0B9         	movff	terminal_operation@tx+1,terminal_time@tx+1
  2479  01004C  C0C3  F0BA         	movff	terminal_operation@op0,terminal_time@op0
  2480  010050  C0C4  F0BB         	movff	terminal_operation@op0+1,terminal_time@op0+1
  2481  010054  C0C5  F0BC         	movff	terminal_operation@op1,terminal_time@op1
  2482  010058  C0C6  F0BD         	movff	terminal_operation@op1+1,terminal_time@op1+1
  2483  01005C  C0C7  F0BE         	movff	terminal_operation@op2,terminal_time@op2
  2484  010060  C0C8  F0BF         	movff	terminal_operation@op2+1,terminal_time@op2+1
  2485  010064  EC01  F086         	call	_terminal_time	;wreg free
  2486                           
  2487                           ;PIC18F27J53-killifish_light05.c: 186: if (!strcmp(op0, "RESET();")) {
  2488  010068  C0C3  F020         	movff	terminal_operation@op0,strcmp@s1
  2489  01006C  C0C4  F021         	movff	terminal_operation@op0+1,strcmp@s1+1
  2490  010070  0E6F               	movlw	low STR_44
  2491  010072  6E22               	movwf	strcmp@s2,c
  2492  010074  0EFF               	movlw	high STR_44
  2493  010076  6E23               	movwf	strcmp@s2+1,c
  2494  010078  EC6B  F095         	call	_strcmp	;wreg free
  2495  01007C  5020               	movf	?_strcmp,w,c
  2496  01007E  1021               	iorwf	?_strcmp+1,w,c
  2497  010080  B4D8               	btfsc	status,2,c
  2498  010082  00FF               	reset		;# 
  2499                           
  2500                           ;PIC18F27J53-killifish_light05.c: 188: }
  2501                           ;PIC18F27J53-killifish_light05.c: 189: if (!strcmp(op0, "en")) {
  2502  010084  C0C3  F020         	movff	terminal_operation@op0,strcmp@s1
  2503  010088  C0C4  F021         	movff	terminal_operation@op0+1,strcmp@s1+1
  2504  01008C  0EDF               	movlw	low STR_45
  2505  01008E  6E22               	movwf	strcmp@s2,c
  2506  010090  0EFF               	movlw	high STR_45
  2507  010092  6E23               	movwf	strcmp@s2+1,c
  2508  010094  EC6B  F095         	call	_strcmp	;wreg free
  2509  010098  5020               	movf	?_strcmp,w,c
  2510  01009A  1021               	iorwf	?_strcmp+1,w,c
  2511  01009C  A4D8               	btfss	status,2,c
  2512  01009E  D036               	goto	l5717
  2513                           
  2514                           ;PIC18F27J53-killifish_light05.c: 190: char str[30];
  2515                           ;PIC18F27J53-killifish_light05.c: 191: sprintf(str, "WREN=%d,EN=%d\n", RTCCFGbits.RTCWRE
      +                          N, RTCCFGbits.RTCEN);
  2516  0100A0  0E00               	movlw	low terminal_operation@str
  2517  0100A2  0100               	movlb	0	; () banked
  2518  0100A4  6F6E               	movwf	sprintf@sp& (0+255),b
  2519  0100A6  0E01               	movlw	high terminal_operation@str
  2520  0100A8  0100               	movlb	0	; () banked
  2521  0100AA  6F6F               	movwf	(sprintf@sp+1)& (0+255),b
  2522  0100AC  0E49               	movlw	low STR_46
  2523  0100AE  0100               	movlb	0	; () banked
  2524  0100B0  6F70               	movwf	sprintf@f& (0+255),b
  2525  0100B2  0EFF               	movlw	high STR_46
  2526  0100B4  0100               	movlb	0	; () banked
  2527  0100B6  6F71               	movwf	(sprintf@f+1)& (0+255),b
  2528  0100B8  010F               	movlb	15	; () banked
  2529  0100BA  AB3F               	btfss	63,5,b	;volatile
  2530  0100BC  D004               	goto	u5930
  2531  0100BE  0100               	movlb	0	; () banked
  2532  0100C0  6BCB               	clrf	??_terminal_operation& (0+255),b
  2533  0100C2  2BCB               	incf	??_terminal_operation& (0+255),f,b
  2534  0100C4  D002               	goto	u5938
  2535  0100C6                     u5930:
  2536  0100C6  0100               	movlb	0	; () banked
  2537  0100C8  6BCB               	clrf	??_terminal_operation& (0+255),b
  2538  0100CA                     u5938:
  2539  0100CA  0100               	movlb	0	; () banked
  2540  0100CC  51CB               	movf	??_terminal_operation& (0+255),w,b
  2541  0100CE  0100               	movlb	0	; () banked
  2542  0100D0  6F72               	movwf	(?_sprintf+4)& (0+255),b
  2543  0100D2  6B73               	clrf	(?_sprintf+5)& (0+255),b
  2544  0100D4  010F               	movlb	15	; () banked
  2545  0100D6  AF3F               	btfss	63,7,b	;volatile
  2546  0100D8  D004               	goto	u5940
  2547  0100DA  0100               	movlb	0	; () banked
  2548  0100DC  6BCC               	clrf	(??_terminal_operation+1)& (0+255),b
  2549  0100DE  2BCC               	incf	(??_terminal_operation+1)& (0+255),f,b
  2550  0100E0  D002               	goto	u5948
  2551  0100E2                     u5940:
  2552  0100E2  0100               	movlb	0	; () banked
  2553  0100E4  6BCC               	clrf	(??_terminal_operation+1)& (0+255),b
  2554  0100E6                     u5948:
  2555  0100E6  0100               	movlb	0	; () banked
  2556  0100E8  51CC               	movf	(??_terminal_operation+1)& (0+255),w,b
  2557  0100EA  0100               	movlb	0	; () banked
  2558  0100EC  6F74               	movwf	(?_sprintf+6)& (0+255),b
  2559  0100EE  6B75               	clrf	(?_sprintf+7)& (0+255),b
  2560  0100F0  EC36  F082         	call	_sprintf	;wreg free
  2561                           
  2562                           ;PIC18F27J53-killifish_light05.c: 192: ringbuf_put_str(tx, str);
  2563  0100F4  C0C1  F06D         	movff	terminal_operation@tx,ringbuf_put_str@rb
  2564  0100F8  C0C2  F06E         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  2565  0100FC  0E00               	movlw	low terminal_operation@str
  2566  0100FE  0100               	movlb	0	; () banked
  2567  010100  6F6F               	movwf	ringbuf_put_str@str& (0+255),b
  2568  010102  0E01               	movlw	high terminal_operation@str
  2569  010104  0100               	movlb	0	; () banked
  2570  010106  6F70               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2571  010108  ECD7  F094         	call	_ringbuf_put_str	;wreg free
  2572  01010C                     l5717:
  2573                           
  2574                           ;PIC18F27J53-killifish_light05.c: 193: }
  2575                           ;PIC18F27J53-killifish_light05.c: 194: if (!strcmp(op0, "set")) {
  2576  01010C  C0C3  F020         	movff	terminal_operation@op0,strcmp@s1
  2577  010110  C0C4  F021         	movff	terminal_operation@op0+1,strcmp@s1+1
  2578  010114  0ED3               	movlw	low STR_47
  2579  010116  6E22               	movwf	strcmp@s2,c
  2580  010118  0EFF               	movlw	high STR_47
  2581  01011A  6E23               	movwf	strcmp@s2+1,c
  2582  01011C  EC6B  F095         	call	_strcmp	;wreg free
  2583  010120  5020               	movf	?_strcmp,w,c
  2584  010122  1021               	iorwf	?_strcmp+1,w,c
  2585  010124  A4D8               	btfss	status,2,c
  2586  010126  D030               	goto	l5729
  2587                           
  2588                           ;PIC18F27J53-killifish_light05.c: 195: if (!strcmp(op1, "sync")) {
  2589  010128  C0C5  F020         	movff	terminal_operation@op1,strcmp@s1
  2590  01012C  C0C6  F021         	movff	terminal_operation@op1+1,strcmp@s1+1
  2591  010130  0EAA               	movlw	low STR_48
  2592  010132  6E22               	movwf	strcmp@s2,c
  2593  010134  0EFF               	movlw	high STR_48
  2594  010136  6E23               	movwf	strcmp@s2+1,c
  2595  010138  EC6B  F095         	call	_strcmp	;wreg free
  2596  01013C  5020               	movf	?_strcmp,w,c
  2597  01013E  1021               	iorwf	?_strcmp+1,w,c
  2598  010140  A4D8               	btfss	status,2,c
  2599  010142  D003               	goto	l5723
  2600                           
  2601                           ;PIC18F27J53-killifish_light05.c: 196: light_mode = TIME_SYNC_mode;
  2602  010144  0E00               	movlw	0
  2603  010146  0100               	movlb	0	; () banked
  2604  010148  6FD5               	movwf	_light_mode& (0+255),b
  2605  01014A                     l5723:
  2606                           
  2607                           ;PIC18F27J53-killifish_light05.c: 197: }
  2608                           ;PIC18F27J53-killifish_light05.c: 198: if (!strcmp(op1, "adc") || !strcmp(op1, "ADC")) {
  2609  01014A  C0C5  F020         	movff	terminal_operation@op1,strcmp@s1
  2610  01014E  C0C6  F021         	movff	terminal_operation@op1+1,strcmp@s1+1
  2611  010152  0ECB               	movlw	low STR_49
  2612  010154  6E22               	movwf	strcmp@s2,c
  2613  010156  0EFF               	movlw	high STR_49
  2614  010158  6E23               	movwf	strcmp@s2+1,c
  2615  01015A  EC6B  F095         	call	_strcmp	;wreg free
  2616  01015E  5020               	movf	?_strcmp,w,c
  2617  010160  1021               	iorwf	?_strcmp+1,w,c
  2618  010162  B4D8               	btfsc	status,2,c
  2619  010164  D00E               	goto	l5727
  2620  010166  C0C5  F020         	movff	terminal_operation@op1,strcmp@s1
  2621  01016A  C0C6  F021         	movff	terminal_operation@op1+1,strcmp@s1+1
  2622  01016E  0EC3               	movlw	low STR_50
  2623  010170  6E22               	movwf	strcmp@s2,c
  2624  010172  0EFF               	movlw	high STR_50
  2625  010174  6E23               	movwf	strcmp@s2+1,c
  2626  010176  EC6B  F095         	call	_strcmp	;wreg free
  2627  01017A  5020               	movf	?_strcmp,w,c
  2628  01017C  1021               	iorwf	?_strcmp+1,w,c
  2629  01017E  A4D8               	btfss	status,2,c
  2630  010180  D003               	goto	l5729
  2631  010182                     l5727:
  2632                           
  2633                           ;PIC18F27J53-killifish_light05.c: 199: light_mode = ADC_mode;
  2634  010182  0E01               	movlw	1
  2635  010184  0100               	movlb	0	; () banked
  2636  010186  6FD5               	movwf	_light_mode& (0+255),b
  2637  010188                     l5729:
  2638                           
  2639                           ;PIC18F27J53-killifish_light05.c: 200: }
  2640                           ;PIC18F27J53-killifish_light05.c: 201: }
  2641                           ;PIC18F27J53-killifish_light05.c: 202: if (!strcmp(op0, "pwm") || !strcmp(op0, "PWM")) {
  2642  010188  C0C3  F020         	movff	terminal_operation@op0,strcmp@s1
  2643  01018C  C0C4  F021         	movff	terminal_operation@op0+1,strcmp@s1+1
  2644  010190  0ECF               	movlw	low STR_51
  2645  010192  6E22               	movwf	strcmp@s2,c
  2646  010194  0EFF               	movlw	high STR_51
  2647  010196  6E23               	movwf	strcmp@s2+1,c
  2648  010198  EC6B  F095         	call	_strcmp	;wreg free
  2649  01019C  5020               	movf	?_strcmp,w,c
  2650  01019E  1021               	iorwf	?_strcmp+1,w,c
  2651  0101A0  B4D8               	btfsc	status,2,c
  2652  0101A2  D00E               	goto	l5733
  2653  0101A4  C0C3  F020         	movff	terminal_operation@op0,strcmp@s1
  2654  0101A8  C0C4  F021         	movff	terminal_operation@op0+1,strcmp@s1+1
  2655  0101AC  0EC7               	movlw	low STR_52
  2656  0101AE  6E22               	movwf	strcmp@s2,c
  2657  0101B0  0EFF               	movlw	high STR_52
  2658  0101B2  6E23               	movwf	strcmp@s2+1,c
  2659  0101B4  EC6B  F095         	call	_strcmp	;wreg free
  2660  0101B8  5020               	movf	?_strcmp,w,c
  2661  0101BA  1021               	iorwf	?_strcmp+1,w,c
  2662  0101BC  A4D8               	btfss	status,2,c
  2663  0101BE  0012               	return	
  2664  0101C0                     l5733:
  2665                           
  2666                           ;PIC18F27J53-killifish_light05.c: 203: if (!strcmp(op1, "r") || !strcmp(op1, "R")) {
  2667  0101C0  C0C5  F020         	movff	terminal_operation@op1,strcmp@s1
  2668  0101C4  C0C6  F021         	movff	terminal_operation@op1+1,strcmp@s1+1
  2669  0101C8  0EA2               	movlw	low (STR_61+4)
  2670  0101CA  6E22               	movwf	strcmp@s2,c
  2671  0101CC  0EFF               	movlw	high (STR_61+4)
  2672  0101CE  6E23               	movwf	strcmp@s2+1,c
  2673  0101D0  EC6B  F095         	call	_strcmp	;wreg free
  2674  0101D4  5020               	movf	?_strcmp,w,c
  2675  0101D6  1021               	iorwf	?_strcmp+1,w,c
  2676  0101D8  B4D8               	btfsc	status,2,c
  2677  0101DA  D00E               	goto	l5737
  2678  0101DC  C0C5  F020         	movff	terminal_operation@op1,strcmp@s1
  2679  0101E0  C0C6  F021         	movff	terminal_operation@op1+1,strcmp@s1+1
  2680  0101E4  0EEB               	movlw	low STR_54
  2681  0101E6  6E22               	movwf	strcmp@s2,c
  2682  0101E8  0EFF               	movlw	high STR_54
  2683  0101EA  6E23               	movwf	strcmp@s2+1,c
  2684  0101EC  EC6B  F095         	call	_strcmp	;wreg free
  2685  0101F0  5020               	movf	?_strcmp,w,c
  2686  0101F2  1021               	iorwf	?_strcmp+1,w,c
  2687  0101F4  A4D8               	btfss	status,2,c
  2688  0101F6  D02D               	goto	l5745
  2689  0101F8                     l5737:
  2690                           
  2691                           ;PIC18F27J53-killifish_light05.c: 204: light_mode = COMMAND_mode;
  2692  0101F8  0E02               	movlw	2
  2693  0101FA  0100               	movlb	0	; () banked
  2694  0101FC  6FD5               	movwf	_light_mode& (0+255),b
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;PIC18F27J53-killifish_light05.c: 205: PWM_set(0, atoi(op2) * 250 / 100);
  2698  0101FE  C0C7  F062         	movff	terminal_operation@op2,atoi@s
  2699  010202  C0C8  F063         	movff	terminal_operation@op2+1,atoi@s+1
  2700  010206  ECE9  F08C         	call	_atoi	;wreg free
  2701  01020A  C062  F11E         	movff	?_atoi,_terminal_operation$4485
  2702  01020E  C063  F11F         	movff	?_atoi+1,_terminal_operation$4485+1
  2703                           
  2704                           ;PIC18F27J53-killifish_light05.c: 205: PWM_set(0, atoi(op2) * 250 / 100);
  2705  010212  C11E  F020         	movff	_terminal_operation$4485,___wmul@multiplier
  2706  010216  C11F  F021         	movff	_terminal_operation$4485+1,___wmul@multiplier+1
  2707  01021A  0E00               	movlw	0
  2708  01021C  6E23               	movwf	___wmul@multiplicand+1,c
  2709  01021E  0EFA               	movlw	250
  2710  010220  6E22               	movwf	___wmul@multiplicand,c
  2711  010222  EC73  F096         	call	___wmul	;wreg free
  2712  010226  C020  F069         	movff	?___wmul,___awdiv@dividend
  2713  01022A  C021  F06A         	movff	?___wmul+1,___awdiv@dividend+1
  2714  01022E  0E00               	movlw	0
  2715  010230  0100               	movlb	0	; () banked
  2716  010232  6F6C               	movwf	(___awdiv@divisor+1)& (0+255),b
  2717  010234  0E64               	movlw	100
  2718  010236  6F6B               	movwf	___awdiv@divisor& (0+255),b
  2719  010238  ECCE  F08F         	call	___awdiv	;wreg free
  2720  01023C  C069  F120         	movff	?___awdiv,_terminal_operation$4486
  2721  010240  C06A  F121         	movff	?___awdiv+1,_terminal_operation$4486+1
  2722                           
  2723                           ;PIC18F27J53-killifish_light05.c: 205: PWM_set(0, atoi(op2) * 250 / 100);
  2724  010244  C120  F071         	movff	_terminal_operation$4486,PWM_set@value
  2725  010248  C121  F072         	movff	_terminal_operation$4486+1,PWM_set@value+1
  2726  01024C  0E00               	movlw	0
  2727  01024E  EC1F  F08C         	call	_PWM_set
  2728  010252                     l5745:
  2729                           
  2730                           ;PIC18F27J53-killifish_light05.c: 206: }
  2731                           ;PIC18F27J53-killifish_light05.c: 207: if (!strcmp(op1, "g") || !strcmp(op1, "G")) {
  2732  010252  C0C5  F020         	movff	terminal_operation@op1,strcmp@s1
  2733  010256  C0C6  F021         	movff	terminal_operation@op1+1,strcmp@s1+1
  2734  01025A  0EF1               	movlw	low STR_55
  2735  01025C  6E22               	movwf	strcmp@s2,c
  2736  01025E  0EFF               	movlw	high STR_55
  2737  010260  6E23               	movwf	strcmp@s2+1,c
  2738  010262  EC6B  F095         	call	_strcmp	;wreg free
  2739  010266  5020               	movf	?_strcmp,w,c
  2740  010268  1021               	iorwf	?_strcmp+1,w,c
  2741  01026A  B4D8               	btfsc	status,2,c
  2742  01026C  D00E               	goto	l5749
  2743  01026E  C0C5  F020         	movff	terminal_operation@op1,strcmp@s1
  2744  010272  C0C6  F021         	movff	terminal_operation@op1+1,strcmp@s1+1
  2745  010276  0EE9               	movlw	low STR_56
  2746  010278  6E22               	movwf	strcmp@s2,c
  2747  01027A  0EFF               	movlw	high STR_56
  2748  01027C  6E23               	movwf	strcmp@s2+1,c
  2749  01027E  EC6B  F095         	call	_strcmp	;wreg free
  2750  010282  5020               	movf	?_strcmp,w,c
  2751  010284  1021               	iorwf	?_strcmp+1,w,c
  2752  010286  A4D8               	btfss	status,2,c
  2753  010288  D02D               	goto	l5757
  2754  01028A                     l5749:
  2755                           
  2756                           ;PIC18F27J53-killifish_light05.c: 208: light_mode = COMMAND_mode;
  2757  01028A  0E02               	movlw	2
  2758  01028C  0100               	movlb	0	; () banked
  2759  01028E  6FD5               	movwf	_light_mode& (0+255),b
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;PIC18F27J53-killifish_light05.c: 209: PWM_set(1, atoi(op2) * 250 / 100);
  2763  010290  C0C7  F062         	movff	terminal_operation@op2,atoi@s
  2764  010294  C0C8  F063         	movff	terminal_operation@op2+1,atoi@s+1
  2765  010298  ECE9  F08C         	call	_atoi	;wreg free
  2766  01029C  C062  F11E         	movff	?_atoi,_terminal_operation$4485
  2767  0102A0  C063  F11F         	movff	?_atoi+1,_terminal_operation$4485+1
  2768                           
  2769                           ;PIC18F27J53-killifish_light05.c: 209: PWM_set(1, atoi(op2) * 250 / 100);
  2770  0102A4  C11E  F020         	movff	_terminal_operation$4485,___wmul@multiplier
  2771  0102A8  C11F  F021         	movff	_terminal_operation$4485+1,___wmul@multiplier+1
  2772  0102AC  0E00               	movlw	0
  2773  0102AE  6E23               	movwf	___wmul@multiplicand+1,c
  2774  0102B0  0EFA               	movlw	250
  2775  0102B2  6E22               	movwf	___wmul@multiplicand,c
  2776  0102B4  EC73  F096         	call	___wmul	;wreg free
  2777  0102B8  C020  F069         	movff	?___wmul,___awdiv@dividend
  2778  0102BC  C021  F06A         	movff	?___wmul+1,___awdiv@dividend+1
  2779  0102C0  0E00               	movlw	0
  2780  0102C2  0100               	movlb	0	; () banked
  2781  0102C4  6F6C               	movwf	(___awdiv@divisor+1)& (0+255),b
  2782  0102C6  0E64               	movlw	100
  2783  0102C8  6F6B               	movwf	___awdiv@divisor& (0+255),b
  2784  0102CA  ECCE  F08F         	call	___awdiv	;wreg free
  2785  0102CE  C069  F120         	movff	?___awdiv,_terminal_operation$4486
  2786  0102D2  C06A  F121         	movff	?___awdiv+1,_terminal_operation$4486+1
  2787                           
  2788                           ;PIC18F27J53-killifish_light05.c: 209: PWM_set(1, atoi(op2) * 250 / 100);
  2789  0102D6  C120  F071         	movff	_terminal_operation$4486,PWM_set@value
  2790  0102DA  C121  F072         	movff	_terminal_operation$4486+1,PWM_set@value+1
  2791  0102DE  0E01               	movlw	1
  2792  0102E0  EC1F  F08C         	call	_PWM_set
  2793  0102E4                     l5757:
  2794                           
  2795                           ;PIC18F27J53-killifish_light05.c: 210: }
  2796                           ;PIC18F27J53-killifish_light05.c: 211: if (!strcmp(op1, "b") || !strcmp(op1, "B")) {
  2797  0102E4  C0C5  F020         	movff	terminal_operation@op1,strcmp@s1
  2798  0102E8  C0C6  F021         	movff	terminal_operation@op1+1,strcmp@s1+1
  2799  0102EC  0EEF               	movlw	low STR_57
  2800  0102EE  6E22               	movwf	strcmp@s2,c
  2801  0102F0  0EFF               	movlw	high STR_57
  2802  0102F2  6E23               	movwf	strcmp@s2+1,c
  2803  0102F4  EC6B  F095         	call	_strcmp	;wreg free
  2804  0102F8  5020               	movf	?_strcmp,w,c
  2805  0102FA  1021               	iorwf	?_strcmp+1,w,c
  2806  0102FC  B4D8               	btfsc	status,2,c
  2807  0102FE  D00E               	goto	l5761
  2808  010300  C0C5  F020         	movff	terminal_operation@op1,strcmp@s1
  2809  010304  C0C6  F021         	movff	terminal_operation@op1+1,strcmp@s1+1
  2810  010308  0EE7               	movlw	low STR_58
  2811  01030A  6E22               	movwf	strcmp@s2,c
  2812  01030C  0EFF               	movlw	high STR_58
  2813  01030E  6E23               	movwf	strcmp@s2+1,c
  2814  010310  EC6B  F095         	call	_strcmp	;wreg free
  2815  010314  5020               	movf	?_strcmp,w,c
  2816  010316  1021               	iorwf	?_strcmp+1,w,c
  2817  010318  A4D8               	btfss	status,2,c
  2818  01031A  D02D               	goto	l5769
  2819  01031C                     l5761:
  2820                           
  2821                           ;PIC18F27J53-killifish_light05.c: 212: light_mode = COMMAND_mode;
  2822  01031C  0E02               	movlw	2
  2823  01031E  0100               	movlb	0	; () banked
  2824  010320  6FD5               	movwf	_light_mode& (0+255),b
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;PIC18F27J53-killifish_light05.c: 213: PWM_set(2, atoi(op2) * 250 / 100);
  2828  010322  C0C7  F062         	movff	terminal_operation@op2,atoi@s
  2829  010326  C0C8  F063         	movff	terminal_operation@op2+1,atoi@s+1
  2830  01032A  ECE9  F08C         	call	_atoi	;wreg free
  2831  01032E  C062  F11E         	movff	?_atoi,_terminal_operation$4485
  2832  010332  C063  F11F         	movff	?_atoi+1,_terminal_operation$4485+1
  2833                           
  2834                           ;PIC18F27J53-killifish_light05.c: 213: PWM_set(2, atoi(op2) * 250 / 100);
  2835  010336  C11E  F020         	movff	_terminal_operation$4485,___wmul@multiplier
  2836  01033A  C11F  F021         	movff	_terminal_operation$4485+1,___wmul@multiplier+1
  2837  01033E  0E00               	movlw	0
  2838  010340  6E23               	movwf	___wmul@multiplicand+1,c
  2839  010342  0EFA               	movlw	250
  2840  010344  6E22               	movwf	___wmul@multiplicand,c
  2841  010346  EC73  F096         	call	___wmul	;wreg free
  2842  01034A  C020  F069         	movff	?___wmul,___awdiv@dividend
  2843  01034E  C021  F06A         	movff	?___wmul+1,___awdiv@dividend+1
  2844  010352  0E00               	movlw	0
  2845  010354  0100               	movlb	0	; () banked
  2846  010356  6F6C               	movwf	(___awdiv@divisor+1)& (0+255),b
  2847  010358  0E64               	movlw	100
  2848  01035A  6F6B               	movwf	___awdiv@divisor& (0+255),b
  2849  01035C  ECCE  F08F         	call	___awdiv	;wreg free
  2850  010360  C069  F120         	movff	?___awdiv,_terminal_operation$4486
  2851  010364  C06A  F121         	movff	?___awdiv+1,_terminal_operation$4486+1
  2852                           
  2853                           ;PIC18F27J53-killifish_light05.c: 213: PWM_set(2, atoi(op2) * 250 / 100);
  2854  010368  C120  F071         	movff	_terminal_operation$4486,PWM_set@value
  2855  01036C  C121  F072         	movff	_terminal_operation$4486+1,PWM_set@value+1
  2856  010370  0E02               	movlw	2
  2857  010372  EC1F  F08C         	call	_PWM_set
  2858  010376                     l5769:
  2859                           
  2860                           ;PIC18F27J53-killifish_light05.c: 214: }
  2861                           ;PIC18F27J53-killifish_light05.c: 215: if (!strcmp(op1, "w") || !strcmp(op1, "W")) {
  2862  010376  C0C5  F020         	movff	terminal_operation@op1,strcmp@s1
  2863  01037A  C0C6  F021         	movff	terminal_operation@op1+1,strcmp@s1+1
  2864  01037E  0EF3               	movlw	low STR_59
  2865  010380  6E22               	movwf	strcmp@s2,c
  2866  010382  0EFF               	movlw	high STR_59
  2867  010384  6E23               	movwf	strcmp@s2+1,c
  2868  010386  EC6B  F095         	call	_strcmp	;wreg free
  2869  01038A  5020               	movf	?_strcmp,w,c
  2870  01038C  1021               	iorwf	?_strcmp+1,w,c
  2871  01038E  B4D8               	btfsc	status,2,c
  2872  010390  D00E               	goto	l5773
  2873  010392  C0C5  F020         	movff	terminal_operation@op1,strcmp@s1
  2874  010396  C0C6  F021         	movff	terminal_operation@op1+1,strcmp@s1+1
  2875  01039A  0EED               	movlw	low STR_60
  2876  01039C  6E22               	movwf	strcmp@s2,c
  2877  01039E  0EFF               	movlw	high STR_60
  2878  0103A0  6E23               	movwf	strcmp@s2+1,c
  2879  0103A2  EC6B  F095         	call	_strcmp	;wreg free
  2880  0103A6  5020               	movf	?_strcmp,w,c
  2881  0103A8  1021               	iorwf	?_strcmp+1,w,c
  2882  0103AA  A4D8               	btfss	status,2,c
  2883  0103AC  D02D               	goto	l5781
  2884  0103AE                     l5773:
  2885                           
  2886                           ;PIC18F27J53-killifish_light05.c: 216: light_mode = COMMAND_mode;
  2887  0103AE  0E02               	movlw	2
  2888  0103B0  0100               	movlb	0	; () banked
  2889  0103B2  6FD5               	movwf	_light_mode& (0+255),b
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;PIC18F27J53-killifish_light05.c: 217: PWM_set(3, atoi(op2) * 250 / 100);
  2893  0103B4  C0C7  F062         	movff	terminal_operation@op2,atoi@s
  2894  0103B8  C0C8  F063         	movff	terminal_operation@op2+1,atoi@s+1
  2895  0103BC  ECE9  F08C         	call	_atoi	;wreg free
  2896  0103C0  C062  F11E         	movff	?_atoi,_terminal_operation$4485
  2897  0103C4  C063  F11F         	movff	?_atoi+1,_terminal_operation$4485+1
  2898                           
  2899                           ;PIC18F27J53-killifish_light05.c: 217: PWM_set(3, atoi(op2) * 250 / 100);
  2900  0103C8  C11E  F020         	movff	_terminal_operation$4485,___wmul@multiplier
  2901  0103CC  C11F  F021         	movff	_terminal_operation$4485+1,___wmul@multiplier+1
  2902  0103D0  0E00               	movlw	0
  2903  0103D2  6E23               	movwf	___wmul@multiplicand+1,c
  2904  0103D4  0EFA               	movlw	250
  2905  0103D6  6E22               	movwf	___wmul@multiplicand,c
  2906  0103D8  EC73  F096         	call	___wmul	;wreg free
  2907  0103DC  C020  F069         	movff	?___wmul,___awdiv@dividend
  2908  0103E0  C021  F06A         	movff	?___wmul+1,___awdiv@dividend+1
  2909  0103E4  0E00               	movlw	0
  2910  0103E6  0100               	movlb	0	; () banked
  2911  0103E8  6F6C               	movwf	(___awdiv@divisor+1)& (0+255),b
  2912  0103EA  0E64               	movlw	100
  2913  0103EC  6F6B               	movwf	___awdiv@divisor& (0+255),b
  2914  0103EE  ECCE  F08F         	call	___awdiv	;wreg free
  2915  0103F2  C069  F120         	movff	?___awdiv,_terminal_operation$4486
  2916  0103F6  C06A  F121         	movff	?___awdiv+1,_terminal_operation$4486+1
  2917                           
  2918                           ;PIC18F27J53-killifish_light05.c: 217: PWM_set(3, atoi(op2) * 250 / 100);
  2919  0103FA  C120  F071         	movff	_terminal_operation$4486,PWM_set@value
  2920  0103FE  C121  F072         	movff	_terminal_operation$4486+1,PWM_set@value+1
  2921  010402  0E03               	movlw	3
  2922  010404  EC1F  F08C         	call	_PWM_set
  2923  010408                     l5781:
  2924                           
  2925                           ;PIC18F27J53-killifish_light05.c: 218: }
  2926                           ;PIC18F27J53-killifish_light05.c: 219: if (!strcmp(op1, "clear")) {
  2927  010408  C0C5  F020         	movff	terminal_operation@op1,strcmp@s1
  2928  01040C  C0C6  F021         	movff	terminal_operation@op1+1,strcmp@s1+1
  2929  010410  0E9E               	movlw	low STR_61
  2930  010412  6E22               	movwf	strcmp@s2,c
  2931  010414  0EFF               	movlw	high STR_61
  2932  010416  6E23               	movwf	strcmp@s2+1,c
  2933  010418  EC6B  F095         	call	_strcmp	;wreg free
  2934  01041C  5020               	movf	?_strcmp,w,c
  2935  01041E  1021               	iorwf	?_strcmp+1,w,c
  2936  010420  A4D8               	btfss	status,2,c
  2937  010422  0012               	return	
  2938                           
  2939                           ;PIC18F27J53-killifish_light05.c: 220: light_mode = COMMAND_mode;
  2940  010424  0E02               	movlw	2
  2941  010426  0100               	movlb	0	; () banked
  2942  010428  6FD5               	movwf	_light_mode& (0+255),b
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;PIC18F27J53-killifish_light05.c: 221: PWM_set(0, 0);
  2946  01042A  0E00               	movlw	0
  2947  01042C  0100               	movlb	0	; () banked
  2948  01042E  6F72               	movwf	(PWM_set@value+1)& (0+255),b
  2949  010430  0E00               	movlw	0
  2950  010432  6F71               	movwf	PWM_set@value& (0+255),b
  2951  010434  0E00               	movlw	0
  2952  010436  EC1F  F08C         	call	_PWM_set
  2953                           
  2954                           ;PIC18F27J53-killifish_light05.c: 222: PWM_set(1, 0);
  2955  01043A  0E00               	movlw	0
  2956  01043C  0100               	movlb	0	; () banked
  2957  01043E  6F72               	movwf	(PWM_set@value+1)& (0+255),b
  2958  010440  0E00               	movlw	0
  2959  010442  6F71               	movwf	PWM_set@value& (0+255),b
  2960  010444  0E01               	movlw	1
  2961  010446  EC1F  F08C         	call	_PWM_set
  2962                           
  2963                           ;PIC18F27J53-killifish_light05.c: 223: PWM_set(2, 0);
  2964  01044A  0E00               	movlw	0
  2965  01044C  0100               	movlb	0	; () banked
  2966  01044E  6F72               	movwf	(PWM_set@value+1)& (0+255),b
  2967  010450  0E00               	movlw	0
  2968  010452  6F71               	movwf	PWM_set@value& (0+255),b
  2969  010454  0E02               	movlw	2
  2970  010456  EC1F  F08C         	call	_PWM_set
  2971                           
  2972                           ;PIC18F27J53-killifish_light05.c: 224: PWM_set(3, 0);
  2973  01045A  0E00               	movlw	0
  2974  01045C  0100               	movlb	0	; () banked
  2975  01045E  6F72               	movwf	(PWM_set@value+1)& (0+255),b
  2976  010460  0E00               	movlw	0
  2977  010462  6F71               	movwf	PWM_set@value& (0+255),b
  2978  010464  0E03               	movlw	3
  2979  010466  EC1F  F08C         	call	_PWM_set
  2980  01046A  0012               	return	
  2981  01046C                     __end_of_terminal_operation:
  2982                           	opt stack 0
  2983                           tblptru	equ	0xFF8
  2984                           tblptrh	equ	0xFF7
  2985                           tblptrl	equ	0xFF6
  2986                           tablat	equ	0xFF5
  2987                           prodh	equ	0xFF4
  2988                           prodl	equ	0xFF3
  2989                           intcon	equ	0xFF2
  2990                           postinc0	equ	0xFEE
  2991                           wreg	equ	0xFE8
  2992                           postdec1	equ	0xFE5
  2993                           fsr1h	equ	0xFE2
  2994                           fsr1l	equ	0xFE1
  2995                           indf2	equ	0xFDF
  2996                           fsr2h	equ	0xFDA
  2997                           fsr2l	equ	0xFD9
  2998                           status	equ	0xFD8
  2999                           
  3000 ;; *************** function _tx_sends *****************
  3001 ;; Defined at:
  3002 ;;		line 209 in file "../My_library/My_PIC.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;  asciicode       2   33[COMRAM] PTR const unsigned char 
  3005 ;;		 -> STR_43(315), 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;		None               void
  3010 ;; Registers used:
  3011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3017 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3020 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3021 ;;Total ram usage:        2 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; Hardware stack levels required when called:    6
  3024 ;; This function calls:
  3025 ;;		_ringbuf_put
  3026 ;; This function is called by:
  3027 ;;		_terminal_operation
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           	psect	text3
  3032  012C0E                     __ptext3:
  3033                           	opt stack 0
  3034  012C0E                     _tx_sends:
  3035                           	opt stack 22
  3036                           
  3037                           ;My_PIC.c: 210: while (*asciicode) {
  3038                           
  3039                           ;incstack = 0
  3040  012C0E  D013               	goto	l5555
  3041  012C10                     l5551:
  3042                           
  3043                           ;My_PIC.c: 211: ringbuf_put(&tx_buf, *asciicode++);
  3044  012C10  0ED9               	movlw	low _tx_buf
  3045  012C12  0100               	movlb	0	; () banked
  3046  012C14  6F66               	movwf	ringbuf_put@rb& (0+255),b
  3047  012C16  0E00               	movlw	high _tx_buf
  3048  012C18  0100               	movlb	0	; () banked
  3049  012C1A  6F67               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3050  012C1C  C022  FFF6         	movff	tx_sends@asciicode,tblptrl
  3051  012C20  C023  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  3052  012C24                     	if	0	;tblptru may be non-zero
  3053  012C24                     	endif
  3054  012C24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3055  012C24  0E00               	movlw	low (__mediumconst shr (0+16))
  3056  012C26  6EF8               	movwf	tblptru,c
  3057  012C28                     	endif
  3058  012C28  0008               	tblrd		*
  3059  012C2A  CFF5 F068          	movff	tablat,ringbuf_put@asciicode
  3060  012C2E  ECA0  F08E         	call	_ringbuf_put	;wreg free
  3061  012C32  4A22               	infsnz	tx_sends@asciicode,f,c
  3062  012C34  2A23               	incf	tx_sends@asciicode+1,f,c
  3063  012C36                     l5555:
  3064  012C36  C022  FFF6         	movff	tx_sends@asciicode,tblptrl
  3065  012C3A  C023  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  3066  012C3E                     	if	0	;tblptru may be non-zero
  3067  012C3E                     	endif
  3068  012C3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3069  012C3E  0E00               	movlw	low (__mediumconst shr (0+16))
  3070  012C40  6EF8               	movwf	tblptru,c
  3071  012C42                     	endif
  3072  012C42  0008               	tblrd		*
  3073  012C44  50F5               	movf	tablat,w,c
  3074  012C46  0900               	iorlw	0
  3075  012C48  A4D8               	btfss	status,2,c
  3076  012C4A  D7E2               	goto	l5551
  3077                           
  3078                           ;My_PIC.c: 212: }
  3079                           ;My_PIC.c: 213: PIE1bits.TXIE = 1;
  3080  012C4C  889D               	bsf	3997,4,c	;volatile
  3081  012C4E  0012               	return		;funcret
  3082  012C50                     __end_of_tx_sends:
  3083                           	opt stack 0
  3084                           tblptru	equ	0xFF8
  3085                           tblptrh	equ	0xFF7
  3086                           tblptrl	equ	0xFF6
  3087                           tablat	equ	0xFF5
  3088                           prodh	equ	0xFF4
  3089                           prodl	equ	0xFF3
  3090                           intcon	equ	0xFF2
  3091                           postinc0	equ	0xFEE
  3092                           wreg	equ	0xFE8
  3093                           postdec1	equ	0xFE5
  3094                           fsr1h	equ	0xFE2
  3095                           fsr1l	equ	0xFE1
  3096                           indf2	equ	0xFDF
  3097                           fsr2h	equ	0xFDA
  3098                           fsr2l	equ	0xFD9
  3099                           status	equ	0xFD8
  3100                           
  3101 ;; *************** function _terminal_time *****************
  3102 ;; Defined at:
  3103 ;;		line 93 in file "../My_library/My_terminal.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;  tx              2   88[BANK0 ] PTR struct ringbuf
  3106 ;;		 -> tx_buf(8), 
  3107 ;;  op0             2   90[BANK0 ] PTR unsigned char 
  3108 ;;		 -> terminal_loop@op0(25), 
  3109 ;;  op1             2   92[BANK0 ] PTR unsigned char 
  3110 ;;		 -> terminal_loop@op1(25), 
  3111 ;;  op2             2   94[BANK0 ] PTR unsigned char 
  3112 ;;		 -> terminal_loop@op2(25), 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;		None
  3115 ;; Return value:  Size  Location     Type
  3116 ;;		None               void
  3117 ;; Registers used:
  3118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3124 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3125 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3127 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3128 ;;Total ram usage:        9 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; Hardware stack levels required when called:   10
  3131 ;; This function calls:
  3132 ;;		_atoi
  3133 ;;		_month_length
  3134 ;;		_print_time
  3135 ;;		_strcmp
  3136 ;;		_terminal_at_hand
  3137 ;; This function is called by:
  3138 ;;		_terminal_operation
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           	psect	text4
  3143  010C02                     __ptext4:
  3144                           	opt stack 0
  3145  010C02                     _terminal_time:
  3146                           	opt stack 18
  3147                           
  3148                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  3149                           
  3150                           ;incstack = 0
  3151  010C02  C0BA  F020         	movff	terminal_time@op0,strcmp@s1
  3152  010C06  C0BB  F021         	movff	terminal_time@op0+1,strcmp@s1+1
  3153  010C0A  0E64               	movlw	low STR_25
  3154  010C0C  6E22               	movwf	strcmp@s2,c
  3155  010C0E  0EFF               	movlw	high STR_25
  3156  010C10  6E23               	movwf	strcmp@s2+1,c
  3157  010C12  EC6B  F095         	call	_strcmp	;wreg free
  3158  010C16  5020               	movf	?_strcmp,w,c
  3159  010C18  1021               	iorwf	?_strcmp+1,w,c
  3160  010C1A  B4D8               	btfsc	status,2,c
  3161  010C1C  D00E               	goto	l5561
  3162  010C1E  C0BA  F020         	movff	terminal_time@op0,strcmp@s1
  3163  010C22  C0BB  F021         	movff	terminal_time@op0+1,strcmp@s1+1
  3164  010C26  0EE3               	movlw	low (STR_27+1)
  3165  010C28  6E22               	movwf	strcmp@s2,c
  3166  010C2A  0EFF               	movlw	high (STR_27+1)
  3167  010C2C  6E23               	movwf	strcmp@s2+1,c
  3168  010C2E  EC6B  F095         	call	_strcmp	;wreg free
  3169  010C32  5020               	movf	?_strcmp,w,c
  3170  010C34  1021               	iorwf	?_strcmp+1,w,c
  3171  010C36  A4D8               	btfss	status,2,c
  3172  010C38  D006               	goto	l5563
  3173  010C3A                     l5561:
  3174                           
  3175                           ;My_terminal.c: 95: print_time(tx);
  3176  010C3A  C0B8  F091         	movff	terminal_time@tx,print_time@tx
  3177  010C3E  C0B9  F092         	movff	terminal_time@tx+1,print_time@tx+1
  3178  010C42  ECE2  F092         	call	_print_time	;wreg free
  3179  010C46                     l5563:
  3180                           
  3181                           ;My_terminal.c: 96: }
  3182                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  3183  010C46  C0BA  F020         	movff	terminal_time@op0,strcmp@s1
  3184  010C4A  C0BB  F021         	movff	terminal_time@op0+1,strcmp@s1+1
  3185  010C4E  0EE2               	movlw	low STR_27
  3186  010C50  6E22               	movwf	strcmp@s2,c
  3187  010C52  0EFF               	movlw	high STR_27
  3188  010C54  6E23               	movwf	strcmp@s2+1,c
  3189  010C56  EC6B  F095         	call	_strcmp	;wreg free
  3190  010C5A  5020               	movf	?_strcmp,w,c
  3191  010C5C  1021               	iorwf	?_strcmp+1,w,c
  3192  010C5E  B4D8               	btfsc	status,2,c
  3193  010C60  D00E               	goto	l5567
  3194  010C62  C0BA  F020         	movff	terminal_time@op0,strcmp@s1
  3195  010C66  C0BB  F021         	movff	terminal_time@op0+1,strcmp@s1+1
  3196  010C6A  0E58               	movlw	low STR_28
  3197  010C6C  6E22               	movwf	strcmp@s2,c
  3198  010C6E  0EFF               	movlw	high STR_28
  3199  010C70  6E23               	movwf	strcmp@s2+1,c
  3200  010C72  EC6B  F095         	call	_strcmp	;wreg free
  3201  010C76  5020               	movf	?_strcmp,w,c
  3202  010C78  1021               	iorwf	?_strcmp+1,w,c
  3203  010C7A  A4D8               	btfss	status,2,c
  3204  010C7C  0012               	return	
  3205  010C7E                     l5567:
  3206                           
  3207                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  3208  010C7E  C0BC  F020         	movff	terminal_time@op1,strcmp@s1
  3209  010C82  C0BD  F021         	movff	terminal_time@op1+1,strcmp@s1+1
  3210  010C86  0EDD               	movlw	low (STR_34+2)
  3211  010C88  6E22               	movwf	strcmp@s2,c
  3212  010C8A  0EFF               	movlw	high (STR_34+2)
  3213  010C8C  6E23               	movwf	strcmp@s2+1,c
  3214  010C8E  EC6B  F095         	call	_strcmp	;wreg free
  3215  010C92  5020               	movf	?_strcmp,w,c
  3216  010C94  1021               	iorwf	?_strcmp+1,w,c
  3217  010C96  B4D8               	btfsc	status,2,c
  3218  010C98  D00E               	goto	l5571
  3219  010C9A  C0BC  F020         	movff	terminal_time@op1,strcmp@s1
  3220  010C9E  C0BD  F021         	movff	terminal_time@op1+1,strcmp@s1+1
  3221  010CA2  0EB4               	movlw	low STR_30
  3222  010CA4  6E22               	movwf	strcmp@s2,c
  3223  010CA6  0EFF               	movlw	high STR_30
  3224  010CA8  6E23               	movwf	strcmp@s2+1,c
  3225  010CAA  EC6B  F095         	call	_strcmp	;wreg free
  3226  010CAE  5020               	movf	?_strcmp,w,c
  3227  010CB0  1021               	iorwf	?_strcmp+1,w,c
  3228  010CB2  A4D8               	btfss	status,2,c
  3229  010CB4  D01C               	goto	l5573
  3230  010CB6                     l5571:
  3231                           
  3232                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  3233  010CB6  C0B8  F0B1         	movff	terminal_time@tx,terminal_at_hand@tx
  3234  010CBA  C0B9  F0B2         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3235  010CBE  0E32               	movlw	low (_now+10)
  3236  010CC0  0100               	movlb	0	; () banked
  3237  010CC2  6FB3               	movwf	terminal_at_hand@hand& (0+255),b
  3238  010CC4  0E00               	movlw	high (_now+10)
  3239  010CC6  0100               	movlb	0	; () banked
  3240  010CC8  6FB4               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3241  010CCA  0E00               	movlw	0
  3242  010CCC  0100               	movlb	0	; () banked
  3243  010CCE  6FB5               	movwf	terminal_at_hand@min& (0+255),b
  3244  010CD0  0E63               	movlw	99
  3245  010CD2  0100               	movlb	0	; () banked
  3246  010CD4  6FB6               	movwf	terminal_at_hand@max& (0+255),b
  3247  010CD6  C0BE  F062         	movff	terminal_time@op2,atoi@s
  3248  010CDA  C0BF  F063         	movff	terminal_time@op2+1,atoi@s+1
  3249  010CDE  ECE9  F08C         	call	_atoi	;wreg free
  3250  010CE2  0100               	movlb	0	; () banked
  3251  010CE4  5162               	movf	?_atoi& (0+255),w,b
  3252  010CE6  0100               	movlb	0	; () banked
  3253  010CE8  6FB7               	movwf	terminal_at_hand@value& (0+255),b
  3254  010CEA  EC09  F095         	call	_terminal_at_hand	;wreg free
  3255  010CEE                     l5573:
  3256                           
  3257                           ;My_terminal.c: 100: }
  3258                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  3259  010CEE  C0BC  F020         	movff	terminal_time@op1,strcmp@s1
  3260  010CF2  C0BD  F021         	movff	terminal_time@op1+1,strcmp@s1+1
  3261  010CF6  0EC9               	movlw	low (STR_52+2)
  3262  010CF8  6E22               	movwf	strcmp@s2,c
  3263  010CFA  0EFF               	movlw	high (STR_52+2)
  3264  010CFC  6E23               	movwf	strcmp@s2+1,c
  3265  010CFE  EC6B  F095         	call	_strcmp	;wreg free
  3266  010D02  5020               	movf	?_strcmp,w,c
  3267  010D04  1021               	iorwf	?_strcmp+1,w,c
  3268  010D06  B4D8               	btfsc	status,2,c
  3269  010D08  D00E               	goto	l5577
  3270  010D0A  C0BC  F020         	movff	terminal_time@op1,strcmp@s1
  3271  010D0E  C0BD  F021         	movff	terminal_time@op1+1,strcmp@s1+1
  3272  010D12  0EA4               	movlw	low STR_32
  3273  010D14  6E22               	movwf	strcmp@s2,c
  3274  010D16  0EFF               	movlw	high STR_32
  3275  010D18  6E23               	movwf	strcmp@s2+1,c
  3276  010D1A  EC6B  F095         	call	_strcmp	;wreg free
  3277  010D1E  5020               	movf	?_strcmp,w,c
  3278  010D20  1021               	iorwf	?_strcmp+1,w,c
  3279  010D22  A4D8               	btfss	status,2,c
  3280  010D24  D01C               	goto	l5579
  3281  010D26                     l5577:
  3282                           
  3283                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  3284  010D26  C0B8  F0B1         	movff	terminal_time@tx,terminal_at_hand@tx
  3285  010D2A  C0B9  F0B2         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3286  010D2E  0E31               	movlw	low (_now+9)
  3287  010D30  0100               	movlb	0	; () banked
  3288  010D32  6FB3               	movwf	terminal_at_hand@hand& (0+255),b
  3289  010D34  0E00               	movlw	high (_now+9)
  3290  010D36  0100               	movlb	0	; () banked
  3291  010D38  6FB4               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3292  010D3A  0E01               	movlw	1
  3293  010D3C  0100               	movlb	0	; () banked
  3294  010D3E  6FB5               	movwf	terminal_at_hand@min& (0+255),b
  3295  010D40  0E0C               	movlw	12
  3296  010D42  0100               	movlb	0	; () banked
  3297  010D44  6FB6               	movwf	terminal_at_hand@max& (0+255),b
  3298  010D46  C0BE  F062         	movff	terminal_time@op2,atoi@s
  3299  010D4A  C0BF  F063         	movff	terminal_time@op2+1,atoi@s+1
  3300  010D4E  ECE9  F08C         	call	_atoi	;wreg free
  3301  010D52  0100               	movlb	0	; () banked
  3302  010D54  5162               	movf	?_atoi& (0+255),w,b
  3303  010D56  0100               	movlb	0	; () banked
  3304  010D58  6FB7               	movwf	terminal_at_hand@value& (0+255),b
  3305  010D5A  EC09  F095         	call	_terminal_at_hand	;wreg free
  3306  010D5E                     l5579:
  3307                           
  3308                           ;My_terminal.c: 103: }
  3309                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  3310  010D5E  C0BC  F020         	movff	terminal_time@op1,strcmp@s1
  3311  010D62  C0BD  F021         	movff	terminal_time@op1+1,strcmp@s1+1
  3312  010D66  0EC1               	movlw	low (STR_1+3)
  3313  010D68  6E22               	movwf	strcmp@s2,c
  3314  010D6A  0EFF               	movlw	high (STR_1+3)
  3315  010D6C  6E23               	movwf	strcmp@s2+1,c
  3316  010D6E  EC6B  F095         	call	_strcmp	;wreg free
  3317  010D72  5020               	movf	?_strcmp,w,c
  3318  010D74  1021               	iorwf	?_strcmp+1,w,c
  3319  010D76  B4D8               	btfsc	status,2,c
  3320  010D78  D00E               	goto	l5583
  3321  010D7A  C0BC  F020         	movff	terminal_time@op1,strcmp@s1
  3322  010D7E  C0BD  F021         	movff	terminal_time@op1+1,strcmp@s1+1
  3323  010D82  0EDB               	movlw	low STR_34
  3324  010D84  6E22               	movwf	strcmp@s2,c
  3325  010D86  0EFF               	movlw	high STR_34
  3326  010D88  6E23               	movwf	strcmp@s2+1,c
  3327  010D8A  EC6B  F095         	call	_strcmp	;wreg free
  3328  010D8E  5020               	movf	?_strcmp,w,c
  3329  010D90  1021               	iorwf	?_strcmp+1,w,c
  3330  010D92  A4D8               	btfss	status,2,c
  3331  010D94  D022               	goto	l5587
  3332  010D96                     l5583:
  3333                           
  3334                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3335  010D96  C031  F062         	movff	_now+9,month_length@month
  3336  010D9A  5032               	movf	_now+10,w,c
  3337  010D9C  EC08  F08F         	call	_month_length
  3338  010DA0  0100               	movlb	0	; () banked
  3339  010DA2  6FC0               	movwf	_terminal_time$4484& (0+255),b
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3343  010DA4  C0B8  F0B1         	movff	terminal_time@tx,terminal_at_hand@tx
  3344  010DA8  C0B9  F0B2         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3345  010DAC  0E30               	movlw	low (_now+8)
  3346  010DAE  0100               	movlb	0	; () banked
  3347  010DB0  6FB3               	movwf	terminal_at_hand@hand& (0+255),b
  3348  010DB2  0E00               	movlw	high (_now+8)
  3349  010DB4  0100               	movlb	0	; () banked
  3350  010DB6  6FB4               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3351  010DB8  0E01               	movlw	1
  3352  010DBA  0100               	movlb	0	; () banked
  3353  010DBC  6FB5               	movwf	terminal_at_hand@min& (0+255),b
  3354  010DBE  C0C0  F0B6         	movff	_terminal_time$4484,terminal_at_hand@max
  3355  010DC2  C0BE  F062         	movff	terminal_time@op2,atoi@s
  3356  010DC6  C0BF  F063         	movff	terminal_time@op2+1,atoi@s+1
  3357  010DCA  ECE9  F08C         	call	_atoi	;wreg free
  3358  010DCE  0100               	movlb	0	; () banked
  3359  010DD0  5162               	movf	?_atoi& (0+255),w,b
  3360  010DD2  0100               	movlb	0	; () banked
  3361  010DD4  6FB7               	movwf	terminal_at_hand@value& (0+255),b
  3362  010DD6  EC09  F095         	call	_terminal_at_hand	;wreg free
  3363  010DDA                     l5587:
  3364                           
  3365                           ;My_terminal.c: 106: }
  3366                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  3367  010DDA  C0BC  F020         	movff	terminal_time@op1,strcmp@s1
  3368  010DDE  C0BD  F021         	movff	terminal_time@op1+1,strcmp@s1+1
  3369  010DE2  0EA8               	movlw	low (STR_32+4)
  3370  010DE4  6E22               	movwf	strcmp@s2,c
  3371  010DE6  0EFF               	movlw	high (STR_32+4)
  3372  010DE8  6E23               	movwf	strcmp@s2+1,c
  3373  010DEA  EC6B  F095         	call	_strcmp	;wreg free
  3374  010DEE  5020               	movf	?_strcmp,w,c
  3375  010DF0  1021               	iorwf	?_strcmp+1,w,c
  3376  010DF2  B4D8               	btfsc	status,2,c
  3377  010DF4  D00E               	goto	l5591
  3378  010DF6  C0BC  F020         	movff	terminal_time@op1,strcmp@s1
  3379  010DFA  C0BD  F021         	movff	terminal_time@op1+1,strcmp@s1+1
  3380  010DFE  0EB9               	movlw	low STR_36
  3381  010E00  6E22               	movwf	strcmp@s2,c
  3382  010E02  0EFF               	movlw	high STR_36
  3383  010E04  6E23               	movwf	strcmp@s2+1,c
  3384  010E06  EC6B  F095         	call	_strcmp	;wreg free
  3385  010E0A  5020               	movf	?_strcmp,w,c
  3386  010E0C  1021               	iorwf	?_strcmp+1,w,c
  3387  010E0E  A4D8               	btfss	status,2,c
  3388  010E10  D01C               	goto	l5593
  3389  010E12                     l5591:
  3390                           
  3391                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  3392  010E12  C0B8  F0B1         	movff	terminal_time@tx,terminal_at_hand@tx
  3393  010E16  C0B9  F0B2         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3394  010E1A  0E2E               	movlw	low (_now+6)
  3395  010E1C  0100               	movlb	0	; () banked
  3396  010E1E  6FB3               	movwf	terminal_at_hand@hand& (0+255),b
  3397  010E20  0E00               	movlw	high (_now+6)
  3398  010E22  0100               	movlb	0	; () banked
  3399  010E24  6FB4               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3400  010E26  0E00               	movlw	0
  3401  010E28  0100               	movlb	0	; () banked
  3402  010E2A  6FB5               	movwf	terminal_at_hand@min& (0+255),b
  3403  010E2C  0E17               	movlw	23
  3404  010E2E  0100               	movlb	0	; () banked
  3405  010E30  6FB6               	movwf	terminal_at_hand@max& (0+255),b
  3406  010E32  C0BE  F062         	movff	terminal_time@op2,atoi@s
  3407  010E36  C0BF  F063         	movff	terminal_time@op2+1,atoi@s+1
  3408  010E3A  ECE9  F08C         	call	_atoi	;wreg free
  3409  010E3E  0100               	movlb	0	; () banked
  3410  010E40  5162               	movf	?_atoi& (0+255),w,b
  3411  010E42  0100               	movlb	0	; () banked
  3412  010E44  6FB7               	movwf	terminal_at_hand@value& (0+255),b
  3413  010E46  EC09  F095         	call	_terminal_at_hand	;wreg free
  3414  010E4A                     l5593:
  3415                           
  3416                           ;My_terminal.c: 109: }
  3417                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  3418  010E4A  C0BC  F020         	movff	terminal_time@op1,strcmp@s1
  3419  010E4E  C0BD  F021         	movff	terminal_time@op1+1,strcmp@s1+1
  3420  010E52  0ED1               	movlw	low (STR_51+2)
  3421  010E54  6E22               	movwf	strcmp@s2,c
  3422  010E56  0EFF               	movlw	high (STR_51+2)
  3423  010E58  6E23               	movwf	strcmp@s2+1,c
  3424  010E5A  EC6B  F095         	call	_strcmp	;wreg free
  3425  010E5E  5020               	movf	?_strcmp,w,c
  3426  010E60  1021               	iorwf	?_strcmp+1,w,c
  3427  010E62  B4D8               	btfsc	status,2,c
  3428  010E64  D00E               	goto	l5597
  3429  010E66  C0BC  F020         	movff	terminal_time@op1,strcmp@s1
  3430  010E6A  C0BD  F021         	movff	terminal_time@op1+1,strcmp@s1+1
  3431  010E6E  0E97               	movlw	low STR_38
  3432  010E70  6E22               	movwf	strcmp@s2,c
  3433  010E72  0EFF               	movlw	high STR_38
  3434  010E74  6E23               	movwf	strcmp@s2+1,c
  3435  010E76  EC6B  F095         	call	_strcmp	;wreg free
  3436  010E7A  5020               	movf	?_strcmp,w,c
  3437  010E7C  1021               	iorwf	?_strcmp+1,w,c
  3438  010E7E  A4D8               	btfss	status,2,c
  3439  010E80  D01C               	goto	l5599
  3440  010E82                     l5597:
  3441                           
  3442                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  3443  010E82  C0B8  F0B1         	movff	terminal_time@tx,terminal_at_hand@tx
  3444  010E86  C0B9  F0B2         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3445  010E8A  0E2D               	movlw	low (_now+5)
  3446  010E8C  0100               	movlb	0	; () banked
  3447  010E8E  6FB3               	movwf	terminal_at_hand@hand& (0+255),b
  3448  010E90  0E00               	movlw	high (_now+5)
  3449  010E92  0100               	movlb	0	; () banked
  3450  010E94  6FB4               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3451  010E96  0E00               	movlw	0
  3452  010E98  0100               	movlb	0	; () banked
  3453  010E9A  6FB5               	movwf	terminal_at_hand@min& (0+255),b
  3454  010E9C  0E3B               	movlw	59
  3455  010E9E  0100               	movlb	0	; () banked
  3456  010EA0  6FB6               	movwf	terminal_at_hand@max& (0+255),b
  3457  010EA2  C0BE  F062         	movff	terminal_time@op2,atoi@s
  3458  010EA6  C0BF  F063         	movff	terminal_time@op2+1,atoi@s+1
  3459  010EAA  ECE9  F08C         	call	_atoi	;wreg free
  3460  010EAE  0100               	movlb	0	; () banked
  3461  010EB0  5162               	movf	?_atoi& (0+255),w,b
  3462  010EB2  0100               	movlb	0	; () banked
  3463  010EB4  6FB7               	movwf	terminal_at_hand@value& (0+255),b
  3464  010EB6  EC09  F095         	call	_terminal_at_hand	;wreg free
  3465  010EBA                     l5599:
  3466                           
  3467                           ;My_terminal.c: 112: }
  3468                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  3469  010EBA  C0BC  F020         	movff	terminal_time@op1,strcmp@s1
  3470  010EBE  C0BD  F021         	movff	terminal_time@op1+1,strcmp@s1+1
  3471  010EC2  0EF5               	movlw	low STR_39
  3472  010EC4  6E22               	movwf	strcmp@s2,c
  3473  010EC6  0EFF               	movlw	high STR_39
  3474  010EC8  6E23               	movwf	strcmp@s2+1,c
  3475  010ECA  EC6B  F095         	call	_strcmp	;wreg free
  3476  010ECE  5020               	movf	?_strcmp,w,c
  3477  010ED0  1021               	iorwf	?_strcmp+1,w,c
  3478  010ED2  B4D8               	btfsc	status,2,c
  3479  010ED4  D00E               	goto	l5603
  3480  010ED6  C0BC  F020         	movff	terminal_time@op1,strcmp@s1
  3481  010EDA  C0BD  F021         	movff	terminal_time@op1+1,strcmp@s1+1
  3482  010EDE  0E90               	movlw	low STR_40
  3483  010EE0  6E22               	movwf	strcmp@s2,c
  3484  010EE2  0EFF               	movlw	high STR_40
  3485  010EE4  6E23               	movwf	strcmp@s2+1,c
  3486  010EE6  EC6B  F095         	call	_strcmp	;wreg free
  3487  010EEA  5020               	movf	?_strcmp,w,c
  3488  010EEC  1021               	iorwf	?_strcmp+1,w,c
  3489  010EEE  A4D8               	btfss	status,2,c
  3490  010EF0  0012               	return	
  3491  010EF2                     l5603:
  3492                           
  3493                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  3494  010EF2  C0B8  F0B1         	movff	terminal_time@tx,terminal_at_hand@tx
  3495  010EF6  C0B9  F0B2         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3496  010EFA  0E2C               	movlw	low (_now+4)
  3497  010EFC  0100               	movlb	0	; () banked
  3498  010EFE  6FB3               	movwf	terminal_at_hand@hand& (0+255),b
  3499  010F00  0E00               	movlw	high (_now+4)
  3500  010F02  0100               	movlb	0	; () banked
  3501  010F04  6FB4               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3502  010F06  0E00               	movlw	0
  3503  010F08  0100               	movlb	0	; () banked
  3504  010F0A  6FB5               	movwf	terminal_at_hand@min& (0+255),b
  3505  010F0C  0E3B               	movlw	59
  3506  010F0E  0100               	movlb	0	; () banked
  3507  010F10  6FB6               	movwf	terminal_at_hand@max& (0+255),b
  3508  010F12  C0BE  F062         	movff	terminal_time@op2,atoi@s
  3509  010F16  C0BF  F063         	movff	terminal_time@op2+1,atoi@s+1
  3510  010F1A  ECE9  F08C         	call	_atoi	;wreg free
  3511  010F1E  0100               	movlb	0	; () banked
  3512  010F20  5162               	movf	?_atoi& (0+255),w,b
  3513  010F22  0100               	movlb	0	; () banked
  3514  010F24  6FB7               	movwf	terminal_at_hand@value& (0+255),b
  3515  010F26  EC09  F095         	call	_terminal_at_hand	;wreg free
  3516  010F2A  0012               	return	
  3517  010F2C                     __end_of_terminal_time:
  3518                           	opt stack 0
  3519                           tblptru	equ	0xFF8
  3520                           tblptrh	equ	0xFF7
  3521                           tblptrl	equ	0xFF6
  3522                           tablat	equ	0xFF5
  3523                           prodh	equ	0xFF4
  3524                           prodl	equ	0xFF3
  3525                           intcon	equ	0xFF2
  3526                           postinc0	equ	0xFEE
  3527                           wreg	equ	0xFE8
  3528                           postdec1	equ	0xFE5
  3529                           fsr1h	equ	0xFE2
  3530                           fsr1l	equ	0xFE1
  3531                           indf2	equ	0xFDF
  3532                           fsr2h	equ	0xFDA
  3533                           fsr2l	equ	0xFD9
  3534                           status	equ	0xFD8
  3535                           
  3536 ;; *************** function _terminal_at_hand *****************
  3537 ;; Defined at:
  3538 ;;		line 82 in file "../My_library/My_terminal.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;  tx              2   81[BANK0 ] PTR struct ringbuf
  3541 ;;		 -> tx_buf(8), 
  3542 ;;  hand            2   83[BANK0 ] PTR unsigned char 
  3543 ;;		 -> now(14), 
  3544 ;;  min             1   85[BANK0 ] unsigned char 
  3545 ;;  max             1   86[BANK0 ] unsigned char 
  3546 ;;  value           1   87[BANK0 ] unsigned char 
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;		None
  3549 ;; Return value:  Size  Location     Type
  3550 ;;		None               void
  3551 ;; Registers used:
  3552 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3558 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3561 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3562 ;;Total ram usage:        7 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; Hardware stack levels required when called:    9
  3565 ;; This function calls:
  3566 ;;		_RTCC_from_caltime
  3567 ;;		_print_time
  3568 ;;		_ringbuf_put_str
  3569 ;; This function is called by:
  3570 ;;		_terminal_time
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574                           	psect	text5
  3575  012A12                     __ptext5:
  3576                           	opt stack 0
  3577  012A12                     _terminal_at_hand:
  3578                           	opt stack 18
  3579                           
  3580                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  3581                           
  3582                           ;incstack = 0
  3583  012A12  0100               	movlb	0	; () banked
  3584  012A14  51B5               	movf	terminal_at_hand@min& (0+255),w,b
  3585  012A16  0100               	movlb	0	; () banked
  3586  012A18  5DB7               	subwf	terminal_at_hand@value& (0+255),w,b
  3587  012A1A  A0D8               	btfss	status,0,c
  3588  012A1C  D01E               	goto	l5507
  3589                           
  3590                           ; BSR set to: 0
  3591  012A1E  0100               	movlb	0	; () banked
  3592  012A20  51B7               	movf	terminal_at_hand@value& (0+255),w,b
  3593  012A22  0100               	movlb	0	; () banked
  3594  012A24  5DB6               	subwf	terminal_at_hand@max& (0+255),w,b
  3595  012A26  A0D8               	btfss	status,0,c
  3596  012A28  D018               	goto	l5507
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;My_terminal.c: 84: *hand = value;
  3600  012A2A  C0B3  FFD9         	movff	terminal_at_hand@hand,fsr2l
  3601  012A2E  C0B4  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  3602  012A32  C0B7  FFDF         	movff	terminal_at_hand@value,indf2
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  3606  012A36  0E28               	movlw	low _now
  3607  012A38  0100               	movlb	0	; () banked
  3608  012A3A  6F97               	movwf	RTCC_from_caltime@tm& (0+255),b
  3609  012A3C  0E00               	movlw	high _now
  3610  012A3E  0100               	movlb	0	; () banked
  3611  012A40  6F98               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  3612  012A42  EC9C  F096         	call	_RTCC_from_caltime	;wreg free
  3613                           
  3614                           ;My_terminal.c: 86: time_change_flag = 1;
  3615  012A46  0E01               	movlw	1
  3616  012A48  0100               	movlb	0	; () banked
  3617  012A4A  6FD6               	movwf	_time_change_flag& (0+255),b
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;My_terminal.c: 87: print_time(tx);
  3621  012A4C  C0B1  F091         	movff	terminal_at_hand@tx,print_time@tx
  3622  012A50  C0B2  F092         	movff	terminal_at_hand@tx+1,print_time@tx+1
  3623  012A54  ECE2  F092         	call	_print_time	;wreg free
  3624                           
  3625                           ;My_terminal.c: 88: } else {
  3626  012A58  0012               	return	
  3627  012A5A                     l5507:
  3628                           
  3629                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  3630  012A5A  C0B1  F06D         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  3631  012A5E  C0B2  F06E         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  3632  012A62  0E81               	movlw	low STR_24
  3633  012A64  0100               	movlb	0	; () banked
  3634  012A66  6F6F               	movwf	ringbuf_put_str@str& (0+255),b
  3635  012A68  0EFF               	movlw	high STR_24
  3636  012A6A  0100               	movlb	0	; () banked
  3637  012A6C  6F70               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3638  012A6E  ECD7  F094         	call	_ringbuf_put_str	;wreg free
  3639  012A72  0012               	return	
  3640  012A74                     __end_of_terminal_at_hand:
  3641                           	opt stack 0
  3642                           tblptru	equ	0xFF8
  3643                           tblptrh	equ	0xFF7
  3644                           tblptrl	equ	0xFF6
  3645                           tablat	equ	0xFF5
  3646                           prodh	equ	0xFF4
  3647                           prodl	equ	0xFF3
  3648                           intcon	equ	0xFF2
  3649                           postinc0	equ	0xFEE
  3650                           wreg	equ	0xFE8
  3651                           postdec1	equ	0xFE5
  3652                           fsr1h	equ	0xFE2
  3653                           fsr1l	equ	0xFE1
  3654                           indf2	equ	0xFDF
  3655                           fsr2h	equ	0xFDA
  3656                           fsr2l	equ	0xFD9
  3657                           status	equ	0xFD8
  3658                           
  3659 ;; *************** function _print_time *****************
  3660 ;; Defined at:
  3661 ;;		line 68 in file "../My_library/My_terminal.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;  tx              2   49[BANK0 ] PTR struct ringbuf
  3664 ;;		 -> tx_buf(8), 
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;  str            30   51[BANK0 ] unsigned char [30]
  3667 ;; Return value:  Size  Location     Type
  3668 ;;		None               void
  3669 ;; Registers used:
  3670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3676 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3677 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3679 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3680 ;;Total ram usage:       32 bytes
  3681 ;; Hardware stack levels used:    1
  3682 ;; Hardware stack levels required when called:    8
  3683 ;; This function calls:
  3684 ;;		_RTCC_from_RTCC
  3685 ;;		_ringbuf_put_str
  3686 ;;		_sprintf
  3687 ;; This function is called by:
  3688 ;;		_terminal_at_hand
  3689 ;;		_terminal_time
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           	psect	text6
  3694  0125C4                     __ptext6:
  3695                           	opt stack 0
  3696  0125C4                     _print_time:
  3697                           	opt stack 18
  3698                           
  3699                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  3700                           
  3701                           ;incstack = 0
  3702  0125C4  0E28               	movlw	low _now
  3703  0125C6  0100               	movlb	0	; () banked
  3704  0125C8  6F81               	movwf	RTCC_from_RTCC@tm& (0+255),b
  3705  0125CA  0E00               	movlw	high _now
  3706  0125CC  0100               	movlb	0	; () banked
  3707  0125CE  6F82               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  3708  0125D0  EC00  F097         	call	_RTCC_from_RTCC	;wreg free
  3709                           
  3710                           ;My_terminal.c: 70: char str[30];
  3711                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  3712                           ;My_terminal.c: 72: now.YY,
  3713                           ;My_terminal.c: 73: now.MM,
  3714                           ;My_terminal.c: 74: now.DD,
  3715                           ;My_terminal.c: 75: weekday_3char[now.EE],
  3716                           ;My_terminal.c: 76: now.hh,
  3717                           ;My_terminal.c: 77: now.mm,
  3718                           ;My_terminal.c: 78: now.ss);
  3719  0125D4  0E93               	movlw	low print_time@str
  3720  0125D6  0100               	movlb	0	; () banked
  3721  0125D8  6F6E               	movwf	sprintf@sp& (0+255),b
  3722  0125DA  0E00               	movlw	high print_time@str
  3723  0125DC  0100               	movlb	0	; () banked
  3724  0125DE  6F6F               	movwf	(sprintf@sp+1)& (0+255),b
  3725  0125E0  0E24               	movlw	low STR_23
  3726  0125E2  0100               	movlb	0	; () banked
  3727  0125E4  6F70               	movwf	sprintf@f& (0+255),b
  3728  0125E6  0EFF               	movlw	high STR_23
  3729  0125E8  0100               	movlb	0	; () banked
  3730  0125EA  6F71               	movwf	(sprintf@f+1)& (0+255),b
  3731  0125EC  C032  F072         	movff	_now+10,?_sprintf+4
  3732  0125F0  0100               	movlb	0	; () banked
  3733  0125F2  6B73               	clrf	(?_sprintf+5)& (0+255),b
  3734  0125F4  C031  F074         	movff	_now+9,?_sprintf+6
  3735  0125F8  0100               	movlb	0	; () banked
  3736  0125FA  6B75               	clrf	(?_sprintf+7)& (0+255),b
  3737  0125FC  C030  F076         	movff	_now+8,?_sprintf+8
  3738  012600  0100               	movlb	0	; () banked
  3739  012602  6B77               	clrf	(?_sprintf+9)& (0+255),b
  3740  012604  502F               	movf	_now+7,w,c
  3741  012606  0D04               	mullw	4
  3742  012608  0ECD               	movlw	low _weekday_3char
  3743  01260A  24F3               	addwf	prodl,w,c
  3744  01260C  0100               	movlb	0	; () banked
  3745  01260E  6F78               	movwf	(?_sprintf+10)& (0+255),b
  3746  012610  0EFD               	movlw	high _weekday_3char
  3747  012612  20F4               	addwfc	prodh,w,c
  3748  012614  0100               	movlb	0	; () banked
  3749  012616  6F79               	movwf	(?_sprintf+11)& (0+255),b
  3750  012618  C02E  F07A         	movff	_now+6,?_sprintf+12
  3751  01261C  0100               	movlb	0	; () banked
  3752  01261E  6B7B               	clrf	(?_sprintf+13)& (0+255),b
  3753  012620  C02D  F07C         	movff	_now+5,?_sprintf+14
  3754  012624  0100               	movlb	0	; () banked
  3755  012626  6B7D               	clrf	(?_sprintf+15)& (0+255),b
  3756  012628  C02C  F07E         	movff	_now+4,?_sprintf+16
  3757  01262C  0100               	movlb	0	; () banked
  3758  01262E  6B7F               	clrf	(?_sprintf+17)& (0+255),b
  3759  012630  EC36  F082         	call	_sprintf	;wreg free
  3760                           
  3761                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  3762  012634  C091  F06D         	movff	print_time@tx,ringbuf_put_str@rb
  3763  012638  C092  F06E         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  3764  01263C  0E93               	movlw	low print_time@str
  3765  01263E  0100               	movlb	0	; () banked
  3766  012640  6F6F               	movwf	ringbuf_put_str@str& (0+255),b
  3767  012642  0E00               	movlw	high print_time@str
  3768  012644  0100               	movlb	0	; () banked
  3769  012646  6F70               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3770  012648  ECD7  F094         	call	_ringbuf_put_str	;wreg free
  3771  01264C  0012               	return		;funcret
  3772  01264E                     __end_of_print_time:
  3773                           	opt stack 0
  3774                           tblptru	equ	0xFF8
  3775                           tblptrh	equ	0xFF7
  3776                           tblptrl	equ	0xFF6
  3777                           tablat	equ	0xFF5
  3778                           prodh	equ	0xFF4
  3779                           prodl	equ	0xFF3
  3780                           intcon	equ	0xFF2
  3781                           postinc0	equ	0xFEE
  3782                           wreg	equ	0xFE8
  3783                           postdec1	equ	0xFE5
  3784                           fsr1h	equ	0xFE2
  3785                           fsr1l	equ	0xFE1
  3786                           indf2	equ	0xFDF
  3787                           fsr2h	equ	0xFDA
  3788                           fsr2l	equ	0xFD9
  3789                           status	equ	0xFD8
  3790                           
  3791 ;; *************** function _sprintf *****************
  3792 ;; Defined at:
  3793 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  sp              2   14[BANK0 ] PTR unsigned char 
  3796 ;;		 -> terminal_operation@str(30), print_time@str(30), print_time_dec@str(10), display_dec@s(4), 
  3797 ;;  f               2   16[BANK0 ] PTR const unsigned char 
  3798 ;;		 -> STR_46(15), STR_23(37), STR_21(5), STR_1(5), 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;  tmpval          4    0        struct .
  3801 ;;  width           2   47[BANK0 ] int 
  3802 ;;  len             2   43[BANK0 ] unsigned int 
  3803 ;;  val             2   41[BANK0 ] unsigned int 
  3804 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
  3805 ;;		 -> STR_62(7), weekday_3char(28), 
  3806 ;;  ap              2   37[BANK0 ] PTR void [1]
  3807 ;;		 -> ?_sprintf(2), 
  3808 ;;  c               1   46[BANK0 ] char 
  3809 ;;  flag            1   45[BANK0 ] unsigned char 
  3810 ;;  prec            1   36[BANK0 ] char 
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  2   14[BANK0 ] int 
  3813 ;; Registers used:
  3814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3820 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3821 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3822 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3823 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3824 ;;Total ram usage:       35 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; Hardware stack levels required when called:    5
  3827 ;; This function calls:
  3828 ;;		___lwdiv
  3829 ;;		___lwmod
  3830 ;;		___wmul
  3831 ;;		_isdigit
  3832 ;; This function is called by:
  3833 ;;		_print_time
  3834 ;;		_terminal_operation
  3835 ;;		_display_dec
  3836 ;;		_print_time_dec
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text7
  3841  01046C                     __ptext7:
  3842                           	opt stack 0
  3843  01046C                     _sprintf:
  3844                           	opt stack 20
  3845                           
  3846                           ;doprnt.c: 494: va_list ap;
  3847                           ;doprnt.c: 499: signed char c;
  3848                           ;doprnt.c: 501: int width;
  3849                           ;doprnt.c: 506: signed char prec;
  3850                           ;doprnt.c: 508: unsigned char flag;
  3851                           ;doprnt.c: 523: union {
  3852                           ;doprnt.c: 524: unsigned long vd;
  3853                           ;doprnt.c: 525: double integ;
  3854                           ;doprnt.c: 526: } tmpval;
  3855                           ;doprnt.c: 528: unsigned int val;
  3856                           ;doprnt.c: 529: unsigned len;
  3857                           ;doprnt.c: 530: const char * cp;
  3858                           ;doprnt.c: 533: *ap = __va_start();
  3859                           
  3860                           ;incstack = 0
  3861  01046C  0E72               	movlw	low (?_sprintf+4)
  3862  01046E  0100               	movlb	0	; () banked
  3863  010470  6F85               	movwf	sprintf@ap& (0+255),b
  3864  010472  0E00               	movlw	high (?_sprintf+4)
  3865  010474  0100               	movlb	0	; () banked
  3866  010476  6F86               	movwf	(sprintf@ap+1)& (0+255),b
  3867                           
  3868                           ;doprnt.c: 536: while(c = *f++) {
  3869  010478  D20E               	goto	l5479
  3870  01047A                     l5339:
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;doprnt.c: 538: if(c != '%')
  3874  01047A  0E25               	movlw	37
  3875  01047C  0100               	movlb	0	; () banked
  3876  01047E  198E               	xorwf	sprintf@c& (0+255),w,b
  3877  010480  B4D8               	btfsc	status,2,c
  3878  010482  D00A               	goto	l5345
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;doprnt.c: 540: {
  3882                           ;doprnt.c: 541: ((*sp++ = (c)));
  3883  010484  C06E  FFD9         	movff	sprintf@sp,fsr2l
  3884  010488  C06F  FFDA         	movff	sprintf@sp+1,fsr2h
  3885  01048C  C08E  FFDF         	movff	sprintf@c,indf2
  3886                           
  3887                           ; BSR set to: 0
  3888  010490  0100               	movlb	0	; () banked
  3889  010492  4B6E               	infsnz	sprintf@sp& (0+255),f,b
  3890  010494  2B6F               	incf	(sprintf@sp+1)& (0+255),f,b
  3891                           
  3892                           ;doprnt.c: 542: continue;
  3893  010496  D1FF               	goto	l5479
  3894  010498                     l5345:
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;doprnt.c: 543: }
  3898                           ;doprnt.c: 546: width = 0;
  3899  010498  0E00               	movlw	0
  3900  01049A  0100               	movlb	0	; () banked
  3901  01049C  6F90               	movwf	(sprintf@width+1)& (0+255),b
  3902  01049E  0E00               	movlw	0
  3903  0104A0  6F8F               	movwf	sprintf@width& (0+255),b
  3904                           
  3905                           ;doprnt.c: 548: flag = 0;
  3906  0104A2  0E00               	movlw	0
  3907  0104A4  0100               	movlb	0	; () banked
  3908  0104A6  6F8D               	movwf	sprintf@flag& (0+255),b
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;doprnt.c: 551: switch(*f) {
  3912                           
  3913                           ;doprnt.c: 550: for(;;) {
  3914  0104A8  D005               	goto	l5351
  3915  0104AA                     l5347:
  3916                           
  3917                           ;doprnt.c: 580: flag |= 0x04;
  3918  0104AA  0100               	movlb	0	; () banked
  3919  0104AC  858D               	bsf	sprintf@flag& (0+255),2,b
  3920                           
  3921                           ;doprnt.c: 581: f++;
  3922  0104AE  0100               	movlb	0	; () banked
  3923  0104B0  4B70               	infsnz	sprintf@f& (0+255),f,b
  3924  0104B2  2B71               	incf	(sprintf@f+1)& (0+255),f,b
  3925  0104B4                     l5351:
  3926  0104B4  C070  FFF6         	movff	sprintf@f,tblptrl
  3927  0104B8  C071  FFF7         	movff	sprintf@f+1,tblptrh
  3928  0104BC                     	if	0	;tblptru may be non-zero
  3929  0104BC                     	endif
  3930  0104BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3931  0104BC  0E00               	movlw	low (__mediumconst shr (0+16))
  3932  0104BE  6EF8               	movwf	tblptru,c
  3933  0104C0                     	endif
  3934  0104C0  0008               	tblrd		*
  3935  0104C2  50F5               	movf	tablat,w,c
  3936                           
  3937                           ; Switch size 1, requested type "space"
  3938                           ; Number of cases is 1, Range of values is 48 to 48
  3939                           ; switch strategies available:
  3940                           ; Name         Instructions Cycles
  3941                           ; simple_byte            4     3 (average)
  3942                           ;	Chosen strategy is simple_byte
  3943  0104C4  0A30               	xorlw	48	; case 48
  3944  0104C6  B4D8               	btfsc	status,2,c
  3945  0104C8  D7F0               	goto	l5347
  3946                           
  3947                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3948                           
  3949                           ;doprnt.c: 586: }
  3950                           
  3951                           ;doprnt.c: 585: break;
  3952  0104CA  C070  FFF6         	movff	sprintf@f,tblptrl
  3953  0104CE  C071  FFF7         	movff	sprintf@f+1,tblptrh
  3954  0104D2                     	if	0	;tblptru may be non-zero
  3955  0104D2                     	endif
  3956  0104D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3957  0104D2  0E00               	movlw	low (__mediumconst shr (0+16))
  3958  0104D4  6EF8               	movwf	tblptru,c
  3959  0104D6                     	endif
  3960  0104D6  0008               	tblrd		*
  3961  0104D8  50F5               	movf	tablat,w,c
  3962  0104DA  ECE3  F096         	call	_isdigit
  3963  0104DE  A0D8               	btfss	status,0,c
  3964  0104E0  D0CA               	goto	l5401
  3965                           
  3966                           ;doprnt.c: 598: width = 0;
  3967  0104E2  0E00               	movlw	0
  3968  0104E4  0100               	movlb	0	; () banked
  3969  0104E6  6F90               	movwf	(sprintf@width+1)& (0+255),b
  3970  0104E8  0E00               	movlw	0
  3971  0104EA  6F8F               	movwf	sprintf@width& (0+255),b
  3972  0104EC                     l5357:
  3973                           
  3974                           ;doprnt.c: 600: width *= 10;
  3975  0104EC  C08F  F020         	movff	sprintf@width,___wmul@multiplier
  3976  0104F0  C090  F021         	movff	sprintf@width+1,___wmul@multiplier+1
  3977  0104F4  0E00               	movlw	0
  3978  0104F6  6E23               	movwf	___wmul@multiplicand+1,c
  3979  0104F8  0E0A               	movlw	10
  3980  0104FA  6E22               	movwf	___wmul@multiplicand,c
  3981  0104FC  EC73  F096         	call	___wmul	;wreg free
  3982  010500  C020  F08F         	movff	?___wmul,sprintf@width
  3983  010504  C021  F090         	movff	?___wmul+1,sprintf@width+1
  3984                           
  3985                           ;doprnt.c: 601: width += *f++ - '0';
  3986  010508  0ED0               	movlw	208
  3987  01050A  0100               	movlb	0	; () banked
  3988  01050C  6F80               	movwf	??_sprintf& (0+255),b
  3989  01050E  0EFF               	movlw	255
  3990  010510  0100               	movlb	0	; () banked
  3991  010512  6F81               	movwf	(??_sprintf+1)& (0+255),b
  3992  010514  C070  FFF6         	movff	sprintf@f,tblptrl
  3993  010518  C071  FFF7         	movff	sprintf@f+1,tblptrh
  3994  01051C                     	if	0	;tblptru may be non-zero
  3995  01051C                     	endif
  3996  01051C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3997  01051C  0E00               	movlw	low (__mediumconst shr (0+16))
  3998  01051E  6EF8               	movwf	tblptru,c
  3999  010520                     	endif
  4000  010520  0008               	tblrd		*
  4001  010522  50F5               	movf	tablat,w,c
  4002  010524  0100               	movlb	0	; () banked
  4003  010526  6F82               	movwf	(??_sprintf+2)& (0+255),b
  4004  010528  6B83               	clrf	(??_sprintf+3)& (0+255),b
  4005  01052A  0100               	movlb	0	; () banked
  4006  01052C  5180               	movf	??_sprintf& (0+255),w,b
  4007  01052E  0100               	movlb	0	; () banked
  4008  010530  2782               	addwf	(??_sprintf+2)& (0+255),f,b
  4009  010532  0100               	movlb	0	; () banked
  4010  010534  5181               	movf	(??_sprintf+1)& (0+255),w,b
  4011  010536  0100               	movlb	0	; () banked
  4012  010538  2383               	addwfc	(??_sprintf+3)& (0+255),f,b
  4013  01053A  0100               	movlb	0	; () banked
  4014  01053C  5182               	movf	(??_sprintf+2)& (0+255),w,b
  4015  01053E  0100               	movlb	0	; () banked
  4016  010540  278F               	addwf	sprintf@width& (0+255),f,b
  4017  010542  0100               	movlb	0	; () banked
  4018  010544  5183               	movf	(??_sprintf+3)& (0+255),w,b
  4019  010546  0100               	movlb	0	; () banked
  4020  010548  2390               	addwfc	(sprintf@width+1)& (0+255),f,b
  4021                           
  4022                           ; BSR set to: 0
  4023  01054A  0100               	movlb	0	; () banked
  4024  01054C  4B70               	infsnz	sprintf@f& (0+255),f,b
  4025  01054E  2B71               	incf	(sprintf@f+1)& (0+255),f,b
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4029  010550  C070  FFF6         	movff	sprintf@f,tblptrl
  4030  010554  C071  FFF7         	movff	sprintf@f+1,tblptrh
  4031  010558                     	if	0	;tblptru may be non-zero
  4032  010558                     	endif
  4033  010558                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4034  010558  0E00               	movlw	low (__mediumconst shr (0+16))
  4035  01055A  6EF8               	movwf	tblptru,c
  4036  01055C                     	endif
  4037  01055C  0008               	tblrd		*
  4038  01055E  50F5               	movf	tablat,w,c
  4039  010560  ECE3  F096         	call	_isdigit
  4040  010564  A0D8               	btfss	status,0,c
  4041  010566  D087               	goto	l5401
  4042  010568  D7C1               	goto	l5357
  4043  01056A                     l5365:
  4044                           
  4045                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4046  01056A  C085  FFD9         	movff	sprintf@ap,fsr2l
  4047  01056E  C086  FFDA         	movff	sprintf@ap+1,fsr2h
  4048  010572  CFDE F087          	movff	postinc2,sprintf@cp
  4049  010576  CFDD F088          	movff	postdec2,sprintf@cp+1
  4050  01057A  0E02               	movlw	2
  4051  01057C  0100               	movlb	0	; () banked
  4052  01057E  2785               	addwf	sprintf@ap& (0+255),f,b
  4053  010580  0E00               	movlw	0
  4054  010582  2386               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;doprnt.c: 740: if(!cp)
  4058  010584  0100               	movlb	0	; () banked
  4059  010586  5187               	movf	sprintf@cp& (0+255),w,b
  4060  010588  0100               	movlb	0	; () banked
  4061  01058A  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
  4062  01058C  A4D8               	btfss	status,2,c
  4063  01058E  D006               	goto	l5373
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;doprnt.c: 741: cp = "(null)";
  4067  010590  0E89               	movlw	low STR_62
  4068  010592  0100               	movlb	0	; () banked
  4069  010594  6F87               	movwf	sprintf@cp& (0+255),b
  4070  010596  0EFF               	movlw	high STR_62
  4071  010598  0100               	movlb	0	; () banked
  4072  01059A  6F88               	movwf	(sprintf@cp+1)& (0+255),b
  4073  01059C                     l5373:
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;doprnt.c: 745: len = 0;
  4077  01059C  0E00               	movlw	0
  4078  01059E  0100               	movlb	0	; () banked
  4079  0105A0  6F8C               	movwf	(sprintf@len+1)& (0+255),b
  4080  0105A2  0E00               	movlw	0
  4081  0105A4  6F8B               	movwf	sprintf@len& (0+255),b
  4082                           
  4083                           ;doprnt.c: 746: while(cp[len])
  4084  0105A6  D003               	goto	l5377
  4085  0105A8                     l5375:
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;doprnt.c: 747: len++;
  4089  0105A8  0100               	movlb	0	; () banked
  4090  0105AA  4B8B               	infsnz	sprintf@len& (0+255),f,b
  4091  0105AC  2B8C               	incf	(sprintf@len+1)& (0+255),f,b
  4092  0105AE                     l5377:
  4093                           
  4094                           ; BSR set to: 0
  4095  0105AE  0100               	movlb	0	; () banked
  4096  0105B0  518B               	movf	sprintf@len& (0+255),w,b
  4097  0105B2  0100               	movlb	0	; () banked
  4098  0105B4  2587               	addwf	sprintf@cp& (0+255),w,b
  4099  0105B6  0100               	movlb	0	; () banked
  4100  0105B8  6F80               	movwf	??_sprintf& (0+255),b
  4101  0105BA  0100               	movlb	0	; () banked
  4102  0105BC  518C               	movf	(sprintf@len+1)& (0+255),w,b
  4103  0105BE  0100               	movlb	0	; () banked
  4104  0105C0  2188               	addwfc	(sprintf@cp+1)& (0+255),w,b
  4105  0105C2  0100               	movlb	0	; () banked
  4106  0105C4  6F81               	movwf	(??_sprintf+1)& (0+255),b
  4107  0105C6  C080  FFF6         	movff	??_sprintf,tblptrl
  4108  0105CA  C081  FFF7         	movff	??_sprintf+1,tblptrh
  4109  0105CE                     	if	0	;tblptru may be non-zero
  4110  0105CE                     	endif
  4111  0105CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4112  0105CE  0E00               	movlw	low (__mediumconst shr (0+16))
  4113  0105D0  6EF8               	movwf	tblptru,c
  4114  0105D2                     	endif
  4115  0105D2  0008               	tblrd		*
  4116  0105D4  50F5               	movf	tablat,w,c
  4117  0105D6  0900               	iorlw	0
  4118  0105D8  A4D8               	btfss	status,2,c
  4119  0105DA  D7E6               	goto	l5375
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;doprnt.c: 757: if(width > len)
  4123                           
  4124                           ; BSR set to: 0
  4125  0105DC  0100               	movlb	0	; () banked
  4126  0105DE  518F               	movf	sprintf@width& (0+255),w,b
  4127  0105E0  0100               	movlb	0	; () banked
  4128  0105E2  5D8B               	subwf	sprintf@len& (0+255),w,b
  4129  0105E4  0100               	movlb	0	; () banked
  4130  0105E6  5190               	movf	(sprintf@width+1)& (0+255),w,b
  4131  0105E8  0100               	movlb	0	; () banked
  4132  0105EA  598C               	subwfb	(sprintf@len+1)& (0+255),w,b
  4133  0105EC  B0D8               	btfsc	status,0,c
  4134  0105EE  D009               	goto	l5383
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;doprnt.c: 758: width -= len;
  4138  0105F0  0100               	movlb	0	; () banked
  4139  0105F2  518B               	movf	sprintf@len& (0+255),w,b
  4140  0105F4  0100               	movlb	0	; () banked
  4141  0105F6  5F8F               	subwf	sprintf@width& (0+255),f,b
  4142  0105F8  0100               	movlb	0	; () banked
  4143  0105FA  518C               	movf	(sprintf@len+1)& (0+255),w,b
  4144  0105FC  0100               	movlb	0	; () banked
  4145  0105FE  5B90               	subwfb	(sprintf@width+1)& (0+255),f,b
  4146  010600  D00F               	goto	l5389
  4147  010602                     l5383:
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;doprnt.c: 759: else
  4151                           ;doprnt.c: 760: width = 0;
  4152  010602  0E00               	movlw	0
  4153  010604  0100               	movlb	0	; () banked
  4154  010606  6F90               	movwf	(sprintf@width+1)& (0+255),b
  4155  010608  0E00               	movlw	0
  4156  01060A  6F8F               	movwf	sprintf@width& (0+255),b
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;doprnt.c: 764: while(width--)
  4160  01060C  D009               	goto	l5389
  4161  01060E                     l5385:
  4162                           
  4163                           ; BSR set to: 0
  4164                           ;doprnt.c: 765: ((*sp++ = (' ')));
  4165  01060E  C06E  FFD9         	movff	sprintf@sp,fsr2l
  4166  010612  C06F  FFDA         	movff	sprintf@sp+1,fsr2h
  4167  010616  0E20               	movlw	32
  4168  010618  6EDF               	movwf	indf2,c
  4169                           
  4170                           ; BSR set to: 0
  4171  01061A  0100               	movlb	0	; () banked
  4172  01061C  4B6E               	infsnz	sprintf@sp& (0+255),f,b
  4173  01061E  2B6F               	incf	(sprintf@sp+1)& (0+255),f,b
  4174  010620                     l5389:
  4175                           
  4176                           ; BSR set to: 0
  4177  010620  0100               	movlb	0	; () banked
  4178  010622  078F               	decf	sprintf@width& (0+255),f,b
  4179  010624  A0D8               	btfss	status,0,c
  4180  010626  0790               	decf	(sprintf@width+1)& (0+255),f,b
  4181  010628  0100               	movlb	0	; () banked
  4182  01062A  298F               	incf	sprintf@width& (0+255),w,b
  4183  01062C  E1F0               	bnz	l5385
  4184  01062E  0100               	movlb	0	; () banked
  4185  010630  2990               	incf	(sprintf@width+1)& (0+255),w,b
  4186  010632  B4D8               	btfsc	status,2,c
  4187  010634  D014               	goto	l5397
  4188  010636  D7EB               	goto	l5385
  4189  010638                     l5391:
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  4193  010638  C087  FFF6         	movff	sprintf@cp,tblptrl
  4194  01063C  C088  FFF7         	movff	sprintf@cp+1,tblptrh
  4195  010640                     	if	0	;tblptru may be non-zero
  4196  010640                     	endif
  4197  010640                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4198  010640  0E00               	movlw	low (__mediumconst shr (0+16))
  4199  010642  6EF8               	movwf	tblptru,c
  4200  010644                     	endif
  4201  010644  C06E  FFD9         	movff	sprintf@sp,fsr2l
  4202  010648  C06F  FFDA         	movff	sprintf@sp+1,fsr2h
  4203  01064C  0008               	tblrd		*
  4204  01064E  CFF5 FFDF          	movff	tablat,indf2
  4205                           
  4206                           ; BSR set to: 0
  4207  010652  0100               	movlb	0	; () banked
  4208  010654  4B87               	infsnz	sprintf@cp& (0+255),f,b
  4209  010656  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
  4210                           
  4211                           ; BSR set to: 0
  4212  010658  0100               	movlb	0	; () banked
  4213  01065A  4B6E               	infsnz	sprintf@sp& (0+255),f,b
  4214  01065C  2B6F               	incf	(sprintf@sp+1)& (0+255),f,b
  4215  01065E                     l5397:
  4216                           
  4217                           ; BSR set to: 0
  4218  01065E  0100               	movlb	0	; () banked
  4219  010660  078B               	decf	sprintf@len& (0+255),f,b
  4220  010662  A0D8               	btfss	status,0,c
  4221  010664  078C               	decf	(sprintf@len+1)& (0+255),f,b
  4222  010666  0100               	movlb	0	; () banked
  4223  010668  298B               	incf	sprintf@len& (0+255),w,b
  4224  01066A  E1E6               	bnz	l5391
  4225  01066C  0100               	movlb	0	; () banked
  4226  01066E  298C               	incf	(sprintf@len+1)& (0+255),w,b
  4227  010670  B4D8               	btfsc	status,2,c
  4228  010672  D111               	goto	l5479
  4229  010674  D7E1               	goto	l5391
  4230  010676                     l5401:
  4231  010676  C070  FFF6         	movff	sprintf@f,tblptrl
  4232  01067A  C071  FFF7         	movff	sprintf@f+1,tblptrh
  4233  01067E  0100               	movlb	0	; () banked
  4234  010680  4B70               	infsnz	sprintf@f& (0+255),f,b
  4235  010682  2B71               	incf	(sprintf@f+1)& (0+255),f,b
  4236  010684                     	if	0	;tblptru may be non-zero
  4237  010684                     	endif
  4238  010684                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4239  010684  0E00               	movlw	low (__mediumconst shr (0+16))
  4240  010686  6EF8               	movwf	tblptru,c
  4241  010688                     	endif
  4242  010688  0008               	tblrd		*
  4243  01068A  CFF5 F08E          	movff	tablat,sprintf@c
  4244  01068E  0100               	movlb	0	; () banked
  4245  010690  518E               	movf	sprintf@c& (0+255),w,b
  4246                           
  4247                           ; Switch size 1, requested type "space"
  4248                           ; Number of cases is 4, Range of values is 0 to 115
  4249                           ; switch strategies available:
  4250                           ; Name         Instructions Cycles
  4251                           ; simple_byte           13     7 (average)
  4252                           ;	Chosen strategy is simple_byte
  4253  010692  0A00               	xorlw	0	; case 0
  4254  010694  B4D8               	btfsc	status,2,c
  4255  010696  D10F               	goto	l5481
  4256  010698  0A64               	xorlw	100	; case 100
  4257  01069A  B4D8               	btfsc	status,2,c
  4258  01069C  D007               	goto	l5403
  4259  01069E  0A0D               	xorlw	13	; case 105
  4260  0106A0  B4D8               	btfsc	status,2,c
  4261  0106A2  D004               	goto	l5403
  4262  0106A4  0A1A               	xorlw	26	; case 115
  4263  0106A6  B4D8               	btfsc	status,2,c
  4264  0106A8  D760               	goto	l5365
  4265  0106AA  D0F5               	goto	l5479
  4266  0106AC                     l5403:
  4267                           
  4268                           ;doprnt.c: 1253: {
  4269                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4270  0106AC  C085  FFD9         	movff	sprintf@ap,fsr2l
  4271  0106B0  C086  FFDA         	movff	sprintf@ap+1,fsr2h
  4272  0106B4  CFDE F089          	movff	postinc2,sprintf@val
  4273  0106B8  CFDD F08A          	movff	postdec2,sprintf@val+1
  4274  0106BC  0E02               	movlw	2
  4275  0106BE  0100               	movlb	0	; () banked
  4276  0106C0  2785               	addwf	sprintf@ap& (0+255),f,b
  4277  0106C2  0E00               	movlw	0
  4278  0106C4  2386               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;doprnt.c: 1261: if((int)val < 0) {
  4282  0106C6  0100               	movlb	0	; () banked
  4283  0106C8  AF8A               	btfss	(sprintf@val+1)& (0+255),7,b
  4284  0106CA  D008               	goto	l5413
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;doprnt.c: 1262: flag |= 0x03;
  4288  0106CC  0E03               	movlw	3
  4289  0106CE  0100               	movlb	0	; () banked
  4290  0106D0  138D               	iorwf	sprintf@flag& (0+255),f,b
  4291                           
  4292                           ; BSR set to: 0
  4293                           ;doprnt.c: 1263: val = -val;
  4294  0106D2  0100               	movlb	0	; () banked
  4295  0106D4  6D89               	negf	sprintf@val& (0+255),b
  4296  0106D6  1F8A               	comf	(sprintf@val+1)& (0+255),f,b
  4297  0106D8  B0D8               	btfsc	status,0,c
  4298  0106DA  2B8A               	incf	(sprintf@val+1)& (0+255),f,b
  4299  0106DC                     l5413:
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;doprnt.c: 1264: }
  4303                           ;doprnt.c: 1266: }
  4304                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4305  0106DC  0E01               	movlw	1
  4306  0106DE  0100               	movlb	0	; () banked
  4307  0106E0  6F8E               	movwf	sprintf@c& (0+255),b
  4308  0106E2                     l5415:
  4309                           
  4310                           ; BSR set to: 0
  4311  0106E2  0E05               	movlw	5
  4312  0106E4  0100               	movlb	0	; () banked
  4313  0106E6  198E               	xorwf	sprintf@c& (0+255),w,b
  4314  0106E8  B4D8               	btfsc	status,2,c
  4315  0106EA  D019               	goto	l5427
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;doprnt.c: 1306: if(val < dpowers[c])
  4319                           
  4320                           ; BSR set to: 0
  4321                           
  4322                           ; BSR set to: 0
  4323  0106EC  0100               	movlb	0	; () banked
  4324  0106EE  518E               	movf	sprintf@c& (0+255),w,b
  4325  0106F0  0D02               	mullw	2
  4326  0106F2  0EC3               	movlw	low _dpowers
  4327  0106F4  24F3               	addwf	prodl,w,c
  4328  0106F6  6EF6               	movwf	tblptrl,c
  4329  0106F8  0EFD               	movlw	high _dpowers
  4330  0106FA  20F4               	addwfc	prodh,w,c
  4331  0106FC  6EF7               	movwf	tblptrh,c
  4332  0106FE                     	if	1	;There are 3 active tblptr bytes
  4333  0106FE  6AF8               	clrf	tblptru,c
  4334  010700  0E00               	movlw	low (__mediumconst shr (0+16))
  4335  010702  22F8               	addwfc	tblptru,f,c
  4336  010704                     	endif
  4337  010704  0009               	tblrd		*+
  4338  010706  50F5               	movf	tablat,w,c
  4339  010708  0100               	movlb	0	; () banked
  4340  01070A  5D89               	subwf	sprintf@val& (0+255),w,b
  4341  01070C  0009               	tblrd		*+
  4342  01070E  50F5               	movf	tablat,w,c
  4343  010710  0100               	movlb	0	; () banked
  4344  010712  598A               	subwfb	(sprintf@val+1)& (0+255),w,b
  4345  010714  A0D8               	btfss	status,0,c
  4346  010716  D003               	goto	l5427
  4347                           
  4348                           ; BSR set to: 0
  4349                           
  4350                           ; BSR set to: 0
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;doprnt.c: 1307: break;
  4354  010718  0100               	movlb	0	; () banked
  4355  01071A  2B8E               	incf	sprintf@c& (0+255),f,b
  4356  01071C  D7E2               	goto	l5415
  4357  01071E                     l5427:
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;doprnt.c: 1345: if(width && flag & 0x03)
  4361  01071E  0100               	movlb	0	; () banked
  4362  010720  518F               	movf	sprintf@width& (0+255),w,b
  4363  010722  0100               	movlb	0	; () banked
  4364  010724  1190               	iorwf	(sprintf@width+1)& (0+255),w,b
  4365  010726  B4D8               	btfsc	status,2,c
  4366  010728  D00B               	goto	l5433
  4367                           
  4368                           ; BSR set to: 0
  4369  01072A  C08D  F080         	movff	sprintf@flag,??_sprintf
  4370  01072E  0E03               	movlw	3
  4371  010730  0100               	movlb	0	; () banked
  4372  010732  1780               	andwf	??_sprintf& (0+255),f,b
  4373  010734  B4D8               	btfsc	status,2,c
  4374  010736  D004               	goto	l5433
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;doprnt.c: 1346: width--;
  4378  010738  0100               	movlb	0	; () banked
  4379  01073A  078F               	decf	sprintf@width& (0+255),f,b
  4380  01073C  A0D8               	btfss	status,0,c
  4381  01073E  0790               	decf	(sprintf@width+1)& (0+255),f,b
  4382  010740                     l5433:
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;doprnt.c: 1381: if(width > c)
  4386  010740  0E80               	movlw	128
  4387  010742  0100               	movlb	0	; () banked
  4388  010744  BF8E               	btfsc	sprintf@c& (0+255),7,b
  4389  010746  0E7F               	movlw	127
  4390  010748  0100               	movlb	0	; () banked
  4391  01074A  6F80               	movwf	??_sprintf& (0+255),b
  4392  01074C  0100               	movlb	0	; () banked
  4393  01074E  518F               	movf	sprintf@width& (0+255),w,b
  4394  010750  0100               	movlb	0	; () banked
  4395  010752  5D8E               	subwf	sprintf@c& (0+255),w,b
  4396  010754  0100               	movlb	0	; () banked
  4397  010756  5190               	movf	(sprintf@width+1)& (0+255),w,b
  4398  010758  0A80               	xorlw	128
  4399  01075A  0100               	movlb	0	; () banked
  4400  01075C  5980               	subwfb	??_sprintf& (0+255),w,b
  4401  01075E  B0D8               	btfsc	status,0,c
  4402  010760  D00B               	goto	l5437
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;doprnt.c: 1382: width -= c;
  4406  010762  0100               	movlb	0	; () banked
  4407  010764  518E               	movf	sprintf@c& (0+255),w,b
  4408  010766  0100               	movlb	0	; () banked
  4409  010768  5F8F               	subwf	sprintf@width& (0+255),f,b
  4410  01076A  0E00               	movlw	0
  4411  01076C  0100               	movlb	0	; () banked
  4412  01076E  BF8E               	btfsc	sprintf@c& (0+255),7,b
  4413  010770  0EFF               	movlw	255
  4414  010772  0100               	movlb	0	; () banked
  4415  010774  5B90               	subwfb	(sprintf@width+1)& (0+255),f,b
  4416  010776  D005               	goto	l5439
  4417  010778                     l5437:
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;doprnt.c: 1383: else
  4421                           ;doprnt.c: 1384: width = 0;
  4422  010778  0E00               	movlw	0
  4423  01077A  0100               	movlb	0	; () banked
  4424  01077C  6F90               	movwf	(sprintf@width+1)& (0+255),b
  4425  01077E  0E00               	movlw	0
  4426  010780  6F8F               	movwf	sprintf@width& (0+255),b
  4427  010782                     l5439:
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;doprnt.c: 1387: if(flag & 0x04) {
  4431  010782  0100               	movlb	0	; () banked
  4432  010784  A58D               	btfss	sprintf@flag& (0+255),2,b
  4433  010786  D024               	goto	l5455
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;doprnt.c: 1392: if(flag & 0x03)
  4437  010788  C08D  F080         	movff	sprintf@flag,??_sprintf
  4438  01078C  0E03               	movlw	3
  4439  01078E  0100               	movlb	0	; () banked
  4440  010790  1780               	andwf	??_sprintf& (0+255),f,b
  4441  010792  B4D8               	btfsc	status,2,c
  4442  010794  D009               	goto	l5447
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  4446  010796  C06E  FFD9         	movff	sprintf@sp,fsr2l
  4447  01079A  C06F  FFDA         	movff	sprintf@sp+1,fsr2h
  4448  01079E  0E2D               	movlw	45
  4449  0107A0  6EDF               	movwf	indf2,c
  4450                           
  4451                           ; BSR set to: 0
  4452  0107A2  0100               	movlb	0	; () banked
  4453  0107A4  4B6E               	infsnz	sprintf@sp& (0+255),f,b
  4454  0107A6  2B6F               	incf	(sprintf@sp+1)& (0+255),f,b
  4455  0107A8                     l5447:
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;doprnt.c: 1415: if(width)
  4459  0107A8  0100               	movlb	0	; () banked
  4460  0107AA  518F               	movf	sprintf@width& (0+255),w,b
  4461  0107AC  0100               	movlb	0	; () banked
  4462  0107AE  1190               	iorwf	(sprintf@width+1)& (0+255),w,b
  4463  0107B0  B4D8               	btfsc	status,2,c
  4464  0107B2  D037               	goto	l5469
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  4468                           
  4469                           ; BSR set to: 0
  4470                           
  4471                           ;doprnt.c: 1416: do
  4472  0107B4  C06E  FFD9         	movff	sprintf@sp,fsr2l
  4473  0107B8  C06F  FFDA         	movff	sprintf@sp+1,fsr2h
  4474  0107BC  0E30               	movlw	48
  4475  0107BE  6EDF               	movwf	indf2,c
  4476                           
  4477                           ; BSR set to: 0
  4478  0107C0  0100               	movlb	0	; () banked
  4479  0107C2  4B6E               	infsnz	sprintf@sp& (0+255),f,b
  4480  0107C4  2B6F               	incf	(sprintf@sp+1)& (0+255),f,b
  4481                           
  4482                           ; BSR set to: 0
  4483                           ;doprnt.c: 1418: while(--width);
  4484  0107C6  0100               	movlb	0	; () banked
  4485  0107C8  078F               	decf	sprintf@width& (0+255),f,b
  4486  0107CA  A0D8               	btfss	status,0,c
  4487  0107CC  0790               	decf	(sprintf@width+1)& (0+255),f,b
  4488  0107CE  D7EC               	goto	l5447
  4489  0107D0                     l5455:
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;doprnt.c: 1422: {
  4493                           ;doprnt.c: 1424: if(width
  4494                           ;doprnt.c: 1428: )
  4495  0107D0  0100               	movlb	0	; () banked
  4496  0107D2  518F               	movf	sprintf@width& (0+255),w,b
  4497  0107D4  0100               	movlb	0	; () banked
  4498  0107D6  1190               	iorwf	(sprintf@width+1)& (0+255),w,b
  4499  0107D8  B4D8               	btfsc	status,2,c
  4500  0107DA  D013               	goto	l5463
  4501  0107DC                     l5457:
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  4505  0107DC  C06E  FFD9         	movff	sprintf@sp,fsr2l
  4506  0107E0  C06F  FFDA         	movff	sprintf@sp+1,fsr2h
  4507  0107E4  0E20               	movlw	32
  4508  0107E6  6EDF               	movwf	indf2,c
  4509                           
  4510                           ; BSR set to: 0
  4511  0107E8  0100               	movlb	0	; () banked
  4512  0107EA  4B6E               	infsnz	sprintf@sp& (0+255),f,b
  4513  0107EC  2B6F               	incf	(sprintf@sp+1)& (0+255),f,b
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;doprnt.c: 1431: while(--width);
  4517  0107EE  0100               	movlb	0	; () banked
  4518  0107F0  078F               	decf	sprintf@width& (0+255),f,b
  4519  0107F2  A0D8               	btfss	status,0,c
  4520  0107F4  0790               	decf	(sprintf@width+1)& (0+255),f,b
  4521  0107F6  0100               	movlb	0	; () banked
  4522  0107F8  518F               	movf	sprintf@width& (0+255),w,b
  4523  0107FA  0100               	movlb	0	; () banked
  4524  0107FC  1190               	iorwf	(sprintf@width+1)& (0+255),w,b
  4525  0107FE  A4D8               	btfss	status,2,c
  4526  010800  D7ED               	goto	l5457
  4527  010802                     l5463:
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;doprnt.c: 1438: if(flag & 0x03)
  4531  010802  C08D  F080         	movff	sprintf@flag,??_sprintf
  4532  010806  0E03               	movlw	3
  4533  010808  0100               	movlb	0	; () banked
  4534  01080A  1780               	andwf	??_sprintf& (0+255),f,b
  4535  01080C  B4D8               	btfsc	status,2,c
  4536  01080E  D009               	goto	l5469
  4537                           
  4538                           ; BSR set to: 0
  4539                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4540  010810  C06E  FFD9         	movff	sprintf@sp,fsr2l
  4541  010814  C06F  FFDA         	movff	sprintf@sp+1,fsr2h
  4542  010818  0E2D               	movlw	45
  4543  01081A  6EDF               	movwf	indf2,c
  4544                           
  4545                           ; BSR set to: 0
  4546  01081C  0100               	movlb	0	; () banked
  4547  01081E  4B6E               	infsnz	sprintf@sp& (0+255),f,b
  4548  010820  2B6F               	incf	(sprintf@sp+1)& (0+255),f,b
  4549  010822                     l5469:
  4550                           
  4551                           ; BSR set to: 0
  4552                           ;doprnt.c: 1469: }
  4553                           ;doprnt.c: 1472: prec = c;
  4554  010822  C08E  F084         	movff	sprintf@c,sprintf@prec
  4555                           
  4556                           ;doprnt.c: 1474: while(prec--) {
  4557  010826  D031               	goto	l5477
  4558  010828                     l5471:
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;doprnt.c: 1478: {
  4562                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4563  010828  0100               	movlb	0	; () banked
  4564  01082A  5184               	movf	sprintf@prec& (0+255),w,b
  4565  01082C  0D02               	mullw	2
  4566  01082E  0EC3               	movlw	low _dpowers
  4567  010830  24F3               	addwf	prodl,w,c
  4568  010832  6EF6               	movwf	tblptrl,c
  4569  010834  0EFD               	movlw	high _dpowers
  4570  010836  20F4               	addwfc	prodh,w,c
  4571  010838  6EF7               	movwf	tblptrh,c
  4572  01083A                     	if	1	;There are 3 active tblptr bytes
  4573  01083A  6AF8               	clrf	tblptru,c
  4574  01083C  0E00               	movlw	low (__mediumconst shr (0+16))
  4575  01083E  22F8               	addwfc	tblptru,f,c
  4576  010840                     	endif
  4577  010840  0009               	tblrd		*+
  4578  010842  CFF5 F064          	movff	tablat,___lwdiv@divisor
  4579  010846  000A               	tblrd		*-
  4580  010848  CFF5 F065          	movff	tablat,___lwdiv@divisor+1
  4581  01084C  C089  F062         	movff	sprintf@val,___lwdiv@dividend
  4582  010850  C08A  F063         	movff	sprintf@val+1,___lwdiv@dividend+1
  4583  010854  EC60  F094         	call	___lwdiv	;wreg free
  4584  010858  C062  F069         	movff	?___lwdiv,___lwmod@dividend
  4585  01085C  C063  F06A         	movff	?___lwdiv+1,___lwmod@dividend+1
  4586  010860  0E00               	movlw	0
  4587  010862  0100               	movlb	0	; () banked
  4588  010864  6F6C               	movwf	(___lwmod@divisor+1)& (0+255),b
  4589  010866  0E0A               	movlw	10
  4590  010868  6F6B               	movwf	___lwmod@divisor& (0+255),b
  4591  01086A  EC3A  F095         	call	___lwmod	;wreg free
  4592  01086E  0100               	movlb	0	; () banked
  4593  010870  5169               	movf	?___lwmod& (0+255),w,b
  4594  010872  0F30               	addlw	48
  4595  010874  0100               	movlb	0	; () banked
  4596  010876  6F8E               	movwf	sprintf@c& (0+255),b
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;doprnt.c: 1523: }
  4600                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4601  010878  C06E  FFD9         	movff	sprintf@sp,fsr2l
  4602  01087C  C06F  FFDA         	movff	sprintf@sp+1,fsr2h
  4603  010880  C08E  FFDF         	movff	sprintf@c,indf2
  4604                           
  4605                           ; BSR set to: 0
  4606  010884  0100               	movlb	0	; () banked
  4607  010886  4B6E               	infsnz	sprintf@sp& (0+255),f,b
  4608  010888  2B6F               	incf	(sprintf@sp+1)& (0+255),f,b
  4609  01088A                     l5477:
  4610                           
  4611                           ; BSR set to: 0
  4612  01088A  0100               	movlb	0	; () banked
  4613  01088C  0784               	decf	sprintf@prec& (0+255),f,b
  4614  01088E  0100               	movlb	0	; () banked
  4615  010890  2984               	incf	sprintf@prec& (0+255),w,b
  4616  010892  A4D8               	btfss	status,2,c
  4617  010894  D7C9               	goto	l5471
  4618  010896                     l5479:
  4619                           
  4620                           ; BSR set to: 0
  4621  010896  C070  FFF6         	movff	sprintf@f,tblptrl
  4622  01089A  C071  FFF7         	movff	sprintf@f+1,tblptrh
  4623  01089E  0100               	movlb	0	; () banked
  4624  0108A0  4B70               	infsnz	sprintf@f& (0+255),f,b
  4625  0108A2  2B71               	incf	(sprintf@f+1)& (0+255),f,b
  4626  0108A4                     	if	0	;tblptru may be non-zero
  4627  0108A4                     	endif
  4628  0108A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4629  0108A4  0E00               	movlw	low (__mediumconst shr (0+16))
  4630  0108A6  6EF8               	movwf	tblptru,c
  4631  0108A8                     	endif
  4632  0108A8  0008               	tblrd		*
  4633  0108AA  CFF5 F08E          	movff	tablat,sprintf@c
  4634  0108AE  0100               	movlb	0	; () banked
  4635  0108B0  518E               	movf	sprintf@c& (0+255),w,b
  4636  0108B2  A4D8               	btfss	status,2,c
  4637  0108B4  D5E2               	goto	l5339
  4638  0108B6                     l5481:
  4639                           
  4640                           ;doprnt.c: 1538: *sp = 0;
  4641  0108B6  C06E  FFD9         	movff	sprintf@sp,fsr2l
  4642  0108BA  C06F  FFDA         	movff	sprintf@sp+1,fsr2h
  4643  0108BE  0E00               	movlw	0
  4644  0108C0  6EDF               	movwf	indf2,c
  4645  0108C2  0012               	return	
  4646  0108C4                     __end_of_sprintf:
  4647                           	opt stack 0
  4648                           tblptru	equ	0xFF8
  4649                           tblptrh	equ	0xFF7
  4650                           tblptrl	equ	0xFF6
  4651                           tablat	equ	0xFF5
  4652                           prodh	equ	0xFF4
  4653                           prodl	equ	0xFF3
  4654                           intcon	equ	0xFF2
  4655                           postinc0	equ	0xFEE
  4656                           wreg	equ	0xFE8
  4657                           postdec1	equ	0xFE5
  4658                           fsr1h	equ	0xFE2
  4659                           fsr1l	equ	0xFE1
  4660                           indf2	equ	0xFDF
  4661                           postinc2	equ	0xFDE
  4662                           postdec2	equ	0xFDD
  4663                           fsr2h	equ	0xFDA
  4664                           fsr2l	equ	0xFD9
  4665                           status	equ	0xFD8
  4666                           
  4667 ;; *************** function _ringbuf_put_str *****************
  4668 ;; Defined at:
  4669 ;;		line 39 in file "../My_library/My_ringbuf.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;  rb              2   13[BANK0 ] PTR struct ringbuf
  4672 ;;		 -> tx_buf(8), 
  4673 ;;  str             2   15[BANK0 ] PTR const unsigned char 
  4674 ;;		 -> terminal_operation@str(30), STR_24(8), print_time@str(30), STR_22(3), 
  4675 ;;		 -> print_time_dec@str(10), STR_20(4), STR_19(4), 
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;		None
  4678 ;; Return value:  Size  Location     Type
  4679 ;;		None               void
  4680 ;; Registers used:
  4681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4687 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4690 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4691 ;;Total ram usage:        4 bytes
  4692 ;; Hardware stack levels used:    1
  4693 ;; Hardware stack levels required when called:    6
  4694 ;; This function calls:
  4695 ;;		_ringbuf_put
  4696 ;; This function is called by:
  4697 ;;		_terminal_loop
  4698 ;;		_print_time
  4699 ;;		_terminal_at_hand
  4700 ;;		_terminal_operation
  4701 ;;		_print_time_dec
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           	psect	text8
  4706  0129AE                     __ptext8:
  4707                           	opt stack 0
  4708  0129AE                     _ringbuf_put_str:
  4709                           	opt stack 20
  4710                           
  4711                           ;My_ringbuf.c: 40: while (*str) {
  4712                           
  4713                           ;incstack = 0
  4714  0129AE  D01C               	goto	l5251
  4715  0129B0                     l5247:
  4716                           
  4717                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
  4718  0129B0  C06D  F066         	movff	ringbuf_put_str@rb,ringbuf_put@rb
  4719  0129B4  C06E  F067         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
  4720  0129B8  C06F  FFF6         	movff	ringbuf_put_str@str,tblptrl
  4721  0129BC  C070  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  4722  0129C0  0E00               	movlw	low (__mediumconst shr (0+16))
  4723  0129C2  6EF8               	movwf	tblptru,c
  4724  0129C4  0E0E               	movlw	(high __ramtop+-1)
  4725  0129C6  64F7               	cpfsgt	tblptrh,c
  4726  0129C8  D003               	bra	u5237
  4727  0129CA  0008               	tblrd		*
  4728  0129CC  50F5               	movf	tablat,w,c
  4729  0129CE  D005               	bra	u5230
  4730  0129D0                     u5237:
  4731  0129D0  CFF6 FFE9          	movff	tblptrl,fsr0l
  4732  0129D4  CFF7 FFEA          	movff	tblptrh,fsr0h
  4733  0129D8  50EF               	movf	indf0,w,c
  4734  0129DA                     u5230:
  4735  0129DA  0100               	movlb	0	; () banked
  4736  0129DC  6F68               	movwf	ringbuf_put@asciicode& (0+255),b
  4737  0129DE  ECA0  F08E         	call	_ringbuf_put	;wreg free
  4738  0129E2  0100               	movlb	0	; () banked
  4739  0129E4  4B6F               	infsnz	ringbuf_put_str@str& (0+255),f,b
  4740  0129E6  2B70               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
  4741  0129E8                     l5251:
  4742  0129E8  C06F  FFF6         	movff	ringbuf_put_str@str,tblptrl
  4743  0129EC  C070  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  4744  0129F0  0E00               	movlw	low (__mediumconst shr (0+16))
  4745  0129F2  6EF8               	movwf	tblptru,c
  4746  0129F4  0E0E               	movlw	(high __ramtop+-1)
  4747  0129F6  64F7               	cpfsgt	tblptrh,c
  4748  0129F8  D003               	bra	u5247
  4749  0129FA  0008               	tblrd		*
  4750  0129FC  50F5               	movf	tablat,w,c
  4751  0129FE  D005               	bra	u5240
  4752  012A00                     u5247:
  4753  012A00  CFF6 FFE9          	movff	tblptrl,fsr0l
  4754  012A04  CFF7 FFEA          	movff	tblptrh,fsr0h
  4755  012A08  50EF               	movf	indf0,w,c
  4756  012A0A                     u5240:
  4757  012A0A  0900               	iorlw	0
  4758  012A0C  B4D8               	btfsc	status,2,c
  4759  012A0E  0012               	return	
  4760  012A10  D7CF               	goto	l5247
  4761  012A12                     __end_of_ringbuf_put_str:
  4762                           	opt stack 0
  4763                           tblptru	equ	0xFF8
  4764                           tblptrh	equ	0xFF7
  4765                           tblptrl	equ	0xFF6
  4766                           tablat	equ	0xFF5
  4767                           prodh	equ	0xFF4
  4768                           prodl	equ	0xFF3
  4769                           intcon	equ	0xFF2
  4770                           indf0	equ	0xFEF
  4771                           postinc0	equ	0xFEE
  4772                           fsr0h	equ	0xFEA
  4773                           fsr0l	equ	0xFE9
  4774                           wreg	equ	0xFE8
  4775                           postdec1	equ	0xFE5
  4776                           fsr1h	equ	0xFE2
  4777                           fsr1l	equ	0xFE1
  4778                           indf2	equ	0xFDF
  4779                           postinc2	equ	0xFDE
  4780                           postdec2	equ	0xFDD
  4781                           fsr2h	equ	0xFDA
  4782                           fsr2l	equ	0xFD9
  4783                           status	equ	0xFD8
  4784                           
  4785 ;; *************** function _RTCC_from_caltime *****************
  4786 ;; Defined at:
  4787 ;;		line 198 in file "../My_library/My_RTCC.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;  tm              2   55[BANK0 ] PTR struct .
  4790 ;;		 -> now(14), 
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;		None
  4793 ;; Return value:  Size  Location     Type
  4794 ;;		None               void
  4795 ;; Registers used:
  4796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4802 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4805 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4806 ;;Total ram usage:        2 bytes
  4807 ;; Hardware stack levels used:    1
  4808 ;; Hardware stack levels required when called:    7
  4809 ;; This function calls:
  4810 ;;		_caltime_to_RTCC
  4811 ;;		_caltime_to_epoch
  4812 ;;		_epoch_to_caltime
  4813 ;; This function is called by:
  4814 ;;		_terminal_at_hand
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           	psect	text9
  4819  012D38                     __ptext9:
  4820                           	opt stack 0
  4821  012D38                     _RTCC_from_caltime:
  4822                           	opt stack 19
  4823                           
  4824                           ;My_RTCC.c: 199: caltime_to_epoch(tm);
  4825                           
  4826                           ;incstack = 0
  4827  012D38  C097  F074         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  4828  012D3C  C098  F075         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  4829  012D40  EC96  F087         	call	_caltime_to_epoch	;wreg free
  4830                           
  4831                           ;My_RTCC.c: 200: epoch_to_caltime(tm);
  4832  012D44  C097  F089         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  4833  012D48  C098  F08A         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  4834  012D4C  EC26  F08B         	call	_epoch_to_caltime	;wreg free
  4835                           
  4836                           ;My_RTCC.c: 201: caltime_to_RTCC(tm);
  4837  012D50  C097  F072         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  4838  012D54  C098  F073         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  4839  012D58  ECCB  F08D         	call	_caltime_to_RTCC	;wreg free
  4840  012D5C  0012               	return		;funcret
  4841  012D5E                     __end_of_RTCC_from_caltime:
  4842                           	opt stack 0
  4843                           tblptru	equ	0xFF8
  4844                           tblptrh	equ	0xFF7
  4845                           tblptrl	equ	0xFF6
  4846                           tablat	equ	0xFF5
  4847                           prodh	equ	0xFF4
  4848                           prodl	equ	0xFF3
  4849                           intcon	equ	0xFF2
  4850                           indf0	equ	0xFEF
  4851                           postinc0	equ	0xFEE
  4852                           fsr0h	equ	0xFEA
  4853                           fsr0l	equ	0xFE9
  4854                           wreg	equ	0xFE8
  4855                           postdec1	equ	0xFE5
  4856                           fsr1h	equ	0xFE2
  4857                           fsr1l	equ	0xFE1
  4858                           indf2	equ	0xFDF
  4859                           postinc2	equ	0xFDE
  4860                           postdec2	equ	0xFDD
  4861                           fsr2h	equ	0xFDA
  4862                           fsr2l	equ	0xFD9
  4863                           status	equ	0xFD8
  4864                           
  4865 ;; *************** function _strcmp *****************
  4866 ;; Defined at:
  4867 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;  s1              2   31[COMRAM] PTR const unsigned char 
  4870 ;;		 -> terminal_loop@op1(25), terminal_loop@op0(25), 
  4871 ;;  s2              2   33[COMRAM] PTR const unsigned char 
  4872 ;;		 -> STR_61(6), STR_60(2), STR_59(2), STR_58(2), 
  4873 ;;		 -> STR_57(2), STR_56(2), STR_55(2), STR_54(2), 
  4874 ;;		 -> STR_53(2), STR_52(4), STR_51(4), STR_50(4), 
  4875 ;;		 -> STR_49(4), STR_48(5), STR_47(4), STR_45(3), 
  4876 ;;		 -> STR_44(9), STR_42(2), STR_41(5), STR_40(7), 
  4877 ;;		 -> STR_39(2), STR_38(7), STR_37(2), STR_36(5), 
  4878 ;;		 -> STR_35(2), STR_34(4), STR_33(2), STR_32(6), 
  4879 ;;		 -> STR_31(2), STR_30(5), STR_29(2), STR_28(12), 
  4880 ;;		 -> STR_27(3), STR_26(2), STR_25(11), 
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;  r               1    1[BANK0 ] char 
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  2   31[COMRAM] int 
  4885 ;; Registers used:
  4886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4892 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4893 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4894 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4895 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4896 ;;Total ram usage:        6 bytes
  4897 ;; Hardware stack levels used:    1
  4898 ;; Hardware stack levels required when called:    4
  4899 ;; This function calls:
  4900 ;;		Nothing
  4901 ;; This function is called by:
  4902 ;;		_terminal_time
  4903 ;;		_terminal_operation
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           	psect	text10
  4908  012AD6                     __ptext10:
  4909                           	opt stack 0
  4910  012AD6                     _strcmp:
  4911                           	opt stack 23
  4912                           
  4913                           ;incstack = 0
  4914  012AD6  D004               	goto	l5513
  4915  012AD8                     l5511:
  4916  012AD8  4A20               	infsnz	strcmp@s1,f,c
  4917  012ADA  2A21               	incf	strcmp@s1+1,f,c
  4918  012ADC  4A22               	infsnz	strcmp@s2,f,c
  4919  012ADE  2A23               	incf	strcmp@s2+1,f,c
  4920  012AE0                     l5513:
  4921  012AE0  C020  FFD9         	movff	strcmp@s1,fsr2l
  4922  012AE4  C021  FFDA         	movff	strcmp@s1+1,fsr2h
  4923  012AE8  50DF               	movf	indf2,w,c
  4924  012AEA  0100               	movlb	0	; () banked
  4925  012AEC  6F60               	movwf	??_strcmp& (0+255),b
  4926  012AEE  C022  FFF6         	movff	strcmp@s2,tblptrl
  4927  012AF2  C023  FFF7         	movff	strcmp@s2+1,tblptrh
  4928  012AF6                     	if	0	;tblptru may be non-zero
  4929  012AF6                     	endif
  4930  012AF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4931  012AF6  0E00               	movlw	low (__mediumconst shr (0+16))
  4932  012AF8  6EF8               	movwf	tblptru,c
  4933  012AFA                     	endif
  4934  012AFA  0008               	tblrd		*
  4935  012AFC  50F5               	movf	tablat,w,c
  4936  012AFE  0800               	sublw	0
  4937  012B00  0100               	movlb	0	; () banked
  4938  012B02  2560               	addwf	??_strcmp& (0+255),w,b
  4939  012B04  0100               	movlb	0	; () banked
  4940  012B06  6F61               	movwf	strcmp@r& (0+255),b
  4941  012B08  0100               	movlb	0	; () banked
  4942  012B0A  5161               	movf	strcmp@r& (0+255),w,b
  4943  012B0C  A4D8               	btfss	status,2,c
  4944  012B0E  D007               	goto	l5517
  4945                           
  4946                           ; BSR set to: 0
  4947  012B10  C020  FFD9         	movff	strcmp@s1,fsr2l
  4948  012B14  C021  FFDA         	movff	strcmp@s1+1,fsr2h
  4949  012B18  50DF               	movf	indf2,w,c
  4950  012B1A  A4D8               	btfss	status,2,c
  4951  012B1C  D7DD               	goto	l5511
  4952  012B1E                     l5517:
  4953                           
  4954                           ; BSR set to: 0
  4955  012B1E  0100               	movlb	0	; () banked
  4956  012B20  5161               	movf	strcmp@r& (0+255),w,b
  4957  012B22  6E20               	movwf	?_strcmp,c
  4958  012B24  6A21               	clrf	?_strcmp+1,c
  4959  012B26  BE20               	btfsc	?_strcmp,7,c
  4960  012B28  0621               	decf	?_strcmp+1,f,c
  4961  012B2A  0012               	return	
  4962  012B2C                     __end_of_strcmp:
  4963                           	opt stack 0
  4964                           tblptru	equ	0xFF8
  4965                           tblptrh	equ	0xFF7
  4966                           tblptrl	equ	0xFF6
  4967                           tablat	equ	0xFF5
  4968                           prodh	equ	0xFF4
  4969                           prodl	equ	0xFF3
  4970                           intcon	equ	0xFF2
  4971                           indf0	equ	0xFEF
  4972                           postinc0	equ	0xFEE
  4973                           fsr0h	equ	0xFEA
  4974                           fsr0l	equ	0xFE9
  4975                           wreg	equ	0xFE8
  4976                           postdec1	equ	0xFE5
  4977                           fsr1h	equ	0xFE2
  4978                           fsr1l	equ	0xFE1
  4979                           indf2	equ	0xFDF
  4980                           postinc2	equ	0xFDE
  4981                           postdec2	equ	0xFDD
  4982                           fsr2h	equ	0xFDA
  4983                           fsr2l	equ	0xFD9
  4984                           status	equ	0xFD8
  4985                           
  4986 ;; *************** function _atoi *****************
  4987 ;; Defined at:
  4988 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  4989 ;; Parameters:    Size  Location     Type
  4990 ;;  s               2    2[BANK0 ] PTR const unsigned char 
  4991 ;;		 -> terminal_loop@op2(25), 
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;  a               2    7[BANK0 ] int 
  4994 ;;  sign            1    6[BANK0 ] unsigned char 
  4995 ;; Return value:  Size  Location     Type
  4996 ;;                  2    2[BANK0 ] int 
  4997 ;; Registers used:
  4998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4999 ;; Tracked objects:
  5000 ;;		On entry : 0/0
  5001 ;;		On exit  : 0/0
  5002 ;;		Unchanged: 0/0
  5003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5004 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5005 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5006 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5007 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5008 ;;Total ram usage:        7 bytes
  5009 ;; Hardware stack levels used:    1
  5010 ;; Hardware stack levels required when called:    5
  5011 ;; This function calls:
  5012 ;;		___wmul
  5013 ;;		_isdigit
  5014 ;; This function is called by:
  5015 ;;		_terminal_time
  5016 ;;		_terminal_operation
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           	psect	text11
  5021  0119D2                     __ptext11:
  5022                           	opt stack 0
  5023  0119D2                     _atoi:
  5024                           	opt stack 22
  5025                           
  5026                           ; BSR set to: 0
  5027                           ;incstack = 0
  5028  0119D2  D003               	goto	l5525
  5029  0119D4                     l5523:
  5030  0119D4  0100               	movlb	0	; () banked
  5031  0119D6  4B62               	infsnz	atoi@s& (0+255),f,b
  5032  0119D8  2B63               	incf	(atoi@s+1)& (0+255),f,b
  5033  0119DA                     l5525:
  5034  0119DA  C062  FFD9         	movff	atoi@s,fsr2l
  5035  0119DE  C063  FFDA         	movff	atoi@s+1,fsr2h
  5036  0119E2  0E20               	movlw	32
  5037  0119E4  18DE               	xorwf	postinc2,w,c
  5038  0119E6  B4D8               	btfsc	status,2,c
  5039  0119E8  D7F5               	goto	l5523
  5040  0119EA  C062  FFD9         	movff	atoi@s,fsr2l
  5041  0119EE  C063  FFDA         	movff	atoi@s+1,fsr2h
  5042  0119F2  0E09               	movlw	9
  5043  0119F4  18DE               	xorwf	postinc2,w,c
  5044  0119F6  B4D8               	btfsc	status,2,c
  5045  0119F8  D7ED               	goto	l5523
  5046  0119FA  0E00               	movlw	0
  5047  0119FC  0100               	movlb	0	; () banked
  5048  0119FE  6F68               	movwf	(atoi@a+1)& (0+255),b
  5049  011A00  0E00               	movlw	0
  5050  011A02  6F67               	movwf	atoi@a& (0+255),b
  5051  011A04  0E00               	movlw	0
  5052  011A06  0100               	movlb	0	; () banked
  5053  011A08  6F66               	movwf	atoi@sign& (0+255),b
  5054                           
  5055                           ; BSR set to: 0
  5056  011A0A  C062  FFD9         	movff	atoi@s,fsr2l
  5057  011A0E  C063  FFDA         	movff	atoi@s+1,fsr2h
  5058  011A12  0E2D               	movlw	45
  5059  011A14  18DE               	xorwf	postinc2,w,c
  5060  011A16  A4D8               	btfss	status,2,c
  5061  011A18  D003               	goto	l5535
  5062                           
  5063                           ; BSR set to: 0
  5064  011A1A  0100               	movlb	0	; () banked
  5065  011A1C  2B66               	incf	atoi@sign& (0+255),f,b
  5066  011A1E  D02B               	goto	l5541
  5067  011A20                     l5535:
  5068                           
  5069                           ; BSR set to: 0
  5070  011A20  C062  FFD9         	movff	atoi@s,fsr2l
  5071  011A24  C063  FFDA         	movff	atoi@s+1,fsr2h
  5072  011A28  0E2B               	movlw	43
  5073  011A2A  18DE               	xorwf	postinc2,w,c
  5074  011A2C  A4D8               	btfss	status,2,c
  5075  011A2E  D026               	goto	l5543
  5076  011A30  D022               	goto	l5541
  5077  011A32                     l5539:
  5078  011A32  C067  F020         	movff	atoi@a,___wmul@multiplier
  5079  011A36  C068  F021         	movff	atoi@a+1,___wmul@multiplier+1
  5080  011A3A  0E00               	movlw	0
  5081  011A3C  6E23               	movwf	___wmul@multiplicand+1,c
  5082  011A3E  0E0A               	movlw	10
  5083  011A40  6E22               	movwf	___wmul@multiplicand,c
  5084  011A42  EC73  F096         	call	___wmul	;wreg free
  5085  011A46  C062  FFD9         	movff	atoi@s,fsr2l
  5086  011A4A  C063  FFDA         	movff	atoi@s+1,fsr2h
  5087  011A4E  50DF               	movf	indf2,w,c
  5088  011A50  0100               	movlb	0	; () banked
  5089  011A52  6F64               	movwf	??_atoi& (0+255),b
  5090  011A54  6B65               	clrf	(??_atoi+1)& (0+255),b
  5091  011A56  5020               	movf	?___wmul,w,c
  5092  011A58  0100               	movlb	0	; () banked
  5093  011A5A  2764               	addwf	??_atoi& (0+255),f,b
  5094  011A5C  5021               	movf	?___wmul+1,w,c
  5095  011A5E  0100               	movlb	0	; () banked
  5096  011A60  2365               	addwfc	(??_atoi+1)& (0+255),f,b
  5097  011A62  0ED0               	movlw	208
  5098  011A64  0100               	movlb	0	; () banked
  5099  011A66  2564               	addwf	??_atoi& (0+255),w,b
  5100  011A68  0100               	movlb	0	; () banked
  5101  011A6A  6F67               	movwf	atoi@a& (0+255),b
  5102  011A6C  0EFF               	movlw	255
  5103  011A6E  0100               	movlb	0	; () banked
  5104  011A70  2165               	addwfc	(??_atoi+1)& (0+255),w,b
  5105  011A72  0100               	movlb	0	; () banked
  5106  011A74  6F68               	movwf	(atoi@a+1)& (0+255),b
  5107  011A76                     l5541:
  5108                           
  5109                           ; BSR set to: 0
  5110  011A76  0100               	movlb	0	; () banked
  5111  011A78  4B62               	infsnz	atoi@s& (0+255),f,b
  5112  011A7A  2B63               	incf	(atoi@s+1)& (0+255),f,b
  5113  011A7C                     l5543:
  5114                           
  5115                           ; BSR set to: 0
  5116  011A7C  C062  FFD9         	movff	atoi@s,fsr2l
  5117  011A80  C063  FFDA         	movff	atoi@s+1,fsr2h
  5118  011A84  50DF               	movf	indf2,w,c
  5119  011A86  ECE3  F096         	call	_isdigit
  5120  011A8A  B0D8               	btfsc	status,0,c
  5121  011A8C  D7D2               	goto	l5539
  5122  011A8E  0100               	movlb	0	; () banked
  5123  011A90  5166               	movf	atoi@sign& (0+255),w,b
  5124  011A92  0100               	movlb	0	; () banked
  5125  011A94  B4D8               	btfsc	status,2,c
  5126  011A96  D00E               	goto	l1107
  5127                           
  5128                           ; BSR set to: 0
  5129  011A98  C067  F064         	movff	atoi@a,??_atoi
  5130  011A9C  C068  F065         	movff	atoi@a+1,??_atoi+1
  5131  011AA0  0100               	movlb	0	; () banked
  5132  011AA2  1F64               	comf	??_atoi& (0+255),f,b
  5133  011AA4  1F65               	comf	(??_atoi+1)& (0+255),f,b
  5134  011AA6  4B64               	infsnz	??_atoi& (0+255),f,b
  5135  011AA8  2B65               	incf	(??_atoi+1)& (0+255),f,b
  5136  011AAA  C064  F062         	movff	??_atoi,?_atoi
  5137  011AAE  C065  F063         	movff	??_atoi+1,?_atoi+1
  5138  011AB2  0012               	return	
  5139  011AB4                     l1107:
  5140                           
  5141                           ; BSR set to: 0
  5142  011AB4  C067  F062         	movff	atoi@a,?_atoi
  5143  011AB8  C068  F063         	movff	atoi@a+1,?_atoi+1
  5144                           
  5145                           ; BSR set to: 0
  5146  011ABC  0012               	return		;funcret
  5147  011ABE                     __end_of_atoi:
  5148                           	opt stack 0
  5149                           tblptru	equ	0xFF8
  5150                           tblptrh	equ	0xFF7
  5151                           tblptrl	equ	0xFF6
  5152                           tablat	equ	0xFF5
  5153                           prodh	equ	0xFF4
  5154                           prodl	equ	0xFF3
  5155                           intcon	equ	0xFF2
  5156                           indf0	equ	0xFEF
  5157                           postinc0	equ	0xFEE
  5158                           fsr0h	equ	0xFEA
  5159                           fsr0l	equ	0xFE9
  5160                           wreg	equ	0xFE8
  5161                           postdec1	equ	0xFE5
  5162                           fsr1h	equ	0xFE2
  5163                           fsr1l	equ	0xFE1
  5164                           indf2	equ	0xFDF
  5165                           postinc2	equ	0xFDE
  5166                           postdec2	equ	0xFDD
  5167                           fsr2h	equ	0xFDA
  5168                           fsr2l	equ	0xFD9
  5169                           status	equ	0xFD8
  5170                           
  5171 ;; *************** function _isdigit *****************
  5172 ;; Defined at:
  5173 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;  c               1    wreg     unsigned char 
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;  c               1   33[COMRAM] unsigned char 
  5178 ;; Return value:  Size  Location     Type
  5179 ;;		None               void
  5180 ;; Registers used:
  5181 ;;		wreg, status,2, status,0
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5188 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5189 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5190 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5191 ;;Total ram usage:        3 bytes
  5192 ;; Hardware stack levels used:    1
  5193 ;; Hardware stack levels required when called:    4
  5194 ;; This function calls:
  5195 ;;		Nothing
  5196 ;; This function is called by:
  5197 ;;		_sprintf
  5198 ;;		_atoi
  5199 ;; This function uses a non-reentrant model
  5200 ;;
  5201                           
  5202                           	psect	text12
  5203  012DC6                     __ptext12:
  5204                           	opt stack 0
  5205  012DC6                     _isdigit:
  5206                           	opt stack 20
  5207                           
  5208                           ; BSR set to: 0
  5209                           ;incstack = 0
  5210                           ;isdigit@c stored from wreg
  5211  012DC6  6E22               	movwf	isdigit@c,c
  5212  012DC8  0E00               	movlw	0
  5213  012DCA  6E21               	movwf	_isdigit$3997,c
  5214  012DCC  0E3A               	movlw	58
  5215  012DCE  6022               	cpfslt	isdigit@c,c
  5216  012DD0  D005               	goto	l5197
  5217  012DD2  0E2F               	movlw	47
  5218  012DD4  6422               	cpfsgt	isdigit@c,c
  5219  012DD6  D002               	goto	l5197
  5220  012DD8  0E01               	movlw	1
  5221  012DDA  6E21               	movwf	_isdigit$3997,c
  5222  012DDC                     l5197:
  5223  012DDC  C021  F020         	movff	_isdigit$3997,??_isdigit
  5224  012DE0  3020               	rrcf	??_isdigit,w,c
  5225  012DE2  0012               	return	
  5226  012DE4                     __end_of_isdigit:
  5227                           	opt stack 0
  5228                           tblptru	equ	0xFF8
  5229                           tblptrh	equ	0xFF7
  5230                           tblptrl	equ	0xFF6
  5231                           tablat	equ	0xFF5
  5232                           prodh	equ	0xFF4
  5233                           prodl	equ	0xFF3
  5234                           intcon	equ	0xFF2
  5235                           indf0	equ	0xFEF
  5236                           postinc0	equ	0xFEE
  5237                           fsr0h	equ	0xFEA
  5238                           fsr0l	equ	0xFE9
  5239                           wreg	equ	0xFE8
  5240                           postdec1	equ	0xFE5
  5241                           fsr1h	equ	0xFE2
  5242                           fsr1l	equ	0xFE1
  5243                           indf2	equ	0xFDF
  5244                           postinc2	equ	0xFDE
  5245                           postdec2	equ	0xFDD
  5246                           fsr2h	equ	0xFDA
  5247                           fsr2l	equ	0xFD9
  5248                           status	equ	0xFD8
  5249                           
  5250 ;; *************** function _ringbuf_put_num *****************
  5251 ;; Defined at:
  5252 ;;		line 28 in file "../My_library/My_ringbuf.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;  rb              2   14[BANK0 ] PTR struct ringbuf
  5255 ;;		 -> tx_buf(8), 
  5256 ;;  value           2   16[BANK0 ] const unsigned int 
  5257 ;;  digits          1   18[BANK0 ] unsigned char 
  5258 ;; Auto vars:     Size  Location     Type
  5259 ;;  i               1   19[BANK0 ] unsigned char 
  5260 ;;  temp            2   20[BANK0 ] unsigned int 
  5261 ;; Return value:  Size  Location     Type
  5262 ;;		None               void
  5263 ;; Registers used:
  5264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5265 ;; Tracked objects:
  5266 ;;		On entry : 0/0
  5267 ;;		On exit  : 0/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5270 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5271 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5273 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5274 ;;Total ram usage:        8 bytes
  5275 ;; Hardware stack levels used:    1
  5276 ;; Hardware stack levels required when called:    6
  5277 ;; This function calls:
  5278 ;;		___lwdiv
  5279 ;;		___lwmod
  5280 ;;		_ringbuf_put
  5281 ;; This function is called by:
  5282 ;;		_terminal_loop
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           	psect	text13
  5287  01264E                     __ptext13:
  5288                           	opt stack 0
  5289  01264E                     _ringbuf_put_num:
  5290                           	opt stack 23
  5291                           
  5292                           ;My_ringbuf.c: 29: while (digits--) {
  5293                           
  5294                           ;incstack = 0
  5295  01264E  D039               	goto	l5689
  5296  012650                     l257:
  5297                           
  5298                           ; BSR set to: 0
  5299                           ;My_ringbuf.c: 30: uint16_t temp = value;
  5300  012650  C070  F074         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  5301  012654  C071  F075         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  5302                           
  5303                           ; BSR set to: 0
  5304                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  5305  012658  0E00               	movlw	0
  5306  01265A  0100               	movlb	0	; () banked
  5307  01265C  6F73               	movwf	ringbuf_put_num@i& (0+255),b
  5308  01265E  D011               	goto	l5683
  5309  012660                     l5679:
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;My_ringbuf.c: 32: temp /= 10;
  5313  012660  C074  F062         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  5314  012664  C075  F063         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  5315  012668  0E00               	movlw	0
  5316  01266A  0100               	movlb	0	; () banked
  5317  01266C  6F65               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5318  01266E  0E0A               	movlw	10
  5319  012670  6F64               	movwf	___lwdiv@divisor& (0+255),b
  5320  012672  EC60  F094         	call	___lwdiv	;wreg free
  5321  012676  C062  F074         	movff	?___lwdiv,ringbuf_put_num@temp
  5322  01267A  C063  F075         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  5323  01267E  0100               	movlb	0	; () banked
  5324  012680  2B73               	incf	ringbuf_put_num@i& (0+255),f,b
  5325  012682                     l5683:
  5326                           
  5327                           ; BSR set to: 0
  5328  012682  0100               	movlb	0	; () banked
  5329  012684  5172               	movf	ringbuf_put_num@digits& (0+255),w,b
  5330  012686  0100               	movlb	0	; () banked
  5331  012688  5D73               	subwf	ringbuf_put_num@i& (0+255),w,b
  5332  01268A  A0D8               	btfss	status,0,c
  5333  01268C  D7E9               	goto	l5679
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;My_ringbuf.c: 33: }
  5337                           ;My_ringbuf.c: 34: temp %= 10;
  5338                           
  5339                           ; BSR set to: 0
  5340  01268E  C074  F069         	movff	ringbuf_put_num@temp,___lwmod@dividend
  5341  012692  C075  F06A         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  5342  012696  0E00               	movlw	0
  5343  012698  0100               	movlb	0	; () banked
  5344  01269A  6F6C               	movwf	(___lwmod@divisor+1)& (0+255),b
  5345  01269C  0E0A               	movlw	10
  5346  01269E  6F6B               	movwf	___lwmod@divisor& (0+255),b
  5347  0126A0  EC3A  F095         	call	___lwmod	;wreg free
  5348  0126A4  C069  F074         	movff	?___lwmod,ringbuf_put_num@temp
  5349  0126A8  C06A  F075         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  5350                           
  5351                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  5352  0126AC  C06E  F066         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  5353  0126B0  C06F  F067         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  5354  0126B4  0100               	movlb	0	; () banked
  5355  0126B6  5174               	movf	ringbuf_put_num@temp& (0+255),w,b
  5356  0126B8  0F30               	addlw	48
  5357  0126BA  0100               	movlb	0	; () banked
  5358  0126BC  6F68               	movwf	ringbuf_put@asciicode& (0+255),b
  5359  0126BE  ECA0  F08E         	call	_ringbuf_put	;wreg free
  5360  0126C2                     l5689:
  5361  0126C2  0100               	movlb	0	; () banked
  5362  0126C4  0772               	decf	ringbuf_put_num@digits& (0+255),f,b
  5363  0126C6  0100               	movlb	0	; () banked
  5364  0126C8  2972               	incf	ringbuf_put_num@digits& (0+255),w,b
  5365  0126CA  B4D8               	btfsc	status,2,c
  5366  0126CC  0012               	return	
  5367  0126CE  D7C0               	goto	l257
  5368  0126D0                     __end_of_ringbuf_put_num:
  5369                           	opt stack 0
  5370                           tblptru	equ	0xFF8
  5371                           tblptrh	equ	0xFF7
  5372                           tblptrl	equ	0xFF6
  5373                           tablat	equ	0xFF5
  5374                           prodh	equ	0xFF4
  5375                           prodl	equ	0xFF3
  5376                           intcon	equ	0xFF2
  5377                           indf0	equ	0xFEF
  5378                           postinc0	equ	0xFEE
  5379                           fsr0h	equ	0xFEA
  5380                           fsr0l	equ	0xFE9
  5381                           wreg	equ	0xFE8
  5382                           postdec1	equ	0xFE5
  5383                           fsr1h	equ	0xFE2
  5384                           fsr1l	equ	0xFE1
  5385                           indf2	equ	0xFDF
  5386                           postinc2	equ	0xFDE
  5387                           postdec2	equ	0xFDD
  5388                           fsr2h	equ	0xFDA
  5389                           fsr2l	equ	0xFD9
  5390                           status	equ	0xFD8
  5391                           
  5392 ;; *************** function _ringbuf_put *****************
  5393 ;; Defined at:
  5394 ;;		line 20 in file "../My_library/My_ringbuf.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;  rb              2    6[BANK0 ] PTR struct ringbuf
  5397 ;;		 -> terminal_loop@command(8), rx_buf(8), tx_buf(8), 
  5398 ;;  asciicode       1    8[BANK0 ] unsigned char 
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;		None
  5401 ;; Return value:  Size  Location     Type
  5402 ;;		None               void
  5403 ;; Registers used:
  5404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 0/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5410 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5412 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5413 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5414 ;;Total ram usage:        7 bytes
  5415 ;; Hardware stack levels used:    1
  5416 ;; Hardware stack levels required when called:    5
  5417 ;; This function calls:
  5418 ;;		_ringbuf_num
  5419 ;; This function is called by:
  5420 ;;		_tx_sends
  5421 ;;		_ringbuf_put_num
  5422 ;;		_ringbuf_put_str
  5423 ;;		_terminal_loop
  5424 ;;		_tx_send
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text14
  5429  011D40                     __ptext14:
  5430                           	opt stack 0
  5431  011D40                     _ringbuf_put:
  5432                           	opt stack 22
  5433                           
  5434                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;incstack = 0
  5438  011D40  C066  F020         	movff	ringbuf_put@rb,ringbuf_num@rb
  5439  011D44  C067  F021         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  5440  011D48  EC5F  F08D         	call	_ringbuf_num	;wreg free
  5441  011D4C  0100               	movlb	0	; () banked
  5442  011D4E  EE20 F002          	lfsr	2,2
  5443  011D52  5166               	movf	ringbuf_put@rb& (0+255),w,b
  5444  011D54  26D9               	addwf	fsr2l,f,c
  5445  011D56  5167               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  5446  011D58  22DA               	addwfc	fsr2h,f,c
  5447  011D5A  50DE               	movf	postinc2,w,c
  5448  011D5C  5C20               	subwf	?_ringbuf_num,w,c
  5449  011D5E  50DE               	movf	postinc2,w,c
  5450  011D60  5821               	subwfb	?_ringbuf_num+1,w,c
  5451  011D62  B0D8               	btfsc	status,0,c
  5452  011D64  0012               	return	
  5453                           
  5454                           ; BSR set to: 0
  5455                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
  5456  011D66  0100               	movlb	0	; () banked
  5457  011D68  EE20 F004          	lfsr	2,4
  5458  011D6C  5166               	movf	ringbuf_put@rb& (0+255),w,b
  5459  011D6E  26D9               	addwf	fsr2l,f,c
  5460  011D70  5167               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  5461  011D72  22DA               	addwfc	fsr2h,f,c
  5462  011D74  CFDE F069          	movff	postinc2,??_ringbuf_put
  5463  011D78  CFDD F06A          	movff	postdec2,??_ringbuf_put+1
  5464  011D7C  C066  FFD9         	movff	ringbuf_put@rb,fsr2l
  5465  011D80  C067  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  5466  011D84  CFDE F06B          	movff	postinc2,??_ringbuf_put+2
  5467  011D88  CFDD F06C          	movff	postdec2,??_ringbuf_put+3
  5468  011D8C  0100               	movlb	0	; () banked
  5469  011D8E  5169               	movf	??_ringbuf_put& (0+255),w,b
  5470  011D90  0100               	movlb	0	; () banked
  5471  011D92  256B               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  5472  011D94  6ED9               	movwf	fsr2l,c
  5473  011D96  0100               	movlb	0	; () banked
  5474  011D98  516A               	movf	(??_ringbuf_put+1)& (0+255),w,b
  5475  011D9A  0100               	movlb	0	; () banked
  5476  011D9C  216C               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  5477  011D9E  6EDA               	movwf	fsr2h,c
  5478  011DA0  C068  FFDF         	movff	ringbuf_put@asciicode,indf2
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
  5482  011DA4  0100               	movlb	0	; () banked
  5483  011DA6  EE20 F002          	lfsr	2,2
  5484  011DAA  5166               	movf	ringbuf_put@rb& (0+255),w,b
  5485  011DAC  26D9               	addwf	fsr2l,f,c
  5486  011DAE  5167               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  5487  011DB0  22DA               	addwfc	fsr2h,f,c
  5488  011DB2  0100               	movlb	0	; () banked
  5489  011DB4  EE10 F004          	lfsr	1,4
  5490  011DB8  5166               	movf	ringbuf_put@rb& (0+255),w,b
  5491  011DBA  26E1               	addwf	fsr1l,f,c
  5492  011DBC  5167               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  5493  011DBE  22E2               	addwfc	fsr1h,f,c
  5494  011DC0  CFE6 F06B          	movff	postinc1,??_ringbuf_put+2
  5495  011DC4  CFE5 F06C          	movff	postdec1,??_ringbuf_put+3
  5496  011DC8  0E01               	movlw	1
  5497  011DCA  0100               	movlb	0	; () banked
  5498  011DCC  276B               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  5499  011DCE  0E00               	movlw	0
  5500  011DD0  236C               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  5501  011DD2  50DE               	movf	postinc2,w,c
  5502  011DD4  0100               	movlb	0	; () banked
  5503  011DD6  5D6B               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  5504  011DD8  50DE               	movf	postinc2,w,c
  5505  011DDA  0100               	movlb	0	; () banked
  5506  011DDC  596C               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  5507  011DDE  B0D8               	btfsc	status,0,c
  5508  011DE0  D00B               	goto	l5139
  5509                           
  5510                           ; BSR set to: 0
  5511  011DE2  0100               	movlb	0	; () banked
  5512  011DE4  EE20 F004          	lfsr	2,4
  5513  011DE8  5166               	movf	ringbuf_put@rb& (0+255),w,b
  5514  011DEA  26D9               	addwf	fsr2l,f,c
  5515  011DEC  5167               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  5516  011DEE  22DA               	addwfc	fsr2h,f,c
  5517  011DF0  2ADE               	incf	postinc2,f,c
  5518  011DF2  0E00               	movlw	0
  5519  011DF4  22DD               	addwfc	postdec2,f,c
  5520  011DF6  0012               	return	
  5521  011DF8                     l5139:
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;My_ringbuf.c: 24: else rb->head = 0;
  5525  011DF8  0100               	movlb	0	; () banked
  5526  011DFA  EE20 F004          	lfsr	2,4
  5527  011DFE  5166               	movf	ringbuf_put@rb& (0+255),w,b
  5528  011E00  26D9               	addwf	fsr2l,f,c
  5529  011E02  5167               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  5530  011E04  22DA               	addwfc	fsr2h,f,c
  5531  011E06  0E00               	movlw	0
  5532  011E08  6EDE               	movwf	postinc2,c
  5533  011E0A  0E00               	movlw	0
  5534  011E0C  6EDD               	movwf	postdec2,c
  5535                           
  5536                           ; BSR set to: 0
  5537  011E0E  0012               	return	
  5538  011E10                     __end_of_ringbuf_put:
  5539                           	opt stack 0
  5540                           tblptru	equ	0xFF8
  5541                           tblptrh	equ	0xFF7
  5542                           tblptrl	equ	0xFF6
  5543                           tablat	equ	0xFF5
  5544                           prodh	equ	0xFF4
  5545                           prodl	equ	0xFF3
  5546                           intcon	equ	0xFF2
  5547                           indf0	equ	0xFEF
  5548                           postinc0	equ	0xFEE
  5549                           fsr0h	equ	0xFEA
  5550                           fsr0l	equ	0xFE9
  5551                           wreg	equ	0xFE8
  5552                           postinc1	equ	0xFE6
  5553                           postdec1	equ	0xFE5
  5554                           fsr1h	equ	0xFE2
  5555                           fsr1l	equ	0xFE1
  5556                           indf2	equ	0xFDF
  5557                           postinc2	equ	0xFDE
  5558                           postdec2	equ	0xFDD
  5559                           fsr2h	equ	0xFDA
  5560                           fsr2l	equ	0xFD9
  5561                           status	equ	0xFD8
  5562                           
  5563 ;; *************** function ___lwmod *****************
  5564 ;; Defined at:
  5565 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;  dividend        2    9[BANK0 ] unsigned int 
  5568 ;;  divisor         2   11[BANK0 ] unsigned int 
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;  counter         1   13[BANK0 ] unsigned char 
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  2    9[BANK0 ] unsigned int 
  5573 ;; Registers used:
  5574 ;;		wreg, status,2, status,0
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5580 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5581 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5583 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5584 ;;Total ram usage:        5 bytes
  5585 ;; Hardware stack levels used:    1
  5586 ;; Hardware stack levels required when called:    4
  5587 ;; This function calls:
  5588 ;;		Nothing
  5589 ;; This function is called by:
  5590 ;;		_ringbuf_put_num
  5591 ;;		_sprintf
  5592 ;;		_tx_sendn
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           	psect	text15
  5597  012A74                     __ptext15:
  5598                           	opt stack 0
  5599  012A74                     ___lwmod:
  5600                           	opt stack 20
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;incstack = 0
  5604  012A74  0100               	movlb	0	; () banked
  5605  012A76  516B               	movf	___lwmod@divisor& (0+255),w,b
  5606  012A78  0100               	movlb	0	; () banked
  5607  012A7A  116C               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  5608  012A7C  B4D8               	btfsc	status,2,c
  5609  012A7E  D026               	goto	l1367
  5610                           
  5611                           ; BSR set to: 0
  5612  012A80  0E01               	movlw	1
  5613  012A82  0100               	movlb	0	; () banked
  5614  012A84  6F6D               	movwf	___lwmod@counter& (0+255),b
  5615  012A86  D006               	goto	l5235
  5616  012A88                     l5233:
  5617                           
  5618                           ; BSR set to: 0
  5619  012A88  0100               	movlb	0	; () banked
  5620  012A8A  90D8               	bcf	status,0,c
  5621  012A8C  376B               	rlcf	___lwmod@divisor& (0+255),f,b
  5622  012A8E  376C               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  5623  012A90  0100               	movlb	0	; () banked
  5624  012A92  2B6D               	incf	___lwmod@counter& (0+255),f,b
  5625  012A94                     l5235:
  5626                           
  5627                           ; BSR set to: 0
  5628  012A94  0100               	movlb	0	; () banked
  5629  012A96  AF6C               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  5630  012A98  D7F7               	goto	l5233
  5631  012A9A                     l5237:
  5632                           
  5633                           ; BSR set to: 0
  5634  012A9A  0100               	movlb	0	; () banked
  5635  012A9C  516B               	movf	___lwmod@divisor& (0+255),w,b
  5636  012A9E  0100               	movlb	0	; () banked
  5637  012AA0  5D69               	subwf	___lwmod@dividend& (0+255),w,b
  5638  012AA2  0100               	movlb	0	; () banked
  5639  012AA4  516C               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5640  012AA6  0100               	movlb	0	; () banked
  5641  012AA8  596A               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  5642  012AAA  A0D8               	btfss	status,0,c
  5643  012AAC  D008               	goto	l5241
  5644                           
  5645                           ; BSR set to: 0
  5646  012AAE  0100               	movlb	0	; () banked
  5647  012AB0  516B               	movf	___lwmod@divisor& (0+255),w,b
  5648  012AB2  0100               	movlb	0	; () banked
  5649  012AB4  5F69               	subwf	___lwmod@dividend& (0+255),f,b
  5650  012AB6  0100               	movlb	0	; () banked
  5651  012AB8  516C               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5652  012ABA  0100               	movlb	0	; () banked
  5653  012ABC  5B6A               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  5654  012ABE                     l5241:
  5655                           
  5656                           ; BSR set to: 0
  5657  012ABE  0100               	movlb	0	; () banked
  5658  012AC0  90D8               	bcf	status,0,c
  5659  012AC2  336C               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  5660  012AC4  336B               	rrcf	___lwmod@divisor& (0+255),f,b
  5661                           
  5662                           ; BSR set to: 0
  5663  012AC6  0100               	movlb	0	; () banked
  5664  012AC8  2F6D               	decfsz	___lwmod@counter& (0+255),f,b
  5665  012ACA  D7E7               	goto	l5237
  5666  012ACC                     l1367:
  5667                           
  5668                           ; BSR set to: 0
  5669  012ACC  C069  F069         	movff	___lwmod@dividend,?___lwmod
  5670  012AD0  C06A  F06A         	movff	___lwmod@dividend+1,?___lwmod+1
  5671                           
  5672                           ; BSR set to: 0
  5673  012AD4  0012               	return		;funcret
  5674  012AD6                     __end_of___lwmod:
  5675                           	opt stack 0
  5676                           tblptru	equ	0xFF8
  5677                           tblptrh	equ	0xFF7
  5678                           tblptrl	equ	0xFF6
  5679                           tablat	equ	0xFF5
  5680                           prodh	equ	0xFF4
  5681                           prodl	equ	0xFF3
  5682                           intcon	equ	0xFF2
  5683                           indf0	equ	0xFEF
  5684                           postinc0	equ	0xFEE
  5685                           fsr0h	equ	0xFEA
  5686                           fsr0l	equ	0xFE9
  5687                           wreg	equ	0xFE8
  5688                           postinc1	equ	0xFE6
  5689                           postdec1	equ	0xFE5
  5690                           fsr1h	equ	0xFE2
  5691                           fsr1l	equ	0xFE1
  5692                           indf2	equ	0xFDF
  5693                           postinc2	equ	0xFDE
  5694                           postdec2	equ	0xFDD
  5695                           fsr2h	equ	0xFDA
  5696                           fsr2l	equ	0xFD9
  5697                           status	equ	0xFD8
  5698                           
  5699 ;; *************** function _ringbuf_pop *****************
  5700 ;; Defined at:
  5701 ;;		line 45 in file "../My_library/My_ringbuf.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;  rb              2   33[COMRAM] PTR struct ringbuf
  5704 ;;		 -> terminal_loop@command(8), rx_buf(8), tx_buf(8), 
  5705 ;; Auto vars:     Size  Location     Type
  5706 ;;  ret             1   10[BANK0 ] unsigned char 
  5707 ;; Return value:  Size  Location     Type
  5708 ;;                  1    wreg      unsigned char 
  5709 ;; Registers used:
  5710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5711 ;; Tracked objects:
  5712 ;;		On entry : 0/0
  5713 ;;		On exit  : 0/0
  5714 ;;		Unchanged: 0/0
  5715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5716 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5717 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5718 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5719 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5720 ;;Total ram usage:        7 bytes
  5721 ;; Hardware stack levels used:    1
  5722 ;; Hardware stack levels required when called:    5
  5723 ;; This function calls:
  5724 ;;		_ringbuf_num
  5725 ;; This function is called by:
  5726 ;;		_terminal_loop
  5727 ;; This function uses a non-reentrant model
  5728 ;;
  5729                           
  5730                           	psect	text16
  5731  011EDE                     __ptext16:
  5732                           	opt stack 0
  5733  011EDE                     _ringbuf_pop:
  5734                           	opt stack 24
  5735                           
  5736                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
  5737                           
  5738                           ; BSR set to: 0
  5739                           ;incstack = 0
  5740  011EDE  C022  F020         	movff	ringbuf_pop@rb,ringbuf_num@rb
  5741  011EE2  C023  F021         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  5742  011EE6  EC5F  F08D         	call	_ringbuf_num	;wreg free
  5743  011EEA  5020               	movf	?_ringbuf_num,w,c
  5744  011EEC  1021               	iorwf	?_ringbuf_num+1,w,c
  5745  011EEE  B4D8               	btfsc	status,2,c
  5746  011EF0  D053               	goto	l5663
  5747                           
  5748                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
  5749  011EF2  EE20 F006          	lfsr	2,6
  5750  011EF6  5022               	movf	ringbuf_pop@rb,w,c
  5751  011EF8  26D9               	addwf	fsr2l,f,c
  5752  011EFA  5023               	movf	ringbuf_pop@rb+1,w,c
  5753  011EFC  22DA               	addwfc	fsr2h,f,c
  5754  011EFE  CFDE F066          	movff	postinc2,??_ringbuf_pop
  5755  011F02  CFDD F067          	movff	postdec2,??_ringbuf_pop+1
  5756  011F06  C022  FFD9         	movff	ringbuf_pop@rb,fsr2l
  5757  011F0A  C023  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  5758  011F0E  CFDE F068          	movff	postinc2,??_ringbuf_pop+2
  5759  011F12  CFDD F069          	movff	postdec2,??_ringbuf_pop+3
  5760  011F16  0100               	movlb	0	; () banked
  5761  011F18  5166               	movf	??_ringbuf_pop& (0+255),w,b
  5762  011F1A  0100               	movlb	0	; () banked
  5763  011F1C  2568               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  5764  011F1E  6ED9               	movwf	fsr2l,c
  5765  011F20  0100               	movlb	0	; () banked
  5766  011F22  5167               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  5767  011F24  0100               	movlb	0	; () banked
  5768  011F26  2169               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  5769  011F28  6EDA               	movwf	fsr2h,c
  5770  011F2A  50DF               	movf	indf2,w,c
  5771  011F2C  0100               	movlb	0	; () banked
  5772  011F2E  6F6A               	movwf	ringbuf_pop@ret& (0+255),b
  5773                           
  5774                           ; BSR set to: 0
  5775                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
  5776  011F30  EE20 F002          	lfsr	2,2
  5777  011F34  5022               	movf	ringbuf_pop@rb,w,c
  5778  011F36  26D9               	addwf	fsr2l,f,c
  5779  011F38  5023               	movf	ringbuf_pop@rb+1,w,c
  5780  011F3A  22DA               	addwfc	fsr2h,f,c
  5781  011F3C  EE10 F006          	lfsr	1,6
  5782  011F40  5022               	movf	ringbuf_pop@rb,w,c
  5783  011F42  26E1               	addwf	fsr1l,f,c
  5784  011F44  5023               	movf	ringbuf_pop@rb+1,w,c
  5785  011F46  22E2               	addwfc	fsr1h,f,c
  5786  011F48  CFE6 F068          	movff	postinc1,??_ringbuf_pop+2
  5787  011F4C  CFE5 F069          	movff	postdec1,??_ringbuf_pop+3
  5788  011F50  0E01               	movlw	1
  5789  011F52  0100               	movlb	0	; () banked
  5790  011F54  2768               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  5791  011F56  0E00               	movlw	0
  5792  011F58  2369               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  5793  011F5A  50DE               	movf	postinc2,w,c
  5794  011F5C  0100               	movlb	0	; () banked
  5795  011F5E  5D68               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  5796  011F60  50DE               	movf	postinc2,w,c
  5797  011F62  0100               	movlb	0	; () banked
  5798  011F64  5969               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  5799  011F66  B0D8               	btfsc	status,0,c
  5800  011F68  D00A               	goto	l5655
  5801                           
  5802                           ; BSR set to: 0
  5803                           ;My_ringbuf.c: 49: rb->tail++;
  5804  011F6A  EE20 F006          	lfsr	2,6
  5805  011F6E  5022               	movf	ringbuf_pop@rb,w,c
  5806  011F70  26D9               	addwf	fsr2l,f,c
  5807  011F72  5023               	movf	ringbuf_pop@rb+1,w,c
  5808  011F74  22DA               	addwfc	fsr2h,f,c
  5809  011F76  2ADE               	incf	postinc2,f,c
  5810  011F78  0E00               	movlw	0
  5811  011F7A  22DD               	addwfc	postdec2,f,c
  5812                           
  5813                           ;My_ringbuf.c: 50: } else {
  5814  011F7C  D00A               	goto	l5657
  5815  011F7E                     l5655:
  5816                           
  5817                           ; BSR set to: 0
  5818                           ;My_ringbuf.c: 51: rb->tail = 0;
  5819  011F7E  EE20 F006          	lfsr	2,6
  5820  011F82  5022               	movf	ringbuf_pop@rb,w,c
  5821  011F84  26D9               	addwf	fsr2l,f,c
  5822  011F86  5023               	movf	ringbuf_pop@rb+1,w,c
  5823  011F88  22DA               	addwfc	fsr2h,f,c
  5824  011F8A  0E00               	movlw	0
  5825  011F8C  6EDE               	movwf	postinc2,c
  5826  011F8E  0E00               	movlw	0
  5827  011F90  6EDD               	movwf	postdec2,c
  5828  011F92                     l5657:
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;My_ringbuf.c: 52: }
  5832                           ;My_ringbuf.c: 53: return ret;
  5833  011F92  0100               	movlb	0	; () banked
  5834  011F94  516A               	movf	ringbuf_pop@ret& (0+255),w,b
  5835                           
  5836                           ; BSR set to: 0
  5837                           ;My_ringbuf.c: 54: } else {
  5838                           
  5839                           ; BSR set to: 0
  5840  011F96  0012               	return	
  5841  011F98                     l5663:
  5842                           
  5843                           ;My_ringbuf.c: 55: return 0;
  5844  011F98  0E00               	movlw	0
  5845  011F9A  0012               	return	
  5846  011F9C                     __end_of_ringbuf_pop:
  5847                           	opt stack 0
  5848                           tblptru	equ	0xFF8
  5849                           tblptrh	equ	0xFF7
  5850                           tblptrl	equ	0xFF6
  5851                           tablat	equ	0xFF5
  5852                           prodh	equ	0xFF4
  5853                           prodl	equ	0xFF3
  5854                           intcon	equ	0xFF2
  5855                           indf0	equ	0xFEF
  5856                           postinc0	equ	0xFEE
  5857                           fsr0h	equ	0xFEA
  5858                           fsr0l	equ	0xFE9
  5859                           wreg	equ	0xFE8
  5860                           postinc1	equ	0xFE6
  5861                           postdec1	equ	0xFE5
  5862                           fsr1h	equ	0xFE2
  5863                           fsr1l	equ	0xFE1
  5864                           indf2	equ	0xFDF
  5865                           postinc2	equ	0xFDE
  5866                           postdec2	equ	0xFDD
  5867                           fsr2h	equ	0xFDA
  5868                           fsr2l	equ	0xFD9
  5869                           status	equ	0xFD8
  5870                           
  5871 ;; *************** function _ringbuf_delete *****************
  5872 ;; Defined at:
  5873 ;;		line 66 in file "../My_library/My_ringbuf.c"
  5874 ;; Parameters:    Size  Location     Type
  5875 ;;  rb              2   31[COMRAM] PTR struct ringbuf
  5876 ;;		 -> terminal_loop@command(8), 
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;		None
  5879 ;; Return value:  Size  Location     Type
  5880 ;;		None               void
  5881 ;; Registers used:
  5882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5888 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5891 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5892 ;;Total ram usage:        2 bytes
  5893 ;; Hardware stack levels used:    1
  5894 ;; Hardware stack levels required when called:    4
  5895 ;; This function calls:
  5896 ;;		Nothing
  5897 ;; This function is called by:
  5898 ;;		_terminal_loop
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902                           	psect	text17
  5903  012D84                     __ptext17:
  5904                           	opt stack 0
  5905  012D84                     _ringbuf_delete:
  5906                           	opt stack 25
  5907                           
  5908                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  5909                           
  5910                           ;incstack = 0
  5911  012D84  EE20 F006          	lfsr	2,6
  5912  012D88  5020               	movf	ringbuf_delete@rb,w,c
  5913  012D8A  26D9               	addwf	fsr2l,f,c
  5914  012D8C  5021               	movf	ringbuf_delete@rb+1,w,c
  5915  012D8E  22DA               	addwfc	fsr2h,f,c
  5916  012D90  EE10 F004          	lfsr	1,4
  5917  012D94  5020               	movf	ringbuf_delete@rb,w,c
  5918  012D96  26E1               	addwf	fsr1l,f,c
  5919  012D98  5021               	movf	ringbuf_delete@rb+1,w,c
  5920  012D9A  22E2               	addwfc	fsr1h,f,c
  5921  012D9C  CFDE FFE6          	movff	postinc2,postinc1
  5922  012DA0  CFDD FFE5          	movff	postdec2,postdec1
  5923  012DA4  0012               	return		;funcret
  5924  012DA6                     __end_of_ringbuf_delete:
  5925                           	opt stack 0
  5926                           tblptru	equ	0xFF8
  5927                           tblptrh	equ	0xFF7
  5928                           tblptrl	equ	0xFF6
  5929                           tablat	equ	0xFF5
  5930                           prodh	equ	0xFF4
  5931                           prodl	equ	0xFF3
  5932                           intcon	equ	0xFF2
  5933                           indf0	equ	0xFEF
  5934                           postinc0	equ	0xFEE
  5935                           fsr0h	equ	0xFEA
  5936                           fsr0l	equ	0xFE9
  5937                           wreg	equ	0xFE8
  5938                           postinc1	equ	0xFE6
  5939                           postdec1	equ	0xFE5
  5940                           fsr1h	equ	0xFE2
  5941                           fsr1l	equ	0xFE1
  5942                           indf2	equ	0xFDF
  5943                           postinc2	equ	0xFDE
  5944                           postdec2	equ	0xFDD
  5945                           fsr2h	equ	0xFDA
  5946                           fsr2l	equ	0xFD9
  5947                           status	equ	0xFD8
  5948                           
  5949 ;; *************** function _ringbuf_backspace *****************
  5950 ;; Defined at:
  5951 ;;		line 59 in file "../My_library/My_ringbuf.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;  rb              2   33[COMRAM] PTR struct ringbuf
  5954 ;;		 -> terminal_loop@command(8), 
  5955 ;; Auto vars:     Size  Location     Type
  5956 ;;		None
  5957 ;; Return value:  Size  Location     Type
  5958 ;;		None               void
  5959 ;; Registers used:
  5960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5961 ;; Tracked objects:
  5962 ;;		On entry : 0/0
  5963 ;;		On exit  : 0/0
  5964 ;;		Unchanged: 0/0
  5965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5966 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5968 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5969 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5970 ;;Total ram usage:        6 bytes
  5971 ;; Hardware stack levels used:    1
  5972 ;; Hardware stack levels required when called:    5
  5973 ;; This function calls:
  5974 ;;		_ringbuf_num
  5975 ;; This function is called by:
  5976 ;;		_terminal_loop
  5977 ;; This function uses a non-reentrant model
  5978 ;;
  5979                           
  5980                           	psect	text18
  5981  0126D0                     __ptext18:
  5982                           	opt stack 0
  5983  0126D0                     _ringbuf_backspace:
  5984                           	opt stack 24
  5985                           
  5986                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  5987                           
  5988                           ;incstack = 0
  5989  0126D0  C022  F020         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  5990  0126D4  C023  F021         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  5991  0126D8  EC5F  F08D         	call	_ringbuf_num	;wreg free
  5992  0126DC  5020               	movf	?_ringbuf_num,w,c
  5993  0126DE  1021               	iorwf	?_ringbuf_num+1,w,c
  5994  0126E0  B4D8               	btfsc	status,2,c
  5995  0126E2  0012               	return	
  5996                           
  5997                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  5998  0126E4  EE20 F004          	lfsr	2,4
  5999  0126E8  5022               	movf	ringbuf_backspace@rb,w,c
  6000  0126EA  26D9               	addwf	fsr2l,f,c
  6001  0126EC  5023               	movf	ringbuf_backspace@rb+1,w,c
  6002  0126EE  22DA               	addwfc	fsr2h,f,c
  6003  0126F0  50DE               	movf	postinc2,w,c
  6004  0126F2  10DE               	iorwf	postinc2,w,c
  6005  0126F4  B4D8               	btfsc	status,2,c
  6006  0126F6  D00A               	goto	l5697
  6007  0126F8  EE20 F004          	lfsr	2,4
  6008  0126FC  5022               	movf	ringbuf_backspace@rb,w,c
  6009  0126FE  26D9               	addwf	fsr2l,f,c
  6010  012700  5023               	movf	ringbuf_backspace@rb+1,w,c
  6011  012702  22DA               	addwfc	fsr2h,f,c
  6012  012704  06DE               	decf	postinc2,f,c
  6013  012706  0E00               	movlw	0
  6014  012708  5ADD               	subwfb	postdec2,f,c
  6015  01270A  0012               	return	
  6016  01270C                     l5697:
  6017                           
  6018                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  6019  01270C  0EFF               	movlw	255
  6020  01270E  0100               	movlb	0	; () banked
  6021  012710  6F66               	movwf	??_ringbuf_backspace& (0+255),b
  6022  012712  0EFF               	movlw	255
  6023  012714  0100               	movlb	0	; () banked
  6024  012716  6F67               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  6025  012718  EE20 F002          	lfsr	2,2
  6026  01271C  5022               	movf	ringbuf_backspace@rb,w,c
  6027  01271E  26D9               	addwf	fsr2l,f,c
  6028  012720  5023               	movf	ringbuf_backspace@rb+1,w,c
  6029  012722  22DA               	addwfc	fsr2h,f,c
  6030  012724  CFDE F068          	movff	postinc2,??_ringbuf_backspace+2
  6031  012728  CFDD F069          	movff	postdec2,??_ringbuf_backspace+3
  6032  01272C  0100               	movlb	0	; () banked
  6033  01272E  5166               	movf	??_ringbuf_backspace& (0+255),w,b
  6034  012730  0100               	movlb	0	; () banked
  6035  012732  2768               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  6036  012734  0100               	movlb	0	; () banked
  6037  012736  5167               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  6038  012738  0100               	movlb	0	; () banked
  6039  01273A  2369               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  6040  01273C  EE20 F004          	lfsr	2,4
  6041  012740  5022               	movf	ringbuf_backspace@rb,w,c
  6042  012742  26D9               	addwf	fsr2l,f,c
  6043  012744  5023               	movf	ringbuf_backspace@rb+1,w,c
  6044  012746  22DA               	addwfc	fsr2h,f,c
  6045  012748  C068  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  6046  01274C  C069  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  6047                           
  6048                           ; BSR set to: 0
  6049  012750  0012               	return	
  6050  012752                     __end_of_ringbuf_backspace:
  6051                           	opt stack 0
  6052                           tblptru	equ	0xFF8
  6053                           tblptrh	equ	0xFF7
  6054                           tblptrl	equ	0xFF6
  6055                           tablat	equ	0xFF5
  6056                           prodh	equ	0xFF4
  6057                           prodl	equ	0xFF3
  6058                           intcon	equ	0xFF2
  6059                           indf0	equ	0xFEF
  6060                           postinc0	equ	0xFEE
  6061                           fsr0h	equ	0xFEA
  6062                           fsr0l	equ	0xFE9
  6063                           wreg	equ	0xFE8
  6064                           postinc1	equ	0xFE6
  6065                           postdec1	equ	0xFE5
  6066                           fsr1h	equ	0xFE2
  6067                           fsr1l	equ	0xFE1
  6068                           indf2	equ	0xFDF
  6069                           postinc2	equ	0xFDE
  6070                           postdec2	equ	0xFDD
  6071                           fsr2h	equ	0xFDA
  6072                           fsr2l	equ	0xFD9
  6073                           status	equ	0xFD8
  6074                           
  6075 ;; *************** function _ringbuf_num *****************
  6076 ;; Defined at:
  6077 ;;		line 12 in file "../My_library/My_ringbuf.c"
  6078 ;; Parameters:    Size  Location     Type
  6079 ;;  rb              2   31[COMRAM] PTR struct ringbuf
  6080 ;;		 -> terminal_loop@command(8), rx_buf(8), tx_buf(8), 
  6081 ;; Auto vars:     Size  Location     Type
  6082 ;;		None
  6083 ;; Return value:  Size  Location     Type
  6084 ;;                  2   31[COMRAM] unsigned int 
  6085 ;; Registers used:
  6086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6087 ;; Tracked objects:
  6088 ;;		On entry : 0/0
  6089 ;;		On exit  : 0/0
  6090 ;;		Unchanged: 0/0
  6091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6094 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6095 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6096 ;;Total ram usage:        8 bytes
  6097 ;; Hardware stack levels used:    1
  6098 ;; Hardware stack levels required when called:    4
  6099 ;; This function calls:
  6100 ;;		Nothing
  6101 ;; This function is called by:
  6102 ;;		_ringbuf_put
  6103 ;;		_ringbuf_pop
  6104 ;;		_ringbuf_backspace
  6105 ;;		_terminal_loop
  6106 ;;		_main
  6107 ;; This function uses a non-reentrant model
  6108 ;;
  6109                           
  6110                           	psect	text19
  6111  011ABE                     __ptext19:
  6112                           	opt stack 0
  6113  011ABE                     _ringbuf_num:
  6114                           	opt stack 22
  6115                           
  6116                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
  6117                           
  6118                           ;incstack = 0
  6119  011ABE  EE20 F006          	lfsr	2,6
  6120  011AC2  5020               	movf	ringbuf_num@rb,w,c
  6121  011AC4  26D9               	addwf	fsr2l,f,c
  6122  011AC6  5021               	movf	ringbuf_num@rb+1,w,c
  6123  011AC8  22DA               	addwfc	fsr2h,f,c
  6124  011ACA  EE10 F004          	lfsr	1,4
  6125  011ACE  5020               	movf	ringbuf_num@rb,w,c
  6126  011AD0  26E1               	addwf	fsr1l,f,c
  6127  011AD2  5021               	movf	ringbuf_num@rb+1,w,c
  6128  011AD4  22E2               	addwfc	fsr1h,f,c
  6129  011AD6  50DE               	movf	postinc2,w,c
  6130  011AD8  5CE6               	subwf	postinc1,w,c
  6131  011ADA  50DE               	movf	postinc2,w,c
  6132  011ADC  58E6               	subwfb	postinc1,w,c
  6133  011ADE  A0D8               	btfss	status,0,c
  6134  011AE0  D024               	goto	l5035
  6135                           
  6136                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
  6137  011AE2  EE20 F004          	lfsr	2,4
  6138  011AE6  5020               	movf	ringbuf_num@rb,w,c
  6139  011AE8  26D9               	addwf	fsr2l,f,c
  6140  011AEA  5021               	movf	ringbuf_num@rb+1,w,c
  6141  011AEC  22DA               	addwfc	fsr2h,f,c
  6142  011AEE  CFDE F060          	movff	postinc2,??_ringbuf_num
  6143  011AF2  CFDD F061          	movff	postdec2,??_ringbuf_num+1
  6144  011AF6  EE20 F006          	lfsr	2,6
  6145  011AFA  5020               	movf	ringbuf_num@rb,w,c
  6146  011AFC  26D9               	addwf	fsr2l,f,c
  6147  011AFE  5021               	movf	ringbuf_num@rb+1,w,c
  6148  011B00  22DA               	addwfc	fsr2h,f,c
  6149  011B02  CFDE F062          	movff	postinc2,??_ringbuf_num+2
  6150  011B06  CFDD F063          	movff	postdec2,??_ringbuf_num+3
  6151  011B0A  0100               	movlb	0	; () banked
  6152  011B0C  1F62               	comf	(??_ringbuf_num+2)& (0+255),f,b
  6153  011B0E  1F63               	comf	(??_ringbuf_num+3)& (0+255),f,b
  6154  011B10  4B62               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
  6155  011B12  2B63               	incf	(??_ringbuf_num+3)& (0+255),f,b
  6156  011B14  0100               	movlb	0	; () banked
  6157  011B16  5160               	movf	??_ringbuf_num& (0+255),w,b
  6158  011B18  0100               	movlb	0	; () banked
  6159  011B1A  2562               	addwf	(??_ringbuf_num+2)& (0+255),w,b
  6160  011B1C  6E20               	movwf	?_ringbuf_num,c
  6161  011B1E  0100               	movlb	0	; () banked
  6162  011B20  5161               	movf	(??_ringbuf_num+1)& (0+255),w,b
  6163  011B22  0100               	movlb	0	; () banked
  6164  011B24  2163               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
  6165  011B26  6E21               	movwf	?_ringbuf_num+1,c
  6166                           
  6167                           ; BSR set to: 0
  6168                           ;My_ringbuf.c: 15: } else {
  6169                           
  6170                           ; BSR set to: 0
  6171  011B28  0012               	return	
  6172  011B2A                     l5035:
  6173                           
  6174                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
  6175  011B2A  EE20 F004          	lfsr	2,4
  6176  011B2E  5020               	movf	ringbuf_num@rb,w,c
  6177  011B30  26D9               	addwf	fsr2l,f,c
  6178  011B32  5021               	movf	ringbuf_num@rb+1,w,c
  6179  011B34  22DA               	addwfc	fsr2h,f,c
  6180  011B36  CFDE F060          	movff	postinc2,??_ringbuf_num
  6181  011B3A  CFDD F061          	movff	postdec2,??_ringbuf_num+1
  6182  011B3E  EE20 F002          	lfsr	2,2
  6183  011B42  5020               	movf	ringbuf_num@rb,w,c
  6184  011B44  26D9               	addwf	fsr2l,f,c
  6185  011B46  5021               	movf	ringbuf_num@rb+1,w,c
  6186  011B48  22DA               	addwfc	fsr2h,f,c
  6187  011B4A  CFDE F062          	movff	postinc2,??_ringbuf_num+2
  6188  011B4E  CFDD F063          	movff	postdec2,??_ringbuf_num+3
  6189  011B52  EE20 F006          	lfsr	2,6
  6190  011B56  5020               	movf	ringbuf_num@rb,w,c
  6191  011B58  26D9               	addwf	fsr2l,f,c
  6192  011B5A  5021               	movf	ringbuf_num@rb+1,w,c
  6193  011B5C  22DA               	addwfc	fsr2h,f,c
  6194  011B5E  CFDE F064          	movff	postinc2,??_ringbuf_num+4
  6195  011B62  CFDD F065          	movff	postdec2,??_ringbuf_num+5
  6196  011B66  0100               	movlb	0	; () banked
  6197  011B68  1F64               	comf	(??_ringbuf_num+4)& (0+255),f,b
  6198  011B6A  1F65               	comf	(??_ringbuf_num+5)& (0+255),f,b
  6199  011B6C  4B64               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
  6200  011B6E  2B65               	incf	(??_ringbuf_num+5)& (0+255),f,b
  6201  011B70  0100               	movlb	0	; () banked
  6202  011B72  5162               	movf	(??_ringbuf_num+2)& (0+255),w,b
  6203  011B74  0100               	movlb	0	; () banked
  6204  011B76  2764               	addwf	(??_ringbuf_num+4)& (0+255),f,b
  6205  011B78  0100               	movlb	0	; () banked
  6206  011B7A  5163               	movf	(??_ringbuf_num+3)& (0+255),w,b
  6207  011B7C  0100               	movlb	0	; () banked
  6208  011B7E  2365               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
  6209  011B80  0100               	movlb	0	; () banked
  6210  011B82  5160               	movf	??_ringbuf_num& (0+255),w,b
  6211  011B84  0100               	movlb	0	; () banked
  6212  011B86  2564               	addwf	(??_ringbuf_num+4)& (0+255),w,b
  6213  011B88  6E20               	movwf	?_ringbuf_num,c
  6214  011B8A  0100               	movlb	0	; () banked
  6215  011B8C  5161               	movf	(??_ringbuf_num+1)& (0+255),w,b
  6216  011B8E  0100               	movlb	0	; () banked
  6217  011B90  2165               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
  6218  011B92  6E21               	movwf	?_ringbuf_num+1,c
  6219                           
  6220                           ; BSR set to: 0
  6221  011B94  0012               	return	
  6222  011B96                     __end_of_ringbuf_num:
  6223                           	opt stack 0
  6224                           tblptru	equ	0xFF8
  6225                           tblptrh	equ	0xFF7
  6226                           tblptrl	equ	0xFF6
  6227                           tablat	equ	0xFF5
  6228                           prodh	equ	0xFF4
  6229                           prodl	equ	0xFF3
  6230                           intcon	equ	0xFF2
  6231                           indf0	equ	0xFEF
  6232                           postinc0	equ	0xFEE
  6233                           fsr0h	equ	0xFEA
  6234                           fsr0l	equ	0xFE9
  6235                           wreg	equ	0xFE8
  6236                           postinc1	equ	0xFE6
  6237                           postdec1	equ	0xFE5
  6238                           fsr1h	equ	0xFE2
  6239                           fsr1l	equ	0xFE1
  6240                           indf2	equ	0xFDF
  6241                           postinc2	equ	0xFDE
  6242                           postdec2	equ	0xFDD
  6243                           fsr2h	equ	0xFDA
  6244                           fsr2l	equ	0xFD9
  6245                           status	equ	0xFD8
  6246                           
  6247 ;; *************** function _main_init *****************
  6248 ;; Defined at:
  6249 ;;		line 285 in file "PIC18F27J53-killifish_light05.c"
  6250 ;; Parameters:    Size  Location     Type
  6251 ;;		None
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;		None
  6254 ;; Return value:  Size  Location     Type
  6255 ;;		None               void
  6256 ;; Registers used:
  6257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/0
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6267 ;;Total ram usage:        0 bytes
  6268 ;; Hardware stack levels used:    1
  6269 ;; Hardware stack levels required when called:    5
  6270 ;; This function calls:
  6271 ;;		_ADC_init
  6272 ;;		_OSC_init
  6273 ;;		_PWM_init
  6274 ;;		_RTCC_init
  6275 ;;		_UART_init
  6276 ;;		_ringbuf_init
  6277 ;;		_timer0_init
  6278 ;;		_timer1_init
  6279 ;;		_timer3_init
  6280 ;; This function is called by:
  6281 ;;		_main
  6282 ;; This function uses a non-reentrant model
  6283 ;;
  6284                           
  6285                           	psect	text20
  6286  01249A                     __ptext20:
  6287                           	opt stack 0
  6288  01249A                     _main_init:
  6289                           	opt stack 25
  6290                           
  6291                           ;PIC18F27J53-killifish_light05.c: 286: OSC_init();
  6292                           
  6293                           ; BSR set to: 0
  6294                           ;incstack = 0
  6295  01249A  EC26  F097         	call	_OSC_init	;wreg free
  6296                           
  6297                           ;PIC18F27J53-killifish_light05.c: 287: TRISA = 0b11100111;
  6298  01249E  0EE7               	movlw	231
  6299  0124A0  6E92               	movwf	3986,c	;volatile
  6300                           
  6301                           ;PIC18F27J53-killifish_light05.c: 288: TRISB = 0b00000000;
  6302  0124A2  0E00               	movlw	0
  6303  0124A4  6E93               	movwf	3987,c	;volatile
  6304                           
  6305                           ;PIC18F27J53-killifish_light05.c: 289: TRISC = 0b10111010;
  6306  0124A6  0EBA               	movlw	186
  6307  0124A8  6E94               	movwf	3988,c	;volatile
  6308                           
  6309                           ;PIC18F27J53-killifish_light05.c: 290: ANCON0 = 0b11111000;
  6310  0124AA  0EF8               	movlw	248
  6311  0124AC  010F               	movlb	15	; () banked
  6312  0124AE  6F48               	movwf	72,b	;volatile
  6313                           
  6314                           ; BSR set to: 15
  6315                           ;PIC18F27J53-killifish_light05.c: 291: ANCON1 = 0b00011111;
  6316  0124B0  0E1F               	movlw	31
  6317  0124B2  010F               	movlb	15	; () banked
  6318  0124B4  6F49               	movwf	73,b	;volatile
  6319                           
  6320                           ; BSR set to: 15
  6321                           ;PIC18F27J53-killifish_light05.c: 292: INTCON2bits.RBPU = 0;
  6322  0124B6  9EF1               	bcf	intcon2,7,c	;volatile
  6323                           
  6324                           ; BSR set to: 15
  6325                           ;PIC18F27J53-killifish_light05.c: 294: timer0_init(8);
  6326  0124B8  0E08               	movlw	8
  6327  0124BA  EC43  F096         	call	_timer0_init
  6328                           
  6329                           ;PIC18F27J53-killifish_light05.c: 295: timer1_init(0, 2);
  6330  0124BE  0E02               	movlw	2
  6331  0124C0  6E20               	movwf	timer1_init@clock_select,c
  6332  0124C2  0E00               	movlw	0
  6333  0124C4  ECE5  F095         	call	_timer1_init
  6334                           
  6335                           ;PIC18F27J53-killifish_light05.c: 296: timer3_init(2);
  6336  0124C8  0E02               	movlw	2
  6337  0124CA  ECAF  F096         	call	_timer3_init
  6338                           
  6339                           ;PIC18F27J53-killifish_light05.c: 297: ADC_init(0);
  6340  0124CE  0E00               	movlw	0
  6341  0124D0  ECF2  F096         	call	_ADC_init
  6342                           
  6343                           ;PIC18F27J53-killifish_light05.c: 298: RTCC_init();
  6344  0124D4  EC5B  F096         	call	_RTCC_init	;wreg free
  6345                           
  6346                           ;PIC18F27J53-killifish_light05.c: 299: PWM_init(250);
  6347  0124D8  0EFA               	movlw	250
  6348  0124DA  ECE9  F090         	call	_PWM_init
  6349                           
  6350                           ;PIC18F27J53-killifish_light05.c: 301: UART_init();
  6351  0124DE  ECD3  F096         	call	_UART_init	;wreg free
  6352                           
  6353                           ;PIC18F27J53-killifish_light05.c: 302: static uint8_t txbuf[1000];
  6354                           ;PIC18F27J53-killifish_light05.c: 303: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
  6355  0124E2  0ED9               	movlw	low _tx_buf
  6356  0124E4  0100               	movlb	0	; () banked
  6357  0124E6  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6358  0124E8  0E00               	movlw	high _tx_buf
  6359  0124EA  0100               	movlb	0	; () banked
  6360  0124EC  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6361  0124EE  0EFA               	movlw	low main_init@txbuf
  6362  0124F0  0100               	movlb	0	; () banked
  6363  0124F2  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6364  0124F4  0E02               	movlw	high main_init@txbuf
  6365  0124F6  0100               	movlb	0	; () banked
  6366  0124F8  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6367  0124FA  0E03               	movlw	3
  6368  0124FC  0100               	movlb	0	; () banked
  6369  0124FE  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6370  012500  0EE8               	movlw	232
  6371  012502  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6372  012504  EC96  F095         	call	_ringbuf_init	;wreg free
  6373                           
  6374                           ;PIC18F27J53-killifish_light05.c: 304: static uint8_t rxbuf[250];
  6375                           ;PIC18F27J53-killifish_light05.c: 305: ringbuf_init(&rx_buf, rxbuf, sizeof (rxbuf));
  6376  012508  0EF3               	movlw	low _rx_buf
  6377  01250A  0100               	movlb	0	; () banked
  6378  01250C  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6379  01250E  0E01               	movlw	high _rx_buf
  6380  012510  0100               	movlb	0	; () banked
  6381  012512  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6382  012514  0E00               	movlw	low main_init@rxbuf
  6383  012516  0100               	movlb	0	; () banked
  6384  012518  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6385  01251A  0E02               	movlw	high main_init@rxbuf
  6386  01251C  0100               	movlb	0	; () banked
  6387  01251E  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6388  012520  0E00               	movlw	0
  6389  012522  0100               	movlb	0	; () banked
  6390  012524  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6391  012526  0EFA               	movlw	250
  6392  012528  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6393  01252A  EC96  F095         	call	_ringbuf_init	;wreg free
  6394  01252E  0012               	return		;funcret
  6395  012530                     __end_of_main_init:
  6396                           	opt stack 0
  6397                           tblptru	equ	0xFF8
  6398                           tblptrh	equ	0xFF7
  6399                           tblptrl	equ	0xFF6
  6400                           tablat	equ	0xFF5
  6401                           prodh	equ	0xFF4
  6402                           prodl	equ	0xFF3
  6403                           intcon	equ	0xFF2
  6404                           intcon2	equ	0xFF1
  6405                           indf0	equ	0xFEF
  6406                           postinc0	equ	0xFEE
  6407                           fsr0h	equ	0xFEA
  6408                           fsr0l	equ	0xFE9
  6409                           wreg	equ	0xFE8
  6410                           postinc1	equ	0xFE6
  6411                           postdec1	equ	0xFE5
  6412                           fsr1h	equ	0xFE2
  6413                           fsr1l	equ	0xFE1
  6414                           indf2	equ	0xFDF
  6415                           postinc2	equ	0xFDE
  6416                           postdec2	equ	0xFDD
  6417                           fsr2h	equ	0xFDA
  6418                           fsr2l	equ	0xFD9
  6419                           status	equ	0xFD8
  6420                           
  6421 ;; *************** function _timer3_init *****************
  6422 ;; Defined at:
  6423 ;;		line 72 in file "../My_library/My_PIC.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;  prescaler       1    wreg     unsigned char 
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;  prescaler       1   32[COMRAM] unsigned char 
  6428 ;; Return value:  Size  Location     Type
  6429 ;;		None               void
  6430 ;; Registers used:
  6431 ;;		wreg, status,2, status,0
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6439 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6440 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6441 ;;Total ram usage:        2 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; Hardware stack levels required when called:    4
  6444 ;; This function calls:
  6445 ;;		Nothing
  6446 ;; This function is called by:
  6447 ;;		_main_init
  6448 ;; This function uses a non-reentrant model
  6449 ;;
  6450                           
  6451                           	psect	text21
  6452  012D5E                     __ptext21:
  6453                           	opt stack 0
  6454  012D5E                     _timer3_init:
  6455                           	opt stack 25
  6456                           
  6457                           ;incstack = 0
  6458                           ;timer3_init@prescaler stored from wreg
  6459  012D5E  6E21               	movwf	timer3_init@prescaler,c
  6460                           
  6461                           ;My_PIC.c: 73: T3CONbits.TMR3CS = 0;
  6462  012D60  0E3F               	movlw	-193
  6463  012D62  1679               	andwf	3961,f,c	;volatile
  6464                           
  6465                           ;My_PIC.c: 74: T3CONbits.T3OSCEN = 0;
  6466  012D64  9679               	bcf	3961,3,c	;volatile
  6467                           
  6468                           ;My_PIC.c: 75: T3CONbits.T3CKPS = prescaler;
  6469  012D66  C021  F020         	movff	timer3_init@prescaler,??_timer3_init
  6470  012D6A  3A20               	swapf	??_timer3_init,f,c
  6471  012D6C  5079               	movf	3961,w,c	;volatile
  6472  012D6E  1820               	xorwf	??_timer3_init,w,c
  6473  012D70  0BCF               	andlw	-49
  6474  012D72  1820               	xorwf	??_timer3_init,w,c
  6475  012D74  6E79               	movwf	3961,c	;volatile
  6476                           
  6477                           ;My_PIC.c: 76: T3CONbits.RD163 = 0;
  6478  012D76  9E79               	bcf	3961,7,c	;volatile
  6479                           
  6480                           ;My_PIC.c: 77: T3CONbits.TMR3ON = 1;
  6481  012D78  8079               	bsf	3961,0,c	;volatile
  6482                           
  6483                           ;My_PIC.c: 78: IPR2bits.TMR3IP = 0;
  6484  012D7A  92A2               	bcf	4002,1,c	;volatile
  6485                           
  6486                           ;My_PIC.c: 79: PIR2bits.TMR3IF = 0;
  6487  012D7C  92A1               	bcf	4001,1,c	;volatile
  6488                           
  6489                           ;My_PIC.c: 80: PIE2bits.TMR3IE = 1;
  6490  012D7E  82A0               	bsf	4000,1,c	;volatile
  6491                           
  6492                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  6493  012D80  8CF2               	bsf	intcon,6,c	;volatile
  6494  012D82  0012               	return		;funcret
  6495  012D84                     __end_of_timer3_init:
  6496                           	opt stack 0
  6497                           tblptru	equ	0xFF8
  6498                           tblptrh	equ	0xFF7
  6499                           tblptrl	equ	0xFF6
  6500                           tablat	equ	0xFF5
  6501                           prodh	equ	0xFF4
  6502                           prodl	equ	0xFF3
  6503                           intcon	equ	0xFF2
  6504                           intcon2	equ	0xFF1
  6505                           indf0	equ	0xFEF
  6506                           postinc0	equ	0xFEE
  6507                           fsr0h	equ	0xFEA
  6508                           fsr0l	equ	0xFE9
  6509                           wreg	equ	0xFE8
  6510                           postinc1	equ	0xFE6
  6511                           postdec1	equ	0xFE5
  6512                           fsr1h	equ	0xFE2
  6513                           fsr1l	equ	0xFE1
  6514                           indf2	equ	0xFDF
  6515                           postinc2	equ	0xFDE
  6516                           postdec2	equ	0xFDD
  6517                           fsr2h	equ	0xFDA
  6518                           fsr2l	equ	0xFD9
  6519                           status	equ	0xFD8
  6520                           
  6521 ;; *************** function _timer1_init *****************
  6522 ;; Defined at:
  6523 ;;		line 41 in file "../My_library/My_PIC.c"
  6524 ;; Parameters:    Size  Location     Type
  6525 ;;  prescaler       1    wreg     unsigned char 
  6526 ;;  clock_select    1   31[COMRAM] unsigned char 
  6527 ;; Auto vars:     Size  Location     Type
  6528 ;;  prescaler       1   33[COMRAM] unsigned char 
  6529 ;; Return value:  Size  Location     Type
  6530 ;;		None               void
  6531 ;; Registers used:
  6532 ;;		wreg, status,2, status,0
  6533 ;; Tracked objects:
  6534 ;;		On entry : 0/0
  6535 ;;		On exit  : 0/0
  6536 ;;		Unchanged: 0/0
  6537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6538 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6539 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6540 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6541 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6542 ;;Total ram usage:        3 bytes
  6543 ;; Hardware stack levels used:    1
  6544 ;; Hardware stack levels required when called:    4
  6545 ;; This function calls:
  6546 ;;		Nothing
  6547 ;; This function is called by:
  6548 ;;		_main_init
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552                           	psect	text22
  6553  012BCA                     __ptext22:
  6554                           	opt stack 0
  6555  012BCA                     _timer1_init:
  6556                           	opt stack 25
  6557                           
  6558                           ;incstack = 0
  6559                           ;timer1_init@prescaler stored from wreg
  6560  012BCA  6E22               	movwf	timer1_init@prescaler,c
  6561                           
  6562                           ;My_PIC.c: 42: T1CONbits.TMR1CS = clock_select;
  6563  012BCC  C020  F021         	movff	timer1_init@clock_select,??_timer1_init
  6564  012BD0  3A21               	swapf	??_timer1_init,f,c
  6565  012BD2  4621               	rlncf	??_timer1_init,f,c
  6566  012BD4  4621               	rlncf	??_timer1_init,f,c
  6567  012BD6  50CD               	movf	4045,w,c	;volatile
  6568  012BD8  1821               	xorwf	??_timer1_init,w,c
  6569  012BDA  0B3F               	andlw	-193
  6570  012BDC  1821               	xorwf	??_timer1_init,w,c
  6571  012BDE  6ECD               	movwf	4045,c	;volatile
  6572                           
  6573                           ;My_PIC.c: 43: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  6574  012BE0  0E02               	movlw	2
  6575  012BE2  1820               	xorwf	timer1_init@clock_select,w,c
  6576  012BE4  A4D8               	btfss	status,2,c
  6577  012BE6  D002               	goto	l158
  6578  012BE8  86CD               	bsf	4045,3,c	;volatile
  6579  012BEA  D001               	goto	l4115
  6580  012BEC                     l158:
  6581                           
  6582                           ;My_PIC.c: 44: else T1CONbits.T1OSCEN = 0;
  6583  012BEC  96CD               	bcf	4045,3,c	;volatile
  6584  012BEE                     l4115:
  6585                           
  6586                           ;My_PIC.c: 45: T1CONbits.T1CKPS = prescaler;
  6587  012BEE  C022  F021         	movff	timer1_init@prescaler,??_timer1_init
  6588  012BF2  3A21               	swapf	??_timer1_init,f,c
  6589  012BF4  50CD               	movf	4045,w,c	;volatile
  6590  012BF6  1821               	xorwf	??_timer1_init,w,c
  6591  012BF8  0BCF               	andlw	-49
  6592  012BFA  1821               	xorwf	??_timer1_init,w,c
  6593  012BFC  6ECD               	movwf	4045,c	;volatile
  6594                           
  6595                           ;My_PIC.c: 46: T1CONbits.nT1SYNC = 1;
  6596  012BFE  84CD               	bsf	4045,2,c	;volatile
  6597                           
  6598                           ;My_PIC.c: 47: T1CONbits.RD16 = 0;
  6599  012C00  92CD               	bcf	4045,1,c	;volatile
  6600                           
  6601                           ;My_PIC.c: 48: T1CONbits.TMR1ON = 1;
  6602  012C02  80CD               	bsf	4045,0,c	;volatile
  6603                           
  6604                           ;My_PIC.c: 49: IPR1bits.TMR1IP = 0;
  6605  012C04  909F               	bcf	3999,0,c	;volatile
  6606                           
  6607                           ;My_PIC.c: 50: PIR1bits.TMR1IF = 0;
  6608  012C06  909E               	bcf	3998,0,c	;volatile
  6609                           
  6610                           ;My_PIC.c: 51: PIE1bits.TMR1IE = 1;
  6611  012C08  809D               	bsf	3997,0,c	;volatile
  6612                           
  6613                           ;My_PIC.c: 52: INTCONbits.PEIE = 1;
  6614  012C0A  8CF2               	bsf	intcon,6,c	;volatile
  6615  012C0C  0012               	return		;funcret
  6616  012C0E                     __end_of_timer1_init:
  6617                           	opt stack 0
  6618                           tblptru	equ	0xFF8
  6619                           tblptrh	equ	0xFF7
  6620                           tblptrl	equ	0xFF6
  6621                           tablat	equ	0xFF5
  6622                           prodh	equ	0xFF4
  6623                           prodl	equ	0xFF3
  6624                           intcon	equ	0xFF2
  6625                           intcon2	equ	0xFF1
  6626                           indf0	equ	0xFEF
  6627                           postinc0	equ	0xFEE
  6628                           fsr0h	equ	0xFEA
  6629                           fsr0l	equ	0xFE9
  6630                           wreg	equ	0xFE8
  6631                           postinc1	equ	0xFE6
  6632                           postdec1	equ	0xFE5
  6633                           fsr1h	equ	0xFE2
  6634                           fsr1l	equ	0xFE1
  6635                           indf2	equ	0xFDF
  6636                           postinc2	equ	0xFDE
  6637                           postdec2	equ	0xFDD
  6638                           fsr2h	equ	0xFDA
  6639                           fsr2l	equ	0xFD9
  6640                           status	equ	0xFD8
  6641                           
  6642 ;; *************** function _timer0_init *****************
  6643 ;; Defined at:
  6644 ;;		line 6 in file "../My_library/My_PIC.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;  prescaler       1    wreg     unsigned char 
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;  prescaler       1   32[COMRAM] unsigned char 
  6649 ;; Return value:  Size  Location     Type
  6650 ;;		None               void
  6651 ;; Registers used:
  6652 ;;		wreg, status,2, status,0
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6659 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6660 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6661 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6662 ;;Total ram usage:        2 bytes
  6663 ;; Hardware stack levels used:    1
  6664 ;; Hardware stack levels required when called:    4
  6665 ;; This function calls:
  6666 ;;		Nothing
  6667 ;; This function is called by:
  6668 ;;		_main_init
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           	psect	text23
  6673  012C86                     __ptext23:
  6674                           	opt stack 0
  6675  012C86                     _timer0_init:
  6676                           	opt stack 25
  6677                           
  6678                           ;incstack = 0
  6679                           ;timer0_init@prescaler stored from wreg
  6680  012C86  6E21               	movwf	timer0_init@prescaler,c
  6681                           
  6682                           ;My_PIC.c: 7: T0CONbits.TMR0ON = 1;
  6683  012C88  8ED5               	bsf	4053,7,c	;volatile
  6684                           
  6685                           ;My_PIC.c: 8: T0CONbits.T08BIT = 1;
  6686  012C8A  8CD5               	bsf	4053,6,c	;volatile
  6687                           
  6688                           ;My_PIC.c: 9: T0CONbits.T0CS = 0;
  6689  012C8C  9AD5               	bcf	4053,5,c	;volatile
  6690                           
  6691                           ;My_PIC.c: 10: if (prescaler == 0) {
  6692  012C8E  5021               	movf	timer0_init@prescaler,w,c
  6693  012C90  A4D8               	btfss	status,2,c
  6694  012C92  D002               	goto	l153
  6695                           
  6696                           ;My_PIC.c: 11: T0CONbits.PSA = 1;
  6697  012C94  86D5               	bsf	4053,3,c	;volatile
  6698                           
  6699                           ;My_PIC.c: 12: } else {
  6700  012C96  D00A               	goto	l4103
  6701  012C98                     l153:
  6702                           
  6703                           ;My_PIC.c: 13: T0CONbits.PSA = 0;
  6704  012C98  96D5               	bcf	4053,3,c	;volatile
  6705                           
  6706                           ;My_PIC.c: 14: T0CONbits.T0PS = prescaler - 1;
  6707  012C9A  C021  F020         	movff	timer0_init@prescaler,??_timer0_init
  6708  012C9E  0EFF               	movlw	255
  6709  012CA0  2620               	addwf	??_timer0_init,f,c
  6710  012CA2  50D5               	movf	4053,w,c	;volatile
  6711  012CA4  1820               	xorwf	??_timer0_init,w,c
  6712  012CA6  0BF8               	andlw	-8
  6713  012CA8  1820               	xorwf	??_timer0_init,w,c
  6714  012CAA  6ED5               	movwf	4053,c	;volatile
  6715  012CAC                     l4103:
  6716                           
  6717                           ;My_PIC.c: 15: }
  6718                           ;My_PIC.c: 16: INTCONbits.T0IE = 1;
  6719  012CAC  8AF2               	bsf	intcon,5,c	;volatile
  6720                           
  6721                           ;My_PIC.c: 17: INTCONbits.TMR0IF = 0;
  6722  012CAE  94F2               	bcf	intcon,2,c	;volatile
  6723                           
  6724                           ;My_PIC.c: 18: INTCON2bits.TMR0IP = 0;
  6725  012CB0  94F1               	bcf	intcon2,2,c	;volatile
  6726                           
  6727                           ;My_PIC.c: 19: INTCONbits.PEIE = 1;
  6728  012CB2  8CF2               	bsf	intcon,6,c	;volatile
  6729  012CB4  0012               	return		;funcret
  6730  012CB6                     __end_of_timer0_init:
  6731                           	opt stack 0
  6732                           tblptru	equ	0xFF8
  6733                           tblptrh	equ	0xFF7
  6734                           tblptrl	equ	0xFF6
  6735                           tablat	equ	0xFF5
  6736                           prodh	equ	0xFF4
  6737                           prodl	equ	0xFF3
  6738                           intcon	equ	0xFF2
  6739                           intcon2	equ	0xFF1
  6740                           indf0	equ	0xFEF
  6741                           postinc0	equ	0xFEE
  6742                           fsr0h	equ	0xFEA
  6743                           fsr0l	equ	0xFE9
  6744                           wreg	equ	0xFE8
  6745                           postinc1	equ	0xFE6
  6746                           postdec1	equ	0xFE5
  6747                           fsr1h	equ	0xFE2
  6748                           fsr1l	equ	0xFE1
  6749                           indf2	equ	0xFDF
  6750                           postinc2	equ	0xFDE
  6751                           postdec2	equ	0xFDD
  6752                           fsr2h	equ	0xFDA
  6753                           fsr2l	equ	0xFD9
  6754                           status	equ	0xFD8
  6755                           
  6756 ;; *************** function _ringbuf_init *****************
  6757 ;; Defined at:
  6758 ;;		line 5 in file "../My_library/My_ringbuf.c"
  6759 ;; Parameters:    Size  Location     Type
  6760 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  6761 ;;		 -> terminal_loop@command(8), rx_buf(8), tx_buf(8), 
  6762 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  6763 ;;		 -> main_init@rxbuf(250), main_init@txbuf(1000), terminal_loop@buf(100), 
  6764 ;;  bufsize         2    4[BANK0 ] unsigned int 
  6765 ;; Auto vars:     Size  Location     Type
  6766 ;;		None
  6767 ;; Return value:  Size  Location     Type
  6768 ;;		None               void
  6769 ;; Registers used:
  6770 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6771 ;; Tracked objects:
  6772 ;;		On entry : 0/0
  6773 ;;		On exit  : 0/0
  6774 ;;		Unchanged: 0/0
  6775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6776 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6779 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6780 ;;Total ram usage:        6 bytes
  6781 ;; Hardware stack levels used:    1
  6782 ;; Hardware stack levels required when called:    4
  6783 ;; This function calls:
  6784 ;;		Nothing
  6785 ;; This function is called by:
  6786 ;;		_terminal_loop
  6787 ;;		_main_init
  6788 ;; This function uses a non-reentrant model
  6789 ;;
  6790                           
  6791                           	psect	text24
  6792  012B2C                     __ptext24:
  6793                           	opt stack 0
  6794  012B2C                     _ringbuf_init:
  6795                           	opt stack 25
  6796                           
  6797                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  6798                           
  6799                           ;incstack = 0
  6800  012B2C  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  6801  012B30  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  6802  012B34  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  6803  012B38  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  6804                           
  6805                           ;My_ringbuf.c: 7: rb->size = bufsize;
  6806  012B3C  0100               	movlb	0	; () banked
  6807  012B3E  EE20 F002          	lfsr	2,2
  6808  012B42  5160               	movf	ringbuf_init@rb& (0+255),w,b
  6809  012B44  26D9               	addwf	fsr2l,f,c
  6810  012B46  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  6811  012B48  22DA               	addwfc	fsr2h,f,c
  6812  012B4A  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  6813  012B4E  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  6814                           
  6815                           ; BSR set to: 0
  6816                           ;My_ringbuf.c: 8: rb->head = 0;
  6817  012B52  0100               	movlb	0	; () banked
  6818  012B54  EE20 F004          	lfsr	2,4
  6819  012B58  5160               	movf	ringbuf_init@rb& (0+255),w,b
  6820  012B5A  26D9               	addwf	fsr2l,f,c
  6821  012B5C  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  6822  012B5E  22DA               	addwfc	fsr2h,f,c
  6823  012B60  0E00               	movlw	0
  6824  012B62  6EDE               	movwf	postinc2,c
  6825  012B64  0E00               	movlw	0
  6826  012B66  6EDD               	movwf	postdec2,c
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;My_ringbuf.c: 9: rb->tail = 0;
  6830  012B68  0100               	movlb	0	; () banked
  6831  012B6A  EE20 F006          	lfsr	2,6
  6832  012B6E  5160               	movf	ringbuf_init@rb& (0+255),w,b
  6833  012B70  26D9               	addwf	fsr2l,f,c
  6834  012B72  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  6835  012B74  22DA               	addwfc	fsr2h,f,c
  6836  012B76  0E00               	movlw	0
  6837  012B78  6EDE               	movwf	postinc2,c
  6838  012B7A  0E00               	movlw	0
  6839  012B7C  6EDD               	movwf	postdec2,c
  6840                           
  6841                           ; BSR set to: 0
  6842  012B7E  0012               	return		;funcret
  6843  012B80                     __end_of_ringbuf_init:
  6844                           	opt stack 0
  6845                           tblptru	equ	0xFF8
  6846                           tblptrh	equ	0xFF7
  6847                           tblptrl	equ	0xFF6
  6848                           tablat	equ	0xFF5
  6849                           prodh	equ	0xFF4
  6850                           prodl	equ	0xFF3
  6851                           intcon	equ	0xFF2
  6852                           intcon2	equ	0xFF1
  6853                           indf0	equ	0xFEF
  6854                           postinc0	equ	0xFEE
  6855                           fsr0h	equ	0xFEA
  6856                           fsr0l	equ	0xFE9
  6857                           wreg	equ	0xFE8
  6858                           postinc1	equ	0xFE6
  6859                           postdec1	equ	0xFE5
  6860                           fsr1h	equ	0xFE2
  6861                           fsr1l	equ	0xFE1
  6862                           indf2	equ	0xFDF
  6863                           postinc2	equ	0xFDE
  6864                           postdec2	equ	0xFDD
  6865                           fsr2h	equ	0xFDA
  6866                           fsr2l	equ	0xFD9
  6867                           status	equ	0xFD8
  6868                           
  6869 ;; *************** function _UART_init *****************
  6870 ;; Defined at:
  6871 ;;		line 174 in file "../My_library/My_PIC.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;		None
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;		None
  6876 ;; Return value:  Size  Location     Type
  6877 ;;		None               void
  6878 ;; Registers used:
  6879 ;;		wreg, status,2
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6889 ;;Total ram usage:        0 bytes
  6890 ;; Hardware stack levels used:    1
  6891 ;; Hardware stack levels required when called:    4
  6892 ;; This function calls:
  6893 ;;		Nothing
  6894 ;; This function is called by:
  6895 ;;		_main_init
  6896 ;; This function uses a non-reentrant model
  6897 ;;
  6898                           
  6899                           	psect	text25
  6900  012DA6                     __ptext25:
  6901                           	opt stack 0
  6902  012DA6                     _UART_init:
  6903                           	opt stack 25
  6904                           
  6905                           ;My_PIC.c: 175: TXSTA1bits.TX9 = 0;
  6906                           
  6907                           ; BSR set to: 0
  6908                           ;incstack = 0
  6909  012DA6  9CAD               	bcf	4013,6,c	;volatile
  6910                           
  6911                           ;My_PIC.c: 176: TXSTA1bits.TXEN = 1;
  6912  012DA8  8AAD               	bsf	4013,5,c	;volatile
  6913                           
  6914                           ;My_PIC.c: 177: TXSTA1bits.SYNC = 0;
  6915  012DAA  98AD               	bcf	4013,4,c	;volatile
  6916                           
  6917                           ;My_PIC.c: 178: TXSTA1bits.BRGH = 0;
  6918  012DAC  94AD               	bcf	4013,2,c	;volatile
  6919                           
  6920                           ;My_PIC.c: 179: RCSTA1bits.SPEN = 1;
  6921  012DAE  8EAC               	bsf	4012,7,c	;volatile
  6922                           
  6923                           ;My_PIC.c: 180: RCSTA1bits.RX9 = 0;
  6924  012DB0  9CAC               	bcf	4012,6,c	;volatile
  6925                           
  6926                           ;My_PIC.c: 181: RCSTA1bits.CREN = 1;
  6927  012DB2  88AC               	bsf	4012,4,c	;volatile
  6928                           
  6929                           ;My_PIC.c: 182: BAUDCON1bits.BRG16 = 0;
  6930  012DB4  967E               	bcf	3966,3,c	;volatile
  6931                           
  6932                           ;My_PIC.c: 183: SPBRG1 = 48000000 / 64 / 9600 - 1;
  6933  012DB6  0E4D               	movlw	77
  6934  012DB8  6EB0               	movwf	4016,c	;volatile
  6935                           
  6936                           ;My_PIC.c: 184: SPBRGH1 = 0;
  6937  012DBA  0E00               	movlw	0
  6938  012DBC  6E7F               	movwf	3967,c	;volatile
  6939                           
  6940                           ;My_PIC.c: 185: IPR1bits.RC1IP = 0;
  6941  012DBE  9A9F               	bcf	3999,5,c	;volatile
  6942                           
  6943                           ;My_PIC.c: 186: PIE1bits.RCIE = 1;
  6944  012DC0  8A9D               	bsf	3997,5,c	;volatile
  6945                           
  6946                           ;My_PIC.c: 187: INTCONbits.PEIE = 1;
  6947  012DC2  8CF2               	bsf	intcon,6,c	;volatile
  6948  012DC4  0012               	return		;funcret
  6949  012DC6                     __end_of_UART_init:
  6950                           	opt stack 0
  6951                           tblptru	equ	0xFF8
  6952                           tblptrh	equ	0xFF7
  6953                           tblptrl	equ	0xFF6
  6954                           tablat	equ	0xFF5
  6955                           prodh	equ	0xFF4
  6956                           prodl	equ	0xFF3
  6957                           intcon	equ	0xFF2
  6958                           intcon2	equ	0xFF1
  6959                           indf0	equ	0xFEF
  6960                           postinc0	equ	0xFEE
  6961                           fsr0h	equ	0xFEA
  6962                           fsr0l	equ	0xFE9
  6963                           wreg	equ	0xFE8
  6964                           postinc1	equ	0xFE6
  6965                           postdec1	equ	0xFE5
  6966                           fsr1h	equ	0xFE2
  6967                           fsr1l	equ	0xFE1
  6968                           indf2	equ	0xFDF
  6969                           postinc2	equ	0xFDE
  6970                           postdec2	equ	0xFDD
  6971                           fsr2h	equ	0xFDA
  6972                           fsr2l	equ	0xFD9
  6973                           status	equ	0xFD8
  6974                           
  6975 ;; *************** function _RTCC_init *****************
  6976 ;; Defined at:
  6977 ;;		line 22 in file "../My_library/My_RTCC.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;		None
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;		None
  6982 ;; Return value:  Size  Location     Type
  6983 ;;		None               void
  6984 ;; Registers used:
  6985 ;;		wreg, status,2
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6995 ;;Total ram usage:        0 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; Hardware stack levels required when called:    4
  6998 ;; This function calls:
  6999 ;;		Nothing
  7000 ;; This function is called by:
  7001 ;;		_main_init
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005                           	psect	text26
  7006  012CB6                     __ptext26:
  7007                           	opt stack 0
  7008  012CB6                     _RTCC_init:
  7009                           	opt stack 25
  7010                           
  7011                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
  7012                           
  7013                           ;incstack = 0
  7014  012CB6  010F               	movlb	15	; () banked
  7015  012CB8  8B3F               	bsf	63,5,b	;volatile
  7016                           
  7017                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
  7018  012CBA  010F               	movlb	15	; () banked
  7019  012CBC  BB3F               	btfsc	63,5,b	;volatile
  7020  012CBE  D006               	goto	l4233
  7021                           
  7022                           ; BSR set to: 15
  7023                           ;My_RTCC.c: 25: EECON2 = 0x55;
  7024  012CC0  0E55               	movlw	85
  7025  012CC2  6EA7               	movwf	4007,c	;volatile
  7026                           
  7027                           ;My_RTCC.c: 26: EECON2 = 0xAA;
  7028  012CC4  0EAA               	movlw	170
  7029  012CC6  6EA7               	movwf	4007,c	;volatile
  7030                           
  7031                           ; BSR set to: 15
  7032                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
  7033  012CC8  010F               	movlb	15	; () banked
  7034  012CCA  8B3F               	bsf	63,5,b	;volatile
  7035  012CCC                     l4233:
  7036                           
  7037                           ; BSR set to: 15
  7038                           ;My_RTCC.c: 28: }
  7039                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
  7040  012CCC  010F               	movlb	15	; () banked
  7041  012CCE  8F3F               	bsf	63,7,b	;volatile
  7042                           
  7043                           ; BSR set to: 15
  7044                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
  7045  012CD0  010F               	movlb	15	; () banked
  7046  012CD2  953F               	bcf	63,2,b	;volatile
  7047                           
  7048                           ; BSR set to: 15
  7049                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
  7050  012CD4  010F               	movlb	15	; () banked
  7051  012CD6  833C               	bsf	60,1,b	;volatile
  7052                           
  7053                           ; BSR set to: 15
  7054                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
  7055  012CD8  010F               	movlb	15	; () banked
  7056  012CDA  853C               	bsf	60,2,b	;volatile
  7057                           
  7058                           ;My_RTCC.c: 33: RTCCAL = 0x00;
  7059  012CDC  0E00               	movlw	0
  7060  012CDE  010F               	movlb	15	; () banked
  7061  012CE0  6F3E               	movwf	62,b	;volatile
  7062                           
  7063                           ; BSR set to: 15
  7064                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
  7065  012CE2  86CD               	bsf	4045,3,c	;volatile
  7066                           
  7067                           ; BSR set to: 15
  7068  012CE4  0012               	return		;funcret
  7069  012CE6                     __end_of_RTCC_init:
  7070                           	opt stack 0
  7071                           tblptru	equ	0xFF8
  7072                           tblptrh	equ	0xFF7
  7073                           tblptrl	equ	0xFF6
  7074                           tablat	equ	0xFF5
  7075                           prodh	equ	0xFF4
  7076                           prodl	equ	0xFF3
  7077                           intcon	equ	0xFF2
  7078                           intcon2	equ	0xFF1
  7079                           indf0	equ	0xFEF
  7080                           postinc0	equ	0xFEE
  7081                           fsr0h	equ	0xFEA
  7082                           fsr0l	equ	0xFE9
  7083                           wreg	equ	0xFE8
  7084                           postinc1	equ	0xFE6
  7085                           postdec1	equ	0xFE5
  7086                           fsr1h	equ	0xFE2
  7087                           fsr1l	equ	0xFE1
  7088                           indf2	equ	0xFDF
  7089                           postinc2	equ	0xFDE
  7090                           postdec2	equ	0xFDD
  7091                           fsr2h	equ	0xFDA
  7092                           fsr2l	equ	0xFD9
  7093                           status	equ	0xFD8
  7094                           
  7095 ;; *************** function _PWM_init *****************
  7096 ;; Defined at:
  7097 ;;		line 78 in file "PIC18F27J53-killifish_light05.c"
  7098 ;; Parameters:    Size  Location     Type
  7099 ;;  PR              1    wreg     unsigned char 
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;  PR              1   31[COMRAM] unsigned char 
  7102 ;; Return value:  Size  Location     Type
  7103 ;;		None               void
  7104 ;; Registers used:
  7105 ;;		wreg, status,2, status,0
  7106 ;; Tracked objects:
  7107 ;;		On entry : 0/0
  7108 ;;		On exit  : 0/0
  7109 ;;		Unchanged: 0/0
  7110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7112 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7114 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7115 ;;Total ram usage:        1 bytes
  7116 ;; Hardware stack levels used:    1
  7117 ;; Hardware stack levels required when called:    4
  7118 ;; This function calls:
  7119 ;;		Nothing
  7120 ;; This function is called by:
  7121 ;;		_main_init
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           	psect	text27
  7126  0121D2                     __ptext27:
  7127                           	opt stack 0
  7128  0121D2                     _PWM_init:
  7129                           	opt stack 25
  7130                           
  7131                           ; BSR set to: 15
  7132                           ;incstack = 0
  7133                           ;PWM_init@PR stored from wreg
  7134  0121D2  6E20               	movwf	PWM_init@PR,c
  7135                           
  7136                           ;PIC18F27J53-killifish_light05.c: 79: PPSCONbits.IOLOCK = 0;
  7137  0121D4  010E               	movlb	14	; () banked
  7138  0121D6  91BF               	bcf	191,0,b	;volatile
  7139                           
  7140                           ;PIC18F27J53-killifish_light05.c: 80: if (PPSCONbits.IOLOCK != 0) {
  7141  0121D8  010E               	movlb	14	; () banked
  7142  0121DA  A1BF               	btfss	191,0,b	;volatile
  7143  0121DC  D006               	goto	l783
  7144                           
  7145                           ; BSR set to: 14
  7146                           ;PIC18F27J53-killifish_light05.c: 81: EECON2 = 0x55;
  7147  0121DE  0E55               	movlw	85
  7148  0121E0  6EA7               	movwf	4007,c	;volatile
  7149                           
  7150                           ;PIC18F27J53-killifish_light05.c: 82: EECON2 = 0xAA;
  7151  0121E2  0EAA               	movlw	170
  7152  0121E4  6EA7               	movwf	4007,c	;volatile
  7153                           
  7154                           ; BSR set to: 14
  7155                           ;PIC18F27J53-killifish_light05.c: 83: PPSCONbits.IOLOCK = 0;
  7156  0121E6  010E               	movlb	14	; () banked
  7157  0121E8  91BF               	bcf	191,0,b	;volatile
  7158  0121EA                     l783:
  7159                           
  7160                           ; BSR set to: 14
  7161                           ;PIC18F27J53-killifish_light05.c: 84: }
  7162                           ;PIC18F27J53-killifish_light05.c: 86: RPOR3 = 14;
  7163  0121EA  0E0E               	movlw	14
  7164  0121EC  010E               	movlb	14	; () banked
  7165  0121EE  6FC3               	movwf	195,b	;volatile
  7166                           
  7167                           ;PIC18F27J53-killifish_light05.c: 87: RPOR4 = 18;
  7168  0121F0  0E12               	movlw	18
  7169  0121F2  010E               	movlb	14	; () banked
  7170  0121F4  6FC4               	movwf	196,b	;volatile
  7171                           
  7172                           ;PIC18F27J53-killifish_light05.c: 88: RPOR5 = 22;
  7173  0121F6  0E16               	movlw	22
  7174  0121F8  010E               	movlb	14	; () banked
  7175  0121FA  6FC5               	movwf	197,b	;volatile
  7176                           
  7177                           ; BSR set to: 14
  7178                           ;PIC18F27J53-killifish_light05.c: 90: CCP1CONbits.CCP1M = 12;
  7179  0121FC  50BA               	movf	4026,w,c	;volatile
  7180  0121FE  0BF0               	andlw	-16
  7181  012200  090C               	iorlw	12
  7182  012202  6EBA               	movwf	4026,c	;volatile
  7183                           
  7184                           ; BSR set to: 14
  7185                           ;PIC18F27J53-killifish_light05.c: 91: CCP1CONbits.P1M = 0;
  7186  012204  0E3F               	movlw	-193
  7187  012206  16BA               	andwf	4026,f,c	;volatile
  7188                           
  7189                           ; BSR set to: 14
  7190                           ;PIC18F27J53-killifish_light05.c: 92: CCPTMRS0bits.C1TSEL = 0;
  7191  012208  010F               	movlb	15	; () banked
  7192  01220A  9152               	bcf	82,0,b	;volatile
  7193  01220C  9352               	bcf	82,1,b	;volatile
  7194  01220E  9552               	bcf	82,2,b	;volatile
  7195                           
  7196                           ; BSR set to: 15
  7197                           ;PIC18F27J53-killifish_light05.c: 93: CCPR1Lbits.CCPR1L = 0;
  7198  012210  0E00               	movlw	0
  7199  012212  6EBB               	movwf	4027,c	;volatile
  7200                           
  7201                           ; BSR set to: 15
  7202                           ;PIC18F27J53-killifish_light05.c: 94: CCP1CONbits.DC1B = 0;
  7203  012214  0ECF               	movlw	-49
  7204  012216  16BA               	andwf	4026,f,c	;volatile
  7205                           
  7206                           ; BSR set to: 15
  7207                           ;PIC18F27J53-killifish_light05.c: 96: CCP2CONbits.CCP2M = 12;
  7208  012218  50B4               	movf	4020,w,c	;volatile
  7209  01221A  0BF0               	andlw	-16
  7210  01221C  090C               	iorlw	12
  7211  01221E  6EB4               	movwf	4020,c	;volatile
  7212                           
  7213                           ; BSR set to: 15
  7214                           ;PIC18F27J53-killifish_light05.c: 97: CCP2CONbits.P2M = 0;
  7215  012220  0E3F               	movlw	-193
  7216  012222  16B4               	andwf	4020,f,c	;volatile
  7217                           
  7218                           ; BSR set to: 15
  7219                           ;PIC18F27J53-killifish_light05.c: 98: CCPTMRS0bits.C2TSEL = 0;
  7220  012224  010F               	movlb	15	; () banked
  7221  012226  9752               	bcf	82,3,b	;volatile
  7222  012228  9952               	bcf	82,4,b	;volatile
  7223  01222A  9B52               	bcf	82,5,b	;volatile
  7224                           
  7225                           ; BSR set to: 15
  7226                           ;PIC18F27J53-killifish_light05.c: 99: CCPR2Lbits.CCPR2L = 0;
  7227  01222C  0E00               	movlw	0
  7228  01222E  6EB5               	movwf	4021,c	;volatile
  7229                           
  7230                           ; BSR set to: 15
  7231                           ;PIC18F27J53-killifish_light05.c: 100: CCP2CONbits.DC2B = 0;
  7232  012230  0ECF               	movlw	-49
  7233  012232  16B4               	andwf	4020,f,c	;volatile
  7234                           
  7235                           ; BSR set to: 15
  7236                           ;PIC18F27J53-killifish_light05.c: 102: CCP3CONbits.CCP3M = 12;
  7237  012234  010F               	movlb	15	; () banked
  7238  012236  5115               	movf	21,w,b	;volatile
  7239  012238  0BF0               	andlw	-16
  7240  01223A  090C               	iorlw	12
  7241  01223C  6F15               	movwf	21,b	;volatile
  7242                           
  7243                           ; BSR set to: 15
  7244                           ;PIC18F27J53-killifish_light05.c: 103: CCP3CONbits.P3M = 0;
  7245  01223E  0E3F               	movlw	-193
  7246  012240  010F               	movlb	15	; () banked
  7247  012242  1715               	andwf	21,f,b	;volatile
  7248                           
  7249                           ; BSR set to: 15
  7250                           ;PIC18F27J53-killifish_light05.c: 104: CCPTMRS0bits.C3TSEL = 0;
  7251  012244  0E3F               	movlw	-193
  7252  012246  010F               	movlb	15	; () banked
  7253  012248  1752               	andwf	82,f,b	;volatile
  7254                           
  7255                           ; BSR set to: 15
  7256                           ;PIC18F27J53-killifish_light05.c: 105: CCPR3Lbits.CCPR3L = 0;
  7257  01224A  0E00               	movlw	0
  7258  01224C  010F               	movlb	15	; () banked
  7259  01224E  6F16               	movwf	22,b	;volatile
  7260                           
  7261                           ; BSR set to: 15
  7262                           ;PIC18F27J53-killifish_light05.c: 106: CCP3CONbits.DC3B = 0;
  7263  012250  0ECF               	movlw	-49
  7264  012252  010F               	movlb	15	; () banked
  7265  012254  1715               	andwf	21,f,b	;volatile
  7266                           
  7267                           ; BSR set to: 15
  7268                           ;PIC18F27J53-killifish_light05.c: 108: CCP4CONbits.CCP4M = 12;
  7269  012256  010F               	movlb	15	; () banked
  7270  012258  5112               	movf	18,w,b	;volatile
  7271  01225A  0BF0               	andlw	-16
  7272  01225C  090C               	iorlw	12
  7273  01225E  6F12               	movwf	18,b	;volatile
  7274                           
  7275                           ; BSR set to: 15
  7276                           ;PIC18F27J53-killifish_light05.c: 109: CCPTMRS1bits.C4TSEL = 0;
  7277  012260  0EFC               	movlw	-4
  7278  012262  010F               	movlb	15	; () banked
  7279  012264  1751               	andwf	81,f,b	;volatile
  7280                           
  7281                           ; BSR set to: 15
  7282                           ;PIC18F27J53-killifish_light05.c: 110: CCPR4Lbits.CCPR4L = 0;
  7283  012266  0E00               	movlw	0
  7284  012268  010F               	movlb	15	; () banked
  7285  01226A  6F13               	movwf	19,b	;volatile
  7286                           
  7287                           ; BSR set to: 15
  7288                           ;PIC18F27J53-killifish_light05.c: 111: CCP4CONbits.DC4B = 0;
  7289  01226C  0ECF               	movlw	-49
  7290  01226E  010F               	movlb	15	; () banked
  7291  012270  1712               	andwf	18,f,b	;volatile
  7292                           
  7293                           ; BSR set to: 15
  7294                           ;PIC18F27J53-killifish_light05.c: 113: T2CONbits.T2OUTPS = 0;
  7295  012272  96CA               	bcf	4042,3,c	;volatile
  7296  012274  98CA               	bcf	4042,4,c	;volatile
  7297  012276  9ACA               	bcf	4042,5,c	;volatile
  7298  012278  9CCA               	bcf	4042,6,c	;volatile
  7299                           
  7300                           ; BSR set to: 15
  7301                           ;PIC18F27J53-killifish_light05.c: 114: T2CONbits.T2CKPS = 2;
  7302  01227A  50CA               	movf	4042,w,c	;volatile
  7303  01227C  0BFC               	andlw	-4
  7304  01227E  0902               	iorlw	2
  7305  012280  6ECA               	movwf	4042,c	;volatile
  7306                           
  7307                           ; BSR set to: 15
  7308                           ;PIC18F27J53-killifish_light05.c: 115: PR2 = PR - 1;
  7309  012282  0420               	decf	PWM_init@PR,w,c
  7310  012284  6ECB               	movwf	4043,c	;volatile
  7311                           
  7312                           ; BSR set to: 15
  7313                           ;PIC18F27J53-killifish_light05.c: 116: T2CONbits.TMR2ON = 1;
  7314  012286  84CA               	bsf	4042,2,c	;volatile
  7315                           
  7316                           ; BSR set to: 15
  7317  012288  0012               	return		;funcret
  7318  01228A                     __end_of_PWM_init:
  7319                           	opt stack 0
  7320                           tblptru	equ	0xFF8
  7321                           tblptrh	equ	0xFF7
  7322                           tblptrl	equ	0xFF6
  7323                           tablat	equ	0xFF5
  7324                           prodh	equ	0xFF4
  7325                           prodl	equ	0xFF3
  7326                           intcon	equ	0xFF2
  7327                           intcon2	equ	0xFF1
  7328                           indf0	equ	0xFEF
  7329                           postinc0	equ	0xFEE
  7330                           fsr0h	equ	0xFEA
  7331                           fsr0l	equ	0xFE9
  7332                           wreg	equ	0xFE8
  7333                           postinc1	equ	0xFE6
  7334                           postdec1	equ	0xFE5
  7335                           fsr1h	equ	0xFE2
  7336                           fsr1l	equ	0xFE1
  7337                           indf2	equ	0xFDF
  7338                           postinc2	equ	0xFDE
  7339                           postdec2	equ	0xFDD
  7340                           fsr2h	equ	0xFDA
  7341                           fsr2l	equ	0xFD9
  7342                           status	equ	0xFD8
  7343                           
  7344 ;; *************** function _OSC_init *****************
  7345 ;; Defined at:
  7346 ;;		line 106 in file "../My_library/My_PIC.c"
  7347 ;; Parameters:    Size  Location     Type
  7348 ;;		None
  7349 ;; Auto vars:     Size  Location     Type
  7350 ;;		None
  7351 ;; Return value:  Size  Location     Type
  7352 ;;		None               void
  7353 ;; Registers used:
  7354 ;;		wreg, status,2
  7355 ;; Tracked objects:
  7356 ;;		On entry : 0/0
  7357 ;;		On exit  : 0/0
  7358 ;;		Unchanged: 0/0
  7359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7364 ;;Total ram usage:        0 bytes
  7365 ;; Hardware stack levels used:    1
  7366 ;; Hardware stack levels required when called:    4
  7367 ;; This function calls:
  7368 ;;		Nothing
  7369 ;; This function is called by:
  7370 ;;		_main_init
  7371 ;; This function uses a non-reentrant model
  7372 ;;
  7373                           
  7374                           	psect	text28
  7375  012E4C                     __ptext28:
  7376                           	opt stack 0
  7377  012E4C                     _OSC_init:
  7378                           	opt stack 25
  7379                           
  7380                           ;My_PIC.c: 107: OSCCONbits.IRCF = 7;
  7381                           
  7382                           ; BSR set to: 15
  7383                           ;incstack = 0
  7384  012E4C  88D3               	bsf	4051,4,c	;volatile
  7385  012E4E  8AD3               	bsf	4051,5,c	;volatile
  7386  012E50  8CD3               	bsf	4051,6,c	;volatile
  7387                           
  7388                           ;My_PIC.c: 108: OSCTUNEbits.PLLEN = 1;
  7389  012E52  8C9B               	bsf	3995,6,c	;volatile
  7390                           
  7391                           ;My_PIC.c: 109: OSCCONbits.SCS = 0;
  7392  012E54  0EFC               	movlw	-4
  7393  012E56  16D3               	andwf	4051,f,c	;volatile
  7394  012E58  0012               	return		;funcret
  7395  012E5A                     __end_of_OSC_init:
  7396                           	opt stack 0
  7397                           tblptru	equ	0xFF8
  7398                           tblptrh	equ	0xFF7
  7399                           tblptrl	equ	0xFF6
  7400                           tablat	equ	0xFF5
  7401                           prodh	equ	0xFF4
  7402                           prodl	equ	0xFF3
  7403                           intcon	equ	0xFF2
  7404                           intcon2	equ	0xFF1
  7405                           indf0	equ	0xFEF
  7406                           postinc0	equ	0xFEE
  7407                           fsr0h	equ	0xFEA
  7408                           fsr0l	equ	0xFE9
  7409                           wreg	equ	0xFE8
  7410                           postinc1	equ	0xFE6
  7411                           postdec1	equ	0xFE5
  7412                           fsr1h	equ	0xFE2
  7413                           fsr1l	equ	0xFE1
  7414                           indf2	equ	0xFDF
  7415                           postinc2	equ	0xFDE
  7416                           postdec2	equ	0xFDD
  7417                           fsr2h	equ	0xFDA
  7418                           fsr2l	equ	0xFD9
  7419                           status	equ	0xFD8
  7420                           
  7421 ;; *************** function _ADC_init *****************
  7422 ;; Defined at:
  7423 ;;		line 132 in file "../My_library/My_PIC.c"
  7424 ;; Parameters:    Size  Location     Type
  7425 ;;  p_ref           1    wreg     unsigned char 
  7426 ;; Auto vars:     Size  Location     Type
  7427 ;;  p_ref           1   31[COMRAM] unsigned char 
  7428 ;; Return value:  Size  Location     Type
  7429 ;;		None               void
  7430 ;; Registers used:
  7431 ;;		wreg, status,2
  7432 ;; Tracked objects:
  7433 ;;		On entry : 0/0
  7434 ;;		On exit  : 0/0
  7435 ;;		Unchanged: 0/0
  7436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7440 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7441 ;;Total ram usage:        1 bytes
  7442 ;; Hardware stack levels used:    1
  7443 ;; Hardware stack levels required when called:    4
  7444 ;; This function calls:
  7445 ;;		Nothing
  7446 ;; This function is called by:
  7447 ;;		_main_init
  7448 ;; This function uses a non-reentrant model
  7449 ;;
  7450                           
  7451                           	psect	text29
  7452  012DE4                     __ptext29:
  7453                           	opt stack 0
  7454  012DE4                     _ADC_init:
  7455                           	opt stack 25
  7456                           
  7457                           ;incstack = 0
  7458                           ;ADC_init@p_ref stored from wreg
  7459  012DE4  6E20               	movwf	ADC_init@p_ref,c
  7460                           
  7461                           ;My_PIC.c: 133: ADCON0bits.VCFG1 = 0;
  7462  012DE6  9EC2               	bcf	4034,7,c	;volatile
  7463                           
  7464                           ;My_PIC.c: 134: ADCON0bits.VCFG0 = p_ref;
  7465  012DE8  B020               	btfsc	ADC_init@p_ref,0,c
  7466  012DEA  D002               	bra	u3585
  7467  012DEC  9CC2               	bcf	4034,6,c	;volatile
  7468  012DEE  D001               	bra	u3586
  7469  012DF0                     u3585:
  7470  012DF0  8CC2               	bsf	4034,6,c	;volatile
  7471  012DF2                     u3586:
  7472                           
  7473                           ;My_PIC.c: 136: ADCON1bits.ADFM = 1;
  7474  012DF2  8EC1               	bsf	4033,7,c	;volatile
  7475                           
  7476                           ;My_PIC.c: 137: ADCON1bits.ADCAL = 0;
  7477  012DF4  9CC1               	bcf	4033,6,c	;volatile
  7478                           
  7479                           ;My_PIC.c: 138: ADCON1bits.ADCS = 6;
  7480  012DF6  50C1               	movf	4033,w,c	;volatile
  7481  012DF8  0BF8               	andlw	-8
  7482  012DFA  0906               	iorlw	6
  7483  012DFC  6EC1               	movwf	4033,c	;volatile
  7484  012DFE  0012               	return		;funcret
  7485  012E00                     __end_of_ADC_init:
  7486                           	opt stack 0
  7487                           tblptru	equ	0xFF8
  7488                           tblptrh	equ	0xFF7
  7489                           tblptrl	equ	0xFF6
  7490                           tablat	equ	0xFF5
  7491                           prodh	equ	0xFF4
  7492                           prodl	equ	0xFF3
  7493                           intcon	equ	0xFF2
  7494                           intcon2	equ	0xFF1
  7495                           indf0	equ	0xFEF
  7496                           postinc0	equ	0xFEE
  7497                           fsr0h	equ	0xFEA
  7498                           fsr0l	equ	0xFE9
  7499                           wreg	equ	0xFE8
  7500                           postinc1	equ	0xFE6
  7501                           postdec1	equ	0xFE5
  7502                           fsr1h	equ	0xFE2
  7503                           fsr1l	equ	0xFE1
  7504                           indf2	equ	0xFDF
  7505                           postinc2	equ	0xFDE
  7506                           postdec2	equ	0xFDD
  7507                           fsr2h	equ	0xFDA
  7508                           fsr2l	equ	0xFD9
  7509                           status	equ	0xFD8
  7510                           
  7511 ;; *************** function _light_loop *****************
  7512 ;; Defined at:
  7513 ;;		line 229 in file "PIC18F27J53-killifish_light05.c"
  7514 ;; Parameters:    Size  Location     Type
  7515 ;;		None
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;  temp            4   41[BANK0 ] unsigned long 
  7518 ;;  value           1   40[BANK0 ] unsigned char 
  7519 ;;  value           1   39[BANK0 ] unsigned char 
  7520 ;;  i               1   45[BANK0 ] unsigned char 
  7521 ;; Return value:  Size  Location     Type
  7522 ;;		None               void
  7523 ;; Registers used:
  7524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7531 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7532 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7533 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7534 ;;Total ram usage:       11 bytes
  7535 ;; Hardware stack levels used:    1
  7536 ;; Hardware stack levels required when called:    8
  7537 ;; This function calls:
  7538 ;;		_PWM_set
  7539 ;;		_RTCC_from_RTCC
  7540 ;;		___lldiv
  7541 ;;		___llmod
  7542 ;;		___lmul
  7543 ;; This function is called by:
  7544 ;;		_main
  7545 ;; This function uses a non-reentrant model
  7546 ;;
  7547                           
  7548                           	psect	text30
  7549  01143C                     __ptext30:
  7550                           	opt stack 0
  7551  01143C                     _light_loop:
  7552                           	opt stack 22
  7553                           
  7554                           ;PIC18F27J53-killifish_light05.c: 230: uint8_t i;
  7555                           ;PIC18F27J53-killifish_light05.c: 231: if (time_change_flag) {
  7556                           
  7557                           ;incstack = 0
  7558  01143C  0100               	movlb	0	; () banked
  7559  01143E  51D6               	movf	_time_change_flag& (0+255),w,b
  7560  011440  B4D8               	btfsc	status,2,c
  7561  011442  D0AE               	goto	l837
  7562                           
  7563                           ; BSR set to: 0
  7564                           ;PIC18F27J53-killifish_light05.c: 232: time_change_flag = 0;
  7565  011444  0E00               	movlw	0
  7566  011446  0100               	movlb	0	; () banked
  7567  011448  6FD6               	movwf	_time_change_flag& (0+255),b
  7568                           
  7569                           ; BSR set to: 0
  7570                           ;PIC18F27J53-killifish_light05.c: 233: RTCC_from_RTCC(&now);
  7571  01144A  0E28               	movlw	low _now
  7572  01144C  0100               	movlb	0	; () banked
  7573  01144E  6F81               	movwf	RTCC_from_RTCC@tm& (0+255),b
  7574  011450  0E00               	movlw	high _now
  7575  011452  0100               	movlb	0	; () banked
  7576  011454  6F82               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  7577  011456  EC00  F097         	call	_RTCC_from_RTCC	;wreg free
  7578                           
  7579                           ;PIC18F27J53-killifish_light05.c: 234: if (light_mode == TIME_SYNC_mode) {
  7580  01145A  0100               	movlb	0	; () banked
  7581  01145C  51D5               	movf	_light_mode& (0+255),w,b
  7582  01145E  A4D8               	btfss	status,2,c
  7583  011460  D09F               	goto	l837
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;PIC18F27J53-killifish_light05.c: 235: epoch_t temp = (epoch_t) now.epoch % ((epoch_t)60
      +                          *60*24);
  7587  011462  C028  F060         	movff	_now,___llmod@dividend
  7588  011466  C029  F061         	movff	_now+1,___llmod@dividend+1
  7589  01146A  C02A  F062         	movff	_now+2,___llmod@dividend+2
  7590  01146E  C02B  F063         	movff	_now+3,___llmod@dividend+3
  7591  011472  0E80               	movlw	128
  7592  011474  0100               	movlb	0	; () banked
  7593  011476  6F64               	movwf	___llmod@divisor& (0+255),b
  7594  011478  0E51               	movlw	81
  7595  01147A  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  7596  01147C  0E01               	movlw	1
  7597  01147E  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  7598  011480  0E00               	movlw	0
  7599  011482  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  7600  011484  EC98  F092         	call	___llmod	;wreg free
  7601  011488  C060  F089         	movff	?___llmod,light_loop@temp
  7602  01148C  C061  F08A         	movff	?___llmod+1,light_loop@temp+1
  7603  011490  C062  F08B         	movff	?___llmod+2,light_loop@temp+2
  7604  011494  C063  F08C         	movff	?___llmod+3,light_loop@temp+3
  7605                           
  7606                           ;PIC18F27J53-killifish_light05.c: 236: if (temp > ((epoch_t)60*60*24) / 2)temp = ((epoch
      +                          _t)60*60*24) - temp;
  7607  011498  0100               	movlb	0	; () banked
  7608  01149A  518C               	movf	(light_loop@temp+3)& (0+255),w,b
  7609  01149C  0100               	movlb	0	; () banked
  7610  01149E  118B               	iorwf	(light_loop@temp+2)& (0+255),w,b
  7611  0114A0  E108               	bnz	u6380
  7612  0114A2  0EC1               	movlw	193
  7613  0114A4  0100               	movlb	0	; () banked
  7614  0114A6  5D89               	subwf	light_loop@temp& (0+255),w,b
  7615  0114A8  0EA8               	movlw	168
  7616  0114AA  0100               	movlb	0	; () banked
  7617  0114AC  598A               	subwfb	(light_loop@temp+1)& (0+255),w,b
  7618  0114AE  A0D8               	btfss	status,0,c
  7619  0114B0  D026               	goto	l6009
  7620  0114B2                     u6380:
  7621                           
  7622                           ; BSR set to: 0
  7623  0114B2  C089  F083         	movff	light_loop@temp,??_light_loop
  7624  0114B6  C08A  F084         	movff	light_loop@temp+1,??_light_loop+1
  7625  0114BA  C08B  F085         	movff	light_loop@temp+2,??_light_loop+2
  7626  0114BE  C08C  F086         	movff	light_loop@temp+3,??_light_loop+3
  7627  0114C2  0100               	movlb	0	; () banked
  7628  0114C4  1F83               	comf	??_light_loop& (0+255),f,b
  7629  0114C6  1F84               	comf	(??_light_loop+1)& (0+255),f,b
  7630  0114C8  1F85               	comf	(??_light_loop+2)& (0+255),f,b
  7631  0114CA  1F86               	comf	(??_light_loop+3)& (0+255),f,b
  7632  0114CC  2B83               	incf	??_light_loop& (0+255),f,b
  7633  0114CE  0E00               	movlw	0
  7634  0114D0  2384               	addwfc	(??_light_loop+1)& (0+255),f,b
  7635  0114D2  2385               	addwfc	(??_light_loop+2)& (0+255),f,b
  7636  0114D4  2386               	addwfc	(??_light_loop+3)& (0+255),f,b
  7637  0114D6  0E80               	movlw	128
  7638  0114D8  0100               	movlb	0	; () banked
  7639  0114DA  2583               	addwf	??_light_loop& (0+255),w,b
  7640  0114DC  0100               	movlb	0	; () banked
  7641  0114DE  6F89               	movwf	light_loop@temp& (0+255),b
  7642  0114E0  0E51               	movlw	81
  7643  0114E2  0100               	movlb	0	; () banked
  7644  0114E4  2184               	addwfc	(??_light_loop+1)& (0+255),w,b
  7645  0114E6  0100               	movlb	0	; () banked
  7646  0114E8  6F8A               	movwf	(light_loop@temp+1)& (0+255),b
  7647  0114EA  0E01               	movlw	1
  7648  0114EC  0100               	movlb	0	; () banked
  7649  0114EE  2185               	addwfc	(??_light_loop+2)& (0+255),w,b
  7650  0114F0  0100               	movlb	0	; () banked
  7651  0114F2  6F8B               	movwf	(light_loop@temp+2)& (0+255),b
  7652  0114F4  0E00               	movlw	0
  7653  0114F6  0100               	movlb	0	; () banked
  7654  0114F8  2186               	addwfc	(??_light_loop+3)& (0+255),w,b
  7655  0114FA  0100               	movlb	0	; () banked
  7656  0114FC  6F8C               	movwf	(light_loop@temp+3)& (0+255),b
  7657  0114FE                     l6009:
  7658                           
  7659                           ; BSR set to: 0
  7660                           ;PIC18F27J53-killifish_light05.c: 237: temp = temp * 2 * 250 / ((epoch_t)60*60*24);
  7661  0114FE  90D8               	bcf	status,0,c
  7662  011500  0100               	movlb	0	; () banked
  7663  011502  3589               	rlcf	light_loop@temp& (0+255),w,b
  7664  011504  0100               	movlb	0	; () banked
  7665  011506  6F68               	movwf	___lmul@multiplier& (0+255),b
  7666  011508  0100               	movlb	0	; () banked
  7667  01150A  358A               	rlcf	(light_loop@temp+1)& (0+255),w,b
  7668  01150C  0100               	movlb	0	; () banked
  7669  01150E  6F69               	movwf	(___lmul@multiplier+1)& (0+255),b
  7670  011510  0100               	movlb	0	; () banked
  7671  011512  358B               	rlcf	(light_loop@temp+2)& (0+255),w,b
  7672  011514  0100               	movlb	0	; () banked
  7673  011516  6F6A               	movwf	(___lmul@multiplier+2)& (0+255),b
  7674  011518  0100               	movlb	0	; () banked
  7675  01151A  358C               	rlcf	(light_loop@temp+3)& (0+255),w,b
  7676  01151C  0100               	movlb	0	; () banked
  7677  01151E  6F6B               	movwf	(___lmul@multiplier+3)& (0+255),b
  7678  011520  0EFA               	movlw	250
  7679  011522  0100               	movlb	0	; () banked
  7680  011524  6F6C               	movwf	___lmul@multiplicand& (0+255),b
  7681  011526  0E00               	movlw	0
  7682  011528  6F6D               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7683  01152A  0E00               	movlw	0
  7684  01152C  6F6E               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7685  01152E  0E00               	movlw	0
  7686  011530  6F6F               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7687  011532  EC9C  F094         	call	___lmul	;wreg free
  7688  011536  C068  F074         	movff	?___lmul,___lldiv@dividend
  7689  01153A  C069  F075         	movff	?___lmul+1,___lldiv@dividend+1
  7690  01153E  C06A  F076         	movff	?___lmul+2,___lldiv@dividend+2
  7691  011542  C06B  F077         	movff	?___lmul+3,___lldiv@dividend+3
  7692  011546  0E80               	movlw	128
  7693  011548  0100               	movlb	0	; () banked
  7694  01154A  6F78               	movwf	___lldiv@divisor& (0+255),b
  7695  01154C  0E51               	movlw	81
  7696  01154E  6F79               	movwf	(___lldiv@divisor+1)& (0+255),b
  7697  011550  0E01               	movlw	1
  7698  011552  6F7A               	movwf	(___lldiv@divisor+2)& (0+255),b
  7699  011554  0E00               	movlw	0
  7700  011556  6F7B               	movwf	(___lldiv@divisor+3)& (0+255),b
  7701  011558  EC2D  F090         	call	___lldiv	;wreg free
  7702  01155C  C074  F089         	movff	?___lldiv,light_loop@temp
  7703  011560  C075  F08A         	movff	?___lldiv+1,light_loop@temp+1
  7704  011564  C076  F08B         	movff	?___lldiv+2,light_loop@temp+2
  7705  011568  C077  F08C         	movff	?___lldiv+3,light_loop@temp+3
  7706                           
  7707                           ;PIC18F27J53-killifish_light05.c: 238: PWM_set(3, temp);
  7708  01156C  C089  F071         	movff	light_loop@temp,PWM_set@value
  7709  011570  C08A  F072         	movff	light_loop@temp+1,PWM_set@value+1
  7710  011574  0E03               	movlw	3
  7711  011576  EC1F  F08C         	call	_PWM_set
  7712                           
  7713                           ;PIC18F27J53-killifish_light05.c: 239: for (i = 0; i < 3; i++) {
  7714  01157A  0E00               	movlw	0
  7715  01157C  0100               	movlb	0	; () banked
  7716  01157E  6F8D               	movwf	light_loop@i& (0+255),b
  7717  011580                     l6015:
  7718                           
  7719                           ; BSR set to: 0
  7720  011580  0E02               	movlw	2
  7721  011582  0100               	movlb	0	; () banked
  7722  011584  658D               	cpfsgt	light_loop@i& (0+255),b
  7723  011586  D001               	goto	l6019
  7724  011588  D00B               	goto	l837
  7725  01158A                     l6019:
  7726                           
  7727                           ; BSR set to: 0
  7728                           ;PIC18F27J53-killifish_light05.c: 240: PWM_set(i, temp);
  7729  01158A  C089  F071         	movff	light_loop@temp,PWM_set@value
  7730  01158E  C08A  F072         	movff	light_loop@temp+1,PWM_set@value+1
  7731  011592  0100               	movlb	0	; () banked
  7732  011594  518D               	movf	light_loop@i& (0+255),w,b
  7733  011596  EC1F  F08C         	call	_PWM_set
  7734  01159A  0100               	movlb	0	; () banked
  7735  01159C  2B8D               	incf	light_loop@i& (0+255),f,b
  7736  01159E  D7F0               	goto	l6015
  7737  0115A0                     l837:
  7738                           
  7739                           ; BSR set to: 0
  7740                           ;PIC18F27J53-killifish_light05.c: 241: }
  7741                           ;PIC18F27J53-killifish_light05.c: 242: }
  7742                           ;PIC18F27J53-killifish_light05.c: 243: }
  7743                           ;PIC18F27J53-killifish_light05.c: 244: if (sw_G.flag.press) {
  7744  0115A0  A038               	btfss	_sw_G+2,0,c
  7745  0115A2  D029               	goto	l842
  7746                           
  7747                           ; BSR set to: 0
  7748                           ;PIC18F27J53-killifish_light05.c: 245: sw_G.flags = 0;
  7749  0115A4  0E00               	movlw	0
  7750  0115A6  6E39               	movwf	_sw_G+3,c
  7751  0115A8  0E00               	movlw	0
  7752  0115AA  6E38               	movwf	_sw_G+2,c
  7753                           
  7754                           ;PIC18F27J53-killifish_light05.c: 246: light_mode = COMMAND_mode;
  7755  0115AC  0E02               	movlw	2
  7756  0115AE  0100               	movlb	0	; () banked
  7757  0115B0  6FD5               	movwf	_light_mode& (0+255),b
  7758                           
  7759                           ; BSR set to: 0
  7760                           ;PIC18F27J53-killifish_light05.c: 247: static uint8_t n = 0;
  7761                           ;PIC18F27J53-killifish_light05.c: 248: if (n >= 3) n = 0;
  7762  0115B2  0E02               	movlw	2
  7763  0115B4  0100               	movlb	0	; () banked
  7764  0115B6  65EE               	cpfsgt	light_loop@n& (0+255),b
  7765  0115B8  D004               	goto	l6031
  7766                           
  7767                           ; BSR set to: 0
  7768  0115BA  0E00               	movlw	0
  7769  0115BC  0100               	movlb	0	; () banked
  7770  0115BE  6FEE               	movwf	light_loop@n& (0+255),b
  7771  0115C0  D002               	goto	l6033
  7772  0115C2                     l6031:
  7773                           
  7774                           ; BSR set to: 0
  7775                           ;PIC18F27J53-killifish_light05.c: 249: else n++;
  7776  0115C2  0100               	movlb	0	; () banked
  7777  0115C4  2BEE               	incf	light_loop@n& (0+255),f,b
  7778  0115C6                     l6033:
  7779                           
  7780                           ; BSR set to: 0
  7781                           ;PIC18F27J53-killifish_light05.c: 250: uint8_t value = 250 / 3 * n;
  7782  0115C6  0100               	movlb	0	; () banked
  7783  0115C8  51EE               	movf	light_loop@n& (0+255),w,b
  7784  0115CA  0D53               	mullw	83
  7785  0115CC  CFF3 F087          	movff	prodl,light_loop@value
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;PIC18F27J53-killifish_light05.c: 251: for (i = 0; i < 3; i++) {
  7789  0115D0  0E00               	movlw	0
  7790  0115D2  0100               	movlb	0	; () banked
  7791  0115D4  6F8D               	movwf	light_loop@i& (0+255),b
  7792  0115D6                     l6037:
  7793                           
  7794                           ; BSR set to: 0
  7795  0115D6  0E02               	movlw	2
  7796  0115D8  0100               	movlb	0	; () banked
  7797  0115DA  658D               	cpfsgt	light_loop@i& (0+255),b
  7798  0115DC  D001               	goto	l6041
  7799  0115DE  D00B               	goto	l842
  7800  0115E0                     l6041:
  7801                           
  7802                           ; BSR set to: 0
  7803                           ;PIC18F27J53-killifish_light05.c: 252: PWM_set(i, value);
  7804  0115E0  C087  F071         	movff	light_loop@value,PWM_set@value
  7805  0115E4  0100               	movlb	0	; () banked
  7806  0115E6  6B72               	clrf	(PWM_set@value+1)& (0+255),b
  7807  0115E8  0100               	movlb	0	; () banked
  7808  0115EA  518D               	movf	light_loop@i& (0+255),w,b
  7809  0115EC  EC1F  F08C         	call	_PWM_set
  7810  0115F0  0100               	movlb	0	; () banked
  7811  0115F2  2B8D               	incf	light_loop@i& (0+255),f,b
  7812  0115F4  D7F0               	goto	l6037
  7813  0115F6                     l842:
  7814                           
  7815                           ; BSR set to: 0
  7816                           ;PIC18F27J53-killifish_light05.c: 253: }
  7817                           ;PIC18F27J53-killifish_light05.c: 254: }
  7818                           ;PIC18F27J53-killifish_light05.c: 255: if (sw_B.flag.press) {
  7819  0115F6  0100               	movlb	0	; () banked
  7820  0115F8  A1EB               	btfss	(_sw_B+2)& (0+255),0,b
  7821  0115FA  D01E               	goto	l6059
  7822                           
  7823                           ; BSR set to: 0
  7824                           ;PIC18F27J53-killifish_light05.c: 256: sw_B.flags = 0;
  7825  0115FC  0E00               	movlw	0
  7826  0115FE  0100               	movlb	0	; () banked
  7827  011600  6FEC               	movwf	(_sw_B+3)& (0+255),b
  7828  011602  0E00               	movlw	0
  7829  011604  6FEB               	movwf	(_sw_B+2)& (0+255),b
  7830                           
  7831                           ;PIC18F27J53-killifish_light05.c: 257: light_mode = COMMAND_mode;
  7832  011606  0E02               	movlw	2
  7833  011608  0100               	movlb	0	; () banked
  7834  01160A  6FD5               	movwf	_light_mode& (0+255),b
  7835                           
  7836                           ; BSR set to: 0
  7837                           ;PIC18F27J53-killifish_light05.c: 258: static uint8_t n = 0;
  7838                           ;PIC18F27J53-killifish_light05.c: 259: if (n >= 3) n = 0;
  7839  01160C  0E02               	movlw	2
  7840  01160E  0100               	movlb	0	; () banked
  7841  011610  65ED               	cpfsgt	light_loop@_3706& (0+255),b
  7842  011612  D004               	goto	l6053
  7843                           
  7844                           ; BSR set to: 0
  7845  011614  0E00               	movlw	0
  7846  011616  0100               	movlb	0	; () banked
  7847  011618  6FED               	movwf	light_loop@_3706& (0+255),b
  7848  01161A  D002               	goto	l6055
  7849  01161C                     l6053:
  7850                           
  7851                           ; BSR set to: 0
  7852                           ;PIC18F27J53-killifish_light05.c: 260: else n++;
  7853  01161C  0100               	movlb	0	; () banked
  7854  01161E  2BED               	incf	light_loop@_3706& (0+255),f,b
  7855  011620                     l6055:
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;PIC18F27J53-killifish_light05.c: 261: uint8_t value = 250 / 3 * n;
  7859  011620  0100               	movlb	0	; () banked
  7860  011622  51ED               	movf	light_loop@_3706& (0+255),w,b
  7861  011624  0D53               	mullw	83
  7862  011626  CFF3 F088          	movff	prodl,light_loop@value_3707
  7863                           
  7864                           ; BSR set to: 0
  7865                           ;PIC18F27J53-killifish_light05.c: 262: PWM_set(3, value);
  7866  01162A  C088  F071         	movff	light_loop@value_3707,PWM_set@value
  7867  01162E  0100               	movlb	0	; () banked
  7868  011630  6B72               	clrf	(PWM_set@value+1)& (0+255),b
  7869  011632  0E03               	movlw	3
  7870  011634  EC1F  F08C         	call	_PWM_set
  7871  011638                     l6059:
  7872                           
  7873                           ;PIC18F27J53-killifish_light05.c: 263: }
  7874                           ;PIC18F27J53-killifish_light05.c: 264: if (sw_R.flag.press) {
  7875  011638  A03C               	btfss	_sw_R+2,0,c
  7876  01163A  0012               	return	
  7877                           
  7878                           ;PIC18F27J53-killifish_light05.c: 265: sw_R.flags = 0;
  7879  01163C  0E00               	movlw	0
  7880  01163E  6E3D               	movwf	_sw_R+3,c
  7881  011640  0E00               	movlw	0
  7882  011642  6E3C               	movwf	_sw_R+2,c
  7883                           
  7884                           ;PIC18F27J53-killifish_light05.c: 266: light_mode = TIME_SYNC_mode;
  7885  011644  0E00               	movlw	0
  7886  011646  0100               	movlb	0	; () banked
  7887  011648  6FD5               	movwf	_light_mode& (0+255),b
  7888  01164A  0012               	return	
  7889  01164C                     __end_of_light_loop:
  7890                           	opt stack 0
  7891                           tblptru	equ	0xFF8
  7892                           tblptrh	equ	0xFF7
  7893                           tblptrl	equ	0xFF6
  7894                           tablat	equ	0xFF5
  7895                           prodh	equ	0xFF4
  7896                           prodl	equ	0xFF3
  7897                           intcon	equ	0xFF2
  7898                           intcon2	equ	0xFF1
  7899                           indf0	equ	0xFEF
  7900                           postinc0	equ	0xFEE
  7901                           fsr0h	equ	0xFEA
  7902                           fsr0l	equ	0xFE9
  7903                           wreg	equ	0xFE8
  7904                           postinc1	equ	0xFE6
  7905                           postdec1	equ	0xFE5
  7906                           fsr1h	equ	0xFE2
  7907                           fsr1l	equ	0xFE1
  7908                           indf2	equ	0xFDF
  7909                           postinc2	equ	0xFDE
  7910                           postdec2	equ	0xFDD
  7911                           fsr2h	equ	0xFDA
  7912                           fsr2l	equ	0xFD9
  7913                           status	equ	0xFD8
  7914                           
  7915 ;; *************** function ___llmod *****************
  7916 ;; Defined at:
  7917 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;  dividend        4    0[BANK0 ] unsigned long 
  7920 ;;  divisor         4    4[BANK0 ] unsigned long 
  7921 ;; Auto vars:     Size  Location     Type
  7922 ;;  counter         1   31[COMRAM] unsigned char 
  7923 ;; Return value:  Size  Location     Type
  7924 ;;                  4    0[BANK0 ] unsigned long 
  7925 ;; Registers used:
  7926 ;;		wreg, status,2, status,0
  7927 ;; Tracked objects:
  7928 ;;		On entry : 0/0
  7929 ;;		On exit  : 0/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7932 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7935 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7936 ;;Total ram usage:        9 bytes
  7937 ;; Hardware stack levels used:    1
  7938 ;; Hardware stack levels required when called:    4
  7939 ;; This function calls:
  7940 ;;		Nothing
  7941 ;; This function is called by:
  7942 ;;		_light_loop
  7943 ;; This function uses a non-reentrant model
  7944 ;;
  7945                           
  7946                           	psect	text31
  7947  012530                     __ptext31:
  7948                           	opt stack 0
  7949  012530                     ___llmod:
  7950                           	opt stack 25
  7951                           
  7952                           ;incstack = 0
  7953  012530  0100               	movlb	0	; () banked
  7954  012532  5164               	movf	___llmod@divisor& (0+255),w,b
  7955  012534  0100               	movlb	0	; () banked
  7956  012536  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  7957  012538  0100               	movlb	0	; () banked
  7958  01253A  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  7959  01253C  0100               	movlb	0	; () banked
  7960  01253E  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  7961  012540  B4D8               	btfsc	status,2,c
  7962  012542  D037               	goto	l1314
  7963                           
  7964                           ; BSR set to: 0
  7965  012544  0E01               	movlw	1
  7966  012546  6E20               	movwf	___llmod@counter,c
  7967  012548  D007               	goto	l5799
  7968  01254A                     l5797:
  7969                           
  7970                           ; BSR set to: 0
  7971  01254A  0100               	movlb	0	; () banked
  7972  01254C  90D8               	bcf	status,0,c
  7973  01254E  3764               	rlcf	___llmod@divisor& (0+255),f,b
  7974  012550  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  7975  012552  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  7976  012554  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  7977  012556  2A20               	incf	___llmod@counter,f,c
  7978  012558                     l5799:
  7979                           
  7980                           ; BSR set to: 0
  7981  012558  0100               	movlb	0	; () banked
  7982  01255A  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
  7983  01255C  D7F6               	goto	l5797
  7984  01255E                     l5801:
  7985                           
  7986                           ; BSR set to: 0
  7987  01255E  0100               	movlb	0	; () banked
  7988  012560  5164               	movf	___llmod@divisor& (0+255),w,b
  7989  012562  0100               	movlb	0	; () banked
  7990  012564  5D60               	subwf	___llmod@dividend& (0+255),w,b
  7991  012566  0100               	movlb	0	; () banked
  7992  012568  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  7993  01256A  0100               	movlb	0	; () banked
  7994  01256C  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  7995  01256E  0100               	movlb	0	; () banked
  7996  012570  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  7997  012572  0100               	movlb	0	; () banked
  7998  012574  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  7999  012576  0100               	movlb	0	; () banked
  8000  012578  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  8001  01257A  0100               	movlb	0	; () banked
  8002  01257C  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  8003  01257E  A0D8               	btfss	status,0,c
  8004  012580  D010               	goto	l5805
  8005                           
  8006                           ; BSR set to: 0
  8007  012582  0100               	movlb	0	; () banked
  8008  012584  5164               	movf	___llmod@divisor& (0+255),w,b
  8009  012586  0100               	movlb	0	; () banked
  8010  012588  5F60               	subwf	___llmod@dividend& (0+255),f,b
  8011  01258A  0100               	movlb	0	; () banked
  8012  01258C  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  8013  01258E  0100               	movlb	0	; () banked
  8014  012590  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  8015  012592  0100               	movlb	0	; () banked
  8016  012594  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  8017  012596  0100               	movlb	0	; () banked
  8018  012598  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  8019  01259A  0100               	movlb	0	; () banked
  8020  01259C  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  8021  01259E  0100               	movlb	0	; () banked
  8022  0125A0  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  8023  0125A2                     l5805:
  8024                           
  8025                           ; BSR set to: 0
  8026  0125A2  0100               	movlb	0	; () banked
  8027  0125A4  90D8               	bcf	status,0,c
  8028  0125A6  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  8029  0125A8  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  8030  0125AA  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  8031  0125AC  3364               	rrcf	___llmod@divisor& (0+255),f,b
  8032                           
  8033                           ; BSR set to: 0
  8034  0125AE  2E20               	decfsz	___llmod@counter,f,c
  8035  0125B0  D7D6               	goto	l5801
  8036  0125B2                     l1314:
  8037                           
  8038                           ; BSR set to: 0
  8039  0125B2  C060  F060         	movff	___llmod@dividend,?___llmod
  8040  0125B6  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  8041  0125BA  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  8042  0125BE  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  8043                           
  8044                           ; BSR set to: 0
  8045  0125C2  0012               	return		;funcret
  8046  0125C4                     __end_of___llmod:
  8047                           	opt stack 0
  8048                           tblptru	equ	0xFF8
  8049                           tblptrh	equ	0xFF7
  8050                           tblptrl	equ	0xFF6
  8051                           tablat	equ	0xFF5
  8052                           prodh	equ	0xFF4
  8053                           prodl	equ	0xFF3
  8054                           intcon	equ	0xFF2
  8055                           intcon2	equ	0xFF1
  8056                           indf0	equ	0xFEF
  8057                           postinc0	equ	0xFEE
  8058                           fsr0h	equ	0xFEA
  8059                           fsr0l	equ	0xFE9
  8060                           wreg	equ	0xFE8
  8061                           postinc1	equ	0xFE6
  8062                           postdec1	equ	0xFE5
  8063                           fsr1h	equ	0xFE2
  8064                           fsr1l	equ	0xFE1
  8065                           indf2	equ	0xFDF
  8066                           postinc2	equ	0xFDE
  8067                           postdec2	equ	0xFDD
  8068                           fsr2h	equ	0xFDA
  8069                           fsr2l	equ	0xFD9
  8070                           status	equ	0xFD8
  8071                           
  8072 ;; *************** function _PWM_set *****************
  8073 ;; Defined at:
  8074 ;;		line 119 in file "PIC18F27J53-killifish_light05.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;  color           1    wreg     unsigned char 
  8077 ;;  value           2   17[BANK0 ] unsigned int 
  8078 ;; Auto vars:     Size  Location     Type
  8079 ;;  color           1   21[BANK0 ] unsigned char 
  8080 ;; Return value:  Size  Location     Type
  8081 ;;		None               void
  8082 ;; Registers used:
  8083 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8084 ;; Tracked objects:
  8085 ;;		On entry : 0/0
  8086 ;;		On exit  : 0/0
  8087 ;;		Unchanged: 0/0
  8088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8089 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8090 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8091 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8092 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8093 ;;Total ram usage:        5 bytes
  8094 ;; Hardware stack levels used:    1
  8095 ;; Hardware stack levels required when called:    5
  8096 ;; This function calls:
  8097 ;;		___lwdiv
  8098 ;;		___wmul
  8099 ;; This function is called by:
  8100 ;;		_terminal_operation
  8101 ;;		_light_loop
  8102 ;; This function uses a non-reentrant model
  8103 ;;
  8104                           
  8105                           	psect	text32
  8106  01183E                     __ptext32:
  8107                           	opt stack 0
  8108  01183E                     _PWM_set:
  8109                           	opt stack 23
  8110                           
  8111                           ; BSR set to: 0
  8112                           ;incstack = 0
  8113                           ;PWM_set@color stored from wreg
  8114  01183E  0100               	movlb	0	; () banked
  8115  011840  6F75               	movwf	PWM_set@color& (0+255),b
  8116                           
  8117                           ;PIC18F27J53-killifish_light05.c: 120: value = value * value / 250;
  8118  011842  C071  F020         	movff	PWM_set@value,___wmul@multiplier
  8119  011846  C072  F021         	movff	PWM_set@value+1,___wmul@multiplier+1
  8120  01184A  C071  F022         	movff	PWM_set@value,___wmul@multiplicand
  8121  01184E  C072  F023         	movff	PWM_set@value+1,___wmul@multiplicand+1
  8122  011852  EC73  F096         	call	___wmul	;wreg free
  8123  011856  C020  F062         	movff	?___wmul,___lwdiv@dividend
  8124  01185A  C021  F063         	movff	?___wmul+1,___lwdiv@dividend+1
  8125  01185E  0E00               	movlw	0
  8126  011860  0100               	movlb	0	; () banked
  8127  011862  6F65               	movwf	(___lwdiv@divisor+1)& (0+255),b
  8128  011864  0EFA               	movlw	250
  8129  011866  6F64               	movwf	___lwdiv@divisor& (0+255),b
  8130  011868  EC60  F094         	call	___lwdiv	;wreg free
  8131  01186C  C062  F071         	movff	?___lwdiv,PWM_set@value
  8132  011870  C063  F072         	movff	?___lwdiv+1,PWM_set@value+1
  8133                           
  8134                           ;PIC18F27J53-killifish_light05.c: 121: value = value * value / 250;
  8135  011874  C071  F020         	movff	PWM_set@value,___wmul@multiplier
  8136  011878  C072  F021         	movff	PWM_set@value+1,___wmul@multiplier+1
  8137  01187C  C071  F022         	movff	PWM_set@value,___wmul@multiplicand
  8138  011880  C072  F023         	movff	PWM_set@value+1,___wmul@multiplicand+1
  8139  011884  EC73  F096         	call	___wmul	;wreg free
  8140  011888  C020  F062         	movff	?___wmul,___lwdiv@dividend
  8141  01188C  C021  F063         	movff	?___wmul+1,___lwdiv@dividend+1
  8142  011890  0E00               	movlw	0
  8143  011892  0100               	movlb	0	; () banked
  8144  011894  6F65               	movwf	(___lwdiv@divisor+1)& (0+255),b
  8145  011896  0EFA               	movlw	250
  8146  011898  6F64               	movwf	___lwdiv@divisor& (0+255),b
  8147  01189A  EC60  F094         	call	___lwdiv	;wreg free
  8148  01189E  C062  F071         	movff	?___lwdiv,PWM_set@value
  8149  0118A2  C063  F072         	movff	?___lwdiv+1,PWM_set@value+1
  8150                           
  8151                           ;PIC18F27J53-killifish_light05.c: 122: value = value * 3 / 4;
  8152  0118A6  C071  F020         	movff	PWM_set@value,___wmul@multiplier
  8153  0118AA  C072  F021         	movff	PWM_set@value+1,___wmul@multiplier+1
  8154  0118AE  0E00               	movlw	0
  8155  0118B0  6E23               	movwf	___wmul@multiplicand+1,c
  8156  0118B2  0E03               	movlw	3
  8157  0118B4  6E22               	movwf	___wmul@multiplicand,c
  8158  0118B6  EC73  F096         	call	___wmul	;wreg free
  8159  0118BA  90D8               	bcf	status,0,c
  8160  0118BC  3221               	rrcf	?___wmul+1,f,c
  8161  0118BE  3220               	rrcf	?___wmul,f,c
  8162  0118C0  90D8               	bcf	status,0,c
  8163  0118C2  3221               	rrcf	?___wmul+1,f,c
  8164  0118C4  3220               	rrcf	?___wmul,f,c
  8165  0118C6  C020  F071         	movff	?___wmul,PWM_set@value
  8166  0118CA  C021  F072         	movff	?___wmul+1,PWM_set@value+1
  8167                           
  8168                           ;PIC18F27J53-killifish_light05.c: 123: switch (color) {
  8169  0118CE  D04F               	goto	l5625
  8170  0118D0                     l5607:
  8171                           
  8172                           ;PIC18F27J53-killifish_light05.c: 125: if (value < 250 / 4) {
  8173  0118D0  0100               	movlb	0	; () banked
  8174  0118D2  5172               	movf	(PWM_set@value+1)& (0+255),w,b
  8175  0118D4  E105               	bnz	l5611
  8176  0118D6  0E3E               	movlw	62
  8177  0118D8  0100               	movlb	0	; () banked
  8178  0118DA  5D71               	subwf	PWM_set@value& (0+255),w,b
  8179  0118DC  A0D8               	btfss	status,0,c
  8180  0118DE  D06A               	goto	l5645
  8181  0118E0                     l5611:
  8182                           
  8183                           ; BSR set to: 0
  8184                           ;PIC18F27J53-killifish_light05.c: 128: value = 2 * (value - 250 / 4) / 3 + 250 / 4;
  8185  0118E0  C071  F073         	movff	PWM_set@value,??_PWM_set
  8186  0118E4  C072  F074         	movff	PWM_set@value+1,??_PWM_set+1
  8187  0118E8  90D8               	bcf	status,0,c
  8188  0118EA  0100               	movlb	0	; () banked
  8189  0118EC  3773               	rlcf	??_PWM_set& (0+255),f,b
  8190  0118EE  3774               	rlcf	(??_PWM_set+1)& (0+255),f,b
  8191  0118F0  0E84               	movlw	132
  8192  0118F2  0100               	movlb	0	; () banked
  8193  0118F4  2573               	addwf	??_PWM_set& (0+255),w,b
  8194  0118F6  0100               	movlb	0	; () banked
  8195  0118F8  6F62               	movwf	___lwdiv@dividend& (0+255),b
  8196  0118FA  0EFF               	movlw	255
  8197  0118FC  0100               	movlb	0	; () banked
  8198  0118FE  2174               	addwfc	(??_PWM_set+1)& (0+255),w,b
  8199  011900  0100               	movlb	0	; () banked
  8200  011902  6F63               	movwf	(___lwdiv@dividend+1)& (0+255),b
  8201  011904  0E00               	movlw	0
  8202  011906  0100               	movlb	0	; () banked
  8203  011908  6F65               	movwf	(___lwdiv@divisor+1)& (0+255),b
  8204  01190A  0E03               	movlw	3
  8205  01190C  6F64               	movwf	___lwdiv@divisor& (0+255),b
  8206  01190E  EC60  F094         	call	___lwdiv	;wreg free
  8207  011912  0E3E               	movlw	62
  8208  011914  0100               	movlb	0	; () banked
  8209  011916  2562               	addwf	?___lwdiv& (0+255),w,b
  8210  011918  0100               	movlb	0	; () banked
  8211  01191A  6F71               	movwf	PWM_set@value& (0+255),b
  8212  01191C  0E00               	movlw	0
  8213  01191E  0100               	movlb	0	; () banked
  8214  011920  2163               	addwfc	(?___lwdiv+1)& (0+255),w,b
  8215  011922  D022               	goto	L1
  8216  011924                     l5617:
  8217                           
  8218                           ; BSR set to: 0
  8219                           ;PIC18F27J53-killifish_light05.c: 139: if (value < 250 / 4) {
  8220  011924  0100               	movlb	0	; () banked
  8221  011926  5172               	movf	(PWM_set@value+1)& (0+255),w,b
  8222  011928  E105               	bnz	l5621
  8223  01192A  0E3E               	movlw	62
  8224  01192C  0100               	movlb	0	; () banked
  8225  01192E  5D71               	subwf	PWM_set@value& (0+255),w,b
  8226  011930  A0D8               	btfss	status,0,c
  8227  011932  D040               	goto	l5645
  8228  011934                     l5621:
  8229                           
  8230                           ; BSR set to: 0
  8231                           ;PIC18F27J53-killifish_light05.c: 142: value = 3 * (value - 250 / 4) / 4 + 250 / 4;
  8232  011934  0EC2               	movlw	194
  8233  011936  0100               	movlb	0	; () banked
  8234  011938  2571               	addwf	PWM_set@value& (0+255),w,b
  8235  01193A  6E20               	movwf	___wmul@multiplier,c
  8236  01193C  0EFF               	movlw	255
  8237  01193E  0100               	movlb	0	; () banked
  8238  011940  2172               	addwfc	(PWM_set@value+1)& (0+255),w,b
  8239  011942  6E21               	movwf	___wmul@multiplier+1,c
  8240  011944  0E00               	movlw	0
  8241  011946  6E23               	movwf	___wmul@multiplicand+1,c
  8242  011948  0E03               	movlw	3
  8243  01194A  6E22               	movwf	___wmul@multiplicand,c
  8244  01194C  EC73  F096         	call	___wmul	;wreg free
  8245  011950  90D8               	bcf	status,0,c
  8246  011952  3221               	rrcf	?___wmul+1,f,c
  8247  011954  3220               	rrcf	?___wmul,f,c
  8248  011956  90D8               	bcf	status,0,c
  8249  011958  3221               	rrcf	?___wmul+1,f,c
  8250  01195A  3220               	rrcf	?___wmul,f,c
  8251  01195C  0E3E               	movlw	62
  8252  01195E  2420               	addwf	?___wmul,w,c
  8253  011960  0100               	movlb	0	; () banked
  8254  011962  6F71               	movwf	PWM_set@value& (0+255),b
  8255  011964  0E00               	movlw	0
  8256  011966  2021               	addwfc	?___wmul+1,w,c
  8257  011968                     L1:
  8258  011968  0100               	movlb	0	; () banked
  8259  01196A  6F72               	movwf	(PWM_set@value+1)& (0+255),b
  8260                           
  8261                           ; BSR set to: 0
  8262                           ;PIC18F27J53-killifish_light05.c: 147: }
  8263                           
  8264                           ; BSR set to: 0
  8265                           ;PIC18F27J53-killifish_light05.c: 146: break;
  8266                           
  8267                           ;PIC18F27J53-killifish_light05.c: 145: case 3:
  8268                           
  8269                           ; BSR set to: 0
  8270                           ;PIC18F27J53-killifish_light05.c: 143: }
  8271                           ;PIC18F27J53-killifish_light05.c: 144: break;
  8272  01196C  D023               	goto	l5645
  8273  01196E                     l5625:
  8274  01196E  0100               	movlb	0	; () banked
  8275  011970  5175               	movf	PWM_set@color& (0+255),w,b
  8276                           
  8277                           ; Switch size 1, requested type "space"
  8278                           ; Number of cases is 4, Range of values is 0 to 3
  8279                           ; switch strategies available:
  8280                           ; Name         Instructions Cycles
  8281                           ; simple_byte           13     7 (average)
  8282                           ;	Chosen strategy is simple_byte
  8283  011972  0A00               	xorlw	0	; case 0
  8284  011974  B4D8               	btfsc	status,2,c
  8285  011976  D7AC               	goto	l5607
  8286  011978  0A01               	xorlw	1	; case 1
  8287  01197A  B4D8               	btfsc	status,2,c
  8288  01197C  D01B               	goto	l5645
  8289  01197E  0A03               	xorlw	3	; case 2
  8290  011980  B4D8               	btfsc	status,2,c
  8291  011982  D7D0               	goto	l5617
  8292  011984  0A01               	xorlw	1	; case 3
  8293                           
  8294                           ; BSR set to: 0
  8295                           ;PIC18F27J53-killifish_light05.c: 148: switch (color) {
  8296  011986  D016               	goto	l5645
  8297  011988                     l5627:
  8298                           
  8299                           ; BSR set to: 0
  8300                           ;PIC18F27J53-killifish_light05.c: 150: CCP1CONbits.DC1B = 0;
  8301  011988  0ECF               	movlw	-49
  8302  01198A  16BA               	andwf	4026,f,c	;volatile
  8303                           
  8304                           ; BSR set to: 0
  8305                           ;PIC18F27J53-killifish_light05.c: 151: CCPR1L = value;
  8306  01198C  C071  FFBB         	movff	PWM_set@value,4027	;volatile
  8307                           
  8308                           ;PIC18F27J53-killifish_light05.c: 152: break;
  8309  011990  0012               	return	
  8310  011992                     l5631:
  8311                           
  8312                           ; BSR set to: 0
  8313                           ;PIC18F27J53-killifish_light05.c: 154: CCP2CONbits.DC2B = 0;
  8314  011992  0ECF               	movlw	-49
  8315  011994  16B4               	andwf	4020,f,c	;volatile
  8316                           
  8317                           ; BSR set to: 0
  8318                           ;PIC18F27J53-killifish_light05.c: 155: CCPR2L = value;
  8319  011996  C071  FFB5         	movff	PWM_set@value,4021	;volatile
  8320                           
  8321                           ;PIC18F27J53-killifish_light05.c: 156: break;
  8322  01199A  0012               	return	
  8323  01199C                     l5635:
  8324                           
  8325                           ; BSR set to: 0
  8326                           ;PIC18F27J53-killifish_light05.c: 158: CCP3CONbits.DC3B = 0;
  8327  01199C  0ECF               	movlw	-49
  8328  01199E  010F               	movlb	15	; () banked
  8329  0119A0  1715               	andwf	21,f,b	;volatile
  8330                           
  8331                           ; BSR set to: 15
  8332                           ;PIC18F27J53-killifish_light05.c: 159: CCPR3L = value;
  8333  0119A2  C071  FF16         	movff	PWM_set@value,3862	;volatile
  8334                           
  8335                           ;PIC18F27J53-killifish_light05.c: 160: break;
  8336  0119A6  0012               	return	
  8337  0119A8                     l5639:
  8338                           
  8339                           ;PIC18F27J53-killifish_light05.c: 162: CCP4CONbits.DC4B = 0;
  8340  0119A8  0ECF               	movlw	-49
  8341  0119AA  010F               	movlb	15	; () banked
  8342  0119AC  1712               	andwf	18,f,b	;volatile
  8343                           
  8344                           ; BSR set to: 15
  8345                           ;PIC18F27J53-killifish_light05.c: 163: CCPR4L = value;
  8346  0119AE  C071  FF13         	movff	PWM_set@value,3859	;volatile
  8347                           
  8348                           ; BSR set to: 15
  8349                           ;PIC18F27J53-killifish_light05.c: 165: }
  8350                           
  8351                           ;PIC18F27J53-killifish_light05.c: 164: break;
  8352  0119B2  0012               	return	
  8353  0119B4                     l5645:
  8354  0119B4  0100               	movlb	0	; () banked
  8355  0119B6  5175               	movf	PWM_set@color& (0+255),w,b
  8356                           
  8357                           ; Switch size 1, requested type "space"
  8358                           ; Number of cases is 4, Range of values is 0 to 3
  8359                           ; switch strategies available:
  8360                           ; Name         Instructions Cycles
  8361                           ; simple_byte           13     7 (average)
  8362                           ;	Chosen strategy is simple_byte
  8363  0119B8  0A00               	xorlw	0	; case 0
  8364  0119BA  B4D8               	btfsc	status,2,c
  8365  0119BC  D7E5               	goto	l5627
  8366  0119BE  0A01               	xorlw	1	; case 1
  8367  0119C0  B4D8               	btfsc	status,2,c
  8368  0119C2  D7E7               	goto	l5631
  8369  0119C4  0A03               	xorlw	3	; case 2
  8370  0119C6  B4D8               	btfsc	status,2,c
  8371  0119C8  D7E9               	goto	l5635
  8372  0119CA  0A01               	xorlw	1	; case 3
  8373  0119CC  A4D8               	btfss	status,2,c
  8374  0119CE  0012               	return	
  8375  0119D0  D7EB               	goto	l5639
  8376  0119D2                     __end_of_PWM_set:
  8377                           	opt stack 0
  8378                           tblptru	equ	0xFF8
  8379                           tblptrh	equ	0xFF7
  8380                           tblptrl	equ	0xFF6
  8381                           tablat	equ	0xFF5
  8382                           prodh	equ	0xFF4
  8383                           prodl	equ	0xFF3
  8384                           intcon	equ	0xFF2
  8385                           intcon2	equ	0xFF1
  8386                           indf0	equ	0xFEF
  8387                           postinc0	equ	0xFEE
  8388                           fsr0h	equ	0xFEA
  8389                           fsr0l	equ	0xFE9
  8390                           wreg	equ	0xFE8
  8391                           postinc1	equ	0xFE6
  8392                           postdec1	equ	0xFE5
  8393                           fsr1h	equ	0xFE2
  8394                           fsr1l	equ	0xFE1
  8395                           indf2	equ	0xFDF
  8396                           postinc2	equ	0xFDE
  8397                           postdec2	equ	0xFDD
  8398                           fsr2h	equ	0xFDA
  8399                           fsr2l	equ	0xFD9
  8400                           status	equ	0xFD8
  8401                           
  8402 ;; *************** function ___wmul *****************
  8403 ;; Defined at:
  8404 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  8405 ;; Parameters:    Size  Location     Type
  8406 ;;  multiplier      2   31[COMRAM] unsigned int 
  8407 ;;  multiplicand    2   33[COMRAM] unsigned int 
  8408 ;; Auto vars:     Size  Location     Type
  8409 ;;  product         2    0[BANK0 ] unsigned int 
  8410 ;; Return value:  Size  Location     Type
  8411 ;;                  2   31[COMRAM] unsigned int 
  8412 ;; Registers used:
  8413 ;;		wreg, status,2, status,0, prodl, prodh
  8414 ;; Tracked objects:
  8415 ;;		On entry : 0/0
  8416 ;;		On exit  : 0/0
  8417 ;;		Unchanged: 0/0
  8418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8419 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8420 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8422 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8423 ;;Total ram usage:        6 bytes
  8424 ;; Hardware stack levels used:    1
  8425 ;; Hardware stack levels required when called:    4
  8426 ;; This function calls:
  8427 ;;		Nothing
  8428 ;; This function is called by:
  8429 ;;		_PWM_set
  8430 ;;		_terminal_operation
  8431 ;;		_sprintf
  8432 ;;		_atoi
  8433 ;; This function uses a non-reentrant model
  8434 ;;
  8435                           
  8436                           	psect	text33
  8437  012CE6                     __ptext33:
  8438                           	opt stack 0
  8439  012CE6                     ___wmul:
  8440                           	opt stack 20
  8441                           
  8442                           ;incstack = 0
  8443  012CE6  5020               	movf	___wmul@multiplier,w,c
  8444  012CE8  0222               	mulwf	___wmul@multiplicand,c
  8445  012CEA  CFF3 F060          	movff	prodl,___wmul@product
  8446  012CEE  CFF4 F061          	movff	prodh,___wmul@product+1
  8447  012CF2  5020               	movf	___wmul@multiplier,w,c
  8448  012CF4  0223               	mulwf	___wmul@multiplicand+1,c
  8449  012CF6  50F3               	movf	prodl,w,c
  8450  012CF8  0100               	movlb	0	; () banked
  8451  012CFA  2761               	addwf	(___wmul@product+1)& (0+255),f,b
  8452  012CFC  5021               	movf	___wmul@multiplier+1,w,c
  8453  012CFE  0222               	mulwf	___wmul@multiplicand,c
  8454  012D00  50F3               	movf	prodl,w,c
  8455  012D02  0100               	movlb	0	; () banked
  8456  012D04  2761               	addwf	(___wmul@product+1)& (0+255),f,b
  8457                           
  8458                           ; BSR set to: 0
  8459  012D06  C060  F020         	movff	___wmul@product,?___wmul
  8460  012D0A  C061  F021         	movff	___wmul@product+1,?___wmul+1
  8461  012D0E  0012               	return	
  8462  012D10                     __end_of___wmul:
  8463                           	opt stack 0
  8464                           tblptru	equ	0xFF8
  8465                           tblptrh	equ	0xFF7
  8466                           tblptrl	equ	0xFF6
  8467                           tablat	equ	0xFF5
  8468                           prodh	equ	0xFF4
  8469                           prodl	equ	0xFF3
  8470                           intcon	equ	0xFF2
  8471                           intcon2	equ	0xFF1
  8472                           indf0	equ	0xFEF
  8473                           postinc0	equ	0xFEE
  8474                           fsr0h	equ	0xFEA
  8475                           fsr0l	equ	0xFE9
  8476                           wreg	equ	0xFE8
  8477                           postinc1	equ	0xFE6
  8478                           postdec1	equ	0xFE5
  8479                           fsr1h	equ	0xFE2
  8480                           fsr1l	equ	0xFE1
  8481                           indf2	equ	0xFDF
  8482                           postinc2	equ	0xFDE
  8483                           postdec2	equ	0xFDD
  8484                           fsr2h	equ	0xFDA
  8485                           fsr2l	equ	0xFD9
  8486                           status	equ	0xFD8
  8487                           
  8488 ;; *************** function ___lwdiv *****************
  8489 ;; Defined at:
  8490 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  8491 ;; Parameters:    Size  Location     Type
  8492 ;;  dividend        2    2[BANK0 ] unsigned int 
  8493 ;;  divisor         2    4[BANK0 ] unsigned int 
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;  quotient        2    7[BANK0 ] unsigned int 
  8496 ;;  counter         1    6[BANK0 ] unsigned char 
  8497 ;; Return value:  Size  Location     Type
  8498 ;;                  2    2[BANK0 ] unsigned int 
  8499 ;; Registers used:
  8500 ;;		wreg, status,2, status,0
  8501 ;; Tracked objects:
  8502 ;;		On entry : 0/0
  8503 ;;		On exit  : 0/0
  8504 ;;		Unchanged: 0/0
  8505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8506 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8507 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8509 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8510 ;;Total ram usage:        7 bytes
  8511 ;; Hardware stack levels used:    1
  8512 ;; Hardware stack levels required when called:    4
  8513 ;; This function calls:
  8514 ;;		Nothing
  8515 ;; This function is called by:
  8516 ;;		_ringbuf_put_num
  8517 ;;		_PWM_set
  8518 ;;		_sprintf
  8519 ;;		_tx_sendn
  8520 ;; This function uses a non-reentrant model
  8521 ;;
  8522                           
  8523                           	psect	text34
  8524  0128C0                     __ptext34:
  8525                           	opt stack 0
  8526  0128C0                     ___lwdiv:
  8527                           	opt stack 20
  8528                           
  8529                           ; BSR set to: 0
  8530                           ;incstack = 0
  8531  0128C0  0E00               	movlw	0
  8532  0128C2  0100               	movlb	0	; () banked
  8533  0128C4  6F68               	movwf	(___lwdiv@quotient+1)& (0+255),b
  8534  0128C6  0E00               	movlw	0
  8535  0128C8  6F67               	movwf	___lwdiv@quotient& (0+255),b
  8536                           
  8537                           ; BSR set to: 0
  8538  0128CA  0100               	movlb	0	; () banked
  8539  0128CC  5164               	movf	___lwdiv@divisor& (0+255),w,b
  8540  0128CE  0100               	movlb	0	; () banked
  8541  0128D0  1165               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  8542  0128D2  B4D8               	btfsc	status,2,c
  8543  0128D4  D02C               	goto	l1357
  8544                           
  8545                           ; BSR set to: 0
  8546  0128D6  0E01               	movlw	1
  8547  0128D8  0100               	movlb	0	; () banked
  8548  0128DA  6F66               	movwf	___lwdiv@counter& (0+255),b
  8549  0128DC  D006               	goto	l5215
  8550  0128DE                     l5213:
  8551                           
  8552                           ; BSR set to: 0
  8553  0128DE  0100               	movlb	0	; () banked
  8554  0128E0  90D8               	bcf	status,0,c
  8555  0128E2  3764               	rlcf	___lwdiv@divisor& (0+255),f,b
  8556  0128E4  3765               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  8557  0128E6  0100               	movlb	0	; () banked
  8558  0128E8  2B66               	incf	___lwdiv@counter& (0+255),f,b
  8559  0128EA                     l5215:
  8560                           
  8561                           ; BSR set to: 0
  8562  0128EA  0100               	movlb	0	; () banked
  8563  0128EC  AF65               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  8564  0128EE  D7F7               	goto	l5213
  8565  0128F0                     l5217:
  8566                           
  8567                           ; BSR set to: 0
  8568  0128F0  0100               	movlb	0	; () banked
  8569  0128F2  90D8               	bcf	status,0,c
  8570  0128F4  3767               	rlcf	___lwdiv@quotient& (0+255),f,b
  8571  0128F6  3768               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  8572                           
  8573                           ; BSR set to: 0
  8574  0128F8  0100               	movlb	0	; () banked
  8575  0128FA  5164               	movf	___lwdiv@divisor& (0+255),w,b
  8576  0128FC  0100               	movlb	0	; () banked
  8577  0128FE  5D62               	subwf	___lwdiv@dividend& (0+255),w,b
  8578  012900  0100               	movlb	0	; () banked
  8579  012902  5165               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8580  012904  0100               	movlb	0	; () banked
  8581  012906  5963               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  8582  012908  A0D8               	btfss	status,0,c
  8583  01290A  D00A               	goto	l5225
  8584                           
  8585                           ; BSR set to: 0
  8586  01290C  0100               	movlb	0	; () banked
  8587  01290E  5164               	movf	___lwdiv@divisor& (0+255),w,b
  8588  012910  0100               	movlb	0	; () banked
  8589  012912  5F62               	subwf	___lwdiv@dividend& (0+255),f,b
  8590  012914  0100               	movlb	0	; () banked
  8591  012916  5165               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8592  012918  0100               	movlb	0	; () banked
  8593  01291A  5B63               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  8594                           
  8595                           ; BSR set to: 0
  8596  01291C  0100               	movlb	0	; () banked
  8597  01291E  8167               	bsf	___lwdiv@quotient& (0+255),0,b
  8598  012920                     l5225:
  8599                           
  8600                           ; BSR set to: 0
  8601  012920  0100               	movlb	0	; () banked
  8602  012922  90D8               	bcf	status,0,c
  8603  012924  3365               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  8604  012926  3364               	rrcf	___lwdiv@divisor& (0+255),f,b
  8605                           
  8606                           ; BSR set to: 0
  8607  012928  0100               	movlb	0	; () banked
  8608  01292A  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
  8609  01292C  D7E1               	goto	l5217
  8610  01292E                     l1357:
  8611                           
  8612                           ; BSR set to: 0
  8613  01292E  C067  F062         	movff	___lwdiv@quotient,?___lwdiv
  8614  012932  C068  F063         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8615                           
  8616                           ; BSR set to: 0
  8617  012936  0012               	return		;funcret
  8618  012938                     __end_of___lwdiv:
  8619                           	opt stack 0
  8620                           tblptru	equ	0xFF8
  8621                           tblptrh	equ	0xFF7
  8622                           tblptrl	equ	0xFF6
  8623                           tablat	equ	0xFF5
  8624                           prodh	equ	0xFF4
  8625                           prodl	equ	0xFF3
  8626                           intcon	equ	0xFF2
  8627                           intcon2	equ	0xFF1
  8628                           indf0	equ	0xFEF
  8629                           postinc0	equ	0xFEE
  8630                           fsr0h	equ	0xFEA
  8631                           fsr0l	equ	0xFE9
  8632                           wreg	equ	0xFE8
  8633                           postinc1	equ	0xFE6
  8634                           postdec1	equ	0xFE5
  8635                           fsr1h	equ	0xFE2
  8636                           fsr1l	equ	0xFE1
  8637                           indf2	equ	0xFDF
  8638                           postinc2	equ	0xFDE
  8639                           postdec2	equ	0xFDD
  8640                           fsr2h	equ	0xFDA
  8641                           fsr2l	equ	0xFD9
  8642                           status	equ	0xFD8
  8643                           
  8644 ;; *************** function _RTCC_loop *****************
  8645 ;; Defined at:
  8646 ;;		line 346 in file "../My_library/My_RTCC.c"
  8647 ;; Parameters:    Size  Location     Type
  8648 ;;		None
  8649 ;; Auto vars:     Size  Location     Type
  8650 ;;		None
  8651 ;; Return value:  Size  Location     Type
  8652 ;;		None               void
  8653 ;; Registers used:
  8654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/0
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8664 ;;Total ram usage:        0 bytes
  8665 ;; Hardware stack levels used:    1
  8666 ;; Hardware stack levels required when called:    8
  8667 ;; This function calls:
  8668 ;;		_RTCC_from_RTCC
  8669 ;; This function is called by:
  8670 ;;		_main
  8671 ;; This function uses a non-reentrant model
  8672 ;;
  8673                           
  8674                           	psect	text35
  8675  012C50                     __ptext35:
  8676                           	opt stack 0
  8677  012C50                     _RTCC_loop:
  8678                           	opt stack 22
  8679  012C50                     l455:
  8680  012C50  010F               	movlb	15	; () banked
  8681  012C52  B93F               	btfsc	63,4,b	;volatile
  8682  012C54  D7FD               	goto	l455
  8683                           
  8684                           ; BSR set to: 15
  8685                           ;My_RTCC.c: 349: now.halfsec = RTCCFGbits.HALFSEC;
  8686                           
  8687                           ; BSR set to: 15
  8688  012C56  0E00               	movlw	0
  8689  012C58  B73F               	btfsc	63,3,b	;volatile
  8690  012C5A  0E01               	movlw	1
  8691  012C5C  6E34               	movwf	_now+12,c
  8692                           
  8693                           ; BSR set to: 15
  8694                           ;My_RTCC.c: 350: if (prev_halfsec != now.halfsec) {
  8695  012C5E  5026               	movf	RTCC_loop@prev_halfsec,w,c
  8696  012C60  1834               	xorwf	_now+12,w,c
  8697  012C62  B4D8               	btfsc	status,2,c
  8698  012C64  0012               	return	
  8699                           
  8700                           ; BSR set to: 15
  8701                           ;My_RTCC.c: 351: prev_halfsec = now.halfsec;
  8702  012C66  C034  F026         	movff	_now+12,RTCC_loop@prev_halfsec
  8703                           
  8704                           ;My_RTCC.c: 352: now.colon = now.halfsec;
  8705  012C6A  C034  F033         	movff	_now+12,_now+11
  8706                           
  8707                           ; BSR set to: 15
  8708                           ;My_RTCC.c: 353: time_change_flag = 1;
  8709  012C6E  0E01               	movlw	1
  8710  012C70  0100               	movlb	0	; () banked
  8711  012C72  6FD6               	movwf	_time_change_flag& (0+255),b
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;My_RTCC.c: 354: RTCC_from_RTCC(&now);
  8715  012C74  0E28               	movlw	low _now
  8716  012C76  0100               	movlb	0	; () banked
  8717  012C78  6F81               	movwf	RTCC_from_RTCC@tm& (0+255),b
  8718  012C7A  0E00               	movlw	high _now
  8719  012C7C  0100               	movlb	0	; () banked
  8720  012C7E  6F82               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  8721  012C80  EC00  F097         	call	_RTCC_from_RTCC	;wreg free
  8722  012C84  0012               	return	
  8723  012C86                     __end_of_RTCC_loop:
  8724                           	opt stack 0
  8725                           tblptru	equ	0xFF8
  8726                           tblptrh	equ	0xFF7
  8727                           tblptrl	equ	0xFF6
  8728                           tablat	equ	0xFF5
  8729                           prodh	equ	0xFF4
  8730                           prodl	equ	0xFF3
  8731                           intcon	equ	0xFF2
  8732                           intcon2	equ	0xFF1
  8733                           indf0	equ	0xFEF
  8734                           postinc0	equ	0xFEE
  8735                           fsr0h	equ	0xFEA
  8736                           fsr0l	equ	0xFE9
  8737                           wreg	equ	0xFE8
  8738                           postinc1	equ	0xFE6
  8739                           postdec1	equ	0xFE5
  8740                           fsr1h	equ	0xFE2
  8741                           fsr1l	equ	0xFE1
  8742                           indf2	equ	0xFDF
  8743                           postinc2	equ	0xFDE
  8744                           postdec2	equ	0xFDD
  8745                           fsr2h	equ	0xFDA
  8746                           fsr2l	equ	0xFD9
  8747                           status	equ	0xFD8
  8748                           
  8749 ;; *************** function _RTCC_from_RTCC *****************
  8750 ;; Defined at:
  8751 ;;		line 193 in file "../My_library/My_RTCC.c"
  8752 ;; Parameters:    Size  Location     Type
  8753 ;;  tm              2   33[BANK0 ] PTR struct .
  8754 ;;		 -> now(14), 
  8755 ;; Auto vars:     Size  Location     Type
  8756 ;;		None
  8757 ;; Return value:  Size  Location     Type
  8758 ;;		None               void
  8759 ;; Registers used:
  8760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8761 ;; Tracked objects:
  8762 ;;		On entry : 0/0
  8763 ;;		On exit  : 0/0
  8764 ;;		Unchanged: 0/0
  8765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8766 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8769 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8770 ;;Total ram usage:        2 bytes
  8771 ;; Hardware stack levels used:    1
  8772 ;; Hardware stack levels required when called:    7
  8773 ;; This function calls:
  8774 ;;		_RTCC_to_caltime
  8775 ;;		_caltime_to_epoch
  8776 ;; This function is called by:
  8777 ;;		_RTCC_loop
  8778 ;;		_print_time
  8779 ;;		_light_loop
  8780 ;;		_main
  8781 ;;		_display_time_0802
  8782 ;;		_display_time_1602
  8783 ;;		_RTCC_adjust_time_inc
  8784 ;;		_RTCC_adjust_time_dec
  8785 ;; This function uses a non-reentrant model
  8786 ;;
  8787                           
  8788                           	psect	text36
  8789  012E00                     __ptext36:
  8790                           	opt stack 0
  8791  012E00                     _RTCC_from_RTCC:
  8792                           	opt stack 18
  8793                           
  8794                           ;My_RTCC.c: 194: RTCC_to_caltime(tm);
  8795                           
  8796                           ;incstack = 0
  8797  012E00  C081  F022         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
  8798  012E04  C082  F023         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
  8799  012E08  ECA0  F091         	call	_RTCC_to_caltime	;wreg free
  8800                           
  8801                           ;My_RTCC.c: 195: caltime_to_epoch(tm);
  8802  012E0C  C081  F074         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
  8803  012E10  C082  F075         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
  8804  012E14  EC96  F087         	call	_caltime_to_epoch	;wreg free
  8805  012E18  0012               	return		;funcret
  8806  012E1A                     __end_of_RTCC_from_RTCC:
  8807                           	opt stack 0
  8808                           tblptru	equ	0xFF8
  8809                           tblptrh	equ	0xFF7
  8810                           tblptrl	equ	0xFF6
  8811                           tablat	equ	0xFF5
  8812                           prodh	equ	0xFF4
  8813                           prodl	equ	0xFF3
  8814                           intcon	equ	0xFF2
  8815                           intcon2	equ	0xFF1
  8816                           indf0	equ	0xFEF
  8817                           postinc0	equ	0xFEE
  8818                           fsr0h	equ	0xFEA
  8819                           fsr0l	equ	0xFE9
  8820                           wreg	equ	0xFE8
  8821                           postinc1	equ	0xFE6
  8822                           postdec1	equ	0xFE5
  8823                           fsr1h	equ	0xFE2
  8824                           fsr1l	equ	0xFE1
  8825                           indf2	equ	0xFDF
  8826                           postinc2	equ	0xFDE
  8827                           postdec2	equ	0xFDD
  8828                           fsr2h	equ	0xFDA
  8829                           fsr2l	equ	0xFD9
  8830                           status	equ	0xFD8
  8831                           
  8832 ;; *************** function _caltime_to_epoch *****************
  8833 ;; Defined at:
  8834 ;;		line 173 in file "../My_library/My_RTCC.c"
  8835 ;; Parameters:    Size  Location     Type
  8836 ;;  tm              2   20[BANK0 ] PTR struct .
  8837 ;;		 -> now(14), 
  8838 ;; Auto vars:     Size  Location     Type
  8839 ;;  month           1   32[BANK0 ] unsigned char 
  8840 ;;  month           1   27[BANK0 ] unsigned char 
  8841 ;;  year            1   26[BANK0 ] unsigned char 
  8842 ;;  epoch           4   28[BANK0 ] unsigned long 
  8843 ;; Return value:  Size  Location     Type
  8844 ;;		None               void
  8845 ;; Registers used:
  8846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8847 ;; Tracked objects:
  8848 ;;		On entry : 0/0
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8852 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8853 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8854 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8855 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8856 ;;Total ram usage:       13 bytes
  8857 ;; Hardware stack levels used:    1
  8858 ;; Hardware stack levels required when called:    6
  8859 ;; This function calls:
  8860 ;;		___lmul
  8861 ;;		_month_length
  8862 ;; This function is called by:
  8863 ;;		_RTCC_from_RTCC
  8864 ;;		_RTCC_from_caltime
  8865 ;; This function uses a non-reentrant model
  8866 ;;
  8867                           
  8868                           	psect	text37
  8869  010F2C                     __ptext37:
  8870                           	opt stack 0
  8871  010F2C                     _caltime_to_epoch:
  8872                           	opt stack 18
  8873                           
  8874                           ;My_RTCC.c: 174: epoch_t epoch = 0;
  8875                           
  8876                           ;incstack = 0
  8877  010F2C  0E00               	movlw	0
  8878  010F2E  0100               	movlb	0	; () banked
  8879  010F30  6F7C               	movwf	caltime_to_epoch@epoch& (0+255),b
  8880  010F32  0E00               	movlw	0
  8881  010F34  6F7D               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
  8882  010F36  0E00               	movlw	0
  8883  010F38  6F7E               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
  8884  010F3A  0E00               	movlw	0
  8885  010F3C  6F7F               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
  8886                           
  8887                           ;My_RTCC.c: 175: for (uint8_t year = 0; year < tm->YY; year++) {
  8888  010F3E  0E00               	movlw	0
  8889  010F40  0100               	movlb	0	; () banked
  8890  010F42  6F7A               	movwf	caltime_to_epoch@year& (0+255),b
  8891  010F44  D037               	goto	l5173
  8892  010F46                     l5159:
  8893                           
  8894                           ; BSR set to: 0
  8895                           ;My_RTCC.c: 176: for (uint8_t month = 1; month <= 12; month++) {
  8896  010F46  0E01               	movlw	1
  8897  010F48  0100               	movlb	0	; () banked
  8898  010F4A  6F80               	movwf	caltime_to_epoch@month& (0+255),b
  8899  010F4C                     l5161:
  8900                           
  8901                           ; BSR set to: 0
  8902  010F4C  0E0C               	movlw	12
  8903  010F4E  0100               	movlb	0	; () banked
  8904  010F50  6580               	cpfsgt	caltime_to_epoch@month& (0+255),b
  8905  010F52  D001               	goto	l5165
  8906  010F54  D02D               	goto	l5171
  8907  010F56                     l5165:
  8908                           
  8909                           ; BSR set to: 0
  8910                           ;My_RTCC.c: 177: epoch += ((epoch_t)60*60*24) * month_length(year, month);
  8911  010F56  C080  F062         	movff	caltime_to_epoch@month,month_length@month
  8912  010F5A  0100               	movlb	0	; () banked
  8913  010F5C  517A               	movf	caltime_to_epoch@year& (0+255),w,b
  8914  010F5E  EC08  F08F         	call	_month_length
  8915  010F62  0100               	movlb	0	; () banked
  8916  010F64  6F76               	movwf	??_caltime_to_epoch& (0+255),b
  8917  010F66  0100               	movlb	0	; () banked
  8918  010F68  5176               	movf	??_caltime_to_epoch& (0+255),w,b
  8919  010F6A  0100               	movlb	0	; () banked
  8920  010F6C  6F68               	movwf	___lmul@multiplier& (0+255),b
  8921  010F6E  6B69               	clrf	(___lmul@multiplier+1)& (0+255),b
  8922  010F70  6B6A               	clrf	(___lmul@multiplier+2)& (0+255),b
  8923  010F72  6B6B               	clrf	(___lmul@multiplier+3)& (0+255),b
  8924  010F74  0E80               	movlw	128
  8925  010F76  0100               	movlb	0	; () banked
  8926  010F78  6F6C               	movwf	___lmul@multiplicand& (0+255),b
  8927  010F7A  0E51               	movlw	81
  8928  010F7C  6F6D               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8929  010F7E  0E01               	movlw	1
  8930  010F80  6F6E               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8931  010F82  0E00               	movlw	0
  8932  010F84  6F6F               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8933  010F86  EC9C  F094         	call	___lmul	;wreg free
  8934  010F8A  0100               	movlb	0	; () banked
  8935  010F8C  5168               	movf	?___lmul& (0+255),w,b
  8936  010F8E  0100               	movlb	0	; () banked
  8937  010F90  277C               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8938  010F92  0100               	movlb	0	; () banked
  8939  010F94  5169               	movf	(?___lmul+1)& (0+255),w,b
  8940  010F96  0100               	movlb	0	; () banked
  8941  010F98  237D               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8942  010F9A  0100               	movlb	0	; () banked
  8943  010F9C  516A               	movf	(?___lmul+2)& (0+255),w,b
  8944  010F9E  0100               	movlb	0	; () banked
  8945  010FA0  237E               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8946  010FA2  0100               	movlb	0	; () banked
  8947  010FA4  516B               	movf	(?___lmul+3)& (0+255),w,b
  8948  010FA6  0100               	movlb	0	; () banked
  8949  010FA8  237F               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8950                           
  8951                           ; BSR set to: 0
  8952  010FAA  0100               	movlb	0	; () banked
  8953  010FAC  2B80               	incf	caltime_to_epoch@month& (0+255),f,b
  8954  010FAE  D7CE               	goto	l5161
  8955  010FB0                     l5171:
  8956                           
  8957                           ; BSR set to: 0
  8958  010FB0  0100               	movlb	0	; () banked
  8959  010FB2  2B7A               	incf	caltime_to_epoch@year& (0+255),f,b
  8960  010FB4                     l5173:
  8961                           
  8962                           ; BSR set to: 0
  8963  010FB4  0100               	movlb	0	; () banked
  8964  010FB6  EE20 F00A          	lfsr	2,10
  8965  010FBA  5174               	movf	caltime_to_epoch@tm& (0+255),w,b
  8966  010FBC  26D9               	addwf	fsr2l,f,c
  8967  010FBE  5175               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  8968  010FC0  22DA               	addwfc	fsr2h,f,c
  8969  010FC2  50DE               	movf	postinc2,w,c
  8970  010FC4  0100               	movlb	0	; () banked
  8971  010FC6  5D7A               	subwf	caltime_to_epoch@year& (0+255),w,b
  8972  010FC8  A0D8               	btfss	status,0,c
  8973  010FCA  D7BD               	goto	l5159
  8974                           
  8975                           ; BSR set to: 0
  8976                           ;My_RTCC.c: 178: }
  8977                           ;My_RTCC.c: 179: }
  8978                           ;My_RTCC.c: 180: for (uint8_t month = 1; month < tm->MM; month++) {
  8979                           
  8980                           ; BSR set to: 0
  8981  010FCC  0E01               	movlw	1
  8982  010FCE  0100               	movlb	0	; () banked
  8983  010FD0  6F7B               	movwf	caltime_to_epoch@month_1932& (0+255),b
  8984  010FD2  D032               	goto	l5181
  8985  010FD4                     l5177:
  8986                           
  8987                           ; BSR set to: 0
  8988                           ;My_RTCC.c: 181: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
  8989  010FD4  C07B  F062         	movff	caltime_to_epoch@month_1932,month_length@month
  8990  010FD8  0100               	movlb	0	; () banked
  8991  010FDA  EE20 F00A          	lfsr	2,10
  8992  010FDE  5174               	movf	caltime_to_epoch@tm& (0+255),w,b
  8993  010FE0  26D9               	addwf	fsr2l,f,c
  8994  010FE2  5175               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  8995  010FE4  22DA               	addwfc	fsr2h,f,c
  8996  010FE6  50DF               	movf	indf2,w,c
  8997  010FE8  EC08  F08F         	call	_month_length
  8998  010FEC  0100               	movlb	0	; () banked
  8999  010FEE  6F76               	movwf	??_caltime_to_epoch& (0+255),b
  9000  010FF0  0100               	movlb	0	; () banked
  9001  010FF2  5176               	movf	??_caltime_to_epoch& (0+255),w,b
  9002  010FF4  0100               	movlb	0	; () banked
  9003  010FF6  6F68               	movwf	___lmul@multiplier& (0+255),b
  9004  010FF8  6B69               	clrf	(___lmul@multiplier+1)& (0+255),b
  9005  010FFA  6B6A               	clrf	(___lmul@multiplier+2)& (0+255),b
  9006  010FFC  6B6B               	clrf	(___lmul@multiplier+3)& (0+255),b
  9007  010FFE  0E80               	movlw	128
  9008  011000  0100               	movlb	0	; () banked
  9009  011002  6F6C               	movwf	___lmul@multiplicand& (0+255),b
  9010  011004  0E51               	movlw	81
  9011  011006  6F6D               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9012  011008  0E01               	movlw	1
  9013  01100A  6F6E               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9014  01100C  0E00               	movlw	0
  9015  01100E  6F6F               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9016  011010  EC9C  F094         	call	___lmul	;wreg free
  9017  011014  0100               	movlb	0	; () banked
  9018  011016  5168               	movf	?___lmul& (0+255),w,b
  9019  011018  0100               	movlb	0	; () banked
  9020  01101A  277C               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9021  01101C  0100               	movlb	0	; () banked
  9022  01101E  5169               	movf	(?___lmul+1)& (0+255),w,b
  9023  011020  0100               	movlb	0	; () banked
  9024  011022  237D               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9025  011024  0100               	movlb	0	; () banked
  9026  011026  516A               	movf	(?___lmul+2)& (0+255),w,b
  9027  011028  0100               	movlb	0	; () banked
  9028  01102A  237E               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9029  01102C  0100               	movlb	0	; () banked
  9030  01102E  516B               	movf	(?___lmul+3)& (0+255),w,b
  9031  011030  0100               	movlb	0	; () banked
  9032  011032  237F               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9033                           
  9034                           ; BSR set to: 0
  9035  011034  0100               	movlb	0	; () banked
  9036  011036  2B7B               	incf	caltime_to_epoch@month_1932& (0+255),f,b
  9037  011038                     l5181:
  9038                           
  9039                           ; BSR set to: 0
  9040  011038  0100               	movlb	0	; () banked
  9041  01103A  EE20 F009          	lfsr	2,9
  9042  01103E  5174               	movf	caltime_to_epoch@tm& (0+255),w,b
  9043  011040  26D9               	addwf	fsr2l,f,c
  9044  011042  5175               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9045  011044  22DA               	addwfc	fsr2h,f,c
  9046  011046  50DE               	movf	postinc2,w,c
  9047  011048  0100               	movlb	0	; () banked
  9048  01104A  5D7B               	subwf	caltime_to_epoch@month_1932& (0+255),w,b
  9049  01104C  A0D8               	btfss	status,0,c
  9050  01104E  D7C2               	goto	l5177
  9051                           
  9052                           ; BSR set to: 0
  9053                           ;My_RTCC.c: 182: }
  9054                           ;My_RTCC.c: 183: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
  9055                           
  9056                           ; BSR set to: 0
  9057  011050  0EFF               	movlw	255
  9058  011052  0100               	movlb	0	; () banked
  9059  011054  6F76               	movwf	??_caltime_to_epoch& (0+255),b
  9060  011056  0EFF               	movlw	255
  9061  011058  0100               	movlb	0	; () banked
  9062  01105A  6F77               	movwf	(??_caltime_to_epoch+1)& (0+255),b
  9063  01105C  0100               	movlb	0	; () banked
  9064  01105E  EE20 F008          	lfsr	2,8
  9065  011062  5174               	movf	caltime_to_epoch@tm& (0+255),w,b
  9066  011064  26D9               	addwf	fsr2l,f,c
  9067  011066  5175               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9068  011068  22DA               	addwfc	fsr2h,f,c
  9069  01106A  50DF               	movf	indf2,w,c
  9070  01106C  0100               	movlb	0	; () banked
  9071  01106E  6F78               	movwf	(??_caltime_to_epoch+2)& (0+255),b
  9072  011070  6B79               	clrf	(??_caltime_to_epoch+3)& (0+255),b
  9073  011072  0100               	movlb	0	; () banked
  9074  011074  5176               	movf	??_caltime_to_epoch& (0+255),w,b
  9075  011076  0100               	movlb	0	; () banked
  9076  011078  2778               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
  9077  01107A  0100               	movlb	0	; () banked
  9078  01107C  5177               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  9079  01107E  0100               	movlb	0	; () banked
  9080  011080  2379               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
  9081  011082  C078  F068         	movff	??_caltime_to_epoch+2,___lmul@multiplier
  9082  011086  C079  F069         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
  9083  01108A  0100               	movlb	0	; () banked
  9084  01108C  0E00               	movlw	0
  9085  01108E  BF69               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  9086  011090  0EFF               	movlw	-1
  9087  011092  6F6A               	movwf	(___lmul@multiplier+2)& (0+255),b
  9088  011094  6F6B               	movwf	(___lmul@multiplier+3)& (0+255),b
  9089  011096  0E80               	movlw	128
  9090  011098  0100               	movlb	0	; () banked
  9091  01109A  6F6C               	movwf	___lmul@multiplicand& (0+255),b
  9092  01109C  0E51               	movlw	81
  9093  01109E  6F6D               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9094  0110A0  0E01               	movlw	1
  9095  0110A2  6F6E               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9096  0110A4  0E00               	movlw	0
  9097  0110A6  6F6F               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9098  0110A8  EC9C  F094         	call	___lmul	;wreg free
  9099  0110AC  0100               	movlb	0	; () banked
  9100  0110AE  5168               	movf	?___lmul& (0+255),w,b
  9101  0110B0  0100               	movlb	0	; () banked
  9102  0110B2  277C               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9103  0110B4  0100               	movlb	0	; () banked
  9104  0110B6  5169               	movf	(?___lmul+1)& (0+255),w,b
  9105  0110B8  0100               	movlb	0	; () banked
  9106  0110BA  237D               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9107  0110BC  0100               	movlb	0	; () banked
  9108  0110BE  516A               	movf	(?___lmul+2)& (0+255),w,b
  9109  0110C0  0100               	movlb	0	; () banked
  9110  0110C2  237E               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9111  0110C4  0100               	movlb	0	; () banked
  9112  0110C6  516B               	movf	(?___lmul+3)& (0+255),w,b
  9113  0110C8  0100               	movlb	0	; () banked
  9114  0110CA  237F               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9115                           
  9116                           ;My_RTCC.c: 184: epoch += ((epoch_t)60*60) * tm->hh;
  9117  0110CC  0100               	movlb	0	; () banked
  9118  0110CE  EE20 F006          	lfsr	2,6
  9119  0110D2  5174               	movf	caltime_to_epoch@tm& (0+255),w,b
  9120  0110D4  26D9               	addwf	fsr2l,f,c
  9121  0110D6  5175               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9122  0110D8  22DA               	addwfc	fsr2h,f,c
  9123  0110DA  50DF               	movf	indf2,w,c
  9124  0110DC  0100               	movlb	0	; () banked
  9125  0110DE  6F76               	movwf	??_caltime_to_epoch& (0+255),b
  9126  0110E0  0100               	movlb	0	; () banked
  9127  0110E2  5176               	movf	??_caltime_to_epoch& (0+255),w,b
  9128  0110E4  0100               	movlb	0	; () banked
  9129  0110E6  6F68               	movwf	___lmul@multiplier& (0+255),b
  9130  0110E8  6B69               	clrf	(___lmul@multiplier+1)& (0+255),b
  9131  0110EA  6B6A               	clrf	(___lmul@multiplier+2)& (0+255),b
  9132  0110EC  6B6B               	clrf	(___lmul@multiplier+3)& (0+255),b
  9133  0110EE  0E10               	movlw	16
  9134  0110F0  0100               	movlb	0	; () banked
  9135  0110F2  6F6C               	movwf	___lmul@multiplicand& (0+255),b
  9136  0110F4  0E0E               	movlw	14
  9137  0110F6  6F6D               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9138  0110F8  0E00               	movlw	0
  9139  0110FA  6F6E               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9140  0110FC  0E00               	movlw	0
  9141  0110FE  6F6F               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9142  011100  EC9C  F094         	call	___lmul	;wreg free
  9143  011104  0100               	movlb	0	; () banked
  9144  011106  5168               	movf	?___lmul& (0+255),w,b
  9145  011108  0100               	movlb	0	; () banked
  9146  01110A  277C               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9147  01110C  0100               	movlb	0	; () banked
  9148  01110E  5169               	movf	(?___lmul+1)& (0+255),w,b
  9149  011110  0100               	movlb	0	; () banked
  9150  011112  237D               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9151  011114  0100               	movlb	0	; () banked
  9152  011116  516A               	movf	(?___lmul+2)& (0+255),w,b
  9153  011118  0100               	movlb	0	; () banked
  9154  01111A  237E               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9155  01111C  0100               	movlb	0	; () banked
  9156  01111E  516B               	movf	(?___lmul+3)& (0+255),w,b
  9157  011120  0100               	movlb	0	; () banked
  9158  011122  237F               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9159                           
  9160                           ;My_RTCC.c: 185: epoch += ((epoch_t)60) * tm->mm;
  9161  011124  0100               	movlb	0	; () banked
  9162  011126  EE20 F005          	lfsr	2,5
  9163  01112A  5174               	movf	caltime_to_epoch@tm& (0+255),w,b
  9164  01112C  26D9               	addwf	fsr2l,f,c
  9165  01112E  5175               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9166  011130  22DA               	addwfc	fsr2h,f,c
  9167  011132  50DF               	movf	indf2,w,c
  9168  011134  0100               	movlb	0	; () banked
  9169  011136  6F76               	movwf	??_caltime_to_epoch& (0+255),b
  9170  011138  0100               	movlb	0	; () banked
  9171  01113A  5176               	movf	??_caltime_to_epoch& (0+255),w,b
  9172  01113C  0100               	movlb	0	; () banked
  9173  01113E  6F68               	movwf	___lmul@multiplier& (0+255),b
  9174  011140  6B69               	clrf	(___lmul@multiplier+1)& (0+255),b
  9175  011142  6B6A               	clrf	(___lmul@multiplier+2)& (0+255),b
  9176  011144  6B6B               	clrf	(___lmul@multiplier+3)& (0+255),b
  9177  011146  0E3C               	movlw	60
  9178  011148  0100               	movlb	0	; () banked
  9179  01114A  6F6C               	movwf	___lmul@multiplicand& (0+255),b
  9180  01114C  0E00               	movlw	0
  9181  01114E  6F6D               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9182  011150  0E00               	movlw	0
  9183  011152  6F6E               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9184  011154  0E00               	movlw	0
  9185  011156  6F6F               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9186  011158  EC9C  F094         	call	___lmul	;wreg free
  9187  01115C  0100               	movlb	0	; () banked
  9188  01115E  5168               	movf	?___lmul& (0+255),w,b
  9189  011160  0100               	movlb	0	; () banked
  9190  011162  277C               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9191  011164  0100               	movlb	0	; () banked
  9192  011166  5169               	movf	(?___lmul+1)& (0+255),w,b
  9193  011168  0100               	movlb	0	; () banked
  9194  01116A  237D               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9195  01116C  0100               	movlb	0	; () banked
  9196  01116E  516A               	movf	(?___lmul+2)& (0+255),w,b
  9197  011170  0100               	movlb	0	; () banked
  9198  011172  237E               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9199  011174  0100               	movlb	0	; () banked
  9200  011176  516B               	movf	(?___lmul+3)& (0+255),w,b
  9201  011178  0100               	movlb	0	; () banked
  9202  01117A  237F               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9203                           
  9204                           ; BSR set to: 0
  9205                           ;My_RTCC.c: 186: epoch += tm->ss;
  9206  01117C  0100               	movlb	0	; () banked
  9207  01117E  EE20 F004          	lfsr	2,4
  9208  011182  5174               	movf	caltime_to_epoch@tm& (0+255),w,b
  9209  011184  26D9               	addwf	fsr2l,f,c
  9210  011186  5175               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9211  011188  22DA               	addwfc	fsr2h,f,c
  9212  01118A  50DF               	movf	indf2,w,c
  9213  01118C  0100               	movlb	0	; () banked
  9214  01118E  6F76               	movwf	??_caltime_to_epoch& (0+255),b
  9215  011190  0100               	movlb	0	; () banked
  9216  011192  5176               	movf	??_caltime_to_epoch& (0+255),w,b
  9217  011194  0100               	movlb	0	; () banked
  9218  011196  277C               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9219  011198  0E00               	movlw	0
  9220  01119A  237D               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9221  01119C  237E               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9222  01119E  237F               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9223                           
  9224                           ; BSR set to: 0
  9225                           ;My_RTCC.c: 188: tm->epoch = epoch;
  9226  0111A0  C074  FFD9         	movff	caltime_to_epoch@tm,fsr2l
  9227  0111A4  C075  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
  9228  0111A8  C07C  FFDE         	movff	caltime_to_epoch@epoch,postinc2
  9229  0111AC  C07D  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
  9230  0111B0  C07E  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
  9231  0111B4  C07F  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
  9232                           
  9233                           ; BSR set to: 0
  9234  0111B8  0012               	return		;funcret
  9235  0111BA                     __end_of_caltime_to_epoch:
  9236                           	opt stack 0
  9237                           tblptru	equ	0xFF8
  9238                           tblptrh	equ	0xFF7
  9239                           tblptrl	equ	0xFF6
  9240                           tablat	equ	0xFF5
  9241                           prodh	equ	0xFF4
  9242                           prodl	equ	0xFF3
  9243                           intcon	equ	0xFF2
  9244                           intcon2	equ	0xFF1
  9245                           indf0	equ	0xFEF
  9246                           postinc0	equ	0xFEE
  9247                           fsr0h	equ	0xFEA
  9248                           fsr0l	equ	0xFE9
  9249                           wreg	equ	0xFE8
  9250                           postinc1	equ	0xFE6
  9251                           postdec1	equ	0xFE5
  9252                           fsr1h	equ	0xFE2
  9253                           fsr1l	equ	0xFE1
  9254                           indf2	equ	0xFDF
  9255                           postinc2	equ	0xFDE
  9256                           postdec2	equ	0xFDD
  9257                           fsr2h	equ	0xFDA
  9258                           fsr2l	equ	0xFD9
  9259                           status	equ	0xFD8
  9260                           
  9261 ;; *************** function _RTCC_to_caltime *****************
  9262 ;; Defined at:
  9263 ;;		line 83 in file "../My_library/My_RTCC.c"
  9264 ;; Parameters:    Size  Location     Type
  9265 ;;  tm              2   33[COMRAM] PTR struct .
  9266 ;;		 -> now(14), 
  9267 ;; Auto vars:     Size  Location     Type
  9268 ;;  dumy            1    0[BANK0 ] unsigned char 
  9269 ;; Return value:  Size  Location     Type
  9270 ;;		None               void
  9271 ;; Registers used:
  9272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9273 ;; Tracked objects:
  9274 ;;		On entry : 0/0
  9275 ;;		On exit  : 0/0
  9276 ;;		Unchanged: 0/0
  9277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9278 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9279 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9281 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9282 ;;Total ram usage:        3 bytes
  9283 ;; Hardware stack levels used:    1
  9284 ;; Hardware stack levels required when called:    5
  9285 ;; This function calls:
  9286 ;;		_x_to_d
  9287 ;; This function is called by:
  9288 ;;		_RTCC_from_RTCC
  9289 ;; This function uses a non-reentrant model
  9290 ;;
  9291                           
  9292                           	psect	text38
  9293  012340                     __ptext38:
  9294                           	opt stack 0
  9295  012340                     _RTCC_to_caltime:
  9296                           	opt stack 19
  9297  012340                     l333:
  9298  012340  010F               	movlb	15	; () banked
  9299  012342  B93F               	btfsc	63,4,b	;volatile
  9300  012344  D7FD               	goto	l333
  9301                           
  9302                           ; BSR set to: 15
  9303                           ;My_RTCC.c: 86: RTCCFGbits.RTCPTR0 = 1;
  9304  012346  010F               	movlb	15	; () banked
  9305  012348  813F               	bsf	63,0,b	;volatile
  9306                           
  9307                           ;My_RTCC.c: 87: RTCCFGbits.RTCPTR1 = 1;
  9308  01234A  010F               	movlb	15	; () banked
  9309  01234C  833F               	bsf	63,1,b	;volatile
  9310                           
  9311                           ; BSR set to: 15
  9312                           ;My_RTCC.c: 89: tm->YY = x_to_d(RTCVALL);
  9313  01234E  EE20 F00A          	lfsr	2,10
  9314  012352  5022               	movf	RTCC_to_caltime@tm,w,c
  9315  012354  26D9               	addwf	fsr2l,f,c
  9316  012356  5023               	movf	RTCC_to_caltime@tm+1,w,c
  9317  012358  22DA               	addwfc	fsr2h,f,c
  9318  01235A  010F               	movlb	15	; () banked
  9319  01235C  513A               	movf	58,w,b	;volatile
  9320  01235E  EC1A  F097         	call	_x_to_d
  9321  012362  6EDF               	movwf	indf2,c
  9322                           
  9323                           ;My_RTCC.c: 90: uint8_t dumy = RTCVALH;
  9324  012364  CF3B F060          	movff	3899,RTCC_to_caltime@dumy	;volatile
  9325                           
  9326                           ;My_RTCC.c: 91: tm->DD = x_to_d(RTCVALL);
  9327  012368  EE20 F008          	lfsr	2,8
  9328  01236C  5022               	movf	RTCC_to_caltime@tm,w,c
  9329  01236E  26D9               	addwf	fsr2l,f,c
  9330  012370  5023               	movf	RTCC_to_caltime@tm+1,w,c
  9331  012372  22DA               	addwfc	fsr2h,f,c
  9332  012374  010F               	movlb	15	; () banked
  9333  012376  513A               	movf	58,w,b	;volatile
  9334  012378  EC1A  F097         	call	_x_to_d
  9335  01237C  6EDF               	movwf	indf2,c
  9336                           
  9337                           ;My_RTCC.c: 92: tm->MM = x_to_d(RTCVALH);
  9338  01237E  EE20 F009          	lfsr	2,9
  9339  012382  5022               	movf	RTCC_to_caltime@tm,w,c
  9340  012384  26D9               	addwf	fsr2l,f,c
  9341  012386  5023               	movf	RTCC_to_caltime@tm+1,w,c
  9342  012388  22DA               	addwfc	fsr2h,f,c
  9343  01238A  010F               	movlb	15	; () banked
  9344  01238C  513B               	movf	59,w,b	;volatile
  9345  01238E  EC1A  F097         	call	_x_to_d
  9346  012392  6EDF               	movwf	indf2,c
  9347                           
  9348                           ;My_RTCC.c: 93: tm->hh = x_to_d(RTCVALL);
  9349  012394  EE20 F006          	lfsr	2,6
  9350  012398  5022               	movf	RTCC_to_caltime@tm,w,c
  9351  01239A  26D9               	addwf	fsr2l,f,c
  9352  01239C  5023               	movf	RTCC_to_caltime@tm+1,w,c
  9353  01239E  22DA               	addwfc	fsr2h,f,c
  9354  0123A0  010F               	movlb	15	; () banked
  9355  0123A2  513A               	movf	58,w,b	;volatile
  9356  0123A4  EC1A  F097         	call	_x_to_d
  9357  0123A8  6EDF               	movwf	indf2,c
  9358                           
  9359                           ;My_RTCC.c: 94: tm->EE = x_to_d(RTCVALH);
  9360  0123AA  EE20 F007          	lfsr	2,7
  9361  0123AE  5022               	movf	RTCC_to_caltime@tm,w,c
  9362  0123B0  26D9               	addwf	fsr2l,f,c
  9363  0123B2  5023               	movf	RTCC_to_caltime@tm+1,w,c
  9364  0123B4  22DA               	addwfc	fsr2h,f,c
  9365  0123B6  010F               	movlb	15	; () banked
  9366  0123B8  513B               	movf	59,w,b	;volatile
  9367  0123BA  EC1A  F097         	call	_x_to_d
  9368  0123BE  6EDF               	movwf	indf2,c
  9369                           
  9370                           ;My_RTCC.c: 95: tm->ss = x_to_d(RTCVALL);
  9371  0123C0  EE20 F004          	lfsr	2,4
  9372  0123C4  5022               	movf	RTCC_to_caltime@tm,w,c
  9373  0123C6  26D9               	addwf	fsr2l,f,c
  9374  0123C8  5023               	movf	RTCC_to_caltime@tm+1,w,c
  9375  0123CA  22DA               	addwfc	fsr2h,f,c
  9376  0123CC  010F               	movlb	15	; () banked
  9377  0123CE  513A               	movf	58,w,b	;volatile
  9378  0123D0  EC1A  F097         	call	_x_to_d
  9379  0123D4  6EDF               	movwf	indf2,c
  9380                           
  9381                           ;My_RTCC.c: 96: tm->mm = x_to_d(RTCVALH);
  9382  0123D6  EE20 F005          	lfsr	2,5
  9383  0123DA  5022               	movf	RTCC_to_caltime@tm,w,c
  9384  0123DC  26D9               	addwf	fsr2l,f,c
  9385  0123DE  5023               	movf	RTCC_to_caltime@tm+1,w,c
  9386  0123E0  22DA               	addwfc	fsr2h,f,c
  9387  0123E2  010F               	movlb	15	; () banked
  9388  0123E4  513B               	movf	59,w,b	;volatile
  9389  0123E6  EC1A  F097         	call	_x_to_d
  9390  0123EA  6EDF               	movwf	indf2,c
  9391  0123EC  0012               	return		;funcret
  9392  0123EE                     __end_of_RTCC_to_caltime:
  9393                           	opt stack 0
  9394                           tblptru	equ	0xFF8
  9395                           tblptrh	equ	0xFF7
  9396                           tblptrl	equ	0xFF6
  9397                           tablat	equ	0xFF5
  9398                           prodh	equ	0xFF4
  9399                           prodl	equ	0xFF3
  9400                           intcon	equ	0xFF2
  9401                           intcon2	equ	0xFF1
  9402                           indf0	equ	0xFEF
  9403                           postinc0	equ	0xFEE
  9404                           fsr0h	equ	0xFEA
  9405                           fsr0l	equ	0xFE9
  9406                           wreg	equ	0xFE8
  9407                           postinc1	equ	0xFE6
  9408                           postdec1	equ	0xFE5
  9409                           fsr1h	equ	0xFE2
  9410                           fsr1l	equ	0xFE1
  9411                           indf2	equ	0xFDF
  9412                           postinc2	equ	0xFDE
  9413                           postdec2	equ	0xFDD
  9414                           fsr2h	equ	0xFDA
  9415                           fsr2l	equ	0xFD9
  9416                           status	equ	0xFD8
  9417                           
  9418 ;; *************** function _x_to_d *****************
  9419 ;; Defined at:
  9420 ;;		line 45 in file "../My_library/My_RTCC.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;  hex             1    wreg     unsigned char 
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;  hex             1   32[COMRAM] unsigned char 
  9425 ;; Return value:  Size  Location     Type
  9426 ;;                  1    wreg      unsigned char 
  9427 ;; Registers used:
  9428 ;;		wreg, status,2, status,0, prodl, prodh
  9429 ;; Tracked objects:
  9430 ;;		On entry : 0/0
  9431 ;;		On exit  : 0/0
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9435 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9436 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9437 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9438 ;;Total ram usage:        2 bytes
  9439 ;; Hardware stack levels used:    1
  9440 ;; Hardware stack levels required when called:    4
  9441 ;; This function calls:
  9442 ;;		Nothing
  9443 ;; This function is called by:
  9444 ;;		_RTCC_to_caltime
  9445 ;; This function uses a non-reentrant model
  9446 ;;
  9447                           
  9448                           	psect	text39
  9449  012E34                     __ptext39:
  9450                           	opt stack 0
  9451  012E34                     _x_to_d:
  9452                           	opt stack 19
  9453                           
  9454                           ;incstack = 0
  9455                           ;x_to_d@hex stored from wreg
  9456  012E34  6E21               	movwf	x_to_d@hex,c
  9457                           
  9458                           ;My_RTCC.c: 46: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
  9459  012E36  C021  F020         	movff	x_to_d@hex,??_x_to_d
  9460  012E3A  0E0F               	movlw	15
  9461  012E3C  1620               	andwf	??_x_to_d,f,c
  9462  012E3E  3821               	swapf	x_to_d@hex,w,c
  9463  012E40  0B0F               	andlw	15
  9464  012E42  0B0F               	andlw	15
  9465  012E44  0D0A               	mullw	10
  9466  012E46  50F3               	movf	prodl,w,c
  9467  012E48  2420               	addwf	??_x_to_d,w,c
  9468  012E4A  0012               	return	
  9469  012E4C                     __end_of_x_to_d:
  9470                           	opt stack 0
  9471                           tblptru	equ	0xFF8
  9472                           tblptrh	equ	0xFF7
  9473                           tblptrl	equ	0xFF6
  9474                           tablat	equ	0xFF5
  9475                           prodh	equ	0xFF4
  9476                           prodl	equ	0xFF3
  9477                           intcon	equ	0xFF2
  9478                           intcon2	equ	0xFF1
  9479                           indf0	equ	0xFEF
  9480                           postinc0	equ	0xFEE
  9481                           fsr0h	equ	0xFEA
  9482                           fsr0l	equ	0xFE9
  9483                           wreg	equ	0xFE8
  9484                           postinc1	equ	0xFE6
  9485                           postdec1	equ	0xFE5
  9486                           fsr1h	equ	0xFE2
  9487                           fsr1l	equ	0xFE1
  9488                           indf2	equ	0xFDF
  9489                           postinc2	equ	0xFDE
  9490                           postdec2	equ	0xFDD
  9491                           fsr2h	equ	0xFDA
  9492                           fsr2l	equ	0xFD9
  9493                           status	equ	0xFD8
  9494                           
  9495 ;; *************** function _RTCC_from_epoch *****************
  9496 ;; Defined at:
  9497 ;;		line 204 in file "../My_library/My_RTCC.c"
  9498 ;; Parameters:    Size  Location     Type
  9499 ;;  tm              2   55[BANK0 ] PTR struct .
  9500 ;;		 -> now(14), 
  9501 ;; Auto vars:     Size  Location     Type
  9502 ;;		None
  9503 ;; Return value:  Size  Location     Type
  9504 ;;		None               void
  9505 ;; Registers used:
  9506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9507 ;; Tracked objects:
  9508 ;;		On entry : 0/0
  9509 ;;		On exit  : 0/0
  9510 ;;		Unchanged: 0/0
  9511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9512 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9515 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9516 ;;Total ram usage:        2 bytes
  9517 ;; Hardware stack levels used:    1
  9518 ;; Hardware stack levels required when called:    7
  9519 ;; This function calls:
  9520 ;;		_caltime_to_RTCC
  9521 ;;		_epoch_to_caltime
  9522 ;; This function is called by:
  9523 ;;		_main
  9524 ;;		_RTCC_adjust_time_inc
  9525 ;;		_RTCC_adjust_time_dec
  9526 ;; This function uses a non-reentrant model
  9527 ;;
  9528                           
  9529                           	psect	text40
  9530  012E1A                     __ptext40:
  9531                           	opt stack 0
  9532  012E1A                     _RTCC_from_epoch:
  9533                           	opt stack 23
  9534                           
  9535                           ;My_RTCC.c: 205: epoch_to_caltime(tm);
  9536                           
  9537                           ;incstack = 0
  9538  012E1A  C097  F089         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
  9539  012E1E  C098  F08A         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
  9540  012E22  EC26  F08B         	call	_epoch_to_caltime	;wreg free
  9541                           
  9542                           ;My_RTCC.c: 206: caltime_to_RTCC(tm);
  9543  012E26  C097  F072         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
  9544  012E2A  C098  F073         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
  9545  012E2E  ECCB  F08D         	call	_caltime_to_RTCC	;wreg free
  9546  012E32  0012               	return		;funcret
  9547  012E34                     __end_of_RTCC_from_epoch:
  9548                           	opt stack 0
  9549                           tblptru	equ	0xFF8
  9550                           tblptrh	equ	0xFF7
  9551                           tblptrl	equ	0xFF6
  9552                           tablat	equ	0xFF5
  9553                           prodh	equ	0xFF4
  9554                           prodl	equ	0xFF3
  9555                           intcon	equ	0xFF2
  9556                           intcon2	equ	0xFF1
  9557                           indf0	equ	0xFEF
  9558                           postinc0	equ	0xFEE
  9559                           fsr0h	equ	0xFEA
  9560                           fsr0l	equ	0xFE9
  9561                           wreg	equ	0xFE8
  9562                           postinc1	equ	0xFE6
  9563                           postdec1	equ	0xFE5
  9564                           fsr1h	equ	0xFE2
  9565                           fsr1l	equ	0xFE1
  9566                           indf2	equ	0xFDF
  9567                           postinc2	equ	0xFDE
  9568                           postdec2	equ	0xFDD
  9569                           fsr2h	equ	0xFDA
  9570                           fsr2l	equ	0xFD9
  9571                           status	equ	0xFD8
  9572                           
  9573 ;; *************** function _epoch_to_caltime *****************
  9574 ;; Defined at:
  9575 ;;		line 119 in file "../My_library/My_RTCC.c"
  9576 ;; Parameters:    Size  Location     Type
  9577 ;;  tm              2   41[BANK0 ] PTR struct .
  9578 ;;		 -> now(14), 
  9579 ;; Auto vars:     Size  Location     Type
  9580 ;;  num             4   51[BANK0 ] unsigned long 
  9581 ;;  day             2   47[BANK0 ] unsigned int 
  9582 ;;  day_since_ep    2   45[BANK0 ] unsigned int 
  9583 ;;  month           1   50[BANK0 ] unsigned char 
  9584 ;;  year            1   49[BANK0 ] unsigned char 
  9585 ;; Return value:  Size  Location     Type
  9586 ;;		None               void
  9587 ;; Registers used:
  9588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9589 ;; Tracked objects:
  9590 ;;		On entry : 0/0
  9591 ;;		On exit  : 0/0
  9592 ;;		Unchanged: 0/0
  9593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9594 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9595 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9596 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9597 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9598 ;;Total ram usage:       14 bytes
  9599 ;; Hardware stack levels used:    1
  9600 ;; Hardware stack levels required when called:    6
  9601 ;; This function calls:
  9602 ;;		_get_quot_rem
  9603 ;;		_month_length
  9604 ;; This function is called by:
  9605 ;;		_RTCC_from_caltime
  9606 ;;		_RTCC_from_epoch
  9607 ;; This function uses a non-reentrant model
  9608 ;;
  9609                           
  9610                           	psect	text41
  9611  01164C                     __ptext41:
  9612                           	opt stack 0
  9613  01164C                     _epoch_to_caltime:
  9614                           	opt stack 19
  9615                           
  9616                           ;My_RTCC.c: 122: static uint16_t day_cache = 0;
  9617                           ;My_RTCC.c: 123: static uint8_t month_cache = 1;
  9618                           ;My_RTCC.c: 124: static uint8_t year_cache = 0;
  9619                           ;My_RTCC.c: 125: uint16_t day_since_epoch;
  9620                           ;My_RTCC.c: 126: uint16_t day;
  9621                           ;My_RTCC.c: 127: uint8_t year = 0;
  9622                           
  9623                           ;incstack = 0
  9624  01164C  0E00               	movlw	0
  9625  01164E  0100               	movlb	0	; () banked
  9626  011650  6F91               	movwf	epoch_to_caltime@year& (0+255),b
  9627                           
  9628                           ;My_RTCC.c: 128: uint8_t month = 1;
  9629  011652  0E01               	movlw	1
  9630  011654  0100               	movlb	0	; () banked
  9631  011656  6F92               	movwf	epoch_to_caltime@month& (0+255),b
  9632                           
  9633                           ; BSR set to: 0
  9634                           ;My_RTCC.c: 129: epoch_t num;
  9635                           ;My_RTCC.c: 131: num = tm->epoch;
  9636  011658  C089  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  9637  01165C  C08A  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  9638  011660  CFDE F093          	movff	postinc2,epoch_to_caltime@num
  9639  011664  CFDE F094          	movff	postinc2,epoch_to_caltime@num+1
  9640  011668  CFDE F095          	movff	postinc2,epoch_to_caltime@num+2
  9641  01166C  CFDE F096          	movff	postinc2,epoch_to_caltime@num+3
  9642                           
  9643                           ; BSR set to: 0
  9644                           ;My_RTCC.c: 132: tm->ss = get_quot_rem(&num, 60);
  9645  011670  0E93               	movlw	low epoch_to_caltime@num
  9646  011672  0100               	movlb	0	; () banked
  9647  011674  6F81               	movwf	get_quot_rem@quot& (0+255),b
  9648  011676  0E00               	movlw	high epoch_to_caltime@num
  9649  011678  0100               	movlb	0	; () banked
  9650  01167A  6F82               	movwf	(get_quot_rem@quot+1)& (0+255),b
  9651  01167C  0E3C               	movlw	60
  9652  01167E  0100               	movlb	0	; () banked
  9653  011680  6F83               	movwf	get_quot_rem@div& (0+255),b
  9654  011682  EC36  F08E         	call	_get_quot_rem	;wreg free
  9655  011686  0100               	movlb	0	; () banked
  9656  011688  EE20 F004          	lfsr	2,4
  9657  01168C  5189               	movf	epoch_to_caltime@tm& (0+255),w,b
  9658  01168E  26D9               	addwf	fsr2l,f,c
  9659  011690  518A               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  9660  011692  22DA               	addwfc	fsr2h,f,c
  9661  011694  0100               	movlb	0	; () banked
  9662  011696  C081  FFDF         	movff	?_get_quot_rem,indf2
  9663                           
  9664                           ; BSR set to: 0
  9665                           ;My_RTCC.c: 133: tm->mm = get_quot_rem(&num, 60);
  9666  01169A  0E93               	movlw	low epoch_to_caltime@num
  9667  01169C  0100               	movlb	0	; () banked
  9668  01169E  6F81               	movwf	get_quot_rem@quot& (0+255),b
  9669  0116A0  0E00               	movlw	high epoch_to_caltime@num
  9670  0116A2  0100               	movlb	0	; () banked
  9671  0116A4  6F82               	movwf	(get_quot_rem@quot+1)& (0+255),b
  9672  0116A6  0E3C               	movlw	60
  9673  0116A8  0100               	movlb	0	; () banked
  9674  0116AA  6F83               	movwf	get_quot_rem@div& (0+255),b
  9675  0116AC  EC36  F08E         	call	_get_quot_rem	;wreg free
  9676  0116B0  0100               	movlb	0	; () banked
  9677  0116B2  EE20 F005          	lfsr	2,5
  9678  0116B6  5189               	movf	epoch_to_caltime@tm& (0+255),w,b
  9679  0116B8  26D9               	addwf	fsr2l,f,c
  9680  0116BA  518A               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  9681  0116BC  22DA               	addwfc	fsr2h,f,c
  9682  0116BE  0100               	movlb	0	; () banked
  9683  0116C0  C081  FFDF         	movff	?_get_quot_rem,indf2
  9684                           
  9685                           ; BSR set to: 0
  9686                           ;My_RTCC.c: 134: tm->hh = get_quot_rem(&num, 24);
  9687  0116C4  0E93               	movlw	low epoch_to_caltime@num
  9688  0116C6  0100               	movlb	0	; () banked
  9689  0116C8  6F81               	movwf	get_quot_rem@quot& (0+255),b
  9690  0116CA  0E00               	movlw	high epoch_to_caltime@num
  9691  0116CC  0100               	movlb	0	; () banked
  9692  0116CE  6F82               	movwf	(get_quot_rem@quot+1)& (0+255),b
  9693  0116D0  0E18               	movlw	24
  9694  0116D2  0100               	movlb	0	; () banked
  9695  0116D4  6F83               	movwf	get_quot_rem@div& (0+255),b
  9696  0116D6  EC36  F08E         	call	_get_quot_rem	;wreg free
  9697  0116DA  0100               	movlb	0	; () banked
  9698  0116DC  EE20 F006          	lfsr	2,6
  9699  0116E0  5189               	movf	epoch_to_caltime@tm& (0+255),w,b
  9700  0116E2  26D9               	addwf	fsr2l,f,c
  9701  0116E4  518A               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  9702  0116E6  22DA               	addwfc	fsr2h,f,c
  9703  0116E8  0100               	movlb	0	; () banked
  9704  0116EA  C081  FFDF         	movff	?_get_quot_rem,indf2
  9705                           
  9706                           ; BSR set to: 0
  9707                           ;My_RTCC.c: 135: day = num;
  9708  0116EE  C093  F08F         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  9709  0116F2  C094  F090         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  9710                           
  9711                           ; BSR set to: 0
  9712                           ;My_RTCC.c: 136: day_since_epoch = day;
  9713  0116F6  C08F  F08D         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  9714  0116FA  C090  F08E         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  9715                           
  9716                           ; BSR set to: 0
  9717                           ;My_RTCC.c: 138: num += 6;
  9718  0116FE  0E06               	movlw	6
  9719  011700  0100               	movlb	0	; () banked
  9720  011702  2793               	addwf	epoch_to_caltime@num& (0+255),f,b
  9721  011704  0E00               	movlw	0
  9722  011706  2394               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  9723  011708  2395               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  9724  01170A  2396               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  9725                           
  9726                           ; BSR set to: 0
  9727                           ;My_RTCC.c: 139: tm->EE = get_quot_rem(&num, 7);
  9728  01170C  0E93               	movlw	low epoch_to_caltime@num
  9729  01170E  0100               	movlb	0	; () banked
  9730  011710  6F81               	movwf	get_quot_rem@quot& (0+255),b
  9731  011712  0E00               	movlw	high epoch_to_caltime@num
  9732  011714  0100               	movlb	0	; () banked
  9733  011716  6F82               	movwf	(get_quot_rem@quot+1)& (0+255),b
  9734  011718  0E07               	movlw	7
  9735  01171A  0100               	movlb	0	; () banked
  9736  01171C  6F83               	movwf	get_quot_rem@div& (0+255),b
  9737  01171E  EC36  F08E         	call	_get_quot_rem	;wreg free
  9738  011722  0100               	movlb	0	; () banked
  9739  011724  EE20 F007          	lfsr	2,7
  9740  011728  5189               	movf	epoch_to_caltime@tm& (0+255),w,b
  9741  01172A  26D9               	addwf	fsr2l,f,c
  9742  01172C  518A               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  9743  01172E  22DA               	addwfc	fsr2h,f,c
  9744  011730  0100               	movlb	0	; () banked
  9745  011732  C081  FFDF         	movff	?_get_quot_rem,indf2
  9746                           
  9747                           ;My_RTCC.c: 148: while (day >= month_length(year, month)) {
  9748  011736  D03F               	goto	l5321
  9749  011738                     l352:
  9750                           
  9751                           ; BSR set to: 0
  9752                           ;My_RTCC.c: 149: LATB2 = 1;
  9753  011738  848A               	bsf	3978,2,c	;volatile
  9754                           
  9755                           ; BSR set to: 0
  9756                           ;My_RTCC.c: 150: day = day - month_length(year, month);
  9757  01173A  C092  F062         	movff	epoch_to_caltime@month,month_length@month
  9758  01173E  0100               	movlb	0	; () banked
  9759  011740  5191               	movf	epoch_to_caltime@year& (0+255),w,b
  9760  011742  EC08  F08F         	call	_month_length
  9761  011746  0100               	movlb	0	; () banked
  9762  011748  6F8B               	movwf	??_epoch_to_caltime& (0+255),b
  9763  01174A  6B8C               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  9764  01174C  0100               	movlb	0	; () banked
  9765  01174E  1F8B               	comf	??_epoch_to_caltime& (0+255),f,b
  9766  011750  1F8C               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  9767  011752  4B8B               	infsnz	??_epoch_to_caltime& (0+255),f,b
  9768  011754  2B8C               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  9769  011756  0100               	movlb	0	; () banked
  9770  011758  518F               	movf	epoch_to_caltime@day& (0+255),w,b
  9771  01175A  0100               	movlb	0	; () banked
  9772  01175C  258B               	addwf	??_epoch_to_caltime& (0+255),w,b
  9773  01175E  0100               	movlb	0	; () banked
  9774  011760  6F8F               	movwf	epoch_to_caltime@day& (0+255),b
  9775  011762  0100               	movlb	0	; () banked
  9776  011764  5190               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  9777  011766  0100               	movlb	0	; () banked
  9778  011768  218C               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  9779  01176A  0100               	movlb	0	; () banked
  9780  01176C  6F90               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;My_RTCC.c: 151: if (month == 12) {
  9784  01176E  0E0C               	movlw	12
  9785  011770  0100               	movlb	0	; () banked
  9786  011772  1992               	xorwf	epoch_to_caltime@month& (0+255),w,b
  9787  011774  A4D8               	btfss	status,2,c
  9788  011776  D019               	goto	l5315
  9789                           
  9790                           ; BSR set to: 0
  9791                           ;My_RTCC.c: 152: month = 1;
  9792  011778  0E01               	movlw	1
  9793  01177A  0100               	movlb	0	; () banked
  9794  01177C  6F92               	movwf	epoch_to_caltime@month& (0+255),b
  9795                           
  9796                           ; BSR set to: 0
  9797                           ;My_RTCC.c: 153: year++;
  9798  01177E  0100               	movlb	0	; () banked
  9799  011780  2B91               	incf	epoch_to_caltime@year& (0+255),f,b
  9800                           
  9801                           ; BSR set to: 0
  9802                           ;My_RTCC.c: 155: if (year >= 100) {
  9803  011782  0E63               	movlw	99
  9804  011784  0100               	movlb	0	; () banked
  9805  011786  6591               	cpfsgt	epoch_to_caltime@year& (0+255),b
  9806  011788  D012               	goto	l5317
  9807                           
  9808                           ; BSR set to: 0
  9809                           ;My_RTCC.c: 156: tm->epoch -= 3155760000;
  9810  01178A  C089  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  9811  01178E  C08A  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  9812  011792  0E80               	movlw	128
  9813  011794  5EDE               	subwf	postinc2,f,c
  9814  011796  0E13               	movlw	19
  9815  011798  5ADE               	subwfb	postinc2,f,c
  9816  01179A  0E19               	movlw	25
  9817  01179C  5ADE               	subwfb	postinc2,f,c
  9818  01179E  0EBC               	movlw	188
  9819  0117A0  5ADE               	subwfb	postinc2,f,c
  9820                           
  9821                           ; BSR set to: 0
  9822                           ;My_RTCC.c: 157: year = 0;
  9823  0117A2  0E00               	movlw	0
  9824  0117A4  0100               	movlb	0	; () banked
  9825  0117A6  6F91               	movwf	epoch_to_caltime@year& (0+255),b
  9826                           
  9827                           ; BSR set to: 0
  9828                           ;My_RTCC.c: 158: }
  9829                           ;My_RTCC.c: 159: } else {
  9830  0117A8  D002               	goto	l5317
  9831  0117AA                     l5315:
  9832                           
  9833                           ; BSR set to: 0
  9834                           ;My_RTCC.c: 160: month++;
  9835  0117AA  0100               	movlb	0	; () banked
  9836  0117AC  2B92               	incf	epoch_to_caltime@month& (0+255),f,b
  9837  0117AE                     l5317:
  9838                           
  9839                           ; BSR set to: 0
  9840                           ;My_RTCC.c: 161: }
  9841                           ;My_RTCC.c: 162: month_cache = month;
  9842  0117AE  C092  F0EF         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  9843                           
  9844                           ; BSR set to: 0
  9845                           ;My_RTCC.c: 163: year_cache = year;
  9846  0117B2  C091  F0D7         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  9847  0117B6                     l5321:
  9848                           
  9849                           ; BSR set to: 0
  9850  0117B6  C092  F062         	movff	epoch_to_caltime@month,month_length@month
  9851  0117BA  0100               	movlb	0	; () banked
  9852  0117BC  5191               	movf	epoch_to_caltime@year& (0+255),w,b
  9853  0117BE  EC08  F08F         	call	_month_length
  9854  0117C2  0100               	movlb	0	; () banked
  9855  0117C4  6F8B               	movwf	??_epoch_to_caltime& (0+255),b
  9856  0117C6  0100               	movlb	0	; () banked
  9857  0117C8  518B               	movf	??_epoch_to_caltime& (0+255),w,b
  9858  0117CA  0100               	movlb	0	; () banked
  9859  0117CC  5D8F               	subwf	epoch_to_caltime@day& (0+255),w,b
  9860  0117CE  0E00               	movlw	0
  9861  0117D0  5990               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  9862  0117D2  B0D8               	btfsc	status,0,c
  9863  0117D4  D7B1               	goto	l352
  9864                           
  9865                           ; BSR set to: 0
  9866                           ;My_RTCC.c: 164: }
  9867                           ;My_RTCC.c: 165: day_cache = day_since_epoch - day;
  9868                           
  9869                           ; BSR set to: 0
  9870  0117D6  C08F  F08B         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  9871  0117DA  C090  F08C         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  9872  0117DE  0100               	movlb	0	; () banked
  9873  0117E0  1F8B               	comf	??_epoch_to_caltime& (0+255),f,b
  9874  0117E2  1F8C               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  9875  0117E4  4B8B               	infsnz	??_epoch_to_caltime& (0+255),f,b
  9876  0117E6  2B8C               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  9877  0117E8  0100               	movlb	0	; () banked
  9878  0117EA  518D               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  9879  0117EC  0100               	movlb	0	; () banked
  9880  0117EE  258B               	addwf	??_epoch_to_caltime& (0+255),w,b
  9881  0117F0  0100               	movlb	0	; () banked
  9882  0117F2  6FD3               	movwf	epoch_to_caltime@day_cache& (0+255),b
  9883  0117F4  0100               	movlb	0	; () banked
  9884  0117F6  518E               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  9885  0117F8  0100               	movlb	0	; () banked
  9886  0117FA  218C               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  9887  0117FC  0100               	movlb	0	; () banked
  9888  0117FE  6FD4               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  9889                           
  9890                           ; BSR set to: 0
  9891                           ;My_RTCC.c: 166: day++;
  9892  011800  0100               	movlb	0	; () banked
  9893  011802  4B8F               	infsnz	epoch_to_caltime@day& (0+255),f,b
  9894  011804  2B90               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  9895                           
  9896                           ; BSR set to: 0
  9897                           ;My_RTCC.c: 168: tm->YY = year;
  9898  011806  0100               	movlb	0	; () banked
  9899  011808  EE20 F00A          	lfsr	2,10
  9900  01180C  5189               	movf	epoch_to_caltime@tm& (0+255),w,b
  9901  01180E  26D9               	addwf	fsr2l,f,c
  9902  011810  518A               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  9903  011812  22DA               	addwfc	fsr2h,f,c
  9904  011814  C091  FFDF         	movff	epoch_to_caltime@year,indf2
  9905                           
  9906                           ; BSR set to: 0
  9907                           ;My_RTCC.c: 169: tm->MM = month;
  9908  011818  0100               	movlb	0	; () banked
  9909  01181A  EE20 F009          	lfsr	2,9
  9910  01181E  5189               	movf	epoch_to_caltime@tm& (0+255),w,b
  9911  011820  26D9               	addwf	fsr2l,f,c
  9912  011822  518A               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  9913  011824  22DA               	addwfc	fsr2h,f,c
  9914  011826  C092  FFDF         	movff	epoch_to_caltime@month,indf2
  9915                           
  9916                           ; BSR set to: 0
  9917                           ;My_RTCC.c: 170: tm->DD = day;
  9918  01182A  0100               	movlb	0	; () banked
  9919  01182C  EE20 F008          	lfsr	2,8
  9920  011830  5189               	movf	epoch_to_caltime@tm& (0+255),w,b
  9921  011832  26D9               	addwf	fsr2l,f,c
  9922  011834  518A               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  9923  011836  22DA               	addwfc	fsr2h,f,c
  9924  011838  C08F  FFDF         	movff	epoch_to_caltime@day,indf2
  9925                           
  9926                           ; BSR set to: 0
  9927  01183C  0012               	return		;funcret
  9928  01183E                     __end_of_epoch_to_caltime:
  9929                           	opt stack 0
  9930                           tblptru	equ	0xFF8
  9931                           tblptrh	equ	0xFF7
  9932                           tblptrl	equ	0xFF6
  9933                           tablat	equ	0xFF5
  9934                           prodh	equ	0xFF4
  9935                           prodl	equ	0xFF3
  9936                           intcon	equ	0xFF2
  9937                           intcon2	equ	0xFF1
  9938                           indf0	equ	0xFEF
  9939                           postinc0	equ	0xFEE
  9940                           fsr0h	equ	0xFEA
  9941                           fsr0l	equ	0xFE9
  9942                           wreg	equ	0xFE8
  9943                           postinc1	equ	0xFE6
  9944                           postdec1	equ	0xFE5
  9945                           fsr1h	equ	0xFE2
  9946                           fsr1l	equ	0xFE1
  9947                           indf2	equ	0xFDF
  9948                           postinc2	equ	0xFDE
  9949                           postdec2	equ	0xFDD
  9950                           fsr2h	equ	0xFDA
  9951                           fsr2l	equ	0xFD9
  9952                           status	equ	0xFD8
  9953                           
  9954 ;; *************** function _month_length *****************
  9955 ;; Defined at:
  9956 ;;		line 49 in file "../My_library/My_RTCC.c"
  9957 ;; Parameters:    Size  Location     Type
  9958 ;;  year            1    wreg     unsigned char 
  9959 ;;  month           1    2[BANK0 ] unsigned char 
  9960 ;; Auto vars:     Size  Location     Type
  9961 ;;  year            1    7[BANK0 ] unsigned char 
  9962 ;; Return value:  Size  Location     Type
  9963 ;;                  1    wreg      unsigned char 
  9964 ;; Registers used:
  9965 ;;		wreg, status,2, status,0, cstack
  9966 ;; Tracked objects:
  9967 ;;		On entry : 0/0
  9968 ;;		On exit  : 0/0
  9969 ;;		Unchanged: 0/0
  9970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9971 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9972 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9973 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9974 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9975 ;;Total ram usage:        6 bytes
  9976 ;; Hardware stack levels used:    1
  9977 ;; Hardware stack levels required when called:    5
  9978 ;; This function calls:
  9979 ;;		___awmod
  9980 ;; This function is called by:
  9981 ;;		_epoch_to_caltime
  9982 ;;		_caltime_to_epoch
  9983 ;;		_terminal_time
  9984 ;;		_RTCC_adjust_time_inc
  9985 ;;		_RTCC_adjust_time_dec
  9986 ;; This function uses a non-reentrant model
  9987 ;;
  9988                           
  9989                           	psect	text42
  9990  011E10                     __ptext42:
  9991                           	opt stack 0
  9992  011E10                     _month_length:
  9993                           	opt stack 18
  9994                           
  9995                           ; BSR set to: 0
  9996                           ;incstack = 0
  9997                           ;month_length@year stored from wreg
  9998  011E10  0100               	movlb	0	; () banked
  9999  011E12  6F67               	movwf	month_length@year& (0+255),b
 10000                           
 10001                           ;My_RTCC.c: 50: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 10002  011E14  0E02               	movlw	2
 10003  011E16  0100               	movlb	0	; () banked
 10004  011E18  1962               	xorwf	month_length@month& (0+255),w,b
 10005  011E1A  A4D8               	btfss	status,2,c
 10006  011E1C  D036               	goto	l5051
 10007                           
 10008                           ; BSR set to: 0
 10009  011E1E  C067  F020         	movff	month_length@year,___awmod@dividend
 10010  011E22  6A21               	clrf	___awmod@dividend+1,c
 10011  011E24  0E00               	movlw	0
 10012  011E26  6E23               	movwf	___awmod@divisor+1,c
 10013  011E28  0E64               	movlw	100
 10014  011E2A  6E22               	movwf	___awmod@divisor,c
 10015  011E2C  ECA9  F093         	call	___awmod	;wreg free
 10016  011E30  5020               	movf	?___awmod,w,c
 10017  011E32  1021               	iorwf	?___awmod+1,w,c
 10018  011E34  A4D8               	btfss	status,2,c
 10019  011E36  D002               	goto	u4890
 10020  011E38  0E01               	movlw	1
 10021  011E3A  D001               	goto	u4900
 10022  011E3C                     u4890:
 10023  011E3C  0E00               	movlw	0
 10024  011E3E                     u4900:
 10025  011E3E  0800               	sublw	0
 10026  011E40  0100               	movlb	0	; () banked
 10027  011E42  6F63               	movwf	??_month_length& (0+255),b
 10028  011E44  C067  F020         	movff	month_length@year,___awmod@dividend
 10029  011E48  6A21               	clrf	___awmod@dividend+1,c
 10030  011E4A  0E01               	movlw	1
 10031  011E4C  6E23               	movwf	___awmod@divisor+1,c
 10032  011E4E  0E90               	movlw	144
 10033  011E50  6E22               	movwf	___awmod@divisor,c
 10034  011E52  ECA9  F093         	call	___awmod	;wreg free
 10035  011E56  5020               	movf	?___awmod,w,c
 10036  011E58  1021               	iorwf	?___awmod+1,w,c
 10037  011E5A  A4D8               	btfss	status,2,c
 10038  011E5C  D004               	goto	u4910
 10039  011E5E  0100               	movlb	0	; () banked
 10040  011E60  6B64               	clrf	(??_month_length+1)& (0+255),b
 10041  011E62  2B64               	incf	(??_month_length+1)& (0+255),f,b
 10042  011E64  D002               	goto	u4928
 10043  011E66                     u4910:
 10044  011E66  0100               	movlb	0	; () banked
 10045  011E68  6B64               	clrf	(??_month_length+1)& (0+255),b
 10046  011E6A                     u4928:
 10047  011E6A  C067  F065         	movff	month_length@year,??_month_length+2
 10048  011E6E  0E03               	movlw	3
 10049  011E70  0100               	movlb	0	; () banked
 10050  011E72  1765               	andwf	(??_month_length+2)& (0+255),f,b
 10051  011E74  A4D8               	btfss	status,2,c
 10052  011E76  D002               	goto	u4930
 10053  011E78  0E01               	movlw	1
 10054  011E7A  D001               	goto	u4940
 10055  011E7C                     u4930:
 10056  011E7C  0E00               	movlw	0
 10057  011E7E                     u4940:
 10058  011E7E  0100               	movlb	0	; () banked
 10059  011E80  2564               	addwf	(??_month_length+1)& (0+255),w,b
 10060  011E82  0100               	movlb	0	; () banked
 10061  011E84  2563               	addwf	??_month_length& (0+255),w,b
 10062  011E86  0F1C               	addlw	28
 10063                           
 10064                           ; BSR set to: 0
 10065                           
 10066                           ; BSR set to: 0
 10067  011E88  0012               	return	
 10068  011E8A                     l5051:
 10069                           
 10070                           ; BSR set to: 0
 10071                           ;My_RTCC.c: 51: else return 31 - (((-(month & 1)^month)&13) == 4);
 10072  011E8A  0100               	movlb	0	; () banked
 10073  011E8C  5162               	movf	month_length@month& (0+255),w,b
 10074  011E8E  0B01               	andlw	1
 10075  011E90  0100               	movlb	0	; () banked
 10076  011E92  6F63               	movwf	??_month_length& (0+255),b
 10077  011E94  6B64               	clrf	(??_month_length+1)& (0+255),b
 10078  011E96  0100               	movlb	0	; () banked
 10079  011E98  1F63               	comf	??_month_length& (0+255),f,b
 10080  011E9A  1F64               	comf	(??_month_length+1)& (0+255),f,b
 10081  011E9C  4B63               	infsnz	??_month_length& (0+255),f,b
 10082  011E9E  2B64               	incf	(??_month_length+1)& (0+255),f,b
 10083  011EA0  0100               	movlb	0	; () banked
 10084  011EA2  5162               	movf	month_length@month& (0+255),w,b
 10085  011EA4  0100               	movlb	0	; () banked
 10086  011EA6  6F65               	movwf	(??_month_length+2)& (0+255),b
 10087  011EA8  6B66               	clrf	(??_month_length+3)& (0+255),b
 10088  011EAA  0100               	movlb	0	; () banked
 10089  011EAC  5163               	movf	??_month_length& (0+255),w,b
 10090  011EAE  0100               	movlb	0	; () banked
 10091  011EB0  1B65               	xorwf	(??_month_length+2)& (0+255),f,b
 10092  011EB2  0100               	movlb	0	; () banked
 10093  011EB4  5164               	movf	(??_month_length+1)& (0+255),w,b
 10094  011EB6  0100               	movlb	0	; () banked
 10095  011EB8  1B66               	xorwf	(??_month_length+3)& (0+255),f,b
 10096  011EBA  0E0D               	movlw	13
 10097  011EBC  0100               	movlb	0	; () banked
 10098  011EBE  1765               	andwf	(??_month_length+2)& (0+255),f,b
 10099  011EC0  0E00               	movlw	0
 10100  011EC2  1766               	andwf	(??_month_length+3)& (0+255),f,b
 10101  011EC4  0E04               	movlw	4
 10102  011EC6  0100               	movlb	0	; () banked
 10103  011EC8  1965               	xorwf	(??_month_length+2)& (0+255),w,b
 10104  011ECA  0100               	movlb	0	; () banked
 10105  011ECC  1166               	iorwf	(??_month_length+3)& (0+255),w,b
 10106  011ECE  A4D8               	btfss	status,2,c
 10107  011ED0  D002               	goto	u4950
 10108  011ED2  0E01               	movlw	1
 10109  011ED4  D001               	goto	u4960
 10110  011ED6                     u4950:
 10111  011ED6  0E00               	movlw	0
 10112  011ED8                     u4960:
 10113  011ED8  0800               	sublw	0
 10114  011EDA  0F1F               	addlw	31
 10115                           
 10116                           ; BSR set to: 0
 10117  011EDC  0012               	return	
 10118  011EDE                     __end_of_month_length:
 10119                           	opt stack 0
 10120                           tblptru	equ	0xFF8
 10121                           tblptrh	equ	0xFF7
 10122                           tblptrl	equ	0xFF6
 10123                           tablat	equ	0xFF5
 10124                           prodh	equ	0xFF4
 10125                           prodl	equ	0xFF3
 10126                           intcon	equ	0xFF2
 10127                           intcon2	equ	0xFF1
 10128                           indf0	equ	0xFEF
 10129                           postinc0	equ	0xFEE
 10130                           fsr0h	equ	0xFEA
 10131                           fsr0l	equ	0xFE9
 10132                           wreg	equ	0xFE8
 10133                           postinc1	equ	0xFE6
 10134                           postdec1	equ	0xFE5
 10135                           fsr1h	equ	0xFE2
 10136                           fsr1l	equ	0xFE1
 10137                           indf2	equ	0xFDF
 10138                           postinc2	equ	0xFDE
 10139                           postdec2	equ	0xFDD
 10140                           fsr2h	equ	0xFDA
 10141                           fsr2l	equ	0xFD9
 10142                           status	equ	0xFD8
 10143                           
 10144 ;; *************** function ___awmod *****************
 10145 ;; Defined at:
 10146 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 10147 ;; Parameters:    Size  Location     Type
 10148 ;;  dividend        2   31[COMRAM] int 
 10149 ;;  divisor         2   33[COMRAM] int 
 10150 ;; Auto vars:     Size  Location     Type
 10151 ;;  sign            1    1[BANK0 ] unsigned char 
 10152 ;;  counter         1    0[BANK0 ] unsigned char 
 10153 ;; Return value:  Size  Location     Type
 10154 ;;                  2   31[COMRAM] int 
 10155 ;; Registers used:
 10156 ;;		wreg, status,2, status,0
 10157 ;; Tracked objects:
 10158 ;;		On entry : 0/0
 10159 ;;		On exit  : 0/0
 10160 ;;		Unchanged: 0/0
 10161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10162 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10163 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10165 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10166 ;;Total ram usage:        6 bytes
 10167 ;; Hardware stack levels used:    1
 10168 ;; Hardware stack levels required when called:    4
 10169 ;; This function calls:
 10170 ;;		Nothing
 10171 ;; This function is called by:
 10172 ;;		_month_length
 10173 ;; This function uses a non-reentrant model
 10174 ;;
 10175                           
 10176                           	psect	text43
 10177  012752                     __ptext43:
 10178                           	opt stack 0
 10179  012752                     ___awmod:
 10180                           	opt stack 18
 10181                           
 10182                           ; BSR set to: 0
 10183                           ;incstack = 0
 10184  012752  0E00               	movlw	0
 10185  012754  0100               	movlb	0	; () banked
 10186  012756  6F61               	movwf	___awmod@sign& (0+255),b
 10187                           
 10188                           ; BSR set to: 0
 10189  012758  AE21               	btfss	___awmod@dividend+1,7,c
 10190  01275A  D007               	goto	l4999
 10191                           
 10192                           ; BSR set to: 0
 10193  01275C  6C20               	negf	___awmod@dividend,c
 10194  01275E  1E21               	comf	___awmod@dividend+1,f,c
 10195  012760  B0D8               	btfsc	status,0,c
 10196  012762  2A21               	incf	___awmod@dividend+1,f,c
 10197                           
 10198                           ; BSR set to: 0
 10199  012764  0E01               	movlw	1
 10200  012766  0100               	movlb	0	; () banked
 10201  012768  6F61               	movwf	___awmod@sign& (0+255),b
 10202  01276A                     l4999:
 10203                           
 10204                           ; BSR set to: 0
 10205  01276A  AE23               	btfss	___awmod@divisor+1,7,c
 10206  01276C  D004               	goto	l5003
 10207                           
 10208                           ; BSR set to: 0
 10209  01276E  6C22               	negf	___awmod@divisor,c
 10210  012770  1E23               	comf	___awmod@divisor+1,f,c
 10211  012772  B0D8               	btfsc	status,0,c
 10212  012774  2A23               	incf	___awmod@divisor+1,f,c
 10213  012776                     l5003:
 10214                           
 10215                           ; BSR set to: 0
 10216  012776  5022               	movf	___awmod@divisor,w,c
 10217  012778  1023               	iorwf	___awmod@divisor+1,w,c
 10218  01277A  B4D8               	btfsc	status,2,c
 10219  01277C  D01B               	goto	l5019
 10220                           
 10221                           ; BSR set to: 0
 10222  01277E  0E01               	movlw	1
 10223  012780  0100               	movlb	0	; () banked
 10224  012782  6F60               	movwf	___awmod@counter& (0+255),b
 10225  012784  D005               	goto	l5009
 10226  012786                     l5007:
 10227                           
 10228                           ; BSR set to: 0
 10229  012786  90D8               	bcf	status,0,c
 10230  012788  3622               	rlcf	___awmod@divisor,f,c
 10231  01278A  3623               	rlcf	___awmod@divisor+1,f,c
 10232  01278C  0100               	movlb	0	; () banked
 10233  01278E  2B60               	incf	___awmod@counter& (0+255),f,b
 10234  012790                     l5009:
 10235                           
 10236                           ; BSR set to: 0
 10237  012790  AE23               	btfss	___awmod@divisor+1,7,c
 10238  012792  D7F9               	goto	l5007
 10239  012794                     l5011:
 10240                           
 10241                           ; BSR set to: 0
 10242  012794  5022               	movf	___awmod@divisor,w,c
 10243  012796  5C20               	subwf	___awmod@dividend,w,c
 10244  012798  5023               	movf	___awmod@divisor+1,w,c
 10245  01279A  5821               	subwfb	___awmod@dividend+1,w,c
 10246  01279C  A0D8               	btfss	status,0,c
 10247  01279E  D004               	goto	l5015
 10248                           
 10249                           ; BSR set to: 0
 10250  0127A0  5022               	movf	___awmod@divisor,w,c
 10251  0127A2  5E20               	subwf	___awmod@dividend,f,c
 10252  0127A4  5023               	movf	___awmod@divisor+1,w,c
 10253  0127A6  5A21               	subwfb	___awmod@dividend+1,f,c
 10254  0127A8                     l5015:
 10255                           
 10256                           ; BSR set to: 0
 10257  0127A8  90D8               	bcf	status,0,c
 10258  0127AA  3223               	rrcf	___awmod@divisor+1,f,c
 10259  0127AC  3222               	rrcf	___awmod@divisor,f,c
 10260                           
 10261                           ; BSR set to: 0
 10262  0127AE  0100               	movlb	0	; () banked
 10263  0127B0  2F60               	decfsz	___awmod@counter& (0+255),f,b
 10264  0127B2  D7F0               	goto	l5011
 10265  0127B4                     l5019:
 10266                           
 10267                           ; BSR set to: 0
 10268  0127B4  0100               	movlb	0	; () banked
 10269  0127B6  5161               	movf	___awmod@sign& (0+255),w,b
 10270  0127B8  0100               	movlb	0	; () banked
 10271  0127BA  B4D8               	btfsc	status,2,c
 10272  0127BC  D004               	goto	l5023
 10273                           
 10274                           ; BSR set to: 0
 10275  0127BE  6C20               	negf	___awmod@dividend,c
 10276  0127C0  1E21               	comf	___awmod@dividend+1,f,c
 10277  0127C2  B0D8               	btfsc	status,0,c
 10278  0127C4  2A21               	incf	___awmod@dividend+1,f,c
 10279  0127C6                     l5023:
 10280                           
 10281                           ; BSR set to: 0
 10282  0127C6  C020  F020         	movff	___awmod@dividend,?___awmod
 10283  0127CA  C021  F021         	movff	___awmod@dividend+1,?___awmod+1
 10284  0127CE  0012               	return	
 10285  0127D0                     __end_of___awmod:
 10286                           	opt stack 0
 10287                           tblptru	equ	0xFF8
 10288                           tblptrh	equ	0xFF7
 10289                           tblptrl	equ	0xFF6
 10290                           tablat	equ	0xFF5
 10291                           prodh	equ	0xFF4
 10292                           prodl	equ	0xFF3
 10293                           intcon	equ	0xFF2
 10294                           intcon2	equ	0xFF1
 10295                           indf0	equ	0xFEF
 10296                           postinc0	equ	0xFEE
 10297                           fsr0h	equ	0xFEA
 10298                           fsr0l	equ	0xFE9
 10299                           wreg	equ	0xFE8
 10300                           postinc1	equ	0xFE6
 10301                           postdec1	equ	0xFE5
 10302                           fsr1h	equ	0xFE2
 10303                           fsr1l	equ	0xFE1
 10304                           indf2	equ	0xFDF
 10305                           postinc2	equ	0xFDE
 10306                           postdec2	equ	0xFDD
 10307                           fsr2h	equ	0xFDA
 10308                           fsr2l	equ	0xFD9
 10309                           status	equ	0xFD8
 10310                           
 10311 ;; *************** function _get_quot_rem *****************
 10312 ;; Defined at:
 10313 ;;		line 74 in file "../My_library/My_RTCC.c"
 10314 ;; Parameters:    Size  Location     Type
 10315 ;;  quot            2   33[BANK0 ] PTR unsigned long 
 10316 ;;		 -> epoch_to_caltime@num(4), 
 10317 ;;  div             1   35[BANK0 ] unsigned char 
 10318 ;; Auto vars:     Size  Location     Type
 10319 ;;  num             4   37[BANK0 ] unsigned long 
 10320 ;; Return value:  Size  Location     Type
 10321 ;;                  4   33[BANK0 ] unsigned long 
 10322 ;; Registers used:
 10323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10324 ;; Tracked objects:
 10325 ;;		On entry : 0/0
 10326 ;;		On exit  : 0/0
 10327 ;;		Unchanged: 0/0
 10328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10329 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10330 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10332 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10333 ;;Total ram usage:        8 bytes
 10334 ;; Hardware stack levels used:    1
 10335 ;; Hardware stack levels required when called:    5
 10336 ;; This function calls:
 10337 ;;		___lldiv
 10338 ;;		___lmul
 10339 ;; This function is called by:
 10340 ;;		_epoch_to_caltime
 10341 ;; This function uses a non-reentrant model
 10342 ;;
 10343                           
 10344                           	psect	text44
 10345  011C6C                     __ptext44:
 10346                           	opt stack 0
 10347  011C6C                     _get_quot_rem:
 10348                           	opt stack 19
 10349                           
 10350                           ;My_RTCC.c: 77: epoch_t num = *quot;
 10351                           
 10352                           ; BSR set to: 0
 10353                           ;incstack = 0
 10354  011C6C  C081  FFD9         	movff	get_quot_rem@quot,fsr2l
 10355  011C70  C082  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 10356  011C74  CFDE F085          	movff	postinc2,get_quot_rem@num
 10357  011C78  CFDE F086          	movff	postinc2,get_quot_rem@num+1
 10358  011C7C  CFDE F087          	movff	postinc2,get_quot_rem@num+2
 10359  011C80  CFDE F088          	movff	postinc2,get_quot_rem@num+3
 10360                           
 10361                           ;My_RTCC.c: 78: return num - (*quot = num / div) * div;
 10362  011C84  0100               	movlb	0	; () banked
 10363  011C86  5183               	movf	get_quot_rem@div& (0+255),w,b
 10364  011C88  0100               	movlb	0	; () banked
 10365  011C8A  6F78               	movwf	___lldiv@divisor& (0+255),b
 10366  011C8C  6B79               	clrf	(___lldiv@divisor+1)& (0+255),b
 10367  011C8E  6B7A               	clrf	(___lldiv@divisor+2)& (0+255),b
 10368  011C90  6B7B               	clrf	(___lldiv@divisor+3)& (0+255),b
 10369  011C92  C085  F074         	movff	get_quot_rem@num,___lldiv@dividend
 10370  011C96  C086  F075         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 10371  011C9A  C087  F076         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 10372  011C9E  C088  F077         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 10373  011CA2  EC2D  F090         	call	___lldiv	;wreg free
 10374  011CA6  C081  FFD9         	movff	get_quot_rem@quot,fsr2l
 10375  011CAA  C082  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 10376  011CAE  0100               	movlb	0	; () banked
 10377  011CB0  C074  FFDE         	movff	?___lldiv,postinc2
 10378  011CB4  0100               	movlb	0	; () banked
 10379  011CB6  C075  FFDE         	movff	?___lldiv+1,postinc2
 10380  011CBA  0100               	movlb	0	; () banked
 10381  011CBC  C076  FFDE         	movff	?___lldiv+2,postinc2
 10382  011CC0  0100               	movlb	0	; () banked
 10383  011CC2  C077  FFDD         	movff	?___lldiv+3,postdec2
 10384  011CC6  52DD               	movf	postdec2,f,c
 10385  011CC8  52DD               	movf	postdec2,f,c
 10386  011CCA  CFDE F068          	movff	postinc2,___lmul@multiplier
 10387  011CCE  CFDE F069          	movff	postinc2,___lmul@multiplier+1
 10388  011CD2  CFDE F06A          	movff	postinc2,___lmul@multiplier+2
 10389  011CD6  CFDE F06B          	movff	postinc2,___lmul@multiplier+3
 10390  011CDA  0100               	movlb	0	; () banked
 10391  011CDC  5183               	movf	get_quot_rem@div& (0+255),w,b
 10392  011CDE  0100               	movlb	0	; () banked
 10393  011CE0  6F6C               	movwf	___lmul@multiplicand& (0+255),b
 10394  011CE2  6B6D               	clrf	(___lmul@multiplicand+1)& (0+255),b
 10395  011CE4  6B6E               	clrf	(___lmul@multiplicand+2)& (0+255),b
 10396  011CE6  6B6F               	clrf	(___lmul@multiplicand+3)& (0+255),b
 10397  011CE8  EC9C  F094         	call	___lmul	;wreg free
 10398  011CEC  0100               	movlb	0	; () banked
 10399  011CEE  1F68               	comf	?___lmul& (0+255),f,b
 10400  011CF0  0100               	movlb	0	; () banked
 10401  011CF2  1F69               	comf	(?___lmul+1)& (0+255),f,b
 10402  011CF4  0100               	movlb	0	; () banked
 10403  011CF6  1F6A               	comf	(?___lmul+2)& (0+255),f,b
 10404  011CF8  0100               	movlb	0	; () banked
 10405  011CFA  1F6B               	comf	(?___lmul+3)& (0+255),f,b
 10406  011CFC  0100               	movlb	0	; () banked
 10407  011CFE  2B68               	incf	?___lmul& (0+255),f,b
 10408  011D00  0E00               	movlw	0
 10409  011D02  0100               	movlb	0	; () banked
 10410  011D04  2369               	addwfc	(?___lmul+1)& (0+255),f,b
 10411  011D06  0100               	movlb	0	; () banked
 10412  011D08  236A               	addwfc	(?___lmul+2)& (0+255),f,b
 10413  011D0A  0100               	movlb	0	; () banked
 10414  011D0C  236B               	addwfc	(?___lmul+3)& (0+255),f,b
 10415  011D0E  0100               	movlb	0	; () banked
 10416  011D10  5185               	movf	get_quot_rem@num& (0+255),w,b
 10417  011D12  0100               	movlb	0	; () banked
 10418  011D14  2568               	addwf	?___lmul& (0+255),w,b
 10419  011D16  0100               	movlb	0	; () banked
 10420  011D18  6F81               	movwf	?_get_quot_rem& (0+255),b
 10421  011D1A  0100               	movlb	0	; () banked
 10422  011D1C  5186               	movf	(get_quot_rem@num+1)& (0+255),w,b
 10423  011D1E  0100               	movlb	0	; () banked
 10424  011D20  2169               	addwfc	(?___lmul+1)& (0+255),w,b
 10425  011D22  0100               	movlb	0	; () banked
 10426  011D24  6F82               	movwf	(?_get_quot_rem+1)& (0+255),b
 10427  011D26  0100               	movlb	0	; () banked
 10428  011D28  5187               	movf	(get_quot_rem@num+2)& (0+255),w,b
 10429  011D2A  0100               	movlb	0	; () banked
 10430  011D2C  216A               	addwfc	(?___lmul+2)& (0+255),w,b
 10431  011D2E  0100               	movlb	0	; () banked
 10432  011D30  6F83               	movwf	(?_get_quot_rem+2)& (0+255),b
 10433  011D32  0100               	movlb	0	; () banked
 10434  011D34  5188               	movf	(get_quot_rem@num+3)& (0+255),w,b
 10435  011D36  0100               	movlb	0	; () banked
 10436  011D38  216B               	addwfc	(?___lmul+3)& (0+255),w,b
 10437  011D3A  0100               	movlb	0	; () banked
 10438  011D3C  6F84               	movwf	(?_get_quot_rem+3)& (0+255),b
 10439  011D3E  0012               	return	
 10440  011D40                     __end_of_get_quot_rem:
 10441                           	opt stack 0
 10442                           tblptru	equ	0xFF8
 10443                           tblptrh	equ	0xFF7
 10444                           tblptrl	equ	0xFF6
 10445                           tablat	equ	0xFF5
 10446                           prodh	equ	0xFF4
 10447                           prodl	equ	0xFF3
 10448                           intcon	equ	0xFF2
 10449                           intcon2	equ	0xFF1
 10450                           indf0	equ	0xFEF
 10451                           postinc0	equ	0xFEE
 10452                           fsr0h	equ	0xFEA
 10453                           fsr0l	equ	0xFE9
 10454                           wreg	equ	0xFE8
 10455                           postinc1	equ	0xFE6
 10456                           postdec1	equ	0xFE5
 10457                           fsr1h	equ	0xFE2
 10458                           fsr1l	equ	0xFE1
 10459                           indf2	equ	0xFDF
 10460                           postinc2	equ	0xFDE
 10461                           postdec2	equ	0xFDD
 10462                           fsr2h	equ	0xFDA
 10463                           fsr2l	equ	0xFD9
 10464                           status	equ	0xFD8
 10465                           
 10466 ;; *************** function ___lmul *****************
 10467 ;; Defined at:
 10468 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 10469 ;; Parameters:    Size  Location     Type
 10470 ;;  multiplier      4    8[BANK0 ] unsigned long 
 10471 ;;  multiplicand    4   12[BANK0 ] unsigned long 
 10472 ;; Auto vars:     Size  Location     Type
 10473 ;;  product         4   16[BANK0 ] unsigned long 
 10474 ;; Return value:  Size  Location     Type
 10475 ;;                  4    8[BANK0 ] unsigned long 
 10476 ;; Registers used:
 10477 ;;		wreg, status,2, status,0
 10478 ;; Tracked objects:
 10479 ;;		On entry : 0/0
 10480 ;;		On exit  : 0/0
 10481 ;;		Unchanged: 0/0
 10482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10483 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10484 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10486 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10487 ;;Total ram usage:       12 bytes
 10488 ;; Hardware stack levels used:    1
 10489 ;; Hardware stack levels required when called:    4
 10490 ;; This function calls:
 10491 ;;		Nothing
 10492 ;; This function is called by:
 10493 ;;		_get_quot_rem
 10494 ;;		_caltime_to_epoch
 10495 ;;		_light_loop
 10496 ;;		_RTCC_adjust_time_inc
 10497 ;;		_RTCC_adjust_time_dec
 10498 ;; This function uses a non-reentrant model
 10499 ;;
 10500                           
 10501                           	psect	text45
 10502  012938                     __ptext45:
 10503                           	opt stack 0
 10504  012938                     ___lmul:
 10505                           	opt stack 19
 10506                           
 10507                           ; BSR set to: 0
 10508                           ;incstack = 0
 10509  012938  0E00               	movlw	0
 10510  01293A  0100               	movlb	0	; () banked
 10511  01293C  6F70               	movwf	___lmul@product& (0+255),b
 10512  01293E  0E00               	movlw	0
 10513  012940  6F71               	movwf	(___lmul@product+1)& (0+255),b
 10514  012942  0E00               	movlw	0
 10515  012944  6F72               	movwf	(___lmul@product+2)& (0+255),b
 10516  012946  0E00               	movlw	0
 10517  012948  6F73               	movwf	(___lmul@product+3)& (0+255),b
 10518  01294A                     l5057:
 10519                           
 10520                           ; BSR set to: 0
 10521  01294A  0100               	movlb	0	; () banked
 10522  01294C  A168               	btfss	___lmul@multiplier& (0+255),0,b
 10523  01294E  D010               	goto	l5061
 10524                           
 10525                           ; BSR set to: 0
 10526  012950  0100               	movlb	0	; () banked
 10527  012952  516C               	movf	___lmul@multiplicand& (0+255),w,b
 10528  012954  0100               	movlb	0	; () banked
 10529  012956  2770               	addwf	___lmul@product& (0+255),f,b
 10530  012958  0100               	movlb	0	; () banked
 10531  01295A  516D               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 10532  01295C  0100               	movlb	0	; () banked
 10533  01295E  2371               	addwfc	(___lmul@product+1)& (0+255),f,b
 10534  012960  0100               	movlb	0	; () banked
 10535  012962  516E               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 10536  012964  0100               	movlb	0	; () banked
 10537  012966  2372               	addwfc	(___lmul@product+2)& (0+255),f,b
 10538  012968  0100               	movlb	0	; () banked
 10539  01296A  516F               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 10540  01296C  0100               	movlb	0	; () banked
 10541  01296E  2373               	addwfc	(___lmul@product+3)& (0+255),f,b
 10542  012970                     l5061:
 10543                           
 10544                           ; BSR set to: 0
 10545  012970  0100               	movlb	0	; () banked
 10546  012972  90D8               	bcf	status,0,c
 10547  012974  376C               	rlcf	___lmul@multiplicand& (0+255),f,b
 10548  012976  376D               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 10549  012978  376E               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 10550  01297A  376F               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 10551                           
 10552                           ; BSR set to: 0
 10553  01297C  0100               	movlb	0	; () banked
 10554  01297E  90D8               	bcf	status,0,c
 10555  012980  336B               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 10556  012982  336A               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 10557  012984  3369               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 10558  012986  3368               	rrcf	___lmul@multiplier& (0+255),f,b
 10559  012988  0100               	movlb	0	; () banked
 10560  01298A  5168               	movf	___lmul@multiplier& (0+255),w,b
 10561  01298C  0100               	movlb	0	; () banked
 10562  01298E  1169               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 10563  012990  0100               	movlb	0	; () banked
 10564  012992  116A               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 10565  012994  0100               	movlb	0	; () banked
 10566  012996  116B               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 10567  012998  A4D8               	btfss	status,2,c
 10568  01299A  D7D7               	goto	l5057
 10569                           
 10570                           ; BSR set to: 0
 10571  01299C  C070  F068         	movff	___lmul@product,?___lmul
 10572  0129A0  C071  F069         	movff	___lmul@product+1,?___lmul+1
 10573  0129A4  C072  F06A         	movff	___lmul@product+2,?___lmul+2
 10574  0129A8  C073  F06B         	movff	___lmul@product+3,?___lmul+3
 10575                           
 10576                           ; BSR set to: 0
 10577  0129AC  0012               	return		;funcret
 10578  0129AE                     __end_of___lmul:
 10579                           	opt stack 0
 10580                           tblptru	equ	0xFF8
 10581                           tblptrh	equ	0xFF7
 10582                           tblptrl	equ	0xFF6
 10583                           tablat	equ	0xFF5
 10584                           prodh	equ	0xFF4
 10585                           prodl	equ	0xFF3
 10586                           intcon	equ	0xFF2
 10587                           intcon2	equ	0xFF1
 10588                           indf0	equ	0xFEF
 10589                           postinc0	equ	0xFEE
 10590                           fsr0h	equ	0xFEA
 10591                           fsr0l	equ	0xFE9
 10592                           wreg	equ	0xFE8
 10593                           postinc1	equ	0xFE6
 10594                           postdec1	equ	0xFE5
 10595                           fsr1h	equ	0xFE2
 10596                           fsr1l	equ	0xFE1
 10597                           indf2	equ	0xFDF
 10598                           postinc2	equ	0xFDE
 10599                           postdec2	equ	0xFDD
 10600                           fsr2h	equ	0xFDA
 10601                           fsr2l	equ	0xFD9
 10602                           status	equ	0xFD8
 10603                           
 10604 ;; *************** function ___lldiv *****************
 10605 ;; Defined at:
 10606 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 10607 ;; Parameters:    Size  Location     Type
 10608 ;;  dividend        4   20[BANK0 ] unsigned long 
 10609 ;;  divisor         4   24[BANK0 ] unsigned long 
 10610 ;; Auto vars:     Size  Location     Type
 10611 ;;  quotient        4   28[BANK0 ] unsigned long 
 10612 ;;  counter         1   32[BANK0 ] unsigned char 
 10613 ;; Return value:  Size  Location     Type
 10614 ;;                  4   20[BANK0 ] unsigned long 
 10615 ;; Registers used:
 10616 ;;		wreg, status,2, status,0
 10617 ;; Tracked objects:
 10618 ;;		On entry : 0/0
 10619 ;;		On exit  : 0/0
 10620 ;;		Unchanged: 0/0
 10621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10622 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10623 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10625 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10626 ;;Total ram usage:       13 bytes
 10627 ;; Hardware stack levels used:    1
 10628 ;; Hardware stack levels required when called:    4
 10629 ;; This function calls:
 10630 ;;		Nothing
 10631 ;; This function is called by:
 10632 ;;		_get_quot_rem
 10633 ;;		_light_loop
 10634 ;;		_CTMU_read
 10635 ;; This function uses a non-reentrant model
 10636 ;;
 10637                           
 10638                           	psect	text46
 10639  01205A                     __ptext46:
 10640                           	opt stack 0
 10641  01205A                     ___lldiv:
 10642                           	opt stack 19
 10643                           
 10644                           ; BSR set to: 0
 10645                           ;incstack = 0
 10646  01205A  0E00               	movlw	0
 10647  01205C  0100               	movlb	0	; () banked
 10648  01205E  6F7C               	movwf	___lldiv@quotient& (0+255),b
 10649  012060  0E00               	movlw	0
 10650  012062  6F7D               	movwf	(___lldiv@quotient+1)& (0+255),b
 10651  012064  0E00               	movlw	0
 10652  012066  6F7E               	movwf	(___lldiv@quotient+2)& (0+255),b
 10653  012068  0E00               	movlw	0
 10654  01206A  6F7F               	movwf	(___lldiv@quotient+3)& (0+255),b
 10655                           
 10656                           ; BSR set to: 0
 10657  01206C  0100               	movlb	0	; () banked
 10658  01206E  5178               	movf	___lldiv@divisor& (0+255),w,b
 10659  012070  0100               	movlb	0	; () banked
 10660  012072  1179               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10661  012074  0100               	movlb	0	; () banked
 10662  012076  117A               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10663  012078  0100               	movlb	0	; () banked
 10664  01207A  117B               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 10665  01207C  B4D8               	btfsc	status,2,c
 10666  01207E  D042               	goto	l1304
 10667                           
 10668                           ; BSR set to: 0
 10669  012080  0E01               	movlw	1
 10670  012082  0100               	movlb	0	; () banked
 10671  012084  6F80               	movwf	___lldiv@counter& (0+255),b
 10672  012086  D008               	goto	l5117
 10673  012088                     l5115:
 10674                           
 10675                           ; BSR set to: 0
 10676  012088  0100               	movlb	0	; () banked
 10677  01208A  90D8               	bcf	status,0,c
 10678  01208C  3778               	rlcf	___lldiv@divisor& (0+255),f,b
 10679  01208E  3779               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 10680  012090  377A               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 10681  012092  377B               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 10682  012094  0100               	movlb	0	; () banked
 10683  012096  2B80               	incf	___lldiv@counter& (0+255),f,b
 10684  012098                     l5117:
 10685                           
 10686                           ; BSR set to: 0
 10687  012098  0100               	movlb	0	; () banked
 10688  01209A  AF7B               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 10689  01209C  D7F5               	goto	l5115
 10690  01209E                     l5119:
 10691                           
 10692                           ; BSR set to: 0
 10693  01209E  0100               	movlb	0	; () banked
 10694  0120A0  90D8               	bcf	status,0,c
 10695  0120A2  377C               	rlcf	___lldiv@quotient& (0+255),f,b
 10696  0120A4  377D               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10697  0120A6  377E               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10698  0120A8  377F               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10699                           
 10700                           ; BSR set to: 0
 10701  0120AA  0100               	movlb	0	; () banked
 10702  0120AC  5178               	movf	___lldiv@divisor& (0+255),w,b
 10703  0120AE  0100               	movlb	0	; () banked
 10704  0120B0  5D74               	subwf	___lldiv@dividend& (0+255),w,b
 10705  0120B2  0100               	movlb	0	; () banked
 10706  0120B4  5179               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10707  0120B6  0100               	movlb	0	; () banked
 10708  0120B8  5975               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 10709  0120BA  0100               	movlb	0	; () banked
 10710  0120BC  517A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10711  0120BE  0100               	movlb	0	; () banked
 10712  0120C0  5976               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 10713  0120C2  0100               	movlb	0	; () banked
 10714  0120C4  517B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10715  0120C6  0100               	movlb	0	; () banked
 10716  0120C8  5977               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 10717  0120CA  A0D8               	btfss	status,0,c
 10718  0120CC  D012               	goto	l5127
 10719                           
 10720                           ; BSR set to: 0
 10721  0120CE  0100               	movlb	0	; () banked
 10722  0120D0  5178               	movf	___lldiv@divisor& (0+255),w,b
 10723  0120D2  0100               	movlb	0	; () banked
 10724  0120D4  5F74               	subwf	___lldiv@dividend& (0+255),f,b
 10725  0120D6  0100               	movlb	0	; () banked
 10726  0120D8  5179               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10727  0120DA  0100               	movlb	0	; () banked
 10728  0120DC  5B75               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 10729  0120DE  0100               	movlb	0	; () banked
 10730  0120E0  517A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10731  0120E2  0100               	movlb	0	; () banked
 10732  0120E4  5B76               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 10733  0120E6  0100               	movlb	0	; () banked
 10734  0120E8  517B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10735  0120EA  0100               	movlb	0	; () banked
 10736  0120EC  5B77               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 10737                           
 10738                           ; BSR set to: 0
 10739  0120EE  0100               	movlb	0	; () banked
 10740  0120F0  817C               	bsf	___lldiv@quotient& (0+255),0,b
 10741  0120F2                     l5127:
 10742                           
 10743                           ; BSR set to: 0
 10744  0120F2  0100               	movlb	0	; () banked
 10745  0120F4  90D8               	bcf	status,0,c
 10746  0120F6  337B               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 10747  0120F8  337A               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 10748  0120FA  3379               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 10749  0120FC  3378               	rrcf	___lldiv@divisor& (0+255),f,b
 10750                           
 10751                           ; BSR set to: 0
 10752  0120FE  0100               	movlb	0	; () banked
 10753  012100  2F80               	decfsz	___lldiv@counter& (0+255),f,b
 10754  012102  D7CD               	goto	l5119
 10755  012104                     l1304:
 10756                           
 10757                           ; BSR set to: 0
 10758  012104  C07C  F074         	movff	___lldiv@quotient,?___lldiv
 10759  012108  C07D  F075         	movff	___lldiv@quotient+1,?___lldiv+1
 10760  01210C  C07E  F076         	movff	___lldiv@quotient+2,?___lldiv+2
 10761  012110  C07F  F077         	movff	___lldiv@quotient+3,?___lldiv+3
 10762                           
 10763                           ; BSR set to: 0
 10764  012114  0012               	return		;funcret
 10765  012116                     __end_of___lldiv:
 10766                           	opt stack 0
 10767                           tblptru	equ	0xFF8
 10768                           tblptrh	equ	0xFF7
 10769                           tblptrl	equ	0xFF6
 10770                           tablat	equ	0xFF5
 10771                           prodh	equ	0xFF4
 10772                           prodl	equ	0xFF3
 10773                           intcon	equ	0xFF2
 10774                           intcon2	equ	0xFF1
 10775                           indf0	equ	0xFEF
 10776                           postinc0	equ	0xFEE
 10777                           fsr0h	equ	0xFEA
 10778                           fsr0l	equ	0xFE9
 10779                           wreg	equ	0xFE8
 10780                           postinc1	equ	0xFE6
 10781                           postdec1	equ	0xFE5
 10782                           fsr1h	equ	0xFE2
 10783                           fsr1l	equ	0xFE1
 10784                           indf2	equ	0xFDF
 10785                           postinc2	equ	0xFDE
 10786                           postdec2	equ	0xFDD
 10787                           fsr2h	equ	0xFDA
 10788                           fsr2l	equ	0xFD9
 10789                           status	equ	0xFD8
 10790                           
 10791 ;; *************** function _caltime_to_RTCC *****************
 10792 ;; Defined at:
 10793 ;;		line 99 in file "../My_library/My_RTCC.c"
 10794 ;; Parameters:    Size  Location     Type
 10795 ;;  tm              2   18[BANK0 ] PTR struct .
 10796 ;;		 -> now(14), 
 10797 ;; Auto vars:     Size  Location     Type
 10798 ;;		None
 10799 ;; Return value:  Size  Location     Type
 10800 ;;		None               void
 10801 ;; Registers used:
 10802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10803 ;; Tracked objects:
 10804 ;;		On entry : 0/0
 10805 ;;		On exit  : 0/0
 10806 ;;		Unchanged: 0/0
 10807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10808 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10811 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10812 ;;Total ram usage:        2 bytes
 10813 ;; Hardware stack levels used:    1
 10814 ;; Hardware stack levels required when called:    6
 10815 ;; This function calls:
 10816 ;;		_d_to_x
 10817 ;; This function is called by:
 10818 ;;		_RTCC_from_caltime
 10819 ;;		_RTCC_from_epoch
 10820 ;; This function uses a non-reentrant model
 10821 ;;
 10822                           
 10823                           	psect	text47
 10824  011B96                     __ptext47:
 10825                           	opt stack 0
 10826  011B96                     _caltime_to_RTCC:
 10827                           	opt stack 19
 10828  011B96                     l339:
 10829  011B96  010F               	movlb	15	; () banked
 10830  011B98  B93F               	btfsc	63,4,b	;volatile
 10831  011B9A  D7FD               	goto	l339
 10832                           
 10833                           ; BSR set to: 15
 10834                           ;My_RTCC.c: 101: RTCCFGbits.RTCPTR0 = 1;
 10835  011B9C  010F               	movlb	15	; () banked
 10836  011B9E  813F               	bsf	63,0,b	;volatile
 10837                           
 10838                           ;My_RTCC.c: 102: RTCCFGbits.RTCPTR1 = 1;
 10839  011BA0  010F               	movlb	15	; () banked
 10840  011BA2  833F               	bsf	63,1,b	;volatile
 10841                           
 10842                           ; BSR set to: 15
 10843                           ;My_RTCC.c: 103: RTCVALL = d_to_x(tm->YY);
 10844  011BA4  0100               	movlb	0	; () banked
 10845  011BA6  EE20 F00A          	lfsr	2,10
 10846  011BAA  5172               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10847  011BAC  26D9               	addwf	fsr2l,f,c
 10848  011BAE  5173               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10849  011BB0  22DA               	addwfc	fsr2h,f,c
 10850  011BB2  50DF               	movf	indf2,w,c
 10851  011BB4  EC88  F096         	call	_d_to_x
 10852  011BB8  010F               	movlb	15	; () banked
 10853  011BBA  6F3A               	movwf	58,b	;volatile
 10854                           
 10855                           ; BSR set to: 15
 10856                           ;My_RTCC.c: 104: RTCVALH = 0x00;
 10857  011BBC  0E00               	movlw	0
 10858  011BBE  010F               	movlb	15	; () banked
 10859  011BC0  6F3B               	movwf	59,b	;volatile
 10860                           
 10861                           ; BSR set to: 15
 10862                           ;My_RTCC.c: 105: RTCCFGbits.RTCPTR0 = 0;
 10863  011BC2  010F               	movlb	15	; () banked
 10864  011BC4  913F               	bcf	63,0,b	;volatile
 10865                           
 10866                           ; BSR set to: 15
 10867                           ;My_RTCC.c: 106: RTCCFGbits.RTCPTR1 = 1;
 10868  011BC6  010F               	movlb	15	; () banked
 10869  011BC8  833F               	bsf	63,1,b	;volatile
 10870                           
 10871                           ; BSR set to: 15
 10872                           ;My_RTCC.c: 107: RTCVALL = d_to_x(tm->DD);
 10873  011BCA  0100               	movlb	0	; () banked
 10874  011BCC  EE20 F008          	lfsr	2,8
 10875  011BD0  5172               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10876  011BD2  26D9               	addwf	fsr2l,f,c
 10877  011BD4  5173               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10878  011BD6  22DA               	addwfc	fsr2h,f,c
 10879  011BD8  50DF               	movf	indf2,w,c
 10880  011BDA  EC88  F096         	call	_d_to_x
 10881  011BDE  010F               	movlb	15	; () banked
 10882  011BE0  6F3A               	movwf	58,b	;volatile
 10883                           
 10884                           ; BSR set to: 15
 10885                           ;My_RTCC.c: 108: RTCVALH = d_to_x(tm->MM);
 10886  011BE2  0100               	movlb	0	; () banked
 10887  011BE4  EE20 F009          	lfsr	2,9
 10888  011BE8  5172               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10889  011BEA  26D9               	addwf	fsr2l,f,c
 10890  011BEC  5173               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10891  011BEE  22DA               	addwfc	fsr2h,f,c
 10892  011BF0  50DF               	movf	indf2,w,c
 10893  011BF2  EC88  F096         	call	_d_to_x
 10894  011BF6  010F               	movlb	15	; () banked
 10895  011BF8  6F3B               	movwf	59,b	;volatile
 10896                           
 10897                           ; BSR set to: 15
 10898                           ;My_RTCC.c: 109: RTCCFGbits.RTCPTR0 = 1;
 10899  011BFA  010F               	movlb	15	; () banked
 10900  011BFC  813F               	bsf	63,0,b	;volatile
 10901                           
 10902                           ; BSR set to: 15
 10903                           ;My_RTCC.c: 110: RTCCFGbits.RTCPTR1 = 0;
 10904  011BFE  010F               	movlb	15	; () banked
 10905  011C00  933F               	bcf	63,1,b	;volatile
 10906                           
 10907                           ; BSR set to: 15
 10908                           ;My_RTCC.c: 111: RTCVALL = d_to_x(tm->hh);
 10909  011C02  0100               	movlb	0	; () banked
 10910  011C04  EE20 F006          	lfsr	2,6
 10911  011C08  5172               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10912  011C0A  26D9               	addwf	fsr2l,f,c
 10913  011C0C  5173               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10914  011C0E  22DA               	addwfc	fsr2h,f,c
 10915  011C10  50DF               	movf	indf2,w,c
 10916  011C12  EC88  F096         	call	_d_to_x
 10917  011C16  010F               	movlb	15	; () banked
 10918  011C18  6F3A               	movwf	58,b	;volatile
 10919                           
 10920                           ; BSR set to: 15
 10921                           ;My_RTCC.c: 112: RTCVALH = d_to_x(tm->EE);
 10922  011C1A  0100               	movlb	0	; () banked
 10923  011C1C  EE20 F007          	lfsr	2,7
 10924  011C20  5172               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10925  011C22  26D9               	addwf	fsr2l,f,c
 10926  011C24  5173               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10927  011C26  22DA               	addwfc	fsr2h,f,c
 10928  011C28  50DF               	movf	indf2,w,c
 10929  011C2A  EC88  F096         	call	_d_to_x
 10930  011C2E  010F               	movlb	15	; () banked
 10931  011C30  6F3B               	movwf	59,b	;volatile
 10932                           
 10933                           ; BSR set to: 15
 10934                           ;My_RTCC.c: 113: RTCCFGbits.RTCPTR0 = 0;
 10935  011C32  010F               	movlb	15	; () banked
 10936  011C34  913F               	bcf	63,0,b	;volatile
 10937                           
 10938                           ; BSR set to: 15
 10939                           ;My_RTCC.c: 114: RTCCFGbits.RTCPTR1 = 0;
 10940  011C36  010F               	movlb	15	; () banked
 10941  011C38  933F               	bcf	63,1,b	;volatile
 10942                           
 10943                           ; BSR set to: 15
 10944                           ;My_RTCC.c: 115: RTCVALL = d_to_x(tm->ss);
 10945  011C3A  0100               	movlb	0	; () banked
 10946  011C3C  EE20 F004          	lfsr	2,4
 10947  011C40  5172               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10948  011C42  26D9               	addwf	fsr2l,f,c
 10949  011C44  5173               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10950  011C46  22DA               	addwfc	fsr2h,f,c
 10951  011C48  50DF               	movf	indf2,w,c
 10952  011C4A  EC88  F096         	call	_d_to_x
 10953  011C4E  010F               	movlb	15	; () banked
 10954  011C50  6F3A               	movwf	58,b	;volatile
 10955                           
 10956                           ; BSR set to: 15
 10957                           ;My_RTCC.c: 116: RTCVALH = d_to_x(tm->mm);
 10958  011C52  0100               	movlb	0	; () banked
 10959  011C54  EE20 F005          	lfsr	2,5
 10960  011C58  5172               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10961  011C5A  26D9               	addwf	fsr2l,f,c
 10962  011C5C  5173               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10963  011C5E  22DA               	addwfc	fsr2h,f,c
 10964  011C60  50DF               	movf	indf2,w,c
 10965  011C62  EC88  F096         	call	_d_to_x
 10966  011C66  010F               	movlb	15	; () banked
 10967  011C68  6F3B               	movwf	59,b	;volatile
 10968                           
 10969                           ; BSR set to: 15
 10970  011C6A  0012               	return		;funcret
 10971  011C6C                     __end_of_caltime_to_RTCC:
 10972                           	opt stack 0
 10973                           tblptru	equ	0xFF8
 10974                           tblptrh	equ	0xFF7
 10975                           tblptrl	equ	0xFF6
 10976                           tablat	equ	0xFF5
 10977                           prodh	equ	0xFF4
 10978                           prodl	equ	0xFF3
 10979                           intcon	equ	0xFF2
 10980                           intcon2	equ	0xFF1
 10981                           indf0	equ	0xFEF
 10982                           postinc0	equ	0xFEE
 10983                           fsr0h	equ	0xFEA
 10984                           fsr0l	equ	0xFE9
 10985                           wreg	equ	0xFE8
 10986                           postinc1	equ	0xFE6
 10987                           postdec1	equ	0xFE5
 10988                           fsr1h	equ	0xFE2
 10989                           fsr1l	equ	0xFE1
 10990                           indf2	equ	0xFDF
 10991                           postinc2	equ	0xFDE
 10992                           postdec2	equ	0xFDD
 10993                           fsr2h	equ	0xFDA
 10994                           fsr2l	equ	0xFD9
 10995                           status	equ	0xFD8
 10996                           
 10997 ;; *************** function _d_to_x *****************
 10998 ;; Defined at:
 10999 ;;		line 39 in file "../My_library/My_RTCC.c"
 11000 ;; Parameters:    Size  Location     Type
 11001 ;;  dec             1    wreg     unsigned char 
 11002 ;; Auto vars:     Size  Location     Type
 11003 ;;  dec             1   17[BANK0 ] unsigned char 
 11004 ;; Return value:  Size  Location     Type
 11005 ;;                  1    wreg      unsigned char 
 11006 ;; Registers used:
 11007 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11008 ;; Tracked objects:
 11009 ;;		On entry : 0/0
 11010 ;;		On exit  : 0/0
 11011 ;;		Unchanged: 0/0
 11012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11014 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11016 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11017 ;;Total ram usage:        1 bytes
 11018 ;; Hardware stack levels used:    1
 11019 ;; Hardware stack levels required when called:    5
 11020 ;; This function calls:
 11021 ;;		___awdiv
 11022 ;; This function is called by:
 11023 ;;		_caltime_to_RTCC
 11024 ;; This function uses a non-reentrant model
 11025 ;;
 11026                           
 11027                           	psect	text48
 11028  012D10                     __ptext48:
 11029                           	opt stack 0
 11030  012D10                     _d_to_x:
 11031                           	opt stack 19
 11032                           
 11033                           ; BSR set to: 15
 11034                           ;incstack = 0
 11035                           ;d_to_x@dec stored from wreg
 11036  012D10  0100               	movlb	0	; () banked
 11037  012D12  6F71               	movwf	d_to_x@dec& (0+255),b
 11038                           
 11039                           ;My_RTCC.c: 42: return dec / 10 * 6 + dec;
 11040  012D14  C071  F069         	movff	d_to_x@dec,___awdiv@dividend
 11041  012D18  0100               	movlb	0	; () banked
 11042  012D1A  6B6A               	clrf	(___awdiv@dividend+1)& (0+255),b
 11043  012D1C  0E00               	movlw	0
 11044  012D1E  0100               	movlb	0	; () banked
 11045  012D20  6F6C               	movwf	(___awdiv@divisor+1)& (0+255),b
 11046  012D22  0E0A               	movlw	10
 11047  012D24  6F6B               	movwf	___awdiv@divisor& (0+255),b
 11048  012D26  ECCE  F08F         	call	___awdiv	;wreg free
 11049  012D2A  0100               	movlb	0	; () banked
 11050  012D2C  5169               	movf	?___awdiv& (0+255),w,b
 11051  012D2E  0D06               	mullw	6
 11052  012D30  50F3               	movf	prodl,w,c
 11053  012D32  0100               	movlb	0	; () banked
 11054  012D34  2571               	addwf	d_to_x@dec& (0+255),w,b
 11055  012D36  0012               	return	
 11056  012D38                     __end_of_d_to_x:
 11057                           	opt stack 0
 11058                           tblptru	equ	0xFF8
 11059                           tblptrh	equ	0xFF7
 11060                           tblptrl	equ	0xFF6
 11061                           tablat	equ	0xFF5
 11062                           prodh	equ	0xFF4
 11063                           prodl	equ	0xFF3
 11064                           intcon	equ	0xFF2
 11065                           intcon2	equ	0xFF1
 11066                           indf0	equ	0xFEF
 11067                           postinc0	equ	0xFEE
 11068                           fsr0h	equ	0xFEA
 11069                           fsr0l	equ	0xFE9
 11070                           wreg	equ	0xFE8
 11071                           postinc1	equ	0xFE6
 11072                           postdec1	equ	0xFE5
 11073                           fsr1h	equ	0xFE2
 11074                           fsr1l	equ	0xFE1
 11075                           indf2	equ	0xFDF
 11076                           postinc2	equ	0xFDE
 11077                           postdec2	equ	0xFDD
 11078                           fsr2h	equ	0xFDA
 11079                           fsr2l	equ	0xFD9
 11080                           status	equ	0xFD8
 11081                           
 11082 ;; *************** function ___awdiv *****************
 11083 ;; Defined at:
 11084 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 11085 ;; Parameters:    Size  Location     Type
 11086 ;;  dividend        2    9[BANK0 ] int 
 11087 ;;  divisor         2   11[BANK0 ] int 
 11088 ;; Auto vars:     Size  Location     Type
 11089 ;;  quotient        2   15[BANK0 ] int 
 11090 ;;  sign            1   14[BANK0 ] unsigned char 
 11091 ;;  counter         1   13[BANK0 ] unsigned char 
 11092 ;; Return value:  Size  Location     Type
 11093 ;;                  2    9[BANK0 ] int 
 11094 ;; Registers used:
 11095 ;;		wreg, status,2, status,0
 11096 ;; Tracked objects:
 11097 ;;		On entry : 0/0
 11098 ;;		On exit  : 0/0
 11099 ;;		Unchanged: 0/0
 11100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11101 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11102 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11104 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11105 ;;Total ram usage:        8 bytes
 11106 ;; Hardware stack levels used:    1
 11107 ;; Hardware stack levels required when called:    4
 11108 ;; This function calls:
 11109 ;;		Nothing
 11110 ;; This function is called by:
 11111 ;;		_d_to_x
 11112 ;;		_terminal_operation
 11113 ;; This function uses a non-reentrant model
 11114 ;;
 11115                           
 11116                           	psect	text49
 11117  011F9C                     __ptext49:
 11118                           	opt stack 0
 11119  011F9C                     ___awdiv:
 11120                           	opt stack 19
 11121                           
 11122                           ; BSR set to: 0
 11123                           ;incstack = 0
 11124  011F9C  0E00               	movlw	0
 11125  011F9E  0100               	movlb	0	; () banked
 11126  011FA0  6F6E               	movwf	___awdiv@sign& (0+255),b
 11127                           
 11128                           ; BSR set to: 0
 11129  011FA2  0100               	movlb	0	; () banked
 11130  011FA4  AF6C               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11131  011FA6  D008               	goto	l5073
 11132                           
 11133                           ; BSR set to: 0
 11134  011FA8  0100               	movlb	0	; () banked
 11135  011FAA  6D6B               	negf	___awdiv@divisor& (0+255),b
 11136  011FAC  1F6C               	comf	(___awdiv@divisor+1)& (0+255),f,b
 11137  011FAE  B0D8               	btfsc	status,0,c
 11138  011FB0  2B6C               	incf	(___awdiv@divisor+1)& (0+255),f,b
 11139                           
 11140                           ; BSR set to: 0
 11141  011FB2  0E01               	movlw	1
 11142  011FB4  0100               	movlb	0	; () banked
 11143  011FB6  6F6E               	movwf	___awdiv@sign& (0+255),b
 11144  011FB8                     l5073:
 11145                           
 11146                           ; BSR set to: 0
 11147  011FB8  0100               	movlb	0	; () banked
 11148  011FBA  AF6A               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 11149  011FBC  D008               	goto	l5079
 11150                           
 11151                           ; BSR set to: 0
 11152  011FBE  0100               	movlb	0	; () banked
 11153  011FC0  6D69               	negf	___awdiv@dividend& (0+255),b
 11154  011FC2  1F6A               	comf	(___awdiv@dividend+1)& (0+255),f,b
 11155  011FC4  B0D8               	btfsc	status,0,c
 11156  011FC6  2B6A               	incf	(___awdiv@dividend+1)& (0+255),f,b
 11157                           
 11158                           ; BSR set to: 0
 11159  011FC8  0E01               	movlw	1
 11160  011FCA  0100               	movlb	0	; () banked
 11161  011FCC  1B6E               	xorwf	___awdiv@sign& (0+255),f,b
 11162  011FCE                     l5079:
 11163                           
 11164                           ; BSR set to: 0
 11165  011FCE  0E00               	movlw	0
 11166  011FD0  0100               	movlb	0	; () banked
 11167  011FD2  6F70               	movwf	(___awdiv@quotient+1)& (0+255),b
 11168  011FD4  0E00               	movlw	0
 11169  011FD6  6F6F               	movwf	___awdiv@quotient& (0+255),b
 11170                           
 11171                           ; BSR set to: 0
 11172  011FD8  0100               	movlb	0	; () banked
 11173  011FDA  516B               	movf	___awdiv@divisor& (0+255),w,b
 11174  011FDC  0100               	movlb	0	; () banked
 11175  011FDE  116C               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 11176  011FE0  B4D8               	btfsc	status,2,c
 11177  011FE2  D02C               	goto	l5101
 11178                           
 11179                           ; BSR set to: 0
 11180  011FE4  0E01               	movlw	1
 11181  011FE6  0100               	movlb	0	; () banked
 11182  011FE8  6F6D               	movwf	___awdiv@counter& (0+255),b
 11183  011FEA  D006               	goto	l5087
 11184  011FEC                     l5085:
 11185                           
 11186                           ; BSR set to: 0
 11187  011FEC  0100               	movlb	0	; () banked
 11188  011FEE  90D8               	bcf	status,0,c
 11189  011FF0  376B               	rlcf	___awdiv@divisor& (0+255),f,b
 11190  011FF2  376C               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 11191  011FF4  0100               	movlb	0	; () banked
 11192  011FF6  2B6D               	incf	___awdiv@counter& (0+255),f,b
 11193  011FF8                     l5087:
 11194                           
 11195                           ; BSR set to: 0
 11196  011FF8  0100               	movlb	0	; () banked
 11197  011FFA  AF6C               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11198  011FFC  D7F7               	goto	l5085
 11199  011FFE                     l5089:
 11200                           
 11201                           ; BSR set to: 0
 11202  011FFE  0100               	movlb	0	; () banked
 11203  012000  90D8               	bcf	status,0,c
 11204  012002  376F               	rlcf	___awdiv@quotient& (0+255),f,b
 11205  012004  3770               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 11206                           
 11207                           ; BSR set to: 0
 11208  012006  0100               	movlb	0	; () banked
 11209  012008  516B               	movf	___awdiv@divisor& (0+255),w,b
 11210  01200A  0100               	movlb	0	; () banked
 11211  01200C  5D69               	subwf	___awdiv@dividend& (0+255),w,b
 11212  01200E  0100               	movlb	0	; () banked
 11213  012010  516C               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11214  012012  0100               	movlb	0	; () banked
 11215  012014  596A               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 11216  012016  A0D8               	btfss	status,0,c
 11217  012018  D00A               	goto	l5097
 11218                           
 11219                           ; BSR set to: 0
 11220  01201A  0100               	movlb	0	; () banked
 11221  01201C  516B               	movf	___awdiv@divisor& (0+255),w,b
 11222  01201E  0100               	movlb	0	; () banked
 11223  012020  5F69               	subwf	___awdiv@dividend& (0+255),f,b
 11224  012022  0100               	movlb	0	; () banked
 11225  012024  516C               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11226  012026  0100               	movlb	0	; () banked
 11227  012028  5B6A               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 11228                           
 11229                           ; BSR set to: 0
 11230  01202A  0100               	movlb	0	; () banked
 11231  01202C  816F               	bsf	___awdiv@quotient& (0+255),0,b
 11232  01202E                     l5097:
 11233                           
 11234                           ; BSR set to: 0
 11235  01202E  0100               	movlb	0	; () banked
 11236  012030  90D8               	bcf	status,0,c
 11237  012032  336C               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 11238  012034  336B               	rrcf	___awdiv@divisor& (0+255),f,b
 11239                           
 11240                           ; BSR set to: 0
 11241  012036  0100               	movlb	0	; () banked
 11242  012038  2F6D               	decfsz	___awdiv@counter& (0+255),f,b
 11243  01203A  D7E1               	goto	l5089
 11244  01203C                     l5101:
 11245                           
 11246                           ; BSR set to: 0
 11247  01203C  0100               	movlb	0	; () banked
 11248  01203E  516E               	movf	___awdiv@sign& (0+255),w,b
 11249  012040  0100               	movlb	0	; () banked
 11250  012042  B4D8               	btfsc	status,2,c
 11251  012044  D005               	goto	l5105
 11252                           
 11253                           ; BSR set to: 0
 11254  012046  0100               	movlb	0	; () banked
 11255  012048  6D6F               	negf	___awdiv@quotient& (0+255),b
 11256  01204A  1F70               	comf	(___awdiv@quotient+1)& (0+255),f,b
 11257  01204C  B0D8               	btfsc	status,0,c
 11258  01204E  2B70               	incf	(___awdiv@quotient+1)& (0+255),f,b
 11259  012050                     l5105:
 11260                           
 11261                           ; BSR set to: 0
 11262  012050  C06F  F069         	movff	___awdiv@quotient,?___awdiv
 11263  012054  C070  F06A         	movff	___awdiv@quotient+1,?___awdiv+1
 11264  012058  0012               	return	
 11265  01205A                     __end_of___awdiv:
 11266                           	opt stack 0
 11267                           tblptru	equ	0xFF8
 11268                           tblptrh	equ	0xFF7
 11269                           tblptrl	equ	0xFF6
 11270                           tablat	equ	0xFF5
 11271                           prodh	equ	0xFF4
 11272                           prodl	equ	0xFF3
 11273                           intcon	equ	0xFF2
 11274                           intcon2	equ	0xFF1
 11275                           indf0	equ	0xFEF
 11276                           postinc0	equ	0xFEE
 11277                           fsr0h	equ	0xFEA
 11278                           fsr0l	equ	0xFE9
 11279                           wreg	equ	0xFE8
 11280                           postinc1	equ	0xFE6
 11281                           postdec1	equ	0xFE5
 11282                           fsr1h	equ	0xFE2
 11283                           fsr1l	equ	0xFE1
 11284                           indf2	equ	0xFDF
 11285                           postinc2	equ	0xFDE
 11286                           postdec2	equ	0xFDD
 11287                           fsr2h	equ	0xFDA
 11288                           fsr2l	equ	0xFD9
 11289                           status	equ	0xFD8
 11290                           
 11291 ;; *************** function _ISR *****************
 11292 ;; Defined at:
 11293 ;;		line 59 in file "PIC18F27J53-killifish_light05.c"
 11294 ;; Parameters:    Size  Location     Type
 11295 ;;		None
 11296 ;; Auto vars:     Size  Location     Type
 11297 ;;		None
 11298 ;; Return value:  Size  Location     Type
 11299 ;;		None               void
 11300 ;; Registers used:
 11301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11302 ;; Tracked objects:
 11303 ;;		On entry : 0/0
 11304 ;;		On exit  : 0/0
 11305 ;;		Unchanged: 0/0
 11306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11309 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11310 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11311 ;;Total ram usage:       15 bytes
 11312 ;; Hardware stack levels used:    1
 11313 ;; Hardware stack levels required when called:    3
 11314 ;; This function calls:
 11315 ;;		_UART_ISR
 11316 ;;		_button_timer_interrupt
 11317 ;; This function is called by:
 11318 ;;		Interrupt level 2
 11319 ;; This function uses a non-reentrant model
 11320 ;;
 11321                           
 11322                           	psect	intcode
 11323  000008                     __pintcode:
 11324                           	opt stack 0
 11325  000008                     _ISR:
 11326                           	opt stack 18
 11327                           
 11328                           ; BSR set to: 0
 11329                           ;incstack = 0
 11330  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11331  00000A  CFFA F012          	movff	pclath,??_ISR+1
 11332  00000E  CFFB F013          	movff	pclatu,??_ISR+2
 11333  000012  CFE9 F014          	movff	fsr0l,??_ISR+3
 11334  000016  CFEA F015          	movff	fsr0h,??_ISR+4
 11335  00001A  CFE1 F016          	movff	fsr1l,??_ISR+5
 11336  00001E  CFE2 F017          	movff	fsr1h,??_ISR+6
 11337  000022  CFD9 F018          	movff	fsr2l,??_ISR+7
 11338  000026  CFDA F019          	movff	fsr2h,??_ISR+8
 11339  00002A  CFF3 F01A          	movff	prodl,??_ISR+9
 11340  00002E  CFF4 F01B          	movff	prodh,??_ISR+10
 11341  000032  CFF6 F01C          	movff	tblptrl,??_ISR+11
 11342  000036  CFF7 F01D          	movff	tblptrh,??_ISR+12
 11343  00003A  CFF8 F01E          	movff	tblptru,??_ISR+13
 11344  00003E  CFF5 F01F          	movff	tablat,??_ISR+14
 11345                           
 11346                           ;PIC18F27J53-killifish_light05.c: 60: UART_ISR();
 11347  000042  ECC0  F095         	call	_UART_ISR	;wreg free
 11348                           
 11349                           ;PIC18F27J53-killifish_light05.c: 61: if (INTCONbits.T0IF) {
 11350  000046  B4F2               	btfsc	intcon,2,c	;volatile
 11351                           
 11352                           ;PIC18F27J53-killifish_light05.c: 62: INTCONbits.T0IF = 0;
 11353  000048  94F2               	bcf	intcon,2,c	;volatile
 11354                           
 11355                           ;PIC18F27J53-killifish_light05.c: 63: }
 11356                           ;PIC18F27J53-killifish_light05.c: 64: if (PIR1bits.TMR1IF) {
 11357  00004A  A09E               	btfss	3998,0,c	;volatile
 11358  00004C  D010               	goto	i2l4959
 11359                           
 11360                           ;PIC18F27J53-killifish_light05.c: 65: PIR1bits.TMR1IF = 0;
 11361  00004E  909E               	bcf	3998,0,c	;volatile
 11362                           
 11363                           ;PIC18F27J53-killifish_light05.c: 66: TMR1H = 0x80;
 11364  000050  0E80               	movlw	128
 11365  000052  6ECF               	movwf	4047,c	;volatile
 11366                           
 11367                           ;PIC18F27J53-killifish_light05.c: 67: LATBbits.LATB5 = !LATBbits.LATB5;
 11368  000054  BA8A               	btfsc	3978,5,c	;volatile
 11369  000056  D003               	goto	i2u470_40
 11370  000058  6A11               	clrf	??_ISR& (0+255),c
 11371  00005A  2A11               	incf	??_ISR& (0+255),f,c
 11372  00005C  D001               	goto	i2u471_48
 11373  00005E                     i2u470_40:
 11374  00005E  6A11               	clrf	??_ISR& (0+255),c
 11375  000060                     i2u471_48:
 11376  000060  3A11               	swapf	??_ISR,f,c
 11377  000062  4611               	rlncf	??_ISR,f,c
 11378  000064  508A               	movf	3978,w,c	;volatile
 11379  000066  1811               	xorwf	??_ISR,w,c
 11380  000068  0BDF               	andlw	-33
 11381  00006A  1811               	xorwf	??_ISR,w,c
 11382  00006C  6E8A               	movwf	3978,c	;volatile
 11383  00006E                     i2l4959:
 11384                           
 11385                           ;PIC18F27J53-killifish_light05.c: 68: }
 11386                           ;PIC18F27J53-killifish_light05.c: 69: if (PIR2bits.TMR3IF) {
 11387  00006E  A2A1               	btfss	4001,1,c	;volatile
 11388  000070  D027               	goto	i2l780
 11389                           
 11390                           ;PIC18F27J53-killifish_light05.c: 70: PIR2bits.TMR3IF = 0;
 11391  000072  92A1               	bcf	4001,1,c	;volatile
 11392                           
 11393                           ;PIC18F27J53-killifish_light05.c: 71: button_timer_interrupt(&sw_R, !PORTAbits.RA5);
 11394  000074  0E3A               	movlw	low _sw_R
 11395  000076  6E01               	movwf	button_timer_interrupt@bt,c
 11396  000078  0E00               	movlw	high _sw_R
 11397  00007A  6E02               	movwf	button_timer_interrupt@bt+1,c
 11398  00007C  BA80               	btfsc	3968,5,c	;volatile
 11399  00007E  D002               	goto	i2u473_40
 11400  000080  0E01               	movlw	1
 11401  000082  D001               	goto	i2u474_40
 11402  000084                     i2u473_40:
 11403  000084  0E00               	movlw	0
 11404  000086                     i2u474_40:
 11405  000086  6E03               	movwf	button_timer_interrupt@sw_value,c
 11406  000088  ECDD  F088         	call	_button_timer_interrupt	;wreg free
 11407                           
 11408                           ;PIC18F27J53-killifish_light05.c: 72: button_timer_interrupt(&sw_G, !PORTAbits.RA6);
 11409  00008C  0E36               	movlw	low _sw_G
 11410  00008E  6E01               	movwf	button_timer_interrupt@bt,c
 11411  000090  0E00               	movlw	high _sw_G
 11412  000092  6E02               	movwf	button_timer_interrupt@bt+1,c
 11413  000094  BC80               	btfsc	3968,6,c	;volatile
 11414  000096  D002               	goto	i2u475_40
 11415  000098  0E01               	movlw	1
 11416  00009A  D001               	goto	i2u476_40
 11417  00009C                     i2u475_40:
 11418  00009C  0E00               	movlw	0
 11419  00009E                     i2u476_40:
 11420  00009E  6E03               	movwf	button_timer_interrupt@sw_value,c
 11421  0000A0  ECDD  F088         	call	_button_timer_interrupt	;wreg free
 11422                           
 11423                           ;PIC18F27J53-killifish_light05.c: 73: button_timer_interrupt(&sw_B, !PORTAbits.RA7);
 11424  0000A4  0EE9               	movlw	low _sw_B
 11425  0000A6  6E01               	movwf	button_timer_interrupt@bt,c
 11426  0000A8  0E00               	movlw	high _sw_B
 11427  0000AA  6E02               	movwf	button_timer_interrupt@bt+1,c
 11428  0000AC  BE80               	btfsc	3968,7,c	;volatile
 11429  0000AE  D002               	goto	i2u477_40
 11430  0000B0  0E01               	movlw	1
 11431  0000B2  D001               	goto	i2u478_40
 11432  0000B4                     i2u477_40:
 11433  0000B4  0E00               	movlw	0
 11434  0000B6                     i2u478_40:
 11435  0000B6  6E03               	movwf	button_timer_interrupt@sw_value,c
 11436  0000B8  ECDD  F088         	call	_button_timer_interrupt	;wreg free
 11437                           
 11438                           ;PIC18F27J53-killifish_light05.c: 74: ADC_flag = 1;
 11439  0000BC  0E01               	movlw	1
 11440  0000BE  6E27               	movwf	_ADC_flag,c
 11441  0000C0                     i2l780:
 11442  0000C0  C01F  FFF5         	movff	??_ISR+14,tablat
 11443  0000C4  C01E  FFF8         	movff	??_ISR+13,tblptru
 11444  0000C8  C01D  FFF7         	movff	??_ISR+12,tblptrh
 11445  0000CC  C01C  FFF6         	movff	??_ISR+11,tblptrl
 11446  0000D0  C01B  FFF4         	movff	??_ISR+10,prodh
 11447  0000D4  C01A  FFF3         	movff	??_ISR+9,prodl
 11448  0000D8  C019  FFDA         	movff	??_ISR+8,fsr2h
 11449  0000DC  C018  FFD9         	movff	??_ISR+7,fsr2l
 11450  0000E0  C017  FFE2         	movff	??_ISR+6,fsr1h
 11451  0000E4  C016  FFE1         	movff	??_ISR+5,fsr1l
 11452  0000E8  C015  FFEA         	movff	??_ISR+4,fsr0h
 11453  0000EC  C014  FFE9         	movff	??_ISR+3,fsr0l
 11454  0000F0  C013  FFFB         	movff	??_ISR+2,pclatu
 11455  0000F4  C012  FFFA         	movff	??_ISR+1,pclath
 11456  0000F8  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11457  0000FA  0011               	retfie		f
 11458  0000FC                     __end_of_ISR:
 11459                           	opt stack 0
 11460                           pclatu	equ	0xFFB
 11461                           pclath	equ	0xFFA
 11462                           tblptru	equ	0xFF8
 11463                           tblptrh	equ	0xFF7
 11464                           tblptrl	equ	0xFF6
 11465                           tablat	equ	0xFF5
 11466                           prodh	equ	0xFF4
 11467                           prodl	equ	0xFF3
 11468                           intcon	equ	0xFF2
 11469                           intcon2	equ	0xFF1
 11470                           indf0	equ	0xFEF
 11471                           postinc0	equ	0xFEE
 11472                           fsr0h	equ	0xFEA
 11473                           fsr0l	equ	0xFE9
 11474                           wreg	equ	0xFE8
 11475                           postinc1	equ	0xFE6
 11476                           postdec1	equ	0xFE5
 11477                           fsr1h	equ	0xFE2
 11478                           fsr1l	equ	0xFE1
 11479                           indf2	equ	0xFDF
 11480                           postinc2	equ	0xFDE
 11481                           postdec2	equ	0xFDD
 11482                           fsr2h	equ	0xFDA
 11483                           fsr2l	equ	0xFD9
 11484                           status	equ	0xFD8
 11485                           
 11486 ;; *************** function _button_timer_interrupt *****************
 11487 ;; Defined at:
 11488 ;;		line 3 in file "../My_library/My_button.c"
 11489 ;; Parameters:    Size  Location     Type
 11490 ;;  bt              2    0[COMRAM] PTR struct button
 11491 ;;		 -> sw_B(4), sw_G(4), sw_R(4), 
 11492 ;;  sw_value        1    2[COMRAM] unsigned char 
 11493 ;; Auto vars:     Size  Location     Type
 11494 ;;		None
 11495 ;; Return value:  Size  Location     Type
 11496 ;;		None               void
 11497 ;; Registers used:
 11498 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11499 ;; Tracked objects:
 11500 ;;		On entry : 0/0
 11501 ;;		On exit  : 0/0
 11502 ;;		Unchanged: 0/0
 11503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11504 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11506 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11507 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11508 ;;Total ram usage:        5 bytes
 11509 ;; Hardware stack levels used:    1
 11510 ;; This function calls:
 11511 ;;		Nothing
 11512 ;; This function is called by:
 11513 ;;		_ISR
 11514 ;; This function uses a non-reentrant model
 11515 ;;
 11516                           
 11517                           	psect	text51
 11518  0111BA                     __ptext51:
 11519                           	opt stack 0
 11520  0111BA                     _button_timer_interrupt:
 11521                           	opt stack 20
 11522                           
 11523                           ;My_button.c: 4: if (sw_value) {
 11524                           
 11525                           ;incstack = 0
 11526  0111BA  5003               	movf	button_timer_interrupt@sw_value,w,c
 11527  0111BC  B4D8               	btfsc	status,2,c
 11528  0111BE  D098               	goto	i2l4457
 11529                           
 11530                           ;My_button.c: 5: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 11531  0111C0  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11532  0111C4  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11533  0111C8  0E84               	movlw	132
 11534  0111CA  18DE               	xorwf	postinc2,w,c
 11535  0111CC  E10B               	bnz	i2l4
 11536  0111CE  0E03               	movlw	3
 11537  0111D0  18DE               	xorwf	postinc2,w,c
 11538  0111D2  A4D8               	btfss	status,2,c
 11539  0111D4  D007               	goto	i2l4
 11540  0111D6  EE20 F003          	lfsr	2,3
 11541  0111DA  5001               	movf	button_timer_interrupt@bt,w,c
 11542  0111DC  26D9               	addwf	fsr2l,f,c
 11543  0111DE  5002               	movf	button_timer_interrupt@bt+1,w,c
 11544  0111E0  22DA               	addwfc	fsr2h,f,c
 11545  0111E2  8EDF               	bsf	indf2,7,c
 11546  0111E4                     i2l4:
 11547                           
 11548                           ;My_button.c: 6: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 11549  0111E4  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11550  0111E8  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11551  0111EC  0EBC               	movlw	188
 11552  0111EE  18DE               	xorwf	postinc2,w,c
 11553  0111F0  E10B               	bnz	i2l5
 11554  0111F2  0E02               	movlw	2
 11555  0111F4  18DE               	xorwf	postinc2,w,c
 11556  0111F6  A4D8               	btfss	status,2,c
 11557  0111F8  D007               	goto	i2l5
 11558  0111FA  EE20 F003          	lfsr	2,3
 11559  0111FE  5001               	movf	button_timer_interrupt@bt,w,c
 11560  011200  26D9               	addwf	fsr2l,f,c
 11561  011202  5002               	movf	button_timer_interrupt@bt+1,w,c
 11562  011204  22DA               	addwfc	fsr2h,f,c
 11563  011206  8CDF               	bsf	indf2,6,c
 11564  011208                     i2l5:
 11565                           
 11566                           ;My_button.c: 7: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 11567  011208  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11568  01120C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11569  011210  0EF4               	movlw	244
 11570  011212  18DE               	xorwf	postinc2,w,c
 11571  011214  E10A               	bnz	i2l6
 11572  011216  04DE               	decf	postinc2,w,c
 11573  011218  A4D8               	btfss	status,2,c
 11574  01121A  D007               	goto	i2l6
 11575  01121C  EE20 F003          	lfsr	2,3
 11576  011220  5001               	movf	button_timer_interrupt@bt,w,c
 11577  011222  26D9               	addwf	fsr2l,f,c
 11578  011224  5002               	movf	button_timer_interrupt@bt+1,w,c
 11579  011226  22DA               	addwfc	fsr2h,f,c
 11580  011228  8ADF               	bsf	indf2,5,c
 11581  01122A                     i2l6:
 11582                           
 11583                           ;My_button.c: 8: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 11584  01122A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11585  01122E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11586  011232  0E2C               	movlw	44
 11587  011234  18DE               	xorwf	postinc2,w,c
 11588  011236  E10A               	bnz	i2l7
 11589  011238  04DE               	decf	postinc2,w,c
 11590  01123A  A4D8               	btfss	status,2,c
 11591  01123C  D007               	goto	i2l7
 11592  01123E  EE20 F003          	lfsr	2,3
 11593  011242  5001               	movf	button_timer_interrupt@bt,w,c
 11594  011244  26D9               	addwf	fsr2l,f,c
 11595  011246  5002               	movf	button_timer_interrupt@bt+1,w,c
 11596  011248  22DA               	addwfc	fsr2h,f,c
 11597  01124A  88DF               	bsf	indf2,4,c
 11598  01124C                     i2l7:
 11599                           
 11600                           ;My_button.c: 9: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 11601  01124C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11602  011250  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11603  011254  0E96               	movlw	150
 11604  011256  18DE               	xorwf	postinc2,w,c
 11605  011258  10DE               	iorwf	postinc2,w,c
 11606  01125A  A4D8               	btfss	status,2,c
 11607  01125C  D007               	goto	i2l8
 11608  01125E  EE20 F003          	lfsr	2,3
 11609  011262  5001               	movf	button_timer_interrupt@bt,w,c
 11610  011264  26D9               	addwf	fsr2l,f,c
 11611  011266  5002               	movf	button_timer_interrupt@bt+1,w,c
 11612  011268  22DA               	addwfc	fsr2h,f,c
 11613  01126A  86DF               	bsf	indf2,3,c
 11614  01126C                     i2l8:
 11615                           
 11616                           ;My_button.c: 10: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 11617  01126C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11618  011270  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11619  011274  0E3C               	movlw	60
 11620  011276  18DE               	xorwf	postinc2,w,c
 11621  011278  10DE               	iorwf	postinc2,w,c
 11622  01127A  A4D8               	btfss	status,2,c
 11623  01127C  D007               	goto	i2l9
 11624  01127E  EE20 F003          	lfsr	2,3
 11625  011282  5001               	movf	button_timer_interrupt@bt,w,c
 11626  011284  26D9               	addwf	fsr2l,f,c
 11627  011286  5002               	movf	button_timer_interrupt@bt+1,w,c
 11628  011288  22DA               	addwfc	fsr2h,f,c
 11629  01128A  84DF               	bsf	indf2,2,c
 11630  01128C                     i2l9:
 11631                           
 11632                           ;My_button.c: 11: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 11633  01128C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11634  011290  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11635  011294  0E10               	movlw	16
 11636  011296  18DE               	xorwf	postinc2,w,c
 11637  011298  10DE               	iorwf	postinc2,w,c
 11638  01129A  A4D8               	btfss	status,2,c
 11639  01129C  D007               	goto	i2l10
 11640  01129E  EE20 F003          	lfsr	2,3
 11641  0112A2  5001               	movf	button_timer_interrupt@bt,w,c
 11642  0112A4  26D9               	addwf	fsr2l,f,c
 11643  0112A6  5002               	movf	button_timer_interrupt@bt+1,w,c
 11644  0112A8  22DA               	addwfc	fsr2h,f,c
 11645  0112AA  82DF               	bsf	indf2,1,c
 11646  0112AC                     i2l10:
 11647                           
 11648                           ;My_button.c: 12: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 11649  0112AC  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11650  0112B0  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11651  0112B4  0E02               	movlw	2
 11652  0112B6  18DE               	xorwf	postinc2,w,c
 11653  0112B8  10DE               	iorwf	postinc2,w,c
 11654  0112BA  A4D8               	btfss	status,2,c
 11655  0112BC  D007               	goto	i2l11
 11656  0112BE  EE20 F003          	lfsr	2,3
 11657  0112C2  5001               	movf	button_timer_interrupt@bt,w,c
 11658  0112C4  26D9               	addwf	fsr2l,f,c
 11659  0112C6  5002               	movf	button_timer_interrupt@bt+1,w,c
 11660  0112C8  22DA               	addwfc	fsr2h,f,c
 11661  0112CA  80DF               	bsf	indf2,0,c
 11662  0112CC                     i2l11:
 11663                           
 11664                           ;My_button.c: 13: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 11665  0112CC  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11666  0112D0  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11667  0112D4  0E85               	movlw	133
 11668  0112D6  5CDE               	subwf	postinc2,w,c
 11669  0112D8  0E03               	movlw	3
 11670  0112DA  58DE               	subwfb	postinc2,w,c
 11671  0112DC  B0D8               	btfsc	status,0,c
 11672  0112DE  0012               	return	
 11673  0112E0  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11674  0112E4  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11675  0112E8  2ADE               	incf	postinc2,f,c
 11676  0112EA  0E00               	movlw	0
 11677  0112EC  22DD               	addwfc	postdec2,f,c
 11678                           
 11679                           ;My_button.c: 14: } else {
 11680  0112EE  0012               	return	
 11681  0112F0                     i2l4457:
 11682                           
 11683                           ;My_button.c: 15: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 11684  0112F0  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11685  0112F4  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11686  0112F8  0E84               	movlw	132
 11687  0112FA  5CDE               	subwf	postinc2,w,c
 11688  0112FC  0E03               	movlw	3
 11689  0112FE  58DE               	subwfb	postinc2,w,c
 11690  011300  A0D8               	btfss	status,0,c
 11691  011302  D008               	goto	i2l4461
 11692  011304  EE20 F002          	lfsr	2,2
 11693  011308  5001               	movf	button_timer_interrupt@bt,w,c
 11694  01130A  26D9               	addwf	fsr2l,f,c
 11695  01130C  5002               	movf	button_timer_interrupt@bt+1,w,c
 11696  01130E  22DA               	addwfc	fsr2h,f,c
 11697  011310  8EDF               	bsf	indf2,7,c
 11698  011312  D081               	goto	i2l4489
 11699  011314                     i2l4461:
 11700                           
 11701                           ;My_button.c: 16: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 11702  011314  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11703  011318  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11704  01131C  0EBC               	movlw	188
 11705  01131E  5CDE               	subwf	postinc2,w,c
 11706  011320  0E02               	movlw	2
 11707  011322  58DE               	subwfb	postinc2,w,c
 11708  011324  A0D8               	btfss	status,0,c
 11709  011326  D008               	goto	i2l4465
 11710  011328  EE20 F002          	lfsr	2,2
 11711  01132C  5001               	movf	button_timer_interrupt@bt,w,c
 11712  01132E  26D9               	addwf	fsr2l,f,c
 11713  011330  5002               	movf	button_timer_interrupt@bt+1,w,c
 11714  011332  22DA               	addwfc	fsr2h,f,c
 11715  011334  8CDF               	bsf	indf2,6,c
 11716  011336  D06F               	goto	i2l4489
 11717  011338                     i2l4465:
 11718                           
 11719                           ;My_button.c: 17: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 11720  011338  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11721  01133C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11722  011340  0EF4               	movlw	244
 11723  011342  5CDE               	subwf	postinc2,w,c
 11724  011344  0E01               	movlw	1
 11725  011346  58DE               	subwfb	postinc2,w,c
 11726  011348  A0D8               	btfss	status,0,c
 11727  01134A  D008               	goto	i2l4469
 11728  01134C  EE20 F002          	lfsr	2,2
 11729  011350  5001               	movf	button_timer_interrupt@bt,w,c
 11730  011352  26D9               	addwf	fsr2l,f,c
 11731  011354  5002               	movf	button_timer_interrupt@bt+1,w,c
 11732  011356  22DA               	addwfc	fsr2h,f,c
 11733  011358  8ADF               	bsf	indf2,5,c
 11734  01135A  D05D               	goto	i2l4489
 11735  01135C                     i2l4469:
 11736                           
 11737                           ;My_button.c: 18: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 11738  01135C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11739  011360  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11740  011364  0E2C               	movlw	44
 11741  011366  5CDE               	subwf	postinc2,w,c
 11742  011368  0E01               	movlw	1
 11743  01136A  58DE               	subwfb	postinc2,w,c
 11744  01136C  A0D8               	btfss	status,0,c
 11745  01136E  D008               	goto	i2l4473
 11746  011370  EE20 F002          	lfsr	2,2
 11747  011374  5001               	movf	button_timer_interrupt@bt,w,c
 11748  011376  26D9               	addwf	fsr2l,f,c
 11749  011378  5002               	movf	button_timer_interrupt@bt+1,w,c
 11750  01137A  22DA               	addwfc	fsr2h,f,c
 11751  01137C  88DF               	bsf	indf2,4,c
 11752  01137E  D04B               	goto	i2l4489
 11753  011380                     i2l4473:
 11754                           
 11755                           ;My_button.c: 19: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 11756  011380  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11757  011384  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11758  011388  0E01               	movlw	1
 11759  01138A  50DB               	movf	plusw2,w,c
 11760  01138C  E104               	bnz	i2u409_40
 11761  01138E  0E96               	movlw	150
 11762  011390  5CDE               	subwf	postinc2,w,c
 11763  011392  A0D8               	btfss	status,0,c
 11764  011394  D008               	goto	i2l4477
 11765  011396                     i2u409_40:
 11766  011396  EE20 F002          	lfsr	2,2
 11767  01139A  5001               	movf	button_timer_interrupt@bt,w,c
 11768  01139C  26D9               	addwf	fsr2l,f,c
 11769  01139E  5002               	movf	button_timer_interrupt@bt+1,w,c
 11770  0113A0  22DA               	addwfc	fsr2h,f,c
 11771  0113A2  86DF               	bsf	indf2,3,c
 11772  0113A4  D038               	goto	i2l4489
 11773  0113A6                     i2l4477:
 11774                           
 11775                           ;My_button.c: 20: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 11776  0113A6  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11777  0113AA  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11778  0113AE  0E01               	movlw	1
 11779  0113B0  50DB               	movf	plusw2,w,c
 11780  0113B2  E104               	bnz	i2u410_40
 11781  0113B4  0E3C               	movlw	60
 11782  0113B6  5CDE               	subwf	postinc2,w,c
 11783  0113B8  A0D8               	btfss	status,0,c
 11784  0113BA  D008               	goto	i2l4481
 11785  0113BC                     i2u410_40:
 11786  0113BC  EE20 F002          	lfsr	2,2
 11787  0113C0  5001               	movf	button_timer_interrupt@bt,w,c
 11788  0113C2  26D9               	addwf	fsr2l,f,c
 11789  0113C4  5002               	movf	button_timer_interrupt@bt+1,w,c
 11790  0113C6  22DA               	addwfc	fsr2h,f,c
 11791  0113C8  84DF               	bsf	indf2,2,c
 11792  0113CA  D025               	goto	i2l4489
 11793  0113CC                     i2l4481:
 11794                           
 11795                           ;My_button.c: 21: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 11796  0113CC  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11797  0113D0  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11798  0113D4  0E01               	movlw	1
 11799  0113D6  50DB               	movf	plusw2,w,c
 11800  0113D8  E104               	bnz	i2u411_40
 11801  0113DA  0E10               	movlw	16
 11802  0113DC  5CDE               	subwf	postinc2,w,c
 11803  0113DE  A0D8               	btfss	status,0,c
 11804  0113E0  D008               	goto	i2l4485
 11805  0113E2                     i2u411_40:
 11806  0113E2  EE20 F002          	lfsr	2,2
 11807  0113E6  5001               	movf	button_timer_interrupt@bt,w,c
 11808  0113E8  26D9               	addwf	fsr2l,f,c
 11809  0113EA  5002               	movf	button_timer_interrupt@bt+1,w,c
 11810  0113EC  22DA               	addwfc	fsr2h,f,c
 11811  0113EE  82DF               	bsf	indf2,1,c
 11812  0113F0  D012               	goto	i2l4489
 11813  0113F2                     i2l4485:
 11814                           
 11815                           ;My_button.c: 22: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 11816  0113F2  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11817  0113F6  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11818  0113FA  0E01               	movlw	1
 11819  0113FC  50DB               	movf	plusw2,w,c
 11820  0113FE  E104               	bnz	i2u412_40
 11821  011400  0E02               	movlw	2
 11822  011402  5CDE               	subwf	postinc2,w,c
 11823  011404  A0D8               	btfss	status,0,c
 11824  011406  D007               	goto	i2l4489
 11825  011408                     i2u412_40:
 11826  011408  EE20 F002          	lfsr	2,2
 11827  01140C  5001               	movf	button_timer_interrupt@bt,w,c
 11828  01140E  26D9               	addwf	fsr2l,f,c
 11829  011410  5002               	movf	button_timer_interrupt@bt+1,w,c
 11830  011412  22DA               	addwfc	fsr2h,f,c
 11831  011414  80DF               	bsf	indf2,0,c
 11832  011416                     i2l4489:
 11833                           
 11834                           ;My_button.c: 23: bt->cnt_sw = 0;
 11835  011416  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11836  01141A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11837  01141E  0E00               	movlw	0
 11838  011420  6EDE               	movwf	postinc2,c
 11839  011422  0E00               	movlw	0
 11840  011424  6EDD               	movwf	postdec2,c
 11841                           
 11842                           ;My_button.c: 24: bt->flags &= 0x00FF;
 11843  011426  EE20 F002          	lfsr	2,2
 11844  01142A  5001               	movf	button_timer_interrupt@bt,w,c
 11845  01142C  26D9               	addwf	fsr2l,f,c
 11846  01142E  5002               	movf	button_timer_interrupt@bt+1,w,c
 11847  011430  22DA               	addwfc	fsr2h,f,c
 11848  011432  0EFF               	movlw	255
 11849  011434  16DE               	andwf	postinc2,f,c
 11850  011436  0E00               	movlw	0
 11851  011438  16DD               	andwf	postdec2,f,c
 11852  01143A  0012               	return	
 11853  01143C                     __end_of_button_timer_interrupt:
 11854                           	opt stack 0
 11855                           pclatu	equ	0xFFB
 11856                           pclath	equ	0xFFA
 11857                           tblptru	equ	0xFF8
 11858                           tblptrh	equ	0xFF7
 11859                           tblptrl	equ	0xFF6
 11860                           tablat	equ	0xFF5
 11861                           prodh	equ	0xFF4
 11862                           prodl	equ	0xFF3
 11863                           intcon	equ	0xFF2
 11864                           intcon2	equ	0xFF1
 11865                           indf0	equ	0xFEF
 11866                           postinc0	equ	0xFEE
 11867                           fsr0h	equ	0xFEA
 11868                           fsr0l	equ	0xFE9
 11869                           wreg	equ	0xFE8
 11870                           postinc1	equ	0xFE6
 11871                           postdec1	equ	0xFE5
 11872                           fsr1h	equ	0xFE2
 11873                           fsr1l	equ	0xFE1
 11874                           indf2	equ	0xFDF
 11875                           postinc2	equ	0xFDE
 11876                           postdec2	equ	0xFDD
 11877                           plusw2	equ	0xFDB
 11878                           fsr2h	equ	0xFDA
 11879                           fsr2l	equ	0xFD9
 11880                           status	equ	0xFD8
 11881                           
 11882 ;; *************** function _UART_ISR *****************
 11883 ;; Defined at:
 11884 ;;		line 190 in file "../My_library/My_PIC.c"
 11885 ;; Parameters:    Size  Location     Type
 11886 ;;		None
 11887 ;; Auto vars:     Size  Location     Type
 11888 ;;  ascii           1   15[COMRAM] unsigned char 
 11889 ;; Return value:  Size  Location     Type
 11890 ;;		None               void
 11891 ;; Registers used:
 11892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11893 ;; Tracked objects:
 11894 ;;		On entry : 0/0
 11895 ;;		On exit  : 0/0
 11896 ;;		Unchanged: 0/0
 11897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11902 ;;Total ram usage:        1 bytes
 11903 ;; Hardware stack levels used:    1
 11904 ;; Hardware stack levels required when called:    2
 11905 ;; This function calls:
 11906 ;;		i2_ringbuf_num
 11907 ;;		i2_ringbuf_pop
 11908 ;;		i2_ringbuf_put
 11909 ;; This function is called by:
 11910 ;;		_ISR
 11911 ;; This function uses a non-reentrant model
 11912 ;;
 11913                           
 11914                           	psect	text52
 11915  012B80                     __ptext52:
 11916                           	opt stack 0
 11917  012B80                     _UART_ISR:
 11918                           	opt stack 18
 11919                           
 11920                           ;My_PIC.c: 191: if (PIE1bits.TXIE && PIR1bits.TXIF) {
 11921                           
 11922                           ;incstack = 0
 11923  012B80  B89D               	btfsc	3997,4,c	;volatile
 11924  012B82  A89E               	btfss	3998,4,c	;volatile
 11925  012B84  D013               	goto	i2l188
 11926                           
 11927                           ;My_PIC.c: 192: if (ringbuf_num(&tx_buf)) {
 11928  012B86  0ED9               	movlw	low _tx_buf
 11929  012B88  6E01               	movwf	i2ringbuf_num@rb,c
 11930  012B8A  0E00               	movlw	high _tx_buf
 11931  012B8C  6E02               	movwf	i2ringbuf_num@rb+1,c
 11932  012B8E  EC8B  F090         	call	i2_ringbuf_num	;wreg free
 11933  012B92  5001               	movf	?i2_ringbuf_num,w,c
 11934  012B94  1002               	iorwf	?i2_ringbuf_num+1,w,c
 11935  012B96  B4D8               	btfsc	status,2,c
 11936  012B98  D008               	goto	i2l189
 11937                           
 11938                           ;My_PIC.c: 193: TXREG1 = ringbuf_pop(&tx_buf);
 11939  012B9A  0ED9               	movlw	low _tx_buf
 11940  012B9C  6E09               	movwf	i2ringbuf_pop@rb,c
 11941  012B9E  0E00               	movlw	high _tx_buf
 11942  012BA0  6E0A               	movwf	i2ringbuf_pop@rb+1,c
 11943  012BA2  ECF7  F091         	call	i2_ringbuf_pop	;wreg free
 11944  012BA6  6EAE               	movwf	4014,c	;volatile
 11945                           
 11946                           ;My_PIC.c: 194: } else {
 11947  012BA8  D001               	goto	i2l188
 11948  012BAA                     i2l189:
 11949                           
 11950                           ;My_PIC.c: 195: PIE1bits.TXIE = 0;
 11951  012BAA  989D               	bcf	3997,4,c	;volatile
 11952  012BAC                     i2l188:
 11953                           
 11954                           ;My_PIC.c: 196: }
 11955                           ;My_PIC.c: 197: }
 11956                           ;My_PIC.c: 198: if (PIE1bits.RCIE && PIR1bits.RCIF) {
 11957  012BAC  AA9D               	btfss	3997,5,c	;volatile
 11958  012BAE  0012               	return	
 11959  012BB0  AA9E               	btfss	3998,5,c	;volatile
 11960  012BB2  0012               	return	
 11961                           
 11962                           ;My_PIC.c: 199: char ascii = RCREG1;
 11963  012BB4  CFAF F010          	movff	4015,UART_ISR@ascii	;volatile
 11964                           
 11965                           ;My_PIC.c: 200: ringbuf_put(&rx_buf, ascii);
 11966  012BB8  0EF3               	movlw	low _rx_buf
 11967  012BBA  6E09               	movwf	i2ringbuf_put@rb,c
 11968  012BBC  0E01               	movlw	high _rx_buf
 11969  012BBE  6E0A               	movwf	i2ringbuf_put@rb+1,c
 11970  012BC0  C010  F00B         	movff	UART_ISR@ascii,i2ringbuf_put@asciicode
 11971  012BC4  EC45  F091         	call	i2_ringbuf_put	;wreg free
 11972  012BC8  0012               	return	
 11973  012BCA                     __end_of_UART_ISR:
 11974                           	opt stack 0
 11975                           pclatu	equ	0xFFB
 11976                           pclath	equ	0xFFA
 11977                           tblptru	equ	0xFF8
 11978                           tblptrh	equ	0xFF7
 11979                           tblptrl	equ	0xFF6
 11980                           tablat	equ	0xFF5
 11981                           prodh	equ	0xFF4
 11982                           prodl	equ	0xFF3
 11983                           intcon	equ	0xFF2
 11984                           intcon2	equ	0xFF1
 11985                           indf0	equ	0xFEF
 11986                           postinc0	equ	0xFEE
 11987                           fsr0h	equ	0xFEA
 11988                           fsr0l	equ	0xFE9
 11989                           wreg	equ	0xFE8
 11990                           postinc1	equ	0xFE6
 11991                           postdec1	equ	0xFE5
 11992                           fsr1h	equ	0xFE2
 11993                           fsr1l	equ	0xFE1
 11994                           indf2	equ	0xFDF
 11995                           postinc2	equ	0xFDE
 11996                           postdec2	equ	0xFDD
 11997                           plusw2	equ	0xFDB
 11998                           fsr2h	equ	0xFDA
 11999                           fsr2l	equ	0xFD9
 12000                           status	equ	0xFD8
 12001                           
 12002 ;; *************** function i2_ringbuf_put *****************
 12003 ;; Defined at:
 12004 ;;		line 20 in file "../My_library/My_ringbuf.c"
 12005 ;; Parameters:    Size  Location     Type
 12006 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 12007 ;;		 -> terminal_loop@command(8), rx_buf(8), tx_buf(8), 
 12008 ;;  asciicode       1   10[COMRAM] unsigned char 
 12009 ;; Auto vars:     Size  Location     Type
 12010 ;;		None
 12011 ;; Return value:  Size  Location     Type
 12012 ;;		None               void
 12013 ;; Registers used:
 12014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12015 ;; Tracked objects:
 12016 ;;		On entry : 0/0
 12017 ;;		On exit  : 0/0
 12018 ;;		Unchanged: 0/0
 12019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12020 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12022 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12023 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12024 ;;Total ram usage:        7 bytes
 12025 ;; Hardware stack levels used:    1
 12026 ;; Hardware stack levels required when called:    1
 12027 ;; This function calls:
 12028 ;;		i2_ringbuf_num
 12029 ;; This function is called by:
 12030 ;;		_UART_ISR
 12031 ;; This function uses a non-reentrant model
 12032 ;;
 12033                           
 12034                           	psect	text53
 12035  01228A                     __ptext53:
 12036                           	opt stack 0
 12037  01228A                     i2_ringbuf_put:
 12038                           	opt stack 18
 12039                           
 12040                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 12041                           
 12042                           ;incstack = 0
 12043  01228A  C009  F001         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
 12044  01228E  C00A  F002         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
 12045  012292  EC8B  F090         	call	i2_ringbuf_num	;wreg free
 12046  012296  EE20 F002          	lfsr	2,2
 12047  01229A  5009               	movf	i2ringbuf_put@rb,w,c
 12048  01229C  26D9               	addwf	fsr2l,f,c
 12049  01229E  500A               	movf	i2ringbuf_put@rb+1,w,c
 12050  0122A0  22DA               	addwfc	fsr2h,f,c
 12051  0122A2  50DE               	movf	postinc2,w,c
 12052  0122A4  5C01               	subwf	?i2_ringbuf_num,w,c
 12053  0122A6  50DE               	movf	postinc2,w,c
 12054  0122A8  5802               	subwfb	?i2_ringbuf_num+1,w,c
 12055  0122AA  B0D8               	btfsc	status,0,c
 12056  0122AC  0012               	return	
 12057                           
 12058                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 12059  0122AE  EE20 F004          	lfsr	2,4
 12060  0122B2  5009               	movf	i2ringbuf_put@rb,w,c
 12061  0122B4  26D9               	addwf	fsr2l,f,c
 12062  0122B6  500A               	movf	i2ringbuf_put@rb+1,w,c
 12063  0122B8  22DA               	addwfc	fsr2h,f,c
 12064  0122BA  CFDE F00C          	movff	postinc2,??i2_ringbuf_put
 12065  0122BE  CFDD F00D          	movff	postdec2,??i2_ringbuf_put+1
 12066  0122C2  C009  FFD9         	movff	i2ringbuf_put@rb,fsr2l
 12067  0122C6  C00A  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
 12068  0122CA  CFDE F00E          	movff	postinc2,??i2_ringbuf_put+2
 12069  0122CE  CFDD F00F          	movff	postdec2,??i2_ringbuf_put+3
 12070  0122D2  500C               	movf	??i2_ringbuf_put,w,c
 12071  0122D4  240E               	addwf	??i2_ringbuf_put+2,w,c
 12072  0122D6  6ED9               	movwf	fsr2l,c
 12073  0122D8  500D               	movf	??i2_ringbuf_put+1,w,c
 12074  0122DA  200F               	addwfc	??i2_ringbuf_put+3,w,c
 12075  0122DC  6EDA               	movwf	fsr2h,c
 12076  0122DE  C00B  FFDF         	movff	i2ringbuf_put@asciicode,indf2
 12077                           
 12078                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 12079  0122E2  EE20 F002          	lfsr	2,2
 12080  0122E6  5009               	movf	i2ringbuf_put@rb,w,c
 12081  0122E8  26D9               	addwf	fsr2l,f,c
 12082  0122EA  500A               	movf	i2ringbuf_put@rb+1,w,c
 12083  0122EC  22DA               	addwfc	fsr2h,f,c
 12084  0122EE  EE10 F004          	lfsr	1,4
 12085  0122F2  5009               	movf	i2ringbuf_put@rb,w,c
 12086  0122F4  26E1               	addwf	fsr1l,f,c
 12087  0122F6  500A               	movf	i2ringbuf_put@rb+1,w,c
 12088  0122F8  22E2               	addwfc	fsr1h,f,c
 12089  0122FA  CFE6 F00E          	movff	postinc1,??i2_ringbuf_put+2
 12090  0122FE  CFE5 F00F          	movff	postdec1,??i2_ringbuf_put+3
 12091  012302  0E01               	movlw	1
 12092  012304  260E               	addwf	??i2_ringbuf_put+2,f,c
 12093  012306  0E00               	movlw	0
 12094  012308  220F               	addwfc	??i2_ringbuf_put+3,f,c
 12095  01230A  50DE               	movf	postinc2,w,c
 12096  01230C  5C0E               	subwf	??i2_ringbuf_put+2,w,c
 12097  01230E  50DE               	movf	postinc2,w,c
 12098  012310  580F               	subwfb	??i2_ringbuf_put+3,w,c
 12099  012312  B0D8               	btfsc	status,0,c
 12100  012314  D00A               	goto	i2l4413
 12101  012316  EE20 F004          	lfsr	2,4
 12102  01231A  5009               	movf	i2ringbuf_put@rb,w,c
 12103  01231C  26D9               	addwf	fsr2l,f,c
 12104  01231E  500A               	movf	i2ringbuf_put@rb+1,w,c
 12105  012320  22DA               	addwfc	fsr2h,f,c
 12106  012322  2ADE               	incf	postinc2,f,c
 12107  012324  0E00               	movlw	0
 12108  012326  22DD               	addwfc	postdec2,f,c
 12109  012328  0012               	return	
 12110  01232A                     i2l4413:
 12111                           
 12112                           ;My_ringbuf.c: 24: else rb->head = 0;
 12113  01232A  EE20 F004          	lfsr	2,4
 12114  01232E  5009               	movf	i2ringbuf_put@rb,w,c
 12115  012330  26D9               	addwf	fsr2l,f,c
 12116  012332  500A               	movf	i2ringbuf_put@rb+1,w,c
 12117  012334  22DA               	addwfc	fsr2h,f,c
 12118  012336  0E00               	movlw	0
 12119  012338  6EDE               	movwf	postinc2,c
 12120  01233A  0E00               	movlw	0
 12121  01233C  6EDD               	movwf	postdec2,c
 12122  01233E  0012               	return	
 12123  012340                     __end_ofi2_ringbuf_put:
 12124                           	opt stack 0
 12125                           pclatu	equ	0xFFB
 12126                           pclath	equ	0xFFA
 12127                           tblptru	equ	0xFF8
 12128                           tblptrh	equ	0xFF7
 12129                           tblptrl	equ	0xFF6
 12130                           tablat	equ	0xFF5
 12131                           prodh	equ	0xFF4
 12132                           prodl	equ	0xFF3
 12133                           intcon	equ	0xFF2
 12134                           intcon2	equ	0xFF1
 12135                           indf0	equ	0xFEF
 12136                           postinc0	equ	0xFEE
 12137                           fsr0h	equ	0xFEA
 12138                           fsr0l	equ	0xFE9
 12139                           wreg	equ	0xFE8
 12140                           postinc1	equ	0xFE6
 12141                           postdec1	equ	0xFE5
 12142                           fsr1h	equ	0xFE2
 12143                           fsr1l	equ	0xFE1
 12144                           indf2	equ	0xFDF
 12145                           postinc2	equ	0xFDE
 12146                           postdec2	equ	0xFDD
 12147                           plusw2	equ	0xFDB
 12148                           fsr2h	equ	0xFDA
 12149                           fsr2l	equ	0xFD9
 12150                           status	equ	0xFD8
 12151                           
 12152 ;; *************** function i2_ringbuf_pop *****************
 12153 ;; Defined at:
 12154 ;;		line 45 in file "../My_library/My_ringbuf.c"
 12155 ;; Parameters:    Size  Location     Type
 12156 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 12157 ;;		 -> terminal_loop@command(8), rx_buf(8), tx_buf(8), 
 12158 ;; Auto vars:     Size  Location     Type
 12159 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
 12160 ;; Return value:  Size  Location     Type
 12161 ;;                  1    wreg      unsigned char 
 12162 ;; Registers used:
 12163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12164 ;; Tracked objects:
 12165 ;;		On entry : 0/0
 12166 ;;		On exit  : 0/0
 12167 ;;		Unchanged: 0/0
 12168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12170 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12171 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12172 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12173 ;;Total ram usage:        7 bytes
 12174 ;; Hardware stack levels used:    1
 12175 ;; Hardware stack levels required when called:    1
 12176 ;; This function calls:
 12177 ;;		i2_ringbuf_num
 12178 ;; This function is called by:
 12179 ;;		_UART_ISR
 12180 ;; This function uses a non-reentrant model
 12181 ;;
 12182                           
 12183                           	psect	text54
 12184  0123EE                     __ptext54:
 12185                           	opt stack 0
 12186  0123EE                     i2_ringbuf_pop:
 12187                           	opt stack 18
 12188                           
 12189                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 12190                           
 12191                           ;incstack = 0
 12192  0123EE  C009  F001         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 12193  0123F2  C00A  F002         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 12194  0123F6  EC8B  F090         	call	i2_ringbuf_num	;wreg free
 12195  0123FA  5001               	movf	?i2_ringbuf_num,w,c
 12196  0123FC  1002               	iorwf	?i2_ringbuf_num+1,w,c
 12197  0123FE  B4D8               	btfsc	status,2,c
 12198  012400  D04A               	goto	i2l4431
 12199                           
 12200                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 12201  012402  EE20 F006          	lfsr	2,6
 12202  012406  5009               	movf	i2ringbuf_pop@rb,w,c
 12203  012408  26D9               	addwf	fsr2l,f,c
 12204  01240A  500A               	movf	i2ringbuf_pop@rb+1,w,c
 12205  01240C  22DA               	addwfc	fsr2h,f,c
 12206  01240E  CFDE F00B          	movff	postinc2,??i2_ringbuf_pop
 12207  012412  CFDD F00C          	movff	postdec2,??i2_ringbuf_pop+1
 12208  012416  C009  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 12209  01241A  C00A  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 12210  01241E  CFDE F00D          	movff	postinc2,??i2_ringbuf_pop+2
 12211  012422  CFDD F00E          	movff	postdec2,??i2_ringbuf_pop+3
 12212  012426  500B               	movf	??i2_ringbuf_pop,w,c
 12213  012428  240D               	addwf	??i2_ringbuf_pop+2,w,c
 12214  01242A  6ED9               	movwf	fsr2l,c
 12215  01242C  500C               	movf	??i2_ringbuf_pop+1,w,c
 12216  01242E  200E               	addwfc	??i2_ringbuf_pop+3,w,c
 12217  012430  6EDA               	movwf	fsr2h,c
 12218  012432  50DF               	movf	indf2,w,c
 12219  012434  6E0F               	movwf	i2ringbuf_pop@ret,c
 12220                           
 12221                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 12222  012436  EE20 F002          	lfsr	2,2
 12223  01243A  5009               	movf	i2ringbuf_pop@rb,w,c
 12224  01243C  26D9               	addwf	fsr2l,f,c
 12225  01243E  500A               	movf	i2ringbuf_pop@rb+1,w,c
 12226  012440  22DA               	addwfc	fsr2h,f,c
 12227  012442  EE10 F006          	lfsr	1,6
 12228  012446  5009               	movf	i2ringbuf_pop@rb,w,c
 12229  012448  26E1               	addwf	fsr1l,f,c
 12230  01244A  500A               	movf	i2ringbuf_pop@rb+1,w,c
 12231  01244C  22E2               	addwfc	fsr1h,f,c
 12232  01244E  CFE6 F00D          	movff	postinc1,??i2_ringbuf_pop+2
 12233  012452  CFE5 F00E          	movff	postdec1,??i2_ringbuf_pop+3
 12234  012456  0E01               	movlw	1
 12235  012458  260D               	addwf	??i2_ringbuf_pop+2,f,c
 12236  01245A  0E00               	movlw	0
 12237  01245C  220E               	addwfc	??i2_ringbuf_pop+3,f,c
 12238  01245E  50DE               	movf	postinc2,w,c
 12239  012460  5C0D               	subwf	??i2_ringbuf_pop+2,w,c
 12240  012462  50DE               	movf	postinc2,w,c
 12241  012464  580E               	subwfb	??i2_ringbuf_pop+3,w,c
 12242  012466  B0D8               	btfsc	status,0,c
 12243  012468  D00A               	goto	i2l4423
 12244                           
 12245                           ;My_ringbuf.c: 49: rb->tail++;
 12246  01246A  EE20 F006          	lfsr	2,6
 12247  01246E  5009               	movf	i2ringbuf_pop@rb,w,c
 12248  012470  26D9               	addwf	fsr2l,f,c
 12249  012472  500A               	movf	i2ringbuf_pop@rb+1,w,c
 12250  012474  22DA               	addwfc	fsr2h,f,c
 12251  012476  2ADE               	incf	postinc2,f,c
 12252  012478  0E00               	movlw	0
 12253  01247A  22DD               	addwfc	postdec2,f,c
 12254                           
 12255                           ;My_ringbuf.c: 50: } else {
 12256  01247C  D00A               	goto	i2l4425
 12257  01247E                     i2l4423:
 12258                           
 12259                           ;My_ringbuf.c: 51: rb->tail = 0;
 12260  01247E  EE20 F006          	lfsr	2,6
 12261  012482  5009               	movf	i2ringbuf_pop@rb,w,c
 12262  012484  26D9               	addwf	fsr2l,f,c
 12263  012486  500A               	movf	i2ringbuf_pop@rb+1,w,c
 12264  012488  22DA               	addwfc	fsr2h,f,c
 12265  01248A  0E00               	movlw	0
 12266  01248C  6EDE               	movwf	postinc2,c
 12267  01248E  0E00               	movlw	0
 12268  012490  6EDD               	movwf	postdec2,c
 12269  012492                     i2l4425:
 12270                           
 12271                           ;My_ringbuf.c: 52: }
 12272                           ;My_ringbuf.c: 53: return ret;
 12273  012492  500F               	movf	i2ringbuf_pop@ret,w,c
 12274                           
 12275                           ;My_ringbuf.c: 54: } else {
 12276  012494  0012               	return	
 12277  012496                     i2l4431:
 12278                           
 12279                           ;My_ringbuf.c: 55: return 0;
 12280  012496  0E00               	movlw	0
 12281  012498  0012               	return	
 12282  01249A                     __end_ofi2_ringbuf_pop:
 12283                           	opt stack 0
 12284                           pclatu	equ	0xFFB
 12285                           pclath	equ	0xFFA
 12286                           tblptru	equ	0xFF8
 12287                           tblptrh	equ	0xFF7
 12288                           tblptrl	equ	0xFF6
 12289                           tablat	equ	0xFF5
 12290                           prodh	equ	0xFF4
 12291                           prodl	equ	0xFF3
 12292                           intcon	equ	0xFF2
 12293                           intcon2	equ	0xFF1
 12294                           indf0	equ	0xFEF
 12295                           postinc0	equ	0xFEE
 12296                           fsr0h	equ	0xFEA
 12297                           fsr0l	equ	0xFE9
 12298                           wreg	equ	0xFE8
 12299                           postinc1	equ	0xFE6
 12300                           postdec1	equ	0xFE5
 12301                           fsr1h	equ	0xFE2
 12302                           fsr1l	equ	0xFE1
 12303                           indf2	equ	0xFDF
 12304                           postinc2	equ	0xFDE
 12305                           postdec2	equ	0xFDD
 12306                           plusw2	equ	0xFDB
 12307                           fsr2h	equ	0xFDA
 12308                           fsr2l	equ	0xFD9
 12309                           status	equ	0xFD8
 12310                           
 12311 ;; *************** function i2_ringbuf_num *****************
 12312 ;; Defined at:
 12313 ;;		line 12 in file "../My_library/My_ringbuf.c"
 12314 ;; Parameters:    Size  Location     Type
 12315 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 12316 ;;		 -> terminal_loop@command(8), rx_buf(8), tx_buf(8), 
 12317 ;; Auto vars:     Size  Location     Type
 12318 ;;		None
 12319 ;; Return value:  Size  Location     Type
 12320 ;;                  2    0[COMRAM] unsigned int 
 12321 ;; Registers used:
 12322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 12323 ;; Tracked objects:
 12324 ;;		On entry : 0/0
 12325 ;;		On exit  : 0/0
 12326 ;;		Unchanged: 0/0
 12327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12328 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12330 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12331 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12332 ;;Total ram usage:        8 bytes
 12333 ;; Hardware stack levels used:    1
 12334 ;; This function calls:
 12335 ;;		Nothing
 12336 ;; This function is called by:
 12337 ;;		_UART_ISR
 12338 ;;		i2_ringbuf_put
 12339 ;;		i2_ringbuf_pop
 12340 ;; This function uses a non-reentrant model
 12341 ;;
 12342                           
 12343                           	psect	text55
 12344  012116                     __ptext55:
 12345                           	opt stack 0
 12346  012116                     i2_ringbuf_num:
 12347                           	opt stack 18
 12348                           
 12349                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 12350                           
 12351                           ;incstack = 0
 12352  012116  EE20 F006          	lfsr	2,6
 12353  01211A  5001               	movf	i2ringbuf_num@rb,w,c
 12354  01211C  26D9               	addwf	fsr2l,f,c
 12355  01211E  5002               	movf	i2ringbuf_num@rb+1,w,c
 12356  012120  22DA               	addwfc	fsr2h,f,c
 12357  012122  EE10 F004          	lfsr	1,4
 12358  012126  5001               	movf	i2ringbuf_num@rb,w,c
 12359  012128  26E1               	addwf	fsr1l,f,c
 12360  01212A  5002               	movf	i2ringbuf_num@rb+1,w,c
 12361  01212C  22E2               	addwfc	fsr1h,f,c
 12362  01212E  50DE               	movf	postinc2,w,c
 12363  012130  5CE6               	subwf	postinc1,w,c
 12364  012132  50DE               	movf	postinc2,w,c
 12365  012134  58E6               	subwfb	postinc1,w,c
 12366  012136  A0D8               	btfss	status,0,c
 12367  012138  D01F               	goto	i2l4091
 12368                           
 12369                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 12370  01213A  EE20 F004          	lfsr	2,4
 12371  01213E  5001               	movf	i2ringbuf_num@rb,w,c
 12372  012140  26D9               	addwf	fsr2l,f,c
 12373  012142  5002               	movf	i2ringbuf_num@rb+1,w,c
 12374  012144  22DA               	addwfc	fsr2h,f,c
 12375  012146  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 12376  01214A  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 12377  01214E  EE20 F006          	lfsr	2,6
 12378  012152  5001               	movf	i2ringbuf_num@rb,w,c
 12379  012154  26D9               	addwf	fsr2l,f,c
 12380  012156  5002               	movf	i2ringbuf_num@rb+1,w,c
 12381  012158  22DA               	addwfc	fsr2h,f,c
 12382  01215A  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 12383  01215E  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 12384  012162  1E05               	comf	??i2_ringbuf_num+2,f,c
 12385  012164  1E06               	comf	??i2_ringbuf_num+3,f,c
 12386  012166  4A05               	infsnz	??i2_ringbuf_num+2,f,c
 12387  012168  2A06               	incf	??i2_ringbuf_num+3,f,c
 12388  01216A  5003               	movf	??i2_ringbuf_num,w,c
 12389  01216C  2405               	addwf	??i2_ringbuf_num+2,w,c
 12390  01216E  6E01               	movwf	?i2_ringbuf_num,c
 12391  012170  5004               	movf	??i2_ringbuf_num+1,w,c
 12392  012172  2006               	addwfc	??i2_ringbuf_num+3,w,c
 12393  012174  6E02               	movwf	?i2_ringbuf_num+1,c
 12394                           
 12395                           ;My_ringbuf.c: 15: } else {
 12396  012176  0012               	return	
 12397  012178                     i2l4091:
 12398                           
 12399                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 12400  012178  EE20 F004          	lfsr	2,4
 12401  01217C  5001               	movf	i2ringbuf_num@rb,w,c
 12402  01217E  26D9               	addwf	fsr2l,f,c
 12403  012180  5002               	movf	i2ringbuf_num@rb+1,w,c
 12404  012182  22DA               	addwfc	fsr2h,f,c
 12405  012184  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 12406  012188  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 12407  01218C  EE20 F002          	lfsr	2,2
 12408  012190  5001               	movf	i2ringbuf_num@rb,w,c
 12409  012192  26D9               	addwf	fsr2l,f,c
 12410  012194  5002               	movf	i2ringbuf_num@rb+1,w,c
 12411  012196  22DA               	addwfc	fsr2h,f,c
 12412  012198  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 12413  01219C  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 12414  0121A0  EE20 F006          	lfsr	2,6
 12415  0121A4  5001               	movf	i2ringbuf_num@rb,w,c
 12416  0121A6  26D9               	addwf	fsr2l,f,c
 12417  0121A8  5002               	movf	i2ringbuf_num@rb+1,w,c
 12418  0121AA  22DA               	addwfc	fsr2h,f,c
 12419  0121AC  CFDE F007          	movff	postinc2,??i2_ringbuf_num+4
 12420  0121B0  CFDD F008          	movff	postdec2,??i2_ringbuf_num+5
 12421  0121B4  1E07               	comf	??i2_ringbuf_num+4,f,c
 12422  0121B6  1E08               	comf	??i2_ringbuf_num+5,f,c
 12423  0121B8  4A07               	infsnz	??i2_ringbuf_num+4,f,c
 12424  0121BA  2A08               	incf	??i2_ringbuf_num+5,f,c
 12425  0121BC  5005               	movf	??i2_ringbuf_num+2,w,c
 12426  0121BE  2607               	addwf	??i2_ringbuf_num+4,f,c
 12427  0121C0  5006               	movf	??i2_ringbuf_num+3,w,c
 12428  0121C2  2208               	addwfc	??i2_ringbuf_num+5,f,c
 12429  0121C4  5003               	movf	??i2_ringbuf_num,w,c
 12430  0121C6  2407               	addwf	??i2_ringbuf_num+4,w,c
 12431  0121C8  6E01               	movwf	?i2_ringbuf_num,c
 12432  0121CA  5004               	movf	??i2_ringbuf_num+1,w,c
 12433  0121CC  2008               	addwfc	??i2_ringbuf_num+5,w,c
 12434  0121CE  6E02               	movwf	?i2_ringbuf_num+1,c
 12435  0121D0  0012               	return	
 12436  0121D2                     __end_ofi2_ringbuf_num:
 12437                           	opt stack 0
 12438                           pclatu	equ	0xFFB
 12439                           pclath	equ	0xFFA
 12440                           tblptru	equ	0xFF8
 12441                           tblptrh	equ	0xFF7
 12442                           tblptrl	equ	0xFF6
 12443                           tablat	equ	0xFF5
 12444                           prodh	equ	0xFF4
 12445                           prodl	equ	0xFF3
 12446                           intcon	equ	0xFF2
 12447                           intcon2	equ	0xFF1
 12448                           indf0	equ	0xFEF
 12449                           postinc0	equ	0xFEE
 12450                           fsr0h	equ	0xFEA
 12451                           fsr0l	equ	0xFE9
 12452                           wreg	equ	0xFE8
 12453                           postinc1	equ	0xFE6
 12454                           postdec1	equ	0xFE5
 12455                           fsr1h	equ	0xFE2
 12456                           fsr1l	equ	0xFE1
 12457                           indf2	equ	0xFDF
 12458                           postinc2	equ	0xFDE
 12459                           postdec2	equ	0xFDD
 12460                           plusw2	equ	0xFDB
 12461                           fsr2h	equ	0xFDA
 12462                           fsr2l	equ	0xFD9
 12463                           status	equ	0xFD8
 12464                           pclatu	equ	0xFFB
 12465                           pclath	equ	0xFFA
 12466                           tblptru	equ	0xFF8
 12467                           tblptrh	equ	0xFF7
 12468                           tblptrl	equ	0xFF6
 12469                           tablat	equ	0xFF5
 12470                           prodh	equ	0xFF4
 12471                           prodl	equ	0xFF3
 12472                           intcon	equ	0xFF2
 12473                           intcon2	equ	0xFF1
 12474                           indf0	equ	0xFEF
 12475                           postinc0	equ	0xFEE
 12476                           fsr0h	equ	0xFEA
 12477                           fsr0l	equ	0xFE9
 12478                           wreg	equ	0xFE8
 12479                           postinc1	equ	0xFE6
 12480                           postdec1	equ	0xFE5
 12481                           fsr1h	equ	0xFE2
 12482                           fsr1l	equ	0xFE1
 12483                           indf2	equ	0xFDF
 12484                           postinc2	equ	0xFDE
 12485                           postdec2	equ	0xFDD
 12486                           plusw2	equ	0xFDB
 12487                           fsr2h	equ	0xFDA
 12488                           fsr2l	equ	0xFD9
 12489                           status	equ	0xFD8
 12490                           
 12491                           	psect	rparam
 12492  0000                     pclatu	equ	0xFFB
 12493                           pclath	equ	0xFFA
 12494                           tblptru	equ	0xFF8
 12495                           tblptrh	equ	0xFF7
 12496                           tblptrl	equ	0xFF6
 12497                           tablat	equ	0xFF5
 12498                           prodh	equ	0xFF4
 12499                           prodl	equ	0xFF3
 12500                           intcon	equ	0xFF2
 12501                           intcon2	equ	0xFF1
 12502                           indf0	equ	0xFEF
 12503                           postinc0	equ	0xFEE
 12504                           fsr0h	equ	0xFEA
 12505                           fsr0l	equ	0xFE9
 12506                           wreg	equ	0xFE8
 12507                           postinc1	equ	0xFE6
 12508                           postdec1	equ	0xFE5
 12509                           fsr1h	equ	0xFE2
 12510                           fsr1l	equ	0xFE1
 12511                           indf2	equ	0xFDF
 12512                           postinc2	equ	0xFDE
 12513                           postdec2	equ	0xFDD
 12514                           plusw2	equ	0xFDB
 12515                           fsr2h	equ	0xFDA
 12516                           fsr2l	equ	0xFD9
 12517                           status	equ	0xFD8
 12518                           
 12519                           	psect	temp
 12520  000040                     btemp:
 12521                           	opt stack 0
 12522  000040                     	ds	1
 12523  0000                     int$flags	set	btemp
 12524                           pclatu	equ	0xFFB
 12525                           pclath	equ	0xFFA
 12526                           tblptru	equ	0xFF8
 12527                           tblptrh	equ	0xFF7
 12528                           tblptrl	equ	0xFF6
 12529                           tablat	equ	0xFF5
 12530                           prodh	equ	0xFF4
 12531                           prodl	equ	0xFF3
 12532                           intcon	equ	0xFF2
 12533                           intcon2	equ	0xFF1
 12534                           indf0	equ	0xFEF
 12535                           postinc0	equ	0xFEE
 12536                           fsr0h	equ	0xFEA
 12537                           fsr0l	equ	0xFE9
 12538                           wreg	equ	0xFE8
 12539                           postinc1	equ	0xFE6
 12540                           postdec1	equ	0xFE5
 12541                           fsr1h	equ	0xFE2
 12542                           fsr1l	equ	0xFE1
 12543                           indf2	equ	0xFDF
 12544                           postinc2	equ	0xFDE
 12545                           postdec2	equ	0xFDD
 12546                           plusw2	equ	0xFDB
 12547                           fsr2h	equ	0xFDA
 12548                           fsr2l	equ	0xFD9
 12549                           status	equ	0xFD8


Data Sizes:
    Strings     534
    Constant    38
    Data        3
    BSS         1416
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      63
    BANK0           160    115     144
    BANK1           256    139     251
    BANK2           256      0     250
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op3(BANK1[25]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_61(CODE[6]), STR_60(CODE[2]), STR_59(CODE[2]), STR_58(CODE[2]), 
		 -> STR_57(CODE[2]), STR_56(CODE[2]), STR_55(CODE[2]), STR_54(CODE[2]), 
		 -> STR_53(CODE[2]), STR_52(CODE[4]), STR_51(CODE[4]), STR_50(CODE[4]), 
		 -> STR_49(CODE[4]), STR_48(CODE[5]), STR_47(CODE[4]), STR_45(CODE[3]), 
		 -> STR_44(CODE[9]), STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[7]), 
		 -> STR_39(CODE[2]), STR_38(CODE[7]), STR_37(CODE[2]), STR_36(CODE[5]), 
		 -> STR_35(CODE[2]), STR_34(CODE[4]), STR_33(CODE[2]), STR_32(CODE[6]), 
		 -> STR_31(CODE[2]), STR_30(CODE[5]), STR_29(CODE[2]), STR_28(CODE[12]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[11]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op1(BANK1[25]), terminal_loop@op0(BANK1[25]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op2(BANK1[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_62(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_46(CODE[15]), STR_23(CODE[37]), STR_21(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> terminal_operation@str(BANK1[30]), print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), display_dec@s(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op2(BANK1[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op1(BANK1[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(BANK0[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op0(BANK1[25]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op2(BANK1[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op1(BANK1[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(BANK0[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op0(BANK1[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(BANK0[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(COMRAM[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(BANK0[8]), 

    terminal_loop@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(BANK0[8]), 

    terminal_loop@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK1[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), terminal_loop@buf(BANK1[100]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0

    sp__strcat	PTR unsigned char  size(2) Largest target is 0

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(COMRAM[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(COMRAM[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(COMRAM[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(COMRAM[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(COMRAM[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(COMRAM[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(COMRAM[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), terminal_loop@buf(BANK1[100]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK0[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), terminal_loop@buf(BANK1[100]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK0[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), terminal_loop@buf(BANK1[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK0[8]), rx_buf(BANK1[8]), tx_buf(BANK0[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 30
		 -> terminal_operation@str(BANK1[30]), STR_24(CODE[8]), print_time@str(BANK0[30]), STR_22(CODE[3]), 
		 -> print_time_dec@str(COMRAM[10]), STR_20(CODE[4]), STR_19(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(BANK0[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(BANK0[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), terminal_loop@buf(BANK1[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK0[8]), rx_buf(BANK1[8]), tx_buf(BANK0[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), terminal_loop@buf(BANK1[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK0[8]), rx_buf(BANK1[8]), tx_buf(BANK0[8]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), terminal_loop@buf(BANK1[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), terminal_loop@buf(BANK1[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK0[8]), rx_buf(BANK1[8]), tx_buf(BANK0[8]), 

    tx_sends@asciicode	PTR const unsigned char  size(2) Largest target is 315
		 -> STR_43(CODE[315]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), terminal_loop@buf(BANK1[100]), 

    S1008ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), terminal_loop@buf(BANK1[100]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), terminal_loop@buf(BANK1[100]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> sw_B(BANK0[4]), sw_G(COMRAM[4]), sw_R(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _terminal_loop->_ringbuf_backspace
    _terminal_loop->_ringbuf_pop
    _terminal_operation->___wmul
    _terminal_operation->_strcmp
    _terminal_operation->_tx_sends
    _terminal_time->_strcmp
    _sprintf->___wmul
    _atoi->___wmul
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _ringbuf_backspace->_ringbuf_num
    _main_init->_timer1_init
    _PWM_set->___wmul
    ___lwdiv->___wmul
    _RTCC_from_RTCC->_RTCC_to_caltime
    _RTCC_to_caltime->_x_to_d
    _month_length->___awmod
    ___awdiv->___wmul

Critical Paths under _ISR in COMRAM

    _ISR->_UART_ISR
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _main->_terminal_loop
    _terminal_loop->_terminal_operation
    _terminal_operation->_terminal_time
    _tx_sends->_ringbuf_put
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _sprintf->___lwmod
    _ringbuf_put_str->_ringbuf_put
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _ringbuf_put_num->___lwmod
    _ringbuf_put->_ringbuf_num
    ___lwmod->___lwdiv
    _ringbuf_pop->_ringbuf_num
    _ringbuf_backspace->_ringbuf_num
    _main_init->_ringbuf_init
    _light_loop->_RTCC_from_RTCC
    _PWM_set->___awdiv
    ___lwdiv->___wmul
    _RTCC_loop->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _month_length->___awmod
    _get_quot_rem->___lldiv
    ___lmul->_month_length
    ___lldiv->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    ___awdiv->_atoi

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_terminal_loop
    _terminal_loop->_terminal_operation

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  204025
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_loop
                         _light_loop
                          _main_init
                        _ringbuf_num
                      _terminal_loop
 ---------------------------------------------------------------------------------
 (1) _terminal_loop                                      111   107      4  156280
                                            109 BANK0      6     2      4
                                             34 BANK1    105   105      0
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  58    48     10  131578
                                             97 BANK0     12     2     10
                                              0 BANK1     34    34      0
                            _PWM_set
                            ___awdiv
                             ___wmul
                               _atoi
                    _ringbuf_put_str
                            _sprintf
                             _strcmp
                      _terminal_time
                           _tx_sends
 ---------------------------------------------------------------------------------
 (3) _tx_sends                                             2     0      2    4383
                                             33 COMRAM     2     0      2
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8   87392
                                             88 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   48945
                                             81 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   21936
                                             49 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             39    21     18    8004
                                             14 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4    5961
                                             13 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   17230
                                             55 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    8463
                                             31 COMRAM     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    4235
                                              2 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                             31 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5    7434
                                             14 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (4) _ringbuf_put                                          7     4      3    4199
                                              6 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     946
                                              9 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2064
                                             33 COMRAM     2     0      2
                                              6 BANK0      5     5      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     147
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1408
                                             33 COMRAM     2     0      2
                                              6 BANK0      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (5) _ringbuf_num                                          8     6      2    1134
                                             31 COMRAM     2     0      2
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    1536
                           _ADC_init
                           _OSC_init
                           _PWM_init
                          _RTCC_init
                          _UART_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      22
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     169
                                             31 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      44
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1257
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_init                                             1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _light_loop                                          11    11      0   18643
                                             35 BANK0     11    11      0
                            _PWM_set
                     _RTCC_from_RTCC
                            ___lldiv
                            ___llmod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     470
                                             31 COMRAM     1     1      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) _PWM_set                                              5     3      2    6220
                                             17 BANK0      5     3      2
                            ___awdiv (ARG)
                            ___lwdiv
                             ___wmul
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    2612
                                             31 COMRAM     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4    1669
                                              2 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            0     0      0    7580
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    7580
                                             33 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    6165
                                             20 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                             33 COMRAM     2     0      2
                                              0 BANK0      1     1      0
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_from_epoch                                      2     0      2   11272
                                             55 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8701
                                             41 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                              2 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                             31 COMRAM     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    5084
                                             33 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2988
                                              8 BANK0     12     4      8
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     955
                                             20 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    2152
                                             18 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0    1697
                                             17 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4    1635
                                              9 BANK0      8     4      4
                             ___wmul (ARG)
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                15    15      0    2604
                                             16 COMRAM    15    15      0
                           _UART_ISR
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (11) _button_timer_interrupt                              5     2      3    1432
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (11) _UART_ISR                                            1     1      0    1172
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_put                                       7     4      3     482
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_pop                                       7     5      2     435
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (13) i2_ringbuf_num                                       8     6      2     232
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
           ___wmul (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
           ___lmul (ARG)
             _month_length (ARG)
               ___awmod
         ___lmul
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_loop
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _light_loop
     _PWM_set
       ___awdiv (ARG)
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _atoi (ARG)
         ___wmul
         _isdigit
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     ___lldiv
       ___lmul (ARG)
         _month_length (ARG)
           ___awmod
     ___llmod
     ___lmul
       _month_length (ARG)
         ___awmod
   _main_init
     _ADC_init
     _OSC_init
     _PWM_init
     _RTCC_init
     _UART_init
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _ringbuf_num
   _terminal_loop
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _PWM_set
         ___awdiv (ARG)
           ___wmul (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___awdiv
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___wmul
       _atoi
         ___wmul
         _isdigit
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _sprintf
         ___lwdiv
           ___wmul (ARG)
         ___lwmod
           ___lwdiv (ARG)
             ___wmul (ARG)
         ___wmul
         _isdigit
       _strcmp
       _terminal_time
         _atoi
           ___wmul
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
               ___lwdiv (ARG)
                 ___wmul (ARG)
             ___wmul
             _isdigit
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
                   ___wmul (ARG)
                   _atoi (ARG)
                     ___wmul
                     _isdigit
             _caltime_to_epoch
               ___lmul
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                   ___lmul (ARG)
                     _month_length (ARG)
                       ___awmod
                 ___lmul
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lwdiv
                 ___wmul (ARG)
               ___lwmod
                 ___lwdiv (ARG)
                   ___wmul (ARG)
               ___wmul
               _isdigit
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num
       _tx_sends
         _ringbuf_put
           _ringbuf_num

 _ISR (ROOT)
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _button_timer_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0     3E8      35       26.6%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      FA      10       97.7%
BITBANK1           100      0       0       7        0.0%
BANK1              100     8B      FB       8       98.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      90       5       90.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      3F       1       67.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C4       6        0.0%
DATA                 0      0     6AC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Nov 09 20:25:17 2015

                _ringbuf_put_num 264E                  _ringbuf_put_str 29AE  
                   ___awdiv@sign 006E                               _ms 018B  
            ___wmul@multiplicand 0022                ??_RTCC_from_epoch 0024  
                   __CFG_CP0$OFF 000000                              l153 2C98  
                            l333 2340                              l158 2BEC  
                            l352 1738                              l257 2650  
                            l339 1B96                              l455 2C50  
                            l842 15F6                              l837 15A0  
                            l783 21EA                              _PR2 000FCB  
                            _ISR 0008                              i2l4 11E4  
                            i2l5 1208                              i2l6 122A  
                            i2l7 124C                              i2l8 126C  
                            i2l9 128C                    ?_get_quot_rem 0081  
             caltime_to_epoch@tm 0074                              _now 0028  
              _RTCC_from_caltime 2D38                     ___awmod@sign 0061  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAD               ?_RTCC_from_caltime 0097  
                           ?_ISR 0001                 _terminal_at_hand 2A12  
                           l1107 1AB4                             l1304 2104  
                           l1314 25B2                             l1357 292E  
                           l4103 2CAC                             l1367 2ACC  
                           l5011 2794                             l5003 2776  
                           l4115 2BEE                             l5101 203C  
                           l5023 27C6                             l5015 27A8  
                           l5007 2786                             l5105 2050  
                           l5009 2790                             l4233 2CCC  
                           l5115 2088                             l5019 27B4  
                           l5051 1E8A                             l5035 1B2A  
                           l5117 2098                             l5061 2970  
                           l5213 28DE                             l5127 20F2  
                           l5119 209E                             l5215 28EA  
                           l6031 15C2                             l6015 1580  
                           l5073 1FB8                             l5057 294A  
                           l5321 17B6                             l5161 0F4C  
                           l5225 2920                             l5217 28F0  
                           l6041 15E0                             l6033 15C6  
                           l6009 14FE                             l5241 2ABE  
                           l5233 2A88                             l5401 0676  
                           l5315 17AA                             l5171 0FB0  
                           l6019 158A                             l5235 2A94  
                           l5139 1DF8                             l5251 29E8  
                           l5403 06AC                             l5085 1FEC  
                           l5317 17AE                             l5181 1038  
                           l5165 0F56                             l5173 0FB4  
                           l6053 161C                             l6037 15D6  
                           l5237 2A9A                             l5413 06DC  
                           l5087 1FF8                             l5079 1FCE  
                           l5159 0F46                             l6055 1620  
                           l5511 2AD8                             l5247 29B0  
                           l5415 06E2                             l5351 04B4  
                           l5097 202E                             l5089 1FFE  
                           l5177 0FD4                             l5513 2AE0  
                           l5433 0740                             l5345 0498  
                           l5611 18E0                             l6059 1638  
                           l5523 19D4                             l5427 071E  
                           l5347 04AA                             l5339 047A  
                           l5507 2A5A                             l5603 0EF2  
                           l6251 2882                             l5621 1934  
                           l5197 2DDC                             l5541 1A76  
                           l5525 19DA                             l5517 2B1E  
                           l5437 0778                             l5373 059C  
                           l5365 056A                             l5357 04EC  
                           l5631 1992                             l5607 18D0  
                           l5543 1A7C                             l5535 1A20  
                           l5471 0828                             l5463 0802  
                           l5447 07A8                             l5455 07D0  
                           l5439 0782                             l5391 0638  
                           l5383 0602                             l5375 05A8  
                           l5551 2C10                             l5703 0038  
                           l5617 1924                             l5625 196E  
                           l5801 255E                             l5457 07DC  
                           l5385 060E                             l5377 05AE  
                           l5481 08B6                             l5561 0C3A  
                           l5705 0044                             l5635 199C  
                           l5627 1988                             l5539 1A32  
                           l5571 0CB6                             l5563 0C46  
                           l5555 2C36                             l5723 014A  
                           l5645 19B4                             l5805 25A2  
                           l5477 088A                             l5469 0822  
                           l5397 065E                             l5389 0620  
                           l5573 0CEE                             l5733 01C0  
                           l5717 010C                             l5639 19A8  
                           l5655 1F7E                             l5663 1F98  
                           l5479 0896                             l5591 0E12  
                           l5583 0D96                             l5567 0C7E  
                           l5727 0182               __CFG_WPFP$PAGE_127 000000  
                           l5657 1F92                             l5593 0E4A  
                           l5577 0D26                             l5761 031C  
                           l5745 0252                             l5737 01F8  
                           l5729 0188                             l5683 2682  
                           l5587 0DDA                             l5579 0D5E  
                           l5597 0E82                             l5781 0408  
                           l5773 03AE                             l5757 02E4  
                           l5749 028A                             l5933 0920  
                           l5679 2660                             l5599 0EBA  
                           l5697 270C                             l5689 26C2  
                           l5769 0376                             l5961 0A82  
                           l5953 0A34                             l5945 09E6  
                           l5937 0998                             l5929 08FA  
                           l5971 0B30                             l5963 0A86  
                           l5955 0A38                             l5947 09EA  
                           l5939 099C                             l5797 254A  
                           l5981 0B7A                             l4999 276A  
                           l5799 2558                             l5975 0B56  
                           l5985 0BAE                             l5977 0B5E  
                           l5969 0B06                             l5993 0BE4  
                           STR_1 FFBE                             STR_4 FFFB  
                           STR_7 FFFD                             STR_9 FFF9  
                           u5230 29DA                             u5240 2A0A  
                           u5237 29D0                             u5247 2A00  
                           u3585 2DF0                             i2l10 12AC  
                           u3586 2DF2                             i2l11 12CC  
                           u4900 1E3E                             u4910 1E66  
                           u4930 1E7C                             u4940 1E7E  
                           u6380 14B2                             u4950 1ED6  
                           u4960 1ED8                             u4928 1E6A  
                           u4890 1E3C                             u5930 00C6  
                           u5940 00E2                             u5938 00CA  
                           u5948 00E6              ??_RTCC_from_caltime 0024  
                           _atoi 19D2                             _main 2848  
       button_timer_interrupt@bt 0001                             _sw_B 00E9  
                           _sw_G 0036                             _sw_R 003A  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           indf0 000FEF                             fsr0l 000FE9  
                           fsr2h 000FDA                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                           btemp 0040           __CFG_DSWDTOSC$T1OSCREF 000000  
                           pclat 000FFA                             prodh 000FF4  
                           prodl 000FF3                  __end_of_PWM_set 19D2  
                           start 00FC               terminal_loop@ascii 0189  
               __end_of_ADC_init 2E00                    __CFG_IESO$OFF 000000  
                 terminal_loop@i 018A                     ___param_bank 000010  
                ??_terminal_loop 00D1                  ??_terminal_time 0024  
          __end_ofi2_ringbuf_pop 249A            __end_ofi2_ringbuf_num 21D2  
          __end_ofi2_ringbuf_put 2340                    ADC_init@p_ref 0020  
                          ??_ISR 0011                     print_time@tx 0091  
              ??_RTCC_to_caltime 0024                    __CFG_PLLDIV$2 000000  
                   _BAUDCON1bits 000F7E        __end_of_RTCC_from_caltime 2D5E  
                          ?_atoi 0062                            ?_main 0001  
                 ??_get_quot_rem 0024                  __end_of___awdiv 205A  
                          _ADRES 000FC3                            STR_20 FFD7  
                          STR_13 FFF7                            STR_30 FFB4  
                          STR_31 FFC9                            STR_15 FF78  
                          STR_23 FF24                            STR_32 FFA4  
                          STR_40 FF90                            STR_24 FF81  
                          STR_33 FFC1                            STR_41 FFAF  
                          STR_25 FF64                            STR_26 FFE3  
                          STR_42 FFE5                            STR_34 FFDB  
                          STR_50 FFC3                            STR_35 FFA8  
                          STR_27 FFE2                            STR_19 FFD7  
                          STR_51 FFCF                            STR_43 FDE9  
                          STR_60 FFED                            STR_52 FFC7  
                          STR_36 FFB9                            STR_44 FF6F  
                          STR_28 FF58                  __end_of___awmod 27D0  
                          STR_37 FFD1                            STR_53 FFA2  
                          STR_29 FFDD                            STR_45 FFDF  
                          STR_61 FF9E                            STR_54 FFEB  
                          STR_38 FF97                            STR_62 FF89  
                          STR_46 FF49                            STR_39 FFF5  
                          STR_55 FFF1                            STR_47 FFD3  
                          STR_56 FFE9                            STR_48 FFAA  
                          STR_57 FFEF                            STR_49 FFCB  
                          STR_58 FFE7                            STR_59 FFF3  
                __end_of___lldiv 2116                  ___awdiv@divisor 006B  
                __end_of___llmod 25C4                            _LATB2 007C52  
                __end_of___lwdiv 2938                  __end_of___lwmod 2AD6  
                          i2l188 2BAC                            i2l189 2BAA  
                          i2l780 00C0                  ___awdiv@counter 006D  
                          _TMR1H 000FCF                            _RPOR3 000EC3  
                          _RPOR4 000EC4                            _RPOR5 000EC5  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94              ___lmul@multiplicand 006C  
                 __CFG_FCMEN$OFF 000000                 __end_of_UART_ISR 2BCA  
           caltime_to_epoch@year 007A               __size_of_UART_init 0020  
                __end_of_dpowers FDCD                 __end_of_OSC_init 2E5A  
                __end_of_isdigit 2DE4               __size_of_RTCC_init 0030  
            terminal_loop@i_2775 0188               __size_of_RTCC_loop 0036  
               ringbuf_delete@rb 0020                            atoi@a 0067  
                          atoi@s 0062                            tablat 000FF5  
                          plusw2 000FDB                 __end_of_PWM_init 228A  
     __size_of_ringbuf_backspace 0082                            status 000FD8  
                __end_of_sprintf 08C4                month_length@month 0062  
        __end_of_ringbuf_put_num 26D0          __end_of_ringbuf_put_str 2A12  
                terminal_loop@rx 00CF                  terminal_loop@tx 00CD  
                __initialization 27D0                  terminal_time@tx 00B8  
                   __end_of_atoi 1ABE                     __end_of_main 28C0  
            ringbuf_init@bufsize 0064                 RTCC_from_RTCC@tm 0081  
                  print_time@str 0093                           ??_atoi 0064  
                         ??_main 0024                    __activetblptr 000003  
                         _BCL1IF 007D0B                 ___llmod@dividend 0060  
                         _CCPR1L 000FBB                           _CCPR2L 000FB5  
                         _CCPR3L 000F16                           _CCPR4L 000F13  
                         _EECON2 000FA7                           _ANCON0 000F48  
                         _ANCON1 000F49                 ___awdiv@dividend 0069  
        _terminal_operation$4485 011E          _terminal_operation$4486 0120  
                      ??_PWM_set 0073                   __CFG_WDTEN$OFF 000000  
                         i2l4091 2178                           i2l4413 232A  
                         i2l4423 247E                           i2l4431 2496  
                         i2l4425 2492                           i2l4461 1314  
                         i2l4481 13CC                           i2l4473 1380  
                         i2l4465 1338                           i2l4457 12F0  
                         i2l4485 13F2                           i2l4477 13A6  
                         i2l4469 135C                           i2l4489 1416  
                         i2l4959 006E                           _RCREG1 000FAF  
                         _RTCCAL 000F3E                           _SPBRG1 000FB0  
                         _SSP1IF 007CF3                   __CFG_WPCFG$OFF 000000  
                         _TXREG1 000FAE               _terminal_loop$4483 0186  
                i2ringbuf_pop@rb 0009                  i2ringbuf_num@rb 0001  
                i2ringbuf_put@rb 0009                   __CFG_WPDIS$OFF 000000  
             epoch_to_caltime@tm 0089                   __CFG_XINST$OFF 000000  
              ?_epoch_to_caltime 0089                 ringbuf_put_num@i 0073  
                   _CCPTMRS0bits 000F52                     _CCPTMRS1bits 000F51  
          caltime_to_epoch@epoch 007C               _terminal_time$4484 00C0  
                   ?_ringbuf_pop 0022                     ?_ringbuf_num 0020  
                   ?_ringbuf_put 0066            caltime_to_epoch@month 0080  
                         ___lmul 2938                  _caltime_to_RTCC 1B96  
                    light_loop@i 008D                      light_loop@n 00EE  
                         ___wmul 2CE6               ??_epoch_to_caltime 008B  
              __end_of_UART_init 2DC6                        ??___awdiv 0024  
                      ??___awmod 0024                           _d_to_x 2D10  
                      ??___lldiv 0024             ringbuf_put_num@value 0070  
                   ?_timer0_init 0001                        ??___llmod 0020  
              __end_of_RTCC_init 2CE6                     ?_timer1_init 0020  
                      ??___lwdiv 0024                __end_of_RTCC_loop 2C86  
                      ??___lwmod 0024                     ?_timer3_init 0001  
                         clear_0 27D8                           clear_1 27EA  
                         clear_2 27F6                           clear_3 2802  
                         clear_4 280E                  __CFG_CLKOEC$OFF 000000  
               ___awdiv@quotient 006F                  ___awmod@divisor 0022  
                ___awmod@counter 0060                           _x_to_d 2E34  
                         _rx_buf 01F3       __size_of_RTCC_from_caltime 0026  
                         _tx_buf 00D9                           _strcmp 2AD6  
      __size_of_caltime_to_epoch 028E               _terminal_operation 0000  
                   __pdataCOMRAM 003E                        ??_isdigit 0020  
                   __mediumconst FDC2                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                      ?_ADC_init 0001                        ??_sprintf 0080  
            ?_terminal_operation 00C1                 __end_of_tx_sends 2C50  
           terminal_loop@command 00E1             __CFG_LS48MHZ$SYS48X8 000000  
                     __accesstop 0060          __end_of__initialization 283E  
           __end_of_get_quot_rem 1D40                    ___rparam_used 000001  
                _RTCC_from_epoch 2E1A                 ?_ringbuf_put_num 006E  
               ?_ringbuf_put_str 006D             __CFG_WPEND$PAGE_WPFP 000000  
               terminal_loop@op0 018F                 terminal_loop@op1 01A8  
               terminal_loop@op2 01C1                 terminal_loop@op3 01DA  
               terminal_loop@buf 0122                   __pcstackCOMRAM 0001  
               terminal_time@op0 00BA                 terminal_time@op1 00BC  
               terminal_time@op2 00BE                     __pidataBANK0 2E5C  
                      ?_UART_ISR 0001             ??_terminal_operation 00CB  
       __end_of_terminal_at_hand 2A74                  light_loop@_3706 00ED  
                      ?_OSC_init 0001                  __CFG_DSWDTPS$G2 000000  
                      ?_PWM_init 0001                  light_loop@value 0087  
        __size_of_ringbuf_delete 0022                       ??_ADC_init 0020  
     caltime_to_epoch@month_1932 007B                     sprintf@width 008F  
             __size_of_main_init 0096                       __pbssBANK0 00D3  
                     __pbssBANK1 018B                       __pbssBANK2 0200  
        __end_of_caltime_to_RTCC 1C6C                  _RTCC_to_caltime 2340  
          __end_of_weekday_3char FDE9                          ?___lmul 0068  
                     ??_UART_ISR 0010                          ?___wmul 0020  
                        ?_d_to_x 0001                       ??_OSC_init 0020  
                 ___lmul@product 0070                          ?_x_to_d 0001  
                        ?_strcmp 0020                       ??_PWM_init 0020  
             __CFG_OSC$INTOSCPLL 000000           I2C_LCD_SetCursor@F8633 003E  
                __CFG_WDTPS$1024 000000                          _SPBRGH1 000F7F  
                        _SSP1ADD 000FC8                          _SSP1BUF 000FC9  
           terminal_operation@tx 00C1                          _RTCVALH 000F3B  
                        _RTCVALL 000F3A          __end_of_RTCC_from_epoch 2E34  
           timer1_init@prescaler 0022                          _PWM_set 183E  
               i2ringbuf_pop@ret 000F                     PWM_set@color 0075  
               __CFG_CFGPLLEN$ON 000000         ??_button_timer_interrupt 0004  
                   PWM_set@value 0071                    ?_month_length 0062  
            epoch_to_caltime@day 008F              epoch_to_caltime@num 0093  
              RTCC_from_epoch@tm 0097                          __Hparam 0000  
                        __Lparam 0000                ringbuf_put_num@rb 006E  
              ringbuf_put_str@rb 006D                    ?_ringbuf_init 0060  
                        ___awdiv 1F9C                  __size_of___lmul 0076  
                        ___awmod 2752                          ___lldiv 205A  
                __size_of___wmul 002A                          ___llmod 2530  
          ringbuf_put_num@digits 0072                       _light_mode 00D5  
                        ___lwdiv 28C0                       _light_loop 143C  
                        ___lwmod 2A74                  __size_of_d_to_x 0028  
          __end_of_terminal_loop 0C02            __end_of_terminal_time 0F2C  
           __size_of_ringbuf_pop 00BE             __size_of_ringbuf_num 00D8  
           __size_of_ringbuf_put 00D0                  __CFG_STVREN$OFF 000000  
              __end_of_main_init 2530      epoch_to_caltime@month_cache 00EF  
                        __pcinit 27D0                        ?_tx_sends 0022  
                        __ramtop 0F00        terminal_loop@command_init 00D8  
           __size_of_timer0_init 0030             __size_of_timer1_init 0044  
                        __ptext0 2848                          __ptext1 08C4  
                        __ptext2 0000                          __ptext3 2C0E  
                        __ptext4 0C02                          __ptext5 2A12  
                        __ptext6 25C4                          __ptext7 046C  
                        __ptext8 29AE                          __ptext9 2D38  
           __size_of_timer3_init 0026                  __size_of_x_to_d 0018  
                      _T0CONbits 000FD5                 _time_change_flag 00D6  
               _caltime_to_epoch 0F2C                  __size_of_strcmp 0056  
                   __size_of_ISR 00F4                        _T1CONbits 000FCD  
                        _dpowers FDC3          __size_of_RTCC_from_RTCC 001A  
                      _T2CONbits 000FCA             light_loop@value_3707 0088  
                        _isdigit 2DC6                        _T3CONbits 000F79  
               ___awmod@dividend 0020                        _T5CONbits 000F22  
                        _sprintf 046C          __end_of_RTCC_to_caltime 23EE  
          __size_of_get_quot_rem 00D4             end_of_initialization 283E  
         __size_ofi2_ringbuf_pop 00AC           __size_ofi2_ringbuf_num 00BC  
         __size_ofi2_ringbuf_put 00B6                     _CTMUCONHbits 000FB3  
                   _CTMUCONLbits 000FB2                   ??_month_length 0063  
               ?_caltime_to_RTCC 0072                  ___lldiv@divisor 0078  
           timer3_init@prescaler 0021                  ___lldiv@counter 0080  
                 ??_ringbuf_init 0020                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                        strcmp@r 0061                       ??_tx_sends 0024  
                      _PORTAbits 000F80                        _UART_init 2DA6  
               __CFG_DSBOREN$OFF 000000                        _RTCC_init 2CB6  
                      _RTCC_loop 2C50        epoch_to_caltime@day_cache 00D3  
         i2ringbuf_put@asciicode 000B                     _get_quot_rem 1C6C  
                     _print_time 25C4                   _ringbuf_delete 2D84  
      __size_of_epoch_to_caltime 01F2                 __CFG_CPUDIV$OSC1 000000  
            RTCC_from_caltime@tm 0097                __size_of_ADC_init 001C  
               ?_RTCC_from_epoch 0097  __size_of_button_timer_interrupt 0282  
        timer1_init@clock_select 0020                      _CCP1CONbits 000FBA  
                    _CCP2CONbits 000FB4                 __CFG_IOL1WAY$OFF 000000  
                    _CCP3CONbits 000F15                      _CCP4CONbits 000F12  
            __CFG_MSSP7B_EN$MSK7 000000                   ringbuf_init@rb 0060  
                 ringbuf_pop@ret 006A                    i2_ringbuf_pop 23EE  
                  i2_ringbuf_num 2116                      ?_light_loop 0001  
                  i2_ringbuf_put 228A                ?_terminal_at_hand 00B1  
                 __end_of___lmul 29AE                   __end_of___wmul 2D10  
                 __end_of_d_to_x 2D38                    __pidataCOMRAM 2E5A  
              __size_of_UART_ISR 004A           __end_of_ringbuf_delete 2DA6  
             ??_terminal_at_hand 0024                       ?_UART_init 0001  
                     ?_RTCC_init 0001                __size_of_OSC_init 000E  
                     ?_RTCC_loop 0001                 __CFG_DSWDTEN$OFF 000000  
                 __end_of_x_to_d 2E4C            epoch_to_caltime@month 0092  
                 __end_of_strcmp 2B2C              start_initialization 27D0  
               month_length@year 0067                      __end_of_ISR 00FC  
              __size_of_PWM_init 00B8                    UART_ISR@ascii 0010  
               ?_RTCC_to_caltime 0022                  ___llmod@divisor 0064  
                ___llmod@counter 0020              ringbuf_put_num@temp 0074  
                       ??___lmul 0024                   ?i2_ringbuf_pop 0009  
                 ?i2_ringbuf_num 0001                   ?i2_ringbuf_put 0009  
                       ??___wmul 0024                         ??_d_to_x 0024  
    __size_of_terminal_operation 046C                __CFG_ADCSEL$BIT12 000000  
                    __pdataBANK0 00EF         __size_of_ringbuf_put_num 0082  
       __size_of_ringbuf_put_str 0064           _button_timer_interrupt 11BA  
                       ??_x_to_d 0020                  ?_ringbuf_delete 0020  
                       ??_strcmp 0060             __end_of_month_length 1EDE  
                 _RTCC_from_RTCC 2E00                      ?_print_time 0091  
                    __pbssBIGRAM 02FA                      __pbssCOMRAM 0024  
            RTCC_to_caltime@dumy 0060                    __pcstackBANK0 0060  
                  __pcstackBANK1 0100             __end_of_ringbuf_init 2B80  
                   _isdigit$3997 0021                         ?_PWM_set 0071  
                 light_loop@temp 0089              __size_of_light_loop 0210  
                    sprintf@flag 008D                      sprintf@prec 0084  
       __end_of_caltime_to_epoch 11BA                  millis_timer@cnt 0024  
               ___lwdiv@dividend 0062                        __pintcode 0008  
                  __pmediumconst FDC2                         ?___awdiv 0069  
                       ?___awmod 0020                         ?___lldiv 0074  
                       ?___llmod 0060                         ?___lwdiv 0062  
                       ?___lwmod 0069           __end_of_RTCC_from_RTCC 2E1A  
                    ??_UART_init 0020                      ??_RTCC_init 0020  
                    ??_RTCC_loop 0024                __size_of_tx_sends 0042  
                      _main_init 249A                         ?_isdigit 0001  
               _epoch_to_caltime 164C             __CFG_RTCOSC$T1OSCREF 000000  
                       _ADC_flag 0027                         _ADC_init 2DE4  
                    _PADCFG1bits 000F3C              ringbuf_backspace@rb 0022  
               ___lwdiv@quotient 0067            terminal_at_hand@value 00B7  
                       ?_sprintf 006E                        d_to_x@dec 0071  
                       _CTMUCONH 000FB3                         _CTMUCONL 000FB2  
                       _CTMUICON 000FB1         ringbuf_init@internal_buf 0062  
                 ___wmul@product 0060                         _LATBbits 000F8A  
                       _IPR1bits 000F9F                         _IPR2bits 000FA2  
                       _PIE1bits 000F9D                         _PIE2bits 000FA0  
                       _IPR5bits 000F99                         _PIE5bits 000F91  
            __size_of_print_time 008A                         i2u410_40 13BC  
                       i2u411_40 13E2                         i2u412_40 1408  
                ??i2_ringbuf_pop 000B                  ??i2_ringbuf_num 0003  
                ??i2_ringbuf_put 000C                         i2u409_40 1396  
                       _PIR1bits 000F9E                         _PIR2bits 000FA1  
                       i2u470_40 005E                         i2u471_48 0060  
                       i2u473_40 0084                         _PIR5bits 000F98  
                       i2u474_40 0086       epoch_to_caltime@year_cache 00D7  
                       i2u475_40 009C                         i2u476_40 009E  
                       i2u477_40 00B4                         i2u478_40 00B6  
                  ??_ringbuf_pop 0066                    ??_ringbuf_num 0060  
                  ??_ringbuf_put 0069                         _UART_ISR 2B80  
          terminal_operation@op0 00C3            terminal_operation@op1 00C5  
          terminal_operation@op2 00C7            terminal_operation@op3 00C9  
                       _SSP1CON1 000FC6                         _SSP1CON2 000FC5  
                  ??_timer0_init 0020                    ??_timer1_init 0021  
          terminal_operation@str 0100                    ??_timer3_init 0020  
                       _SSP1STAT 000FC7                         _OSC_init 2E4C  
                ?_RTCC_from_RTCC 0081                       _ADCON0bits 000FC2  
                     _ADCON1bits 000FC1                ___wmul@multiplier 0020  
               __CFG_SOSCSEL$LOW 000000                         _PWM_init 21D2  
 button_timer_interrupt@sw_value 0003                       ?_main_init 0001  
              ??_ringbuf_put_num 0024                ??_ringbuf_put_str 0022  
                  ringbuf_pop@rb 0022                    ringbuf_num@rb 0020  
                  ringbuf_put@rb 0066                ___lmul@multiplier 0068  
                    _INTCON2bits 000FF1             epoch_to_caltime@year 0091  
         __size_of_terminal_loop 033E           __size_of_terminal_time 032A  
               __size_of_PWM_set 0194                       _CCPR1Lbits 000FBB  
                     _CCPR2Lbits 000FB5                       _CCPR3Lbits 000F16  
                     _CCPR4Lbits 000F13                         __Hrparam 0000  
                       __Lrparam 0000                    _weekday_3char FDCD  
          __size_of_month_length 00CE                     ??_light_loop 0083  
             ringbuf_put_str@str 006F         __size_of_caltime_to_RTCC 00D6  
               __size_of___awdiv 00BE                 __size_of___awmod 007E  
               __size_of___lldiv 00BC                 __size_of___llmod 0094  
               __size_of___lwdiv 0078                 __size_of___lwmod 0062  
              tx_sends@asciicode 0022              __end_of_ringbuf_pop 1F9C  
            __end_of_ringbuf_num 1B96              __end_of_ringbuf_put 1E10  
            __end_of_timer0_init 2CB6            __size_of_ringbuf_init 0054  
            __end_of_timer1_init 2C0E                       sprintf@len 008B  
            __end_of_timer3_init 2D84                       sprintf@val 0089  
               __size_of_isdigit 001E                  ___lwdiv@divisor 0064  
                ___lwdiv@counter 0066             timer0_init@prescaler 0021  
                       __ptext10 2AD6                         __ptext11 19D2  
                       __ptext20 249A                         __ptext12 2DC6  
                       __ptext21 2D5E                         __ptext13 264E  
                       __ptext30 143C                         __ptext22 2BCA  
                       __ptext14 1D40                         __ptext31 2530  
                       __ptext23 2C86                         __ptext15 2A74  
                       __ptext40 2E1A                         __ptext32 183E  
                       __ptext24 2B2C                         __ptext16 1EDE  
                       __ptext41 164C                         __ptext33 2CE6  
                       __ptext25 2DA6                         __ptext17 2D84  
                       __ptext42 1E10                         __ptext34 28C0  
                       __ptext26 2CB6                         __ptext18 26D0  
                       __ptext51 11BA                         __ptext43 2752  
                       __ptext35 2C50                         __ptext27 21D2  
                       __ptext19 1ABE                         __ptext52 2B80  
                       __ptext44 1C6C                         __ptext36 2E00  
                       __ptext28 2E4C                         __ptext53 228A  
                       __ptext45 2938                         __ptext37 0F2C  
                       __ptext29 2DE4                         __ptext54 23EE  
                       __ptext46 205A                         __ptext38 2340  
                       __ptext55 2116                         __ptext47 1B96  
                       __ptext39 2E34                         __ptext48 2D10  
                       __ptext49 1F9C                     _SSP1CON1bits 000FC6  
                   _SSP1CON2bits 000FC5                       PWM_init@PR 0020  
      __size_of_terminal_at_hand 0062                 __size_of_sprintf 0458  
          RTCC_loop@prev_halfsec 0026             terminal_at_hand@hand 00B3  
             __end_of_light_loop 164C                    __size_of_atoi 00EC  
                  __size_of_main 0078                     _month_length 1E10  
       __size_of_RTCC_from_epoch 001A                 ??_ringbuf_delete 0022  
        ?_button_timer_interrupt 0001                         int$flags 0040  
                   _ringbuf_init 2B2C                         atoi@sign 0066  
                      x_to_d@hex 0021                     _SSP1STATbits 000FC7  
                  _terminal_loop 08C4                    _terminal_time 0C02  
                       _tx_sends 2C0E                     ??_print_time 0024  
                 main_init@rxbuf 0200                   main_init@txbuf 02FA  
                    ??_main_init 0023                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2             ringbuf_put@asciicode 0068  
                       isdigit@c 0022                 get_quot_rem@quot 0081  
              RTCC_to_caltime@tm 0022                         intlevel2 0000  
                      sprintf@ap 0085                        sprintf@cp 0087  
                      sprintf@sp 006E                 ___lwmod@dividend 0069  
               ___lldiv@dividend 0074                       _RCSTA1bits 000FAC  
            terminal_at_hand@max 00B6              terminal_at_hand@min 00B5  
              ?_caltime_to_epoch 0074                _ringbuf_backspace 26D0  
       __end_of_epoch_to_caltime 183E         __size_of_RTCC_to_caltime 00AE  
                     _OSCCONbits 000FD3   __end_of_button_timer_interrupt 143C  
     __end_of_terminal_operation 046C               __end_of_print_time 264E  
             ??_caltime_to_epoch 0076               ?_ringbuf_backspace 0022  
                    _ringbuf_pop 1EDE                      _ringbuf_num 1ABE  
                    _ringbuf_put 1D40                      _timer0_init 2C86  
                    _timer1_init 2BCA                      _timer3_init 2D5E  
                 ?_terminal_loop 00CD                   ?_terminal_time 00B8  
            ??_ringbuf_backspace 0066                  get_quot_rem@div 0083  
                get_quot_rem@num 0085                       _RTCCFGbits 000F3F  
                       sprintf@c 008E                         sprintf@f 0070  
                       strcmp@s1 0020                         strcmp@s2 0022  
                     _PPSCONbits 000EBF                 ___lldiv@quotient 007C  
                ___lwmod@divisor 006B                caltime_to_RTCC@tm 0072  
              ??_caltime_to_RTCC 0024                  ___lwmod@counter 006D  
             terminal_at_hand@tx 00B1  epoch_to_caltime@day_since_epoch 008D  
      __end_of_ringbuf_backspace 2752                 ??_RTCC_from_RTCC 0024  
