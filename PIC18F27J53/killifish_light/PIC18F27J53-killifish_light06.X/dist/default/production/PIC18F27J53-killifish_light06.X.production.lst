

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Nov 10 13:09:18 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    17                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   112                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   113                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   114                           	dabs	1,0xD00,48,_BDT
   115                           	dabs	1,0xD38,8,_CtrlTrfData
   116                           	dabs	1,0xD30,8,_SetupPkt
   117  0000                     
   118                           	psect	idataBANK0
   119  0146F8                     __pidataBANK0:
   120                           	opt stack 0
   121                           
   122                           ;initializer for epoch_to_caltime@month_cache
   123  0146F8  01                 	db	1
   124                           
   125                           	psect	idataBANK1
   126  001004                     __pidataBANK1:
   127                           	opt stack 0
   128                           
   129                           ;initializer for I2C_LCD_SetCursor@F8633
   130  001004  00                 	db	0
   131  001005  40                 	db	64
   132                           
   133                           	psect	mediumconst
   134  00FD02                     __pmediumconst:
   135                           	opt stack 0
   136  00FD02  00                 	db	0
   137  00FD03                     _dpowers:
   138                           	opt stack 0
   139  00FD03  0001               	dw	1
   140  00FD05  000A               	dw	10
   141  00FD07  0064               	dw	100
   142  00FD09  03E8               	dw	1000
   143  00FD0B  2710               	dw	10000
   144  00FD0D                     __end_of_dpowers:
   145                           	opt stack 0
   146  00FD0D                     _USB_SD_Ptr:
   147                           	opt stack 0
   148  00FD0D  EE                 	db	low _sd000
   149  00FD0E  FD                 	db	high _sd000
   150  00FD0F  58                 	db	low _sd001
   151  00FD10  FD                 	db	high _sd001
   152  00FD11  8C                 	db	low _sd002
   153  00FD12  FD                 	db	high _sd002
   154  00FD13                     __end_of_USB_SD_Ptr:
   155                           	opt stack 0
   156  00FD13                     _USB_CD_Ptr:
   157                           	opt stack 0
   158  00FD13  15                 	db	low _configDescriptor1
   159  00FD14  FD                 	db	high _configDescriptor1
   160  00FD15                     __end_of_USB_CD_Ptr:
   161                           	opt stack 0
   162  00FD15                     _configDescriptor1:
   163                           	opt stack 0
   164  00FD15  09                 	db	9
   165  00FD16  02                 	db	2
   166  00FD17  43                 	db	67
   167  00FD18  00                 	db	0
   168  00FD19  02                 	db	2
   169  00FD1A  01                 	db	1
   170  00FD1B  00                 	db	0
   171  00FD1C  C0                 	db	192
   172  00FD1D  32                 	db	50
   173  00FD1E  09                 	db	9
   174  00FD1F  04                 	db	4
   175  00FD20  00                 	db	0
   176  00FD21  00                 	db	0
   177  00FD22  01                 	db	1
   178  00FD23  02                 	db	2
   179  00FD24  02                 	db	2
   180  00FD25  01                 	db	1
   181  00FD26  00                 	db	0
   182  00FD27  05                 	db	5
   183  00FD28  24                 	db	36
   184  00FD29  00                 	db	0
   185  00FD2A  10                 	db	16
   186  00FD2B  01                 	db	1
   187  00FD2C  04                 	db	4
   188  00FD2D  24                 	db	36
   189  00FD2E  02                 	db	2
   190  00FD2F  02                 	db	2
   191  00FD30  05                 	db	5
   192  00FD31  24                 	db	36
   193  00FD32  06                 	db	6
   194  00FD33  00                 	db	0
   195  00FD34  01                 	db	1
   196  00FD35  05                 	db	5
   197  00FD36  24                 	db	36
   198  00FD37  01                 	db	1
   199  00FD38  00                 	db	0
   200  00FD39  01                 	db	1
   201  00FD3A  07                 	db	7
   202  00FD3B  05                 	db	5
   203  00FD3C  81                 	db	129
   204  00FD3D  03                 	db	3
   205  00FD3E  08                 	db	8
   206  00FD3F  00                 	db	0
   207  00FD40  02                 	db	2
   208  00FD41  09                 	db	9
   209  00FD42  04                 	db	4
   210  00FD43  01                 	db	1
   211  00FD44  00                 	db	0
   212  00FD45  02                 	db	2
   213  00FD46  0A                 	db	10
   214  00FD47  00                 	db	0
   215  00FD48  00                 	db	0
   216  00FD49  00                 	db	0
   217  00FD4A  07                 	db	7
   218  00FD4B  05                 	db	5
   219  00FD4C  02                 	db	2
   220  00FD4D  02                 	db	2
   221  00FD4E  40                 	db	64
   222  00FD4F  00                 	db	0
   223  00FD50  00                 	db	0
   224  00FD51  07                 	db	7
   225  00FD52  05                 	db	5
   226  00FD53  82                 	db	130
   227  00FD54  02                 	db	2
   228  00FD55  40                 	db	64
   229  00FD56  00                 	db	0
   230  00FD57  00                 	db	0
   231  00FD58                     __end_of_configDescriptor1:
   232                           	opt stack 0
   233  00FD58                     _sd001:
   234                           	opt stack 0
   235  00FD58  34                 	db	52
   236  00FD59  03                 	db	3
   237  00FD5A  004D               	dw	77
   238  00FD5C  0069               	dw	105
   239  00FD5E  0063               	dw	99
   240  00FD60  0072               	dw	114
   241  00FD62  006F               	dw	111
   242  00FD64  0063               	dw	99
   243  00FD66  0068               	dw	104
   244  00FD68  0069               	dw	105
   245  00FD6A  0070               	dw	112
   246  00FD6C  0020               	dw	32
   247  00FD6E  0054               	dw	84
   248  00FD70  0065               	dw	101
   249  00FD72  0063               	dw	99
   250  00FD74  0068               	dw	104
   251  00FD76  006E               	dw	110
   252  00FD78  006F               	dw	111
   253  00FD7A  006C               	dw	108
   254  00FD7C  006F               	dw	111
   255  00FD7E  0067               	dw	103
   256  00FD80  0079               	dw	121
   257  00FD82  0020               	dw	32
   258  00FD84  0049               	dw	73
   259  00FD86  006E               	dw	110
   260  00FD88  0063               	dw	99
   261  00FD8A  002E               	dw	46
   262  00FD8C                     __end_of_sd001:
   263                           	opt stack 0
   264  00FD8C                     _sd002:
   265                           	opt stack 0
   266  00FD8C  34                 	db	52
   267  00FD8D  03                 	db	3
   268  00FD8E  0043               	dw	67
   269  00FD90  0044               	dw	68
   270  00FD92  0043               	dw	67
   271  00FD94  0020               	dw	32
   272  00FD96  0052               	dw	82
   273  00FD98  0053               	dw	83
   274  00FD9A  002D               	dw	45
   275  00FD9C  0032               	dw	50
   276  00FD9E  0033               	dw	51
   277  00FDA0  0032               	dw	50
   278  00FDA2  0020               	dw	32
   279  00FDA4  0045               	dw	69
   280  00FDA6  006D               	dw	109
   281  00FDA8  0075               	dw	117
   282  00FDAA  006C               	dw	108
   283  00FDAC  0061               	dw	97
   284  00FDAE  0074               	dw	116
   285  00FDB0  0069               	dw	105
   286  00FDB2  006F               	dw	111
   287  00FDB4  006E               	dw	110
   288  00FDB6  0020               	dw	32
   289  00FDB8  0044               	dw	68
   290  00FDBA  0065               	dw	101
   291  00FDBC  006D               	dw	109
   292  00FDBE  006F               	dw	111
   293  00FDC0                     __end_of_sd002:
   294                           	opt stack 0
   295  00FDC0                     _weekday_3char:
   296                           	opt stack 0
   297  00FDC0  53                 	db	83
   298  00FDC1  55                 	db	85
   299  00FDC2  4E                 	db	78
   300  00FDC3  00                 	db	0
   301  00FDC4  4D                 	db	77
   302  00FDC5  4F                 	db	79
   303  00FDC6  4E                 	db	78
   304  00FDC7  00                 	db	0
   305  00FDC8  54                 	db	84
   306  00FDC9  55                 	db	85
   307  00FDCA  45                 	db	69
   308  00FDCB  00                 	db	0
   309  00FDCC  57                 	db	87
   310  00FDCD  45                 	db	69
   311  00FDCE  44                 	db	68
   312  00FDCF  00                 	db	0
   313  00FDD0  54                 	db	84
   314  00FDD1  48                 	db	72
   315  00FDD2  55                 	db	85
   316  00FDD3  00                 	db	0
   317  00FDD4  46                 	db	70
   318  00FDD5  52                 	db	82
   319  00FDD6  49                 	db	73
   320  00FDD7  00                 	db	0
   321  00FDD8  53                 	db	83
   322  00FDD9  41                 	db	65
   323  00FDDA  54                 	db	84
   324  00FDDB  00                 	db	0
   325  00FDDC                     __end_of_weekday_3char:
   326                           	opt stack 0
   327  00FDDC                     _device_dsc:
   328                           	opt stack 0
   329  00FDDC  12                 	db	18
   330  00FDDD  01                 	db	1
   331  00FDDE  0200               	dw	512
   332  00FDE0  02                 	db	2
   333  00FDE1  00                 	db	0
   334  00FDE2  00                 	db	0
   335  00FDE3  08                 	db	8
   336  00FDE4  04D8               	dw	1240
   337  00FDE6  000A               	dw	10
   338  00FDE8  0100               	dw	256
   339  00FDEA  01                 	db	1
   340  00FDEB  02                 	db	2
   341  00FDEC  00                 	db	0
   342  00FDED  01                 	db	1
   343  00FDEE                     __end_of_device_dsc:
   344                           	opt stack 0
   345  00FDEE                     _sd000:
   346                           	opt stack 0
   347  00FDEE  04                 	db	4
   348  00FDEF  03                 	db	3
   349  00FDF0  0409               	dw	1033
   350  00FDF2                     __end_of_sd000:
   351                           	opt stack 0
   352  0000                     _PPSCONbits	set	3775
   353  0000                     _RPOR3	set	3779
   354  0000                     _RPOR4	set	3780
   355  0000                     _RPOR5	set	3781
   356  0000                     _ANCON0	set	3912
   357  0000                     _ANCON1	set	3913
   358  0000                     _CCP3CONbits	set	3861
   359  0000                     _CCP4CONbits	set	3858
   360  0000                     _CCPR3L	set	3862
   361  0000                     _CCPR3Lbits	set	3862
   362  0000                     _CCPR4L	set	3859
   363  0000                     _CCPR4Lbits	set	3859
   364  0000                     _CCPTMRS0bits	set	3922
   365  0000                     _CCPTMRS1bits	set	3921
   366  0000                     _PADCFG1bits	set	3900
   367  0000                     _RTCCAL	set	3902
   368  0000                     _RTCCFGbits	set	3903
   369  0000                     _RTCVALH	set	3899
   370  0000                     _RTCVALL	set	3898
   371  0000                     _T5CONbits	set	3874
   372  0000                     _UADDR	set	3896
   373  0000                     _UCFG	set	3897
   374  0000                     _UEIE	set	3895
   375  0000                     _UEP0bits	set	3878
   376  0000                     _UIE	set	3894
   377  0000                     _UIEbits	set	3894
   378  0000                     _UEP0	set	3878
   379  0000                     _UEP1	set	3879
   380  0000                     _ADRES	set	4035
   381  0000                     _ADCON0bits	set	4034
   382  0000                     _ADCON1bits	set	4033
   383  0000                     _BAUDCON1bits	set	3966
   384  0000                     _CCP1CONbits	set	4026
   385  0000                     _CCP2CONbits	set	4020
   386  0000                     _CCPR1L	set	4027
   387  0000                     _CCPR1Lbits	set	4027
   388  0000                     _CCPR2L	set	4021
   389  0000                     _CCPR2Lbits	set	4021
   390  0000                     _CTMUCONH	set	4019
   391  0000                     _CTMUCONHbits	set	4019
   392  0000                     _CTMUCONL	set	4018
   393  0000                     _CTMUCONLbits	set	4018
   394  0000                     _CTMUICON	set	4017
   395  0000                     _EECON2	set	4007
   396  0000                     _INTCON2bits	set	4081
   397  0000                     _INTCONbits	set	4082
   398  0000                     _IPR1bits	set	3999
   399  0000                     _IPR2bits	set	4002
   400  0000                     _IPR5bits	set	3993
   401  0000                     _LATBbits	set	3978
   402  0000                     _OSCCONbits	set	4051
   403  0000                     _OSCTUNEbits	set	3995
   404  0000                     _PIE1bits	set	3997
   405  0000                     _PIE2bits	set	4000
   406  0000                     _PIE5bits	set	3985
   407  0000                     _PIR1bits	set	3998
   408  0000                     _PIR2bits	set	4001
   409  0000                     _PIR5bits	set	3992
   410  0000                     _PORTAbits	set	3968
   411  0000                     _PR2	set	4043
   412  0000                     _RCONbits	set	4048
   413  0000                     _RCREG1	set	4015
   414  0000                     _RCSTA1bits	set	4012
   415  0000                     _SPBRG1	set	4016
   416  0000                     _SPBRGH1	set	3967
   417  0000                     _SSP1ADD	set	4040
   418  0000                     _SSP1BUF	set	4041
   419  0000                     _SSP1CON1	set	4038
   420  0000                     _SSP1CON1bits	set	4038
   421  0000                     _SSP1CON2	set	4037
   422  0000                     _SSP1CON2bits	set	4037
   423  0000                     _SSP1STAT	set	4039
   424  0000                     _SSP1STATbits	set	4039
   425  0000                     _T0CONbits	set	4053
   426  0000                     _T1CONbits	set	4045
   427  0000                     _T2CONbits	set	4042
   428  0000                     _T3CONbits	set	3961
   429  0000                     _TMR1H	set	4047
   430  0000                     _TRISA	set	3986
   431  0000                     _TRISB	set	3987
   432  0000                     _TRISC	set	3988
   433  0000                     _TXREG1	set	4014
   434  0000                     _TXSTA1bits	set	4013
   435  0000                     _UCON	set	3941
   436  0000                     _UCONbits	set	3941
   437  0000                     _UEIR	set	3939
   438  0000                     _UIR	set	3938
   439  0000                     _UIRbits	set	3938
   440  0000                     _USTAT	set	3940
   441  0000                     _BCL1IF	set	32011
   442  0000                     _LATB2	set	31826
   443  0000                     _SSP1IF	set	31987
   444  00FDF2                     STR_43:
   445                           
   446                           ; BSR set to: 0
   447  00FDF2  09                 	db	9
   448  00FDF3  2A                 	db	42
   449  00FDF4  2A                 	db	42
   450  00FDF5  2A                 	db	42
   451  00FDF6  2A                 	db	42
   452  00FDF7  2A                 	db	42
   453  00FDF8  2A                 	db	42
   454  00FDF9  2A                 	db	42
   455  00FDFA  2A                 	db	42
   456  00FDFB  2A                 	db	42
   457  00FDFC  2A                 	db	42
   458  00FDFD  2A                 	db	42
   459  00FDFE  2A                 	db	42
   460  00FDFF  2A                 	db	42
   461  00FE00  2A                 	db	42
   462  00FE01  2A                 	db	42
   463  00FE02  2A                 	db	42
   464  00FE03  2A                 	db	42
   465  00FE04  2A                 	db	42
   466  00FE05  2A                 	db	42
   467  00FE06  2A                 	db	42
   468  00FE07  2A                 	db	42
   469  00FE08  2A                 	db	42
   470  00FE09  2A                 	db	42
   471  00FE0A  2A                 	db	42
   472  00FE0B  2A                 	db	42
   473  00FE0C  2A                 	db	42
   474  00FE0D  0A                 	db	10
   475  00FE0E  09                 	db	9
   476  00FE0F  2A                 	db	42
   477  00FE10  2A                 	db	42
   478  00FE11  2A                 	db	42
   479  00FE12  2A                 	db	42
   480  00FE13  20                 	db	32
   481  00FE14  4B                 	db	75	;'K'
   482  00FE15  69                 	db	105	;'i'
   483  00FE16  6C                 	db	108	;'l'
   484  00FE17  6C                 	db	108	;'l'
   485  00FE18  69                 	db	105	;'i'
   486  00FE19  66                 	db	102	;'f'
   487  00FE1A  69                 	db	105	;'i'
   488  00FE1B  73                 	db	115	;'s'
   489  00FE1C  68                 	db	104	;'h'
   490  00FE1D  20                 	db	32
   491  00FE1E  4C                 	db	76	;'L'
   492  00FE1F  69                 	db	105	;'i'
   493  00FE20  67                 	db	103	;'g'
   494  00FE21  68                 	db	104	;'h'
   495  00FE22  74                 	db	116	;'t'
   496  00FE23  20                 	db	32
   497  00FE24  20                 	db	32
   498  00FE25  2A                 	db	42
   499  00FE26  2A                 	db	42
   500  00FE27  2A                 	db	42
   501  00FE28  2A                 	db	42
   502  00FE29  0A                 	db	10
   503  00FE2A  09                 	db	9
   504  00FE2B  2A                 	db	42
   505  00FE2C  2A                 	db	42
   506  00FE2D  2A                 	db	42
   507  00FE2E  2A                 	db	42
   508  00FE2F  20                 	db	32
   509  00FE30  4D                 	db	77	;'M'
   510  00FE31  61                 	db	97	;'a'
   511  00FE32  64                 	db	100	;'d'
   512  00FE33  65                 	db	101	;'e'
   513  00FE34  20                 	db	32
   514  00FE35  62                 	db	98	;'b'
   515  00FE36  79                 	db	121	;'y'
   516  00FE37  20                 	db	32
   517  00FE38  40                 	db	64	;'@'
   518  00FE39  52                 	db	82	;'R'
   519  00FE3A  79                 	db	121	;'y'
   520  00FE3B  6F                 	db	111	;'o'
   521  00FE3C  6B                 	db	107	;'k'
   522  00FE3D  65                 	db	101	;'e'
   523  00FE3E  72                 	db	114	;'r'
   524  00FE3F  69                 	db	105	;'i'
   525  00FE40  20                 	db	32
   526  00FE41  2A                 	db	42
   527  00FE42  2A                 	db	42
   528  00FE43  2A                 	db	42
   529  00FE44  2A                 	db	42
   530  00FE45  0A                 	db	10
   531  00FE46  09                 	db	9
   532  00FE47  2A                 	db	42
   533  00FE48  2A                 	db	42
   534  00FE49  2A                 	db	42
   535  00FE4A  2A                 	db	42
   536  00FE4B  2A                 	db	42
   537  00FE4C  2A                 	db	42
   538  00FE4D  2A                 	db	42
   539  00FE4E  2A                 	db	42
   540  00FE4F  2A                 	db	42
   541  00FE50  2A                 	db	42
   542  00FE51  2A                 	db	42
   543  00FE52  2A                 	db	42
   544  00FE53  2A                 	db	42
   545  00FE54  2A                 	db	42
   546  00FE55  2A                 	db	42
   547  00FE56  2A                 	db	42
   548  00FE57  2A                 	db	42
   549  00FE58  2A                 	db	42
   550  00FE59  2A                 	db	42
   551  00FE5A  2A                 	db	42
   552  00FE5B  2A                 	db	42
   553  00FE5C  2A                 	db	42
   554  00FE5D  2A                 	db	42
   555  00FE5E  2A                 	db	42
   556  00FE5F  2A                 	db	42
   557  00FE60  2A                 	db	42
   558  00FE61  0A                 	db	10
   559  00FE62  0A                 	db	10
   560  00FE63  09                 	db	9
   561  00FE64  63                 	db	99	;'c'
   562  00FE65  6F                 	db	111	;'o'
   563  00FE66  6D                 	db	109	;'m'
   564  00FE67  6D                 	db	109	;'m'
   565  00FE68  61                 	db	97	;'a'
   566  00FE69  6E                 	db	110	;'n'
   567  00FE6A  64                 	db	100	;'d'
   568  00FE6B  20                 	db	32
   569  00FE6C  09                 	db	9
   570  00FE6D  6F                 	db	111	;'o'
   571  00FE6E  70                 	db	112	;'p'
   572  00FE6F  65                 	db	101	;'e'
   573  00FE70  6C                 	db	108	;'l'
   574  00FE71  61                 	db	97	;'a'
   575  00FE72  6E                 	db	110	;'n'
   576  00FE73  64                 	db	100	;'d'
   577  00FE74  31                 	db	49	;'1'
   578  00FE75  09                 	db	9
   579  00FE76  6F                 	db	111	;'o'
   580  00FE77  70                 	db	112	;'p'
   581  00FE78  65                 	db	101	;'e'
   582  00FE79  6C                 	db	108	;'l'
   583  00FE7A  61                 	db	97	;'a'
   584  00FE7B  6E                 	db	110	;'n'
   585  00FE7C  64                 	db	100	;'d'
   586  00FE7D  32                 	db	50	;'2'
   587  00FE7E  0A                 	db	10
   588  00FE7F  0A                 	db	10
   589  00FE80  09                 	db	9
   590  00FE81  70                 	db	112	;'p'
   591  00FE82  72                 	db	114	;'r'
   592  00FE83  69                 	db	105	;'i'
   593  00FE84  6E                 	db	110	;'n'
   594  00FE85  74                 	db	116	;'t'
   595  00FE86  5F                 	db	95	;'_'
   596  00FE87  74                 	db	116	;'t'
   597  00FE88  69                 	db	105	;'i'
   598  00FE89  6D                 	db	109	;'m'
   599  00FE8A  65                 	db	101	;'e'
   600  00FE8B  28                 	db	40
   601  00FE8C  74                 	db	116	;'t'
   602  00FE8D  29                 	db	41
   603  00FE8E  0A                 	db	10
   604  00FE8F  09                 	db	9
   605  00FE90  61                 	db	97	;'a'
   606  00FE91  64                 	db	100	;'d'
   607  00FE92  6A                 	db	106	;'j'
   608  00FE93  75                 	db	117	;'u'
   609  00FE94  73                 	db	115	;'s'
   610  00FE95  74                 	db	116	;'t'
   611  00FE96  5F                 	db	95	;'_'
   612  00FE97  74                 	db	116	;'t'
   613  00FE98  69                 	db	105	;'i'
   614  00FE99  6D                 	db	109	;'m'
   615  00FE9A  65                 	db	101	;'e'
   616  00FE9B  28                 	db	40
   617  00FE9C  61                 	db	97	;'a'
   618  00FE9D  74                 	db	116	;'t'
   619  00FE9E  29                 	db	41
   620  00FE9F  20                 	db	32
   621  00FEA0  5B                 	db	91	;'['
   622  00FEA1  68                 	db	104	;'h'
   623  00FEA2  61                 	db	97	;'a'
   624  00FEA3  6E                 	db	110	;'n'
   625  00FEA4  64                 	db	100	;'d'
   626  00FEA5  3A                 	db	58	;':'
   627  00FEA6  79                 	db	121	;'y'
   628  00FEA7  2C                 	db	44
   629  00FEA8  4D                 	db	77	;'M'
   630  00FEA9  2C                 	db	44
   631  00FEAA  64                 	db	100	;'d'
   632  00FEAB  2C                 	db	44
   633  00FEAC  68                 	db	104	;'h'
   634  00FEAD  2C                 	db	44
   635  00FEAE  6D                 	db	109	;'m'
   636  00FEAF  2C                 	db	44
   637  00FEB0  73                 	db	115	;'s'
   638  00FEB1  5D                 	db	93	;']'
   639  00FEB2  20                 	db	32
   640  00FEB3  5B                 	db	91	;'['
   641  00FEB4  76                 	db	118	;'v'
   642  00FEB5  61                 	db	97	;'a'
   643  00FEB6  6C                 	db	108	;'l'
   644  00FEB7  75                 	db	117	;'u'
   645  00FEB8  65                 	db	101	;'e'
   646  00FEB9  28                 	db	40
   647  00FEBA  64                 	db	100	;'d'
   648  00FEBB  65                 	db	101	;'e'
   649  00FEBC  63                 	db	99	;'c'
   650  00FEBD  69                 	db	105	;'i'
   651  00FEBE  6D                 	db	109	;'m'
   652  00FEBF  61                 	db	97	;'a'
   653  00FEC0  6C                 	db	108	;'l'
   654  00FEC1  29                 	db	41
   655  00FEC2  5D                 	db	93	;']'
   656  00FEC3  0A                 	db	10
   657  00FEC4  09                 	db	9
   658  00FEC5  70                 	db	112	;'p'
   659  00FEC6  77                 	db	119	;'w'
   660  00FEC7  6D                 	db	109	;'m'
   661  00FEC8  20                 	db	32
   662  00FEC9  5B                 	db	91	;'['
   663  00FECA  63                 	db	99	;'c'
   664  00FECB  6F                 	db	111	;'o'
   665  00FECC  6C                 	db	108	;'l'
   666  00FECD  6F                 	db	111	;'o'
   667  00FECE  72                 	db	114	;'r'
   668  00FECF  3A                 	db	58	;':'
   669  00FED0  52                 	db	82	;'R'
   670  00FED1  2C                 	db	44
   671  00FED2  47                 	db	71	;'G'
   672  00FED3  2C                 	db	44
   673  00FED4  42                 	db	66	;'B'
   674  00FED5  2C                 	db	44
   675  00FED6  57                 	db	87	;'W'
   676  00FED7  5D                 	db	93	;']'
   677  00FED8  20                 	db	32
   678  00FED9  5B                 	db	91	;'['
   679  00FEDA  76                 	db	118	;'v'
   680  00FEDB  61                 	db	97	;'a'
   681  00FEDC  6C                 	db	108	;'l'
   682  00FEDD  75                 	db	117	;'u'
   683  00FEDE  65                 	db	101	;'e'
   684  00FEDF  28                 	db	40
   685  00FEE0  25                 	db	37
   686  00FEE1  29                 	db	41
   687  00FEE2  3A                 	db	58	;':'
   688  00FEE3  30                 	db	48	;'0'
   689  00FEE4  7E                 	db	126
   690  00FEE5  31                 	db	49	;'1'
   691  00FEE6  30                 	db	48	;'0'
   692  00FEE7  30                 	db	48	;'0'
   693  00FEE8  5D                 	db	93	;']'
   694  00FEE9  0A                 	db	10
   695  00FEEA  09                 	db	9
   696  00FEEB  70                 	db	112	;'p'
   697  00FEEC  77                 	db	119	;'w'
   698  00FEED  6D                 	db	109	;'m'
   699  00FEEE  20                 	db	32
   700  00FEEF  63                 	db	99	;'c'
   701  00FEF0  6C                 	db	108	;'l'
   702  00FEF1  65                 	db	101	;'e'
   703  00FEF2  61                 	db	97	;'a'
   704  00FEF3  72                 	db	114	;'r'
   705  00FEF4  0A                 	db	10
   706  00FEF5  09                 	db	9
   707  00FEF6  73                 	db	115	;'s'
   708  00FEF7  65                 	db	101	;'e'
   709  00FEF8  74                 	db	116	;'t'
   710  00FEF9  20                 	db	32
   711  00FEFA  74                 	db	116	;'t'
   712  00FEFB  69                 	db	105	;'i'
   713  00FEFC  6D                 	db	109	;'m'
   714  00FEFD  65                 	db	101	;'e'
   715  00FEFE  5F                 	db	95	;'_'
   716  00FEFF  73                 	db	115	;'s'
   717  00FF00  79                 	db	121	;'y'
   718  00FF01  6E                 	db	110	;'n'
   719  00FF02  63                 	db	99	;'c'
   720  00FF03  5F                 	db	95	;'_'
   721  00FF04  6D                 	db	109	;'m'
   722  00FF05  6F                 	db	111	;'o'
   723  00FF06  64                 	db	100	;'d'
   724  00FF07  65                 	db	101	;'e'
   725  00FF08  28                 	db	40
   726  00FF09  73                 	db	115	;'s'
   727  00FF0A  79                 	db	121	;'y'
   728  00FF0B  6E                 	db	110	;'n'
   729  00FF0C  63                 	db	99	;'c'
   730  00FF0D  29                 	db	41
   731  00FF0E  0A                 	db	10
   732  00FF0F  09                 	db	9
   733  00FF10  73                 	db	115	;'s'
   734  00FF11  65                 	db	101	;'e'
   735  00FF12  74                 	db	116	;'t'
   736  00FF13  20                 	db	32
   737  00FF14  41                 	db	65	;'A'
   738  00FF15  44                 	db	68	;'D'
   739  00FF16  43                 	db	67	;'C'
   740  00FF17  5F                 	db	95	;'_'
   741  00FF18  6D                 	db	109	;'m'
   742  00FF19  6F                 	db	111	;'o'
   743  00FF1A  64                 	db	100	;'d'
   744  00FF1B  65                 	db	101	;'e'
   745  00FF1C  28                 	db	40
   746  00FF1D  61                 	db	97	;'a'
   747  00FF1E  64                 	db	100	;'d'
   748  00FF1F  63                 	db	99	;'c'
   749  00FF20  29                 	db	41
   750  00FF21  0A                 	db	10
   751  00FF22  09                 	db	9
   752  00FF23  52                 	db	82	;'R'
   753  00FF24  45                 	db	69	;'E'
   754  00FF25  53                 	db	83	;'S'
   755  00FF26  45                 	db	69	;'E'
   756  00FF27  54                 	db	84	;'T'
   757  00FF28  28                 	db	40
   758  00FF29  29                 	db	41
   759  00FF2A  3B                 	db	59	;';'
   760  00FF2B  0A                 	db	10
   761  00FF2C  00                 	db	0
   762  00FF2D                     STR_23:
   763                           
   764                           ; BSR set to: 0
   765  00FF2D  09                 	db	9
   766  00FF2E  32                 	db	50	;'2'
   767  00FF2F  30                 	db	48	;'0'
   768  00FF30  25                 	db	37
   769  00FF31  30                 	db	48	;'0'
   770  00FF32  32                 	db	50	;'2'
   771  00FF33  64                 	db	100	;'d'
   772  00FF34  2F                 	db	47
   773  00FF35  25                 	db	37
   774  00FF36  30                 	db	48	;'0'
   775  00FF37  32                 	db	50	;'2'
   776  00FF38  64                 	db	100	;'d'
   777  00FF39  2F                 	db	47
   778  00FF3A  25                 	db	37
   779  00FF3B  30                 	db	48	;'0'
   780  00FF3C  32                 	db	50	;'2'
   781  00FF3D  64                 	db	100	;'d'
   782  00FF3E  28                 	db	40
   783  00FF3F  25                 	db	37
   784  00FF40  73                 	db	115	;'s'
   785  00FF41  29                 	db	41
   786  00FF42  25                 	db	37
   787  00FF43  30                 	db	48	;'0'
   788  00FF44  32                 	db	50	;'2'
   789  00FF45  64                 	db	100	;'d'
   790  00FF46  3A                 	db	58	;':'
   791  00FF47  25                 	db	37
   792  00FF48  30                 	db	48	;'0'
   793  00FF49  32                 	db	50	;'2'
   794  00FF4A  64                 	db	100	;'d'
   795  00FF4B  2D                 	db	45
   796  00FF4C  25                 	db	37
   797  00FF4D  30                 	db	48	;'0'
   798  00FF4E  32                 	db	50	;'2'
   799  00FF4F  64                 	db	100	;'d'
   800  00FF50  0A                 	db	10
   801  00FF51  00                 	db	0
   802  00FF52                     STR_28:
   803                           
   804                           ; BSR set to: 0
   805  00FF52  61                 	db	97	;'a'
   806  00FF53  64                 	db	100	;'d'
   807  00FF54  6A                 	db	106	;'j'
   808  00FF55  75                 	db	117	;'u'
   809  00FF56  73                 	db	115	;'s'
   810  00FF57  74                 	db	116	;'t'
   811  00FF58  5F                 	db	95	;'_'
   812  00FF59  74                 	db	116	;'t'
   813  00FF5A  69                 	db	105	;'i'
   814  00FF5B  6D                 	db	109	;'m'
   815  00FF5C  65                 	db	101	;'e'
   816  00FF5D  00                 	db	0
   817  00FF5E                     STR_25:
   818                           
   819                           ; BSR set to: 0
   820  00FF5E  70                 	db	112	;'p'
   821  00FF5F  72                 	db	114	;'r'
   822  00FF60  69                 	db	105	;'i'
   823  00FF61  6E                 	db	110	;'n'
   824  00FF62  74                 	db	116	;'t'
   825  00FF63  5F                 	db	95	;'_'
   826  00FF64  74                 	db	116	;'t'
   827  00FF65  69                 	db	105	;'i'
   828  00FF66  6D                 	db	109	;'m'
   829  00FF67  65                 	db	101	;'e'
   830  00FF68  00                 	db	0
   831  00FF69                     STR_44:
   832                           
   833                           ; BSR set to: 0
   834  00FF69  52                 	db	82	;'R'
   835  00FF6A  45                 	db	69	;'E'
   836  00FF6B  53                 	db	83	;'S'
   837  00FF6C  45                 	db	69	;'E'
   838  00FF6D  54                 	db	84	;'T'
   839  00FF6E  28                 	db	40
   840  00FF6F  29                 	db	41
   841  00FF70  3B                 	db	59	;';'
   842  00FF71  00                 	db	0
   843  00FF72                     STR_45:
   844                           
   845                           ; BSR set to: 0
   846  00FF72  62                 	db	98	;'b'
   847  00FF73  6F                 	db	111	;'o'
   848  00FF74  6F                 	db	111	;'o'
   849  00FF75  74                 	db	116	;'t'
   850  00FF76  6C                 	db	108	;'l'
   851  00FF77  6F                 	db	111	;'o'
   852  00FF78  61                 	db	97	;'a'
   853  00FF79  64                 	db	100	;'d'
   854  00FF7A  00                 	db	0
   855  00FF7B                     STR_15:
   856                           
   857                           ; BSR set to: 0
   858  00FF7B  20                 	db	32
   859  00FF7C  20                 	db	32
   860  00FF7D  20                 	db	32
   861  00FF7E  20                 	db	32
   862  00FF7F  20                 	db	32
   863  00FF80  20                 	db	32
   864  00FF81  20                 	db	32
   865  00FF82  20                 	db	32
   866  00FF83  00                 	db	0
   867  00FF84                     STR_24:
   868                           
   869                           ; BSR set to: 0
   870  00FF84  09                 	db	9
   871  00FF85  65                 	db	101	;'e'
   872  00FF86  72                 	db	114	;'r'
   873  00FF87  72                 	db	114	;'r'
   874  00FF88  6F                 	db	111	;'o'
   875  00FF89  72                 	db	114	;'r'
   876  00FF8A  0A                 	db	10
   877  00FF8B  00                 	db	0
   878  00FF8C                     STR_61:
   879                           
   880                           ; BSR set to: 0
   881  00FF8C  28                 	db	40
   882  00FF8D  6E                 	db	110	;'n'
   883  00FF8E  75                 	db	117	;'u'
   884  00FF8F  6C                 	db	108	;'l'
   885  00FF90  6C                 	db	108	;'l'
   886  00FF91  29                 	db	41
   887  00FF92  00                 	db	0
   888  00FF93                     STR_40:
   889                           
   890                           ; BSR set to: 0
   891  00FF93  73                 	db	115	;'s'
   892  00FF94  65                 	db	101	;'e'
   893  00FF95  63                 	db	99	;'c'
   894  00FF96  6F                 	db	111	;'o'
   895  00FF97  6E                 	db	110	;'n'
   896  00FF98  64                 	db	100	;'d'
   897  00FF99  00                 	db	0
   898  00FF9A                     STR_38:
   899                           
   900                           ; BSR set to: 0
   901  00FF9A  6D                 	db	109	;'m'
   902  00FF9B  69                 	db	105	;'i'
   903  00FF9C  6E                 	db	110	;'n'
   904  00FF9D  75                 	db	117	;'u'
   905  00FF9E  74                 	db	116	;'t'
   906  00FF9F  65                 	db	101	;'e'
   907  00FFA0  00                 	db	0
   908  00FFA1                     STR_60:
   909                           
   910                           ; BSR set to: 0
   911  00FFA1  63                 	db	99	;'c'
   912  00FFA2  6C                 	db	108	;'l'
   913  00FFA3  65                 	db	101	;'e'
   914  00FFA4  61                 	db	97	;'a'
   915  00FFA5  72                 	db	114	;'r'
   916  00FFA6  00                 	db	0
   917  00FFA7                     STR_32:
   918                           
   919                           ; BSR set to: 0
   920  00FFA7  6D                 	db	109	;'m'
   921  00FFA8  6F                 	db	111	;'o'
   922  00FFA9  6E                 	db	110	;'n'
   923  00FFAA  74                 	db	116	;'t'
   924  00FFAB  68                 	db	104	;'h'
   925  00FFAC  00                 	db	0
   926  00FFAD                     STR_47:
   927                           
   928                           ; BSR set to: 0
   929  00FFAD  73                 	db	115	;'s'
   930  00FFAE  79                 	db	121	;'y'
   931  00FFAF  6E                 	db	110	;'n'
   932  00FFB0  63                 	db	99	;'c'
   933  00FFB1  00                 	db	0
   934  00FFB2                     STR_41:
   935                           
   936                           ; BSR set to: 0
   937  00FFB2  68                 	db	104	;'h'
   938  00FFB3  65                 	db	101	;'e'
   939  00FFB4  6C                 	db	108	;'l'
   940  00FFB5  70                 	db	112	;'p'
   941  00FFB6  00                 	db	0
   942  00FFB7                     STR_30:
   943                           
   944                           ; BSR set to: 0
   945  00FFB7  79                 	db	121	;'y'
   946  00FFB8  65                 	db	101	;'e'
   947  00FFB9  61                 	db	97	;'a'
   948  00FFBA  72                 	db	114	;'r'
   949  00FFBB  00                 	db	0
   950  00FFBC                     STR_36:
   951                           
   952                           ; BSR set to: 0
   953  00FFBC  68                 	db	104	;'h'
   954  00FFBD  6F                 	db	111	;'o'
   955  00FFBE  75                 	db	117	;'u'
   956  00FFBF  72                 	db	114	;'r'
   957  00FFC0  00                 	db	0
   958  00FFC1                     STR_1:
   959                           
   960                           ; BSR set to: 0
   961  00FFC1  25                 	db	37
   962  00FFC2  30                 	db	48	;'0'
   963  00FFC3  32                 	db	50	;'2'
   964  00FFC4  64                 	db	100	;'d'
   965  00FFC5  00                 	db	0
   966  00FFC6                     STR_49:
   967                           
   968                           ; BSR set to: 0
   969  00FFC6  41                 	db	65	;'A'
   970  00FFC7  44                 	db	68	;'D'
   971  00FFC8  43                 	db	67	;'C'
   972  00FFC9  00                 	db	0
   973  00FFCA                     STR_51:
   974                           
   975                           ; BSR set to: 0
   976  00FFCA  50                 	db	80	;'P'
   977  00FFCB  57                 	db	87	;'W'
   978  00FFCC  4D                 	db	77	;'M'
   979  00FFCD  00                 	db	0
   980  00FFCE                     STR_48:
   981                           
   982                           ; BSR set to: 0
   983  00FFCE  61                 	db	97	;'a'
   984  00FFCF  64                 	db	100	;'d'
   985  00FFD0  63                 	db	99	;'c'
   986  00FFD1  00                 	db	0
   987  00FFD2                     STR_50:
   988                           
   989                           ; BSR set to: 0
   990  00FFD2  70                 	db	112	;'p'
   991  00FFD3  77                 	db	119	;'w'
   992  00FFD4  6D                 	db	109	;'m'
   993  00FFD5  00                 	db	0
   994  00FFD6                     STR_46:
   995                           
   996                           ; BSR set to: 0
   997  00FFD6  73                 	db	115	;'s'
   998  00FFD7  65                 	db	101	;'e'
   999  00FFD8  74                 	db	116	;'t'
  1000  00FFD9  00                 	db	0
  1001  00FFDA                     STR_19:
  1002                           
  1003                           ; BSR set to: 0
  1004  00FFDA  08                 	db	8
  1005  00FFDB  20                 	db	32
  1006  00FFDC  08                 	db	8
  1007  00FFDD  00                 	db	0
  1008  00FFDE                     STR_34:
  1009                           
  1010                           ; BSR set to: 0
  1011  00FFDE  64                 	db	100	;'d'
  1012  00FFDF  61                 	db	97	;'a'
  1013  00FFE0  79                 	db	121	;'y'
  1014  00FFE1  00                 	db	0
  1015  00FFE2                     STR_27:
  1016                           
  1017                           ; BSR set to: 0
  1018  00FFE2  61                 	db	97	;'a'
  1019  00FFE3  74                 	db	116	;'t'
  1020  00FFE4  00                 	db	0
  1021  00FFE5                     STR_42:
  1022                           
  1023                           ; BSR set to: 0
  1024  00FFE5  3F                 	db	63	;'?'
  1025  00FFE6  00                 	db	0
  1026  00FFE7                     STR_57:
  1027                           
  1028                           ; BSR set to: 0
  1029  00FFE7  42                 	db	66	;'B'
  1030  00FFE8  00                 	db	0
  1031  00FFE9                     STR_55:
  1032                           
  1033                           ; BSR set to: 0
  1034  00FFE9  47                 	db	71	;'G'
  1035  00FFEA  00                 	db	0
  1036  00FFEB                     STR_53:
  1037                           
  1038                           ; BSR set to: 0
  1039  00FFEB  52                 	db	82	;'R'
  1040  00FFEC  00                 	db	0
  1041  00FFED                     STR_59:
  1042                           
  1043                           ; BSR set to: 0
  1044  00FFED  57                 	db	87	;'W'
  1045  00FFEE  00                 	db	0
  1046  00FFEF                     STR_56:
  1047                           
  1048                           ; BSR set to: 0
  1049  00FFEF  62                 	db	98	;'b'
  1050  00FFF0  00                 	db	0
  1051  00FFF1                     STR_54:
  1052                           
  1053                           ; BSR set to: 0
  1054  00FFF1  67                 	db	103	;'g'
  1055  00FFF2  00                 	db	0
  1056  00FFF3                     STR_58:
  1057                           
  1058                           ; BSR set to: 0
  1059  00FFF3  77                 	db	119	;'w'
  1060  00FFF4  00                 	db	0
  1061  00FFF5                     STR_39:
  1062                           
  1063                           ; BSR set to: 0
  1064  00FFF5  73                 	db	115	;'s'
  1065  00FFF6  00                 	db	0
  1066  00FFF7                     
  1067                           ; BSR set to: 0
  1068  00FFF7  28                 	db	40
  1069  00FFF8  00                 	db	0
  1070  00FFF9                     STR_9:
  1071                           
  1072                           ; BSR set to: 0
  1073  00FFF9  2D                 	db	45
  1074  00FFFA  00                 	db	0
  1075  00FFFB                     STR_4:
  1076                           
  1077                           ; BSR set to: 0
  1078  00FFFB  2F                 	db	47
  1079  00FFFC  00                 	db	0
  1080  00FFFD                     STR_7:
  1081                           
  1082                           ; BSR set to: 0
  1083  00FFFD  3A                 	db	58	;':'
  1084  00FFFE  00                 	db	0
  1085  0000                     
  1086                           ; #config settings
  1087  00FFFF  00                 	db	0	; dummy byte at the end
  1088  0000                     
  1089                           	psect	cinit
  1090  013C2E                     __pcinit:
  1091                           	opt stack 0
  1092  013C2E                     start_initialization:
  1093                           	opt stack 0
  1094  013C2E                     __initialization:
  1095                           	opt stack 0
  1096                           
  1097                           ; Clear objects allocated to BIGRAMl (1000 bytes)
  1098  013C2E  EE04  F069         	lfsr	0,__pbssBIGRAMl
  1099  013C32  EE13 F0E8          	lfsr	1,1000
  1100  013C36                     clear_0:
  1101  013C36  6AEE               	clrf	postinc0,c
  1102  013C38  50E5               	movf	postdec1,w,c
  1103  013C3A  50E1               	movf	fsr1l,w,c
  1104  013C3C  E1FC               	bnz	clear_0
  1105  013C3E  50E2               	movf	fsr1h,w,c
  1106  013C40  E1FA               	bnz	clear_0
  1107                           
  1108                           ; Clear objects allocated to BANK3 (250 bytes)
  1109  013C42  EE03  F000         	lfsr	0,__pbssBANK3
  1110  013C46  0EFA               	movlw	250
  1111  013C48                     clear_1:
  1112  013C48  6AEE               	clrf	postinc0,c
  1113  013C4A  06E8               	decf	wreg,f,c
  1114  013C4C  E1FD               	bnz	clear_1
  1115                           
  1116                           ; Clear objects allocated to BANK2 (178 bytes)
  1117  013C4E  EE02  F000         	lfsr	0,__pbssBANK2
  1118  013C52  0EB2               	movlw	178
  1119  013C54                     clear_2:
  1120  013C54  6AEE               	clrf	postinc0,c
  1121  013C56  06E8               	decf	wreg,f,c
  1122  013C58  E1FD               	bnz	clear_2
  1123                           
  1124                           ; Clear objects allocated to BANK1 (147 bytes)
  1125  013C5A  EE01  F000         	lfsr	0,__pbssBANK1
  1126  013C5E  0E93               	movlw	147
  1127  013C60                     clear_3:
  1128  013C60  6AEE               	clrf	postinc0,c
  1129  013C62  06E8               	decf	wreg,f,c
  1130  013C64  E1FD               	bnz	clear_3
  1131                           
  1132                           ; Clear objects allocated to BANK0 (42 bytes)
  1133  013C66  EE00  F0D5         	lfsr	0,__pbssBANK0
  1134  013C6A  0E2A               	movlw	42
  1135  013C6C                     clear_4:
  1136  013C6C  6AEE               	clrf	postinc0,c
  1137  013C6E  06E8               	decf	wreg,f,c
  1138  013C70  E1FD               	bnz	clear_4
  1139                           
  1140                           ; Clear objects allocated to COMRAM (45 bytes)
  1141  013C72  EE00  F001         	lfsr	0,__pbssCOMRAM
  1142  013C76  0E2D               	movlw	45
  1143  013C78                     clear_5:
  1144  013C78  6AEE               	clrf	postinc0,c
  1145  013C7A  06E8               	decf	wreg,f,c
  1146  013C7C  E1FD               	bnz	clear_5
  1147                           
  1148                           ; Initialize objects allocated to BANK1 (2 bytes)
  1149                           ; load TBLPTR registers with __pidataBANK1
  1150  013C7E  0E04               	movlw	low __pidataBANK1
  1151  013C80  6EF6               	movwf	tblptrl,c
  1152  013C82  0E10               	movlw	high __pidataBANK1
  1153  013C84  6EF7               	movwf	tblptrh,c
  1154  013C86  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1155  013C88  6EF8               	movwf	tblptru,c
  1156  013C8A  0009               	tblrd		*+	;fetch initializer
  1157  013C8C  CFF5 F197          	movff	tablat,__pdataBANK1
  1158  013C90  0009               	tblrd		*+	;fetch initializer
  1159  013C92  CFF5 F198          	movff	tablat,__pdataBANK1+1
  1160                           
  1161                           ; Initialize objects allocated to BANK0 (1 bytes)
  1162                           ; load TBLPTR registers with __pidataBANK0
  1163  013C96  0EF8               	movlw	low __pidataBANK0
  1164  013C98  6EF6               	movwf	tblptrl,c
  1165  013C9A  0E46               	movlw	high __pidataBANK0
  1166  013C9C  6EF7               	movwf	tblptrh,c
  1167  013C9E  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1168  013CA0  6EF8               	movwf	tblptru,c
  1169  013CA2  0009               	tblrd		*+	;fetch initializer
  1170  013CA4  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1171  013CA8                     end_of_initialization:
  1172                           	opt stack 0
  1173  013CA8                     __end_of__initialization:
  1174                           	opt stack 0
  1175  013CA8  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1176  013CAA  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1177  013CAC  0100               	movlb	0
  1178  013CAE  EFDB  F09E         	goto	_main	;jump to C main() function
  1179                           tblptru	equ	0xFF8
  1180                           tblptrh	equ	0xFF7
  1181                           tblptrl	equ	0xFF6
  1182                           tablat	equ	0xFF5
  1183                           postinc0	equ	0xFEE
  1184                           wreg	equ	0xFE8
  1185                           postdec1	equ	0xFE5
  1186                           fsr1h	equ	0xFE2
  1187                           fsr1l	equ	0xFE1
  1188                           
  1189                           	psect	bssCOMRAM
  1190  000001                     __pbssCOMRAM:
  1191                           	opt stack 0
  1192  000001                     _outPipes:
  1193                           	opt stack 0
  1194  000001                     	ds	9
  1195  00000A                     _inPipes:
  1196                           	opt stack 0
  1197  00000A                     	ds	6
  1198  000010                     _pBDTEntryIn:
  1199                           	opt stack 0
  1200  000010                     	ds	6
  1201  000016                     _ep_data_in:
  1202                           	opt stack 0
  1203  000016                     	ds	3
  1204  000019                     _pBDTEntryEP0OutCurrent:
  1205                           	opt stack 0
  1206  000019                     	ds	2
  1207  00001B                     _pBDTEntryEP0OutNext:
  1208                           	opt stack 0
  1209  00001B                     	ds	2
  1210  00001D                     _BothEP0OutUOWNsSet:
  1211                           	opt stack 0
  1212  00001D                     	ds	1
  1213  00001E                     _RemoteWakeup:
  1214                           	opt stack 0
  1215  00001E                     	ds	1
  1216  00001F                     _USBDeferINDataStagePackets:
  1217                           	opt stack 0
  1218  00001F                     	ds	1
  1219  000020                     _USBDeferOUTDataStagePackets:
  1220                           	opt stack 0
  1221  000020                     	ds	1
  1222  000021                     _USBDeferStatusStagePacket:
  1223                           	opt stack 0
  1224  000021                     	ds	1
  1225  000022                     _USBDeviceState:
  1226                           	opt stack 0
  1227  000022                     	ds	1
  1228  000023                     _USBStatusStageEnabledFlag1:
  1229                           	opt stack 0
  1230  000023                     	ds	1
  1231  000024                     _USBStatusStageEnabledFlag2:
  1232                           	opt stack 0
  1233  000024                     	ds	1
  1234  000025                     _USBStatusStageTimeoutCounter:
  1235                           	opt stack 0
  1236  000025                     	ds	1
  1237  000026                     _cdc_trf_state:
  1238                           	opt stack 0
  1239  000026                     	ds	1
  1240  000027                     _controlTransferState:
  1241                           	opt stack 0
  1242  000027                     	ds	1
  1243  000028                     _endpoint_number:
  1244                           	opt stack 0
  1245  000028                     	ds	1
  1246  000029                     _shortPacketStatus:
  1247                           	opt stack 0
  1248  000029                     	ds	1
  1249  00002A                     _USBAlternateInterface:
  1250                           	opt stack 0
  1251  00002A                     	ds	2
  1252  00002C                     _USBActiveConfiguration:
  1253                           	opt stack 0
  1254  00002C                     	ds	1
  1255  00002D                     _USTATcopy:
  1256                           	opt stack 0
  1257  00002D                     	ds	1
  1258                           tblptru	equ	0xFF8
  1259                           tblptrh	equ	0xFF7
  1260                           tblptrl	equ	0xFF6
  1261                           tablat	equ	0xFF5
  1262                           postinc0	equ	0xFEE
  1263                           wreg	equ	0xFE8
  1264                           postdec1	equ	0xFE5
  1265                           fsr1h	equ	0xFE2
  1266                           fsr1l	equ	0xFE1
  1267                           
  1268                           	psect	bssBANK0
  1269  0000D5                     __pbssBANK0:
  1270                           	opt stack 0
  1271  0000D5                     _pBDTEntryOut:
  1272                           	opt stack 0
  1273  0000D5                     	ds	6
  1274  0000DB                     _ep_data_out:
  1275                           	opt stack 0
  1276  0000DB                     	ds	3
  1277  0000DE                     _pCDCDst:
  1278                           	opt stack 0
  1279  0000DE                     	ds	3
  1280  0000E1                     _pCDCSrc:
  1281                           	opt stack 0
  1282  0000E1                     	ds	3
  1283  0000E4                     _CDCDataInHandle:
  1284                           	opt stack 0
  1285  0000E4                     	ds	2
  1286  0000E6                     _CDCDataOutHandle:
  1287                           	opt stack 0
  1288  0000E6                     	ds	2
  1289  0000E8                     _pDst:
  1290                           	opt stack 0
  1291  0000E8                     	ds	2
  1292  0000EA                     RTCC_loop@prev_halfsec:
  1293                           	opt stack 0
  1294  0000EA                     	ds	1
  1295  0000EB                     _ADC_flag:
  1296                           	opt stack 0
  1297  0000EB                     	ds	1
  1298  0000EC                     _USBBusIsSuspended:
  1299                           	opt stack 0
  1300  0000EC                     	ds	1
  1301  0000ED                     _cdc_mem_type:
  1302                           	opt stack 0
  1303  0000ED                     	ds	1
  1304  0000EE                     _cdc_rx_len:
  1305                           	opt stack 0
  1306  0000EE                     	ds	1
  1307  0000EF                     _cdc_tx_len:
  1308                           	opt stack 0
  1309  0000EF                     	ds	1
  1310  0000F0                     _control_signal_bitmap:
  1311                           	opt stack 0
  1312  0000F0                     	ds	1
  1313  0000F1                     _light_mode:
  1314                           	opt stack 0
  1315  0000F1                     	ds	1
  1316  0000F2                     _time_change_flag:
  1317                           	opt stack 0
  1318  0000F2                     	ds	1
  1319  0000F3                     epoch_to_caltime@year_cache:
  1320                           	opt stack 0
  1321  0000F3                     	ds	1
  1322  0000F4                     terminal_loop@command_init:
  1323                           	opt stack 0
  1324  0000F4                     	ds	1
  1325  0000F5                     terminal_loop@command:
  1326                           	opt stack 0
  1327  0000F5                     	ds	8
  1328  0000FD                     light_loop@_5680:
  1329                           	opt stack 0
  1330  0000FD                     	ds	1
  1331  0000FE                     light_loop@n:
  1332                           	opt stack 0
  1333  0000FE                     	ds	1
  1334                           tblptru	equ	0xFF8
  1335                           tblptrh	equ	0xFF7
  1336                           tblptrl	equ	0xFF6
  1337                           tablat	equ	0xFF5
  1338                           postinc0	equ	0xFEE
  1339                           wreg	equ	0xFE8
  1340                           postdec1	equ	0xFE5
  1341                           fsr1h	equ	0xFE2
  1342                           fsr1l	equ	0xFE1
  1343                           
  1344                           	psect	dataBANK0
  1345  0000FF                     __pdataBANK0:
  1346                           	opt stack 0
  1347  0000FF                     epoch_to_caltime@month_cache:
  1348                           	opt stack 0
  1349  0000FF                     	ds	1
  1350                           tblptru	equ	0xFF8
  1351                           tblptrh	equ	0xFF7
  1352                           tblptrl	equ	0xFF6
  1353                           tablat	equ	0xFF5
  1354                           postinc0	equ	0xFEE
  1355                           wreg	equ	0xFE8
  1356                           postdec1	equ	0xFE5
  1357                           fsr1h	equ	0xFE2
  1358                           fsr1l	equ	0xFE1
  1359                           
  1360                           	psect	bssBANK1
  1361  000100                     __pbssBANK1:
  1362                           	opt stack 0
  1363  000100                     _cdc_notice:
  1364                           	opt stack 0
  1365  000100                     	ds	10
  1366  00010A                     _BaudRateGen:
  1367                           	opt stack 0
  1368  00010A                     	ds	4
  1369  00010E                     _ms:
  1370                           	opt stack 0
  1371  00010E                     	ds	4
  1372  000112                     USBCBSendResume@delay_count:
  1373                           	opt stack 0
  1374  000112                     	ds	2
  1375  000114                     epoch_to_caltime@day_cache:
  1376                           	opt stack 0
  1377  000114                     	ds	2
  1378  000116                     millis_timer@cnt:
  1379                           	opt stack 0
  1380  000116                     	ds	2
  1381  000118                     terminal_loop@op0:
  1382                           	opt stack 0
  1383  000118                     	ds	25
  1384  000131                     terminal_loop@op1:
  1385                           	opt stack 0
  1386  000131                     	ds	25
  1387  00014A                     _now:
  1388                           	opt stack 0
  1389  00014A                     	ds	14
  1390  000158                     _dummy_encapsulated_cmd_response:
  1391                           	opt stack 0
  1392  000158                     	ds	8
  1393  000160                     _rx_buf:
  1394                           	opt stack 0
  1395  000160                     	ds	8
  1396  000168                     _tx_buf:
  1397                           	opt stack 0
  1398  000168                     	ds	8
  1399  000170                     _usb_rx:
  1400                           	opt stack 0
  1401  000170                     	ds	8
  1402  000178                     _usb_tx:
  1403                           	opt stack 0
  1404  000178                     	ds	8
  1405  000180                     _line_coding:
  1406                           	opt stack 0
  1407  000180                     	ds	7
  1408  000187                     _sw_B:
  1409                           	opt stack 0
  1410  000187                     	ds	4
  1411  00018B                     _sw_G:
  1412                           	opt stack 0
  1413  00018B                     	ds	4
  1414  00018F                     _sw_R:
  1415                           	opt stack 0
  1416  00018F                     	ds	4
  1417                           tblptru	equ	0xFF8
  1418                           tblptrh	equ	0xFF7
  1419                           tblptrl	equ	0xFF6
  1420                           tablat	equ	0xFF5
  1421                           postinc0	equ	0xFEE
  1422                           wreg	equ	0xFE8
  1423                           postdec1	equ	0xFE5
  1424                           fsr1h	equ	0xFE2
  1425                           fsr1l	equ	0xFE1
  1426                           
  1427                           	psect	dataBANK1
  1428  000197                     __pdataBANK1:
  1429                           	opt stack 0
  1430  000197                     I2C_LCD_SetCursor@F8633:
  1431                           	opt stack 0
  1432  000197                     	ds	2
  1433                           tblptru	equ	0xFF8
  1434                           tblptrh	equ	0xFF7
  1435                           tblptrl	equ	0xFF6
  1436                           tablat	equ	0xFF5
  1437                           postinc0	equ	0xFEE
  1438                           wreg	equ	0xFE8
  1439                           postdec1	equ	0xFE5
  1440                           fsr1h	equ	0xFE2
  1441                           fsr1l	equ	0xFE1
  1442                           
  1443                           	psect	bssBANK2
  1444  000200                     __pbssBANK2:
  1445                           	opt stack 0
  1446  000200                     _cdc_data_rx:
  1447                           	opt stack 0
  1448  000200                     	ds	64
  1449  000240                     _cdc_data_tx:
  1450                           	opt stack 0
  1451  000240                     	ds	64
  1452  000280                     terminal_loop@op2:
  1453                           	opt stack 0
  1454  000280                     	ds	25
  1455  000299                     terminal_loop@op3:
  1456                           	opt stack 0
  1457  000299                     	ds	25
  1458                           tblptru	equ	0xFF8
  1459                           tblptrh	equ	0xFF7
  1460                           tblptrl	equ	0xFF6
  1461                           tablat	equ	0xFF5
  1462                           postinc0	equ	0xFEE
  1463                           wreg	equ	0xFE8
  1464                           postdec1	equ	0xFE5
  1465                           fsr1h	equ	0xFE2
  1466                           fsr1l	equ	0xFE1
  1467                           
  1468                           	psect	bssBANK3
  1469  000300                     __pbssBANK3:
  1470                           	opt stack 0
  1471  000300                     main_init@rxbuf:
  1472                           	opt stack 0
  1473  000300                     	ds	250
  1474                           tblptru	equ	0xFF8
  1475                           tblptrh	equ	0xFF7
  1476                           tblptrl	equ	0xFF6
  1477                           tablat	equ	0xFF5
  1478                           postinc0	equ	0xFEE
  1479                           wreg	equ	0xFE8
  1480                           postdec1	equ	0xFE5
  1481                           fsr1h	equ	0xFE2
  1482                           fsr1l	equ	0xFE1
  1483                           
  1484                           	psect	bssBIGRAMl
  1485  000469                     __pbssBIGRAMl:
  1486                           	opt stack 0
  1487  000469                     main_init@txbuf:
  1488                           	opt stack 0
  1489  000469                     	ds	1000
  1490                           tblptru	equ	0xFF8
  1491                           tblptrh	equ	0xFF7
  1492                           tblptrl	equ	0xFF6
  1493                           tablat	equ	0xFF5
  1494                           postinc0	equ	0xFEE
  1495                           wreg	equ	0xFE8
  1496                           postdec1	equ	0xFE5
  1497                           fsr1h	equ	0xFE2
  1498                           fsr1l	equ	0xFE1
  1499                           
  1500                           	psect	cstackBANK4
  1501  000400                     __pcstackBANK4:
  1502                           	opt stack 0
  1503  000400                     terminal_loop@buf:
  1504                           	opt stack 0
  1505                           
  1506                           ; 100 bytes @ 0x0
  1507  000400                     	ds	100
  1508  000464                     _terminal_loop$6530:
  1509                           	opt stack 0
  1510                           
  1511                           ; 2 bytes @ 0x64
  1512  000464                     	ds	2
  1513  000466                     terminal_loop@i_4782:
  1514                           	opt stack 0
  1515                           
  1516                           ; 1 bytes @ 0x66
  1517  000466                     	ds	1
  1518  000467                     terminal_loop@ascii:
  1519                           	opt stack 0
  1520                           
  1521                           ; 1 bytes @ 0x67
  1522  000467                     	ds	1
  1523  000468                     terminal_loop@i:
  1524                           	opt stack 0
  1525                           
  1526                           ; 1 bytes @ 0x68
  1527  000468                     	ds	1
  1528                           tblptru	equ	0xFF8
  1529                           tblptrh	equ	0xFF7
  1530                           tblptrl	equ	0xFF6
  1531                           tablat	equ	0xFF5
  1532                           postinc0	equ	0xFEE
  1533                           wreg	equ	0xFE8
  1534                           postdec1	equ	0xFE5
  1535                           fsr1h	equ	0xFE2
  1536                           fsr1l	equ	0xFE1
  1537                           
  1538                           	psect	cstackBANK1
  1539  000193                     __pcstackBANK1:
  1540                           	opt stack 0
  1541  000193                     terminal_loop@tx:
  1542                           	opt stack 0
  1543                           
  1544                           ; 2 bytes @ 0x0
  1545  000193                     	ds	2
  1546  000195                     terminal_loop@rx:
  1547                           	opt stack 0
  1548                           
  1549                           ; 2 bytes @ 0x2
  1550  000195                     	ds	2
  1551                           tblptru	equ	0xFF8
  1552                           tblptrh	equ	0xFF7
  1553                           tblptrl	equ	0xFF6
  1554                           tablat	equ	0xFF5
  1555                           postinc0	equ	0xFEE
  1556                           wreg	equ	0xFE8
  1557                           postdec1	equ	0xFE5
  1558                           fsr1h	equ	0xFE2
  1559                           fsr1l	equ	0xFE1
  1560                           
  1561                           	psect	cstackBANK0
  1562  000060                     __pcstackBANK0:
  1563                           	opt stack 0
  1564  000060                     ??_isdigit:
  1565  000060                     ??_timer0_init:
  1566  000060                     ??_timer3_init:
  1567  000060                     ??_x_to_d:
  1568  000060                     ?_ringbuf_num:
  1569                           	opt stack 0
  1570  000060                     ?_strcmp:
  1571                           	opt stack 0
  1572  000060                     ?_USBTransferOnePacket:
  1573                           	opt stack 0
  1574  000060                     ?___wmul:
  1575                           	opt stack 0
  1576  000060                     ?___awmod:
  1577                           	opt stack 0
  1578  000060                     ?___llmod:
  1579                           	opt stack 0
  1580  000060                     USBTransferOnePacket@dir:
  1581                           	opt stack 0
  1582  000060                     _is_usb_available$2052:
  1583                           	opt stack 0
  1584  000060                     timer1_init@clock_select:
  1585                           	opt stack 0
  1586  000060                     ADC_init@p_ref:
  1587                           	opt stack 0
  1588  000060                     PWM_init@PR:
  1589                           	opt stack 0
  1590  000060                     putUSBUSART@data:
  1591                           	opt stack 0
  1592  000060                     ringbuf_init@rb:
  1593                           	opt stack 0
  1594  000060                     ringbuf_num@rb:
  1595                           	opt stack 0
  1596  000060                     ringbuf_delete@rb:
  1597                           	opt stack 0
  1598  000060                     ___wmul@multiplier:
  1599                           	opt stack 0
  1600  000060                     ___awmod@dividend:
  1601                           	opt stack 0
  1602  000060                     memset@p1:
  1603                           	opt stack 0
  1604  000060                     strcmp@s1:
  1605                           	opt stack 0
  1606  000060                     ___llmod@dividend:
  1607                           	opt stack 0
  1608                           
  1609                           ; 4 bytes @ 0x0
  1610  000060                     	ds	1
  1611  000061                     ??_timer1_init:
  1612  000061                     timer0_init@prescaler:
  1613                           	opt stack 0
  1614  000061                     timer3_init@prescaler:
  1615                           	opt stack 0
  1616  000061                     x_to_d@hex:
  1617                           	opt stack 0
  1618  000061                     _isdigit$5972:
  1619                           	opt stack 0
  1620  000061                     USBTransferOnePacket@data:
  1621                           	opt stack 0
  1622                           
  1623                           ; 2 bytes @ 0x1
  1624  000061                     	ds	1
  1625  000062                     ??_ringbuf_num:
  1626  000062                     putUSBUSART@length:
  1627                           	opt stack 0
  1628  000062                     timer1_init@prescaler:
  1629                           	opt stack 0
  1630  000062                     isdigit@c:
  1631                           	opt stack 0
  1632  000062                     ringbuf_init@internal_buf:
  1633                           	opt stack 0
  1634  000062                     RTCC_to_caltime@tm:
  1635                           	opt stack 0
  1636  000062                     ___wmul@multiplicand:
  1637                           	opt stack 0
  1638  000062                     ___awmod@divisor:
  1639                           	opt stack 0
  1640  000062                     memset@c:
  1641                           	opt stack 0
  1642  000062                     strcmp@s2:
  1643                           	opt stack 0
  1644                           
  1645                           ; 2 bytes @ 0x2
  1646  000062                     	ds	1
  1647  000063                     USBTransferOnePacket@len:
  1648                           	opt stack 0
  1649                           
  1650                           ; 1 bytes @ 0x3
  1651  000063                     	ds	1
  1652  000064                     ??_strcmp:
  1653  000064                     USBTransferOnePacket@ep:
  1654                           	opt stack 0
  1655  000064                     RTCC_to_caltime@dumy:
  1656                           	opt stack 0
  1657  000064                     ___awmod@counter:
  1658                           	opt stack 0
  1659  000064                     ringbuf_init@bufsize:
  1660                           	opt stack 0
  1661  000064                     ___wmul@product:
  1662                           	opt stack 0
  1663  000064                     memset@n:
  1664                           	opt stack 0
  1665  000064                     ___llmod@divisor:
  1666                           	opt stack 0
  1667                           
  1668                           ; 4 bytes @ 0x4
  1669  000064                     	ds	1
  1670  000065                     ___awmod@sign:
  1671                           	opt stack 0
  1672  000065                     strcmp@r:
  1673                           	opt stack 0
  1674  000065                     USBTransferOnePacket@handle:
  1675                           	opt stack 0
  1676                           
  1677                           ; 2 bytes @ 0x5
  1678  000065                     	ds	1
  1679  000066                     ?_atoi:
  1680                           	opt stack 0
  1681  000066                     ?___lwdiv:
  1682                           	opt stack 0
  1683  000066                     month_length@month:
  1684                           	opt stack 0
  1685  000066                     atoi@s:
  1686                           	opt stack 0
  1687  000066                     ___lwdiv@dividend:
  1688                           	opt stack 0
  1689  000066                     memset@p:
  1690                           	opt stack 0
  1691                           
  1692                           ; 2 bytes @ 0x6
  1693  000066                     	ds	1
  1694  000067                     ??_CDCTxService:
  1695  000067                     ??_month_length:
  1696  000067                     getsUSBUSART@buffer:
  1697                           	opt stack 0
  1698                           
  1699                           ; 2 bytes @ 0x7
  1700  000067                     	ds	1
  1701  000068                     ??_atoi:
  1702  000068                     USBDeviceInit@i:
  1703                           	opt stack 0
  1704  000068                     ___llmod@counter:
  1705                           	opt stack 0
  1706  000068                     _CDCTxService$1934:
  1707                           	opt stack 0
  1708  000068                     ringbuf_put@rb:
  1709                           	opt stack 0
  1710  000068                     ringbuf_pop@rb:
  1711                           	opt stack 0
  1712  000068                     ringbuf_backspace@rb:
  1713                           	opt stack 0
  1714  000068                     ___lwdiv@divisor:
  1715                           	opt stack 0
  1716                           
  1717                           ; 2 bytes @ 0x8
  1718  000068                     	ds	1
  1719  000069                     getsUSBUSART@len:
  1720                           	opt stack 0
  1721                           
  1722                           ; 1 bytes @ 0x9
  1723  000069                     	ds	1
  1724  00006A                     ??_ringbuf_pop:
  1725  00006A                     ??_getsUSBUSART:
  1726  00006A                     ??_ringbuf_backspace:
  1727  00006A                     CDCTxService@i:
  1728                           	opt stack 0
  1729  00006A                     ringbuf_put@asciicode:
  1730                           	opt stack 0
  1731  00006A                     atoi@sign:
  1732                           	opt stack 0
  1733  00006A                     ___lwdiv@counter:
  1734                           	opt stack 0
  1735                           
  1736                           ; 1 bytes @ 0xA
  1737  00006A                     	ds	1
  1738  00006B                     ??_ringbuf_put:
  1739  00006B                     CDCTxService@byte_to_send:
  1740                           	opt stack 0
  1741  00006B                     month_length@year:
  1742                           	opt stack 0
  1743  00006B                     _getsUSBUSART$1886:
  1744                           	opt stack 0
  1745  00006B                     atoi@a:
  1746                           	opt stack 0
  1747  00006B                     ___lwdiv@quotient:
  1748                           	opt stack 0
  1749                           
  1750                           ; 2 bytes @ 0xB
  1751  00006B                     	ds	1
  1752  00006C                     ?___lmul:
  1753                           	opt stack 0
  1754  00006C                     put_string_usb@s:
  1755                           	opt stack 0
  1756  00006C                     ___lmul@multiplier:
  1757                           	opt stack 0
  1758                           
  1759                           ; 4 bytes @ 0xC
  1760  00006C                     	ds	1
  1761  00006D                     ?_get_string_usb:
  1762                           	opt stack 0
  1763  00006D                     ?___awdiv:
  1764                           	opt stack 0
  1765  00006D                     ?___lwmod:
  1766                           	opt stack 0
  1767  00006D                     get_string_usb@s:
  1768                           	opt stack 0
  1769  00006D                     ___awdiv@dividend:
  1770                           	opt stack 0
  1771  00006D                     ___lwmod@dividend:
  1772                           	opt stack 0
  1773                           
  1774                           ; 2 bytes @ 0xD
  1775  00006D                     	ds	1
  1776  00006E                     ringbuf_pop@ret:
  1777                           	opt stack 0
  1778  00006E                     put_string_usb@len:
  1779                           	opt stack 0
  1780                           
  1781                           ; 2 bytes @ 0xE
  1782  00006E                     	ds	1
  1783  00006F                     get_string_usb@len:
  1784                           	opt stack 0
  1785  00006F                     tx_sends@asciicode:
  1786                           	opt stack 0
  1787  00006F                     ringbuf_put_str@rb:
  1788                           	opt stack 0
  1789  00006F                     ___awdiv@divisor:
  1790                           	opt stack 0
  1791  00006F                     ___lwmod@divisor:
  1792                           	opt stack 0
  1793                           
  1794                           ; 2 bytes @ 0xF
  1795  00006F                     	ds	1
  1796  000070                     ___lmul@multiplicand:
  1797                           	opt stack 0
  1798                           
  1799                           ; 4 bytes @ 0x10
  1800  000070                     	ds	1
  1801  000071                     ??_get_string_usb:
  1802  000071                     ___awdiv@counter:
  1803                           	opt stack 0
  1804  000071                     ___lwmod@counter:
  1805                           	opt stack 0
  1806  000071                     ringbuf_put_str@str:
  1807                           	opt stack 0
  1808                           
  1809                           ; 2 bytes @ 0x11
  1810  000071                     	ds	1
  1811  000072                     ?_sprintf:
  1812                           	opt stack 0
  1813  000072                     ___awdiv@sign:
  1814                           	opt stack 0
  1815  000072                     get_string_usb@rx_len:
  1816                           	opt stack 0
  1817  000072                     ringbuf_put_num@rb:
  1818                           	opt stack 0
  1819  000072                     sprintf@sp:
  1820                           	opt stack 0
  1821                           
  1822                           ; 2 bytes @ 0x12
  1823  000072                     	ds	1
  1824  000073                     ___awdiv@quotient:
  1825                           	opt stack 0
  1826                           
  1827                           ; 2 bytes @ 0x13
  1828  000073                     	ds	1
  1829  000074                     USB_loop@rx_len:
  1830                           	opt stack 0
  1831  000074                     ringbuf_put_num@value:
  1832                           	opt stack 0
  1833  000074                     sprintf@f:
  1834                           	opt stack 0
  1835  000074                     ___lmul@product:
  1836                           	opt stack 0
  1837                           
  1838                           ; 4 bytes @ 0x14
  1839  000074                     	ds	1
  1840  000075                     d_to_x@dec:
  1841                           	opt stack 0
  1842  000075                     PWM_set@value:
  1843                           	opt stack 0
  1844                           
  1845                           ; 2 bytes @ 0x15
  1846  000075                     	ds	1
  1847  000076                     USB_loop@data:
  1848                           	opt stack 0
  1849  000076                     ringbuf_put_num@digits:
  1850                           	opt stack 0
  1851  000076                     caltime_to_RTCC@tm:
  1852                           	opt stack 0
  1853                           
  1854                           ; 2 bytes @ 0x16
  1855  000076                     	ds	1
  1856  000077                     ??_PWM_set:
  1857  000077                     ringbuf_put_num@i:
  1858                           	opt stack 0
  1859                           
  1860                           ; 1 bytes @ 0x17
  1861  000077                     	ds	1
  1862  000078                     ?___lldiv:
  1863                           	opt stack 0
  1864  000078                     ringbuf_put_num@temp:
  1865                           	opt stack 0
  1866  000078                     caltime_to_epoch@tm:
  1867                           	opt stack 0
  1868  000078                     ___lldiv@dividend:
  1869                           	opt stack 0
  1870                           
  1871                           ; 4 bytes @ 0x18
  1872  000078                     	ds	1
  1873  000079                     PWM_set@color:
  1874                           	opt stack 0
  1875                           
  1876                           ; 1 bytes @ 0x19
  1877  000079                     	ds	1
  1878  00007A                     ??_caltime_to_epoch:
  1879                           
  1880                           ; 0 bytes @ 0x1A
  1881  00007A                     	ds	2
  1882  00007C                     ___lldiv@divisor:
  1883                           	opt stack 0
  1884                           
  1885                           ; 4 bytes @ 0x1C
  1886  00007C                     	ds	2
  1887  00007E                     caltime_to_epoch@year:
  1888                           	opt stack 0
  1889                           
  1890                           ; 1 bytes @ 0x1E
  1891  00007E                     	ds	1
  1892  00007F                     caltime_to_epoch@month_3939:
  1893                           	opt stack 0
  1894                           
  1895                           ; 1 bytes @ 0x1F
  1896  00007F                     	ds	1
  1897  000080                     caltime_to_epoch@epoch:
  1898                           	opt stack 0
  1899  000080                     ___lldiv@quotient:
  1900                           	opt stack 0
  1901                           
  1902                           ; 4 bytes @ 0x20
  1903  000080                     	ds	4
  1904  000084                     ??_sprintf:
  1905  000084                     caltime_to_epoch@month:
  1906                           	opt stack 0
  1907  000084                     ___lldiv@counter:
  1908                           	opt stack 0
  1909                           
  1910                           ; 1 bytes @ 0x24
  1911  000084                     	ds	1
  1912  000085                     ?_get_quot_rem:
  1913                           	opt stack 0
  1914  000085                     get_quot_rem@quot:
  1915                           	opt stack 0
  1916  000085                     RTCC_from_RTCC@tm:
  1917                           	opt stack 0
  1918                           
  1919                           ; 2 bytes @ 0x25
  1920  000085                     	ds	2
  1921  000087                     ??_light_loop:
  1922  000087                     get_quot_rem@div:
  1923                           	opt stack 0
  1924                           
  1925                           ; 1 bytes @ 0x27
  1926  000087                     	ds	1
  1927  000088                     sprintf@prec:
  1928                           	opt stack 0
  1929                           
  1930                           ; 1 bytes @ 0x28
  1931  000088                     	ds	1
  1932  000089                     sprintf@ap:
  1933                           	opt stack 0
  1934  000089                     get_quot_rem@num:
  1935                           	opt stack 0
  1936                           
  1937                           ; 4 bytes @ 0x29
  1938  000089                     	ds	2
  1939  00008B                     light_loop@value:
  1940                           	opt stack 0
  1941  00008B                     sprintf@cp:
  1942                           	opt stack 0
  1943                           
  1944                           ; 2 bytes @ 0x2B
  1945  00008B                     	ds	1
  1946  00008C                     light_loop@value_5681:
  1947                           	opt stack 0
  1948                           
  1949                           ; 1 bytes @ 0x2C
  1950  00008C                     	ds	1
  1951  00008D                     epoch_to_caltime@tm:
  1952                           	opt stack 0
  1953  00008D                     sprintf@val:
  1954                           	opt stack 0
  1955  00008D                     light_loop@temp:
  1956                           	opt stack 0
  1957                           
  1958                           ; 4 bytes @ 0x2D
  1959  00008D                     	ds	2
  1960  00008F                     ??_epoch_to_caltime:
  1961  00008F                     sprintf@len:
  1962                           	opt stack 0
  1963                           
  1964                           ; 2 bytes @ 0x2F
  1965  00008F                     	ds	2
  1966  000091                     light_loop@i:
  1967                           	opt stack 0
  1968  000091                     sprintf@flag:
  1969                           	opt stack 0
  1970  000091                     epoch_to_caltime@day_since_epoch:
  1971                           	opt stack 0
  1972                           
  1973                           ; 2 bytes @ 0x31
  1974  000091                     	ds	1
  1975  000092                     sprintf@c:
  1976                           	opt stack 0
  1977                           
  1978                           ; 1 bytes @ 0x32
  1979  000092                     	ds	1
  1980  000093                     epoch_to_caltime@day:
  1981                           	opt stack 0
  1982  000093                     sprintf@width:
  1983                           	opt stack 0
  1984                           
  1985                           ; 2 bytes @ 0x33
  1986  000093                     	ds	2
  1987  000095                     epoch_to_caltime@year:
  1988                           	opt stack 0
  1989  000095                     print_time@tx:
  1990                           	opt stack 0
  1991                           
  1992                           ; 2 bytes @ 0x35
  1993  000095                     	ds	1
  1994  000096                     epoch_to_caltime@month:
  1995                           	opt stack 0
  1996                           
  1997                           ; 1 bytes @ 0x36
  1998  000096                     	ds	1
  1999  000097                     epoch_to_caltime@num:
  2000                           	opt stack 0
  2001  000097                     print_time@str:
  2002                           	opt stack 0
  2003                           
  2004                           ; 30 bytes @ 0x37
  2005  000097                     	ds	4
  2006  00009B                     RTCC_from_caltime@tm:
  2007                           	opt stack 0
  2008  00009B                     RTCC_from_epoch@tm:
  2009                           	opt stack 0
  2010                           
  2011                           ; 2 bytes @ 0x3B
  2012  00009B                     	ds	2
  2013  00009D                     
  2014                           ; 0 bytes @ 0x3D
  2015  00009D                     	ds	24
  2016  0000B5                     terminal_at_hand@tx:
  2017                           	opt stack 0
  2018                           
  2019                           ; 2 bytes @ 0x55
  2020  0000B5                     	ds	2
  2021  0000B7                     terminal_at_hand@hand:
  2022                           	opt stack 0
  2023                           
  2024                           ; 2 bytes @ 0x57
  2025  0000B7                     	ds	2
  2026  0000B9                     terminal_at_hand@min:
  2027                           	opt stack 0
  2028                           
  2029                           ; 1 bytes @ 0x59
  2030  0000B9                     	ds	1
  2031  0000BA                     terminal_at_hand@max:
  2032                           	opt stack 0
  2033                           
  2034                           ; 1 bytes @ 0x5A
  2035  0000BA                     	ds	1
  2036  0000BB                     terminal_at_hand@value:
  2037                           	opt stack 0
  2038                           
  2039                           ; 1 bytes @ 0x5B
  2040  0000BB                     	ds	1
  2041  0000BC                     terminal_time@tx:
  2042                           	opt stack 0
  2043                           
  2044                           ; 2 bytes @ 0x5C
  2045  0000BC                     	ds	2
  2046  0000BE                     terminal_time@op0:
  2047                           	opt stack 0
  2048                           
  2049                           ; 2 bytes @ 0x5E
  2050  0000BE                     	ds	2
  2051  0000C0                     terminal_time@op1:
  2052                           	opt stack 0
  2053                           
  2054                           ; 2 bytes @ 0x60
  2055  0000C0                     	ds	2
  2056  0000C2                     terminal_time@op2:
  2057                           	opt stack 0
  2058                           
  2059                           ; 2 bytes @ 0x62
  2060  0000C2                     	ds	2
  2061  0000C4                     _terminal_time$6531:
  2062                           	opt stack 0
  2063                           
  2064                           ; 1 bytes @ 0x64
  2065  0000C4                     	ds	1
  2066  0000C5                     terminal_operation@tx:
  2067                           	opt stack 0
  2068                           
  2069                           ; 2 bytes @ 0x65
  2070  0000C5                     	ds	2
  2071  0000C7                     terminal_operation@op0:
  2072                           	opt stack 0
  2073                           
  2074                           ; 2 bytes @ 0x67
  2075  0000C7                     	ds	2
  2076  0000C9                     terminal_operation@op1:
  2077                           	opt stack 0
  2078                           
  2079                           ; 2 bytes @ 0x69
  2080  0000C9                     	ds	2
  2081  0000CB                     terminal_operation@op2:
  2082                           	opt stack 0
  2083                           
  2084                           ; 2 bytes @ 0x6B
  2085  0000CB                     	ds	2
  2086  0000CD                     terminal_operation@op3:
  2087                           	opt stack 0
  2088                           
  2089                           ; 2 bytes @ 0x6D
  2090  0000CD                     	ds	2
  2091  0000CF                     _terminal_operation$6532:
  2092                           	opt stack 0
  2093                           
  2094                           ; 2 bytes @ 0x6F
  2095  0000CF                     	ds	2
  2096  0000D1                     _terminal_operation$6533:
  2097                           	opt stack 0
  2098                           
  2099                           ; 2 bytes @ 0x71
  2100  0000D1                     	ds	2
  2101  0000D3                     ??_terminal_loop:
  2102                           
  2103                           ; 0 bytes @ 0x73
  2104  0000D3                     	ds	2
  2105  0000D5                     tblptru	equ	0xFF8
  2106                           tblptrh	equ	0xFF7
  2107                           tblptrl	equ	0xFF6
  2108                           tablat	equ	0xFF5
  2109                           postinc0	equ	0xFEE
  2110                           wreg	equ	0xFE8
  2111                           postdec1	equ	0xFE5
  2112                           fsr1h	equ	0xFE2
  2113                           fsr1l	equ	0xFE1
  2114                           
  2115                           ; 0 bytes @ 0x75
  2116                           
  2117                           	psect	cstackCOMRAM
  2118  00002E                     __pcstackCOMRAM:
  2119                           	opt stack 0
  2120  00002E                     ??_USBStdGetDscHandler:
  2121  00002E                     ??_USBStdGetStatusHandler:
  2122  00002E                     ?i2_USBTransferOnePacket:
  2123                           	opt stack 0
  2124  00002E                     USBConfigureEndpoint@direction:
  2125                           	opt stack 0
  2126  00002E                     USBCtrlTrfTxService@byteToSend:
  2127                           	opt stack 0
  2128  00002E                     USBCtrlTrfRxService@i:
  2129                           	opt stack 0
  2130  00002E                     i2USBTransferOnePacket@dir:
  2131                           	opt stack 0
  2132  00002E                     button_timer_interrupt@bt:
  2133                           	opt stack 0
  2134  00002E                     i2memset@p1:
  2135                           	opt stack 0
  2136                           
  2137                           ; 2 bytes @ 0x0
  2138  00002E                     	ds	1
  2139  00002F                     ??_USBConfigureEndpoint:
  2140  00002F                     USBCtrlTrfRxService@byteToRead:
  2141                           	opt stack 0
  2142  00002F                     USBCtrlTrfInHandler@lastDTS:
  2143                           	opt stack 0
  2144  00002F                     USBStdGetStatusHandler@p:
  2145                           	opt stack 0
  2146  00002F                     i2USBTransferOnePacket@data:
  2147                           	opt stack 0
  2148                           
  2149                           ; 2 bytes @ 0x1
  2150  00002F                     	ds	1
  2151  000030                     button_timer_interrupt@sw_value:
  2152                           	opt stack 0
  2153  000030                     i2memset@c:
  2154                           	opt stack 0
  2155                           
  2156                           ; 2 bytes @ 0x2
  2157  000030                     	ds	1
  2158  000031                     i2USBTransferOnePacket@len:
  2159                           	opt stack 0
  2160                           
  2161                           ; 1 bytes @ 0x3
  2162  000031                     	ds	1
  2163  000032                     i2USBTransferOnePacket@ep:
  2164                           	opt stack 0
  2165  000032                     i2memset@n:
  2166                           	opt stack 0
  2167                           
  2168                           ; 2 bytes @ 0x4
  2169  000032                     	ds	1
  2170  000033                     USBConfigureEndpoint@EPNum:
  2171                           	opt stack 0
  2172  000033                     i2USBTransferOnePacket@handle:
  2173                           	opt stack 0
  2174                           
  2175                           ; 2 bytes @ 0x5
  2176  000033                     	ds	1
  2177  000034                     USBConfigureEndpoint@handle:
  2178                           	opt stack 0
  2179  000034                     i2memset@p:
  2180                           	opt stack 0
  2181                           
  2182                           ; 2 bytes @ 0x6
  2183  000034                     	ds	2
  2184  000036                     USBEnableEndpoint@options:
  2185                           	opt stack 0
  2186  000036                     i2USBDeviceInit@i:
  2187                           	opt stack 0
  2188                           
  2189                           ; 1 bytes @ 0x8
  2190  000036                     	ds	1
  2191  000037                     USBEnableEndpoint@p:
  2192                           	opt stack 0
  2193                           
  2194                           ; 2 bytes @ 0x9
  2195  000037                     	ds	2
  2196  000039                     USBEnableEndpoint@ep:
  2197                           	opt stack 0
  2198                           
  2199                           ; 1 bytes @ 0xB
  2200  000039                     	ds	1
  2201  00003A                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2202                           	opt stack 0
  2203                           
  2204                           ; 2 bytes @ 0xC
  2205  00003A                     	ds	2
  2206  00003C                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2207                           	opt stack 0
  2208                           
  2209                           ; 2 bytes @ 0xE
  2210  00003C                     	ds	2
  2211  00003E                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2212                           	opt stack 0
  2213                           
  2214                           ; 2 bytes @ 0x10
  2215  00003E                     	ds	2
  2216  000040                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2217                           
  2218                           ; 0 bytes @ 0x12
  2219  000040                     	ds	2
  2220  000042                     ??_USBStdFeatureReqHandler:
  2221  000042                     USBStdSetCfgHandler@i:
  2222                           	opt stack 0
  2223                           
  2224                           ; 1 bytes @ 0x14
  2225  000042                     	ds	1
  2226  000043                     USBStdFeatureReqHandler@pUEP:
  2227                           	opt stack 0
  2228                           
  2229                           ; 2 bytes @ 0x15
  2230  000043                     	ds	2
  2231  000045                     USBStdFeatureReqHandler@current_ep_data:
  2232                           	opt stack 0
  2233                           
  2234                           ; 1 bytes @ 0x17
  2235  000045                     	ds	1
  2236  000046                     USBStdFeatureReqHandler@p:
  2237                           	opt stack 0
  2238                           
  2239                           ; 2 bytes @ 0x18
  2240  000046                     	ds	2
  2241  000048                     ??_USBCtrlEPService:
  2242  000048                     
  2243                           ; 0 bytes @ 0x1A
  2244  000048                     	ds	2
  2245  00004A                     USBCtrlEPService@setup_cnt:
  2246                           	opt stack 0
  2247                           
  2248                           ; 1 bytes @ 0x1C
  2249  00004A                     	ds	1
  2250  00004B                     USBDeviceTasks@i:
  2251                           	opt stack 0
  2252                           
  2253                           ; 1 bytes @ 0x1D
  2254  00004B                     	ds	1
  2255  00004C                     ??_ISR:
  2256                           
  2257                           ; 0 bytes @ 0x1E
  2258  00004C                     	ds	15
  2259                           tblptru	equ	0xFF8
  2260                           tblptrh	equ	0xFF7
  2261                           tblptrl	equ	0xFF6
  2262                           tablat	equ	0xFF5
  2263                           postinc0	equ	0xFEE
  2264                           wreg	equ	0xFE8
  2265                           postdec1	equ	0xFE5
  2266                           fsr1h	equ	0xFE2
  2267                           fsr1l	equ	0xFE1
  2268                           
  2269 ;;
  2270 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2271 ;;
  2272 ;; *************** function _main *****************
  2273 ;; Defined at:
  2274 ;;		line 308 in file "PIC18F27J53-killifish_light06.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  2  1455[None  ] int 
  2281 ;; Registers used:
  2282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2292 ;;Total ram usage:        0 bytes
  2293 ;; Hardware stack levels required when called:   20
  2294 ;; This function calls:
  2295 ;;		_RTCC_from_RTCC
  2296 ;;		_RTCC_from_epoch
  2297 ;;		_RTCC_loop
  2298 ;;		_USB_loop
  2299 ;;		_light_loop
  2300 ;;		_main_init
  2301 ;;		_terminal_loop
  2302 ;; This function is called by:
  2303 ;;		Startup code after reset
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           	psect	text0
  2308  013DB6                     __ptext0:
  2309                           	opt stack 0
  2310  013DB6                     _main:
  2311                           	opt stack 11
  2312                           
  2313                           ;PIC18F27J53-killifish_light06.c: 309: main_init();
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;incstack = 0
  2317  013DB6  EC61  F09C         	call	_main_init	;wreg free
  2318                           
  2319                           ;PIC18F27J53-killifish_light06.c: 311: RTCC_from_RTCC(&now);
  2320  013DBA  0E4A               	movlw	low _now
  2321  013DBC  0100               	movlb	0	; () banked
  2322  013DBE  6F85               	movwf	RTCC_from_RTCC@tm& (0+255),b
  2323  013DC0  0E01               	movlw	high _now
  2324  013DC2  0100               	movlb	0	; () banked
  2325  013DC4  6F86               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  2326  013DC6  EC58  F0A3         	call	_RTCC_from_RTCC	;wreg free
  2327                           
  2328                           ;PIC18F27J53-killifish_light06.c: 312: if (now.DD == 0) {
  2329  013DCA  0101               	movlb	1	; () banked
  2330  013DCC  5152               	movf	(_now+8)& (0+255),w,b
  2331  013DCE  A4D8               	btfss	status,2,c
  2332  013DD0  D011               	goto	l9949
  2333                           
  2334                           ; BSR set to: 1
  2335                           ;PIC18F27J53-killifish_light06.c: 313: now.epoch = 0;
  2336  013DD2  0E00               	movlw	0
  2337  013DD4  0101               	movlb	1	; () banked
  2338  013DD6  6F4A               	movwf	_now& (0+255),b
  2339  013DD8  0E00               	movlw	0
  2340  013DDA  6F4B               	movwf	(_now+1)& (0+255),b
  2341  013DDC  0E00               	movlw	0
  2342  013DDE  6F4C               	movwf	(_now+2)& (0+255),b
  2343  013DE0  0E00               	movlw	0
  2344  013DE2  6F4D               	movwf	(_now+3)& (0+255),b
  2345                           
  2346                           ; BSR set to: 1
  2347                           ;PIC18F27J53-killifish_light06.c: 314: RTCC_from_epoch(&now);
  2348  013DE4  0E4A               	movlw	low _now
  2349  013DE6  0100               	movlb	0	; () banked
  2350  013DE8  6F9B               	movwf	RTCC_from_epoch@tm& (0+255),b
  2351  013DEA  0E01               	movlw	high _now
  2352  013DEC  0100               	movlb	0	; () banked
  2353  013DEE  6F9C               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  2354  013DF0  EC65  F0A3         	call	_RTCC_from_epoch	;wreg free
  2355  013DF4                     l9949:
  2356                           
  2357                           ;PIC18F27J53-killifish_light06.c: 318: INTCONbits.GIE = 0;
  2358  013DF4  9EF2               	bcf	intcon,7,c	;volatile
  2359                           
  2360                           ;PIC18F27J53-killifish_light06.c: 319: USB_loop();
  2361  013DF6  EC8A  F09D         	call	_USB_loop	;wreg free
  2362                           
  2363                           ;PIC18F27J53-killifish_light06.c: 320: INTCONbits.GIE = 1;
  2364  013DFA  8EF2               	bsf	intcon,7,c	;volatile
  2365                           
  2366                           ;PIC18F27J53-killifish_light06.c: 322: INTCONbits.GIE = 0;
  2367  013DFC  9EF2               	bcf	intcon,7,c	;volatile
  2368                           
  2369                           ;PIC18F27J53-killifish_light06.c: 323: RTCC_loop();
  2370  013DFE  EC72  F0A1         	call	_RTCC_loop	;wreg free
  2371                           
  2372                           ;PIC18F27J53-killifish_light06.c: 324: INTCONbits.GIE = 1;
  2373  013E02  8EF2               	bsf	intcon,7,c	;volatile
  2374                           
  2375                           ;PIC18F27J53-killifish_light06.c: 326: INTCONbits.GIE = 0;
  2376  013E04  9EF2               	bcf	intcon,7,c	;volatile
  2377                           
  2378                           ;PIC18F27J53-killifish_light06.c: 327: terminal_loop(&usb_tx, &usb_rx);
  2379  013E06  0E78               	movlw	low _usb_tx
  2380  013E08  0101               	movlb	1	; () banked
  2381  013E0A  6F93               	movwf	terminal_loop@tx& (0+255),b
  2382  013E0C  0E01               	movlw	high _usb_tx
  2383  013E0E  0101               	movlb	1	; () banked
  2384  013E10  6F94               	movwf	(terminal_loop@tx+1)& (0+255),b
  2385  013E12  0E70               	movlw	low _usb_rx
  2386  013E14  0101               	movlb	1	; () banked
  2387  013E16  6F95               	movwf	terminal_loop@rx& (0+255),b
  2388  013E18  0E01               	movlw	high _usb_rx
  2389  013E1A  0101               	movlb	1	; () banked
  2390  013E1C  6F96               	movwf	(terminal_loop@rx+1)& (0+255),b
  2391  013E1E  EC56  F086         	call	_terminal_loop	;wreg free
  2392                           
  2393                           ;PIC18F27J53-killifish_light06.c: 328: INTCONbits.GIE = 1;
  2394  013E22  8EF2               	bsf	intcon,7,c	;volatile
  2395                           
  2396                           ;PIC18F27J53-killifish_light06.c: 330: INTCONbits.GIE = 0;
  2397  013E24  9EF2               	bcf	intcon,7,c	;volatile
  2398                           
  2399                           ;PIC18F27J53-killifish_light06.c: 331: light_loop();
  2400  013E26  ECD7  F08B         	call	_light_loop	;wreg free
  2401                           
  2402                           ;PIC18F27J53-killifish_light06.c: 332: INTCONbits.GIE = 1;
  2403  013E2A  8EF2               	bsf	intcon,7,c	;volatile
  2404  013E2C  D7E3               	goto	l9949
  2405  013E2E                     __end_of_main:
  2406                           	opt stack 0
  2407                           tblptru	equ	0xFF8
  2408                           tblptrh	equ	0xFF7
  2409                           tblptrl	equ	0xFF6
  2410                           tablat	equ	0xFF5
  2411                           intcon	equ	0xFF2
  2412                           postinc0	equ	0xFEE
  2413                           wreg	equ	0xFE8
  2414                           postdec1	equ	0xFE5
  2415                           fsr1h	equ	0xFE2
  2416                           fsr1l	equ	0xFE1
  2417                           status	equ	0xFD8
  2418                           
  2419 ;; *************** function _terminal_loop *****************
  2420 ;; Defined at:
  2421 ;;		line 8 in file "../My_library/My_terminal.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  2424 ;;		 -> usb_tx(8), 
  2425 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
  2426 ;;		 -> usb_rx(8), 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;  i               1  102[BANK4 ] unsigned char 
  2429 ;;  i               1  104[BANK4 ] unsigned char 
  2430 ;;  ascii           1  103[BANK4 ] unsigned char 
  2431 ;;  buf           100    0[BANK4 ] unsigned char [100]
  2432 ;; Return value:  Size  Location     Type
  2433 ;;		None               void
  2434 ;; Registers used:
  2435 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2441 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2442 ;;      Locals:         0       0       0       0       0     105       0       0       0       0       0       0       
      +0       0       0       0
  2443 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2444 ;;      Totals:         0       2       4       0       0     105       0       0       0       0       0       0       
      +0       0       0       0
  2445 ;;Total ram usage:      111 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; Hardware stack levels required when called:   19
  2448 ;; This function calls:
  2449 ;;		_ringbuf_backspace
  2450 ;;		_ringbuf_delete
  2451 ;;		_ringbuf_init
  2452 ;;		_ringbuf_num
  2453 ;;		_ringbuf_pop
  2454 ;;		_ringbuf_put
  2455 ;;		_ringbuf_put_num
  2456 ;;		_ringbuf_put_str
  2457 ;;		_terminal_operation
  2458 ;; This function is called by:
  2459 ;;		_main
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text1
  2464  010CAC                     __ptext1:
  2465                           	opt stack 0
  2466  010CAC                     _terminal_loop:
  2467                           	opt stack 11
  2468                           
  2469                           ;My_terminal.c: 9: static ringbuf_t command;
  2470                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  2471                           ;My_terminal.c: 11: if (command_init == 0) {
  2472                           
  2473                           ;incstack = 0
  2474  010CAC  0100               	movlb	0	; () banked
  2475  010CAE  51F4               	movf	terminal_loop@command_init& (0+255),w,b
  2476  010CB0  0100               	movlb	0	; () banked
  2477  010CB2  A4D8               	btfss	status,2,c
  2478  010CB4  D016               	goto	l9589
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;My_terminal.c: 12: command_init = 1;
  2482  010CB6  0E01               	movlw	1
  2483  010CB8  0100               	movlb	0	; () banked
  2484  010CBA  6FF4               	movwf	terminal_loop@command_init& (0+255),b
  2485                           
  2486                           ; BSR set to: 0
  2487                           ;My_terminal.c: 13: char buf[100];
  2488                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  2489  010CBC  0EF5               	movlw	low terminal_loop@command
  2490  010CBE  0100               	movlb	0	; () banked
  2491  010CC0  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2492  010CC2  0E00               	movlw	high terminal_loop@command
  2493  010CC4  0100               	movlb	0	; () banked
  2494  010CC6  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2495  010CC8  0E00               	movlw	low terminal_loop@buf
  2496  010CCA  0100               	movlb	0	; () banked
  2497  010CCC  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2498  010CCE  0E04               	movlw	high terminal_loop@buf
  2499  010CD0  0100               	movlb	0	; () banked
  2500  010CD2  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2501  010CD4  0E00               	movlw	0
  2502  010CD6  0100               	movlb	0	; () banked
  2503  010CD8  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2504  010CDA  0E64               	movlw	100
  2505  010CDC  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2506  010CDE  ECB5  F0A0         	call	_ringbuf_init	;wreg free
  2507  010CE2                     l9589:
  2508                           
  2509                           ;My_terminal.c: 15: }
  2510                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  2511  010CE2  C195  F060         	movff	terminal_loop@rx,ringbuf_num@rb
  2512  010CE6  C196  F061         	movff	terminal_loop@rx+1,ringbuf_num@rb+1
  2513  010CEA  EC6B  F093         	call	_ringbuf_num	;wreg free
  2514  010CEE  0100               	movlb	0	; () banked
  2515  010CF0  5160               	movf	?_ringbuf_num& (0+255),w,b
  2516  010CF2  0100               	movlb	0	; () banked
  2517  010CF4  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  2518  010CF6  B4D8               	btfsc	status,2,c
  2519  010CF8  0012               	return	
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  2523  010CFA  C195  F068         	movff	terminal_loop@rx,ringbuf_pop@rb
  2524  010CFE  C196  F069         	movff	terminal_loop@rx+1,ringbuf_pop@rb+1
  2525  010D02  EC1C  F098         	call	_ringbuf_pop	;wreg free
  2526  010D06  0104               	movlb	4	; () banked
  2527  010D08  6F67               	movwf	terminal_loop@ascii& (0+255),b
  2528                           
  2529                           ;My_terminal.c: 18: switch (ascii) {
  2530  010D0A  D176               	goto	l9653
  2531  010D0C                     l9593:
  2532                           
  2533                           ; BSR set to: 4
  2534                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  2535  010D0C  0EF5               	movlw	low terminal_loop@command
  2536  010D0E  0100               	movlb	0	; () banked
  2537  010D10  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2538  010D12  0E00               	movlw	high terminal_loop@command
  2539  010D14  0100               	movlb	0	; () banked
  2540  010D16  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2541  010D18  0E00               	movlw	0
  2542  010D1A  0100               	movlb	0	; () banked
  2543  010D1C  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2544  010D1E  EC78  F096         	call	_ringbuf_put	;wreg free
  2545                           
  2546                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  2547  010D22  C193  F068         	movff	terminal_loop@tx,ringbuf_put@rb
  2548  010D26  C194  F069         	movff	terminal_loop@tx+1,ringbuf_put@rb+1
  2549  010D2A  0E09               	movlw	9
  2550  010D2C  0100               	movlb	0	; () banked
  2551  010D2E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2552  010D30  EC78  F096         	call	_ringbuf_put	;wreg free
  2553                           
  2554                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2555  010D34  0EF5               	movlw	low terminal_loop@command
  2556  010D36  0100               	movlb	0	; () banked
  2557  010D38  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2558  010D3A  0E00               	movlw	high terminal_loop@command
  2559  010D3C  0100               	movlb	0	; () banked
  2560  010D3E  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2561  010D40  EC6B  F093         	call	_ringbuf_num	;wreg free
  2562  010D44  0EFF               	movlw	255
  2563  010D46  0100               	movlb	0	; () banked
  2564  010D48  2560               	addwf	?_ringbuf_num& (0+255),w,b
  2565  010D4A  0104               	movlb	4	; () banked
  2566  010D4C  6F64               	movwf	_terminal_loop$6530& (0+255),b
  2567  010D4E  0EFF               	movlw	255
  2568  010D50  0100               	movlb	0	; () banked
  2569  010D52  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  2570  010D54  0104               	movlb	4	; () banked
  2571  010D56  6F65               	movwf	(_terminal_loop$6530+1)& (0+255),b
  2572                           
  2573                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2574  010D58  C193  F072         	movff	terminal_loop@tx,ringbuf_put_num@rb
  2575  010D5C  C194  F073         	movff	terminal_loop@tx+1,ringbuf_put_num@rb+1
  2576  010D60  C464  F074         	movff	_terminal_loop$6530,ringbuf_put_num@value
  2577  010D64  C465  F075         	movff	_terminal_loop$6530+1,ringbuf_put_num@value+1
  2578  010D68  0E02               	movlw	2
  2579  010D6A  0100               	movlb	0	; () banked
  2580  010D6C  6F76               	movwf	ringbuf_put_num@digits& (0+255),b
  2581  010D6E  EC59  F09E         	call	_ringbuf_put_num	;wreg free
  2582                           
  2583                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  2584  010D72  C193  F068         	movff	terminal_loop@tx,ringbuf_put@rb
  2585  010D76  C194  F069         	movff	terminal_loop@tx+1,ringbuf_put@rb+1
  2586  010D7A  0E0A               	movlw	10
  2587  010D7C  0100               	movlb	0	; () banked
  2588  010D7E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2589  010D80  EC78  F096         	call	_ringbuf_put	;wreg free
  2590                           
  2591                           ;My_terminal.c: 24: static char op0[25];
  2592                           ;My_terminal.c: 25: static char op1[25];
  2593                           ;My_terminal.c: 26: static char op2[25];
  2594                           ;My_terminal.c: 27: static char op3[25];
  2595                           ;My_terminal.c: 28: uint8_t i;
  2596                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  2597  010D84  0E00               	movlw	0
  2598  010D86  0104               	movlb	4	; () banked
  2599  010D88  6F68               	movwf	terminal_loop@i& (0+255),b
  2600  010D8A  D002               	goto	l9599
  2601  010D8C                     l9597:
  2602                           
  2603                           ; BSR set to: 4
  2604  010D8C  0104               	movlb	4	; () banked
  2605  010D8E  2B68               	incf	terminal_loop@i& (0+255),f,b
  2606  010D90                     l9599:
  2607                           
  2608                           ; BSR set to: 4
  2609  010D90  0EF5               	movlw	low terminal_loop@command
  2610  010D92  0100               	movlb	0	; () banked
  2611  010D94  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2612  010D96  0E00               	movlw	high terminal_loop@command
  2613  010D98  0100               	movlb	0	; () banked
  2614  010D9A  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2615  010D9C  EC1C  F098         	call	_ringbuf_pop	;wreg free
  2616  010DA0  0100               	movlb	0	; () banked
  2617  010DA2  6FD3               	movwf	??_terminal_loop& (0+255),b
  2618  010DA4  0104               	movlb	4	; () banked
  2619  010DA6  5168               	movf	terminal_loop@i& (0+255),w,b
  2620  010DA8  0D01               	mullw	1
  2621  010DAA  0E18               	movlw	low terminal_loop@op0
  2622  010DAC  24F3               	addwf	prodl,w,c
  2623  010DAE  6ED9               	movwf	fsr2l,c
  2624  010DB0  0E01               	movlw	high terminal_loop@op0
  2625  010DB2  20F4               	addwfc	prodh,w,c
  2626  010DB4  6EDA               	movwf	fsr2h,c
  2627  010DB6  C0D3  FFDF         	movff	??_terminal_loop,indf2
  2628  010DBA  50DF               	movf	indf2,w,c
  2629  010DBC  A4D8               	btfss	status,2,c
  2630  010DBE  D7E6               	goto	l9597
  2631                           
  2632                           ; BSR set to: 4
  2633                           ;My_terminal.c: 30: op0[i] = '\0';
  2634                           
  2635                           ; BSR set to: 4
  2636  010DC0  0104               	movlb	4	; () banked
  2637  010DC2  5168               	movf	terminal_loop@i& (0+255),w,b
  2638  010DC4  0D01               	mullw	1
  2639  010DC6  0E18               	movlw	low terminal_loop@op0
  2640  010DC8  24F3               	addwf	prodl,w,c
  2641  010DCA  6ED9               	movwf	fsr2l,c
  2642  010DCC  0E01               	movlw	high terminal_loop@op0
  2643  010DCE  20F4               	addwfc	prodh,w,c
  2644  010DD0  6EDA               	movwf	fsr2h,c
  2645  010DD2  0E00               	movlw	0
  2646  010DD4  6EDF               	movwf	indf2,c
  2647                           
  2648                           ; BSR set to: 4
  2649                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  2650  010DD6  0E00               	movlw	0
  2651  010DD8  0104               	movlb	4	; () banked
  2652  010DDA  6F68               	movwf	terminal_loop@i& (0+255),b
  2653  010DDC  D002               	goto	l9607
  2654  010DDE                     l9605:
  2655                           
  2656                           ; BSR set to: 4
  2657  010DDE  0104               	movlb	4	; () banked
  2658  010DE0  2B68               	incf	terminal_loop@i& (0+255),f,b
  2659  010DE2                     l9607:
  2660                           
  2661                           ; BSR set to: 4
  2662  010DE2  0EF5               	movlw	low terminal_loop@command
  2663  010DE4  0100               	movlb	0	; () banked
  2664  010DE6  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2665  010DE8  0E00               	movlw	high terminal_loop@command
  2666  010DEA  0100               	movlb	0	; () banked
  2667  010DEC  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2668  010DEE  EC1C  F098         	call	_ringbuf_pop	;wreg free
  2669  010DF2  0100               	movlb	0	; () banked
  2670  010DF4  6FD3               	movwf	??_terminal_loop& (0+255),b
  2671  010DF6  0104               	movlb	4	; () banked
  2672  010DF8  5168               	movf	terminal_loop@i& (0+255),w,b
  2673  010DFA  0D01               	mullw	1
  2674  010DFC  0E31               	movlw	low terminal_loop@op1
  2675  010DFE  24F3               	addwf	prodl,w,c
  2676  010E00  6ED9               	movwf	fsr2l,c
  2677  010E02  0E01               	movlw	high terminal_loop@op1
  2678  010E04  20F4               	addwfc	prodh,w,c
  2679  010E06  6EDA               	movwf	fsr2h,c
  2680  010E08  C0D3  FFDF         	movff	??_terminal_loop,indf2
  2681  010E0C  50DF               	movf	indf2,w,c
  2682  010E0E  A4D8               	btfss	status,2,c
  2683  010E10  D7E6               	goto	l9605
  2684                           
  2685                           ; BSR set to: 4
  2686                           ;My_terminal.c: 32: op1[i] = '\0';
  2687                           
  2688                           ; BSR set to: 4
  2689  010E12  0104               	movlb	4	; () banked
  2690  010E14  5168               	movf	terminal_loop@i& (0+255),w,b
  2691  010E16  0D01               	mullw	1
  2692  010E18  0E31               	movlw	low terminal_loop@op1
  2693  010E1A  24F3               	addwf	prodl,w,c
  2694  010E1C  6ED9               	movwf	fsr2l,c
  2695  010E1E  0E01               	movlw	high terminal_loop@op1
  2696  010E20  20F4               	addwfc	prodh,w,c
  2697  010E22  6EDA               	movwf	fsr2h,c
  2698  010E24  0E00               	movlw	0
  2699  010E26  6EDF               	movwf	indf2,c
  2700                           
  2701                           ; BSR set to: 4
  2702                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  2703  010E28  0E00               	movlw	0
  2704  010E2A  0104               	movlb	4	; () banked
  2705  010E2C  6F68               	movwf	terminal_loop@i& (0+255),b
  2706  010E2E  D002               	goto	l9615
  2707  010E30                     l9613:
  2708                           
  2709                           ; BSR set to: 4
  2710  010E30  0104               	movlb	4	; () banked
  2711  010E32  2B68               	incf	terminal_loop@i& (0+255),f,b
  2712  010E34                     l9615:
  2713                           
  2714                           ; BSR set to: 4
  2715  010E34  0EF5               	movlw	low terminal_loop@command
  2716  010E36  0100               	movlb	0	; () banked
  2717  010E38  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2718  010E3A  0E00               	movlw	high terminal_loop@command
  2719  010E3C  0100               	movlb	0	; () banked
  2720  010E3E  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2721  010E40  EC1C  F098         	call	_ringbuf_pop	;wreg free
  2722  010E44  0100               	movlb	0	; () banked
  2723  010E46  6FD3               	movwf	??_terminal_loop& (0+255),b
  2724  010E48  0104               	movlb	4	; () banked
  2725  010E4A  5168               	movf	terminal_loop@i& (0+255),w,b
  2726  010E4C  0D01               	mullw	1
  2727  010E4E  0E80               	movlw	low terminal_loop@op2
  2728  010E50  24F3               	addwf	prodl,w,c
  2729  010E52  6ED9               	movwf	fsr2l,c
  2730  010E54  0E02               	movlw	high terminal_loop@op2
  2731  010E56  20F4               	addwfc	prodh,w,c
  2732  010E58  6EDA               	movwf	fsr2h,c
  2733  010E5A  C0D3  FFDF         	movff	??_terminal_loop,indf2
  2734  010E5E  50DF               	movf	indf2,w,c
  2735  010E60  A4D8               	btfss	status,2,c
  2736  010E62  D7E6               	goto	l9613
  2737                           
  2738                           ; BSR set to: 4
  2739                           ;My_terminal.c: 34: op2[i] = '\0';
  2740                           
  2741                           ; BSR set to: 4
  2742  010E64  0104               	movlb	4	; () banked
  2743  010E66  5168               	movf	terminal_loop@i& (0+255),w,b
  2744  010E68  0D01               	mullw	1
  2745  010E6A  0E80               	movlw	low terminal_loop@op2
  2746  010E6C  24F3               	addwf	prodl,w,c
  2747  010E6E  6ED9               	movwf	fsr2l,c
  2748  010E70  0E02               	movlw	high terminal_loop@op2
  2749  010E72  20F4               	addwfc	prodh,w,c
  2750  010E74  6EDA               	movwf	fsr2h,c
  2751  010E76  0E00               	movlw	0
  2752  010E78  6EDF               	movwf	indf2,c
  2753                           
  2754                           ; BSR set to: 4
  2755                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  2756  010E7A  0E00               	movlw	0
  2757  010E7C  0104               	movlb	4	; () banked
  2758  010E7E  6F68               	movwf	terminal_loop@i& (0+255),b
  2759  010E80  D002               	goto	l9623
  2760  010E82                     l9621:
  2761                           
  2762                           ; BSR set to: 4
  2763  010E82  0104               	movlb	4	; () banked
  2764  010E84  2B68               	incf	terminal_loop@i& (0+255),f,b
  2765  010E86                     l9623:
  2766                           
  2767                           ; BSR set to: 4
  2768  010E86  0EF5               	movlw	low terminal_loop@command
  2769  010E88  0100               	movlb	0	; () banked
  2770  010E8A  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2771  010E8C  0E00               	movlw	high terminal_loop@command
  2772  010E8E  0100               	movlb	0	; () banked
  2773  010E90  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2774  010E92  EC1C  F098         	call	_ringbuf_pop	;wreg free
  2775  010E96  0100               	movlb	0	; () banked
  2776  010E98  6FD3               	movwf	??_terminal_loop& (0+255),b
  2777  010E9A  0104               	movlb	4	; () banked
  2778  010E9C  5168               	movf	terminal_loop@i& (0+255),w,b
  2779  010E9E  0D01               	mullw	1
  2780  010EA0  0E99               	movlw	low terminal_loop@op3
  2781  010EA2  24F3               	addwf	prodl,w,c
  2782  010EA4  6ED9               	movwf	fsr2l,c
  2783  010EA6  0E02               	movlw	high terminal_loop@op3
  2784  010EA8  20F4               	addwfc	prodh,w,c
  2785  010EAA  6EDA               	movwf	fsr2h,c
  2786  010EAC  C0D3  FFDF         	movff	??_terminal_loop,indf2
  2787  010EB0  50DF               	movf	indf2,w,c
  2788  010EB2  A4D8               	btfss	status,2,c
  2789  010EB4  D7E6               	goto	l9621
  2790                           
  2791                           ; BSR set to: 4
  2792                           ;My_terminal.c: 36: op3[i] = '\0';
  2793                           
  2794                           ; BSR set to: 4
  2795  010EB6  0104               	movlb	4	; () banked
  2796  010EB8  5168               	movf	terminal_loop@i& (0+255),w,b
  2797  010EBA  0D01               	mullw	1
  2798  010EBC  0E99               	movlw	low terminal_loop@op3
  2799  010EBE  24F3               	addwf	prodl,w,c
  2800  010EC0  6ED9               	movwf	fsr2l,c
  2801  010EC2  0E02               	movlw	high terminal_loop@op3
  2802  010EC4  20F4               	addwfc	prodh,w,c
  2803  010EC6  6EDA               	movwf	fsr2h,c
  2804  010EC8  0E00               	movlw	0
  2805  010ECA  6EDF               	movwf	indf2,c
  2806                           
  2807                           ; BSR set to: 4
  2808                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  2809  010ECC  C193  F0C5         	movff	terminal_loop@tx,terminal_operation@tx
  2810  010ED0  C194  F0C6         	movff	terminal_loop@tx+1,terminal_operation@tx+1
  2811  010ED4  0E18               	movlw	low terminal_loop@op0
  2812  010ED6  0100               	movlb	0	; () banked
  2813  010ED8  6FC7               	movwf	terminal_operation@op0& (0+255),b
  2814  010EDA  0E01               	movlw	high terminal_loop@op0
  2815  010EDC  0100               	movlb	0	; () banked
  2816  010EDE  6FC8               	movwf	(terminal_operation@op0+1)& (0+255),b
  2817  010EE0  0E31               	movlw	low terminal_loop@op1
  2818  010EE2  0100               	movlb	0	; () banked
  2819  010EE4  6FC9               	movwf	terminal_operation@op1& (0+255),b
  2820  010EE6  0E01               	movlw	high terminal_loop@op1
  2821  010EE8  0100               	movlb	0	; () banked
  2822  010EEA  6FCA               	movwf	(terminal_operation@op1+1)& (0+255),b
  2823  010EEC  0E80               	movlw	low terminal_loop@op2
  2824  010EEE  0100               	movlb	0	; () banked
  2825  010EF0  6FCB               	movwf	terminal_operation@op2& (0+255),b
  2826  010EF2  0E02               	movlw	high terminal_loop@op2
  2827  010EF4  0100               	movlb	0	; () banked
  2828  010EF6  6FCC               	movwf	(terminal_operation@op2+1)& (0+255),b
  2829  010EF8  0E99               	movlw	low terminal_loop@op3
  2830  010EFA  0100               	movlb	0	; () banked
  2831  010EFC  6FCD               	movwf	terminal_operation@op3& (0+255),b
  2832  010EFE  0E02               	movlw	high terminal_loop@op3
  2833  010F00  0100               	movlb	0	; () banked
  2834  010F02  6FCE               	movwf	(terminal_operation@op3+1)& (0+255),b
  2835  010F04  EC00  F080         	call	_terminal_operation	;wreg free
  2836                           
  2837                           ;My_terminal.c: 38: break;
  2838  010F08  0012               	return	
  2839  010F0A                     l9629:
  2840                           
  2841                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  2842  010F0A  0EF5               	movlw	low terminal_loop@command
  2843  010F0C  0100               	movlb	0	; () banked
  2844  010F0E  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2845  010F10  0E00               	movlw	high terminal_loop@command
  2846  010F12  0100               	movlb	0	; () banked
  2847  010F14  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2848  010F16  0E00               	movlw	0
  2849  010F18  0100               	movlb	0	; () banked
  2850  010F1A  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2851  010F1C  EC78  F096         	call	_ringbuf_put	;wreg free
  2852                           
  2853                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  2854  010F20  C193  F068         	movff	terminal_loop@tx,ringbuf_put@rb
  2855  010F24  C194  F069         	movff	terminal_loop@tx+1,ringbuf_put@rb+1
  2856  010F28  0E20               	movlw	32
  2857  010F2A  0100               	movlb	0	; () banked
  2858  010F2C  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2859  010F2E  EC78  F096         	call	_ringbuf_put	;wreg free
  2860                           
  2861                           ;My_terminal.c: 42: break;
  2862  010F32  0012               	return	
  2863  010F34                     l9631:
  2864                           
  2865                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  2866  010F34  0EF5               	movlw	low terminal_loop@command
  2867  010F36  0100               	movlb	0	; () banked
  2868  010F38  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  2869  010F3A  0E00               	movlw	high terminal_loop@command
  2870  010F3C  0100               	movlb	0	; () banked
  2871  010F3E  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  2872  010F40  EC43  F09D         	call	_ringbuf_backspace	;wreg free
  2873                           
  2874                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  2875  010F44  C193  F06F         	movff	terminal_loop@tx,ringbuf_put_str@rb
  2876  010F48  C194  F070         	movff	terminal_loop@tx+1,ringbuf_put_str@rb+1
  2877  010F4C  0EDA               	movlw	low STR_19
  2878  010F4E  0100               	movlb	0	; () banked
  2879  010F50  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2880  010F52  0EFF               	movlw	high STR_19
  2881  010F54  0100               	movlb	0	; () banked
  2882  010F56  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2883  010F58  ECC5  F09F         	call	_ringbuf_put_str	;wreg free
  2884                           
  2885                           ;My_terminal.c: 46: break;
  2886  010F5C  0012               	return	
  2887  010F5E                     l9635:
  2888                           
  2889                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  2890  010F5E  0E00               	movlw	0
  2891  010F60  0104               	movlb	4	; () banked
  2892  010F62  6F66               	movwf	terminal_loop@i_4782& (0+255),b
  2893  010F64  D00E               	goto	l9641
  2894  010F66                     l9637:
  2895  010F66  C193  F06F         	movff	terminal_loop@tx,ringbuf_put_str@rb
  2896  010F6A  C194  F070         	movff	terminal_loop@tx+1,ringbuf_put_str@rb+1
  2897  010F6E  0EDA               	movlw	low STR_19
  2898  010F70  0100               	movlb	0	; () banked
  2899  010F72  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2900  010F74  0EFF               	movlw	high STR_19
  2901  010F76  0100               	movlb	0	; () banked
  2902  010F78  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2903  010F7A  ECC5  F09F         	call	_ringbuf_put_str	;wreg free
  2904  010F7E  0104               	movlb	4	; () banked
  2905  010F80  2B66               	incf	terminal_loop@i_4782& (0+255),f,b
  2906  010F82                     l9641:
  2907                           
  2908                           ; BSR set to: 4
  2909  010F82  0EF5               	movlw	low terminal_loop@command
  2910  010F84  0100               	movlb	0	; () banked
  2911  010F86  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2912  010F88  0E00               	movlw	high terminal_loop@command
  2913  010F8A  0100               	movlb	0	; () banked
  2914  010F8C  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2915  010F8E  EC6B  F093         	call	_ringbuf_num	;wreg free
  2916  010F92  0104               	movlb	4	; () banked
  2917  010F94  5166               	movf	terminal_loop@i_4782& (0+255),w,b
  2918  010F96  0100               	movlb	0	; () banked
  2919  010F98  6FD3               	movwf	??_terminal_loop& (0+255),b
  2920  010F9A  6BD4               	clrf	(??_terminal_loop+1)& (0+255),b
  2921  010F9C  0100               	movlb	0	; () banked
  2922  010F9E  5160               	movf	?_ringbuf_num& (0+255),w,b
  2923  010FA0  0100               	movlb	0	; () banked
  2924  010FA2  5DD3               	subwf	??_terminal_loop& (0+255),w,b
  2925  010FA4  0100               	movlb	0	; () banked
  2926  010FA6  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  2927  010FA8  0100               	movlb	0	; () banked
  2928  010FAA  59D4               	subwfb	(??_terminal_loop+1)& (0+255),w,b
  2929  010FAC  A0D8               	btfss	status,0,c
  2930  010FAE  D7DB               	goto	l9637
  2931                           
  2932                           ; BSR set to: 0
  2933                           ;My_terminal.c: 49: ringbuf_delete(&command);
  2934                           
  2935                           ; BSR set to: 0
  2936  010FB0  0EF5               	movlw	low terminal_loop@command
  2937  010FB2  0100               	movlb	0	; () banked
  2938  010FB4  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  2939  010FB6  0E00               	movlw	high terminal_loop@command
  2940  010FB8  0100               	movlb	0	; () banked
  2941  010FBA  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  2942  010FBC  ECF8  F0A2         	call	_ringbuf_delete	;wreg free
  2943                           
  2944                           ;My_terminal.c: 50: break;
  2945  010FC0  0012               	return	
  2946  010FC2                     l9645:
  2947                           
  2948                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  2949  010FC2  0E1F               	movlw	31
  2950  010FC4  0104               	movlb	4	; () banked
  2951  010FC6  6567               	cpfsgt	terminal_loop@ascii& (0+255),b
  2952  010FC8  0012               	return	
  2953                           
  2954                           ; BSR set to: 4
  2955  010FCA  0E7F               	movlw	127
  2956  010FCC  0104               	movlb	4	; () banked
  2957  010FCE  6167               	cpfslt	terminal_loop@ascii& (0+255),b
  2958  010FD0  0012               	return	
  2959                           
  2960                           ; BSR set to: 4
  2961                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  2962  010FD2  0EF5               	movlw	low terminal_loop@command
  2963  010FD4  0100               	movlb	0	; () banked
  2964  010FD6  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2965  010FD8  0E00               	movlw	high terminal_loop@command
  2966  010FDA  0100               	movlb	0	; () banked
  2967  010FDC  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2968  010FDE  C467  F06A         	movff	terminal_loop@ascii,ringbuf_put@asciicode
  2969  010FE2  EC78  F096         	call	_ringbuf_put	;wreg free
  2970                           
  2971                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  2972  010FE6  C193  F068         	movff	terminal_loop@tx,ringbuf_put@rb
  2973  010FEA  C194  F069         	movff	terminal_loop@tx+1,ringbuf_put@rb+1
  2974  010FEE  C467  F06A         	movff	terminal_loop@ascii,ringbuf_put@asciicode
  2975  010FF2  EC78  F096         	call	_ringbuf_put	;wreg free
  2976                           
  2977                           ;My_terminal.c: 57: }
  2978                           
  2979                           ;My_terminal.c: 55: }
  2980                           ;My_terminal.c: 56: break;
  2981  010FF6  0012               	return	
  2982  010FF8                     l9653:
  2983  010FF8  0104               	movlb	4	; () banked
  2984  010FFA  5167               	movf	terminal_loop@ascii& (0+255),w,b
  2985                           
  2986                           ; Switch size 1, requested type "space"
  2987                           ; Number of cases is 4, Range of values is 8 to 127
  2988                           ; switch strategies available:
  2989                           ; Name         Instructions Cycles
  2990                           ; simple_byte           13     7 (average)
  2991                           ;	Chosen strategy is simple_byte
  2992  010FFC  0A08               	xorlw	8	; case 8
  2993  010FFE  B4D8               	btfsc	status,2,c
  2994  011000  D799               	goto	l9631
  2995  011002  0A05               	xorlw	5	; case 13
  2996  011004  B4D8               	btfsc	status,2,c
  2997  011006  D682               	goto	l9593
  2998  011008  0A2D               	xorlw	45	; case 32
  2999  01100A  B4D8               	btfsc	status,2,c
  3000  01100C  D77E               	goto	l9629
  3001  01100E  0A5F               	xorlw	95	; case 127
  3002  011010  B4D8               	btfsc	status,2,c
  3003  011012  D7A5               	goto	l9635
  3004  011014  D7D6               	goto	l9645
  3005  011016                     __end_of_terminal_loop:
  3006                           	opt stack 0
  3007                           tblptru	equ	0xFF8
  3008                           tblptrh	equ	0xFF7
  3009                           tblptrl	equ	0xFF6
  3010                           tablat	equ	0xFF5
  3011                           prodh	equ	0xFF4
  3012                           prodl	equ	0xFF3
  3013                           intcon	equ	0xFF2
  3014                           postinc0	equ	0xFEE
  3015                           wreg	equ	0xFE8
  3016                           postdec1	equ	0xFE5
  3017                           fsr1h	equ	0xFE2
  3018                           fsr1l	equ	0xFE1
  3019                           indf2	equ	0xFDF
  3020                           fsr2h	equ	0xFDA
  3021                           fsr2l	equ	0xFD9
  3022                           status	equ	0xFD8
  3023                           
  3024 ;; *************** function _terminal_operation *****************
  3025 ;; Defined at:
  3026 ;;		line 170 in file "PIC18F27J53-killifish_light06.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;  tx              2  101[BANK0 ] PTR struct ringbuf
  3029 ;;		 -> usb_tx(8), 
  3030 ;;  op0             2  103[BANK0 ] PTR unsigned char 
  3031 ;;		 -> terminal_loop@op0(25), 
  3032 ;;  op1             2  105[BANK0 ] PTR unsigned char 
  3033 ;;		 -> terminal_loop@op1(25), 
  3034 ;;  op2             2  107[BANK0 ] PTR unsigned char 
  3035 ;;		 -> terminal_loop@op2(25), 
  3036 ;;  op3             2  109[BANK0 ] PTR unsigned char 
  3037 ;;		 -> terminal_loop@op3(25), 
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;		None
  3040 ;; Return value:  Size  Location     Type
  3041 ;;		None               void
  3042 ;; Registers used:
  3043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3049 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3050 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3052 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3053 ;;Total ram usage:       14 bytes
  3054 ;; Hardware stack levels used:    1
  3055 ;; Hardware stack levels required when called:   18
  3056 ;; This function calls:
  3057 ;;		_PWM_set
  3058 ;;		___awdiv
  3059 ;;		___wmul
  3060 ;;		_atoi
  3061 ;;		_strcmp
  3062 ;;		_terminal_time
  3063 ;;		_tx_sends
  3064 ;; This function is called by:
  3065 ;;		_terminal_loop
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text2
  3070  010000                     __ptext2:
  3071                           	opt stack 0
  3072  010000                     _terminal_operation:
  3073                           	opt stack 11
  3074                           
  3075                           ;PIC18F27J53-killifish_light06.c: 171: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  3076                           
  3077                           ;incstack = 0
  3078  010000  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3079  010004  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3080  010008  0EB2               	movlw	low STR_41
  3081  01000A  0100               	movlb	0	; () banked
  3082  01000C  6F62               	movwf	strcmp@s2& (0+255),b
  3083  01000E  0EFF               	movlw	high STR_41
  3084  010010  0100               	movlb	0	; () banked
  3085  010012  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3086  010014  EC59  F0A0         	call	_strcmp	;wreg free
  3087  010018  0100               	movlb	0	; () banked
  3088  01001A  5160               	movf	?_strcmp& (0+255),w,b
  3089  01001C  0100               	movlb	0	; () banked
  3090  01001E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3091  010020  B4D8               	btfsc	status,2,c
  3092  010022  D012               	goto	l9303
  3093                           
  3094                           ; BSR set to: 0
  3095  010024  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3096  010028  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3097  01002C  0EE5               	movlw	low STR_42
  3098  01002E  0100               	movlb	0	; () banked
  3099  010030  6F62               	movwf	strcmp@s2& (0+255),b
  3100  010032  0EFF               	movlw	high STR_42
  3101  010034  0100               	movlb	0	; () banked
  3102  010036  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3103  010038  EC59  F0A0         	call	_strcmp	;wreg free
  3104  01003C  0100               	movlb	0	; () banked
  3105  01003E  5160               	movf	?_strcmp& (0+255),w,b
  3106  010040  0100               	movlb	0	; () banked
  3107  010042  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3108  010044  A4D8               	btfss	status,2,c
  3109  010046  D008               	goto	l9305
  3110  010048                     l9303:
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;PIC18F27J53-killifish_light06.c: 172: tx_sends(
  3114                           ;PIC18F27J53-killifish_light06.c: 173: "\t**************************\n"
  3115                           ;PIC18F27J53-killifish_light06.c: 174: "\t**** Killifish Light  ****\n"
  3116                           ;PIC18F27J53-killifish_light06.c: 175: "\t**** Made by @Ryokeri ****\n"
  3117                           ;PIC18F27J53-killifish_light06.c: 176: "\t**************************\n\n"
  3118                           ;PIC18F27J53-killifish_light06.c: 177: "\tcommand \topeland1\topeland2\n\n"
  3119                           ;PIC18F27J53-killifish_light06.c: 178: "\tprint_time(t)\n"
  3120                           ;PIC18F27J53-killifish_light06.c: 179: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(deci
      +                          mal)]\n"
  3121  010048  0EF2               	movlw	low STR_43
  3122  01004A  0100               	movlb	0	; () banked
  3123  01004C  6F6F               	movwf	tx_sends@asciicode& (0+255),b
  3124  01004E  0EFD               	movlw	high STR_43
  3125  010050  0100               	movlb	0	; () banked
  3126  010052  6F70               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3127  010054  EC50  F0A1         	call	_tx_sends	;wreg free
  3128  010058                     l9305:
  3129                           
  3130                           ;PIC18F27J53-killifish_light06.c: 186: }
  3131                           ;PIC18F27J53-killifish_light06.c: 187: terminal_time(tx, op0, op1, op2);
  3132  010058  C0C5  F0BC         	movff	terminal_operation@tx,terminal_time@tx
  3133  01005C  C0C6  F0BD         	movff	terminal_operation@tx+1,terminal_time@tx+1
  3134  010060  C0C7  F0BE         	movff	terminal_operation@op0,terminal_time@op0
  3135  010064  C0C8  F0BF         	movff	terminal_operation@op0+1,terminal_time@op0+1
  3136  010068  C0C9  F0C0         	movff	terminal_operation@op1,terminal_time@op1
  3137  01006C  C0CA  F0C1         	movff	terminal_operation@op1+1,terminal_time@op1+1
  3138  010070  C0CB  F0C2         	movff	terminal_operation@op2,terminal_time@op2
  3139  010074  C0CC  F0C3         	movff	terminal_operation@op2+1,terminal_time@op2+1
  3140  010078  EC80  F084         	call	_terminal_time	;wreg free
  3141                           
  3142                           ;PIC18F27J53-killifish_light06.c: 188: if (!strcmp(op0, "RESET();")) {
  3143  01007C  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3144  010080  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3145  010084  0E69               	movlw	low STR_44
  3146  010086  0100               	movlb	0	; () banked
  3147  010088  6F62               	movwf	strcmp@s2& (0+255),b
  3148  01008A  0EFF               	movlw	high STR_44
  3149  01008C  0100               	movlb	0	; () banked
  3150  01008E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3151  010090  EC59  F0A0         	call	_strcmp	;wreg free
  3152  010094  0100               	movlb	0	; () banked
  3153  010096  5160               	movf	?_strcmp& (0+255),w,b
  3154  010098  0100               	movlb	0	; () banked
  3155  01009A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3156  01009C  B4D8               	btfsc	status,2,c
  3157                           
  3158                           ; BSR set to: 0
  3159  01009E  00FF               	reset		;# 
  3160                           
  3161                           ;PIC18F27J53-killifish_light06.c: 190: }
  3162                           ;PIC18F27J53-killifish_light06.c: 191: if (!strcmp(op0, "bootload")) {
  3163  0100A0  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3164  0100A4  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3165  0100A8  0E72               	movlw	low STR_45
  3166  0100AA  0100               	movlb	0	; () banked
  3167  0100AC  6F62               	movwf	strcmp@s2& (0+255),b
  3168  0100AE  0EFF               	movlw	high STR_45
  3169  0100B0  0100               	movlb	0	; () banked
  3170  0100B2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3171  0100B4  EC59  F0A0         	call	_strcmp	;wreg free
  3172  0100B8  0100               	movlb	0	; () banked
  3173  0100BA  5160               	movf	?_strcmp& (0+255),w,b
  3174  0100BC  0100               	movlb	0	; () banked
  3175  0100BE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3176  0100C0  B4D8               	btfsc	status,2,c
  3177                           
  3178                           ; BSR set to: 0
  3179  0100C2  EF0E F000          	goto	28	;# 
  3180                           
  3181                           ;PIC18F27J53-killifish_light06.c: 193: }
  3182                           ;PIC18F27J53-killifish_light06.c: 194: if (!strcmp(op0, "set")) {
  3183  0100C6  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3184  0100CA  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3185  0100CE  0ED6               	movlw	low STR_46
  3186  0100D0  0100               	movlb	0	; () banked
  3187  0100D2  6F62               	movwf	strcmp@s2& (0+255),b
  3188  0100D4  0EFF               	movlw	high STR_46
  3189  0100D6  0100               	movlb	0	; () banked
  3190  0100D8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3191  0100DA  EC59  F0A0         	call	_strcmp	;wreg free
  3192  0100DE  0100               	movlb	0	; () banked
  3193  0100E0  5160               	movf	?_strcmp& (0+255),w,b
  3194  0100E2  0100               	movlb	0	; () banked
  3195  0100E4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3196  0100E6  A4D8               	btfss	status,2,c
  3197  0100E8  D03C               	goto	l9327
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;PIC18F27J53-killifish_light06.c: 195: if (!strcmp(op1, "sync")) {
  3201  0100EA  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3202  0100EE  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3203  0100F2  0EAD               	movlw	low STR_47
  3204  0100F4  0100               	movlb	0	; () banked
  3205  0100F6  6F62               	movwf	strcmp@s2& (0+255),b
  3206  0100F8  0EFF               	movlw	high STR_47
  3207  0100FA  0100               	movlb	0	; () banked
  3208  0100FC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3209  0100FE  EC59  F0A0         	call	_strcmp	;wreg free
  3210  010102  0100               	movlb	0	; () banked
  3211  010104  5160               	movf	?_strcmp& (0+255),w,b
  3212  010106  0100               	movlb	0	; () banked
  3213  010108  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3214  01010A  A4D8               	btfss	status,2,c
  3215  01010C  D003               	goto	l9321
  3216                           
  3217                           ; BSR set to: 0
  3218                           ;PIC18F27J53-killifish_light06.c: 196: light_mode = TIME_SYNC_mode;
  3219  01010E  0E00               	movlw	0
  3220  010110  0100               	movlb	0	; () banked
  3221  010112  6FF1               	movwf	_light_mode& (0+255),b
  3222  010114                     l9321:
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;PIC18F27J53-killifish_light06.c: 197: }
  3226                           ;PIC18F27J53-killifish_light06.c: 198: if (!strcmp(op1, "adc") || !strcmp(op1, "ADC")) {
  3227  010114  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3228  010118  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3229  01011C  0ECE               	movlw	low STR_48
  3230  01011E  0100               	movlb	0	; () banked
  3231  010120  6F62               	movwf	strcmp@s2& (0+255),b
  3232  010122  0EFF               	movlw	high STR_48
  3233  010124  0100               	movlb	0	; () banked
  3234  010126  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3235  010128  EC59  F0A0         	call	_strcmp	;wreg free
  3236  01012C  0100               	movlb	0	; () banked
  3237  01012E  5160               	movf	?_strcmp& (0+255),w,b
  3238  010130  0100               	movlb	0	; () banked
  3239  010132  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3240  010134  B4D8               	btfsc	status,2,c
  3241  010136  D012               	goto	l9325
  3242                           
  3243                           ; BSR set to: 0
  3244  010138  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3245  01013C  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3246  010140  0EC6               	movlw	low STR_49
  3247  010142  0100               	movlb	0	; () banked
  3248  010144  6F62               	movwf	strcmp@s2& (0+255),b
  3249  010146  0EFF               	movlw	high STR_49
  3250  010148  0100               	movlb	0	; () banked
  3251  01014A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3252  01014C  EC59  F0A0         	call	_strcmp	;wreg free
  3253  010150  0100               	movlb	0	; () banked
  3254  010152  5160               	movf	?_strcmp& (0+255),w,b
  3255  010154  0100               	movlb	0	; () banked
  3256  010156  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3257  010158  A4D8               	btfss	status,2,c
  3258  01015A  D003               	goto	l9327
  3259  01015C                     l9325:
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;PIC18F27J53-killifish_light06.c: 199: light_mode = ADC_mode;
  3263  01015C  0E01               	movlw	1
  3264  01015E  0100               	movlb	0	; () banked
  3265  010160  6FF1               	movwf	_light_mode& (0+255),b
  3266  010162                     l9327:
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;PIC18F27J53-killifish_light06.c: 200: }
  3270                           ;PIC18F27J53-killifish_light06.c: 201: }
  3271                           ;PIC18F27J53-killifish_light06.c: 202: if (!strcmp(op0, "pwm") || !strcmp(op0, "PWM")) {
  3272  010162  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3273  010166  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3274  01016A  0ED2               	movlw	low STR_50
  3275  01016C  0100               	movlb	0	; () banked
  3276  01016E  6F62               	movwf	strcmp@s2& (0+255),b
  3277  010170  0EFF               	movlw	high STR_50
  3278  010172  0100               	movlb	0	; () banked
  3279  010174  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3280  010176  EC59  F0A0         	call	_strcmp	;wreg free
  3281  01017A  0100               	movlb	0	; () banked
  3282  01017C  5160               	movf	?_strcmp& (0+255),w,b
  3283  01017E  0100               	movlb	0	; () banked
  3284  010180  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3285  010182  B4D8               	btfsc	status,2,c
  3286  010184  D012               	goto	l9331
  3287                           
  3288                           ; BSR set to: 0
  3289  010186  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3290  01018A  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3291  01018E  0ECA               	movlw	low STR_51
  3292  010190  0100               	movlb	0	; () banked
  3293  010192  6F62               	movwf	strcmp@s2& (0+255),b
  3294  010194  0EFF               	movlw	high STR_51
  3295  010196  0100               	movlb	0	; () banked
  3296  010198  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3297  01019A  EC59  F0A0         	call	_strcmp	;wreg free
  3298  01019E  0100               	movlb	0	; () banked
  3299  0101A0  5160               	movf	?_strcmp& (0+255),w,b
  3300  0101A2  0100               	movlb	0	; () banked
  3301  0101A4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3302  0101A6  A4D8               	btfss	status,2,c
  3303  0101A8  0012               	return	
  3304  0101AA                     l9331:
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;PIC18F27J53-killifish_light06.c: 203: if (!strcmp(op1, "r") || !strcmp(op1, "R")) {
  3308  0101AA  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3309  0101AE  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3310  0101B2  0EA5               	movlw	low (STR_60+4)
  3311  0101B4  0100               	movlb	0	; () banked
  3312  0101B6  6F62               	movwf	strcmp@s2& (0+255),b
  3313  0101B8  0EFF               	movlw	high (STR_60+4)
  3314  0101BA  0100               	movlb	0	; () banked
  3315  0101BC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3316  0101BE  EC59  F0A0         	call	_strcmp	;wreg free
  3317  0101C2  0100               	movlb	0	; () banked
  3318  0101C4  5160               	movf	?_strcmp& (0+255),w,b
  3319  0101C6  0100               	movlb	0	; () banked
  3320  0101C8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3321  0101CA  B4D8               	btfsc	status,2,c
  3322  0101CC  D012               	goto	l9335
  3323                           
  3324                           ; BSR set to: 0
  3325  0101CE  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3326  0101D2  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3327  0101D6  0EEB               	movlw	low STR_53
  3328  0101D8  0100               	movlb	0	; () banked
  3329  0101DA  6F62               	movwf	strcmp@s2& (0+255),b
  3330  0101DC  0EFF               	movlw	high STR_53
  3331  0101DE  0100               	movlb	0	; () banked
  3332  0101E0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3333  0101E2  EC59  F0A0         	call	_strcmp	;wreg free
  3334  0101E6  0100               	movlb	0	; () banked
  3335  0101E8  5160               	movf	?_strcmp& (0+255),w,b
  3336  0101EA  0100               	movlb	0	; () banked
  3337  0101EC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3338  0101EE  A4D8               	btfss	status,2,c
  3339  0101F0  D02E               	goto	l9343
  3340  0101F2                     l9335:
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;PIC18F27J53-killifish_light06.c: 204: light_mode = COMMAND_mode;
  3344  0101F2  0E02               	movlw	2
  3345  0101F4  0100               	movlb	0	; () banked
  3346  0101F6  6FF1               	movwf	_light_mode& (0+255),b
  3347                           
  3348                           ; BSR set to: 0
  3349                           ;PIC18F27J53-killifish_light06.c: 205: PWM_set(0, atoi(op2) * 250 / 100);
  3350  0101F8  C0CB  F066         	movff	terminal_operation@op2,atoi@s
  3351  0101FC  C0CC  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3352  010200  EC7A  F092         	call	_atoi	;wreg free
  3353  010204  C066  F0CF         	movff	?_atoi,_terminal_operation$6532
  3354  010208  C067  F0D0         	movff	?_atoi+1,_terminal_operation$6532+1
  3355                           
  3356                           ;PIC18F27J53-killifish_light06.c: 205: PWM_set(0, atoi(op2) * 250 / 100);
  3357  01020C  C0CF  F060         	movff	_terminal_operation$6532,___wmul@multiplier
  3358  010210  C0D0  F061         	movff	_terminal_operation$6532+1,___wmul@multiplier+1
  3359  010214  0E00               	movlw	0
  3360  010216  0100               	movlb	0	; () banked
  3361  010218  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3362  01021A  0EFA               	movlw	250
  3363  01021C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3364  01021E  ECE7  F0A1         	call	___wmul	;wreg free
  3365  010222  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3366  010226  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3367  01022A  0E00               	movlw	0
  3368  01022C  0100               	movlb	0	; () banked
  3369  01022E  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3370  010230  0E64               	movlw	100
  3371  010232  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3372  010234  ECE3  F098         	call	___awdiv	;wreg free
  3373  010238  C06D  F0D1         	movff	?___awdiv,_terminal_operation$6533
  3374  01023C  C06E  F0D2         	movff	?___awdiv+1,_terminal_operation$6533+1
  3375                           
  3376                           ;PIC18F27J53-killifish_light06.c: 205: PWM_set(0, atoi(op2) * 250 / 100);
  3377  010240  C0D1  F075         	movff	_terminal_operation$6533,PWM_set@value
  3378  010244  C0D2  F076         	movff	_terminal_operation$6533+1,PWM_set@value+1
  3379  010248  0E00               	movlw	0
  3380  01024A  ECDC  F08D         	call	_PWM_set
  3381  01024E                     l9343:
  3382                           
  3383                           ;PIC18F27J53-killifish_light06.c: 206: }
  3384                           ;PIC18F27J53-killifish_light06.c: 207: if (!strcmp(op1, "g") || !strcmp(op1, "G")) {
  3385  01024E  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3386  010252  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3387  010256  0EF1               	movlw	low STR_54
  3388  010258  0100               	movlb	0	; () banked
  3389  01025A  6F62               	movwf	strcmp@s2& (0+255),b
  3390  01025C  0EFF               	movlw	high STR_54
  3391  01025E  0100               	movlb	0	; () banked
  3392  010260  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3393  010262  EC59  F0A0         	call	_strcmp	;wreg free
  3394  010266  0100               	movlb	0	; () banked
  3395  010268  5160               	movf	?_strcmp& (0+255),w,b
  3396  01026A  0100               	movlb	0	; () banked
  3397  01026C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3398  01026E  B4D8               	btfsc	status,2,c
  3399  010270  D012               	goto	l9347
  3400                           
  3401                           ; BSR set to: 0
  3402  010272  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3403  010276  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3404  01027A  0EE9               	movlw	low STR_55
  3405  01027C  0100               	movlb	0	; () banked
  3406  01027E  6F62               	movwf	strcmp@s2& (0+255),b
  3407  010280  0EFF               	movlw	high STR_55
  3408  010282  0100               	movlb	0	; () banked
  3409  010284  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3410  010286  EC59  F0A0         	call	_strcmp	;wreg free
  3411  01028A  0100               	movlb	0	; () banked
  3412  01028C  5160               	movf	?_strcmp& (0+255),w,b
  3413  01028E  0100               	movlb	0	; () banked
  3414  010290  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3415  010292  A4D8               	btfss	status,2,c
  3416  010294  D02E               	goto	l9355
  3417  010296                     l9347:
  3418                           
  3419                           ; BSR set to: 0
  3420                           ;PIC18F27J53-killifish_light06.c: 208: light_mode = COMMAND_mode;
  3421  010296  0E02               	movlw	2
  3422  010298  0100               	movlb	0	; () banked
  3423  01029A  6FF1               	movwf	_light_mode& (0+255),b
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;PIC18F27J53-killifish_light06.c: 209: PWM_set(1, atoi(op2) * 250 / 100);
  3427  01029C  C0CB  F066         	movff	terminal_operation@op2,atoi@s
  3428  0102A0  C0CC  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3429  0102A4  EC7A  F092         	call	_atoi	;wreg free
  3430  0102A8  C066  F0CF         	movff	?_atoi,_terminal_operation$6532
  3431  0102AC  C067  F0D0         	movff	?_atoi+1,_terminal_operation$6532+1
  3432                           
  3433                           ;PIC18F27J53-killifish_light06.c: 209: PWM_set(1, atoi(op2) * 250 / 100);
  3434  0102B0  C0CF  F060         	movff	_terminal_operation$6532,___wmul@multiplier
  3435  0102B4  C0D0  F061         	movff	_terminal_operation$6532+1,___wmul@multiplier+1
  3436  0102B8  0E00               	movlw	0
  3437  0102BA  0100               	movlb	0	; () banked
  3438  0102BC  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3439  0102BE  0EFA               	movlw	250
  3440  0102C0  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3441  0102C2  ECE7  F0A1         	call	___wmul	;wreg free
  3442  0102C6  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3443  0102CA  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3444  0102CE  0E00               	movlw	0
  3445  0102D0  0100               	movlb	0	; () banked
  3446  0102D2  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3447  0102D4  0E64               	movlw	100
  3448  0102D6  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3449  0102D8  ECE3  F098         	call	___awdiv	;wreg free
  3450  0102DC  C06D  F0D1         	movff	?___awdiv,_terminal_operation$6533
  3451  0102E0  C06E  F0D2         	movff	?___awdiv+1,_terminal_operation$6533+1
  3452                           
  3453                           ;PIC18F27J53-killifish_light06.c: 209: PWM_set(1, atoi(op2) * 250 / 100);
  3454  0102E4  C0D1  F075         	movff	_terminal_operation$6533,PWM_set@value
  3455  0102E8  C0D2  F076         	movff	_terminal_operation$6533+1,PWM_set@value+1
  3456  0102EC  0E01               	movlw	1
  3457  0102EE  ECDC  F08D         	call	_PWM_set
  3458  0102F2                     l9355:
  3459                           
  3460                           ;PIC18F27J53-killifish_light06.c: 210: }
  3461                           ;PIC18F27J53-killifish_light06.c: 211: if (!strcmp(op1, "b") || !strcmp(op1, "B")) {
  3462  0102F2  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3463  0102F6  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3464  0102FA  0EEF               	movlw	low STR_56
  3465  0102FC  0100               	movlb	0	; () banked
  3466  0102FE  6F62               	movwf	strcmp@s2& (0+255),b
  3467  010300  0EFF               	movlw	high STR_56
  3468  010302  0100               	movlb	0	; () banked
  3469  010304  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3470  010306  EC59  F0A0         	call	_strcmp	;wreg free
  3471  01030A  0100               	movlb	0	; () banked
  3472  01030C  5160               	movf	?_strcmp& (0+255),w,b
  3473  01030E  0100               	movlb	0	; () banked
  3474  010310  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3475  010312  B4D8               	btfsc	status,2,c
  3476  010314  D012               	goto	l9359
  3477                           
  3478                           ; BSR set to: 0
  3479  010316  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3480  01031A  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3481  01031E  0EE7               	movlw	low STR_57
  3482  010320  0100               	movlb	0	; () banked
  3483  010322  6F62               	movwf	strcmp@s2& (0+255),b
  3484  010324  0EFF               	movlw	high STR_57
  3485  010326  0100               	movlb	0	; () banked
  3486  010328  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3487  01032A  EC59  F0A0         	call	_strcmp	;wreg free
  3488  01032E  0100               	movlb	0	; () banked
  3489  010330  5160               	movf	?_strcmp& (0+255),w,b
  3490  010332  0100               	movlb	0	; () banked
  3491  010334  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3492  010336  A4D8               	btfss	status,2,c
  3493  010338  D02E               	goto	l9367
  3494  01033A                     l9359:
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;PIC18F27J53-killifish_light06.c: 212: light_mode = COMMAND_mode;
  3498  01033A  0E02               	movlw	2
  3499  01033C  0100               	movlb	0	; () banked
  3500  01033E  6FF1               	movwf	_light_mode& (0+255),b
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;PIC18F27J53-killifish_light06.c: 213: PWM_set(2, atoi(op2) * 250 / 100);
  3504  010340  C0CB  F066         	movff	terminal_operation@op2,atoi@s
  3505  010344  C0CC  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3506  010348  EC7A  F092         	call	_atoi	;wreg free
  3507  01034C  C066  F0CF         	movff	?_atoi,_terminal_operation$6532
  3508  010350  C067  F0D0         	movff	?_atoi+1,_terminal_operation$6532+1
  3509                           
  3510                           ;PIC18F27J53-killifish_light06.c: 213: PWM_set(2, atoi(op2) * 250 / 100);
  3511  010354  C0CF  F060         	movff	_terminal_operation$6532,___wmul@multiplier
  3512  010358  C0D0  F061         	movff	_terminal_operation$6532+1,___wmul@multiplier+1
  3513  01035C  0E00               	movlw	0
  3514  01035E  0100               	movlb	0	; () banked
  3515  010360  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3516  010362  0EFA               	movlw	250
  3517  010364  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3518  010366  ECE7  F0A1         	call	___wmul	;wreg free
  3519  01036A  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3520  01036E  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3521  010372  0E00               	movlw	0
  3522  010374  0100               	movlb	0	; () banked
  3523  010376  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3524  010378  0E64               	movlw	100
  3525  01037A  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3526  01037C  ECE3  F098         	call	___awdiv	;wreg free
  3527  010380  C06D  F0D1         	movff	?___awdiv,_terminal_operation$6533
  3528  010384  C06E  F0D2         	movff	?___awdiv+1,_terminal_operation$6533+1
  3529                           
  3530                           ;PIC18F27J53-killifish_light06.c: 213: PWM_set(2, atoi(op2) * 250 / 100);
  3531  010388  C0D1  F075         	movff	_terminal_operation$6533,PWM_set@value
  3532  01038C  C0D2  F076         	movff	_terminal_operation$6533+1,PWM_set@value+1
  3533  010390  0E02               	movlw	2
  3534  010392  ECDC  F08D         	call	_PWM_set
  3535  010396                     l9367:
  3536                           
  3537                           ;PIC18F27J53-killifish_light06.c: 214: }
  3538                           ;PIC18F27J53-killifish_light06.c: 215: if (!strcmp(op1, "w") || !strcmp(op1, "W")) {
  3539  010396  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3540  01039A  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3541  01039E  0EF3               	movlw	low STR_58
  3542  0103A0  0100               	movlb	0	; () banked
  3543  0103A2  6F62               	movwf	strcmp@s2& (0+255),b
  3544  0103A4  0EFF               	movlw	high STR_58
  3545  0103A6  0100               	movlb	0	; () banked
  3546  0103A8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3547  0103AA  EC59  F0A0         	call	_strcmp	;wreg free
  3548  0103AE  0100               	movlb	0	; () banked
  3549  0103B0  5160               	movf	?_strcmp& (0+255),w,b
  3550  0103B2  0100               	movlb	0	; () banked
  3551  0103B4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3552  0103B6  B4D8               	btfsc	status,2,c
  3553  0103B8  D012               	goto	l9371
  3554                           
  3555                           ; BSR set to: 0
  3556  0103BA  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3557  0103BE  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3558  0103C2  0EED               	movlw	low STR_59
  3559  0103C4  0100               	movlb	0	; () banked
  3560  0103C6  6F62               	movwf	strcmp@s2& (0+255),b
  3561  0103C8  0EFF               	movlw	high STR_59
  3562  0103CA  0100               	movlb	0	; () banked
  3563  0103CC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3564  0103CE  EC59  F0A0         	call	_strcmp	;wreg free
  3565  0103D2  0100               	movlb	0	; () banked
  3566  0103D4  5160               	movf	?_strcmp& (0+255),w,b
  3567  0103D6  0100               	movlb	0	; () banked
  3568  0103D8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3569  0103DA  A4D8               	btfss	status,2,c
  3570  0103DC  D02E               	goto	l9379
  3571  0103DE                     l9371:
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;PIC18F27J53-killifish_light06.c: 216: light_mode = COMMAND_mode;
  3575  0103DE  0E02               	movlw	2
  3576  0103E0  0100               	movlb	0	; () banked
  3577  0103E2  6FF1               	movwf	_light_mode& (0+255),b
  3578                           
  3579                           ; BSR set to: 0
  3580                           ;PIC18F27J53-killifish_light06.c: 217: PWM_set(3, atoi(op2) * 250 / 100);
  3581  0103E4  C0CB  F066         	movff	terminal_operation@op2,atoi@s
  3582  0103E8  C0CC  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3583  0103EC  EC7A  F092         	call	_atoi	;wreg free
  3584  0103F0  C066  F0CF         	movff	?_atoi,_terminal_operation$6532
  3585  0103F4  C067  F0D0         	movff	?_atoi+1,_terminal_operation$6532+1
  3586                           
  3587                           ;PIC18F27J53-killifish_light06.c: 217: PWM_set(3, atoi(op2) * 250 / 100);
  3588  0103F8  C0CF  F060         	movff	_terminal_operation$6532,___wmul@multiplier
  3589  0103FC  C0D0  F061         	movff	_terminal_operation$6532+1,___wmul@multiplier+1
  3590  010400  0E00               	movlw	0
  3591  010402  0100               	movlb	0	; () banked
  3592  010404  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3593  010406  0EFA               	movlw	250
  3594  010408  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3595  01040A  ECE7  F0A1         	call	___wmul	;wreg free
  3596  01040E  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3597  010412  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3598  010416  0E00               	movlw	0
  3599  010418  0100               	movlb	0	; () banked
  3600  01041A  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3601  01041C  0E64               	movlw	100
  3602  01041E  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3603  010420  ECE3  F098         	call	___awdiv	;wreg free
  3604  010424  C06D  F0D1         	movff	?___awdiv,_terminal_operation$6533
  3605  010428  C06E  F0D2         	movff	?___awdiv+1,_terminal_operation$6533+1
  3606                           
  3607                           ;PIC18F27J53-killifish_light06.c: 217: PWM_set(3, atoi(op2) * 250 / 100);
  3608  01042C  C0D1  F075         	movff	_terminal_operation$6533,PWM_set@value
  3609  010430  C0D2  F076         	movff	_terminal_operation$6533+1,PWM_set@value+1
  3610  010434  0E03               	movlw	3
  3611  010436  ECDC  F08D         	call	_PWM_set
  3612  01043A                     l9379:
  3613                           
  3614                           ;PIC18F27J53-killifish_light06.c: 218: }
  3615                           ;PIC18F27J53-killifish_light06.c: 219: if (!strcmp(op1, "clear")) {
  3616  01043A  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3617  01043E  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3618  010442  0EA1               	movlw	low STR_60
  3619  010444  0100               	movlb	0	; () banked
  3620  010446  6F62               	movwf	strcmp@s2& (0+255),b
  3621  010448  0EFF               	movlw	high STR_60
  3622  01044A  0100               	movlb	0	; () banked
  3623  01044C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3624  01044E  EC59  F0A0         	call	_strcmp	;wreg free
  3625  010452  0100               	movlb	0	; () banked
  3626  010454  5160               	movf	?_strcmp& (0+255),w,b
  3627  010456  0100               	movlb	0	; () banked
  3628  010458  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3629  01045A  A4D8               	btfss	status,2,c
  3630  01045C  0012               	return	
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;PIC18F27J53-killifish_light06.c: 220: light_mode = COMMAND_mode;
  3634  01045E  0E02               	movlw	2
  3635  010460  0100               	movlb	0	; () banked
  3636  010462  6FF1               	movwf	_light_mode& (0+255),b
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;PIC18F27J53-killifish_light06.c: 221: PWM_set(0, 0);
  3640  010464  0E00               	movlw	0
  3641  010466  0100               	movlb	0	; () banked
  3642  010468  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3643  01046A  0E00               	movlw	0
  3644  01046C  6F75               	movwf	PWM_set@value& (0+255),b
  3645  01046E  0E00               	movlw	0
  3646  010470  ECDC  F08D         	call	_PWM_set
  3647                           
  3648                           ;PIC18F27J53-killifish_light06.c: 222: PWM_set(1, 0);
  3649  010474  0E00               	movlw	0
  3650  010476  0100               	movlb	0	; () banked
  3651  010478  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3652  01047A  0E00               	movlw	0
  3653  01047C  6F75               	movwf	PWM_set@value& (0+255),b
  3654  01047E  0E01               	movlw	1
  3655  010480  ECDC  F08D         	call	_PWM_set
  3656                           
  3657                           ;PIC18F27J53-killifish_light06.c: 223: PWM_set(2, 0);
  3658  010484  0E00               	movlw	0
  3659  010486  0100               	movlb	0	; () banked
  3660  010488  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3661  01048A  0E00               	movlw	0
  3662  01048C  6F75               	movwf	PWM_set@value& (0+255),b
  3663  01048E  0E02               	movlw	2
  3664  010490  ECDC  F08D         	call	_PWM_set
  3665                           
  3666                           ;PIC18F27J53-killifish_light06.c: 224: PWM_set(3, 0);
  3667  010494  0E00               	movlw	0
  3668  010496  0100               	movlb	0	; () banked
  3669  010498  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3670  01049A  0E00               	movlw	0
  3671  01049C  6F75               	movwf	PWM_set@value& (0+255),b
  3672  01049E  0E03               	movlw	3
  3673  0104A0  ECDC  F08D         	call	_PWM_set
  3674  0104A4  0012               	return	
  3675  0104A6                     __end_of_terminal_operation:
  3676                           	opt stack 0
  3677                           tblptru	equ	0xFF8
  3678                           tblptrh	equ	0xFF7
  3679                           tblptrl	equ	0xFF6
  3680                           tablat	equ	0xFF5
  3681                           prodh	equ	0xFF4
  3682                           prodl	equ	0xFF3
  3683                           intcon	equ	0xFF2
  3684                           postinc0	equ	0xFEE
  3685                           wreg	equ	0xFE8
  3686                           postdec1	equ	0xFE5
  3687                           fsr1h	equ	0xFE2
  3688                           fsr1l	equ	0xFE1
  3689                           indf2	equ	0xFDF
  3690                           fsr2h	equ	0xFDA
  3691                           fsr2l	equ	0xFD9
  3692                           status	equ	0xFD8
  3693                           
  3694 ;; *************** function _tx_sends *****************
  3695 ;; Defined at:
  3696 ;;		line 209 in file "../My_library/My_PIC.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  asciicode       2   15[BANK0 ] PTR const unsigned char 
  3699 ;;		 -> STR_43(315), 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;		None               void
  3704 ;; Registers used:
  3705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3711 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3714 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3715 ;;Total ram usage:        2 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; Hardware stack levels required when called:   13
  3718 ;; This function calls:
  3719 ;;		_ringbuf_put
  3720 ;; This function is called by:
  3721 ;;		_terminal_operation
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           	psect	text3
  3726  0142A0                     __ptext3:
  3727                           	opt stack 0
  3728  0142A0                     _tx_sends:
  3729                           	opt stack 15
  3730                           
  3731                           ;My_PIC.c: 210: while (*asciicode) {
  3732                           
  3733                           ;incstack = 0
  3734  0142A0  D014               	goto	l9033
  3735  0142A2                     l9029:
  3736                           
  3737                           ;My_PIC.c: 211: ringbuf_put(&tx_buf, *asciicode++);
  3738  0142A2  0E68               	movlw	low _tx_buf
  3739  0142A4  0100               	movlb	0	; () banked
  3740  0142A6  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3741  0142A8  0E01               	movlw	high _tx_buf
  3742  0142AA  0100               	movlb	0	; () banked
  3743  0142AC  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3744  0142AE  C06F  FFF6         	movff	tx_sends@asciicode,tblptrl
  3745  0142B2  C070  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  3746  0142B6                     	if	0	;tblptru may be non-zero
  3747  0142B6                     	endif
  3748  0142B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3749  0142B6  0E00               	movlw	low (__mediumconst shr (0+16))
  3750  0142B8  6EF8               	movwf	tblptru,c
  3751  0142BA                     	endif
  3752  0142BA  0008               	tblrd		*
  3753  0142BC  CFF5 F06A          	movff	tablat,ringbuf_put@asciicode
  3754  0142C0  EC78  F096         	call	_ringbuf_put	;wreg free
  3755  0142C4  0100               	movlb	0	; () banked
  3756  0142C6  4B6F               	infsnz	tx_sends@asciicode& (0+255),f,b
  3757  0142C8  2B70               	incf	(tx_sends@asciicode+1)& (0+255),f,b
  3758  0142CA                     l9033:
  3759  0142CA  C06F  FFF6         	movff	tx_sends@asciicode,tblptrl
  3760  0142CE  C070  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  3761  0142D2                     	if	0	;tblptru may be non-zero
  3762  0142D2                     	endif
  3763  0142D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3764  0142D2  0E00               	movlw	low (__mediumconst shr (0+16))
  3765  0142D4  6EF8               	movwf	tblptru,c
  3766  0142D6                     	endif
  3767  0142D6  0008               	tblrd		*
  3768  0142D8  50F5               	movf	tablat,w,c
  3769  0142DA  0900               	iorlw	0
  3770  0142DC  A4D8               	btfss	status,2,c
  3771  0142DE  D7E1               	goto	l9029
  3772                           
  3773                           ;My_PIC.c: 212: }
  3774                           ;My_PIC.c: 213: PIE1bits.TXIE = 1;
  3775  0142E0  889D               	bsf	3997,4,c	;volatile
  3776  0142E2  0012               	return		;funcret
  3777  0142E4                     __end_of_tx_sends:
  3778                           	opt stack 0
  3779                           tblptru	equ	0xFF8
  3780                           tblptrh	equ	0xFF7
  3781                           tblptrl	equ	0xFF6
  3782                           tablat	equ	0xFF5
  3783                           prodh	equ	0xFF4
  3784                           prodl	equ	0xFF3
  3785                           intcon	equ	0xFF2
  3786                           postinc0	equ	0xFEE
  3787                           wreg	equ	0xFE8
  3788                           postdec1	equ	0xFE5
  3789                           fsr1h	equ	0xFE2
  3790                           fsr1l	equ	0xFE1
  3791                           indf2	equ	0xFDF
  3792                           fsr2h	equ	0xFDA
  3793                           fsr2l	equ	0xFD9
  3794                           status	equ	0xFD8
  3795                           
  3796 ;; *************** function _terminal_time *****************
  3797 ;; Defined at:
  3798 ;;		line 93 in file "../My_library/My_terminal.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;  tx              2   92[BANK0 ] PTR struct ringbuf
  3801 ;;		 -> usb_tx(8), 
  3802 ;;  op0             2   94[BANK0 ] PTR unsigned char 
  3803 ;;		 -> terminal_loop@op0(25), 
  3804 ;;  op1             2   96[BANK0 ] PTR unsigned char 
  3805 ;;		 -> terminal_loop@op1(25), 
  3806 ;;  op2             2   98[BANK0 ] PTR unsigned char 
  3807 ;;		 -> terminal_loop@op2(25), 
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;		None
  3810 ;; Return value:  Size  Location     Type
  3811 ;;		None               void
  3812 ;; Registers used:
  3813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3819 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3820 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3822 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3823 ;;Total ram usage:        9 bytes
  3824 ;; Hardware stack levels used:    1
  3825 ;; Hardware stack levels required when called:   17
  3826 ;; This function calls:
  3827 ;;		_atoi
  3828 ;;		_month_length
  3829 ;;		_print_time
  3830 ;;		_strcmp
  3831 ;;		_terminal_at_hand
  3832 ;; This function is called by:
  3833 ;;		_terminal_operation
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           	psect	text4
  3838  010900                     __ptext4:
  3839                           	opt stack 0
  3840  010900                     _terminal_time:
  3841                           	opt stack 11
  3842                           
  3843                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  3844                           
  3845                           ;incstack = 0
  3846  010900  C0BE  F060         	movff	terminal_time@op0,strcmp@s1
  3847  010904  C0BF  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3848  010908  0E5E               	movlw	low STR_25
  3849  01090A  0100               	movlb	0	; () banked
  3850  01090C  6F62               	movwf	strcmp@s2& (0+255),b
  3851  01090E  0EFF               	movlw	high STR_25
  3852  010910  0100               	movlb	0	; () banked
  3853  010912  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3854  010914  EC59  F0A0         	call	_strcmp	;wreg free
  3855  010918  0100               	movlb	0	; () banked
  3856  01091A  5160               	movf	?_strcmp& (0+255),w,b
  3857  01091C  0100               	movlb	0	; () banked
  3858  01091E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3859  010920  B4D8               	btfsc	status,2,c
  3860  010922  D012               	goto	l9039
  3861                           
  3862                           ; BSR set to: 0
  3863  010924  C0BE  F060         	movff	terminal_time@op0,strcmp@s1
  3864  010928  C0BF  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3865  01092C  0EE3               	movlw	low (STR_27+1)
  3866  01092E  0100               	movlb	0	; () banked
  3867  010930  6F62               	movwf	strcmp@s2& (0+255),b
  3868  010932  0EFF               	movlw	high (STR_27+1)
  3869  010934  0100               	movlb	0	; () banked
  3870  010936  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3871  010938  EC59  F0A0         	call	_strcmp	;wreg free
  3872  01093C  0100               	movlb	0	; () banked
  3873  01093E  5160               	movf	?_strcmp& (0+255),w,b
  3874  010940  0100               	movlb	0	; () banked
  3875  010942  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3876  010944  A4D8               	btfss	status,2,c
  3877  010946  D006               	goto	l9041
  3878  010948                     l9039:
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;My_terminal.c: 95: print_time(tx);
  3882  010948  C0BC  F095         	movff	terminal_time@tx,print_time@tx
  3883  01094C  C0BD  F096         	movff	terminal_time@tx+1,print_time@tx+1
  3884  010950  ECD1  F09D         	call	_print_time	;wreg free
  3885  010954                     l9041:
  3886                           
  3887                           ;My_terminal.c: 96: }
  3888                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  3889  010954  C0BE  F060         	movff	terminal_time@op0,strcmp@s1
  3890  010958  C0BF  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3891  01095C  0EE2               	movlw	low STR_27
  3892  01095E  0100               	movlb	0	; () banked
  3893  010960  6F62               	movwf	strcmp@s2& (0+255),b
  3894  010962  0EFF               	movlw	high STR_27
  3895  010964  0100               	movlb	0	; () banked
  3896  010966  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3897  010968  EC59  F0A0         	call	_strcmp	;wreg free
  3898  01096C  0100               	movlb	0	; () banked
  3899  01096E  5160               	movf	?_strcmp& (0+255),w,b
  3900  010970  0100               	movlb	0	; () banked
  3901  010972  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3902  010974  B4D8               	btfsc	status,2,c
  3903  010976  D012               	goto	l9045
  3904                           
  3905                           ; BSR set to: 0
  3906  010978  C0BE  F060         	movff	terminal_time@op0,strcmp@s1
  3907  01097C  C0BF  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3908  010980  0E52               	movlw	low STR_28
  3909  010982  0100               	movlb	0	; () banked
  3910  010984  6F62               	movwf	strcmp@s2& (0+255),b
  3911  010986  0EFF               	movlw	high STR_28
  3912  010988  0100               	movlb	0	; () banked
  3913  01098A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3914  01098C  EC59  F0A0         	call	_strcmp	;wreg free
  3915  010990  0100               	movlb	0	; () banked
  3916  010992  5160               	movf	?_strcmp& (0+255),w,b
  3917  010994  0100               	movlb	0	; () banked
  3918  010996  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3919  010998  A4D8               	btfss	status,2,c
  3920  01099A  0012               	return	
  3921  01099C                     l9045:
  3922                           
  3923                           ; BSR set to: 0
  3924                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  3925  01099C  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3926  0109A0  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3927  0109A4  0EE0               	movlw	low (STR_34+2)
  3928  0109A6  0100               	movlb	0	; () banked
  3929  0109A8  6F62               	movwf	strcmp@s2& (0+255),b
  3930  0109AA  0EFF               	movlw	high (STR_34+2)
  3931  0109AC  0100               	movlb	0	; () banked
  3932  0109AE  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3933  0109B0  EC59  F0A0         	call	_strcmp	;wreg free
  3934  0109B4  0100               	movlb	0	; () banked
  3935  0109B6  5160               	movf	?_strcmp& (0+255),w,b
  3936  0109B8  0100               	movlb	0	; () banked
  3937  0109BA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3938  0109BC  B4D8               	btfsc	status,2,c
  3939  0109BE  D012               	goto	l9049
  3940                           
  3941                           ; BSR set to: 0
  3942  0109C0  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3943  0109C4  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3944  0109C8  0EB7               	movlw	low STR_30
  3945  0109CA  0100               	movlb	0	; () banked
  3946  0109CC  6F62               	movwf	strcmp@s2& (0+255),b
  3947  0109CE  0EFF               	movlw	high STR_30
  3948  0109D0  0100               	movlb	0	; () banked
  3949  0109D2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3950  0109D4  EC59  F0A0         	call	_strcmp	;wreg free
  3951  0109D8  0100               	movlb	0	; () banked
  3952  0109DA  5160               	movf	?_strcmp& (0+255),w,b
  3953  0109DC  0100               	movlb	0	; () banked
  3954  0109DE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3955  0109E0  A4D8               	btfss	status,2,c
  3956  0109E2  D01C               	goto	l9051
  3957  0109E4                     l9049:
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  3961  0109E4  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  3962  0109E8  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3963  0109EC  0E54               	movlw	low (_now+10)
  3964  0109EE  0100               	movlb	0	; () banked
  3965  0109F0  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  3966  0109F2  0E01               	movlw	high (_now+10)
  3967  0109F4  0100               	movlb	0	; () banked
  3968  0109F6  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3969  0109F8  0E00               	movlw	0
  3970  0109FA  0100               	movlb	0	; () banked
  3971  0109FC  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  3972  0109FE  0E63               	movlw	99
  3973  010A00  0100               	movlb	0	; () banked
  3974  010A02  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  3975  010A04  C0C2  F066         	movff	terminal_time@op2,atoi@s
  3976  010A08  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  3977  010A0C  EC7A  F092         	call	_atoi	;wreg free
  3978  010A10  0100               	movlb	0	; () banked
  3979  010A12  5166               	movf	?_atoi& (0+255),w,b
  3980  010A14  0100               	movlb	0	; () banked
  3981  010A16  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  3982  010A18  ECF7  F09F         	call	_terminal_at_hand	;wreg free
  3983  010A1C                     l9051:
  3984                           
  3985                           ;My_terminal.c: 100: }
  3986                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  3987  010A1C  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3988  010A20  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3989  010A24  0ECC               	movlw	low (STR_51+2)
  3990  010A26  0100               	movlb	0	; () banked
  3991  010A28  6F62               	movwf	strcmp@s2& (0+255),b
  3992  010A2A  0EFF               	movlw	high (STR_51+2)
  3993  010A2C  0100               	movlb	0	; () banked
  3994  010A2E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3995  010A30  EC59  F0A0         	call	_strcmp	;wreg free
  3996  010A34  0100               	movlb	0	; () banked
  3997  010A36  5160               	movf	?_strcmp& (0+255),w,b
  3998  010A38  0100               	movlb	0	; () banked
  3999  010A3A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4000  010A3C  B4D8               	btfsc	status,2,c
  4001  010A3E  D012               	goto	l9055
  4002                           
  4003                           ; BSR set to: 0
  4004  010A40  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4005  010A44  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4006  010A48  0EA7               	movlw	low STR_32
  4007  010A4A  0100               	movlb	0	; () banked
  4008  010A4C  6F62               	movwf	strcmp@s2& (0+255),b
  4009  010A4E  0EFF               	movlw	high STR_32
  4010  010A50  0100               	movlb	0	; () banked
  4011  010A52  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4012  010A54  EC59  F0A0         	call	_strcmp	;wreg free
  4013  010A58  0100               	movlb	0	; () banked
  4014  010A5A  5160               	movf	?_strcmp& (0+255),w,b
  4015  010A5C  0100               	movlb	0	; () banked
  4016  010A5E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4017  010A60  A4D8               	btfss	status,2,c
  4018  010A62  D01C               	goto	l9057
  4019  010A64                     l9055:
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  4023  010A64  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  4024  010A68  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4025  010A6C  0E53               	movlw	low (_now+9)
  4026  010A6E  0100               	movlb	0	; () banked
  4027  010A70  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  4028  010A72  0E01               	movlw	high (_now+9)
  4029  010A74  0100               	movlb	0	; () banked
  4030  010A76  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4031  010A78  0E01               	movlw	1
  4032  010A7A  0100               	movlb	0	; () banked
  4033  010A7C  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  4034  010A7E  0E0C               	movlw	12
  4035  010A80  0100               	movlb	0	; () banked
  4036  010A82  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  4037  010A84  C0C2  F066         	movff	terminal_time@op2,atoi@s
  4038  010A88  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  4039  010A8C  EC7A  F092         	call	_atoi	;wreg free
  4040  010A90  0100               	movlb	0	; () banked
  4041  010A92  5166               	movf	?_atoi& (0+255),w,b
  4042  010A94  0100               	movlb	0	; () banked
  4043  010A96  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  4044  010A98  ECF7  F09F         	call	_terminal_at_hand	;wreg free
  4045  010A9C                     l9057:
  4046                           
  4047                           ;My_terminal.c: 103: }
  4048                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  4049  010A9C  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4050  010AA0  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4051  010AA4  0EC4               	movlw	low (STR_1+3)
  4052  010AA6  0100               	movlb	0	; () banked
  4053  010AA8  6F62               	movwf	strcmp@s2& (0+255),b
  4054  010AAA  0EFF               	movlw	high (STR_1+3)
  4055  010AAC  0100               	movlb	0	; () banked
  4056  010AAE  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4057  010AB0  EC59  F0A0         	call	_strcmp	;wreg free
  4058  010AB4  0100               	movlb	0	; () banked
  4059  010AB6  5160               	movf	?_strcmp& (0+255),w,b
  4060  010AB8  0100               	movlb	0	; () banked
  4061  010ABA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4062  010ABC  B4D8               	btfsc	status,2,c
  4063  010ABE  D012               	goto	l9061
  4064                           
  4065                           ; BSR set to: 0
  4066  010AC0  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4067  010AC4  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4068  010AC8  0EDE               	movlw	low STR_34
  4069  010ACA  0100               	movlb	0	; () banked
  4070  010ACC  6F62               	movwf	strcmp@s2& (0+255),b
  4071  010ACE  0EFF               	movlw	high STR_34
  4072  010AD0  0100               	movlb	0	; () banked
  4073  010AD2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4074  010AD4  EC59  F0A0         	call	_strcmp	;wreg free
  4075  010AD8  0100               	movlb	0	; () banked
  4076  010ADA  5160               	movf	?_strcmp& (0+255),w,b
  4077  010ADC  0100               	movlb	0	; () banked
  4078  010ADE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4079  010AE0  A4D8               	btfss	status,2,c
  4080  010AE2  D023               	goto	l9065
  4081  010AE4                     l9061:
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4085  010AE4  C153  F066         	movff	_now+9,month_length@month
  4086  010AE8  0101               	movlb	1	; () banked
  4087  010AEA  5154               	movf	(_now+10)& (0+255),w,b
  4088  010AEC  EC57  F094         	call	_month_length
  4089  010AF0  0100               	movlb	0	; () banked
  4090  010AF2  6FC4               	movwf	_terminal_time$6531& (0+255),b
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4094  010AF4  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  4095  010AF8  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4096  010AFC  0E52               	movlw	low (_now+8)
  4097  010AFE  0100               	movlb	0	; () banked
  4098  010B00  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  4099  010B02  0E01               	movlw	high (_now+8)
  4100  010B04  0100               	movlb	0	; () banked
  4101  010B06  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4102  010B08  0E01               	movlw	1
  4103  010B0A  0100               	movlb	0	; () banked
  4104  010B0C  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  4105  010B0E  C0C4  F0BA         	movff	_terminal_time$6531,terminal_at_hand@max
  4106  010B12  C0C2  F066         	movff	terminal_time@op2,atoi@s
  4107  010B16  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  4108  010B1A  EC7A  F092         	call	_atoi	;wreg free
  4109  010B1E  0100               	movlb	0	; () banked
  4110  010B20  5166               	movf	?_atoi& (0+255),w,b
  4111  010B22  0100               	movlb	0	; () banked
  4112  010B24  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  4113  010B26  ECF7  F09F         	call	_terminal_at_hand	;wreg free
  4114  010B2A                     l9065:
  4115                           
  4116                           ;My_terminal.c: 106: }
  4117                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  4118  010B2A  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4119  010B2E  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4120  010B32  0EAB               	movlw	low (STR_32+4)
  4121  010B34  0100               	movlb	0	; () banked
  4122  010B36  6F62               	movwf	strcmp@s2& (0+255),b
  4123  010B38  0EFF               	movlw	high (STR_32+4)
  4124  010B3A  0100               	movlb	0	; () banked
  4125  010B3C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4126  010B3E  EC59  F0A0         	call	_strcmp	;wreg free
  4127  010B42  0100               	movlb	0	; () banked
  4128  010B44  5160               	movf	?_strcmp& (0+255),w,b
  4129  010B46  0100               	movlb	0	; () banked
  4130  010B48  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4131  010B4A  B4D8               	btfsc	status,2,c
  4132  010B4C  D012               	goto	l9069
  4133                           
  4134                           ; BSR set to: 0
  4135  010B4E  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4136  010B52  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4137  010B56  0EBC               	movlw	low STR_36
  4138  010B58  0100               	movlb	0	; () banked
  4139  010B5A  6F62               	movwf	strcmp@s2& (0+255),b
  4140  010B5C  0EFF               	movlw	high STR_36
  4141  010B5E  0100               	movlb	0	; () banked
  4142  010B60  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4143  010B62  EC59  F0A0         	call	_strcmp	;wreg free
  4144  010B66  0100               	movlb	0	; () banked
  4145  010B68  5160               	movf	?_strcmp& (0+255),w,b
  4146  010B6A  0100               	movlb	0	; () banked
  4147  010B6C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4148  010B6E  A4D8               	btfss	status,2,c
  4149  010B70  D01C               	goto	l9071
  4150  010B72                     l9069:
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  4154  010B72  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  4155  010B76  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4156  010B7A  0E50               	movlw	low (_now+6)
  4157  010B7C  0100               	movlb	0	; () banked
  4158  010B7E  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  4159  010B80  0E01               	movlw	high (_now+6)
  4160  010B82  0100               	movlb	0	; () banked
  4161  010B84  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4162  010B86  0E00               	movlw	0
  4163  010B88  0100               	movlb	0	; () banked
  4164  010B8A  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  4165  010B8C  0E17               	movlw	23
  4166  010B8E  0100               	movlb	0	; () banked
  4167  010B90  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  4168  010B92  C0C2  F066         	movff	terminal_time@op2,atoi@s
  4169  010B96  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  4170  010B9A  EC7A  F092         	call	_atoi	;wreg free
  4171  010B9E  0100               	movlb	0	; () banked
  4172  010BA0  5166               	movf	?_atoi& (0+255),w,b
  4173  010BA2  0100               	movlb	0	; () banked
  4174  010BA4  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  4175  010BA6  ECF7  F09F         	call	_terminal_at_hand	;wreg free
  4176  010BAA                     l9071:
  4177                           
  4178                           ;My_terminal.c: 109: }
  4179                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  4180  010BAA  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4181  010BAE  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4182  010BB2  0ED4               	movlw	low (STR_50+2)
  4183  010BB4  0100               	movlb	0	; () banked
  4184  010BB6  6F62               	movwf	strcmp@s2& (0+255),b
  4185  010BB8  0EFF               	movlw	high (STR_50+2)
  4186  010BBA  0100               	movlb	0	; () banked
  4187  010BBC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4188  010BBE  EC59  F0A0         	call	_strcmp	;wreg free
  4189  010BC2  0100               	movlb	0	; () banked
  4190  010BC4  5160               	movf	?_strcmp& (0+255),w,b
  4191  010BC6  0100               	movlb	0	; () banked
  4192  010BC8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4193  010BCA  B4D8               	btfsc	status,2,c
  4194  010BCC  D012               	goto	l9075
  4195                           
  4196                           ; BSR set to: 0
  4197  010BCE  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4198  010BD2  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4199  010BD6  0E9A               	movlw	low STR_38
  4200  010BD8  0100               	movlb	0	; () banked
  4201  010BDA  6F62               	movwf	strcmp@s2& (0+255),b
  4202  010BDC  0EFF               	movlw	high STR_38
  4203  010BDE  0100               	movlb	0	; () banked
  4204  010BE0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4205  010BE2  EC59  F0A0         	call	_strcmp	;wreg free
  4206  010BE6  0100               	movlb	0	; () banked
  4207  010BE8  5160               	movf	?_strcmp& (0+255),w,b
  4208  010BEA  0100               	movlb	0	; () banked
  4209  010BEC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4210  010BEE  A4D8               	btfss	status,2,c
  4211  010BF0  D01C               	goto	l9077
  4212  010BF2                     l9075:
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  4216  010BF2  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  4217  010BF6  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4218  010BFA  0E4F               	movlw	low (_now+5)
  4219  010BFC  0100               	movlb	0	; () banked
  4220  010BFE  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  4221  010C00  0E01               	movlw	high (_now+5)
  4222  010C02  0100               	movlb	0	; () banked
  4223  010C04  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4224  010C06  0E00               	movlw	0
  4225  010C08  0100               	movlb	0	; () banked
  4226  010C0A  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  4227  010C0C  0E3B               	movlw	59
  4228  010C0E  0100               	movlb	0	; () banked
  4229  010C10  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  4230  010C12  C0C2  F066         	movff	terminal_time@op2,atoi@s
  4231  010C16  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  4232  010C1A  EC7A  F092         	call	_atoi	;wreg free
  4233  010C1E  0100               	movlb	0	; () banked
  4234  010C20  5166               	movf	?_atoi& (0+255),w,b
  4235  010C22  0100               	movlb	0	; () banked
  4236  010C24  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  4237  010C26  ECF7  F09F         	call	_terminal_at_hand	;wreg free
  4238  010C2A                     l9077:
  4239                           
  4240                           ;My_terminal.c: 112: }
  4241                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  4242  010C2A  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4243  010C2E  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4244  010C32  0EF5               	movlw	low STR_39
  4245  010C34  0100               	movlb	0	; () banked
  4246  010C36  6F62               	movwf	strcmp@s2& (0+255),b
  4247  010C38  0EFF               	movlw	high STR_39
  4248  010C3A  0100               	movlb	0	; () banked
  4249  010C3C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4250  010C3E  EC59  F0A0         	call	_strcmp	;wreg free
  4251  010C42  0100               	movlb	0	; () banked
  4252  010C44  5160               	movf	?_strcmp& (0+255),w,b
  4253  010C46  0100               	movlb	0	; () banked
  4254  010C48  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4255  010C4A  B4D8               	btfsc	status,2,c
  4256  010C4C  D012               	goto	l9081
  4257                           
  4258                           ; BSR set to: 0
  4259  010C4E  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4260  010C52  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4261  010C56  0E93               	movlw	low STR_40
  4262  010C58  0100               	movlb	0	; () banked
  4263  010C5A  6F62               	movwf	strcmp@s2& (0+255),b
  4264  010C5C  0EFF               	movlw	high STR_40
  4265  010C5E  0100               	movlb	0	; () banked
  4266  010C60  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4267  010C62  EC59  F0A0         	call	_strcmp	;wreg free
  4268  010C66  0100               	movlb	0	; () banked
  4269  010C68  5160               	movf	?_strcmp& (0+255),w,b
  4270  010C6A  0100               	movlb	0	; () banked
  4271  010C6C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4272  010C6E  A4D8               	btfss	status,2,c
  4273  010C70  0012               	return	
  4274  010C72                     l9081:
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  4278  010C72  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  4279  010C76  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4280  010C7A  0E4E               	movlw	low (_now+4)
  4281  010C7C  0100               	movlb	0	; () banked
  4282  010C7E  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  4283  010C80  0E01               	movlw	high (_now+4)
  4284  010C82  0100               	movlb	0	; () banked
  4285  010C84  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4286  010C86  0E00               	movlw	0
  4287  010C88  0100               	movlb	0	; () banked
  4288  010C8A  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  4289  010C8C  0E3B               	movlw	59
  4290  010C8E  0100               	movlb	0	; () banked
  4291  010C90  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  4292  010C92  C0C2  F066         	movff	terminal_time@op2,atoi@s
  4293  010C96  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  4294  010C9A  EC7A  F092         	call	_atoi	;wreg free
  4295  010C9E  0100               	movlb	0	; () banked
  4296  010CA0  5166               	movf	?_atoi& (0+255),w,b
  4297  010CA2  0100               	movlb	0	; () banked
  4298  010CA4  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  4299  010CA6  ECF7  F09F         	call	_terminal_at_hand	;wreg free
  4300  010CAA  0012               	return	
  4301  010CAC                     __end_of_terminal_time:
  4302                           	opt stack 0
  4303                           tblptru	equ	0xFF8
  4304                           tblptrh	equ	0xFF7
  4305                           tblptrl	equ	0xFF6
  4306                           tablat	equ	0xFF5
  4307                           prodh	equ	0xFF4
  4308                           prodl	equ	0xFF3
  4309                           intcon	equ	0xFF2
  4310                           postinc0	equ	0xFEE
  4311                           wreg	equ	0xFE8
  4312                           postdec1	equ	0xFE5
  4313                           fsr1h	equ	0xFE2
  4314                           fsr1l	equ	0xFE1
  4315                           indf2	equ	0xFDF
  4316                           fsr2h	equ	0xFDA
  4317                           fsr2l	equ	0xFD9
  4318                           status	equ	0xFD8
  4319                           
  4320 ;; *************** function _terminal_at_hand *****************
  4321 ;; Defined at:
  4322 ;;		line 82 in file "../My_library/My_terminal.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;  tx              2   85[BANK0 ] PTR struct ringbuf
  4325 ;;		 -> usb_tx(8), 
  4326 ;;  hand            2   87[BANK0 ] PTR unsigned char 
  4327 ;;		 -> now(14), 
  4328 ;;  min             1   89[BANK0 ] unsigned char 
  4329 ;;  max             1   90[BANK0 ] unsigned char 
  4330 ;;  value           1   91[BANK0 ] unsigned char 
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;		None
  4333 ;; Return value:  Size  Location     Type
  4334 ;;		None               void
  4335 ;; Registers used:
  4336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4342 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4345 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4346 ;;Total ram usage:        7 bytes
  4347 ;; Hardware stack levels used:    1
  4348 ;; Hardware stack levels required when called:   16
  4349 ;; This function calls:
  4350 ;;		_RTCC_from_caltime
  4351 ;;		_print_time
  4352 ;;		_ringbuf_put_str
  4353 ;; This function is called by:
  4354 ;;		_terminal_time
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text5
  4359  013FEE                     __ptext5:
  4360                           	opt stack 0
  4361  013FEE                     _terminal_at_hand:
  4362                           	opt stack 11
  4363                           
  4364                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  4365                           
  4366                           ;incstack = 0
  4367  013FEE  0100               	movlb	0	; () banked
  4368  013FF0  51B9               	movf	terminal_at_hand@min& (0+255),w,b
  4369  013FF2  0100               	movlb	0	; () banked
  4370  013FF4  5DBB               	subwf	terminal_at_hand@value& (0+255),w,b
  4371  013FF6  A0D8               	btfss	status,0,c
  4372  013FF8  D01E               	goto	l8781
  4373                           
  4374                           ; BSR set to: 0
  4375  013FFA  0100               	movlb	0	; () banked
  4376  013FFC  51BB               	movf	terminal_at_hand@value& (0+255),w,b
  4377  013FFE  0100               	movlb	0	; () banked
  4378  014000  5DBA               	subwf	terminal_at_hand@max& (0+255),w,b
  4379  014002  A0D8               	btfss	status,0,c
  4380  014004  D018               	goto	l8781
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;My_terminal.c: 84: *hand = value;
  4384  014006  C0B7  FFD9         	movff	terminal_at_hand@hand,fsr2l
  4385  01400A  C0B8  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  4386  01400E  C0BB  FFDF         	movff	terminal_at_hand@value,indf2
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  4390  014012  0E4A               	movlw	low _now
  4391  014014  0100               	movlb	0	; () banked
  4392  014016  6F9B               	movwf	RTCC_from_caltime@tm& (0+255),b
  4393  014018  0E01               	movlw	high _now
  4394  01401A  0100               	movlb	0	; () banked
  4395  01401C  6F9C               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  4396  01401E  ECE5  F0A2         	call	_RTCC_from_caltime	;wreg free
  4397                           
  4398                           ;My_terminal.c: 86: time_change_flag = 1;
  4399  014022  0E01               	movlw	1
  4400  014024  0100               	movlb	0	; () banked
  4401  014026  6FF2               	movwf	_time_change_flag& (0+255),b
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;My_terminal.c: 87: print_time(tx);
  4405  014028  C0B5  F095         	movff	terminal_at_hand@tx,print_time@tx
  4406  01402C  C0B6  F096         	movff	terminal_at_hand@tx+1,print_time@tx+1
  4407  014030  ECD1  F09D         	call	_print_time	;wreg free
  4408                           
  4409                           ;My_terminal.c: 88: } else {
  4410  014034  0012               	return	
  4411  014036                     l8781:
  4412                           
  4413                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  4414  014036  C0B5  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  4415  01403A  C0B6  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  4416  01403E  0E84               	movlw	low STR_24
  4417  014040  0100               	movlb	0	; () banked
  4418  014042  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4419  014044  0EFF               	movlw	high STR_24
  4420  014046  0100               	movlb	0	; () banked
  4421  014048  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4422  01404A  ECC5  F09F         	call	_ringbuf_put_str	;wreg free
  4423  01404E  0012               	return	
  4424  014050                     __end_of_terminal_at_hand:
  4425                           	opt stack 0
  4426                           tblptru	equ	0xFF8
  4427                           tblptrh	equ	0xFF7
  4428                           tblptrl	equ	0xFF6
  4429                           tablat	equ	0xFF5
  4430                           prodh	equ	0xFF4
  4431                           prodl	equ	0xFF3
  4432                           intcon	equ	0xFF2
  4433                           postinc0	equ	0xFEE
  4434                           wreg	equ	0xFE8
  4435                           postdec1	equ	0xFE5
  4436                           fsr1h	equ	0xFE2
  4437                           fsr1l	equ	0xFE1
  4438                           indf2	equ	0xFDF
  4439                           fsr2h	equ	0xFDA
  4440                           fsr2l	equ	0xFD9
  4441                           status	equ	0xFD8
  4442                           
  4443 ;; *************** function _print_time *****************
  4444 ;; Defined at:
  4445 ;;		line 68 in file "../My_library/My_terminal.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;  tx              2   53[BANK0 ] PTR struct ringbuf
  4448 ;;		 -> usb_tx(8), 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;  str            30   55[BANK0 ] unsigned char [30]
  4451 ;; Return value:  Size  Location     Type
  4452 ;;		None               void
  4453 ;; Registers used:
  4454 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4460 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4461 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4463 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4464 ;;Total ram usage:       32 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; Hardware stack levels required when called:   15
  4467 ;; This function calls:
  4468 ;;		_RTCC_from_RTCC
  4469 ;;		_ringbuf_put_str
  4470 ;;		_sprintf
  4471 ;; This function is called by:
  4472 ;;		_terminal_at_hand
  4473 ;;		_terminal_time
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           	psect	text6
  4478  013BA2                     __ptext6:
  4479                           	opt stack 0
  4480  013BA2                     _print_time:
  4481                           	opt stack 11
  4482                           
  4483                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  4484                           
  4485                           ;incstack = 0
  4486  013BA2  0E4A               	movlw	low _now
  4487  013BA4  0100               	movlb	0	; () banked
  4488  013BA6  6F85               	movwf	RTCC_from_RTCC@tm& (0+255),b
  4489  013BA8  0E01               	movlw	high _now
  4490  013BAA  0100               	movlb	0	; () banked
  4491  013BAC  6F86               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  4492  013BAE  EC58  F0A3         	call	_RTCC_from_RTCC	;wreg free
  4493                           
  4494                           ;My_terminal.c: 70: char str[30];
  4495                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  4496                           ;My_terminal.c: 72: now.YY,
  4497                           ;My_terminal.c: 73: now.MM,
  4498                           ;My_terminal.c: 74: now.DD,
  4499                           ;My_terminal.c: 75: weekday_3char[now.EE],
  4500                           ;My_terminal.c: 76: now.hh,
  4501                           ;My_terminal.c: 77: now.mm,
  4502                           ;My_terminal.c: 78: now.ss);
  4503  013BB2  0E97               	movlw	low print_time@str
  4504  013BB4  0100               	movlb	0	; () banked
  4505  013BB6  6F72               	movwf	sprintf@sp& (0+255),b
  4506  013BB8  0E00               	movlw	high print_time@str
  4507  013BBA  0100               	movlb	0	; () banked
  4508  013BBC  6F73               	movwf	(sprintf@sp+1)& (0+255),b
  4509  013BBE  0E2D               	movlw	low STR_23
  4510  013BC0  0100               	movlb	0	; () banked
  4511  013BC2  6F74               	movwf	sprintf@f& (0+255),b
  4512  013BC4  0EFF               	movlw	high STR_23
  4513  013BC6  0100               	movlb	0	; () banked
  4514  013BC8  6F75               	movwf	(sprintf@f+1)& (0+255),b
  4515  013BCA  C154  F076         	movff	_now+10,?_sprintf+4
  4516  013BCE  0100               	movlb	0	; () banked
  4517  013BD0  6B77               	clrf	(?_sprintf+5)& (0+255),b
  4518  013BD2  C153  F078         	movff	_now+9,?_sprintf+6
  4519  013BD6  0100               	movlb	0	; () banked
  4520  013BD8  6B79               	clrf	(?_sprintf+7)& (0+255),b
  4521  013BDA  C152  F07A         	movff	_now+8,?_sprintf+8
  4522  013BDE  0100               	movlb	0	; () banked
  4523  013BE0  6B7B               	clrf	(?_sprintf+9)& (0+255),b
  4524  013BE2  0101               	movlb	1	; () banked
  4525  013BE4  5151               	movf	(_now+7)& (0+255),w,b
  4526  013BE6  0D04               	mullw	4
  4527  013BE8  0EC0               	movlw	low _weekday_3char
  4528  013BEA  24F3               	addwf	prodl,w,c
  4529  013BEC  0100               	movlb	0	; () banked
  4530  013BEE  6F7C               	movwf	(?_sprintf+10)& (0+255),b
  4531  013BF0  0EFD               	movlw	high _weekday_3char
  4532  013BF2  20F4               	addwfc	prodh,w,c
  4533  013BF4  0100               	movlb	0	; () banked
  4534  013BF6  6F7D               	movwf	(?_sprintf+11)& (0+255),b
  4535  013BF8  C150  F07E         	movff	_now+6,?_sprintf+12
  4536  013BFC  0100               	movlb	0	; () banked
  4537  013BFE  6B7F               	clrf	(?_sprintf+13)& (0+255),b
  4538  013C00  C14F  F080         	movff	_now+5,?_sprintf+14
  4539  013C04  0100               	movlb	0	; () banked
  4540  013C06  6B81               	clrf	(?_sprintf+15)& (0+255),b
  4541  013C08  C14E  F082         	movff	_now+4,?_sprintf+16
  4542  013C0C  0100               	movlb	0	; () banked
  4543  013C0E  6B83               	clrf	(?_sprintf+17)& (0+255),b
  4544  013C10  EC53  F082         	call	_sprintf	;wreg free
  4545                           
  4546                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  4547  013C14  C095  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  4548  013C18  C096  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  4549  013C1C  0E97               	movlw	low print_time@str
  4550  013C1E  0100               	movlb	0	; () banked
  4551  013C20  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4552  013C22  0E00               	movlw	high print_time@str
  4553  013C24  0100               	movlb	0	; () banked
  4554  013C26  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4555  013C28  ECC5  F09F         	call	_ringbuf_put_str	;wreg free
  4556  013C2C  0012               	return		;funcret
  4557  013C2E                     __end_of_print_time:
  4558                           	opt stack 0
  4559                           tblptru	equ	0xFF8
  4560                           tblptrh	equ	0xFF7
  4561                           tblptrl	equ	0xFF6
  4562                           tablat	equ	0xFF5
  4563                           prodh	equ	0xFF4
  4564                           prodl	equ	0xFF3
  4565                           intcon	equ	0xFF2
  4566                           postinc0	equ	0xFEE
  4567                           wreg	equ	0xFE8
  4568                           postdec1	equ	0xFE5
  4569                           fsr1h	equ	0xFE2
  4570                           fsr1l	equ	0xFE1
  4571                           indf2	equ	0xFDF
  4572                           fsr2h	equ	0xFDA
  4573                           fsr2l	equ	0xFD9
  4574                           status	equ	0xFD8
  4575                           
  4576 ;; *************** function _sprintf *****************
  4577 ;; Defined at:
  4578 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;  sp              2   18[BANK0 ] PTR unsigned char 
  4581 ;;		 -> print_time@str(30), print_time_dec@str(10), display_dec@s(4), 
  4582 ;;  f               2   20[BANK0 ] PTR const unsigned char 
  4583 ;;		 -> STR_23(37), STR_21(5), STR_1(5), 
  4584 ;; Auto vars:     Size  Location     Type
  4585 ;;  tmpval          4    0        struct .
  4586 ;;  width           2   51[BANK0 ] int 
  4587 ;;  len             2   47[BANK0 ] unsigned int 
  4588 ;;  val             2   45[BANK0 ] unsigned int 
  4589 ;;  cp              2   43[BANK0 ] PTR const unsigned char 
  4590 ;;		 -> STR_61(7), weekday_3char(28), 
  4591 ;;  ap              2   41[BANK0 ] PTR void [1]
  4592 ;;		 -> ?_sprintf(2), 
  4593 ;;  c               1   50[BANK0 ] char 
  4594 ;;  flag            1   49[BANK0 ] unsigned char 
  4595 ;;  prec            1   40[BANK0 ] char 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  2   18[BANK0 ] int 
  4598 ;; Registers used:
  4599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4605 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4606 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4607 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4608 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4609 ;;Total ram usage:       35 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:   12
  4612 ;; This function calls:
  4613 ;;		___lwdiv
  4614 ;;		___lwmod
  4615 ;;		___wmul
  4616 ;;		_isdigit
  4617 ;; This function is called by:
  4618 ;;		_print_time
  4619 ;;		_display_dec
  4620 ;;		_print_time_dec
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text7
  4625  0104A6                     __ptext7:
  4626                           	opt stack 0
  4627  0104A6                     _sprintf:
  4628                           	opt stack 13
  4629                           
  4630                           ;doprnt.c: 494: va_list ap;
  4631                           ;doprnt.c: 499: signed char c;
  4632                           ;doprnt.c: 501: int width;
  4633                           ;doprnt.c: 506: signed char prec;
  4634                           ;doprnt.c: 508: unsigned char flag;
  4635                           ;doprnt.c: 523: union {
  4636                           ;doprnt.c: 524: unsigned long vd;
  4637                           ;doprnt.c: 525: double integ;
  4638                           ;doprnt.c: 526: } tmpval;
  4639                           ;doprnt.c: 528: unsigned int val;
  4640                           ;doprnt.c: 529: unsigned len;
  4641                           ;doprnt.c: 530: const char * cp;
  4642                           ;doprnt.c: 533: *ap = __va_start();
  4643                           
  4644                           ;incstack = 0
  4645  0104A6  0E76               	movlw	low (?_sprintf+4)
  4646  0104A8  0100               	movlb	0	; () banked
  4647  0104AA  6F89               	movwf	sprintf@ap& (0+255),b
  4648  0104AC  0E00               	movlw	high (?_sprintf+4)
  4649  0104AE  0100               	movlb	0	; () banked
  4650  0104B0  6F8A               	movwf	(sprintf@ap+1)& (0+255),b
  4651                           
  4652                           ;doprnt.c: 536: while(c = *f++) {
  4653  0104B2  D20F               	goto	l8715
  4654  0104B4                     l8575:
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;doprnt.c: 538: if(c != '%')
  4658  0104B4  0E25               	movlw	37
  4659  0104B6  0100               	movlb	0	; () banked
  4660  0104B8  1992               	xorwf	sprintf@c& (0+255),w,b
  4661  0104BA  B4D8               	btfsc	status,2,c
  4662  0104BC  D00A               	goto	l8581
  4663                           
  4664                           ; BSR set to: 0
  4665                           ;doprnt.c: 540: {
  4666                           ;doprnt.c: 541: ((*sp++ = (c)));
  4667  0104BE  C072  FFD9         	movff	sprintf@sp,fsr2l
  4668  0104C2  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  4669  0104C6  C092  FFDF         	movff	sprintf@c,indf2
  4670                           
  4671                           ; BSR set to: 0
  4672  0104CA  0100               	movlb	0	; () banked
  4673  0104CC  4B72               	infsnz	sprintf@sp& (0+255),f,b
  4674  0104CE  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  4675                           
  4676                           ;doprnt.c: 542: continue;
  4677  0104D0  D200               	goto	l8715
  4678  0104D2                     l8581:
  4679                           
  4680                           ; BSR set to: 0
  4681                           ;doprnt.c: 543: }
  4682                           ;doprnt.c: 546: width = 0;
  4683  0104D2  0E00               	movlw	0
  4684  0104D4  0100               	movlb	0	; () banked
  4685  0104D6  6F94               	movwf	(sprintf@width+1)& (0+255),b
  4686  0104D8  0E00               	movlw	0
  4687  0104DA  6F93               	movwf	sprintf@width& (0+255),b
  4688                           
  4689                           ;doprnt.c: 548: flag = 0;
  4690  0104DC  0E00               	movlw	0
  4691  0104DE  0100               	movlb	0	; () banked
  4692  0104E0  6F91               	movwf	sprintf@flag& (0+255),b
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;doprnt.c: 551: switch(*f) {
  4696                           
  4697                           ;doprnt.c: 550: for(;;) {
  4698  0104E2  D005               	goto	l8587
  4699  0104E4                     l8583:
  4700                           
  4701                           ;doprnt.c: 580: flag |= 0x04;
  4702  0104E4  0100               	movlb	0	; () banked
  4703  0104E6  8591               	bsf	sprintf@flag& (0+255),2,b
  4704                           
  4705                           ;doprnt.c: 581: f++;
  4706  0104E8  0100               	movlb	0	; () banked
  4707  0104EA  4B74               	infsnz	sprintf@f& (0+255),f,b
  4708  0104EC  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  4709  0104EE                     l8587:
  4710  0104EE  C074  FFF6         	movff	sprintf@f,tblptrl
  4711  0104F2  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4712  0104F6                     	if	0	;tblptru may be non-zero
  4713  0104F6                     	endif
  4714  0104F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4715  0104F6  0E00               	movlw	low (__mediumconst shr (0+16))
  4716  0104F8  6EF8               	movwf	tblptru,c
  4717  0104FA                     	endif
  4718  0104FA  0008               	tblrd		*
  4719  0104FC  50F5               	movf	tablat,w,c
  4720                           
  4721                           ; Switch size 1, requested type "space"
  4722                           ; Number of cases is 1, Range of values is 48 to 48
  4723                           ; switch strategies available:
  4724                           ; Name         Instructions Cycles
  4725                           ; simple_byte            4     3 (average)
  4726                           ;	Chosen strategy is simple_byte
  4727  0104FE  0A30               	xorlw	48	; case 48
  4728  010500  B4D8               	btfsc	status,2,c
  4729  010502  D7F0               	goto	l8583
  4730                           
  4731                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4732                           
  4733                           ;doprnt.c: 586: }
  4734                           
  4735                           ;doprnt.c: 585: break;
  4736  010504  C074  FFF6         	movff	sprintf@f,tblptrl
  4737  010508  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4738  01050C                     	if	0	;tblptru may be non-zero
  4739  01050C                     	endif
  4740  01050C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4741  01050C  0E00               	movlw	low (__mediumconst shr (0+16))
  4742  01050E  6EF8               	movwf	tblptru,c
  4743  010510                     	endif
  4744  010510  0008               	tblrd		*
  4745  010512  50F5               	movf	tablat,w,c
  4746  010514  ECBC  F0A2         	call	_isdigit
  4747  010518  A0D8               	btfss	status,0,c
  4748  01051A  D0CB               	goto	l8637
  4749                           
  4750                           ;doprnt.c: 598: width = 0;
  4751  01051C  0E00               	movlw	0
  4752  01051E  0100               	movlb	0	; () banked
  4753  010520  6F94               	movwf	(sprintf@width+1)& (0+255),b
  4754  010522  0E00               	movlw	0
  4755  010524  6F93               	movwf	sprintf@width& (0+255),b
  4756  010526                     l8593:
  4757                           
  4758                           ;doprnt.c: 600: width *= 10;
  4759  010526  C093  F060         	movff	sprintf@width,___wmul@multiplier
  4760  01052A  C094  F061         	movff	sprintf@width+1,___wmul@multiplier+1
  4761  01052E  0E00               	movlw	0
  4762  010530  0100               	movlb	0	; () banked
  4763  010532  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4764  010534  0E0A               	movlw	10
  4765  010536  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4766  010538  ECE7  F0A1         	call	___wmul	;wreg free
  4767  01053C  C060  F093         	movff	?___wmul,sprintf@width
  4768  010540  C061  F094         	movff	?___wmul+1,sprintf@width+1
  4769                           
  4770                           ;doprnt.c: 601: width += *f++ - '0';
  4771  010544  0ED0               	movlw	208
  4772  010546  0100               	movlb	0	; () banked
  4773  010548  6F84               	movwf	??_sprintf& (0+255),b
  4774  01054A  0EFF               	movlw	255
  4775  01054C  0100               	movlb	0	; () banked
  4776  01054E  6F85               	movwf	(??_sprintf+1)& (0+255),b
  4777  010550  C074  FFF6         	movff	sprintf@f,tblptrl
  4778  010554  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4779  010558                     	if	0	;tblptru may be non-zero
  4780  010558                     	endif
  4781  010558                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4782  010558  0E00               	movlw	low (__mediumconst shr (0+16))
  4783  01055A  6EF8               	movwf	tblptru,c
  4784  01055C                     	endif
  4785  01055C  0008               	tblrd		*
  4786  01055E  50F5               	movf	tablat,w,c
  4787  010560  0100               	movlb	0	; () banked
  4788  010562  6F86               	movwf	(??_sprintf+2)& (0+255),b
  4789  010564  6B87               	clrf	(??_sprintf+3)& (0+255),b
  4790  010566  0100               	movlb	0	; () banked
  4791  010568  5184               	movf	??_sprintf& (0+255),w,b
  4792  01056A  0100               	movlb	0	; () banked
  4793  01056C  2786               	addwf	(??_sprintf+2)& (0+255),f,b
  4794  01056E  0100               	movlb	0	; () banked
  4795  010570  5185               	movf	(??_sprintf+1)& (0+255),w,b
  4796  010572  0100               	movlb	0	; () banked
  4797  010574  2387               	addwfc	(??_sprintf+3)& (0+255),f,b
  4798  010576  0100               	movlb	0	; () banked
  4799  010578  5186               	movf	(??_sprintf+2)& (0+255),w,b
  4800  01057A  0100               	movlb	0	; () banked
  4801  01057C  2793               	addwf	sprintf@width& (0+255),f,b
  4802  01057E  0100               	movlb	0	; () banked
  4803  010580  5187               	movf	(??_sprintf+3)& (0+255),w,b
  4804  010582  0100               	movlb	0	; () banked
  4805  010584  2394               	addwfc	(sprintf@width+1)& (0+255),f,b
  4806                           
  4807                           ; BSR set to: 0
  4808  010586  0100               	movlb	0	; () banked
  4809  010588  4B74               	infsnz	sprintf@f& (0+255),f,b
  4810  01058A  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  4811                           
  4812                           ; BSR set to: 0
  4813                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4814  01058C  C074  FFF6         	movff	sprintf@f,tblptrl
  4815  010590  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4816  010594                     	if	0	;tblptru may be non-zero
  4817  010594                     	endif
  4818  010594                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4819  010594  0E00               	movlw	low (__mediumconst shr (0+16))
  4820  010596  6EF8               	movwf	tblptru,c
  4821  010598                     	endif
  4822  010598  0008               	tblrd		*
  4823  01059A  50F5               	movf	tablat,w,c
  4824  01059C  ECBC  F0A2         	call	_isdigit
  4825  0105A0  A0D8               	btfss	status,0,c
  4826  0105A2  D087               	goto	l8637
  4827  0105A4  D7C0               	goto	l8593
  4828  0105A6                     l8601:
  4829                           
  4830                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4831  0105A6  C089  FFD9         	movff	sprintf@ap,fsr2l
  4832  0105AA  C08A  FFDA         	movff	sprintf@ap+1,fsr2h
  4833  0105AE  CFDE F08B          	movff	postinc2,sprintf@cp
  4834  0105B2  CFDD F08C          	movff	postdec2,sprintf@cp+1
  4835  0105B6  0E02               	movlw	2
  4836  0105B8  0100               	movlb	0	; () banked
  4837  0105BA  2789               	addwf	sprintf@ap& (0+255),f,b
  4838  0105BC  0E00               	movlw	0
  4839  0105BE  238A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;doprnt.c: 740: if(!cp)
  4843  0105C0  0100               	movlb	0	; () banked
  4844  0105C2  518B               	movf	sprintf@cp& (0+255),w,b
  4845  0105C4  0100               	movlb	0	; () banked
  4846  0105C6  118C               	iorwf	(sprintf@cp+1)& (0+255),w,b
  4847  0105C8  A4D8               	btfss	status,2,c
  4848  0105CA  D006               	goto	l8609
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;doprnt.c: 741: cp = "(null)";
  4852  0105CC  0E8C               	movlw	low STR_61
  4853  0105CE  0100               	movlb	0	; () banked
  4854  0105D0  6F8B               	movwf	sprintf@cp& (0+255),b
  4855  0105D2  0EFF               	movlw	high STR_61
  4856  0105D4  0100               	movlb	0	; () banked
  4857  0105D6  6F8C               	movwf	(sprintf@cp+1)& (0+255),b
  4858  0105D8                     l8609:
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;doprnt.c: 745: len = 0;
  4862  0105D8  0E00               	movlw	0
  4863  0105DA  0100               	movlb	0	; () banked
  4864  0105DC  6F90               	movwf	(sprintf@len+1)& (0+255),b
  4865  0105DE  0E00               	movlw	0
  4866  0105E0  6F8F               	movwf	sprintf@len& (0+255),b
  4867                           
  4868                           ;doprnt.c: 746: while(cp[len])
  4869  0105E2  D003               	goto	l8613
  4870  0105E4                     l8611:
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;doprnt.c: 747: len++;
  4874  0105E4  0100               	movlb	0	; () banked
  4875  0105E6  4B8F               	infsnz	sprintf@len& (0+255),f,b
  4876  0105E8  2B90               	incf	(sprintf@len+1)& (0+255),f,b
  4877  0105EA                     l8613:
  4878                           
  4879                           ; BSR set to: 0
  4880  0105EA  0100               	movlb	0	; () banked
  4881  0105EC  518F               	movf	sprintf@len& (0+255),w,b
  4882  0105EE  0100               	movlb	0	; () banked
  4883  0105F0  258B               	addwf	sprintf@cp& (0+255),w,b
  4884  0105F2  0100               	movlb	0	; () banked
  4885  0105F4  6F84               	movwf	??_sprintf& (0+255),b
  4886  0105F6  0100               	movlb	0	; () banked
  4887  0105F8  5190               	movf	(sprintf@len+1)& (0+255),w,b
  4888  0105FA  0100               	movlb	0	; () banked
  4889  0105FC  218C               	addwfc	(sprintf@cp+1)& (0+255),w,b
  4890  0105FE  0100               	movlb	0	; () banked
  4891  010600  6F85               	movwf	(??_sprintf+1)& (0+255),b
  4892  010602  C084  FFF6         	movff	??_sprintf,tblptrl
  4893  010606  C085  FFF7         	movff	??_sprintf+1,tblptrh
  4894  01060A                     	if	0	;tblptru may be non-zero
  4895  01060A                     	endif
  4896  01060A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4897  01060A  0E00               	movlw	low (__mediumconst shr (0+16))
  4898  01060C  6EF8               	movwf	tblptru,c
  4899  01060E                     	endif
  4900  01060E  0008               	tblrd		*
  4901  010610  50F5               	movf	tablat,w,c
  4902  010612  0900               	iorlw	0
  4903  010614  A4D8               	btfss	status,2,c
  4904  010616  D7E6               	goto	l8611
  4905                           
  4906                           ; BSR set to: 0
  4907                           ;doprnt.c: 757: if(width > len)
  4908                           
  4909                           ; BSR set to: 0
  4910  010618  0100               	movlb	0	; () banked
  4911  01061A  5193               	movf	sprintf@width& (0+255),w,b
  4912  01061C  0100               	movlb	0	; () banked
  4913  01061E  5D8F               	subwf	sprintf@len& (0+255),w,b
  4914  010620  0100               	movlb	0	; () banked
  4915  010622  5194               	movf	(sprintf@width+1)& (0+255),w,b
  4916  010624  0100               	movlb	0	; () banked
  4917  010626  5990               	subwfb	(sprintf@len+1)& (0+255),w,b
  4918  010628  B0D8               	btfsc	status,0,c
  4919  01062A  D009               	goto	l8619
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;doprnt.c: 758: width -= len;
  4923  01062C  0100               	movlb	0	; () banked
  4924  01062E  518F               	movf	sprintf@len& (0+255),w,b
  4925  010630  0100               	movlb	0	; () banked
  4926  010632  5F93               	subwf	sprintf@width& (0+255),f,b
  4927  010634  0100               	movlb	0	; () banked
  4928  010636  5190               	movf	(sprintf@len+1)& (0+255),w,b
  4929  010638  0100               	movlb	0	; () banked
  4930  01063A  5B94               	subwfb	(sprintf@width+1)& (0+255),f,b
  4931  01063C  D00F               	goto	l8625
  4932  01063E                     l8619:
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;doprnt.c: 759: else
  4936                           ;doprnt.c: 760: width = 0;
  4937  01063E  0E00               	movlw	0
  4938  010640  0100               	movlb	0	; () banked
  4939  010642  6F94               	movwf	(sprintf@width+1)& (0+255),b
  4940  010644  0E00               	movlw	0
  4941  010646  6F93               	movwf	sprintf@width& (0+255),b
  4942                           
  4943                           ; BSR set to: 0
  4944                           ;doprnt.c: 764: while(width--)
  4945  010648  D009               	goto	l8625
  4946  01064A                     l8621:
  4947                           
  4948                           ; BSR set to: 0
  4949                           ;doprnt.c: 765: ((*sp++ = (' ')));
  4950  01064A  C072  FFD9         	movff	sprintf@sp,fsr2l
  4951  01064E  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  4952  010652  0E20               	movlw	32
  4953  010654  6EDF               	movwf	indf2,c
  4954                           
  4955                           ; BSR set to: 0
  4956  010656  0100               	movlb	0	; () banked
  4957  010658  4B72               	infsnz	sprintf@sp& (0+255),f,b
  4958  01065A  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  4959  01065C                     l8625:
  4960                           
  4961                           ; BSR set to: 0
  4962  01065C  0100               	movlb	0	; () banked
  4963  01065E  0793               	decf	sprintf@width& (0+255),f,b
  4964  010660  A0D8               	btfss	status,0,c
  4965  010662  0794               	decf	(sprintf@width+1)& (0+255),f,b
  4966  010664  0100               	movlb	0	; () banked
  4967  010666  2993               	incf	sprintf@width& (0+255),w,b
  4968  010668  E1F0               	bnz	l8621
  4969  01066A  0100               	movlb	0	; () banked
  4970  01066C  2994               	incf	(sprintf@width+1)& (0+255),w,b
  4971  01066E  B4D8               	btfsc	status,2,c
  4972  010670  D014               	goto	l8633
  4973  010672  D7EB               	goto	l8621
  4974  010674                     l8627:
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  4978  010674  C08B  FFF6         	movff	sprintf@cp,tblptrl
  4979  010678  C08C  FFF7         	movff	sprintf@cp+1,tblptrh
  4980  01067C                     	if	0	;tblptru may be non-zero
  4981  01067C                     	endif
  4982  01067C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4983  01067C  0E00               	movlw	low (__mediumconst shr (0+16))
  4984  01067E  6EF8               	movwf	tblptru,c
  4985  010680                     	endif
  4986  010680  C072  FFD9         	movff	sprintf@sp,fsr2l
  4987  010684  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  4988  010688  0008               	tblrd		*
  4989  01068A  CFF5 FFDF          	movff	tablat,indf2
  4990                           
  4991                           ; BSR set to: 0
  4992  01068E  0100               	movlb	0	; () banked
  4993  010690  4B8B               	infsnz	sprintf@cp& (0+255),f,b
  4994  010692  2B8C               	incf	(sprintf@cp+1)& (0+255),f,b
  4995                           
  4996                           ; BSR set to: 0
  4997  010694  0100               	movlb	0	; () banked
  4998  010696  4B72               	infsnz	sprintf@sp& (0+255),f,b
  4999  010698  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5000  01069A                     l8633:
  5001                           
  5002                           ; BSR set to: 0
  5003  01069A  0100               	movlb	0	; () banked
  5004  01069C  078F               	decf	sprintf@len& (0+255),f,b
  5005  01069E  A0D8               	btfss	status,0,c
  5006  0106A0  0790               	decf	(sprintf@len+1)& (0+255),f,b
  5007  0106A2  0100               	movlb	0	; () banked
  5008  0106A4  298F               	incf	sprintf@len& (0+255),w,b
  5009  0106A6  E1E6               	bnz	l8627
  5010  0106A8  0100               	movlb	0	; () banked
  5011  0106AA  2990               	incf	(sprintf@len+1)& (0+255),w,b
  5012  0106AC  B4D8               	btfsc	status,2,c
  5013  0106AE  D111               	goto	l8715
  5014  0106B0  D7E1               	goto	l8627
  5015  0106B2                     l8637:
  5016  0106B2  C074  FFF6         	movff	sprintf@f,tblptrl
  5017  0106B6  C075  FFF7         	movff	sprintf@f+1,tblptrh
  5018  0106BA  0100               	movlb	0	; () banked
  5019  0106BC  4B74               	infsnz	sprintf@f& (0+255),f,b
  5020  0106BE  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  5021  0106C0                     	if	0	;tblptru may be non-zero
  5022  0106C0                     	endif
  5023  0106C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5024  0106C0  0E00               	movlw	low (__mediumconst shr (0+16))
  5025  0106C2  6EF8               	movwf	tblptru,c
  5026  0106C4                     	endif
  5027  0106C4  0008               	tblrd		*
  5028  0106C6  CFF5 F092          	movff	tablat,sprintf@c
  5029  0106CA  0100               	movlb	0	; () banked
  5030  0106CC  5192               	movf	sprintf@c& (0+255),w,b
  5031                           
  5032                           ; Switch size 1, requested type "space"
  5033                           ; Number of cases is 4, Range of values is 0 to 115
  5034                           ; switch strategies available:
  5035                           ; Name         Instructions Cycles
  5036                           ; simple_byte           13     7 (average)
  5037                           ;	Chosen strategy is simple_byte
  5038  0106CE  0A00               	xorlw	0	; case 0
  5039  0106D0  B4D8               	btfsc	status,2,c
  5040  0106D2  D10F               	goto	l8717
  5041  0106D4  0A64               	xorlw	100	; case 100
  5042  0106D6  B4D8               	btfsc	status,2,c
  5043  0106D8  D007               	goto	l8639
  5044  0106DA  0A0D               	xorlw	13	; case 105
  5045  0106DC  B4D8               	btfsc	status,2,c
  5046  0106DE  D004               	goto	l8639
  5047  0106E0  0A1A               	xorlw	26	; case 115
  5048  0106E2  B4D8               	btfsc	status,2,c
  5049  0106E4  D760               	goto	l8601
  5050  0106E6  D0F5               	goto	l8715
  5051  0106E8                     l8639:
  5052                           
  5053                           ;doprnt.c: 1253: {
  5054                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5055  0106E8  C089  FFD9         	movff	sprintf@ap,fsr2l
  5056  0106EC  C08A  FFDA         	movff	sprintf@ap+1,fsr2h
  5057  0106F0  CFDE F08D          	movff	postinc2,sprintf@val
  5058  0106F4  CFDD F08E          	movff	postdec2,sprintf@val+1
  5059  0106F8  0E02               	movlw	2
  5060  0106FA  0100               	movlb	0	; () banked
  5061  0106FC  2789               	addwf	sprintf@ap& (0+255),f,b
  5062  0106FE  0E00               	movlw	0
  5063  010700  238A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;doprnt.c: 1261: if((int)val < 0) {
  5067  010702  0100               	movlb	0	; () banked
  5068  010704  AF8E               	btfss	(sprintf@val+1)& (0+255),7,b
  5069  010706  D008               	goto	l8649
  5070                           
  5071                           ; BSR set to: 0
  5072                           ;doprnt.c: 1262: flag |= 0x03;
  5073  010708  0E03               	movlw	3
  5074  01070A  0100               	movlb	0	; () banked
  5075  01070C  1391               	iorwf	sprintf@flag& (0+255),f,b
  5076                           
  5077                           ; BSR set to: 0
  5078                           ;doprnt.c: 1263: val = -val;
  5079  01070E  0100               	movlb	0	; () banked
  5080  010710  6D8D               	negf	sprintf@val& (0+255),b
  5081  010712  1F8E               	comf	(sprintf@val+1)& (0+255),f,b
  5082  010714  B0D8               	btfsc	status,0,c
  5083  010716  2B8E               	incf	(sprintf@val+1)& (0+255),f,b
  5084  010718                     l8649:
  5085                           
  5086                           ; BSR set to: 0
  5087                           ;doprnt.c: 1264: }
  5088                           ;doprnt.c: 1266: }
  5089                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5090  010718  0E01               	movlw	1
  5091  01071A  0100               	movlb	0	; () banked
  5092  01071C  6F92               	movwf	sprintf@c& (0+255),b
  5093  01071E                     l8651:
  5094                           
  5095                           ; BSR set to: 0
  5096  01071E  0E05               	movlw	5
  5097  010720  0100               	movlb	0	; () banked
  5098  010722  1992               	xorwf	sprintf@c& (0+255),w,b
  5099  010724  B4D8               	btfsc	status,2,c
  5100  010726  D019               	goto	l8663
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;doprnt.c: 1306: if(val < dpowers[c])
  5104                           
  5105                           ; BSR set to: 0
  5106                           
  5107                           ; BSR set to: 0
  5108  010728  0100               	movlb	0	; () banked
  5109  01072A  5192               	movf	sprintf@c& (0+255),w,b
  5110  01072C  0D02               	mullw	2
  5111  01072E  0E03               	movlw	low _dpowers
  5112  010730  24F3               	addwf	prodl,w,c
  5113  010732  6EF6               	movwf	tblptrl,c
  5114  010734  0EFD               	movlw	high _dpowers
  5115  010736  20F4               	addwfc	prodh,w,c
  5116  010738  6EF7               	movwf	tblptrh,c
  5117  01073A                     	if	1	;There are 3 active tblptr bytes
  5118  01073A  6AF8               	clrf	tblptru,c
  5119  01073C  0E00               	movlw	low (__mediumconst shr (0+16))
  5120  01073E  22F8               	addwfc	tblptru,f,c
  5121  010740                     	endif
  5122  010740  0009               	tblrd		*+
  5123  010742  50F5               	movf	tablat,w,c
  5124  010744  0100               	movlb	0	; () banked
  5125  010746  5D8D               	subwf	sprintf@val& (0+255),w,b
  5126  010748  0009               	tblrd		*+
  5127  01074A  50F5               	movf	tablat,w,c
  5128  01074C  0100               	movlb	0	; () banked
  5129  01074E  598E               	subwfb	(sprintf@val+1)& (0+255),w,b
  5130  010750  A0D8               	btfss	status,0,c
  5131  010752  D003               	goto	l8663
  5132                           
  5133                           ; BSR set to: 0
  5134                           
  5135                           ; BSR set to: 0
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;doprnt.c: 1307: break;
  5139  010754  0100               	movlb	0	; () banked
  5140  010756  2B92               	incf	sprintf@c& (0+255),f,b
  5141  010758  D7E2               	goto	l8651
  5142  01075A                     l8663:
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5146  01075A  0100               	movlb	0	; () banked
  5147  01075C  5193               	movf	sprintf@width& (0+255),w,b
  5148  01075E  0100               	movlb	0	; () banked
  5149  010760  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5150  010762  B4D8               	btfsc	status,2,c
  5151  010764  D00B               	goto	l8669
  5152                           
  5153                           ; BSR set to: 0
  5154  010766  C091  F084         	movff	sprintf@flag,??_sprintf
  5155  01076A  0E03               	movlw	3
  5156  01076C  0100               	movlb	0	; () banked
  5157  01076E  1784               	andwf	??_sprintf& (0+255),f,b
  5158  010770  B4D8               	btfsc	status,2,c
  5159  010772  D004               	goto	l8669
  5160                           
  5161                           ; BSR set to: 0
  5162                           ;doprnt.c: 1346: width--;
  5163  010774  0100               	movlb	0	; () banked
  5164  010776  0793               	decf	sprintf@width& (0+255),f,b
  5165  010778  A0D8               	btfss	status,0,c
  5166  01077A  0794               	decf	(sprintf@width+1)& (0+255),f,b
  5167  01077C                     l8669:
  5168                           
  5169                           ; BSR set to: 0
  5170                           ;doprnt.c: 1381: if(width > c)
  5171  01077C  0E80               	movlw	128
  5172  01077E  0100               	movlb	0	; () banked
  5173  010780  BF92               	btfsc	sprintf@c& (0+255),7,b
  5174  010782  0E7F               	movlw	127
  5175  010784  0100               	movlb	0	; () banked
  5176  010786  6F84               	movwf	??_sprintf& (0+255),b
  5177  010788  0100               	movlb	0	; () banked
  5178  01078A  5193               	movf	sprintf@width& (0+255),w,b
  5179  01078C  0100               	movlb	0	; () banked
  5180  01078E  5D92               	subwf	sprintf@c& (0+255),w,b
  5181  010790  0100               	movlb	0	; () banked
  5182  010792  5194               	movf	(sprintf@width+1)& (0+255),w,b
  5183  010794  0A80               	xorlw	128
  5184  010796  0100               	movlb	0	; () banked
  5185  010798  5984               	subwfb	??_sprintf& (0+255),w,b
  5186  01079A  B0D8               	btfsc	status,0,c
  5187  01079C  D00B               	goto	l8673
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;doprnt.c: 1382: width -= c;
  5191  01079E  0100               	movlb	0	; () banked
  5192  0107A0  5192               	movf	sprintf@c& (0+255),w,b
  5193  0107A2  0100               	movlb	0	; () banked
  5194  0107A4  5F93               	subwf	sprintf@width& (0+255),f,b
  5195  0107A6  0E00               	movlw	0
  5196  0107A8  0100               	movlb	0	; () banked
  5197  0107AA  BF92               	btfsc	sprintf@c& (0+255),7,b
  5198  0107AC  0EFF               	movlw	255
  5199  0107AE  0100               	movlb	0	; () banked
  5200  0107B0  5B94               	subwfb	(sprintf@width+1)& (0+255),f,b
  5201  0107B2  D005               	goto	l8675
  5202  0107B4                     l8673:
  5203                           
  5204                           ; BSR set to: 0
  5205                           ;doprnt.c: 1383: else
  5206                           ;doprnt.c: 1384: width = 0;
  5207  0107B4  0E00               	movlw	0
  5208  0107B6  0100               	movlb	0	; () banked
  5209  0107B8  6F94               	movwf	(sprintf@width+1)& (0+255),b
  5210  0107BA  0E00               	movlw	0
  5211  0107BC  6F93               	movwf	sprintf@width& (0+255),b
  5212  0107BE                     l8675:
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;doprnt.c: 1387: if(flag & 0x04) {
  5216  0107BE  0100               	movlb	0	; () banked
  5217  0107C0  A591               	btfss	sprintf@flag& (0+255),2,b
  5218  0107C2  D024               	goto	l8691
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;doprnt.c: 1392: if(flag & 0x03)
  5222  0107C4  C091  F084         	movff	sprintf@flag,??_sprintf
  5223  0107C8  0E03               	movlw	3
  5224  0107CA  0100               	movlb	0	; () banked
  5225  0107CC  1784               	andwf	??_sprintf& (0+255),f,b
  5226  0107CE  B4D8               	btfsc	status,2,c
  5227  0107D0  D009               	goto	l8683
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  5231  0107D2  C072  FFD9         	movff	sprintf@sp,fsr2l
  5232  0107D6  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5233  0107DA  0E2D               	movlw	45
  5234  0107DC  6EDF               	movwf	indf2,c
  5235                           
  5236                           ; BSR set to: 0
  5237  0107DE  0100               	movlb	0	; () banked
  5238  0107E0  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5239  0107E2  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5240  0107E4                     l8683:
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;doprnt.c: 1415: if(width)
  5244  0107E4  0100               	movlb	0	; () banked
  5245  0107E6  5193               	movf	sprintf@width& (0+255),w,b
  5246  0107E8  0100               	movlb	0	; () banked
  5247  0107EA  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5248  0107EC  B4D8               	btfsc	status,2,c
  5249  0107EE  D037               	goto	l8705
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  5253                           
  5254                           ; BSR set to: 0
  5255                           
  5256                           ;doprnt.c: 1416: do
  5257  0107F0  C072  FFD9         	movff	sprintf@sp,fsr2l
  5258  0107F4  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5259  0107F8  0E30               	movlw	48
  5260  0107FA  6EDF               	movwf	indf2,c
  5261                           
  5262                           ; BSR set to: 0
  5263  0107FC  0100               	movlb	0	; () banked
  5264  0107FE  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5265  010800  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5266                           
  5267                           ; BSR set to: 0
  5268                           ;doprnt.c: 1418: while(--width);
  5269  010802  0100               	movlb	0	; () banked
  5270  010804  0793               	decf	sprintf@width& (0+255),f,b
  5271  010806  A0D8               	btfss	status,0,c
  5272  010808  0794               	decf	(sprintf@width+1)& (0+255),f,b
  5273  01080A  D7EC               	goto	l8683
  5274  01080C                     l8691:
  5275                           
  5276                           ; BSR set to: 0
  5277                           ;doprnt.c: 1422: {
  5278                           ;doprnt.c: 1424: if(width
  5279                           ;doprnt.c: 1428: )
  5280  01080C  0100               	movlb	0	; () banked
  5281  01080E  5193               	movf	sprintf@width& (0+255),w,b
  5282  010810  0100               	movlb	0	; () banked
  5283  010812  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5284  010814  B4D8               	btfsc	status,2,c
  5285  010816  D013               	goto	l8699
  5286  010818                     l8693:
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  5290  010818  C072  FFD9         	movff	sprintf@sp,fsr2l
  5291  01081C  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5292  010820  0E20               	movlw	32
  5293  010822  6EDF               	movwf	indf2,c
  5294                           
  5295                           ; BSR set to: 0
  5296  010824  0100               	movlb	0	; () banked
  5297  010826  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5298  010828  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;doprnt.c: 1431: while(--width);
  5302  01082A  0100               	movlb	0	; () banked
  5303  01082C  0793               	decf	sprintf@width& (0+255),f,b
  5304  01082E  A0D8               	btfss	status,0,c
  5305  010830  0794               	decf	(sprintf@width+1)& (0+255),f,b
  5306  010832  0100               	movlb	0	; () banked
  5307  010834  5193               	movf	sprintf@width& (0+255),w,b
  5308  010836  0100               	movlb	0	; () banked
  5309  010838  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5310  01083A  A4D8               	btfss	status,2,c
  5311  01083C  D7ED               	goto	l8693
  5312  01083E                     l8699:
  5313                           
  5314                           ; BSR set to: 0
  5315                           ;doprnt.c: 1438: if(flag & 0x03)
  5316  01083E  C091  F084         	movff	sprintf@flag,??_sprintf
  5317  010842  0E03               	movlw	3
  5318  010844  0100               	movlb	0	; () banked
  5319  010846  1784               	andwf	??_sprintf& (0+255),f,b
  5320  010848  B4D8               	btfsc	status,2,c
  5321  01084A  D009               	goto	l8705
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  5325  01084C  C072  FFD9         	movff	sprintf@sp,fsr2l
  5326  010850  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5327  010854  0E2D               	movlw	45
  5328  010856  6EDF               	movwf	indf2,c
  5329                           
  5330                           ; BSR set to: 0
  5331  010858  0100               	movlb	0	; () banked
  5332  01085A  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5333  01085C  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5334  01085E                     l8705:
  5335                           
  5336                           ; BSR set to: 0
  5337                           ;doprnt.c: 1469: }
  5338                           ;doprnt.c: 1472: prec = c;
  5339  01085E  C092  F088         	movff	sprintf@c,sprintf@prec
  5340                           
  5341                           ;doprnt.c: 1474: while(prec--) {
  5342  010862  D031               	goto	l8713
  5343  010864                     l8707:
  5344                           
  5345                           ; BSR set to: 0
  5346                           ;doprnt.c: 1478: {
  5347                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5348  010864  0100               	movlb	0	; () banked
  5349  010866  5188               	movf	sprintf@prec& (0+255),w,b
  5350  010868  0D02               	mullw	2
  5351  01086A  0E03               	movlw	low _dpowers
  5352  01086C  24F3               	addwf	prodl,w,c
  5353  01086E  6EF6               	movwf	tblptrl,c
  5354  010870  0EFD               	movlw	high _dpowers
  5355  010872  20F4               	addwfc	prodh,w,c
  5356  010874  6EF7               	movwf	tblptrh,c
  5357  010876                     	if	1	;There are 3 active tblptr bytes
  5358  010876  6AF8               	clrf	tblptru,c
  5359  010878  0E00               	movlw	low (__mediumconst shr (0+16))
  5360  01087A  22F8               	addwfc	tblptru,f,c
  5361  01087C                     	endif
  5362  01087C  0009               	tblrd		*+
  5363  01087E  CFF5 F068          	movff	tablat,___lwdiv@divisor
  5364  010882  000A               	tblrd		*-
  5365  010884  CFF5 F069          	movff	tablat,___lwdiv@divisor+1
  5366  010888  C08D  F066         	movff	sprintf@val,___lwdiv@dividend
  5367  01088C  C08E  F067         	movff	sprintf@val+1,___lwdiv@dividend+1
  5368  010890  EC17  F09F         	call	___lwdiv	;wreg free
  5369  010894  C066  F06D         	movff	?___lwdiv,___lwmod@dividend
  5370  010898  C067  F06E         	movff	?___lwdiv+1,___lwmod@dividend+1
  5371  01089C  0E00               	movlw	0
  5372  01089E  0100               	movlb	0	; () banked
  5373  0108A0  6F70               	movwf	(___lwmod@divisor+1)& (0+255),b
  5374  0108A2  0E0A               	movlw	10
  5375  0108A4  6F6F               	movwf	___lwmod@divisor& (0+255),b
  5376  0108A6  EC28  F0A0         	call	___lwmod	;wreg free
  5377  0108AA  0100               	movlb	0	; () banked
  5378  0108AC  516D               	movf	?___lwmod& (0+255),w,b
  5379  0108AE  0F30               	addlw	48
  5380  0108B0  0100               	movlb	0	; () banked
  5381  0108B2  6F92               	movwf	sprintf@c& (0+255),b
  5382                           
  5383                           ; BSR set to: 0
  5384                           ;doprnt.c: 1523: }
  5385                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5386  0108B4  C072  FFD9         	movff	sprintf@sp,fsr2l
  5387  0108B8  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5388  0108BC  C092  FFDF         	movff	sprintf@c,indf2
  5389                           
  5390                           ; BSR set to: 0
  5391  0108C0  0100               	movlb	0	; () banked
  5392  0108C2  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5393  0108C4  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5394  0108C6                     l8713:
  5395                           
  5396                           ; BSR set to: 0
  5397  0108C6  0100               	movlb	0	; () banked
  5398  0108C8  0788               	decf	sprintf@prec& (0+255),f,b
  5399  0108CA  0100               	movlb	0	; () banked
  5400  0108CC  2988               	incf	sprintf@prec& (0+255),w,b
  5401  0108CE  A4D8               	btfss	status,2,c
  5402  0108D0  D7C9               	goto	l8707
  5403  0108D2                     l8715:
  5404                           
  5405                           ; BSR set to: 0
  5406  0108D2  C074  FFF6         	movff	sprintf@f,tblptrl
  5407  0108D6  C075  FFF7         	movff	sprintf@f+1,tblptrh
  5408  0108DA  0100               	movlb	0	; () banked
  5409  0108DC  4B74               	infsnz	sprintf@f& (0+255),f,b
  5410  0108DE  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  5411  0108E0                     	if	0	;tblptru may be non-zero
  5412  0108E0                     	endif
  5413  0108E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5414  0108E0  0E00               	movlw	low (__mediumconst shr (0+16))
  5415  0108E2  6EF8               	movwf	tblptru,c
  5416  0108E4                     	endif
  5417  0108E4  0008               	tblrd		*
  5418  0108E6  CFF5 F092          	movff	tablat,sprintf@c
  5419  0108EA  0100               	movlb	0	; () banked
  5420  0108EC  5192               	movf	sprintf@c& (0+255),w,b
  5421  0108EE  A4D8               	btfss	status,2,c
  5422  0108F0  D5E1               	goto	l8575
  5423  0108F2                     l8717:
  5424                           
  5425                           ;doprnt.c: 1538: *sp = 0;
  5426  0108F2  C072  FFD9         	movff	sprintf@sp,fsr2l
  5427  0108F6  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5428  0108FA  0E00               	movlw	0
  5429  0108FC  6EDF               	movwf	indf2,c
  5430  0108FE  0012               	return	
  5431  010900                     __end_of_sprintf:
  5432                           	opt stack 0
  5433                           tblptru	equ	0xFF8
  5434                           tblptrh	equ	0xFF7
  5435                           tblptrl	equ	0xFF6
  5436                           tablat	equ	0xFF5
  5437                           prodh	equ	0xFF4
  5438                           prodl	equ	0xFF3
  5439                           intcon	equ	0xFF2
  5440                           postinc0	equ	0xFEE
  5441                           wreg	equ	0xFE8
  5442                           postdec1	equ	0xFE5
  5443                           fsr1h	equ	0xFE2
  5444                           fsr1l	equ	0xFE1
  5445                           indf2	equ	0xFDF
  5446                           postinc2	equ	0xFDE
  5447                           postdec2	equ	0xFDD
  5448                           fsr2h	equ	0xFDA
  5449                           fsr2l	equ	0xFD9
  5450                           status	equ	0xFD8
  5451                           
  5452 ;; *************** function _ringbuf_put_str *****************
  5453 ;; Defined at:
  5454 ;;		line 39 in file "../My_library/My_ringbuf.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  5457 ;;		 -> usb_tx(8), 
  5458 ;;  str             2   17[BANK0 ] PTR const unsigned char 
  5459 ;;		 -> STR_24(8), print_time@str(30), STR_22(3), print_time_dec@str(10), 
  5460 ;;		 -> STR_20(4), STR_19(4), 
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;		None
  5463 ;; Return value:  Size  Location     Type
  5464 ;;		None               void
  5465 ;; Registers used:
  5466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5472 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5475 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5476 ;;Total ram usage:        4 bytes
  5477 ;; Hardware stack levels used:    1
  5478 ;; Hardware stack levels required when called:   13
  5479 ;; This function calls:
  5480 ;;		_ringbuf_put
  5481 ;; This function is called by:
  5482 ;;		_terminal_loop
  5483 ;;		_print_time
  5484 ;;		_terminal_at_hand
  5485 ;;		_print_time_dec
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488                           
  5489                           	psect	text8
  5490  013F8A                     __ptext8:
  5491                           	opt stack 0
  5492  013F8A                     _ringbuf_put_str:
  5493                           	opt stack 13
  5494                           
  5495                           ;My_ringbuf.c: 40: while (*str) {
  5496                           
  5497                           ;incstack = 0
  5498  013F8A  D01C               	goto	l8487
  5499  013F8C                     l8483:
  5500                           
  5501                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
  5502  013F8C  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
  5503  013F90  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
  5504  013F94  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  5505  013F98  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  5506  013F9C  0E00               	movlw	low (__mediumconst shr (0+16))
  5507  013F9E  6EF8               	movwf	tblptru,c
  5508  013FA0  0E0E               	movlw	(high __ramtop+-1)
  5509  013FA2  64F7               	cpfsgt	tblptrh,c
  5510  013FA4  D003               	bra	u8567
  5511  013FA6  0008               	tblrd		*
  5512  013FA8  50F5               	movf	tablat,w,c
  5513  013FAA  D005               	bra	u8560
  5514  013FAC                     u8567:
  5515  013FAC  CFF6 FFE9          	movff	tblptrl,fsr0l
  5516  013FB0  CFF7 FFEA          	movff	tblptrh,fsr0h
  5517  013FB4  50EF               	movf	indf0,w,c
  5518  013FB6                     u8560:
  5519  013FB6  0100               	movlb	0	; () banked
  5520  013FB8  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  5521  013FBA  EC78  F096         	call	_ringbuf_put	;wreg free
  5522  013FBE  0100               	movlb	0	; () banked
  5523  013FC0  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
  5524  013FC2  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
  5525  013FC4                     l8487:
  5526  013FC4  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  5527  013FC8  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  5528  013FCC  0E00               	movlw	low (__mediumconst shr (0+16))
  5529  013FCE  6EF8               	movwf	tblptru,c
  5530  013FD0  0E0E               	movlw	(high __ramtop+-1)
  5531  013FD2  64F7               	cpfsgt	tblptrh,c
  5532  013FD4  D003               	bra	u8577
  5533  013FD6  0008               	tblrd		*
  5534  013FD8  50F5               	movf	tablat,w,c
  5535  013FDA  D005               	bra	u8570
  5536  013FDC                     u8577:
  5537  013FDC  CFF6 FFE9          	movff	tblptrl,fsr0l
  5538  013FE0  CFF7 FFEA          	movff	tblptrh,fsr0h
  5539  013FE4  50EF               	movf	indf0,w,c
  5540  013FE6                     u8570:
  5541  013FE6  0900               	iorlw	0
  5542  013FE8  B4D8               	btfsc	status,2,c
  5543  013FEA  0012               	return	
  5544  013FEC  D7CF               	goto	l8483
  5545  013FEE                     __end_of_ringbuf_put_str:
  5546                           	opt stack 0
  5547                           tblptru	equ	0xFF8
  5548                           tblptrh	equ	0xFF7
  5549                           tblptrl	equ	0xFF6
  5550                           tablat	equ	0xFF5
  5551                           prodh	equ	0xFF4
  5552                           prodl	equ	0xFF3
  5553                           intcon	equ	0xFF2
  5554                           indf0	equ	0xFEF
  5555                           postinc0	equ	0xFEE
  5556                           fsr0h	equ	0xFEA
  5557                           fsr0l	equ	0xFE9
  5558                           wreg	equ	0xFE8
  5559                           postdec1	equ	0xFE5
  5560                           fsr1h	equ	0xFE2
  5561                           fsr1l	equ	0xFE1
  5562                           indf2	equ	0xFDF
  5563                           postinc2	equ	0xFDE
  5564                           postdec2	equ	0xFDD
  5565                           fsr2h	equ	0xFDA
  5566                           fsr2l	equ	0xFD9
  5567                           status	equ	0xFD8
  5568                           
  5569 ;; *************** function _RTCC_from_caltime *****************
  5570 ;; Defined at:
  5571 ;;		line 198 in file "../My_library/My_RTCC.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;  tm              2   59[BANK0 ] PTR struct .
  5574 ;;		 -> now(14), 
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;		None
  5577 ;; Return value:  Size  Location     Type
  5578 ;;		None               void
  5579 ;; Registers used:
  5580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5581 ;; Tracked objects:
  5582 ;;		On entry : 0/0
  5583 ;;		On exit  : 0/0
  5584 ;;		Unchanged: 0/0
  5585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5586 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5589 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5590 ;;Total ram usage:        2 bytes
  5591 ;; Hardware stack levels used:    1
  5592 ;; Hardware stack levels required when called:   14
  5593 ;; This function calls:
  5594 ;;		_caltime_to_RTCC
  5595 ;;		_caltime_to_epoch
  5596 ;;		_epoch_to_caltime
  5597 ;; This function is called by:
  5598 ;;		_terminal_at_hand
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602                           	psect	text9
  5603  0145CA                     __ptext9:
  5604                           	opt stack 0
  5605  0145CA                     _RTCC_from_caltime:
  5606                           	opt stack 12
  5607                           
  5608                           ;My_RTCC.c: 199: caltime_to_epoch(tm);
  5609                           
  5610                           ;incstack = 0
  5611  0145CA  C09B  F078         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  5612  0145CE  C09C  F079         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  5613  0145D2  EC0B  F088         	call	_caltime_to_epoch	;wreg free
  5614                           
  5615                           ;My_RTCC.c: 200: epoch_to_caltime(tm);
  5616  0145D6  C09B  F08D         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  5617  0145DA  C09C  F08E         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  5618  0145DE  ECE3  F08C         	call	_epoch_to_caltime	;wreg free
  5619                           
  5620                           ;My_RTCC.c: 201: caltime_to_RTCC(tm);
  5621  0145E2  C09B  F076         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  5622  0145E6  C09C  F077         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  5623  0145EA  EC0D  F096         	call	_caltime_to_RTCC	;wreg free
  5624  0145EE  0012               	return		;funcret
  5625  0145F0                     __end_of_RTCC_from_caltime:
  5626                           	opt stack 0
  5627                           tblptru	equ	0xFF8
  5628                           tblptrh	equ	0xFF7
  5629                           tblptrl	equ	0xFF6
  5630                           tablat	equ	0xFF5
  5631                           prodh	equ	0xFF4
  5632                           prodl	equ	0xFF3
  5633                           intcon	equ	0xFF2
  5634                           indf0	equ	0xFEF
  5635                           postinc0	equ	0xFEE
  5636                           fsr0h	equ	0xFEA
  5637                           fsr0l	equ	0xFE9
  5638                           wreg	equ	0xFE8
  5639                           postdec1	equ	0xFE5
  5640                           fsr1h	equ	0xFE2
  5641                           fsr1l	equ	0xFE1
  5642                           indf2	equ	0xFDF
  5643                           postinc2	equ	0xFDE
  5644                           postdec2	equ	0xFDD
  5645                           fsr2h	equ	0xFDA
  5646                           fsr2l	equ	0xFD9
  5647                           status	equ	0xFD8
  5648                           
  5649 ;; *************** function _strcmp *****************
  5650 ;; Defined at:
  5651 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  5652 ;; Parameters:    Size  Location     Type
  5653 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  5654 ;;		 -> terminal_loop@op1(25), terminal_loop@op0(25), 
  5655 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  5656 ;;		 -> STR_60(6), STR_59(2), STR_58(2), STR_57(2), 
  5657 ;;		 -> STR_56(2), STR_55(2), STR_54(2), STR_53(2), 
  5658 ;;		 -> STR_52(2), STR_51(4), STR_50(4), STR_49(4), 
  5659 ;;		 -> STR_48(4), STR_47(5), STR_46(4), STR_45(9), 
  5660 ;;		 -> STR_44(9), STR_42(2), STR_41(5), STR_40(7), 
  5661 ;;		 -> STR_39(2), STR_38(7), STR_37(2), STR_36(5), 
  5662 ;;		 -> STR_35(2), STR_34(4), STR_33(2), STR_32(6), 
  5663 ;;		 -> STR_31(2), STR_30(5), STR_29(2), STR_28(12), 
  5664 ;;		 -> STR_27(3), STR_26(2), STR_25(11), 
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;  r               1    5[BANK0 ] char 
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  2    0[BANK0 ] int 
  5669 ;; Registers used:
  5670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5676 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5677 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5678 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5679 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5680 ;;Total ram usage:        6 bytes
  5681 ;; Hardware stack levels used:    1
  5682 ;; Hardware stack levels required when called:   11
  5683 ;; This function calls:
  5684 ;;		Nothing
  5685 ;; This function is called by:
  5686 ;;		_terminal_time
  5687 ;;		_terminal_operation
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           	psect	text10
  5692  0140B2                     __ptext10:
  5693                           	opt stack 0
  5694  0140B2                     _strcmp:
  5695                           	opt stack 16
  5696                           
  5697                           ;incstack = 0
  5698  0140B2  D006               	goto	l8787
  5699  0140B4                     l8785:
  5700  0140B4  0100               	movlb	0	; () banked
  5701  0140B6  4B60               	infsnz	strcmp@s1& (0+255),f,b
  5702  0140B8  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  5703  0140BA  0100               	movlb	0	; () banked
  5704  0140BC  4B62               	infsnz	strcmp@s2& (0+255),f,b
  5705  0140BE  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  5706  0140C0                     l8787:
  5707  0140C0  C060  FFD9         	movff	strcmp@s1,fsr2l
  5708  0140C4  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5709  0140C8  50DF               	movf	indf2,w,c
  5710  0140CA  0100               	movlb	0	; () banked
  5711  0140CC  6F64               	movwf	??_strcmp& (0+255),b
  5712  0140CE  C062  FFF6         	movff	strcmp@s2,tblptrl
  5713  0140D2  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  5714  0140D6                     	if	0	;tblptru may be non-zero
  5715  0140D6                     	endif
  5716  0140D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5717  0140D6  0E00               	movlw	low (__mediumconst shr (0+16))
  5718  0140D8  6EF8               	movwf	tblptru,c
  5719  0140DA                     	endif
  5720  0140DA  0008               	tblrd		*
  5721  0140DC  50F5               	movf	tablat,w,c
  5722  0140DE  0800               	sublw	0
  5723  0140E0  0100               	movlb	0	; () banked
  5724  0140E2  2564               	addwf	??_strcmp& (0+255),w,b
  5725  0140E4  0100               	movlb	0	; () banked
  5726  0140E6  6F65               	movwf	strcmp@r& (0+255),b
  5727  0140E8  0100               	movlb	0	; () banked
  5728  0140EA  5165               	movf	strcmp@r& (0+255),w,b
  5729  0140EC  A4D8               	btfss	status,2,c
  5730  0140EE  D007               	goto	l8791
  5731                           
  5732                           ; BSR set to: 0
  5733  0140F0  C060  FFD9         	movff	strcmp@s1,fsr2l
  5734  0140F4  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5735  0140F8  50DF               	movf	indf2,w,c
  5736  0140FA  A4D8               	btfss	status,2,c
  5737  0140FC  D7DB               	goto	l8785
  5738  0140FE                     l8791:
  5739                           
  5740                           ; BSR set to: 0
  5741  0140FE  0100               	movlb	0	; () banked
  5742  014100  5165               	movf	strcmp@r& (0+255),w,b
  5743  014102  0100               	movlb	0	; () banked
  5744  014104  6F60               	movwf	?_strcmp& (0+255),b
  5745  014106  6B61               	clrf	(?_strcmp+1)& (0+255),b
  5746  014108  BF60               	btfsc	?_strcmp& (0+255),7,b
  5747  01410A  0761               	decf	(?_strcmp+1)& (0+255),f,b
  5748  01410C  0012               	return	
  5749  01410E                     __end_of_strcmp:
  5750                           	opt stack 0
  5751                           tblptru	equ	0xFF8
  5752                           tblptrh	equ	0xFF7
  5753                           tblptrl	equ	0xFF6
  5754                           tablat	equ	0xFF5
  5755                           prodh	equ	0xFF4
  5756                           prodl	equ	0xFF3
  5757                           intcon	equ	0xFF2
  5758                           indf0	equ	0xFEF
  5759                           postinc0	equ	0xFEE
  5760                           fsr0h	equ	0xFEA
  5761                           fsr0l	equ	0xFE9
  5762                           wreg	equ	0xFE8
  5763                           postdec1	equ	0xFE5
  5764                           fsr1h	equ	0xFE2
  5765                           fsr1l	equ	0xFE1
  5766                           indf2	equ	0xFDF
  5767                           postinc2	equ	0xFDE
  5768                           postdec2	equ	0xFDD
  5769                           fsr2h	equ	0xFDA
  5770                           fsr2l	equ	0xFD9
  5771                           status	equ	0xFD8
  5772                           
  5773 ;; *************** function _atoi *****************
  5774 ;; Defined at:
  5775 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  5778 ;;		 -> terminal_loop@op2(25), 
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;  a               2   11[BANK0 ] int 
  5781 ;;  sign            1   10[BANK0 ] unsigned char 
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  2    6[BANK0 ] int 
  5784 ;; Registers used:
  5785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5791 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5792 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5793 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5794 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5795 ;;Total ram usage:        7 bytes
  5796 ;; Hardware stack levels used:    1
  5797 ;; Hardware stack levels required when called:   12
  5798 ;; This function calls:
  5799 ;;		___wmul
  5800 ;;		_isdigit
  5801 ;; This function is called by:
  5802 ;;		_terminal_time
  5803 ;;		_terminal_operation
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text11
  5808  0124F4                     __ptext11:
  5809                           	opt stack 0
  5810  0124F4                     _atoi:
  5811                           	opt stack 15
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;incstack = 0
  5815  0124F4  D003               	goto	l8799
  5816  0124F6                     l8797:
  5817  0124F6  0100               	movlb	0	; () banked
  5818  0124F8  4B66               	infsnz	atoi@s& (0+255),f,b
  5819  0124FA  2B67               	incf	(atoi@s+1)& (0+255),f,b
  5820  0124FC                     l8799:
  5821  0124FC  C066  FFD9         	movff	atoi@s,fsr2l
  5822  012500  C067  FFDA         	movff	atoi@s+1,fsr2h
  5823  012504  0E20               	movlw	32
  5824  012506  18DE               	xorwf	postinc2,w,c
  5825  012508  B4D8               	btfsc	status,2,c
  5826  01250A  D7F5               	goto	l8797
  5827  01250C  C066  FFD9         	movff	atoi@s,fsr2l
  5828  012510  C067  FFDA         	movff	atoi@s+1,fsr2h
  5829  012514  0E09               	movlw	9
  5830  012516  18DE               	xorwf	postinc2,w,c
  5831  012518  B4D8               	btfsc	status,2,c
  5832  01251A  D7ED               	goto	l8797
  5833  01251C  0E00               	movlw	0
  5834  01251E  0100               	movlb	0	; () banked
  5835  012520  6F6C               	movwf	(atoi@a+1)& (0+255),b
  5836  012522  0E00               	movlw	0
  5837  012524  6F6B               	movwf	atoi@a& (0+255),b
  5838  012526  0E00               	movlw	0
  5839  012528  0100               	movlb	0	; () banked
  5840  01252A  6F6A               	movwf	atoi@sign& (0+255),b
  5841                           
  5842                           ; BSR set to: 0
  5843  01252C  C066  FFD9         	movff	atoi@s,fsr2l
  5844  012530  C067  FFDA         	movff	atoi@s+1,fsr2h
  5845  012534  0E2D               	movlw	45
  5846  012536  18DE               	xorwf	postinc2,w,c
  5847  012538  A4D8               	btfss	status,2,c
  5848  01253A  D003               	goto	l8809
  5849                           
  5850                           ; BSR set to: 0
  5851  01253C  0100               	movlb	0	; () banked
  5852  01253E  2B6A               	incf	atoi@sign& (0+255),f,b
  5853  012540  D02E               	goto	l8815
  5854  012542                     l8809:
  5855                           
  5856                           ; BSR set to: 0
  5857  012542  C066  FFD9         	movff	atoi@s,fsr2l
  5858  012546  C067  FFDA         	movff	atoi@s+1,fsr2h
  5859  01254A  0E2B               	movlw	43
  5860  01254C  18DE               	xorwf	postinc2,w,c
  5861  01254E  A4D8               	btfss	status,2,c
  5862  012550  D029               	goto	l8817
  5863  012552  D025               	goto	l8815
  5864  012554                     l8813:
  5865  012554  C06B  F060         	movff	atoi@a,___wmul@multiplier
  5866  012558  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
  5867  01255C  0E00               	movlw	0
  5868  01255E  0100               	movlb	0	; () banked
  5869  012560  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5870  012562  0E0A               	movlw	10
  5871  012564  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5872  012566  ECE7  F0A1         	call	___wmul	;wreg free
  5873  01256A  C066  FFD9         	movff	atoi@s,fsr2l
  5874  01256E  C067  FFDA         	movff	atoi@s+1,fsr2h
  5875  012572  50DF               	movf	indf2,w,c
  5876  012574  0100               	movlb	0	; () banked
  5877  012576  6F68               	movwf	??_atoi& (0+255),b
  5878  012578  6B69               	clrf	(??_atoi+1)& (0+255),b
  5879  01257A  0100               	movlb	0	; () banked
  5880  01257C  5160               	movf	?___wmul& (0+255),w,b
  5881  01257E  0100               	movlb	0	; () banked
  5882  012580  2768               	addwf	??_atoi& (0+255),f,b
  5883  012582  0100               	movlb	0	; () banked
  5884  012584  5161               	movf	(?___wmul+1)& (0+255),w,b
  5885  012586  0100               	movlb	0	; () banked
  5886  012588  2369               	addwfc	(??_atoi+1)& (0+255),f,b
  5887  01258A  0ED0               	movlw	208
  5888  01258C  0100               	movlb	0	; () banked
  5889  01258E  2568               	addwf	??_atoi& (0+255),w,b
  5890  012590  0100               	movlb	0	; () banked
  5891  012592  6F6B               	movwf	atoi@a& (0+255),b
  5892  012594  0EFF               	movlw	255
  5893  012596  0100               	movlb	0	; () banked
  5894  012598  2169               	addwfc	(??_atoi+1)& (0+255),w,b
  5895  01259A  0100               	movlb	0	; () banked
  5896  01259C  6F6C               	movwf	(atoi@a+1)& (0+255),b
  5897  01259E                     l8815:
  5898                           
  5899                           ; BSR set to: 0
  5900  01259E  0100               	movlb	0	; () banked
  5901  0125A0  4B66               	infsnz	atoi@s& (0+255),f,b
  5902  0125A2  2B67               	incf	(atoi@s+1)& (0+255),f,b
  5903  0125A4                     l8817:
  5904                           
  5905                           ; BSR set to: 0
  5906  0125A4  C066  FFD9         	movff	atoi@s,fsr2l
  5907  0125A8  C067  FFDA         	movff	atoi@s+1,fsr2h
  5908  0125AC  50DF               	movf	indf2,w,c
  5909  0125AE  ECBC  F0A2         	call	_isdigit
  5910  0125B2  B0D8               	btfsc	status,0,c
  5911  0125B4  D7CF               	goto	l8813
  5912  0125B6  0100               	movlb	0	; () banked
  5913  0125B8  516A               	movf	atoi@sign& (0+255),w,b
  5914  0125BA  0100               	movlb	0	; () banked
  5915  0125BC  B4D8               	btfsc	status,2,c
  5916  0125BE  D00E               	goto	l1697
  5917                           
  5918                           ; BSR set to: 0
  5919  0125C0  C06B  F068         	movff	atoi@a,??_atoi
  5920  0125C4  C06C  F069         	movff	atoi@a+1,??_atoi+1
  5921  0125C8  0100               	movlb	0	; () banked
  5922  0125CA  1F68               	comf	??_atoi& (0+255),f,b
  5923  0125CC  1F69               	comf	(??_atoi+1)& (0+255),f,b
  5924  0125CE  4B68               	infsnz	??_atoi& (0+255),f,b
  5925  0125D0  2B69               	incf	(??_atoi+1)& (0+255),f,b
  5926  0125D2  C068  F066         	movff	??_atoi,?_atoi
  5927  0125D6  C069  F067         	movff	??_atoi+1,?_atoi+1
  5928  0125DA  0012               	return	
  5929  0125DC                     l1697:
  5930                           
  5931                           ; BSR set to: 0
  5932  0125DC  C06B  F066         	movff	atoi@a,?_atoi
  5933  0125E0  C06C  F067         	movff	atoi@a+1,?_atoi+1
  5934                           
  5935                           ; BSR set to: 0
  5936  0125E4  0012               	return		;funcret
  5937  0125E6                     __end_of_atoi:
  5938                           	opt stack 0
  5939                           tblptru	equ	0xFF8
  5940                           tblptrh	equ	0xFF7
  5941                           tblptrl	equ	0xFF6
  5942                           tablat	equ	0xFF5
  5943                           prodh	equ	0xFF4
  5944                           prodl	equ	0xFF3
  5945                           intcon	equ	0xFF2
  5946                           indf0	equ	0xFEF
  5947                           postinc0	equ	0xFEE
  5948                           fsr0h	equ	0xFEA
  5949                           fsr0l	equ	0xFE9
  5950                           wreg	equ	0xFE8
  5951                           postdec1	equ	0xFE5
  5952                           fsr1h	equ	0xFE2
  5953                           fsr1l	equ	0xFE1
  5954                           indf2	equ	0xFDF
  5955                           postinc2	equ	0xFDE
  5956                           postdec2	equ	0xFDD
  5957                           fsr2h	equ	0xFDA
  5958                           fsr2l	equ	0xFD9
  5959                           status	equ	0xFD8
  5960                           
  5961 ;; *************** function _isdigit *****************
  5962 ;; Defined at:
  5963 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;  c               1    wreg     unsigned char 
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;  c               1    2[BANK0 ] unsigned char 
  5968 ;; Return value:  Size  Location     Type
  5969 ;;		None               void
  5970 ;; Registers used:
  5971 ;;		wreg, status,2, status,0
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : 0/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5978 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5979 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5980 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5981 ;;Total ram usage:        3 bytes
  5982 ;; Hardware stack levels used:    1
  5983 ;; Hardware stack levels required when called:   11
  5984 ;; This function calls:
  5985 ;;		Nothing
  5986 ;; This function is called by:
  5987 ;;		_sprintf
  5988 ;;		_atoi
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           	psect	text12
  5993  014578                     __ptext12:
  5994                           	opt stack 0
  5995  014578                     _isdigit:
  5996                           	opt stack 13
  5997                           
  5998                           ; BSR set to: 0
  5999                           ;incstack = 0
  6000                           ;isdigit@c stored from wreg
  6001  014578  0100               	movlb	0	; () banked
  6002  01457A  6F62               	movwf	isdigit@c& (0+255),b
  6003  01457C  0E00               	movlw	0
  6004  01457E  0100               	movlb	0	; () banked
  6005  014580  6F61               	movwf	_isdigit$5972& (0+255),b
  6006                           
  6007                           ; BSR set to: 0
  6008  014582  0E3A               	movlw	58
  6009  014584  0100               	movlb	0	; () banked
  6010  014586  6162               	cpfslt	isdigit@c& (0+255),b
  6011  014588  D007               	goto	l8433
  6012                           
  6013                           ; BSR set to: 0
  6014  01458A  0E2F               	movlw	47
  6015  01458C  0100               	movlb	0	; () banked
  6016  01458E  6562               	cpfsgt	isdigit@c& (0+255),b
  6017  014590  D003               	goto	l8433
  6018                           
  6019                           ; BSR set to: 0
  6020  014592  0E01               	movlw	1
  6021  014594  0100               	movlb	0	; () banked
  6022  014596  6F61               	movwf	_isdigit$5972& (0+255),b
  6023  014598                     l8433:
  6024                           
  6025                           ; BSR set to: 0
  6026  014598  C061  F060         	movff	_isdigit$5972,??_isdigit
  6027  01459C  0100               	movlb	0	; () banked
  6028  01459E  3160               	rrcf	??_isdigit& (0+255),w,b
  6029  0145A0  0012               	return	
  6030  0145A2                     __end_of_isdigit:
  6031                           	opt stack 0
  6032                           tblptru	equ	0xFF8
  6033                           tblptrh	equ	0xFF7
  6034                           tblptrl	equ	0xFF6
  6035                           tablat	equ	0xFF5
  6036                           prodh	equ	0xFF4
  6037                           prodl	equ	0xFF3
  6038                           intcon	equ	0xFF2
  6039                           indf0	equ	0xFEF
  6040                           postinc0	equ	0xFEE
  6041                           fsr0h	equ	0xFEA
  6042                           fsr0l	equ	0xFE9
  6043                           wreg	equ	0xFE8
  6044                           postdec1	equ	0xFE5
  6045                           fsr1h	equ	0xFE2
  6046                           fsr1l	equ	0xFE1
  6047                           indf2	equ	0xFDF
  6048                           postinc2	equ	0xFDE
  6049                           postdec2	equ	0xFDD
  6050                           fsr2h	equ	0xFDA
  6051                           fsr2l	equ	0xFD9
  6052                           status	equ	0xFD8
  6053                           
  6054 ;; *************** function _ringbuf_put_num *****************
  6055 ;; Defined at:
  6056 ;;		line 28 in file "../My_library/My_ringbuf.c"
  6057 ;; Parameters:    Size  Location     Type
  6058 ;;  rb              2   18[BANK0 ] PTR struct ringbuf
  6059 ;;		 -> usb_tx(8), 
  6060 ;;  value           2   20[BANK0 ] const unsigned int 
  6061 ;;  digits          1   22[BANK0 ] unsigned char 
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;  i               1   23[BANK0 ] unsigned char 
  6064 ;;  temp            2   24[BANK0 ] unsigned int 
  6065 ;; Return value:  Size  Location     Type
  6066 ;;		None               void
  6067 ;; Registers used:
  6068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6069 ;; Tracked objects:
  6070 ;;		On entry : 0/0
  6071 ;;		On exit  : 0/0
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6074 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6075 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6077 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6078 ;;Total ram usage:        8 bytes
  6079 ;; Hardware stack levels used:    1
  6080 ;; Hardware stack levels required when called:   13
  6081 ;; This function calls:
  6082 ;;		___lwdiv
  6083 ;;		___lwmod
  6084 ;;		_ringbuf_put
  6085 ;; This function is called by:
  6086 ;;		_terminal_loop
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           	psect	text13
  6091  013CB2                     __ptext13:
  6092                           	opt stack 0
  6093  013CB2                     _ringbuf_put_num:
  6094                           	opt stack 16
  6095                           
  6096                           ;My_ringbuf.c: 29: while (digits--) {
  6097                           
  6098                           ; BSR set to: 0
  6099                           ;incstack = 0
  6100  013CB2  D039               	goto	l9271
  6101  013CB4                     l856:
  6102                           
  6103                           ; BSR set to: 0
  6104                           ;My_ringbuf.c: 30: uint16_t temp = value;
  6105  013CB4  C074  F078         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  6106  013CB8  C075  F079         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  6107                           
  6108                           ; BSR set to: 0
  6109                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  6110  013CBC  0E00               	movlw	0
  6111  013CBE  0100               	movlb	0	; () banked
  6112  013CC0  6F77               	movwf	ringbuf_put_num@i& (0+255),b
  6113  013CC2  D011               	goto	l9265
  6114  013CC4                     l9261:
  6115                           
  6116                           ; BSR set to: 0
  6117                           ;My_ringbuf.c: 32: temp /= 10;
  6118  013CC4  C078  F066         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  6119  013CC8  C079  F067         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  6120  013CCC  0E00               	movlw	0
  6121  013CCE  0100               	movlb	0	; () banked
  6122  013CD0  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6123  013CD2  0E0A               	movlw	10
  6124  013CD4  6F68               	movwf	___lwdiv@divisor& (0+255),b
  6125  013CD6  EC17  F09F         	call	___lwdiv	;wreg free
  6126  013CDA  C066  F078         	movff	?___lwdiv,ringbuf_put_num@temp
  6127  013CDE  C067  F079         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  6128  013CE2  0100               	movlb	0	; () banked
  6129  013CE4  2B77               	incf	ringbuf_put_num@i& (0+255),f,b
  6130  013CE6                     l9265:
  6131                           
  6132                           ; BSR set to: 0
  6133  013CE6  0100               	movlb	0	; () banked
  6134  013CE8  5176               	movf	ringbuf_put_num@digits& (0+255),w,b
  6135  013CEA  0100               	movlb	0	; () banked
  6136  013CEC  5D77               	subwf	ringbuf_put_num@i& (0+255),w,b
  6137  013CEE  A0D8               	btfss	status,0,c
  6138  013CF0  D7E9               	goto	l9261
  6139                           
  6140                           ; BSR set to: 0
  6141                           ;My_ringbuf.c: 33: }
  6142                           ;My_ringbuf.c: 34: temp %= 10;
  6143                           
  6144                           ; BSR set to: 0
  6145  013CF2  C078  F06D         	movff	ringbuf_put_num@temp,___lwmod@dividend
  6146  013CF6  C079  F06E         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  6147  013CFA  0E00               	movlw	0
  6148  013CFC  0100               	movlb	0	; () banked
  6149  013CFE  6F70               	movwf	(___lwmod@divisor+1)& (0+255),b
  6150  013D00  0E0A               	movlw	10
  6151  013D02  6F6F               	movwf	___lwmod@divisor& (0+255),b
  6152  013D04  EC28  F0A0         	call	___lwmod	;wreg free
  6153  013D08  C06D  F078         	movff	?___lwmod,ringbuf_put_num@temp
  6154  013D0C  C06E  F079         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  6155                           
  6156                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  6157  013D10  C072  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  6158  013D14  C073  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  6159  013D18  0100               	movlb	0	; () banked
  6160  013D1A  5178               	movf	ringbuf_put_num@temp& (0+255),w,b
  6161  013D1C  0F30               	addlw	48
  6162  013D1E  0100               	movlb	0	; () banked
  6163  013D20  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  6164  013D22  EC78  F096         	call	_ringbuf_put	;wreg free
  6165  013D26                     l9271:
  6166  013D26  0100               	movlb	0	; () banked
  6167  013D28  0776               	decf	ringbuf_put_num@digits& (0+255),f,b
  6168  013D2A  0100               	movlb	0	; () banked
  6169  013D2C  2976               	incf	ringbuf_put_num@digits& (0+255),w,b
  6170  013D2E  B4D8               	btfsc	status,2,c
  6171  013D30  0012               	return	
  6172  013D32  D7C0               	goto	l856
  6173  013D34                     __end_of_ringbuf_put_num:
  6174                           	opt stack 0
  6175                           tblptru	equ	0xFF8
  6176                           tblptrh	equ	0xFF7
  6177                           tblptrl	equ	0xFF6
  6178                           tablat	equ	0xFF5
  6179                           prodh	equ	0xFF4
  6180                           prodl	equ	0xFF3
  6181                           intcon	equ	0xFF2
  6182                           indf0	equ	0xFEF
  6183                           postinc0	equ	0xFEE
  6184                           fsr0h	equ	0xFEA
  6185                           fsr0l	equ	0xFE9
  6186                           wreg	equ	0xFE8
  6187                           postdec1	equ	0xFE5
  6188                           fsr1h	equ	0xFE2
  6189                           fsr1l	equ	0xFE1
  6190                           indf2	equ	0xFDF
  6191                           postinc2	equ	0xFDE
  6192                           postdec2	equ	0xFDD
  6193                           fsr2h	equ	0xFDA
  6194                           fsr2l	equ	0xFD9
  6195                           status	equ	0xFD8
  6196                           
  6197 ;; *************** function ___lwmod *****************
  6198 ;; Defined at:
  6199 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;  dividend        2   13[BANK0 ] unsigned int 
  6202 ;;  divisor         2   15[BANK0 ] unsigned int 
  6203 ;; Auto vars:     Size  Location     Type
  6204 ;;  counter         1   17[BANK0 ] unsigned char 
  6205 ;; Return value:  Size  Location     Type
  6206 ;;                  2   13[BANK0 ] unsigned int 
  6207 ;; Registers used:
  6208 ;;		wreg, status,2, status,0
  6209 ;; Tracked objects:
  6210 ;;		On entry : 0/0
  6211 ;;		On exit  : 0/0
  6212 ;;		Unchanged: 0/0
  6213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6214 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6215 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6217 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6218 ;;Total ram usage:        5 bytes
  6219 ;; Hardware stack levels used:    1
  6220 ;; Hardware stack levels required when called:   11
  6221 ;; This function calls:
  6222 ;;		Nothing
  6223 ;; This function is called by:
  6224 ;;		_ringbuf_put_num
  6225 ;;		_sprintf
  6226 ;;		_tx_sendn
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230                           	psect	text14
  6231  014050                     __ptext14:
  6232                           	opt stack 0
  6233  014050                     ___lwmod:
  6234                           	opt stack 13
  6235                           
  6236                           ; BSR set to: 0
  6237                           ;incstack = 0
  6238  014050  0100               	movlb	0	; () banked
  6239  014052  516F               	movf	___lwmod@divisor& (0+255),w,b
  6240  014054  0100               	movlb	0	; () banked
  6241  014056  1170               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  6242  014058  B4D8               	btfsc	status,2,c
  6243  01405A  D026               	goto	l1957
  6244                           
  6245                           ; BSR set to: 0
  6246  01405C  0E01               	movlw	1
  6247  01405E  0100               	movlb	0	; () banked
  6248  014060  6F71               	movwf	___lwmod@counter& (0+255),b
  6249  014062  D006               	goto	l8471
  6250  014064                     l8469:
  6251                           
  6252                           ; BSR set to: 0
  6253  014064  0100               	movlb	0	; () banked
  6254  014066  90D8               	bcf	status,0,c
  6255  014068  376F               	rlcf	___lwmod@divisor& (0+255),f,b
  6256  01406A  3770               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  6257  01406C  0100               	movlb	0	; () banked
  6258  01406E  2B71               	incf	___lwmod@counter& (0+255),f,b
  6259  014070                     l8471:
  6260                           
  6261                           ; BSR set to: 0
  6262  014070  0100               	movlb	0	; () banked
  6263  014072  AF70               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  6264  014074  D7F7               	goto	l8469
  6265  014076                     l8473:
  6266                           
  6267                           ; BSR set to: 0
  6268  014076  0100               	movlb	0	; () banked
  6269  014078  516F               	movf	___lwmod@divisor& (0+255),w,b
  6270  01407A  0100               	movlb	0	; () banked
  6271  01407C  5D6D               	subwf	___lwmod@dividend& (0+255),w,b
  6272  01407E  0100               	movlb	0	; () banked
  6273  014080  5170               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6274  014082  0100               	movlb	0	; () banked
  6275  014084  596E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  6276  014086  A0D8               	btfss	status,0,c
  6277  014088  D008               	goto	l8477
  6278                           
  6279                           ; BSR set to: 0
  6280  01408A  0100               	movlb	0	; () banked
  6281  01408C  516F               	movf	___lwmod@divisor& (0+255),w,b
  6282  01408E  0100               	movlb	0	; () banked
  6283  014090  5F6D               	subwf	___lwmod@dividend& (0+255),f,b
  6284  014092  0100               	movlb	0	; () banked
  6285  014094  5170               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6286  014096  0100               	movlb	0	; () banked
  6287  014098  5B6E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  6288  01409A                     l8477:
  6289                           
  6290                           ; BSR set to: 0
  6291  01409A  0100               	movlb	0	; () banked
  6292  01409C  90D8               	bcf	status,0,c
  6293  01409E  3370               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  6294  0140A0  336F               	rrcf	___lwmod@divisor& (0+255),f,b
  6295                           
  6296                           ; BSR set to: 0
  6297  0140A2  0100               	movlb	0	; () banked
  6298  0140A4  2F71               	decfsz	___lwmod@counter& (0+255),f,b
  6299  0140A6  D7E7               	goto	l8473
  6300  0140A8                     l1957:
  6301                           
  6302                           ; BSR set to: 0
  6303  0140A8  C06D  F06D         	movff	___lwmod@dividend,?___lwmod
  6304  0140AC  C06E  F06E         	movff	___lwmod@dividend+1,?___lwmod+1
  6305                           
  6306                           ; BSR set to: 0
  6307  0140B0  0012               	return		;funcret
  6308  0140B2                     __end_of___lwmod:
  6309                           	opt stack 0
  6310                           tblptru	equ	0xFF8
  6311                           tblptrh	equ	0xFF7
  6312                           tblptrl	equ	0xFF6
  6313                           tablat	equ	0xFF5
  6314                           prodh	equ	0xFF4
  6315                           prodl	equ	0xFF3
  6316                           intcon	equ	0xFF2
  6317                           indf0	equ	0xFEF
  6318                           postinc0	equ	0xFEE
  6319                           fsr0h	equ	0xFEA
  6320                           fsr0l	equ	0xFE9
  6321                           wreg	equ	0xFE8
  6322                           postdec1	equ	0xFE5
  6323                           fsr1h	equ	0xFE2
  6324                           fsr1l	equ	0xFE1
  6325                           indf2	equ	0xFDF
  6326                           postinc2	equ	0xFDE
  6327                           postdec2	equ	0xFDD
  6328                           fsr2h	equ	0xFDA
  6329                           fsr2l	equ	0xFD9
  6330                           status	equ	0xFD8
  6331                           
  6332 ;; *************** function _ringbuf_delete *****************
  6333 ;; Defined at:
  6334 ;;		line 66 in file "../My_library/My_ringbuf.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  6337 ;;		 -> terminal_loop@command(8), 
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;		None
  6340 ;; Return value:  Size  Location     Type
  6341 ;;		None               void
  6342 ;; Registers used:
  6343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6344 ;; Tracked objects:
  6345 ;;		On entry : 0/0
  6346 ;;		On exit  : 0/0
  6347 ;;		Unchanged: 0/0
  6348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6349 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6352 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6353 ;;Total ram usage:        2 bytes
  6354 ;; Hardware stack levels used:    1
  6355 ;; Hardware stack levels required when called:   11
  6356 ;; This function calls:
  6357 ;;		Nothing
  6358 ;; This function is called by:
  6359 ;;		_terminal_loop
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363                           	psect	text15
  6364  0145F0                     __ptext15:
  6365                           	opt stack 0
  6366  0145F0                     _ringbuf_delete:
  6367                           	opt stack 18
  6368                           
  6369                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;incstack = 0
  6373  0145F0  0100               	movlb	0	; () banked
  6374  0145F2  EE20 F006          	lfsr	2,6
  6375  0145F6  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  6376  0145F8  26D9               	addwf	fsr2l,f,c
  6377  0145FA  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  6378  0145FC  22DA               	addwfc	fsr2h,f,c
  6379  0145FE  0100               	movlb	0	; () banked
  6380  014600  EE10 F004          	lfsr	1,4
  6381  014604  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  6382  014606  26E1               	addwf	fsr1l,f,c
  6383  014608  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  6384  01460A  22E2               	addwfc	fsr1h,f,c
  6385  01460C  CFDE FFE6          	movff	postinc2,postinc1
  6386  014610  CFDD FFE5          	movff	postdec2,postdec1
  6387                           
  6388                           ; BSR set to: 0
  6389  014614  0012               	return		;funcret
  6390  014616                     __end_of_ringbuf_delete:
  6391                           	opt stack 0
  6392                           tblptru	equ	0xFF8
  6393                           tblptrh	equ	0xFF7
  6394                           tblptrl	equ	0xFF6
  6395                           tablat	equ	0xFF5
  6396                           prodh	equ	0xFF4
  6397                           prodl	equ	0xFF3
  6398                           intcon	equ	0xFF2
  6399                           indf0	equ	0xFEF
  6400                           postinc0	equ	0xFEE
  6401                           fsr0h	equ	0xFEA
  6402                           fsr0l	equ	0xFE9
  6403                           wreg	equ	0xFE8
  6404                           postinc1	equ	0xFE6
  6405                           postdec1	equ	0xFE5
  6406                           fsr1h	equ	0xFE2
  6407                           fsr1l	equ	0xFE1
  6408                           indf2	equ	0xFDF
  6409                           postinc2	equ	0xFDE
  6410                           postdec2	equ	0xFDD
  6411                           fsr2h	equ	0xFDA
  6412                           fsr2l	equ	0xFD9
  6413                           status	equ	0xFD8
  6414                           
  6415 ;; *************** function _ringbuf_backspace *****************
  6416 ;; Defined at:
  6417 ;;		line 59 in file "../My_library/My_ringbuf.c"
  6418 ;; Parameters:    Size  Location     Type
  6419 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  6420 ;;		 -> terminal_loop@command(8), 
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;		None
  6423 ;; Return value:  Size  Location     Type
  6424 ;;		None               void
  6425 ;; Registers used:
  6426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/0
  6429 ;;		On exit  : 0/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6432 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6434 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6435 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6436 ;;Total ram usage:        6 bytes
  6437 ;; Hardware stack levels used:    1
  6438 ;; Hardware stack levels required when called:   12
  6439 ;; This function calls:
  6440 ;;		_ringbuf_num
  6441 ;; This function is called by:
  6442 ;;		_terminal_loop
  6443 ;; This function uses a non-reentrant model
  6444 ;;
  6445                           
  6446                           	psect	text16
  6447  013A86                     __ptext16:
  6448                           	opt stack 0
  6449  013A86                     _ringbuf_backspace:
  6450                           	opt stack 17
  6451                           
  6452                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  6453                           
  6454                           ; BSR set to: 0
  6455                           ;incstack = 0
  6456  013A86  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  6457  013A8A  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  6458  013A8E  EC6B  F093         	call	_ringbuf_num	;wreg free
  6459  013A92  0100               	movlb	0	; () banked
  6460  013A94  5160               	movf	?_ringbuf_num& (0+255),w,b
  6461  013A96  0100               	movlb	0	; () banked
  6462  013A98  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  6463  013A9A  B4D8               	btfsc	status,2,c
  6464  013A9C  0012               	return	
  6465                           
  6466                           ; BSR set to: 0
  6467                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  6468  013A9E  0100               	movlb	0	; () banked
  6469  013AA0  EE20 F004          	lfsr	2,4
  6470  013AA4  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6471  013AA6  26D9               	addwf	fsr2l,f,c
  6472  013AA8  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6473  013AAA  22DA               	addwfc	fsr2h,f,c
  6474  013AAC  50DE               	movf	postinc2,w,c
  6475  013AAE  10DE               	iorwf	postinc2,w,c
  6476  013AB0  B4D8               	btfsc	status,2,c
  6477  013AB2  D00B               	goto	l9279
  6478                           
  6479                           ; BSR set to: 0
  6480  013AB4  0100               	movlb	0	; () banked
  6481  013AB6  EE20 F004          	lfsr	2,4
  6482  013ABA  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6483  013ABC  26D9               	addwf	fsr2l,f,c
  6484  013ABE  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6485  013AC0  22DA               	addwfc	fsr2h,f,c
  6486  013AC2  06DE               	decf	postinc2,f,c
  6487  013AC4  0E00               	movlw	0
  6488  013AC6  5ADD               	subwfb	postdec2,f,c
  6489  013AC8  0012               	return	
  6490  013ACA                     l9279:
  6491                           
  6492                           ; BSR set to: 0
  6493                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  6494  013ACA  0EFF               	movlw	255
  6495  013ACC  0100               	movlb	0	; () banked
  6496  013ACE  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  6497  013AD0  0EFF               	movlw	255
  6498  013AD2  0100               	movlb	0	; () banked
  6499  013AD4  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  6500  013AD6  0100               	movlb	0	; () banked
  6501  013AD8  EE20 F002          	lfsr	2,2
  6502  013ADC  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6503  013ADE  26D9               	addwf	fsr2l,f,c
  6504  013AE0  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6505  013AE2  22DA               	addwfc	fsr2h,f,c
  6506  013AE4  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  6507  013AE8  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  6508  013AEC  0100               	movlb	0	; () banked
  6509  013AEE  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  6510  013AF0  0100               	movlb	0	; () banked
  6511  013AF2  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  6512  013AF4  0100               	movlb	0	; () banked
  6513  013AF6  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  6514  013AF8  0100               	movlb	0	; () banked
  6515  013AFA  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  6516  013AFC  0100               	movlb	0	; () banked
  6517  013AFE  EE20 F004          	lfsr	2,4
  6518  013B02  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6519  013B04  26D9               	addwf	fsr2l,f,c
  6520  013B06  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6521  013B08  22DA               	addwfc	fsr2h,f,c
  6522  013B0A  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  6523  013B0E  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  6524                           
  6525                           ; BSR set to: 0
  6526  013B12  0012               	return	
  6527  013B14                     __end_of_ringbuf_backspace:
  6528                           	opt stack 0
  6529                           tblptru	equ	0xFF8
  6530                           tblptrh	equ	0xFF7
  6531                           tblptrl	equ	0xFF6
  6532                           tablat	equ	0xFF5
  6533                           prodh	equ	0xFF4
  6534                           prodl	equ	0xFF3
  6535                           intcon	equ	0xFF2
  6536                           indf0	equ	0xFEF
  6537                           postinc0	equ	0xFEE
  6538                           fsr0h	equ	0xFEA
  6539                           fsr0l	equ	0xFE9
  6540                           wreg	equ	0xFE8
  6541                           postinc1	equ	0xFE6
  6542                           postdec1	equ	0xFE5
  6543                           fsr1h	equ	0xFE2
  6544                           fsr1l	equ	0xFE1
  6545                           indf2	equ	0xFDF
  6546                           postinc2	equ	0xFDE
  6547                           postdec2	equ	0xFDD
  6548                           fsr2h	equ	0xFDA
  6549                           fsr2l	equ	0xFD9
  6550                           status	equ	0xFD8
  6551                           
  6552 ;; *************** function _main_init *****************
  6553 ;; Defined at:
  6554 ;;		line 285 in file "PIC18F27J53-killifish_light06.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;		None
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;		None
  6559 ;; Return value:  Size  Location     Type
  6560 ;;		None               void
  6561 ;; Registers used:
  6562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6572 ;;Total ram usage:        0 bytes
  6573 ;; Hardware stack levels used:    1
  6574 ;; Hardware stack levels required when called:   14
  6575 ;; This function calls:
  6576 ;;		_ADC_init
  6577 ;;		_OSC_init
  6578 ;;		_PWM_init
  6579 ;;		_RTCC_init
  6580 ;;		_USB_init
  6581 ;;		_ringbuf_init
  6582 ;;		_timer0_init
  6583 ;;		_timer1_init
  6584 ;;		_timer3_init
  6585 ;; This function is called by:
  6586 ;;		_main
  6587 ;; This function uses a non-reentrant model
  6588 ;;
  6589                           
  6590                           	psect	text17
  6591  0138C2                     __ptext17:
  6592                           	opt stack 0
  6593  0138C2                     _main_init:
  6594                           	opt stack 16
  6595                           
  6596                           ;PIC18F27J53-killifish_light06.c: 286: OSC_init();
  6597                           
  6598                           ; BSR set to: 0
  6599                           ;incstack = 0
  6600  0138C2  EC72  F0A3         	call	_OSC_init	;wreg free
  6601                           
  6602                           ;PIC18F27J53-killifish_light06.c: 287: TRISA = 0b11100111;
  6603  0138C6  0EE7               	movlw	231
  6604  0138C8  6E92               	movwf	3986,c	;volatile
  6605                           
  6606                           ;PIC18F27J53-killifish_light06.c: 288: TRISB = 0b00000000;
  6607  0138CA  0E00               	movlw	0
  6608  0138CC  6E93               	movwf	3987,c	;volatile
  6609                           
  6610                           ;PIC18F27J53-killifish_light06.c: 289: TRISC = 0b10111010;
  6611  0138CE  0EBA               	movlw	186
  6612  0138D0  6E94               	movwf	3988,c	;volatile
  6613                           
  6614                           ;PIC18F27J53-killifish_light06.c: 290: ANCON0 = 0b11111000;
  6615  0138D2  0EF8               	movlw	248
  6616  0138D4  010F               	movlb	15	; () banked
  6617  0138D6  6F48               	movwf	72,b	;volatile
  6618                           
  6619                           ; BSR set to: 15
  6620                           ;PIC18F27J53-killifish_light06.c: 291: ANCON1 = 0b00011111;
  6621  0138D8  0E1F               	movlw	31
  6622  0138DA  010F               	movlb	15	; () banked
  6623  0138DC  6F49               	movwf	73,b	;volatile
  6624                           
  6625                           ; BSR set to: 15
  6626                           ;PIC18F27J53-killifish_light06.c: 292: INTCON2bits.RBPU = 0;
  6627  0138DE  9EF1               	bcf	intcon2,7,c	;volatile
  6628                           
  6629                           ; BSR set to: 15
  6630                           ;PIC18F27J53-killifish_light06.c: 294: timer0_init(8);
  6631  0138E0  0E08               	movlw	8
  6632  0138E2  ECAE  F0A1         	call	_timer0_init
  6633                           
  6634                           ;PIC18F27J53-killifish_light06.c: 295: timer1_init(0, 2);
  6635  0138E6  0E02               	movlw	2
  6636  0138E8  0100               	movlb	0	; () banked
  6637  0138EA  6F60               	movwf	timer1_init@clock_select& (0+255),b
  6638  0138EC  0E00               	movlw	0
  6639  0138EE  ECDF  F0A0         	call	_timer1_init
  6640                           
  6641                           ;PIC18F27J53-killifish_light06.c: 296: timer3_init(2);
  6642  0138F2  0E02               	movlw	2
  6643  0138F4  EC64  F0A2         	call	_timer3_init
  6644                           
  6645                           ;PIC18F27J53-killifish_light06.c: 297: ADC_init(0);
  6646  0138F8  0E00               	movlw	0
  6647  0138FA  EC1C  F0A3         	call	_ADC_init
  6648                           
  6649                           ;PIC18F27J53-killifish_light06.c: 298: RTCC_init();
  6650  0138FE  EC35  F0A2         	call	_RTCC_init	;wreg free
  6651                           
  6652                           ;PIC18F27J53-killifish_light06.c: 299: PWM_init(250);
  6653  013902  0EFA               	movlw	250
  6654  013904  EC42  F099         	call	_PWM_init
  6655                           
  6656                           ;PIC18F27J53-killifish_light06.c: 301: USB_init();
  6657  013908  EC3C  F0A3         	call	_USB_init	;wreg free
  6658                           
  6659                           ;PIC18F27J53-killifish_light06.c: 302: static uint8_t txbuf[1000];
  6660                           ;PIC18F27J53-killifish_light06.c: 303: ringbuf_init(&usb_tx, txbuf, sizeof (txbuf));
  6661  01390C  0E78               	movlw	low _usb_tx
  6662  01390E  0100               	movlb	0	; () banked
  6663  013910  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6664  013912  0E01               	movlw	high _usb_tx
  6665  013914  0100               	movlb	0	; () banked
  6666  013916  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6667  013918  0E69               	movlw	low main_init@txbuf
  6668  01391A  0100               	movlb	0	; () banked
  6669  01391C  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6670  01391E  0E04               	movlw	high main_init@txbuf
  6671  013920  0100               	movlb	0	; () banked
  6672  013922  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6673  013924  0E03               	movlw	3
  6674  013926  0100               	movlb	0	; () banked
  6675  013928  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6676  01392A  0EE8               	movlw	232
  6677  01392C  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6678  01392E  ECB5  F0A0         	call	_ringbuf_init	;wreg free
  6679                           
  6680                           ;PIC18F27J53-killifish_light06.c: 304: static uint8_t rxbuf[250];
  6681                           ;PIC18F27J53-killifish_light06.c: 305: ringbuf_init(&usb_rx, rxbuf, sizeof (rxbuf));
  6682  013932  0E70               	movlw	low _usb_rx
  6683  013934  0100               	movlb	0	; () banked
  6684  013936  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6685  013938  0E01               	movlw	high _usb_rx
  6686  01393A  0100               	movlb	0	; () banked
  6687  01393C  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6688  01393E  0E00               	movlw	low main_init@rxbuf
  6689  013940  0100               	movlb	0	; () banked
  6690  013942  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6691  013944  0E03               	movlw	high main_init@rxbuf
  6692  013946  0100               	movlb	0	; () banked
  6693  013948  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6694  01394A  0E00               	movlw	0
  6695  01394C  0100               	movlb	0	; () banked
  6696  01394E  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6697  013950  0EFA               	movlw	250
  6698  013952  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6699  013954  ECB5  F0A0         	call	_ringbuf_init	;wreg free
  6700  013958  0012               	return		;funcret
  6701  01395A                     __end_of_main_init:
  6702                           	opt stack 0
  6703                           tblptru	equ	0xFF8
  6704                           tblptrh	equ	0xFF7
  6705                           tblptrl	equ	0xFF6
  6706                           tablat	equ	0xFF5
  6707                           prodh	equ	0xFF4
  6708                           prodl	equ	0xFF3
  6709                           intcon	equ	0xFF2
  6710                           intcon2	equ	0xFF1
  6711                           indf0	equ	0xFEF
  6712                           postinc0	equ	0xFEE
  6713                           fsr0h	equ	0xFEA
  6714                           fsr0l	equ	0xFE9
  6715                           wreg	equ	0xFE8
  6716                           postinc1	equ	0xFE6
  6717                           postdec1	equ	0xFE5
  6718                           fsr1h	equ	0xFE2
  6719                           fsr1l	equ	0xFE1
  6720                           indf2	equ	0xFDF
  6721                           postinc2	equ	0xFDE
  6722                           postdec2	equ	0xFDD
  6723                           fsr2h	equ	0xFDA
  6724                           fsr2l	equ	0xFD9
  6725                           status	equ	0xFD8
  6726                           
  6727 ;; *************** function _timer3_init *****************
  6728 ;; Defined at:
  6729 ;;		line 72 in file "../My_library/My_PIC.c"
  6730 ;; Parameters:    Size  Location     Type
  6731 ;;  prescaler       1    wreg     unsigned char 
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;  prescaler       1    1[BANK0 ] unsigned char 
  6734 ;; Return value:  Size  Location     Type
  6735 ;;		None               void
  6736 ;; Registers used:
  6737 ;;		wreg, status,2, status,0
  6738 ;; Tracked objects:
  6739 ;;		On entry : 0/0
  6740 ;;		On exit  : 0/0
  6741 ;;		Unchanged: 0/0
  6742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6744 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6745 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6746 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6747 ;;Total ram usage:        2 bytes
  6748 ;; Hardware stack levels used:    1
  6749 ;; Hardware stack levels required when called:   11
  6750 ;; This function calls:
  6751 ;;		Nothing
  6752 ;; This function is called by:
  6753 ;;		_main_init
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           	psect	text18
  6758  0144C8                     __ptext18:
  6759                           	opt stack 0
  6760  0144C8                     _timer3_init:
  6761                           	opt stack 18
  6762                           
  6763                           ;incstack = 0
  6764                           ;timer3_init@prescaler stored from wreg
  6765  0144C8  0100               	movlb	0	; () banked
  6766  0144CA  6F61               	movwf	timer3_init@prescaler& (0+255),b
  6767                           
  6768                           ;My_PIC.c: 73: T3CONbits.TMR3CS = 0;
  6769  0144CC  0E3F               	movlw	-193
  6770  0144CE  1679               	andwf	3961,f,c	;volatile
  6771                           
  6772                           ;My_PIC.c: 74: T3CONbits.T3OSCEN = 0;
  6773  0144D0  9679               	bcf	3961,3,c	;volatile
  6774                           
  6775                           ;My_PIC.c: 75: T3CONbits.T3CKPS = prescaler;
  6776  0144D2  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
  6777  0144D6  0100               	movlb	0	; () banked
  6778  0144D8  3B60               	swapf	??_timer3_init& (0+255),f,b
  6779  0144DA  5079               	movf	3961,w,c	;volatile
  6780  0144DC  0100               	movlb	0	; () banked
  6781  0144DE  1960               	xorwf	??_timer3_init& (0+255),w,b
  6782  0144E0  0BCF               	andlw	-49
  6783  0144E2  1960               	xorwf	??_timer3_init& (0+255),w,b
  6784  0144E4  6E79               	movwf	3961,c	;volatile
  6785                           
  6786                           ; BSR set to: 0
  6787                           ;My_PIC.c: 76: T3CONbits.RD163 = 0;
  6788  0144E6  9E79               	bcf	3961,7,c	;volatile
  6789                           
  6790                           ; BSR set to: 0
  6791                           ;My_PIC.c: 77: T3CONbits.TMR3ON = 1;
  6792  0144E8  8079               	bsf	3961,0,c	;volatile
  6793                           
  6794                           ; BSR set to: 0
  6795                           ;My_PIC.c: 78: IPR2bits.TMR3IP = 0;
  6796  0144EA  92A2               	bcf	4002,1,c	;volatile
  6797                           
  6798                           ; BSR set to: 0
  6799                           ;My_PIC.c: 79: PIR2bits.TMR3IF = 0;
  6800  0144EC  92A1               	bcf	4001,1,c	;volatile
  6801                           
  6802                           ; BSR set to: 0
  6803                           ;My_PIC.c: 80: PIE2bits.TMR3IE = 1;
  6804  0144EE  82A0               	bsf	4000,1,c	;volatile
  6805                           
  6806                           ; BSR set to: 0
  6807                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  6808  0144F0  8CF2               	bsf	intcon,6,c	;volatile
  6809                           
  6810                           ; BSR set to: 0
  6811  0144F2  0012               	return		;funcret
  6812  0144F4                     __end_of_timer3_init:
  6813                           	opt stack 0
  6814                           tblptru	equ	0xFF8
  6815                           tblptrh	equ	0xFF7
  6816                           tblptrl	equ	0xFF6
  6817                           tablat	equ	0xFF5
  6818                           prodh	equ	0xFF4
  6819                           prodl	equ	0xFF3
  6820                           intcon	equ	0xFF2
  6821                           intcon2	equ	0xFF1
  6822                           indf0	equ	0xFEF
  6823                           postinc0	equ	0xFEE
  6824                           fsr0h	equ	0xFEA
  6825                           fsr0l	equ	0xFE9
  6826                           wreg	equ	0xFE8
  6827                           postinc1	equ	0xFE6
  6828                           postdec1	equ	0xFE5
  6829                           fsr1h	equ	0xFE2
  6830                           fsr1l	equ	0xFE1
  6831                           indf2	equ	0xFDF
  6832                           postinc2	equ	0xFDE
  6833                           postdec2	equ	0xFDD
  6834                           fsr2h	equ	0xFDA
  6835                           fsr2l	equ	0xFD9
  6836                           status	equ	0xFD8
  6837                           
  6838 ;; *************** function _timer1_init *****************
  6839 ;; Defined at:
  6840 ;;		line 41 in file "../My_library/My_PIC.c"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;  prescaler       1    wreg     unsigned char 
  6843 ;;  clock_select    1    0[BANK0 ] unsigned char 
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;  prescaler       1    2[BANK0 ] unsigned char 
  6846 ;; Return value:  Size  Location     Type
  6847 ;;		None               void
  6848 ;; Registers used:
  6849 ;;		wreg, status,2, status,0
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6855 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6856 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6857 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6858 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6859 ;;Total ram usage:        3 bytes
  6860 ;; Hardware stack levels used:    1
  6861 ;; Hardware stack levels required when called:   11
  6862 ;; This function calls:
  6863 ;;		Nothing
  6864 ;; This function is called by:
  6865 ;;		_main_init
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869                           	psect	text19
  6870  0141BE                     __ptext19:
  6871                           	opt stack 0
  6872  0141BE                     _timer1_init:
  6873                           	opt stack 18
  6874                           
  6875                           ; BSR set to: 0
  6876                           ;incstack = 0
  6877                           ;timer1_init@prescaler stored from wreg
  6878  0141BE  0100               	movlb	0	; () banked
  6879  0141C0  6F62               	movwf	timer1_init@prescaler& (0+255),b
  6880                           
  6881                           ;My_PIC.c: 42: T1CONbits.TMR1CS = clock_select;
  6882  0141C2  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
  6883  0141C6  0100               	movlb	0	; () banked
  6884  0141C8  3B61               	swapf	??_timer1_init& (0+255),f,b
  6885  0141CA  4761               	rlncf	??_timer1_init& (0+255),f,b
  6886  0141CC  4761               	rlncf	??_timer1_init& (0+255),f,b
  6887  0141CE  50CD               	movf	4045,w,c	;volatile
  6888  0141D0  0100               	movlb	0	; () banked
  6889  0141D2  1961               	xorwf	??_timer1_init& (0+255),w,b
  6890  0141D4  0B3F               	andlw	-193
  6891  0141D6  1961               	xorwf	??_timer1_init& (0+255),w,b
  6892  0141D8  6ECD               	movwf	4045,c	;volatile
  6893                           
  6894                           ;My_PIC.c: 43: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  6895  0141DA  0E02               	movlw	2
  6896  0141DC  0100               	movlb	0	; () banked
  6897  0141DE  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
  6898  0141E0  A4D8               	btfss	status,2,c
  6899  0141E2  D002               	goto	l757
  6900                           
  6901                           ; BSR set to: 0
  6902  0141E4  86CD               	bsf	4045,3,c	;volatile
  6903  0141E6  D001               	goto	l9201
  6904  0141E8                     l757:
  6905                           
  6906                           ; BSR set to: 0
  6907                           ;My_PIC.c: 44: else T1CONbits.T1OSCEN = 0;
  6908  0141E8  96CD               	bcf	4045,3,c	;volatile
  6909  0141EA                     l9201:
  6910                           
  6911                           ; BSR set to: 0
  6912                           ;My_PIC.c: 45: T1CONbits.T1CKPS = prescaler;
  6913  0141EA  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
  6914  0141EE  0100               	movlb	0	; () banked
  6915  0141F0  3B61               	swapf	??_timer1_init& (0+255),f,b
  6916  0141F2  50CD               	movf	4045,w,c	;volatile
  6917  0141F4  0100               	movlb	0	; () banked
  6918  0141F6  1961               	xorwf	??_timer1_init& (0+255),w,b
  6919  0141F8  0BCF               	andlw	-49
  6920  0141FA  1961               	xorwf	??_timer1_init& (0+255),w,b
  6921  0141FC  6ECD               	movwf	4045,c	;volatile
  6922                           
  6923                           ; BSR set to: 0
  6924                           ;My_PIC.c: 46: T1CONbits.nT1SYNC = 1;
  6925  0141FE  84CD               	bsf	4045,2,c	;volatile
  6926                           
  6927                           ; BSR set to: 0
  6928                           ;My_PIC.c: 47: T1CONbits.RD16 = 0;
  6929  014200  92CD               	bcf	4045,1,c	;volatile
  6930                           
  6931                           ; BSR set to: 0
  6932                           ;My_PIC.c: 48: T1CONbits.TMR1ON = 1;
  6933  014202  80CD               	bsf	4045,0,c	;volatile
  6934                           
  6935                           ; BSR set to: 0
  6936                           ;My_PIC.c: 49: IPR1bits.TMR1IP = 0;
  6937  014204  909F               	bcf	3999,0,c	;volatile
  6938                           
  6939                           ; BSR set to: 0
  6940                           ;My_PIC.c: 50: PIR1bits.TMR1IF = 0;
  6941  014206  909E               	bcf	3998,0,c	;volatile
  6942                           
  6943                           ; BSR set to: 0
  6944                           ;My_PIC.c: 51: PIE1bits.TMR1IE = 1;
  6945  014208  809D               	bsf	3997,0,c	;volatile
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;My_PIC.c: 52: INTCONbits.PEIE = 1;
  6949  01420A  8CF2               	bsf	intcon,6,c	;volatile
  6950                           
  6951                           ; BSR set to: 0
  6952  01420C  0012               	return		;funcret
  6953  01420E                     __end_of_timer1_init:
  6954                           	opt stack 0
  6955                           tblptru	equ	0xFF8
  6956                           tblptrh	equ	0xFF7
  6957                           tblptrl	equ	0xFF6
  6958                           tablat	equ	0xFF5
  6959                           prodh	equ	0xFF4
  6960                           prodl	equ	0xFF3
  6961                           intcon	equ	0xFF2
  6962                           intcon2	equ	0xFF1
  6963                           indf0	equ	0xFEF
  6964                           postinc0	equ	0xFEE
  6965                           fsr0h	equ	0xFEA
  6966                           fsr0l	equ	0xFE9
  6967                           wreg	equ	0xFE8
  6968                           postinc1	equ	0xFE6
  6969                           postdec1	equ	0xFE5
  6970                           fsr1h	equ	0xFE2
  6971                           fsr1l	equ	0xFE1
  6972                           indf2	equ	0xFDF
  6973                           postinc2	equ	0xFDE
  6974                           postdec2	equ	0xFDD
  6975                           fsr2h	equ	0xFDA
  6976                           fsr2l	equ	0xFD9
  6977                           status	equ	0xFD8
  6978                           
  6979 ;; *************** function _timer0_init *****************
  6980 ;; Defined at:
  6981 ;;		line 6 in file "../My_library/My_PIC.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;  prescaler       1    wreg     unsigned char 
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;  prescaler       1    1[BANK0 ] unsigned char 
  6986 ;; Return value:  Size  Location     Type
  6987 ;;		None               void
  6988 ;; Registers used:
  6989 ;;		wreg, status,2, status,0
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 0/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6996 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6997 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6998 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6999 ;;Total ram usage:        2 bytes
  7000 ;; Hardware stack levels used:    1
  7001 ;; Hardware stack levels required when called:   11
  7002 ;; This function calls:
  7003 ;;		Nothing
  7004 ;; This function is called by:
  7005 ;;		_main_init
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           	psect	text20
  7010  01435C                     __ptext20:
  7011                           	opt stack 0
  7012  01435C                     _timer0_init:
  7013                           	opt stack 18
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;incstack = 0
  7017                           ;timer0_init@prescaler stored from wreg
  7018  01435C  0100               	movlb	0	; () banked
  7019  01435E  6F61               	movwf	timer0_init@prescaler& (0+255),b
  7020                           
  7021                           ;My_PIC.c: 7: T0CONbits.TMR0ON = 1;
  7022  014360  8ED5               	bsf	4053,7,c	;volatile
  7023                           
  7024                           ;My_PIC.c: 8: T0CONbits.T08BIT = 1;
  7025  014362  8CD5               	bsf	4053,6,c	;volatile
  7026                           
  7027                           ;My_PIC.c: 9: T0CONbits.T0CS = 0;
  7028  014364  9AD5               	bcf	4053,5,c	;volatile
  7029                           
  7030                           ;My_PIC.c: 10: if (prescaler == 0) {
  7031  014366  0100               	movlb	0	; () banked
  7032  014368  5161               	movf	timer0_init@prescaler& (0+255),w,b
  7033  01436A  0100               	movlb	0	; () banked
  7034  01436C  A4D8               	btfss	status,2,c
  7035  01436E  D002               	goto	l752
  7036                           
  7037                           ; BSR set to: 0
  7038                           ;My_PIC.c: 11: T0CONbits.PSA = 1;
  7039  014370  86D5               	bsf	4053,3,c	;volatile
  7040                           
  7041                           ;My_PIC.c: 12: } else {
  7042  014372  D00C               	goto	l9189
  7043  014374                     l752:
  7044                           
  7045                           ; BSR set to: 0
  7046                           ;My_PIC.c: 13: T0CONbits.PSA = 0;
  7047  014374  96D5               	bcf	4053,3,c	;volatile
  7048                           
  7049                           ; BSR set to: 0
  7050                           ;My_PIC.c: 14: T0CONbits.T0PS = prescaler - 1;
  7051  014376  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
  7052  01437A  0EFF               	movlw	255
  7053  01437C  0100               	movlb	0	; () banked
  7054  01437E  2760               	addwf	??_timer0_init& (0+255),f,b
  7055  014380  50D5               	movf	4053,w,c	;volatile
  7056  014382  0100               	movlb	0	; () banked
  7057  014384  1960               	xorwf	??_timer0_init& (0+255),w,b
  7058  014386  0BF8               	andlw	-8
  7059  014388  1960               	xorwf	??_timer0_init& (0+255),w,b
  7060  01438A  6ED5               	movwf	4053,c	;volatile
  7061  01438C                     l9189:
  7062                           
  7063                           ; BSR set to: 0
  7064                           ;My_PIC.c: 15: }
  7065                           ;My_PIC.c: 16: INTCONbits.T0IE = 1;
  7066  01438C  8AF2               	bsf	intcon,5,c	;volatile
  7067                           
  7068                           ; BSR set to: 0
  7069                           ;My_PIC.c: 17: INTCONbits.TMR0IF = 0;
  7070  01438E  94F2               	bcf	intcon,2,c	;volatile
  7071                           
  7072                           ; BSR set to: 0
  7073                           ;My_PIC.c: 18: INTCON2bits.TMR0IP = 0;
  7074  014390  94F1               	bcf	intcon2,2,c	;volatile
  7075                           
  7076                           ; BSR set to: 0
  7077                           ;My_PIC.c: 19: INTCONbits.PEIE = 1;
  7078  014392  8CF2               	bsf	intcon,6,c	;volatile
  7079                           
  7080                           ; BSR set to: 0
  7081  014394  0012               	return		;funcret
  7082  014396                     __end_of_timer0_init:
  7083                           	opt stack 0
  7084                           tblptru	equ	0xFF8
  7085                           tblptrh	equ	0xFF7
  7086                           tblptrl	equ	0xFF6
  7087                           tablat	equ	0xFF5
  7088                           prodh	equ	0xFF4
  7089                           prodl	equ	0xFF3
  7090                           intcon	equ	0xFF2
  7091                           intcon2	equ	0xFF1
  7092                           indf0	equ	0xFEF
  7093                           postinc0	equ	0xFEE
  7094                           fsr0h	equ	0xFEA
  7095                           fsr0l	equ	0xFE9
  7096                           wreg	equ	0xFE8
  7097                           postinc1	equ	0xFE6
  7098                           postdec1	equ	0xFE5
  7099                           fsr1h	equ	0xFE2
  7100                           fsr1l	equ	0xFE1
  7101                           indf2	equ	0xFDF
  7102                           postinc2	equ	0xFDE
  7103                           postdec2	equ	0xFDD
  7104                           fsr2h	equ	0xFDA
  7105                           fsr2l	equ	0xFD9
  7106                           status	equ	0xFD8
  7107                           
  7108 ;; *************** function _ringbuf_init *****************
  7109 ;; Defined at:
  7110 ;;		line 5 in file "../My_library/My_ringbuf.c"
  7111 ;; Parameters:    Size  Location     Type
  7112 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  7113 ;;		 -> terminal_loop@command(8), usb_tx(8), usb_rx(8), 
  7114 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  7115 ;;		 -> main_init@rxbuf(250), main_init@txbuf(1000), terminal_loop@buf(100), 
  7116 ;;  bufsize         2    4[BANK0 ] unsigned int 
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;		None
  7119 ;; Return value:  Size  Location     Type
  7120 ;;		None               void
  7121 ;; Registers used:
  7122 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7128 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7131 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7132 ;;Total ram usage:        6 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; Hardware stack levels required when called:   11
  7135 ;; This function calls:
  7136 ;;		Nothing
  7137 ;; This function is called by:
  7138 ;;		_terminal_loop
  7139 ;;		_main_init
  7140 ;; This function uses a non-reentrant model
  7141 ;;
  7142                           
  7143                           	psect	text21
  7144  01416A                     __ptext21:
  7145                           	opt stack 0
  7146  01416A                     _ringbuf_init:
  7147                           	opt stack 18
  7148                           
  7149                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;incstack = 0
  7153  01416A  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  7154  01416E  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  7155  014172  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  7156  014176  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  7157                           
  7158                           ;My_ringbuf.c: 7: rb->size = bufsize;
  7159  01417A  0100               	movlb	0	; () banked
  7160  01417C  EE20 F002          	lfsr	2,2
  7161  014180  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7162  014182  26D9               	addwf	fsr2l,f,c
  7163  014184  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7164  014186  22DA               	addwfc	fsr2h,f,c
  7165  014188  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  7166  01418C  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  7167                           
  7168                           ; BSR set to: 0
  7169                           ;My_ringbuf.c: 8: rb->head = 0;
  7170  014190  0100               	movlb	0	; () banked
  7171  014192  EE20 F004          	lfsr	2,4
  7172  014196  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7173  014198  26D9               	addwf	fsr2l,f,c
  7174  01419A  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7175  01419C  22DA               	addwfc	fsr2h,f,c
  7176  01419E  0E00               	movlw	0
  7177  0141A0  6EDE               	movwf	postinc2,c
  7178  0141A2  0E00               	movlw	0
  7179  0141A4  6EDD               	movwf	postdec2,c
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;My_ringbuf.c: 9: rb->tail = 0;
  7183  0141A6  0100               	movlb	0	; () banked
  7184  0141A8  EE20 F006          	lfsr	2,6
  7185  0141AC  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7186  0141AE  26D9               	addwf	fsr2l,f,c
  7187  0141B0  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7188  0141B2  22DA               	addwfc	fsr2h,f,c
  7189  0141B4  0E00               	movlw	0
  7190  0141B6  6EDE               	movwf	postinc2,c
  7191  0141B8  0E00               	movlw	0
  7192  0141BA  6EDD               	movwf	postdec2,c
  7193                           
  7194                           ; BSR set to: 0
  7195  0141BC  0012               	return		;funcret
  7196  0141BE                     __end_of_ringbuf_init:
  7197                           	opt stack 0
  7198                           tblptru	equ	0xFF8
  7199                           tblptrh	equ	0xFF7
  7200                           tblptrl	equ	0xFF6
  7201                           tablat	equ	0xFF5
  7202                           prodh	equ	0xFF4
  7203                           prodl	equ	0xFF3
  7204                           intcon	equ	0xFF2
  7205                           intcon2	equ	0xFF1
  7206                           indf0	equ	0xFEF
  7207                           postinc0	equ	0xFEE
  7208                           fsr0h	equ	0xFEA
  7209                           fsr0l	equ	0xFE9
  7210                           wreg	equ	0xFE8
  7211                           postinc1	equ	0xFE6
  7212                           postdec1	equ	0xFE5
  7213                           fsr1h	equ	0xFE2
  7214                           fsr1l	equ	0xFE1
  7215                           indf2	equ	0xFDF
  7216                           postinc2	equ	0xFDE
  7217                           postdec2	equ	0xFDD
  7218                           fsr2h	equ	0xFDA
  7219                           fsr2l	equ	0xFD9
  7220                           status	equ	0xFD8
  7221                           
  7222 ;; *************** function _USB_init *****************
  7223 ;; Defined at:
  7224 ;;		line 11 in file "../My_library/usb_cdc/My_usb_cdc.c"
  7225 ;; Parameters:    Size  Location     Type
  7226 ;;		None
  7227 ;; Auto vars:     Size  Location     Type
  7228 ;;		None
  7229 ;; Return value:  Size  Location     Type
  7230 ;;		None               void
  7231 ;; Registers used:
  7232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7233 ;; Tracked objects:
  7234 ;;		On entry : 0/0
  7235 ;;		On exit  : 0/0
  7236 ;;		Unchanged: 0/0
  7237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7242 ;;Total ram usage:        0 bytes
  7243 ;; Hardware stack levels used:    1
  7244 ;; Hardware stack levels required when called:   13
  7245 ;; This function calls:
  7246 ;;		_USBDeviceAttach
  7247 ;;		_USBDeviceInit
  7248 ;; This function is called by:
  7249 ;;		_main_init
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           	psect	text22
  7254  014678                     __ptext22:
  7255                           	opt stack 0
  7256  014678                     _USB_init:
  7257                           	opt stack 16
  7258                           
  7259                           ;My_usb_cdc.c: 12: USBDeviceInit();
  7260                           
  7261                           ; BSR set to: 0
  7262                           ;incstack = 0
  7263  014678  EC6D  F08F         	call	_USBDeviceInit	;wreg free
  7264                           
  7265                           ;My_usb_cdc.c: 13: USBDeviceAttach();
  7266  01467C  ECCB  F0A1         	call	_USBDeviceAttach	;wreg free
  7267                           
  7268                           ;My_usb_cdc.c: 14: {line_coding.dwDTERate=115200;};
  7269  014680  0E00               	movlw	0
  7270  014682  0101               	movlb	1	; () banked
  7271  014684  6F80               	movwf	_line_coding& (0+255),b
  7272  014686  0EC2               	movlw	194
  7273  014688  6F81               	movwf	(_line_coding+1)& (0+255),b
  7274  01468A  0E01               	movlw	1
  7275  01468C  6F82               	movwf	(_line_coding+2)& (0+255),b
  7276  01468E  0E00               	movlw	0
  7277  014690  6F83               	movwf	(_line_coding+3)& (0+255),b
  7278                           
  7279                           ; BSR set to: 1
  7280  014692  0012               	return		;funcret
  7281  014694                     __end_of_USB_init:
  7282                           	opt stack 0
  7283                           tblptru	equ	0xFF8
  7284                           tblptrh	equ	0xFF7
  7285                           tblptrl	equ	0xFF6
  7286                           tablat	equ	0xFF5
  7287                           prodh	equ	0xFF4
  7288                           prodl	equ	0xFF3
  7289                           intcon	equ	0xFF2
  7290                           intcon2	equ	0xFF1
  7291                           indf0	equ	0xFEF
  7292                           postinc0	equ	0xFEE
  7293                           fsr0h	equ	0xFEA
  7294                           fsr0l	equ	0xFE9
  7295                           wreg	equ	0xFE8
  7296                           postinc1	equ	0xFE6
  7297                           postdec1	equ	0xFE5
  7298                           fsr1h	equ	0xFE2
  7299                           fsr1l	equ	0xFE1
  7300                           indf2	equ	0xFDF
  7301                           postinc2	equ	0xFDE
  7302                           postdec2	equ	0xFDD
  7303                           fsr2h	equ	0xFDA
  7304                           fsr2l	equ	0xFD9
  7305                           status	equ	0xFD8
  7306                           
  7307 ;; *************** function _USBDeviceInit *****************
  7308 ;; Defined at:
  7309 ;;		line 298 in file "../My_library/usb_cdc/usb/usb_device.c"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;		None
  7312 ;; Auto vars:     Size  Location     Type
  7313 ;;  i               1    8[BANK0 ] unsigned char 
  7314 ;; Return value:  Size  Location     Type
  7315 ;;		None               void
  7316 ;; Registers used:
  7317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7318 ;; Tracked objects:
  7319 ;;		On entry : 0/0
  7320 ;;		On exit  : 0/0
  7321 ;;		Unchanged: 0/0
  7322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7324 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7326 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7327 ;;Total ram usage:        1 bytes
  7328 ;; Hardware stack levels used:    1
  7329 ;; Hardware stack levels required when called:   12
  7330 ;; This function calls:
  7331 ;;		_memset
  7332 ;; This function is called by:
  7333 ;;		_USB_init
  7334 ;; This function uses a non-reentrant model
  7335 ;;
  7336                           
  7337                           	psect	text23
  7338  011EDA                     __ptext23:
  7339                           	opt stack 0
  7340  011EDA                     _USBDeviceInit:
  7341                           	opt stack 16
  7342                           
  7343                           ;usb_device.c: 300: uint8_t i;
  7344                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
  7345                           
  7346                           ; BSR set to: 1
  7347                           ;incstack = 0
  7348  011EDA  98A0               	bcf	4000,4,c	;volatile
  7349                           
  7350                           ;usb_device.c: 305: {UEIR = 0;};
  7351  011EDC  0E00               	movlw	0
  7352  011EDE  6E63               	movwf	3939,c	;volatile
  7353                           
  7354                           ;usb_device.c: 308: {UIR = 0;};
  7355  011EE0  0E00               	movlw	0
  7356  011EE2  6E62               	movwf	3938,c	;volatile
  7357                           
  7358                           ;usb_device.c: 311: UEP0 = 0;
  7359  011EE4  0E00               	movlw	0
  7360  011EE6  010F               	movlb	15	; () banked
  7361  011EE8  6F26               	movwf	38,b	;volatile
  7362                           
  7363                           ; BSR set to: 15
  7364                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
  7365  011EEA  0E27               	movlw	39
  7366  011EEC  0100               	movlb	0	; () banked
  7367  011EEE  6F60               	movwf	memset@p1& (0+255),b
  7368  011EF0  0E0F               	movlw	15
  7369  011EF2  0100               	movlb	0	; () banked
  7370  011EF4  6F61               	movwf	(memset@p1+1)& (0+255),b
  7371  011EF6  0E00               	movlw	0
  7372  011EF8  0100               	movlb	0	; () banked
  7373  011EFA  6F63               	movwf	(memset@c+1)& (0+255),b
  7374  011EFC  0E00               	movlw	0
  7375  011EFE  6F62               	movwf	memset@c& (0+255),b
  7376  011F00  0E00               	movlw	0
  7377  011F02  0100               	movlb	0	; () banked
  7378  011F04  6F65               	movwf	(memset@n+1)& (0+255),b
  7379  011F06  0E02               	movlw	2
  7380  011F08  6F64               	movwf	memset@n& (0+255),b
  7381  011F0A  EC02  F0A2         	call	_memset	;wreg free
  7382                           
  7383                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7384  011F0E  0E16               	movlw	22
  7385  011F10  010F               	movlb	15	; () banked
  7386  011F12  6F39               	movwf	57,b	;volatile
  7387                           
  7388                           ; BSR set to: 15
  7389  011F14  0E9F               	movlw	159
  7390  011F16  010F               	movlb	15	; () banked
  7391  011F18  6F37               	movwf	55,b	;volatile
  7392                           
  7393                           ; BSR set to: 15
  7394  011F1A  0E7B               	movlw	123
  7395  011F1C  010F               	movlb	15	; () banked
  7396  011F1E  6F36               	movwf	54,b	;volatile
  7397                           
  7398                           ; BSR set to: 15
  7399                           ;usb_device.c: 318: ;
  7400                           ;usb_device.c: 321: ;
  7401                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  7402  011F20  0E00               	movlw	0
  7403  011F22  0100               	movlb	0	; () banked
  7404  011F24  6F68               	movwf	USBDeviceInit@i& (0+255),b
  7405  011F26                     l8837:
  7406                           
  7407                           ; BSR set to: 0
  7408  011F26  0E0B               	movlw	11
  7409  011F28  0100               	movlb	0	; () banked
  7410  011F2A  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  7411  011F2C  D001               	goto	l8841
  7412  011F2E  D010               	goto	l132
  7413  011F30                     l8841:
  7414                           
  7415                           ; BSR set to: 0
  7416                           ;usb_device.c: 325: {
  7417                           ;usb_device.c: 326: BDT[i].Val = 0x00;
  7418  011F30  0100               	movlb	0	; () banked
  7419  011F32  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7420  011F34  0D04               	mullw	4
  7421  011F36  0E00               	movlw	0
  7422  011F38  24F3               	addwf	prodl,w,c
  7423  011F3A  6ED9               	movwf	fsr2l,c
  7424  011F3C  0E0D               	movlw	13
  7425  011F3E  20F4               	addwfc	prodh,w,c
  7426  011F40  6EDA               	movwf	fsr2h,c
  7427  011F42  6ADE               	clrf	postinc2,c
  7428  011F44  6ADE               	clrf	postinc2,c
  7429  011F46  6ADE               	clrf	postinc2,c
  7430  011F48  6ADD               	clrf	postdec2,c
  7431                           
  7432                           ; BSR set to: 0
  7433  011F4A  0100               	movlb	0	; () banked
  7434  011F4C  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  7435  011F4E  D7EB               	goto	l8837
  7436  011F50                     l132:
  7437                           
  7438                           ; BSR set to: 0
  7439                           ;usb_device.c: 327: }
  7440                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
  7441  011F50  8C65               	bsf	3941,6,c	;volatile
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;usb_device.c: 333: UADDR = 0x00;
  7445  011F52  0E00               	movlw	0
  7446  011F54  010F               	movlb	15	; () banked
  7447  011F56  6F38               	movwf	56,b	;volatile
  7448                           
  7449                           ; BSR set to: 15
  7450                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
  7451  011F58  9865               	bcf	3941,4,c	;volatile
  7452                           
  7453                           ; BSR set to: 15
  7454                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
  7455  011F5A  9C65               	bcf	3941,6,c	;volatile
  7456                           
  7457                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
  7458  011F5C  D009               	goto	l8861
  7459  011F5E                     l8853:
  7460                           
  7461                           ;usb_device.c: 343: {
  7462                           ;usb_device.c: 344: (UIR &= 0xF7);
  7463  011F5E  9662               	bcf	3938,3,c	;volatile
  7464                           
  7465                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
  7466  011F60  0E00               	movlw	0
  7467  011F62  6E0D               	movwf	_inPipes+3,c	;volatile
  7468                           
  7469                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
  7470  011F64  0E00               	movlw	0
  7471  011F66  6E04               	movwf	_outPipes+3,c	;volatile
  7472                           
  7473                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
  7474  011F68  0E00               	movlw	0
  7475  011F6A  6E06               	movwf	_outPipes+5,c	;volatile
  7476  011F6C  0E00               	movlw	0
  7477  011F6E  6E05               	movwf	_outPipes+4,c	;volatile
  7478  011F70                     l8861:
  7479  011F70  B662               	btfsc	3938,3,c	;volatile
  7480  011F72  D7F5               	goto	l8853
  7481                           
  7482                           ;usb_device.c: 349: }
  7483                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
  7484  011F74  0E01               	movlw	1
  7485  011F76  6E23               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  7486                           
  7487                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
  7488  011F78  0E01               	movlw	1
  7489  011F7A  6E24               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  7490                           
  7491                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
  7492  011F7C  0E00               	movlw	0
  7493  011F7E  6E1F               	movwf	_USBDeferINDataStagePackets,c	;volatile
  7494                           
  7495                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
  7496  011F80  0E00               	movlw	0
  7497  011F82  6E20               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  7498                           
  7499                           ;usb_device.c: 358: USBBusIsSuspended = 0;
  7500  011F84  0E00               	movlw	0
  7501  011F86  0100               	movlb	0	; () banked
  7502  011F88  6FEC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  7503                           
  7504                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
  7505  011F8A  0E00               	movlw	0
  7506  011F8C  0100               	movlb	0	; () banked
  7507  011F8E  6F68               	movwf	USBDeviceInit@i& (0+255),b
  7508  011F90                     l8865:
  7509                           
  7510                           ; BSR set to: 0
  7511  011F90  0E02               	movlw	2
  7512  011F92  0100               	movlb	0	; () banked
  7513  011F94  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  7514  011F96  D001               	goto	l8869
  7515  011F98  D033               	goto	l8875
  7516  011F9A                     l8869:
  7517                           
  7518                           ; BSR set to: 0
  7519                           ;usb_device.c: 363: {
  7520                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
  7521  011F9A  0100               	movlb	0	; () banked
  7522  011F9C  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7523  011F9E  0D02               	mullw	2
  7524  011FA0  0E10               	movlw	low _pBDTEntryIn
  7525  011FA2  24F3               	addwf	prodl,w,c
  7526  011FA4  6ED9               	movwf	fsr2l,c
  7527  011FA6  0E00               	movlw	high _pBDTEntryIn
  7528  011FA8  20F4               	addwfc	prodh,w,c
  7529  011FAA  6EDA               	movwf	fsr2h,c
  7530  011FAC  0E00               	movlw	0
  7531  011FAE  6EDE               	movwf	postinc2,c
  7532  011FB0  0E00               	movlw	0
  7533  011FB2  6EDD               	movwf	postdec2,c
  7534                           
  7535                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
  7536  011FB4  0100               	movlb	0	; () banked
  7537  011FB6  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7538  011FB8  0D02               	mullw	2
  7539  011FBA  0ED5               	movlw	low _pBDTEntryOut
  7540  011FBC  24F3               	addwf	prodl,w,c
  7541  011FBE  6ED9               	movwf	fsr2l,c
  7542  011FC0  0E00               	movlw	high _pBDTEntryOut
  7543  011FC2  20F4               	addwfc	prodh,w,c
  7544  011FC4  6EDA               	movwf	fsr2h,c
  7545  011FC6  0E00               	movlw	0
  7546  011FC8  6EDE               	movwf	postinc2,c
  7547  011FCA  0E00               	movlw	0
  7548  011FCC  6EDD               	movwf	postdec2,c
  7549                           
  7550                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
  7551  011FCE  0100               	movlb	0	; () banked
  7552  011FD0  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7553  011FD2  0D01               	mullw	1
  7554  011FD4  0E16               	movlw	low _ep_data_in
  7555  011FD6  24F3               	addwf	prodl,w,c
  7556  011FD8  6ED9               	movwf	fsr2l,c
  7557  011FDA  0E00               	movlw	high _ep_data_in
  7558  011FDC  20F4               	addwfc	prodh,w,c
  7559  011FDE  6EDA               	movwf	fsr2h,c
  7560  011FE0  0E00               	movlw	0
  7561  011FE2  6EDF               	movwf	indf2,c
  7562                           
  7563                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
  7564  011FE4  0100               	movlb	0	; () banked
  7565  011FE6  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7566  011FE8  0D01               	mullw	1
  7567  011FEA  0EDB               	movlw	low _ep_data_out
  7568  011FEC  24F3               	addwf	prodl,w,c
  7569  011FEE  6ED9               	movwf	fsr2l,c
  7570  011FF0  0E00               	movlw	high _ep_data_out
  7571  011FF2  20F4               	addwfc	prodh,w,c
  7572  011FF4  6EDA               	movwf	fsr2h,c
  7573  011FF6  0E00               	movlw	0
  7574  011FF8  6EDF               	movwf	indf2,c
  7575                           
  7576                           ; BSR set to: 0
  7577  011FFA  0100               	movlb	0	; () banked
  7578  011FFC  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  7579  011FFE  D7C8               	goto	l8865
  7580  012000                     l8875:
  7581                           
  7582                           ; BSR set to: 0
  7583                           ;usb_device.c: 368: }
  7584                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7585  012000  0E08               	movlw	8
  7586  012002  6E10               	movwf	_pBDTEntryIn,c
  7587  012004  0E0D               	movlw	13
  7588  012006  6E11               	movwf	_pBDTEntryIn+1,c
  7589                           
  7590                           ; BSR set to: 0
  7591                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
  7592  012008  0E16               	movlw	22
  7593  01200A  010F               	movlb	15	; () banked
  7594  01200C  6F26               	movwf	38,b	;volatile
  7595                           
  7596                           ; BSR set to: 15
  7597                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  7598  01200E  0E0D               	movlw	13
  7599  012010  010D               	movlb	13	; () banked
  7600  012012  6F03               	movwf	3,b	;volatile
  7601  012014  0E30               	movlw	48
  7602  012016  6F02               	movwf	2,b	;volatile
  7603                           
  7604                           ; BSR set to: 13
  7605                           ;usb_device.c: 376: BDT[0].CNT = 8;
  7606  012018  0E08               	movlw	8
  7607  01201A  010D               	movlb	13	; () banked
  7608  01201C  6F01               	movwf	1,b	;volatile
  7609                           
  7610                           ; BSR set to: 13
  7611                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
  7612  01201E  0E04               	movlw	4
  7613  012020  010D               	movlb	13	; () banked
  7614  012022  6F00               	movwf	0,b	;volatile
  7615                           
  7616                           ; BSR set to: 13
  7617                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
  7618  012024  010D               	movlb	13	; () banked
  7619  012026  8F00               	bsf	0,7,b	;volatile
  7620                           
  7621                           ; BSR set to: 13
  7622                           ;usb_device.c: 381: USBActiveConfiguration = 0;
  7623  012028  0E00               	movlw	0
  7624  01202A  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
  7625                           
  7626                           ; BSR set to: 13
  7627                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
  7628  01202C  0E00               	movlw	0
  7629  01202E  6E22               	movwf	_USBDeviceState,c	;volatile
  7630                           
  7631                           ; BSR set to: 13
  7632  012030  0012               	return		;funcret
  7633  012032                     __end_of_USBDeviceInit:
  7634                           	opt stack 0
  7635                           tblptru	equ	0xFF8
  7636                           tblptrh	equ	0xFF7
  7637                           tblptrl	equ	0xFF6
  7638                           tablat	equ	0xFF5
  7639                           prodh	equ	0xFF4
  7640                           prodl	equ	0xFF3
  7641                           intcon	equ	0xFF2
  7642                           intcon2	equ	0xFF1
  7643                           indf0	equ	0xFEF
  7644                           postinc0	equ	0xFEE
  7645                           fsr0h	equ	0xFEA
  7646                           fsr0l	equ	0xFE9
  7647                           wreg	equ	0xFE8
  7648                           postinc1	equ	0xFE6
  7649                           postdec1	equ	0xFE5
  7650                           fsr1h	equ	0xFE2
  7651                           fsr1l	equ	0xFE1
  7652                           indf2	equ	0xFDF
  7653                           postinc2	equ	0xFDE
  7654                           postdec2	equ	0xFDD
  7655                           fsr2h	equ	0xFDA
  7656                           fsr2l	equ	0xFD9
  7657                           status	equ	0xFD8
  7658                           
  7659 ;; *************** function _memset *****************
  7660 ;; Defined at:
  7661 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;  p1              2    0[BANK0 ] PTR void 
  7664 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  7665 ;;  c               2    2[BANK0 ] int 
  7666 ;;  n               2    4[BANK0 ] unsigned int 
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;  p               2    6[BANK0 ] PTR unsigned char 
  7669 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  7670 ;; Return value:  Size  Location     Type
  7671 ;;                  2    0[BANK0 ] PTR void 
  7672 ;; Registers used:
  7673 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7674 ;; Tracked objects:
  7675 ;;		On entry : 0/0
  7676 ;;		On exit  : 0/0
  7677 ;;		Unchanged: 0/0
  7678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7679 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7680 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7682 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7683 ;;Total ram usage:        8 bytes
  7684 ;; Hardware stack levels used:    1
  7685 ;; Hardware stack levels required when called:   11
  7686 ;; This function calls:
  7687 ;;		Nothing
  7688 ;; This function is called by:
  7689 ;;		_USBDeviceInit
  7690 ;; This function uses a non-reentrant model
  7691 ;;
  7692                           
  7693                           	psect	text24
  7694  014404                     __ptext24:
  7695                           	opt stack 0
  7696  014404                     _memset:
  7697                           	opt stack 16
  7698                           
  7699                           ; BSR set to: 13
  7700                           ;incstack = 0
  7701  014404  C060  F066         	movff	memset@p1,memset@p
  7702  014408  C061  F067         	movff	memset@p1+1,memset@p+1
  7703  01440C  D009               	goto	l8737
  7704  01440E                     l8733:
  7705  01440E  C066  FFD9         	movff	memset@p,fsr2l
  7706  014412  C067  FFDA         	movff	memset@p+1,fsr2h
  7707  014416  C062  FFDF         	movff	memset@c,indf2
  7708  01441A  0100               	movlb	0	; () banked
  7709  01441C  4B66               	infsnz	memset@p& (0+255),f,b
  7710  01441E  2B67               	incf	(memset@p+1)& (0+255),f,b
  7711  014420                     l8737:
  7712  014420  0100               	movlb	0	; () banked
  7713  014422  0764               	decf	memset@n& (0+255),f,b
  7714  014424  A0D8               	btfss	status,0,c
  7715  014426  0765               	decf	(memset@n+1)& (0+255),f,b
  7716  014428  0100               	movlb	0	; () banked
  7717  01442A  2964               	incf	memset@n& (0+255),w,b
  7718  01442C  E1F0               	bnz	l8733
  7719  01442E  0100               	movlb	0	; () banked
  7720  014430  2965               	incf	(memset@n+1)& (0+255),w,b
  7721  014432  B4D8               	btfsc	status,2,c
  7722  014434  0012               	return	
  7723  014436  D7EB               	goto	l8733
  7724  014438                     __end_of_memset:
  7725                           	opt stack 0
  7726                           tblptru	equ	0xFF8
  7727                           tblptrh	equ	0xFF7
  7728                           tblptrl	equ	0xFF6
  7729                           tablat	equ	0xFF5
  7730                           prodh	equ	0xFF4
  7731                           prodl	equ	0xFF3
  7732                           intcon	equ	0xFF2
  7733                           intcon2	equ	0xFF1
  7734                           indf0	equ	0xFEF
  7735                           postinc0	equ	0xFEE
  7736                           fsr0h	equ	0xFEA
  7737                           fsr0l	equ	0xFE9
  7738                           wreg	equ	0xFE8
  7739                           postinc1	equ	0xFE6
  7740                           postdec1	equ	0xFE5
  7741                           fsr1h	equ	0xFE2
  7742                           fsr1l	equ	0xFE1
  7743                           indf2	equ	0xFDF
  7744                           postinc2	equ	0xFDE
  7745                           postdec2	equ	0xFDD
  7746                           fsr2h	equ	0xFDA
  7747                           fsr2l	equ	0xFD9
  7748                           status	equ	0xFD8
  7749                           
  7750 ;; *************** function _USBDeviceAttach *****************
  7751 ;; Defined at:
  7752 ;;		line 1352 in file "../My_library/usb_cdc/usb/usb_device.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;		None
  7755 ;; Auto vars:     Size  Location     Type
  7756 ;;		None
  7757 ;; Return value:  Size  Location     Type
  7758 ;;		None               void
  7759 ;; Registers used:
  7760 ;;		wreg, status,2
  7761 ;; Tracked objects:
  7762 ;;		On entry : 0/0
  7763 ;;		On exit  : 0/0
  7764 ;;		Unchanged: 0/0
  7765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7770 ;;Total ram usage:        0 bytes
  7771 ;; Hardware stack levels used:    1
  7772 ;; Hardware stack levels required when called:   11
  7773 ;; This function calls:
  7774 ;;		Nothing
  7775 ;; This function is called by:
  7776 ;;		_USB_init
  7777 ;; This function uses a non-reentrant model
  7778 ;;
  7779                           
  7780                           	psect	text25
  7781  014396                     __ptext25:
  7782                           	opt stack 0
  7783  014396                     _USBDeviceAttach:
  7784                           	opt stack 17
  7785                           
  7786                           ;usb_device.c: 1356: {
  7787                           ;usb_device.c: 1357: if(1 == 1)
  7788                           
  7789                           ; BSR set to: 0
  7790                           ;incstack = 0
  7791  014396  5022               	movf	_USBDeviceState,w,c	;volatile
  7792  014398  A4D8               	btfss	status,2,c
  7793  01439A  0012               	return	
  7794                           
  7795                           ;usb_device.c: 1358: {
  7796                           ;usb_device.c: 1360: UCON = 0;
  7797  01439C  0E00               	movlw	0
  7798  01439E  6E65               	movwf	3941,c	;volatile
  7799                           
  7800                           ;usb_device.c: 1363: UIE = 0;
  7801  0143A0  0E00               	movlw	0
  7802  0143A2  010F               	movlb	15	; () banked
  7803  0143A4  6F36               	movwf	54,b	;volatile
  7804                           
  7805                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  7806  0143A6  0E16               	movlw	22
  7807  0143A8  010F               	movlb	15	; () banked
  7808  0143AA  6F39               	movwf	57,b	;volatile
  7809  0143AC  0E9F               	movlw	159
  7810  0143AE  010F               	movlb	15	; () banked
  7811  0143B0  6F37               	movwf	55,b	;volatile
  7812  0143B2  0E7B               	movlw	123
  7813  0143B4  010F               	movlb	15	; () banked
  7814  0143B6  6F36               	movwf	54,b	;volatile
  7815                           
  7816                           ; BSR set to: 15
  7817                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  7818  0143B8  8ED0               	bsf	4048,7,c	;volatile
  7819                           
  7820                           ; BSR set to: 15
  7821  0143BA  88A2               	bsf	4002,4,c	;volatile
  7822                           
  7823                           ; BSR set to: 15
  7824  0143BC  88A0               	bsf	4000,4,c	;volatile
  7825                           
  7826                           ; BSR set to: 15
  7827  0143BE  8EF2               	bsf	intcon,7,c	;volatile
  7828                           
  7829                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7830  0143C0  D001               	goto	l193
  7831  0143C2                     l194:
  7832  0143C2  8665               	bsf	3941,3,c	;volatile
  7833  0143C4                     l193:
  7834  0143C4  A665               	btfss	3941,3,c	;volatile
  7835  0143C6  D7FD               	goto	l194
  7836                           
  7837                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  7838  0143C8  0E01               	movlw	1
  7839  0143CA  6E22               	movwf	_USBDeviceState,c	;volatile
  7840  0143CC  0012               	return	
  7841  0143CE                     __end_of_USBDeviceAttach:
  7842                           	opt stack 0
  7843                           tblptru	equ	0xFF8
  7844                           tblptrh	equ	0xFF7
  7845                           tblptrl	equ	0xFF6
  7846                           tablat	equ	0xFF5
  7847                           prodh	equ	0xFF4
  7848                           prodl	equ	0xFF3
  7849                           intcon	equ	0xFF2
  7850                           intcon2	equ	0xFF1
  7851                           indf0	equ	0xFEF
  7852                           postinc0	equ	0xFEE
  7853                           fsr0h	equ	0xFEA
  7854                           fsr0l	equ	0xFE9
  7855                           wreg	equ	0xFE8
  7856                           postinc1	equ	0xFE6
  7857                           postdec1	equ	0xFE5
  7858                           fsr1h	equ	0xFE2
  7859                           fsr1l	equ	0xFE1
  7860                           indf2	equ	0xFDF
  7861                           postinc2	equ	0xFDE
  7862                           postdec2	equ	0xFDD
  7863                           fsr2h	equ	0xFDA
  7864                           fsr2l	equ	0xFD9
  7865                           status	equ	0xFD8
  7866                           
  7867 ;; *************** function _RTCC_init *****************
  7868 ;; Defined at:
  7869 ;;		line 22 in file "../My_library/My_RTCC.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;		None
  7872 ;; Auto vars:     Size  Location     Type
  7873 ;;		None
  7874 ;; Return value:  Size  Location     Type
  7875 ;;		None               void
  7876 ;; Registers used:
  7877 ;;		wreg, status,2
  7878 ;; Tracked objects:
  7879 ;;		On entry : 0/0
  7880 ;;		On exit  : 0/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7887 ;;Total ram usage:        0 bytes
  7888 ;; Hardware stack levels used:    1
  7889 ;; Hardware stack levels required when called:   11
  7890 ;; This function calls:
  7891 ;;		Nothing
  7892 ;; This function is called by:
  7893 ;;		_main_init
  7894 ;; This function uses a non-reentrant model
  7895 ;;
  7896                           
  7897                           	psect	text26
  7898  01446A                     __ptext26:
  7899                           	opt stack 0
  7900  01446A                     _RTCC_init:
  7901                           	opt stack 18
  7902                           
  7903                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
  7904                           
  7905                           ;incstack = 0
  7906  01446A  010F               	movlb	15	; () banked
  7907  01446C  8B3F               	bsf	63,5,b	;volatile
  7908                           
  7909                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
  7910  01446E  010F               	movlb	15	; () banked
  7911  014470  BB3F               	btfsc	63,5,b	;volatile
  7912  014472  D006               	goto	l9289
  7913                           
  7914                           ; BSR set to: 15
  7915                           ;My_RTCC.c: 25: EECON2 = 0x55;
  7916  014474  0E55               	movlw	85
  7917  014476  6EA7               	movwf	4007,c	;volatile
  7918                           
  7919                           ;My_RTCC.c: 26: EECON2 = 0xAA;
  7920  014478  0EAA               	movlw	170
  7921  01447A  6EA7               	movwf	4007,c	;volatile
  7922                           
  7923                           ; BSR set to: 15
  7924                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
  7925  01447C  010F               	movlb	15	; () banked
  7926  01447E  8B3F               	bsf	63,5,b	;volatile
  7927  014480                     l9289:
  7928                           
  7929                           ; BSR set to: 15
  7930                           ;My_RTCC.c: 28: }
  7931                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
  7932  014480  010F               	movlb	15	; () banked
  7933  014482  8F3F               	bsf	63,7,b	;volatile
  7934                           
  7935                           ; BSR set to: 15
  7936                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
  7937  014484  010F               	movlb	15	; () banked
  7938  014486  953F               	bcf	63,2,b	;volatile
  7939                           
  7940                           ; BSR set to: 15
  7941                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
  7942  014488  010F               	movlb	15	; () banked
  7943  01448A  833C               	bsf	60,1,b	;volatile
  7944                           
  7945                           ; BSR set to: 15
  7946                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
  7947  01448C  010F               	movlb	15	; () banked
  7948  01448E  853C               	bsf	60,2,b	;volatile
  7949                           
  7950                           ;My_RTCC.c: 33: RTCCAL = 0x00;
  7951  014490  0E00               	movlw	0
  7952  014492  010F               	movlb	15	; () banked
  7953  014494  6F3E               	movwf	62,b	;volatile
  7954                           
  7955                           ; BSR set to: 15
  7956                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
  7957  014496  86CD               	bsf	4045,3,c	;volatile
  7958                           
  7959                           ; BSR set to: 15
  7960  014498  0012               	return		;funcret
  7961  01449A                     __end_of_RTCC_init:
  7962                           	opt stack 0
  7963                           tblptru	equ	0xFF8
  7964                           tblptrh	equ	0xFF7
  7965                           tblptrl	equ	0xFF6
  7966                           tablat	equ	0xFF5
  7967                           prodh	equ	0xFF4
  7968                           prodl	equ	0xFF3
  7969                           intcon	equ	0xFF2
  7970                           intcon2	equ	0xFF1
  7971                           indf0	equ	0xFEF
  7972                           postinc0	equ	0xFEE
  7973                           fsr0h	equ	0xFEA
  7974                           fsr0l	equ	0xFE9
  7975                           wreg	equ	0xFE8
  7976                           postinc1	equ	0xFE6
  7977                           postdec1	equ	0xFE5
  7978                           fsr1h	equ	0xFE2
  7979                           fsr1l	equ	0xFE1
  7980                           indf2	equ	0xFDF
  7981                           postinc2	equ	0xFDE
  7982                           postdec2	equ	0xFDD
  7983                           fsr2h	equ	0xFDA
  7984                           fsr2l	equ	0xFD9
  7985                           status	equ	0xFD8
  7986                           
  7987 ;; *************** function _PWM_init *****************
  7988 ;; Defined at:
  7989 ;;		line 80 in file "PIC18F27J53-killifish_light06.c"
  7990 ;; Parameters:    Size  Location     Type
  7991 ;;  PR              1    wreg     unsigned char 
  7992 ;; Auto vars:     Size  Location     Type
  7993 ;;  PR              1    0[BANK0 ] unsigned char 
  7994 ;; Return value:  Size  Location     Type
  7995 ;;		None               void
  7996 ;; Registers used:
  7997 ;;		wreg, status,2, status,0
  7998 ;; Tracked objects:
  7999 ;;		On entry : 0/0
  8000 ;;		On exit  : 0/0
  8001 ;;		Unchanged: 0/0
  8002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8004 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8006 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8007 ;;Total ram usage:        1 bytes
  8008 ;; Hardware stack levels used:    1
  8009 ;; Hardware stack levels required when called:   11
  8010 ;; This function calls:
  8011 ;;		Nothing
  8012 ;; This function is called by:
  8013 ;;		_main_init
  8014 ;; This function uses a non-reentrant model
  8015 ;;
  8016                           
  8017                           	psect	text27
  8018  013284                     __ptext27:
  8019                           	opt stack 0
  8020  013284                     _PWM_init:
  8021                           	opt stack 18
  8022                           
  8023                           ; BSR set to: 15
  8024                           ;incstack = 0
  8025                           ;PWM_init@PR stored from wreg
  8026  013284  0100               	movlb	0	; () banked
  8027  013286  6F60               	movwf	PWM_init@PR& (0+255),b
  8028                           
  8029                           ;PIC18F27J53-killifish_light06.c: 81: PPSCONbits.IOLOCK = 0;
  8030  013288  010E               	movlb	14	; () banked
  8031  01328A  91BF               	bcf	191,0,b	;volatile
  8032                           
  8033                           ;PIC18F27J53-killifish_light06.c: 82: if (PPSCONbits.IOLOCK != 0) {
  8034  01328C  010E               	movlb	14	; () banked
  8035  01328E  A1BF               	btfss	191,0,b	;volatile
  8036  013290  D006               	goto	l1374
  8037                           
  8038                           ; BSR set to: 14
  8039                           ;PIC18F27J53-killifish_light06.c: 83: EECON2 = 0x55;
  8040  013292  0E55               	movlw	85
  8041  013294  6EA7               	movwf	4007,c	;volatile
  8042                           
  8043                           ;PIC18F27J53-killifish_light06.c: 84: EECON2 = 0xAA;
  8044  013296  0EAA               	movlw	170
  8045  013298  6EA7               	movwf	4007,c	;volatile
  8046                           
  8047                           ; BSR set to: 14
  8048                           ;PIC18F27J53-killifish_light06.c: 85: PPSCONbits.IOLOCK = 0;
  8049  01329A  010E               	movlb	14	; () banked
  8050  01329C  91BF               	bcf	191,0,b	;volatile
  8051  01329E                     l1374:
  8052                           
  8053                           ; BSR set to: 14
  8054                           ;PIC18F27J53-killifish_light06.c: 86: }
  8055                           ;PIC18F27J53-killifish_light06.c: 88: RPOR3 = 14;
  8056  01329E  0E0E               	movlw	14
  8057  0132A0  010E               	movlb	14	; () banked
  8058  0132A2  6FC3               	movwf	195,b	;volatile
  8059                           
  8060                           ;PIC18F27J53-killifish_light06.c: 89: RPOR4 = 18;
  8061  0132A4  0E12               	movlw	18
  8062  0132A6  010E               	movlb	14	; () banked
  8063  0132A8  6FC4               	movwf	196,b	;volatile
  8064                           
  8065                           ;PIC18F27J53-killifish_light06.c: 90: RPOR5 = 22;
  8066  0132AA  0E16               	movlw	22
  8067  0132AC  010E               	movlb	14	; () banked
  8068  0132AE  6FC5               	movwf	197,b	;volatile
  8069                           
  8070                           ; BSR set to: 14
  8071                           ;PIC18F27J53-killifish_light06.c: 92: CCP1CONbits.CCP1M = 12;
  8072  0132B0  50BA               	movf	4026,w,c	;volatile
  8073  0132B2  0BF0               	andlw	-16
  8074  0132B4  090C               	iorlw	12
  8075  0132B6  6EBA               	movwf	4026,c	;volatile
  8076                           
  8077                           ; BSR set to: 14
  8078                           ;PIC18F27J53-killifish_light06.c: 93: CCP1CONbits.P1M = 0;
  8079  0132B8  0E3F               	movlw	-193
  8080  0132BA  16BA               	andwf	4026,f,c	;volatile
  8081                           
  8082                           ; BSR set to: 14
  8083                           ;PIC18F27J53-killifish_light06.c: 94: CCPTMRS0bits.C1TSEL = 0;
  8084  0132BC  010F               	movlb	15	; () banked
  8085  0132BE  9152               	bcf	82,0,b	;volatile
  8086  0132C0  9352               	bcf	82,1,b	;volatile
  8087  0132C2  9552               	bcf	82,2,b	;volatile
  8088                           
  8089                           ; BSR set to: 15
  8090                           ;PIC18F27J53-killifish_light06.c: 95: CCPR1Lbits.CCPR1L = 0;
  8091  0132C4  0E00               	movlw	0
  8092  0132C6  6EBB               	movwf	4027,c	;volatile
  8093                           
  8094                           ; BSR set to: 15
  8095                           ;PIC18F27J53-killifish_light06.c: 96: CCP1CONbits.DC1B = 0;
  8096  0132C8  0ECF               	movlw	-49
  8097  0132CA  16BA               	andwf	4026,f,c	;volatile
  8098                           
  8099                           ; BSR set to: 15
  8100                           ;PIC18F27J53-killifish_light06.c: 98: CCP2CONbits.CCP2M = 12;
  8101  0132CC  50B4               	movf	4020,w,c	;volatile
  8102  0132CE  0BF0               	andlw	-16
  8103  0132D0  090C               	iorlw	12
  8104  0132D2  6EB4               	movwf	4020,c	;volatile
  8105                           
  8106                           ; BSR set to: 15
  8107                           ;PIC18F27J53-killifish_light06.c: 99: CCP2CONbits.P2M = 0;
  8108  0132D4  0E3F               	movlw	-193
  8109  0132D6  16B4               	andwf	4020,f,c	;volatile
  8110                           
  8111                           ; BSR set to: 15
  8112                           ;PIC18F27J53-killifish_light06.c: 100: CCPTMRS0bits.C2TSEL = 0;
  8113  0132D8  010F               	movlb	15	; () banked
  8114  0132DA  9752               	bcf	82,3,b	;volatile
  8115  0132DC  9952               	bcf	82,4,b	;volatile
  8116  0132DE  9B52               	bcf	82,5,b	;volatile
  8117                           
  8118                           ; BSR set to: 15
  8119                           ;PIC18F27J53-killifish_light06.c: 101: CCPR2Lbits.CCPR2L = 0;
  8120  0132E0  0E00               	movlw	0
  8121  0132E2  6EB5               	movwf	4021,c	;volatile
  8122                           
  8123                           ; BSR set to: 15
  8124                           ;PIC18F27J53-killifish_light06.c: 102: CCP2CONbits.DC2B = 0;
  8125  0132E4  0ECF               	movlw	-49
  8126  0132E6  16B4               	andwf	4020,f,c	;volatile
  8127                           
  8128                           ; BSR set to: 15
  8129                           ;PIC18F27J53-killifish_light06.c: 104: CCP3CONbits.CCP3M = 12;
  8130  0132E8  010F               	movlb	15	; () banked
  8131  0132EA  5115               	movf	21,w,b	;volatile
  8132  0132EC  0BF0               	andlw	-16
  8133  0132EE  090C               	iorlw	12
  8134  0132F0  6F15               	movwf	21,b	;volatile
  8135                           
  8136                           ; BSR set to: 15
  8137                           ;PIC18F27J53-killifish_light06.c: 105: CCP3CONbits.P3M = 0;
  8138  0132F2  0E3F               	movlw	-193
  8139  0132F4  010F               	movlb	15	; () banked
  8140  0132F6  1715               	andwf	21,f,b	;volatile
  8141                           
  8142                           ; BSR set to: 15
  8143                           ;PIC18F27J53-killifish_light06.c: 106: CCPTMRS0bits.C3TSEL = 0;
  8144  0132F8  0E3F               	movlw	-193
  8145  0132FA  010F               	movlb	15	; () banked
  8146  0132FC  1752               	andwf	82,f,b	;volatile
  8147                           
  8148                           ; BSR set to: 15
  8149                           ;PIC18F27J53-killifish_light06.c: 107: CCPR3Lbits.CCPR3L = 0;
  8150  0132FE  0E00               	movlw	0
  8151  013300  010F               	movlb	15	; () banked
  8152  013302  6F16               	movwf	22,b	;volatile
  8153                           
  8154                           ; BSR set to: 15
  8155                           ;PIC18F27J53-killifish_light06.c: 108: CCP3CONbits.DC3B = 0;
  8156  013304  0ECF               	movlw	-49
  8157  013306  010F               	movlb	15	; () banked
  8158  013308  1715               	andwf	21,f,b	;volatile
  8159                           
  8160                           ; BSR set to: 15
  8161                           ;PIC18F27J53-killifish_light06.c: 110: CCP4CONbits.CCP4M = 12;
  8162  01330A  010F               	movlb	15	; () banked
  8163  01330C  5112               	movf	18,w,b	;volatile
  8164  01330E  0BF0               	andlw	-16
  8165  013310  090C               	iorlw	12
  8166  013312  6F12               	movwf	18,b	;volatile
  8167                           
  8168                           ; BSR set to: 15
  8169                           ;PIC18F27J53-killifish_light06.c: 111: CCPTMRS1bits.C4TSEL = 0;
  8170  013314  0EFC               	movlw	-4
  8171  013316  010F               	movlb	15	; () banked
  8172  013318  1751               	andwf	81,f,b	;volatile
  8173                           
  8174                           ; BSR set to: 15
  8175                           ;PIC18F27J53-killifish_light06.c: 112: CCPR4Lbits.CCPR4L = 0;
  8176  01331A  0E00               	movlw	0
  8177  01331C  010F               	movlb	15	; () banked
  8178  01331E  6F13               	movwf	19,b	;volatile
  8179                           
  8180                           ; BSR set to: 15
  8181                           ;PIC18F27J53-killifish_light06.c: 113: CCP4CONbits.DC4B = 0;
  8182  013320  0ECF               	movlw	-49
  8183  013322  010F               	movlb	15	; () banked
  8184  013324  1712               	andwf	18,f,b	;volatile
  8185                           
  8186                           ; BSR set to: 15
  8187                           ;PIC18F27J53-killifish_light06.c: 115: T2CONbits.T2OUTPS = 0;
  8188  013326  96CA               	bcf	4042,3,c	;volatile
  8189  013328  98CA               	bcf	4042,4,c	;volatile
  8190  01332A  9ACA               	bcf	4042,5,c	;volatile
  8191  01332C  9CCA               	bcf	4042,6,c	;volatile
  8192                           
  8193                           ; BSR set to: 15
  8194                           ;PIC18F27J53-killifish_light06.c: 116: T2CONbits.T2CKPS = 2;
  8195  01332E  50CA               	movf	4042,w,c	;volatile
  8196  013330  0BFC               	andlw	-4
  8197  013332  0902               	iorlw	2
  8198  013334  6ECA               	movwf	4042,c	;volatile
  8199                           
  8200                           ; BSR set to: 15
  8201                           ;PIC18F27J53-killifish_light06.c: 117: PR2 = PR - 1;
  8202  013336  0100               	movlb	0	; () banked
  8203  013338  0560               	decf	PWM_init@PR& (0+255),w,b
  8204  01333A  6ECB               	movwf	4043,c	;volatile
  8205                           
  8206                           ; BSR set to: 0
  8207                           ;PIC18F27J53-killifish_light06.c: 118: T2CONbits.TMR2ON = 1;
  8208  01333C  84CA               	bsf	4042,2,c	;volatile
  8209                           
  8210                           ; BSR set to: 0
  8211  01333E  0012               	return		;funcret
  8212  013340                     __end_of_PWM_init:
  8213                           	opt stack 0
  8214                           tblptru	equ	0xFF8
  8215                           tblptrh	equ	0xFF7
  8216                           tblptrl	equ	0xFF6
  8217                           tablat	equ	0xFF5
  8218                           prodh	equ	0xFF4
  8219                           prodl	equ	0xFF3
  8220                           intcon	equ	0xFF2
  8221                           intcon2	equ	0xFF1
  8222                           indf0	equ	0xFEF
  8223                           postinc0	equ	0xFEE
  8224                           fsr0h	equ	0xFEA
  8225                           fsr0l	equ	0xFE9
  8226                           wreg	equ	0xFE8
  8227                           postinc1	equ	0xFE6
  8228                           postdec1	equ	0xFE5
  8229                           fsr1h	equ	0xFE2
  8230                           fsr1l	equ	0xFE1
  8231                           indf2	equ	0xFDF
  8232                           postinc2	equ	0xFDE
  8233                           postdec2	equ	0xFDD
  8234                           fsr2h	equ	0xFDA
  8235                           fsr2l	equ	0xFD9
  8236                           status	equ	0xFD8
  8237                           
  8238 ;; *************** function _OSC_init *****************
  8239 ;; Defined at:
  8240 ;;		line 106 in file "../My_library/My_PIC.c"
  8241 ;; Parameters:    Size  Location     Type
  8242 ;;		None
  8243 ;; Auto vars:     Size  Location     Type
  8244 ;;		None
  8245 ;; Return value:  Size  Location     Type
  8246 ;;		None               void
  8247 ;; Registers used:
  8248 ;;		wreg, status,2
  8249 ;; Tracked objects:
  8250 ;;		On entry : 0/0
  8251 ;;		On exit  : 0/0
  8252 ;;		Unchanged: 0/0
  8253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8258 ;;Total ram usage:        0 bytes
  8259 ;; Hardware stack levels used:    1
  8260 ;; Hardware stack levels required when called:   11
  8261 ;; This function calls:
  8262 ;;		Nothing
  8263 ;; This function is called by:
  8264 ;;		_main_init
  8265 ;; This function uses a non-reentrant model
  8266 ;;
  8267                           
  8268                           	psect	text28
  8269  0146E4                     __ptext28:
  8270                           	opt stack 0
  8271  0146E4                     _OSC_init:
  8272                           	opt stack 18
  8273                           
  8274                           ;My_PIC.c: 107: OSCCONbits.IRCF = 7;
  8275                           
  8276                           ; BSR set to: 0
  8277                           ;incstack = 0
  8278  0146E4  88D3               	bsf	4051,4,c	;volatile
  8279  0146E6  8AD3               	bsf	4051,5,c	;volatile
  8280  0146E8  8CD3               	bsf	4051,6,c	;volatile
  8281                           
  8282                           ;My_PIC.c: 108: OSCTUNEbits.PLLEN = 1;
  8283  0146EA  8C9B               	bsf	3995,6,c	;volatile
  8284                           
  8285                           ;My_PIC.c: 109: OSCCONbits.SCS = 0;
  8286  0146EC  0EFC               	movlw	-4
  8287  0146EE  16D3               	andwf	4051,f,c	;volatile
  8288  0146F0  0012               	return		;funcret
  8289  0146F2                     __end_of_OSC_init:
  8290                           	opt stack 0
  8291                           tblptru	equ	0xFF8
  8292                           tblptrh	equ	0xFF7
  8293                           tblptrl	equ	0xFF6
  8294                           tablat	equ	0xFF5
  8295                           prodh	equ	0xFF4
  8296                           prodl	equ	0xFF3
  8297                           intcon	equ	0xFF2
  8298                           intcon2	equ	0xFF1
  8299                           indf0	equ	0xFEF
  8300                           postinc0	equ	0xFEE
  8301                           fsr0h	equ	0xFEA
  8302                           fsr0l	equ	0xFE9
  8303                           wreg	equ	0xFE8
  8304                           postinc1	equ	0xFE6
  8305                           postdec1	equ	0xFE5
  8306                           fsr1h	equ	0xFE2
  8307                           fsr1l	equ	0xFE1
  8308                           indf2	equ	0xFDF
  8309                           postinc2	equ	0xFDE
  8310                           postdec2	equ	0xFDD
  8311                           fsr2h	equ	0xFDA
  8312                           fsr2l	equ	0xFD9
  8313                           status	equ	0xFD8
  8314                           
  8315 ;; *************** function _ADC_init *****************
  8316 ;; Defined at:
  8317 ;;		line 132 in file "../My_library/My_PIC.c"
  8318 ;; Parameters:    Size  Location     Type
  8319 ;;  p_ref           1    wreg     unsigned char 
  8320 ;; Auto vars:     Size  Location     Type
  8321 ;;  p_ref           1    0[BANK0 ] unsigned char 
  8322 ;; Return value:  Size  Location     Type
  8323 ;;		None               void
  8324 ;; Registers used:
  8325 ;;		wreg, status,2
  8326 ;; Tracked objects:
  8327 ;;		On entry : 0/0
  8328 ;;		On exit  : 0/0
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8332 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8334 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8335 ;;Total ram usage:        1 bytes
  8336 ;; Hardware stack levels used:    1
  8337 ;; Hardware stack levels required when called:   11
  8338 ;; This function calls:
  8339 ;;		Nothing
  8340 ;; This function is called by:
  8341 ;;		_main_init
  8342 ;; This function uses a non-reentrant model
  8343 ;;
  8344                           
  8345                           	psect	text29
  8346  014638                     __ptext29:
  8347                           	opt stack 0
  8348  014638                     _ADC_init:
  8349                           	opt stack 18
  8350                           
  8351                           ;incstack = 0
  8352                           ;ADC_init@p_ref stored from wreg
  8353  014638  0100               	movlb	0	; () banked
  8354  01463A  6F60               	movwf	ADC_init@p_ref& (0+255),b
  8355                           
  8356                           ;My_PIC.c: 133: ADCON0bits.VCFG1 = 0;
  8357  01463C  9EC2               	bcf	4034,7,c	;volatile
  8358                           
  8359                           ;My_PIC.c: 134: ADCON0bits.VCFG0 = p_ref;
  8360  01463E  0100               	movlb	0	; () banked
  8361  014640  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
  8362  014642  D002               	bra	u9565
  8363  014644  9CC2               	bcf	4034,6,c	;volatile
  8364  014646  D001               	bra	u9566
  8365  014648                     u9565:
  8366  014648  8CC2               	bsf	4034,6,c	;volatile
  8367  01464A                     u9566:
  8368                           
  8369                           ;My_PIC.c: 136: ADCON1bits.ADFM = 1;
  8370  01464A  8EC1               	bsf	4033,7,c	;volatile
  8371                           
  8372                           ;My_PIC.c: 137: ADCON1bits.ADCAL = 0;
  8373  01464C  9CC1               	bcf	4033,6,c	;volatile
  8374                           
  8375                           ;My_PIC.c: 138: ADCON1bits.ADCS = 6;
  8376  01464E  50C1               	movf	4033,w,c	;volatile
  8377  014650  0BF8               	andlw	-8
  8378  014652  0906               	iorlw	6
  8379  014654  6EC1               	movwf	4033,c	;volatile
  8380  014656  0012               	return		;funcret
  8381  014658                     __end_of_ADC_init:
  8382                           	opt stack 0
  8383                           tblptru	equ	0xFF8
  8384                           tblptrh	equ	0xFF7
  8385                           tblptrl	equ	0xFF6
  8386                           tablat	equ	0xFF5
  8387                           prodh	equ	0xFF4
  8388                           prodl	equ	0xFF3
  8389                           intcon	equ	0xFF2
  8390                           intcon2	equ	0xFF1
  8391                           indf0	equ	0xFEF
  8392                           postinc0	equ	0xFEE
  8393                           fsr0h	equ	0xFEA
  8394                           fsr0l	equ	0xFE9
  8395                           wreg	equ	0xFE8
  8396                           postinc1	equ	0xFE6
  8397                           postdec1	equ	0xFE5
  8398                           fsr1h	equ	0xFE2
  8399                           fsr1l	equ	0xFE1
  8400                           indf2	equ	0xFDF
  8401                           postinc2	equ	0xFDE
  8402                           postdec2	equ	0xFDD
  8403                           fsr2h	equ	0xFDA
  8404                           fsr2l	equ	0xFD9
  8405                           status	equ	0xFD8
  8406                           
  8407 ;; *************** function _light_loop *****************
  8408 ;; Defined at:
  8409 ;;		line 229 in file "PIC18F27J53-killifish_light06.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;		None
  8412 ;; Auto vars:     Size  Location     Type
  8413 ;;  temp            4   45[BANK0 ] unsigned long 
  8414 ;;  value           1   44[BANK0 ] unsigned char 
  8415 ;;  value           1   43[BANK0 ] unsigned char 
  8416 ;;  i               1   49[BANK0 ] unsigned char 
  8417 ;; Return value:  Size  Location     Type
  8418 ;;		None               void
  8419 ;; Registers used:
  8420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8421 ;; Tracked objects:
  8422 ;;		On entry : 0/0
  8423 ;;		On exit  : 0/0
  8424 ;;		Unchanged: 0/0
  8425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8427 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8428 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8429 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8430 ;;Total ram usage:       11 bytes
  8431 ;; Hardware stack levels used:    1
  8432 ;; Hardware stack levels required when called:   15
  8433 ;; This function calls:
  8434 ;;		_PWM_set
  8435 ;;		_RTCC_from_RTCC
  8436 ;;		___lldiv
  8437 ;;		___llmod
  8438 ;;		___lmul
  8439 ;; This function is called by:
  8440 ;;		_main
  8441 ;; This function uses a non-reentrant model
  8442 ;;
  8443                           
  8444                           	psect	text30
  8445  0117AE                     __ptext30:
  8446                           	opt stack 0
  8447  0117AE                     _light_loop:
  8448                           	opt stack 15
  8449                           
  8450                           ;PIC18F27J53-killifish_light06.c: 230: uint8_t i;
  8451                           ;PIC18F27J53-killifish_light06.c: 231: if (time_change_flag) {
  8452                           
  8453                           ;incstack = 0
  8454  0117AE  0100               	movlb	0	; () banked
  8455  0117B0  51F2               	movf	_time_change_flag& (0+255),w,b
  8456  0117B2  B4D8               	btfsc	status,2,c
  8457  0117B4  D0AE               	goto	l1428
  8458                           
  8459                           ; BSR set to: 0
  8460                           ;PIC18F27J53-killifish_light06.c: 232: time_change_flag = 0;
  8461  0117B6  0E00               	movlw	0
  8462  0117B8  0100               	movlb	0	; () banked
  8463  0117BA  6FF2               	movwf	_time_change_flag& (0+255),b
  8464                           
  8465                           ; BSR set to: 0
  8466                           ;PIC18F27J53-killifish_light06.c: 233: RTCC_from_RTCC(&now);
  8467  0117BC  0E4A               	movlw	low _now
  8468  0117BE  0100               	movlb	0	; () banked
  8469  0117C0  6F85               	movwf	RTCC_from_RTCC@tm& (0+255),b
  8470  0117C2  0E01               	movlw	high _now
  8471  0117C4  0100               	movlb	0	; () banked
  8472  0117C6  6F86               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  8473  0117C8  EC58  F0A3         	call	_RTCC_from_RTCC	;wreg free
  8474                           
  8475                           ;PIC18F27J53-killifish_light06.c: 234: if (light_mode == TIME_SYNC_mode) {
  8476  0117CC  0100               	movlb	0	; () banked
  8477  0117CE  51F1               	movf	_light_mode& (0+255),w,b
  8478  0117D0  A4D8               	btfss	status,2,c
  8479  0117D2  D09F               	goto	l1428
  8480                           
  8481                           ; BSR set to: 0
  8482                           ;PIC18F27J53-killifish_light06.c: 235: epoch_t temp = (epoch_t) now.epoch % ((epoch_t)60
      +                          *60*24);
  8483  0117D4  C14A  F060         	movff	_now,___llmod@dividend
  8484  0117D8  C14B  F061         	movff	_now+1,___llmod@dividend+1
  8485  0117DC  C14C  F062         	movff	_now+2,___llmod@dividend+2
  8486  0117E0  C14D  F063         	movff	_now+3,___llmod@dividend+3
  8487  0117E4  0E80               	movlw	128
  8488  0117E6  0100               	movlb	0	; () banked
  8489  0117E8  6F64               	movwf	___llmod@divisor& (0+255),b
  8490  0117EA  0E51               	movlw	81
  8491  0117EC  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  8492  0117EE  0E01               	movlw	1
  8493  0117F0  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  8494  0117F2  0E00               	movlw	0
  8495  0117F4  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  8496  0117F6  EC14  F09C         	call	___llmod	;wreg free
  8497  0117FA  C060  F08D         	movff	?___llmod,light_loop@temp
  8498  0117FE  C061  F08E         	movff	?___llmod+1,light_loop@temp+1
  8499  011802  C062  F08F         	movff	?___llmod+2,light_loop@temp+2
  8500  011806  C063  F090         	movff	?___llmod+3,light_loop@temp+3
  8501                           
  8502                           ;PIC18F27J53-killifish_light06.c: 236: if (temp > ((epoch_t)60*60*24) / 2)temp = ((epoch
      +                          _t)60*60*24) - temp;
  8503  01180A  0100               	movlb	0	; () banked
  8504  01180C  5190               	movf	(light_loop@temp+3)& (0+255),w,b
  8505  01180E  0100               	movlb	0	; () banked
  8506  011810  118F               	iorwf	(light_loop@temp+2)& (0+255),w,b
  8507  011812  E108               	bnz	u10120
  8508  011814  0EC1               	movlw	193
  8509  011816  0100               	movlb	0	; () banked
  8510  011818  5D8D               	subwf	light_loop@temp& (0+255),w,b
  8511  01181A  0EA8               	movlw	168
  8512  01181C  0100               	movlb	0	; () banked
  8513  01181E  598E               	subwfb	(light_loop@temp+1)& (0+255),w,b
  8514  011820  A0D8               	btfss	status,0,c
  8515  011822  D026               	goto	l9669
  8516  011824                     u10120:
  8517                           
  8518                           ; BSR set to: 0
  8519  011824  C08D  F087         	movff	light_loop@temp,??_light_loop
  8520  011828  C08E  F088         	movff	light_loop@temp+1,??_light_loop+1
  8521  01182C  C08F  F089         	movff	light_loop@temp+2,??_light_loop+2
  8522  011830  C090  F08A         	movff	light_loop@temp+3,??_light_loop+3
  8523  011834  0100               	movlb	0	; () banked
  8524  011836  1F87               	comf	??_light_loop& (0+255),f,b
  8525  011838  1F88               	comf	(??_light_loop+1)& (0+255),f,b
  8526  01183A  1F89               	comf	(??_light_loop+2)& (0+255),f,b
  8527  01183C  1F8A               	comf	(??_light_loop+3)& (0+255),f,b
  8528  01183E  2B87               	incf	??_light_loop& (0+255),f,b
  8529  011840  0E00               	movlw	0
  8530  011842  2388               	addwfc	(??_light_loop+1)& (0+255),f,b
  8531  011844  2389               	addwfc	(??_light_loop+2)& (0+255),f,b
  8532  011846  238A               	addwfc	(??_light_loop+3)& (0+255),f,b
  8533  011848  0E80               	movlw	128
  8534  01184A  0100               	movlb	0	; () banked
  8535  01184C  2587               	addwf	??_light_loop& (0+255),w,b
  8536  01184E  0100               	movlb	0	; () banked
  8537  011850  6F8D               	movwf	light_loop@temp& (0+255),b
  8538  011852  0E51               	movlw	81
  8539  011854  0100               	movlb	0	; () banked
  8540  011856  2188               	addwfc	(??_light_loop+1)& (0+255),w,b
  8541  011858  0100               	movlb	0	; () banked
  8542  01185A  6F8E               	movwf	(light_loop@temp+1)& (0+255),b
  8543  01185C  0E01               	movlw	1
  8544  01185E  0100               	movlb	0	; () banked
  8545  011860  2189               	addwfc	(??_light_loop+2)& (0+255),w,b
  8546  011862  0100               	movlb	0	; () banked
  8547  011864  6F8F               	movwf	(light_loop@temp+2)& (0+255),b
  8548  011866  0E00               	movlw	0
  8549  011868  0100               	movlb	0	; () banked
  8550  01186A  218A               	addwfc	(??_light_loop+3)& (0+255),w,b
  8551  01186C  0100               	movlb	0	; () banked
  8552  01186E  6F90               	movwf	(light_loop@temp+3)& (0+255),b
  8553  011870                     l9669:
  8554                           
  8555                           ; BSR set to: 0
  8556                           ;PIC18F27J53-killifish_light06.c: 237: temp = temp * 2 * 250 / ((epoch_t)60*60*24);
  8557  011870  90D8               	bcf	status,0,c
  8558  011872  0100               	movlb	0	; () banked
  8559  011874  358D               	rlcf	light_loop@temp& (0+255),w,b
  8560  011876  0100               	movlb	0	; () banked
  8561  011878  6F6C               	movwf	___lmul@multiplier& (0+255),b
  8562  01187A  0100               	movlb	0	; () banked
  8563  01187C  358E               	rlcf	(light_loop@temp+1)& (0+255),w,b
  8564  01187E  0100               	movlb	0	; () banked
  8565  011880  6F6D               	movwf	(___lmul@multiplier+1)& (0+255),b
  8566  011882  0100               	movlb	0	; () banked
  8567  011884  358F               	rlcf	(light_loop@temp+2)& (0+255),w,b
  8568  011886  0100               	movlb	0	; () banked
  8569  011888  6F6E               	movwf	(___lmul@multiplier+2)& (0+255),b
  8570  01188A  0100               	movlb	0	; () banked
  8571  01188C  3590               	rlcf	(light_loop@temp+3)& (0+255),w,b
  8572  01188E  0100               	movlb	0	; () banked
  8573  011890  6F6F               	movwf	(___lmul@multiplier+3)& (0+255),b
  8574  011892  0EFA               	movlw	250
  8575  011894  0100               	movlb	0	; () banked
  8576  011896  6F70               	movwf	___lmul@multiplicand& (0+255),b
  8577  011898  0E00               	movlw	0
  8578  01189A  6F71               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8579  01189C  0E00               	movlw	0
  8580  01189E  6F72               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8581  0118A0  0E00               	movlw	0
  8582  0118A2  6F73               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8583  0118A4  EC53  F09F         	call	___lmul	;wreg free
  8584  0118A8  C06C  F078         	movff	?___lmul,___lldiv@dividend
  8585  0118AC  C06D  F079         	movff	?___lmul+1,___lldiv@dividend+1
  8586  0118B0  C06E  F07A         	movff	?___lmul+2,___lldiv@dividend+2
  8587  0118B4  C06F  F07B         	movff	?___lmul+3,___lldiv@dividend+3
  8588  0118B8  0E80               	movlw	128
  8589  0118BA  0100               	movlb	0	; () banked
  8590  0118BC  6F7C               	movwf	___lldiv@divisor& (0+255),b
  8591  0118BE  0E51               	movlw	81
  8592  0118C0  6F7D               	movwf	(___lldiv@divisor+1)& (0+255),b
  8593  0118C2  0E01               	movlw	1
  8594  0118C4  6F7E               	movwf	(___lldiv@divisor+2)& (0+255),b
  8595  0118C6  0E00               	movlw	0
  8596  0118C8  6F7F               	movwf	(___lldiv@divisor+3)& (0+255),b
  8597  0118CA  ECFE  F099         	call	___lldiv	;wreg free
  8598  0118CE  C078  F08D         	movff	?___lldiv,light_loop@temp
  8599  0118D2  C079  F08E         	movff	?___lldiv+1,light_loop@temp+1
  8600  0118D6  C07A  F08F         	movff	?___lldiv+2,light_loop@temp+2
  8601  0118DA  C07B  F090         	movff	?___lldiv+3,light_loop@temp+3
  8602                           
  8603                           ;PIC18F27J53-killifish_light06.c: 238: PWM_set(3, temp);
  8604  0118DE  C08D  F075         	movff	light_loop@temp,PWM_set@value
  8605  0118E2  C08E  F076         	movff	light_loop@temp+1,PWM_set@value+1
  8606  0118E6  0E03               	movlw	3
  8607  0118E8  ECDC  F08D         	call	_PWM_set
  8608                           
  8609                           ;PIC18F27J53-killifish_light06.c: 239: for (i = 0; i < 3; i++) {
  8610  0118EC  0E00               	movlw	0
  8611  0118EE  0100               	movlb	0	; () banked
  8612  0118F0  6F91               	movwf	light_loop@i& (0+255),b
  8613  0118F2                     l9675:
  8614                           
  8615                           ; BSR set to: 0
  8616  0118F2  0E02               	movlw	2
  8617  0118F4  0100               	movlb	0	; () banked
  8618  0118F6  6591               	cpfsgt	light_loop@i& (0+255),b
  8619  0118F8  D001               	goto	l9679
  8620  0118FA  D00B               	goto	l1428
  8621  0118FC                     l9679:
  8622                           
  8623                           ; BSR set to: 0
  8624                           ;PIC18F27J53-killifish_light06.c: 240: PWM_set(i, temp);
  8625  0118FC  C08D  F075         	movff	light_loop@temp,PWM_set@value
  8626  011900  C08E  F076         	movff	light_loop@temp+1,PWM_set@value+1
  8627  011904  0100               	movlb	0	; () banked
  8628  011906  5191               	movf	light_loop@i& (0+255),w,b
  8629  011908  ECDC  F08D         	call	_PWM_set
  8630  01190C  0100               	movlb	0	; () banked
  8631  01190E  2B91               	incf	light_loop@i& (0+255),f,b
  8632  011910  D7F0               	goto	l9675
  8633  011912                     l1428:
  8634                           
  8635                           ; BSR set to: 0
  8636                           ;PIC18F27J53-killifish_light06.c: 241: }
  8637                           ;PIC18F27J53-killifish_light06.c: 242: }
  8638                           ;PIC18F27J53-killifish_light06.c: 243: }
  8639                           ;PIC18F27J53-killifish_light06.c: 244: if (sw_G.flag.press) {
  8640  011912  0101               	movlb	1	; () banked
  8641  011914  A18D               	btfss	(_sw_G+2)& (0+255),0,b
  8642  011916  D02A               	goto	l1433
  8643                           
  8644                           ; BSR set to: 1
  8645                           ;PIC18F27J53-killifish_light06.c: 245: sw_G.flags = 0;
  8646  011918  0E00               	movlw	0
  8647  01191A  0101               	movlb	1	; () banked
  8648  01191C  6F8E               	movwf	(_sw_G+3)& (0+255),b
  8649  01191E  0E00               	movlw	0
  8650  011920  6F8D               	movwf	(_sw_G+2)& (0+255),b
  8651                           
  8652                           ;PIC18F27J53-killifish_light06.c: 246: light_mode = COMMAND_mode;
  8653  011922  0E02               	movlw	2
  8654  011924  0100               	movlb	0	; () banked
  8655  011926  6FF1               	movwf	_light_mode& (0+255),b
  8656                           
  8657                           ; BSR set to: 0
  8658                           ;PIC18F27J53-killifish_light06.c: 247: static uint8_t n = 0;
  8659                           ;PIC18F27J53-killifish_light06.c: 248: if (n >= 3) n = 0;
  8660  011928  0E02               	movlw	2
  8661  01192A  0100               	movlb	0	; () banked
  8662  01192C  65FE               	cpfsgt	light_loop@n& (0+255),b
  8663  01192E  D004               	goto	l9691
  8664                           
  8665                           ; BSR set to: 0
  8666  011930  0E00               	movlw	0
  8667  011932  0100               	movlb	0	; () banked
  8668  011934  6FFE               	movwf	light_loop@n& (0+255),b
  8669  011936  D002               	goto	l9693
  8670  011938                     l9691:
  8671                           
  8672                           ; BSR set to: 0
  8673                           ;PIC18F27J53-killifish_light06.c: 249: else n++;
  8674  011938  0100               	movlb	0	; () banked
  8675  01193A  2BFE               	incf	light_loop@n& (0+255),f,b
  8676  01193C                     l9693:
  8677                           
  8678                           ; BSR set to: 0
  8679                           ;PIC18F27J53-killifish_light06.c: 250: uint8_t value = 250 / 3 * n;
  8680  01193C  0100               	movlb	0	; () banked
  8681  01193E  51FE               	movf	light_loop@n& (0+255),w,b
  8682  011940  0D53               	mullw	83
  8683  011942  CFF3 F08B          	movff	prodl,light_loop@value
  8684                           
  8685                           ; BSR set to: 0
  8686                           ;PIC18F27J53-killifish_light06.c: 251: for (i = 0; i < 3; i++) {
  8687  011946  0E00               	movlw	0
  8688  011948  0100               	movlb	0	; () banked
  8689  01194A  6F91               	movwf	light_loop@i& (0+255),b
  8690  01194C                     l9697:
  8691                           
  8692                           ; BSR set to: 0
  8693  01194C  0E02               	movlw	2
  8694  01194E  0100               	movlb	0	; () banked
  8695  011950  6591               	cpfsgt	light_loop@i& (0+255),b
  8696  011952  D001               	goto	l9701
  8697  011954  D00B               	goto	l1433
  8698  011956                     l9701:
  8699                           
  8700                           ; BSR set to: 0
  8701                           ;PIC18F27J53-killifish_light06.c: 252: PWM_set(i, value);
  8702  011956  C08B  F075         	movff	light_loop@value,PWM_set@value
  8703  01195A  0100               	movlb	0	; () banked
  8704  01195C  6B76               	clrf	(PWM_set@value+1)& (0+255),b
  8705  01195E  0100               	movlb	0	; () banked
  8706  011960  5191               	movf	light_loop@i& (0+255),w,b
  8707  011962  ECDC  F08D         	call	_PWM_set
  8708  011966  0100               	movlb	0	; () banked
  8709  011968  2B91               	incf	light_loop@i& (0+255),f,b
  8710  01196A  D7F0               	goto	l9697
  8711  01196C                     l1433:
  8712                           
  8713                           ;PIC18F27J53-killifish_light06.c: 253: }
  8714                           ;PIC18F27J53-killifish_light06.c: 254: }
  8715                           ;PIC18F27J53-killifish_light06.c: 255: if (sw_B.flag.press) {
  8716  01196C  0101               	movlb	1	; () banked
  8717  01196E  A189               	btfss	(_sw_B+2)& (0+255),0,b
  8718  011970  D01E               	goto	l9719
  8719                           
  8720                           ; BSR set to: 1
  8721                           ;PIC18F27J53-killifish_light06.c: 256: sw_B.flags = 0;
  8722  011972  0E00               	movlw	0
  8723  011974  0101               	movlb	1	; () banked
  8724  011976  6F8A               	movwf	(_sw_B+3)& (0+255),b
  8725  011978  0E00               	movlw	0
  8726  01197A  6F89               	movwf	(_sw_B+2)& (0+255),b
  8727                           
  8728                           ;PIC18F27J53-killifish_light06.c: 257: light_mode = COMMAND_mode;
  8729  01197C  0E02               	movlw	2
  8730  01197E  0100               	movlb	0	; () banked
  8731  011980  6FF1               	movwf	_light_mode& (0+255),b
  8732                           
  8733                           ; BSR set to: 0
  8734                           ;PIC18F27J53-killifish_light06.c: 258: static uint8_t n = 0;
  8735                           ;PIC18F27J53-killifish_light06.c: 259: if (n >= 3) n = 0;
  8736  011982  0E02               	movlw	2
  8737  011984  0100               	movlb	0	; () banked
  8738  011986  65FD               	cpfsgt	light_loop@_5680& (0+255),b
  8739  011988  D004               	goto	l9713
  8740                           
  8741                           ; BSR set to: 0
  8742  01198A  0E00               	movlw	0
  8743  01198C  0100               	movlb	0	; () banked
  8744  01198E  6FFD               	movwf	light_loop@_5680& (0+255),b
  8745  011990  D002               	goto	l9715
  8746  011992                     l9713:
  8747                           
  8748                           ; BSR set to: 0
  8749                           ;PIC18F27J53-killifish_light06.c: 260: else n++;
  8750  011992  0100               	movlb	0	; () banked
  8751  011994  2BFD               	incf	light_loop@_5680& (0+255),f,b
  8752  011996                     l9715:
  8753                           
  8754                           ; BSR set to: 0
  8755                           ;PIC18F27J53-killifish_light06.c: 261: uint8_t value = 250 / 3 * n;
  8756  011996  0100               	movlb	0	; () banked
  8757  011998  51FD               	movf	light_loop@_5680& (0+255),w,b
  8758  01199A  0D53               	mullw	83
  8759  01199C  CFF3 F08C          	movff	prodl,light_loop@value_5681
  8760                           
  8761                           ; BSR set to: 0
  8762                           ;PIC18F27J53-killifish_light06.c: 262: PWM_set(3, value);
  8763  0119A0  C08C  F075         	movff	light_loop@value_5681,PWM_set@value
  8764  0119A4  0100               	movlb	0	; () banked
  8765  0119A6  6B76               	clrf	(PWM_set@value+1)& (0+255),b
  8766  0119A8  0E03               	movlw	3
  8767  0119AA  ECDC  F08D         	call	_PWM_set
  8768  0119AE                     l9719:
  8769                           
  8770                           ;PIC18F27J53-killifish_light06.c: 263: }
  8771                           ;PIC18F27J53-killifish_light06.c: 264: if (sw_R.flag.press) {
  8772  0119AE  0101               	movlb	1	; () banked
  8773  0119B0  A191               	btfss	(_sw_R+2)& (0+255),0,b
  8774  0119B2  0012               	return	
  8775                           
  8776                           ; BSR set to: 1
  8777                           ;PIC18F27J53-killifish_light06.c: 265: sw_R.flags = 0;
  8778  0119B4  0E00               	movlw	0
  8779  0119B6  0101               	movlb	1	; () banked
  8780  0119B8  6F92               	movwf	(_sw_R+3)& (0+255),b
  8781  0119BA  0E00               	movlw	0
  8782  0119BC  6F91               	movwf	(_sw_R+2)& (0+255),b
  8783                           
  8784                           ;PIC18F27J53-killifish_light06.c: 266: light_mode = TIME_SYNC_mode;
  8785  0119BE  0E00               	movlw	0
  8786  0119C0  0100               	movlb	0	; () banked
  8787  0119C2  6FF1               	movwf	_light_mode& (0+255),b
  8788  0119C4  0012               	return	
  8789  0119C6                     __end_of_light_loop:
  8790                           	opt stack 0
  8791                           tblptru	equ	0xFF8
  8792                           tblptrh	equ	0xFF7
  8793                           tblptrl	equ	0xFF6
  8794                           tablat	equ	0xFF5
  8795                           prodh	equ	0xFF4
  8796                           prodl	equ	0xFF3
  8797                           intcon	equ	0xFF2
  8798                           intcon2	equ	0xFF1
  8799                           indf0	equ	0xFEF
  8800                           postinc0	equ	0xFEE
  8801                           fsr0h	equ	0xFEA
  8802                           fsr0l	equ	0xFE9
  8803                           wreg	equ	0xFE8
  8804                           postinc1	equ	0xFE6
  8805                           postdec1	equ	0xFE5
  8806                           fsr1h	equ	0xFE2
  8807                           fsr1l	equ	0xFE1
  8808                           indf2	equ	0xFDF
  8809                           postinc2	equ	0xFDE
  8810                           postdec2	equ	0xFDD
  8811                           fsr2h	equ	0xFDA
  8812                           fsr2l	equ	0xFD9
  8813                           status	equ	0xFD8
  8814                           
  8815 ;; *************** function ___llmod *****************
  8816 ;; Defined at:
  8817 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  8818 ;; Parameters:    Size  Location     Type
  8819 ;;  dividend        4    0[BANK0 ] unsigned long 
  8820 ;;  divisor         4    4[BANK0 ] unsigned long 
  8821 ;; Auto vars:     Size  Location     Type
  8822 ;;  counter         1    8[BANK0 ] unsigned char 
  8823 ;; Return value:  Size  Location     Type
  8824 ;;                  4    0[BANK0 ] unsigned long 
  8825 ;; Registers used:
  8826 ;;		wreg, status,2, status,0
  8827 ;; Tracked objects:
  8828 ;;		On entry : 0/0
  8829 ;;		On exit  : 0/0
  8830 ;;		Unchanged: 0/0
  8831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8832 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8833 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8835 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8836 ;;Total ram usage:        9 bytes
  8837 ;; Hardware stack levels used:    1
  8838 ;; Hardware stack levels required when called:   11
  8839 ;; This function calls:
  8840 ;;		Nothing
  8841 ;; This function is called by:
  8842 ;;		_light_loop
  8843 ;; This function uses a non-reentrant model
  8844 ;;
  8845                           
  8846                           	psect	text31
  8847  013828                     __ptext31:
  8848                           	opt stack 0
  8849  013828                     ___llmod:
  8850                           	opt stack 18
  8851                           
  8852                           ;incstack = 0
  8853  013828  0100               	movlb	0	; () banked
  8854  01382A  5164               	movf	___llmod@divisor& (0+255),w,b
  8855  01382C  0100               	movlb	0	; () banked
  8856  01382E  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  8857  013830  0100               	movlb	0	; () banked
  8858  013832  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  8859  013834  0100               	movlb	0	; () banked
  8860  013836  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  8861  013838  B4D8               	btfsc	status,2,c
  8862  01383A  D03A               	goto	l1904
  8863                           
  8864                           ; BSR set to: 0
  8865  01383C  0E01               	movlw	1
  8866  01383E  0100               	movlb	0	; () banked
  8867  013840  6F68               	movwf	___llmod@counter& (0+255),b
  8868  013842  D008               	goto	l9449
  8869  013844                     l9447:
  8870                           
  8871                           ; BSR set to: 0
  8872  013844  0100               	movlb	0	; () banked
  8873  013846  90D8               	bcf	status,0,c
  8874  013848  3764               	rlcf	___llmod@divisor& (0+255),f,b
  8875  01384A  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  8876  01384C  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  8877  01384E  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  8878  013850  0100               	movlb	0	; () banked
  8879  013852  2B68               	incf	___llmod@counter& (0+255),f,b
  8880  013854                     l9449:
  8881                           
  8882                           ; BSR set to: 0
  8883  013854  0100               	movlb	0	; () banked
  8884  013856  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
  8885  013858  D7F5               	goto	l9447
  8886  01385A                     l9451:
  8887                           
  8888                           ; BSR set to: 0
  8889  01385A  0100               	movlb	0	; () banked
  8890  01385C  5164               	movf	___llmod@divisor& (0+255),w,b
  8891  01385E  0100               	movlb	0	; () banked
  8892  013860  5D60               	subwf	___llmod@dividend& (0+255),w,b
  8893  013862  0100               	movlb	0	; () banked
  8894  013864  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  8895  013866  0100               	movlb	0	; () banked
  8896  013868  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  8897  01386A  0100               	movlb	0	; () banked
  8898  01386C  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  8899  01386E  0100               	movlb	0	; () banked
  8900  013870  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  8901  013872  0100               	movlb	0	; () banked
  8902  013874  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  8903  013876  0100               	movlb	0	; () banked
  8904  013878  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  8905  01387A  A0D8               	btfss	status,0,c
  8906  01387C  D010               	goto	l9455
  8907                           
  8908                           ; BSR set to: 0
  8909  01387E  0100               	movlb	0	; () banked
  8910  013880  5164               	movf	___llmod@divisor& (0+255),w,b
  8911  013882  0100               	movlb	0	; () banked
  8912  013884  5F60               	subwf	___llmod@dividend& (0+255),f,b
  8913  013886  0100               	movlb	0	; () banked
  8914  013888  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  8915  01388A  0100               	movlb	0	; () banked
  8916  01388C  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  8917  01388E  0100               	movlb	0	; () banked
  8918  013890  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  8919  013892  0100               	movlb	0	; () banked
  8920  013894  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  8921  013896  0100               	movlb	0	; () banked
  8922  013898  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  8923  01389A  0100               	movlb	0	; () banked
  8924  01389C  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  8925  01389E                     l9455:
  8926                           
  8927                           ; BSR set to: 0
  8928  01389E  0100               	movlb	0	; () banked
  8929  0138A0  90D8               	bcf	status,0,c
  8930  0138A2  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  8931  0138A4  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  8932  0138A6  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  8933  0138A8  3364               	rrcf	___llmod@divisor& (0+255),f,b
  8934                           
  8935                           ; BSR set to: 0
  8936  0138AA  0100               	movlb	0	; () banked
  8937  0138AC  2F68               	decfsz	___llmod@counter& (0+255),f,b
  8938  0138AE  D7D5               	goto	l9451
  8939  0138B0                     l1904:
  8940                           
  8941                           ; BSR set to: 0
  8942  0138B0  C060  F060         	movff	___llmod@dividend,?___llmod
  8943  0138B4  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  8944  0138B8  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  8945  0138BC  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  8946                           
  8947                           ; BSR set to: 0
  8948  0138C0  0012               	return		;funcret
  8949  0138C2                     __end_of___llmod:
  8950                           	opt stack 0
  8951                           tblptru	equ	0xFF8
  8952                           tblptrh	equ	0xFF7
  8953                           tblptrl	equ	0xFF6
  8954                           tablat	equ	0xFF5
  8955                           prodh	equ	0xFF4
  8956                           prodl	equ	0xFF3
  8957                           intcon	equ	0xFF2
  8958                           intcon2	equ	0xFF1
  8959                           indf0	equ	0xFEF
  8960                           postinc0	equ	0xFEE
  8961                           fsr0h	equ	0xFEA
  8962                           fsr0l	equ	0xFE9
  8963                           wreg	equ	0xFE8
  8964                           postinc1	equ	0xFE6
  8965                           postdec1	equ	0xFE5
  8966                           fsr1h	equ	0xFE2
  8967                           fsr1l	equ	0xFE1
  8968                           indf2	equ	0xFDF
  8969                           postinc2	equ	0xFDE
  8970                           postdec2	equ	0xFDD
  8971                           fsr2h	equ	0xFDA
  8972                           fsr2l	equ	0xFD9
  8973                           status	equ	0xFD8
  8974                           
  8975 ;; *************** function _PWM_set *****************
  8976 ;; Defined at:
  8977 ;;		line 121 in file "PIC18F27J53-killifish_light06.c"
  8978 ;; Parameters:    Size  Location     Type
  8979 ;;  color           1    wreg     unsigned char 
  8980 ;;  value           2   21[BANK0 ] unsigned int 
  8981 ;; Auto vars:     Size  Location     Type
  8982 ;;  color           1   25[BANK0 ] unsigned char 
  8983 ;; Return value:  Size  Location     Type
  8984 ;;		None               void
  8985 ;; Registers used:
  8986 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8987 ;; Tracked objects:
  8988 ;;		On entry : 0/0
  8989 ;;		On exit  : 0/0
  8990 ;;		Unchanged: 0/0
  8991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8992 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8993 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8994 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8995 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8996 ;;Total ram usage:        5 bytes
  8997 ;; Hardware stack levels used:    1
  8998 ;; Hardware stack levels required when called:   12
  8999 ;; This function calls:
  9000 ;;		___lwdiv
  9001 ;;		___wmul
  9002 ;; This function is called by:
  9003 ;;		_terminal_operation
  9004 ;;		_light_loop
  9005 ;; This function uses a non-reentrant model
  9006 ;;
  9007                           
  9008                           	psect	text32
  9009  011BB8                     __ptext32:
  9010                           	opt stack 0
  9011  011BB8                     _PWM_set:
  9012                           	opt stack 16
  9013                           
  9014                           ; BSR set to: 0
  9015                           ;incstack = 0
  9016                           ;PWM_set@color stored from wreg
  9017  011BB8  0100               	movlb	0	; () banked
  9018  011BBA  6F79               	movwf	PWM_set@color& (0+255),b
  9019                           
  9020                           ;PIC18F27J53-killifish_light06.c: 122: value = value * value / 250;
  9021  011BBC  C075  F060         	movff	PWM_set@value,___wmul@multiplier
  9022  011BC0  C076  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
  9023  011BC4  C075  F062         	movff	PWM_set@value,___wmul@multiplicand
  9024  011BC8  C076  F063         	movff	PWM_set@value+1,___wmul@multiplicand+1
  9025  011BCC  ECE7  F0A1         	call	___wmul	;wreg free
  9026  011BD0  C060  F066         	movff	?___wmul,___lwdiv@dividend
  9027  011BD4  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  9028  011BD8  0E00               	movlw	0
  9029  011BDA  0100               	movlb	0	; () banked
  9030  011BDC  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  9031  011BDE  0EFA               	movlw	250
  9032  011BE0  6F68               	movwf	___lwdiv@divisor& (0+255),b
  9033  011BE2  EC17  F09F         	call	___lwdiv	;wreg free
  9034  011BE6  C066  F075         	movff	?___lwdiv,PWM_set@value
  9035  011BEA  C067  F076         	movff	?___lwdiv+1,PWM_set@value+1
  9036                           
  9037                           ;PIC18F27J53-killifish_light06.c: 123: value = value * value / 250;
  9038  011BEE  C075  F060         	movff	PWM_set@value,___wmul@multiplier
  9039  011BF2  C076  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
  9040  011BF6  C075  F062         	movff	PWM_set@value,___wmul@multiplicand
  9041  011BFA  C076  F063         	movff	PWM_set@value+1,___wmul@multiplicand+1
  9042  011BFE  ECE7  F0A1         	call	___wmul	;wreg free
  9043  011C02  C060  F066         	movff	?___wmul,___lwdiv@dividend
  9044  011C06  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  9045  011C0A  0E00               	movlw	0
  9046  011C0C  0100               	movlb	0	; () banked
  9047  011C0E  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  9048  011C10  0EFA               	movlw	250
  9049  011C12  6F68               	movwf	___lwdiv@divisor& (0+255),b
  9050  011C14  EC17  F09F         	call	___lwdiv	;wreg free
  9051  011C18  C066  F075         	movff	?___lwdiv,PWM_set@value
  9052  011C1C  C067  F076         	movff	?___lwdiv+1,PWM_set@value+1
  9053                           
  9054                           ;PIC18F27J53-killifish_light06.c: 124: value = value * 3 / 4;
  9055  011C20  C075  F060         	movff	PWM_set@value,___wmul@multiplier
  9056  011C24  C076  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
  9057  011C28  0E00               	movlw	0
  9058  011C2A  0100               	movlb	0	; () banked
  9059  011C2C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9060  011C2E  0E03               	movlw	3
  9061  011C30  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9062  011C32  ECE7  F0A1         	call	___wmul	;wreg free
  9063  011C36  0100               	movlb	0	; () banked
  9064  011C38  90D8               	bcf	status,0,c
  9065  011C3A  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  9066  011C3C  3360               	rrcf	?___wmul& (0+255),f,b
  9067  011C3E  0100               	movlb	0	; () banked
  9068  011C40  90D8               	bcf	status,0,c
  9069  011C42  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  9070  011C44  3360               	rrcf	?___wmul& (0+255),f,b
  9071  011C46  C060  F075         	movff	?___wmul,PWM_set@value
  9072  011C4A  C061  F076         	movff	?___wmul+1,PWM_set@value+1
  9073                           
  9074                           ;PIC18F27J53-killifish_light06.c: 125: switch (color) {
  9075  011C4E  D056               	goto	l9103
  9076  011C50                     l9085:
  9077                           
  9078                           ; BSR set to: 0
  9079                           ;PIC18F27J53-killifish_light06.c: 127: if (value < 250 / 4) {
  9080  011C50  0100               	movlb	0	; () banked
  9081  011C52  5176               	movf	(PWM_set@value+1)& (0+255),w,b
  9082  011C54  E105               	bnz	l9089
  9083  011C56  0E3E               	movlw	62
  9084  011C58  0100               	movlb	0	; () banked
  9085  011C5A  5D75               	subwf	PWM_set@value& (0+255),w,b
  9086  011C5C  A0D8               	btfss	status,0,c
  9087  011C5E  D071               	goto	l9123
  9088  011C60                     l9089:
  9089                           
  9090                           ; BSR set to: 0
  9091                           ;PIC18F27J53-killifish_light06.c: 130: value = 2 * (value - 250 / 4) / 3 + 250 / 4;
  9092  011C60  C075  F077         	movff	PWM_set@value,??_PWM_set
  9093  011C64  C076  F078         	movff	PWM_set@value+1,??_PWM_set+1
  9094  011C68  90D8               	bcf	status,0,c
  9095  011C6A  0100               	movlb	0	; () banked
  9096  011C6C  3777               	rlcf	??_PWM_set& (0+255),f,b
  9097  011C6E  3778               	rlcf	(??_PWM_set+1)& (0+255),f,b
  9098  011C70  0E84               	movlw	132
  9099  011C72  0100               	movlb	0	; () banked
  9100  011C74  2577               	addwf	??_PWM_set& (0+255),w,b
  9101  011C76  0100               	movlb	0	; () banked
  9102  011C78  6F66               	movwf	___lwdiv@dividend& (0+255),b
  9103  011C7A  0EFF               	movlw	255
  9104  011C7C  0100               	movlb	0	; () banked
  9105  011C7E  2178               	addwfc	(??_PWM_set+1)& (0+255),w,b
  9106  011C80  0100               	movlb	0	; () banked
  9107  011C82  6F67               	movwf	(___lwdiv@dividend+1)& (0+255),b
  9108  011C84  0E00               	movlw	0
  9109  011C86  0100               	movlb	0	; () banked
  9110  011C88  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  9111  011C8A  0E03               	movlw	3
  9112  011C8C  6F68               	movwf	___lwdiv@divisor& (0+255),b
  9113  011C8E  EC17  F09F         	call	___lwdiv	;wreg free
  9114  011C92  0E3E               	movlw	62
  9115  011C94  0100               	movlb	0	; () banked
  9116  011C96  2566               	addwf	?___lwdiv& (0+255),w,b
  9117  011C98  0100               	movlb	0	; () banked
  9118  011C9A  6F75               	movwf	PWM_set@value& (0+255),b
  9119  011C9C  0E00               	movlw	0
  9120  011C9E  0100               	movlb	0	; () banked
  9121  011CA0  2167               	addwfc	(?___lwdiv+1)& (0+255),w,b
  9122  011CA2  D029               	goto	L1
  9123  011CA4                     l9095:
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;PIC18F27J53-killifish_light06.c: 141: if (value < 250 / 4) {
  9127  011CA4  0100               	movlb	0	; () banked
  9128  011CA6  5176               	movf	(PWM_set@value+1)& (0+255),w,b
  9129  011CA8  E105               	bnz	l9099
  9130  011CAA  0E3E               	movlw	62
  9131  011CAC  0100               	movlb	0	; () banked
  9132  011CAE  5D75               	subwf	PWM_set@value& (0+255),w,b
  9133  011CB0  A0D8               	btfss	status,0,c
  9134  011CB2  D047               	goto	l9123
  9135  011CB4                     l9099:
  9136                           
  9137                           ; BSR set to: 0
  9138                           ;PIC18F27J53-killifish_light06.c: 144: value = 3 * (value - 250 / 4) / 4 + 250 / 4;
  9139  011CB4  0EC2               	movlw	194
  9140  011CB6  0100               	movlb	0	; () banked
  9141  011CB8  2575               	addwf	PWM_set@value& (0+255),w,b
  9142  011CBA  0100               	movlb	0	; () banked
  9143  011CBC  6F60               	movwf	___wmul@multiplier& (0+255),b
  9144  011CBE  0EFF               	movlw	255
  9145  011CC0  0100               	movlb	0	; () banked
  9146  011CC2  2176               	addwfc	(PWM_set@value+1)& (0+255),w,b
  9147  011CC4  0100               	movlb	0	; () banked
  9148  011CC6  6F61               	movwf	(___wmul@multiplier+1)& (0+255),b
  9149  011CC8  0E00               	movlw	0
  9150  011CCA  0100               	movlb	0	; () banked
  9151  011CCC  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9152  011CCE  0E03               	movlw	3
  9153  011CD0  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9154  011CD2  ECE7  F0A1         	call	___wmul	;wreg free
  9155  011CD6  0100               	movlb	0	; () banked
  9156  011CD8  90D8               	bcf	status,0,c
  9157  011CDA  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  9158  011CDC  3360               	rrcf	?___wmul& (0+255),f,b
  9159  011CDE  0100               	movlb	0	; () banked
  9160  011CE0  90D8               	bcf	status,0,c
  9161  011CE2  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  9162  011CE4  3360               	rrcf	?___wmul& (0+255),f,b
  9163  011CE6  0E3E               	movlw	62
  9164  011CE8  0100               	movlb	0	; () banked
  9165  011CEA  2560               	addwf	?___wmul& (0+255),w,b
  9166  011CEC  0100               	movlb	0	; () banked
  9167  011CEE  6F75               	movwf	PWM_set@value& (0+255),b
  9168  011CF0  0E00               	movlw	0
  9169  011CF2  0100               	movlb	0	; () banked
  9170  011CF4  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  9171  011CF6                     L1:
  9172  011CF6  0100               	movlb	0	; () banked
  9173  011CF8  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  9174                           
  9175                           ; BSR set to: 0
  9176                           ;PIC18F27J53-killifish_light06.c: 149: }
  9177                           
  9178                           ; BSR set to: 0
  9179                           ;PIC18F27J53-killifish_light06.c: 148: break;
  9180                           
  9181                           ;PIC18F27J53-killifish_light06.c: 147: case 3:
  9182                           
  9183                           ; BSR set to: 0
  9184                           ;PIC18F27J53-killifish_light06.c: 145: }
  9185                           ;PIC18F27J53-killifish_light06.c: 146: break;
  9186  011CFA  D023               	goto	l9123
  9187  011CFC                     l9103:
  9188                           
  9189                           ; BSR set to: 0
  9190  011CFC  0100               	movlb	0	; () banked
  9191  011CFE  5179               	movf	PWM_set@color& (0+255),w,b
  9192                           
  9193                           ; Switch size 1, requested type "space"
  9194                           ; Number of cases is 4, Range of values is 0 to 3
  9195                           ; switch strategies available:
  9196                           ; Name         Instructions Cycles
  9197                           ; simple_byte           13     7 (average)
  9198                           ;	Chosen strategy is simple_byte
  9199  011D00  0A00               	xorlw	0	; case 0
  9200  011D02  B4D8               	btfsc	status,2,c
  9201  011D04  D7A5               	goto	l9085
  9202  011D06  0A01               	xorlw	1	; case 1
  9203  011D08  B4D8               	btfsc	status,2,c
  9204  011D0A  D01B               	goto	l9123
  9205  011D0C  0A03               	xorlw	3	; case 2
  9206  011D0E  B4D8               	btfsc	status,2,c
  9207  011D10  D7C9               	goto	l9095
  9208  011D12  0A01               	xorlw	1	; case 3
  9209                           
  9210                           ; BSR set to: 0
  9211                           ;PIC18F27J53-killifish_light06.c: 150: switch (color) {
  9212  011D14  D016               	goto	l9123
  9213  011D16                     l9105:
  9214                           
  9215                           ; BSR set to: 0
  9216                           ;PIC18F27J53-killifish_light06.c: 152: CCP1CONbits.DC1B = 0;
  9217  011D16  0ECF               	movlw	-49
  9218  011D18  16BA               	andwf	4026,f,c	;volatile
  9219                           
  9220                           ; BSR set to: 0
  9221                           ;PIC18F27J53-killifish_light06.c: 153: CCPR1L = value;
  9222  011D1A  C075  FFBB         	movff	PWM_set@value,4027	;volatile
  9223                           
  9224                           ;PIC18F27J53-killifish_light06.c: 154: break;
  9225  011D1E  0012               	return	
  9226  011D20                     l9109:
  9227                           
  9228                           ; BSR set to: 0
  9229                           ;PIC18F27J53-killifish_light06.c: 156: CCP2CONbits.DC2B = 0;
  9230  011D20  0ECF               	movlw	-49
  9231  011D22  16B4               	andwf	4020,f,c	;volatile
  9232                           
  9233                           ; BSR set to: 0
  9234                           ;PIC18F27J53-killifish_light06.c: 157: CCPR2L = value;
  9235  011D24  C075  FFB5         	movff	PWM_set@value,4021	;volatile
  9236                           
  9237                           ;PIC18F27J53-killifish_light06.c: 158: break;
  9238  011D28  0012               	return	
  9239  011D2A                     l9113:
  9240                           
  9241                           ; BSR set to: 0
  9242                           ;PIC18F27J53-killifish_light06.c: 160: CCP3CONbits.DC3B = 0;
  9243  011D2A  0ECF               	movlw	-49
  9244  011D2C  010F               	movlb	15	; () banked
  9245  011D2E  1715               	andwf	21,f,b	;volatile
  9246                           
  9247                           ; BSR set to: 15
  9248                           ;PIC18F27J53-killifish_light06.c: 161: CCPR3L = value;
  9249  011D30  C075  FF16         	movff	PWM_set@value,3862	;volatile
  9250                           
  9251                           ;PIC18F27J53-killifish_light06.c: 162: break;
  9252  011D34  0012               	return	
  9253  011D36                     l9117:
  9254                           
  9255                           ;PIC18F27J53-killifish_light06.c: 164: CCP4CONbits.DC4B = 0;
  9256  011D36  0ECF               	movlw	-49
  9257  011D38  010F               	movlb	15	; () banked
  9258  011D3A  1712               	andwf	18,f,b	;volatile
  9259                           
  9260                           ; BSR set to: 15
  9261                           ;PIC18F27J53-killifish_light06.c: 165: CCPR4L = value;
  9262  011D3C  C075  FF13         	movff	PWM_set@value,3859	;volatile
  9263                           
  9264                           ; BSR set to: 15
  9265                           ;PIC18F27J53-killifish_light06.c: 167: }
  9266                           
  9267                           ;PIC18F27J53-killifish_light06.c: 166: break;
  9268  011D40  0012               	return	
  9269  011D42                     l9123:
  9270  011D42  0100               	movlb	0	; () banked
  9271  011D44  5179               	movf	PWM_set@color& (0+255),w,b
  9272                           
  9273                           ; Switch size 1, requested type "space"
  9274                           ; Number of cases is 4, Range of values is 0 to 3
  9275                           ; switch strategies available:
  9276                           ; Name         Instructions Cycles
  9277                           ; simple_byte           13     7 (average)
  9278                           ;	Chosen strategy is simple_byte
  9279  011D46  0A00               	xorlw	0	; case 0
  9280  011D48  B4D8               	btfsc	status,2,c
  9281  011D4A  D7E5               	goto	l9105
  9282  011D4C  0A01               	xorlw	1	; case 1
  9283  011D4E  B4D8               	btfsc	status,2,c
  9284  011D50  D7E7               	goto	l9109
  9285  011D52  0A03               	xorlw	3	; case 2
  9286  011D54  B4D8               	btfsc	status,2,c
  9287  011D56  D7E9               	goto	l9113
  9288  011D58  0A01               	xorlw	1	; case 3
  9289  011D5A  A4D8               	btfss	status,2,c
  9290  011D5C  0012               	return	
  9291  011D5E  D7EB               	goto	l9117
  9292  011D60                     __end_of_PWM_set:
  9293                           	opt stack 0
  9294                           tblptru	equ	0xFF8
  9295                           tblptrh	equ	0xFF7
  9296                           tblptrl	equ	0xFF6
  9297                           tablat	equ	0xFF5
  9298                           prodh	equ	0xFF4
  9299                           prodl	equ	0xFF3
  9300                           intcon	equ	0xFF2
  9301                           intcon2	equ	0xFF1
  9302                           indf0	equ	0xFEF
  9303                           postinc0	equ	0xFEE
  9304                           fsr0h	equ	0xFEA
  9305                           fsr0l	equ	0xFE9
  9306                           wreg	equ	0xFE8
  9307                           postinc1	equ	0xFE6
  9308                           postdec1	equ	0xFE5
  9309                           fsr1h	equ	0xFE2
  9310                           fsr1l	equ	0xFE1
  9311                           indf2	equ	0xFDF
  9312                           postinc2	equ	0xFDE
  9313                           postdec2	equ	0xFDD
  9314                           fsr2h	equ	0xFDA
  9315                           fsr2l	equ	0xFD9
  9316                           status	equ	0xFD8
  9317                           
  9318 ;; *************** function ___wmul *****************
  9319 ;; Defined at:
  9320 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  9321 ;; Parameters:    Size  Location     Type
  9322 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9323 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9324 ;; Auto vars:     Size  Location     Type
  9325 ;;  product         2    4[BANK0 ] unsigned int 
  9326 ;; Return value:  Size  Location     Type
  9327 ;;                  2    0[BANK0 ] unsigned int 
  9328 ;; Registers used:
  9329 ;;		wreg, status,2, status,0, prodl, prodh
  9330 ;; Tracked objects:
  9331 ;;		On entry : 0/0
  9332 ;;		On exit  : 0/0
  9333 ;;		Unchanged: 0/0
  9334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9335 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9336 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9338 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9339 ;;Total ram usage:        6 bytes
  9340 ;; Hardware stack levels used:    1
  9341 ;; Hardware stack levels required when called:   11
  9342 ;; This function calls:
  9343 ;;		Nothing
  9344 ;; This function is called by:
  9345 ;;		_PWM_set
  9346 ;;		_terminal_operation
  9347 ;;		_sprintf
  9348 ;;		_atoi
  9349 ;; This function uses a non-reentrant model
  9350 ;;
  9351                           
  9352                           	psect	text33
  9353  0143CE                     __ptext33:
  9354                           	opt stack 0
  9355  0143CE                     ___wmul:
  9356                           	opt stack 13
  9357                           
  9358                           ;incstack = 0
  9359  0143CE  0100               	movlb	0	; () banked
  9360  0143D0  5160               	movf	___wmul@multiplier& (0+255),w,b
  9361  0143D2  0100               	movlb	0	; () banked
  9362  0143D4  0362               	mulwf	___wmul@multiplicand& (0+255),b
  9363  0143D6  CFF3 F064          	movff	prodl,___wmul@product
  9364  0143DA  CFF4 F065          	movff	prodh,___wmul@product+1
  9365  0143DE  0100               	movlb	0	; () banked
  9366  0143E0  5160               	movf	___wmul@multiplier& (0+255),w,b
  9367  0143E2  0100               	movlb	0	; () banked
  9368  0143E4  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9369  0143E6  50F3               	movf	prodl,w,c
  9370  0143E8  0100               	movlb	0	; () banked
  9371  0143EA  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  9372  0143EC  0100               	movlb	0	; () banked
  9373  0143EE  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9374  0143F0  0100               	movlb	0	; () banked
  9375  0143F2  0362               	mulwf	___wmul@multiplicand& (0+255),b
  9376  0143F4  50F3               	movf	prodl,w,c
  9377  0143F6  0100               	movlb	0	; () banked
  9378  0143F8  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  9379                           
  9380                           ; BSR set to: 0
  9381  0143FA  C064  F060         	movff	___wmul@product,?___wmul
  9382  0143FE  C065  F061         	movff	___wmul@product+1,?___wmul+1
  9383  014402  0012               	return	
  9384  014404                     __end_of___wmul:
  9385                           	opt stack 0
  9386                           tblptru	equ	0xFF8
  9387                           tblptrh	equ	0xFF7
  9388                           tblptrl	equ	0xFF6
  9389                           tablat	equ	0xFF5
  9390                           prodh	equ	0xFF4
  9391                           prodl	equ	0xFF3
  9392                           intcon	equ	0xFF2
  9393                           intcon2	equ	0xFF1
  9394                           indf0	equ	0xFEF
  9395                           postinc0	equ	0xFEE
  9396                           fsr0h	equ	0xFEA
  9397                           fsr0l	equ	0xFE9
  9398                           wreg	equ	0xFE8
  9399                           postinc1	equ	0xFE6
  9400                           postdec1	equ	0xFE5
  9401                           fsr1h	equ	0xFE2
  9402                           fsr1l	equ	0xFE1
  9403                           indf2	equ	0xFDF
  9404                           postinc2	equ	0xFDE
  9405                           postdec2	equ	0xFDD
  9406                           fsr2h	equ	0xFDA
  9407                           fsr2l	equ	0xFD9
  9408                           status	equ	0xFD8
  9409                           
  9410 ;; *************** function ___lwdiv *****************
  9411 ;; Defined at:
  9412 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  9413 ;; Parameters:    Size  Location     Type
  9414 ;;  dividend        2    6[BANK0 ] unsigned int 
  9415 ;;  divisor         2    8[BANK0 ] unsigned int 
  9416 ;; Auto vars:     Size  Location     Type
  9417 ;;  quotient        2   11[BANK0 ] unsigned int 
  9418 ;;  counter         1   10[BANK0 ] unsigned char 
  9419 ;; Return value:  Size  Location     Type
  9420 ;;                  2    6[BANK0 ] unsigned int 
  9421 ;; Registers used:
  9422 ;;		wreg, status,2, status,0
  9423 ;; Tracked objects:
  9424 ;;		On entry : 0/0
  9425 ;;		On exit  : 0/0
  9426 ;;		Unchanged: 0/0
  9427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9428 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9429 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9431 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9432 ;;Total ram usage:        7 bytes
  9433 ;; Hardware stack levels used:    1
  9434 ;; Hardware stack levels required when called:   11
  9435 ;; This function calls:
  9436 ;;		Nothing
  9437 ;; This function is called by:
  9438 ;;		_ringbuf_put_num
  9439 ;;		_PWM_set
  9440 ;;		_sprintf
  9441 ;;		_tx_sendn
  9442 ;; This function uses a non-reentrant model
  9443 ;;
  9444                           
  9445                           	psect	text34
  9446  013E2E                     __ptext34:
  9447                           	opt stack 0
  9448  013E2E                     ___lwdiv:
  9449                           	opt stack 13
  9450                           
  9451                           ; BSR set to: 0
  9452                           ;incstack = 0
  9453  013E2E  0E00               	movlw	0
  9454  013E30  0100               	movlb	0	; () banked
  9455  013E32  6F6C               	movwf	(___lwdiv@quotient+1)& (0+255),b
  9456  013E34  0E00               	movlw	0
  9457  013E36  6F6B               	movwf	___lwdiv@quotient& (0+255),b
  9458                           
  9459                           ; BSR set to: 0
  9460  013E38  0100               	movlb	0	; () banked
  9461  013E3A  5168               	movf	___lwdiv@divisor& (0+255),w,b
  9462  013E3C  0100               	movlb	0	; () banked
  9463  013E3E  1169               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  9464  013E40  B4D8               	btfsc	status,2,c
  9465  013E42  D02C               	goto	l1947
  9466                           
  9467                           ; BSR set to: 0
  9468  013E44  0E01               	movlw	1
  9469  013E46  0100               	movlb	0	; () banked
  9470  013E48  6F6A               	movwf	___lwdiv@counter& (0+255),b
  9471  013E4A  D006               	goto	l8451
  9472  013E4C                     l8449:
  9473                           
  9474                           ; BSR set to: 0
  9475  013E4C  0100               	movlb	0	; () banked
  9476  013E4E  90D8               	bcf	status,0,c
  9477  013E50  3768               	rlcf	___lwdiv@divisor& (0+255),f,b
  9478  013E52  3769               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  9479  013E54  0100               	movlb	0	; () banked
  9480  013E56  2B6A               	incf	___lwdiv@counter& (0+255),f,b
  9481  013E58                     l8451:
  9482                           
  9483                           ; BSR set to: 0
  9484  013E58  0100               	movlb	0	; () banked
  9485  013E5A  AF69               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  9486  013E5C  D7F7               	goto	l8449
  9487  013E5E                     l8453:
  9488                           
  9489                           ; BSR set to: 0
  9490  013E5E  0100               	movlb	0	; () banked
  9491  013E60  90D8               	bcf	status,0,c
  9492  013E62  376B               	rlcf	___lwdiv@quotient& (0+255),f,b
  9493  013E64  376C               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  9494                           
  9495                           ; BSR set to: 0
  9496  013E66  0100               	movlb	0	; () banked
  9497  013E68  5168               	movf	___lwdiv@divisor& (0+255),w,b
  9498  013E6A  0100               	movlb	0	; () banked
  9499  013E6C  5D66               	subwf	___lwdiv@dividend& (0+255),w,b
  9500  013E6E  0100               	movlb	0	; () banked
  9501  013E70  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9502  013E72  0100               	movlb	0	; () banked
  9503  013E74  5967               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  9504  013E76  A0D8               	btfss	status,0,c
  9505  013E78  D00A               	goto	l8461
  9506                           
  9507                           ; BSR set to: 0
  9508  013E7A  0100               	movlb	0	; () banked
  9509  013E7C  5168               	movf	___lwdiv@divisor& (0+255),w,b
  9510  013E7E  0100               	movlb	0	; () banked
  9511  013E80  5F66               	subwf	___lwdiv@dividend& (0+255),f,b
  9512  013E82  0100               	movlb	0	; () banked
  9513  013E84  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9514  013E86  0100               	movlb	0	; () banked
  9515  013E88  5B67               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  9516                           
  9517                           ; BSR set to: 0
  9518  013E8A  0100               	movlb	0	; () banked
  9519  013E8C  816B               	bsf	___lwdiv@quotient& (0+255),0,b
  9520  013E8E                     l8461:
  9521                           
  9522                           ; BSR set to: 0
  9523  013E8E  0100               	movlb	0	; () banked
  9524  013E90  90D8               	bcf	status,0,c
  9525  013E92  3369               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  9526  013E94  3368               	rrcf	___lwdiv@divisor& (0+255),f,b
  9527                           
  9528                           ; BSR set to: 0
  9529  013E96  0100               	movlb	0	; () banked
  9530  013E98  2F6A               	decfsz	___lwdiv@counter& (0+255),f,b
  9531  013E9A  D7E1               	goto	l8453
  9532  013E9C                     l1947:
  9533                           
  9534                           ; BSR set to: 0
  9535  013E9C  C06B  F066         	movff	___lwdiv@quotient,?___lwdiv
  9536  013EA0  C06C  F067         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9537                           
  9538                           ; BSR set to: 0
  9539  013EA4  0012               	return		;funcret
  9540  013EA6                     __end_of___lwdiv:
  9541                           	opt stack 0
  9542                           tblptru	equ	0xFF8
  9543                           tblptrh	equ	0xFF7
  9544                           tblptrl	equ	0xFF6
  9545                           tablat	equ	0xFF5
  9546                           prodh	equ	0xFF4
  9547                           prodl	equ	0xFF3
  9548                           intcon	equ	0xFF2
  9549                           intcon2	equ	0xFF1
  9550                           indf0	equ	0xFEF
  9551                           postinc0	equ	0xFEE
  9552                           fsr0h	equ	0xFEA
  9553                           fsr0l	equ	0xFE9
  9554                           wreg	equ	0xFE8
  9555                           postinc1	equ	0xFE6
  9556                           postdec1	equ	0xFE5
  9557                           fsr1h	equ	0xFE2
  9558                           fsr1l	equ	0xFE1
  9559                           indf2	equ	0xFDF
  9560                           postinc2	equ	0xFDE
  9561                           postdec2	equ	0xFDD
  9562                           fsr2h	equ	0xFDA
  9563                           fsr2l	equ	0xFD9
  9564                           status	equ	0xFD8
  9565                           
  9566 ;; *************** function _USB_loop *****************
  9567 ;; Defined at:
  9568 ;;		line 66 in file "../My_library/usb_cdc/My_usb_cdc.c"
  9569 ;; Parameters:    Size  Location     Type
  9570 ;;		None
  9571 ;; Auto vars:     Size  Location     Type
  9572 ;;  rx_len          2   20[BANK0 ] int 
  9573 ;;  data            1   22[BANK0 ] unsigned char 
  9574 ;; Return value:  Size  Location     Type
  9575 ;;		None               void
  9576 ;; Registers used:
  9577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9578 ;; Tracked objects:
  9579 ;;		On entry : 0/0
  9580 ;;		On exit  : 0/0
  9581 ;;		Unchanged: 0/0
  9582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9584 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9586 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9587 ;;Total ram usage:        3 bytes
  9588 ;; Hardware stack levels used:    1
  9589 ;; Hardware stack levels required when called:   14
  9590 ;; This function calls:
  9591 ;;		_get_string_usb
  9592 ;;		_put_string_usb
  9593 ;;		_ringbuf_num
  9594 ;;		_ringbuf_pop
  9595 ;;		_ringbuf_put
  9596 ;; This function is called by:
  9597 ;;		_main
  9598 ;; This function uses a non-reentrant model
  9599 ;;
  9600                           
  9601                           	psect	text35
  9602  013B14                     __ptext35:
  9603                           	opt stack 0
  9604  013B14                     _USB_loop:
  9605                           	opt stack 16
  9606                           
  9607                           ;My_usb_cdc.c: 67: char data;
  9608                           ;My_usb_cdc.c: 68: int rx_len;
  9609                           ;My_usb_cdc.c: 69: rx_len = get_string_usb(&data, 1);
  9610                           
  9611                           ; BSR set to: 0
  9612                           ;incstack = 0
  9613  013B14  0E76               	movlw	low USB_loop@data
  9614  013B16  0100               	movlb	0	; () banked
  9615  013B18  6F6D               	movwf	get_string_usb@s& (0+255),b
  9616  013B1A  0E00               	movlw	high USB_loop@data
  9617  013B1C  0100               	movlb	0	; () banked
  9618  013B1E  6F6E               	movwf	(get_string_usb@s+1)& (0+255),b
  9619  013B20  0E00               	movlw	0
  9620  013B22  0100               	movlb	0	; () banked
  9621  013B24  6F70               	movwf	(get_string_usb@len+1)& (0+255),b
  9622  013B26  0E01               	movlw	1
  9623  013B28  6F6F               	movwf	get_string_usb@len& (0+255),b
  9624  013B2A  EC07  F0A1         	call	_get_string_usb	;wreg free
  9625  013B2E  C06D  F074         	movff	?_get_string_usb,USB_loop@rx_len
  9626  013B32  C06E  F075         	movff	?_get_string_usb+1,USB_loop@rx_len+1
  9627                           
  9628                           ;My_usb_cdc.c: 70: if (rx_len) {
  9629  013B36  0100               	movlb	0	; () banked
  9630  013B38  5174               	movf	USB_loop@rx_len& (0+255),w,b
  9631  013B3A  0100               	movlb	0	; () banked
  9632  013B3C  1175               	iorwf	(USB_loop@rx_len+1)& (0+255),w,b
  9633  013B3E  B4D8               	btfsc	status,2,c
  9634  013B40  D00A               	goto	l583
  9635                           
  9636                           ; BSR set to: 0
  9637                           ;My_usb_cdc.c: 71: ringbuf_put(&usb_rx, data);
  9638  013B42  0E70               	movlw	low _usb_rx
  9639  013B44  0100               	movlb	0	; () banked
  9640  013B46  6F68               	movwf	ringbuf_put@rb& (0+255),b
  9641  013B48  0E01               	movlw	high _usb_rx
  9642  013B4A  0100               	movlb	0	; () banked
  9643  013B4C  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  9644  013B4E  C076  F06A         	movff	USB_loop@data,ringbuf_put@asciicode
  9645  013B52  EC78  F096         	call	_ringbuf_put	;wreg free
  9646  013B56                     l583:
  9647                           
  9648                           ;My_usb_cdc.c: 72: }
  9649                           ;My_usb_cdc.c: 73: if (ringbuf_num(&usb_tx)) {
  9650  013B56  0E78               	movlw	low _usb_tx
  9651  013B58  0100               	movlb	0	; () banked
  9652  013B5A  6F60               	movwf	ringbuf_num@rb& (0+255),b
  9653  013B5C  0E01               	movlw	high _usb_tx
  9654  013B5E  0100               	movlb	0	; () banked
  9655  013B60  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  9656  013B62  EC6B  F093         	call	_ringbuf_num	;wreg free
  9657  013B66  0100               	movlb	0	; () banked
  9658  013B68  5160               	movf	?_ringbuf_num& (0+255),w,b
  9659  013B6A  0100               	movlb	0	; () banked
  9660  013B6C  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  9661  013B6E  B4D8               	btfsc	status,2,c
  9662  013B70  0012               	return	
  9663                           
  9664                           ; BSR set to: 0
  9665                           ;My_usb_cdc.c: 74: data = ringbuf_pop(&usb_tx);
  9666  013B72  0E78               	movlw	low _usb_tx
  9667  013B74  0100               	movlb	0	; () banked
  9668  013B76  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  9669  013B78  0E01               	movlw	high _usb_tx
  9670  013B7A  0100               	movlb	0	; () banked
  9671  013B7C  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  9672  013B7E  EC1C  F098         	call	_ringbuf_pop	;wreg free
  9673  013B82  0100               	movlb	0	; () banked
  9674  013B84  6F76               	movwf	USB_loop@data& (0+255),b
  9675                           
  9676                           ; BSR set to: 0
  9677                           ;My_usb_cdc.c: 75: put_string_usb(&data, 1);
  9678  013B86  0E76               	movlw	low USB_loop@data
  9679  013B88  0100               	movlb	0	; () banked
  9680  013B8A  6F6C               	movwf	put_string_usb@s& (0+255),b
  9681  013B8C  0E00               	movlw	high USB_loop@data
  9682  013B8E  0100               	movlb	0	; () banked
  9683  013B90  6F6D               	movwf	(put_string_usb@s+1)& (0+255),b
  9684  013B92  0E00               	movlw	0
  9685  013B94  0100               	movlb	0	; () banked
  9686  013B96  6F6F               	movwf	(put_string_usb@len+1)& (0+255),b
  9687  013B98  0E01               	movlw	1
  9688  013B9A  6F6E               	movwf	put_string_usb@len& (0+255),b
  9689  013B9C  EC7A  F0A2         	call	_put_string_usb	;wreg free
  9690  013BA0  0012               	return	
  9691  013BA2                     __end_of_USB_loop:
  9692                           	opt stack 0
  9693                           tblptru	equ	0xFF8
  9694                           tblptrh	equ	0xFF7
  9695                           tblptrl	equ	0xFF6
  9696                           tablat	equ	0xFF5
  9697                           prodh	equ	0xFF4
  9698                           prodl	equ	0xFF3
  9699                           intcon	equ	0xFF2
  9700                           intcon2	equ	0xFF1
  9701                           indf0	equ	0xFEF
  9702                           postinc0	equ	0xFEE
  9703                           fsr0h	equ	0xFEA
  9704                           fsr0l	equ	0xFE9
  9705                           wreg	equ	0xFE8
  9706                           postinc1	equ	0xFE6
  9707                           postdec1	equ	0xFE5
  9708                           fsr1h	equ	0xFE2
  9709                           fsr1l	equ	0xFE1
  9710                           indf2	equ	0xFDF
  9711                           postinc2	equ	0xFDE
  9712                           postdec2	equ	0xFDD
  9713                           fsr2h	equ	0xFDA
  9714                           fsr2l	equ	0xFD9
  9715                           status	equ	0xFD8
  9716                           
  9717 ;; *************** function _ringbuf_put *****************
  9718 ;; Defined at:
  9719 ;;		line 20 in file "../My_library/My_ringbuf.c"
  9720 ;; Parameters:    Size  Location     Type
  9721 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  9722 ;;		 -> terminal_loop@command(8), rx_buf(8), tx_buf(8), usb_tx(8), 
  9723 ;;		 -> usb_rx(8), 
  9724 ;;  asciicode       1   10[BANK0 ] unsigned char 
  9725 ;; Auto vars:     Size  Location     Type
  9726 ;;		None
  9727 ;; Return value:  Size  Location     Type
  9728 ;;		None               void
  9729 ;; Registers used:
  9730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9731 ;; Tracked objects:
  9732 ;;		On entry : 0/0
  9733 ;;		On exit  : 0/0
  9734 ;;		Unchanged: 0/0
  9735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9736 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9738 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9739 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9740 ;;Total ram usage:        7 bytes
  9741 ;; Hardware stack levels used:    1
  9742 ;; Hardware stack levels required when called:   12
  9743 ;; This function calls:
  9744 ;;		_ringbuf_num
  9745 ;; This function is called by:
  9746 ;;		_USB_loop
  9747 ;;		_tx_sends
  9748 ;;		_ringbuf_put_num
  9749 ;;		_ringbuf_put_str
  9750 ;;		_terminal_loop
  9751 ;;		_UART_ISR
  9752 ;;		_tx_send
  9753 ;; This function uses a non-reentrant model
  9754 ;;
  9755                           
  9756                           	psect	text36
  9757  012CF0                     __ptext36:
  9758                           	opt stack 0
  9759  012CF0                     _ringbuf_put:
  9760                           	opt stack 15
  9761                           
  9762                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
  9763                           
  9764                           ;incstack = 0
  9765  012CF0  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
  9766  012CF4  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  9767  012CF8  EC6B  F093         	call	_ringbuf_num	;wreg free
  9768  012CFC  0100               	movlb	0	; () banked
  9769  012CFE  EE20 F002          	lfsr	2,2
  9770  012D02  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9771  012D04  26D9               	addwf	fsr2l,f,c
  9772  012D06  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9773  012D08  22DA               	addwfc	fsr2h,f,c
  9774  012D0A  50DE               	movf	postinc2,w,c
  9775  012D0C  0100               	movlb	0	; () banked
  9776  012D0E  5D60               	subwf	?_ringbuf_num& (0+255),w,b
  9777  012D10  50DE               	movf	postinc2,w,c
  9778  012D12  0100               	movlb	0	; () banked
  9779  012D14  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
  9780  012D16  B0D8               	btfsc	status,0,c
  9781  012D18  0012               	return	
  9782                           
  9783                           ; BSR set to: 0
  9784                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
  9785  012D1A  0100               	movlb	0	; () banked
  9786  012D1C  EE20 F004          	lfsr	2,4
  9787  012D20  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9788  012D22  26D9               	addwf	fsr2l,f,c
  9789  012D24  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9790  012D26  22DA               	addwfc	fsr2h,f,c
  9791  012D28  CFDE F06B          	movff	postinc2,??_ringbuf_put
  9792  012D2C  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
  9793  012D30  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
  9794  012D34  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  9795  012D38  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
  9796  012D3C  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
  9797  012D40  0100               	movlb	0	; () banked
  9798  012D42  516B               	movf	??_ringbuf_put& (0+255),w,b
  9799  012D44  0100               	movlb	0	; () banked
  9800  012D46  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  9801  012D48  6ED9               	movwf	fsr2l,c
  9802  012D4A  0100               	movlb	0	; () banked
  9803  012D4C  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
  9804  012D4E  0100               	movlb	0	; () banked
  9805  012D50  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  9806  012D52  6EDA               	movwf	fsr2h,c
  9807  012D54  C06A  FFDF         	movff	ringbuf_put@asciicode,indf2
  9808                           
  9809                           ; BSR set to: 0
  9810                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
  9811  012D58  0100               	movlb	0	; () banked
  9812  012D5A  EE20 F002          	lfsr	2,2
  9813  012D5E  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9814  012D60  26D9               	addwf	fsr2l,f,c
  9815  012D62  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9816  012D64  22DA               	addwfc	fsr2h,f,c
  9817  012D66  0100               	movlb	0	; () banked
  9818  012D68  EE10 F004          	lfsr	1,4
  9819  012D6C  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9820  012D6E  26E1               	addwf	fsr1l,f,c
  9821  012D70  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9822  012D72  22E2               	addwfc	fsr1h,f,c
  9823  012D74  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
  9824  012D78  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
  9825  012D7C  0E01               	movlw	1
  9826  012D7E  0100               	movlb	0	; () banked
  9827  012D80  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  9828  012D82  0E00               	movlw	0
  9829  012D84  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  9830  012D86  50DE               	movf	postinc2,w,c
  9831  012D88  0100               	movlb	0	; () banked
  9832  012D8A  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  9833  012D8C  50DE               	movf	postinc2,w,c
  9834  012D8E  0100               	movlb	0	; () banked
  9835  012D90  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  9836  012D92  B0D8               	btfsc	status,0,c
  9837  012D94  D00B               	goto	l8375
  9838                           
  9839                           ; BSR set to: 0
  9840  012D96  0100               	movlb	0	; () banked
  9841  012D98  EE20 F004          	lfsr	2,4
  9842  012D9C  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9843  012D9E  26D9               	addwf	fsr2l,f,c
  9844  012DA0  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9845  012DA2  22DA               	addwfc	fsr2h,f,c
  9846  012DA4  2ADE               	incf	postinc2,f,c
  9847  012DA6  0E00               	movlw	0
  9848  012DA8  22DD               	addwfc	postdec2,f,c
  9849  012DAA  0012               	return	
  9850  012DAC                     l8375:
  9851                           
  9852                           ; BSR set to: 0
  9853                           ;My_ringbuf.c: 24: else rb->head = 0;
  9854  012DAC  0100               	movlb	0	; () banked
  9855  012DAE  EE20 F004          	lfsr	2,4
  9856  012DB2  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9857  012DB4  26D9               	addwf	fsr2l,f,c
  9858  012DB6  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9859  012DB8  22DA               	addwfc	fsr2h,f,c
  9860  012DBA  0E00               	movlw	0
  9861  012DBC  6EDE               	movwf	postinc2,c
  9862  012DBE  0E00               	movlw	0
  9863  012DC0  6EDD               	movwf	postdec2,c
  9864                           
  9865                           ; BSR set to: 0
  9866  012DC2  0012               	return	
  9867  012DC4                     __end_of_ringbuf_put:
  9868                           	opt stack 0
  9869                           tblptru	equ	0xFF8
  9870                           tblptrh	equ	0xFF7
  9871                           tblptrl	equ	0xFF6
  9872                           tablat	equ	0xFF5
  9873                           prodh	equ	0xFF4
  9874                           prodl	equ	0xFF3
  9875                           intcon	equ	0xFF2
  9876                           intcon2	equ	0xFF1
  9877                           indf0	equ	0xFEF
  9878                           postinc0	equ	0xFEE
  9879                           fsr0h	equ	0xFEA
  9880                           fsr0l	equ	0xFE9
  9881                           wreg	equ	0xFE8
  9882                           postinc1	equ	0xFE6
  9883                           postdec1	equ	0xFE5
  9884                           fsr1h	equ	0xFE2
  9885                           fsr1l	equ	0xFE1
  9886                           indf2	equ	0xFDF
  9887                           postinc2	equ	0xFDE
  9888                           postdec2	equ	0xFDD
  9889                           fsr2h	equ	0xFDA
  9890                           fsr2l	equ	0xFD9
  9891                           status	equ	0xFD8
  9892                           
  9893 ;; *************** function _ringbuf_pop *****************
  9894 ;; Defined at:
  9895 ;;		line 45 in file "../My_library/My_ringbuf.c"
  9896 ;; Parameters:    Size  Location     Type
  9897 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  9898 ;;		 -> terminal_loop@command(8), tx_buf(8), usb_tx(8), usb_rx(8), 
  9899 ;; Auto vars:     Size  Location     Type
  9900 ;;  ret             1   14[BANK0 ] unsigned char 
  9901 ;; Return value:  Size  Location     Type
  9902 ;;                  1    wreg      unsigned char 
  9903 ;; Registers used:
  9904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9905 ;; Tracked objects:
  9906 ;;		On entry : 0/0
  9907 ;;		On exit  : 0/0
  9908 ;;		Unchanged: 0/0
  9909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9910 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9911 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9912 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9913 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9914 ;;Total ram usage:        7 bytes
  9915 ;; Hardware stack levels used:    1
  9916 ;; Hardware stack levels required when called:   12
  9917 ;; This function calls:
  9918 ;;		_ringbuf_num
  9919 ;; This function is called by:
  9920 ;;		_USB_loop
  9921 ;;		_terminal_loop
  9922 ;;		_UART_ISR
  9923 ;; This function uses a non-reentrant model
  9924 ;;
  9925                           
  9926                           	psect	text37
  9927  013038                     __ptext37:
  9928                           	opt stack 0
  9929  013038                     _ringbuf_pop:
  9930                           	opt stack 17
  9931                           
  9932                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
  9933                           
  9934                           ; BSR set to: 0
  9935                           ;incstack = 0
  9936  013038  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
  9937  01303C  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  9938  013040  EC6B  F093         	call	_ringbuf_num	;wreg free
  9939  013044  0100               	movlb	0	; () banked
  9940  013046  5160               	movf	?_ringbuf_num& (0+255),w,b
  9941  013048  0100               	movlb	0	; () banked
  9942  01304A  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  9943  01304C  B4D8               	btfsc	status,2,c
  9944  01304E  D058               	goto	l9177
  9945                           
  9946                           ; BSR set to: 0
  9947                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
  9948  013050  0100               	movlb	0	; () banked
  9949  013052  EE20 F006          	lfsr	2,6
  9950  013056  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  9951  013058  26D9               	addwf	fsr2l,f,c
  9952  01305A  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  9953  01305C  22DA               	addwfc	fsr2h,f,c
  9954  01305E  CFDE F06A          	movff	postinc2,??_ringbuf_pop
  9955  013062  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
  9956  013066  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
  9957  01306A  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  9958  01306E  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
  9959  013072  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
  9960  013076  0100               	movlb	0	; () banked
  9961  013078  516A               	movf	??_ringbuf_pop& (0+255),w,b
  9962  01307A  0100               	movlb	0	; () banked
  9963  01307C  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  9964  01307E  6ED9               	movwf	fsr2l,c
  9965  013080  0100               	movlb	0	; () banked
  9966  013082  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  9967  013084  0100               	movlb	0	; () banked
  9968  013086  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  9969  013088  6EDA               	movwf	fsr2h,c
  9970  01308A  50DF               	movf	indf2,w,c
  9971  01308C  0100               	movlb	0	; () banked
  9972  01308E  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
  9973                           
  9974                           ; BSR set to: 0
  9975                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
  9976  013090  0100               	movlb	0	; () banked
  9977  013092  EE20 F002          	lfsr	2,2
  9978  013096  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  9979  013098  26D9               	addwf	fsr2l,f,c
  9980  01309A  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  9981  01309C  22DA               	addwfc	fsr2h,f,c
  9982  01309E  0100               	movlb	0	; () banked
  9983  0130A0  EE10 F006          	lfsr	1,6
  9984  0130A4  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  9985  0130A6  26E1               	addwf	fsr1l,f,c
  9986  0130A8  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  9987  0130AA  22E2               	addwfc	fsr1h,f,c
  9988  0130AC  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
  9989  0130B0  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
  9990  0130B4  0E01               	movlw	1
  9991  0130B6  0100               	movlb	0	; () banked
  9992  0130B8  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  9993  0130BA  0E00               	movlw	0
  9994  0130BC  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  9995  0130BE  50DE               	movf	postinc2,w,c
  9996  0130C0  0100               	movlb	0	; () banked
  9997  0130C2  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  9998  0130C4  50DE               	movf	postinc2,w,c
  9999  0130C6  0100               	movlb	0	; () banked
 10000  0130C8  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 10001  0130CA  B0D8               	btfsc	status,0,c
 10002  0130CC  D00B               	goto	l9169
 10003                           
 10004                           ; BSR set to: 0
 10005                           ;My_ringbuf.c: 49: rb->tail++;
 10006  0130CE  0100               	movlb	0	; () banked
 10007  0130D0  EE20 F006          	lfsr	2,6
 10008  0130D4  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 10009  0130D6  26D9               	addwf	fsr2l,f,c
 10010  0130D8  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 10011  0130DA  22DA               	addwfc	fsr2h,f,c
 10012  0130DC  2ADE               	incf	postinc2,f,c
 10013  0130DE  0E00               	movlw	0
 10014  0130E0  22DD               	addwfc	postdec2,f,c
 10015                           
 10016                           ;My_ringbuf.c: 50: } else {
 10017  0130E2  D00B               	goto	l9171
 10018  0130E4                     l9169:
 10019                           
 10020                           ; BSR set to: 0
 10021                           ;My_ringbuf.c: 51: rb->tail = 0;
 10022  0130E4  0100               	movlb	0	; () banked
 10023  0130E6  EE20 F006          	lfsr	2,6
 10024  0130EA  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 10025  0130EC  26D9               	addwf	fsr2l,f,c
 10026  0130EE  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 10027  0130F0  22DA               	addwfc	fsr2h,f,c
 10028  0130F2  0E00               	movlw	0
 10029  0130F4  6EDE               	movwf	postinc2,c
 10030  0130F6  0E00               	movlw	0
 10031  0130F8  6EDD               	movwf	postdec2,c
 10032  0130FA                     l9171:
 10033                           
 10034                           ; BSR set to: 0
 10035                           ;My_ringbuf.c: 52: }
 10036                           ;My_ringbuf.c: 53: return ret;
 10037  0130FA  0100               	movlb	0	; () banked
 10038  0130FC  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 10039                           
 10040                           ; BSR set to: 0
 10041                           ;My_ringbuf.c: 54: } else {
 10042                           
 10043                           ; BSR set to: 0
 10044  0130FE  0012               	return	
 10045  013100                     l9177:
 10046                           
 10047                           ; BSR set to: 0
 10048                           ;My_ringbuf.c: 55: return 0;
 10049  013100  0E00               	movlw	0
 10050                           
 10051                           ; BSR set to: 0
 10052  013102  0012               	return	
 10053  013104                     __end_of_ringbuf_pop:
 10054                           	opt stack 0
 10055                           tblptru	equ	0xFF8
 10056                           tblptrh	equ	0xFF7
 10057                           tblptrl	equ	0xFF6
 10058                           tablat	equ	0xFF5
 10059                           prodh	equ	0xFF4
 10060                           prodl	equ	0xFF3
 10061                           intcon	equ	0xFF2
 10062                           intcon2	equ	0xFF1
 10063                           indf0	equ	0xFEF
 10064                           postinc0	equ	0xFEE
 10065                           fsr0h	equ	0xFEA
 10066                           fsr0l	equ	0xFE9
 10067                           wreg	equ	0xFE8
 10068                           postinc1	equ	0xFE6
 10069                           postdec1	equ	0xFE5
 10070                           fsr1h	equ	0xFE2
 10071                           fsr1l	equ	0xFE1
 10072                           indf2	equ	0xFDF
 10073                           postinc2	equ	0xFDE
 10074                           postdec2	equ	0xFDD
 10075                           fsr2h	equ	0xFDA
 10076                           fsr2l	equ	0xFD9
 10077                           status	equ	0xFD8
 10078                           
 10079 ;; *************** function _ringbuf_num *****************
 10080 ;; Defined at:
 10081 ;;		line 12 in file "../My_library/My_ringbuf.c"
 10082 ;; Parameters:    Size  Location     Type
 10083 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 10084 ;;		 -> terminal_loop@command(8), rx_buf(8), tx_buf(8), usb_tx(8), 
 10085 ;;		 -> usb_rx(8), 
 10086 ;; Auto vars:     Size  Location     Type
 10087 ;;		None
 10088 ;; Return value:  Size  Location     Type
 10089 ;;                  2    0[BANK0 ] unsigned int 
 10090 ;; Registers used:
 10091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10092 ;; Tracked objects:
 10093 ;;		On entry : 0/0
 10094 ;;		On exit  : 0/0
 10095 ;;		Unchanged: 0/0
 10096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10097 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10099 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10100 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10101 ;;Total ram usage:        8 bytes
 10102 ;; Hardware stack levels used:    1
 10103 ;; Hardware stack levels required when called:   11
 10104 ;; This function calls:
 10105 ;;		Nothing
 10106 ;; This function is called by:
 10107 ;;		_USB_loop
 10108 ;;		_ringbuf_put
 10109 ;;		_ringbuf_pop
 10110 ;;		_ringbuf_backspace
 10111 ;;		_terminal_loop
 10112 ;;		_UART_ISR
 10113 ;; This function uses a non-reentrant model
 10114 ;;
 10115                           
 10116                           	psect	text38
 10117  0126D6                     __ptext38:
 10118                           	opt stack 0
 10119  0126D6                     _ringbuf_num:
 10120                           	opt stack 15
 10121                           
 10122                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 10123                           
 10124                           ; BSR set to: 0
 10125                           ;incstack = 0
 10126  0126D6  0100               	movlb	0	; () banked
 10127  0126D8  EE20 F006          	lfsr	2,6
 10128  0126DC  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10129  0126DE  26D9               	addwf	fsr2l,f,c
 10130  0126E0  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10131  0126E2  22DA               	addwfc	fsr2h,f,c
 10132  0126E4  0100               	movlb	0	; () banked
 10133  0126E6  EE10 F004          	lfsr	1,4
 10134  0126EA  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10135  0126EC  26E1               	addwf	fsr1l,f,c
 10136  0126EE  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10137  0126F0  22E2               	addwfc	fsr1h,f,c
 10138  0126F2  50DE               	movf	postinc2,w,c
 10139  0126F4  5CE6               	subwf	postinc1,w,c
 10140  0126F6  50DE               	movf	postinc2,w,c
 10141  0126F8  58E6               	subwfb	postinc1,w,c
 10142  0126FA  A0D8               	btfss	status,0,c
 10143  0126FC  D028               	goto	l8271
 10144                           
 10145                           ; BSR set to: 0
 10146                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 10147  0126FE  0100               	movlb	0	; () banked
 10148  012700  EE20 F004          	lfsr	2,4
 10149  012704  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10150  012706  26D9               	addwf	fsr2l,f,c
 10151  012708  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10152  01270A  22DA               	addwfc	fsr2h,f,c
 10153  01270C  CFDE F062          	movff	postinc2,??_ringbuf_num
 10154  012710  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 10155  012714  0100               	movlb	0	; () banked
 10156  012716  EE20 F006          	lfsr	2,6
 10157  01271A  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10158  01271C  26D9               	addwf	fsr2l,f,c
 10159  01271E  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10160  012720  22DA               	addwfc	fsr2h,f,c
 10161  012722  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 10162  012726  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 10163  01272A  0100               	movlb	0	; () banked
 10164  01272C  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 10165  01272E  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 10166  012730  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 10167  012732  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 10168  012734  0100               	movlb	0	; () banked
 10169  012736  5162               	movf	??_ringbuf_num& (0+255),w,b
 10170  012738  0100               	movlb	0	; () banked
 10171  01273A  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 10172  01273C  0100               	movlb	0	; () banked
 10173  01273E  6F60               	movwf	?_ringbuf_num& (0+255),b
 10174  012740  0100               	movlb	0	; () banked
 10175  012742  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 10176  012744  0100               	movlb	0	; () banked
 10177  012746  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 10178  012748  0100               	movlb	0	; () banked
 10179  01274A  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 10180                           
 10181                           ; BSR set to: 0
 10182                           ;My_ringbuf.c: 15: } else {
 10183                           
 10184                           ; BSR set to: 0
 10185  01274C  0012               	return	
 10186  01274E                     l8271:
 10187                           
 10188                           ; BSR set to: 0
 10189                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 10190  01274E  0100               	movlb	0	; () banked
 10191  012750  EE20 F004          	lfsr	2,4
 10192  012754  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10193  012756  26D9               	addwf	fsr2l,f,c
 10194  012758  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10195  01275A  22DA               	addwfc	fsr2h,f,c
 10196  01275C  CFDE F062          	movff	postinc2,??_ringbuf_num
 10197  012760  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 10198  012764  0100               	movlb	0	; () banked
 10199  012766  EE20 F002          	lfsr	2,2
 10200  01276A  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10201  01276C  26D9               	addwf	fsr2l,f,c
 10202  01276E  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10203  012770  22DA               	addwfc	fsr2h,f,c
 10204  012772  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 10205  012776  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 10206  01277A  0100               	movlb	0	; () banked
 10207  01277C  EE20 F006          	lfsr	2,6
 10208  012780  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10209  012782  26D9               	addwf	fsr2l,f,c
 10210  012784  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10211  012786  22DA               	addwfc	fsr2h,f,c
 10212  012788  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 10213  01278C  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 10214  012790  0100               	movlb	0	; () banked
 10215  012792  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 10216  012794  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 10217  012796  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 10218  012798  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 10219  01279A  0100               	movlb	0	; () banked
 10220  01279C  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 10221  01279E  0100               	movlb	0	; () banked
 10222  0127A0  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 10223  0127A2  0100               	movlb	0	; () banked
 10224  0127A4  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 10225  0127A6  0100               	movlb	0	; () banked
 10226  0127A8  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 10227  0127AA  0100               	movlb	0	; () banked
 10228  0127AC  5162               	movf	??_ringbuf_num& (0+255),w,b
 10229  0127AE  0100               	movlb	0	; () banked
 10230  0127B0  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 10231  0127B2  0100               	movlb	0	; () banked
 10232  0127B4  6F60               	movwf	?_ringbuf_num& (0+255),b
 10233  0127B6  0100               	movlb	0	; () banked
 10234  0127B8  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 10235  0127BA  0100               	movlb	0	; () banked
 10236  0127BC  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 10237  0127BE  0100               	movlb	0	; () banked
 10238  0127C0  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 10239                           
 10240                           ; BSR set to: 0
 10241  0127C2  0012               	return	
 10242  0127C4                     __end_of_ringbuf_num:
 10243                           	opt stack 0
 10244                           tblptru	equ	0xFF8
 10245                           tblptrh	equ	0xFF7
 10246                           tblptrl	equ	0xFF6
 10247                           tablat	equ	0xFF5
 10248                           prodh	equ	0xFF4
 10249                           prodl	equ	0xFF3
 10250                           intcon	equ	0xFF2
 10251                           intcon2	equ	0xFF1
 10252                           indf0	equ	0xFEF
 10253                           postinc0	equ	0xFEE
 10254                           fsr0h	equ	0xFEA
 10255                           fsr0l	equ	0xFE9
 10256                           wreg	equ	0xFE8
 10257                           postinc1	equ	0xFE6
 10258                           postdec1	equ	0xFE5
 10259                           fsr1h	equ	0xFE2
 10260                           fsr1l	equ	0xFE1
 10261                           indf2	equ	0xFDF
 10262                           postinc2	equ	0xFDE
 10263                           postdec2	equ	0xFDD
 10264                           fsr2h	equ	0xFDA
 10265                           fsr2l	equ	0xFD9
 10266                           status	equ	0xFD8
 10267                           
 10268 ;; *************** function _put_string_usb *****************
 10269 ;; Defined at:
 10270 ;;		line 21 in file "../My_library/usb_cdc/My_usb_cdc.c"
 10271 ;; Parameters:    Size  Location     Type
 10272 ;;  s               2   12[BANK0 ] PTR unsigned char 
 10273 ;;		 -> USB_loop@data(1), 
 10274 ;;  len             2   14[BANK0 ] int 
 10275 ;; Auto vars:     Size  Location     Type
 10276 ;;		None
 10277 ;; Return value:  Size  Location     Type
 10278 ;;                  2   12[BANK0 ] int 
 10279 ;; Registers used:
 10280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10281 ;; Tracked objects:
 10282 ;;		On entry : 0/0
 10283 ;;		On exit  : 0/0
 10284 ;;		Unchanged: 0/0
 10285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10286 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10289 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10290 ;;Total ram usage:        4 bytes
 10291 ;; Hardware stack levels used:    1
 10292 ;; Hardware stack levels required when called:   13
 10293 ;; This function calls:
 10294 ;;		_CDCTxService
 10295 ;;		_is_usb_available
 10296 ;;		_putUSBUSART
 10297 ;; This function is called by:
 10298 ;;		_USB_loop
 10299 ;; This function uses a non-reentrant model
 10300 ;;
 10301                           
 10302                           	psect	text39
 10303  0144F4                     __ptext39:
 10304                           	opt stack 0
 10305  0144F4                     _put_string_usb:
 10306                           	opt stack 16
 10307                           
 10308                           ;My_usb_cdc.c: 22: if (!is_usb_available()) {
 10309                           
 10310                           ; BSR set to: 0
 10311                           ;incstack = 0
 10312  0144F4  EC4A  F0A3         	call	_is_usb_available	;wreg free
 10313  0144F8  0900               	iorlw	0
 10314  0144FA  B4D8               	btfsc	status,2,c
 10315  0144FC  0012               	return	
 10316  0144FE  D002               	goto	l9137
 10317  014500                     l9135:
 10318  014500  ECB0  F08E         	call	_CDCTxService	;wreg free
 10319  014504                     l9137:
 10320  014504  5026               	movf	_cdc_trf_state,w,c
 10321  014506  A4D8               	btfss	status,2,c
 10322  014508  D7FB               	goto	l9135
 10323                           
 10324                           ;My_usb_cdc.c: 27: putUSBUSART(s, len);
 10325  01450A  C06C  F060         	movff	put_string_usb@s,putUSBUSART@data
 10326  01450E  C06D  F061         	movff	put_string_usb@s+1,putUSBUSART@data+1
 10327  014512  C06E  F062         	movff	put_string_usb@len,putUSBUSART@length
 10328  014516  EC0B  F0A3         	call	_putUSBUSART	;wreg free
 10329                           
 10330                           ;My_usb_cdc.c: 28: CDCTxService();
 10331  01451A  ECB0  F08E         	call	_CDCTxService	;wreg free
 10332  01451E  0012               	return	
 10333  014520                     __end_of_put_string_usb:
 10334                           	opt stack 0
 10335                           tblptru	equ	0xFF8
 10336                           tblptrh	equ	0xFF7
 10337                           tblptrl	equ	0xFF6
 10338                           tablat	equ	0xFF5
 10339                           prodh	equ	0xFF4
 10340                           prodl	equ	0xFF3
 10341                           intcon	equ	0xFF2
 10342                           intcon2	equ	0xFF1
 10343                           indf0	equ	0xFEF
 10344                           postinc0	equ	0xFEE
 10345                           fsr0h	equ	0xFEA
 10346                           fsr0l	equ	0xFE9
 10347                           wreg	equ	0xFE8
 10348                           postinc1	equ	0xFE6
 10349                           postdec1	equ	0xFE5
 10350                           fsr1h	equ	0xFE2
 10351                           fsr1l	equ	0xFE1
 10352                           indf2	equ	0xFDF
 10353                           postinc2	equ	0xFDE
 10354                           postdec2	equ	0xFDD
 10355                           fsr2h	equ	0xFDA
 10356                           fsr2l	equ	0xFD9
 10357                           status	equ	0xFD8
 10358                           
 10359 ;; *************** function _putUSBUSART *****************
 10360 ;; Defined at:
 10361 ;;		line 613 in file "../My_library/usb_cdc/usb/usb_device_cdc.c"
 10362 ;; Parameters:    Size  Location     Type
 10363 ;;  data            2    0[BANK0 ] PTR unsigned char 
 10364 ;;		 -> USB_loop@data(1), 
 10365 ;;  length          1    2[BANK0 ] unsigned char 
 10366 ;; Auto vars:     Size  Location     Type
 10367 ;;		None
 10368 ;; Return value:  Size  Location     Type
 10369 ;;		None               void
 10370 ;; Registers used:
 10371 ;;		wreg, status,2, status,0
 10372 ;; Tracked objects:
 10373 ;;		On entry : 0/0
 10374 ;;		On exit  : 0/0
 10375 ;;		Unchanged: 0/0
 10376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10377 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10380 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10381 ;;Total ram usage:        3 bytes
 10382 ;; Hardware stack levels used:    1
 10383 ;; Hardware stack levels required when called:   11
 10384 ;; This function calls:
 10385 ;;		Nothing
 10386 ;; This function is called by:
 10387 ;;		_put_string_usb
 10388 ;; This function uses a non-reentrant model
 10389 ;;
 10390                           
 10391                           	psect	text40
 10392  014616                     __ptext40:
 10393                           	opt stack 0
 10394  014616                     _putUSBUSART:
 10395                           	opt stack 17
 10396                           
 10397                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 10398                           
 10399                           ;incstack = 0
 10400  014616  98A0               	bcf	4000,4,c	;volatile
 10401                           
 10402                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 10403  014618  5026               	movf	_cdc_trf_state,w,c
 10404  01461A  A4D8               	btfss	status,2,c
 10405  01461C  D00B               	goto	l8945
 10406                           
 10407                           ;usb_device_cdc.c: 640: {
 10408                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 10409  01461E  C060  F0E1         	movff	putUSBUSART@data,_pCDCSrc
 10410  014622  C061  F0E2         	movff	putUSBUSART@data+1,_pCDCSrc+1
 10411  014626  C062  F0EF         	movff	putUSBUSART@length,_cdc_tx_len
 10412  01462A  0E01               	movlw	1
 10413  01462C  0100               	movlb	0	; () banked
 10414  01462E  6FED               	movwf	_cdc_mem_type& (0+255),b
 10415                           
 10416                           ; BSR set to: 0
 10417  014630  0E01               	movlw	1
 10418  014632  6E26               	movwf	_cdc_trf_state,c
 10419  014634                     l8945:
 10420                           
 10421                           ;usb_device_cdc.c: 642: }
 10422                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 10423  014634  88A0               	bsf	4000,4,c	;volatile
 10424  014636  0012               	return		;funcret
 10425  014638                     __end_of_putUSBUSART:
 10426                           	opt stack 0
 10427                           tblptru	equ	0xFF8
 10428                           tblptrh	equ	0xFF7
 10429                           tblptrl	equ	0xFF6
 10430                           tablat	equ	0xFF5
 10431                           prodh	equ	0xFF4
 10432                           prodl	equ	0xFF3
 10433                           intcon	equ	0xFF2
 10434                           intcon2	equ	0xFF1
 10435                           indf0	equ	0xFEF
 10436                           postinc0	equ	0xFEE
 10437                           fsr0h	equ	0xFEA
 10438                           fsr0l	equ	0xFE9
 10439                           wreg	equ	0xFE8
 10440                           postinc1	equ	0xFE6
 10441                           postdec1	equ	0xFE5
 10442                           fsr1h	equ	0xFE2
 10443                           fsr1l	equ	0xFE1
 10444                           indf2	equ	0xFDF
 10445                           postinc2	equ	0xFDE
 10446                           postdec2	equ	0xFDD
 10447                           fsr2h	equ	0xFDA
 10448                           fsr2l	equ	0xFD9
 10449                           status	equ	0xFD8
 10450                           
 10451 ;; *************** function _get_string_usb *****************
 10452 ;; Defined at:
 10453 ;;		line 32 in file "../My_library/usb_cdc/My_usb_cdc.c"
 10454 ;; Parameters:    Size  Location     Type
 10455 ;;  s               2   13[BANK0 ] PTR unsigned char 
 10456 ;;		 -> USB_loop@data(1), 
 10457 ;;  len             2   15[BANK0 ] int 
 10458 ;; Auto vars:     Size  Location     Type
 10459 ;;  rx_len          2   18[BANK0 ] int 
 10460 ;; Return value:  Size  Location     Type
 10461 ;;                  2   13[BANK0 ] int 
 10462 ;; Registers used:
 10463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10464 ;; Tracked objects:
 10465 ;;		On entry : 0/0
 10466 ;;		On exit  : 0/0
 10467 ;;		Unchanged: 0/0
 10468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10469 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10470 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10471 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10472 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10473 ;;Total ram usage:        7 bytes
 10474 ;; Hardware stack levels used:    1
 10475 ;; Hardware stack levels required when called:   13
 10476 ;; This function calls:
 10477 ;;		_CDCTxService
 10478 ;;		_getsUSBUSART
 10479 ;;		_is_usb_available
 10480 ;; This function is called by:
 10481 ;;		_USB_loop
 10482 ;; This function uses a non-reentrant model
 10483 ;;
 10484                           
 10485                           	psect	text41
 10486  01420E                     __ptext41:
 10487                           	opt stack 0
 10488  01420E                     _get_string_usb:
 10489                           	opt stack 16
 10490                           
 10491                           ;My_usb_cdc.c: 33: int rx_len;
 10492                           ;My_usb_cdc.c: 34: if (!is_usb_available()) {
 10493                           
 10494                           ;incstack = 0
 10495  01420E  EC4A  F0A3         	call	_is_usb_available	;wreg free
 10496  014212  0900               	iorlw	0
 10497  014214  A4D8               	btfss	status,2,c
 10498  014216  D008               	goto	l9153
 10499                           
 10500                           ;My_usb_cdc.c: 36: return 0;
 10501  014218  0E00               	movlw	0
 10502  01421A  0100               	movlb	0	; () banked
 10503  01421C  6F6E               	movwf	(?_get_string_usb+1)& (0+255),b
 10504  01421E  0E00               	movlw	0
 10505  014220  6F6D               	movwf	?_get_string_usb& (0+255),b
 10506                           
 10507                           ; BSR set to: 0
 10508  014222  0012               	return	
 10509  014224                     l9151:
 10510  014224  ECB0  F08E         	call	_CDCTxService	;wreg free
 10511  014228                     l9153:
 10512  014228  5026               	movf	_cdc_trf_state,w,c
 10513  01422A  A4D8               	btfss	status,2,c
 10514  01422C  D7FB               	goto	l9151
 10515                           
 10516                           ;My_usb_cdc.c: 39: rx_len = getsUSBUSART(s, len);
 10517  01422E  C06D  F067         	movff	get_string_usb@s,getsUSBUSART@buffer
 10518  014232  C06E  F068         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
 10519  014236  C06F  F069         	movff	get_string_usb@len,getsUSBUSART@len
 10520  01423A  ECE2  F093         	call	_getsUSBUSART	;wreg free
 10521  01423E  0100               	movlb	0	; () banked
 10522  014240  6F71               	movwf	??_get_string_usb& (0+255),b
 10523  014242  0100               	movlb	0	; () banked
 10524  014244  5171               	movf	??_get_string_usb& (0+255),w,b
 10525  014246  0100               	movlb	0	; () banked
 10526  014248  6F72               	movwf	get_string_usb@rx_len& (0+255),b
 10527  01424A  6B73               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 10528                           
 10529                           ;My_usb_cdc.c: 40: CDCTxService();
 10530  01424C  ECB0  F08E         	call	_CDCTxService	;wreg free
 10531                           
 10532                           ;My_usb_cdc.c: 41: return rx_len;
 10533  014250  C072  F06D         	movff	get_string_usb@rx_len,?_get_string_usb
 10534  014254  C073  F06E         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 10535  014258  0012               	return	
 10536  01425A                     __end_of_get_string_usb:
 10537                           	opt stack 0
 10538                           tblptru	equ	0xFF8
 10539                           tblptrh	equ	0xFF7
 10540                           tblptrl	equ	0xFF6
 10541                           tablat	equ	0xFF5
 10542                           prodh	equ	0xFF4
 10543                           prodl	equ	0xFF3
 10544                           intcon	equ	0xFF2
 10545                           intcon2	equ	0xFF1
 10546                           indf0	equ	0xFEF
 10547                           postinc0	equ	0xFEE
 10548                           fsr0h	equ	0xFEA
 10549                           fsr0l	equ	0xFE9
 10550                           wreg	equ	0xFE8
 10551                           postinc1	equ	0xFE6
 10552                           postdec1	equ	0xFE5
 10553                           fsr1h	equ	0xFE2
 10554                           fsr1l	equ	0xFE1
 10555                           indf2	equ	0xFDF
 10556                           postinc2	equ	0xFDE
 10557                           postdec2	equ	0xFDD
 10558                           fsr2h	equ	0xFDA
 10559                           fsr2l	equ	0xFD9
 10560                           status	equ	0xFD8
 10561                           
 10562 ;; *************** function _is_usb_available *****************
 10563 ;; Defined at:
 10564 ;;		line 17 in file "../My_library/usb_cdc/My_usb_cdc.c"
 10565 ;; Parameters:    Size  Location     Type
 10566 ;;		None
 10567 ;; Auto vars:     Size  Location     Type
 10568 ;;		None
 10569 ;; Return value:  Size  Location     Type
 10570 ;;                  1    wreg      unsigned char 
 10571 ;; Registers used:
 10572 ;;		wreg, status,2, status,0
 10573 ;; Tracked objects:
 10574 ;;		On entry : 0/0
 10575 ;;		On exit  : 0/0
 10576 ;;		Unchanged: 0/0
 10577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10579 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10581 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10582 ;;Total ram usage:        1 bytes
 10583 ;; Hardware stack levels used:    1
 10584 ;; Hardware stack levels required when called:   11
 10585 ;; This function calls:
 10586 ;;		Nothing
 10587 ;; This function is called by:
 10588 ;;		_put_string_usb
 10589 ;;		_get_string_usb
 10590 ;; This function uses a non-reentrant model
 10591 ;;
 10592                           
 10593                           	psect	text42
 10594  014694                     __ptext42:
 10595                           	opt stack 0
 10596  014694                     _is_usb_available:
 10597                           	opt stack 17
 10598                           
 10599                           ;My_usb_cdc.c: 18: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 10600                           
 10601                           ;incstack = 0
 10602  014694  0E00               	movlw	0
 10603  014696  0100               	movlb	0	; () banked
 10604  014698  6F60               	movwf	_is_usb_available$2052& (0+255),b
 10605                           
 10606                           ; BSR set to: 0
 10607  01469A  0E1F               	movlw	31
 10608  01469C  6422               	cpfsgt	_USBDeviceState,c	;volatile
 10609  01469E  D005               	goto	l551
 10610                           
 10611                           ; BSR set to: 0
 10612  0146A0  B265               	btfsc	3941,1,c	;volatile
 10613  0146A2  D003               	goto	l551
 10614                           
 10615                           ; BSR set to: 0
 10616  0146A4  0E01               	movlw	1
 10617  0146A6  0100               	movlb	0	; () banked
 10618  0146A8  6F60               	movwf	_is_usb_available$2052& (0+255),b
 10619  0146AA                     l551:
 10620                           
 10621                           ; BSR set to: 0
 10622  0146AA  0100               	movlb	0	; () banked
 10623  0146AC  5160               	movf	_is_usb_available$2052& (0+255),w,b
 10624  0146AE  0012               	return	
 10625  0146B0                     __end_of_is_usb_available:
 10626                           	opt stack 0
 10627                           tblptru	equ	0xFF8
 10628                           tblptrh	equ	0xFF7
 10629                           tblptrl	equ	0xFF6
 10630                           tablat	equ	0xFF5
 10631                           prodh	equ	0xFF4
 10632                           prodl	equ	0xFF3
 10633                           intcon	equ	0xFF2
 10634                           intcon2	equ	0xFF1
 10635                           indf0	equ	0xFEF
 10636                           postinc0	equ	0xFEE
 10637                           fsr0h	equ	0xFEA
 10638                           fsr0l	equ	0xFE9
 10639                           wreg	equ	0xFE8
 10640                           postinc1	equ	0xFE6
 10641                           postdec1	equ	0xFE5
 10642                           fsr1h	equ	0xFE2
 10643                           fsr1l	equ	0xFE1
 10644                           indf2	equ	0xFDF
 10645                           postinc2	equ	0xFDE
 10646                           postdec2	equ	0xFDD
 10647                           fsr2h	equ	0xFDA
 10648                           fsr2l	equ	0xFD9
 10649                           status	equ	0xFD8
 10650                           
 10651 ;; *************** function _getsUSBUSART *****************
 10652 ;; Defined at:
 10653 ;;		line 542 in file "../My_library/usb_cdc/usb/usb_device_cdc.c"
 10654 ;; Parameters:    Size  Location     Type
 10655 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 10656 ;;		 -> USB_loop@data(1), 
 10657 ;;  len             1    9[BANK0 ] unsigned char 
 10658 ;; Auto vars:     Size  Location     Type
 10659 ;;		None
 10660 ;; Return value:  Size  Location     Type
 10661 ;;                  1    wreg      unsigned char 
 10662 ;; Registers used:
 10663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10664 ;; Tracked objects:
 10665 ;;		On entry : 0/0
 10666 ;;		On exit  : 0/0
 10667 ;;		Unchanged: 0/0
 10668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10669 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10670 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10671 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10672 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10673 ;;Total ram usage:        6 bytes
 10674 ;; Hardware stack levels used:    1
 10675 ;; Hardware stack levels required when called:   12
 10676 ;; This function calls:
 10677 ;;		_USBTransferOnePacket
 10678 ;; This function is called by:
 10679 ;;		_get_string_usb
 10680 ;; This function uses a non-reentrant model
 10681 ;;
 10682                           
 10683                           	psect	text43
 10684  0127C4                     __ptext43:
 10685                           	opt stack 0
 10686  0127C4                     _getsUSBUSART:
 10687                           	opt stack 16
 10688                           
 10689                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 10690                           
 10691                           ; BSR set to: 0
 10692                           ;incstack = 0
 10693  0127C4  0E00               	movlw	0
 10694  0127C6  0100               	movlb	0	; () banked
 10695  0127C8  6FEE               	movwf	_cdc_rx_len& (0+255),b
 10696                           
 10697                           ; BSR set to: 0
 10698                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 10699  0127CA  0100               	movlb	0	; () banked
 10700  0127CC  51E6               	movf	_CDCDataOutHandle& (0+255),w,b
 10701  0127CE  0100               	movlb	0	; () banked
 10702  0127D0  11E7               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 10703  0127D2  B4D8               	btfsc	status,2,c
 10704  0127D4  D013               	goto	l8911
 10705                           
 10706                           ; BSR set to: 0
 10707  0127D6  C0E6  FFD9         	movff	_CDCDataOutHandle,fsr2l
 10708  0127DA  C0E7  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 10709  0127DE  0100               	movlb	0	; () banked
 10710  0127E0  AEDF               	btfss	indf2,7,c
 10711  0127E2  D004               	goto	u9090
 10712  0127E4  0100               	movlb	0	; () banked
 10713  0127E6  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 10714  0127E8  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 10715  0127EA  D002               	goto	u9098
 10716  0127EC                     u9090:
 10717  0127EC  0100               	movlb	0	; () banked
 10718  0127EE  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 10719  0127F0                     u9098:
 10720  0127F0  0100               	movlb	0	; () banked
 10721  0127F2  516A               	movf	??_getsUSBUSART& (0+255),w,b
 10722  0127F4  0100               	movlb	0	; () banked
 10723  0127F6  6F6B               	movwf	_getsUSBUSART$1886& (0+255),b
 10724  0127F8  6B6C               	clrf	(_getsUSBUSART$1886+1)& (0+255),b
 10725  0127FA  D005               	goto	l8913
 10726  0127FC                     l8911:
 10727                           
 10728                           ; BSR set to: 0
 10729  0127FC  0E00               	movlw	0
 10730  0127FE  0100               	movlb	0	; () banked
 10731  012800  6F6C               	movwf	(_getsUSBUSART$1886+1)& (0+255),b
 10732  012802  0E00               	movlw	0
 10733  012804  6F6B               	movwf	_getsUSBUSART$1886& (0+255),b
 10734  012806                     l8913:
 10735                           
 10736                           ; BSR set to: 0
 10737  012806  0100               	movlb	0	; () banked
 10738  012808  516B               	movf	_getsUSBUSART$1886& (0+255),w,b
 10739  01280A  0100               	movlb	0	; () banked
 10740  01280C  116C               	iorwf	(_getsUSBUSART$1886+1)& (0+255),w,b
 10741  01280E  A4D8               	btfss	status,2,c
 10742  012810  D04B               	goto	l8929
 10743                           
 10744                           ; BSR set to: 0
 10745                           ;usb_device_cdc.c: 547: {
 10746                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 10747  012812  0100               	movlb	0	; () banked
 10748  012814  EE20 F001          	lfsr	2,1
 10749  012818  51E6               	movf	_CDCDataOutHandle& (0+255),w,b
 10750  01281A  26D9               	addwf	fsr2l,f,c
 10751  01281C  51E7               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 10752  01281E  22DA               	addwfc	fsr2h,f,c
 10753  012820  0100               	movlb	0	; () banked
 10754  012822  5169               	movf	getsUSBUSART@len& (0+255),w,b
 10755  012824  5CDE               	subwf	postinc2,w,c
 10756  012826  B0D8               	btfsc	status,0,c
 10757  012828  D00A               	goto	l8919
 10758                           
 10759                           ; BSR set to: 0
 10760                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 10761  01282A  0100               	movlb	0	; () banked
 10762  01282C  EE20 F001          	lfsr	2,1
 10763  012830  51E6               	movf	_CDCDataOutHandle& (0+255),w,b
 10764  012832  26D9               	addwf	fsr2l,f,c
 10765  012834  51E7               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 10766  012836  22DA               	addwfc	fsr2h,f,c
 10767  012838  50DF               	movf	indf2,w,c
 10768  01283A  0100               	movlb	0	; () banked
 10769  01283C  6F69               	movwf	getsUSBUSART@len& (0+255),b
 10770  01283E                     l8919:
 10771                           
 10772                           ; BSR set to: 0
 10773                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 10774  01283E  0E00               	movlw	0
 10775  012840  0100               	movlb	0	; () banked
 10776  012842  6FEE               	movwf	_cdc_rx_len& (0+255),b
 10777  012844  D018               	goto	l8925
 10778  012846                     l8921:
 10779                           
 10780                           ; BSR set to: 0
 10781                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 10782  012846  0100               	movlb	0	; () banked
 10783  012848  51EE               	movf	_cdc_rx_len& (0+255),w,b
 10784  01284A  0D01               	mullw	1
 10785  01284C  0E00               	movlw	low _cdc_data_rx
 10786  01284E  24F3               	addwf	prodl,w,c
 10787  012850  6ED9               	movwf	fsr2l,c
 10788  012852  0E02               	movlw	high _cdc_data_rx
 10789  012854  20F4               	addwfc	prodh,w,c
 10790  012856  6EDA               	movwf	fsr2h,c
 10791  012858  0100               	movlb	0	; () banked
 10792  01285A  51EE               	movf	_cdc_rx_len& (0+255),w,b
 10793  01285C  0D01               	mullw	1
 10794  01285E  50F3               	movf	prodl,w,c
 10795  012860  0100               	movlb	0	; () banked
 10796  012862  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 10797  012864  6EE1               	movwf	fsr1l,c
 10798  012866  50F4               	movf	prodh,w,c
 10799  012868  0100               	movlb	0	; () banked
 10800  01286A  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 10801  01286C  6EE2               	movwf	fsr1h,c
 10802  01286E  CFDF FFE7          	movff	indf2,indf1
 10803                           
 10804                           ; BSR set to: 0
 10805  012872  0100               	movlb	0	; () banked
 10806  012874  2BEE               	incf	_cdc_rx_len& (0+255),f,b
 10807  012876                     l8925:
 10808                           
 10809                           ; BSR set to: 0
 10810  012876  0100               	movlb	0	; () banked
 10811  012878  5169               	movf	getsUSBUSART@len& (0+255),w,b
 10812  01287A  0100               	movlb	0	; () banked
 10813  01287C  5DEE               	subwf	_cdc_rx_len& (0+255),w,b
 10814  01287E  A0D8               	btfss	status,0,c
 10815  012880  D7E2               	goto	l8921
 10816                           
 10817                           ; BSR set to: 0
 10818                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 10819                           
 10820                           ; BSR set to: 0
 10821  012882  0E00               	movlw	0
 10822  012884  0100               	movlb	0	; () banked
 10823  012886  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 10824  012888  0E00               	movlw	low _cdc_data_rx
 10825  01288A  0100               	movlb	0	; () banked
 10826  01288C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 10827  01288E  0E02               	movlw	high _cdc_data_rx
 10828  012890  0100               	movlb	0	; () banked
 10829  012892  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 10830  012894  0E40               	movlw	64
 10831  012896  0100               	movlb	0	; () banked
 10832  012898  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 10833  01289A  0E02               	movlw	2
 10834  01289C  ECA1  F095         	call	_USBTransferOnePacket
 10835  0128A0  C060  F0E6         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 10836  0128A4  C061  F0E7         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 10837  0128A8                     l8929:
 10838                           
 10839                           ;usb_device_cdc.c: 567: }
 10840                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 10841  0128A8  0100               	movlb	0	; () banked
 10842  0128AA  51EE               	movf	_cdc_rx_len& (0+255),w,b
 10843  0128AC  0012               	return	
 10844  0128AE                     __end_of_getsUSBUSART:
 10845                           	opt stack 0
 10846                           tblptru	equ	0xFF8
 10847                           tblptrh	equ	0xFF7
 10848                           tblptrl	equ	0xFF6
 10849                           tablat	equ	0xFF5
 10850                           prodh	equ	0xFF4
 10851                           prodl	equ	0xFF3
 10852                           intcon	equ	0xFF2
 10853                           intcon2	equ	0xFF1
 10854                           indf0	equ	0xFEF
 10855                           postinc0	equ	0xFEE
 10856                           fsr0h	equ	0xFEA
 10857                           fsr0l	equ	0xFE9
 10858                           wreg	equ	0xFE8
 10859                           indf1	equ	0xFE7
 10860                           postinc1	equ	0xFE6
 10861                           postdec1	equ	0xFE5
 10862                           fsr1h	equ	0xFE2
 10863                           fsr1l	equ	0xFE1
 10864                           indf2	equ	0xFDF
 10865                           postinc2	equ	0xFDE
 10866                           postdec2	equ	0xFDD
 10867                           fsr2h	equ	0xFDA
 10868                           fsr2l	equ	0xFD9
 10869                           status	equ	0xFD8
 10870                           
 10871 ;; *************** function _CDCTxService *****************
 10872 ;; Defined at:
 10873 ;;		line 893 in file "../My_library/usb_cdc/usb/usb_device_cdc.c"
 10874 ;; Parameters:    Size  Location     Type
 10875 ;;		None
 10876 ;; Auto vars:     Size  Location     Type
 10877 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 10878 ;;  i               1   10[BANK0 ] unsigned char 
 10879 ;; Return value:  Size  Location     Type
 10880 ;;		None               void
 10881 ;; Registers used:
 10882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10883 ;; Tracked objects:
 10884 ;;		On entry : 0/0
 10885 ;;		On exit  : 0/0
 10886 ;;		Unchanged: 0/0
 10887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10889 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10890 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10891 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10892 ;;Total ram usage:        5 bytes
 10893 ;; Hardware stack levels used:    1
 10894 ;; Hardware stack levels required when called:   12
 10895 ;; This function calls:
 10896 ;;		_USBTransferOnePacket
 10897 ;; This function is called by:
 10898 ;;		_put_string_usb
 10899 ;;		_get_string_usb
 10900 ;; This function uses a non-reentrant model
 10901 ;;
 10902                           
 10903                           	psect	text44
 10904  011D60                     __ptext44:
 10905                           	opt stack 0
 10906  011D60                     _CDCTxService:
 10907                           	opt stack 16
 10908                           
 10909                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 10910                           ;usb_device_cdc.c: 896: uint8_t i;
 10911                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 10912                           
 10913                           ; BSR set to: 0
 10914                           ;incstack = 0
 10915  011D60  98A0               	bcf	4000,4,c	;volatile
 10916                           
 10917                           ;usb_device_cdc.c: 900: {};
 10918                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 10919  011D62  0100               	movlb	0	; () banked
 10920  011D64  51E4               	movf	_CDCDataInHandle& (0+255),w,b
 10921  011D66  0100               	movlb	0	; () banked
 10922  011D68  11E5               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 10923  011D6A  B4D8               	btfsc	status,2,c
 10924  011D6C  D013               	goto	l8953
 10925                           
 10926                           ; BSR set to: 0
 10927  011D6E  C0E4  FFD9         	movff	_CDCDataInHandle,fsr2l
 10928  011D72  C0E5  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 10929  011D76  0100               	movlb	0	; () banked
 10930  011D78  AEDF               	btfss	indf2,7,c
 10931  011D7A  D004               	goto	u9150
 10932  011D7C  0100               	movlb	0	; () banked
 10933  011D7E  6B67               	clrf	??_CDCTxService& (0+255),b
 10934  011D80  2B67               	incf	??_CDCTxService& (0+255),f,b
 10935  011D82  D002               	goto	u9158
 10936  011D84                     u9150:
 10937  011D84  0100               	movlb	0	; () banked
 10938  011D86  6B67               	clrf	??_CDCTxService& (0+255),b
 10939  011D88                     u9158:
 10940  011D88  0100               	movlb	0	; () banked
 10941  011D8A  5167               	movf	??_CDCTxService& (0+255),w,b
 10942  011D8C  0100               	movlb	0	; () banked
 10943  011D8E  6F68               	movwf	_CDCTxService$1934& (0+255),b
 10944  011D90  6B69               	clrf	(_CDCTxService$1934+1)& (0+255),b
 10945  011D92  D005               	goto	l8955
 10946  011D94                     l8953:
 10947                           
 10948                           ; BSR set to: 0
 10949  011D94  0E00               	movlw	0
 10950  011D96  0100               	movlb	0	; () banked
 10951  011D98  6F69               	movwf	(_CDCTxService$1934+1)& (0+255),b
 10952  011D9A  0E00               	movlw	0
 10953  011D9C  6F68               	movwf	_CDCTxService$1934& (0+255),b
 10954  011D9E                     l8955:
 10955                           
 10956                           ; BSR set to: 0
 10957  011D9E  0100               	movlb	0	; () banked
 10958  011DA0  5168               	movf	_CDCTxService$1934& (0+255),w,b
 10959  011DA2  0100               	movlb	0	; () banked
 10960  011DA4  1169               	iorwf	(_CDCTxService$1934+1)& (0+255),w,b
 10961  011DA6  B4D8               	btfsc	status,2,c
 10962  011DA8  D002               	goto	l8959
 10963                           
 10964                           ; BSR set to: 0
 10965                           ;usb_device_cdc.c: 903: {
 10966                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 10967  011DAA  88A0               	bsf	4000,4,c	;volatile
 10968                           
 10969                           ;usb_device_cdc.c: 905: return;
 10970  011DAC  0012               	return	
 10971  011DAE                     l8959:
 10972                           
 10973                           ; BSR set to: 0
 10974                           ;usb_device_cdc.c: 906: }
 10975                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 10976  011DAE  0E03               	movlw	3
 10977  011DB0  1826               	xorwf	_cdc_trf_state,w,c
 10978  011DB2  A4D8               	btfss	status,2,c
 10979  011DB4  D002               	goto	l490
 10980                           
 10981                           ; BSR set to: 0
 10982                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 10983  011DB6  0E00               	movlw	0
 10984  011DB8  6E26               	movwf	_cdc_trf_state,c
 10985  011DBA                     l490:
 10986                           
 10987                           ; BSR set to: 0
 10988                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 10989  011DBA  5026               	movf	_cdc_trf_state,w,c
 10990  011DBC  A4D8               	btfss	status,2,c
 10991  011DBE  D002               	goto	l8965
 10992                           
 10993                           ; BSR set to: 0
 10994                           ;usb_device_cdc.c: 920: {
 10995                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 10996  011DC0  88A0               	bsf	4000,4,c	;volatile
 10997                           
 10998                           ;usb_device_cdc.c: 922: return;
 10999  011DC2  0012               	return	
 11000  011DC4                     l8965:
 11001                           
 11002                           ; BSR set to: 0
 11003                           ;usb_device_cdc.c: 923: }
 11004                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 11005  011DC4  0E02               	movlw	2
 11006  011DC6  1826               	xorwf	_cdc_trf_state,w,c
 11007  011DC8  A4D8               	btfss	status,2,c
 11008  011DCA  D016               	goto	l8971
 11009                           
 11010                           ; BSR set to: 0
 11011                           ;usb_device_cdc.c: 929: {
 11012                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 11013  011DCC  0E01               	movlw	1
 11014  011DCE  0100               	movlb	0	; () banked
 11015  011DD0  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 11016  011DD2  0E00               	movlw	0
 11017  011DD4  0100               	movlb	0	; () banked
 11018  011DD6  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 11019  011DD8  0E00               	movlw	0
 11020  011DDA  0100               	movlb	0	; () banked
 11021  011DDC  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11022  011DDE  0E00               	movlw	0
 11023  011DE0  0100               	movlb	0	; () banked
 11024  011DE2  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 11025  011DE4  0E02               	movlw	2
 11026  011DE6  ECA1  F095         	call	_USBTransferOnePacket
 11027  011DEA  C060  F0E4         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 11028  011DEE  C061  F0E5         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 11029                           
 11030                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 11031  011DF2  0E03               	movlw	3
 11032  011DF4  6E26               	movwf	_cdc_trf_state,c
 11033                           
 11034                           ;usb_device_cdc.c: 933: }
 11035  011DF6  D06F               	goto	l9015
 11036  011DF8                     l8971:
 11037                           
 11038                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 11039  011DF8  0426               	decf	_cdc_trf_state,w,c
 11040  011DFA  A4D8               	btfss	status,2,c
 11041  011DFC  D06C               	goto	l9015
 11042                           
 11043                           ;usb_device_cdc.c: 935: {
 11044                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 11045  011DFE  0E40               	movlw	64
 11046  011E00  0100               	movlb	0	; () banked
 11047  011E02  65EF               	cpfsgt	_cdc_tx_len& (0+255),b
 11048  011E04  D004               	goto	l495
 11049                           
 11050                           ; BSR set to: 0
 11051                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 11052  011E06  0E40               	movlw	64
 11053  011E08  0100               	movlb	0	; () banked
 11054  011E0A  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 11055  011E0C  D002               	goto	l8977
 11056  011E0E                     l495:
 11057                           
 11058                           ; BSR set to: 0
 11059                           ;usb_device_cdc.c: 941: else
 11060                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 11061  011E0E  C0EF  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 11062  011E12                     l8977:
 11063                           
 11064                           ; BSR set to: 0
 11065                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 11066  011E12  0100               	movlb	0	; () banked
 11067  011E14  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 11068  011E16  0800               	sublw	0
 11069  011E18  0100               	movlb	0	; () banked
 11070  011E1A  25EF               	addwf	_cdc_tx_len& (0+255),w,b
 11071  011E1C  0100               	movlb	0	; () banked
 11072  011E1E  6FEF               	movwf	_cdc_tx_len& (0+255),b
 11073                           
 11074                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 11075  011E20  0E40               	movlw	low _cdc_data_tx
 11076  011E22  0100               	movlb	0	; () banked
 11077  011E24  6FDE               	movwf	_pCDCDst& (0+255),b
 11078  011E26  0E02               	movlw	high _cdc_data_tx
 11079  011E28  0100               	movlb	0	; () banked
 11080  011E2A  6FDF               	movwf	(_pCDCDst+1)& (0+255),b
 11081                           
 11082                           ; BSR set to: 0
 11083                           ;usb_device_cdc.c: 951: i = byte_to_send;
 11084  011E2C  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 11085                           
 11086                           ; BSR set to: 0
 11087                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 11088  011E30  0100               	movlb	0	; () banked
 11089  011E32  51ED               	movf	_cdc_mem_type& (0+255),w,b
 11090  011E34  B4D8               	btfsc	status,2,c
 11091  011E36  D013               	goto	l8993
 11092  011E38  D02A               	goto	l9003
 11093  011E3A                     l8985:
 11094                           
 11095                           ; BSR set to: 0
 11096                           ;usb_device_cdc.c: 955: {
 11097                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 11098  011E3A  C0E1  FFD9         	movff	_pCDCSrc,fsr2l
 11099  011E3E  C0E2  FFDA         	movff	_pCDCSrc+1,fsr2h
 11100  011E42  C0DE  FFE1         	movff	_pCDCDst,fsr1l
 11101  011E46  C0DF  FFE2         	movff	_pCDCDst+1,fsr1h
 11102  011E4A  CFDF FFE7          	movff	indf2,indf1
 11103                           
 11104                           ; BSR set to: 0
 11105                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 11106  011E4E  0100               	movlb	0	; () banked
 11107  011E50  4BDE               	infsnz	_pCDCDst& (0+255),f,b
 11108  011E52  2BDF               	incf	(_pCDCDst+1)& (0+255),f,b
 11109                           
 11110                           ; BSR set to: 0
 11111                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 11112  011E54  0100               	movlb	0	; () banked
 11113  011E56  4BE1               	infsnz	_pCDCSrc& (0+255),f,b
 11114  011E58  2BE2               	incf	(_pCDCSrc+1)& (0+255),f,b
 11115                           
 11116                           ; BSR set to: 0
 11117                           ;usb_device_cdc.c: 959: i--;
 11118  011E5A  0100               	movlb	0	; () banked
 11119  011E5C  076A               	decf	CDCTxService@i& (0+255),f,b
 11120  011E5E                     l8993:
 11121                           
 11122                           ; BSR set to: 0
 11123  011E5E  0100               	movlb	0	; () banked
 11124  011E60  516A               	movf	CDCTxService@i& (0+255),w,b
 11125  011E62  0100               	movlb	0	; () banked
 11126  011E64  B4D8               	btfsc	status,2,c
 11127  011E66  D018               	goto	l9005
 11128  011E68  D7E8               	goto	l8985
 11129  011E6A                     l8995:
 11130                           
 11131                           ; BSR set to: 0
 11132                           ;usb_device_cdc.c: 965: {
 11133                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 11134  011E6A  C0E1  FFD9         	movff	_pCDCSrc,fsr2l
 11135  011E6E  C0E2  FFDA         	movff	_pCDCSrc+1,fsr2h
 11136  011E72  C0DE  FFE1         	movff	_pCDCDst,fsr1l
 11137  011E76  C0DF  FFE2         	movff	_pCDCDst+1,fsr1h
 11138  011E7A  CFDF FFE7          	movff	indf2,indf1
 11139                           
 11140                           ; BSR set to: 0
 11141                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 11142  011E7E  0100               	movlb	0	; () banked
 11143  011E80  4BDE               	infsnz	_pCDCDst& (0+255),f,b
 11144  011E82  2BDF               	incf	(_pCDCDst+1)& (0+255),f,b
 11145                           
 11146                           ; BSR set to: 0
 11147                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 11148  011E84  0100               	movlb	0	; () banked
 11149  011E86  4BE1               	infsnz	_pCDCSrc& (0+255),f,b
 11150  011E88  2BE2               	incf	(_pCDCSrc+1)& (0+255),f,b
 11151                           
 11152                           ; BSR set to: 0
 11153                           ;usb_device_cdc.c: 969: i--;
 11154  011E8A  0100               	movlb	0	; () banked
 11155  011E8C  076A               	decf	CDCTxService@i& (0+255),f,b
 11156  011E8E                     l9003:
 11157                           
 11158                           ; BSR set to: 0
 11159  011E8E  0100               	movlb	0	; () banked
 11160  011E90  516A               	movf	CDCTxService@i& (0+255),w,b
 11161  011E92  0100               	movlb	0	; () banked
 11162  011E94  A4D8               	btfss	status,2,c
 11163  011E96  D7E9               	goto	l8995
 11164  011E98                     l9005:
 11165                           
 11166                           ; BSR set to: 0
 11167                           ;usb_device_cdc.c: 970: }
 11168                           ;usb_device_cdc.c: 971: }
 11169                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 11170  011E98  0100               	movlb	0	; () banked
 11171  011E9A  51EF               	movf	_cdc_tx_len& (0+255),w,b
 11172  011E9C  A4D8               	btfss	status,2,c
 11173  011E9E  D009               	goto	l9013
 11174                           
 11175                           ; BSR set to: 0
 11176                           ;usb_device_cdc.c: 978: {
 11177                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 11178  011EA0  0E40               	movlw	64
 11179  011EA2  0100               	movlb	0	; () banked
 11180  011EA4  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 11181  011EA6  A4D8               	btfss	status,2,c
 11182  011EA8  D002               	goto	l9011
 11183                           
 11184                           ; BSR set to: 0
 11185                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 11186  011EAA  0E02               	movlw	2
 11187  011EAC  D001               	goto	L2
 11188  011EAE                     l9011:
 11189                           
 11190                           ; BSR set to: 0
 11191                           ;usb_device_cdc.c: 981: else
 11192                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 11193  011EAE  0E03               	movlw	3
 11194  011EB0                     L2:
 11195  011EB0  6E26               	movwf	_cdc_trf_state,c
 11196  011EB2                     l9013:
 11197                           
 11198                           ; BSR set to: 0
 11199                           ;usb_device_cdc.c: 983: }
 11200                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 11201  011EB2  0E01               	movlw	1
 11202  011EB4  0100               	movlb	0	; () banked
 11203  011EB6  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 11204  011EB8  0E40               	movlw	low _cdc_data_tx
 11205  011EBA  0100               	movlb	0	; () banked
 11206  011EBC  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 11207  011EBE  0E02               	movlw	high _cdc_data_tx
 11208  011EC0  0100               	movlb	0	; () banked
 11209  011EC2  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11210  011EC4  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 11211  011EC8  0E02               	movlw	2
 11212  011ECA  ECA1  F095         	call	_USBTransferOnePacket
 11213  011ECE  C060  F0E4         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 11214  011ED2  C061  F0E5         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 11215  011ED6                     l9015:
 11216                           
 11217                           ;usb_device_cdc.c: 986: }
 11218                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 11219  011ED6  88A0               	bsf	4000,4,c	;volatile
 11220  011ED8  0012               	return		;funcret
 11221  011EDA                     __end_of_CDCTxService:
 11222                           	opt stack 0
 11223                           tblptru	equ	0xFF8
 11224                           tblptrh	equ	0xFF7
 11225                           tblptrl	equ	0xFF6
 11226                           tablat	equ	0xFF5
 11227                           prodh	equ	0xFF4
 11228                           prodl	equ	0xFF3
 11229                           intcon	equ	0xFF2
 11230                           intcon2	equ	0xFF1
 11231                           indf0	equ	0xFEF
 11232                           postinc0	equ	0xFEE
 11233                           fsr0h	equ	0xFEA
 11234                           fsr0l	equ	0xFE9
 11235                           wreg	equ	0xFE8
 11236                           indf1	equ	0xFE7
 11237                           postinc1	equ	0xFE6
 11238                           postdec1	equ	0xFE5
 11239                           fsr1h	equ	0xFE2
 11240                           fsr1l	equ	0xFE1
 11241                           indf2	equ	0xFDF
 11242                           postinc2	equ	0xFDE
 11243                           postdec2	equ	0xFDD
 11244                           fsr2h	equ	0xFDA
 11245                           fsr2l	equ	0xFD9
 11246                           status	equ	0xFD8
 11247                           
 11248 ;; *************** function _USBTransferOnePacket *****************
 11249 ;; Defined at:
 11250 ;;		line 995 in file "../My_library/usb_cdc/usb/usb_device.c"
 11251 ;; Parameters:    Size  Location     Type
 11252 ;;  ep              1    wreg     unsigned char 
 11253 ;;  dir             1    0[BANK0 ] unsigned char 
 11254 ;;  data            2    1[BANK0 ] PTR unsigned char 
 11255 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 11256 ;;  len             1    3[BANK0 ] unsigned char 
 11257 ;; Auto vars:     Size  Location     Type
 11258 ;;  ep              1    4[BANK0 ] unsigned char 
 11259 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 11260 ;;		 -> NULL(0), BDT(48), 
 11261 ;; Return value:  Size  Location     Type
 11262 ;;                  2    0[BANK0 ] PTR void 
 11263 ;; Registers used:
 11264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11265 ;; Tracked objects:
 11266 ;;		On entry : 0/0
 11267 ;;		On exit  : 0/0
 11268 ;;		Unchanged: 0/0
 11269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11270 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11271 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11273 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11274 ;;Total ram usage:        7 bytes
 11275 ;; Hardware stack levels used:    1
 11276 ;; Hardware stack levels required when called:   11
 11277 ;; This function calls:
 11278 ;;		Nothing
 11279 ;; This function is called by:
 11280 ;;		_getsUSBUSART
 11281 ;;		_CDCTxService
 11282 ;;		_USBCDCEventHandler
 11283 ;; This function uses a non-reentrant model
 11284 ;;
 11285                           
 11286                           	psect	text45
 11287  012B42                     __ptext45:
 11288                           	opt stack 0
 11289  012B42                     _USBTransferOnePacket:
 11290                           	opt stack 16
 11291                           
 11292                           ;incstack = 0
 11293                           ;USBTransferOnePacket@ep stored from wreg
 11294  012B42  0100               	movlb	0	; () banked
 11295  012B44  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 11296                           
 11297                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 11298                           ;usb_device.c: 1000: if(dir != 0)
 11299  012B46  0100               	movlb	0	; () banked
 11300  012B48  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 11301  012B4A  0100               	movlb	0	; () banked
 11302  012B4C  B4D8               	btfsc	status,2,c
 11303  012B4E  D008               	goto	l8743
 11304                           
 11305                           ; BSR set to: 0
 11306                           ;usb_device.c: 1001: {
 11307                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 11308  012B50  0100               	movlb	0	; () banked
 11309  012B52  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11310  012B54  0D02               	mullw	2
 11311  012B56  0E10               	movlw	low _pBDTEntryIn
 11312  012B58  24F3               	addwf	prodl,w,c
 11313  012B5A  6ED9               	movwf	fsr2l,c
 11314  012B5C  0E00               	movlw	high _pBDTEntryIn
 11315  012B5E  D007               	goto	L3
 11316  012B60                     l8743:
 11317                           
 11318                           ; BSR set to: 0
 11319                           ;usb_device.c: 1005: else
 11320                           ;usb_device.c: 1006: {
 11321                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 11322  012B60  0100               	movlb	0	; () banked
 11323  012B62  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11324  012B64  0D02               	mullw	2
 11325  012B66  0ED5               	movlw	low _pBDTEntryOut
 11326  012B68  24F3               	addwf	prodl,w,c
 11327  012B6A  6ED9               	movwf	fsr2l,c
 11328  012B6C  0E00               	movlw	high _pBDTEntryOut
 11329  012B6E                     L3:
 11330  012B6E  20F4               	addwfc	prodh,w,c
 11331  012B70  6EDA               	movwf	fsr2h,c
 11332  012B72  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 11333  012B76  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 11334                           
 11335                           ; BSR set to: 0
 11336                           ;usb_device.c: 1009: }
 11337                           ;usb_device.c: 1013: if(handle == 0)
 11338                           
 11339                           ; BSR set to: 0
 11340  012B7A  0100               	movlb	0	; () banked
 11341  012B7C  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 11342  012B7E  0100               	movlb	0	; () banked
 11343  012B80  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 11344  012B82  A4D8               	btfss	status,2,c
 11345  012B84  D007               	goto	l8751
 11346                           
 11347                           ; BSR set to: 0
 11348                           ;usb_device.c: 1014: {
 11349                           ;usb_device.c: 1015: return 0;
 11350  012B86  0E00               	movlw	0
 11351  012B88  0100               	movlb	0	; () banked
 11352  012B8A  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 11353  012B8C  0E00               	movlw	0
 11354  012B8E  0100               	movlb	0	; () banked
 11355  012B90  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 11356                           
 11357                           ; BSR set to: 0
 11358  012B92  0012               	return	
 11359  012B94                     l8751:
 11360                           
 11361                           ; BSR set to: 0
 11362                           ;usb_device.c: 1016: }
 11363                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 11364  012B94  0100               	movlb	0	; () banked
 11365  012B96  EE20 F002          	lfsr	2,2
 11366  012B9A  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 11367  012B9C  26D9               	addwf	fsr2l,f,c
 11368  012B9E  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 11369  012BA0  22DA               	addwfc	fsr2h,f,c
 11370  012BA2  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 11371  012BA6  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 11372                           
 11373                           ;usb_device.c: 1030: handle->CNT = len;
 11374  012BAA  0100               	movlb	0	; () banked
 11375  012BAC  EE20 F001          	lfsr	2,1
 11376  012BB0  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 11377  012BB2  26D9               	addwf	fsr2l,f,c
 11378  012BB4  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 11379  012BB6  22DA               	addwfc	fsr2h,f,c
 11380  012BB8  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 11381                           
 11382                           ; BSR set to: 0
 11383                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 11384  012BBC  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 11385  012BC0  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 11386  012BC4  0E40               	movlw	64
 11387  012BC6  16DF               	andwf	indf2,f,c
 11388                           
 11389                           ; BSR set to: 0
 11390                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 11391  012BC8  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 11392  012BCC  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 11393  012BD0  0E00               	movlw	0
 11394  012BD2  86DB               	bsf	plusw2,3,c
 11395                           
 11396                           ; BSR set to: 0
 11397                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 11398  012BD4  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 11399  012BD8  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 11400  012BDC  0E00               	movlw	0
 11401  012BDE  8EDB               	bsf	plusw2,7,c
 11402                           
 11403                           ; BSR set to: 0
 11404                           ;usb_device.c: 1036: if(dir != 0)
 11405  012BE0  0100               	movlb	0	; () banked
 11406  012BE2  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 11407  012BE4  0100               	movlb	0	; () banked
 11408  012BE6  B4D8               	btfsc	status,2,c
 11409  012BE8  D008               	goto	l8763
 11410                           
 11411                           ; BSR set to: 0
 11412                           ;usb_device.c: 1037: {
 11413                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 11414  012BEA  0100               	movlb	0	; () banked
 11415  012BEC  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11416  012BEE  0D02               	mullw	2
 11417  012BF0  0E10               	movlw	low _pBDTEntryIn
 11418  012BF2  24F3               	addwf	prodl,w,c
 11419  012BF4  6ED9               	movwf	fsr2l,c
 11420  012BF6  0E00               	movlw	high _pBDTEntryIn
 11421  012BF8  D007               	goto	L4
 11422  012BFA                     l8763:
 11423                           
 11424                           ; BSR set to: 0
 11425                           ;usb_device.c: 1041: else
 11426                           ;usb_device.c: 1042: {
 11427                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 11428  012BFA  0100               	movlb	0	; () banked
 11429  012BFC  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11430  012BFE  0D02               	mullw	2
 11431  012C00  0ED5               	movlw	low _pBDTEntryOut
 11432  012C02  24F3               	addwf	prodl,w,c
 11433  012C04  6ED9               	movwf	fsr2l,c
 11434  012C06  0E00               	movlw	high _pBDTEntryOut
 11435  012C08                     L4:
 11436  012C08  20F4               	addwfc	prodh,w,c
 11437  012C0A  6EDA               	movwf	fsr2h,c
 11438  012C0C  0E04               	movlw	4
 11439  012C0E  1ADF               	xorwf	indf2,f,c
 11440                           
 11441                           ; BSR set to: 0
 11442                           ;usb_device.c: 1045: }
 11443                           ;usb_device.c: 1046: return (void*)handle;
 11444                           
 11445                           ; BSR set to: 0
 11446  012C10  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 11447  012C14  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 11448  012C18  0012               	return	
 11449  012C1A                     __end_of_USBTransferOnePacket:
 11450                           	opt stack 0
 11451                           tblptru	equ	0xFF8
 11452                           tblptrh	equ	0xFF7
 11453                           tblptrl	equ	0xFF6
 11454                           tablat	equ	0xFF5
 11455                           prodh	equ	0xFF4
 11456                           prodl	equ	0xFF3
 11457                           intcon	equ	0xFF2
 11458                           intcon2	equ	0xFF1
 11459                           indf0	equ	0xFEF
 11460                           postinc0	equ	0xFEE
 11461                           fsr0h	equ	0xFEA
 11462                           fsr0l	equ	0xFE9
 11463                           wreg	equ	0xFE8
 11464                           indf1	equ	0xFE7
 11465                           postinc1	equ	0xFE6
 11466                           postdec1	equ	0xFE5
 11467                           fsr1h	equ	0xFE2
 11468                           fsr1l	equ	0xFE1
 11469                           indf2	equ	0xFDF
 11470                           postinc2	equ	0xFDE
 11471                           postdec2	equ	0xFDD
 11472                           plusw2	equ	0xFDB
 11473                           fsr2h	equ	0xFDA
 11474                           fsr2l	equ	0xFD9
 11475                           status	equ	0xFD8
 11476                           
 11477 ;; *************** function _RTCC_loop *****************
 11478 ;; Defined at:
 11479 ;;		line 346 in file "../My_library/My_RTCC.c"
 11480 ;; Parameters:    Size  Location     Type
 11481 ;;		None
 11482 ;; Auto vars:     Size  Location     Type
 11483 ;;		None
 11484 ;; Return value:  Size  Location     Type
 11485 ;;		None               void
 11486 ;; Registers used:
 11487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11488 ;; Tracked objects:
 11489 ;;		On entry : 0/0
 11490 ;;		On exit  : 0/0
 11491 ;;		Unchanged: 0/0
 11492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11497 ;;Total ram usage:        0 bytes
 11498 ;; Hardware stack levels used:    1
 11499 ;; Hardware stack levels required when called:   15
 11500 ;; This function calls:
 11501 ;;		_RTCC_from_RTCC
 11502 ;; This function is called by:
 11503 ;;		_main
 11504 ;; This function uses a non-reentrant model
 11505 ;;
 11506                           
 11507                           	psect	text46
 11508  0142E4                     __ptext46:
 11509                           	opt stack 0
 11510  0142E4                     _RTCC_loop:
 11511                           	opt stack 15
 11512  0142E4                     l1054:
 11513  0142E4  010F               	movlb	15	; () banked
 11514  0142E6  B93F               	btfsc	63,4,b	;volatile
 11515  0142E8  D7FD               	goto	l1054
 11516                           
 11517                           ; BSR set to: 15
 11518                           ;My_RTCC.c: 349: now.halfsec = RTCCFGbits.HALFSEC;
 11519                           
 11520                           ; BSR set to: 15
 11521  0142EA  0E00               	movlw	0
 11522  0142EC  B73F               	btfsc	63,3,b	;volatile
 11523  0142EE  0E01               	movlw	1
 11524  0142F0  0101               	movlb	1	; () banked
 11525  0142F2  6F56               	movwf	(_now+12)& (0+255),b
 11526                           
 11527                           ; BSR set to: 1
 11528                           ;My_RTCC.c: 350: if (prev_halfsec != now.halfsec) {
 11529  0142F4  0100               	movlb	0	; () banked
 11530  0142F6  51EA               	movf	RTCC_loop@prev_halfsec& (0+255),w,b
 11531  0142F8  0101               	movlb	1	; () banked
 11532  0142FA  1956               	xorwf	(_now+12)& (0+255),w,b
 11533  0142FC  B4D8               	btfsc	status,2,c
 11534  0142FE  0012               	return	
 11535                           
 11536                           ; BSR set to: 1
 11537                           ;My_RTCC.c: 351: prev_halfsec = now.halfsec;
 11538  014300  C156  F0EA         	movff	_now+12,RTCC_loop@prev_halfsec
 11539                           
 11540                           ;My_RTCC.c: 352: now.colon = now.halfsec;
 11541  014304  C156  F155         	movff	_now+12,_now+11
 11542                           
 11543                           ; BSR set to: 1
 11544                           ;My_RTCC.c: 353: time_change_flag = 1;
 11545  014308  0E01               	movlw	1
 11546  01430A  0100               	movlb	0	; () banked
 11547  01430C  6FF2               	movwf	_time_change_flag& (0+255),b
 11548                           
 11549                           ; BSR set to: 0
 11550                           ;My_RTCC.c: 354: RTCC_from_RTCC(&now);
 11551  01430E  0E4A               	movlw	low _now
 11552  014310  0100               	movlb	0	; () banked
 11553  014312  6F85               	movwf	RTCC_from_RTCC@tm& (0+255),b
 11554  014314  0E01               	movlw	high _now
 11555  014316  0100               	movlb	0	; () banked
 11556  014318  6F86               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 11557  01431A  EC58  F0A3         	call	_RTCC_from_RTCC	;wreg free
 11558  01431E  0012               	return	
 11559  014320                     __end_of_RTCC_loop:
 11560                           	opt stack 0
 11561                           tblptru	equ	0xFF8
 11562                           tblptrh	equ	0xFF7
 11563                           tblptrl	equ	0xFF6
 11564                           tablat	equ	0xFF5
 11565                           prodh	equ	0xFF4
 11566                           prodl	equ	0xFF3
 11567                           intcon	equ	0xFF2
 11568                           intcon2	equ	0xFF1
 11569                           indf0	equ	0xFEF
 11570                           postinc0	equ	0xFEE
 11571                           fsr0h	equ	0xFEA
 11572                           fsr0l	equ	0xFE9
 11573                           wreg	equ	0xFE8
 11574                           indf1	equ	0xFE7
 11575                           postinc1	equ	0xFE6
 11576                           postdec1	equ	0xFE5
 11577                           fsr1h	equ	0xFE2
 11578                           fsr1l	equ	0xFE1
 11579                           indf2	equ	0xFDF
 11580                           postinc2	equ	0xFDE
 11581                           postdec2	equ	0xFDD
 11582                           plusw2	equ	0xFDB
 11583                           fsr2h	equ	0xFDA
 11584                           fsr2l	equ	0xFD9
 11585                           status	equ	0xFD8
 11586                           
 11587 ;; *************** function _RTCC_from_RTCC *****************
 11588 ;; Defined at:
 11589 ;;		line 193 in file "../My_library/My_RTCC.c"
 11590 ;; Parameters:    Size  Location     Type
 11591 ;;  tm              2   37[BANK0 ] PTR struct .
 11592 ;;		 -> now(14), 
 11593 ;; Auto vars:     Size  Location     Type
 11594 ;;		None
 11595 ;; Return value:  Size  Location     Type
 11596 ;;		None               void
 11597 ;; Registers used:
 11598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11599 ;; Tracked objects:
 11600 ;;		On entry : 0/0
 11601 ;;		On exit  : 0/0
 11602 ;;		Unchanged: 0/0
 11603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11604 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11607 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11608 ;;Total ram usage:        2 bytes
 11609 ;; Hardware stack levels used:    1
 11610 ;; Hardware stack levels required when called:   14
 11611 ;; This function calls:
 11612 ;;		_RTCC_to_caltime
 11613 ;;		_caltime_to_epoch
 11614 ;; This function is called by:
 11615 ;;		_RTCC_loop
 11616 ;;		_print_time
 11617 ;;		_light_loop
 11618 ;;		_main
 11619 ;;		_display_time_0802
 11620 ;;		_display_time_1602
 11621 ;;		_RTCC_adjust_time_inc
 11622 ;;		_RTCC_adjust_time_dec
 11623 ;; This function uses a non-reentrant model
 11624 ;;
 11625                           
 11626                           	psect	text47
 11627  0146B0                     __ptext47:
 11628                           	opt stack 0
 11629  0146B0                     _RTCC_from_RTCC:
 11630                           	opt stack 11
 11631                           
 11632                           ;My_RTCC.c: 194: RTCC_to_caltime(tm);
 11633                           
 11634                           ;incstack = 0
 11635  0146B0  C085  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 11636  0146B4  C086  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 11637  0146B8  ECA0  F099         	call	_RTCC_to_caltime	;wreg free
 11638                           
 11639                           ;My_RTCC.c: 195: caltime_to_epoch(tm);
 11640  0146BC  C085  F078         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 11641  0146C0  C086  F079         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 11642  0146C4  EC0B  F088         	call	_caltime_to_epoch	;wreg free
 11643  0146C8  0012               	return		;funcret
 11644  0146CA                     __end_of_RTCC_from_RTCC:
 11645                           	opt stack 0
 11646                           tblptru	equ	0xFF8
 11647                           tblptrh	equ	0xFF7
 11648                           tblptrl	equ	0xFF6
 11649                           tablat	equ	0xFF5
 11650                           prodh	equ	0xFF4
 11651                           prodl	equ	0xFF3
 11652                           intcon	equ	0xFF2
 11653                           intcon2	equ	0xFF1
 11654                           indf0	equ	0xFEF
 11655                           postinc0	equ	0xFEE
 11656                           fsr0h	equ	0xFEA
 11657                           fsr0l	equ	0xFE9
 11658                           wreg	equ	0xFE8
 11659                           indf1	equ	0xFE7
 11660                           postinc1	equ	0xFE6
 11661                           postdec1	equ	0xFE5
 11662                           fsr1h	equ	0xFE2
 11663                           fsr1l	equ	0xFE1
 11664                           indf2	equ	0xFDF
 11665                           postinc2	equ	0xFDE
 11666                           postdec2	equ	0xFDD
 11667                           plusw2	equ	0xFDB
 11668                           fsr2h	equ	0xFDA
 11669                           fsr2l	equ	0xFD9
 11670                           status	equ	0xFD8
 11671                           
 11672 ;; *************** function _caltime_to_epoch *****************
 11673 ;; Defined at:
 11674 ;;		line 173 in file "../My_library/My_RTCC.c"
 11675 ;; Parameters:    Size  Location     Type
 11676 ;;  tm              2   24[BANK0 ] PTR struct .
 11677 ;;		 -> now(14), 
 11678 ;; Auto vars:     Size  Location     Type
 11679 ;;  month           1   36[BANK0 ] unsigned char 
 11680 ;;  month           1   31[BANK0 ] unsigned char 
 11681 ;;  year            1   30[BANK0 ] unsigned char 
 11682 ;;  epoch           4   32[BANK0 ] unsigned long 
 11683 ;; Return value:  Size  Location     Type
 11684 ;;		None               void
 11685 ;; Registers used:
 11686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11687 ;; Tracked objects:
 11688 ;;		On entry : 0/0
 11689 ;;		On exit  : 0/0
 11690 ;;		Unchanged: 0/0
 11691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11692 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11693 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11694 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11695 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11696 ;;Total ram usage:       13 bytes
 11697 ;; Hardware stack levels used:    1
 11698 ;; Hardware stack levels required when called:   13
 11699 ;; This function calls:
 11700 ;;		___lmul
 11701 ;;		_month_length
 11702 ;; This function is called by:
 11703 ;;		_RTCC_from_RTCC
 11704 ;;		_RTCC_from_caltime
 11705 ;; This function uses a non-reentrant model
 11706 ;;
 11707                           
 11708                           	psect	text48
 11709  011016                     __ptext48:
 11710                           	opt stack 0
 11711  011016                     _caltime_to_epoch:
 11712                           	opt stack 11
 11713                           
 11714                           ;My_RTCC.c: 174: epoch_t epoch = 0;
 11715                           
 11716                           ;incstack = 0
 11717  011016  0E00               	movlw	0
 11718  011018  0100               	movlb	0	; () banked
 11719  01101A  6F80               	movwf	caltime_to_epoch@epoch& (0+255),b
 11720  01101C  0E00               	movlw	0
 11721  01101E  6F81               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 11722  011020  0E00               	movlw	0
 11723  011022  6F82               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 11724  011024  0E00               	movlw	0
 11725  011026  6F83               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 11726                           
 11727                           ;My_RTCC.c: 175: for (uint8_t year = 0; year < tm->YY; year++) {
 11728  011028  0E00               	movlw	0
 11729  01102A  0100               	movlb	0	; () banked
 11730  01102C  6F7E               	movwf	caltime_to_epoch@year& (0+255),b
 11731  01102E  D037               	goto	l8409
 11732  011030                     l8395:
 11733                           
 11734                           ; BSR set to: 0
 11735                           ;My_RTCC.c: 176: for (uint8_t month = 1; month <= 12; month++) {
 11736  011030  0E01               	movlw	1
 11737  011032  0100               	movlb	0	; () banked
 11738  011034  6F84               	movwf	caltime_to_epoch@month& (0+255),b
 11739  011036                     l8397:
 11740                           
 11741                           ; BSR set to: 0
 11742  011036  0E0C               	movlw	12
 11743  011038  0100               	movlb	0	; () banked
 11744  01103A  6584               	cpfsgt	caltime_to_epoch@month& (0+255),b
 11745  01103C  D001               	goto	l8401
 11746  01103E  D02D               	goto	l8407
 11747  011040                     l8401:
 11748                           
 11749                           ; BSR set to: 0
 11750                           ;My_RTCC.c: 177: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 11751  011040  C084  F066         	movff	caltime_to_epoch@month,month_length@month
 11752  011044  0100               	movlb	0	; () banked
 11753  011046  517E               	movf	caltime_to_epoch@year& (0+255),w,b
 11754  011048  EC57  F094         	call	_month_length
 11755  01104C  0100               	movlb	0	; () banked
 11756  01104E  6F7A               	movwf	??_caltime_to_epoch& (0+255),b
 11757  011050  0100               	movlb	0	; () banked
 11758  011052  517A               	movf	??_caltime_to_epoch& (0+255),w,b
 11759  011054  0100               	movlb	0	; () banked
 11760  011056  6F6C               	movwf	___lmul@multiplier& (0+255),b
 11761  011058  6B6D               	clrf	(___lmul@multiplier+1)& (0+255),b
 11762  01105A  6B6E               	clrf	(___lmul@multiplier+2)& (0+255),b
 11763  01105C  6B6F               	clrf	(___lmul@multiplier+3)& (0+255),b
 11764  01105E  0E80               	movlw	128
 11765  011060  0100               	movlb	0	; () banked
 11766  011062  6F70               	movwf	___lmul@multiplicand& (0+255),b
 11767  011064  0E51               	movlw	81
 11768  011066  6F71               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11769  011068  0E01               	movlw	1
 11770  01106A  6F72               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11771  01106C  0E00               	movlw	0
 11772  01106E  6F73               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11773  011070  EC53  F09F         	call	___lmul	;wreg free
 11774  011074  0100               	movlb	0	; () banked
 11775  011076  516C               	movf	?___lmul& (0+255),w,b
 11776  011078  0100               	movlb	0	; () banked
 11777  01107A  2780               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11778  01107C  0100               	movlb	0	; () banked
 11779  01107E  516D               	movf	(?___lmul+1)& (0+255),w,b
 11780  011080  0100               	movlb	0	; () banked
 11781  011082  2381               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11782  011084  0100               	movlb	0	; () banked
 11783  011086  516E               	movf	(?___lmul+2)& (0+255),w,b
 11784  011088  0100               	movlb	0	; () banked
 11785  01108A  2382               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11786  01108C  0100               	movlb	0	; () banked
 11787  01108E  516F               	movf	(?___lmul+3)& (0+255),w,b
 11788  011090  0100               	movlb	0	; () banked
 11789  011092  2383               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11790                           
 11791                           ; BSR set to: 0
 11792  011094  0100               	movlb	0	; () banked
 11793  011096  2B84               	incf	caltime_to_epoch@month& (0+255),f,b
 11794  011098  D7CE               	goto	l8397
 11795  01109A                     l8407:
 11796                           
 11797                           ; BSR set to: 0
 11798  01109A  0100               	movlb	0	; () banked
 11799  01109C  2B7E               	incf	caltime_to_epoch@year& (0+255),f,b
 11800  01109E                     l8409:
 11801                           
 11802                           ; BSR set to: 0
 11803  01109E  0100               	movlb	0	; () banked
 11804  0110A0  EE20 F00A          	lfsr	2,10
 11805  0110A4  5178               	movf	caltime_to_epoch@tm& (0+255),w,b
 11806  0110A6  26D9               	addwf	fsr2l,f,c
 11807  0110A8  5179               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11808  0110AA  22DA               	addwfc	fsr2h,f,c
 11809  0110AC  50DE               	movf	postinc2,w,c
 11810  0110AE  0100               	movlb	0	; () banked
 11811  0110B0  5D7E               	subwf	caltime_to_epoch@year& (0+255),w,b
 11812  0110B2  A0D8               	btfss	status,0,c
 11813  0110B4  D7BD               	goto	l8395
 11814                           
 11815                           ; BSR set to: 0
 11816                           ;My_RTCC.c: 178: }
 11817                           ;My_RTCC.c: 179: }
 11818                           ;My_RTCC.c: 180: for (uint8_t month = 1; month < tm->MM; month++) {
 11819                           
 11820                           ; BSR set to: 0
 11821  0110B6  0E01               	movlw	1
 11822  0110B8  0100               	movlb	0	; () banked
 11823  0110BA  6F7F               	movwf	caltime_to_epoch@month_3939& (0+255),b
 11824  0110BC  D032               	goto	l8417
 11825  0110BE                     l8413:
 11826                           
 11827                           ; BSR set to: 0
 11828                           ;My_RTCC.c: 181: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 11829  0110BE  C07F  F066         	movff	caltime_to_epoch@month_3939,month_length@month
 11830  0110C2  0100               	movlb	0	; () banked
 11831  0110C4  EE20 F00A          	lfsr	2,10
 11832  0110C8  5178               	movf	caltime_to_epoch@tm& (0+255),w,b
 11833  0110CA  26D9               	addwf	fsr2l,f,c
 11834  0110CC  5179               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11835  0110CE  22DA               	addwfc	fsr2h,f,c
 11836  0110D0  50DF               	movf	indf2,w,c
 11837  0110D2  EC57  F094         	call	_month_length
 11838  0110D6  0100               	movlb	0	; () banked
 11839  0110D8  6F7A               	movwf	??_caltime_to_epoch& (0+255),b
 11840  0110DA  0100               	movlb	0	; () banked
 11841  0110DC  517A               	movf	??_caltime_to_epoch& (0+255),w,b
 11842  0110DE  0100               	movlb	0	; () banked
 11843  0110E0  6F6C               	movwf	___lmul@multiplier& (0+255),b
 11844  0110E2  6B6D               	clrf	(___lmul@multiplier+1)& (0+255),b
 11845  0110E4  6B6E               	clrf	(___lmul@multiplier+2)& (0+255),b
 11846  0110E6  6B6F               	clrf	(___lmul@multiplier+3)& (0+255),b
 11847  0110E8  0E80               	movlw	128
 11848  0110EA  0100               	movlb	0	; () banked
 11849  0110EC  6F70               	movwf	___lmul@multiplicand& (0+255),b
 11850  0110EE  0E51               	movlw	81
 11851  0110F0  6F71               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11852  0110F2  0E01               	movlw	1
 11853  0110F4  6F72               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11854  0110F6  0E00               	movlw	0
 11855  0110F8  6F73               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11856  0110FA  EC53  F09F         	call	___lmul	;wreg free
 11857  0110FE  0100               	movlb	0	; () banked
 11858  011100  516C               	movf	?___lmul& (0+255),w,b
 11859  011102  0100               	movlb	0	; () banked
 11860  011104  2780               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11861  011106  0100               	movlb	0	; () banked
 11862  011108  516D               	movf	(?___lmul+1)& (0+255),w,b
 11863  01110A  0100               	movlb	0	; () banked
 11864  01110C  2381               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11865  01110E  0100               	movlb	0	; () banked
 11866  011110  516E               	movf	(?___lmul+2)& (0+255),w,b
 11867  011112  0100               	movlb	0	; () banked
 11868  011114  2382               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11869  011116  0100               	movlb	0	; () banked
 11870  011118  516F               	movf	(?___lmul+3)& (0+255),w,b
 11871  01111A  0100               	movlb	0	; () banked
 11872  01111C  2383               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11873                           
 11874                           ; BSR set to: 0
 11875  01111E  0100               	movlb	0	; () banked
 11876  011120  2B7F               	incf	caltime_to_epoch@month_3939& (0+255),f,b
 11877  011122                     l8417:
 11878                           
 11879                           ; BSR set to: 0
 11880  011122  0100               	movlb	0	; () banked
 11881  011124  EE20 F009          	lfsr	2,9
 11882  011128  5178               	movf	caltime_to_epoch@tm& (0+255),w,b
 11883  01112A  26D9               	addwf	fsr2l,f,c
 11884  01112C  5179               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11885  01112E  22DA               	addwfc	fsr2h,f,c
 11886  011130  50DE               	movf	postinc2,w,c
 11887  011132  0100               	movlb	0	; () banked
 11888  011134  5D7F               	subwf	caltime_to_epoch@month_3939& (0+255),w,b
 11889  011136  A0D8               	btfss	status,0,c
 11890  011138  D7C2               	goto	l8413
 11891                           
 11892                           ; BSR set to: 0
 11893                           ;My_RTCC.c: 182: }
 11894                           ;My_RTCC.c: 183: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 11895                           
 11896                           ; BSR set to: 0
 11897  01113A  0EFF               	movlw	255
 11898  01113C  0100               	movlb	0	; () banked
 11899  01113E  6F7A               	movwf	??_caltime_to_epoch& (0+255),b
 11900  011140  0EFF               	movlw	255
 11901  011142  0100               	movlb	0	; () banked
 11902  011144  6F7B               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 11903  011146  0100               	movlb	0	; () banked
 11904  011148  EE20 F008          	lfsr	2,8
 11905  01114C  5178               	movf	caltime_to_epoch@tm& (0+255),w,b
 11906  01114E  26D9               	addwf	fsr2l,f,c
 11907  011150  5179               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11908  011152  22DA               	addwfc	fsr2h,f,c
 11909  011154  50DF               	movf	indf2,w,c
 11910  011156  0100               	movlb	0	; () banked
 11911  011158  6F7C               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 11912  01115A  6B7D               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 11913  01115C  0100               	movlb	0	; () banked
 11914  01115E  517A               	movf	??_caltime_to_epoch& (0+255),w,b
 11915  011160  0100               	movlb	0	; () banked
 11916  011162  277C               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 11917  011164  0100               	movlb	0	; () banked
 11918  011166  517B               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 11919  011168  0100               	movlb	0	; () banked
 11920  01116A  237D               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 11921  01116C  C07C  F06C         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 11922  011170  C07D  F06D         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 11923  011174  0100               	movlb	0	; () banked
 11924  011176  0E00               	movlw	0
 11925  011178  BF6D               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 11926  01117A  0EFF               	movlw	-1
 11927  01117C  6F6E               	movwf	(___lmul@multiplier+2)& (0+255),b
 11928  01117E  6F6F               	movwf	(___lmul@multiplier+3)& (0+255),b
 11929  011180  0E80               	movlw	128
 11930  011182  0100               	movlb	0	; () banked
 11931  011184  6F70               	movwf	___lmul@multiplicand& (0+255),b
 11932  011186  0E51               	movlw	81
 11933  011188  6F71               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11934  01118A  0E01               	movlw	1
 11935  01118C  6F72               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11936  01118E  0E00               	movlw	0
 11937  011190  6F73               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11938  011192  EC53  F09F         	call	___lmul	;wreg free
 11939  011196  0100               	movlb	0	; () banked
 11940  011198  516C               	movf	?___lmul& (0+255),w,b
 11941  01119A  0100               	movlb	0	; () banked
 11942  01119C  2780               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11943  01119E  0100               	movlb	0	; () banked
 11944  0111A0  516D               	movf	(?___lmul+1)& (0+255),w,b
 11945  0111A2  0100               	movlb	0	; () banked
 11946  0111A4  2381               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11947  0111A6  0100               	movlb	0	; () banked
 11948  0111A8  516E               	movf	(?___lmul+2)& (0+255),w,b
 11949  0111AA  0100               	movlb	0	; () banked
 11950  0111AC  2382               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11951  0111AE  0100               	movlb	0	; () banked
 11952  0111B0  516F               	movf	(?___lmul+3)& (0+255),w,b
 11953  0111B2  0100               	movlb	0	; () banked
 11954  0111B4  2383               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11955                           
 11956                           ;My_RTCC.c: 184: epoch += ((epoch_t)60*60) * tm->hh;
 11957  0111B6  0100               	movlb	0	; () banked
 11958  0111B8  EE20 F006          	lfsr	2,6
 11959  0111BC  5178               	movf	caltime_to_epoch@tm& (0+255),w,b
 11960  0111BE  26D9               	addwf	fsr2l,f,c
 11961  0111C0  5179               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11962  0111C2  22DA               	addwfc	fsr2h,f,c
 11963  0111C4  50DF               	movf	indf2,w,c
 11964  0111C6  0100               	movlb	0	; () banked
 11965  0111C8  6F7A               	movwf	??_caltime_to_epoch& (0+255),b
 11966  0111CA  0100               	movlb	0	; () banked
 11967  0111CC  517A               	movf	??_caltime_to_epoch& (0+255),w,b
 11968  0111CE  0100               	movlb	0	; () banked
 11969  0111D0  6F6C               	movwf	___lmul@multiplier& (0+255),b
 11970  0111D2  6B6D               	clrf	(___lmul@multiplier+1)& (0+255),b
 11971  0111D4  6B6E               	clrf	(___lmul@multiplier+2)& (0+255),b
 11972  0111D6  6B6F               	clrf	(___lmul@multiplier+3)& (0+255),b
 11973  0111D8  0E10               	movlw	16
 11974  0111DA  0100               	movlb	0	; () banked
 11975  0111DC  6F70               	movwf	___lmul@multiplicand& (0+255),b
 11976  0111DE  0E0E               	movlw	14
 11977  0111E0  6F71               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11978  0111E2  0E00               	movlw	0
 11979  0111E4  6F72               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11980  0111E6  0E00               	movlw	0
 11981  0111E8  6F73               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11982  0111EA  EC53  F09F         	call	___lmul	;wreg free
 11983  0111EE  0100               	movlb	0	; () banked
 11984  0111F0  516C               	movf	?___lmul& (0+255),w,b
 11985  0111F2  0100               	movlb	0	; () banked
 11986  0111F4  2780               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11987  0111F6  0100               	movlb	0	; () banked
 11988  0111F8  516D               	movf	(?___lmul+1)& (0+255),w,b
 11989  0111FA  0100               	movlb	0	; () banked
 11990  0111FC  2381               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11991  0111FE  0100               	movlb	0	; () banked
 11992  011200  516E               	movf	(?___lmul+2)& (0+255),w,b
 11993  011202  0100               	movlb	0	; () banked
 11994  011204  2382               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11995  011206  0100               	movlb	0	; () banked
 11996  011208  516F               	movf	(?___lmul+3)& (0+255),w,b
 11997  01120A  0100               	movlb	0	; () banked
 11998  01120C  2383               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11999                           
 12000                           ;My_RTCC.c: 185: epoch += ((epoch_t)60) * tm->mm;
 12001  01120E  0100               	movlb	0	; () banked
 12002  011210  EE20 F005          	lfsr	2,5
 12003  011214  5178               	movf	caltime_to_epoch@tm& (0+255),w,b
 12004  011216  26D9               	addwf	fsr2l,f,c
 12005  011218  5179               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 12006  01121A  22DA               	addwfc	fsr2h,f,c
 12007  01121C  50DF               	movf	indf2,w,c
 12008  01121E  0100               	movlb	0	; () banked
 12009  011220  6F7A               	movwf	??_caltime_to_epoch& (0+255),b
 12010  011222  0100               	movlb	0	; () banked
 12011  011224  517A               	movf	??_caltime_to_epoch& (0+255),w,b
 12012  011226  0100               	movlb	0	; () banked
 12013  011228  6F6C               	movwf	___lmul@multiplier& (0+255),b
 12014  01122A  6B6D               	clrf	(___lmul@multiplier+1)& (0+255),b
 12015  01122C  6B6E               	clrf	(___lmul@multiplier+2)& (0+255),b
 12016  01122E  6B6F               	clrf	(___lmul@multiplier+3)& (0+255),b
 12017  011230  0E3C               	movlw	60
 12018  011232  0100               	movlb	0	; () banked
 12019  011234  6F70               	movwf	___lmul@multiplicand& (0+255),b
 12020  011236  0E00               	movlw	0
 12021  011238  6F71               	movwf	(___lmul@multiplicand+1)& (0+255),b
 12022  01123A  0E00               	movlw	0
 12023  01123C  6F72               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12024  01123E  0E00               	movlw	0
 12025  011240  6F73               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12026  011242  EC53  F09F         	call	___lmul	;wreg free
 12027  011246  0100               	movlb	0	; () banked
 12028  011248  516C               	movf	?___lmul& (0+255),w,b
 12029  01124A  0100               	movlb	0	; () banked
 12030  01124C  2780               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 12031  01124E  0100               	movlb	0	; () banked
 12032  011250  516D               	movf	(?___lmul+1)& (0+255),w,b
 12033  011252  0100               	movlb	0	; () banked
 12034  011254  2381               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 12035  011256  0100               	movlb	0	; () banked
 12036  011258  516E               	movf	(?___lmul+2)& (0+255),w,b
 12037  01125A  0100               	movlb	0	; () banked
 12038  01125C  2382               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 12039  01125E  0100               	movlb	0	; () banked
 12040  011260  516F               	movf	(?___lmul+3)& (0+255),w,b
 12041  011262  0100               	movlb	0	; () banked
 12042  011264  2383               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 12043                           
 12044                           ; BSR set to: 0
 12045                           ;My_RTCC.c: 186: epoch += tm->ss;
 12046  011266  0100               	movlb	0	; () banked
 12047  011268  EE20 F004          	lfsr	2,4
 12048  01126C  5178               	movf	caltime_to_epoch@tm& (0+255),w,b
 12049  01126E  26D9               	addwf	fsr2l,f,c
 12050  011270  5179               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 12051  011272  22DA               	addwfc	fsr2h,f,c
 12052  011274  50DF               	movf	indf2,w,c
 12053  011276  0100               	movlb	0	; () banked
 12054  011278  6F7A               	movwf	??_caltime_to_epoch& (0+255),b
 12055  01127A  0100               	movlb	0	; () banked
 12056  01127C  517A               	movf	??_caltime_to_epoch& (0+255),w,b
 12057  01127E  0100               	movlb	0	; () banked
 12058  011280  2780               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 12059  011282  0E00               	movlw	0
 12060  011284  2381               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 12061  011286  2382               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 12062  011288  2383               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 12063                           
 12064                           ; BSR set to: 0
 12065                           ;My_RTCC.c: 188: tm->epoch = epoch;
 12066  01128A  C078  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 12067  01128E  C079  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 12068  011292  C080  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 12069  011296  C081  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 12070  01129A  C082  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 12071  01129E  C083  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 12072                           
 12073                           ; BSR set to: 0
 12074  0112A2  0012               	return		;funcret
 12075  0112A4                     __end_of_caltime_to_epoch:
 12076                           	opt stack 0
 12077                           tblptru	equ	0xFF8
 12078                           tblptrh	equ	0xFF7
 12079                           tblptrl	equ	0xFF6
 12080                           tablat	equ	0xFF5
 12081                           prodh	equ	0xFF4
 12082                           prodl	equ	0xFF3
 12083                           intcon	equ	0xFF2
 12084                           intcon2	equ	0xFF1
 12085                           indf0	equ	0xFEF
 12086                           postinc0	equ	0xFEE
 12087                           fsr0h	equ	0xFEA
 12088                           fsr0l	equ	0xFE9
 12089                           wreg	equ	0xFE8
 12090                           indf1	equ	0xFE7
 12091                           postinc1	equ	0xFE6
 12092                           postdec1	equ	0xFE5
 12093                           fsr1h	equ	0xFE2
 12094                           fsr1l	equ	0xFE1
 12095                           indf2	equ	0xFDF
 12096                           postinc2	equ	0xFDE
 12097                           postdec2	equ	0xFDD
 12098                           plusw2	equ	0xFDB
 12099                           fsr2h	equ	0xFDA
 12100                           fsr2l	equ	0xFD9
 12101                           status	equ	0xFD8
 12102                           
 12103 ;; *************** function _RTCC_to_caltime *****************
 12104 ;; Defined at:
 12105 ;;		line 83 in file "../My_library/My_RTCC.c"
 12106 ;; Parameters:    Size  Location     Type
 12107 ;;  tm              2    2[BANK0 ] PTR struct .
 12108 ;;		 -> now(14), 
 12109 ;; Auto vars:     Size  Location     Type
 12110 ;;  dumy            1    4[BANK0 ] unsigned char 
 12111 ;; Return value:  Size  Location     Type
 12112 ;;		None               void
 12113 ;; Registers used:
 12114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12115 ;; Tracked objects:
 12116 ;;		On entry : 0/0
 12117 ;;		On exit  : 0/0
 12118 ;;		Unchanged: 0/0
 12119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12120 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12121 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12123 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12124 ;;Total ram usage:        3 bytes
 12125 ;; Hardware stack levels used:    1
 12126 ;; Hardware stack levels required when called:   12
 12127 ;; This function calls:
 12128 ;;		_x_to_d
 12129 ;; This function is called by:
 12130 ;;		_RTCC_from_RTCC
 12131 ;; This function uses a non-reentrant model
 12132 ;;
 12133                           
 12134                           	psect	text49
 12135  013340                     __ptext49:
 12136                           	opt stack 0
 12137  013340                     _RTCC_to_caltime:
 12138                           	opt stack 12
 12139  013340                     l932:
 12140  013340  010F               	movlb	15	; () banked
 12141  013342  B93F               	btfsc	63,4,b	;volatile
 12142  013344  D7FD               	goto	l932
 12143                           
 12144                           ; BSR set to: 15
 12145                           ;My_RTCC.c: 86: RTCCFGbits.RTCPTR0 = 1;
 12146  013346  010F               	movlb	15	; () banked
 12147  013348  813F               	bsf	63,0,b	;volatile
 12148                           
 12149                           ;My_RTCC.c: 87: RTCCFGbits.RTCPTR1 = 1;
 12150  01334A  010F               	movlb	15	; () banked
 12151  01334C  833F               	bsf	63,1,b	;volatile
 12152                           
 12153                           ; BSR set to: 15
 12154                           ;My_RTCC.c: 89: tm->YY = x_to_d(RTCVALL);
 12155  01334E  0100               	movlb	0	; () banked
 12156  013350  EE20 F00A          	lfsr	2,10
 12157  013354  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12158  013356  26D9               	addwf	fsr2l,f,c
 12159  013358  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12160  01335A  22DA               	addwfc	fsr2h,f,c
 12161  01335C  010F               	movlb	15	; () banked
 12162  01335E  513A               	movf	58,w,b	;volatile
 12163  013360  EC2C  F0A3         	call	_x_to_d
 12164  013364  6EDF               	movwf	indf2,c
 12165                           
 12166                           ;My_RTCC.c: 90: uint8_t dumy = RTCVALH;
 12167  013366  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 12168                           
 12169                           ;My_RTCC.c: 91: tm->DD = x_to_d(RTCVALL);
 12170  01336A  0100               	movlb	0	; () banked
 12171  01336C  EE20 F008          	lfsr	2,8
 12172  013370  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12173  013372  26D9               	addwf	fsr2l,f,c
 12174  013374  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12175  013376  22DA               	addwfc	fsr2h,f,c
 12176  013378  010F               	movlb	15	; () banked
 12177  01337A  513A               	movf	58,w,b	;volatile
 12178  01337C  EC2C  F0A3         	call	_x_to_d
 12179  013380  6EDF               	movwf	indf2,c
 12180                           
 12181                           ;My_RTCC.c: 92: tm->MM = x_to_d(RTCVALH);
 12182  013382  0100               	movlb	0	; () banked
 12183  013384  EE20 F009          	lfsr	2,9
 12184  013388  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12185  01338A  26D9               	addwf	fsr2l,f,c
 12186  01338C  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12187  01338E  22DA               	addwfc	fsr2h,f,c
 12188  013390  010F               	movlb	15	; () banked
 12189  013392  513B               	movf	59,w,b	;volatile
 12190  013394  EC2C  F0A3         	call	_x_to_d
 12191  013398  6EDF               	movwf	indf2,c
 12192                           
 12193                           ;My_RTCC.c: 93: tm->hh = x_to_d(RTCVALL);
 12194  01339A  0100               	movlb	0	; () banked
 12195  01339C  EE20 F006          	lfsr	2,6
 12196  0133A0  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12197  0133A2  26D9               	addwf	fsr2l,f,c
 12198  0133A4  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12199  0133A6  22DA               	addwfc	fsr2h,f,c
 12200  0133A8  010F               	movlb	15	; () banked
 12201  0133AA  513A               	movf	58,w,b	;volatile
 12202  0133AC  EC2C  F0A3         	call	_x_to_d
 12203  0133B0  6EDF               	movwf	indf2,c
 12204                           
 12205                           ;My_RTCC.c: 94: tm->EE = x_to_d(RTCVALH);
 12206  0133B2  0100               	movlb	0	; () banked
 12207  0133B4  EE20 F007          	lfsr	2,7
 12208  0133B8  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12209  0133BA  26D9               	addwf	fsr2l,f,c
 12210  0133BC  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12211  0133BE  22DA               	addwfc	fsr2h,f,c
 12212  0133C0  010F               	movlb	15	; () banked
 12213  0133C2  513B               	movf	59,w,b	;volatile
 12214  0133C4  EC2C  F0A3         	call	_x_to_d
 12215  0133C8  6EDF               	movwf	indf2,c
 12216                           
 12217                           ;My_RTCC.c: 95: tm->ss = x_to_d(RTCVALL);
 12218  0133CA  0100               	movlb	0	; () banked
 12219  0133CC  EE20 F004          	lfsr	2,4
 12220  0133D0  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12221  0133D2  26D9               	addwf	fsr2l,f,c
 12222  0133D4  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12223  0133D6  22DA               	addwfc	fsr2h,f,c
 12224  0133D8  010F               	movlb	15	; () banked
 12225  0133DA  513A               	movf	58,w,b	;volatile
 12226  0133DC  EC2C  F0A3         	call	_x_to_d
 12227  0133E0  6EDF               	movwf	indf2,c
 12228                           
 12229                           ;My_RTCC.c: 96: tm->mm = x_to_d(RTCVALH);
 12230  0133E2  0100               	movlb	0	; () banked
 12231  0133E4  EE20 F005          	lfsr	2,5
 12232  0133E8  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12233  0133EA  26D9               	addwf	fsr2l,f,c
 12234  0133EC  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12235  0133EE  22DA               	addwfc	fsr2h,f,c
 12236  0133F0  010F               	movlb	15	; () banked
 12237  0133F2  513B               	movf	59,w,b	;volatile
 12238  0133F4  EC2C  F0A3         	call	_x_to_d
 12239  0133F8  6EDF               	movwf	indf2,c
 12240  0133FA  0012               	return		;funcret
 12241  0133FC                     __end_of_RTCC_to_caltime:
 12242                           	opt stack 0
 12243                           tblptru	equ	0xFF8
 12244                           tblptrh	equ	0xFF7
 12245                           tblptrl	equ	0xFF6
 12246                           tablat	equ	0xFF5
 12247                           prodh	equ	0xFF4
 12248                           prodl	equ	0xFF3
 12249                           intcon	equ	0xFF2
 12250                           intcon2	equ	0xFF1
 12251                           indf0	equ	0xFEF
 12252                           postinc0	equ	0xFEE
 12253                           fsr0h	equ	0xFEA
 12254                           fsr0l	equ	0xFE9
 12255                           wreg	equ	0xFE8
 12256                           indf1	equ	0xFE7
 12257                           postinc1	equ	0xFE6
 12258                           postdec1	equ	0xFE5
 12259                           fsr1h	equ	0xFE2
 12260                           fsr1l	equ	0xFE1
 12261                           indf2	equ	0xFDF
 12262                           postinc2	equ	0xFDE
 12263                           postdec2	equ	0xFDD
 12264                           plusw2	equ	0xFDB
 12265                           fsr2h	equ	0xFDA
 12266                           fsr2l	equ	0xFD9
 12267                           status	equ	0xFD8
 12268                           
 12269 ;; *************** function _x_to_d *****************
 12270 ;; Defined at:
 12271 ;;		line 45 in file "../My_library/My_RTCC.c"
 12272 ;; Parameters:    Size  Location     Type
 12273 ;;  hex             1    wreg     unsigned char 
 12274 ;; Auto vars:     Size  Location     Type
 12275 ;;  hex             1    1[BANK0 ] unsigned char 
 12276 ;; Return value:  Size  Location     Type
 12277 ;;                  1    wreg      unsigned char 
 12278 ;; Registers used:
 12279 ;;		wreg, status,2, status,0, prodl, prodh
 12280 ;; Tracked objects:
 12281 ;;		On entry : 0/0
 12282 ;;		On exit  : 0/0
 12283 ;;		Unchanged: 0/0
 12284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12286 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12287 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12288 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12289 ;;Total ram usage:        2 bytes
 12290 ;; Hardware stack levels used:    1
 12291 ;; Hardware stack levels required when called:   11
 12292 ;; This function calls:
 12293 ;;		Nothing
 12294 ;; This function is called by:
 12295 ;;		_RTCC_to_caltime
 12296 ;; This function uses a non-reentrant model
 12297 ;;
 12298                           
 12299                           	psect	text50
 12300  014658                     __ptext50:
 12301                           	opt stack 0
 12302  014658                     _x_to_d:
 12303                           	opt stack 12
 12304                           
 12305                           ;incstack = 0
 12306                           ;x_to_d@hex stored from wreg
 12307  014658  0100               	movlb	0	; () banked
 12308  01465A  6F61               	movwf	x_to_d@hex& (0+255),b
 12309                           
 12310                           ;My_RTCC.c: 46: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 12311  01465C  C061  F060         	movff	x_to_d@hex,??_x_to_d
 12312  014660  0E0F               	movlw	15
 12313  014662  0100               	movlb	0	; () banked
 12314  014664  1760               	andwf	??_x_to_d& (0+255),f,b
 12315  014666  0100               	movlb	0	; () banked
 12316  014668  3961               	swapf	x_to_d@hex& (0+255),w,b
 12317  01466A  0B0F               	andlw	15
 12318  01466C  0B0F               	andlw	15
 12319  01466E  0D0A               	mullw	10
 12320  014670  50F3               	movf	prodl,w,c
 12321  014672  0100               	movlb	0	; () banked
 12322  014674  2560               	addwf	??_x_to_d& (0+255),w,b
 12323  014676  0012               	return	
 12324  014678                     __end_of_x_to_d:
 12325                           	opt stack 0
 12326                           tblptru	equ	0xFF8
 12327                           tblptrh	equ	0xFF7
 12328                           tblptrl	equ	0xFF6
 12329                           tablat	equ	0xFF5
 12330                           prodh	equ	0xFF4
 12331                           prodl	equ	0xFF3
 12332                           intcon	equ	0xFF2
 12333                           intcon2	equ	0xFF1
 12334                           indf0	equ	0xFEF
 12335                           postinc0	equ	0xFEE
 12336                           fsr0h	equ	0xFEA
 12337                           fsr0l	equ	0xFE9
 12338                           wreg	equ	0xFE8
 12339                           indf1	equ	0xFE7
 12340                           postinc1	equ	0xFE6
 12341                           postdec1	equ	0xFE5
 12342                           fsr1h	equ	0xFE2
 12343                           fsr1l	equ	0xFE1
 12344                           indf2	equ	0xFDF
 12345                           postinc2	equ	0xFDE
 12346                           postdec2	equ	0xFDD
 12347                           plusw2	equ	0xFDB
 12348                           fsr2h	equ	0xFDA
 12349                           fsr2l	equ	0xFD9
 12350                           status	equ	0xFD8
 12351                           
 12352 ;; *************** function _RTCC_from_epoch *****************
 12353 ;; Defined at:
 12354 ;;		line 204 in file "../My_library/My_RTCC.c"
 12355 ;; Parameters:    Size  Location     Type
 12356 ;;  tm              2   59[BANK0 ] PTR struct .
 12357 ;;		 -> now(14), 
 12358 ;; Auto vars:     Size  Location     Type
 12359 ;;		None
 12360 ;; Return value:  Size  Location     Type
 12361 ;;		None               void
 12362 ;; Registers used:
 12363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12364 ;; Tracked objects:
 12365 ;;		On entry : 0/0
 12366 ;;		On exit  : 0/0
 12367 ;;		Unchanged: 0/0
 12368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12369 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12372 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12373 ;;Total ram usage:        2 bytes
 12374 ;; Hardware stack levels used:    1
 12375 ;; Hardware stack levels required when called:   14
 12376 ;; This function calls:
 12377 ;;		_caltime_to_RTCC
 12378 ;;		_epoch_to_caltime
 12379 ;; This function is called by:
 12380 ;;		_main
 12381 ;;		_RTCC_adjust_time_inc
 12382 ;;		_RTCC_adjust_time_dec
 12383 ;; This function uses a non-reentrant model
 12384 ;;
 12385                           
 12386                           	psect	text51
 12387  0146CA                     __ptext51:
 12388                           	opt stack 0
 12389  0146CA                     _RTCC_from_epoch:
 12390                           	opt stack 16
 12391                           
 12392                           ;My_RTCC.c: 205: epoch_to_caltime(tm);
 12393                           
 12394                           ; BSR set to: 0
 12395                           ;incstack = 0
 12396  0146CA  C09B  F08D         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
 12397  0146CE  C09C  F08E         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
 12398  0146D2  ECE3  F08C         	call	_epoch_to_caltime	;wreg free
 12399                           
 12400                           ;My_RTCC.c: 206: caltime_to_RTCC(tm);
 12401  0146D6  C09B  F076         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
 12402  0146DA  C09C  F077         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
 12403  0146DE  EC0D  F096         	call	_caltime_to_RTCC	;wreg free
 12404  0146E2  0012               	return		;funcret
 12405  0146E4                     __end_of_RTCC_from_epoch:
 12406                           	opt stack 0
 12407                           tblptru	equ	0xFF8
 12408                           tblptrh	equ	0xFF7
 12409                           tblptrl	equ	0xFF6
 12410                           tablat	equ	0xFF5
 12411                           prodh	equ	0xFF4
 12412                           prodl	equ	0xFF3
 12413                           intcon	equ	0xFF2
 12414                           intcon2	equ	0xFF1
 12415                           indf0	equ	0xFEF
 12416                           postinc0	equ	0xFEE
 12417                           fsr0h	equ	0xFEA
 12418                           fsr0l	equ	0xFE9
 12419                           wreg	equ	0xFE8
 12420                           indf1	equ	0xFE7
 12421                           postinc1	equ	0xFE6
 12422                           postdec1	equ	0xFE5
 12423                           fsr1h	equ	0xFE2
 12424                           fsr1l	equ	0xFE1
 12425                           indf2	equ	0xFDF
 12426                           postinc2	equ	0xFDE
 12427                           postdec2	equ	0xFDD
 12428                           plusw2	equ	0xFDB
 12429                           fsr2h	equ	0xFDA
 12430                           fsr2l	equ	0xFD9
 12431                           status	equ	0xFD8
 12432                           
 12433 ;; *************** function _epoch_to_caltime *****************
 12434 ;; Defined at:
 12435 ;;		line 119 in file "../My_library/My_RTCC.c"
 12436 ;; Parameters:    Size  Location     Type
 12437 ;;  tm              2   45[BANK0 ] PTR struct .
 12438 ;;		 -> now(14), 
 12439 ;; Auto vars:     Size  Location     Type
 12440 ;;  num             4   55[BANK0 ] unsigned long 
 12441 ;;  day             2   51[BANK0 ] unsigned int 
 12442 ;;  day_since_ep    2   49[BANK0 ] unsigned int 
 12443 ;;  month           1   54[BANK0 ] unsigned char 
 12444 ;;  year            1   53[BANK0 ] unsigned char 
 12445 ;; Return value:  Size  Location     Type
 12446 ;;		None               void
 12447 ;; Registers used:
 12448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12449 ;; Tracked objects:
 12450 ;;		On entry : 0/0
 12451 ;;		On exit  : 0/0
 12452 ;;		Unchanged: 0/0
 12453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12454 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12455 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12456 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12457 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12458 ;;Total ram usage:       14 bytes
 12459 ;; Hardware stack levels used:    1
 12460 ;; Hardware stack levels required when called:   13
 12461 ;; This function calls:
 12462 ;;		_get_quot_rem
 12463 ;;		_month_length
 12464 ;; This function is called by:
 12465 ;;		_RTCC_from_caltime
 12466 ;;		_RTCC_from_epoch
 12467 ;; This function uses a non-reentrant model
 12468 ;;
 12469                           
 12470                           	psect	text52
 12471  0119C6                     __ptext52:
 12472                           	opt stack 0
 12473  0119C6                     _epoch_to_caltime:
 12474                           	opt stack 12
 12475                           
 12476                           ;My_RTCC.c: 122: static uint16_t day_cache = 0;
 12477                           ;My_RTCC.c: 123: static uint8_t month_cache = 1;
 12478                           ;My_RTCC.c: 124: static uint8_t year_cache = 0;
 12479                           ;My_RTCC.c: 125: uint16_t day_since_epoch;
 12480                           ;My_RTCC.c: 126: uint16_t day;
 12481                           ;My_RTCC.c: 127: uint8_t year = 0;
 12482                           
 12483                           ;incstack = 0
 12484  0119C6  0E00               	movlw	0
 12485  0119C8  0100               	movlb	0	; () banked
 12486  0119CA  6F95               	movwf	epoch_to_caltime@year& (0+255),b
 12487                           
 12488                           ;My_RTCC.c: 128: uint8_t month = 1;
 12489  0119CC  0E01               	movlw	1
 12490  0119CE  0100               	movlb	0	; () banked
 12491  0119D0  6F96               	movwf	epoch_to_caltime@month& (0+255),b
 12492                           
 12493                           ; BSR set to: 0
 12494                           ;My_RTCC.c: 129: epoch_t num;
 12495                           ;My_RTCC.c: 131: num = tm->epoch;
 12496  0119D2  C08D  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 12497  0119D6  C08E  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 12498  0119DA  CFDE F097          	movff	postinc2,epoch_to_caltime@num
 12499  0119DE  CFDE F098          	movff	postinc2,epoch_to_caltime@num+1
 12500  0119E2  CFDE F099          	movff	postinc2,epoch_to_caltime@num+2
 12501  0119E6  CFDE F09A          	movff	postinc2,epoch_to_caltime@num+3
 12502                           
 12503                           ; BSR set to: 0
 12504                           ;My_RTCC.c: 132: tm->ss = get_quot_rem(&num, 60);
 12505  0119EA  0E97               	movlw	low epoch_to_caltime@num
 12506  0119EC  0100               	movlb	0	; () banked
 12507  0119EE  6F85               	movwf	get_quot_rem@quot& (0+255),b
 12508  0119F0  0E00               	movlw	high epoch_to_caltime@num
 12509  0119F2  0100               	movlb	0	; () banked
 12510  0119F4  6F86               	movwf	(get_quot_rem@quot+1)& (0+255),b
 12511  0119F6  0E3C               	movlw	60
 12512  0119F8  0100               	movlb	0	; () banked
 12513  0119FA  6F87               	movwf	get_quot_rem@div& (0+255),b
 12514  0119FC  ECE2  F096         	call	_get_quot_rem	;wreg free
 12515  011A00  0100               	movlb	0	; () banked
 12516  011A02  EE20 F004          	lfsr	2,4
 12517  011A06  518D               	movf	epoch_to_caltime@tm& (0+255),w,b
 12518  011A08  26D9               	addwf	fsr2l,f,c
 12519  011A0A  518E               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 12520  011A0C  22DA               	addwfc	fsr2h,f,c
 12521  011A0E  0100               	movlb	0	; () banked
 12522  011A10  C085  FFDF         	movff	?_get_quot_rem,indf2
 12523                           
 12524                           ; BSR set to: 0
 12525                           ;My_RTCC.c: 133: tm->mm = get_quot_rem(&num, 60);
 12526  011A14  0E97               	movlw	low epoch_to_caltime@num
 12527  011A16  0100               	movlb	0	; () banked
 12528  011A18  6F85               	movwf	get_quot_rem@quot& (0+255),b
 12529  011A1A  0E00               	movlw	high epoch_to_caltime@num
 12530  011A1C  0100               	movlb	0	; () banked
 12531  011A1E  6F86               	movwf	(get_quot_rem@quot+1)& (0+255),b
 12532  011A20  0E3C               	movlw	60
 12533  011A22  0100               	movlb	0	; () banked
 12534  011A24  6F87               	movwf	get_quot_rem@div& (0+255),b
 12535  011A26  ECE2  F096         	call	_get_quot_rem	;wreg free
 12536  011A2A  0100               	movlb	0	; () banked
 12537  011A2C  EE20 F005          	lfsr	2,5
 12538  011A30  518D               	movf	epoch_to_caltime@tm& (0+255),w,b
 12539  011A32  26D9               	addwf	fsr2l,f,c
 12540  011A34  518E               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 12541  011A36  22DA               	addwfc	fsr2h,f,c
 12542  011A38  0100               	movlb	0	; () banked
 12543  011A3A  C085  FFDF         	movff	?_get_quot_rem,indf2
 12544                           
 12545                           ; BSR set to: 0
 12546                           ;My_RTCC.c: 134: tm->hh = get_quot_rem(&num, 24);
 12547  011A3E  0E97               	movlw	low epoch_to_caltime@num
 12548  011A40  0100               	movlb	0	; () banked
 12549  011A42  6F85               	movwf	get_quot_rem@quot& (0+255),b
 12550  011A44  0E00               	movlw	high epoch_to_caltime@num
 12551  011A46  0100               	movlb	0	; () banked
 12552  011A48  6F86               	movwf	(get_quot_rem@quot+1)& (0+255),b
 12553  011A4A  0E18               	movlw	24
 12554  011A4C  0100               	movlb	0	; () banked
 12555  011A4E  6F87               	movwf	get_quot_rem@div& (0+255),b
 12556  011A50  ECE2  F096         	call	_get_quot_rem	;wreg free
 12557  011A54  0100               	movlb	0	; () banked
 12558  011A56  EE20 F006          	lfsr	2,6
 12559  011A5A  518D               	movf	epoch_to_caltime@tm& (0+255),w,b
 12560  011A5C  26D9               	addwf	fsr2l,f,c
 12561  011A5E  518E               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 12562  011A60  22DA               	addwfc	fsr2h,f,c
 12563  011A62  0100               	movlb	0	; () banked
 12564  011A64  C085  FFDF         	movff	?_get_quot_rem,indf2
 12565                           
 12566                           ; BSR set to: 0
 12567                           ;My_RTCC.c: 135: day = num;
 12568  011A68  C097  F093         	movff	epoch_to_caltime@num,epoch_to_caltime@day
 12569  011A6C  C098  F094         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
 12570                           
 12571                           ; BSR set to: 0
 12572                           ;My_RTCC.c: 136: day_since_epoch = day;
 12573  011A70  C093  F091         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
 12574  011A74  C094  F092         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
 12575                           
 12576                           ; BSR set to: 0
 12577                           ;My_RTCC.c: 138: num += 6;
 12578  011A78  0E06               	movlw	6
 12579  011A7A  0100               	movlb	0	; () banked
 12580  011A7C  2797               	addwf	epoch_to_caltime@num& (0+255),f,b
 12581  011A7E  0E00               	movlw	0
 12582  011A80  2398               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
 12583  011A82  2399               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
 12584  011A84  239A               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
 12585                           
 12586                           ; BSR set to: 0
 12587                           ;My_RTCC.c: 139: tm->EE = get_quot_rem(&num, 7);
 12588  011A86  0E97               	movlw	low epoch_to_caltime@num
 12589  011A88  0100               	movlb	0	; () banked
 12590  011A8A  6F85               	movwf	get_quot_rem@quot& (0+255),b
 12591  011A8C  0E00               	movlw	high epoch_to_caltime@num
 12592  011A8E  0100               	movlb	0	; () banked
 12593  011A90  6F86               	movwf	(get_quot_rem@quot+1)& (0+255),b
 12594  011A92  0E07               	movlw	7
 12595  011A94  0100               	movlb	0	; () banked
 12596  011A96  6F87               	movwf	get_quot_rem@div& (0+255),b
 12597  011A98  ECE2  F096         	call	_get_quot_rem	;wreg free
 12598  011A9C  0100               	movlb	0	; () banked
 12599  011A9E  EE20 F007          	lfsr	2,7
 12600  011AA2  518D               	movf	epoch_to_caltime@tm& (0+255),w,b
 12601  011AA4  26D9               	addwf	fsr2l,f,c
 12602  011AA6  518E               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 12603  011AA8  22DA               	addwfc	fsr2h,f,c
 12604  011AAA  0100               	movlb	0	; () banked
 12605  011AAC  C085  FFDF         	movff	?_get_quot_rem,indf2
 12606                           
 12607                           ;My_RTCC.c: 148: while (day >= month_length(year, month)) {
 12608  011AB0  D03F               	goto	l8557
 12609  011AB2                     l951:
 12610                           
 12611                           ; BSR set to: 0
 12612                           ;My_RTCC.c: 149: LATB2 = 1;
 12613  011AB2  848A               	bsf	3978,2,c	;volatile
 12614                           
 12615                           ; BSR set to: 0
 12616                           ;My_RTCC.c: 150: day = day - month_length(year, month);
 12617  011AB4  C096  F066         	movff	epoch_to_caltime@month,month_length@month
 12618  011AB8  0100               	movlb	0	; () banked
 12619  011ABA  5195               	movf	epoch_to_caltime@year& (0+255),w,b
 12620  011ABC  EC57  F094         	call	_month_length
 12621  011AC0  0100               	movlb	0	; () banked
 12622  011AC2  6F8F               	movwf	??_epoch_to_caltime& (0+255),b
 12623  011AC4  6B90               	clrf	(??_epoch_to_caltime+1)& (0+255),b
 12624  011AC6  0100               	movlb	0	; () banked
 12625  011AC8  1F8F               	comf	??_epoch_to_caltime& (0+255),f,b
 12626  011ACA  1F90               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 12627  011ACC  4B8F               	infsnz	??_epoch_to_caltime& (0+255),f,b
 12628  011ACE  2B90               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 12629  011AD0  0100               	movlb	0	; () banked
 12630  011AD2  5193               	movf	epoch_to_caltime@day& (0+255),w,b
 12631  011AD4  0100               	movlb	0	; () banked
 12632  011AD6  258F               	addwf	??_epoch_to_caltime& (0+255),w,b
 12633  011AD8  0100               	movlb	0	; () banked
 12634  011ADA  6F93               	movwf	epoch_to_caltime@day& (0+255),b
 12635  011ADC  0100               	movlb	0	; () banked
 12636  011ADE  5194               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
 12637  011AE0  0100               	movlb	0	; () banked
 12638  011AE2  2190               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 12639  011AE4  0100               	movlb	0	; () banked
 12640  011AE6  6F94               	movwf	(epoch_to_caltime@day+1)& (0+255),b
 12641                           
 12642                           ; BSR set to: 0
 12643                           ;My_RTCC.c: 151: if (month == 12) {
 12644  011AE8  0E0C               	movlw	12
 12645  011AEA  0100               	movlb	0	; () banked
 12646  011AEC  1996               	xorwf	epoch_to_caltime@month& (0+255),w,b
 12647  011AEE  A4D8               	btfss	status,2,c
 12648  011AF0  D019               	goto	l8551
 12649                           
 12650                           ; BSR set to: 0
 12651                           ;My_RTCC.c: 152: month = 1;
 12652  011AF2  0E01               	movlw	1
 12653  011AF4  0100               	movlb	0	; () banked
 12654  011AF6  6F96               	movwf	epoch_to_caltime@month& (0+255),b
 12655                           
 12656                           ; BSR set to: 0
 12657                           ;My_RTCC.c: 153: year++;
 12658  011AF8  0100               	movlb	0	; () banked
 12659  011AFA  2B95               	incf	epoch_to_caltime@year& (0+255),f,b
 12660                           
 12661                           ; BSR set to: 0
 12662                           ;My_RTCC.c: 155: if (year >= 100) {
 12663  011AFC  0E63               	movlw	99
 12664  011AFE  0100               	movlb	0	; () banked
 12665  011B00  6595               	cpfsgt	epoch_to_caltime@year& (0+255),b
 12666  011B02  D012               	goto	l8553
 12667                           
 12668                           ; BSR set to: 0
 12669                           ;My_RTCC.c: 156: tm->epoch -= 3155760000;
 12670  011B04  C08D  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 12671  011B08  C08E  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 12672  011B0C  0E80               	movlw	128
 12673  011B0E  5EDE               	subwf	postinc2,f,c
 12674  011B10  0E13               	movlw	19
 12675  011B12  5ADE               	subwfb	postinc2,f,c
 12676  011B14  0E19               	movlw	25
 12677  011B16  5ADE               	subwfb	postinc2,f,c
 12678  011B18  0EBC               	movlw	188
 12679  011B1A  5ADE               	subwfb	postinc2,f,c
 12680                           
 12681                           ; BSR set to: 0
 12682                           ;My_RTCC.c: 157: year = 0;
 12683  011B1C  0E00               	movlw	0
 12684  011B1E  0100               	movlb	0	; () banked
 12685  011B20  6F95               	movwf	epoch_to_caltime@year& (0+255),b
 12686                           
 12687                           ; BSR set to: 0
 12688                           ;My_RTCC.c: 158: }
 12689                           ;My_RTCC.c: 159: } else {
 12690  011B22  D002               	goto	l8553
 12691  011B24                     l8551:
 12692                           
 12693                           ; BSR set to: 0
 12694                           ;My_RTCC.c: 160: month++;
 12695  011B24  0100               	movlb	0	; () banked
 12696  011B26  2B96               	incf	epoch_to_caltime@month& (0+255),f,b
 12697  011B28                     l8553:
 12698                           
 12699                           ; BSR set to: 0
 12700                           ;My_RTCC.c: 161: }
 12701                           ;My_RTCC.c: 162: month_cache = month;
 12702  011B28  C096  F0FF         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
 12703                           
 12704                           ; BSR set to: 0
 12705                           ;My_RTCC.c: 163: year_cache = year;
 12706  011B2C  C095  F0F3         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
 12707  011B30                     l8557:
 12708                           
 12709                           ; BSR set to: 0
 12710  011B30  C096  F066         	movff	epoch_to_caltime@month,month_length@month
 12711  011B34  0100               	movlb	0	; () banked
 12712  011B36  5195               	movf	epoch_to_caltime@year& (0+255),w,b
 12713  011B38  EC57  F094         	call	_month_length
 12714  011B3C  0100               	movlb	0	; () banked
 12715  011B3E  6F8F               	movwf	??_epoch_to_caltime& (0+255),b
 12716  011B40  0100               	movlb	0	; () banked
 12717  011B42  518F               	movf	??_epoch_to_caltime& (0+255),w,b
 12718  011B44  0100               	movlb	0	; () banked
 12719  011B46  5D93               	subwf	epoch_to_caltime@day& (0+255),w,b
 12720  011B48  0E00               	movlw	0
 12721  011B4A  5994               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
 12722  011B4C  B0D8               	btfsc	status,0,c
 12723  011B4E  D7B1               	goto	l951
 12724                           
 12725                           ; BSR set to: 0
 12726                           ;My_RTCC.c: 164: }
 12727                           ;My_RTCC.c: 165: day_cache = day_since_epoch - day;
 12728                           
 12729                           ; BSR set to: 0
 12730  011B50  C093  F08F         	movff	epoch_to_caltime@day,??_epoch_to_caltime
 12731  011B54  C094  F090         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
 12732  011B58  0100               	movlb	0	; () banked
 12733  011B5A  1F8F               	comf	??_epoch_to_caltime& (0+255),f,b
 12734  011B5C  1F90               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 12735  011B5E  4B8F               	infsnz	??_epoch_to_caltime& (0+255),f,b
 12736  011B60  2B90               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 12737  011B62  0100               	movlb	0	; () banked
 12738  011B64  5191               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
 12739  011B66  0100               	movlb	0	; () banked
 12740  011B68  258F               	addwf	??_epoch_to_caltime& (0+255),w,b
 12741  011B6A  0101               	movlb	1	; () banked
 12742  011B6C  6F14               	movwf	epoch_to_caltime@day_cache& (0+255),b
 12743  011B6E  0100               	movlb	0	; () banked
 12744  011B70  5192               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
 12745  011B72  0100               	movlb	0	; () banked
 12746  011B74  2190               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 12747  011B76  0101               	movlb	1	; () banked
 12748  011B78  6F15               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
 12749                           
 12750                           ; BSR set to: 1
 12751                           ;My_RTCC.c: 166: day++;
 12752  011B7A  0100               	movlb	0	; () banked
 12753  011B7C  4B93               	infsnz	epoch_to_caltime@day& (0+255),f,b
 12754  011B7E  2B94               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
 12755                           
 12756                           ; BSR set to: 0
 12757                           ;My_RTCC.c: 168: tm->YY = year;
 12758  011B80  0100               	movlb	0	; () banked
 12759  011B82  EE20 F00A          	lfsr	2,10
 12760  011B86  518D               	movf	epoch_to_caltime@tm& (0+255),w,b
 12761  011B88  26D9               	addwf	fsr2l,f,c
 12762  011B8A  518E               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 12763  011B8C  22DA               	addwfc	fsr2h,f,c
 12764  011B8E  C095  FFDF         	movff	epoch_to_caltime@year,indf2
 12765                           
 12766                           ; BSR set to: 0
 12767                           ;My_RTCC.c: 169: tm->MM = month;
 12768  011B92  0100               	movlb	0	; () banked
 12769  011B94  EE20 F009          	lfsr	2,9
 12770  011B98  518D               	movf	epoch_to_caltime@tm& (0+255),w,b
 12771  011B9A  26D9               	addwf	fsr2l,f,c
 12772  011B9C  518E               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 12773  011B9E  22DA               	addwfc	fsr2h,f,c
 12774  011BA0  C096  FFDF         	movff	epoch_to_caltime@month,indf2
 12775                           
 12776                           ; BSR set to: 0
 12777                           ;My_RTCC.c: 170: tm->DD = day;
 12778  011BA4  0100               	movlb	0	; () banked
 12779  011BA6  EE20 F008          	lfsr	2,8
 12780  011BAA  518D               	movf	epoch_to_caltime@tm& (0+255),w,b
 12781  011BAC  26D9               	addwf	fsr2l,f,c
 12782  011BAE  518E               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 12783  011BB0  22DA               	addwfc	fsr2h,f,c
 12784  011BB2  C093  FFDF         	movff	epoch_to_caltime@day,indf2
 12785                           
 12786                           ; BSR set to: 0
 12787  011BB6  0012               	return		;funcret
 12788  011BB8                     __end_of_epoch_to_caltime:
 12789                           	opt stack 0
 12790                           tblptru	equ	0xFF8
 12791                           tblptrh	equ	0xFF7
 12792                           tblptrl	equ	0xFF6
 12793                           tablat	equ	0xFF5
 12794                           prodh	equ	0xFF4
 12795                           prodl	equ	0xFF3
 12796                           intcon	equ	0xFF2
 12797                           intcon2	equ	0xFF1
 12798                           indf0	equ	0xFEF
 12799                           postinc0	equ	0xFEE
 12800                           fsr0h	equ	0xFEA
 12801                           fsr0l	equ	0xFE9
 12802                           wreg	equ	0xFE8
 12803                           indf1	equ	0xFE7
 12804                           postinc1	equ	0xFE6
 12805                           postdec1	equ	0xFE5
 12806                           fsr1h	equ	0xFE2
 12807                           fsr1l	equ	0xFE1
 12808                           indf2	equ	0xFDF
 12809                           postinc2	equ	0xFDE
 12810                           postdec2	equ	0xFDD
 12811                           plusw2	equ	0xFDB
 12812                           fsr2h	equ	0xFDA
 12813                           fsr2l	equ	0xFD9
 12814                           status	equ	0xFD8
 12815                           
 12816 ;; *************** function _month_length *****************
 12817 ;; Defined at:
 12818 ;;		line 49 in file "../My_library/My_RTCC.c"
 12819 ;; Parameters:    Size  Location     Type
 12820 ;;  year            1    wreg     unsigned char 
 12821 ;;  month           1    6[BANK0 ] unsigned char 
 12822 ;; Auto vars:     Size  Location     Type
 12823 ;;  year            1   11[BANK0 ] unsigned char 
 12824 ;; Return value:  Size  Location     Type
 12825 ;;                  1    wreg      unsigned char 
 12826 ;; Registers used:
 12827 ;;		wreg, status,2, status,0, cstack
 12828 ;; Tracked objects:
 12829 ;;		On entry : 0/0
 12830 ;;		On exit  : 0/0
 12831 ;;		Unchanged: 0/0
 12832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12833 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12834 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12835 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12836 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12837 ;;Total ram usage:        6 bytes
 12838 ;; Hardware stack levels used:    1
 12839 ;; Hardware stack levels required when called:   12
 12840 ;; This function calls:
 12841 ;;		___awmod
 12842 ;; This function is called by:
 12843 ;;		_epoch_to_caltime
 12844 ;;		_caltime_to_epoch
 12845 ;;		_terminal_time
 12846 ;;		_RTCC_adjust_time_inc
 12847 ;;		_RTCC_adjust_time_dec
 12848 ;; This function uses a non-reentrant model
 12849 ;;
 12850                           
 12851                           	psect	text53
 12852  0128AE                     __ptext53:
 12853                           	opt stack 0
 12854  0128AE                     _month_length:
 12855                           	opt stack 11
 12856                           
 12857                           ; BSR set to: 0
 12858                           ;incstack = 0
 12859                           ;month_length@year stored from wreg
 12860  0128AE  0100               	movlb	0	; () banked
 12861  0128B0  6F6B               	movwf	month_length@year& (0+255),b
 12862                           
 12863                           ;My_RTCC.c: 50: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 12864  0128B2  0E02               	movlw	2
 12865  0128B4  0100               	movlb	0	; () banked
 12866  0128B6  1966               	xorwf	month_length@month& (0+255),w,b
 12867  0128B8  A4D8               	btfss	status,2,c
 12868  0128BA  D03E               	goto	l8287
 12869                           
 12870                           ; BSR set to: 0
 12871  0128BC  C06B  F060         	movff	month_length@year,___awmod@dividend
 12872  0128C0  0100               	movlb	0	; () banked
 12873  0128C2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12874  0128C4  0E00               	movlw	0
 12875  0128C6  0100               	movlb	0	; () banked
 12876  0128C8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12877  0128CA  0E64               	movlw	100
 12878  0128CC  6F62               	movwf	___awmod@divisor& (0+255),b
 12879  0128CE  ECC3  F09B         	call	___awmod	;wreg free
 12880  0128D2  0100               	movlb	0	; () banked
 12881  0128D4  5160               	movf	?___awmod& (0+255),w,b
 12882  0128D6  0100               	movlb	0	; () banked
 12883  0128D8  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 12884  0128DA  A4D8               	btfss	status,2,c
 12885  0128DC  D002               	goto	u8220
 12886  0128DE  0E01               	movlw	1
 12887  0128E0  D001               	goto	u8230
 12888  0128E2                     u8220:
 12889  0128E2  0E00               	movlw	0
 12890  0128E4                     u8230:
 12891  0128E4  0800               	sublw	0
 12892  0128E6  0100               	movlb	0	; () banked
 12893  0128E8  6F67               	movwf	??_month_length& (0+255),b
 12894  0128EA  C06B  F060         	movff	month_length@year,___awmod@dividend
 12895  0128EE  0100               	movlb	0	; () banked
 12896  0128F0  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12897  0128F2  0E01               	movlw	1
 12898  0128F4  0100               	movlb	0	; () banked
 12899  0128F6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12900  0128F8  0E90               	movlw	144
 12901  0128FA  6F62               	movwf	___awmod@divisor& (0+255),b
 12902  0128FC  ECC3  F09B         	call	___awmod	;wreg free
 12903  012900  0100               	movlb	0	; () banked
 12904  012902  5160               	movf	?___awmod& (0+255),w,b
 12905  012904  0100               	movlb	0	; () banked
 12906  012906  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 12907  012908  A4D8               	btfss	status,2,c
 12908  01290A  D004               	goto	u8240
 12909  01290C  0100               	movlb	0	; () banked
 12910  01290E  6B68               	clrf	(??_month_length+1)& (0+255),b
 12911  012910  2B68               	incf	(??_month_length+1)& (0+255),f,b
 12912  012912  D002               	goto	u8258
 12913  012914                     u8240:
 12914  012914  0100               	movlb	0	; () banked
 12915  012916  6B68               	clrf	(??_month_length+1)& (0+255),b
 12916  012918                     u8258:
 12917  012918  C06B  F069         	movff	month_length@year,??_month_length+2
 12918  01291C  0E03               	movlw	3
 12919  01291E  0100               	movlb	0	; () banked
 12920  012920  1769               	andwf	(??_month_length+2)& (0+255),f,b
 12921  012922  A4D8               	btfss	status,2,c
 12922  012924  D002               	goto	u8260
 12923  012926  0E01               	movlw	1
 12924  012928  D001               	goto	u8270
 12925  01292A                     u8260:
 12926  01292A  0E00               	movlw	0
 12927  01292C                     u8270:
 12928  01292C  0100               	movlb	0	; () banked
 12929  01292E  2568               	addwf	(??_month_length+1)& (0+255),w,b
 12930  012930  0100               	movlb	0	; () banked
 12931  012932  2567               	addwf	??_month_length& (0+255),w,b
 12932  012934  0F1C               	addlw	28
 12933                           
 12934                           ; BSR set to: 0
 12935                           
 12936                           ; BSR set to: 0
 12937  012936  0012               	return	
 12938  012938                     l8287:
 12939                           
 12940                           ; BSR set to: 0
 12941                           ;My_RTCC.c: 51: else return 31 - (((-(month & 1)^month)&13) == 4);
 12942  012938  0100               	movlb	0	; () banked
 12943  01293A  5166               	movf	month_length@month& (0+255),w,b
 12944  01293C  0B01               	andlw	1
 12945  01293E  0100               	movlb	0	; () banked
 12946  012940  6F67               	movwf	??_month_length& (0+255),b
 12947  012942  6B68               	clrf	(??_month_length+1)& (0+255),b
 12948  012944  0100               	movlb	0	; () banked
 12949  012946  1F67               	comf	??_month_length& (0+255),f,b
 12950  012948  1F68               	comf	(??_month_length+1)& (0+255),f,b
 12951  01294A  4B67               	infsnz	??_month_length& (0+255),f,b
 12952  01294C  2B68               	incf	(??_month_length+1)& (0+255),f,b
 12953  01294E  0100               	movlb	0	; () banked
 12954  012950  5166               	movf	month_length@month& (0+255),w,b
 12955  012952  0100               	movlb	0	; () banked
 12956  012954  6F69               	movwf	(??_month_length+2)& (0+255),b
 12957  012956  6B6A               	clrf	(??_month_length+3)& (0+255),b
 12958  012958  0100               	movlb	0	; () banked
 12959  01295A  5167               	movf	??_month_length& (0+255),w,b
 12960  01295C  0100               	movlb	0	; () banked
 12961  01295E  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 12962  012960  0100               	movlb	0	; () banked
 12963  012962  5168               	movf	(??_month_length+1)& (0+255),w,b
 12964  012964  0100               	movlb	0	; () banked
 12965  012966  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 12966  012968  0E0D               	movlw	13
 12967  01296A  0100               	movlb	0	; () banked
 12968  01296C  1769               	andwf	(??_month_length+2)& (0+255),f,b
 12969  01296E  0E00               	movlw	0
 12970  012970  176A               	andwf	(??_month_length+3)& (0+255),f,b
 12971  012972  0E04               	movlw	4
 12972  012974  0100               	movlb	0	; () banked
 12973  012976  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 12974  012978  0100               	movlb	0	; () banked
 12975  01297A  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 12976  01297C  A4D8               	btfss	status,2,c
 12977  01297E  D002               	goto	u8280
 12978  012980  0E01               	movlw	1
 12979  012982  D001               	goto	u8290
 12980  012984                     u8280:
 12981  012984  0E00               	movlw	0
 12982  012986                     u8290:
 12983  012986  0800               	sublw	0
 12984  012988  0F1F               	addlw	31
 12985                           
 12986                           ; BSR set to: 0
 12987  01298A  0012               	return	
 12988  01298C                     __end_of_month_length:
 12989                           	opt stack 0
 12990                           tblptru	equ	0xFF8
 12991                           tblptrh	equ	0xFF7
 12992                           tblptrl	equ	0xFF6
 12993                           tablat	equ	0xFF5
 12994                           prodh	equ	0xFF4
 12995                           prodl	equ	0xFF3
 12996                           intcon	equ	0xFF2
 12997                           intcon2	equ	0xFF1
 12998                           indf0	equ	0xFEF
 12999                           postinc0	equ	0xFEE
 13000                           fsr0h	equ	0xFEA
 13001                           fsr0l	equ	0xFE9
 13002                           wreg	equ	0xFE8
 13003                           indf1	equ	0xFE7
 13004                           postinc1	equ	0xFE6
 13005                           postdec1	equ	0xFE5
 13006                           fsr1h	equ	0xFE2
 13007                           fsr1l	equ	0xFE1
 13008                           indf2	equ	0xFDF
 13009                           postinc2	equ	0xFDE
 13010                           postdec2	equ	0xFDD
 13011                           plusw2	equ	0xFDB
 13012                           fsr2h	equ	0xFDA
 13013                           fsr2l	equ	0xFD9
 13014                           status	equ	0xFD8
 13015                           
 13016 ;; *************** function ___awmod *****************
 13017 ;; Defined at:
 13018 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 13019 ;; Parameters:    Size  Location     Type
 13020 ;;  dividend        2    0[BANK0 ] int 
 13021 ;;  divisor         2    2[BANK0 ] int 
 13022 ;; Auto vars:     Size  Location     Type
 13023 ;;  sign            1    5[BANK0 ] unsigned char 
 13024 ;;  counter         1    4[BANK0 ] unsigned char 
 13025 ;; Return value:  Size  Location     Type
 13026 ;;                  2    0[BANK0 ] int 
 13027 ;; Registers used:
 13028 ;;		wreg, status,2, status,0
 13029 ;; Tracked objects:
 13030 ;;		On entry : 0/0
 13031 ;;		On exit  : 0/0
 13032 ;;		Unchanged: 0/0
 13033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13034 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13035 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13037 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13038 ;;Total ram usage:        6 bytes
 13039 ;; Hardware stack levels used:    1
 13040 ;; Hardware stack levels required when called:   11
 13041 ;; This function calls:
 13042 ;;		Nothing
 13043 ;; This function is called by:
 13044 ;;		_month_length
 13045 ;; This function uses a non-reentrant model
 13046 ;;
 13047                           
 13048                           	psect	text54
 13049  013786                     __ptext54:
 13050                           	opt stack 0
 13051  013786                     ___awmod:
 13052                           	opt stack 11
 13053                           
 13054                           ; BSR set to: 0
 13055                           ;incstack = 0
 13056  013786  0E00               	movlw	0
 13057  013788  0100               	movlb	0	; () banked
 13058  01378A  6F65               	movwf	___awmod@sign& (0+255),b
 13059                           
 13060                           ; BSR set to: 0
 13061  01378C  0100               	movlb	0	; () banked
 13062  01378E  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 13063  013790  D008               	goto	l8235
 13064                           
 13065                           ; BSR set to: 0
 13066  013792  0100               	movlb	0	; () banked
 13067  013794  6D60               	negf	___awmod@dividend& (0+255),b
 13068  013796  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13069  013798  B0D8               	btfsc	status,0,c
 13070  01379A  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13071                           
 13072                           ; BSR set to: 0
 13073  01379C  0E01               	movlw	1
 13074  01379E  0100               	movlb	0	; () banked
 13075  0137A0  6F65               	movwf	___awmod@sign& (0+255),b
 13076  0137A2                     l8235:
 13077                           
 13078                           ; BSR set to: 0
 13079  0137A2  0100               	movlb	0	; () banked
 13080  0137A4  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13081  0137A6  D005               	goto	l8239
 13082                           
 13083                           ; BSR set to: 0
 13084  0137A8  0100               	movlb	0	; () banked
 13085  0137AA  6D62               	negf	___awmod@divisor& (0+255),b
 13086  0137AC  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 13087  0137AE  B0D8               	btfsc	status,0,c
 13088  0137B0  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 13089  0137B2                     l8239:
 13090                           
 13091                           ; BSR set to: 0
 13092  0137B2  0100               	movlb	0	; () banked
 13093  0137B4  5162               	movf	___awmod@divisor& (0+255),w,b
 13094  0137B6  0100               	movlb	0	; () banked
 13095  0137B8  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 13096  0137BA  B4D8               	btfsc	status,2,c
 13097  0137BC  D026               	goto	l8255
 13098                           
 13099                           ; BSR set to: 0
 13100  0137BE  0E01               	movlw	1
 13101  0137C0  0100               	movlb	0	; () banked
 13102  0137C2  6F64               	movwf	___awmod@counter& (0+255),b
 13103  0137C4  D006               	goto	l8245
 13104  0137C6                     l8243:
 13105                           
 13106                           ; BSR set to: 0
 13107  0137C6  0100               	movlb	0	; () banked
 13108  0137C8  90D8               	bcf	status,0,c
 13109  0137CA  3762               	rlcf	___awmod@divisor& (0+255),f,b
 13110  0137CC  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 13111  0137CE  0100               	movlb	0	; () banked
 13112  0137D0  2B64               	incf	___awmod@counter& (0+255),f,b
 13113  0137D2                     l8245:
 13114                           
 13115                           ; BSR set to: 0
 13116  0137D2  0100               	movlb	0	; () banked
 13117  0137D4  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13118  0137D6  D7F7               	goto	l8243
 13119  0137D8                     l8247:
 13120                           
 13121                           ; BSR set to: 0
 13122  0137D8  0100               	movlb	0	; () banked
 13123  0137DA  5162               	movf	___awmod@divisor& (0+255),w,b
 13124  0137DC  0100               	movlb	0	; () banked
 13125  0137DE  5D60               	subwf	___awmod@dividend& (0+255),w,b
 13126  0137E0  0100               	movlb	0	; () banked
 13127  0137E2  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13128  0137E4  0100               	movlb	0	; () banked
 13129  0137E6  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 13130  0137E8  A0D8               	btfss	status,0,c
 13131  0137EA  D008               	goto	l8251
 13132                           
 13133                           ; BSR set to: 0
 13134  0137EC  0100               	movlb	0	; () banked
 13135  0137EE  5162               	movf	___awmod@divisor& (0+255),w,b
 13136  0137F0  0100               	movlb	0	; () banked
 13137  0137F2  5F60               	subwf	___awmod@dividend& (0+255),f,b
 13138  0137F4  0100               	movlb	0	; () banked
 13139  0137F6  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13140  0137F8  0100               	movlb	0	; () banked
 13141  0137FA  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 13142  0137FC                     l8251:
 13143                           
 13144                           ; BSR set to: 0
 13145  0137FC  0100               	movlb	0	; () banked
 13146  0137FE  90D8               	bcf	status,0,c
 13147  013800  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 13148  013802  3362               	rrcf	___awmod@divisor& (0+255),f,b
 13149                           
 13150                           ; BSR set to: 0
 13151  013804  0100               	movlb	0	; () banked
 13152  013806  2F64               	decfsz	___awmod@counter& (0+255),f,b
 13153  013808  D7E7               	goto	l8247
 13154  01380A                     l8255:
 13155                           
 13156                           ; BSR set to: 0
 13157  01380A  0100               	movlb	0	; () banked
 13158  01380C  5165               	movf	___awmod@sign& (0+255),w,b
 13159  01380E  0100               	movlb	0	; () banked
 13160  013810  B4D8               	btfsc	status,2,c
 13161  013812  D005               	goto	l8259
 13162                           
 13163                           ; BSR set to: 0
 13164  013814  0100               	movlb	0	; () banked
 13165  013816  6D60               	negf	___awmod@dividend& (0+255),b
 13166  013818  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13167  01381A  B0D8               	btfsc	status,0,c
 13168  01381C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13169  01381E                     l8259:
 13170                           
 13171                           ; BSR set to: 0
 13172  01381E  C060  F060         	movff	___awmod@dividend,?___awmod
 13173  013822  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 13174  013826  0012               	return	
 13175  013828                     __end_of___awmod:
 13176                           	opt stack 0
 13177                           tblptru	equ	0xFF8
 13178                           tblptrh	equ	0xFF7
 13179                           tblptrl	equ	0xFF6
 13180                           tablat	equ	0xFF5
 13181                           prodh	equ	0xFF4
 13182                           prodl	equ	0xFF3
 13183                           intcon	equ	0xFF2
 13184                           intcon2	equ	0xFF1
 13185                           indf0	equ	0xFEF
 13186                           postinc0	equ	0xFEE
 13187                           fsr0h	equ	0xFEA
 13188                           fsr0l	equ	0xFE9
 13189                           wreg	equ	0xFE8
 13190                           indf1	equ	0xFE7
 13191                           postinc1	equ	0xFE6
 13192                           postdec1	equ	0xFE5
 13193                           fsr1h	equ	0xFE2
 13194                           fsr1l	equ	0xFE1
 13195                           indf2	equ	0xFDF
 13196                           postinc2	equ	0xFDE
 13197                           postdec2	equ	0xFDD
 13198                           plusw2	equ	0xFDB
 13199                           fsr2h	equ	0xFDA
 13200                           fsr2l	equ	0xFD9
 13201                           status	equ	0xFD8
 13202                           
 13203 ;; *************** function _get_quot_rem *****************
 13204 ;; Defined at:
 13205 ;;		line 74 in file "../My_library/My_RTCC.c"
 13206 ;; Parameters:    Size  Location     Type
 13207 ;;  quot            2   37[BANK0 ] PTR unsigned long 
 13208 ;;		 -> epoch_to_caltime@num(4), 
 13209 ;;  div             1   39[BANK0 ] unsigned char 
 13210 ;; Auto vars:     Size  Location     Type
 13211 ;;  num             4   41[BANK0 ] unsigned long 
 13212 ;; Return value:  Size  Location     Type
 13213 ;;                  4   37[BANK0 ] unsigned long 
 13214 ;; Registers used:
 13215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13216 ;; Tracked objects:
 13217 ;;		On entry : 0/0
 13218 ;;		On exit  : 0/0
 13219 ;;		Unchanged: 0/0
 13220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13221 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13222 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13224 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13225 ;;Total ram usage:        8 bytes
 13226 ;; Hardware stack levels used:    1
 13227 ;; Hardware stack levels required when called:   12
 13228 ;; This function calls:
 13229 ;;		___lldiv
 13230 ;;		___lmul
 13231 ;; This function is called by:
 13232 ;;		_epoch_to_caltime
 13233 ;; This function uses a non-reentrant model
 13234 ;;
 13235                           
 13236                           	psect	text55
 13237  012DC4                     __ptext55:
 13238                           	opt stack 0
 13239  012DC4                     _get_quot_rem:
 13240                           	opt stack 12
 13241                           
 13242                           ;My_RTCC.c: 77: epoch_t num = *quot;
 13243                           
 13244                           ; BSR set to: 0
 13245                           ;incstack = 0
 13246  012DC4  C085  FFD9         	movff	get_quot_rem@quot,fsr2l
 13247  012DC8  C086  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 13248  012DCC  CFDE F089          	movff	postinc2,get_quot_rem@num
 13249  012DD0  CFDE F08A          	movff	postinc2,get_quot_rem@num+1
 13250  012DD4  CFDE F08B          	movff	postinc2,get_quot_rem@num+2
 13251  012DD8  CFDE F08C          	movff	postinc2,get_quot_rem@num+3
 13252                           
 13253                           ;My_RTCC.c: 78: return num - (*quot = num / div) * div;
 13254  012DDC  0100               	movlb	0	; () banked
 13255  012DDE  5187               	movf	get_quot_rem@div& (0+255),w,b
 13256  012DE0  0100               	movlb	0	; () banked
 13257  012DE2  6F7C               	movwf	___lldiv@divisor& (0+255),b
 13258  012DE4  6B7D               	clrf	(___lldiv@divisor+1)& (0+255),b
 13259  012DE6  6B7E               	clrf	(___lldiv@divisor+2)& (0+255),b
 13260  012DE8  6B7F               	clrf	(___lldiv@divisor+3)& (0+255),b
 13261  012DEA  C089  F078         	movff	get_quot_rem@num,___lldiv@dividend
 13262  012DEE  C08A  F079         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 13263  012DF2  C08B  F07A         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 13264  012DF6  C08C  F07B         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 13265  012DFA  ECFE  F099         	call	___lldiv	;wreg free
 13266  012DFE  C085  FFD9         	movff	get_quot_rem@quot,fsr2l
 13267  012E02  C086  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 13268  012E06  0100               	movlb	0	; () banked
 13269  012E08  C078  FFDE         	movff	?___lldiv,postinc2
 13270  012E0C  0100               	movlb	0	; () banked
 13271  012E0E  C079  FFDE         	movff	?___lldiv+1,postinc2
 13272  012E12  0100               	movlb	0	; () banked
 13273  012E14  C07A  FFDE         	movff	?___lldiv+2,postinc2
 13274  012E18  0100               	movlb	0	; () banked
 13275  012E1A  C07B  FFDD         	movff	?___lldiv+3,postdec2
 13276  012E1E  52DD               	movf	postdec2,f,c
 13277  012E20  52DD               	movf	postdec2,f,c
 13278  012E22  CFDE F06C          	movff	postinc2,___lmul@multiplier
 13279  012E26  CFDE F06D          	movff	postinc2,___lmul@multiplier+1
 13280  012E2A  CFDE F06E          	movff	postinc2,___lmul@multiplier+2
 13281  012E2E  CFDE F06F          	movff	postinc2,___lmul@multiplier+3
 13282  012E32  0100               	movlb	0	; () banked
 13283  012E34  5187               	movf	get_quot_rem@div& (0+255),w,b
 13284  012E36  0100               	movlb	0	; () banked
 13285  012E38  6F70               	movwf	___lmul@multiplicand& (0+255),b
 13286  012E3A  6B71               	clrf	(___lmul@multiplicand+1)& (0+255),b
 13287  012E3C  6B72               	clrf	(___lmul@multiplicand+2)& (0+255),b
 13288  012E3E  6B73               	clrf	(___lmul@multiplicand+3)& (0+255),b
 13289  012E40  EC53  F09F         	call	___lmul	;wreg free
 13290  012E44  0100               	movlb	0	; () banked
 13291  012E46  1F6C               	comf	?___lmul& (0+255),f,b
 13292  012E48  0100               	movlb	0	; () banked
 13293  012E4A  1F6D               	comf	(?___lmul+1)& (0+255),f,b
 13294  012E4C  0100               	movlb	0	; () banked
 13295  012E4E  1F6E               	comf	(?___lmul+2)& (0+255),f,b
 13296  012E50  0100               	movlb	0	; () banked
 13297  012E52  1F6F               	comf	(?___lmul+3)& (0+255),f,b
 13298  012E54  0100               	movlb	0	; () banked
 13299  012E56  2B6C               	incf	?___lmul& (0+255),f,b
 13300  012E58  0E00               	movlw	0
 13301  012E5A  0100               	movlb	0	; () banked
 13302  012E5C  236D               	addwfc	(?___lmul+1)& (0+255),f,b
 13303  012E5E  0100               	movlb	0	; () banked
 13304  012E60  236E               	addwfc	(?___lmul+2)& (0+255),f,b
 13305  012E62  0100               	movlb	0	; () banked
 13306  012E64  236F               	addwfc	(?___lmul+3)& (0+255),f,b
 13307  012E66  0100               	movlb	0	; () banked
 13308  012E68  5189               	movf	get_quot_rem@num& (0+255),w,b
 13309  012E6A  0100               	movlb	0	; () banked
 13310  012E6C  256C               	addwf	?___lmul& (0+255),w,b
 13311  012E6E  0100               	movlb	0	; () banked
 13312  012E70  6F85               	movwf	?_get_quot_rem& (0+255),b
 13313  012E72  0100               	movlb	0	; () banked
 13314  012E74  518A               	movf	(get_quot_rem@num+1)& (0+255),w,b
 13315  012E76  0100               	movlb	0	; () banked
 13316  012E78  216D               	addwfc	(?___lmul+1)& (0+255),w,b
 13317  012E7A  0100               	movlb	0	; () banked
 13318  012E7C  6F86               	movwf	(?_get_quot_rem+1)& (0+255),b
 13319  012E7E  0100               	movlb	0	; () banked
 13320  012E80  518B               	movf	(get_quot_rem@num+2)& (0+255),w,b
 13321  012E82  0100               	movlb	0	; () banked
 13322  012E84  216E               	addwfc	(?___lmul+2)& (0+255),w,b
 13323  012E86  0100               	movlb	0	; () banked
 13324  012E88  6F87               	movwf	(?_get_quot_rem+2)& (0+255),b
 13325  012E8A  0100               	movlb	0	; () banked
 13326  012E8C  518C               	movf	(get_quot_rem@num+3)& (0+255),w,b
 13327  012E8E  0100               	movlb	0	; () banked
 13328  012E90  216F               	addwfc	(?___lmul+3)& (0+255),w,b
 13329  012E92  0100               	movlb	0	; () banked
 13330  012E94  6F88               	movwf	(?_get_quot_rem+3)& (0+255),b
 13331  012E96  0012               	return	
 13332  012E98                     __end_of_get_quot_rem:
 13333                           	opt stack 0
 13334                           tblptru	equ	0xFF8
 13335                           tblptrh	equ	0xFF7
 13336                           tblptrl	equ	0xFF6
 13337                           tablat	equ	0xFF5
 13338                           prodh	equ	0xFF4
 13339                           prodl	equ	0xFF3
 13340                           intcon	equ	0xFF2
 13341                           intcon2	equ	0xFF1
 13342                           indf0	equ	0xFEF
 13343                           postinc0	equ	0xFEE
 13344                           fsr0h	equ	0xFEA
 13345                           fsr0l	equ	0xFE9
 13346                           wreg	equ	0xFE8
 13347                           indf1	equ	0xFE7
 13348                           postinc1	equ	0xFE6
 13349                           postdec1	equ	0xFE5
 13350                           fsr1h	equ	0xFE2
 13351                           fsr1l	equ	0xFE1
 13352                           indf2	equ	0xFDF
 13353                           postinc2	equ	0xFDE
 13354                           postdec2	equ	0xFDD
 13355                           plusw2	equ	0xFDB
 13356                           fsr2h	equ	0xFDA
 13357                           fsr2l	equ	0xFD9
 13358                           status	equ	0xFD8
 13359                           
 13360 ;; *************** function ___lmul *****************
 13361 ;; Defined at:
 13362 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 13363 ;; Parameters:    Size  Location     Type
 13364 ;;  multiplier      4   12[BANK0 ] unsigned long 
 13365 ;;  multiplicand    4   16[BANK0 ] unsigned long 
 13366 ;; Auto vars:     Size  Location     Type
 13367 ;;  product         4   20[BANK0 ] unsigned long 
 13368 ;; Return value:  Size  Location     Type
 13369 ;;                  4   12[BANK0 ] unsigned long 
 13370 ;; Registers used:
 13371 ;;		wreg, status,2, status,0
 13372 ;; Tracked objects:
 13373 ;;		On entry : 0/0
 13374 ;;		On exit  : 0/0
 13375 ;;		Unchanged: 0/0
 13376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13377 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13378 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13380 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13381 ;;Total ram usage:       12 bytes
 13382 ;; Hardware stack levels used:    1
 13383 ;; Hardware stack levels required when called:   11
 13384 ;; This function calls:
 13385 ;;		Nothing
 13386 ;; This function is called by:
 13387 ;;		_get_quot_rem
 13388 ;;		_caltime_to_epoch
 13389 ;;		_light_loop
 13390 ;;		_RTCC_adjust_time_inc
 13391 ;;		_RTCC_adjust_time_dec
 13392 ;; This function uses a non-reentrant model
 13393 ;;
 13394                           
 13395                           	psect	text56
 13396  013EA6                     __ptext56:
 13397                           	opt stack 0
 13398  013EA6                     ___lmul:
 13399                           	opt stack 12
 13400                           
 13401                           ; BSR set to: 0
 13402                           ;incstack = 0
 13403  013EA6  0E00               	movlw	0
 13404  013EA8  0100               	movlb	0	; () banked
 13405  013EAA  6F74               	movwf	___lmul@product& (0+255),b
 13406  013EAC  0E00               	movlw	0
 13407  013EAE  6F75               	movwf	(___lmul@product+1)& (0+255),b
 13408  013EB0  0E00               	movlw	0
 13409  013EB2  6F76               	movwf	(___lmul@product+2)& (0+255),b
 13410  013EB4  0E00               	movlw	0
 13411  013EB6  6F77               	movwf	(___lmul@product+3)& (0+255),b
 13412  013EB8                     l8293:
 13413                           
 13414                           ; BSR set to: 0
 13415  013EB8  0100               	movlb	0	; () banked
 13416  013EBA  A16C               	btfss	___lmul@multiplier& (0+255),0,b
 13417  013EBC  D010               	goto	l8297
 13418                           
 13419                           ; BSR set to: 0
 13420  013EBE  0100               	movlb	0	; () banked
 13421  013EC0  5170               	movf	___lmul@multiplicand& (0+255),w,b
 13422  013EC2  0100               	movlb	0	; () banked
 13423  013EC4  2774               	addwf	___lmul@product& (0+255),f,b
 13424  013EC6  0100               	movlb	0	; () banked
 13425  013EC8  5171               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 13426  013ECA  0100               	movlb	0	; () banked
 13427  013ECC  2375               	addwfc	(___lmul@product+1)& (0+255),f,b
 13428  013ECE  0100               	movlb	0	; () banked
 13429  013ED0  5172               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 13430  013ED2  0100               	movlb	0	; () banked
 13431  013ED4  2376               	addwfc	(___lmul@product+2)& (0+255),f,b
 13432  013ED6  0100               	movlb	0	; () banked
 13433  013ED8  5173               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 13434  013EDA  0100               	movlb	0	; () banked
 13435  013EDC  2377               	addwfc	(___lmul@product+3)& (0+255),f,b
 13436  013EDE                     l8297:
 13437                           
 13438                           ; BSR set to: 0
 13439  013EDE  0100               	movlb	0	; () banked
 13440  013EE0  90D8               	bcf	status,0,c
 13441  013EE2  3770               	rlcf	___lmul@multiplicand& (0+255),f,b
 13442  013EE4  3771               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 13443  013EE6  3772               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 13444  013EE8  3773               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 13445                           
 13446                           ; BSR set to: 0
 13447  013EEA  0100               	movlb	0	; () banked
 13448  013EEC  90D8               	bcf	status,0,c
 13449  013EEE  336F               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 13450  013EF0  336E               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 13451  013EF2  336D               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 13452  013EF4  336C               	rrcf	___lmul@multiplier& (0+255),f,b
 13453  013EF6  0100               	movlb	0	; () banked
 13454  013EF8  516C               	movf	___lmul@multiplier& (0+255),w,b
 13455  013EFA  0100               	movlb	0	; () banked
 13456  013EFC  116D               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 13457  013EFE  0100               	movlb	0	; () banked
 13458  013F00  116E               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 13459  013F02  0100               	movlb	0	; () banked
 13460  013F04  116F               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 13461  013F06  A4D8               	btfss	status,2,c
 13462  013F08  D7D7               	goto	l8293
 13463                           
 13464                           ; BSR set to: 0
 13465  013F0A  C074  F06C         	movff	___lmul@product,?___lmul
 13466  013F0E  C075  F06D         	movff	___lmul@product+1,?___lmul+1
 13467  013F12  C076  F06E         	movff	___lmul@product+2,?___lmul+2
 13468  013F16  C077  F06F         	movff	___lmul@product+3,?___lmul+3
 13469                           
 13470                           ; BSR set to: 0
 13471  013F1A  0012               	return		;funcret
 13472  013F1C                     __end_of___lmul:
 13473                           	opt stack 0
 13474                           tblptru	equ	0xFF8
 13475                           tblptrh	equ	0xFF7
 13476                           tblptrl	equ	0xFF6
 13477                           tablat	equ	0xFF5
 13478                           prodh	equ	0xFF4
 13479                           prodl	equ	0xFF3
 13480                           intcon	equ	0xFF2
 13481                           intcon2	equ	0xFF1
 13482                           indf0	equ	0xFEF
 13483                           postinc0	equ	0xFEE
 13484                           fsr0h	equ	0xFEA
 13485                           fsr0l	equ	0xFE9
 13486                           wreg	equ	0xFE8
 13487                           indf1	equ	0xFE7
 13488                           postinc1	equ	0xFE6
 13489                           postdec1	equ	0xFE5
 13490                           fsr1h	equ	0xFE2
 13491                           fsr1l	equ	0xFE1
 13492                           indf2	equ	0xFDF
 13493                           postinc2	equ	0xFDE
 13494                           postdec2	equ	0xFDD
 13495                           plusw2	equ	0xFDB
 13496                           fsr2h	equ	0xFDA
 13497                           fsr2l	equ	0xFD9
 13498                           status	equ	0xFD8
 13499                           
 13500 ;; *************** function ___lldiv *****************
 13501 ;; Defined at:
 13502 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 13503 ;; Parameters:    Size  Location     Type
 13504 ;;  dividend        4   24[BANK0 ] unsigned long 
 13505 ;;  divisor         4   28[BANK0 ] unsigned long 
 13506 ;; Auto vars:     Size  Location     Type
 13507 ;;  quotient        4   32[BANK0 ] unsigned long 
 13508 ;;  counter         1   36[BANK0 ] unsigned char 
 13509 ;; Return value:  Size  Location     Type
 13510 ;;                  4   24[BANK0 ] unsigned long 
 13511 ;; Registers used:
 13512 ;;		wreg, status,2, status,0
 13513 ;; Tracked objects:
 13514 ;;		On entry : 0/0
 13515 ;;		On exit  : 0/0
 13516 ;;		Unchanged: 0/0
 13517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13518 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13519 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13521 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13522 ;;Total ram usage:       13 bytes
 13523 ;; Hardware stack levels used:    1
 13524 ;; Hardware stack levels required when called:   11
 13525 ;; This function calls:
 13526 ;;		Nothing
 13527 ;; This function is called by:
 13528 ;;		_get_quot_rem
 13529 ;;		_light_loop
 13530 ;;		_CTMU_read
 13531 ;; This function uses a non-reentrant model
 13532 ;;
 13533                           
 13534                           	psect	text57
 13535  0133FC                     __ptext57:
 13536                           	opt stack 0
 13537  0133FC                     ___lldiv:
 13538                           	opt stack 12
 13539                           
 13540                           ; BSR set to: 0
 13541                           ;incstack = 0
 13542  0133FC  0E00               	movlw	0
 13543  0133FE  0100               	movlb	0	; () banked
 13544  013400  6F80               	movwf	___lldiv@quotient& (0+255),b
 13545  013402  0E00               	movlw	0
 13546  013404  6F81               	movwf	(___lldiv@quotient+1)& (0+255),b
 13547  013406  0E00               	movlw	0
 13548  013408  6F82               	movwf	(___lldiv@quotient+2)& (0+255),b
 13549  01340A  0E00               	movlw	0
 13550  01340C  6F83               	movwf	(___lldiv@quotient+3)& (0+255),b
 13551                           
 13552                           ; BSR set to: 0
 13553  01340E  0100               	movlb	0	; () banked
 13554  013410  517C               	movf	___lldiv@divisor& (0+255),w,b
 13555  013412  0100               	movlb	0	; () banked
 13556  013414  117D               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 13557  013416  0100               	movlb	0	; () banked
 13558  013418  117E               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 13559  01341A  0100               	movlb	0	; () banked
 13560  01341C  117F               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 13561  01341E  B4D8               	btfsc	status,2,c
 13562  013420  D042               	goto	l1894
 13563                           
 13564                           ; BSR set to: 0
 13565  013422  0E01               	movlw	1
 13566  013424  0100               	movlb	0	; () banked
 13567  013426  6F84               	movwf	___lldiv@counter& (0+255),b
 13568  013428  D008               	goto	l8353
 13569  01342A                     l8351:
 13570                           
 13571                           ; BSR set to: 0
 13572  01342A  0100               	movlb	0	; () banked
 13573  01342C  90D8               	bcf	status,0,c
 13574  01342E  377C               	rlcf	___lldiv@divisor& (0+255),f,b
 13575  013430  377D               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 13576  013432  377E               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 13577  013434  377F               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 13578  013436  0100               	movlb	0	; () banked
 13579  013438  2B84               	incf	___lldiv@counter& (0+255),f,b
 13580  01343A                     l8353:
 13581                           
 13582                           ; BSR set to: 0
 13583  01343A  0100               	movlb	0	; () banked
 13584  01343C  AF7F               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 13585  01343E  D7F5               	goto	l8351
 13586  013440                     l8355:
 13587                           
 13588                           ; BSR set to: 0
 13589  013440  0100               	movlb	0	; () banked
 13590  013442  90D8               	bcf	status,0,c
 13591  013444  3780               	rlcf	___lldiv@quotient& (0+255),f,b
 13592  013446  3781               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 13593  013448  3782               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 13594  01344A  3783               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 13595                           
 13596                           ; BSR set to: 0
 13597  01344C  0100               	movlb	0	; () banked
 13598  01344E  517C               	movf	___lldiv@divisor& (0+255),w,b
 13599  013450  0100               	movlb	0	; () banked
 13600  013452  5D78               	subwf	___lldiv@dividend& (0+255),w,b
 13601  013454  0100               	movlb	0	; () banked
 13602  013456  517D               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13603  013458  0100               	movlb	0	; () banked
 13604  01345A  5979               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 13605  01345C  0100               	movlb	0	; () banked
 13606  01345E  517E               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13607  013460  0100               	movlb	0	; () banked
 13608  013462  597A               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 13609  013464  0100               	movlb	0	; () banked
 13610  013466  517F               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13611  013468  0100               	movlb	0	; () banked
 13612  01346A  597B               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 13613  01346C  A0D8               	btfss	status,0,c
 13614  01346E  D012               	goto	l8363
 13615                           
 13616                           ; BSR set to: 0
 13617  013470  0100               	movlb	0	; () banked
 13618  013472  517C               	movf	___lldiv@divisor& (0+255),w,b
 13619  013474  0100               	movlb	0	; () banked
 13620  013476  5F78               	subwf	___lldiv@dividend& (0+255),f,b
 13621  013478  0100               	movlb	0	; () banked
 13622  01347A  517D               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13623  01347C  0100               	movlb	0	; () banked
 13624  01347E  5B79               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 13625  013480  0100               	movlb	0	; () banked
 13626  013482  517E               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13627  013484  0100               	movlb	0	; () banked
 13628  013486  5B7A               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 13629  013488  0100               	movlb	0	; () banked
 13630  01348A  517F               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13631  01348C  0100               	movlb	0	; () banked
 13632  01348E  5B7B               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 13633                           
 13634                           ; BSR set to: 0
 13635  013490  0100               	movlb	0	; () banked
 13636  013492  8180               	bsf	___lldiv@quotient& (0+255),0,b
 13637  013494                     l8363:
 13638                           
 13639                           ; BSR set to: 0
 13640  013494  0100               	movlb	0	; () banked
 13641  013496  90D8               	bcf	status,0,c
 13642  013498  337F               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 13643  01349A  337E               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 13644  01349C  337D               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 13645  01349E  337C               	rrcf	___lldiv@divisor& (0+255),f,b
 13646                           
 13647                           ; BSR set to: 0
 13648  0134A0  0100               	movlb	0	; () banked
 13649  0134A2  2F84               	decfsz	___lldiv@counter& (0+255),f,b
 13650  0134A4  D7CD               	goto	l8355
 13651  0134A6                     l1894:
 13652                           
 13653                           ; BSR set to: 0
 13654  0134A6  C080  F078         	movff	___lldiv@quotient,?___lldiv
 13655  0134AA  C081  F079         	movff	___lldiv@quotient+1,?___lldiv+1
 13656  0134AE  C082  F07A         	movff	___lldiv@quotient+2,?___lldiv+2
 13657  0134B2  C083  F07B         	movff	___lldiv@quotient+3,?___lldiv+3
 13658                           
 13659                           ; BSR set to: 0
 13660  0134B6  0012               	return		;funcret
 13661  0134B8                     __end_of___lldiv:
 13662                           	opt stack 0
 13663                           tblptru	equ	0xFF8
 13664                           tblptrh	equ	0xFF7
 13665                           tblptrl	equ	0xFF6
 13666                           tablat	equ	0xFF5
 13667                           prodh	equ	0xFF4
 13668                           prodl	equ	0xFF3
 13669                           intcon	equ	0xFF2
 13670                           intcon2	equ	0xFF1
 13671                           indf0	equ	0xFEF
 13672                           postinc0	equ	0xFEE
 13673                           fsr0h	equ	0xFEA
 13674                           fsr0l	equ	0xFE9
 13675                           wreg	equ	0xFE8
 13676                           indf1	equ	0xFE7
 13677                           postinc1	equ	0xFE6
 13678                           postdec1	equ	0xFE5
 13679                           fsr1h	equ	0xFE2
 13680                           fsr1l	equ	0xFE1
 13681                           indf2	equ	0xFDF
 13682                           postinc2	equ	0xFDE
 13683                           postdec2	equ	0xFDD
 13684                           plusw2	equ	0xFDB
 13685                           fsr2h	equ	0xFDA
 13686                           fsr2l	equ	0xFD9
 13687                           status	equ	0xFD8
 13688                           
 13689 ;; *************** function _caltime_to_RTCC *****************
 13690 ;; Defined at:
 13691 ;;		line 99 in file "../My_library/My_RTCC.c"
 13692 ;; Parameters:    Size  Location     Type
 13693 ;;  tm              2   22[BANK0 ] PTR struct .
 13694 ;;		 -> now(14), 
 13695 ;; Auto vars:     Size  Location     Type
 13696 ;;		None
 13697 ;; Return value:  Size  Location     Type
 13698 ;;		None               void
 13699 ;; Registers used:
 13700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13701 ;; Tracked objects:
 13702 ;;		On entry : 0/0
 13703 ;;		On exit  : 0/0
 13704 ;;		Unchanged: 0/0
 13705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13706 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13709 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13710 ;;Total ram usage:        2 bytes
 13711 ;; Hardware stack levels used:    1
 13712 ;; Hardware stack levels required when called:   13
 13713 ;; This function calls:
 13714 ;;		_d_to_x
 13715 ;; This function is called by:
 13716 ;;		_RTCC_from_caltime
 13717 ;;		_RTCC_from_epoch
 13718 ;; This function uses a non-reentrant model
 13719 ;;
 13720                           
 13721                           	psect	text58
 13722  012C1A                     __ptext58:
 13723                           	opt stack 0
 13724  012C1A                     _caltime_to_RTCC:
 13725                           	opt stack 12
 13726  012C1A                     l938:
 13727  012C1A  010F               	movlb	15	; () banked
 13728  012C1C  B93F               	btfsc	63,4,b	;volatile
 13729  012C1E  D7FD               	goto	l938
 13730                           
 13731                           ; BSR set to: 15
 13732                           ;My_RTCC.c: 101: RTCCFGbits.RTCPTR0 = 1;
 13733  012C20  010F               	movlb	15	; () banked
 13734  012C22  813F               	bsf	63,0,b	;volatile
 13735                           
 13736                           ;My_RTCC.c: 102: RTCCFGbits.RTCPTR1 = 1;
 13737  012C24  010F               	movlb	15	; () banked
 13738  012C26  833F               	bsf	63,1,b	;volatile
 13739                           
 13740                           ; BSR set to: 15
 13741                           ;My_RTCC.c: 103: RTCVALL = d_to_x(tm->YY);
 13742  012C28  0100               	movlb	0	; () banked
 13743  012C2A  EE20 F00A          	lfsr	2,10
 13744  012C2E  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
 13745  012C30  26D9               	addwf	fsr2l,f,c
 13746  012C32  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 13747  012C34  22DA               	addwfc	fsr2h,f,c
 13748  012C36  50DF               	movf	indf2,w,c
 13749  012C38  ECD1  F0A2         	call	_d_to_x
 13750  012C3C  010F               	movlb	15	; () banked
 13751  012C3E  6F3A               	movwf	58,b	;volatile
 13752                           
 13753                           ; BSR set to: 15
 13754                           ;My_RTCC.c: 104: RTCVALH = 0x00;
 13755  012C40  0E00               	movlw	0
 13756  012C42  010F               	movlb	15	; () banked
 13757  012C44  6F3B               	movwf	59,b	;volatile
 13758                           
 13759                           ; BSR set to: 15
 13760                           ;My_RTCC.c: 105: RTCCFGbits.RTCPTR0 = 0;
 13761  012C46  010F               	movlb	15	; () banked
 13762  012C48  913F               	bcf	63,0,b	;volatile
 13763                           
 13764                           ; BSR set to: 15
 13765                           ;My_RTCC.c: 106: RTCCFGbits.RTCPTR1 = 1;
 13766  012C4A  010F               	movlb	15	; () banked
 13767  012C4C  833F               	bsf	63,1,b	;volatile
 13768                           
 13769                           ; BSR set to: 15
 13770                           ;My_RTCC.c: 107: RTCVALL = d_to_x(tm->DD);
 13771  012C4E  0100               	movlb	0	; () banked
 13772  012C50  EE20 F008          	lfsr	2,8
 13773  012C54  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
 13774  012C56  26D9               	addwf	fsr2l,f,c
 13775  012C58  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 13776  012C5A  22DA               	addwfc	fsr2h,f,c
 13777  012C5C  50DF               	movf	indf2,w,c
 13778  012C5E  ECD1  F0A2         	call	_d_to_x
 13779  012C62  010F               	movlb	15	; () banked
 13780  012C64  6F3A               	movwf	58,b	;volatile
 13781                           
 13782                           ; BSR set to: 15
 13783                           ;My_RTCC.c: 108: RTCVALH = d_to_x(tm->MM);
 13784  012C66  0100               	movlb	0	; () banked
 13785  012C68  EE20 F009          	lfsr	2,9
 13786  012C6C  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
 13787  012C6E  26D9               	addwf	fsr2l,f,c
 13788  012C70  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 13789  012C72  22DA               	addwfc	fsr2h,f,c
 13790  012C74  50DF               	movf	indf2,w,c
 13791  012C76  ECD1  F0A2         	call	_d_to_x
 13792  012C7A  010F               	movlb	15	; () banked
 13793  012C7C  6F3B               	movwf	59,b	;volatile
 13794                           
 13795                           ; BSR set to: 15
 13796                           ;My_RTCC.c: 109: RTCCFGbits.RTCPTR0 = 1;
 13797  012C7E  010F               	movlb	15	; () banked
 13798  012C80  813F               	bsf	63,0,b	;volatile
 13799                           
 13800                           ; BSR set to: 15
 13801                           ;My_RTCC.c: 110: RTCCFGbits.RTCPTR1 = 0;
 13802  012C82  010F               	movlb	15	; () banked
 13803  012C84  933F               	bcf	63,1,b	;volatile
 13804                           
 13805                           ; BSR set to: 15
 13806                           ;My_RTCC.c: 111: RTCVALL = d_to_x(tm->hh);
 13807  012C86  0100               	movlb	0	; () banked
 13808  012C88  EE20 F006          	lfsr	2,6
 13809  012C8C  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
 13810  012C8E  26D9               	addwf	fsr2l,f,c
 13811  012C90  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 13812  012C92  22DA               	addwfc	fsr2h,f,c
 13813  012C94  50DF               	movf	indf2,w,c
 13814  012C96  ECD1  F0A2         	call	_d_to_x
 13815  012C9A  010F               	movlb	15	; () banked
 13816  012C9C  6F3A               	movwf	58,b	;volatile
 13817                           
 13818                           ; BSR set to: 15
 13819                           ;My_RTCC.c: 112: RTCVALH = d_to_x(tm->EE);
 13820  012C9E  0100               	movlb	0	; () banked
 13821  012CA0  EE20 F007          	lfsr	2,7
 13822  012CA4  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
 13823  012CA6  26D9               	addwf	fsr2l,f,c
 13824  012CA8  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 13825  012CAA  22DA               	addwfc	fsr2h,f,c
 13826  012CAC  50DF               	movf	indf2,w,c
 13827  012CAE  ECD1  F0A2         	call	_d_to_x
 13828  012CB2  010F               	movlb	15	; () banked
 13829  012CB4  6F3B               	movwf	59,b	;volatile
 13830                           
 13831                           ; BSR set to: 15
 13832                           ;My_RTCC.c: 113: RTCCFGbits.RTCPTR0 = 0;
 13833  012CB6  010F               	movlb	15	; () banked
 13834  012CB8  913F               	bcf	63,0,b	;volatile
 13835                           
 13836                           ; BSR set to: 15
 13837                           ;My_RTCC.c: 114: RTCCFGbits.RTCPTR1 = 0;
 13838  012CBA  010F               	movlb	15	; () banked
 13839  012CBC  933F               	bcf	63,1,b	;volatile
 13840                           
 13841                           ; BSR set to: 15
 13842                           ;My_RTCC.c: 115: RTCVALL = d_to_x(tm->ss);
 13843  012CBE  0100               	movlb	0	; () banked
 13844  012CC0  EE20 F004          	lfsr	2,4
 13845  012CC4  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
 13846  012CC6  26D9               	addwf	fsr2l,f,c
 13847  012CC8  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 13848  012CCA  22DA               	addwfc	fsr2h,f,c
 13849  012CCC  50DF               	movf	indf2,w,c
 13850  012CCE  ECD1  F0A2         	call	_d_to_x
 13851  012CD2  010F               	movlb	15	; () banked
 13852  012CD4  6F3A               	movwf	58,b	;volatile
 13853                           
 13854                           ; BSR set to: 15
 13855                           ;My_RTCC.c: 116: RTCVALH = d_to_x(tm->mm);
 13856  012CD6  0100               	movlb	0	; () banked
 13857  012CD8  EE20 F005          	lfsr	2,5
 13858  012CDC  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
 13859  012CDE  26D9               	addwf	fsr2l,f,c
 13860  012CE0  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 13861  012CE2  22DA               	addwfc	fsr2h,f,c
 13862  012CE4  50DF               	movf	indf2,w,c
 13863  012CE6  ECD1  F0A2         	call	_d_to_x
 13864  012CEA  010F               	movlb	15	; () banked
 13865  012CEC  6F3B               	movwf	59,b	;volatile
 13866                           
 13867                           ; BSR set to: 15
 13868  012CEE  0012               	return		;funcret
 13869  012CF0                     __end_of_caltime_to_RTCC:
 13870                           	opt stack 0
 13871                           tblptru	equ	0xFF8
 13872                           tblptrh	equ	0xFF7
 13873                           tblptrl	equ	0xFF6
 13874                           tablat	equ	0xFF5
 13875                           prodh	equ	0xFF4
 13876                           prodl	equ	0xFF3
 13877                           intcon	equ	0xFF2
 13878                           intcon2	equ	0xFF1
 13879                           indf0	equ	0xFEF
 13880                           postinc0	equ	0xFEE
 13881                           fsr0h	equ	0xFEA
 13882                           fsr0l	equ	0xFE9
 13883                           wreg	equ	0xFE8
 13884                           indf1	equ	0xFE7
 13885                           postinc1	equ	0xFE6
 13886                           postdec1	equ	0xFE5
 13887                           fsr1h	equ	0xFE2
 13888                           fsr1l	equ	0xFE1
 13889                           indf2	equ	0xFDF
 13890                           postinc2	equ	0xFDE
 13891                           postdec2	equ	0xFDD
 13892                           plusw2	equ	0xFDB
 13893                           fsr2h	equ	0xFDA
 13894                           fsr2l	equ	0xFD9
 13895                           status	equ	0xFD8
 13896                           
 13897 ;; *************** function _d_to_x *****************
 13898 ;; Defined at:
 13899 ;;		line 39 in file "../My_library/My_RTCC.c"
 13900 ;; Parameters:    Size  Location     Type
 13901 ;;  dec             1    wreg     unsigned char 
 13902 ;; Auto vars:     Size  Location     Type
 13903 ;;  dec             1   21[BANK0 ] unsigned char 
 13904 ;; Return value:  Size  Location     Type
 13905 ;;                  1    wreg      unsigned char 
 13906 ;; Registers used:
 13907 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13908 ;; Tracked objects:
 13909 ;;		On entry : 0/0
 13910 ;;		On exit  : 0/0
 13911 ;;		Unchanged: 0/0
 13912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13914 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13916 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13917 ;;Total ram usage:        1 bytes
 13918 ;; Hardware stack levels used:    1
 13919 ;; Hardware stack levels required when called:   12
 13920 ;; This function calls:
 13921 ;;		___awdiv
 13922 ;; This function is called by:
 13923 ;;		_caltime_to_RTCC
 13924 ;; This function uses a non-reentrant model
 13925 ;;
 13926                           
 13927                           	psect	text59
 13928  0145A2                     __ptext59:
 13929                           	opt stack 0
 13930  0145A2                     _d_to_x:
 13931                           	opt stack 12
 13932                           
 13933                           ; BSR set to: 15
 13934                           ;incstack = 0
 13935                           ;d_to_x@dec stored from wreg
 13936  0145A2  0100               	movlb	0	; () banked
 13937  0145A4  6F75               	movwf	d_to_x@dec& (0+255),b
 13938                           
 13939                           ;My_RTCC.c: 42: return dec / 10 * 6 + dec;
 13940  0145A6  C075  F06D         	movff	d_to_x@dec,___awdiv@dividend
 13941  0145AA  0100               	movlb	0	; () banked
 13942  0145AC  6B6E               	clrf	(___awdiv@dividend+1)& (0+255),b
 13943  0145AE  0E00               	movlw	0
 13944  0145B0  0100               	movlb	0	; () banked
 13945  0145B2  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
 13946  0145B4  0E0A               	movlw	10
 13947  0145B6  6F6F               	movwf	___awdiv@divisor& (0+255),b
 13948  0145B8  ECE3  F098         	call	___awdiv	;wreg free
 13949  0145BC  0100               	movlb	0	; () banked
 13950  0145BE  516D               	movf	?___awdiv& (0+255),w,b
 13951  0145C0  0D06               	mullw	6
 13952  0145C2  50F3               	movf	prodl,w,c
 13953  0145C4  0100               	movlb	0	; () banked
 13954  0145C6  2575               	addwf	d_to_x@dec& (0+255),w,b
 13955  0145C8  0012               	return	
 13956  0145CA                     __end_of_d_to_x:
 13957                           	opt stack 0
 13958                           tblptru	equ	0xFF8
 13959                           tblptrh	equ	0xFF7
 13960                           tblptrl	equ	0xFF6
 13961                           tablat	equ	0xFF5
 13962                           prodh	equ	0xFF4
 13963                           prodl	equ	0xFF3
 13964                           intcon	equ	0xFF2
 13965                           intcon2	equ	0xFF1
 13966                           indf0	equ	0xFEF
 13967                           postinc0	equ	0xFEE
 13968                           fsr0h	equ	0xFEA
 13969                           fsr0l	equ	0xFE9
 13970                           wreg	equ	0xFE8
 13971                           indf1	equ	0xFE7
 13972                           postinc1	equ	0xFE6
 13973                           postdec1	equ	0xFE5
 13974                           fsr1h	equ	0xFE2
 13975                           fsr1l	equ	0xFE1
 13976                           indf2	equ	0xFDF
 13977                           postinc2	equ	0xFDE
 13978                           postdec2	equ	0xFDD
 13979                           plusw2	equ	0xFDB
 13980                           fsr2h	equ	0xFDA
 13981                           fsr2l	equ	0xFD9
 13982                           status	equ	0xFD8
 13983                           
 13984 ;; *************** function ___awdiv *****************
 13985 ;; Defined at:
 13986 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 13987 ;; Parameters:    Size  Location     Type
 13988 ;;  dividend        2   13[BANK0 ] int 
 13989 ;;  divisor         2   15[BANK0 ] int 
 13990 ;; Auto vars:     Size  Location     Type
 13991 ;;  quotient        2   19[BANK0 ] int 
 13992 ;;  sign            1   18[BANK0 ] unsigned char 
 13993 ;;  counter         1   17[BANK0 ] unsigned char 
 13994 ;; Return value:  Size  Location     Type
 13995 ;;                  2   13[BANK0 ] int 
 13996 ;; Registers used:
 13997 ;;		wreg, status,2, status,0
 13998 ;; Tracked objects:
 13999 ;;		On entry : 0/0
 14000 ;;		On exit  : 0/0
 14001 ;;		Unchanged: 0/0
 14002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14003 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14004 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14006 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14007 ;;Total ram usage:        8 bytes
 14008 ;; Hardware stack levels used:    1
 14009 ;; Hardware stack levels required when called:   11
 14010 ;; This function calls:
 14011 ;;		Nothing
 14012 ;; This function is called by:
 14013 ;;		_d_to_x
 14014 ;;		_terminal_operation
 14015 ;; This function uses a non-reentrant model
 14016 ;;
 14017                           
 14018                           	psect	text60
 14019  0131C6                     __ptext60:
 14020                           	opt stack 0
 14021  0131C6                     ___awdiv:
 14022                           	opt stack 12
 14023                           
 14024                           ; BSR set to: 0
 14025                           ;incstack = 0
 14026  0131C6  0E00               	movlw	0
 14027  0131C8  0100               	movlb	0	; () banked
 14028  0131CA  6F72               	movwf	___awdiv@sign& (0+255),b
 14029                           
 14030                           ; BSR set to: 0
 14031  0131CC  0100               	movlb	0	; () banked
 14032  0131CE  AF70               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 14033  0131D0  D008               	goto	l8309
 14034                           
 14035                           ; BSR set to: 0
 14036  0131D2  0100               	movlb	0	; () banked
 14037  0131D4  6D6F               	negf	___awdiv@divisor& (0+255),b
 14038  0131D6  1F70               	comf	(___awdiv@divisor+1)& (0+255),f,b
 14039  0131D8  B0D8               	btfsc	status,0,c
 14040  0131DA  2B70               	incf	(___awdiv@divisor+1)& (0+255),f,b
 14041                           
 14042                           ; BSR set to: 0
 14043  0131DC  0E01               	movlw	1
 14044  0131DE  0100               	movlb	0	; () banked
 14045  0131E0  6F72               	movwf	___awdiv@sign& (0+255),b
 14046  0131E2                     l8309:
 14047                           
 14048                           ; BSR set to: 0
 14049  0131E2  0100               	movlb	0	; () banked
 14050  0131E4  AF6E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 14051  0131E6  D008               	goto	l8315
 14052                           
 14053                           ; BSR set to: 0
 14054  0131E8  0100               	movlb	0	; () banked
 14055  0131EA  6D6D               	negf	___awdiv@dividend& (0+255),b
 14056  0131EC  1F6E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 14057  0131EE  B0D8               	btfsc	status,0,c
 14058  0131F0  2B6E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 14059                           
 14060                           ; BSR set to: 0
 14061  0131F2  0E01               	movlw	1
 14062  0131F4  0100               	movlb	0	; () banked
 14063  0131F6  1B72               	xorwf	___awdiv@sign& (0+255),f,b
 14064  0131F8                     l8315:
 14065                           
 14066                           ; BSR set to: 0
 14067  0131F8  0E00               	movlw	0
 14068  0131FA  0100               	movlb	0	; () banked
 14069  0131FC  6F74               	movwf	(___awdiv@quotient+1)& (0+255),b
 14070  0131FE  0E00               	movlw	0
 14071  013200  6F73               	movwf	___awdiv@quotient& (0+255),b
 14072                           
 14073                           ; BSR set to: 0
 14074  013202  0100               	movlb	0	; () banked
 14075  013204  516F               	movf	___awdiv@divisor& (0+255),w,b
 14076  013206  0100               	movlb	0	; () banked
 14077  013208  1170               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 14078  01320A  B4D8               	btfsc	status,2,c
 14079  01320C  D02C               	goto	l8337
 14080                           
 14081                           ; BSR set to: 0
 14082  01320E  0E01               	movlw	1
 14083  013210  0100               	movlb	0	; () banked
 14084  013212  6F71               	movwf	___awdiv@counter& (0+255),b
 14085  013214  D006               	goto	l8323
 14086  013216                     l8321:
 14087                           
 14088                           ; BSR set to: 0
 14089  013216  0100               	movlb	0	; () banked
 14090  013218  90D8               	bcf	status,0,c
 14091  01321A  376F               	rlcf	___awdiv@divisor& (0+255),f,b
 14092  01321C  3770               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 14093  01321E  0100               	movlb	0	; () banked
 14094  013220  2B71               	incf	___awdiv@counter& (0+255),f,b
 14095  013222                     l8323:
 14096                           
 14097                           ; BSR set to: 0
 14098  013222  0100               	movlb	0	; () banked
 14099  013224  AF70               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 14100  013226  D7F7               	goto	l8321
 14101  013228                     l8325:
 14102                           
 14103                           ; BSR set to: 0
 14104  013228  0100               	movlb	0	; () banked
 14105  01322A  90D8               	bcf	status,0,c
 14106  01322C  3773               	rlcf	___awdiv@quotient& (0+255),f,b
 14107  01322E  3774               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 14108                           
 14109                           ; BSR set to: 0
 14110  013230  0100               	movlb	0	; () banked
 14111  013232  516F               	movf	___awdiv@divisor& (0+255),w,b
 14112  013234  0100               	movlb	0	; () banked
 14113  013236  5D6D               	subwf	___awdiv@dividend& (0+255),w,b
 14114  013238  0100               	movlb	0	; () banked
 14115  01323A  5170               	movf	(___awdiv@divisor+1)& (0+255),w,b
 14116  01323C  0100               	movlb	0	; () banked
 14117  01323E  596E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 14118  013240  A0D8               	btfss	status,0,c
 14119  013242  D00A               	goto	l8333
 14120                           
 14121                           ; BSR set to: 0
 14122  013244  0100               	movlb	0	; () banked
 14123  013246  516F               	movf	___awdiv@divisor& (0+255),w,b
 14124  013248  0100               	movlb	0	; () banked
 14125  01324A  5F6D               	subwf	___awdiv@dividend& (0+255),f,b
 14126  01324C  0100               	movlb	0	; () banked
 14127  01324E  5170               	movf	(___awdiv@divisor+1)& (0+255),w,b
 14128  013250  0100               	movlb	0	; () banked
 14129  013252  5B6E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 14130                           
 14131                           ; BSR set to: 0
 14132  013254  0100               	movlb	0	; () banked
 14133  013256  8173               	bsf	___awdiv@quotient& (0+255),0,b
 14134  013258                     l8333:
 14135                           
 14136                           ; BSR set to: 0
 14137  013258  0100               	movlb	0	; () banked
 14138  01325A  90D8               	bcf	status,0,c
 14139  01325C  3370               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 14140  01325E  336F               	rrcf	___awdiv@divisor& (0+255),f,b
 14141                           
 14142                           ; BSR set to: 0
 14143  013260  0100               	movlb	0	; () banked
 14144  013262  2F71               	decfsz	___awdiv@counter& (0+255),f,b
 14145  013264  D7E1               	goto	l8325
 14146  013266                     l8337:
 14147                           
 14148                           ; BSR set to: 0
 14149  013266  0100               	movlb	0	; () banked
 14150  013268  5172               	movf	___awdiv@sign& (0+255),w,b
 14151  01326A  0100               	movlb	0	; () banked
 14152  01326C  B4D8               	btfsc	status,2,c
 14153  01326E  D005               	goto	l8341
 14154                           
 14155                           ; BSR set to: 0
 14156  013270  0100               	movlb	0	; () banked
 14157  013272  6D73               	negf	___awdiv@quotient& (0+255),b
 14158  013274  1F74               	comf	(___awdiv@quotient+1)& (0+255),f,b
 14159  013276  B0D8               	btfsc	status,0,c
 14160  013278  2B74               	incf	(___awdiv@quotient+1)& (0+255),f,b
 14161  01327A                     l8341:
 14162                           
 14163                           ; BSR set to: 0
 14164  01327A  C073  F06D         	movff	___awdiv@quotient,?___awdiv
 14165  01327E  C074  F06E         	movff	___awdiv@quotient+1,?___awdiv+1
 14166  013282  0012               	return	
 14167  013284                     __end_of___awdiv:
 14168                           	opt stack 0
 14169                           tblptru	equ	0xFF8
 14170                           tblptrh	equ	0xFF7
 14171                           tblptrl	equ	0xFF6
 14172                           tablat	equ	0xFF5
 14173                           prodh	equ	0xFF4
 14174                           prodl	equ	0xFF3
 14175                           intcon	equ	0xFF2
 14176                           intcon2	equ	0xFF1
 14177                           indf0	equ	0xFEF
 14178                           postinc0	equ	0xFEE
 14179                           fsr0h	equ	0xFEA
 14180                           fsr0l	equ	0xFE9
 14181                           wreg	equ	0xFE8
 14182                           indf1	equ	0xFE7
 14183                           postinc1	equ	0xFE6
 14184                           postdec1	equ	0xFE5
 14185                           fsr1h	equ	0xFE2
 14186                           fsr1l	equ	0xFE1
 14187                           indf2	equ	0xFDF
 14188                           postinc2	equ	0xFDE
 14189                           postdec2	equ	0xFDD
 14190                           plusw2	equ	0xFDB
 14191                           fsr2h	equ	0xFDA
 14192                           fsr2l	equ	0xFD9
 14193                           status	equ	0xFD8
 14194                           
 14195 ;; *************** function _ISR *****************
 14196 ;; Defined at:
 14197 ;;		line 61 in file "PIC18F27J53-killifish_light06.c"
 14198 ;; Parameters:    Size  Location     Type
 14199 ;;		None
 14200 ;; Auto vars:     Size  Location     Type
 14201 ;;		None
 14202 ;; Return value:  Size  Location     Type
 14203 ;;		None               void
 14204 ;; Registers used:
 14205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14206 ;; Tracked objects:
 14207 ;;		On entry : 0/0
 14208 ;;		On exit  : 0/0
 14209 ;;		Unchanged: 0/0
 14210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14213 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14214 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14215 ;;Total ram usage:       15 bytes
 14216 ;; Hardware stack levels used:    1
 14217 ;; Hardware stack levels required when called:   10
 14218 ;; This function calls:
 14219 ;;		_USB_ISR
 14220 ;;		_button_timer_interrupt
 14221 ;; This function is called by:
 14222 ;;		Interrupt level 2
 14223 ;; This function uses a non-reentrant model
 14224 ;;
 14225                           
 14226                           	psect	intcode
 14227  001008                     __pintcode:
 14228                           	opt stack 0
 14229  001008                     _ISR:
 14230                           	opt stack 11
 14231                           
 14232                           ; BSR set to: 0
 14233                           ;incstack = 0
 14234  001008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 14235  00100A  CFFA F04D          	movff	pclath,??_ISR+1
 14236  00100E  CFFB F04E          	movff	pclatu,??_ISR+2
 14237  001012  CFE9 F04F          	movff	fsr0l,??_ISR+3
 14238  001016  CFEA F050          	movff	fsr0h,??_ISR+4
 14239  00101A  CFE1 F051          	movff	fsr1l,??_ISR+5
 14240  00101E  CFE2 F052          	movff	fsr1h,??_ISR+6
 14241  001022  CFD9 F053          	movff	fsr2l,??_ISR+7
 14242  001026  CFDA F054          	movff	fsr2h,??_ISR+8
 14243  00102A  CFF3 F055          	movff	prodl,??_ISR+9
 14244  00102E  CFF4 F056          	movff	prodh,??_ISR+10
 14245  001032  CFF6 F057          	movff	tblptrl,??_ISR+11
 14246  001036  CFF7 F058          	movff	tblptrh,??_ISR+12
 14247  00103A  CFF8 F059          	movff	tblptru,??_ISR+13
 14248  00103E  CFF5 F05A          	movff	tablat,??_ISR+14
 14249                           
 14250                           ;PIC18F27J53-killifish_light06.c: 62: USB_ISR();
 14251  001042  EC79  F0A3         	call	_USB_ISR	;wreg free
 14252                           
 14253                           ;PIC18F27J53-killifish_light06.c: 63: if (INTCONbits.T0IF) {
 14254  001046  B4F2               	btfsc	intcon,2,c	;volatile
 14255                           
 14256                           ;PIC18F27J53-killifish_light06.c: 64: INTCONbits.T0IF = 0;
 14257  001048  94F2               	bcf	intcon,2,c	;volatile
 14258                           
 14259                           ;PIC18F27J53-killifish_light06.c: 65: }
 14260                           ;PIC18F27J53-killifish_light06.c: 66: if (PIR1bits.TMR1IF) {
 14261  00104A  A09E               	btfss	3998,0,c	;volatile
 14262  00104C  D010               	goto	i2l8167
 14263                           
 14264                           ;PIC18F27J53-killifish_light06.c: 67: PIR1bits.TMR1IF = 0;
 14265  00104E  909E               	bcf	3998,0,c	;volatile
 14266                           
 14267                           ;PIC18F27J53-killifish_light06.c: 68: TMR1H = 0x80;
 14268  001050  0E80               	movlw	128
 14269  001052  6ECF               	movwf	4047,c	;volatile
 14270                           
 14271                           ;PIC18F27J53-killifish_light06.c: 69: LATBbits.LATB5 = !LATBbits.LATB5;
 14272  001054  BA8A               	btfsc	3978,5,c	;volatile
 14273  001056  D003               	goto	i2u804_40
 14274  001058  6A4C               	clrf	??_ISR& (0+255),c
 14275  00105A  2A4C               	incf	??_ISR& (0+255),f,c
 14276  00105C  D001               	goto	i2u805_48
 14277  00105E                     i2u804_40:
 14278  00105E  6A4C               	clrf	??_ISR& (0+255),c
 14279  001060                     i2u805_48:
 14280  001060  3A4C               	swapf	??_ISR,f,c
 14281  001062  464C               	rlncf	??_ISR,f,c
 14282  001064  508A               	movf	3978,w,c	;volatile
 14283  001066  184C               	xorwf	??_ISR,w,c
 14284  001068  0BDF               	andlw	-33
 14285  00106A  184C               	xorwf	??_ISR,w,c
 14286  00106C  6E8A               	movwf	3978,c	;volatile
 14287  00106E                     i2l8167:
 14288                           
 14289                           ;PIC18F27J53-killifish_light06.c: 70: }
 14290                           ;PIC18F27J53-killifish_light06.c: 71: if (PIR2bits.TMR3IF) {
 14291  00106E  A2A1               	btfss	4001,1,c	;volatile
 14292  001070  D028               	goto	i2l1371
 14293                           
 14294                           ;PIC18F27J53-killifish_light06.c: 72: PIR2bits.TMR3IF = 0;
 14295  001072  92A1               	bcf	4001,1,c	;volatile
 14296                           
 14297                           ;PIC18F27J53-killifish_light06.c: 73: button_timer_interrupt(&sw_R, !PORTAbits.RA5);
 14298  001074  0E8F               	movlw	low _sw_R
 14299  001076  6E2E               	movwf	button_timer_interrupt@bt,c
 14300  001078  0E01               	movlw	high _sw_R
 14301  00107A  6E2F               	movwf	button_timer_interrupt@bt+1,c
 14302  00107C  BA80               	btfsc	3968,5,c	;volatile
 14303  00107E  D002               	goto	i2u807_40
 14304  001080  0E01               	movlw	1
 14305  001082  D001               	goto	i2u808_40
 14306  001084                     i2u807_40:
 14307  001084  0E00               	movlw	0
 14308  001086                     i2u808_40:
 14309  001086  6E30               	movwf	button_timer_interrupt@sw_value,c
 14310  001088  EC96  F08A         	call	_button_timer_interrupt	;wreg free
 14311                           
 14312                           ;PIC18F27J53-killifish_light06.c: 74: button_timer_interrupt(&sw_G, !PORTAbits.RA6);
 14313  00108C  0E8B               	movlw	low _sw_G
 14314  00108E  6E2E               	movwf	button_timer_interrupt@bt,c
 14315  001090  0E01               	movlw	high _sw_G
 14316  001092  6E2F               	movwf	button_timer_interrupt@bt+1,c
 14317  001094  BC80               	btfsc	3968,6,c	;volatile
 14318  001096  D002               	goto	i2u809_40
 14319  001098  0E01               	movlw	1
 14320  00109A  D001               	goto	i2u810_40
 14321  00109C                     i2u809_40:
 14322  00109C  0E00               	movlw	0
 14323  00109E                     i2u810_40:
 14324  00109E  6E30               	movwf	button_timer_interrupt@sw_value,c
 14325  0010A0  EC96  F08A         	call	_button_timer_interrupt	;wreg free
 14326                           
 14327                           ;PIC18F27J53-killifish_light06.c: 75: button_timer_interrupt(&sw_B, !PORTAbits.RA7);
 14328  0010A4  0E87               	movlw	low _sw_B
 14329  0010A6  6E2E               	movwf	button_timer_interrupt@bt,c
 14330  0010A8  0E01               	movlw	high _sw_B
 14331  0010AA  6E2F               	movwf	button_timer_interrupt@bt+1,c
 14332  0010AC  BE80               	btfsc	3968,7,c	;volatile
 14333  0010AE  D002               	goto	i2u811_40
 14334  0010B0  0E01               	movlw	1
 14335  0010B2  D001               	goto	i2u812_40
 14336  0010B4                     i2u811_40:
 14337  0010B4  0E00               	movlw	0
 14338  0010B6                     i2u812_40:
 14339  0010B6  6E30               	movwf	button_timer_interrupt@sw_value,c
 14340  0010B8  EC96  F08A         	call	_button_timer_interrupt	;wreg free
 14341                           
 14342                           ;PIC18F27J53-killifish_light06.c: 76: ADC_flag = 1;
 14343  0010BC  0E01               	movlw	1
 14344  0010BE  0100               	movlb	0	; () banked
 14345  0010C0  6FEB               	movwf	_ADC_flag& (0+255),b
 14346  0010C2                     i2l1371:
 14347  0010C2  C05A  FFF5         	movff	??_ISR+14,tablat
 14348  0010C6  C059  FFF8         	movff	??_ISR+13,tblptru
 14349  0010CA  C058  FFF7         	movff	??_ISR+12,tblptrh
 14350  0010CE  C057  FFF6         	movff	??_ISR+11,tblptrl
 14351  0010D2  C056  FFF4         	movff	??_ISR+10,prodh
 14352  0010D6  C055  FFF3         	movff	??_ISR+9,prodl
 14353  0010DA  C054  FFDA         	movff	??_ISR+8,fsr2h
 14354  0010DE  C053  FFD9         	movff	??_ISR+7,fsr2l
 14355  0010E2  C052  FFE2         	movff	??_ISR+6,fsr1h
 14356  0010E6  C051  FFE1         	movff	??_ISR+5,fsr1l
 14357  0010EA  C050  FFEA         	movff	??_ISR+4,fsr0h
 14358  0010EE  C04F  FFE9         	movff	??_ISR+3,fsr0l
 14359  0010F2  C04E  FFFB         	movff	??_ISR+2,pclatu
 14360  0010F6  C04D  FFFA         	movff	??_ISR+1,pclath
 14361  0010FA  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 14362  0010FC  0011               	retfie		f
 14363  0010FE                     __end_of_ISR:
 14364                           	opt stack 0
 14365                           pclatu	equ	0xFFB
 14366                           pclath	equ	0xFFA
 14367                           tblptru	equ	0xFF8
 14368                           tblptrh	equ	0xFF7
 14369                           tblptrl	equ	0xFF6
 14370                           tablat	equ	0xFF5
 14371                           prodh	equ	0xFF4
 14372                           prodl	equ	0xFF3
 14373                           intcon	equ	0xFF2
 14374                           intcon2	equ	0xFF1
 14375                           indf0	equ	0xFEF
 14376                           postinc0	equ	0xFEE
 14377                           fsr0h	equ	0xFEA
 14378                           fsr0l	equ	0xFE9
 14379                           wreg	equ	0xFE8
 14380                           indf1	equ	0xFE7
 14381                           postinc1	equ	0xFE6
 14382                           postdec1	equ	0xFE5
 14383                           fsr1h	equ	0xFE2
 14384                           fsr1l	equ	0xFE1
 14385                           indf2	equ	0xFDF
 14386                           postinc2	equ	0xFDE
 14387                           postdec2	equ	0xFDD
 14388                           plusw2	equ	0xFDB
 14389                           fsr2h	equ	0xFDA
 14390                           fsr2l	equ	0xFD9
 14391                           status	equ	0xFD8
 14392                           
 14393 ;; *************** function _button_timer_interrupt *****************
 14394 ;; Defined at:
 14395 ;;		line 3 in file "../My_library/My_button.c"
 14396 ;; Parameters:    Size  Location     Type
 14397 ;;  bt              2    0[COMRAM] PTR struct button
 14398 ;;		 -> sw_B(4), sw_G(4), sw_R(4), 
 14399 ;;  sw_value        1    2[COMRAM] unsigned char 
 14400 ;; Auto vars:     Size  Location     Type
 14401 ;;		None
 14402 ;; Return value:  Size  Location     Type
 14403 ;;		None               void
 14404 ;; Registers used:
 14405 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14406 ;; Tracked objects:
 14407 ;;		On entry : 0/0
 14408 ;;		On exit  : 0/0
 14409 ;;		Unchanged: 0/0
 14410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14411 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14413 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14414 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14415 ;;Total ram usage:        5 bytes
 14416 ;; Hardware stack levels used:    1
 14417 ;; This function calls:
 14418 ;;		Nothing
 14419 ;; This function is called by:
 14420 ;;		_ISR
 14421 ;; This function uses a non-reentrant model
 14422 ;;
 14423                           
 14424                           	psect	text62
 14425  01152C                     __ptext62:
 14426                           	opt stack 0
 14427  01152C                     _button_timer_interrupt:
 14428                           	opt stack 20
 14429                           
 14430                           ;My_button.c: 4: if (sw_value) {
 14431                           
 14432                           ;incstack = 0
 14433  01152C  5030               	movf	button_timer_interrupt@sw_value,w,c
 14434  01152E  B4D8               	btfsc	status,2,c
 14435  011530  D098               	goto	i2l7451
 14436                           
 14437                           ;My_button.c: 5: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 14438  011532  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14439  011536  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14440  01153A  0E84               	movlw	132
 14441  01153C  18DE               	xorwf	postinc2,w,c
 14442  01153E  E10B               	bnz	i2l603
 14443  011540  0E03               	movlw	3
 14444  011542  18DE               	xorwf	postinc2,w,c
 14445  011544  A4D8               	btfss	status,2,c
 14446  011546  D007               	goto	i2l603
 14447  011548  EE20 F003          	lfsr	2,3
 14448  01154C  502E               	movf	button_timer_interrupt@bt,w,c
 14449  01154E  26D9               	addwf	fsr2l,f,c
 14450  011550  502F               	movf	button_timer_interrupt@bt+1,w,c
 14451  011552  22DA               	addwfc	fsr2h,f,c
 14452  011554  8EDF               	bsf	indf2,7,c
 14453  011556                     i2l603:
 14454                           
 14455                           ;My_button.c: 6: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 14456  011556  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14457  01155A  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14458  01155E  0EBC               	movlw	188
 14459  011560  18DE               	xorwf	postinc2,w,c
 14460  011562  E10B               	bnz	i2l604
 14461  011564  0E02               	movlw	2
 14462  011566  18DE               	xorwf	postinc2,w,c
 14463  011568  A4D8               	btfss	status,2,c
 14464  01156A  D007               	goto	i2l604
 14465  01156C  EE20 F003          	lfsr	2,3
 14466  011570  502E               	movf	button_timer_interrupt@bt,w,c
 14467  011572  26D9               	addwf	fsr2l,f,c
 14468  011574  502F               	movf	button_timer_interrupt@bt+1,w,c
 14469  011576  22DA               	addwfc	fsr2h,f,c
 14470  011578  8CDF               	bsf	indf2,6,c
 14471  01157A                     i2l604:
 14472                           
 14473                           ;My_button.c: 7: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 14474  01157A  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14475  01157E  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14476  011582  0EF4               	movlw	244
 14477  011584  18DE               	xorwf	postinc2,w,c
 14478  011586  E10A               	bnz	i2l605
 14479  011588  04DE               	decf	postinc2,w,c
 14480  01158A  A4D8               	btfss	status,2,c
 14481  01158C  D007               	goto	i2l605
 14482  01158E  EE20 F003          	lfsr	2,3
 14483  011592  502E               	movf	button_timer_interrupt@bt,w,c
 14484  011594  26D9               	addwf	fsr2l,f,c
 14485  011596  502F               	movf	button_timer_interrupt@bt+1,w,c
 14486  011598  22DA               	addwfc	fsr2h,f,c
 14487  01159A  8ADF               	bsf	indf2,5,c
 14488  01159C                     i2l605:
 14489                           
 14490                           ;My_button.c: 8: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 14491  01159C  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14492  0115A0  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14493  0115A4  0E2C               	movlw	44
 14494  0115A6  18DE               	xorwf	postinc2,w,c
 14495  0115A8  E10A               	bnz	i2l606
 14496  0115AA  04DE               	decf	postinc2,w,c
 14497  0115AC  A4D8               	btfss	status,2,c
 14498  0115AE  D007               	goto	i2l606
 14499  0115B0  EE20 F003          	lfsr	2,3
 14500  0115B4  502E               	movf	button_timer_interrupt@bt,w,c
 14501  0115B6  26D9               	addwf	fsr2l,f,c
 14502  0115B8  502F               	movf	button_timer_interrupt@bt+1,w,c
 14503  0115BA  22DA               	addwfc	fsr2h,f,c
 14504  0115BC  88DF               	bsf	indf2,4,c
 14505  0115BE                     i2l606:
 14506                           
 14507                           ;My_button.c: 9: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 14508  0115BE  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14509  0115C2  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14510  0115C6  0E96               	movlw	150
 14511  0115C8  18DE               	xorwf	postinc2,w,c
 14512  0115CA  10DE               	iorwf	postinc2,w,c
 14513  0115CC  A4D8               	btfss	status,2,c
 14514  0115CE  D007               	goto	i2l607
 14515  0115D0  EE20 F003          	lfsr	2,3
 14516  0115D4  502E               	movf	button_timer_interrupt@bt,w,c
 14517  0115D6  26D9               	addwf	fsr2l,f,c
 14518  0115D8  502F               	movf	button_timer_interrupt@bt+1,w,c
 14519  0115DA  22DA               	addwfc	fsr2h,f,c
 14520  0115DC  86DF               	bsf	indf2,3,c
 14521  0115DE                     i2l607:
 14522                           
 14523                           ;My_button.c: 10: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 14524  0115DE  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14525  0115E2  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14526  0115E6  0E3C               	movlw	60
 14527  0115E8  18DE               	xorwf	postinc2,w,c
 14528  0115EA  10DE               	iorwf	postinc2,w,c
 14529  0115EC  A4D8               	btfss	status,2,c
 14530  0115EE  D007               	goto	i2l608
 14531  0115F0  EE20 F003          	lfsr	2,3
 14532  0115F4  502E               	movf	button_timer_interrupt@bt,w,c
 14533  0115F6  26D9               	addwf	fsr2l,f,c
 14534  0115F8  502F               	movf	button_timer_interrupt@bt+1,w,c
 14535  0115FA  22DA               	addwfc	fsr2h,f,c
 14536  0115FC  84DF               	bsf	indf2,2,c
 14537  0115FE                     i2l608:
 14538                           
 14539                           ;My_button.c: 11: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 14540  0115FE  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14541  011602  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14542  011606  0E10               	movlw	16
 14543  011608  18DE               	xorwf	postinc2,w,c
 14544  01160A  10DE               	iorwf	postinc2,w,c
 14545  01160C  A4D8               	btfss	status,2,c
 14546  01160E  D007               	goto	i2l609
 14547  011610  EE20 F003          	lfsr	2,3
 14548  011614  502E               	movf	button_timer_interrupt@bt,w,c
 14549  011616  26D9               	addwf	fsr2l,f,c
 14550  011618  502F               	movf	button_timer_interrupt@bt+1,w,c
 14551  01161A  22DA               	addwfc	fsr2h,f,c
 14552  01161C  82DF               	bsf	indf2,1,c
 14553  01161E                     i2l609:
 14554                           
 14555                           ;My_button.c: 12: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 14556  01161E  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14557  011622  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14558  011626  0E02               	movlw	2
 14559  011628  18DE               	xorwf	postinc2,w,c
 14560  01162A  10DE               	iorwf	postinc2,w,c
 14561  01162C  A4D8               	btfss	status,2,c
 14562  01162E  D007               	goto	i2l610
 14563  011630  EE20 F003          	lfsr	2,3
 14564  011634  502E               	movf	button_timer_interrupt@bt,w,c
 14565  011636  26D9               	addwf	fsr2l,f,c
 14566  011638  502F               	movf	button_timer_interrupt@bt+1,w,c
 14567  01163A  22DA               	addwfc	fsr2h,f,c
 14568  01163C  80DF               	bsf	indf2,0,c
 14569  01163E                     i2l610:
 14570                           
 14571                           ;My_button.c: 13: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 14572  01163E  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14573  011642  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14574  011646  0E85               	movlw	133
 14575  011648  5CDE               	subwf	postinc2,w,c
 14576  01164A  0E03               	movlw	3
 14577  01164C  58DE               	subwfb	postinc2,w,c
 14578  01164E  B0D8               	btfsc	status,0,c
 14579  011650  0012               	return	
 14580  011652  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14581  011656  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14582  01165A  2ADE               	incf	postinc2,f,c
 14583  01165C  0E00               	movlw	0
 14584  01165E  22DD               	addwfc	postdec2,f,c
 14585                           
 14586                           ;My_button.c: 14: } else {
 14587  011660  0012               	return	
 14588  011662                     i2l7451:
 14589                           
 14590                           ;My_button.c: 15: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 14591  011662  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14592  011666  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14593  01166A  0E84               	movlw	132
 14594  01166C  5CDE               	subwf	postinc2,w,c
 14595  01166E  0E03               	movlw	3
 14596  011670  58DE               	subwfb	postinc2,w,c
 14597  011672  A0D8               	btfss	status,0,c
 14598  011674  D008               	goto	i2l7455
 14599  011676  EE20 F002          	lfsr	2,2
 14600  01167A  502E               	movf	button_timer_interrupt@bt,w,c
 14601  01167C  26D9               	addwf	fsr2l,f,c
 14602  01167E  502F               	movf	button_timer_interrupt@bt+1,w,c
 14603  011680  22DA               	addwfc	fsr2h,f,c
 14604  011682  8EDF               	bsf	indf2,7,c
 14605  011684  D081               	goto	i2l7483
 14606  011686                     i2l7455:
 14607                           
 14608                           ;My_button.c: 16: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 14609  011686  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14610  01168A  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14611  01168E  0EBC               	movlw	188
 14612  011690  5CDE               	subwf	postinc2,w,c
 14613  011692  0E02               	movlw	2
 14614  011694  58DE               	subwfb	postinc2,w,c
 14615  011696  A0D8               	btfss	status,0,c
 14616  011698  D008               	goto	i2l7459
 14617  01169A  EE20 F002          	lfsr	2,2
 14618  01169E  502E               	movf	button_timer_interrupt@bt,w,c
 14619  0116A0  26D9               	addwf	fsr2l,f,c
 14620  0116A2  502F               	movf	button_timer_interrupt@bt+1,w,c
 14621  0116A4  22DA               	addwfc	fsr2h,f,c
 14622  0116A6  8CDF               	bsf	indf2,6,c
 14623  0116A8  D06F               	goto	i2l7483
 14624  0116AA                     i2l7459:
 14625                           
 14626                           ;My_button.c: 17: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 14627  0116AA  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14628  0116AE  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14629  0116B2  0EF4               	movlw	244
 14630  0116B4  5CDE               	subwf	postinc2,w,c
 14631  0116B6  0E01               	movlw	1
 14632  0116B8  58DE               	subwfb	postinc2,w,c
 14633  0116BA  A0D8               	btfss	status,0,c
 14634  0116BC  D008               	goto	i2l7463
 14635  0116BE  EE20 F002          	lfsr	2,2
 14636  0116C2  502E               	movf	button_timer_interrupt@bt,w,c
 14637  0116C4  26D9               	addwf	fsr2l,f,c
 14638  0116C6  502F               	movf	button_timer_interrupt@bt+1,w,c
 14639  0116C8  22DA               	addwfc	fsr2h,f,c
 14640  0116CA  8ADF               	bsf	indf2,5,c
 14641  0116CC  D05D               	goto	i2l7483
 14642  0116CE                     i2l7463:
 14643                           
 14644                           ;My_button.c: 18: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 14645  0116CE  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14646  0116D2  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14647  0116D6  0E2C               	movlw	44
 14648  0116D8  5CDE               	subwf	postinc2,w,c
 14649  0116DA  0E01               	movlw	1
 14650  0116DC  58DE               	subwfb	postinc2,w,c
 14651  0116DE  A0D8               	btfss	status,0,c
 14652  0116E0  D008               	goto	i2l7467
 14653  0116E2  EE20 F002          	lfsr	2,2
 14654  0116E6  502E               	movf	button_timer_interrupt@bt,w,c
 14655  0116E8  26D9               	addwf	fsr2l,f,c
 14656  0116EA  502F               	movf	button_timer_interrupt@bt+1,w,c
 14657  0116EC  22DA               	addwfc	fsr2h,f,c
 14658  0116EE  88DF               	bsf	indf2,4,c
 14659  0116F0  D04B               	goto	i2l7483
 14660  0116F2                     i2l7467:
 14661                           
 14662                           ;My_button.c: 19: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 14663  0116F2  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14664  0116F6  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14665  0116FA  0E01               	movlw	1
 14666  0116FC  50DB               	movf	plusw2,w,c
 14667  0116FE  E104               	bnz	i2u718_40
 14668  011700  0E96               	movlw	150
 14669  011702  5CDE               	subwf	postinc2,w,c
 14670  011704  A0D8               	btfss	status,0,c
 14671  011706  D008               	goto	i2l7471
 14672  011708                     i2u718_40:
 14673  011708  EE20 F002          	lfsr	2,2
 14674  01170C  502E               	movf	button_timer_interrupt@bt,w,c
 14675  01170E  26D9               	addwf	fsr2l,f,c
 14676  011710  502F               	movf	button_timer_interrupt@bt+1,w,c
 14677  011712  22DA               	addwfc	fsr2h,f,c
 14678  011714  86DF               	bsf	indf2,3,c
 14679  011716  D038               	goto	i2l7483
 14680  011718                     i2l7471:
 14681                           
 14682                           ;My_button.c: 20: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 14683  011718  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14684  01171C  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14685  011720  0E01               	movlw	1
 14686  011722  50DB               	movf	plusw2,w,c
 14687  011724  E104               	bnz	i2u719_40
 14688  011726  0E3C               	movlw	60
 14689  011728  5CDE               	subwf	postinc2,w,c
 14690  01172A  A0D8               	btfss	status,0,c
 14691  01172C  D008               	goto	i2l7475
 14692  01172E                     i2u719_40:
 14693  01172E  EE20 F002          	lfsr	2,2
 14694  011732  502E               	movf	button_timer_interrupt@bt,w,c
 14695  011734  26D9               	addwf	fsr2l,f,c
 14696  011736  502F               	movf	button_timer_interrupt@bt+1,w,c
 14697  011738  22DA               	addwfc	fsr2h,f,c
 14698  01173A  84DF               	bsf	indf2,2,c
 14699  01173C  D025               	goto	i2l7483
 14700  01173E                     i2l7475:
 14701                           
 14702                           ;My_button.c: 21: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 14703  01173E  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14704  011742  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14705  011746  0E01               	movlw	1
 14706  011748  50DB               	movf	plusw2,w,c
 14707  01174A  E104               	bnz	i2u720_40
 14708  01174C  0E10               	movlw	16
 14709  01174E  5CDE               	subwf	postinc2,w,c
 14710  011750  A0D8               	btfss	status,0,c
 14711  011752  D008               	goto	i2l7479
 14712  011754                     i2u720_40:
 14713  011754  EE20 F002          	lfsr	2,2
 14714  011758  502E               	movf	button_timer_interrupt@bt,w,c
 14715  01175A  26D9               	addwf	fsr2l,f,c
 14716  01175C  502F               	movf	button_timer_interrupt@bt+1,w,c
 14717  01175E  22DA               	addwfc	fsr2h,f,c
 14718  011760  82DF               	bsf	indf2,1,c
 14719  011762  D012               	goto	i2l7483
 14720  011764                     i2l7479:
 14721                           
 14722                           ;My_button.c: 22: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 14723  011764  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14724  011768  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14725  01176C  0E01               	movlw	1
 14726  01176E  50DB               	movf	plusw2,w,c
 14727  011770  E104               	bnz	i2u721_40
 14728  011772  0E02               	movlw	2
 14729  011774  5CDE               	subwf	postinc2,w,c
 14730  011776  A0D8               	btfss	status,0,c
 14731  011778  D007               	goto	i2l7483
 14732  01177A                     i2u721_40:
 14733  01177A  EE20 F002          	lfsr	2,2
 14734  01177E  502E               	movf	button_timer_interrupt@bt,w,c
 14735  011780  26D9               	addwf	fsr2l,f,c
 14736  011782  502F               	movf	button_timer_interrupt@bt+1,w,c
 14737  011784  22DA               	addwfc	fsr2h,f,c
 14738  011786  80DF               	bsf	indf2,0,c
 14739  011788                     i2l7483:
 14740                           
 14741                           ;My_button.c: 23: bt->cnt_sw = 0;
 14742  011788  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14743  01178C  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14744  011790  0E00               	movlw	0
 14745  011792  6EDE               	movwf	postinc2,c
 14746  011794  0E00               	movlw	0
 14747  011796  6EDD               	movwf	postdec2,c
 14748                           
 14749                           ;My_button.c: 24: bt->flags &= 0x00FF;
 14750  011798  EE20 F002          	lfsr	2,2
 14751  01179C  502E               	movf	button_timer_interrupt@bt,w,c
 14752  01179E  26D9               	addwf	fsr2l,f,c
 14753  0117A0  502F               	movf	button_timer_interrupt@bt+1,w,c
 14754  0117A2  22DA               	addwfc	fsr2h,f,c
 14755  0117A4  0EFF               	movlw	255
 14756  0117A6  16DE               	andwf	postinc2,f,c
 14757  0117A8  0E00               	movlw	0
 14758  0117AA  16DD               	andwf	postdec2,f,c
 14759  0117AC  0012               	return	
 14760  0117AE                     __end_of_button_timer_interrupt:
 14761                           	opt stack 0
 14762                           pclatu	equ	0xFFB
 14763                           pclath	equ	0xFFA
 14764                           tblptru	equ	0xFF8
 14765                           tblptrh	equ	0xFF7
 14766                           tblptrl	equ	0xFF6
 14767                           tablat	equ	0xFF5
 14768                           prodh	equ	0xFF4
 14769                           prodl	equ	0xFF3
 14770                           intcon	equ	0xFF2
 14771                           intcon2	equ	0xFF1
 14772                           indf0	equ	0xFEF
 14773                           postinc0	equ	0xFEE
 14774                           fsr0h	equ	0xFEA
 14775                           fsr0l	equ	0xFE9
 14776                           wreg	equ	0xFE8
 14777                           indf1	equ	0xFE7
 14778                           postinc1	equ	0xFE6
 14779                           postdec1	equ	0xFE5
 14780                           fsr1h	equ	0xFE2
 14781                           fsr1l	equ	0xFE1
 14782                           indf2	equ	0xFDF
 14783                           postinc2	equ	0xFDE
 14784                           postdec2	equ	0xFDD
 14785                           plusw2	equ	0xFDB
 14786                           fsr2h	equ	0xFDA
 14787                           fsr2l	equ	0xFD9
 14788                           status	equ	0xFD8
 14789                           
 14790 ;; *************** function _USB_ISR *****************
 14791 ;; Defined at:
 14792 ;;		line 7 in file "../My_library/usb_cdc/My_usb_cdc.c"
 14793 ;; Parameters:    Size  Location     Type
 14794 ;;		None
 14795 ;; Auto vars:     Size  Location     Type
 14796 ;;		None
 14797 ;; Return value:  Size  Location     Type
 14798 ;;		None               void
 14799 ;; Registers used:
 14800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14801 ;; Tracked objects:
 14802 ;;		On entry : 0/0
 14803 ;;		On exit  : 0/0
 14804 ;;		Unchanged: 0/0
 14805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14810 ;;Total ram usage:        0 bytes
 14811 ;; Hardware stack levels used:    1
 14812 ;; Hardware stack levels required when called:    9
 14813 ;; This function calls:
 14814 ;;		_USBDeviceTasks
 14815 ;; This function is called by:
 14816 ;;		_ISR
 14817 ;; This function uses a non-reentrant model
 14818 ;;
 14819                           
 14820                           	psect	text63
 14821  0146F2                     __ptext63:
 14822                           	opt stack 0
 14823  0146F2                     _USB_ISR:
 14824                           	opt stack 11
 14825                           
 14826                           ;My_usb_cdc.c: 8: USBDeviceTasks();
 14827                           
 14828                           ;incstack = 0
 14829  0146F2  EC19  F090         	call	_USBDeviceTasks	;wreg free
 14830  0146F6  0012               	return		;funcret
 14831  0146F8                     __end_of_USB_ISR:
 14832                           	opt stack 0
 14833                           pclatu	equ	0xFFB
 14834                           pclath	equ	0xFFA
 14835                           tblptru	equ	0xFF8
 14836                           tblptrh	equ	0xFF7
 14837                           tblptrl	equ	0xFF6
 14838                           tablat	equ	0xFF5
 14839                           prodh	equ	0xFF4
 14840                           prodl	equ	0xFF3
 14841                           intcon	equ	0xFF2
 14842                           intcon2	equ	0xFF1
 14843                           indf0	equ	0xFEF
 14844                           postinc0	equ	0xFEE
 14845                           fsr0h	equ	0xFEA
 14846                           fsr0l	equ	0xFE9
 14847                           wreg	equ	0xFE8
 14848                           indf1	equ	0xFE7
 14849                           postinc1	equ	0xFE6
 14850                           postdec1	equ	0xFE5
 14851                           fsr1h	equ	0xFE2
 14852                           fsr1l	equ	0xFE1
 14853                           indf2	equ	0xFDF
 14854                           postinc2	equ	0xFDE
 14855                           postdec2	equ	0xFDD
 14856                           plusw2	equ	0xFDB
 14857                           fsr2h	equ	0xFDA
 14858                           fsr2l	equ	0xFD9
 14859                           status	equ	0xFD8
 14860                           
 14861 ;; *************** function _USBDeviceTasks *****************
 14862 ;; Defined at:
 14863 ;;		line 489 in file "../My_library/usb_cdc/usb/usb_device.c"
 14864 ;; Parameters:    Size  Location     Type
 14865 ;;		None
 14866 ;; Auto vars:     Size  Location     Type
 14867 ;;  i               1   29[COMRAM] unsigned char 
 14868 ;; Return value:  Size  Location     Type
 14869 ;;		None               void
 14870 ;; Registers used:
 14871 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14872 ;; Tracked objects:
 14873 ;;		On entry : 0/0
 14874 ;;		On exit  : 0/0
 14875 ;;		Unchanged: 0/0
 14876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14878 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14880 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14881 ;;Total ram usage:        1 bytes
 14882 ;; Hardware stack levels used:    1
 14883 ;; Hardware stack levels required when called:    8
 14884 ;; This function calls:
 14885 ;;		_USBCtrlEPAllowStatusStage
 14886 ;;		_USBCtrlEPService
 14887 ;;		_USBStallHandler
 14888 ;;		_USBSuspend
 14889 ;;		_USBWakeFromSuspend
 14890 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14891 ;;		i2_USBDeviceInit
 14892 ;; This function is called by:
 14893 ;;		_USB_ISR
 14894 ;; This function uses a non-reentrant model
 14895 ;;
 14896                           
 14897                           	psect	text64
 14898  012032                     __ptext64:
 14899                           	opt stack 0
 14900  012032                     _USBDeviceTasks:
 14901                           	opt stack 11
 14902                           
 14903                           ;usb_device.c: 491: uint8_t i;
 14904                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 14905                           
 14906                           ;incstack = 0
 14907  012032  0422               	decf	_USBDeviceState,w,c	;volatile
 14908  012034  B4D8               	btfsc	status,2,c
 14909                           
 14910                           ;usb_device.c: 603: {
 14911                           ;usb_device.c: 613: if(!UCONbits.SE0)
 14912  012036  BA65               	btfsc	3941,5,c	;volatile
 14913  012038  D008               	goto	i2l6983
 14914                           
 14915                           ;usb_device.c: 614: {
 14916                           ;usb_device.c: 615: {UIR = 0;};
 14917  01203A  0E00               	movlw	0
 14918  01203C  6E62               	movwf	3938,c	;volatile
 14919                           
 14920                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 14921  01203E  010F               	movlb	15	; () banked
 14922  012040  8136               	bsf	54,0,b	;volatile
 14923                           
 14924                           ; BSR set to: 15
 14925                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 14926  012042  010F               	movlb	15	; () banked
 14927  012044  8936               	bsf	54,4,b	;volatile
 14928                           
 14929                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 14930  012046  0E02               	movlw	2
 14931  012048  6E22               	movwf	_USBDeviceState,c	;volatile
 14932  01204A                     i2l6983:
 14933                           
 14934                           ;usb_device.c: 622: }
 14935                           ;usb_device.c: 623: }
 14936                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 14937  01204A  A462               	btfss	3938,2,c	;volatile
 14938  01204C  D006               	goto	i2l6991
 14939  01204E  010F               	movlb	15	; () banked
 14940  012050  A536               	btfss	54,2,b	;volatile
 14941  012052  D003               	goto	i2l6991
 14942                           
 14943                           ; BSR set to: 15
 14944                           ;usb_device.c: 640: {
 14945                           ;usb_device.c: 641: (UIR &= 0xFB);
 14946  012054  9462               	bcf	3938,2,c	;volatile
 14947                           
 14948                           ; BSR set to: 15
 14949                           ;usb_device.c: 645: USBWakeFromSuspend();
 14950  012056  EC1C  F0A2         	call	_USBWakeFromSuspend	;wreg free
 14951  01205A                     i2l6991:
 14952                           
 14953                           ;usb_device.c: 647: }
 14954                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 14955  01205A  A265               	btfss	3941,1,c	;volatile
 14956  01205C  D002               	goto	i2l144
 14957                           
 14958                           ;usb_device.c: 653: {
 14959                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 14960  01205E  98A1               	bcf	4001,4,c	;volatile
 14961                           
 14962                           ;usb_device.c: 655: return;
 14963  012060  0012               	return	
 14964  012062                     i2l144:
 14965                           
 14966                           ;usb_device.c: 656: }
 14967                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 14968  012062  A062               	btfss	3938,0,c	;volatile
 14969  012064  D009               	goto	i2l7005
 14970  012066  010F               	movlb	15	; () banked
 14971  012068  A136               	btfss	54,0,b	;volatile
 14972  01206A  D006               	goto	i2l7005
 14973                           
 14974                           ; BSR set to: 15
 14975                           ;usb_device.c: 669: {
 14976                           ;usb_device.c: 670: USBDeviceInit();
 14977  01206C  ECBE  F090         	call	i2_USBDeviceInit	;wreg free
 14978                           
 14979                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 14980  012070  88A0               	bsf	4000,4,c	;volatile
 14981                           
 14982                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 14983  012072  0E04               	movlw	4
 14984  012074  6E22               	movwf	_USBDeviceState,c	;volatile
 14985                           
 14986                           ;usb_device.c: 686: (UIR &= 0xFE);
 14987  012076  9062               	bcf	3938,0,c	;volatile
 14988  012078                     i2l7005:
 14989                           
 14990                           ;usb_device.c: 687: }
 14991                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 14992  012078  A862               	btfss	3938,4,c	;volatile
 14993  01207A  D006               	goto	i2l7013
 14994  01207C  010F               	movlb	15	; () banked
 14995  01207E  A936               	btfss	54,4,b	;volatile
 14996  012080  D003               	goto	i2l7013
 14997                           
 14998                           ; BSR set to: 15
 14999                           ;usb_device.c: 693: {
 15000                           ;usb_device.c: 698: USBSuspend();
 15001  012082  EC90  F0A2         	call	_USBSuspend	;wreg free
 15002                           
 15003                           ;usb_device.c: 701: (UIR &= 0xEF);
 15004  012086  9862               	bcf	3938,4,c	;volatile
 15005  012088                     i2l7013:
 15006                           
 15007                           ;usb_device.c: 702: }
 15008                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 15009  012088  AC62               	btfss	3938,6,c	;volatile
 15010  01208A  D019               	goto	i2l7029
 15011                           
 15012                           ;usb_device.c: 705: {
 15013                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 15014  01208C  010F               	movlb	15	; () banked
 15015  01208E  AD36               	btfss	54,6,b	;volatile
 15016  012090  D00E               	goto	i2l7019
 15017                           
 15018                           ; BSR set to: 15
 15019                           ;usb_device.c: 707: {
 15020                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 15021  012092  0E00               	movlw	0
 15022  012094  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15023  012096  0E73               	movlw	115
 15024  012098  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15025  01209A  0E00               	movlw	0
 15026  01209C  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15027  01209E  0E00               	movlw	0
 15028  0120A0  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15029  0120A2  0E00               	movlw	0
 15030  0120A4  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15031  0120A6  0E01               	movlw	1
 15032  0120A8  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15033  0120AA  EC4D  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15034  0120AE                     i2l7019:
 15035                           
 15036                           ;usb_device.c: 709: }
 15037                           ;usb_device.c: 710: (UIR &= 0xBF);
 15038  0120AE  9C62               	bcf	3938,6,c	;volatile
 15039                           
 15040                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 15041  0120B0  5025               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 15042  0120B2  A4D8               	btfss	status,2,c
 15043                           
 15044                           ;usb_device.c: 736: {
 15045                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 15046  0120B4  0625               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 15047                           
 15048                           ;usb_device.c: 738: }
 15049                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 15050  0120B6  5025               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 15051  0120B8  B4D8               	btfsc	status,2,c
 15052                           
 15053                           ;usb_device.c: 745: {
 15054                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 15055  0120BA  EC82  F098         	call	_USBCtrlEPAllowStatusStage	;wreg free
 15056  0120BE                     i2l7029:
 15057                           
 15058                           ;usb_device.c: 747: }
 15059                           ;usb_device.c: 749: }
 15060                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 15061  0120BE  AA62               	btfss	3938,5,c	;volatile
 15062  0120C0  D004               	goto	i2l7035
 15063  0120C2  010F               	movlb	15	; () banked
 15064  0120C4  BB36               	btfsc	54,5,b	;volatile
 15065                           
 15066                           ; BSR set to: 15
 15067                           ;usb_device.c: 752: {
 15068                           ;usb_device.c: 753: USBStallHandler();
 15069  0120C6  EC2D  F0A1         	call	_USBStallHandler	;wreg free
 15070  0120CA                     i2l7035:
 15071                           
 15072                           ;usb_device.c: 754: }
 15073                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 15074  0120CA  A262               	btfss	3938,1,c	;volatile
 15075  0120CC  D012               	goto	i2l7043
 15076  0120CE  010F               	movlb	15	; () banked
 15077  0120D0  A336               	btfss	54,1,b	;volatile
 15078  0120D2  D00F               	goto	i2l7043
 15079                           
 15080                           ; BSR set to: 15
 15081                           ;usb_device.c: 757: {
 15082                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 15083  0120D4  0E7F               	movlw	127
 15084  0120D6  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15085  0120D8  683A               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15086  0120DA  0E00               	movlw	0
 15087  0120DC  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15088  0120DE  0E00               	movlw	0
 15089  0120E0  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15090  0120E2  0E00               	movlw	0
 15091  0120E4  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15092  0120E6  0E01               	movlw	1
 15093  0120E8  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15094  0120EA  EC4D  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15095                           
 15096                           ;usb_device.c: 759: {UEIR = 0;};
 15097  0120EE  0E00               	movlw	0
 15098  0120F0  6E63               	movwf	3939,c	;volatile
 15099  0120F2                     i2l7043:
 15100                           
 15101                           ;usb_device.c: 767: }
 15102                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 15103  0120F2  0E04               	movlw	4
 15104  0120F4  6022               	cpfslt	_USBDeviceState,c	;volatile
 15105  0120F6  D002               	goto	i2l154
 15106                           
 15107                           ;usb_device.c: 775: {
 15108                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 15109  0120F8  98A1               	bcf	4001,4,c	;volatile
 15110                           
 15111                           ;usb_device.c: 777: return;
 15112  0120FA  0012               	return	
 15113  0120FC                     i2l154:
 15114                           
 15115                           ;usb_device.c: 778: }
 15116                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 15117  0120FC  010F               	movlb	15	; () banked
 15118  0120FE  A736               	btfss	54,3,b	;volatile
 15119  012100  D03B               	goto	i2l155
 15120                           
 15121                           ; BSR set to: 15
 15122                           ;usb_device.c: 784: {
 15123                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 15124  012102  0E00               	movlw	0
 15125  012104  6E4B               	movwf	USBDeviceTasks@i,c
 15126  012106                     i2l7049:
 15127                           
 15128                           ; BSR set to: 15
 15129  012106  0E03               	movlw	3
 15130  012108  644B               	cpfsgt	USBDeviceTasks@i,c
 15131  01210A  D001               	goto	i2l156
 15132  01210C  D035               	goto	i2l155
 15133  01210E                     i2l156:
 15134                           
 15135                           ;usb_device.c: 786: {
 15136                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 15137  01210E  A662               	btfss	3938,3,c	;volatile
 15138  012110  D033               	goto	i2l155
 15139                           
 15140                           ;usb_device.c: 788: {
 15141                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 15142  012112  CF64 F02D          	movff	3940,_USTATcopy	;volatile
 15143                           
 15144                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 15145  012116  302D               	rrcf	_USTATcopy,w,c	;volatile
 15146  012118  32E8               	rrcf	wreg,f,c
 15147  01211A  32E8               	rrcf	wreg,f,c
 15148  01211C  0B0F               	andlw	15
 15149  01211E  6E28               	movwf	_endpoint_number,c	;volatile
 15150                           
 15151                           ;usb_device.c: 793: (UIR &= 0xF7);
 15152  012120  9662               	bcf	3938,3,c	;volatile
 15153                           
 15154                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 15155  012122  B42D               	btfsc	_USTATcopy,2,c	;volatile
 15156  012124  D00A               	goto	i2l7063
 15157                           
 15158                           ;usb_device.c: 799: {
 15159                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 15160  012126  5028               	movf	_endpoint_number,w,c	;volatile
 15161  012128  0D01               	mullw	1
 15162  01212A  0EDB               	movlw	low _ep_data_out
 15163  01212C  24F3               	addwf	prodl,w,c
 15164  01212E  6ED9               	movwf	fsr2l,c
 15165  012130  0E00               	movlw	high _ep_data_out
 15166  012132  20F4               	addwfc	prodh,w,c
 15167  012134  6EDA               	movwf	fsr2h,c
 15168  012136  0100               	movlb	0	; () banked
 15169  012138  D008               	goto	L5
 15170  01213A                     i2l7063:
 15171                           
 15172                           ;usb_device.c: 802: else
 15173                           ;usb_device.c: 803: {
 15174                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 15175  01213A  5028               	movf	_endpoint_number,w,c	;volatile
 15176  01213C  0D01               	mullw	1
 15177  01213E  0E16               	movlw	low _ep_data_in
 15178  012140  24F3               	addwf	prodl,w,c
 15179  012142  6ED9               	movwf	fsr2l,c
 15180  012144  0E00               	movlw	high _ep_data_in
 15181  012146  20F4               	addwfc	prodh,w,c
 15182  012148  6EDA               	movwf	fsr2h,c
 15183  01214A                     L5:
 15184  01214A  70DF               	btg	indf2,0,c
 15185                           
 15186                           ;usb_device.c: 805: }
 15187                           ;usb_device.c: 810: if(endpoint_number == 0)
 15188  01214C  5028               	movf	_endpoint_number,w,c	;volatile
 15189  01214E  A4D8               	btfss	status,2,c
 15190  012150  D003               	goto	i2l7069
 15191                           
 15192                           ;usb_device.c: 811: {
 15193                           ;usb_device.c: 812: USBCtrlEPService();
 15194  012152  ECB5  F097         	call	_USBCtrlEPService	;wreg free
 15195                           
 15196                           ;usb_device.c: 813: }
 15197  012156  D00E               	goto	i2l7071
 15198  012158                     i2l7069:
 15199                           
 15200                           ;usb_device.c: 814: else
 15201                           ;usb_device.c: 815: {
 15202                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 15203  012158  0E00               	movlw	0
 15204  01215A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15205  01215C  0E72               	movlw	114
 15206  01215E  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15207  012160  0E2D               	movlw	low _USTATcopy
 15208  012162  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15209  012164  0E00               	movlw	high _USTATcopy
 15210  012166  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15211  012168  0E00               	movlw	0
 15212  01216A  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15213  01216C  0E00               	movlw	0
 15214  01216E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15215  012170  EC4D  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15216  012174                     i2l7071:
 15217  012174  2A4B               	incf	USBDeviceTasks@i,f,c
 15218  012176  D7C7               	goto	i2l7049
 15219  012178                     i2l155:
 15220                           
 15221                           ;usb_device.c: 822: }
 15222                           ;usb_device.c: 823: }
 15223                           ;usb_device.c: 824: }
 15224                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 15225  012178  98A1               	bcf	4001,4,c	;volatile
 15226  01217A  0012               	return		;funcret
 15227  01217C                     __end_of_USBDeviceTasks:
 15228                           	opt stack 0
 15229                           pclatu	equ	0xFFB
 15230                           pclath	equ	0xFFA
 15231                           tblptru	equ	0xFF8
 15232                           tblptrh	equ	0xFF7
 15233                           tblptrl	equ	0xFF6
 15234                           tablat	equ	0xFF5
 15235                           prodh	equ	0xFF4
 15236                           prodl	equ	0xFF3
 15237                           intcon	equ	0xFF2
 15238                           intcon2	equ	0xFF1
 15239                           indf0	equ	0xFEF
 15240                           postinc0	equ	0xFEE
 15241                           fsr0h	equ	0xFEA
 15242                           fsr0l	equ	0xFE9
 15243                           wreg	equ	0xFE8
 15244                           indf1	equ	0xFE7
 15245                           postinc1	equ	0xFE6
 15246                           postdec1	equ	0xFE5
 15247                           fsr1h	equ	0xFE2
 15248                           fsr1l	equ	0xFE1
 15249                           indf2	equ	0xFDF
 15250                           postinc2	equ	0xFDE
 15251                           postdec2	equ	0xFDD
 15252                           plusw2	equ	0xFDB
 15253                           fsr2h	equ	0xFDA
 15254                           fsr2l	equ	0xFD9
 15255                           status	equ	0xFD8
 15256                           
 15257 ;; *************** function i2_USBDeviceInit *****************
 15258 ;; Defined at:
 15259 ;;		line 298 in file "../My_library/usb_cdc/usb/usb_device.c"
 15260 ;; Parameters:    Size  Location     Type
 15261 ;;		None
 15262 ;; Auto vars:     Size  Location     Type
 15263 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 15264 ;; Return value:  Size  Location     Type
 15265 ;;		None               void
 15266 ;; Registers used:
 15267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15268 ;; Tracked objects:
 15269 ;;		On entry : 0/0
 15270 ;;		On exit  : 0/0
 15271 ;;		Unchanged: 0/0
 15272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15274 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15276 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15277 ;;Total ram usage:        1 bytes
 15278 ;; Hardware stack levels used:    1
 15279 ;; Hardware stack levels required when called:    1
 15280 ;; This function calls:
 15281 ;;		i2_memset
 15282 ;; This function is called by:
 15283 ;;		_USBDeviceTasks
 15284 ;; This function uses a non-reentrant model
 15285 ;;
 15286                           
 15287                           	psect	text65
 15288  01217C                     __ptext65:
 15289                           	opt stack 0
 15290  01217C                     i2_USBDeviceInit:
 15291                           	opt stack 17
 15292                           
 15293                           ;usb_device.c: 300: uint8_t i;
 15294                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 15295                           
 15296                           ;incstack = 0
 15297  01217C  98A0               	bcf	4000,4,c	;volatile
 15298                           
 15299                           ;usb_device.c: 305: {UEIR = 0;};
 15300  01217E  0E00               	movlw	0
 15301  012180  6E63               	movwf	3939,c	;volatile
 15302                           
 15303                           ;usb_device.c: 308: {UIR = 0;};
 15304  012182  0E00               	movlw	0
 15305  012184  6E62               	movwf	3938,c	;volatile
 15306                           
 15307                           ;usb_device.c: 311: UEP0 = 0;
 15308  012186  0E00               	movlw	0
 15309  012188  010F               	movlb	15	; () banked
 15310  01218A  6F26               	movwf	38,b	;volatile
 15311                           
 15312                           ; BSR set to: 15
 15313                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 15314  01218C  0E27               	movlw	39
 15315  01218E  6E2E               	movwf	i2memset@p1,c
 15316  012190  0E0F               	movlw	15
 15317  012192  6E2F               	movwf	i2memset@p1+1,c
 15318  012194  0E00               	movlw	0
 15319  012196  6E31               	movwf	i2memset@c+1,c
 15320  012198  0E00               	movlw	0
 15321  01219A  6E30               	movwf	i2memset@c,c
 15322  01219C  0E00               	movlw	0
 15323  01219E  6E33               	movwf	i2memset@n+1,c
 15324  0121A0  0E02               	movlw	2
 15325  0121A2  6E32               	movwf	i2memset@n,c
 15326  0121A4  ECA6  F0A2         	call	i2_memset	;wreg free
 15327                           
 15328                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 15329  0121A8  0E16               	movlw	22
 15330  0121AA  010F               	movlb	15	; () banked
 15331  0121AC  6F39               	movwf	57,b	;volatile
 15332                           
 15333                           ; BSR set to: 15
 15334  0121AE  0E9F               	movlw	159
 15335  0121B0  010F               	movlb	15	; () banked
 15336  0121B2  6F37               	movwf	55,b	;volatile
 15337                           
 15338                           ; BSR set to: 15
 15339  0121B4  0E7B               	movlw	123
 15340  0121B6  010F               	movlb	15	; () banked
 15341  0121B8  6F36               	movwf	54,b	;volatile
 15342                           
 15343                           ; BSR set to: 15
 15344                           ;usb_device.c: 318: ;
 15345                           ;usb_device.c: 321: ;
 15346                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 15347  0121BA  0E00               	movlw	0
 15348  0121BC  6E36               	movwf	i2USBDeviceInit@i,c
 15349  0121BE                     i2l6919:
 15350                           
 15351                           ; BSR set to: 15
 15352  0121BE  0E0B               	movlw	11
 15353  0121C0  6436               	cpfsgt	i2USBDeviceInit@i,c
 15354  0121C2  D001               	goto	i2l6923
 15355  0121C4  D00E               	goto	i2l132
 15356  0121C6                     i2l6923:
 15357                           
 15358                           ;usb_device.c: 325: {
 15359                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 15360  0121C6  5036               	movf	i2USBDeviceInit@i,w,c
 15361  0121C8  0D04               	mullw	4
 15362  0121CA  0E00               	movlw	0
 15363  0121CC  24F3               	addwf	prodl,w,c
 15364  0121CE  6ED9               	movwf	fsr2l,c
 15365  0121D0  0E0D               	movlw	13
 15366  0121D2  20F4               	addwfc	prodh,w,c
 15367  0121D4  6EDA               	movwf	fsr2h,c
 15368  0121D6  6ADE               	clrf	postinc2,c
 15369  0121D8  6ADE               	clrf	postinc2,c
 15370  0121DA  6ADE               	clrf	postinc2,c
 15371  0121DC  6ADD               	clrf	postdec2,c
 15372  0121DE  2A36               	incf	i2USBDeviceInit@i,f,c
 15373  0121E0  D7EE               	goto	i2l6919
 15374  0121E2                     i2l132:
 15375                           
 15376                           ;usb_device.c: 327: }
 15377                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 15378  0121E2  8C65               	bsf	3941,6,c	;volatile
 15379                           
 15380                           ;usb_device.c: 333: UADDR = 0x00;
 15381  0121E4  0E00               	movlw	0
 15382  0121E6  010F               	movlb	15	; () banked
 15383  0121E8  6F38               	movwf	56,b	;volatile
 15384                           
 15385                           ; BSR set to: 15
 15386                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 15387  0121EA  9865               	bcf	3941,4,c	;volatile
 15388                           
 15389                           ; BSR set to: 15
 15390                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 15391  0121EC  9C65               	bcf	3941,6,c	;volatile
 15392                           
 15393                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 15394  0121EE  D009               	goto	i2l6943
 15395  0121F0                     i2l6935:
 15396                           
 15397                           ;usb_device.c: 343: {
 15398                           ;usb_device.c: 344: (UIR &= 0xF7);
 15399  0121F0  9662               	bcf	3938,3,c	;volatile
 15400                           
 15401                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 15402  0121F2  0E00               	movlw	0
 15403  0121F4  6E0D               	movwf	_inPipes+3,c	;volatile
 15404                           
 15405                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 15406  0121F6  0E00               	movlw	0
 15407  0121F8  6E04               	movwf	_outPipes+3,c	;volatile
 15408                           
 15409                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 15410  0121FA  0E00               	movlw	0
 15411  0121FC  6E06               	movwf	_outPipes+5,c	;volatile
 15412  0121FE  0E00               	movlw	0
 15413  012200  6E05               	movwf	_outPipes+4,c	;volatile
 15414  012202                     i2l6943:
 15415  012202  B662               	btfsc	3938,3,c	;volatile
 15416  012204  D7F5               	goto	i2l6935
 15417                           
 15418                           ;usb_device.c: 349: }
 15419                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 15420  012206  0E01               	movlw	1
 15421  012208  6E23               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15422                           
 15423                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 15424  01220A  0E01               	movlw	1
 15425  01220C  6E24               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15426                           
 15427                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 15428  01220E  0E00               	movlw	0
 15429  012210  6E1F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 15430                           
 15431                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 15432  012212  0E00               	movlw	0
 15433  012214  6E20               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 15434                           
 15435                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 15436  012216  0E00               	movlw	0
 15437  012218  0100               	movlb	0	; () banked
 15438  01221A  6FEC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 15439                           
 15440                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 15441  01221C  0E00               	movlw	0
 15442  01221E  6E36               	movwf	i2USBDeviceInit@i,c
 15443  012220                     i2l6947:
 15444                           
 15445                           ; BSR set to: 0
 15446  012220  0E02               	movlw	2
 15447  012222  6436               	cpfsgt	i2USBDeviceInit@i,c
 15448  012224  D001               	goto	i2l6951
 15449  012226  D02E               	goto	i2l6957
 15450  012228                     i2l6951:
 15451                           
 15452                           ;usb_device.c: 363: {
 15453                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 15454  012228  5036               	movf	i2USBDeviceInit@i,w,c
 15455  01222A  0D02               	mullw	2
 15456  01222C  0E10               	movlw	low _pBDTEntryIn
 15457  01222E  24F3               	addwf	prodl,w,c
 15458  012230  6ED9               	movwf	fsr2l,c
 15459  012232  0E00               	movlw	high _pBDTEntryIn
 15460  012234  20F4               	addwfc	prodh,w,c
 15461  012236  6EDA               	movwf	fsr2h,c
 15462  012238  0E00               	movlw	0
 15463  01223A  6EDE               	movwf	postinc2,c
 15464  01223C  0E00               	movlw	0
 15465  01223E  6EDD               	movwf	postdec2,c
 15466                           
 15467                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 15468  012240  5036               	movf	i2USBDeviceInit@i,w,c
 15469  012242  0D02               	mullw	2
 15470  012244  0ED5               	movlw	low _pBDTEntryOut
 15471  012246  24F3               	addwf	prodl,w,c
 15472  012248  6ED9               	movwf	fsr2l,c
 15473  01224A  0E00               	movlw	high _pBDTEntryOut
 15474  01224C  20F4               	addwfc	prodh,w,c
 15475  01224E  6EDA               	movwf	fsr2h,c
 15476  012250  0E00               	movlw	0
 15477  012252  6EDE               	movwf	postinc2,c
 15478  012254  0E00               	movlw	0
 15479  012256  6EDD               	movwf	postdec2,c
 15480                           
 15481                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 15482  012258  5036               	movf	i2USBDeviceInit@i,w,c
 15483  01225A  0D01               	mullw	1
 15484  01225C  0E16               	movlw	low _ep_data_in
 15485  01225E  24F3               	addwf	prodl,w,c
 15486  012260  6ED9               	movwf	fsr2l,c
 15487  012262  0E00               	movlw	high _ep_data_in
 15488  012264  20F4               	addwfc	prodh,w,c
 15489  012266  6EDA               	movwf	fsr2h,c
 15490  012268  0E00               	movlw	0
 15491  01226A  6EDF               	movwf	indf2,c
 15492                           
 15493                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 15494  01226C  5036               	movf	i2USBDeviceInit@i,w,c
 15495  01226E  0D01               	mullw	1
 15496  012270  0EDB               	movlw	low _ep_data_out
 15497  012272  24F3               	addwf	prodl,w,c
 15498  012274  6ED9               	movwf	fsr2l,c
 15499  012276  0E00               	movlw	high _ep_data_out
 15500  012278  20F4               	addwfc	prodh,w,c
 15501  01227A  6EDA               	movwf	fsr2h,c
 15502  01227C  0E00               	movlw	0
 15503  01227E  6EDF               	movwf	indf2,c
 15504  012280  2A36               	incf	i2USBDeviceInit@i,f,c
 15505  012282  D7CE               	goto	i2l6947
 15506  012284                     i2l6957:
 15507                           
 15508                           ;usb_device.c: 368: }
 15509                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 15510  012284  0E08               	movlw	8
 15511  012286  6E10               	movwf	_pBDTEntryIn,c
 15512  012288  0E0D               	movlw	13
 15513  01228A  6E11               	movwf	_pBDTEntryIn+1,c
 15514                           
 15515                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 15516  01228C  0E16               	movlw	22
 15517  01228E  010F               	movlb	15	; () banked
 15518  012290  6F26               	movwf	38,b	;volatile
 15519                           
 15520                           ; BSR set to: 15
 15521                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 15522  012292  0E0D               	movlw	13
 15523  012294  010D               	movlb	13	; () banked
 15524  012296  6F03               	movwf	3,b	;volatile
 15525  012298  0E30               	movlw	48
 15526  01229A  6F02               	movwf	2,b	;volatile
 15527                           
 15528                           ; BSR set to: 13
 15529                           ;usb_device.c: 376: BDT[0].CNT = 8;
 15530  01229C  0E08               	movlw	8
 15531  01229E  010D               	movlb	13	; () banked
 15532  0122A0  6F01               	movwf	1,b	;volatile
 15533                           
 15534                           ; BSR set to: 13
 15535                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 15536  0122A2  0E04               	movlw	4
 15537  0122A4  010D               	movlb	13	; () banked
 15538  0122A6  6F00               	movwf	0,b	;volatile
 15539                           
 15540                           ; BSR set to: 13
 15541                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 15542  0122A8  010D               	movlb	13	; () banked
 15543  0122AA  8F00               	bsf	0,7,b	;volatile
 15544                           
 15545                           ; BSR set to: 13
 15546                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 15547  0122AC  0E00               	movlw	0
 15548  0122AE  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
 15549                           
 15550                           ; BSR set to: 13
 15551                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 15552  0122B0  0E00               	movlw	0
 15553  0122B2  6E22               	movwf	_USBDeviceState,c	;volatile
 15554                           
 15555                           ; BSR set to: 13
 15556  0122B4  0012               	return		;funcret
 15557  0122B6                     __end_ofi2_USBDeviceInit:
 15558                           	opt stack 0
 15559                           pclatu	equ	0xFFB
 15560                           pclath	equ	0xFFA
 15561                           tblptru	equ	0xFF8
 15562                           tblptrh	equ	0xFF7
 15563                           tblptrl	equ	0xFF6
 15564                           tablat	equ	0xFF5
 15565                           prodh	equ	0xFF4
 15566                           prodl	equ	0xFF3
 15567                           intcon	equ	0xFF2
 15568                           intcon2	equ	0xFF1
 15569                           indf0	equ	0xFEF
 15570                           postinc0	equ	0xFEE
 15571                           fsr0h	equ	0xFEA
 15572                           fsr0l	equ	0xFE9
 15573                           wreg	equ	0xFE8
 15574                           indf1	equ	0xFE7
 15575                           postinc1	equ	0xFE6
 15576                           postdec1	equ	0xFE5
 15577                           fsr1h	equ	0xFE2
 15578                           fsr1l	equ	0xFE1
 15579                           indf2	equ	0xFDF
 15580                           postinc2	equ	0xFDE
 15581                           postdec2	equ	0xFDD
 15582                           plusw2	equ	0xFDB
 15583                           fsr2h	equ	0xFDA
 15584                           fsr2l	equ	0xFD9
 15585                           status	equ	0xFD8
 15586                           
 15587 ;; *************** function _USBWakeFromSuspend *****************
 15588 ;; Defined at:
 15589 ;;		line 2302 in file "../My_library/usb_cdc/usb/usb_device.c"
 15590 ;; Parameters:    Size  Location     Type
 15591 ;;		None
 15592 ;; Auto vars:     Size  Location     Type
 15593 ;;		None
 15594 ;; Return value:  Size  Location     Type
 15595 ;;		None               void
 15596 ;; Registers used:
 15597 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15598 ;; Tracked objects:
 15599 ;;		On entry : 0/0
 15600 ;;		On exit  : 0/0
 15601 ;;		Unchanged: 0/0
 15602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15607 ;;Total ram usage:        0 bytes
 15608 ;; Hardware stack levels used:    1
 15609 ;; Hardware stack levels required when called:    4
 15610 ;; This function calls:
 15611 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15612 ;; This function is called by:
 15613 ;;		_USBDeviceTasks
 15614 ;; This function uses a non-reentrant model
 15615 ;;
 15616                           
 15617                           	psect	text66
 15618  014438                     __ptext66:
 15619                           	opt stack 0
 15620  014438                     _USBWakeFromSuspend:
 15621                           	opt stack 14
 15622                           
 15623                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 15624                           
 15625                           ; BSR set to: 13
 15626                           ;incstack = 0
 15627  014438  0E00               	movlw	0
 15628  01443A  0100               	movlb	0	; () banked
 15629  01443C  6FEC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 15630                           
 15631                           ; BSR set to: 0
 15632                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 15633  01443E  0E00               	movlw	0
 15634  014440  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15635  014442  0E74               	movlw	116
 15636  014444  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15637  014446  0E00               	movlw	0
 15638  014448  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15639  01444A  0E00               	movlw	0
 15640  01444C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15641  01444E  0E00               	movlw	0
 15642  014450  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15643  014452  0E00               	movlw	0
 15644  014454  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15645  014456  EC4D  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15646                           
 15647                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 15648  01445A  9265               	bcf	3941,1,c	;volatile
 15649                           
 15650                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 15651  01445C  010F               	movlb	15	; () banked
 15652  01445E  9536               	bcf	54,2,b	;volatile
 15653                           
 15654                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 15655  014460  D001               	goto	i2l6585
 15656  014462                     i2l6583:
 15657                           
 15658                           ;usb_device.c: 2342: {
 15659                           ;usb_device.c: 2343: (UIR &= 0xFB);
 15660  014462  9462               	bcf	3938,2,c	;volatile
 15661  014464                     i2l6585:
 15662  014464  A462               	btfss	3938,2,c	;volatile
 15663  014466  0012               	return	
 15664  014468  D7FC               	goto	i2l6583
 15665  01446A                     __end_of_USBWakeFromSuspend:
 15666                           	opt stack 0
 15667                           pclatu	equ	0xFFB
 15668                           pclath	equ	0xFFA
 15669                           tblptru	equ	0xFF8
 15670                           tblptrh	equ	0xFF7
 15671                           tblptrl	equ	0xFF6
 15672                           tablat	equ	0xFF5
 15673                           prodh	equ	0xFF4
 15674                           prodl	equ	0xFF3
 15675                           intcon	equ	0xFF2
 15676                           intcon2	equ	0xFF1
 15677                           indf0	equ	0xFEF
 15678                           postinc0	equ	0xFEE
 15679                           fsr0h	equ	0xFEA
 15680                           fsr0l	equ	0xFE9
 15681                           wreg	equ	0xFE8
 15682                           indf1	equ	0xFE7
 15683                           postinc1	equ	0xFE6
 15684                           postdec1	equ	0xFE5
 15685                           fsr1h	equ	0xFE2
 15686                           fsr1l	equ	0xFE1
 15687                           indf2	equ	0xFDF
 15688                           postinc2	equ	0xFDE
 15689                           postdec2	equ	0xFDD
 15690                           plusw2	equ	0xFDB
 15691                           fsr2h	equ	0xFDA
 15692                           fsr2l	equ	0xFD9
 15693                           status	equ	0xFD8
 15694                           
 15695 ;; *************** function _USBSuspend *****************
 15696 ;; Defined at:
 15697 ;;		line 2245 in file "../My_library/usb_cdc/usb/usb_device.c"
 15698 ;; Parameters:    Size  Location     Type
 15699 ;;		None
 15700 ;; Auto vars:     Size  Location     Type
 15701 ;;		None
 15702 ;; Return value:  Size  Location     Type
 15703 ;;		None               void
 15704 ;; Registers used:
 15705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15706 ;; Tracked objects:
 15707 ;;		On entry : 0/0
 15708 ;;		On exit  : 0/0
 15709 ;;		Unchanged: 0/0
 15710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15715 ;;Total ram usage:        0 bytes
 15716 ;; Hardware stack levels used:    1
 15717 ;; Hardware stack levels required when called:    4
 15718 ;; This function calls:
 15719 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15720 ;; This function is called by:
 15721 ;;		_USBDeviceTasks
 15722 ;; This function uses a non-reentrant model
 15723 ;;
 15724                           
 15725                           	psect	text67
 15726  014520                     __ptext67:
 15727                           	opt stack 0
 15728  014520                     _USBSuspend:
 15729                           	opt stack 14
 15730                           
 15731                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 15732                           
 15733                           ;incstack = 0
 15734  014520  010F               	movlb	15	; () banked
 15735  014522  8536               	bsf	54,2,b	;volatile
 15736                           
 15737                           ; BSR set to: 15
 15738                           ;usb_device.c: 2271: (UIR &= 0xEF);
 15739  014524  9862               	bcf	3938,4,c	;volatile
 15740                           
 15741                           ; BSR set to: 15
 15742                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 15743  014526  8265               	bsf	3941,1,c	;volatile
 15744                           
 15745                           ; BSR set to: 15
 15746                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 15747  014528  0E01               	movlw	1
 15748  01452A  0100               	movlb	0	; () banked
 15749  01452C  6FEC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 15750                           
 15751                           ; BSR set to: 0
 15752                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 15753  01452E  0E00               	movlw	0
 15754  014530  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15755  014532  0E75               	movlw	117
 15756  014534  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15757  014536  0E00               	movlw	0
 15758  014538  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15759  01453A  0E00               	movlw	0
 15760  01453C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15761  01453E  0E00               	movlw	0
 15762  014540  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15763  014542  0E00               	movlw	0
 15764  014544  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15765  014546  EC4D  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15766  01454A  0012               	return		;funcret
 15767  01454C                     __end_of_USBSuspend:
 15768                           	opt stack 0
 15769                           pclatu	equ	0xFFB
 15770                           pclath	equ	0xFFA
 15771                           tblptru	equ	0xFF8
 15772                           tblptrh	equ	0xFF7
 15773                           tblptrl	equ	0xFF6
 15774                           tablat	equ	0xFF5
 15775                           prodh	equ	0xFF4
 15776                           prodl	equ	0xFF3
 15777                           intcon	equ	0xFF2
 15778                           intcon2	equ	0xFF1
 15779                           indf0	equ	0xFEF
 15780                           postinc0	equ	0xFEE
 15781                           fsr0h	equ	0xFEA
 15782                           fsr0l	equ	0xFE9
 15783                           wreg	equ	0xFE8
 15784                           indf1	equ	0xFE7
 15785                           postinc1	equ	0xFE6
 15786                           postdec1	equ	0xFE5
 15787                           fsr1h	equ	0xFE2
 15788                           fsr1l	equ	0xFE1
 15789                           indf2	equ	0xFDF
 15790                           postinc2	equ	0xFDE
 15791                           postdec2	equ	0xFDD
 15792                           plusw2	equ	0xFDB
 15793                           fsr2h	equ	0xFDA
 15794                           fsr2l	equ	0xFD9
 15795                           status	equ	0xFD8
 15796                           
 15797 ;; *************** function _USBStallHandler *****************
 15798 ;; Defined at:
 15799 ;;		line 2202 in file "../My_library/usb_cdc/usb/usb_device.c"
 15800 ;; Parameters:    Size  Location     Type
 15801 ;;		None
 15802 ;; Auto vars:     Size  Location     Type
 15803 ;;		None
 15804 ;; Return value:  Size  Location     Type
 15805 ;;		None               void
 15806 ;; Registers used:
 15807 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15808 ;; Tracked objects:
 15809 ;;		On entry : 0/0
 15810 ;;		On exit  : 0/0
 15811 ;;		Unchanged: 0/0
 15812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15815 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15816 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15817 ;;Total ram usage:        1 bytes
 15818 ;; Hardware stack levels used:    1
 15819 ;; This function calls:
 15820 ;;		Nothing
 15821 ;; This function is called by:
 15822 ;;		_USBDeviceTasks
 15823 ;; This function uses a non-reentrant model
 15824 ;;
 15825                           
 15826                           	psect	text68
 15827  01425A                     __ptext68:
 15828                           	opt stack 0
 15829  01425A                     _USBStallHandler:
 15830                           	opt stack 18
 15831                           
 15832                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 15833                           
 15834                           ;incstack = 0
 15835  01425A  010F               	movlb	15	; () banked
 15836  01425C  A126               	btfss	38,0,b	;volatile
 15837  01425E  D01E               	goto	i2l294
 15838                           
 15839                           ; BSR set to: 15
 15840                           ;usb_device.c: 2215: {
 15841                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 15842  014260  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15843  014264  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15844  014268  0E80               	movlw	128
 15845  01426A  18DE               	xorwf	postinc2,w,c
 15846  01426C  A4D8               	btfss	status,2,c
 15847  01426E  D014               	goto	i2l6607
 15848                           
 15849                           ; BSR set to: 15
 15850  014270  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 15851  014274  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15852  014278  0E84               	movlw	132
 15853  01427A  18DE               	xorwf	postinc2,w,c
 15854  01427C  A4D8               	btfss	status,2,c
 15855  01427E  D00C               	goto	i2l6607
 15856                           
 15857                           ; BSR set to: 15
 15858                           ;usb_device.c: 2218: {
 15859                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 15860  014280  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15861  014284  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15862  014288  0E0C               	movlw	12
 15863  01428A  6EDF               	movwf	indf2,c
 15864                           
 15865                           ; BSR set to: 15
 15866                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 15867  01428C  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15868  014290  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15869  014294  0E00               	movlw	0
 15870  014296  8EDB               	bsf	plusw2,7,c
 15871  014298                     i2l6607:
 15872                           
 15873                           ; BSR set to: 15
 15874                           ;usb_device.c: 2222: }
 15875                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 15876  014298  010F               	movlb	15	; () banked
 15877  01429A  9126               	bcf	38,0,b	;volatile
 15878  01429C                     i2l294:
 15879                           
 15880                           ; BSR set to: 15
 15881                           ;usb_device.c: 2224: }
 15882                           ;usb_device.c: 2226: (UIR &= 0xDF);
 15883  01429C  9A62               	bcf	3938,5,c	;volatile
 15884                           
 15885                           ; BSR set to: 15
 15886  01429E  0012               	return		;funcret
 15887  0142A0                     __end_of_USBStallHandler:
 15888                           	opt stack 0
 15889                           pclatu	equ	0xFFB
 15890                           pclath	equ	0xFFA
 15891                           tblptru	equ	0xFF8
 15892                           tblptrh	equ	0xFF7
 15893                           tblptrl	equ	0xFF6
 15894                           tablat	equ	0xFF5
 15895                           prodh	equ	0xFF4
 15896                           prodl	equ	0xFF3
 15897                           intcon	equ	0xFF2
 15898                           intcon2	equ	0xFF1
 15899                           indf0	equ	0xFEF
 15900                           postinc0	equ	0xFEE
 15901                           fsr0h	equ	0xFEA
 15902                           fsr0l	equ	0xFE9
 15903                           wreg	equ	0xFE8
 15904                           indf1	equ	0xFE7
 15905                           postinc1	equ	0xFE6
 15906                           postdec1	equ	0xFE5
 15907                           fsr1h	equ	0xFE2
 15908                           fsr1l	equ	0xFE1
 15909                           indf2	equ	0xFDF
 15910                           postinc2	equ	0xFDE
 15911                           postdec2	equ	0xFDD
 15912                           plusw2	equ	0xFDB
 15913                           fsr2h	equ	0xFDA
 15914                           fsr2l	equ	0xFD9
 15915                           status	equ	0xFD8
 15916                           
 15917 ;; *************** function _USBCtrlEPService *****************
 15918 ;; Defined at:
 15919 ;;		line 2369 in file "../My_library/usb_cdc/usb/usb_device.c"
 15920 ;; Parameters:    Size  Location     Type
 15921 ;;		None
 15922 ;; Auto vars:     Size  Location     Type
 15923 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 15924 ;; Return value:  Size  Location     Type
 15925 ;;		None               void
 15926 ;; Registers used:
 15927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15928 ;; Tracked objects:
 15929 ;;		On entry : 0/0
 15930 ;;		On exit  : 0/0
 15931 ;;		Unchanged: 0/0
 15932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15935 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15936 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15937 ;;Total ram usage:        3 bytes
 15938 ;; Hardware stack levels used:    1
 15939 ;; Hardware stack levels required when called:    7
 15940 ;; This function calls:
 15941 ;;		_USBCtrlTrfInHandler
 15942 ;;		_USBCtrlTrfOutHandler
 15943 ;;		_USBCtrlTrfSetupHandler
 15944 ;; This function is called by:
 15945 ;;		_USBDeviceTasks
 15946 ;; This function uses a non-reentrant model
 15947 ;;
 15948                           
 15949                           	psect	text69
 15950  012F6A                     __ptext69:
 15951                           	opt stack 0
 15952  012F6A                     _USBCtrlEPService:
 15953                           	opt stack 11
 15954                           
 15955                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 15956                           
 15957                           ; BSR set to: 15
 15958                           ;incstack = 0
 15959  012F6A  0E2D               	movlw	45
 15960  012F6C  6E25               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 15961                           
 15962                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 15963  012F6E  C02D  F048         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 15964  012F72  0EFD               	movlw	253
 15965  012F74  1648               	andwf	??_USBCtrlEPService,f,c
 15966  012F76  A4D8               	btfss	status,2,c
 15967  012F78  D057               	goto	i2l6641
 15968                           
 15969                           ;usb_device.c: 2380: {
 15970                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 15971  012F7A  C02D  F048         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 15972  012F7E  90D8               	bcf	status,0,c
 15973  012F80  3248               	rrcf	??_USBCtrlEPService,f,c
 15974  012F82  0E3F               	movlw	63
 15975  012F84  1648               	andwf	??_USBCtrlEPService,f,c
 15976  012F86  5048               	movf	??_USBCtrlEPService,w,c
 15977  012F88  0D04               	mullw	4
 15978  012F8A  0E00               	movlw	0
 15979  012F8C  24F3               	addwf	prodl,w,c
 15980  012F8E  6E19               	movwf	_pBDTEntryEP0OutCurrent,c
 15981  012F90  0E0D               	movlw	13
 15982  012F92  20F4               	addwfc	prodh,w,c
 15983  012F94  6E1A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 15984                           
 15985                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 15986  012F96  C019  F01B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 15987  012F9A  C01A  F01C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 15988                           
 15989                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 15990  012F9E  0E04               	movlw	4
 15991  012FA0  1A1B               	xorwf	_pBDTEntryEP0OutNext,f,c
 15992                           
 15993                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 15994  012FA2  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15995  012FA6  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15996  012FAA  30DF               	rrcf	indf2,w,c
 15997  012FAC  32E8               	rrcf	wreg,f,c
 15998  012FAE  0B0F               	andlw	15
 15999  012FB0  0A0D               	xorlw	13
 16000  012FB2  A4D8               	btfss	status,2,c
 16001  012FB4  D036               	goto	i2l6639
 16002                           
 16003                           ;usb_device.c: 2397: {
 16004                           ;usb_device.c: 2398: unsigned char setup_cnt;
 16005                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 16006  012FB6  0E00               	movlw	0
 16007  012FB8  6E4A               	movwf	USBCtrlEPService@setup_cnt,c
 16008  012FBA                     i2l6623:
 16009  012FBA  0E07               	movlw	7
 16010  012FBC  644A               	cpfsgt	USBCtrlEPService@setup_cnt,c
 16011  012FBE  D001               	goto	i2l6627
 16012  012FC0  D023               	goto	i2l6635
 16013  012FC2                     i2l6627:
 16014                           
 16015                           ;usb_device.c: 2405: {
 16016                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 16017  012FC2  EE20 F002          	lfsr	2,2
 16018  012FC6  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 16019  012FC8  26D9               	addwf	fsr2l,f,c
 16020  012FCA  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16021  012FCC  22DA               	addwfc	fsr2h,f,c
 16022  012FCE  CFDE F048          	movff	postinc2,??_USBCtrlEPService
 16023  012FD2  CFDD F049          	movff	postdec2,??_USBCtrlEPService+1
 16024  012FD6  C048  FFD9         	movff	??_USBCtrlEPService,fsr2l
 16025  012FDA  C049  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 16026  012FDE  504A               	movf	USBCtrlEPService@setup_cnt,w,c
 16027  012FE0  0D01               	mullw	1
 16028  012FE2  0E30               	movlw	48
 16029  012FE4  24F3               	addwf	prodl,w,c
 16030  012FE6  6EE1               	movwf	fsr1l,c
 16031  012FE8  0E0D               	movlw	13
 16032  012FEA  20F4               	addwfc	prodh,w,c
 16033  012FEC  6EE2               	movwf	fsr1h,c
 16034  012FEE  CFDF FFE7          	movff	indf2,indf1
 16035                           
 16036                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 16037  012FF2  EE20 F002          	lfsr	2,2
 16038  012FF6  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 16039  012FF8  26D9               	addwf	fsr2l,f,c
 16040  012FFA  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16041  012FFC  22DA               	addwfc	fsr2h,f,c
 16042  012FFE  2ADE               	incf	postinc2,f,c
 16043  013000  0E00               	movlw	0
 16044  013002  22DD               	addwfc	postdec2,f,c
 16045  013004  2A4A               	incf	USBCtrlEPService@setup_cnt,f,c
 16046  013006  D7D9               	goto	i2l6623
 16047  013008                     i2l6635:
 16048                           
 16049                           ;usb_device.c: 2408: }
 16050                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 16051  013008  EE20 F002          	lfsr	2,2
 16052  01300C  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 16053  01300E  26D9               	addwf	fsr2l,f,c
 16054  013010  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16055  013012  22DA               	addwfc	fsr2h,f,c
 16056  013014  0E30               	movlw	48
 16057  013016  6EDE               	movwf	postinc2,c
 16058  013018  0E0D               	movlw	13
 16059  01301A  6EDD               	movwf	postdec2,c
 16060                           
 16061                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 16062  01301C  EC9A  F09E         	call	_USBCtrlTrfSetupHandler	;wreg free
 16063                           
 16064                           ;usb_device.c: 2413: }
 16065  013020  0012               	return	
 16066  013022                     i2l6639:
 16067                           
 16068                           ;usb_device.c: 2414: else
 16069                           ;usb_device.c: 2415: {
 16070                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 16071  013022  EC87  F0A0         	call	_USBCtrlTrfOutHandler	;wreg free
 16072                           
 16073                           ;usb_device.c: 2418: }
 16074                           ;usb_device.c: 2419: }
 16075  013026  0012               	return	
 16076  013028                     i2l6641:
 16077                           
 16078                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 16079  013028  502D               	movf	_USTATcopy,w,c	;volatile
 16080  01302A  0BFD               	andlw	253
 16081  01302C  0A04               	xorlw	4
 16082  01302E  A4D8               	btfss	status,2,c
 16083  013030  0012               	return	
 16084                           
 16085                           ;usb_device.c: 2421: {
 16086                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 16087  013032  ECB9  F09A         	call	_USBCtrlTrfInHandler	;wreg free
 16088  013036  0012               	return	
 16089  013038                     __end_of_USBCtrlEPService:
 16090                           	opt stack 0
 16091                           pclatu	equ	0xFFB
 16092                           pclath	equ	0xFFA
 16093                           tblptru	equ	0xFF8
 16094                           tblptrh	equ	0xFF7
 16095                           tblptrl	equ	0xFF6
 16096                           tablat	equ	0xFF5
 16097                           prodh	equ	0xFF4
 16098                           prodl	equ	0xFF3
 16099                           intcon	equ	0xFF2
 16100                           intcon2	equ	0xFF1
 16101                           indf0	equ	0xFEF
 16102                           postinc0	equ	0xFEE
 16103                           fsr0h	equ	0xFEA
 16104                           fsr0l	equ	0xFE9
 16105                           wreg	equ	0xFE8
 16106                           indf1	equ	0xFE7
 16107                           postinc1	equ	0xFE6
 16108                           postdec1	equ	0xFE5
 16109                           fsr1h	equ	0xFE2
 16110                           fsr1l	equ	0xFE1
 16111                           indf2	equ	0xFDF
 16112                           postinc2	equ	0xFDE
 16113                           postdec2	equ	0xFDD
 16114                           plusw2	equ	0xFDB
 16115                           fsr2h	equ	0xFDA
 16116                           fsr2l	equ	0xFD9
 16117                           status	equ	0xFD8
 16118                           
 16119 ;; *************** function _USBCtrlTrfSetupHandler *****************
 16120 ;; Defined at:
 16121 ;;		line 2469 in file "../My_library/usb_cdc/usb/usb_device.c"
 16122 ;; Parameters:    Size  Location     Type
 16123 ;;		None
 16124 ;; Auto vars:     Size  Location     Type
 16125 ;;		None
 16126 ;; Return value:  Size  Location     Type
 16127 ;;		None               void
 16128 ;; Registers used:
 16129 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16130 ;; Tracked objects:
 16131 ;;		On entry : 0/0
 16132 ;;		On exit  : 0/0
 16133 ;;		Unchanged: 0/0
 16134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16139 ;;Total ram usage:        0 bytes
 16140 ;; Hardware stack levels used:    1
 16141 ;; Hardware stack levels required when called:    6
 16142 ;; This function calls:
 16143 ;;		_USBCheckStdRequest
 16144 ;;		_USBCtrlEPServiceComplete
 16145 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16146 ;; This function is called by:
 16147 ;;		_USBCtrlEPService
 16148 ;; This function uses a non-reentrant model
 16149 ;;
 16150                           
 16151                           	psect	text70
 16152  013D34                     __ptext70:
 16153                           	opt stack 0
 16154  013D34                     _USBCtrlTrfSetupHandler:
 16155                           	opt stack 11
 16156                           
 16157                           ;usb_device.c: 2474: shortPacketStatus = 0;
 16158                           
 16159                           ;incstack = 0
 16160  013D34  0E00               	movlw	0
 16161  013D36  6E29               	movwf	_shortPacketStatus,c	;volatile
 16162                           
 16163                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 16164  013D38  0E00               	movlw	0
 16165  013D3A  6E21               	movwf	_USBDeferStatusStagePacket,c	;volatile
 16166                           
 16167                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 16168  013D3C  0E00               	movlw	0
 16169  013D3E  6E1F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 16170                           
 16171                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 16172  013D40  0E00               	movlw	0
 16173  013D42  6E20               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 16174                           
 16175                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 16176  013D44  0E00               	movlw	0
 16177  013D46  6E1D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 16178                           
 16179                           ;usb_device.c: 2479: controlTransferState = 0;
 16180  013D48  0E00               	movlw	0
 16181  013D4A  6E27               	movwf	_controlTransferState,c	;volatile
 16182                           
 16183                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 16184  013D4C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16185  013D50  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16186  013D54  0E7F               	movlw	127
 16187  013D56  16DF               	andwf	indf2,f,c
 16188                           
 16189                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 16190  013D58  0E04               	movlw	4
 16191  013D5A  1A10               	xorwf	_pBDTEntryIn,f,c
 16192                           
 16193                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 16194  013D5C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16195  013D60  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16196  013D64  0E7F               	movlw	127
 16197  013D66  16DF               	andwf	indf2,f,c
 16198                           
 16199                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 16200  013D68  0E04               	movlw	4
 16201  013D6A  1A10               	xorwf	_pBDTEntryIn,f,c
 16202                           
 16203                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 16204  013D6C  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16205  013D70  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16206  013D74  0E7F               	movlw	127
 16207  013D76  16DF               	andwf	indf2,f,c
 16208                           
 16209                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 16210  013D78  0E00               	movlw	0
 16211  013D7A  6E0D               	movwf	_inPipes+3,c	;volatile
 16212                           
 16213                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 16214  013D7C  0E00               	movlw	0
 16215  013D7E  6E0F               	movwf	_inPipes+5,c	;volatile
 16216  013D80  0E00               	movlw	0
 16217  013D82  6E0E               	movwf	_inPipes+4,c	;volatile
 16218                           
 16219                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 16220  013D84  0E00               	movlw	0
 16221  013D86  6E04               	movwf	_outPipes+3,c	;volatile
 16222                           
 16223                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 16224  013D88  0E00               	movlw	0
 16225  013D8A  6E06               	movwf	_outPipes+5,c	;volatile
 16226  013D8C  0E00               	movlw	0
 16227  013D8E  6E05               	movwf	_outPipes+4,c	;volatile
 16228                           
 16229                           ;usb_device.c: 2503: USBCheckStdRequest();
 16230  013D90  EC34  F095         	call	_USBCheckStdRequest	;wreg free
 16231                           
 16232                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 16233  013D94  0E00               	movlw	0
 16234  013D96  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16235  013D98  0E03               	movlw	3
 16236  013D9A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16237  013D9C  0E00               	movlw	0
 16238  013D9E  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16239  013DA0  0E00               	movlw	0
 16240  013DA2  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16241  013DA4  0E00               	movlw	0
 16242  013DA6  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16243  013DA8  0E00               	movlw	0
 16244  013DAA  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16245  013DAC  EC4D  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16246                           
 16247                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 16248  013DB0  ECF3  F092         	call	_USBCtrlEPServiceComplete	;wreg free
 16249  013DB4  0012               	return		;funcret
 16250  013DB6                     __end_of_USBCtrlTrfSetupHandler:
 16251                           	opt stack 0
 16252                           pclatu	equ	0xFFB
 16253                           pclath	equ	0xFFA
 16254                           tblptru	equ	0xFF8
 16255                           tblptrh	equ	0xFF7
 16256                           tblptrl	equ	0xFF6
 16257                           tablat	equ	0xFF5
 16258                           prodh	equ	0xFF4
 16259                           prodl	equ	0xFF3
 16260                           intcon	equ	0xFF2
 16261                           intcon2	equ	0xFF1
 16262                           indf0	equ	0xFEF
 16263                           postinc0	equ	0xFEE
 16264                           fsr0h	equ	0xFEA
 16265                           fsr0l	equ	0xFE9
 16266                           wreg	equ	0xFE8
 16267                           indf1	equ	0xFE7
 16268                           postinc1	equ	0xFE6
 16269                           postdec1	equ	0xFE5
 16270                           fsr1h	equ	0xFE2
 16271                           fsr1l	equ	0xFE1
 16272                           indf2	equ	0xFDF
 16273                           postinc2	equ	0xFDE
 16274                           postdec2	equ	0xFDD
 16275                           plusw2	equ	0xFDB
 16276                           fsr2h	equ	0xFDA
 16277                           fsr2l	equ	0xFD9
 16278                           status	equ	0xFD8
 16279                           
 16280 ;; *************** function _USBCtrlEPServiceComplete *****************
 16281 ;; Defined at:
 16282 ;;		line 1616 in file "../My_library/usb_cdc/usb/usb_device.c"
 16283 ;; Parameters:    Size  Location     Type
 16284 ;;		None
 16285 ;; Auto vars:     Size  Location     Type
 16286 ;;		None
 16287 ;; Return value:  Size  Location     Type
 16288 ;;		None               void
 16289 ;; Registers used:
 16290 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16291 ;; Tracked objects:
 16292 ;;		On entry : 0/0
 16293 ;;		On exit  : 0/0
 16294 ;;		Unchanged: 0/0
 16295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16300 ;;Total ram usage:        0 bytes
 16301 ;; Hardware stack levels used:    1
 16302 ;; Hardware stack levels required when called:    2
 16303 ;; This function calls:
 16304 ;;		_USBCtrlEPAllowDataStage
 16305 ;;		_USBCtrlEPAllowStatusStage
 16306 ;; This function is called by:
 16307 ;;		_USBCtrlTrfSetupHandler
 16308 ;; This function uses a non-reentrant model
 16309 ;;
 16310                           
 16311                           	psect	text71
 16312  0125E6                     __ptext71:
 16313                           	opt stack 0
 16314  0125E6                     _USBCtrlEPServiceComplete:
 16315                           	opt stack 14
 16316                           
 16317                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 16318                           
 16319                           ;incstack = 0
 16320  0125E6  9865               	bcf	3941,4,c	;volatile
 16321                           
 16322                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 16323  0125E8  BE0D               	btfsc	_inPipes+3,7,c	;volatile
 16324  0125EA  D038               	goto	i2l218
 16325                           
 16326                           ;usb_device.c: 1629: {
 16327                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 16328  0125EC  AE04               	btfss	_outPipes+3,7,c	;volatile
 16329  0125EE  D00B               	goto	i2l6201
 16330                           
 16331                           ;usb_device.c: 1631: {
 16332                           ;usb_device.c: 1632: controlTransferState = 2;
 16333  0125F0  0E02               	movlw	2
 16334  0125F2  6E27               	movwf	_controlTransferState,c	;volatile
 16335                           
 16336                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 16337  0125F4  5020               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 16338  0125F6  B4D8               	btfsc	status,2,c
 16339                           
 16340                           ;usb_device.c: 1644: {
 16341                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 16342  0125F8  ECAD  F09C         	call	_USBCtrlEPAllowDataStage	;wreg free
 16343                           
 16344                           ;usb_device.c: 1646: }
 16345                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 16346  0125FC  0E00               	movlw	0
 16347  0125FE  6E24               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16348                           
 16349                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 16350  012600  0E00               	movlw	0
 16351  012602  6E23               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16352                           
 16353                           ;usb_device.c: 1652: }
 16354  012604  0012               	return	
 16355  012606                     i2l6201:
 16356                           
 16357                           ;usb_device.c: 1653: else
 16358                           ;usb_device.c: 1654: {
 16359                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 16360  012606  EE20 F001          	lfsr	2,1
 16361  01260A  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16362  01260C  26D9               	addwf	fsr2l,f,c
 16363  01260E  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16364  012610  22DA               	addwfc	fsr2h,f,c
 16365  012612  0E08               	movlw	8
 16366  012614  6EDF               	movwf	indf2,c
 16367                           
 16368                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16369  012616  EE20 F002          	lfsr	2,2
 16370  01261A  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16371  01261C  26D9               	addwf	fsr2l,f,c
 16372  01261E  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16373  012620  22DA               	addwfc	fsr2h,f,c
 16374  012622  0E30               	movlw	48
 16375  012624  6EDE               	movwf	postinc2,c
 16376  012626  0E0D               	movlw	13
 16377  012628  6EDD               	movwf	postdec2,c
 16378                           
 16379                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16380  01262A  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16381  01262E  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16382  012632  0E0C               	movlw	12
 16383  012634  6EDF               	movwf	indf2,c
 16384                           
 16385                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16386  012636  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16387  01263A  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16388  01263E  0E00               	movlw	0
 16389  012640  8EDB               	bsf	plusw2,7,c
 16390                           
 16391                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 16392  012642  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16393  012646  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16394  01264A  0E04               	movlw	4
 16395  01264C  6EDF               	movwf	indf2,c
 16396                           
 16397                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16398  01264E  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16399  012652  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16400  012656  0E00               	movlw	0
 16401  012658  8EDB               	bsf	plusw2,7,c
 16402                           
 16403                           ;usb_device.c: 1665: }
 16404                           ;usb_device.c: 1666: }
 16405  01265A  0012               	return	
 16406  01265C                     i2l218:
 16407                           
 16408                           ;usb_device.c: 1667: else
 16409                           ;usb_device.c: 1668: {
 16410                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 16411  01265C  010D               	movlb	13	; () banked
 16412  01265E  AF30               	btfss	48,7,b	;volatile
 16413  012660  D010               	goto	i2l6221
 16414                           
 16415                           ; BSR set to: 13
 16416                           ;usb_device.c: 1670: {
 16417                           ;usb_device.c: 1671: controlTransferState = 1;
 16418  012662  0E01               	movlw	1
 16419  012664  6E27               	movwf	_controlTransferState,c	;volatile
 16420                           
 16421                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 16422  012666  501F               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 16423  012668  B4D8               	btfsc	status,2,c
 16424                           
 16425                           ; BSR set to: 13
 16426                           ;usb_device.c: 1686: {
 16427                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 16428  01266A  ECAD  F09C         	call	_USBCtrlEPAllowDataStage	;wreg free
 16429                           
 16430                           ;usb_device.c: 1688: }
 16431                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 16432  01266E  0E00               	movlw	0
 16433  012670  6E24               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16434                           
 16435                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 16436  012672  0E00               	movlw	0
 16437  012674  6E23               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16438                           
 16439                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 16440  012676  5021               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 16441  012678  A4D8               	btfss	status,2,c
 16442  01267A  0012               	return	
 16443                           
 16444                           ;usb_device.c: 1713: {
 16445                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 16446  01267C  EC82  F098         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16447                           
 16448                           ;usb_device.c: 1715: }
 16449                           ;usb_device.c: 1716: }
 16450  012680  0012               	return	
 16451  012682                     i2l6221:
 16452                           
 16453                           ;usb_device.c: 1717: else
 16454                           ;usb_device.c: 1718: {
 16455                           ;usb_device.c: 1729: controlTransferState = 2;
 16456  012682  0E02               	movlw	2
 16457  012684  6E27               	movwf	_controlTransferState,c	;volatile
 16458                           
 16459                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 16460  012686  EE20 F001          	lfsr	2,1
 16461  01268A  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16462  01268C  26D9               	addwf	fsr2l,f,c
 16463  01268E  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16464  012690  22DA               	addwfc	fsr2h,f,c
 16465  012692  0E08               	movlw	8
 16466  012694  6EDF               	movwf	indf2,c
 16467                           
 16468                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16469  012696  EE20 F002          	lfsr	2,2
 16470  01269A  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16471  01269C  26D9               	addwf	fsr2l,f,c
 16472  01269E  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16473  0126A0  22DA               	addwfc	fsr2h,f,c
 16474  0126A2  0E30               	movlw	48
 16475  0126A4  6EDE               	movwf	postinc2,c
 16476  0126A6  0E0D               	movlw	13
 16477  0126A8  6EDD               	movwf	postdec2,c
 16478                           
 16479                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 16480  0126AA  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16481  0126AE  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16482  0126B2  0E04               	movlw	4
 16483  0126B4  6EDF               	movwf	indf2,c
 16484                           
 16485                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16486  0126B6  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16487  0126BA  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16488  0126BE  0E00               	movlw	0
 16489  0126C0  8EDB               	bsf	plusw2,7,c
 16490                           
 16491                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 16492  0126C2  0E00               	movlw	0
 16493  0126C4  6E24               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16494                           
 16495                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 16496  0126C6  0E00               	movlw	0
 16497  0126C8  6E23               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16498                           
 16499                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 16500  0126CA  5021               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 16501  0126CC  A4D8               	btfss	status,2,c
 16502  0126CE  0012               	return	
 16503                           
 16504                           ;usb_device.c: 1741: {
 16505                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 16506  0126D0  EC82  F098         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16507  0126D4  0012               	return	
 16508  0126D6                     __end_of_USBCtrlEPServiceComplete:
 16509                           	opt stack 0
 16510                           pclatu	equ	0xFFB
 16511                           pclath	equ	0xFFA
 16512                           tblptru	equ	0xFF8
 16513                           tblptrh	equ	0xFF7
 16514                           tblptrl	equ	0xFF6
 16515                           tablat	equ	0xFF5
 16516                           prodh	equ	0xFF4
 16517                           prodl	equ	0xFF3
 16518                           intcon	equ	0xFF2
 16519                           intcon2	equ	0xFF1
 16520                           indf0	equ	0xFEF
 16521                           postinc0	equ	0xFEE
 16522                           fsr0h	equ	0xFEA
 16523                           fsr0l	equ	0xFE9
 16524                           wreg	equ	0xFE8
 16525                           indf1	equ	0xFE7
 16526                           postinc1	equ	0xFE6
 16527                           postdec1	equ	0xFE5
 16528                           fsr1h	equ	0xFE2
 16529                           fsr1l	equ	0xFE1
 16530                           indf2	equ	0xFDF
 16531                           postinc2	equ	0xFDE
 16532                           postdec2	equ	0xFDD
 16533                           plusw2	equ	0xFDB
 16534                           fsr2h	equ	0xFDA
 16535                           fsr2l	equ	0xFD9
 16536                           status	equ	0xFD8
 16537                           
 16538 ;; *************** function _USBCtrlEPAllowDataStage *****************
 16539 ;; Defined at:
 16540 ;;		line 1488 in file "../My_library/usb_cdc/usb/usb_device.c"
 16541 ;; Parameters:    Size  Location     Type
 16542 ;;		None
 16543 ;; Auto vars:     Size  Location     Type
 16544 ;;		None
 16545 ;; Return value:  Size  Location     Type
 16546 ;;		None               void
 16547 ;; Registers used:
 16548 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16549 ;; Tracked objects:
 16550 ;;		On entry : 0/0
 16551 ;;		On exit  : 0/0
 16552 ;;		Unchanged: 0/0
 16553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16558 ;;Total ram usage:        0 bytes
 16559 ;; Hardware stack levels used:    1
 16560 ;; Hardware stack levels required when called:    1
 16561 ;; This function calls:
 16562 ;;		_USBCtrlTrfTxService
 16563 ;; This function is called by:
 16564 ;;		_USBCtrlEPServiceComplete
 16565 ;; This function uses a non-reentrant model
 16566 ;;
 16567                           
 16568                           	psect	text72
 16569  01395A                     __ptext72:
 16570                           	opt stack 0
 16571  01395A                     _USBCtrlEPAllowDataStage:
 16572                           	opt stack 14
 16573                           
 16574                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 16575                           
 16576                           ;incstack = 0
 16577  01395A  0E00               	movlw	0
 16578  01395C  6E1F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 16579                           
 16580                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 16581  01395E  0E00               	movlw	0
 16582  013960  6E20               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 16583                           
 16584                           ;usb_device.c: 1493: if(controlTransferState == 2)
 16585  013962  0E02               	movlw	2
 16586  013964  1827               	xorwf	_controlTransferState,w,c	;volatile
 16587  013966  A4D8               	btfss	status,2,c
 16588  013968  D01F               	goto	i2l5755
 16589                           
 16590                           ;usb_device.c: 1494: {
 16591                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 16592  01396A  EE20 F001          	lfsr	2,1
 16593  01396E  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16594  013970  26D9               	addwf	fsr2l,f,c
 16595  013972  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16596  013974  22DA               	addwfc	fsr2h,f,c
 16597  013976  0E08               	movlw	8
 16598  013978  6EDF               	movwf	indf2,c
 16599                           
 16600                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 16601  01397A  EE20 F002          	lfsr	2,2
 16602  01397E  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16603  013980  26D9               	addwf	fsr2l,f,c
 16604  013982  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16605  013984  22DA               	addwfc	fsr2h,f,c
 16606  013986  0E38               	movlw	56
 16607  013988  6EDE               	movwf	postinc2,c
 16608  01398A  0E0D               	movlw	13
 16609  01398C  6EDD               	movwf	postdec2,c
 16610                           
 16611                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 16612  01398E  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16613  013992  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16614  013996  0E48               	movlw	72
 16615  013998  6EDF               	movwf	indf2,c
 16616                           
 16617                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16618  01399A  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16619  01399E  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16620  0139A2  0E00               	movlw	0
 16621  0139A4  8EDB               	bsf	plusw2,7,c
 16622                           
 16623                           ;usb_device.c: 1500: }
 16624  0139A6  0012               	return	
 16625  0139A8                     i2l5755:
 16626                           
 16627                           ;usb_device.c: 1501: else
 16628                           ;usb_device.c: 1502: {
 16629                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 16630  0139A8  500E               	movf	_inPipes+4,w,c	;volatile
 16631  0139AA  010D               	movlb	13	; () banked
 16632  0139AC  5D36               	subwf	54,w,b	;volatile
 16633  0139AE  500F               	movf	_inPipes+5,w,c	;volatile
 16634  0139B0  010D               	movlb	13	; () banked
 16635  0139B2  5937               	subwfb	55,w,b	;volatile
 16636  0139B4  B0D8               	btfsc	status,0,c
 16637  0139B6  D004               	goto	i2l5759
 16638                           
 16639                           ; BSR set to: 13
 16640                           ;usb_device.c: 1506: {
 16641                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 16642  0139B8  CD36 F00E          	movff	3382,_inPipes+4	;volatile
 16643  0139BC  CD37 F00F          	movff	3383,_inPipes+5	;volatile
 16644  0139C0                     i2l5759:
 16645                           
 16646                           ; BSR set to: 13
 16647                           ;usb_device.c: 1508: }
 16648                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 16649  0139C0  EC4C  F097         	call	_USBCtrlTrfTxService	;wreg free
 16650                           
 16651                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 16652  0139C4  EE20 F002          	lfsr	2,2
 16653  0139C8  5010               	movf	_pBDTEntryIn,w,c
 16654  0139CA  26D9               	addwf	fsr2l,f,c
 16655  0139CC  5011               	movf	_pBDTEntryIn+1,w,c
 16656  0139CE  22DA               	addwfc	fsr2h,f,c
 16657  0139D0  0E38               	movlw	56
 16658  0139D2  6EDE               	movwf	postinc2,c
 16659  0139D4  0E0D               	movlw	13
 16660  0139D6  6EDD               	movwf	postdec2,c
 16661                           
 16662                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 16663  0139D8  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16664  0139DC  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16665  0139E0  0E48               	movlw	72
 16666  0139E2  6EDF               	movwf	indf2,c
 16667                           
 16668                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16669  0139E4  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16670  0139E8  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16671  0139EC  0E00               	movlw	0
 16672  0139EE  8EDB               	bsf	plusw2,7,c
 16673  0139F0  0012               	return	
 16674  0139F2                     __end_of_USBCtrlEPAllowDataStage:
 16675                           	opt stack 0
 16676                           pclatu	equ	0xFFB
 16677                           pclath	equ	0xFFA
 16678                           tblptru	equ	0xFF8
 16679                           tblptrh	equ	0xFF7
 16680                           tblptrl	equ	0xFF6
 16681                           tablat	equ	0xFF5
 16682                           prodh	equ	0xFF4
 16683                           prodl	equ	0xFF3
 16684                           intcon	equ	0xFF2
 16685                           intcon2	equ	0xFF1
 16686                           indf0	equ	0xFEF
 16687                           postinc0	equ	0xFEE
 16688                           fsr0h	equ	0xFEA
 16689                           fsr0l	equ	0xFE9
 16690                           wreg	equ	0xFE8
 16691                           indf1	equ	0xFE7
 16692                           postinc1	equ	0xFE6
 16693                           postdec1	equ	0xFE5
 16694                           fsr1h	equ	0xFE2
 16695                           fsr1l	equ	0xFE1
 16696                           indf2	equ	0xFDF
 16697                           postinc2	equ	0xFDE
 16698                           postdec2	equ	0xFDD
 16699                           plusw2	equ	0xFDB
 16700                           fsr2h	equ	0xFDA
 16701                           fsr2l	equ	0xFD9
 16702                           status	equ	0xFD8
 16703                           
 16704 ;; *************** function _USBCheckStdRequest *****************
 16705 ;; Defined at:
 16706 ;;		line 2689 in file "../My_library/usb_cdc/usb/usb_device.c"
 16707 ;; Parameters:    Size  Location     Type
 16708 ;;		None
 16709 ;; Auto vars:     Size  Location     Type
 16710 ;;		None
 16711 ;; Return value:  Size  Location     Type
 16712 ;;		None               void
 16713 ;; Registers used:
 16714 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16715 ;; Tracked objects:
 16716 ;;		On entry : 0/0
 16717 ;;		On exit  : 0/0
 16718 ;;		Unchanged: 0/0
 16719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16724 ;;Total ram usage:        0 bytes
 16725 ;; Hardware stack levels used:    1
 16726 ;; Hardware stack levels required when called:    5
 16727 ;; This function calls:
 16728 ;;		_USBStdFeatureReqHandler
 16729 ;;		_USBStdGetDscHandler
 16730 ;;		_USBStdGetStatusHandler
 16731 ;;		_USBStdSetCfgHandler
 16732 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16733 ;; This function is called by:
 16734 ;;		_USBCtrlTrfSetupHandler
 16735 ;; This function uses a non-reentrant model
 16736 ;;
 16737                           
 16738                           	psect	text73
 16739  012A68                     __ptext73:
 16740                           	opt stack 0
 16741  012A68                     _USBCheckStdRequest:
 16742                           	opt stack 11
 16743                           
 16744                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 16745                           
 16746                           ;incstack = 0
 16747  012A68  010D               	movlb	13	; () banked
 16748  012A6A  3930               	swapf	48,w,b	;volatile
 16749  012A6C  32E8               	rrcf	wreg,f,c
 16750  012A6E  0B03               	andlw	3
 16751  012A70  0900               	iorlw	0
 16752  012A72  A4D8               	btfss	status,2,c
 16753  012A74  0012               	return	
 16754  012A76  D043               	goto	i2l6319
 16755  012A78                     i2l345:
 16756                           
 16757                           ; BSR set to: 13
 16758                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 16759  012A78  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16760                           
 16761                           ; BSR set to: 13
 16762                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 16763  012A7A  0E08               	movlw	8
 16764  012A7C  6E22               	movwf	_USBDeviceState,c	;volatile
 16765                           
 16766                           ;usb_device.c: 2699: break;
 16767  012A7E  0012               	return	
 16768  012A80                     i2l6289:
 16769                           
 16770                           ; BSR set to: 13
 16771                           ;usb_device.c: 2701: USBStdGetDscHandler();
 16772  012A80  EC5B  F091         	call	_USBStdGetDscHandler	;wreg free
 16773                           
 16774                           ;usb_device.c: 2702: break;
 16775  012A84  0012               	return	
 16776  012A86                     i2l6291:
 16777                           
 16778                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 16779  012A86  ECC6  F094         	call	_USBStdSetCfgHandler	;wreg free
 16780                           
 16781                           ;usb_device.c: 2705: break;
 16782  012A8A  0012               	return	
 16783  012A8C                     i2l6293:
 16784                           
 16785                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 16786  012A8C  0E2C               	movlw	low _USBActiveConfiguration
 16787  012A8E  6E0A               	movwf	_inPipes,c	;volatile
 16788  012A90  0E00               	movlw	high _USBActiveConfiguration
 16789  012A92  6E0B               	movwf	_inPipes+1,c	;volatile
 16790                           
 16791                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16792  012A94  800D               	bsf	_inPipes+3,0,c	;volatile
 16793                           
 16794                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 16795  012A96  0E01               	movlw	1
 16796  012A98  6E0E               	movwf	_inPipes+4,c	;volatile
 16797                           
 16798                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 16799  012A9A  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16800                           
 16801                           ;usb_device.c: 2711: break;
 16802  012A9C  0012               	return	
 16803  012A9E                     i2l6301:
 16804                           
 16805                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 16806  012A9E  EC6E  F09B         	call	_USBStdGetStatusHandler	;wreg free
 16807                           
 16808                           ;usb_device.c: 2714: break;
 16809  012AA2  0012               	return	
 16810  012AA4                     i2l6303:
 16811                           
 16812                           ;usb_device.c: 2716: case 3:
 16813                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 16814  012AA4  EC52  F089         	call	_USBStdFeatureReqHandler	;wreg free
 16815                           
 16816                           ;usb_device.c: 2718: break;
 16817  012AA8  0012               	return	
 16818  012AAA                     i2l6305:
 16819                           
 16820                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 16821  012AAA  010D               	movlb	13	; () banked
 16822  012AAC  5134               	movf	52,w,b	;volatile
 16823  012AAE  0D01               	mullw	1
 16824  012AB0  0E2A               	movlw	low _USBAlternateInterface
 16825  012AB2  24F3               	addwf	prodl,w,c
 16826  012AB4  6E0A               	movwf	_inPipes,c	;volatile
 16827  012AB6  0E00               	movlw	high _USBAlternateInterface
 16828  012AB8  20F4               	addwfc	prodh,w,c
 16829  012ABA  6E0B               	movwf	_inPipes+1,c	;volatile
 16830                           
 16831                           ; BSR set to: 13
 16832                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16833  012ABC  800D               	bsf	_inPipes+3,0,c	;volatile
 16834                           
 16835                           ; BSR set to: 13
 16836                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 16837  012ABE  0E01               	movlw	1
 16838  012AC0  6E0E               	movwf	_inPipes+4,c	;volatile
 16839                           
 16840                           ; BSR set to: 13
 16841                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 16842  012AC2  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16843                           
 16844                           ;usb_device.c: 2724: break;
 16845  012AC4  0012               	return	
 16846  012AC6                     i2l354:
 16847                           
 16848                           ; BSR set to: 13
 16849                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 16850  012AC6  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16851                           
 16852                           ; BSR set to: 13
 16853                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 16854  012AC8  010D               	movlb	13	; () banked
 16855  012ACA  5134               	movf	52,w,b	;volatile
 16856  012ACC  0D01               	mullw	1
 16857  012ACE  0E2A               	movlw	low _USBAlternateInterface
 16858  012AD0  24F3               	addwf	prodl,w,c
 16859  012AD2  6ED9               	movwf	fsr2l,c
 16860  012AD4  0E00               	movlw	high _USBAlternateInterface
 16861  012AD6  20F4               	addwfc	prodh,w,c
 16862  012AD8  6EDA               	movwf	fsr2h,c
 16863  012ADA  CD32 FFDF          	movff	3378,indf2	;volatile
 16864                           
 16865                           ;usb_device.c: 2728: break;
 16866  012ADE  0012               	return	
 16867  012AE0                     i2l6315:
 16868                           
 16869                           ; BSR set to: 13
 16870                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 16871  012AE0  0E00               	movlw	0
 16872  012AE2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16873  012AE4  0E02               	movlw	2
 16874  012AE6  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16875  012AE8  0E00               	movlw	0
 16876  012AEA  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16877  012AEC  0E00               	movlw	0
 16878  012AEE  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16879  012AF0  0E00               	movlw	0
 16880  012AF2  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16881  012AF4  0E00               	movlw	0
 16882  012AF6  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16883  012AF8  EC4D  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16884                           
 16885                           ;usb_device.c: 2735: }
 16886                           
 16887                           ;usb_device.c: 2734: break;
 16888                           
 16889                           ;usb_device.c: 2733: default:
 16890                           
 16891                           ;usb_device.c: 2732: case 12:
 16892                           
 16893                           ;usb_device.c: 2731: break;
 16894  012AFC  0012               	return	
 16895  012AFE                     i2l6319:
 16896  012AFE  010D               	movlb	13	; () banked
 16897  012B00  5131               	movf	49,w,b	;volatile
 16898                           
 16899                           ; Switch size 1, requested type "space"
 16900                           ; Number of cases is 11, Range of values is 0 to 12
 16901                           ; switch strategies available:
 16902                           ; Name         Instructions Cycles
 16903                           ; simple_byte           34    18 (average)
 16904                           ;	Chosen strategy is simple_byte
 16905  012B02  0A00               	xorlw	0	; case 0
 16906  012B04  B4D8               	btfsc	status,2,c
 16907  012B06  D7CB               	goto	i2l6301
 16908  012B08  0A01               	xorlw	1	; case 1
 16909  012B0A  B4D8               	btfsc	status,2,c
 16910  012B0C  D7CB               	goto	i2l6303
 16911  012B0E  0A02               	xorlw	2	; case 3
 16912  012B10  B4D8               	btfsc	status,2,c
 16913  012B12  D7C8               	goto	i2l6303
 16914  012B14  0A06               	xorlw	6	; case 5
 16915  012B16  B4D8               	btfsc	status,2,c
 16916  012B18  D7AF               	goto	i2l345
 16917  012B1A  0A03               	xorlw	3	; case 6
 16918  012B1C  B4D8               	btfsc	status,2,c
 16919  012B1E  D7B0               	goto	i2l6289
 16920  012B20  0A01               	xorlw	1	; case 7
 16921  012B22  B4D8               	btfsc	status,2,c
 16922  012B24  D7DD               	goto	i2l6315
 16923  012B26  0A0F               	xorlw	15	; case 8
 16924  012B28  B4D8               	btfsc	status,2,c
 16925  012B2A  D7B0               	goto	i2l6293
 16926  012B2C  0A01               	xorlw	1	; case 9
 16927  012B2E  B4D8               	btfsc	status,2,c
 16928  012B30  D7AA               	goto	i2l6291
 16929  012B32  0A03               	xorlw	3	; case 10
 16930  012B34  B4D8               	btfsc	status,2,c
 16931  012B36  D7B9               	goto	i2l6305
 16932  012B38  0A01               	xorlw	1	; case 11
 16933  012B3A  B4D8               	btfsc	status,2,c
 16934  012B3C  D7C4               	goto	i2l354
 16935  012B3E  0A07               	xorlw	7	; case 12
 16936  012B40  0012               	return	
 16937  012B42                     __end_of_USBCheckStdRequest:
 16938                           	opt stack 0
 16939                           pclatu	equ	0xFFB
 16940                           pclath	equ	0xFFA
 16941                           tblptru	equ	0xFF8
 16942                           tblptrh	equ	0xFF7
 16943                           tblptrl	equ	0xFF6
 16944                           tablat	equ	0xFF5
 16945                           prodh	equ	0xFF4
 16946                           prodl	equ	0xFF3
 16947                           intcon	equ	0xFF2
 16948                           intcon2	equ	0xFF1
 16949                           indf0	equ	0xFEF
 16950                           postinc0	equ	0xFEE
 16951                           fsr0h	equ	0xFEA
 16952                           fsr0l	equ	0xFE9
 16953                           wreg	equ	0xFE8
 16954                           indf1	equ	0xFE7
 16955                           postinc1	equ	0xFE6
 16956                           postdec1	equ	0xFE5
 16957                           fsr1h	equ	0xFE2
 16958                           fsr1l	equ	0xFE1
 16959                           indf2	equ	0xFDF
 16960                           postinc2	equ	0xFDE
 16961                           postdec2	equ	0xFDD
 16962                           plusw2	equ	0xFDB
 16963                           fsr2h	equ	0xFDA
 16964                           fsr2l	equ	0xFD9
 16965                           status	equ	0xFD8
 16966                           
 16967 ;; *************** function _USBStdSetCfgHandler *****************
 16968 ;; Defined at:
 16969 ;;		line 1968 in file "../My_library/usb_cdc/usb/usb_device.c"
 16970 ;; Parameters:    Size  Location     Type
 16971 ;;		None
 16972 ;; Auto vars:     Size  Location     Type
 16973 ;;  i               1   20[COMRAM] unsigned char 
 16974 ;; Return value:  Size  Location     Type
 16975 ;;		None               void
 16976 ;; Registers used:
 16977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16978 ;; Tracked objects:
 16979 ;;		On entry : 0/0
 16980 ;;		On exit  : 0/0
 16981 ;;		Unchanged: 0/0
 16982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16984 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16986 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16987 ;;Total ram usage:        1 bytes
 16988 ;; Hardware stack levels used:    1
 16989 ;; Hardware stack levels required when called:    4
 16990 ;; This function calls:
 16991 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16992 ;;		i2_memset
 16993 ;; This function is called by:
 16994 ;;		_USBCheckStdRequest
 16995 ;; This function uses a non-reentrant model
 16996 ;;
 16997                           
 16998                           	psect	text74
 16999  01298C                     __ptext74:
 17000                           	opt stack 0
 17001  01298C                     _USBStdSetCfgHandler:
 17002                           	opt stack 11
 17003                           
 17004                           ;usb_device.c: 1970: uint8_t i;
 17005                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 17006                           
 17007                           ;incstack = 0
 17008  01298C  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17009                           
 17010                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 17011  01298E  0E27               	movlw	39
 17012  012990  6E2E               	movwf	i2memset@p1,c
 17013  012992  0E0F               	movlw	15
 17014  012994  6E2F               	movwf	i2memset@p1+1,c
 17015  012996  0E00               	movlw	0
 17016  012998  6E31               	movwf	i2memset@c+1,c
 17017  01299A  0E00               	movlw	0
 17018  01299C  6E30               	movwf	i2memset@c,c
 17019  01299E  0E00               	movlw	0
 17020  0129A0  6E33               	movwf	i2memset@n+1,c
 17021  0129A2  0E02               	movlw	2
 17022  0129A4  6E32               	movwf	i2memset@n,c
 17023  0129A6  ECA6  F0A2         	call	i2_memset	;wreg free
 17024                           
 17025                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 17026  0129AA  0E00               	movlw	0
 17027  0129AC  6E2E               	movwf	i2memset@p1,c
 17028  0129AE  0E0D               	movlw	13
 17029  0129B0  6E2F               	movwf	i2memset@p1+1,c
 17030  0129B2  0E00               	movlw	0
 17031  0129B4  6E31               	movwf	i2memset@c+1,c
 17032  0129B6  0E00               	movlw	0
 17033  0129B8  6E30               	movwf	i2memset@c,c
 17034  0129BA  0E00               	movlw	0
 17035  0129BC  6E33               	movwf	i2memset@n+1,c
 17036  0129BE  0E30               	movlw	48
 17037  0129C0  6E32               	movwf	i2memset@n,c
 17038  0129C2  ECA6  F0A2         	call	i2_memset	;wreg free
 17039                           
 17040                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 17041  0129C6  8C65               	bsf	3941,6,c	;volatile
 17042                           
 17043                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 17044  0129C8  0E00               	movlw	0
 17045  0129CA  6E42               	movwf	USBStdSetCfgHandler@i,c
 17046  0129CC                     i2l5775:
 17047  0129CC  0E02               	movlw	2
 17048  0129CE  6442               	cpfsgt	USBStdSetCfgHandler@i,c
 17049  0129D0  D001               	goto	i2l5779
 17050  0129D2  D016               	goto	i2l5785
 17051  0129D4                     i2l5779:
 17052                           
 17053                           ;usb_device.c: 1988: {
 17054                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 17055  0129D4  5042               	movf	USBStdSetCfgHandler@i,w,c
 17056  0129D6  0D01               	mullw	1
 17057  0129D8  0E16               	movlw	low _ep_data_in
 17058  0129DA  24F3               	addwf	prodl,w,c
 17059  0129DC  6ED9               	movwf	fsr2l,c
 17060  0129DE  0E00               	movlw	high _ep_data_in
 17061  0129E0  20F4               	addwfc	prodh,w,c
 17062  0129E2  6EDA               	movwf	fsr2h,c
 17063  0129E4  0E00               	movlw	0
 17064  0129E6  6EDF               	movwf	indf2,c
 17065                           
 17066                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 17067  0129E8  5042               	movf	USBStdSetCfgHandler@i,w,c
 17068  0129EA  0D01               	mullw	1
 17069  0129EC  0EDB               	movlw	low _ep_data_out
 17070  0129EE  24F3               	addwf	prodl,w,c
 17071  0129F0  6ED9               	movwf	fsr2l,c
 17072  0129F2  0E00               	movlw	high _ep_data_out
 17073  0129F4  20F4               	addwfc	prodh,w,c
 17074  0129F6  6EDA               	movwf	fsr2h,c
 17075  0129F8  0E00               	movlw	0
 17076  0129FA  6EDF               	movwf	indf2,c
 17077  0129FC  2A42               	incf	USBStdSetCfgHandler@i,f,c
 17078  0129FE  D7E6               	goto	i2l5775
 17079  012A00                     i2l5785:
 17080                           
 17081                           ;usb_device.c: 1991: }
 17082                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 17083  012A00  0E2A               	movlw	low _USBAlternateInterface
 17084  012A02  6E2E               	movwf	i2memset@p1,c
 17085  012A04  0E00               	movlw	high _USBAlternateInterface
 17086  012A06  6E2F               	movwf	i2memset@p1+1,c
 17087  012A08  0E00               	movlw	0
 17088  012A0A  6E31               	movwf	i2memset@c+1,c
 17089  012A0C  0E00               	movlw	0
 17090  012A0E  6E30               	movwf	i2memset@c,c
 17091  012A10  0E00               	movlw	0
 17092  012A12  6E33               	movwf	i2memset@n+1,c
 17093  012A14  0E02               	movlw	2
 17094  012A16  6E32               	movwf	i2memset@n,c
 17095  012A18  ECA6  F0A2         	call	i2_memset	;wreg free
 17096                           
 17097                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 17098  012A1C  9C65               	bcf	3941,6,c	;volatile
 17099                           
 17100                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 17101  012A1E  0E08               	movlw	8
 17102  012A20  6E10               	movwf	_pBDTEntryIn,c
 17103  012A22  0E0D               	movlw	13
 17104  012A24  6E11               	movwf	_pBDTEntryIn+1,c
 17105                           
 17106                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 17107  012A26  0E00               	movlw	0
 17108  012A28  6E19               	movwf	_pBDTEntryEP0OutCurrent,c
 17109  012A2A  0E0D               	movlw	13
 17110  012A2C  6E1A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 17111                           
 17112                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 17113  012A2E  C019  F01B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 17114  012A32  C01A  F01C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 17115                           
 17116                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 17117  012A36  CD32 F02C          	movff	3378,_USBActiveConfiguration	;volatile
 17118                           
 17119                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 17120  012A3A  502C               	movf	_USBActiveConfiguration,w,c	;volatile
 17121  012A3C  A4D8               	btfss	status,2,c
 17122  012A3E  D003               	goto	i2l5801
 17123                           
 17124                           ;usb_device.c: 2010: {
 17125                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 17126  012A40  0E10               	movlw	16
 17127  012A42  6E22               	movwf	_USBDeviceState,c	;volatile
 17128                           
 17129                           ;usb_device.c: 2013: }
 17130  012A44  0012               	return	
 17131  012A46                     i2l5801:
 17132                           
 17133                           ;usb_device.c: 2014: else
 17134                           ;usb_device.c: 2015: {
 17135                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 17136  012A46  0E00               	movlw	0
 17137  012A48  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17138  012A4A  0E01               	movlw	1
 17139  012A4C  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17140  012A4E  0E2C               	movlw	low _USBActiveConfiguration
 17141  012A50  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17142  012A52  0E00               	movlw	high _USBActiveConfiguration
 17143  012A54  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17144  012A56  0E00               	movlw	0
 17145  012A58  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17146  012A5A  0E01               	movlw	1
 17147  012A5C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17148  012A5E  EC4D  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17149                           
 17150                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 17151  012A62  0E20               	movlw	32
 17152  012A64  6E22               	movwf	_USBDeviceState,c	;volatile
 17153  012A66  0012               	return	
 17154  012A68                     __end_of_USBStdSetCfgHandler:
 17155                           	opt stack 0
 17156                           pclatu	equ	0xFFB
 17157                           pclath	equ	0xFFA
 17158                           tblptru	equ	0xFF8
 17159                           tblptrh	equ	0xFF7
 17160                           tblptrl	equ	0xFF6
 17161                           tablat	equ	0xFF5
 17162                           prodh	equ	0xFF4
 17163                           prodl	equ	0xFF3
 17164                           intcon	equ	0xFF2
 17165                           intcon2	equ	0xFF1
 17166                           indf0	equ	0xFEF
 17167                           postinc0	equ	0xFEE
 17168                           fsr0h	equ	0xFEA
 17169                           fsr0l	equ	0xFE9
 17170                           wreg	equ	0xFE8
 17171                           indf1	equ	0xFE7
 17172                           postinc1	equ	0xFE6
 17173                           postdec1	equ	0xFE5
 17174                           fsr1h	equ	0xFE2
 17175                           fsr1l	equ	0xFE1
 17176                           indf2	equ	0xFDF
 17177                           postinc2	equ	0xFDE
 17178                           postdec2	equ	0xFDD
 17179                           plusw2	equ	0xFDB
 17180                           fsr2h	equ	0xFDA
 17181                           fsr2l	equ	0xFD9
 17182                           status	equ	0xFD8
 17183                           
 17184 ;; *************** function i2_memset *****************
 17185 ;; Defined at:
 17186 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 17187 ;; Parameters:    Size  Location     Type
 17188 ;;  p1              2    0[COMRAM] PTR void 
 17189 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17190 ;;  c               2    2[COMRAM] int 
 17191 ;;  n               2    4[COMRAM] unsigned int 
 17192 ;; Auto vars:     Size  Location     Type
 17193 ;;  memset          2    6[COMRAM] PTR unsigned char 
 17194 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17195 ;; Return value:  Size  Location     Type
 17196 ;;                  2    0[COMRAM] PTR void 
 17197 ;; Registers used:
 17198 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17199 ;; Tracked objects:
 17200 ;;		On entry : 0/0
 17201 ;;		On exit  : 0/0
 17202 ;;		Unchanged: 0/0
 17203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17204 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17207 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17208 ;;Total ram usage:        8 bytes
 17209 ;; Hardware stack levels used:    1
 17210 ;; This function calls:
 17211 ;;		Nothing
 17212 ;; This function is called by:
 17213 ;;		_USBStdSetCfgHandler
 17214 ;;		i2_USBDeviceInit
 17215 ;; This function uses a non-reentrant model
 17216 ;;
 17217                           
 17218                           	psect	text75
 17219  01454C                     __ptext75:
 17220                           	opt stack 0
 17221  01454C                     i2_memset:
 17222                           	opt stack 17
 17223                           
 17224                           ;incstack = 0
 17225  01454C  C02E  F034         	movff	i2memset@p1,i2memset@p
 17226  014550  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 17227  014554  D008               	goto	i2l5709
 17228  014556                     i2l5705:
 17229  014556  C034  FFD9         	movff	i2memset@p,fsr2l
 17230  01455A  C035  FFDA         	movff	i2memset@p+1,fsr2h
 17231  01455E  C030  FFDF         	movff	i2memset@c,indf2
 17232  014562  4A34               	infsnz	i2memset@p,f,c
 17233  014564  2A35               	incf	i2memset@p+1,f,c
 17234  014566                     i2l5709:
 17235  014566  0632               	decf	i2memset@n,f,c
 17236  014568  A0D8               	btfss	status,0,c
 17237  01456A  0633               	decf	i2memset@n+1,f,c
 17238  01456C  2832               	incf	i2memset@n,w,c
 17239  01456E  E1F3               	bnz	i2l5705
 17240  014570  2833               	incf	i2memset@n+1,w,c
 17241  014572  B4D8               	btfsc	status,2,c
 17242  014574  0012               	return	
 17243  014576  D7EF               	goto	i2l5705
 17244  014578                     __end_ofi2_memset:
 17245                           	opt stack 0
 17246                           pclatu	equ	0xFFB
 17247                           pclath	equ	0xFFA
 17248                           tblptru	equ	0xFF8
 17249                           tblptrh	equ	0xFF7
 17250                           tblptrl	equ	0xFF6
 17251                           tablat	equ	0xFF5
 17252                           prodh	equ	0xFF4
 17253                           prodl	equ	0xFF3
 17254                           intcon	equ	0xFF2
 17255                           intcon2	equ	0xFF1
 17256                           indf0	equ	0xFEF
 17257                           postinc0	equ	0xFEE
 17258                           fsr0h	equ	0xFEA
 17259                           fsr0l	equ	0xFE9
 17260                           wreg	equ	0xFE8
 17261                           indf1	equ	0xFE7
 17262                           postinc1	equ	0xFE6
 17263                           postdec1	equ	0xFE5
 17264                           fsr1h	equ	0xFE2
 17265                           fsr1l	equ	0xFE1
 17266                           indf2	equ	0xFDF
 17267                           postinc2	equ	0xFDE
 17268                           postdec2	equ	0xFDD
 17269                           plusw2	equ	0xFDB
 17270                           fsr2h	equ	0xFDA
 17271                           fsr2l	equ	0xFD9
 17272                           status	equ	0xFD8
 17273                           
 17274 ;; *************** function _USBStdGetStatusHandler *****************
 17275 ;; Defined at:
 17276 ;;		line 2129 in file "../My_library/usb_cdc/usb/usb_device.c"
 17277 ;; Parameters:    Size  Location     Type
 17278 ;;		None
 17279 ;; Auto vars:     Size  Location     Type
 17280 ;;  p               2    1[COMRAM] PTR struct __BDT
 17281 ;;		 -> NULL(0), BDT(48), 
 17282 ;; Return value:  Size  Location     Type
 17283 ;;		None               void
 17284 ;; Registers used:
 17285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17286 ;; Tracked objects:
 17287 ;;		On entry : 0/0
 17288 ;;		On exit  : 0/0
 17289 ;;		Unchanged: 0/0
 17290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17293 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17294 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17295 ;;Total ram usage:        3 bytes
 17296 ;; Hardware stack levels used:    1
 17297 ;; This function calls:
 17298 ;;		Nothing
 17299 ;; This function is called by:
 17300 ;;		_USBCheckStdRequest
 17301 ;; This function uses a non-reentrant model
 17302 ;;
 17303                           
 17304                           	psect	text76
 17305  0136DC                     __ptext76:
 17306                           	opt stack 0
 17307  0136DC                     _USBStdGetStatusHandler:
 17308                           	opt stack 15
 17309                           
 17310                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 17311                           
 17312                           ;incstack = 0
 17313  0136DC  0E00               	movlw	0
 17314  0136DE  010D               	movlb	13	; () banked
 17315  0136E0  6F38               	movwf	56,b	;volatile
 17316                           
 17317                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 17318  0136E2  0E00               	movlw	0
 17319  0136E4  010D               	movlb	13	; () banked
 17320  0136E6  6F39               	movwf	57,b	;volatile
 17321                           
 17322                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 17323  0136E8  D038               	goto	i2l5857
 17324  0136EA                     i2l281:
 17325                           
 17326                           ; BSR set to: 13
 17327                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 17328  0136EA  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17329                           
 17330                           ; BSR set to: 13
 17331                           ;usb_device.c: 2145: }
 17332                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 17333                           
 17334                           ; BSR set to: 13
 17335                           
 17336                           ; BSR set to: 13
 17337                           ;usb_device.c: 2143: {
 17338                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 17339                           
 17340                           ;usb_device.c: 2142: if(0 == 1)
 17341  0136EC  041E               	decf	_RemoteWakeup,w,c	;volatile
 17342  0136EE  A4D8               	btfss	status,2,c
 17343  0136F0  D040               	goto	i2l284
 17344                           
 17345                           ; BSR set to: 13
 17346                           ;usb_device.c: 2148: {
 17347                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 17348  0136F2  010D               	movlb	13	; () banked
 17349  0136F4  8338               	bsf	56,1,b	;volatile
 17350                           
 17351                           ; BSR set to: 13
 17352                           ;usb_device.c: 2150: }
 17353                           ;usb_device.c: 2151: break;
 17354  0136F6  D03D               	goto	i2l284
 17355  0136F8                     i2l285:
 17356                           
 17357                           ; BSR set to: 13
 17358                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 17359  0136F8  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17360                           
 17361                           ;usb_device.c: 2154: break;
 17362  0136FA  D03B               	goto	i2l284
 17363  0136FC                     i2l286:
 17364                           
 17365                           ; BSR set to: 13
 17366                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 17367  0136FC  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17368                           
 17369                           ;usb_device.c: 2160: {
 17370                           ;usb_device.c: 2161: BDT_ENTRY *p;
 17371                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 17372  0136FE  010D               	movlb	13	; () banked
 17373  013700  BF34               	btfsc	52,7,b	;volatile
 17374  013702  D00B               	goto	i2l5847
 17375                           
 17376                           ; BSR set to: 13
 17377                           ;usb_device.c: 2164: {
 17378                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 17379  013704  010D               	movlb	13	; () banked
 17380  013706  5134               	movf	52,w,b	;volatile
 17381  013708  0B0F               	andlw	15
 17382  01370A  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 17383  01370C  502E               	movf	??_USBStdGetStatusHandler,w,c
 17384  01370E  0D02               	mullw	2
 17385  013710  0ED5               	movlw	low _pBDTEntryOut
 17386  013712  24F3               	addwf	prodl,w,c
 17387  013714  6ED9               	movwf	fsr2l,c
 17388  013716  0E00               	movlw	high _pBDTEntryOut
 17389  013718  D00A               	goto	L6
 17390  01371A                     i2l5847:
 17391                           
 17392                           ; BSR set to: 13
 17393                           ;usb_device.c: 2167: else
 17394                           ;usb_device.c: 2168: {
 17395                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 17396  01371A  010D               	movlb	13	; () banked
 17397  01371C  5134               	movf	52,w,b	;volatile
 17398  01371E  0B0F               	andlw	15
 17399  013720  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 17400  013722  502E               	movf	??_USBStdGetStatusHandler,w,c
 17401  013724  0D02               	mullw	2
 17402  013726  0E10               	movlw	low _pBDTEntryIn
 17403  013728  24F3               	addwf	prodl,w,c
 17404  01372A  6ED9               	movwf	fsr2l,c
 17405  01372C  0E00               	movlw	high _pBDTEntryIn
 17406  01372E                     L6:
 17407  01372E  20F4               	addwfc	prodh,w,c
 17408  013730  6EDA               	movwf	fsr2h,c
 17409  013732  CFDE F02F          	movff	postinc2,USBStdGetStatusHandler@p
 17410  013736  CFDD F030          	movff	postdec2,USBStdGetStatusHandler@p+1
 17411                           
 17412                           ; BSR set to: 13
 17413                           ;usb_device.c: 2170: }
 17414                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 17415                           
 17416                           ; BSR set to: 13
 17417  01373A  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 17418  01373E  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 17419  013742  AEDF               	btfss	indf2,7,c
 17420  013744  D016               	goto	i2l284
 17421                           
 17422                           ; BSR set to: 13
 17423  013746  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 17424  01374A  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 17425  01374E  A4DF               	btfss	indf2,2,c
 17426  013750  D010               	goto	i2l284
 17427                           
 17428                           ; BSR set to: 13
 17429                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 17430  013752  0E01               	movlw	1
 17431  013754  010D               	movlb	13	; () banked
 17432  013756  6F38               	movwf	56,b	;volatile
 17433                           
 17434                           ; BSR set to: 13
 17435                           ;usb_device.c: 2175: }
 17436                           ;usb_device.c: 2176: }
 17437                           
 17438                           ; BSR set to: 13
 17439                           ;usb_device.c: 2174: break;
 17440  013758  D00C               	goto	i2l284
 17441  01375A                     i2l5857:
 17442                           
 17443                           ; BSR set to: 13
 17444  01375A  010D               	movlb	13	; () banked
 17445  01375C  5130               	movf	48,w,b	;volatile
 17446  01375E  0B1F               	andlw	31
 17447                           
 17448                           ; Switch size 1, requested type "space"
 17449                           ; Number of cases is 3, Range of values is 0 to 2
 17450                           ; switch strategies available:
 17451                           ; Name         Instructions Cycles
 17452                           ; simple_byte           10     6 (average)
 17453                           ;	Chosen strategy is simple_byte
 17454  013760  0A00               	xorlw	0	; case 0
 17455  013762  B4D8               	btfsc	status,2,c
 17456  013764  D7C2               	goto	i2l281
 17457  013766  0A01               	xorlw	1	; case 1
 17458  013768  B4D8               	btfsc	status,2,c
 17459  01376A  D7C6               	goto	i2l285
 17460  01376C  0A03               	xorlw	3	; case 2
 17461  01376E  B4D8               	btfsc	status,2,c
 17462  013770  D7C5               	goto	i2l286
 17463  013772                     i2l284:
 17464                           
 17465                           ; BSR set to: 13
 17466                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 17467  013772  AE0D               	btfss	_inPipes+3,7,c	;volatile
 17468  013774  0012               	return	
 17469                           
 17470                           ; BSR set to: 13
 17471                           ;usb_device.c: 2179: {
 17472                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 17473  013776  0E38               	movlw	56
 17474  013778  6E0A               	movwf	_inPipes,c	;volatile
 17475  01377A  0E0D               	movlw	13
 17476  01377C  6E0B               	movwf	_inPipes+1,c	;volatile
 17477                           
 17478                           ; BSR set to: 13
 17479                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17480  01377E  800D               	bsf	_inPipes+3,0,c	;volatile
 17481                           
 17482                           ; BSR set to: 13
 17483                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 17484  013780  0E02               	movlw	2
 17485  013782  6E0E               	movwf	_inPipes+4,c	;volatile
 17486  013784  0012               	return	
 17487  013786                     __end_of_USBStdGetStatusHandler:
 17488                           	opt stack 0
 17489                           pclatu	equ	0xFFB
 17490                           pclath	equ	0xFFA
 17491                           tblptru	equ	0xFF8
 17492                           tblptrh	equ	0xFF7
 17493                           tblptrl	equ	0xFF6
 17494                           tablat	equ	0xFF5
 17495                           prodh	equ	0xFF4
 17496                           prodl	equ	0xFF3
 17497                           intcon	equ	0xFF2
 17498                           intcon2	equ	0xFF1
 17499                           indf0	equ	0xFEF
 17500                           postinc0	equ	0xFEE
 17501                           fsr0h	equ	0xFEA
 17502                           fsr0l	equ	0xFE9
 17503                           wreg	equ	0xFE8
 17504                           indf1	equ	0xFE7
 17505                           postinc1	equ	0xFE6
 17506                           postdec1	equ	0xFE5
 17507                           fsr1h	equ	0xFE2
 17508                           fsr1l	equ	0xFE1
 17509                           indf2	equ	0xFDF
 17510                           postinc2	equ	0xFDE
 17511                           postdec2	equ	0xFDD
 17512                           plusw2	equ	0xFDB
 17513                           fsr2h	equ	0xFDA
 17514                           fsr2l	equ	0xFD9
 17515                           status	equ	0xFD8
 17516                           
 17517 ;; *************** function _USBStdGetDscHandler *****************
 17518 ;; Defined at:
 17519 ;;		line 2043 in file "../My_library/usb_cdc/usb/usb_device.c"
 17520 ;; Parameters:    Size  Location     Type
 17521 ;;		None
 17522 ;; Auto vars:     Size  Location     Type
 17523 ;;		None
 17524 ;; Return value:  Size  Location     Type
 17525 ;;		None               void
 17526 ;; Registers used:
 17527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 17528 ;; Tracked objects:
 17529 ;;		On entry : 0/0
 17530 ;;		On exit  : 0/0
 17531 ;;		Unchanged: 0/0
 17532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17535 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17536 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17537 ;;Total ram usage:        2 bytes
 17538 ;; Hardware stack levels used:    1
 17539 ;; This function calls:
 17540 ;;		Nothing
 17541 ;; This function is called by:
 17542 ;;		_USBCheckStdRequest
 17543 ;; This function uses a non-reentrant model
 17544 ;;
 17545                           
 17546                           	psect	text77
 17547  0122B6                     __ptext77:
 17548                           	opt stack 0
 17549  0122B6                     _USBStdGetDscHandler:
 17550                           	opt stack 15
 17551                           
 17552                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 17553                           
 17554                           ; BSR set to: 13
 17555                           ;incstack = 0
 17556  0122B6  0E80               	movlw	128
 17557  0122B8  010D               	movlb	13	; () banked
 17558  0122BA  1930               	xorwf	48,w,b	;volatile
 17559  0122BC  A4D8               	btfss	status,2,c
 17560  0122BE  0012               	return	
 17561                           
 17562                           ; BSR set to: 13
 17563                           ;usb_device.c: 2046: {
 17564                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 17565  0122C0  0EC0               	movlw	192
 17566  0122C2  6E0D               	movwf	_inPipes+3,c	;volatile
 17567                           
 17568                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 17569  0122C4  D085               	goto	i2l5835
 17570  0122C6                     i2l5809:
 17571                           
 17572                           ; BSR set to: 13
 17573                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 17574  0122C6  0EDC               	movlw	low _device_dsc
 17575  0122C8  6E0A               	movwf	_inPipes,c	;volatile
 17576  0122CA  0EFD               	movlw	high _device_dsc
 17577  0122CC  6E0B               	movwf	_inPipes+1,c	;volatile
 17578                           
 17579                           ; BSR set to: 13
 17580                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 17581  0122CE  0E00               	movlw	0
 17582  0122D0  6E0F               	movwf	_inPipes+5,c	;volatile
 17583  0122D2  0E12               	movlw	18
 17584  0122D4  6E0E               	movwf	_inPipes+4,c	;volatile
 17585                           
 17586                           ;usb_device.c: 2058: break;
 17587  0122D6  0012               	return	
 17588  0122D8                     i2l5813:
 17589                           
 17590                           ; BSR set to: 13
 17591                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 17592  0122D8  010D               	movlb	13	; () banked
 17593  0122DA  5132               	movf	50,w,b	;volatile
 17594  0122DC  A4D8               	btfss	status,2,c
 17595  0122DE  D043               	goto	i2l5821
 17596                           
 17597                           ; BSR set to: 13
 17598                           ;usb_device.c: 2064: {
 17599                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 17600  0122E0  010D               	movlb	13	; () banked
 17601  0122E2  5132               	movf	50,w,b	;volatile
 17602  0122E4  0D02               	mullw	2
 17603  0122E6  0E13               	movlw	low _USB_CD_Ptr
 17604  0122E8  24F3               	addwf	prodl,w,c
 17605  0122EA  6EF6               	movwf	tblptrl,c
 17606  0122EC  0EFD               	movlw	high _USB_CD_Ptr
 17607  0122EE  20F4               	addwfc	prodh,w,c
 17608  0122F0  6EF7               	movwf	tblptrh,c
 17609  0122F2                     	if	1	;There are 3 active tblptr bytes
 17610  0122F2  6AF8               	clrf	tblptru,c
 17611  0122F4  0E00               	movlw	low (__mediumconst shr (0+16))
 17612  0122F6  22F8               	addwfc	tblptru,f,c
 17613  0122F8                     	endif
 17614  0122F8  0009               	tblrd		*+
 17615  0122FA  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 17616  0122FE  000A               	tblrd		*-
 17617  012300  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 17618                           
 17619                           ; BSR set to: 13
 17620                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 17621  012304  0E02               	movlw	2
 17622  012306  240A               	addwf	_inPipes,w,c	;volatile
 17623  012308  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 17624  01230A  0E00               	movlw	0
 17625  01230C  200B               	addwfc	_inPipes+1,w,c	;volatile
 17626  01230E  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 17627  012310  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 17628  012314  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 17629  012318  0E00               	movlw	low (__mediumconst shr (0+16))
 17630  01231A  6EF8               	movwf	tblptru,c
 17631  01231C  0E0E               	movlw	(high __ramtop+-1)
 17632  01231E  64F7               	cpfsgt	tblptrh,c
 17633  012320  D003               	bra	i2u482_47
 17634  012322  0008               	tblrd		*
 17635  012324  50F5               	movf	tablat,w,c
 17636  012326  D005               	bra	i2u482_40
 17637  012328                     i2u482_47:
 17638  012328  CFF6 FFE9          	movff	tblptrl,fsr0l
 17639  01232C  CFF7 FFEA          	movff	tblptrh,fsr0h
 17640  012330  50EF               	movf	indf0,w,c
 17641  012332                     i2u482_40:
 17642  012332  6E0E               	movwf	_inPipes+4,c	;volatile
 17643                           
 17644                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 17645  012334  0E03               	movlw	3
 17646  012336  240A               	addwf	_inPipes,w,c	;volatile
 17647  012338  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 17648  01233A  0E00               	movlw	0
 17649  01233C  200B               	addwfc	_inPipes+1,w,c	;volatile
 17650  01233E  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 17651  012340  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 17652  012344  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 17653  012348  0E00               	movlw	low (__mediumconst shr (0+16))
 17654  01234A  6EF8               	movwf	tblptru,c
 17655  01234C  0E0E               	movlw	(high __ramtop+-1)
 17656  01234E  64F7               	cpfsgt	tblptrh,c
 17657  012350  D003               	bra	i2u483_47
 17658  012352  0008               	tblrd		*
 17659  012354  50F5               	movf	tablat,w,c
 17660  012356  D005               	bra	i2u483_40
 17661  012358                     i2u483_47:
 17662  012358  CFF6 FFE9          	movff	tblptrl,fsr0l
 17663  01235C  CFF7 FFEA          	movff	tblptrh,fsr0h
 17664  012360  50EF               	movf	indf0,w,c
 17665  012362                     i2u483_40:
 17666  012362  6E0F               	movwf	_inPipes+5,c	;volatile
 17667                           
 17668                           ;usb_device.c: 2076: }
 17669  012364  0012               	return	
 17670  012366                     i2l5821:
 17671                           
 17672                           ;usb_device.c: 2077: else
 17673                           ;usb_device.c: 2078: {
 17674                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 17675  012366  0E00               	movlw	0
 17676  012368  6E0D               	movwf	_inPipes+3,c	;volatile
 17677                           
 17678                           ;usb_device.c: 2080: }
 17679                           ;usb_device.c: 2081: break;
 17680  01236A  0012               	return	
 17681  01236C                     i2l5823:
 17682                           
 17683                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 17684  01236C  0E03               	movlw	3
 17685  01236E  010D               	movlb	13	; () banked
 17686  012370  6132               	cpfslt	50,b	;volatile
 17687  012372  D028               	goto	i2l5829
 17688                           
 17689                           ; BSR set to: 13
 17690                           ;usb_device.c: 2087: {
 17691                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 17692  012374  010D               	movlb	13	; () banked
 17693  012376  5132               	movf	50,w,b	;volatile
 17694  012378  0D02               	mullw	2
 17695  01237A  0E0D               	movlw	low _USB_SD_Ptr
 17696  01237C  24F3               	addwf	prodl,w,c
 17697  01237E  6EF6               	movwf	tblptrl,c
 17698  012380  0EFD               	movlw	high _USB_SD_Ptr
 17699  012382  20F4               	addwfc	prodh,w,c
 17700  012384  6EF7               	movwf	tblptrh,c
 17701  012386                     	if	1	;There are 3 active tblptr bytes
 17702  012386  6AF8               	clrf	tblptru,c
 17703  012388  0E00               	movlw	low (__mediumconst shr (0+16))
 17704  01238A  22F8               	addwfc	tblptru,f,c
 17705  01238C                     	endif
 17706  01238C  0009               	tblrd		*+
 17707  01238E  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 17708  012392  000A               	tblrd		*-
 17709  012394  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 17710                           
 17711                           ; BSR set to: 13
 17712                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 17713  012398  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 17714  01239C  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 17715  0123A0  0E00               	movlw	low (__mediumconst shr (0+16))
 17716  0123A2  6EF8               	movwf	tblptru,c
 17717  0123A4  0E0E               	movlw	(high __ramtop+-1)
 17718  0123A6  64F7               	cpfsgt	tblptrh,c
 17719  0123A8  D003               	bra	i2u485_47
 17720  0123AA  0008               	tblrd		*
 17721  0123AC  50F5               	movf	tablat,w,c
 17722  0123AE  D005               	bra	i2u485_40
 17723  0123B0                     i2u485_47:
 17724  0123B0  CFF6 FFE9          	movff	tblptrl,fsr0l
 17725  0123B4  CFF7 FFEA          	movff	tblptrh,fsr0h
 17726  0123B8  50EF               	movf	indf0,w,c
 17727  0123BA                     i2u485_40:
 17728  0123BA  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 17729  0123BC  502E               	movf	??_USBStdGetDscHandler,w,c
 17730  0123BE  6E0E               	movwf	_inPipes+4,c	;volatile
 17731  0123C0  6A0F               	clrf	_inPipes+5,c	;volatile
 17732                           
 17733                           ;usb_device.c: 2092: }
 17734  0123C2  0012               	return	
 17735  0123C4                     i2l5829:
 17736                           
 17737                           ;usb_device.c: 2102: else
 17738                           ;usb_device.c: 2103: {
 17739                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 17740  0123C4  0E00               	movlw	0
 17741  0123C6  6E0D               	movwf	_inPipes+3,c	;volatile
 17742                           
 17743                           ;usb_device.c: 2105: }
 17744                           ;usb_device.c: 2106: break;
 17745  0123C8  0012               	return	
 17746  0123CA                     i2l5831:
 17747                           
 17748                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 17749  0123CA  0E00               	movlw	0
 17750  0123CC  6E0D               	movwf	_inPipes+3,c	;volatile
 17751                           
 17752                           ;usb_device.c: 2110: }
 17753                           
 17754                           ;usb_device.c: 2109: break;
 17755  0123CE  0012               	return	
 17756  0123D0                     i2l5835:
 17757  0123D0  010D               	movlb	13	; () banked
 17758  0123D2  5133               	movf	51,w,b	;volatile
 17759                           
 17760                           ; Switch size 1, requested type "space"
 17761                           ; Number of cases is 3, Range of values is 1 to 3
 17762                           ; switch strategies available:
 17763                           ; Name         Instructions Cycles
 17764                           ; simple_byte           10     6 (average)
 17765                           ;	Chosen strategy is simple_byte
 17766  0123D4  0A01               	xorlw	1	; case 1
 17767  0123D6  B4D8               	btfsc	status,2,c
 17768  0123D8  D776               	goto	i2l5809
 17769  0123DA  0A03               	xorlw	3	; case 2
 17770  0123DC  B4D8               	btfsc	status,2,c
 17771  0123DE  D77C               	goto	i2l5813
 17772  0123E0  0A01               	xorlw	1	; case 3
 17773  0123E2  B4D8               	btfsc	status,2,c
 17774  0123E4  D7C3               	goto	i2l5823
 17775  0123E6  D7F1               	goto	i2l5831
 17776  0123E8                     __end_of_USBStdGetDscHandler:
 17777                           	opt stack 0
 17778                           pclatu	equ	0xFFB
 17779                           pclath	equ	0xFFA
 17780                           tblptru	equ	0xFF8
 17781                           tblptrh	equ	0xFF7
 17782                           tblptrl	equ	0xFF6
 17783                           tablat	equ	0xFF5
 17784                           prodh	equ	0xFF4
 17785                           prodl	equ	0xFF3
 17786                           intcon	equ	0xFF2
 17787                           intcon2	equ	0xFF1
 17788                           indf0	equ	0xFEF
 17789                           postinc0	equ	0xFEE
 17790                           fsr0h	equ	0xFEA
 17791                           fsr0l	equ	0xFE9
 17792                           wreg	equ	0xFE8
 17793                           indf1	equ	0xFE7
 17794                           postinc1	equ	0xFE6
 17795                           postdec1	equ	0xFE5
 17796                           fsr1h	equ	0xFE2
 17797                           fsr1l	equ	0xFE1
 17798                           indf2	equ	0xFDF
 17799                           postinc2	equ	0xFDE
 17800                           postdec2	equ	0xFDD
 17801                           plusw2	equ	0xFDB
 17802                           fsr2h	equ	0xFDA
 17803                           fsr2l	equ	0xFD9
 17804                           status	equ	0xFD8
 17805                           
 17806 ;; *************** function _USBStdFeatureReqHandler *****************
 17807 ;; Defined at:
 17808 ;;		line 2757 in file "../My_library/usb_cdc/usb/usb_device.c"
 17809 ;; Parameters:    Size  Location     Type
 17810 ;;		None
 17811 ;; Auto vars:     Size  Location     Type
 17812 ;;  p               2   24[COMRAM] PTR struct __BDT
 17813 ;;		 -> NULL(0), BDT(48), 
 17814 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 17815 ;;		 -> UEP0(1), 
 17816 ;;  current_ep_d    1   23[COMRAM] struct .
 17817 ;; Return value:  Size  Location     Type
 17818 ;;		None               void
 17819 ;; Registers used:
 17820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17821 ;; Tracked objects:
 17822 ;;		On entry : 0/0
 17823 ;;		On exit  : 0/0
 17824 ;;		Unchanged: 0/0
 17825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17827 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17828 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17829 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17830 ;;Total ram usage:        6 bytes
 17831 ;; Hardware stack levels used:    1
 17832 ;; Hardware stack levels required when called:    4
 17833 ;; This function calls:
 17834 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17835 ;; This function is called by:
 17836 ;;		_USBCheckStdRequest
 17837 ;; This function uses a non-reentrant model
 17838 ;;
 17839                           
 17840                           	psect	text78
 17841  0112A4                     __ptext78:
 17842                           	opt stack 0
 17843  0112A4                     _USBStdFeatureReqHandler:
 17844                           	opt stack 11
 17845                           
 17846                           ;usb_device.c: 2759: BDT_ENTRY *p;
 17847                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 17848                           ;usb_device.c: 2764: unsigned char* pUEP;
 17849                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 17850                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 17851                           
 17852                           ;incstack = 0
 17853  0112A4  010D               	movlb	13	; () banked
 17854  0112A6  0532               	decf	50,w,b	;volatile
 17855  0112A8  A4D8               	btfss	status,2,c
 17856  0112AA  D010               	goto	i2l360
 17857                           
 17858                           ; BSR set to: 13
 17859  0112AC  010D               	movlb	13	; () banked
 17860  0112AE  5130               	movf	48,w,b	;volatile
 17861  0112B0  0B1F               	andlw	31
 17862  0112B2  0900               	iorlw	0
 17863  0112B4  A4D8               	btfss	status,2,c
 17864  0112B6  D00A               	goto	i2l360
 17865                           
 17866                           ; BSR set to: 13
 17867                           ;usb_device.c: 2804: {
 17868                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 17869  0112B8  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17870                           
 17871                           ; BSR set to: 13
 17872                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 17873  0112BA  0E03               	movlw	3
 17874  0112BC  010D               	movlb	13	; () banked
 17875  0112BE  1931               	xorwf	49,w,b	;volatile
 17876  0112C0  A4D8               	btfss	status,2,c
 17877  0112C2  D002               	goto	i2l5875
 17878                           
 17879                           ; BSR set to: 13
 17880                           ;usb_device.c: 2807: RemoteWakeup = 1;
 17881  0112C4  0E01               	movlw	1
 17882  0112C6  D001               	goto	L7
 17883  0112C8                     i2l5875:
 17884                           
 17885                           ; BSR set to: 13
 17886                           ;usb_device.c: 2808: else
 17887                           ;usb_device.c: 2809: RemoteWakeup = 0;
 17888  0112C8  0E00               	movlw	0
 17889  0112CA                     L7:
 17890  0112CA  6E1E               	movwf	_RemoteWakeup,c	;volatile
 17891  0112CC                     i2l360:
 17892                           
 17893                           ; BSR set to: 13
 17894                           ;usb_device.c: 2810: }
 17895                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 17896                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 17897                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 17898                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 17899  0112CC  010D               	movlb	13	; () banked
 17900  0112CE  5132               	movf	50,w,b	;volatile
 17901  0112D0  A4D8               	btfss	status,2,c
 17902  0112D2  0012               	return	
 17903                           
 17904                           ; BSR set to: 13
 17905  0112D4  010D               	movlb	13	; () banked
 17906  0112D6  5130               	movf	48,w,b	;volatile
 17907  0112D8  0B1F               	andlw	31
 17908  0112DA  0A02               	xorlw	2
 17909  0112DC  A4D8               	btfss	status,2,c
 17910  0112DE  0012               	return	
 17911                           
 17912                           ; BSR set to: 13
 17913  0112E0  010D               	movlb	13	; () banked
 17914  0112E2  5134               	movf	52,w,b	;volatile
 17915  0112E4  0B0F               	andlw	15
 17916  0112E6  0900               	iorlw	0
 17917  0112E8  B4D8               	btfsc	status,2,c
 17918  0112EA  0012               	return	
 17919                           
 17920                           ; BSR set to: 13
 17921  0112EC  010D               	movlb	13	; () banked
 17922  0112EE  5134               	movf	52,w,b	;volatile
 17923  0112F0  0B0F               	andlw	15
 17924  0112F2  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17925  0112F4  0E03               	movlw	3
 17926  0112F6  6042               	cpfslt	??_USBStdFeatureReqHandler,c
 17927  0112F8  0012               	return	
 17928                           
 17929                           ; BSR set to: 13
 17930  0112FA  0E20               	movlw	32
 17931  0112FC  1822               	xorwf	_USBDeviceState,w,c	;volatile
 17932  0112FE  A4D8               	btfss	status,2,c
 17933  011300  0012               	return	
 17934                           
 17935                           ; BSR set to: 13
 17936                           ;usb_device.c: 2817: {
 17937                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 17938  011302  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17939                           
 17940                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 17941  011304  010D               	movlb	13	; () banked
 17942  011306  BF34               	btfsc	52,7,b	;volatile
 17943  011308  D01B               	goto	i2l5889
 17944                           
 17945                           ; BSR set to: 13
 17946                           ;usb_device.c: 2824: {
 17947                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 17948  01130A  010D               	movlb	13	; () banked
 17949  01130C  5134               	movf	52,w,b	;volatile
 17950  01130E  0B0F               	andlw	15
 17951  011310  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17952  011312  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17953  011314  0D02               	mullw	2
 17954  011316  0ED5               	movlw	low _pBDTEntryOut
 17955  011318  24F3               	addwf	prodl,w,c
 17956  01131A  6ED9               	movwf	fsr2l,c
 17957  01131C  0E00               	movlw	high _pBDTEntryOut
 17958  01131E  20F4               	addwfc	prodh,w,c
 17959  011320  6EDA               	movwf	fsr2h,c
 17960  011322  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
 17961  011326  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
 17962                           
 17963                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 17964  01132A  010D               	movlb	13	; () banked
 17965  01132C  5134               	movf	52,w,b	;volatile
 17966  01132E  0B0F               	andlw	15
 17967  011330  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17968  011332  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17969  011334  0D01               	mullw	1
 17970  011336  0EDB               	movlw	low _ep_data_out
 17971  011338  24F3               	addwf	prodl,w,c
 17972  01133A  6ED9               	movwf	fsr2l,c
 17973  01133C  0E00               	movlw	high _ep_data_out
 17974  01133E  D01A               	goto	L8
 17975  011340                     i2l5889:
 17976                           
 17977                           ; BSR set to: 13
 17978                           ;usb_device.c: 2828: else
 17979                           ;usb_device.c: 2829: {
 17980                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 17981  011340  010D               	movlb	13	; () banked
 17982  011342  5134               	movf	52,w,b	;volatile
 17983  011344  0B0F               	andlw	15
 17984  011346  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17985  011348  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17986  01134A  0D02               	mullw	2
 17987  01134C  0E10               	movlw	low _pBDTEntryIn
 17988  01134E  24F3               	addwf	prodl,w,c
 17989  011350  6ED9               	movwf	fsr2l,c
 17990  011352  0E00               	movlw	high _pBDTEntryIn
 17991  011354  20F4               	addwfc	prodh,w,c
 17992  011356  6EDA               	movwf	fsr2h,c
 17993  011358  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
 17994  01135C  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
 17995                           
 17996                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 17997  011360  010D               	movlb	13	; () banked
 17998  011362  5134               	movf	52,w,b	;volatile
 17999  011364  0B0F               	andlw	15
 18000  011366  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18001  011368  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18002  01136A  0D01               	mullw	1
 18003  01136C  0E16               	movlw	low _ep_data_in
 18004  01136E  24F3               	addwf	prodl,w,c
 18005  011370  6ED9               	movwf	fsr2l,c
 18006  011372  0E00               	movlw	high _ep_data_in
 18007  011374                     L8:
 18008  011374  20F4               	addwfc	prodh,w,c
 18009  011376  6EDA               	movwf	fsr2h,c
 18010  011378  50DF               	movf	indf2,w,c
 18011  01137A  6E45               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 18012                           
 18013                           ; BSR set to: 13
 18014                           ;usb_device.c: 2832: }
 18015                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 18016                           
 18017                           ; BSR set to: 13
 18018  01137C  B045               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 18019  01137E  D002               	goto	i2l5895
 18020                           
 18021                           ; BSR set to: 13
 18022                           ;usb_device.c: 2839: {
 18023                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 18024  011380  9446               	bcf	USBStdFeatureReqHandler@p,2,c
 18025                           
 18026                           ;usb_device.c: 2841: }
 18027  011382  D001               	goto	i2l5897
 18028  011384                     i2l5895:
 18029                           
 18030                           ; BSR set to: 13
 18031                           ;usb_device.c: 2842: else
 18032                           ;usb_device.c: 2843: {
 18033                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 18034  011384  8446               	bsf	USBStdFeatureReqHandler@p,2,c
 18035  011386                     i2l5897:
 18036                           
 18037                           ; BSR set to: 13
 18038                           ;usb_device.c: 2845: }
 18039                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 18040  011386  010D               	movlb	13	; () banked
 18041  011388  BF34               	btfsc	52,7,b	;volatile
 18042  01138A  D00B               	goto	i2l5901
 18043                           
 18044                           ; BSR set to: 13
 18045                           ;usb_device.c: 2851: {
 18046                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 18047  01138C  010D               	movlb	13	; () banked
 18048  01138E  5134               	movf	52,w,b	;volatile
 18049  011390  0B0F               	andlw	15
 18050  011392  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18051  011394  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18052  011396  0D02               	mullw	2
 18053  011398  0ED5               	movlw	low _pBDTEntryOut
 18054  01139A  24F3               	addwf	prodl,w,c
 18055  01139C  6ED9               	movwf	fsr2l,c
 18056  01139E  0E00               	movlw	high _pBDTEntryOut
 18057  0113A0  D00A               	goto	L9
 18058  0113A2                     i2l5901:
 18059                           
 18060                           ; BSR set to: 13
 18061                           ;usb_device.c: 2854: else
 18062                           ;usb_device.c: 2855: {
 18063                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 18064  0113A2  010D               	movlb	13	; () banked
 18065  0113A4  5134               	movf	52,w,b	;volatile
 18066  0113A6  0B0F               	andlw	15
 18067  0113A8  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18068  0113AA  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18069  0113AC  0D02               	mullw	2
 18070  0113AE  0E10               	movlw	low _pBDTEntryIn
 18071  0113B0  24F3               	addwf	prodl,w,c
 18072  0113B2  6ED9               	movwf	fsr2l,c
 18073  0113B4  0E00               	movlw	high _pBDTEntryIn
 18074  0113B6                     L9:
 18075  0113B6  20F4               	addwfc	prodh,w,c
 18076  0113B8  6EDA               	movwf	fsr2h,c
 18077  0113BA  C046  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 18078  0113BE  C047  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 18079                           
 18080                           ; BSR set to: 13
 18081                           ;usb_device.c: 2857: }
 18082                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 18083                           
 18084                           ; BSR set to: 13
 18085  0113C2  0E03               	movlw	3
 18086  0113C4  010D               	movlb	13	; () banked
 18087  0113C6  1931               	xorwf	49,w,b	;volatile
 18088  0113C8  A4D8               	btfss	status,2,c
 18089  0113CA  D031               	goto	i2l5917
 18090                           
 18091                           ; BSR set to: 13
 18092                           ;usb_device.c: 2861: {
 18093                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 18094  0113CC  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18095  0113D0  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18096  0113D4  AEDF               	btfss	indf2,7,c
 18097  0113D6  D01E               	goto	i2l5913
 18098                           
 18099                           ; BSR set to: 13
 18100                           ;usb_device.c: 2863: {
 18101                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 18102  0113D8  010D               	movlb	13	; () banked
 18103  0113DA  BF34               	btfsc	52,7,b	;volatile
 18104  0113DC  D00E               	goto	i2l5911
 18105                           
 18106                           ; BSR set to: 13
 18107                           ;usb_device.c: 2867: {
 18108                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 18109  0113DE  010D               	movlb	13	; () banked
 18110  0113E0  5134               	movf	52,w,b	;volatile
 18111  0113E2  0B0F               	andlw	15
 18112  0113E4  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18113  0113E6  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18114  0113E8  0D01               	mullw	1
 18115  0113EA  0EDB               	movlw	low _ep_data_out
 18116  0113EC  24F3               	addwf	prodl,w,c
 18117  0113EE  6ED9               	movwf	fsr2l,c
 18118  0113F0  0E00               	movlw	high _ep_data_out
 18119  0113F2  20F4               	addwfc	prodh,w,c
 18120  0113F4  6EDA               	movwf	fsr2h,c
 18121  0113F6  0100               	movlb	0	; () banked
 18122  0113F8  D00C               	goto	L10
 18123  0113FA                     i2l5911:
 18124                           
 18125                           ;usb_device.c: 2870: else
 18126                           ;usb_device.c: 2871: {
 18127                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 18128  0113FA  010D               	movlb	13	; () banked
 18129  0113FC  5134               	movf	52,w,b	;volatile
 18130  0113FE  0B0F               	andlw	15
 18131  011400  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18132  011402  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18133  011404  0D01               	mullw	1
 18134  011406  0E16               	movlw	low _ep_data_in
 18135  011408  24F3               	addwf	prodl,w,c
 18136  01140A  6ED9               	movwf	fsr2l,c
 18137  01140C  0E00               	movlw	high _ep_data_in
 18138  01140E  20F4               	addwfc	prodh,w,c
 18139  011410  6EDA               	movwf	fsr2h,c
 18140  011412                     L10:
 18141  011412  82DF               	bsf	indf2,1,c
 18142  011414                     i2l5913:
 18143                           
 18144                           ;usb_device.c: 2873: }
 18145                           ;usb_device.c: 2874: }
 18146                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 18147  011414  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18148  011418  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18149  01141C  0E00               	movlw	0
 18150  01141E  84DB               	bsf	plusw2,2,c
 18151                           
 18152                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 18153  011420  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18154  011424  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18155  011428  0E00               	movlw	0
 18156  01142A  8EDB               	bsf	plusw2,7,c
 18157                           
 18158                           ;usb_device.c: 2879: }
 18159  01142C  0012               	return	
 18160  01142E                     i2l5917:
 18161                           
 18162                           ;usb_device.c: 2880: else
 18163                           ;usb_device.c: 2881: {
 18164                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 18165  01142E  0E04               	movlw	4
 18166  011430  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
 18167                           
 18168                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 18169  011432  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18170  011436  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18171  01143A  AEDF               	btfss	indf2,7,c
 18172  01143C  D01B               	goto	i2l5927
 18173                           
 18174                           ;usb_device.c: 2888: {
 18175                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 18176  01143E  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18177  011442  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18178  011446  0E7F               	movlw	127
 18179  011448  16DF               	andwf	indf2,f,c
 18180                           
 18181                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 18182  01144A  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18183  01144E  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18184  011452  0E00               	movlw	0
 18185  011454  8CDB               	bsf	plusw2,6,c
 18186                           
 18187                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 18188  011456  0E00               	movlw	0
 18189  011458  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18190  01145A  0E05               	movlw	5
 18191  01145C  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18192  01145E  C046  F03C         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 18193  011462  C047  F03D         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 18194  011466  0E00               	movlw	0
 18195  011468  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18196  01146A  0E02               	movlw	2
 18197  01146C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18198  01146E  EC4D  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18199                           
 18200                           ;usb_device.c: 2894: }
 18201  011472  D006               	goto	i2l5929
 18202  011474                     i2l5927:
 18203                           
 18204                           ;usb_device.c: 2895: else
 18205                           ;usb_device.c: 2896: {
 18206                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 18207  011474  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18208  011478  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18209  01147C  0E00               	movlw	0
 18210  01147E  8CDB               	bsf	plusw2,6,c
 18211  011480                     i2l5929:
 18212                           
 18213                           ;usb_device.c: 2899: }
 18214                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 18215  011480  0E04               	movlw	4
 18216  011482  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
 18217                           
 18218                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 18219  011484  B245               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 18220  011486  D006               	goto	i2l379
 18221  011488  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18222  01148C  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18223  011490  AEDF               	btfss	indf2,7,c
 18224  011492  D033               	goto	i2l5943
 18225  011494                     i2l379:
 18226                           
 18227                           ;usb_device.c: 2910: {
 18228                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 18229  011494  010D               	movlb	13	; () banked
 18230  011496  BF34               	btfsc	52,7,b	;volatile
 18231  011498  D00E               	goto	i2l5937
 18232                           
 18233                           ; BSR set to: 13
 18234                           ;usb_device.c: 2912: {
 18235                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 18236  01149A  010D               	movlb	13	; () banked
 18237  01149C  5134               	movf	52,w,b	;volatile
 18238  01149E  0B0F               	andlw	15
 18239  0114A0  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18240  0114A2  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18241  0114A4  0D01               	mullw	1
 18242  0114A6  0EDB               	movlw	low _ep_data_out
 18243  0114A8  24F3               	addwf	prodl,w,c
 18244  0114AA  6ED9               	movwf	fsr2l,c
 18245  0114AC  0E00               	movlw	high _ep_data_out
 18246  0114AE  20F4               	addwfc	prodh,w,c
 18247  0114B0  6EDA               	movwf	fsr2h,c
 18248  0114B2  0100               	movlb	0	; () banked
 18249  0114B4  D00C               	goto	L11
 18250  0114B6                     i2l5937:
 18251                           
 18252                           ;usb_device.c: 2915: else
 18253                           ;usb_device.c: 2916: {
 18254                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 18255  0114B6  010D               	movlb	13	; () banked
 18256  0114B8  5134               	movf	52,w,b	;volatile
 18257  0114BA  0B0F               	andlw	15
 18258  0114BC  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18259  0114BE  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18260  0114C0  0D01               	mullw	1
 18261  0114C2  0E16               	movlw	low _ep_data_in
 18262  0114C4  24F3               	addwf	prodl,w,c
 18263  0114C6  6ED9               	movwf	fsr2l,c
 18264  0114C8  0E00               	movlw	high _ep_data_in
 18265  0114CA  20F4               	addwfc	prodh,w,c
 18266  0114CC  6EDA               	movwf	fsr2h,c
 18267  0114CE                     L11:
 18268  0114CE  92DF               	bcf	indf2,1,c
 18269                           
 18270                           ;usb_device.c: 2918: }
 18271                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 18272                           
 18273                           ; BSR set to: 13
 18274  0114D0  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18275  0114D4  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18276  0114D8  0E3B               	movlw	59
 18277  0114DA  16DF               	andwf	indf2,f,c
 18278                           
 18279                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 18280  0114DC  0E00               	movlw	0
 18281  0114DE  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18282  0114E0  0E05               	movlw	5
 18283  0114E2  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18284  0114E4  C046  F03C         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 18285  0114E8  C047  F03D         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 18286  0114EC  0E00               	movlw	0
 18287  0114EE  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18288  0114F0  0E02               	movlw	2
 18289  0114F2  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18290  0114F4  EC4D  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18291                           
 18292                           ;usb_device.c: 2924: }
 18293  0114F8  D006               	goto	i2l5945
 18294  0114FA                     i2l5943:
 18295                           
 18296                           ;usb_device.c: 2925: else
 18297                           ;usb_device.c: 2926: {
 18298                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 18299  0114FA  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18300  0114FE  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18301  011502  0E3B               	movlw	59
 18302  011504  16DF               	andwf	indf2,f,c
 18303  011506                     i2l5945:
 18304                           
 18305                           ;usb_device.c: 2929: }
 18306                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 18307  011506  010D               	movlb	13	; () banked
 18308  011508  5134               	movf	52,w,b	;volatile
 18309  01150A  0B0F               	andlw	15
 18310  01150C  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18311  01150E  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18312  011510  0D01               	mullw	1
 18313  011512  0E26               	movlw	38
 18314  011514  24F3               	addwf	prodl,w,c
 18315  011516  6E43               	movwf	USBStdFeatureReqHandler@pUEP,c
 18316  011518  0E0F               	movlw	15
 18317  01151A  20F4               	addwfc	prodh,w,c
 18318  01151C  6E44               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 18319                           
 18320                           ; BSR set to: 13
 18321                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 18322  01151E  C043  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 18323  011522  C044  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 18324  011526  0EFE               	movlw	254
 18325  011528  16DF               	andwf	indf2,f,c
 18326                           
 18327                           ; BSR set to: 13
 18328  01152A  0012               	return	
 18329  01152C                     __end_of_USBStdFeatureReqHandler:
 18330                           	opt stack 0
 18331                           pclatu	equ	0xFFB
 18332                           pclath	equ	0xFFA
 18333                           tblptru	equ	0xFF8
 18334                           tblptrh	equ	0xFF7
 18335                           tblptrl	equ	0xFF6
 18336                           tablat	equ	0xFF5
 18337                           prodh	equ	0xFF4
 18338                           prodl	equ	0xFF3
 18339                           intcon	equ	0xFF2
 18340                           intcon2	equ	0xFF1
 18341                           indf0	equ	0xFEF
 18342                           postinc0	equ	0xFEE
 18343                           fsr0h	equ	0xFEA
 18344                           fsr0l	equ	0xFE9
 18345                           wreg	equ	0xFE8
 18346                           indf1	equ	0xFE7
 18347                           postinc1	equ	0xFE6
 18348                           postdec1	equ	0xFE5
 18349                           fsr1h	equ	0xFE2
 18350                           fsr1l	equ	0xFE1
 18351                           indf2	equ	0xFDF
 18352                           postinc2	equ	0xFDE
 18353                           postdec2	equ	0xFDD
 18354                           plusw2	equ	0xFDB
 18355                           fsr2h	equ	0xFDA
 18356                           fsr2l	equ	0xFD9
 18357                           status	equ	0xFD8
 18358                           
 18359 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 18360 ;; Defined at:
 18361 ;;		line 44 in file "../My_library/usb_cdc/My_usb_cdc.c"
 18362 ;; Parameters:    Size  Location     Type
 18363 ;;  event           2   12[COMRAM] enum E8545
 18364 ;;  pdata           2   14[COMRAM] PTR void 
 18365 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 18366 ;;  size            2   16[COMRAM] unsigned int 
 18367 ;; Auto vars:     Size  Location     Type
 18368 ;;		None
 18369 ;; Return value:  Size  Location     Type
 18370 ;;                  1    wreg      unsigned char 
 18371 ;; Registers used:
 18372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18373 ;; Tracked objects:
 18374 ;;		On entry : 0/0
 18375 ;;		On exit  : 0/0
 18376 ;;		Unchanged: 0/0
 18377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18378 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18380 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18381 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18382 ;;Total ram usage:        8 bytes
 18383 ;; Hardware stack levels used:    1
 18384 ;; Hardware stack levels required when called:    3
 18385 ;; This function calls:
 18386 ;;		_CDCInitEP
 18387 ;;		_USBCheckCDCRequest
 18388 ;; This function is called by:
 18389 ;;		_USBDeviceTasks
 18390 ;;		_USBStdSetCfgHandler
 18391 ;;		_USBSuspend
 18392 ;;		_USBWakeFromSuspend
 18393 ;;		_USBCtrlTrfSetupHandler
 18394 ;;		_USBCheckStdRequest
 18395 ;;		_USBStdFeatureReqHandler
 18396 ;; This function uses a non-reentrant model
 18397 ;;
 18398                           
 18399                           	psect	text79
 18400  01449A                     __ptext79:
 18401                           	opt stack 0
 18402  01449A                     _USER_USB_CALLBACK_EVENT_HANDLER:
 18403                           	opt stack 15
 18404                           
 18405                           ;My_usb_cdc.c: 45: switch ((int) event) {
 18406                           
 18407                           ;incstack = 0
 18408  01449A  D006               	goto	i2l5539
 18409  01449C                     i2l5533:
 18410                           
 18411                           ;My_usb_cdc.c: 47: CDCInitEP();
 18412  01449C  EC8E  F09F         	call	_CDCInitEP	;wreg free
 18413                           
 18414                           ;My_usb_cdc.c: 48: break;
 18415  0144A0  0012               	return	
 18416  0144A2                     i2l5535:
 18417                           
 18418                           ;My_usb_cdc.c: 50: USBCheckCDCRequest();
 18419  0144A2  EC16  F09B         	call	_USBCheckCDCRequest	;wreg free
 18420                           
 18421                           ;My_usb_cdc.c: 52: }
 18422                           
 18423                           ;My_usb_cdc.c: 51: break;
 18424  0144A6  0012               	return	
 18425  0144A8                     i2l5539:
 18426  0144A8  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 18427  0144AC  C03B  F041         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 18428                           
 18429                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18430                           ; Switch size 1, requested type "space"
 18431                           ; Number of cases is 1, Range of values is 0 to 0
 18432                           ; switch strategies available:
 18433                           ; Name         Instructions Cycles
 18434                           ; simple_byte            4     3 (average)
 18435                           ;	Chosen strategy is simple_byte
 18436  0144B0  5041               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 18437  0144B2  0A00               	xorlw	0	; case 0
 18438  0144B4  A4D8               	btfss	status,2,c
 18439  0144B6  0012               	return	
 18440                           
 18441                           ; Switch size 1, requested type "space"
 18442                           ; Number of cases is 2, Range of values is 1 to 3
 18443                           ; switch strategies available:
 18444                           ; Name         Instructions Cycles
 18445                           ; simple_byte            7     4 (average)
 18446                           ;	Chosen strategy is simple_byte
 18447  0144B8  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 18448  0144BA  0A01               	xorlw	1	; case 1
 18449  0144BC  B4D8               	btfsc	status,2,c
 18450  0144BE  D7EE               	goto	i2l5533
 18451  0144C0  0A02               	xorlw	2	; case 3
 18452  0144C2  A4D8               	btfss	status,2,c
 18453  0144C4  0012               	return	
 18454  0144C6  D7ED               	goto	i2l5535
 18455  0144C8                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 18456                           	opt stack 0
 18457                           pclatu	equ	0xFFB
 18458                           pclath	equ	0xFFA
 18459                           tblptru	equ	0xFF8
 18460                           tblptrh	equ	0xFF7
 18461                           tblptrl	equ	0xFF6
 18462                           tablat	equ	0xFF5
 18463                           prodh	equ	0xFF4
 18464                           prodl	equ	0xFF3
 18465                           intcon	equ	0xFF2
 18466                           intcon2	equ	0xFF1
 18467                           indf0	equ	0xFEF
 18468                           postinc0	equ	0xFEE
 18469                           fsr0h	equ	0xFEA
 18470                           fsr0l	equ	0xFE9
 18471                           wreg	equ	0xFE8
 18472                           indf1	equ	0xFE7
 18473                           postinc1	equ	0xFE6
 18474                           postdec1	equ	0xFE5
 18475                           fsr1h	equ	0xFE2
 18476                           fsr1l	equ	0xFE1
 18477                           indf2	equ	0xFDF
 18478                           postinc2	equ	0xFDE
 18479                           postdec2	equ	0xFDD
 18480                           plusw2	equ	0xFDB
 18481                           fsr2h	equ	0xFDA
 18482                           fsr2l	equ	0xFD9
 18483                           status	equ	0xFD8
 18484                           
 18485 ;; *************** function _USBCheckCDCRequest *****************
 18486 ;; Defined at:
 18487 ;;		line 204 in file "../My_library/usb_cdc/usb/usb_device_cdc.c"
 18488 ;; Parameters:    Size  Location     Type
 18489 ;;		None
 18490 ;; Auto vars:     Size  Location     Type
 18491 ;;		None
 18492 ;; Return value:  Size  Location     Type
 18493 ;;		None               void
 18494 ;; Registers used:
 18495 ;;		wreg, status,2, status,0
 18496 ;; Tracked objects:
 18497 ;;		On entry : 0/0
 18498 ;;		On exit  : 0/0
 18499 ;;		Unchanged: 0/0
 18500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18505 ;;Total ram usage:        0 bytes
 18506 ;; Hardware stack levels used:    1
 18507 ;; This function calls:
 18508 ;;		Nothing
 18509 ;; This function is called by:
 18510 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18511 ;; This function uses a non-reentrant model
 18512 ;;
 18513                           
 18514                           	psect	text80
 18515  01362C                     __ptext80:
 18516                           	opt stack 0
 18517  01362C                     _USBCheckCDCRequest:
 18518                           	opt stack 17
 18519                           
 18520                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 18521                           
 18522                           ;incstack = 0
 18523  01362C  010D               	movlb	13	; () banked
 18524  01362E  5130               	movf	48,w,b	;volatile
 18525  013630  0B1F               	andlw	31
 18526  013632  06E8               	decf	wreg,f,c
 18527  013634  A4D8               	btfss	status,2,c
 18528  013636  0012               	return	
 18529                           
 18530                           ; BSR set to: 13
 18531                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 18532                           
 18533                           ; BSR set to: 13
 18534                           
 18535                           ; BSR set to: 13
 18536  013638  010D               	movlb	13	; () banked
 18537  01363A  3930               	swapf	48,w,b	;volatile
 18538  01363C  32E8               	rrcf	wreg,f,c
 18539  01363E  0B03               	andlw	3
 18540  013640  06E8               	decf	wreg,f,c
 18541  013642  A4D8               	btfss	status,2,c
 18542  013644  0012               	return	
 18543                           
 18544                           ; BSR set to: 13
 18545                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 18546                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 18547                           
 18548                           ; BSR set to: 13
 18549                           
 18550                           ; BSR set to: 13
 18551  013646  010D               	movlb	13	; () banked
 18552  013648  5134               	movf	52,w,b	;volatile
 18553  01364A  B4D8               	btfsc	status,2,c
 18554  01364C  D035               	goto	i2l5413
 18555                           
 18556                           ; BSR set to: 13
 18557  01364E  010D               	movlb	13	; () banked
 18558  013650  0534               	decf	52,w,b	;volatile
 18559  013652  A4D8               	btfss	status,2,c
 18560  013654  0012               	return	
 18561  013656  D030               	goto	i2l5413
 18562  013658                     i2l5389:
 18563                           
 18564                           ; BSR set to: 13
 18565                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 18566  013658  0E58               	movlw	low _dummy_encapsulated_cmd_response
 18567  01365A  6E0A               	movwf	_inPipes,c	;volatile
 18568  01365C  0E01               	movlw	high _dummy_encapsulated_cmd_response
 18569  01365E  6E0B               	movwf	_inPipes+1,c	;volatile
 18570                           
 18571                           ; BSR set to: 13
 18572                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 18573  013660  0E00               	movlw	0
 18574  013662  6E0F               	movwf	_inPipes+5,c	;volatile
 18575  013664  0E08               	movlw	8
 18576  013666  6E0E               	movwf	_inPipes+4,c	;volatile
 18577                           
 18578                           ; BSR set to: 13
 18579                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18580  013668  800D               	bsf	_inPipes+3,0,c	;volatile
 18581                           
 18582                           ; BSR set to: 13
 18583                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 18584  01366A  8E0D               	bsf	_inPipes+3,7,c	;volatile
 18585                           
 18586                           ;usb_device_cdc.c: 232: break;
 18587  01366C  0012               	return	
 18588  01366E                     i2l5397:
 18589                           
 18590                           ; BSR set to: 13
 18591                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 18592  01366E  0E58               	movlw	low _dummy_encapsulated_cmd_response
 18593  013670  6E0A               	movwf	_inPipes,c	;volatile
 18594  013672  0E01               	movlw	high _dummy_encapsulated_cmd_response
 18595  013674  6E0B               	movwf	_inPipes+1,c	;volatile
 18596                           
 18597                           ; BSR set to: 13
 18598                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 18599  013676  8E0D               	bsf	_inPipes+3,7,c	;volatile
 18600                           
 18601                           ;usb_device_cdc.c: 237: break;
 18602  013678  0012               	return	
 18603  01367A                     i2l436:
 18604                           
 18605                           ; BSR set to: 13
 18606                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 18607  01367A  CD36 F005          	movff	3382,_outPipes+4	;volatile
 18608  01367E  CD37 F006          	movff	3383,_outPipes+5	;volatile
 18609                           
 18610                           ; BSR set to: 13
 18611                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 18612  013682  0E80               	movlw	low _line_coding
 18613  013684  6E01               	movwf	_outPipes,c	;volatile
 18614  013686  0E01               	movlw	high _line_coding
 18615  013688  6E02               	movwf	_outPipes+1,c	;volatile
 18616                           
 18617                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 18618  01368A  0E00               	movlw	0
 18619  01368C  6E07               	movwf	_outPipes+6,c	;volatile
 18620  01368E  0E00               	movlw	0
 18621  013690  6E08               	movwf	_outPipes+7,c	;volatile
 18622  013692  0E00               	movlw	0
 18623  013694  6E09               	movwf	_outPipes+8,c	;volatile
 18624                           
 18625                           ; BSR set to: 13
 18626                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 18627  013696  8E04               	bsf	_outPipes+3,7,c	;volatile
 18628                           
 18629                           ;usb_device_cdc.c: 246: break;
 18630  013698  0012               	return	
 18631  01369A                     i2l5405:
 18632                           
 18633                           ; BSR set to: 13
 18634                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 18635  01369A  0E80               	movlw	low _line_coding
 18636  01369C  6E0A               	movwf	_inPipes,c	;volatile
 18637  01369E  0E01               	movlw	high _line_coding
 18638  0136A0  6E0B               	movwf	_inPipes+1,c	;volatile
 18639                           
 18640                           ; BSR set to: 13
 18641  0136A2  0E00               	movlw	0
 18642  0136A4  6E0F               	movwf	_inPipes+5,c	;volatile
 18643  0136A6  0E07               	movlw	7
 18644  0136A8  6E0E               	movwf	_inPipes+4,c	;volatile
 18645                           
 18646                           ; BSR set to: 13
 18647  0136AA  0EC1               	movlw	193
 18648  0136AC  6E0D               	movwf	_inPipes+3,c	;volatile
 18649                           
 18650                           ;usb_device_cdc.c: 253: break;
 18651  0136AE  0012               	return	
 18652  0136B0                     i2l438:
 18653                           
 18654                           ; BSR set to: 13
 18655                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 18656  0136B0  CD32 F0F0          	movff	3378,_control_signal_bitmap	;volatile
 18657                           
 18658                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 18659  0136B4  8E0D               	bsf	_inPipes+3,7,c	;volatile
 18660                           
 18661                           ; BSR set to: 13
 18662                           ;usb_device_cdc.c: 315: }
 18663                           
 18664                           ; BSR set to: 13
 18665                           ;usb_device_cdc.c: 314: break;
 18666                           
 18667                           ;usb_device_cdc.c: 313: default:
 18668                           
 18669                           ;usb_device_cdc.c: 289: break;
 18670  0136B6  0012               	return	
 18671  0136B8                     i2l5413:
 18672                           
 18673                           ; BSR set to: 13
 18674  0136B8  010D               	movlb	13	; () banked
 18675  0136BA  5131               	movf	49,w,b	;volatile
 18676                           
 18677                           ; Switch size 1, requested type "space"
 18678                           ; Number of cases is 5, Range of values is 0 to 34
 18679                           ; switch strategies available:
 18680                           ; Name         Instructions Cycles
 18681                           ; simple_byte           16     9 (average)
 18682                           ;	Chosen strategy is simple_byte
 18683  0136BC  0A00               	xorlw	0	; case 0
 18684  0136BE  B4D8               	btfsc	status,2,c
 18685  0136C0  D7CB               	goto	i2l5389
 18686  0136C2  0A01               	xorlw	1	; case 1
 18687  0136C4  B4D8               	btfsc	status,2,c
 18688  0136C6  D7D3               	goto	i2l5397
 18689  0136C8  0A21               	xorlw	33	; case 32
 18690  0136CA  B4D8               	btfsc	status,2,c
 18691  0136CC  D7D6               	goto	i2l436
 18692  0136CE  0A01               	xorlw	1	; case 33
 18693  0136D0  B4D8               	btfsc	status,2,c
 18694  0136D2  D7E3               	goto	i2l5405
 18695  0136D4  0A03               	xorlw	3	; case 34
 18696  0136D6  A4D8               	btfss	status,2,c
 18697  0136D8  0012               	return	
 18698  0136DA  D7EA               	goto	i2l438
 18699  0136DC                     __end_of_USBCheckCDCRequest:
 18700                           	opt stack 0
 18701                           pclatu	equ	0xFFB
 18702                           pclath	equ	0xFFA
 18703                           tblptru	equ	0xFF8
 18704                           tblptrh	equ	0xFF7
 18705                           tblptrl	equ	0xFF6
 18706                           tablat	equ	0xFF5
 18707                           prodh	equ	0xFF4
 18708                           prodl	equ	0xFF3
 18709                           intcon	equ	0xFF2
 18710                           intcon2	equ	0xFF1
 18711                           indf0	equ	0xFEF
 18712                           postinc0	equ	0xFEE
 18713                           fsr0h	equ	0xFEA
 18714                           fsr0l	equ	0xFE9
 18715                           wreg	equ	0xFE8
 18716                           indf1	equ	0xFE7
 18717                           postinc1	equ	0xFE6
 18718                           postdec1	equ	0xFE5
 18719                           fsr1h	equ	0xFE2
 18720                           fsr1l	equ	0xFE1
 18721                           indf2	equ	0xFDF
 18722                           postinc2	equ	0xFDE
 18723                           postdec2	equ	0xFDD
 18724                           plusw2	equ	0xFDB
 18725                           fsr2h	equ	0xFDA
 18726                           fsr2l	equ	0xFD9
 18727                           status	equ	0xFD8
 18728                           
 18729 ;; *************** function _CDCInitEP *****************
 18730 ;; Defined at:
 18731 ;;		line 351 in file "../My_library/usb_cdc/usb/usb_device_cdc.c"
 18732 ;; Parameters:    Size  Location     Type
 18733 ;;		None
 18734 ;; Auto vars:     Size  Location     Type
 18735 ;;		None
 18736 ;; Return value:  Size  Location     Type
 18737 ;;		None               void
 18738 ;; Registers used:
 18739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18740 ;; Tracked objects:
 18741 ;;		On entry : 0/0
 18742 ;;		On exit  : 0/0
 18743 ;;		Unchanged: 0/0
 18744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18749 ;;Total ram usage:        0 bytes
 18750 ;; Hardware stack levels used:    1
 18751 ;; Hardware stack levels required when called:    2
 18752 ;; This function calls:
 18753 ;;		_USBEnableEndpoint
 18754 ;;		i2_USBTransferOnePacket
 18755 ;; This function is called by:
 18756 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18757 ;; This function uses a non-reentrant model
 18758 ;;
 18759                           
 18760                           	psect	text81
 18761  013F1C                     __ptext81:
 18762                           	opt stack 0
 18763  013F1C                     _CDCInitEP:
 18764                           	opt stack 15
 18765                           
 18766                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 18767                           
 18768                           ; BSR set to: 13
 18769                           ;incstack = 0
 18770  013F1C  0E00               	movlw	0
 18771  013F1E  0101               	movlb	1	; () banked
 18772  013F20  6F80               	movwf	_line_coding& (0+255),b
 18773  013F22  0E4B               	movlw	75
 18774  013F24  6F81               	movwf	(_line_coding+1)& (0+255),b
 18775  013F26  0E00               	movlw	0
 18776  013F28  6F82               	movwf	(_line_coding+2)& (0+255),b
 18777  013F2A  0E00               	movlw	0
 18778  013F2C  6F83               	movwf	(_line_coding+3)& (0+255),b
 18779                           
 18780                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 18781  013F2E  0E00               	movlw	0
 18782  013F30  0101               	movlb	1	; () banked
 18783  013F32  6F84               	movwf	(_line_coding+4)& (0+255),b
 18784                           
 18785                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 18786  013F34  0E00               	movlw	0
 18787  013F36  0101               	movlb	1	; () banked
 18788  013F38  6F85               	movwf	(_line_coding+5)& (0+255),b
 18789                           
 18790                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 18791  013F3A  0E08               	movlw	8
 18792  013F3C  0101               	movlb	1	; () banked
 18793  013F3E  6F86               	movwf	(_line_coding+6)& (0+255),b
 18794                           
 18795                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 18796  013F40  0E00               	movlw	0
 18797  013F42  0100               	movlb	0	; () banked
 18798  013F44  6FEE               	movwf	_cdc_rx_len& (0+255),b
 18799                           
 18800                           ; BSR set to: 0
 18801                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 18802  013F46  0E1A               	movlw	26
 18803  013F48  6E36               	movwf	USBEnableEndpoint@options,c
 18804  013F4A  0E01               	movlw	1
 18805  013F4C  EC90  F0A1         	call	_USBEnableEndpoint
 18806                           
 18807                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 18808  013F50  0E1E               	movlw	30
 18809  013F52  6E36               	movwf	USBEnableEndpoint@options,c
 18810  013F54  0E02               	movlw	2
 18811  013F56  EC90  F0A1         	call	_USBEnableEndpoint
 18812                           
 18813                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18814  013F5A  0E00               	movlw	0
 18815  013F5C  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 18816  013F5E  0E00               	movlw	low _cdc_data_rx
 18817  013F60  6E2F               	movwf	i2USBTransferOnePacket@data,c
 18818  013F62  0E02               	movlw	high _cdc_data_rx
 18819  013F64  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 18820  013F66  0E40               	movlw	64
 18821  013F68  6E31               	movwf	i2USBTransferOnePacket@len,c
 18822  013F6A  0E02               	movlw	2
 18823  013F6C  EC5C  F09A         	call	i2_USBTransferOnePacket
 18824  013F70  C02E  F0E6         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 18825  013F74  C02F  F0E7         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18826                           
 18827                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 18828  013F78  0E00               	movlw	0
 18829  013F7A  0100               	movlb	0	; () banked
 18830  013F7C  6FE4               	movwf	_CDCDataInHandle& (0+255),b
 18831  013F7E  0E00               	movlw	0
 18832  013F80  0100               	movlb	0	; () banked
 18833  013F82  6FE5               	movwf	(_CDCDataInHandle+1)& (0+255),b
 18834                           
 18835                           ; BSR set to: 0
 18836                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 18837  013F84  0E00               	movlw	0
 18838  013F86  6E26               	movwf	_cdc_trf_state,c
 18839                           
 18840                           ; BSR set to: 0
 18841  013F88  0012               	return		;funcret
 18842  013F8A                     __end_of_CDCInitEP:
 18843                           	opt stack 0
 18844                           pclatu	equ	0xFFB
 18845                           pclath	equ	0xFFA
 18846                           tblptru	equ	0xFF8
 18847                           tblptrh	equ	0xFF7
 18848                           tblptrl	equ	0xFF6
 18849                           tablat	equ	0xFF5
 18850                           prodh	equ	0xFF4
 18851                           prodl	equ	0xFF3
 18852                           intcon	equ	0xFF2
 18853                           intcon2	equ	0xFF1
 18854                           indf0	equ	0xFEF
 18855                           postinc0	equ	0xFEE
 18856                           fsr0h	equ	0xFEA
 18857                           fsr0l	equ	0xFE9
 18858                           wreg	equ	0xFE8
 18859                           indf1	equ	0xFE7
 18860                           postinc1	equ	0xFE6
 18861                           postdec1	equ	0xFE5
 18862                           fsr1h	equ	0xFE2
 18863                           fsr1l	equ	0xFE1
 18864                           indf2	equ	0xFDF
 18865                           postinc2	equ	0xFDE
 18866                           postdec2	equ	0xFDD
 18867                           plusw2	equ	0xFDB
 18868                           fsr2h	equ	0xFDA
 18869                           fsr2l	equ	0xFD9
 18870                           status	equ	0xFD8
 18871                           
 18872 ;; *************** function i2_USBTransferOnePacket *****************
 18873 ;; Defined at:
 18874 ;;		line 995 in file "../My_library/usb_cdc/usb/usb_device.c"
 18875 ;; Parameters:    Size  Location     Type
 18876 ;;  ep              1    wreg     unsigned char 
 18877 ;;  dir             1    0[COMRAM] unsigned char 
 18878 ;;  data            2    1[COMRAM] PTR unsigned char 
 18879 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18880 ;;  len             1    3[COMRAM] unsigned char 
 18881 ;; Auto vars:     Size  Location     Type
 18882 ;;  ep              1    4[COMRAM] unsigned char 
 18883 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 18884 ;;		 -> NULL(0), BDT(48), 
 18885 ;; Return value:  Size  Location     Type
 18886 ;;                  2    0[COMRAM] PTR void 
 18887 ;; Registers used:
 18888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18889 ;; Tracked objects:
 18890 ;;		On entry : 0/0
 18891 ;;		On exit  : 0/0
 18892 ;;		Unchanged: 0/0
 18893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18894 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18895 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18897 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18898 ;;Total ram usage:        7 bytes
 18899 ;; Hardware stack levels used:    1
 18900 ;; This function calls:
 18901 ;;		Nothing
 18902 ;; This function is called by:
 18903 ;;		_CDCInitEP
 18904 ;; This function uses a non-reentrant model
 18905 ;;
 18906                           
 18907                           	psect	text82
 18908  0134B8                     __ptext82:
 18909                           	opt stack 0
 18910  0134B8                     i2_USBTransferOnePacket:
 18911                           	opt stack 16
 18912                           
 18913                           ; BSR set to: 0
 18914                           ;incstack = 0
 18915                           ;i2USBTransferOnePacket@ep stored from wreg
 18916  0134B8  6E32               	movwf	i2USBTransferOnePacket@ep,c
 18917                           
 18918                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 18919                           ;usb_device.c: 1000: if(dir != 0)
 18920  0134BA  502E               	movf	i2USBTransferOnePacket@dir,w,c
 18921  0134BC  B4D8               	btfsc	status,2,c
 18922  0134BE  D007               	goto	i2l5349
 18923                           
 18924                           ;usb_device.c: 1001: {
 18925                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 18926  0134C0  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18927  0134C2  0D02               	mullw	2
 18928  0134C4  0E10               	movlw	low _pBDTEntryIn
 18929  0134C6  24F3               	addwf	prodl,w,c
 18930  0134C8  6ED9               	movwf	fsr2l,c
 18931  0134CA  0E00               	movlw	high _pBDTEntryIn
 18932  0134CC  D006               	goto	L12
 18933  0134CE                     i2l5349:
 18934                           
 18935                           ;usb_device.c: 1005: else
 18936                           ;usb_device.c: 1006: {
 18937                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 18938  0134CE  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18939  0134D0  0D02               	mullw	2
 18940  0134D2  0ED5               	movlw	low _pBDTEntryOut
 18941  0134D4  24F3               	addwf	prodl,w,c
 18942  0134D6  6ED9               	movwf	fsr2l,c
 18943  0134D8  0E00               	movlw	high _pBDTEntryOut
 18944  0134DA                     L12:
 18945  0134DA  20F4               	addwfc	prodh,w,c
 18946  0134DC  6EDA               	movwf	fsr2h,c
 18947  0134DE  CFDE F033          	movff	postinc2,i2USBTransferOnePacket@handle
 18948  0134E2  CFDD F034          	movff	postdec2,i2USBTransferOnePacket@handle+1
 18949                           
 18950                           ;usb_device.c: 1009: }
 18951                           ;usb_device.c: 1013: if(handle == 0)
 18952  0134E6  5033               	movf	i2USBTransferOnePacket@handle,w,c
 18953  0134E8  1034               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 18954  0134EA  A4D8               	btfss	status,2,c
 18955  0134EC  D005               	goto	i2l5357
 18956                           
 18957                           ;usb_device.c: 1014: {
 18958                           ;usb_device.c: 1015: return 0;
 18959  0134EE  0E00               	movlw	0
 18960  0134F0  6E2E               	movwf	?i2_USBTransferOnePacket,c
 18961  0134F2  0E00               	movlw	0
 18962  0134F4  6E2F               	movwf	?i2_USBTransferOnePacket+1,c
 18963  0134F6  0012               	return	
 18964  0134F8                     i2l5357:
 18965                           
 18966                           ;usb_device.c: 1016: }
 18967                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 18968  0134F8  EE20 F002          	lfsr	2,2
 18969  0134FC  5033               	movf	i2USBTransferOnePacket@handle,w,c
 18970  0134FE  26D9               	addwf	fsr2l,f,c
 18971  013500  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 18972  013502  22DA               	addwfc	fsr2h,f,c
 18973  013504  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 18974  013508  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 18975                           
 18976                           ;usb_device.c: 1030: handle->CNT = len;
 18977  01350C  EE20 F001          	lfsr	2,1
 18978  013510  5033               	movf	i2USBTransferOnePacket@handle,w,c
 18979  013512  26D9               	addwf	fsr2l,f,c
 18980  013514  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 18981  013516  22DA               	addwfc	fsr2h,f,c
 18982  013518  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 18983                           
 18984                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 18985  01351C  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18986  013520  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18987  013524  0E40               	movlw	64
 18988  013526  16DF               	andwf	indf2,f,c
 18989                           
 18990                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 18991  013528  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18992  01352C  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18993  013530  0E00               	movlw	0
 18994  013532  86DB               	bsf	plusw2,3,c
 18995                           
 18996                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 18997  013534  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18998  013538  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18999  01353C  0E00               	movlw	0
 19000  01353E  8EDB               	bsf	plusw2,7,c
 19001                           
 19002                           ;usb_device.c: 1036: if(dir != 0)
 19003  013540  502E               	movf	i2USBTransferOnePacket@dir,w,c
 19004  013542  B4D8               	btfsc	status,2,c
 19005  013544  D007               	goto	i2l5369
 19006                           
 19007                           ;usb_device.c: 1037: {
 19008                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 19009  013546  5032               	movf	i2USBTransferOnePacket@ep,w,c
 19010  013548  0D02               	mullw	2
 19011  01354A  0E10               	movlw	low _pBDTEntryIn
 19012  01354C  24F3               	addwf	prodl,w,c
 19013  01354E  6ED9               	movwf	fsr2l,c
 19014  013550  0E00               	movlw	high _pBDTEntryIn
 19015  013552  D006               	goto	L13
 19016  013554                     i2l5369:
 19017                           
 19018                           ;usb_device.c: 1041: else
 19019                           ;usb_device.c: 1042: {
 19020                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 19021  013554  5032               	movf	i2USBTransferOnePacket@ep,w,c
 19022  013556  0D02               	mullw	2
 19023  013558  0ED5               	movlw	low _pBDTEntryOut
 19024  01355A  24F3               	addwf	prodl,w,c
 19025  01355C  6ED9               	movwf	fsr2l,c
 19026  01355E  0E00               	movlw	high _pBDTEntryOut
 19027  013560                     L13:
 19028  013560  20F4               	addwfc	prodh,w,c
 19029  013562  6EDA               	movwf	fsr2h,c
 19030  013564  0E04               	movlw	4
 19031  013566  1ADF               	xorwf	indf2,f,c
 19032                           
 19033                           ;usb_device.c: 1045: }
 19034                           ;usb_device.c: 1046: return (void*)handle;
 19035  013568  C033  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 19036  01356C  C034  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 19037  013570  0012               	return	
 19038  013572                     __end_ofi2_USBTransferOnePacket:
 19039                           	opt stack 0
 19040                           pclatu	equ	0xFFB
 19041                           pclath	equ	0xFFA
 19042                           tblptru	equ	0xFF8
 19043                           tblptrh	equ	0xFF7
 19044                           tblptrl	equ	0xFF6
 19045                           tablat	equ	0xFF5
 19046                           prodh	equ	0xFF4
 19047                           prodl	equ	0xFF3
 19048                           intcon	equ	0xFF2
 19049                           intcon2	equ	0xFF1
 19050                           indf0	equ	0xFEF
 19051                           postinc0	equ	0xFEE
 19052                           fsr0h	equ	0xFEA
 19053                           fsr0l	equ	0xFE9
 19054                           wreg	equ	0xFE8
 19055                           indf1	equ	0xFE7
 19056                           postinc1	equ	0xFE6
 19057                           postdec1	equ	0xFE5
 19058                           fsr1h	equ	0xFE2
 19059                           fsr1l	equ	0xFE1
 19060                           indf2	equ	0xFDF
 19061                           postinc2	equ	0xFDE
 19062                           postdec2	equ	0xFDD
 19063                           plusw2	equ	0xFDB
 19064                           fsr2h	equ	0xFDA
 19065                           fsr2l	equ	0xFD9
 19066                           status	equ	0xFD8
 19067                           
 19068 ;; *************** function _USBEnableEndpoint *****************
 19069 ;; Defined at:
 19070 ;;		line 878 in file "../My_library/usb_cdc/usb/usb_device.c"
 19071 ;; Parameters:    Size  Location     Type
 19072 ;;  ep              1    wreg     unsigned char 
 19073 ;;  options         1    8[COMRAM] unsigned char 
 19074 ;; Auto vars:     Size  Location     Type
 19075 ;;  ep              1   11[COMRAM] unsigned char 
 19076 ;;  p               2    9[COMRAM] PTR unsigned char 
 19077 ;;		 -> UEP0(1), 
 19078 ;; Return value:  Size  Location     Type
 19079 ;;		None               void
 19080 ;; Registers used:
 19081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19082 ;; Tracked objects:
 19083 ;;		On entry : 0/0
 19084 ;;		On exit  : 0/0
 19085 ;;		Unchanged: 0/0
 19086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19087 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19088 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19090 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19091 ;;Total ram usage:        4 bytes
 19092 ;; Hardware stack levels used:    1
 19093 ;; Hardware stack levels required when called:    1
 19094 ;; This function calls:
 19095 ;;		_USBConfigureEndpoint
 19096 ;; This function is called by:
 19097 ;;		_CDCInitEP
 19098 ;; This function uses a non-reentrant model
 19099 ;;
 19100                           
 19101                           	psect	text83
 19102  014320                     __ptext83:
 19103                           	opt stack 0
 19104  014320                     _USBEnableEndpoint:
 19105                           	opt stack 15
 19106                           
 19107                           ;incstack = 0
 19108                           ;USBEnableEndpoint@ep stored from wreg
 19109  014320  6E39               	movwf	USBEnableEndpoint@ep,c
 19110                           
 19111                           ;usb_device.c: 880: unsigned char* p;
 19112                           ;usb_device.c: 884: if(options & 0x04)
 19113  014322  A436               	btfss	USBEnableEndpoint@options,2,c
 19114  014324  D005               	goto	i2l5301
 19115                           
 19116                           ;usb_device.c: 885: {
 19117                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 19118  014326  0E00               	movlw	0
 19119  014328  6E2E               	movwf	USBConfigureEndpoint@direction,c
 19120  01432A  5039               	movf	USBEnableEndpoint@ep,w,c
 19121  01432C  ECF9  F09C         	call	_USBConfigureEndpoint
 19122  014330                     i2l5301:
 19123                           
 19124                           ;usb_device.c: 887: }
 19125                           ;usb_device.c: 888: if(options & 0x02)
 19126  014330  A236               	btfss	USBEnableEndpoint@options,1,c
 19127  014332  D005               	goto	i2l5305
 19128                           
 19129                           ;usb_device.c: 889: {
 19130                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 19131  014334  0E01               	movlw	1
 19132  014336  6E2E               	movwf	USBConfigureEndpoint@direction,c
 19133  014338  5039               	movf	USBEnableEndpoint@ep,w,c
 19134  01433A  ECF9  F09C         	call	_USBConfigureEndpoint
 19135  01433E                     i2l5305:
 19136                           
 19137                           ;usb_device.c: 891: }
 19138                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 19139  01433E  5039               	movf	USBEnableEndpoint@ep,w,c
 19140  014340  0D01               	mullw	1
 19141  014342  0E26               	movlw	38
 19142  014344  24F3               	addwf	prodl,w,c
 19143  014346  6E37               	movwf	USBEnableEndpoint@p,c
 19144  014348  0E0F               	movlw	15
 19145  01434A  20F4               	addwfc	prodh,w,c
 19146  01434C  6E38               	movwf	USBEnableEndpoint@p+1,c
 19147                           
 19148                           ;usb_device.c: 901: *p = options;
 19149  01434E  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 19150  014352  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 19151  014356  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 19152  01435A  0012               	return		;funcret
 19153  01435C                     __end_of_USBEnableEndpoint:
 19154                           	opt stack 0
 19155                           pclatu	equ	0xFFB
 19156                           pclath	equ	0xFFA
 19157                           tblptru	equ	0xFF8
 19158                           tblptrh	equ	0xFF7
 19159                           tblptrl	equ	0xFF6
 19160                           tablat	equ	0xFF5
 19161                           prodh	equ	0xFF4
 19162                           prodl	equ	0xFF3
 19163                           intcon	equ	0xFF2
 19164                           intcon2	equ	0xFF1
 19165                           indf0	equ	0xFEF
 19166                           postinc0	equ	0xFEE
 19167                           fsr0h	equ	0xFEA
 19168                           fsr0l	equ	0xFE9
 19169                           wreg	equ	0xFE8
 19170                           indf1	equ	0xFE7
 19171                           postinc1	equ	0xFE6
 19172                           postdec1	equ	0xFE5
 19173                           fsr1h	equ	0xFE2
 19174                           fsr1l	equ	0xFE1
 19175                           indf2	equ	0xFDF
 19176                           postinc2	equ	0xFDE
 19177                           postdec2	equ	0xFDD
 19178                           plusw2	equ	0xFDB
 19179                           fsr2h	equ	0xFDA
 19180                           fsr2l	equ	0xFD9
 19181                           status	equ	0xFD8
 19182                           
 19183 ;; *************** function _USBConfigureEndpoint *****************
 19184 ;; Defined at:
 19185 ;;		line 1543 in file "../My_library/usb_cdc/usb/usb_device.c"
 19186 ;; Parameters:    Size  Location     Type
 19187 ;;  EPNum           1    wreg     unsigned char 
 19188 ;;  direction       1    0[COMRAM] unsigned char 
 19189 ;; Auto vars:     Size  Location     Type
 19190 ;;  EPNum           1    5[COMRAM] unsigned char 
 19191 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 19192 ;;		 -> BDT(48), 
 19193 ;; Return value:  Size  Location     Type
 19194 ;;		None               void
 19195 ;; Registers used:
 19196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19197 ;; Tracked objects:
 19198 ;;		On entry : 0/0
 19199 ;;		On exit  : 0/0
 19200 ;;		Unchanged: 0/0
 19201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19202 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19203 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19204 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19205 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19206 ;;Total ram usage:        8 bytes
 19207 ;; Hardware stack levels used:    1
 19208 ;; This function calls:
 19209 ;;		Nothing
 19210 ;; This function is called by:
 19211 ;;		_USBEnableEndpoint
 19212 ;; This function uses a non-reentrant model
 19213 ;;
 19214                           
 19215                           	psect	text84
 19216  0139F2                     __ptext84:
 19217                           	opt stack 0
 19218  0139F2                     _USBConfigureEndpoint:
 19219                           	opt stack 15
 19220                           
 19221                           ;incstack = 0
 19222                           ;USBConfigureEndpoint@EPNum stored from wreg
 19223  0139F2  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 19224                           
 19225                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 19226                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 19227  0139F4  0E00               	movlw	0
 19228  0139F6  6E34               	movwf	USBConfigureEndpoint@handle,c
 19229  0139F8  0E0D               	movlw	13
 19230  0139FA  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 19231                           
 19232                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 19233  0139FC  502E               	movf	USBConfigureEndpoint@direction,w,c
 19234  0139FE  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 19235  013A00  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 19236  013A02  90D8               	bcf	status,0,c
 19237  013A04  362F               	rlcf	??_USBConfigureEndpoint,f,c
 19238  013A06  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 19239  013A08  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 19240  013A0A  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 19241  013A0C  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 19242  013A0E  90D8               	bcf	status,0,c
 19243  013A10  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19244  013A12  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19245  013A14  90D8               	bcf	status,0,c
 19246  013A16  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19247  013A18  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19248  013A1A  502F               	movf	??_USBConfigureEndpoint,w,c
 19249  013A1C  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 19250  013A1E  5030               	movf	??_USBConfigureEndpoint+1,w,c
 19251  013A20  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 19252  013A22  90D8               	bcf	status,0,c
 19253  013A24  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19254  013A26  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19255  013A28  90D8               	bcf	status,0,c
 19256  013A2A  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19257  013A2C  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19258  013A2E  5031               	movf	??_USBConfigureEndpoint+2,w,c
 19259  013A30  2634               	addwf	USBConfigureEndpoint@handle,f,c
 19260  013A32  5032               	movf	??_USBConfigureEndpoint+3,w,c
 19261  013A34  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 19262                           
 19263                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 19264  013A36  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 19265  013A3A  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 19266  013A3E  9EDF               	bcf	indf2,7,c
 19267                           
 19268                           ;usb_device.c: 1557: if(direction == 0)
 19269  013A40  502E               	movf	USBConfigureEndpoint@direction,w,c
 19270  013A42  A4D8               	btfss	status,2,c
 19271  013A44  D007               	goto	i2l5291
 19272                           
 19273                           ;usb_device.c: 1558: {
 19274                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 19275  013A46  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 19276  013A48  0D02               	mullw	2
 19277  013A4A  0ED5               	movlw	low _pBDTEntryOut
 19278  013A4C  24F3               	addwf	prodl,w,c
 19279  013A4E  6ED9               	movwf	fsr2l,c
 19280  013A50  0E00               	movlw	high _pBDTEntryOut
 19281  013A52  D006               	goto	L14
 19282  013A54                     i2l5291:
 19283                           
 19284                           ;usb_device.c: 1561: else
 19285                           ;usb_device.c: 1562: {
 19286                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 19287  013A54  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 19288  013A56  0D02               	mullw	2
 19289  013A58  0E10               	movlw	low _pBDTEntryIn
 19290  013A5A  24F3               	addwf	prodl,w,c
 19291  013A5C  6ED9               	movwf	fsr2l,c
 19292  013A5E  0E00               	movlw	high _pBDTEntryIn
 19293  013A60                     L14:
 19294  013A60  20F4               	addwfc	prodh,w,c
 19295  013A62  6EDA               	movwf	fsr2h,c
 19296  013A64  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 19297  013A68  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 19298                           
 19299                           ;usb_device.c: 1564: }
 19300                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 19301  013A6C  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 19302  013A70  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 19303  013A74  9CDF               	bcf	indf2,6,c
 19304                           
 19305                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 19306  013A76  EE20 F004          	lfsr	2,4
 19307  013A7A  5034               	movf	USBConfigureEndpoint@handle,w,c
 19308  013A7C  26D9               	addwf	fsr2l,f,c
 19309  013A7E  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 19310  013A80  22DA               	addwfc	fsr2h,f,c
 19311  013A82  8CDF               	bsf	indf2,6,c
 19312  013A84  0012               	return		;funcret
 19313  013A86                     __end_of_USBConfigureEndpoint:
 19314                           	opt stack 0
 19315                           pclatu	equ	0xFFB
 19316                           pclath	equ	0xFFA
 19317                           tblptru	equ	0xFF8
 19318                           tblptrh	equ	0xFF7
 19319                           tblptrl	equ	0xFF6
 19320                           tablat	equ	0xFF5
 19321                           prodh	equ	0xFF4
 19322                           prodl	equ	0xFF3
 19323                           intcon	equ	0xFF2
 19324                           intcon2	equ	0xFF1
 19325                           indf0	equ	0xFEF
 19326                           postinc0	equ	0xFEE
 19327                           fsr0h	equ	0xFEA
 19328                           fsr0l	equ	0xFE9
 19329                           wreg	equ	0xFE8
 19330                           indf1	equ	0xFE7
 19331                           postinc1	equ	0xFE6
 19332                           postdec1	equ	0xFE5
 19333                           fsr1h	equ	0xFE2
 19334                           fsr1l	equ	0xFE1
 19335                           indf2	equ	0xFDF
 19336                           postinc2	equ	0xFDE
 19337                           postdec2	equ	0xFDD
 19338                           plusw2	equ	0xFDB
 19339                           fsr2h	equ	0xFDA
 19340                           fsr2l	equ	0xFD9
 19341                           status	equ	0xFD8
 19342                           
 19343 ;; *************** function _USBCtrlTrfOutHandler *****************
 19344 ;; Defined at:
 19345 ;;		line 2541 in file "../My_library/usb_cdc/usb/usb_device.c"
 19346 ;; Parameters:    Size  Location     Type
 19347 ;;		None
 19348 ;; Auto vars:     Size  Location     Type
 19349 ;;		None
 19350 ;; Return value:  Size  Location     Type
 19351 ;;		None               void
 19352 ;; Registers used:
 19353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19354 ;; Tracked objects:
 19355 ;;		On entry : 0/0
 19356 ;;		On exit  : 0/0
 19357 ;;		Unchanged: 0/0
 19358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19363 ;;Total ram usage:        0 bytes
 19364 ;; Hardware stack levels used:    1
 19365 ;; Hardware stack levels required when called:    2
 19366 ;; This function calls:
 19367 ;;		_USBCtrlTrfRxService
 19368 ;; This function is called by:
 19369 ;;		_USBCtrlEPService
 19370 ;; This function uses a non-reentrant model
 19371 ;;
 19372                           
 19373                           	psect	text85
 19374  01410E                     __ptext85:
 19375                           	opt stack 0
 19376  01410E                     _USBCtrlTrfOutHandler:
 19377                           	opt stack 15
 19378                           
 19379                           ;usb_device.c: 2543: if(controlTransferState == 2)
 19380                           
 19381                           ;incstack = 0
 19382  01410E  0E02               	movlw	2
 19383  014110  1827               	xorwf	_controlTransferState,w,c	;volatile
 19384  014112  A4D8               	btfss	status,2,c
 19385  014114  D003               	goto	i2l6399
 19386                           
 19387                           ;usb_device.c: 2544: {
 19388                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 19389  014116  ECF4  F091         	call	_USBCtrlTrfRxService	;wreg free
 19390                           
 19391                           ;usb_device.c: 2546: }
 19392  01411A  0012               	return	
 19393  01411C                     i2l6399:
 19394                           
 19395                           ;usb_device.c: 2547: else
 19396                           ;usb_device.c: 2548: {
 19397                           ;usb_device.c: 2551: controlTransferState = 0;
 19398  01411C  0E00               	movlw	0
 19399  01411E  6E27               	movwf	_controlTransferState,c	;volatile
 19400                           
 19401                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 19402  014120  501D               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 19403  014122  A4D8               	btfss	status,2,c
 19404  014124  D01F               	goto	i2l6407
 19405                           
 19406                           ;usb_device.c: 2559: {
 19407                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 19408  014126  EE20 F001          	lfsr	2,1
 19409  01412A  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19410  01412C  26D9               	addwf	fsr2l,f,c
 19411  01412E  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19412  014130  22DA               	addwfc	fsr2h,f,c
 19413  014132  0E08               	movlw	8
 19414  014134  6EDF               	movwf	indf2,c
 19415                           
 19416                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19417  014136  EE20 F002          	lfsr	2,2
 19418  01413A  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19419  01413C  26D9               	addwf	fsr2l,f,c
 19420  01413E  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19421  014140  22DA               	addwfc	fsr2h,f,c
 19422  014142  0E30               	movlw	48
 19423  014144  6EDE               	movwf	postinc2,c
 19424  014146  0E0D               	movlw	13
 19425  014148  6EDD               	movwf	postdec2,c
 19426                           
 19427                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 19428  01414A  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19429  01414E  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19430  014152  0E0C               	movlw	12
 19431  014154  6EDF               	movwf	indf2,c
 19432                           
 19433                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19434  014156  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19435  01415A  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19436  01415E  0E00               	movlw	0
 19437  014160  8EDB               	bsf	plusw2,7,c
 19438                           
 19439                           ;usb_device.c: 2564: }
 19440  014162  0012               	return	
 19441  014164                     i2l6407:
 19442                           
 19443                           ;usb_device.c: 2565: else
 19444                           ;usb_device.c: 2566: {
 19445                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 19446  014164  0E00               	movlw	0
 19447  014166  6E1D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19448  014168  0012               	return	
 19449  01416A                     __end_of_USBCtrlTrfOutHandler:
 19450                           	opt stack 0
 19451                           pclatu	equ	0xFFB
 19452                           pclath	equ	0xFFA
 19453                           tblptru	equ	0xFF8
 19454                           tblptrh	equ	0xFF7
 19455                           tblptrl	equ	0xFF6
 19456                           tablat	equ	0xFF5
 19457                           prodh	equ	0xFF4
 19458                           prodl	equ	0xFF3
 19459                           intcon	equ	0xFF2
 19460                           intcon2	equ	0xFF1
 19461                           indf0	equ	0xFEF
 19462                           postinc0	equ	0xFEE
 19463                           fsr0h	equ	0xFEA
 19464                           fsr0l	equ	0xFE9
 19465                           wreg	equ	0xFE8
 19466                           indf1	equ	0xFE7
 19467                           postinc1	equ	0xFE6
 19468                           postdec1	equ	0xFE5
 19469                           fsr1h	equ	0xFE2
 19470                           fsr1l	equ	0xFE1
 19471                           indf2	equ	0xFDF
 19472                           postinc2	equ	0xFDE
 19473                           postdec2	equ	0xFDD
 19474                           plusw2	equ	0xFDB
 19475                           fsr2h	equ	0xFDA
 19476                           fsr2l	equ	0xFD9
 19477                           status	equ	0xFD8
 19478                           
 19479 ;; *************** function _USBCtrlTrfRxService *****************
 19480 ;; Defined at:
 19481 ;;		line 1852 in file "../My_library/usb_cdc/usb/usb_device.c"
 19482 ;; Parameters:    Size  Location     Type
 19483 ;;		None
 19484 ;; Auto vars:     Size  Location     Type
 19485 ;;  byteToRead      1    1[COMRAM] unsigned char 
 19486 ;;  i               1    0[COMRAM] unsigned char 
 19487 ;; Return value:  Size  Location     Type
 19488 ;;		None               void
 19489 ;; Registers used:
 19490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19491 ;; Tracked objects:
 19492 ;;		On entry : 0/0
 19493 ;;		On exit  : 0/0
 19494 ;;		Unchanged: 0/0
 19495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19497 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19499 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19500 ;;Total ram usage:        2 bytes
 19501 ;; Hardware stack levels used:    1
 19502 ;; Hardware stack levels required when called:    1
 19503 ;; This function calls:
 19504 ;;		_USBCtrlEPAllowStatusStage
 19505 ;; This function is called by:
 19506 ;;		_USBCtrlTrfOutHandler
 19507 ;; This function uses a non-reentrant model
 19508 ;;
 19509                           
 19510                           	psect	text86
 19511  0123E8                     __ptext86:
 19512                           	opt stack 0
 19513  0123E8                     _USBCtrlTrfRxService:
 19514                           	opt stack 15
 19515                           
 19516                           ;usb_device.c: 1854: uint8_t byteToRead;
 19517                           ;usb_device.c: 1855: uint8_t i;
 19518                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 19519                           
 19520                           ;incstack = 0
 19521  0123E8  EE20 F001          	lfsr	2,1
 19522  0123EC  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 19523  0123EE  26D9               	addwf	fsr2l,f,c
 19524  0123F0  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19525  0123F2  22DA               	addwfc	fsr2h,f,c
 19526  0123F4  50DF               	movf	indf2,w,c
 19527  0123F6  6E2F               	movwf	USBCtrlTrfRxService@byteToRead,c
 19528                           
 19529                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 19530  0123F8  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19531  0123FA  5C05               	subwf	_outPipes+4,w,c	;volatile
 19532  0123FC  0E00               	movlw	0
 19533  0123FE  5806               	subwfb	_outPipes+5,w,c	;volatile
 19534  012400  A0D8               	btfss	status,0,c
 19535                           
 19536                           ;usb_device.c: 1866: {
 19537                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 19538  012402  C005  F02F         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 19539                           
 19540                           ;usb_device.c: 1868: }
 19541                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 19542  012406  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19543  012408  5E05               	subwf	_outPipes+4,f,c	;volatile
 19544  01240A  0E00               	movlw	0
 19545  01240C  5A06               	subwfb	_outPipes+5,f,c	;volatile
 19546                           
 19547                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 19548  01240E  0E00               	movlw	0
 19549  012410  6E2E               	movwf	USBCtrlTrfRxService@i,c
 19550  012412  D011               	goto	i2l6255
 19551  012414                     i2l6249:
 19552                           
 19553                           ;usb_device.c: 1875: {
 19554                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 19555  012414  502E               	movf	USBCtrlTrfRxService@i,w,c
 19556  012416  0D01               	mullw	1
 19557  012418  0E38               	movlw	56
 19558  01241A  24F3               	addwf	prodl,w,c
 19559  01241C  6ED9               	movwf	fsr2l,c
 19560  01241E  0E0D               	movlw	13
 19561  012420  20F4               	addwfc	prodh,w,c
 19562  012422  6EDA               	movwf	fsr2h,c
 19563  012424  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 19564  012428  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 19565  01242C  CFDF FFE7          	movff	indf2,indf1
 19566  012430  4A01               	infsnz	_outPipes,f,c	;volatile
 19567  012432  2A02               	incf	_outPipes+1,f,c	;volatile
 19568  012434  2A2E               	incf	USBCtrlTrfRxService@i,f,c
 19569  012436                     i2l6255:
 19570  012436  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19571  012438  5C2E               	subwf	USBCtrlTrfRxService@i,w,c
 19572  01243A  A0D8               	btfss	status,0,c
 19573  01243C  D7EB               	goto	i2l6249
 19574                           
 19575                           ;usb_device.c: 1877: }
 19576                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 19577  01243E  5005               	movf	_outPipes+4,w,c	;volatile
 19578  012440  1006               	iorwf	_outPipes+5,w,c	;volatile
 19579  012442  B4D8               	btfsc	status,2,c
 19580  012444  D032               	goto	i2l6271
 19581                           
 19582                           ;usb_device.c: 1882: {
 19583                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 19584  012446  EE20 F001          	lfsr	2,1
 19585  01244A  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19586  01244C  26D9               	addwf	fsr2l,f,c
 19587  01244E  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19588  012450  22DA               	addwfc	fsr2h,f,c
 19589  012452  0E08               	movlw	8
 19590  012454  6EDF               	movwf	indf2,c
 19591                           
 19592                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 19593  012456  EE20 F002          	lfsr	2,2
 19594  01245A  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19595  01245C  26D9               	addwf	fsr2l,f,c
 19596  01245E  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19597  012460  22DA               	addwfc	fsr2h,f,c
 19598  012462  0E38               	movlw	56
 19599  012464  6EDE               	movwf	postinc2,c
 19600  012466  0E0D               	movlw	13
 19601  012468  6EDD               	movwf	postdec2,c
 19602                           
 19603                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 19604  01246A  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19605  01246E  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19606  012472  BCDF               	btfsc	indf2,6,c
 19607  012474  D00D               	goto	i2l6267
 19608                           
 19609                           ;usb_device.c: 1886: {
 19610                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 19611  012476  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19612  01247A  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19613  01247E  0E48               	movlw	72
 19614  012480  6EDF               	movwf	indf2,c
 19615                           
 19616                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19617  012482  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19618  012486  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19619  01248A  0E00               	movlw	0
 19620  01248C  8EDB               	bsf	plusw2,7,c
 19621                           
 19622                           ;usb_device.c: 1889: }
 19623  01248E  0012               	return	
 19624  012490                     i2l6267:
 19625                           
 19626                           ;usb_device.c: 1890: else
 19627                           ;usb_device.c: 1891: {
 19628                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 19629  012490  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19630  012494  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19631  012498  0E08               	movlw	8
 19632  01249A  6EDF               	movwf	indf2,c
 19633                           
 19634                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19635  01249C  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19636  0124A0  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19637  0124A4  0E00               	movlw	0
 19638  0124A6  8EDB               	bsf	plusw2,7,c
 19639                           
 19640                           ;usb_device.c: 1894: }
 19641                           ;usb_device.c: 1895: }
 19642  0124A8  0012               	return	
 19643  0124AA                     i2l6271:
 19644                           
 19645                           ;usb_device.c: 1896: else
 19646                           ;usb_device.c: 1897: {
 19647                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 19648  0124AA  EE20 F001          	lfsr	2,1
 19649  0124AE  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19650  0124B0  26D9               	addwf	fsr2l,f,c
 19651  0124B2  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19652  0124B4  22DA               	addwfc	fsr2h,f,c
 19653  0124B6  0E08               	movlw	8
 19654  0124B8  6EDF               	movwf	indf2,c
 19655                           
 19656                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19657  0124BA  EE20 F002          	lfsr	2,2
 19658  0124BE  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19659  0124C0  26D9               	addwf	fsr2l,f,c
 19660  0124C2  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19661  0124C4  22DA               	addwfc	fsr2h,f,c
 19662  0124C6  0E30               	movlw	48
 19663  0124C8  6EDE               	movwf	postinc2,c
 19664  0124CA  0E0D               	movlw	13
 19665  0124CC  6EDD               	movwf	postdec2,c
 19666                           
 19667                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 19668  0124CE  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19669  0124D2  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19670  0124D6  0E04               	movlw	4
 19671  0124D8  6EDF               	movwf	indf2,c
 19672                           
 19673                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19674  0124DA  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19675  0124DE  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19676  0124E2  0E00               	movlw	0
 19677  0124E4  8EDB               	bsf	plusw2,7,c
 19678                           
 19679                           ;usb_device.c: 1926: }
 19680                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 19681                           
 19682                           ;usb_device.c: 1915: {
 19683                           ;usb_device.c: 1921: outPipes[0].pFunc();
 19684  0124E6  9E04               	bcf	_outPipes+3,7,c	;volatile
 19685                           
 19686                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 19687  0124E8  5021               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 19688  0124EA  A4D8               	btfss	status,2,c
 19689  0124EC  0012               	return	
 19690                           
 19691                           ;usb_device.c: 1942: {
 19692                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 19693  0124EE  EC82  F098         	call	_USBCtrlEPAllowStatusStage	;wreg free
 19694  0124F2  0012               	return	
 19695  0124F4                     __end_of_USBCtrlTrfRxService:
 19696                           	opt stack 0
 19697                           pclatu	equ	0xFFB
 19698                           pclath	equ	0xFFA
 19699                           tblptru	equ	0xFF8
 19700                           tblptrh	equ	0xFF7
 19701                           tblptrl	equ	0xFF6
 19702                           tablat	equ	0xFF5
 19703                           prodh	equ	0xFF4
 19704                           prodl	equ	0xFF3
 19705                           intcon	equ	0xFF2
 19706                           intcon2	equ	0xFF1
 19707                           indf0	equ	0xFEF
 19708                           postinc0	equ	0xFEE
 19709                           fsr0h	equ	0xFEA
 19710                           fsr0l	equ	0xFE9
 19711                           wreg	equ	0xFE8
 19712                           indf1	equ	0xFE7
 19713                           postinc1	equ	0xFE6
 19714                           postdec1	equ	0xFE5
 19715                           fsr1h	equ	0xFE2
 19716                           fsr1l	equ	0xFE1
 19717                           indf2	equ	0xFDF
 19718                           postinc2	equ	0xFDE
 19719                           postdec2	equ	0xFDD
 19720                           plusw2	equ	0xFDB
 19721                           fsr2h	equ	0xFDA
 19722                           fsr2l	equ	0xFD9
 19723                           status	equ	0xFD8
 19724                           
 19725 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 19726 ;; Defined at:
 19727 ;;		line 1416 in file "../My_library/usb_cdc/usb/usb_device.c"
 19728 ;; Parameters:    Size  Location     Type
 19729 ;;		None
 19730 ;; Auto vars:     Size  Location     Type
 19731 ;;		None
 19732 ;; Return value:  Size  Location     Type
 19733 ;;		None               void
 19734 ;; Registers used:
 19735 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19736 ;; Tracked objects:
 19737 ;;		On entry : 0/0
 19738 ;;		On exit  : 0/0
 19739 ;;		Unchanged: 0/0
 19740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19745 ;;Total ram usage:        0 bytes
 19746 ;; Hardware stack levels used:    1
 19747 ;; This function calls:
 19748 ;;		Nothing
 19749 ;; This function is called by:
 19750 ;;		_USBDeviceTasks
 19751 ;;		_USBCtrlEPServiceComplete
 19752 ;;		_USBCtrlTrfRxService
 19753 ;; This function uses a non-reentrant model
 19754 ;;
 19755                           
 19756                           	psect	text87
 19757  013104                     __ptext87:
 19758                           	opt stack 0
 19759  013104                     _USBCtrlEPAllowStatusStage:
 19760                           	opt stack 15
 19761                           
 19762                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 19763                           
 19764                           ;incstack = 0
 19765  013104  5023               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 19766  013106  A4D8               	btfss	status,2,c
 19767  013108  0012               	return	
 19768                           
 19769                           ;usb_device.c: 1424: {
 19770                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 19771  01310A  0E01               	movlw	1
 19772  01310C  6E23               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 19773                           
 19774                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 19775  01310E  5024               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 19776  013110  A4D8               	btfss	status,2,c
 19777  013112  0012               	return	
 19778                           
 19779                           ;usb_device.c: 1427: {
 19780                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 19781  013114  0E01               	movlw	1
 19782  013116  6E24               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 19783                           
 19784                           ;usb_device.c: 1432: if(controlTransferState == 2)
 19785  013118  0E02               	movlw	2
 19786  01311A  1827               	xorwf	_controlTransferState,w,c	;volatile
 19787  01311C  A4D8               	btfss	status,2,c
 19788  01311E  D015               	goto	i2l5725
 19789                           
 19790                           ;usb_device.c: 1433: {
 19791                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 19792  013120  EE20 F001          	lfsr	2,1
 19793  013124  5010               	movf	_pBDTEntryIn,w,c
 19794  013126  26D9               	addwf	fsr2l,f,c
 19795  013128  5011               	movf	_pBDTEntryIn+1,w,c
 19796  01312A  22DA               	addwfc	fsr2h,f,c
 19797  01312C  0E00               	movlw	0
 19798  01312E  6EDF               	movwf	indf2,c
 19799                           
 19800                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 19801  013130  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19802  013134  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19803  013138  0E48               	movlw	72
 19804  01313A  6EDF               	movwf	indf2,c
 19805                           
 19806                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19807  01313C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19808  013140  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19809  013144  0E00               	movlw	0
 19810  013146  8EDB               	bsf	plusw2,7,c
 19811                           
 19812                           ;usb_device.c: 1437: }
 19813  013148  0012               	return	
 19814  01314A                     i2l5725:
 19815                           
 19816                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 19817  01314A  0427               	decf	_controlTransferState,w,c	;volatile
 19818  01314C  A4D8               	btfss	status,2,c
 19819  01314E  0012               	return	
 19820                           
 19821                           ;usb_device.c: 1439: {
 19822                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 19823  013150  0E00               	movlw	0
 19824  013152  6E1D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19825                           
 19826                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 19827  013154  EE20 F001          	lfsr	2,1
 19828  013158  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 19829  01315A  26D9               	addwf	fsr2l,f,c
 19830  01315C  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19831  01315E  22DA               	addwfc	fsr2h,f,c
 19832  013160  0E08               	movlw	8
 19833  013162  6EDF               	movwf	indf2,c
 19834                           
 19835                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 19836  013164  EE20 F002          	lfsr	2,2
 19837  013168  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 19838  01316A  26D9               	addwf	fsr2l,f,c
 19839  01316C  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19840  01316E  22DA               	addwfc	fsr2h,f,c
 19841  013170  0E30               	movlw	48
 19842  013172  6EDE               	movwf	postinc2,c
 19843  013174  0E0D               	movlw	13
 19844  013176  6EDD               	movwf	postdec2,c
 19845                           
 19846                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 19847  013178  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19848  01317C  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19849  013180  0E04               	movlw	4
 19850  013182  6EDF               	movwf	indf2,c
 19851                           
 19852                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 19853  013184  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19854  013188  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19855  01318C  0E00               	movlw	0
 19856  01318E  8EDB               	bsf	plusw2,7,c
 19857                           
 19858                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 19859  013190  0E01               	movlw	1
 19860  013192  6E1D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19861                           
 19862                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 19863  013194  EE20 F001          	lfsr	2,1
 19864  013198  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19865  01319A  26D9               	addwf	fsr2l,f,c
 19866  01319C  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19867  01319E  22DA               	addwfc	fsr2h,f,c
 19868  0131A0  0E08               	movlw	8
 19869  0131A2  6EDF               	movwf	indf2,c
 19870                           
 19871                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19872  0131A4  EE20 F002          	lfsr	2,2
 19873  0131A8  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19874  0131AA  26D9               	addwf	fsr2l,f,c
 19875  0131AC  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19876  0131AE  22DA               	addwfc	fsr2h,f,c
 19877  0131B0  0E30               	movlw	48
 19878  0131B2  6EDE               	movwf	postinc2,c
 19879  0131B4  0E0D               	movlw	13
 19880  0131B6  6EDD               	movwf	postdec2,c
 19881                           
 19882                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 19883  0131B8  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19884  0131BC  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19885  0131C0  0E80               	movlw	128
 19886  0131C2  6EDF               	movwf	indf2,c
 19887  0131C4  0012               	return	
 19888  0131C6                     __end_of_USBCtrlEPAllowStatusStage:
 19889                           	opt stack 0
 19890                           pclatu	equ	0xFFB
 19891                           pclath	equ	0xFFA
 19892                           tblptru	equ	0xFF8
 19893                           tblptrh	equ	0xFF7
 19894                           tblptrl	equ	0xFF6
 19895                           tablat	equ	0xFF5
 19896                           prodh	equ	0xFF4
 19897                           prodl	equ	0xFF3
 19898                           intcon	equ	0xFF2
 19899                           intcon2	equ	0xFF1
 19900                           indf0	equ	0xFEF
 19901                           postinc0	equ	0xFEE
 19902                           fsr0h	equ	0xFEA
 19903                           fsr0l	equ	0xFE9
 19904                           wreg	equ	0xFE8
 19905                           indf1	equ	0xFE7
 19906                           postinc1	equ	0xFE6
 19907                           postdec1	equ	0xFE5
 19908                           fsr1h	equ	0xFE2
 19909                           fsr1l	equ	0xFE1
 19910                           indf2	equ	0xFDF
 19911                           postinc2	equ	0xFDE
 19912                           postdec2	equ	0xFDD
 19913                           plusw2	equ	0xFDB
 19914                           fsr2h	equ	0xFDA
 19915                           fsr2l	equ	0xFD9
 19916                           status	equ	0xFD8
 19917                           
 19918 ;; *************** function _USBCtrlTrfInHandler *****************
 19919 ;; Defined at:
 19920 ;;		line 2595 in file "../My_library/usb_cdc/usb/usb_device.c"
 19921 ;; Parameters:    Size  Location     Type
 19922 ;;		None
 19923 ;; Auto vars:     Size  Location     Type
 19924 ;;  lastDTS         1    1[COMRAM] unsigned char 
 19925 ;; Return value:  Size  Location     Type
 19926 ;;		None               void
 19927 ;; Registers used:
 19928 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19929 ;; Tracked objects:
 19930 ;;		On entry : 0/0
 19931 ;;		On exit  : 0/0
 19932 ;;		Unchanged: 0/0
 19933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19937 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19938 ;;Total ram usage:        1 bytes
 19939 ;; Hardware stack levels used:    1
 19940 ;; Hardware stack levels required when called:    1
 19941 ;; This function calls:
 19942 ;;		_USBCtrlTrfTxService
 19943 ;; This function is called by:
 19944 ;;		_USBCtrlEPService
 19945 ;; This function uses a non-reentrant model
 19946 ;;
 19947                           
 19948                           	psect	text88
 19949  013572                     __ptext88:
 19950                           	opt stack 0
 19951  013572                     _USBCtrlTrfInHandler:
 19952                           	opt stack 16
 19953                           
 19954                           ;usb_device.c: 2597: uint8_t lastDTS;
 19955                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 19956                           
 19957                           ;incstack = 0
 19958  013572  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19959  013576  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19960  01357A  0E00               	movlw	0
 19961  01357C  BCDF               	btfsc	indf2,6,c
 19962  01357E  0E01               	movlw	1
 19963  013580  6E2F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 19964                           
 19965                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 19966  013582  0E04               	movlw	4
 19967  013584  1A10               	xorwf	_pBDTEntryIn,f,c
 19968                           
 19969                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 19970  013586  0E08               	movlw	8
 19971  013588  1822               	xorwf	_USBDeviceState,w,c	;volatile
 19972  01358A  A4D8               	btfss	status,2,c
 19973  01358C  D00D               	goto	i2l6423
 19974                           
 19975                           ;usb_device.c: 2608: {
 19976                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 19977  01358E  010D               	movlb	13	; () banked
 19978  013590  5132               	movf	50,w,b	;volatile
 19979  013592  0B7F               	andlw	127
 19980  013594  010F               	movlb	15	; () banked
 19981  013596  6F38               	movwf	56,b	;volatile
 19982                           
 19983                           ; BSR set to: 15
 19984                           ;usb_device.c: 2610: if(UADDR != 0u)
 19985  013598  010F               	movlb	15	; () banked
 19986  01359A  5138               	movf	56,w,b	;volatile
 19987  01359C  B4D8               	btfsc	status,2,c
 19988  01359E  D002               	goto	i2l6421
 19989                           
 19990                           ; BSR set to: 15
 19991                           ;usb_device.c: 2611: {
 19992                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 19993  0135A0  0E10               	movlw	16
 19994  0135A2  D001               	goto	L15
 19995  0135A4                     i2l6421:
 19996                           
 19997                           ; BSR set to: 15
 19998                           ;usb_device.c: 2614: else
 19999                           ;usb_device.c: 2615: {
 20000                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 20001  0135A4  0E04               	movlw	4
 20002  0135A6                     L15:
 20003  0135A6  6E22               	movwf	_USBDeviceState,c	;volatile
 20004  0135A8                     i2l6423:
 20005                           
 20006                           ;usb_device.c: 2617: }
 20007                           ;usb_device.c: 2618: }
 20008                           ;usb_device.c: 2621: if(controlTransferState == 1)
 20009  0135A8  0427               	decf	_controlTransferState,w,c	;volatile
 20010  0135AA  A4D8               	btfss	status,2,c
 20011  0135AC  D03A               	goto	i2l331
 20012                           
 20013                           ;usb_device.c: 2622: {
 20014                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 20015  0135AE  EE20 F002          	lfsr	2,2
 20016  0135B2  5010               	movf	_pBDTEntryIn,w,c
 20017  0135B4  26D9               	addwf	fsr2l,f,c
 20018  0135B6  5011               	movf	_pBDTEntryIn+1,w,c
 20019  0135B8  22DA               	addwfc	fsr2h,f,c
 20020  0135BA  0E38               	movlw	56
 20021  0135BC  6EDE               	movwf	postinc2,c
 20022  0135BE  0E0D               	movlw	13
 20023  0135C0  6EDD               	movwf	postdec2,c
 20024                           
 20025                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 20026  0135C2  EC4C  F097         	call	_USBCtrlTrfTxService	;wreg free
 20027                           
 20028                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 20029  0135C6  0E02               	movlw	2
 20030  0135C8  1829               	xorwf	_shortPacketStatus,w,c	;volatile
 20031  0135CA  A4D8               	btfss	status,2,c
 20032  0135CC  D00D               	goto	i2l6435
 20033                           
 20034                           ;usb_device.c: 2631: {
 20035                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 20036  0135CE  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 20037  0135D2  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20038  0135D6  0E04               	movlw	4
 20039  0135D8  6EDF               	movwf	indf2,c
 20040                           
 20041                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20042  0135DA  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 20043  0135DE  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20044  0135E2  0E00               	movlw	0
 20045  0135E4  8EDB               	bsf	plusw2,7,c
 20046                           
 20047                           ;usb_device.c: 2636: }
 20048  0135E6  0012               	return	
 20049  0135E8                     i2l6435:
 20050                           
 20051                           ;usb_device.c: 2637: else
 20052                           ;usb_device.c: 2638: {
 20053                           ;usb_device.c: 2639: if(lastDTS == 0)
 20054  0135E8  502F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 20055  0135EA  A4D8               	btfss	status,2,c
 20056  0135EC  D00D               	goto	i2l6441
 20057                           
 20058                           ;usb_device.c: 2640: {
 20059                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 20060  0135EE  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 20061  0135F2  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20062  0135F6  0E48               	movlw	72
 20063  0135F8  6EDF               	movwf	indf2,c
 20064                           
 20065                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20066  0135FA  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 20067  0135FE  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20068  013602  0E00               	movlw	0
 20069  013604  8EDB               	bsf	plusw2,7,c
 20070                           
 20071                           ;usb_device.c: 2643: }
 20072  013606  0012               	return	
 20073  013608                     i2l6441:
 20074                           
 20075                           ;usb_device.c: 2644: else
 20076                           ;usb_device.c: 2645: {
 20077                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 20078  013608  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 20079  01360C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20080  013610  0E08               	movlw	8
 20081  013612  6EDF               	movwf	indf2,c
 20082                           
 20083                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20084  013614  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 20085  013618  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20086  01361C  0E00               	movlw	0
 20087  01361E  8EDB               	bsf	plusw2,7,c
 20088                           
 20089                           ;usb_device.c: 2648: }
 20090                           ;usb_device.c: 2649: }
 20091                           ;usb_device.c: 2650: }
 20092  013620  0012               	return	
 20093  013622                     i2l331:
 20094                           
 20095                           ;usb_device.c: 2651: else
 20096                           ;usb_device.c: 2652: {
 20097                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 20098  013622  BE04               	btfsc	_outPipes+3,7,c	;volatile
 20099                           
 20100                           ;usb_device.c: 2661: }
 20101                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 20102                           
 20103                           ;usb_device.c: 2659: {
 20104                           ;usb_device.c: 2660: outPipes[0].pFunc();
 20105  013624  9E04               	bcf	_outPipes+3,7,c	;volatile
 20106                           
 20107                           ;usb_device.c: 2663: }
 20108                           ;usb_device.c: 2665: controlTransferState = 0;
 20109  013626  0E00               	movlw	0
 20110  013628  6E27               	movwf	_controlTransferState,c	;volatile
 20111  01362A  0012               	return	
 20112  01362C                     __end_of_USBCtrlTrfInHandler:
 20113                           	opt stack 0
 20114                           pclatu	equ	0xFFB
 20115                           pclath	equ	0xFFA
 20116                           tblptru	equ	0xFF8
 20117                           tblptrh	equ	0xFF7
 20118                           tblptrl	equ	0xFF6
 20119                           tablat	equ	0xFF5
 20120                           prodh	equ	0xFF4
 20121                           prodl	equ	0xFF3
 20122                           intcon	equ	0xFF2
 20123                           intcon2	equ	0xFF1
 20124                           indf0	equ	0xFEF
 20125                           postinc0	equ	0xFEE
 20126                           fsr0h	equ	0xFEA
 20127                           fsr0l	equ	0xFE9
 20128                           wreg	equ	0xFE8
 20129                           indf1	equ	0xFE7
 20130                           postinc1	equ	0xFE6
 20131                           postdec1	equ	0xFE5
 20132                           fsr1h	equ	0xFE2
 20133                           fsr1l	equ	0xFE1
 20134                           indf2	equ	0xFDF
 20135                           postinc2	equ	0xFDE
 20136                           postdec2	equ	0xFDD
 20137                           plusw2	equ	0xFDB
 20138                           fsr2h	equ	0xFDA
 20139                           fsr2l	equ	0xFD9
 20140                           status	equ	0xFD8
 20141                           
 20142 ;; *************** function _USBCtrlTrfTxService *****************
 20143 ;; Defined at:
 20144 ;;		line 1771 in file "../My_library/usb_cdc/usb/usb_device.c"
 20145 ;; Parameters:    Size  Location     Type
 20146 ;;		None
 20147 ;; Auto vars:     Size  Location     Type
 20148 ;;  byteToSend      1    0[COMRAM] unsigned char 
 20149 ;; Return value:  Size  Location     Type
 20150 ;;		None               void
 20151 ;; Registers used:
 20152 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20153 ;; Tracked objects:
 20154 ;;		On entry : 0/0
 20155 ;;		On exit  : 0/0
 20156 ;;		Unchanged: 0/0
 20157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20159 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20161 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20162 ;;Total ram usage:        1 bytes
 20163 ;; Hardware stack levels used:    1
 20164 ;; This function calls:
 20165 ;;		Nothing
 20166 ;; This function is called by:
 20167 ;;		_USBCtrlEPAllowDataStage
 20168 ;;		_USBCtrlTrfInHandler
 20169 ;; This function uses a non-reentrant model
 20170 ;;
 20171                           
 20172                           	psect	text89
 20173  012E98                     __ptext89:
 20174                           	opt stack 0
 20175  012E98                     _USBCtrlTrfTxService:
 20176                           	opt stack 14
 20177                           
 20178                           ;usb_device.c: 1773: uint8_t byteToSend;
 20179                           ;usb_device.c: 1777: byteToSend = 8;
 20180                           
 20181                           ;incstack = 0
 20182  012E98  0E08               	movlw	8
 20183  012E9A  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 20184                           
 20185                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 20186  012E9C  500F               	movf	_inPipes+5,w,c	;volatile
 20187  012E9E  E110               	bnz	i2l5559
 20188  012EA0  0E08               	movlw	8
 20189  012EA2  5C0E               	subwf	_inPipes+4,w,c	;volatile
 20190  012EA4  B0D8               	btfsc	status,0,c
 20191  012EA6  D00C               	goto	i2l5559
 20192                           
 20193                           ;usb_device.c: 1779: {
 20194                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 20195  012EA8  C00E  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 20196                           
 20197                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 20198  012EAC  5029               	movf	_shortPacketStatus,w,c	;volatile
 20199  012EAE  A4D8               	btfss	status,2,c
 20200  012EB0  D002               	goto	i2l5555
 20201                           
 20202                           ;usb_device.c: 1788: {
 20203                           ;usb_device.c: 1789: shortPacketStatus = 1;
 20204  012EB2  0E01               	movlw	1
 20205  012EB4  D004               	goto	L16
 20206  012EB6                     i2l5555:
 20207                           
 20208                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 20209  012EB6  0429               	decf	_shortPacketStatus,w,c	;volatile
 20210  012EB8  A4D8               	btfss	status,2,c
 20211  012EBA  D002               	goto	i2l5559
 20212                           
 20213                           ;usb_device.c: 1792: {
 20214                           ;usb_device.c: 1793: shortPacketStatus = 2;
 20215  012EBC  0E02               	movlw	2
 20216  012EBE                     L16:
 20217  012EBE  6E29               	movwf	_shortPacketStatus,c	;volatile
 20218  012EC0                     i2l5559:
 20219                           
 20220                           ;usb_device.c: 1794: }
 20221                           ;usb_device.c: 1795: }
 20222                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 20223  012EC0  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20224  012EC2  5E0E               	subwf	_inPipes+4,f,c	;volatile
 20225  012EC4  0E00               	movlw	0
 20226  012EC6  5A0F               	subwfb	_inPipes+5,f,c	;volatile
 20227                           
 20228                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 20229  012EC8  EE20 F001          	lfsr	2,1
 20230  012ECC  5010               	movf	_pBDTEntryIn,w,c
 20231  012ECE  26D9               	addwf	fsr2l,f,c
 20232  012ED0  5011               	movf	_pBDTEntryIn+1,w,c
 20233  012ED2  22DA               	addwfc	fsr2h,f,c
 20234  012ED4  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 20235                           
 20236                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 20237  012ED8  0E38               	movlw	56
 20238  012EDA  0100               	movlb	0	; () banked
 20239  012EDC  6FE8               	movwf	_pDst& (0+255),b
 20240  012EDE  0E0D               	movlw	13
 20241  012EE0  0100               	movlb	0	; () banked
 20242  012EE2  6FE9               	movwf	(_pDst+1)& (0+255),b
 20243                           
 20244                           ; BSR set to: 0
 20245                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 20246  012EE4  A00D               	btfss	_inPipes+3,0,c	;volatile
 20247  012EE6  D01D               	goto	i2l5577
 20248  012EE8  D03C               	goto	i2l5587
 20249  012EEA                     i2l5569:
 20250                           
 20251                           ; BSR set to: 0
 20252                           ;usb_device.c: 1812: {
 20253                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 20254  012EEA  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 20255  012EEE  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 20256  012EF2  0E00               	movlw	low (__mediumconst shr (0+16))
 20257  012EF4  6EF8               	movwf	tblptru,c
 20258  012EF6  C0E8  FFD9         	movff	_pDst,fsr2l
 20259  012EFA  C0E9  FFDA         	movff	_pDst+1,fsr2h
 20260  012EFE  0E0E               	movlw	(high __ramtop+-1)
 20261  012F00  64F7               	cpfsgt	tblptrh,c
 20262  012F02  D003               	bra	i2u451_47
 20263  012F04  0008               	tblrd		*
 20264  012F06  50F5               	movf	tablat,w,c
 20265  012F08  D005               	bra	i2u451_40
 20266  012F0A                     i2u451_47:
 20267  012F0A  CFF6 FFE9          	movff	tblptrl,fsr0l
 20268  012F0E  CFF7 FFEA          	movff	tblptrh,fsr0h
 20269  012F12  50EF               	movf	indf0,w,c
 20270  012F14                     i2u451_40:
 20271  012F14  6EDF               	movwf	indf2,c
 20272  012F16  4A0A               	infsnz	_inPipes,f,c	;volatile
 20273  012F18  2A0B               	incf	_inPipes+1,f,c	;volatile
 20274  012F1A  0100               	movlb	0	; () banked
 20275  012F1C  4BE8               	infsnz	_pDst& (0+255),f,b
 20276  012F1E  2BE9               	incf	(_pDst+1)& (0+255),f,b
 20277                           
 20278                           ; BSR set to: 0
 20279                           ;usb_device.c: 1814: byteToSend--;
 20280  012F20  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 20281  012F22                     i2l5577:
 20282                           
 20283                           ; BSR set to: 0
 20284  012F22  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20285  012F24  B4D8               	btfsc	status,2,c
 20286  012F26  0012               	return	
 20287  012F28  D7E0               	goto	i2l5569
 20288  012F2A                     i2l5579:
 20289                           
 20290                           ; BSR set to: 0
 20291                           ;usb_device.c: 1820: {
 20292                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 20293  012F2A  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 20294  012F2E  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 20295  012F32  0E00               	movlw	low (__mediumconst shr (0+16))
 20296  012F34  6EF8               	movwf	tblptru,c
 20297  012F36  C0E8  FFD9         	movff	_pDst,fsr2l
 20298  012F3A  C0E9  FFDA         	movff	_pDst+1,fsr2h
 20299  012F3E  0E0E               	movlw	(high __ramtop+-1)
 20300  012F40  64F7               	cpfsgt	tblptrh,c
 20301  012F42  D003               	bra	i2u453_47
 20302  012F44  0008               	tblrd		*
 20303  012F46  50F5               	movf	tablat,w,c
 20304  012F48  D005               	bra	i2u453_40
 20305  012F4A                     i2u453_47:
 20306  012F4A  CFF6 FFE9          	movff	tblptrl,fsr0l
 20307  012F4E  CFF7 FFEA          	movff	tblptrh,fsr0h
 20308  012F52  50EF               	movf	indf0,w,c
 20309  012F54                     i2u453_40:
 20310  012F54  6EDF               	movwf	indf2,c
 20311  012F56  4A0A               	infsnz	_inPipes,f,c	;volatile
 20312  012F58  2A0B               	incf	_inPipes+1,f,c	;volatile
 20313  012F5A  0100               	movlb	0	; () banked
 20314  012F5C  4BE8               	infsnz	_pDst& (0+255),f,b
 20315  012F5E  2BE9               	incf	(_pDst+1)& (0+255),f,b
 20316                           
 20317                           ; BSR set to: 0
 20318                           ;usb_device.c: 1822: byteToSend--;
 20319  012F60  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 20320  012F62                     i2l5587:
 20321                           
 20322                           ; BSR set to: 0
 20323  012F62  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20324  012F64  B4D8               	btfsc	status,2,c
 20325  012F66  0012               	return	
 20326  012F68  D7E0               	goto	i2l5579
 20327  012F6A                     __end_of_USBCtrlTrfTxService:
 20328                           	opt stack 0
 20329                           pclatu	equ	0xFFB
 20330                           pclath	equ	0xFFA
 20331                           tblptru	equ	0xFF8
 20332                           tblptrh	equ	0xFF7
 20333                           tblptrl	equ	0xFF6
 20334                           tablat	equ	0xFF5
 20335                           prodh	equ	0xFF4
 20336                           prodl	equ	0xFF3
 20337                           intcon	equ	0xFF2
 20338                           intcon2	equ	0xFF1
 20339                           indf0	equ	0xFEF
 20340                           postinc0	equ	0xFEE
 20341                           fsr0h	equ	0xFEA
 20342                           fsr0l	equ	0xFE9
 20343                           wreg	equ	0xFE8
 20344                           indf1	equ	0xFE7
 20345                           postinc1	equ	0xFE6
 20346                           postdec1	equ	0xFE5
 20347                           fsr1h	equ	0xFE2
 20348                           fsr1l	equ	0xFE1
 20349                           indf2	equ	0xFDF
 20350                           postinc2	equ	0xFDE
 20351                           postdec2	equ	0xFDD
 20352                           plusw2	equ	0xFDB
 20353                           fsr2h	equ	0xFDA
 20354                           fsr2l	equ	0xFD9
 20355                           status	equ	0xFD8
 20356                           pclatu	equ	0xFFB
 20357                           pclath	equ	0xFFA
 20358                           tblptru	equ	0xFF8
 20359                           tblptrh	equ	0xFF7
 20360                           tblptrl	equ	0xFF6
 20361                           tablat	equ	0xFF5
 20362                           prodh	equ	0xFF4
 20363                           prodl	equ	0xFF3
 20364                           intcon	equ	0xFF2
 20365                           intcon2	equ	0xFF1
 20366                           indf0	equ	0xFEF
 20367                           postinc0	equ	0xFEE
 20368                           fsr0h	equ	0xFEA
 20369                           fsr0l	equ	0xFE9
 20370                           wreg	equ	0xFE8
 20371                           indf1	equ	0xFE7
 20372                           postinc1	equ	0xFE6
 20373                           postdec1	equ	0xFE5
 20374                           fsr1h	equ	0xFE2
 20375                           fsr1l	equ	0xFE1
 20376                           indf2	equ	0xFDF
 20377                           postinc2	equ	0xFDE
 20378                           postdec2	equ	0xFDD
 20379                           plusw2	equ	0xFDB
 20380                           fsr2h	equ	0xFDA
 20381                           fsr2l	equ	0xFD9
 20382                           status	equ	0xFD8
 20383                           
 20384                           	psect	rparam
 20385  0000                     pclatu	equ	0xFFB
 20386                           pclath	equ	0xFFA
 20387                           tblptru	equ	0xFF8
 20388                           tblptrh	equ	0xFF7
 20389                           tblptrl	equ	0xFF6
 20390                           tablat	equ	0xFF5
 20391                           prodh	equ	0xFF4
 20392                           prodl	equ	0xFF3
 20393                           intcon	equ	0xFF2
 20394                           intcon2	equ	0xFF1
 20395                           indf0	equ	0xFEF
 20396                           postinc0	equ	0xFEE
 20397                           fsr0h	equ	0xFEA
 20398                           fsr0l	equ	0xFE9
 20399                           wreg	equ	0xFE8
 20400                           indf1	equ	0xFE7
 20401                           postinc1	equ	0xFE6
 20402                           postdec1	equ	0xFE5
 20403                           fsr1h	equ	0xFE2
 20404                           fsr1l	equ	0xFE1
 20405                           indf2	equ	0xFDF
 20406                           postinc2	equ	0xFDE
 20407                           postdec2	equ	0xFDD
 20408                           plusw2	equ	0xFDB
 20409                           fsr2h	equ	0xFDA
 20410                           fsr2l	equ	0xFD9
 20411                           status	equ	0xFD8
 20412                           
 20413                           	psect	temp
 20414  00005B                     btemp:
 20415                           	opt stack 0
 20416  00005B                     	ds	1
 20417  0000                     int$flags	set	btemp
 20418                           pclatu	equ	0xFFB
 20419                           pclath	equ	0xFFA
 20420                           tblptru	equ	0xFF8
 20421                           tblptrh	equ	0xFF7
 20422                           tblptrl	equ	0xFF6
 20423                           tablat	equ	0xFF5
 20424                           prodh	equ	0xFF4
 20425                           prodl	equ	0xFF3
 20426                           intcon	equ	0xFF2
 20427                           intcon2	equ	0xFF1
 20428                           indf0	equ	0xFEF
 20429                           postinc0	equ	0xFEE
 20430                           fsr0h	equ	0xFEA
 20431                           fsr0l	equ	0xFE9
 20432                           wreg	equ	0xFE8
 20433                           indf1	equ	0xFE7
 20434                           postinc1	equ	0xFE6
 20435                           postdec1	equ	0xFE5
 20436                           fsr1h	equ	0xFE2
 20437                           fsr1l	equ	0xFE1
 20438                           indf2	equ	0xFDF
 20439                           postinc2	equ	0xFDE
 20440                           postdec2	equ	0xFDD
 20441                           plusw2	equ	0xFDB
 20442                           fsr2h	equ	0xFDA
 20443                           fsr2l	equ	0xFD9
 20444                           status	equ	0xFD8


Data Sizes:
    Strings     525
    Constant    239
    Data        3
    BSS         1662
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160    117     160
    BANK1           256      4     153
    BANK2           256      0     178
    BANK3           256      0     250
    BANK4           256    105     105
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op3(BANK2[25]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_60(CODE[6]), STR_59(CODE[2]), STR_58(CODE[2]), STR_57(CODE[2]), 
		 -> STR_56(CODE[2]), STR_55(CODE[2]), STR_54(CODE[2]), STR_53(CODE[2]), 
		 -> STR_52(CODE[2]), STR_51(CODE[4]), STR_50(CODE[4]), STR_49(CODE[4]), 
		 -> STR_48(CODE[4]), STR_47(CODE[5]), STR_46(CODE[4]), STR_45(CODE[9]), 
		 -> STR_44(CODE[9]), STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[7]), 
		 -> STR_39(CODE[2]), STR_38(CODE[7]), STR_37(CODE[2]), STR_36(CODE[5]), 
		 -> STR_35(CODE[2]), STR_34(CODE[4]), STR_33(CODE[2]), STR_32(CODE[6]), 
		 -> STR_31(CODE[2]), STR_30(CODE[5]), STR_29(CODE[2]), STR_28(CODE[12]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[11]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op1(BANK1[25]), terminal_loop@op0(BANK1[25]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_61(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_23(CODE[37]), STR_21(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), display_dec@s(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op1(BANK1[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op0(BANK1[25]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op1(BANK1[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op0(BANK1[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_loop@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_loop@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK1[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_loop@buf(BANK4[100]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0

    sp__strcat	PTR unsigned char  size(2) Largest target is 0

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_loop@buf(BANK4[100]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK0[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_loop@buf(BANK4[100]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK0[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_loop@buf(BANK4[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK0[8]), tx_buf(BANK1[8]), usb_tx(BANK1[8]), usb_rx(BANK1[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_24(CODE[8]), print_time@str(BANK0[30]), STR_22(CODE[3]), print_time_dec@str(COMRAM[10]), 
		 -> STR_20(CODE[4]), STR_19(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_loop@buf(BANK4[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK0[8]), rx_buf(BANK1[8]), tx_buf(BANK1[8]), usb_tx(BANK1[8]), 
		 -> usb_rx(BANK1[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_loop@buf(BANK4[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK0[8]), rx_buf(BANK1[8]), tx_buf(BANK1[8]), usb_tx(BANK1[8]), 
		 -> usb_rx(BANK1[8]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_loop@buf(BANK4[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_loop@buf(BANK4[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK0[8]), usb_tx(BANK1[8]), usb_rx(BANK1[8]), 

    tx_sends@asciicode	PTR const unsigned char  size(2) Largest target is 315
		 -> STR_43(CODE[315]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_loop@buf(BANK4[100]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_loop@buf(BANK4[100]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> sw_B(BANK1[4]), sw_G(BANK1[4]), sw_R(BANK1[4]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_loop@buf(BANK4[100]), 

    S1935ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_loop@buf(BANK4[100]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_loop@buf(BANK4[100]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1497_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1497_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1497_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1497_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK2[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S102$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S92$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S92$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S68$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S68$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S68$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S68$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_terminal_loop
    _terminal_loop->_terminal_operation
    _terminal_operation->_terminal_time
    _tx_sends->_ringbuf_put
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _sprintf->___lwmod
    _ringbuf_put_str->_ringbuf_put
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _ringbuf_put_num->___lwmod
    ___lwmod->___lwdiv
    _ringbuf_backspace->_ringbuf_num
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _light_loop->_RTCC_from_RTCC
    _PWM_set->___awdiv
    ___lwdiv->___wmul
    _USB_loop->_get_string_usb
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _RTCC_loop->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _RTCC_to_caltime->_x_to_d
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _month_length->___awmod
    _get_quot_rem->___lldiv
    ___lmul->_month_length
    ___lldiv->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    ___awdiv->_atoi

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_terminal_loop

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_terminal_loop

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  264549
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_loop
                           _USB_loop
                         _light_loop
                          _main_init
                      _terminal_loop
 ---------------------------------------------------------------------------------
 (1) _terminal_loop                                      111   107      4  191827
                                            115 BANK0      2     2      0
                                              0 BANK1      4     0      4
                                              0 BANK4    105   105      0
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  26    16     10  166050
                                            101 BANK0     14     4     10
                            _PWM_set
                            ___awdiv
                             ___wmul
                               _atoi
                             _strcmp
                      _terminal_time
                           _tx_sends
 ---------------------------------------------------------------------------------
 (3) _tx_sends                                             2     0      2    4726
                                             15 BANK0      2     0      2
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  111435
                                             92 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   56985
                                             85 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   29871
                                             53 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             39    21     18   15834
                                             18 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4    6066
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   17230
                                             59 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    8463
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2   12303
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5    7777
                                             18 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     946
                                             13 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1443
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    3165
                           _ADC_init
                           _OSC_init
                           _PWM_init
                          _RTCC_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1257
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1541
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _light_loop                                          11    11      0   26711
                                             39 BANK0     11    11      0
                            _PWM_set
                     _RTCC_from_RTCC
                            ___lldiv
                            ___llmod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     470
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) _PWM_set                                              5     3      2   14288
                                             21 BANK0      5     3      2
                            ___awdiv (ARG)
                            ___lwdiv
                             ___wmul
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4   10680
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4    1669
                                              6 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _USB_loop                                             3     3      0   16414
                                             20 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (4) _ringbuf_put                                          7     4      3    4542
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2253
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (5) _ringbuf_num                                          8     6      2    1169
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    3026
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    5282
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            0     0      0    7580
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    7580
                                             37 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    6165
                                             24 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_from_epoch                                      2     0      2   11272
                                             59 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8701
                                             45 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    5084
                                             37 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2988
                                             12 BANK0     12     4      8
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     955
                                             24 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    2152
                                             22 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0    1697
                                             21 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4    1635
                                             13 BANK0      8     4      4
                             ___wmul (ARG)
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                15    15      0   33581
                                             30 COMRAM    15    15      0
                            _USB_ISR
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (11) _button_timer_interrupt                              5     2      3    1432
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (11) _USB_ISR                                             0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
           ___wmul (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
           ___lmul (ARG)
             _month_length (ARG)
               ___awmod
         ___lmul
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_loop
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _USB_loop
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _light_loop
     _PWM_set
       ___awdiv (ARG)
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _atoi (ARG)
         ___wmul
         _isdigit
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     ___lldiv
       ___lmul (ARG)
         _month_length (ARG)
           ___awmod
     ___llmod
     ___lmul
       _month_length (ARG)
         ___awmod
   _main_init
     _ADC_init
     _OSC_init
     _PWM_init
     _RTCC_init
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _terminal_loop
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _PWM_set
         ___awdiv (ARG)
           ___wmul (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___awdiv
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___wmul
       _atoi
         ___wmul
         _isdigit
       _strcmp
       _terminal_time
         _atoi
           ___wmul
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
               ___lwdiv (ARG)
                 ___wmul (ARG)
             ___wmul
             _isdigit
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
                   ___wmul (ARG)
                   _atoi (ARG)
                     ___wmul
                     _isdigit
             _caltime_to_epoch
               ___lmul
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                   ___lmul (ARG)
                     _month_length (ARG)
                       ___awmod
                 ___lmul
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lwdiv
                 ___wmul (ARG)
               ___lwmod
                 ___lwdiv (ARG)
                   ___wmul (ARG)
               ___wmul
               _isdigit
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num
       _tx_sends
         _ringbuf_put
           _ringbuf_num

 _ISR (ROOT)
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _button_timer_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     3E8      36       30.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100     69      69      14       41.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FA      12       97.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      B2      10       69.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      99       7       59.8%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     75      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3A8       8        0.0%
DATA                 0      0     790       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Nov 10 13:09:18 2015

                         get_string_usb@s 006D                                _USB_SD_Ptr FD0D  
                         _ringbuf_put_num 3CB2                           _ringbuf_put_str 3F8A  
                            ___awdiv@sign 0072                                        _ms 010E  
                           _USBDeviceInit 1EDA                       ___wmul@multiplicand 0062  
                       ??_RTCC_from_epoch 009D                        __size_of_CDCInitEP 006E  
                            __CFG_CP0$OFF 000000      USER_USB_CALLBACK_EVENT_HANDLER@event 003A  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 003C                                       l132 1F50  
             __end_of_USBStdGetDscHandler 23E8                                       l193 43C4  
                                     l194 43C2                                       l551 46AA  
                                     l490 1DBA                                       l495 1E0E  
                                     l583 3B56                                       l752 4374  
                                     l932 3340                                       _BDT 000D00  
                                     l757 41E8                                       l951 1AB2  
                                     l856 3CB4                                       l938 2C1A  
                                     _PR2 000FCB                                       _ISR 1008  
                                     _UIE 000F36                                       _UIR 000F62  
                       get_string_usb@len 006F                             ?_get_quot_rem 0085  
                      caltime_to_epoch@tm 0078                                _USBSuspend 4520  
                                     _now 014A                         _RTCC_from_caltime 45CA  
                            ___awmod@sign 0065                      USBStdSetCfgHandler@i 0042  
                                     prod 000FF3                                       wreg 000FE8  
                          _USBDeviceTasks 2032                                _TXSTA1bits 000FAD  
                          _USBDeviceState 0022                        ?_RTCC_from_caltime 009B  
                   ??_USBCtrlTrfRxService 002E                  __size_ofi2_USBDeviceInit 013A  
                          ??_getsUSBUSART 006A                  USBEnableEndpoint@options 0036  
                                    ?_ISR 002E                    __end_of_get_string_usb 425A  
                        _terminal_at_hand 3FEE                                      l1054 42E4  
                                    l1433 196C                                      l1428 1912  
                                    l1374 329E                USBConfigureEndpoint@handle 0034  
                                    l1904 38B0                                      l1697 25DC  
                                    l1947 3E9C                                      l1957 40A8  
                                    l1894 34A6                                      l9011 1EAE  
                                    l9003 1E8E                                      l9013 1EB2  
                                    l9005 1E98                                      l9015 1ED6  
                                    l9103 1CFC                        __CFG_WPFP$PAGE_127 000000  
                                    l8321 3216                                      l8401 1040  
                                    l9113 1D2A                                      l9105 1D16  
                                    l9201 41EA                                      l9041 0954  
                                    l9033 42CA                                      l8323 3222  
                                    l8315 31F8                                      l8251 37FC  
                                    l8243 37C6                                      l8235 37A2  
                                    l9123 1D42                                      l9051 0A1C  
                                    l8341 327A                                      l8333 3258  
                                    l8325 3228                                      l8309 31E2  
                                    l8245 37D2                                      l8413 10BE  
                                    l9117 1D36                                      l9109 1D20  
                                    l9061 0AE4                                      l9045 099C  
                                    l9029 42A2                                      l8351 342A  
                                    l8247 37D8                                      l8255 380A  
                                    l8239 37B2                                      l8407 109A  
                                    l9151 4224                                      l9135 4500  
                                    l8271 274E                                      l9071 0BAA  
                                    l9055 0A64                                      l9039 0948  
                                    l9303 0048                                      l8337 3266  
                                    l8353 343A                                      l8417 1122  
                                    l8409 109E                                      l9153 4228  
                                    l9137 4504                                      l8433 4598  
                                    l8601 05A6                                      l9081 0C72  
                                    l9065 0B2A                                      l9057 0A9C  
                                    l9049 09E4                                      l9321 0114  
                                    l9305 0058                                      l8363 3494  
                                    l8355 3440                                      l8259 381E  
                                    l9171 30FA                                      l8451 3E58  
                                    l8611 05E4                                      l9075 0BF2  
                                    l9331 01AA                                      l8293 3EB8  
                                    l8461 3E8E                                      l8453 3E5E  
                                    l9085 1C50                                      l9261 3CC4  
                                    l8621 064A                                      l8613 05EA  
                                    l9077 0C2A                                      l9069 0B72  
                                    l9325 015C                                      l8287 2938  
                                    l8551 1B24                                      l8375 2DAC  
                                    l9095 1CA4                                      l8471 4070  
                                    l9271 3D26                                      l9343 024E  
                                    l9335 01F2                                      l9327 0162  
                                    l8297 3EDE                                      l8553 1B28  
                                    l9169 30E4                                      l9177 3100  
                                    l8449 3E4C                                      l9089 1C60  
                                    l8473 4076                                      l9265 3CE6  
                                    l8713 08C6                                      l8705 085E  
                                    l8633 069A                                      l8625 065C  
                                    l8609 05D8                                      l8395 1030  
                                    l9099 1CB4                                      l9451 385A  
                                    l8483 3F8C                                      l8707 0864  
                                    l8651 071E                                      l8627 0674  
                                    l8619 063E                                      l8715 08D2  
                                    l9371 03DE                                      l9355 02F2  
                                    l9347 0296                                      l8557 1B30  
                                    l8397 1036                                      l9701 1956  
                                    l8733 440E                                      l9189 438C  
                                    l8477 409A                                      l8469 4064  
                                    l8813 2554                                      l8717 08F2  
                                    l8637 06B2                                      l8581 04D2  
                                    l9621 0E82                                      l9613 0E30  
                                    l9605 0DDE                                      l8751 2B94  
                                    l8743 2B60                                      l8911 27FC  
                                    l9455 389E                                      l9447 3844  
                                    l9279 3ACA                                      l8815 259E  
                                    l8487 3FC4                                      l8663 075A  
                                    l8639 06E8                                      l8583 04E4  
                                    l8575 04B4                                      l9367 0396  
                                    l9359 033A                                      l9631 0F34  
                                    l9623 0E86                                      l9615 0E34  
                                    l9607 0DE2                                      l8921 2846  
                                    l8913 2806                                      l9449 3854  
                                    l9713 1992                                      l9289 4480  
                                    l8737 4420                                      l8841 1F30  
                                    l8817 25A4                                      l8809 2542  
                                    l8673 07B4                                      l8649 0718  
                                    l8593 0526                                      l9641 0F82  
                                    l8763 2BFA                                      l9715 1996  
                                    l8683 07E4                                      l8691 080C  
                                    l8675 07BE                                      l8587 04EE  
                                    l9379 043A                                      l9635 0F5E  
                                    l8925 2876                                      l8853 1F5E  
                                    l8861 1F70                                      l8837 1F26  
                                    l8693 0818                                      l8669 077C  
                                    l8781 4036                                      l9645 0FC2  
                                    l9637 0F66                                      l9629 0F0A  
                                    l9653 0FF8                                      l8919 283E  
                                    l9719 19AE                                      l8791 40FE  
                                    l8953 1D94                                      l8929 28A8  
                                    l8945 4634                                      l8865 1F90  
                                    l8785 40B4                                      l9593 0D0C  
                                    l8971 1DF8                                      l8955 1D9E  
                                    l9691 1938                                      l9675 18F2  
                                    l8875 2000                                      l8787 40C0  
                                    l8699 083E                                      l8965 1DC4  
                                    l9693 193C                                      l9669 1870  
                                    l8869 1F9A                                      l8797 24F6  
                                    l9597 0D8C                                      l9589 0CE2  
                                    l8959 1DAE                                      l9679 18FC  
                                    l8799 24FC                                      l9599 0D90  
                                    STR_1 FFC1                                      l8985 1E3A  
                                    l8993 1E5E                                      l8977 1E12  
                                    l9697 194C                                      STR_4 FFFB  
                                    l8995 1E6A                                      l9949 3DF4  
                                    STR_7 FFFD                                      STR_9 FFF9  
                                    u8220 28E2                                      u8230 28E4  
                   ??_USBCtrlTrfTxService 002E                                      u8240 2914  
                                    u8260 292A                                      u8270 292C  
                                    u9150 1D84                                      _UCFG 000F39  
                                    u8280 2984                                      u8290 2986  
                                    u8258 2918                                      u9090 27EC  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    u9158 1D88                                      u8560 3FB6  
                                    u9098 27F0                                      u8570 3FE6  
                                    _UEIE 000F37                                      u8567 3FAC  
                                    u8577 3FDC                                      u9565 4648  
                                    u9566 464A                                      _UEIR 000F63  
                                    _UCON 000F65                           _CDCDataInHandle 00E4  
                     ??_RTCC_from_caltime 009D    USBStdFeatureReqHandler@current_ep_data 0045  
                                    _pDst 00E8                                      _atoi 24F4  
                                    _main 3DB6                  ??i2_USBTransferOnePacket 0032  
                button_timer_interrupt@bt 002E                                      _sw_B 0187  
                                    _sw_G 018B                                      _sw_R 018F  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                             _BaudRateGen 010A                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                         _USBDeviceAttach 4396                                      btemp 005B  
                  __CFG_DSWDTOSC$T1OSCREF 000000                           __end_of_USB_ISR 46F8  
                                    pclat 000FFA                                      prodh 000FF4  
                                    prodl 000FF3                           __end_of_PWM_set 1D60  
                                    start 10FE                        terminal_loop@ascii 0467  
                        __end_of_ADC_init 4658                             __CFG_IESO$OFF 000000  
              __end_of_USBCheckStdRequest 2B42                    ??_USBCtrlTrfOutHandler 0030  
                          terminal_loop@i 0468                              ___param_bank 000010  
               ??_USBStdFeatureReqHandler 0042                           ??_terminal_loop 00D3  
                         ??_terminal_time 00C4                             ADC_init@p_ref 0060  
                                   ??_ISR 004C                  ??_USBStdGetStatusHandler 002E  
                            print_time@tx 0095                            ?_USBDeviceInit 002E  
                       ??_RTCC_to_caltime 0064                             __CFG_PLLDIV$2 000000  
                            _BAUDCON1bits 000F7E                 __end_of_RTCC_from_caltime 45F0  
                                   ?_atoi 0066                                     ?_main 002E  
                 __size_of_put_string_usb 002C                            ??_get_quot_rem 0089  
                         __end_of___awdiv 3284                                     _ADRES 000FC3  
                                   STR_20 FFDA                                     STR_13 FFF7  
                                   STR_30 FFB7                                     STR_31 FFCC  
                                   STR_15 FF7B                                     STR_23 FF2D  
                                   STR_32 FFA7                                     STR_40 FF93  
                                   STR_24 FF84                                     STR_33 FFC4  
                                   STR_41 FFB2                                     STR_25 FF5E  
                                   STR_26 FFE3                                     STR_42 FFE5  
                                   STR_34 FFDE                                     STR_50 FFD2  
                                   STR_35 FFAB                                     STR_27 FFE2  
                                   STR_19 FFDA                                     STR_51 FFCA  
                                   STR_43 FDF2                                     STR_52 FFA5  
                                   STR_36 FFBC                                     STR_60 FFA1  
                                   STR_44 FF69                                     STR_28 FF52  
                         __end_of___awmod 3828                                     STR_37 FFD4  
                                   STR_29 FFE0                                     STR_53 FFEB  
                                   STR_61 FF8C                                     STR_45 FF72  
                                   STR_54 FFF1                                     STR_46 FFD6  
                                   STR_38 FF9A                                     STR_39 FFF5  
                                   STR_55 FFE9                                     STR_47 FFAD  
                                   STR_56 FFEF                                     STR_48 FFCE  
                                   STR_57 FFE7                                     STR_49 FFC6  
                                   STR_58 FFF3                                     STR_59 FFED  
       __size_of_USBCtrlEPServiceComplete 00F0                           __end_of___lldiv 34B8  
                                   u10120 1824                           ___awdiv@divisor 006F  
                         __end_of___llmod 38C2                    __end_of_USBDeviceTasks 217C  
                                   _LATB2 007C52                 ?_USBCtrlEPServiceComplete 002E  
                         __end_of___lwdiv 3EA6                           __end_of___lwmod 40B2  
                                   i2l132 21E2                                     i2l144 2062  
                                   i2l218 265C                                     i2l154 20FC  
                                   i2l331 3622                                     i2l155 2178  
                                   i2l156 210E                                     i2l360 12CC  
                                   i2l281 36EA                                     i2l345 2A78  
                                   i2l354 2AC6                                     i2l610 163E  
                                   i2l603 1556                                     i2l436 367A  
                                   i2l284 3772                                     i2l604 157A  
                                   i2l285 36F8                                     i2l605 159C  
                                   i2l438 36B0                                     i2l286 36FC  
                                   i2l294 429C                                     i2l606 15BE  
                                   i2l607 15DE                                     i2l608 15FE  
                                   i2l609 161E                                     i2l379 1494  
                                   _UADDR 000F38                           ___awdiv@counter 0071  
                                   _TMR1H 000FCF                                     _RPOR3 000EC3  
                                   _RPOR4 000EC4                                     _RPOR5 000EC5  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _USTAT 000F64  
      __size_of_USBCtrlEPAllowStatusStage 00C2                       ___lmul@multiplicand 0070  
                          __CFG_FCMEN$OFF 000000           __end_of_USBCtrlEPAllowDataStage 39F2  
                                   _sd000 FDEE                                     _sd001 FD58  
                                   _sd002 FD8C                      caltime_to_epoch@year 007E  
                              i2memset@p1 002E                           __end_of_dpowers FD0D  
                        __end_of_OSC_init 46F2                           __end_of_isdigit 45A2  
                      __size_of_RTCC_init 0030                           ?_get_string_usb 006D  
                     terminal_loop@i_4782 0466                        __size_of_RTCC_loop 003C  
                        ringbuf_delete@rb 0060                                     atoi@a 006B  
                                   atoi@s 0066                                     tablat 000FF5  
                                   plusw2 000FDB                         __end_of_CDCInitEP 3F8A  
                        __end_of_PWM_init 3340                          __end_of_USB_init 4694  
                        __end_of_USB_loop 3BA2                __size_of_ringbuf_backspace 008E  
                                   status 000FD8                           __end_of_sprintf 0900  
                        __end_ofi2_memset 4578                         month_length@month 0066  
                 __end_of_ringbuf_put_num 3D34                   __end_of_ringbuf_put_str 3FEE  
                         putUSBUSART@data 0060              __size_of_USBStdSetCfgHandler 00DC  
                         terminal_loop@rx 0195                           terminal_loop@tx 0193  
                         __initialization 3C2E                           terminal_time@tx 00BC  
                            __end_of_atoi 25E6                              __end_of_main 3E2E  
                   _control_signal_bitmap 00F0                       ringbuf_init@bufsize 0064  
                        RTCC_from_RTCC@tm 0085                 __size_of_USBCtrlEPService 00CE  
                           print_time@str 0097                                    ??_atoi 0068  
                                  ??_main 00D5                             __activetblptr 000003  
                         ?_USBDeviceTasks 002E                               ?_USBSuspend 002E  
                            _cdc_mem_type 00ED                                    _BCL1IF 007D0B  
                 __end_of_USBDeviceAttach 43CE                          _CDCDataOutHandle 00E6  
                       _getsUSBUSART$1886 006B                          ___llmod@dividend 0060  
                                  _CCPR1L 000FBB                                    _CCPR2L 000FB5  
                                  _CCPR3L 000F16                                    _CCPR4L 000F13  
                                  _EECON2 000FA7                                    _ANCON0 000F48  
                                  _ANCON1 000F49                          ___awdiv@dividend 006D  
                               ??_USB_ISR 004C                           getsUSBUSART@len 0069  
                 _terminal_operation$6532 00CF                   _terminal_operation$6533 00D1  
                               ??_PWM_set 0077                     __size_of_CDCTxService 017A  
                                  i2l1371 10C2                            __CFG_WDTEN$OFF 000000  
                                  i2l5301 4330                                    i2l5305 433E  
                                  i2l6201 2606                                    i2l5405 369A  
                                  i2l5413 36B8                                    i2l6301 2A9E  
                                  i2l6221 2682                                    i2l7013 2088  
                                  i2l7005 2078                                    i2l6303 2AA4  
                                  i2l6305 2AAA                                    i2l5291 3A54  
                                  i2l6315 2AE0                                    i2l7043 20F2  
                                  i2l7035 20CA                                    i2l7019 20AE  
                                  i2l6421 35A4                                    i2l5357 34F8  
                                  i2l5349 34CE                                    i2l5533 449C  
                                  i2l7029 20BE                                    i2l6423 35A8  
                                  i2l6271 24AA                                    i2l6255 2436  
                                  i2l6407 4164                                    i2l5535 44A2  
                                  i2l6319 2AFE                                    i2l7071 2174  
                                  i2l7063 213A                                    i2l6441 3608  
                                  i2l6249 2414                                    i2l5369 3554  
                                  i2l5705 4556                                    i2l5801 2A46  
                                  i2l7049 2106                                    i2l5555 2EB6  
                                  i2l6435 35E8                                    i2l6267 2490  
                                  i2l5539 44A8                                    i2l6291 2A86  
                                  i2l5725 314A                                    i2l5397 366E  
                                  i2l5389 3658                                    i2l5901 13A2  
                                  i2l5821 2366                                    i2l5813 22D8  
                                  i2l5709 4566                                    i2l6293 2A8C  
                                  i2l7069 2158                                    i2l5559 2EC0  
                                  i2l5911 13FA                                    i2l5831 23CA  
                                  i2l5823 236C                                    i2l6623 2FBA  
                                  i2l6607 4298                                    i2l5569 2EEA  
                                  i2l5577 2F22                                    i2l5913 1414  
                                  i2l5809 22C6                                    i2l6289 2A80  
                                  i2l6641 3028                                    i2l5579 2F2A  
                                  i2l5587 2F62                                    i2l5835 23D0  
                                  i2l5755 39A8                                    i2l6635 3008  
                                  i2l6627 2FC2                                    i2l7451 1662  
                                  i2l5917 142E                                    i2l5829 23C4  
                                  i2l6399 411C                                    i2l5943 14FA  
                                  i2l5927 1474                                    i2l5847 371A  
                                  i2l5775 29CC                                    i2l5759 39C0  
                                  i2l6639 3022                                    i2l6583 4462  
                                  i2l7471 1718                                    i2l7463 16CE  
                                  i2l7455 1686                                    i2l8167 106E  
                                  i2l5945 1506                                    i2l5937 14B6  
                                  i2l5929 1480                                    i2l5857 375A  
                                  i2l5785 2A00                                    i2l6585 4464  
                                  i2l5875 12C8                                    i2l5779 29D4  
                                  i2l6923 21C6                                    i2l7475 173E  
                                  i2l7467 16F2                                    i2l7459 16AA  
                                  i2l7483 1788                                    i2l5895 1384  
                                  i2l6951 2228                                    i2l6935 21F0  
                                  i2l6943 2202                                    i2l6919 21BE  
                                  i2l7479 1764                                    i2l5897 1386  
                                  i2l5889 1340                                    i2l6947 2220  
                                  i2l6957 2284                                    i2l6991 205A  
                                  i2l6983 204A                                    _RCREG1 000FAF  
                           CDCTxService@i 006A                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SSP1IF 007CF3  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                i2USBTransferOnePacket@ep 0032                         ??i2_USBDeviceInit 0036  
                      _terminal_loop$6530 0464           __size_ofi2_USBTransferOnePacket 00BA  
                          __CFG_WPDIS$OFF 000000                  __end_of_is_usb_available 46B0  
                      epoch_to_caltime@tm 008D                      get_string_usb@rx_len 0072  
                       _shortPacketStatus 0029                            __CFG_XINST$OFF 000000  
                       ?_epoch_to_caltime 008D                          ringbuf_put_num@i 0077  
                         USBDeviceTasks@i 004B                              _CCPTMRS0bits 000F52  
                            _CCPTMRS1bits 000F51                     caltime_to_epoch@epoch 0080  
             USBStdFeatureReqHandler@pUEP 0043                        _terminal_time$6531 00C4  
                USBTransferOnePacket@data 0061                USBCtrlTrfInHandler@lastDTS 002F  
                         ??_USBDeviceInit 0068                              ?_ringbuf_pop 0068  
                            ?_ringbuf_num 0060                              ?_ringbuf_put 0068  
                   caltime_to_epoch@month 0084                                    ___lmul 3EA6  
                            ?_putUSBUSART 0060                           _caltime_to_RTCC 2C1A  
                             light_loop@i 0091                               light_loop@n 00FE  
                                  ___wmul 43CE                        ??_epoch_to_caltime 008F  
                               ??___awdiv 0071                                 ??___awmod 0064  
                                  _d_to_x 45A2                                 ??___lldiv 0080  
                    __end_of_getsUSBUSART 28AE                      ringbuf_put_num@value 0074  
                            ?_timer0_init 002E                                 ??___llmod 0068  
                       __end_of_RTCC_init 449A                              ?_timer1_init 0060  
                               ??___lwdiv 006A                         __end_of_RTCC_loop 4320  
                               ??___lwmod 0071                              ?_timer3_init 002E  
                       _USBEnableEndpoint 4320           __size_of_USBStdGetStatusHandler 00AA  
                                  _memset 4404                                    clear_0 3C36  
                                  clear_1 3C48                                    clear_2 3C54  
                         put_string_usb@s 006C                                    clear_3 3C60  
                                  clear_4 3C6C                                    clear_5 3C78  
                         __CFG_CLKOEC$OFF 000000                          ___awdiv@quotient 0073  
                         ___awmod@divisor 0062                           ___awmod@counter 0064  
                                  _x_to_d 4658                        ?_USBEnableEndpoint 0036  
                                  _rx_buf 0160                __size_of_RTCC_from_caltime 0026  
                                  _usb_rx 0170                                    _usb_tx 0178  
                                  _tx_buf 0168                                    _strcmp 40B2  
           __size_of_USBTransferOnePacket 00D8                 __size_of_caltime_to_epoch 028E  
                      _terminal_operation 0000                                 ??_isdigit 0060  
                            _CDCTxService 1D60                              __mediumconst FD02  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                                 ?_ADC_init 002E  
                     ??_USBEnableEndpoint 0037                                 ??_sprintf 0084  
                     ?_terminal_operation 00C5                               _CtrlTrfData 000D38  
                        __end_of_tx_sends 42E4                      terminal_loop@command 00F5  
                    _controlTransferState 0027                      __CFG_LS48MHZ$SYS48X8 000000  
                              __accesstop 0060                   __end_of__initialization 3CA8  
                            __pbssBIGRAMl 0469                      __end_of_get_quot_rem 2E98  
                           ___rparam_used 000001                           _RTCC_from_epoch 46CA  
                __size_of_USBStallHandler 0046                          ?_ringbuf_put_num 0072  
                        ?_ringbuf_put_str 006F                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 002C                          terminal_loop@op0 0118  
                        terminal_loop@op1 0131                          terminal_loop@op2 0280  
                        terminal_loop@op3 0299                          terminal_loop@buf 0400  
                          __pcstackCOMRAM 002E                 __end_of_USBEnableEndpoint 435C  
                           __end_of_sd000 FDF2                             __end_of_sd001 FD8C  
                           __end_of_sd002 FDC0                          terminal_time@op0 00BE  
                        terminal_time@op1 00C0                          terminal_time@op2 00C2  
                            __pidataBANK0 46F8                              __pidataBANK1 1004  
                    ??_terminal_operation 00CF                  __end_of_terminal_at_hand 4050  
        __size_of_USBCtrlEPAllowDataStage 0098                           light_loop@_5680 00FD  
           __size_of_USBConfigureEndpoint 0094                                 ?_OSC_init 002E  
             __end_of_USBCtrlTrfInHandler 362C                           __CFG_DSWDTPS$G2 000000  
                          _put_string_usb 44F4                    i2_USBTransferOnePacket 34B8  
                               ?_PWM_init 002E                                 ?_USB_init 002E  
                               ?_USB_loop 002E                         _CDCTxService$1934 0068  
                         light_loop@value 008B                                _cdc_notice 0100  
                 __size_of_ringbuf_delete 0026                                 ?i2_memset 002E  
                              _cdc_rx_len 00EE                                _cdc_tx_len 00EF  
                              ??_ADC_init 0060                caltime_to_epoch@month_3939 007F  
                ??_USBCtrlTrfSetupHandler 0048                          ?_USBDeviceAttach 002E  
                  _USBStdGetStatusHandler 36DC                              sprintf@width 0093  
                      __size_of_main_init 0098                                __pbssBANK0 00D5  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                   __end_of_caltime_to_RTCC 2CF0  
                         _RTCC_to_caltime 3340               __size_of_USBWakeFromSuspend 0032  
                             _pBDTEntryIn 0010          __end_of_USBCtrlEPServiceComplete 26D6  
             __size_of_USBCheckCDCRequest 00B0                     __end_of_weekday_3char FDDC  
                    USBCtrlTrfRxService@i 002E                                   ?___lmul 006C  
                                 ?___wmul 0060                                   ?_d_to_x 002E  
                  __end_of_put_string_usb 4520                                ??_OSC_init 0060  
                                 ?_memset 0060                            ___lmul@product 0074  
                              _device_dsc FDDC                          _USBCtrlEPService 2F6A  
                                 ?_x_to_d 002E                                _ep_data_in 0016  
                                 ?_strcmp 0060               __end_of_USBCtrlTrfRxService 24F4  
                              ??_PWM_init 0060                        _USBCheckStdRequest 2A68  
                              ??_USB_init 0069                         _configDescriptor1 FD15  
                              ??_USB_loop 0074                          ??_get_string_usb 0071  
                      __CFG_OSC$INTOSCPLL 000000                                ??i2_memset 0034  
             __end_of_USBCtrlTrfTxService 2F6A                       _USBStdSetCfgHandler 298C  
                  I2C_LCD_SetCursor@F8633 0197                           __CFG_WDTPS$1024 000000  
                                 _SPBRGH1 000F7F                                   _SSP1ADD 000FC8  
                                 _SSP1BUF 000FC9                      terminal_operation@tx 00C5  
                                 _RTCVALH 000F3B                                   _RTCVALL 000F3A  
                     ?_USBCheckStdRequest 002E              __size_of_USBStdGetDscHandler 0132  
                                 _UIEbits 000F36                                   _USB_ISR 46F2  
                 __end_of_RTCC_from_epoch 46E4                      timer1_init@prescaler 0062  
                                 _UIRbits 000F62                                   _PWM_set 1BB8  
                            PWM_set@color 0079                          __CFG_CFGPLLEN$ON 000000  
                ??_button_timer_interrupt 0031                             _cdc_trf_state 0026  
                            PWM_set@value 0075                             ?_month_length 0066  
                     epoch_to_caltime@day 0093                       epoch_to_caltime@num 0097  
                       RTCC_from_epoch@tm 009B                                   _pCDCDst 00DE  
                                 _pCDCSrc 00E1                     __size_of_getsUSBUSART 00EA  
                                 __Hparam 0000                      ?_USBStdSetCfgHandler 002E  
                               _CDCInitEP 3F1C                                   __Lparam 0000  
                            USB_loop@data 0076                         ringbuf_put_num@rb 0072  
              __size_of_USBEnableEndpoint 003C                         ringbuf_put_str@rb 006F  
                    ??_USBCheckStdRequest 0048             __size_of_USBCtrlTrfOutHandler 005C  
                           ?_ringbuf_init 0060                                   ___awdiv 31C6  
                         __size_of___lmul 0076                                   ___awmod 3786  
                                 ___lldiv 33FC                          ??_USBDeviceTasks 004B  
                         __size_of___wmul 0036                                   ___llmod 3828  
                   ringbuf_put_num@digits 0076                                _light_mode 00F1  
                                 ___lwdiv 3E2E                           ?_put_string_usb 006C  
                              _light_loop 17AE                         ??_USBStallHandler 002E  
                                 ___lwmod 4050                           __size_of_d_to_x 0028  
                   __end_of_terminal_loop 1016                     __end_of_terminal_time 0CAC  
                    __size_of_ringbuf_pop 00CC                      __size_of_ringbuf_num 00EE  
                    __size_of_ringbuf_put 00D4                           __CFG_STVREN$OFF 000000  
                       __end_of_main_init 395A                      __size_of_putUSBUSART 0022  
             epoch_to_caltime@month_cache 00FF                                   __pcinit 3C2E  
                      getsUSBUSART@buffer 0067                                 ?_tx_sends 006F  
                         __size_of_memset 0034                 __end_of_configDescriptor1 FD58  
                                 __ramtop 0F00                 terminal_loop@command_init 00F4  
                    __size_of_timer0_init 003A                      __size_of_timer1_init 0050  
                                 __ptext0 3DB6                                   __ptext1 0CAC  
                                 __ptext2 0000                                   __ptext3 42A0  
                                 __ptext4 0900                                   __ptext5 3FEE  
                                 __ptext6 3BA2                                   __ptext7 04A6  
                                 __ptext8 3F8A                                   __ptext9 45CA  
                                 _inPipes 000A                      __size_of_timer3_init 002C  
                         __size_of_x_to_d 0020               _USBDeferOUTDataStagePackets 0020  
                               _T0CONbits 000FD5                          _time_change_flag 00F2  
                        _caltime_to_epoch 1016                           __size_of_strcmp 005C  
                            __size_of_ISR 00F6                                 _T1CONbits 000FCD  
                                 _dpowers FD03                              ??_USBSuspend 0042  
                 __size_of_RTCC_from_RTCC 001A                                 _T2CONbits 000FCA  
                    light_loop@value_5681 008C                                   _isdigit 4578  
                               _T3CONbits 000F79                          ___awmod@dividend 0060  
                               _T5CONbits 000F22                           i2_USBDeviceInit 217C  
                        i2USBDeviceInit@i 0036                        __end_of_USB_CD_Ptr FD15  
                                 _sprintf 04A6           __size_of_USBCtrlTrfSetupHandler 0082  
                 __end_of_RTCC_to_caltime 33FC                     __size_of_get_quot_rem 00D4  
                    end_of_initialization 3CA8                              _getsUSBUSART 27C4  
                            _CTMUCONHbits 000FB3                        __end_of_USB_SD_Ptr FD13  
                            _CTMUCONLbits 000FB2                       _pBDTEntryEP0OutNext 001B  
                          ??_month_length 0067                                   memset@c 0062  
                                 memset@n 0064                                   memset@p 0066  
         _dummy_encapsulated_cmd_response 0158                  ?_USBStdFeatureReqHandler 002E  
                        ?_caltime_to_RTCC 0076                     ??_USBStdSetCfgHandler 0042  
                         ___lldiv@divisor 007C                      timer3_init@prescaler 0061  
                              ?_CDCInitEP 002E                           ___lldiv@counter 0084  
                       ?_is_usb_available 002E                        __end_of_USBSuspend 454C  
                          ??_ringbuf_init 0066                   _USBCtrlEPAllowDataStage 395A  
                      ??_is_usb_available 0060                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                _USBCtrlEPServiceComplete 25E6                                   strcmp@r 0065  
                              ??_tx_sends 0071                _USBStatusStageEnabledFlag1 0023  
              _USBStatusStageEnabledFlag2 0024                        USBEnableEndpoint@p 0037  
                               _PORTAbits 000F80                          __CFG_DSBOREN$OFF 000000  
                               _RTCC_init 446A                                 _RTCC_loop 42E4  
               epoch_to_caltime@day_cache 0114                              _get_quot_rem 2DC4  
                              _print_time 3BA2                            _ringbuf_delete 45F0  
               __size_of_epoch_to_caltime 01F2                          __CFG_CPUDIV$OSC1 000000  
                      _BothEP0OutUOWNsSet 001D                       RTCC_from_caltime@tm 009B  
               USBConfigureEndpoint@EPNum 0033                         __size_of_ADC_init 0020  
              ?_USBCtrlEPAllowStatusStage 002E                          ?_RTCC_from_epoch 009B  
     USER_USB_CALLBACK_EVENT_HANDLER@size 003E                                 _USTATcopy 002D  
         __size_of_button_timer_interrupt 0282                   timer1_init@clock_select 0060  
            __end_of_USBTransferOnePacket 2C1A                               _CCP1CONbits 000FBA  
                             _CCP2CONbits 000FB4                          __CFG_IOL1WAY$OFF 000000  
                             _CCP3CONbits 000F15                               _CCP4CONbits 000F12  
                       putUSBUSART@length 0062                       __CFG_MSSP7B_EN$MSK7 000000  
                          ringbuf_init@rb 0060                    _USBCtrlTrfSetupHandler 3D34  
                          ringbuf_pop@ret 006E                   ?i2_USBTransferOnePacket 002E  
                             ?_light_loop 002E                     __end_of_USBDeviceInit 2032  
                       ?_terminal_at_hand 00B5                            __end_of___lmul 3F1C  
                          __end_of___wmul 4404                            __end_of_d_to_x 45CA  
                 __end_ofi2_USBDeviceInit 22B6                    __end_of_ringbuf_delete 4616  
                      ??_terminal_at_hand 00BC                                 i2memset@c 0030  
                               i2memset@n 0032                                 i2memset@p 0034  
                          __end_of_memset 4438                                ?_RTCC_init 002E  
                       __size_of_OSC_init 000E                                ?_RTCC_loop 002E  
                        __CFG_DSWDTEN$OFF 000000                         _USBBusIsSuspended 00EC  
                          __end_of_x_to_d 4678                     epoch_to_caltime@month 0096  
                          __end_of_strcmp 410E                       start_initialization 3C2E  
                        month_length@year 006B                   ?_USBStdGetStatusHandler 002E  
                             __end_of_ISR 10FE             USBCtrlTrfRxService@byteToRead 002F  
                       __size_of_PWM_init 00BC                         __size_of_USB_init 001C  
                       __size_of_USB_loop 008E                               _cdc_data_rx 0200  
                             _cdc_data_tx 0240                         __size_ofi2_memset 002C  
            __end_of_USBConfigureEndpoint 3A86                          ?_RTCC_to_caltime 0062  
         __end_of_USBStdFeatureReqHandler 152C         __end_of_USBCtrlEPAllowStatusStage 31C6  
                __end_of_USBCtrlEPService 3038                           ___llmod@divisor 0064  
                         ___llmod@counter 0068                 ??_USBCtrlEPAllowDataStage 002F  
                             ??_CDCInitEP 003A                            USBDeviceInit@i 0068  
                  _pBDTEntryEP0OutCurrent 0019                   USBTransferOnePacket@dir 0060  
                 USBTransferOnePacket@len 0063            __end_ofi2_USBTransferOnePacket 3572  
                     ringbuf_put_num@temp 0078                                  ??___lmul 0074  
                                ??___wmul 0064                            USB_loop@rx_len 0074  
                     _USBStdGetDscHandler 22B6                                  ??_d_to_x 0075  
             __size_of_terminal_operation 04A6                         __CFG_ADCSEL$BIT12 000000  
                             __pdataBANK0 00FF                               __pdataBANK1 0197  
                                ??_memset 0066                  __size_of_ringbuf_put_num 0082  
                __size_of_ringbuf_put_str 0064                    _button_timer_interrupt 152C  
                                ??_x_to_d 0060                           ?_ringbuf_delete 0060  
                                ??_strcmp 0064                      __end_of_month_length 298C  
                          _RTCC_from_RTCC 46B0                    _USBActiveConfiguration 002C  
          __end_of_USBStdGetStatusHandler 3786                               ?_print_time 0095  
                             __pbssCOMRAM 0001                       RTCC_to_caltime@dumy 0064  
                           __pcstackBANK0 0060                             __pcstackBANK1 0193  
            __size_of_USBCtrlTrfInHandler 00BA                             __pcstackBANK4 0400  
                    __end_of_ringbuf_init 41BE                      ?_USBStdGetDscHandler 002E  
                            _isdigit$5972 0061                                  ?_USB_ISR 002E  
                                ?_PWM_set 0075                            light_loop@temp 008D  
                     __size_of_light_loop 0218                __end_of_USBWakeFromSuspend 446A  
                             sprintf@flag 0091                               sprintf@prec 0088  
                         _USBStallHandler 425A                              _pBDTEntryOut 00D5  
              __end_of_USBCheckCDCRequest 36DC                  __end_of_caltime_to_epoch 12A4  
                         millis_timer@cnt 0116                  __size_of_USBDeviceAttach 0038  
                        ??_put_string_usb 0070                          ___lwdiv@dividend 0066  
                               __pintcode 1008                             __pmediumconst FD02  
                                ?___awdiv 006D                                  ?___awmod 0060  
                                ?___lldiv 0078                                  ?___llmod 0060  
                                ?___lwdiv 0066                     _is_usb_available$2052 0060  
                                ?___lwmod 006D                    __end_of_RTCC_from_RTCC 46CA  
                        ?i2_USBDeviceInit 002E                USBCBSendResume@delay_count 0112  
                             ??_RTCC_init 0060                               ??_RTCC_loop 0087  
                    _USBTransferOnePacket 2B42                         __size_of_tx_sends 0044  
                               _main_init 38C2                                  ?_isdigit 002E  
                        _epoch_to_caltime 19C6                      __CFG_RTCOSC$T1OSCREF 000000  
                                _ADC_flag 00EB                                  _ADC_init 4638  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 416A  
                     ringbuf_backspace@rb 0068                     ??_USBStdGetDscHandler 002E  
                             _ep_data_out 00DB                          ___lwdiv@quotient 006B  
                   terminal_at_hand@value 00BB                                  ?_sprintf 0072  
            __size_of_USBCtrlTrfRxService 010C             USBConfigureEndpoint@direction 002E  
                               d_to_x@dec 0075                                  _CTMUCONH 000FB3  
                                _CTMUCONL 000FB2                                  _CTMUICON 000FB1  
            __size_of_USBCtrlTrfTxService 00D2                  ringbuf_init@internal_buf 0062  
                          ___wmul@product 0064                                  _LATBbits 000F8A  
              ??_USBCtrlEPServiceComplete 002F                                  _IPR1bits 000F9F  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _IPR5bits 000F99  
                                _PIE5bits 000F91                       __size_of_print_time 008C  
                                _PIR1bits 000F9E                                  i2u451_40 2F14  
                                _PIR2bits 000FA1                                  i2u451_47 2F0A  
                                i2u453_40 2F54                                  i2u453_47 2F4A  
                                i2u720_40 1754                                  i2u721_40 177A  
                                _PIR5bits 000F98                                  i2u482_40 2332  
                                i2u810_40 109E                epoch_to_caltime@year_cache 00F3  
                                i2u482_47 2328                                  i2u483_40 2362  
                                i2u811_40 10B4                                  i2u483_47 2358  
                                i2u812_40 10B6                                  i2u804_40 105E  
                                i2u485_40 23BA                                  i2u485_47 23B0  
                                i2u718_40 1708                                  i2u805_48 1060  
                                i2u719_40 172E                                  i2u807_40 1084  
                                i2u808_40 1086                 USBCtrlEPService@setup_cnt 004A  
                                i2u809_40 109C                             ??_ringbuf_pop 006A  
                           ??_ringbuf_num 0062                             ??_ringbuf_put 006B  
                                _RCONbits 000FD0                             ??_putUSBUSART 0063  
                                _UEP0bits 000F26                _USBDeferINDataStagePackets 001F  
                   terminal_operation@op0 00C7                     terminal_operation@op1 00C9  
                   terminal_operation@op2 00CB                     terminal_operation@op3 00CD  
                                _SSP1CON1 000FC6                                  _SSP1CON2 000FC5  
                           ??_timer0_init 0060                             ??_timer1_init 0061  
             __size_of_USBCheckStdRequest 00DA                             ??_timer3_init 0060  
                                _SSP1STAT 000FC7                                  _UCONbits 000F65  
                    _USBConfigureEndpoint 39F2                                  _OSC_init 46E4  
                         ?_RTCC_from_RTCC 0085          __size_of_USBStdFeatureReqHandler 0288  
                              _ADCON0bits 000FC2                                _ADCON1bits 000FC1  
                       ___wmul@multiplier 0060                     ?_USBTransferOnePacket 0060  
                        __CFG_SOSCSEL$LOW 000000                                  _PWM_init 3284  
          button_timer_interrupt@sw_value 0030                                  _USB_init 4678  
                                _USB_loop 3B14                                ?_main_init 002E  
               __size_of_is_usb_available 001C                             ?_CDCTxService 002E  
                            _RemoteWakeup 001E                                  i2_memset 454C  
                       ??_ringbuf_put_num 0077                         ??_ringbuf_put_str 0073  
                           ringbuf_pop@rb 0068                             ringbuf_num@rb 0060  
                 __end_of_USBStallHandler 42A0                             ringbuf_put@rb 0068  
                       ___lmul@multiplier 006C                               _INTCON2bits 000FF1  
             ??_USBCtrlEPAllowStatusStage 002E               __end_of_USBStdSetCfgHandler 2A68  
                        __size_of_USB_ISR 0006                      epoch_to_caltime@year 0095  
                  __size_of_terminal_loop 036A                    __size_of_terminal_time 03AC  
                        __size_of_PWM_set 01A8                   __size_of_get_string_usb 004C  
                              _CCPR1Lbits 000FBB                                _CCPR2Lbits 000FB5  
                              _CCPR3Lbits 000F16                        __end_of_device_dsc FDEE  
                              _CCPR4Lbits 000F13                   ?_USBCtrlTrfSetupHandler 002E  
                 USBStdGetStatusHandler@p 002F                                  __Hrparam 0000  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0064  
                                _SetupPkt 000D30                             _weekday_3char FDC0  
                   __size_of_month_length 00DE                              ??_light_loop 0087  
                      ringbuf_put_str@str 0071                     ?_USBConfigureEndpoint 002E  
                __size_of_caltime_to_RTCC 00D6                         ??_USBDeviceAttach 0060  
                        __size_of___awdiv 00BE                          __size_of___awmod 00A2  
                        __size_of___lldiv 00BC                          __size_of___llmod 009A  
                        __size_of___lwdiv 0078                          __size_of___lwmod 0062  
                       tx_sends@asciicode 006F                       __end_of_ringbuf_pop 3104  
                     __end_of_ringbuf_num 27C4                       __end_of_ringbuf_put 2DC4  
                     __end_of_putUSBUSART 4638                               _line_coding 0180  
                          ??_CDCTxService 0067                       __end_of_timer0_init 4396  
                   __size_of_ringbuf_init 0054                       __end_of_timer1_init 420E  
                              sprintf@len 008F                       __end_of_timer3_init 44F4  
                              sprintf@val 008D                          __size_of_isdigit 002A  
                 __size_of_USBDeviceTasks 014A                           ___lwdiv@divisor 0068  
                         ___lwdiv@counter 006A                      timer0_init@prescaler 0061  
                                __ptext10 40B2                                  __ptext11 24F4  
                                __ptext20 435C                                  __ptext12 4578  
                                __ptext21 416A                                  __ptext13 3CB2  
                                __ptext30 17AE                                  __ptext22 4678  
                                __ptext14 4050                                  __ptext31 3828  
                                __ptext23 1EDA                                  __ptext15 45F0  
                                __ptext40 4616                                  __ptext32 1BB8  
                                __ptext24 4404                                  __ptext16 3A86  
                                __ptext41 420E                                  __ptext33 43CE  
                                __ptext25 4396                                  __ptext17 38C2  
                                __ptext50 4658                                  __ptext42 4694  
                                __ptext34 3E2E                                  __ptext26 446A  
                                __ptext18 44C8                                  __ptext51 46CA  
                                __ptext43 27C4                                  __ptext35 3B14  
                                __ptext27 3284                                  __ptext19 41BE  
                                __ptext60 31C6                                  __ptext52 19C6  
                                __ptext44 1D60                                  __ptext36 2CF0  
                                __ptext28 46E4                                  __ptext53 28AE  
                                __ptext45 2B42                                  __ptext37 3038  
                                __ptext29 4638                                  __ptext70 3D34  
                                __ptext62 152C                                  __ptext54 3786  
                                __ptext46 42E4                                  __ptext38 26D6  
                                __ptext71 25E6                                  __ptext63 46F2  
                                __ptext55 2DC4                                  __ptext47 46B0  
                                __ptext39 44F4                                  __ptext80 362C  
                                __ptext72 395A                                  __ptext64 2032  
                                __ptext56 3EA6                                  __ptext48 1016  
                                __ptext81 3F1C                                  __ptext73 2A68  
                                __ptext65 217C                                  __ptext57 33FC  
                                __ptext49 3340                                  __ptext82 34B8  
                                __ptext74 298C                                  __ptext66 4438  
                                __ptext58 2C1A                                  __ptext83 4320  
                                __ptext75 454C                                  __ptext67 4520  
                                __ptext59 45A2                                  __ptext84 39F2  
                                __ptext76 36DC                                  __ptext68 425A  
                                __ptext85 410E                                  __ptext77 22B6  
                                __ptext69 2F6A                                  __ptext86 23E8  
                                __ptext78 12A4                                  __ptext87 3104  
                                __ptext79 449A                                  __ptext88 3572  
                                __ptext89 2E98                              _SSP1CON1bits 000FC6  
                            _SSP1CON2bits 000FC5                                PWM_init@PR 0060  
               __size_of_terminal_at_hand 0062                          __size_of_sprintf 045A  
                   RTCC_loop@prev_halfsec 00EA                      terminal_at_hand@hand 00B7  
                      __end_of_light_loop 19C6                             __size_of_atoi 00F2  
          __end_of_USBCtrlTrfSetupHandler 3DB6                             __size_of_main 0078  
                       ?_USBCtrlEPService 002E                              _month_length 28AE  
                       put_string_usb@len 006E                        ??_USBCtrlEPService 0048  
                __size_of_RTCC_from_epoch 001A                       _USBCtrlTrfInHandler 3572  
                                _outPipes 0001                          ??_ringbuf_delete 0062  
                 ?_button_timer_interrupt 002E                      _USBCtrlTrfOutHandler 410E  
                                int$flags 005B                              _ringbuf_init 416A  
                                atoi@sign 006A                 _USBCtrlEPAllowStatusStage 3104  
                               x_to_d@hex 0061                              _SSP1STATbits 000FC7  
                           _terminal_loop 0CAC                    ??_USBTransferOnePacket 0064  
                           _terminal_time 0900                                  _tx_sends 42A0  
               _USBDeferStatusStagePacket 0021                              ??_print_time 0097  
                CDCTxService@byte_to_send 006B                            main_init@rxbuf 0300  
                          main_init@txbuf 0469                               ??_main_init 0069  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                    ringbuf_put@asciicode 006A                      ?_USBCtrlTrfInHandler 002E  
           USBCtrlTrfTxService@byteToSend 002E                                  isdigit@c 0062  
                                memset@p1 0060                          ?_USBStallHandler 002E  
                USBStdFeatureReqHandler@p 0046                          get_quot_rem@quot 0085  
                       RTCC_to_caltime@tm 0062                                  intlevel2 0000  
                               sprintf@ap 0089                                 sprintf@cp 008B  
                               sprintf@sp 0072                    __size_of_USBDeviceInit 0158  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 44C8  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 0040          ?_USER_USB_CALLBACK_EVENT_HANDLER 003A  
         _USER_USB_CALLBACK_EVENT_HANDLER 449A                          ___lwmod@dividend 006D  
            i2USBTransferOnePacket@handle 0033                          ___lldiv@dividend 0078  
                              _RCSTA1bits 000FAC                       terminal_at_hand@max 00BA  
                     terminal_at_hand@min 00B9                         ?_caltime_to_epoch 0078  
                       _ringbuf_backspace 3A86                  __end_of_epoch_to_caltime 1BB8  
                __size_of_RTCC_to_caltime 00BC                                _OSCCONbits 000FD3  
          __end_of_button_timer_interrupt 17AE                __end_of_terminal_operation 04A6  
                      __end_of_print_time 3C2E                i2USBTransferOnePacket@data 002F  
                      ??_caltime_to_epoch 007A                        ?_ringbuf_backspace 0068  
                  ??_USBConfigureEndpoint 002F                     ?_USBCtrlTrfOutHandler 002E  
                             _ringbuf_pop 3038                               _ringbuf_num 26D6  
                             _ringbuf_put 2CF0                               _putUSBUSART 4616  
                     _USBCtrlTrfRxService 23E8                               _timer0_init 435C  
                      _USBWakeFromSuspend 4438                               _timer1_init 41BE  
                             _timer3_init 44C8                            ?_terminal_loop 0193  
                          ?_terminal_time 00BC                   _USBStdFeatureReqHandler 12A4  
                      _USBCheckCDCRequest 362C                       _USBCtrlTrfTxService 2E98  
                     ??_ringbuf_backspace 006A                           get_quot_rem@div 0087  
                         get_quot_rem@num 0089                                _RTCCFGbits 000F3F  
                                sprintf@c 0092                                  sprintf@f 0074  
                     ?_USBWakeFromSuspend 002E                                  strcmp@s1 0060  
                                strcmp@s2 0062                          _is_usb_available 4694  
                              _PPSCONbits 000EBF                          ___lldiv@quotient 0080  
                         ___lwmod@divisor 006F                         caltime_to_RTCC@tm 0076  
                       ??_caltime_to_RTCC 0078                     ??_USBCtrlTrfInHandler 002F  
                   _USBAlternateInterface 002A                           ___lwmod@counter 0071  
                      terminal_at_hand@tx 00B5                       ?_USBCheckCDCRequest 002E  
               i2USBTransferOnePacket@dir 002E                 i2USBTransferOnePacket@len 0031  
                     USBEnableEndpoint@ep 0039                           _endpoint_number 0028  
                    ?_USBCtrlTrfRxService 002E           epoch_to_caltime@day_since_epoch 0091  
                           ?_getsUSBUSART 0067                  ?_USBCtrlEPAllowDataStage 002E  
                          _get_string_usb 420E                      ?_USBCtrlTrfTxService 002E  
               __end_of_ringbuf_backspace 3B14              _USBStatusStageTimeoutCounter 0025  
                    ??_USBWakeFromSuspend 0042                USBTransferOnePacket@handle 0065  
                    __end_of_CDCTxService 1EDA                      ??_USBCheckCDCRequest 002E  
                              _USB_CD_Ptr FD13                          ??_RTCC_from_RTCC 0087  
