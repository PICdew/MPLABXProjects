

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Jul 18 19:00:42 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    14                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    77  0000                     
    78                           	psect	idataBANK0
    79  012948                     __pidataBANK0:
    80                           	opt stack 0
    81                           
    82                           ;initializer for epoch_to_caltime@month_cache
    83  012948  01                 	db	1
    84                           
    85                           ;initializer for rx_loop@comm_buf_init
    86  012949  01                 	db	1
    87                           
    88                           	psect	mediumconst
    89  00FE2C                     __pmediumconst:
    90                           	opt stack 0
    91  00FE2C  00                 	db	0
    92  00FE2D                     _weekday_3char:
    93                           	opt stack 0
    94  00FE2D  53                 	db	83
    95  00FE2E  55                 	db	85
    96  00FE2F  4E                 	db	78
    97  00FE30  00                 	db	0
    98  00FE31  4D                 	db	77
    99  00FE32  4F                 	db	79
   100  00FE33  4E                 	db	78
   101  00FE34  00                 	db	0
   102  00FE35  54                 	db	84
   103  00FE36  55                 	db	85
   104  00FE37  45                 	db	69
   105  00FE38  00                 	db	0
   106  00FE39  57                 	db	87
   107  00FE3A  45                 	db	69
   108  00FE3B  44                 	db	68
   109  00FE3C  00                 	db	0
   110  00FE3D  54                 	db	84
   111  00FE3E  48                 	db	72
   112  00FE3F  55                 	db	85
   113  00FE40  00                 	db	0
   114  00FE41  46                 	db	70
   115  00FE42  52                 	db	82
   116  00FE43  49                 	db	73
   117  00FE44  00                 	db	0
   118  00FE45  53                 	db	83
   119  00FE46  41                 	db	65
   120  00FE47  54                 	db	84
   121  00FE48  00                 	db	0
   122  00FE49                     __end_of_weekday_3char:
   123                           	opt stack 0
   124  0000                     _PPSCONbits	set	3775
   125  0000                     _RPOR3	set	3779
   126  0000                     _RPOR4	set	3780
   127  0000                     _RPOR5	set	3781
   128  0000                     _ANCON0	set	3912
   129  0000                     _ANCON1	set	3913
   130  0000                     _CCP3CONbits	set	3861
   131  0000                     _CCP4CONbits	set	3858
   132  0000                     _CCPR3L	set	3862
   133  0000                     _CCPR3Lbits	set	3862
   134  0000                     _CCPR4L	set	3859
   135  0000                     _CCPR4Lbits	set	3859
   136  0000                     _CCPTMRS0bits	set	3922
   137  0000                     _CCPTMRS1bits	set	3921
   138  0000                     _PADCFG1bits	set	3900
   139  0000                     _RTCCAL	set	3902
   140  0000                     _RTCCFGbits	set	3903
   141  0000                     _RTCVALH	set	3899
   142  0000                     _RTCVALL	set	3898
   143  0000                     _T5CONbits	set	3874
   144  0000                     _ADRES	set	4035
   145  0000                     _ADCON0bits	set	4034
   146  0000                     _ADCON1bits	set	4033
   147  0000                     _BAUDCON1bits	set	3966
   148  0000                     _CCP1CONbits	set	4026
   149  0000                     _CCP2CONbits	set	4020
   150  0000                     _CCPR1L	set	4027
   151  0000                     _CCPR1Lbits	set	4027
   152  0000                     _CCPR2L	set	4021
   153  0000                     _CCPR2Lbits	set	4021
   154  0000                     _EECON2	set	4007
   155  0000                     _INTCON2bits	set	4081
   156  0000                     _INTCONbits	set	4082
   157  0000                     _IPR1bits	set	3999
   158  0000                     _IPR2bits	set	4002
   159  0000                     _IPR5bits	set	3993
   160  0000                     _OSCCONbits	set	4051
   161  0000                     _OSCTUNEbits	set	3995
   162  0000                     _PIE1bits	set	3997
   163  0000                     _PIE2bits	set	4000
   164  0000                     _PIE5bits	set	3985
   165  0000                     _PIR1bits	set	3998
   166  0000                     _PIR2bits	set	4001
   167  0000                     _PIR5bits	set	3992
   168  0000                     _PORTAbits	set	3968
   169  0000                     _PR2	set	4043
   170  0000                     _RCREG1	set	4015
   171  0000                     _RCSTA1bits	set	4012
   172  0000                     _SPBRG1	set	4016
   173  0000                     _SPBRGH1	set	3967
   174  0000                     _T0CONbits	set	4053
   175  0000                     _T1CONbits	set	4045
   176  0000                     _T2CONbits	set	4042
   177  0000                     _T3CONbits	set	3961
   178  0000                     _TMR1H	set	4047
   179  0000                     _TRISA	set	3986
   180  0000                     _TRISB	set	3987
   181  0000                     _TRISC	set	3988
   182  0000                     _TXREG1	set	4014
   183  0000                     _TXSTA1bits	set	4013
   184  0000                     _GIE	set	32663
   185  0000                     _LATB2	set	31826
   186  00FE49                     STR_11:
   187  00FE49  09                 	db	9
   188  00FE4A  2A                 	db	42
   189  00FE4B  2A                 	db	42
   190  00FE4C  2A                 	db	42
   191  00FE4D  2A                 	db	42
   192  00FE4E  2A                 	db	42
   193  00FE4F  2A                 	db	42
   194  00FE50  2A                 	db	42
   195  00FE51  2A                 	db	42
   196  00FE52  2A                 	db	42
   197  00FE53  2A                 	db	42
   198  00FE54  2A                 	db	42
   199  00FE55  2A                 	db	42
   200  00FE56  2A                 	db	42
   201  00FE57  2A                 	db	42
   202  00FE58  2A                 	db	42
   203  00FE59  2A                 	db	42
   204  00FE5A  2A                 	db	42
   205  00FE5B  2A                 	db	42
   206  00FE5C  2A                 	db	42
   207  00FE5D  2A                 	db	42
   208  00FE5E  2A                 	db	42
   209  00FE5F  2A                 	db	42
   210  00FE60  2A                 	db	42
   211  00FE61  2A                 	db	42
   212  00FE62  2A                 	db	42
   213  00FE63  2A                 	db	42
   214  00FE64  0A                 	db	10
   215  00FE65  09                 	db	9
   216  00FE66  2A                 	db	42
   217  00FE67  2A                 	db	42
   218  00FE68  2A                 	db	42
   219  00FE69  2A                 	db	42
   220  00FE6A  20                 	db	32
   221  00FE6B  4B                 	db	75	;'K'
   222  00FE6C  69                 	db	105	;'i'
   223  00FE6D  6C                 	db	108	;'l'
   224  00FE6E  6C                 	db	108	;'l'
   225  00FE6F  69                 	db	105	;'i'
   226  00FE70  66                 	db	102	;'f'
   227  00FE71  69                 	db	105	;'i'
   228  00FE72  73                 	db	115	;'s'
   229  00FE73  68                 	db	104	;'h'
   230  00FE74  20                 	db	32
   231  00FE75  4C                 	db	76	;'L'
   232  00FE76  69                 	db	105	;'i'
   233  00FE77  67                 	db	103	;'g'
   234  00FE78  68                 	db	104	;'h'
   235  00FE79  74                 	db	116	;'t'
   236  00FE7A  20                 	db	32
   237  00FE7B  20                 	db	32
   238  00FE7C  2A                 	db	42
   239  00FE7D  2A                 	db	42
   240  00FE7E  2A                 	db	42
   241  00FE7F  2A                 	db	42
   242  00FE80  0A                 	db	10
   243  00FE81  09                 	db	9
   244  00FE82  2A                 	db	42
   245  00FE83  2A                 	db	42
   246  00FE84  2A                 	db	42
   247  00FE85  2A                 	db	42
   248  00FE86  20                 	db	32
   249  00FE87  4D                 	db	77	;'M'
   250  00FE88  61                 	db	97	;'a'
   251  00FE89  64                 	db	100	;'d'
   252  00FE8A  65                 	db	101	;'e'
   253  00FE8B  20                 	db	32
   254  00FE8C  62                 	db	98	;'b'
   255  00FE8D  79                 	db	121	;'y'
   256  00FE8E  20                 	db	32
   257  00FE8F  40                 	db	64	;'@'
   258  00FE90  52                 	db	82	;'R'
   259  00FE91  79                 	db	121	;'y'
   260  00FE92  6F                 	db	111	;'o'
   261  00FE93  6B                 	db	107	;'k'
   262  00FE94  65                 	db	101	;'e'
   263  00FE95  72                 	db	114	;'r'
   264  00FE96  69                 	db	105	;'i'
   265  00FE97  20                 	db	32
   266  00FE98  2A                 	db	42
   267  00FE99  2A                 	db	42
   268  00FE9A  2A                 	db	42
   269  00FE9B  2A                 	db	42
   270  00FE9C  0A                 	db	10
   271  00FE9D  09                 	db	9
   272  00FE9E  2A                 	db	42
   273  00FE9F  2A                 	db	42
   274  00FEA0  2A                 	db	42
   275  00FEA1  2A                 	db	42
   276  00FEA2  2A                 	db	42
   277  00FEA3  2A                 	db	42
   278  00FEA4  2A                 	db	42
   279  00FEA5  2A                 	db	42
   280  00FEA6  2A                 	db	42
   281  00FEA7  2A                 	db	42
   282  00FEA8  2A                 	db	42
   283  00FEA9  2A                 	db	42
   284  00FEAA  2A                 	db	42
   285  00FEAB  2A                 	db	42
   286  00FEAC  2A                 	db	42
   287  00FEAD  2A                 	db	42
   288  00FEAE  2A                 	db	42
   289  00FEAF  2A                 	db	42
   290  00FEB0  2A                 	db	42
   291  00FEB1  2A                 	db	42
   292  00FEB2  2A                 	db	42
   293  00FEB3  2A                 	db	42
   294  00FEB4  2A                 	db	42
   295  00FEB5  2A                 	db	42
   296  00FEB6  2A                 	db	42
   297  00FEB7  2A                 	db	42
   298  00FEB8  0A                 	db	10
   299  00FEB9  0A                 	db	10
   300  00FEBA  09                 	db	9
   301  00FEBB  63                 	db	99	;'c'
   302  00FEBC  6F                 	db	111	;'o'
   303  00FEBD  6D                 	db	109	;'m'
   304  00FEBE  6D                 	db	109	;'m'
   305  00FEBF  61                 	db	97	;'a'
   306  00FEC0  6E                 	db	110	;'n'
   307  00FEC1  64                 	db	100	;'d'
   308  00FEC2  20                 	db	32
   309  00FEC3  09                 	db	9
   310  00FEC4  6F                 	db	111	;'o'
   311  00FEC5  70                 	db	112	;'p'
   312  00FEC6  65                 	db	101	;'e'
   313  00FEC7  6C                 	db	108	;'l'
   314  00FEC8  61                 	db	97	;'a'
   315  00FEC9  6E                 	db	110	;'n'
   316  00FECA  64                 	db	100	;'d'
   317  00FECB  31                 	db	49	;'1'
   318  00FECC  09                 	db	9
   319  00FECD  6F                 	db	111	;'o'
   320  00FECE  70                 	db	112	;'p'
   321  00FECF  65                 	db	101	;'e'
   322  00FED0  6C                 	db	108	;'l'
   323  00FED1  61                 	db	97	;'a'
   324  00FED2  6E                 	db	110	;'n'
   325  00FED3  64                 	db	100	;'d'
   326  00FED4  32                 	db	50	;'2'
   327  00FED5  0A                 	db	10
   328  00FED6  0A                 	db	10
   329  00FED7  09                 	db	9
   330  00FED8  70                 	db	112	;'p'
   331  00FED9  72                 	db	114	;'r'
   332  00FEDA  69                 	db	105	;'i'
   333  00FEDB  6E                 	db	110	;'n'
   334  00FEDC  74                 	db	116	;'t'
   335  00FEDD  5F                 	db	95	;'_'
   336  00FEDE  74                 	db	116	;'t'
   337  00FEDF  69                 	db	105	;'i'
   338  00FEE0  6D                 	db	109	;'m'
   339  00FEE1  65                 	db	101	;'e'
   340  00FEE2  28                 	db	40
   341  00FEE3  74                 	db	116	;'t'
   342  00FEE4  29                 	db	41
   343  00FEE5  0A                 	db	10
   344  00FEE6  09                 	db	9
   345  00FEE7  61                 	db	97	;'a'
   346  00FEE8  64                 	db	100	;'d'
   347  00FEE9  6A                 	db	106	;'j'
   348  00FEEA  75                 	db	117	;'u'
   349  00FEEB  73                 	db	115	;'s'
   350  00FEEC  74                 	db	116	;'t'
   351  00FEED  5F                 	db	95	;'_'
   352  00FEEE  74                 	db	116	;'t'
   353  00FEEF  69                 	db	105	;'i'
   354  00FEF0  6D                 	db	109	;'m'
   355  00FEF1  65                 	db	101	;'e'
   356  00FEF2  28                 	db	40
   357  00FEF3  61                 	db	97	;'a'
   358  00FEF4  74                 	db	116	;'t'
   359  00FEF5  29                 	db	41
   360  00FEF6  20                 	db	32
   361  00FEF7  5B                 	db	91	;'['
   362  00FEF8  68                 	db	104	;'h'
   363  00FEF9  61                 	db	97	;'a'
   364  00FEFA  6E                 	db	110	;'n'
   365  00FEFB  64                 	db	100	;'d'
   366  00FEFC  3A                 	db	58	;':'
   367  00FEFD  79                 	db	121	;'y'
   368  00FEFE  2C                 	db	44
   369  00FEFF  4D                 	db	77	;'M'
   370  00FF00  2C                 	db	44
   371  00FF01  64                 	db	100	;'d'
   372  00FF02  2C                 	db	44
   373  00FF03  68                 	db	104	;'h'
   374  00FF04  2C                 	db	44
   375  00FF05  6D                 	db	109	;'m'
   376  00FF06  2C                 	db	44
   377  00FF07  73                 	db	115	;'s'
   378  00FF08  5D                 	db	93	;']'
   379  00FF09  20                 	db	32
   380  00FF0A  5B                 	db	91	;'['
   381  00FF0B  76                 	db	118	;'v'
   382  00FF0C  61                 	db	97	;'a'
   383  00FF0D  6C                 	db	108	;'l'
   384  00FF0E  75                 	db	117	;'u'
   385  00FF0F  65                 	db	101	;'e'
   386  00FF10  28                 	db	40
   387  00FF11  64                 	db	100	;'d'
   388  00FF12  65                 	db	101	;'e'
   389  00FF13  63                 	db	99	;'c'
   390  00FF14  69                 	db	105	;'i'
   391  00FF15  6D                 	db	109	;'m'
   392  00FF16  61                 	db	97	;'a'
   393  00FF17  6C                 	db	108	;'l'
   394  00FF18  29                 	db	41
   395  00FF19  5D                 	db	93	;']'
   396  00FF1A  0A                 	db	10
   397  00FF1B  09                 	db	9
   398  00FF1C  70                 	db	112	;'p'
   399  00FF1D  77                 	db	119	;'w'
   400  00FF1E  6D                 	db	109	;'m'
   401  00FF1F  20                 	db	32
   402  00FF20  5B                 	db	91	;'['
   403  00FF21  63                 	db	99	;'c'
   404  00FF22  6F                 	db	111	;'o'
   405  00FF23  6C                 	db	108	;'l'
   406  00FF24  6F                 	db	111	;'o'
   407  00FF25  72                 	db	114	;'r'
   408  00FF26  3A                 	db	58	;':'
   409  00FF27  52                 	db	82	;'R'
   410  00FF28  2C                 	db	44
   411  00FF29  47                 	db	71	;'G'
   412  00FF2A  2C                 	db	44
   413  00FF2B  42                 	db	66	;'B'
   414  00FF2C  2C                 	db	44
   415  00FF2D  57                 	db	87	;'W'
   416  00FF2E  5D                 	db	93	;']'
   417  00FF2F  20                 	db	32
   418  00FF30  5B                 	db	91	;'['
   419  00FF31  76                 	db	118	;'v'
   420  00FF32  61                 	db	97	;'a'
   421  00FF33  6C                 	db	108	;'l'
   422  00FF34  75                 	db	117	;'u'
   423  00FF35  65                 	db	101	;'e'
   424  00FF36  28                 	db	40
   425  00FF37  25                 	db	37
   426  00FF38  29                 	db	41
   427  00FF39  3A                 	db	58	;':'
   428  00FF3A  30                 	db	48	;'0'
   429  00FF3B  7E                 	db	126
   430  00FF3C  31                 	db	49	;'1'
   431  00FF3D  30                 	db	48	;'0'
   432  00FF3E  30                 	db	48	;'0'
   433  00FF3F  5D                 	db	93	;']'
   434  00FF40  0A                 	db	10
   435  00FF41  09                 	db	9
   436  00FF42  70                 	db	112	;'p'
   437  00FF43  77                 	db	119	;'w'
   438  00FF44  6D                 	db	109	;'m'
   439  00FF45  20                 	db	32
   440  00FF46  63                 	db	99	;'c'
   441  00FF47  6C                 	db	108	;'l'
   442  00FF48  65                 	db	101	;'e'
   443  00FF49  61                 	db	97	;'a'
   444  00FF4A  72                 	db	114	;'r'
   445  00FF4B  0A                 	db	10
   446  00FF4C  09                 	db	9
   447  00FF4D  73                 	db	115	;'s'
   448  00FF4E  65                 	db	101	;'e'
   449  00FF4F  74                 	db	116	;'t'
   450  00FF50  20                 	db	32
   451  00FF51  74                 	db	116	;'t'
   452  00FF52  69                 	db	105	;'i'
   453  00FF53  6D                 	db	109	;'m'
   454  00FF54  65                 	db	101	;'e'
   455  00FF55  5F                 	db	95	;'_'
   456  00FF56  73                 	db	115	;'s'
   457  00FF57  79                 	db	121	;'y'
   458  00FF58  6E                 	db	110	;'n'
   459  00FF59  63                 	db	99	;'c'
   460  00FF5A  5F                 	db	95	;'_'
   461  00FF5B  6D                 	db	109	;'m'
   462  00FF5C  6F                 	db	111	;'o'
   463  00FF5D  64                 	db	100	;'d'
   464  00FF5E  65                 	db	101	;'e'
   465  00FF5F  28                 	db	40
   466  00FF60  73                 	db	115	;'s'
   467  00FF61  79                 	db	121	;'y'
   468  00FF62  6E                 	db	110	;'n'
   469  00FF63  63                 	db	99	;'c'
   470  00FF64  29                 	db	41
   471  00FF65  0A                 	db	10
   472  00FF66  09                 	db	9
   473  00FF67  73                 	db	115	;'s'
   474  00FF68  65                 	db	101	;'e'
   475  00FF69  74                 	db	116	;'t'
   476  00FF6A  20                 	db	32
   477  00FF6B  41                 	db	65	;'A'
   478  00FF6C  44                 	db	68	;'D'
   479  00FF6D  43                 	db	67	;'C'
   480  00FF6E  5F                 	db	95	;'_'
   481  00FF6F  6D                 	db	109	;'m'
   482  00FF70  6F                 	db	111	;'o'
   483  00FF71  64                 	db	100	;'d'
   484  00FF72  65                 	db	101	;'e'
   485  00FF73  28                 	db	40
   486  00FF74  61                 	db	97	;'a'
   487  00FF75  64                 	db	100	;'d'
   488  00FF76  63                 	db	99	;'c'
   489  00FF77  29                 	db	41
   490  00FF78  0A                 	db	10
   491  00FF79  09                 	db	9
   492  00FF7A  52                 	db	82	;'R'
   493  00FF7B  45                 	db	69	;'E'
   494  00FF7C  53                 	db	83	;'S'
   495  00FF7D  45                 	db	69	;'E'
   496  00FF7E  54                 	db	84	;'T'
   497  00FF7F  28                 	db	40
   498  00FF80  29                 	db	41
   499  00FF81  3B                 	db	59	;';'
   500  00FF82  0A                 	db	10
   501  00FF83  00                 	db	0
   502  00FF84                     STR_14:
   503  00FF84  61                 	db	97	;'a'
   504  00FF85  64                 	db	100	;'d'
   505  00FF86  6A                 	db	106	;'j'
   506  00FF87  75                 	db	117	;'u'
   507  00FF88  73                 	db	115	;'s'
   508  00FF89  74                 	db	116	;'t'
   509  00FF8A  5F                 	db	95	;'_'
   510  00FF8B  74                 	db	116	;'t'
   511  00FF8C  69                 	db	105	;'i'
   512  00FF8D  6D                 	db	109	;'m'
   513  00FF8E  65                 	db	101	;'e'
   514  00FF8F  00                 	db	0
   515  00FF90                     STR_21:
   516  00FF90  70                 	db	112	;'p'
   517  00FF91  72                 	db	114	;'r'
   518  00FF92  69                 	db	105	;'i'
   519  00FF93  6E                 	db	110	;'n'
   520  00FF94  74                 	db	116	;'t'
   521  00FF95  5F                 	db	95	;'_'
   522  00FF96  74                 	db	116	;'t'
   523  00FF97  69                 	db	105	;'i'
   524  00FF98  6D                 	db	109	;'m'
   525  00FF99  65                 	db	101	;'e'
   526  00FF9A  00                 	db	0
   527  00FF9B                     STR_12:
   528  00FF9B  52                 	db	82	;'R'
   529  00FF9C  45                 	db	69	;'E'
   530  00FF9D  53                 	db	83	;'S'
   531  00FF9E  45                 	db	69	;'E'
   532  00FF9F  54                 	db	84	;'T'
   533  00FFA0  28                 	db	40
   534  00FFA1  29                 	db	41
   535  00FFA2  3B                 	db	59	;';'
   536  00FFA3  00                 	db	0
   537  00FFA4                     STR_8:
   538  00FFA4  09                 	db	9
   539  00FFA5  65                 	db	101	;'e'
   540  00FFA6  72                 	db	114	;'r'
   541  00FFA7  72                 	db	114	;'r'
   542  00FFA8  6F                 	db	111	;'o'
   543  00FFA9  72                 	db	114	;'r'
   544  00FFAA  0A                 	db	10
   545  00FFAB  00                 	db	0
   546  00FFAC                     STR_37:
   547  00FFAC  63                 	db	99	;'c'
   548  00FFAD  6C                 	db	108	;'l'
   549  00FFAE  65                 	db	101	;'e'
   550  00FFAF  61                 	db	97	;'a'
   551  00FFB0  72                 	db	114	;'r'
   552  00FFB1  00                 	db	0
   553  00FFB2                     STR_2:
   554  00FFB2  20                 	db	32
   555  00FFB3  20                 	db	32
   556  00FFB4  20                 	db	32
   557  00FFB5  20                 	db	32
   558  00FFB6  00                 	db	0
   559  00FFB7                     STR_24:
   560  00FFB7  73                 	db	115	;'s'
   561  00FFB8  79                 	db	121	;'y'
   562  00FFB9  6E                 	db	110	;'n'
   563  00FFBA  63                 	db	99	;'c'
   564  00FFBB  00                 	db	0
   565  00FFBC                     STR_9:
   566  00FFBC  68                 	db	104	;'h'
   567  00FFBD  65                 	db	101	;'e'
   568  00FFBE  6C                 	db	108	;'l'
   569  00FFBF  70                 	db	112	;'p'
   570  00FFC0  00                 	db	0
   571  00FFC1                     STR_39:
   572  00FFC1  08                 	db	8
   573  00FFC2  20                 	db	32
   574  00FFC3  08                 	db	8
   575  00FFC4  00                 	db	0
   576  00FFC5                     STR_26:
   577  00FFC5  41                 	db	65	;'A'
   578  00FFC6  44                 	db	68	;'D'
   579  00FFC7  43                 	db	67	;'C'
   580  00FFC8  00                 	db	0
   581  00FFC9                     STR_28:
   582  00FFC9  50                 	db	80	;'P'
   583  00FFCA  57                 	db	87	;'W'
   584  00FFCB  4D                 	db	77	;'M'
   585  00FFCC  00                 	db	0
   586  00FFCD                     STR_25:
   587  00FFCD  61                 	db	97	;'a'
   588  00FFCE  64                 	db	100	;'d'
   589  00FFCF  63                 	db	99	;'c'
   590  00FFD0  00                 	db	0
   591  00FFD1                     STR_27:
   592  00FFD1  70                 	db	112	;'p'
   593  00FFD2  77                 	db	119	;'w'
   594  00FFD3  6D                 	db	109	;'m'
   595  00FFD4  00                 	db	0
   596  00FFD5                     STR_23:
   597  00FFD5  73                 	db	115	;'s'
   598  00FFD6  65                 	db	101	;'e'
   599  00FFD7  74                 	db	116	;'t'
   600  00FFD8  00                 	db	0
   601  00FFD9                     STR_6:
   602  00FFD9  29                 	db	41
   603  00FFDA  20                 	db	32
   604  00FFDB  00                 	db	0
   605  00FFDC                     STR_5:
   606  00FFDC  20                 	db	32
   607  00FFDD  28                 	db	40
   608  00FFDE  00                 	db	0
   609  00FFDF                     STR_13:
   610  00FFDF  61                 	db	97	;'a'
   611  00FFE0  74                 	db	116	;'t'
   612  00FFE1  00                 	db	0
   613  00FFE2                     STR_7:
   614  00FFE2  2D                 	db	45
   615  00FFE3  00                 	db	0
   616  00FFE4                     STR_3:
   617  00FFE4  2F                 	db	47
   618  00FFE5  00                 	db	0
   619  00FFE6                     STR_10:
   620  00FFE6  3F                 	db	63	;'?'
   621  00FFE7  00                 	db	0
   622  00FFE8                     STR_34:
   623  00FFE8  42                 	db	66	;'B'
   624  00FFE9  00                 	db	0
   625  00FFEA                     STR_32:
   626  00FFEA  47                 	db	71	;'G'
   627  00FFEB  00                 	db	0
   628  00FFEC                     STR_30:
   629  00FFEC  52                 	db	82	;'R'
   630  00FFED  00                 	db	0
   631  00FFEE                     STR_36:
   632  00FFEE  57                 	db	87	;'W'
   633  00FFEF  00                 	db	0
   634  00FFF0                     STR_33:
   635  00FFF0  62                 	db	98	;'b'
   636  00FFF1  00                 	db	0
   637  00FFF2                     STR_17:
   638  00FFF2  64                 	db	100	;'d'
   639  00FFF3  00                 	db	0
   640  00FFF4                     STR_31:
   641  00FFF4  67                 	db	103	;'g'
   642  00FFF5  00                 	db	0
   643  00FFF6                     STR_18:
   644  00FFF6  68                 	db	104	;'h'
   645  00FFF7  00                 	db	0
   646  00FFF8                     STR_20:
   647  00FFF8  73                 	db	115	;'s'
   648  00FFF9  00                 	db	0
   649  00FFFA                     STR_35:
   650  00FFFA  77                 	db	119	;'w'
   651  00FFFB  00                 	db	0
   652  00FFFC                     STR_15:
   653  00FFFC  79                 	db	121	;'y'
   654  00FFFD  00                 	db	0
   655  0000                     
   656                           ; #config settings
   657  00FFFE  00                 	db	0	; dummy byte at the end
   658  0000                     
   659                           	psect	cinit
   660  01249A                     __pcinit:
   661                           	opt stack 0
   662  01249A                     start_initialization:
   663                           	opt stack 0
   664  01249A                     __initialization:
   665                           	opt stack 0
   666                           
   667                           ; Clear objects allocated to BIGRAM (1000 bytes)
   668  01249A  EE04  F064         	lfsr	0,__pbssBIGRAM
   669  01249E  EE13 F0E8          	lfsr	1,1000
   670  0124A2                     clear_0:
   671  0124A2  6AEE               	clrf	postinc0,c
   672  0124A4  50E5               	movf	postdec1,w,c
   673  0124A6  50E1               	movf	fsr1l,w,c
   674  0124A8  E1FC               	bnz	clear_0
   675  0124AA  50E2               	movf	fsr1h,w,c
   676  0124AC  E1FA               	bnz	clear_0
   677                           
   678                           ; Clear objects allocated to BANK3 (250 bytes)
   679  0124AE  EE03  F000         	lfsr	0,__pbssBANK3
   680  0124B2  0EFA               	movlw	250
   681  0124B4                     clear_1:
   682  0124B4  6AEE               	clrf	postinc0,c
   683  0124B6  06E8               	decf	wreg,f,c
   684  0124B8  E1FD               	bnz	clear_1
   685                           
   686                           ; Clear objects allocated to BANK1 (31 bytes)
   687  0124BA  EE01  F0C8         	lfsr	0,__pbssBANK1
   688  0124BE  0E1F               	movlw	31
   689  0124C0                     clear_2:
   690  0124C0  6AEE               	clrf	postinc0,c
   691  0124C2  06E8               	decf	wreg,f,c
   692  0124C4  E1FD               	bnz	clear_2
   693                           
   694                           ; Clear objects allocated to BANK0 (6 bytes)
   695  0124C6  0100               	movlb	0
   696  0124C8  6BB5               	clrf	(__pbssBANK0+5)& (0+255),b
   697  0124CA  6BB4               	clrf	(__pbssBANK0+4)& (0+255),b
   698  0124CC  6BB3               	clrf	(__pbssBANK0+3)& (0+255),b
   699  0124CE  6BB2               	clrf	(__pbssBANK0+2)& (0+255),b
   700  0124D0  6BB1               	clrf	(__pbssBANK0+1)& (0+255),b
   701  0124D2  6BB0               	clrf	__pbssBANK0& (0+255),b
   702                           
   703                           ; Clear objects allocated to COMRAM (29 bytes)
   704  0124D4  EE00  F025         	lfsr	0,__pbssCOMRAM
   705  0124D8  0E1D               	movlw	29
   706  0124DA                     clear_3:
   707  0124DA  6AEE               	clrf	postinc0,c
   708  0124DC  06E8               	decf	wreg,f,c
   709  0124DE  E1FD               	bnz	clear_3
   710                           
   711                           ; Initialize objects allocated to BANK0 (2 bytes)
   712                           ; load TBLPTR registers with __pidataBANK0
   713  0124E0  0E48               	movlw	low __pidataBANK0
   714  0124E2  6EF6               	movwf	tblptrl,c
   715  0124E4  0E29               	movlw	high __pidataBANK0
   716  0124E6  6EF7               	movwf	tblptrh,c
   717  0124E8  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   718  0124EA  6EF8               	movwf	tblptru,c
   719  0124EC  0009               	tblrd		*+	;fetch initializer
   720  0124EE  CFF5 F0B6          	movff	tablat,__pdataBANK0
   721  0124F2  0009               	tblrd		*+	;fetch initializer
   722  0124F4  CFF5 F0B7          	movff	tablat,__pdataBANK0+1
   723  0124F8                     end_of_initialization:
   724                           	opt stack 0
   725  0124F8                     __end_of__initialization:
   726                           	opt stack 0
   727  0124F8  0100               	movlb	0
   728  0124FA  EFE4  F091         	goto	_main	;jump to C main() function
   729                           tblptru	equ	0xFF8
   730                           tblptrh	equ	0xFF7
   731                           tblptrl	equ	0xFF6
   732                           tablat	equ	0xFF5
   733                           postinc0	equ	0xFEE
   734                           wreg	equ	0xFE8
   735                           postdec1	equ	0xFE5
   736                           fsr1h	equ	0xFE2
   737                           fsr1l	equ	0xFE1
   738                           
   739                           	psect	bssCOMRAM
   740  000025                     __pbssCOMRAM:
   741                           	opt stack 0
   742  000025                     epoch_to_caltime@day_cache:
   743                           	opt stack 0
   744  000025                     	ds	2
   745  000027                     RTCC_loop@prev_halfsec:
   746                           	opt stack 0
   747  000027                     	ds	1
   748  000028                     _colon:
   749                           	opt stack 0
   750  000028                     	ds	1
   751  000029                     _display_flag:
   752                           	opt stack 0
   753  000029                     	ds	1
   754  00002A                     _edit_flag:
   755                           	opt stack 0
   756  00002A                     	ds	1
   757  00002B                     _halfsec:
   758                           	opt stack 0
   759  00002B                     	ds	1
   760  00002C                     _rc_flag:
   761                           	opt stack 0
   762  00002C                     	ds	1
   763  00002D                     _rx_flag:
   764                           	opt stack 0
   765  00002D                     	ds	1
   766  00002E                     _time_sync:
   767                           	opt stack 0
   768  00002E                     	ds	1
   769  00002F                     _caltime_now:
   770                           	opt stack 0
   771  00002F                     	ds	7
   772  000036                     _epoch_now:
   773                           	opt stack 0
   774  000036                     	ds	4
   775  00003A                     _sw_G:
   776                           	opt stack 0
   777  00003A                     	ds	4
   778  00003E                     _sw_R:
   779                           	opt stack 0
   780  00003E                     	ds	4
   781                           tblptru	equ	0xFF8
   782                           tblptrh	equ	0xFF7
   783                           tblptrl	equ	0xFF6
   784                           tablat	equ	0xFF5
   785                           postinc0	equ	0xFEE
   786                           wreg	equ	0xFE8
   787                           postdec1	equ	0xFE5
   788                           fsr1h	equ	0xFE2
   789                           fsr1l	equ	0xFE1
   790                           
   791                           	psect	bssBANK0
   792  0000B0                     __pbssBANK0:
   793                           	opt stack 0
   794  0000B0                     _light_mode:
   795                           	opt stack 0
   796  0000B0                     	ds	1
   797  0000B1                     _t0if:
   798                           	opt stack 0
   799  0000B1                     	ds	1
   800  0000B2                     _time_change_flag:
   801                           	opt stack 0
   802  0000B2                     	ds	1
   803  0000B3                     epoch_to_caltime@year_cache:
   804                           	opt stack 0
   805  0000B3                     	ds	1
   806  0000B4                     normal_loop@_2432:
   807                           	opt stack 0
   808  0000B4                     	ds	1
   809  0000B5                     normal_loop@n:
   810                           	opt stack 0
   811  0000B5                     	ds	1
   812                           tblptru	equ	0xFF8
   813                           tblptrh	equ	0xFF7
   814                           tblptrl	equ	0xFF6
   815                           tablat	equ	0xFF5
   816                           postinc0	equ	0xFEE
   817                           wreg	equ	0xFE8
   818                           postdec1	equ	0xFE5
   819                           fsr1h	equ	0xFE2
   820                           fsr1l	equ	0xFE1
   821                           
   822                           	psect	dataBANK0
   823  0000B6                     __pdataBANK0:
   824                           	opt stack 0
   825  0000B6                     epoch_to_caltime@month_cache:
   826                           	opt stack 0
   827  0000B6                     	ds	1
   828  0000B7                     rx_loop@comm_buf_init:
   829                           	opt stack 0
   830  0000B7                     	ds	1
   831                           tblptru	equ	0xFF8
   832                           tblptrh	equ	0xFF7
   833                           tblptrl	equ	0xFF6
   834                           tablat	equ	0xFF5
   835                           postinc0	equ	0xFEE
   836                           wreg	equ	0xFE8
   837                           postdec1	equ	0xFE5
   838                           fsr1h	equ	0xFE2
   839                           fsr1l	equ	0xFE1
   840                           
   841                           	psect	bssBANK1
   842  0001C8                     __pbssBANK1:
   843                           	opt stack 0
   844  0001C8                     _d1:
   845                           	opt stack 0
   846  0001C8                     	ds	3
   847  0001CB                     _rx_buf:
   848                           	opt stack 0
   849  0001CB                     	ds	8
   850  0001D3                     _tx_buf:
   851                           	opt stack 0
   852  0001D3                     	ds	8
   853  0001DB                     rx_loop@comm_buf:
   854                           	opt stack 0
   855  0001DB                     	ds	8
   856  0001E3                     _sw_B:
   857                           	opt stack 0
   858  0001E3                     	ds	4
   859                           tblptru	equ	0xFF8
   860                           tblptrh	equ	0xFF7
   861                           tblptrl	equ	0xFF6
   862                           tablat	equ	0xFF5
   863                           postinc0	equ	0xFEE
   864                           wreg	equ	0xFE8
   865                           postdec1	equ	0xFE5
   866                           fsr1h	equ	0xFE2
   867                           fsr1l	equ	0xFE1
   868                           
   869                           	psect	bssBANK3
   870  000300                     __pbssBANK3:
   871                           	opt stack 0
   872  000300                     main_init@rxbuf:
   873                           	opt stack 0
   874  000300                     	ds	250
   875                           tblptru	equ	0xFF8
   876                           tblptrh	equ	0xFF7
   877                           tblptrl	equ	0xFF6
   878                           tablat	equ	0xFF5
   879                           postinc0	equ	0xFEE
   880                           wreg	equ	0xFE8
   881                           postdec1	equ	0xFE5
   882                           fsr1h	equ	0xFE2
   883                           fsr1l	equ	0xFE1
   884                           
   885                           	psect	bssBIGRAM
   886  000464                     __pbssBIGRAM:
   887                           	opt stack 0
   888  000464                     main_init@txbuf:
   889                           	opt stack 0
   890  000464                     	ds	1000
   891                           tblptru	equ	0xFF8
   892                           tblptrh	equ	0xFF7
   893                           tblptrl	equ	0xFF6
   894                           tablat	equ	0xFF5
   895                           postinc0	equ	0xFEE
   896                           wreg	equ	0xFE8
   897                           postdec1	equ	0xFE5
   898                           fsr1h	equ	0xFE2
   899                           fsr1l	equ	0xFE1
   900                           
   901                           	psect	cstackBANK4
   902  000400                     __pcstackBANK4:
   903                           	opt stack 0
   904  000400                     rx_loop@opland2:
   905                           	opt stack 0
   906                           
   907                           ; 100 bytes @ 0x0
   908  000400                     	ds	100
   909                           tblptru	equ	0xFF8
   910                           tblptrh	equ	0xFF7
   911                           tblptrl	equ	0xFF6
   912                           tablat	equ	0xFF5
   913                           postinc0	equ	0xFEE
   914                           wreg	equ	0xFE8
   915                           postdec1	equ	0xFE5
   916                           fsr1h	equ	0xFE2
   917                           fsr1l	equ	0xFE1
   918                           
   919                           	psect	cstackBANK2
   920  000200                     __pcstackBANK2:
   921                           	opt stack 0
   922  000200                     rx_loop@opland3:
   923                           	opt stack 0
   924                           
   925                           ; 100 bytes @ 0x0
   926  000200                     	ds	100
   927  000264                     rx_loop@opland1:
   928                           	opt stack 0
   929                           
   930                           ; 100 bytes @ 0x64
   931  000264                     	ds	100
   932                           tblptru	equ	0xFF8
   933                           tblptrh	equ	0xFF7
   934                           tblptrl	equ	0xFF6
   935                           tablat	equ	0xFF5
   936                           postinc0	equ	0xFEE
   937                           wreg	equ	0xFE8
   938                           postdec1	equ	0xFE5
   939                           fsr1h	equ	0xFE2
   940                           fsr1l	equ	0xFE1
   941                           
   942                           	psect	cstackBANK1
   943  000100                     __pcstackBANK1:
   944                           	opt stack 0
   945  000100                     rx_loop@buf:
   946                           	opt stack 0
   947                           
   948                           ; 100 bytes @ 0x0
   949  000100                     	ds	100
   950  000164                     rx_loop@opcode:
   951                           	opt stack 0
   952                           
   953                           ; 100 bytes @ 0x64
   954  000164                     	ds	100
   955                           tblptru	equ	0xFF8
   956                           tblptrh	equ	0xFF7
   957                           tblptrl	equ	0xFF6
   958                           tablat	equ	0xFF5
   959                           postinc0	equ	0xFEE
   960                           wreg	equ	0xFE8
   961                           postdec1	equ	0xFE5
   962                           fsr1h	equ	0xFE2
   963                           fsr1l	equ	0xFE1
   964                           
   965                           	psect	cstackBANK0
   966  000060                     __pcstackBANK0:
   967                           	opt stack 0
   968  000060                     ??_ringbuf_num:
   969  000060                     ?___wmul:
   970                           	opt stack 0
   971  000060                     ?___llmod:
   972                           	opt stack 0
   973  000060                     month_length@month:
   974                           	opt stack 0
   975  000060                     ___awdiv@counter:
   976                           	opt stack 0
   977  000060                     ___wmul@multiplier:
   978                           	opt stack 0
   979  000060                     ___llmod@dividend:
   980                           	opt stack 0
   981                           
   982                           ; 4 bytes @ 0x0
   983  000060                     	ds	1
   984  000061                     ??_month_length:
   985  000061                     ___awdiv@sign:
   986                           	opt stack 0
   987                           
   988                           ; 1 bytes @ 0x1
   989  000061                     	ds	1
   990  000062                     ___wmul@multiplicand:
   991                           	opt stack 0
   992  000062                     ___awdiv@quotient:
   993                           	opt stack 0
   994                           
   995                           ; 2 bytes @ 0x2
   996  000062                     	ds	2
   997  000064                     ?_my_atoi:
   998                           	opt stack 0
   999  000064                     ?___lwdiv:
  1000                           	opt stack 0
  1001  000064                     caltime_to_RTCC@ct:
  1002                           	opt stack 0
  1003  000064                     my_atoi@str:
  1004                           	opt stack 0
  1005  000064                     ___lwdiv@dividend:
  1006                           	opt stack 0
  1007  000064                     ___llmod@divisor:
  1008                           	opt stack 0
  1009                           
  1010                           ; 4 bytes @ 0x4
  1011  000064                     	ds	1
  1012  000065                     month_length@year:
  1013                           	opt stack 0
  1014                           
  1015                           ; 1 bytes @ 0x5
  1016  000065                     	ds	1
  1017  000066                     ??_ringbuf_put:
  1018  000066                     ??_ringbuf_pop:
  1019  000066                     ??_ringbuf_backspace:
  1020  000066                     ??_my_atoi:
  1021  000066                     ?___lmul:
  1022                           	opt stack 0
  1023  000066                     ___lwdiv@divisor:
  1024                           	opt stack 0
  1025  000066                     ___lmul@multiplier:
  1026                           	opt stack 0
  1027                           
  1028                           ; 4 bytes @ 0x6
  1029  000066                     	ds	2
  1030  000068                     ___lwdiv@counter:
  1031                           	opt stack 0
  1032                           
  1033                           ; 1 bytes @ 0x8
  1034  000068                     	ds	1
  1035  000069                     ___lwdiv@quotient:
  1036                           	opt stack 0
  1037                           
  1038                           ; 2 bytes @ 0x9
  1039  000069                     	ds	1
  1040  00006A                     tx_sends@asciicode:
  1041                           	opt stack 0
  1042  00006A                     my_atoi@ret:
  1043                           	opt stack 0
  1044  00006A                     ___lmul@multiplicand:
  1045                           	opt stack 0
  1046                           
  1047                           ; 4 bytes @ 0xA
  1048  00006A                     	ds	1
  1049  00006B                     tx_sendn@value:
  1050                           	opt stack 0
  1051  00006B                     my_utoa@str:
  1052                           	opt stack 0
  1053                           
  1054                           ; 2 bytes @ 0xB
  1055  00006B                     	ds	1
  1056  00006C                     PWM_set@value:
  1057                           	opt stack 0
  1058                           
  1059                           ; 2 bytes @ 0xC
  1060  00006C                     	ds	1
  1061  00006D                     tx_sendn@digits:
  1062                           	opt stack 0
  1063  00006D                     my_utoa@value:
  1064                           	opt stack 0
  1065                           
  1066                           ; 2 bytes @ 0xD
  1067  00006D                     	ds	1
  1068  00006E                     ??_PWM_set:
  1069  00006E                     tx_sendn@i:
  1070                           	opt stack 0
  1071  00006E                     ___lmul@product:
  1072                           	opt stack 0
  1073                           
  1074                           ; 4 bytes @ 0xE
  1075  00006E                     	ds	1
  1076  00006F                     my_utoa@digits:
  1077                           	opt stack 0
  1078  00006F                     tx_sendn@temp:
  1079                           	opt stack 0
  1080                           
  1081                           ; 2 bytes @ 0xF
  1082  00006F                     	ds	1
  1083  000070                     my_utoa@d:
  1084                           	opt stack 0
  1085  000070                     PWM_set@color:
  1086                           	opt stack 0
  1087                           
  1088                           ; 1 bytes @ 0x10
  1089  000070                     	ds	1
  1090  000071                     my_utoa@v:
  1091                           	opt stack 0
  1092                           
  1093                           ; 2 bytes @ 0x11
  1094  000071                     	ds	1
  1095  000072                     ?___lldiv:
  1096                           	opt stack 0
  1097  000072                     caltime_to_epoch@ct:
  1098                           	opt stack 0
  1099  000072                     ___lldiv@dividend:
  1100                           	opt stack 0
  1101                           
  1102                           ; 4 bytes @ 0x12
  1103  000072                     	ds	1
  1104  000073                     tx_send_dec@edit:
  1105                           	opt stack 0
  1106                           
  1107                           ; 1 bytes @ 0x13
  1108  000073                     	ds	1
  1109  000074                     caltime_to_epoch@ep:
  1110                           	opt stack 0
  1111  000074                     tx_send_dec@str:
  1112                           	opt stack 0
  1113                           
  1114                           ; 10 bytes @ 0x14
  1115  000074                     	ds	2
  1116  000076                     ??_caltime_to_epoch:
  1117  000076                     ___lldiv@divisor:
  1118                           	opt stack 0
  1119                           
  1120                           ; 4 bytes @ 0x16
  1121  000076                     	ds	4
  1122  00007A                     caltime_to_epoch@year:
  1123                           	opt stack 0
  1124  00007A                     ___lldiv@quotient:
  1125                           	opt stack 0
  1126                           
  1127                           ; 4 bytes @ 0x1A
  1128  00007A                     	ds	1
  1129  00007B                     caltime_to_epoch@month_1993:
  1130                           	opt stack 0
  1131                           
  1132                           ; 1 bytes @ 0x1B
  1133  00007B                     	ds	1
  1134  00007C                     caltime_to_epoch@epoch:
  1135                           	opt stack 0
  1136                           
  1137                           ; 4 bytes @ 0x1C
  1138  00007C                     	ds	2
  1139  00007E                     tx_send_dec@dec:
  1140                           	opt stack 0
  1141  00007E                     ___lldiv@counter:
  1142                           	opt stack 0
  1143                           
  1144                           ; 1 bytes @ 0x1E
  1145  00007E                     	ds	1
  1146  00007F                     ?_get_quot_rem:
  1147                           	opt stack 0
  1148  00007F                     get_quot_rem@quot:
  1149                           	opt stack 0
  1150                           
  1151                           ; 2 bytes @ 0x1F
  1152  00007F                     	ds	1
  1153  000080                     caltime_to_epoch@month:
  1154                           	opt stack 0
  1155                           
  1156                           ; 1 bytes @ 0x20
  1157  000080                     	ds	1
  1158  000081                     get_quot_rem@div:
  1159                           	opt stack 0
  1160  000081                     RTCC_from_RTCC@ct:
  1161                           	opt stack 0
  1162                           
  1163                           ; 2 bytes @ 0x21
  1164  000081                     	ds	2
  1165  000083                     RTCC_from_RTCC@ep:
  1166                           	opt stack 0
  1167  000083                     get_quot_rem@num:
  1168                           	opt stack 0
  1169                           
  1170                           ; 4 bytes @ 0x23
  1171  000083                     	ds	2
  1172  000085                     ??_normal_loop:
  1173                           
  1174                           ; 0 bytes @ 0x25
  1175  000085                     	ds	2
  1176  000087                     epoch_to_caltime@ct:
  1177                           	opt stack 0
  1178                           
  1179                           ; 2 bytes @ 0x27
  1180  000087                     	ds	2
  1181  000089                     epoch_to_caltime@ep:
  1182                           	opt stack 0
  1183  000089                     normal_loop@scan:
  1184                           	opt stack 0
  1185                           
  1186                           ; 2 bytes @ 0x29
  1187  000089                     	ds	2
  1188  00008B                     ??_epoch_to_caltime:
  1189  00008B                     normal_loop@value:
  1190                           	opt stack 0
  1191                           
  1192                           ; 1 bytes @ 0x2B
  1193  00008B                     	ds	1
  1194  00008C                     normal_loop@value_2433:
  1195                           	opt stack 0
  1196                           
  1197                           ; 1 bytes @ 0x2C
  1198  00008C                     	ds	1
  1199  00008D                     normal_loop@i_2415:
  1200                           	opt stack 0
  1201  00008D                     epoch_to_caltime@day_since_epoch:
  1202                           	opt stack 0
  1203                           
  1204                           ; 2 bytes @ 0x2D
  1205  00008D                     	ds	1
  1206  00008E                     normal_loop@i:
  1207                           	opt stack 0
  1208                           
  1209                           ; 1 bytes @ 0x2E
  1210  00008E                     	ds	1
  1211  00008F                     epoch_to_caltime@day:
  1212                           	opt stack 0
  1213  00008F                     normal_loop@temp:
  1214                           	opt stack 0
  1215                           
  1216                           ; 4 bytes @ 0x2F
  1217  00008F                     	ds	2
  1218  000091                     epoch_to_caltime@year:
  1219                           	opt stack 0
  1220                           
  1221                           ; 1 bytes @ 0x31
  1222  000091                     	ds	1
  1223  000092                     epoch_to_caltime@month:
  1224                           	opt stack 0
  1225                           
  1226                           ; 1 bytes @ 0x32
  1227  000092                     	ds	1
  1228  000093                     epoch_to_caltime@num:
  1229                           	opt stack 0
  1230                           
  1231                           ; 4 bytes @ 0x33
  1232  000093                     	ds	4
  1233  000097                     RTCC_from_caltime@ct:
  1234                           	opt stack 0
  1235  000097                     RTCC_from_epoch@ct:
  1236                           	opt stack 0
  1237                           
  1238                           ; 2 bytes @ 0x37
  1239  000097                     	ds	2
  1240  000099                     RTCC_from_caltime@ep:
  1241                           	opt stack 0
  1242  000099                     RTCC_from_epoch@ep:
  1243                           	opt stack 0
  1244                           
  1245                           ; 2 bytes @ 0x39
  1246  000099                     	ds	2
  1247  00009B                     comm_at@hand:
  1248                           	opt stack 0
  1249                           
  1250                           ; 2 bytes @ 0x3B
  1251  00009B                     	ds	2
  1252  00009D                     comm_at@min:
  1253                           	opt stack 0
  1254                           
  1255                           ; 1 bytes @ 0x3D
  1256  00009D                     	ds	1
  1257  00009E                     comm_at@max:
  1258                           	opt stack 0
  1259                           
  1260                           ; 1 bytes @ 0x3E
  1261  00009E                     	ds	1
  1262  00009F                     comm_at@value:
  1263                           	opt stack 0
  1264                           
  1265                           ; 1 bytes @ 0x3F
  1266  00009F                     	ds	1
  1267  0000A0                     command_operation@opcode:
  1268                           	opt stack 0
  1269                           
  1270                           ; 2 bytes @ 0x40
  1271  0000A0                     	ds	2
  1272  0000A2                     command_operation@opland1:
  1273                           	opt stack 0
  1274                           
  1275                           ; 2 bytes @ 0x42
  1276  0000A2                     	ds	2
  1277  0000A4                     command_operation@opland2:
  1278                           	opt stack 0
  1279                           
  1280                           ; 2 bytes @ 0x44
  1281  0000A4                     	ds	2
  1282  0000A6                     command_operation@opland3:
  1283                           	opt stack 0
  1284                           
  1285                           ; 2 bytes @ 0x46
  1286  0000A6                     	ds	2
  1287  0000A8                     _command_operation$3059:
  1288                           	opt stack 0
  1289                           
  1290                           ; 1 bytes @ 0x48
  1291  0000A8                     	ds	1
  1292  0000A9                     ??_rx_loop:
  1293                           
  1294                           ; 0 bytes @ 0x49
  1295  0000A9                     	ds	2
  1296  0000AB                     _rx_loop$3060:
  1297                           	opt stack 0
  1298                           
  1299                           ; 2 bytes @ 0x4B
  1300  0000AB                     	ds	2
  1301  0000AD                     rx_loop@i_2373:
  1302                           	opt stack 0
  1303                           
  1304                           ; 1 bytes @ 0x4D
  1305  0000AD                     	ds	1
  1306  0000AE                     rx_loop@ascii:
  1307                           	opt stack 0
  1308                           
  1309                           ; 1 bytes @ 0x4E
  1310  0000AE                     	ds	1
  1311  0000AF                     rx_loop@i:
  1312                           	opt stack 0
  1313                           
  1314                           ; 1 bytes @ 0x4F
  1315  0000AF                     	ds	1
  1316                           tblptru	equ	0xFF8
  1317                           tblptrh	equ	0xFF7
  1318                           tblptrl	equ	0xFF6
  1319                           tablat	equ	0xFF5
  1320                           postinc0	equ	0xFEE
  1321                           wreg	equ	0xFE8
  1322                           postdec1	equ	0xFE5
  1323                           fsr1h	equ	0xFE2
  1324                           fsr1l	equ	0xFE1
  1325                           
  1326                           	psect	cstackCOMRAM
  1327  000001                     __pcstackCOMRAM:
  1328                           	opt stack 0
  1329  000001                     ?i2_ringbuf_num:
  1330                           	opt stack 0
  1331  000001                     button_timer_interrupt@bt:
  1332                           	opt stack 0
  1333  000001                     i2ringbuf_num@rb:
  1334                           	opt stack 0
  1335                           
  1336                           ; 2 bytes @ 0x0
  1337  000001                     	ds	2
  1338  000003                     ??i2_ringbuf_num:
  1339  000003                     button_timer_interrupt@sw_value:
  1340                           	opt stack 0
  1341                           
  1342                           ; 1 bytes @ 0x2
  1343  000003                     	ds	1
  1344  000004                     
  1345                           ; 0 bytes @ 0x3
  1346  000004                     	ds	5
  1347  000009                     i2ringbuf_put@rb:
  1348                           	opt stack 0
  1349  000009                     i2ringbuf_pop@rb:
  1350                           	opt stack 0
  1351                           
  1352                           ; 2 bytes @ 0x8
  1353  000009                     	ds	2
  1354  00000B                     ??i2_ringbuf_pop:
  1355  00000B                     i2ringbuf_put@asciicode:
  1356                           	opt stack 0
  1357                           
  1358                           ; 1 bytes @ 0xA
  1359  00000B                     	ds	1
  1360  00000C                     ??i2_ringbuf_put:
  1361                           
  1362                           ; 0 bytes @ 0xB
  1363  00000C                     	ds	3
  1364  00000F                     i2ringbuf_pop@ret:
  1365                           	opt stack 0
  1366                           
  1367                           ; 1 bytes @ 0xE
  1368  00000F                     	ds	1
  1369  000010                     UART_ISR@ascii:
  1370                           	opt stack 0
  1371                           
  1372                           ; 1 bytes @ 0xF
  1373  000010                     	ds	1
  1374  000011                     ??_ISR:
  1375                           
  1376                           ; 0 bytes @ 0x10
  1377  000011                     	ds	14
  1378  00001F                     ??_timer0_init:
  1379  00001F                     ??_timer3_init:
  1380  00001F                     ??_x_to_d:
  1381  00001F                     ?_ADC:
  1382                           	opt stack 0
  1383  00001F                     ?_ringbuf_num:
  1384                           	opt stack 0
  1385  00001F                     ?___awdiv:
  1386                           	opt stack 0
  1387  00001F                     ?___awmod:
  1388                           	opt stack 0
  1389  00001F                     ?___lwmod:
  1390                           	opt stack 0
  1391  00001F                     timer1_init@clock_select:
  1392                           	opt stack 0
  1393  00001F                     ADC_init@p_ref:
  1394                           	opt stack 0
  1395  00001F                     RTCC_loop@GIE_cache:
  1396                           	opt stack 0
  1397  00001F                     PWM_init@PR:
  1398                           	opt stack 0
  1399  00001F                     ___llmod@counter:
  1400                           	opt stack 0
  1401  00001F                     ringbuf_init@rb:
  1402                           	opt stack 0
  1403  00001F                     ringbuf_num@rb:
  1404                           	opt stack 0
  1405  00001F                     ringbuf_delete@rb:
  1406                           	opt stack 0
  1407  00001F                     my_strcmp@str1:
  1408                           	opt stack 0
  1409  00001F                     ___awdiv@dividend:
  1410                           	opt stack 0
  1411  00001F                     ___awmod@dividend:
  1412                           	opt stack 0
  1413  00001F                     ___lwmod@dividend:
  1414                           	opt stack 0
  1415                           
  1416                           ; 2 bytes @ 0x1E
  1417  00001F                     	ds	1
  1418  000020                     ??_timer1_init:
  1419  000020                     timer0_init@prescaler:
  1420                           	opt stack 0
  1421  000020                     timer3_init@prescaler:
  1422                           	opt stack 0
  1423  000020                     x_to_d@hex:
  1424                           	opt stack 0
  1425                           
  1426                           ; 1 bytes @ 0x1F
  1427  000020                     	ds	1
  1428  000021                     ??_ADC:
  1429  000021                     timer1_init@prescaler:
  1430                           	opt stack 0
  1431  000021                     ringbuf_init@internal_buf:
  1432                           	opt stack 0
  1433  000021                     ringbuf_put@rb:
  1434                           	opt stack 0
  1435  000021                     ringbuf_pop@rb:
  1436                           	opt stack 0
  1437  000021                     ringbuf_backspace@rb:
  1438                           	opt stack 0
  1439  000021                     RTCC_to_caltime@ct:
  1440                           	opt stack 0
  1441  000021                     my_strcmp@str2:
  1442                           	opt stack 0
  1443  000021                     ___awdiv@divisor:
  1444                           	opt stack 0
  1445  000021                     ___awmod@divisor:
  1446                           	opt stack 0
  1447  000021                     ___lwmod@divisor:
  1448                           	opt stack 0
  1449                           
  1450                           ; 2 bytes @ 0x20
  1451  000021                     	ds	1
  1452  000022                     ADC@ch:
  1453                           	opt stack 0
  1454                           
  1455                           ; 1 bytes @ 0x21
  1456  000022                     	ds	1
  1457  000023                     ??_my_strcmp:
  1458  000023                     ringbuf_put@asciicode:
  1459                           	opt stack 0
  1460  000023                     ringbuf_pop@ret:
  1461                           	opt stack 0
  1462  000023                     d_to_x@dec:
  1463                           	opt stack 0
  1464  000023                     RTCC_to_caltime@dumy:
  1465                           	opt stack 0
  1466  000023                     ___awmod@counter:
  1467                           	opt stack 0
  1468  000023                     ___lwmod@counter:
  1469                           	opt stack 0
  1470  000023                     ringbuf_init@bufsize:
  1471                           	opt stack 0
  1472  000023                     ___wmul@product:
  1473                           	opt stack 0
  1474                           
  1475                           ; 2 bytes @ 0x22
  1476  000023                     	ds	1
  1477  000024                     tx_send@asciicode:
  1478                           	opt stack 0
  1479  000024                     ___awmod@sign:
  1480                           	opt stack 0
  1481                           
  1482                           ; 1 bytes @ 0x23
  1483  000024                     	ds	1
  1484  000025                     tblptru	equ	0xFF8
  1485                           tblptrh	equ	0xFF7
  1486                           tblptrl	equ	0xFF6
  1487                           tablat	equ	0xFF5
  1488                           postinc0	equ	0xFEE
  1489                           wreg	equ	0xFE8
  1490                           postdec1	equ	0xFE5
  1491                           fsr1h	equ	0xFE2
  1492                           fsr1l	equ	0xFE1
  1493                           
  1494                           ; 0 bytes @ 0x24
  1495 ;;
  1496 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1497 ;;
  1498 ;; *************** function _main *****************
  1499 ;; Defined at:
  1500 ;;		line 419 in file "PIC18F27J53-killifish_light02.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;		None
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;		None
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  2  625[None  ] int 
  1507 ;; Registers used:
  1508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1518 ;;Total ram usage:        0 bytes
  1519 ;; Hardware stack levels required when called:   12
  1520 ;; This function calls:
  1521 ;;		_RTCC_from_RTCC
  1522 ;;		_RTCC_from_epoch
  1523 ;;		_RTCC_loop
  1524 ;;		_main_init
  1525 ;;		_normal_loop
  1526 ;;		_rx_loop
  1527 ;; This function is called by:
  1528 ;;		Startup code after reset
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text0
  1533  0123C8                     __ptext0:
  1534                           	opt stack 0
  1535  0123C8                     _main:
  1536                           	opt stack 19
  1537                           
  1538                           ;PIC18F27J53-killifish_light02.c: 420: main_init();
  1539                           
  1540                           ;incstack = 0
  1541  0123C8  ECE9  F090         	call	_main_init	;wreg free
  1542                           
  1543                           ;PIC18F27J53-killifish_light02.c: 421: INTCONbits.GIE = 1;
  1544  0123CC  8EF2               	bsf	intcon,7,c	;volatile
  1545                           
  1546                           ;PIC18F27J53-killifish_light02.c: 423: RTCC_from_RTCC(&caltime_now, &epoch_now);
  1547  0123CE  0E2F               	movlw	low _caltime_now
  1548  0123D0  0100               	movlb	0	; () banked
  1549  0123D2  6F81               	movwf	RTCC_from_RTCC@ct& (0+255),b
  1550  0123D4  0E00               	movlw	high _caltime_now
  1551  0123D6  0100               	movlb	0	; () banked
  1552  0123D8  6F82               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  1553  0123DA  0E36               	movlw	low _epoch_now
  1554  0123DC  0100               	movlb	0	; () banked
  1555  0123DE  6F83               	movwf	RTCC_from_RTCC@ep& (0+255),b
  1556  0123E0  0E00               	movlw	high _epoch_now
  1557  0123E2  0100               	movlb	0	; () banked
  1558  0123E4  6F84               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  1559  0123E6  EC35  F094         	call	_RTCC_from_RTCC	;wreg free
  1560                           
  1561                           ;PIC18F27J53-killifish_light02.c: 424: if (caltime_now.DD == 0) {
  1562  0123EA  5033               	movf	_caltime_now+4,w,c
  1563  0123EC  A4D8               	btfss	status,2,c
  1564  0123EE  D017               	goto	l5142
  1565                           
  1566                           ;PIC18F27J53-killifish_light02.c: 425: epoch_now = 0;
  1567  0123F0  0E00               	movlw	0
  1568  0123F2  6E36               	movwf	_epoch_now,c
  1569  0123F4  0E00               	movlw	0
  1570  0123F6  6E37               	movwf	_epoch_now+1,c
  1571  0123F8  0E00               	movlw	0
  1572  0123FA  6E38               	movwf	_epoch_now+2,c
  1573  0123FC  0E00               	movlw	0
  1574  0123FE  6E39               	movwf	_epoch_now+3,c
  1575                           
  1576                           ;PIC18F27J53-killifish_light02.c: 426: RTCC_from_epoch(&caltime_now, &epoch_now);
  1577  012400  0E2F               	movlw	low _caltime_now
  1578  012402  0100               	movlb	0	; () banked
  1579  012404  6F97               	movwf	RTCC_from_epoch@ct& (0+255),b
  1580  012406  0E00               	movlw	high _caltime_now
  1581  012408  0100               	movlb	0	; () banked
  1582  01240A  6F98               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  1583  01240C  0E36               	movlw	low _epoch_now
  1584  01240E  0100               	movlb	0	; () banked
  1585  012410  6F99               	movwf	RTCC_from_epoch@ep& (0+255),b
  1586  012412  0E00               	movlw	high _epoch_now
  1587  012414  0100               	movlb	0	; () banked
  1588  012416  6F9A               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  1589  012418  EC46  F094         	call	_RTCC_from_epoch	;wreg free
  1590  01241C  D000               	goto	l5142
  1591  01241E                     l5142:
  1592                           
  1593                           ;PIC18F27J53-killifish_light02.c: 430: INTCONbits.GIE = 0;
  1594  01241E  9EF2               	bcf	intcon,7,c	;volatile
  1595                           
  1596                           ;PIC18F27J53-killifish_light02.c: 431: RTCC_loop();
  1597  012420  EC4F  F093         	call	_RTCC_loop	;wreg free
  1598                           
  1599                           ;PIC18F27J53-killifish_light02.c: 432: rx_loop();
  1600  012424  EC15  F084         	call	_rx_loop	;wreg free
  1601                           
  1602                           ;PIC18F27J53-killifish_light02.c: 433: normal_loop();
  1603  012428  EC87  F082         	call	_normal_loop	;wreg free
  1604                           
  1605                           ;PIC18F27J53-killifish_light02.c: 434: INTCONbits.GIE = 1;
  1606  01242C  8EF2               	bsf	intcon,7,c	;volatile
  1607  01242E  D7F7               	goto	l5142
  1608                           
  1609                           ;PIC18F27J53-killifish_light02.c: 435: }
  1610                           ;PIC18F27J53-killifish_light02.c: 436: return 0;
  1611                           ;	Return value of _main is never used
  1612  012430  EF74  F000         	goto	start
  1613  012434                     __end_of_main:
  1614                           	opt stack 0
  1615                           tblptru	equ	0xFF8
  1616                           tblptrh	equ	0xFF7
  1617                           tblptrl	equ	0xFF6
  1618                           tablat	equ	0xFF5
  1619                           intcon	equ	0xFF2
  1620                           postinc0	equ	0xFEE
  1621                           wreg	equ	0xFE8
  1622                           postdec1	equ	0xFE5
  1623                           fsr1h	equ	0xFE2
  1624                           fsr1l	equ	0xFE1
  1625                           status	equ	0xFD8
  1626                           
  1627 ;; *************** function _rx_loop *****************
  1628 ;; Defined at:
  1629 ;;		line 287 in file "PIC18F27J53-killifish_light02.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;		None
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  i               1   77[BANK0 ] unsigned char 
  1634 ;;  opland2       100    0[BANK4 ] unsigned char [100]
  1635 ;;  opland1       100  100[BANK2 ] unsigned char [100]
  1636 ;;  opcode        100  100[BANK1 ] unsigned char [100]
  1637 ;;  opland3       100    0[BANK2 ] unsigned char [100]
  1638 ;;  i               1   79[BANK0 ] unsigned char 
  1639 ;;  ascii           1   78[BANK0 ] unsigned char 
  1640 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1641 ;; Return value:  Size  Location     Type
  1642 ;;		None               void
  1643 ;; Registers used:
  1644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1651 ;;      Locals:         0       5     200     200       0     100       0       0       0       0       0       0       
      +0       0       0       0
  1652 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1653 ;;      Totals:         0       7     200     200       0     100       0       0       0       0       0       0       
      +0       0       0       0
  1654 ;;Total ram usage:      507 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:   11
  1657 ;; This function calls:
  1658 ;;		_command_operation
  1659 ;;		_ringbuf_backspace
  1660 ;;		_ringbuf_delete
  1661 ;;		_ringbuf_init
  1662 ;;		_ringbuf_num
  1663 ;;		_ringbuf_pop
  1664 ;;		_ringbuf_put
  1665 ;;		_tx_send
  1666 ;;		_tx_sendn
  1667 ;;		_tx_sends
  1668 ;; This function is called by:
  1669 ;;		_main
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673                           	psect	text1
  1674  01082A                     __ptext1:
  1675                           	opt stack 0
  1676  01082A                     _rx_loop:
  1677                           	opt stack 19
  1678                           
  1679                           ;PIC18F27J53-killifish_light02.c: 288: static ringbuf_t comm_buf;
  1680                           ;PIC18F27J53-killifish_light02.c: 289: static uint8_t comm_buf_init = 1;
  1681                           ;PIC18F27J53-killifish_light02.c: 290: if (comm_buf_init) {
  1682                           
  1683                           ;incstack = 0
  1684  01082A  0100               	movlb	0	; () banked
  1685  01082C  51B7               	movf	rx_loop@comm_buf_init& (0+255),w,b
  1686  01082E  0100               	movlb	0	; () banked
  1687  010830  B4D8               	btfsc	status,2,c
  1688  010832  D012               	goto	l4860
  1689                           
  1690                           ; BSR set to: 0
  1691                           ;PIC18F27J53-killifish_light02.c: 291: comm_buf_init = 0;
  1692  010834  0E00               	movlw	0
  1693  010836  0100               	movlb	0	; () banked
  1694  010838  6FB7               	movwf	rx_loop@comm_buf_init& (0+255),b
  1695                           
  1696                           ; BSR set to: 0
  1697                           ;PIC18F27J53-killifish_light02.c: 292: char buf[100];
  1698                           ;PIC18F27J53-killifish_light02.c: 293: ringbuf_init(&comm_buf, buf, sizeof (buf));
  1699  01083A  0EDB               	movlw	low rx_loop@comm_buf
  1700  01083C  6E1F               	movwf	ringbuf_init@rb,c
  1701  01083E  0E01               	movlw	high rx_loop@comm_buf
  1702  010840  6E20               	movwf	ringbuf_init@rb+1,c
  1703  010842  0E00               	movlw	low rx_loop@buf
  1704  010844  6E21               	movwf	ringbuf_init@internal_buf,c
  1705  010846  0E01               	movlw	high rx_loop@buf
  1706  010848  6E22               	movwf	ringbuf_init@internal_buf+1,c
  1707  01084A  0E00               	movlw	0
  1708  01084C  6E24               	movwf	ringbuf_init@bufsize+1,c
  1709  01084E  0E64               	movlw	100
  1710  010850  6E23               	movwf	ringbuf_init@bufsize,c
  1711  010852  ECDB  F092         	call	_ringbuf_init	;wreg free
  1712  010856  D000               	goto	l4860
  1713  010858                     l4860:
  1714                           
  1715                           ;PIC18F27J53-killifish_light02.c: 294: }
  1716                           ;PIC18F27J53-killifish_light02.c: 295: if (ringbuf_num(&rx_buf)) {
  1717  010858  0ECB               	movlw	low _rx_buf
  1718  01085A  6E1F               	movwf	ringbuf_num@rb,c
  1719  01085C  0E01               	movlw	high _rx_buf
  1720  01085E  6E20               	movwf	ringbuf_num@rb+1,c
  1721  010860  EC4A  F08A         	call	_ringbuf_num	;wreg free
  1722  010864  501F               	movf	?_ringbuf_num,w,c
  1723  010866  1020               	iorwf	?_ringbuf_num+1,w,c
  1724  010868  B4D8               	btfsc	status,2,c
  1725  01086A  0012               	return	
  1726                           
  1727                           ;PIC18F27J53-killifish_light02.c: 296: char ascii = ringbuf_pop(&rx_buf);
  1728  01086C  0ECB               	movlw	low _rx_buf
  1729  01086E  6E21               	movwf	ringbuf_pop@rb,c
  1730  010870  0E01               	movlw	high _rx_buf
  1731  010872  6E22               	movwf	ringbuf_pop@rb+1,c
  1732  010874  ECB9  F08C         	call	_ringbuf_pop	;wreg free
  1733  010878  0100               	movlb	0	; () banked
  1734  01087A  6FAE               	movwf	rx_loop@ascii& (0+255),b
  1735                           
  1736                           ;PIC18F27J53-killifish_light02.c: 297: switch (ascii) {
  1737  01087C  D13E               	goto	l4926
  1738  01087E                     l4864:
  1739                           
  1740                           ; BSR set to: 0
  1741                           ;PIC18F27J53-killifish_light02.c: 299: ringbuf_put(&comm_buf, '\0');
  1742  01087E  0EDB               	movlw	low rx_loop@comm_buf
  1743  010880  6E21               	movwf	ringbuf_put@rb,c
  1744  010882  0E01               	movlw	high rx_loop@comm_buf
  1745  010884  6E22               	movwf	ringbuf_put@rb+1,c
  1746  010886  0E00               	movlw	0
  1747  010888  6E23               	movwf	ringbuf_put@asciicode,c
  1748  01088A  ECF3  F08B         	call	_ringbuf_put	;wreg free
  1749                           
  1750                           ;PIC18F27J53-killifish_light02.c: 300: tx_send('\t');
  1751  01088E  0E09               	movlw	9
  1752  010890  EC92  F094         	call	_tx_send
  1753                           
  1754                           ;PIC18F27J53-killifish_light02.c: 301: tx_sendn(ringbuf_num(&comm_buf) - 1, 2);
  1755  010894  0EDB               	movlw	low rx_loop@comm_buf
  1756  010896  6E1F               	movwf	ringbuf_num@rb,c
  1757  010898  0E01               	movlw	high rx_loop@comm_buf
  1758  01089A  6E20               	movwf	ringbuf_num@rb+1,c
  1759  01089C  EC4A  F08A         	call	_ringbuf_num	;wreg free
  1760  0108A0  0EFF               	movlw	255
  1761  0108A2  241F               	addwf	?_ringbuf_num,w,c
  1762  0108A4  0100               	movlb	0	; () banked
  1763  0108A6  6FAB               	movwf	_rx_loop$3060& (0+255),b
  1764  0108A8  0EFF               	movlw	255
  1765  0108AA  2020               	addwfc	?_ringbuf_num+1,w,c
  1766  0108AC  0100               	movlb	0	; () banked
  1767  0108AE  6FAC               	movwf	(_rx_loop$3060+1)& (0+255),b
  1768                           
  1769                           ;PIC18F27J53-killifish_light02.c: 301: tx_sendn(ringbuf_num(&comm_buf) - 1, 2);
  1770  0108B0  C0AB  F06B         	movff	_rx_loop$3060,tx_sendn@value
  1771  0108B4  C0AC  F06C         	movff	_rx_loop$3060+1,tx_sendn@value+1
  1772  0108B8  0E02               	movlw	2
  1773  0108BA  0100               	movlb	0	; () banked
  1774  0108BC  6F6D               	movwf	tx_sendn@digits& (0+255),b
  1775  0108BE  ECA8  F091         	call	_tx_sendn	;wreg free
  1776                           
  1777                           ;PIC18F27J53-killifish_light02.c: 302: tx_sends("\n");
  1778  0108C2  0E82               	movlw	low (STR_11+313)
  1779  0108C4  0100               	movlb	0	; () banked
  1780  0108C6  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  1781  0108C8  0EFF               	movlw	high (STR_11+313)
  1782  0108CA  0100               	movlb	0	; () banked
  1783  0108CC  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  1784  0108CE  EC1A  F092         	call	_tx_sends	;wreg free
  1785                           
  1786                           ;PIC18F27J53-killifish_light02.c: 303: char opcode[100];
  1787                           ;PIC18F27J53-killifish_light02.c: 304: char opland1[100];
  1788                           ;PIC18F27J53-killifish_light02.c: 305: char opland2[100];
  1789                           ;PIC18F27J53-killifish_light02.c: 306: char opland3[100];
  1790                           ;PIC18F27J53-killifish_light02.c: 307: uint8_t i;
  1791                           ;PIC18F27J53-killifish_light02.c: 308: for (i = 0; opcode[i] = ringbuf_pop(&comm_buf); i
      +                          ++);
  1792  0108D2  0E00               	movlw	0
  1793  0108D4  0100               	movlb	0	; () banked
  1794  0108D6  6FAF               	movwf	rx_loop@i& (0+255),b
  1795  0108D8  D003               	goto	l4872
  1796  0108DA                     l4870:
  1797                           
  1798                           ; BSR set to: 0
  1799  0108DA  0100               	movlb	0	; () banked
  1800  0108DC  2BAF               	incf	rx_loop@i& (0+255),f,b
  1801  0108DE  D000               	goto	l4872
  1802  0108E0                     l4872:
  1803                           
  1804                           ; BSR set to: 0
  1805  0108E0  0EDB               	movlw	low rx_loop@comm_buf
  1806  0108E2  6E21               	movwf	ringbuf_pop@rb,c
  1807  0108E4  0E01               	movlw	high rx_loop@comm_buf
  1808  0108E6  6E22               	movwf	ringbuf_pop@rb+1,c
  1809  0108E8  ECB9  F08C         	call	_ringbuf_pop	;wreg free
  1810  0108EC  0100               	movlb	0	; () banked
  1811  0108EE  6FA9               	movwf	??_rx_loop& (0+255),b
  1812  0108F0  0100               	movlb	0	; () banked
  1813  0108F2  51AF               	movf	rx_loop@i& (0+255),w,b
  1814  0108F4  0D01               	mullw	1
  1815  0108F6  0E64               	movlw	low rx_loop@opcode
  1816  0108F8  24F3               	addwf	prodl,w,c
  1817  0108FA  6ED9               	movwf	fsr2l,c
  1818  0108FC  0E01               	movlw	high rx_loop@opcode
  1819  0108FE  20F4               	addwfc	prodh,w,c
  1820  010900  6EDA               	movwf	fsr2h,c
  1821  010902  C0A9  FFDF         	movff	??_rx_loop,indf2
  1822  010906  50DF               	movf	indf2,w,c
  1823  010908  A4D8               	btfss	status,2,c
  1824  01090A  D7E7               	goto	l4870
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;PIC18F27J53-killifish_light02.c: 309: opcode[i] = '\0';
  1828                           
  1829                           ; BSR set to: 0
  1830  01090C  0100               	movlb	0	; () banked
  1831  01090E  51AF               	movf	rx_loop@i& (0+255),w,b
  1832  010910  0D01               	mullw	1
  1833  010912  0E64               	movlw	low rx_loop@opcode
  1834  010914  24F3               	addwf	prodl,w,c
  1835  010916  6ED9               	movwf	fsr2l,c
  1836  010918  0E01               	movlw	high rx_loop@opcode
  1837  01091A  20F4               	addwfc	prodh,w,c
  1838  01091C  6EDA               	movwf	fsr2h,c
  1839  01091E  0E00               	movlw	0
  1840  010920  6EDF               	movwf	indf2,c
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;PIC18F27J53-killifish_light02.c: 310: for (i = 0; opland1[i] = ringbuf_pop(&comm_buf); 
      +                          i++);
  1844  010922  0E00               	movlw	0
  1845  010924  0100               	movlb	0	; () banked
  1846  010926  6FAF               	movwf	rx_loop@i& (0+255),b
  1847  010928  D003               	goto	l4880
  1848  01092A                     l4878:
  1849                           
  1850                           ; BSR set to: 0
  1851  01092A  0100               	movlb	0	; () banked
  1852  01092C  2BAF               	incf	rx_loop@i& (0+255),f,b
  1853  01092E  D000               	goto	l4880
  1854  010930                     l4880:
  1855                           
  1856                           ; BSR set to: 0
  1857  010930  0EDB               	movlw	low rx_loop@comm_buf
  1858  010932  6E21               	movwf	ringbuf_pop@rb,c
  1859  010934  0E01               	movlw	high rx_loop@comm_buf
  1860  010936  6E22               	movwf	ringbuf_pop@rb+1,c
  1861  010938  ECB9  F08C         	call	_ringbuf_pop	;wreg free
  1862  01093C  0100               	movlb	0	; () banked
  1863  01093E  6FA9               	movwf	??_rx_loop& (0+255),b
  1864  010940  0100               	movlb	0	; () banked
  1865  010942  51AF               	movf	rx_loop@i& (0+255),w,b
  1866  010944  0D01               	mullw	1
  1867  010946  0E64               	movlw	low rx_loop@opland1
  1868  010948  24F3               	addwf	prodl,w,c
  1869  01094A  6ED9               	movwf	fsr2l,c
  1870  01094C  0E02               	movlw	high rx_loop@opland1
  1871  01094E  20F4               	addwfc	prodh,w,c
  1872  010950  6EDA               	movwf	fsr2h,c
  1873  010952  C0A9  FFDF         	movff	??_rx_loop,indf2
  1874  010956  50DF               	movf	indf2,w,c
  1875  010958  A4D8               	btfss	status,2,c
  1876  01095A  D7E7               	goto	l4878
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;PIC18F27J53-killifish_light02.c: 311: opland1[i] = '\0';
  1880                           
  1881                           ; BSR set to: 0
  1882  01095C  0100               	movlb	0	; () banked
  1883  01095E  51AF               	movf	rx_loop@i& (0+255),w,b
  1884  010960  0D01               	mullw	1
  1885  010962  0E64               	movlw	low rx_loop@opland1
  1886  010964  24F3               	addwf	prodl,w,c
  1887  010966  6ED9               	movwf	fsr2l,c
  1888  010968  0E02               	movlw	high rx_loop@opland1
  1889  01096A  20F4               	addwfc	prodh,w,c
  1890  01096C  6EDA               	movwf	fsr2h,c
  1891  01096E  0E00               	movlw	0
  1892  010970  6EDF               	movwf	indf2,c
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;PIC18F27J53-killifish_light02.c: 312: for (i = 0; opland2[i] = ringbuf_pop(&comm_buf); 
      +                          i++);
  1896  010972  0E00               	movlw	0
  1897  010974  0100               	movlb	0	; () banked
  1898  010976  6FAF               	movwf	rx_loop@i& (0+255),b
  1899  010978  D003               	goto	l4888
  1900  01097A                     l4886:
  1901                           
  1902                           ; BSR set to: 0
  1903  01097A  0100               	movlb	0	; () banked
  1904  01097C  2BAF               	incf	rx_loop@i& (0+255),f,b
  1905  01097E  D000               	goto	l4888
  1906  010980                     l4888:
  1907                           
  1908                           ; BSR set to: 0
  1909  010980  0EDB               	movlw	low rx_loop@comm_buf
  1910  010982  6E21               	movwf	ringbuf_pop@rb,c
  1911  010984  0E01               	movlw	high rx_loop@comm_buf
  1912  010986  6E22               	movwf	ringbuf_pop@rb+1,c
  1913  010988  ECB9  F08C         	call	_ringbuf_pop	;wreg free
  1914  01098C  0100               	movlb	0	; () banked
  1915  01098E  6FA9               	movwf	??_rx_loop& (0+255),b
  1916  010990  0100               	movlb	0	; () banked
  1917  010992  51AF               	movf	rx_loop@i& (0+255),w,b
  1918  010994  0D01               	mullw	1
  1919  010996  0E00               	movlw	low rx_loop@opland2
  1920  010998  24F3               	addwf	prodl,w,c
  1921  01099A  6ED9               	movwf	fsr2l,c
  1922  01099C  0E04               	movlw	high rx_loop@opland2
  1923  01099E  20F4               	addwfc	prodh,w,c
  1924  0109A0  6EDA               	movwf	fsr2h,c
  1925  0109A2  C0A9  FFDF         	movff	??_rx_loop,indf2
  1926  0109A6  50DF               	movf	indf2,w,c
  1927  0109A8  A4D8               	btfss	status,2,c
  1928  0109AA  D7E7               	goto	l4886
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;PIC18F27J53-killifish_light02.c: 313: opland2[i] = '\0';
  1932                           
  1933                           ; BSR set to: 0
  1934  0109AC  0100               	movlb	0	; () banked
  1935  0109AE  51AF               	movf	rx_loop@i& (0+255),w,b
  1936  0109B0  0D01               	mullw	1
  1937  0109B2  0E00               	movlw	low rx_loop@opland2
  1938  0109B4  24F3               	addwf	prodl,w,c
  1939  0109B6  6ED9               	movwf	fsr2l,c
  1940  0109B8  0E04               	movlw	high rx_loop@opland2
  1941  0109BA  20F4               	addwfc	prodh,w,c
  1942  0109BC  6EDA               	movwf	fsr2h,c
  1943  0109BE  0E00               	movlw	0
  1944  0109C0  6EDF               	movwf	indf2,c
  1945                           
  1946                           ; BSR set to: 0
  1947                           ;PIC18F27J53-killifish_light02.c: 314: for (i = 0; opland3[i] = ringbuf_pop(&comm_buf); 
      +                          i++);
  1948  0109C2  0E00               	movlw	0
  1949  0109C4  0100               	movlb	0	; () banked
  1950  0109C6  6FAF               	movwf	rx_loop@i& (0+255),b
  1951  0109C8  D003               	goto	l4896
  1952  0109CA                     l4894:
  1953                           
  1954                           ; BSR set to: 0
  1955  0109CA  0100               	movlb	0	; () banked
  1956  0109CC  2BAF               	incf	rx_loop@i& (0+255),f,b
  1957  0109CE  D000               	goto	l4896
  1958  0109D0                     l4896:
  1959                           
  1960                           ; BSR set to: 0
  1961  0109D0  0EDB               	movlw	low rx_loop@comm_buf
  1962  0109D2  6E21               	movwf	ringbuf_pop@rb,c
  1963  0109D4  0E01               	movlw	high rx_loop@comm_buf
  1964  0109D6  6E22               	movwf	ringbuf_pop@rb+1,c
  1965  0109D8  ECB9  F08C         	call	_ringbuf_pop	;wreg free
  1966  0109DC  0100               	movlb	0	; () banked
  1967  0109DE  6FA9               	movwf	??_rx_loop& (0+255),b
  1968  0109E0  0100               	movlb	0	; () banked
  1969  0109E2  51AF               	movf	rx_loop@i& (0+255),w,b
  1970  0109E4  0D01               	mullw	1
  1971  0109E6  0E00               	movlw	low rx_loop@opland3
  1972  0109E8  24F3               	addwf	prodl,w,c
  1973  0109EA  6ED9               	movwf	fsr2l,c
  1974  0109EC  0E02               	movlw	high rx_loop@opland3
  1975  0109EE  20F4               	addwfc	prodh,w,c
  1976  0109F0  6EDA               	movwf	fsr2h,c
  1977  0109F2  C0A9  FFDF         	movff	??_rx_loop,indf2
  1978  0109F6  50DF               	movf	indf2,w,c
  1979  0109F8  A4D8               	btfss	status,2,c
  1980  0109FA  D7E7               	goto	l4894
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;PIC18F27J53-killifish_light02.c: 315: opland3[i] = '\0';
  1984                           
  1985                           ; BSR set to: 0
  1986  0109FC  0100               	movlb	0	; () banked
  1987  0109FE  51AF               	movf	rx_loop@i& (0+255),w,b
  1988  010A00  0D01               	mullw	1
  1989  010A02  0E00               	movlw	low rx_loop@opland3
  1990  010A04  24F3               	addwf	prodl,w,c
  1991  010A06  6ED9               	movwf	fsr2l,c
  1992  010A08  0E02               	movlw	high rx_loop@opland3
  1993  010A0A  20F4               	addwfc	prodh,w,c
  1994  010A0C  6EDA               	movwf	fsr2h,c
  1995  010A0E  0E00               	movlw	0
  1996  010A10  6EDF               	movwf	indf2,c
  1997                           
  1998                           ; BSR set to: 0
  1999                           ;PIC18F27J53-killifish_light02.c: 316: command_operation(opcode, opland1, opland2, oplan
      +                          d3);
  2000  010A12  0E64               	movlw	low rx_loop@opcode
  2001  010A14  0100               	movlb	0	; () banked
  2002  010A16  6FA0               	movwf	command_operation@opcode& (0+255),b
  2003  010A18  0E01               	movlw	high rx_loop@opcode
  2004  010A1A  0100               	movlb	0	; () banked
  2005  010A1C  6FA1               	movwf	(command_operation@opcode+1)& (0+255),b
  2006  010A1E  0E64               	movlw	low rx_loop@opland1
  2007  010A20  0100               	movlb	0	; () banked
  2008  010A22  6FA2               	movwf	command_operation@opland1& (0+255),b
  2009  010A24  0E02               	movlw	high rx_loop@opland1
  2010  010A26  0100               	movlb	0	; () banked
  2011  010A28  6FA3               	movwf	(command_operation@opland1+1)& (0+255),b
  2012  010A2A  0E00               	movlw	low rx_loop@opland2
  2013  010A2C  0100               	movlb	0	; () banked
  2014  010A2E  6FA4               	movwf	command_operation@opland2& (0+255),b
  2015  010A30  0E04               	movlw	high rx_loop@opland2
  2016  010A32  0100               	movlb	0	; () banked
  2017  010A34  6FA5               	movwf	(command_operation@opland2+1)& (0+255),b
  2018  010A36  0E00               	movlw	low rx_loop@opland3
  2019  010A38  0100               	movlb	0	; () banked
  2020  010A3A  6FA6               	movwf	command_operation@opland3& (0+255),b
  2021  010A3C  0E02               	movlw	high rx_loop@opland3
  2022  010A3E  0100               	movlb	0	; () banked
  2023  010A40  6FA7               	movwf	(command_operation@opland3+1)& (0+255),b
  2024  010A42  EC00  F080         	call	_command_operation	;wreg free
  2025                           
  2026                           ;PIC18F27J53-killifish_light02.c: 317: break;
  2027  010A46  0012               	return	
  2028  010A48                     l4902:
  2029                           
  2030                           ;PIC18F27J53-killifish_light02.c: 319: ringbuf_put(&comm_buf, '\0');
  2031  010A48  0EDB               	movlw	low rx_loop@comm_buf
  2032  010A4A  6E21               	movwf	ringbuf_put@rb,c
  2033  010A4C  0E01               	movlw	high rx_loop@comm_buf
  2034  010A4E  6E22               	movwf	ringbuf_put@rb+1,c
  2035  010A50  0E00               	movlw	0
  2036  010A52  6E23               	movwf	ringbuf_put@asciicode,c
  2037  010A54  ECF3  F08B         	call	_ringbuf_put	;wreg free
  2038                           
  2039                           ;PIC18F27J53-killifish_light02.c: 320: tx_send(' ');
  2040  010A58  0E20               	movlw	32
  2041  010A5A  EC92  F094         	call	_tx_send
  2042                           
  2043                           ;PIC18F27J53-killifish_light02.c: 321: break;
  2044  010A5E  0012               	return	
  2045  010A60                     l4904:
  2046                           
  2047                           ;PIC18F27J53-killifish_light02.c: 323: ringbuf_backspace(&comm_buf);
  2048  010A60  0EDB               	movlw	low rx_loop@comm_buf
  2049  010A62  6E21               	movwf	ringbuf_backspace@rb,c
  2050  010A64  0E01               	movlw	high rx_loop@comm_buf
  2051  010A66  6E22               	movwf	ringbuf_backspace@rb+1,c
  2052  010A68  EC66  F090         	call	_ringbuf_backspace	;wreg free
  2053                           
  2054                           ;PIC18F27J53-killifish_light02.c: 324: tx_sends("\b \b");
  2055  010A6C  0EC1               	movlw	low STR_39
  2056  010A6E  0100               	movlb	0	; () banked
  2057  010A70  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  2058  010A72  0EFF               	movlw	high STR_39
  2059  010A74  0100               	movlb	0	; () banked
  2060  010A76  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  2061  010A78  EC1A  F092         	call	_tx_sends	;wreg free
  2062                           
  2063                           ;PIC18F27J53-killifish_light02.c: 325: break;
  2064  010A7C  0012               	return	
  2065  010A7E                     l4908:
  2066                           
  2067                           ;PIC18F27J53-killifish_light02.c: 327: for (uint8_t i = 0; i < ringbuf_num(&comm_buf); i
      +                          ++) tx_sends("\b \b");
  2068  010A7E  0E00               	movlw	0
  2069  010A80  0100               	movlb	0	; () banked
  2070  010A82  6FAD               	movwf	rx_loop@i_2373& (0+255),b
  2071  010A84  D00B               	goto	l4914
  2072  010A86                     l4910:
  2073                           
  2074                           ; BSR set to: 0
  2075  010A86  0EC1               	movlw	low STR_39
  2076  010A88  0100               	movlb	0	; () banked
  2077  010A8A  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  2078  010A8C  0EFF               	movlw	high STR_39
  2079  010A8E  0100               	movlb	0	; () banked
  2080  010A90  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  2081  010A92  EC1A  F092         	call	_tx_sends	;wreg free
  2082  010A96  0100               	movlb	0	; () banked
  2083  010A98  2BAD               	incf	rx_loop@i_2373& (0+255),f,b
  2084  010A9A  D000               	goto	l4914
  2085  010A9C                     l4914:
  2086                           
  2087                           ; BSR set to: 0
  2088  010A9C  0EDB               	movlw	low rx_loop@comm_buf
  2089  010A9E  6E1F               	movwf	ringbuf_num@rb,c
  2090  010AA0  0E01               	movlw	high rx_loop@comm_buf
  2091  010AA2  6E20               	movwf	ringbuf_num@rb+1,c
  2092  010AA4  EC4A  F08A         	call	_ringbuf_num	;wreg free
  2093  010AA8  0100               	movlb	0	; () banked
  2094  010AAA  51AD               	movf	rx_loop@i_2373& (0+255),w,b
  2095  010AAC  0100               	movlb	0	; () banked
  2096  010AAE  6FA9               	movwf	??_rx_loop& (0+255),b
  2097  010AB0  6BAA               	clrf	(??_rx_loop+1)& (0+255),b
  2098  010AB2  501F               	movf	?_ringbuf_num,w,c
  2099  010AB4  0100               	movlb	0	; () banked
  2100  010AB6  5DA9               	subwf	??_rx_loop& (0+255),w,b
  2101  010AB8  5020               	movf	?_ringbuf_num+1,w,c
  2102  010ABA  0100               	movlb	0	; () banked
  2103  010ABC  59AA               	subwfb	(??_rx_loop+1)& (0+255),w,b
  2104  010ABE  A0D8               	btfss	status,0,c
  2105  010AC0  D7E2               	goto	l4910
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;PIC18F27J53-killifish_light02.c: 328: ringbuf_delete(&comm_buf);
  2109                           
  2110                           ; BSR set to: 0
  2111  010AC2  0EDB               	movlw	low rx_loop@comm_buf
  2112  010AC4  6E1F               	movwf	ringbuf_delete@rb,c
  2113  010AC6  0E01               	movlw	high rx_loop@comm_buf
  2114  010AC8  6E20               	movwf	ringbuf_delete@rb+1,c
  2115  010ACA  EC24  F094         	call	_ringbuf_delete	;wreg free
  2116                           
  2117                           ;PIC18F27J53-killifish_light02.c: 329: break;
  2118  010ACE  0012               	return	
  2119  010AD0                     l4918:
  2120                           
  2121                           ;PIC18F27J53-killifish_light02.c: 331: if (ascii >= ' ' && ascii <= '~') {
  2122  010AD0  0E1F               	movlw	31
  2123  010AD2  0100               	movlb	0	; () banked
  2124  010AD4  65AE               	cpfsgt	rx_loop@ascii& (0+255),b
  2125  010AD6  0012               	return	
  2126                           
  2127                           ; BSR set to: 0
  2128  010AD8  0E7F               	movlw	127
  2129  010ADA  0100               	movlb	0	; () banked
  2130  010ADC  61AE               	cpfslt	rx_loop@ascii& (0+255),b
  2131  010ADE  0012               	return	
  2132                           
  2133                           ; BSR set to: 0
  2134                           ;PIC18F27J53-killifish_light02.c: 332: ringbuf_put(&comm_buf, ascii);
  2135  010AE0  0EDB               	movlw	low rx_loop@comm_buf
  2136  010AE2  6E21               	movwf	ringbuf_put@rb,c
  2137  010AE4  0E01               	movlw	high rx_loop@comm_buf
  2138  010AE6  6E22               	movwf	ringbuf_put@rb+1,c
  2139  010AE8  C0AE  F023         	movff	rx_loop@ascii,ringbuf_put@asciicode
  2140  010AEC  ECF3  F08B         	call	_ringbuf_put	;wreg free
  2141                           
  2142                           ;PIC18F27J53-killifish_light02.c: 333: tx_send(ascii);
  2143  010AF0  0100               	movlb	0	; () banked
  2144  010AF2  51AE               	movf	rx_loop@ascii& (0+255),w,b
  2145  010AF4  EC92  F094         	call	_tx_send
  2146                           
  2147                           ;PIC18F27J53-killifish_light02.c: 336: }
  2148                           
  2149                           ;PIC18F27J53-killifish_light02.c: 334: }
  2150                           ;PIC18F27J53-killifish_light02.c: 335: break;
  2151  010AF8  0012               	return	
  2152  010AFA                     l4926:
  2153  010AFA  0100               	movlb	0	; () banked
  2154  010AFC  51AE               	movf	rx_loop@ascii& (0+255),w,b
  2155                           
  2156                           ; Switch size 1, requested type "space"
  2157                           ; Number of cases is 4, Range of values is 8 to 127
  2158                           ; switch strategies available:
  2159                           ; Name         Instructions Cycles
  2160                           ; simple_byte           13     7 (average)
  2161                           ;	Chosen strategy is simple_byte
  2162  010AFE  0A08               	xorlw	8	; case 8
  2163  010B00  B4D8               	btfsc	status,2,c
  2164  010B02  D7AE               	goto	l4904
  2165  010B04  0A05               	xorlw	5	; case 13
  2166  010B06  B4D8               	btfsc	status,2,c
  2167  010B08  D6BA               	goto	l4864
  2168  010B0A  0A2D               	xorlw	45	; case 32
  2169  010B0C  B4D8               	btfsc	status,2,c
  2170  010B0E  D79C               	goto	l4902
  2171  010B10  0A5F               	xorlw	95	; case 127
  2172  010B12  B4D8               	btfsc	status,2,c
  2173  010B14  D7B4               	goto	l4908
  2174  010B16  D7DC               	goto	l4918
  2175                           
  2176                           ; BSR set to: 0
  2177  010B18  0012               	return	
  2178                           
  2179                           ; BSR set to: 0
  2180  010B1A  0012               	return		;funcret
  2181  010B1C                     __end_of_rx_loop:
  2182                           	opt stack 0
  2183                           tblptru	equ	0xFF8
  2184                           tblptrh	equ	0xFF7
  2185                           tblptrl	equ	0xFF6
  2186                           tablat	equ	0xFF5
  2187                           prodh	equ	0xFF4
  2188                           prodl	equ	0xFF3
  2189                           intcon	equ	0xFF2
  2190                           postinc0	equ	0xFEE
  2191                           wreg	equ	0xFE8
  2192                           postdec1	equ	0xFE5
  2193                           fsr1h	equ	0xFE2
  2194                           fsr1l	equ	0xFE1
  2195                           indf2	equ	0xFDF
  2196                           fsr2h	equ	0xFDA
  2197                           fsr2l	equ	0xFD9
  2198                           status	equ	0xFD8
  2199                           
  2200 ;; *************** function _tx_sendn *****************
  2201 ;; Defined at:
  2202 ;;		line 272 in file "../My_header\My_header.h"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;  value           2   11[BANK0 ] const unsigned int 
  2205 ;;  digits          1   13[BANK0 ] unsigned char 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;  i               1   14[BANK0 ] unsigned char 
  2208 ;;  temp            2   15[BANK0 ] unsigned int 
  2209 ;; Return value:  Size  Location     Type
  2210 ;;		None               void
  2211 ;; Registers used:
  2212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2218 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2219 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2221 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2222 ;;Total ram usage:        6 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; Hardware stack levels required when called:    7
  2225 ;; This function calls:
  2226 ;;		___lwdiv
  2227 ;;		___lwmod
  2228 ;;		_tx_send
  2229 ;; This function is called by:
  2230 ;;		_rx_loop
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           	psect	text2
  2235  012350                     __ptext2:
  2236                           	opt stack 0
  2237  012350                     _tx_sendn:
  2238                           	opt stack 22
  2239                           
  2240                           ;My_header\My_header.h: 273: while (digits--) {
  2241                           
  2242                           ;incstack = 0
  2243  012350  D034               	goto	l4578
  2244  012352                     l226:
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;My_header\My_header.h: 274: uint16_t temp = value;
  2248  012352  C06B  F06F         	movff	tx_sendn@value,tx_sendn@temp
  2249  012356  C06C  F070         	movff	tx_sendn@value+1,tx_sendn@temp+1
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;My_header\My_header.h: 275: for (uint8_t i = 0; i < digits; i++) {
  2253  01235A  0E00               	movlw	0
  2254  01235C  0100               	movlb	0	; () banked
  2255  01235E  6F6E               	movwf	tx_sendn@i& (0+255),b
  2256  012360  D012               	goto	l4572
  2257  012362                     l4568:
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;My_header\My_header.h: 276: temp /= 10;
  2261  012362  C06F  F064         	movff	tx_sendn@temp,___lwdiv@dividend
  2262  012366  C070  F065         	movff	tx_sendn@temp+1,___lwdiv@dividend+1
  2263  01236A  0E00               	movlw	0
  2264  01236C  0100               	movlb	0	; () banked
  2265  01236E  6F67               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2266  012370  0E0A               	movlw	10
  2267  012372  6F66               	movwf	___lwdiv@divisor& (0+255),b
  2268  012374  ECA8  F090         	call	___lwdiv	;wreg free
  2269  012378  C064  F06F         	movff	?___lwdiv,tx_sendn@temp
  2270  01237C  C065  F070         	movff	?___lwdiv+1,tx_sendn@temp+1
  2271  012380  0100               	movlb	0	; () banked
  2272  012382  2B6E               	incf	tx_sendn@i& (0+255),f,b
  2273  012384  D000               	goto	l4572
  2274  012386                     l4572:
  2275                           
  2276                           ; BSR set to: 0
  2277  012386  0100               	movlb	0	; () banked
  2278  012388  516D               	movf	tx_sendn@digits& (0+255),w,b
  2279  01238A  0100               	movlb	0	; () banked
  2280  01238C  5D6E               	subwf	tx_sendn@i& (0+255),w,b
  2281  01238E  A0D8               	btfss	status,0,c
  2282  012390  D7E8               	goto	l4568
  2283                           
  2284                           ; BSR set to: 0
  2285                           ;My_header\My_header.h: 277: }
  2286                           ;My_header\My_header.h: 278: temp %= 10;
  2287                           
  2288                           ; BSR set to: 0
  2289  012392  C06F  F01F         	movff	tx_sendn@temp,___lwmod@dividend
  2290  012396  C070  F020         	movff	tx_sendn@temp+1,___lwmod@dividend+1
  2291  01239A  0E00               	movlw	0
  2292  01239C  6E22               	movwf	___lwmod@divisor+1,c
  2293  01239E  0E0A               	movlw	10
  2294  0123A0  6E21               	movwf	___lwmod@divisor,c
  2295  0123A2  EC29  F093         	call	___lwmod	;wreg free
  2296  0123A6  C01F  F06F         	movff	?___lwmod,tx_sendn@temp
  2297  0123AA  C020  F070         	movff	?___lwmod+1,tx_sendn@temp+1
  2298                           
  2299                           ;My_header\My_header.h: 279: tx_send('0' + temp);
  2300  0123AE  0100               	movlb	0	; () banked
  2301  0123B0  516F               	movf	tx_sendn@temp& (0+255),w,b
  2302  0123B2  0F30               	addlw	48
  2303  0123B4  EC92  F094         	call	_tx_send
  2304  0123B8  D000               	goto	l4578
  2305  0123BA                     l4578:
  2306  0123BA  0100               	movlb	0	; () banked
  2307  0123BC  076D               	decf	tx_sendn@digits& (0+255),f,b
  2308  0123BE  0100               	movlb	0	; () banked
  2309  0123C0  296D               	incf	tx_sendn@digits& (0+255),w,b
  2310  0123C2  A4D8               	btfss	status,2,c
  2311  0123C4  D7C6               	goto	l226
  2312                           
  2313                           ; BSR set to: 0
  2314                           
  2315                           ; BSR set to: 0
  2316  0123C6  0012               	return		;funcret
  2317  0123C8                     __end_of_tx_sendn:
  2318                           	opt stack 0
  2319                           tblptru	equ	0xFF8
  2320                           tblptrh	equ	0xFF7
  2321                           tblptrl	equ	0xFF6
  2322                           tablat	equ	0xFF5
  2323                           prodh	equ	0xFF4
  2324                           prodl	equ	0xFF3
  2325                           intcon	equ	0xFF2
  2326                           postinc0	equ	0xFEE
  2327                           wreg	equ	0xFE8
  2328                           postdec1	equ	0xFE5
  2329                           fsr1h	equ	0xFE2
  2330                           fsr1l	equ	0xFE1
  2331                           indf2	equ	0xFDF
  2332                           fsr2h	equ	0xFDA
  2333                           fsr2l	equ	0xFD9
  2334                           status	equ	0xFD8
  2335                           
  2336 ;; *************** function _ringbuf_pop *****************
  2337 ;; Defined at:
  2338 ;;		line 64 in file "../My_header\My_ringbuf.h"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  rb              2   32[COMRAM] PTR struct ringbuf
  2341 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;  ret             1   34[COMRAM] unsigned char 
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      unsigned char 
  2346 ;; Registers used:
  2347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2354 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2355 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2356 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2357 ;;Total ram usage:        7 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; Hardware stack levels required when called:    5
  2360 ;; This function calls:
  2361 ;;		_ringbuf_num
  2362 ;; This function is called by:
  2363 ;;		_rx_loop
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           	psect	text3
  2368  011972                     __ptext3:
  2369                           	opt stack 0
  2370  011972                     _ringbuf_pop:
  2371                           	opt stack 24
  2372                           
  2373                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;incstack = 0
  2377  011972  C021  F01F         	movff	ringbuf_pop@rb,ringbuf_num@rb
  2378  011976  C022  F020         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  2379  01197A  EC4A  F08A         	call	_ringbuf_num	;wreg free
  2380  01197E  501F               	movf	?_ringbuf_num,w,c
  2381  011980  1020               	iorwf	?_ringbuf_num+1,w,c
  2382  011982  B4D8               	btfsc	status,2,c
  2383  011984  D052               	goto	l4550
  2384                           
  2385                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
  2386  011986  EE20 F006          	lfsr	2,6
  2387  01198A  5021               	movf	ringbuf_pop@rb,w,c
  2388  01198C  26D9               	addwf	fsr2l,f,c
  2389  01198E  5022               	movf	ringbuf_pop@rb+1,w,c
  2390  011990  22DA               	addwfc	fsr2h,f,c
  2391  011992  CFDE F066          	movff	postinc2,??_ringbuf_pop
  2392  011996  CFDD F067          	movff	postdec2,??_ringbuf_pop+1
  2393  01199A  C021  FFD9         	movff	ringbuf_pop@rb,fsr2l
  2394  01199E  C022  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  2395  0119A2  CFDE F068          	movff	postinc2,??_ringbuf_pop+2
  2396  0119A6  CFDD F069          	movff	postdec2,??_ringbuf_pop+3
  2397  0119AA  0100               	movlb	0	; () banked
  2398  0119AC  5166               	movf	??_ringbuf_pop& (0+255),w,b
  2399  0119AE  0100               	movlb	0	; () banked
  2400  0119B0  2568               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  2401  0119B2  6ED9               	movwf	fsr2l,c
  2402  0119B4  0100               	movlb	0	; () banked
  2403  0119B6  5167               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  2404  0119B8  0100               	movlb	0	; () banked
  2405  0119BA  2169               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  2406  0119BC  6EDA               	movwf	fsr2h,c
  2407  0119BE  50DF               	movf	indf2,w,c
  2408  0119C0  6E23               	movwf	ringbuf_pop@ret,c
  2409                           
  2410                           ; BSR set to: 0
  2411                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
  2412  0119C2  EE20 F002          	lfsr	2,2
  2413  0119C6  5021               	movf	ringbuf_pop@rb,w,c
  2414  0119C8  26D9               	addwf	fsr2l,f,c
  2415  0119CA  5022               	movf	ringbuf_pop@rb+1,w,c
  2416  0119CC  22DA               	addwfc	fsr2h,f,c
  2417  0119CE  EE10 F006          	lfsr	1,6
  2418  0119D2  5021               	movf	ringbuf_pop@rb,w,c
  2419  0119D4  26E1               	addwf	fsr1l,f,c
  2420  0119D6  5022               	movf	ringbuf_pop@rb+1,w,c
  2421  0119D8  22E2               	addwfc	fsr1h,f,c
  2422  0119DA  CFE6 F068          	movff	postinc1,??_ringbuf_pop+2
  2423  0119DE  CFE5 F069          	movff	postdec1,??_ringbuf_pop+3
  2424  0119E2  0E01               	movlw	1
  2425  0119E4  0100               	movlb	0	; () banked
  2426  0119E6  2768               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  2427  0119E8  0E00               	movlw	0
  2428  0119EA  2369               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  2429  0119EC  50DE               	movf	postinc2,w,c
  2430  0119EE  0100               	movlb	0	; () banked
  2431  0119F0  5D68               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  2432  0119F2  50DE               	movf	postinc2,w,c
  2433  0119F4  0100               	movlb	0	; () banked
  2434  0119F6  5969               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  2435  0119F8  B0D8               	btfsc	status,0,c
  2436  0119FA  D00A               	goto	l4542
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;My_header\My_ringbuf.h: 68: rb->tail++;
  2440  0119FC  EE20 F006          	lfsr	2,6
  2441  011A00  5021               	movf	ringbuf_pop@rb,w,c
  2442  011A02  26D9               	addwf	fsr2l,f,c
  2443  011A04  5022               	movf	ringbuf_pop@rb+1,w,c
  2444  011A06  22DA               	addwfc	fsr2h,f,c
  2445  011A08  2ADE               	incf	postinc2,f,c
  2446  011A0A  0E00               	movlw	0
  2447  011A0C  22DD               	addwfc	postdec2,f,c
  2448                           
  2449                           ;My_header\My_ringbuf.h: 69: } else {
  2450  011A0E  D00B               	goto	l4544
  2451  011A10                     l4542:
  2452                           
  2453                           ; BSR set to: 0
  2454                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
  2455  011A10  EE20 F006          	lfsr	2,6
  2456  011A14  5021               	movf	ringbuf_pop@rb,w,c
  2457  011A16  26D9               	addwf	fsr2l,f,c
  2458  011A18  5022               	movf	ringbuf_pop@rb+1,w,c
  2459  011A1A  22DA               	addwfc	fsr2h,f,c
  2460  011A1C  0E00               	movlw	0
  2461  011A1E  6EDE               	movwf	postinc2,c
  2462  011A20  0E00               	movlw	0
  2463  011A22  6EDD               	movwf	postdec2,c
  2464  011A24  D000               	goto	l4544
  2465  011A26                     l4544:
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;My_header\My_ringbuf.h: 71: }
  2469                           ;My_header\My_ringbuf.h: 72: return ret;
  2470  011A26  5023               	movf	ringbuf_pop@ret,w,c
  2471                           
  2472                           ; BSR set to: 0
  2473                           ;My_header\My_ringbuf.h: 73: } else {
  2474                           
  2475                           ; BSR set to: 0
  2476  011A28  0012               	return	
  2477  011A2A                     l4550:
  2478                           
  2479                           ;My_header\My_ringbuf.h: 74: return 0;
  2480  011A2A  0E00               	movlw	0
  2481  011A2C  0012               	return	
  2482  011A2E  0012               	return		;funcret
  2483  011A30                     __end_of_ringbuf_pop:
  2484                           	opt stack 0
  2485                           tblptru	equ	0xFF8
  2486                           tblptrh	equ	0xFF7
  2487                           tblptrl	equ	0xFF6
  2488                           tablat	equ	0xFF5
  2489                           prodh	equ	0xFF4
  2490                           prodl	equ	0xFF3
  2491                           intcon	equ	0xFF2
  2492                           postinc0	equ	0xFEE
  2493                           wreg	equ	0xFE8
  2494                           postinc1	equ	0xFE6
  2495                           postdec1	equ	0xFE5
  2496                           fsr1h	equ	0xFE2
  2497                           fsr1l	equ	0xFE1
  2498                           indf2	equ	0xFDF
  2499                           postinc2	equ	0xFDE
  2500                           postdec2	equ	0xFDD
  2501                           fsr2h	equ	0xFDA
  2502                           fsr2l	equ	0xFD9
  2503                           status	equ	0xFD8
  2504                           
  2505 ;; *************** function _ringbuf_delete *****************
  2506 ;; Defined at:
  2507 ;;		line 85 in file "../My_header\My_ringbuf.h"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  rb              2   30[COMRAM] PTR struct ringbuf
  2510 ;;		 -> rx_loop@comm_buf(8), 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;		None
  2513 ;; Return value:  Size  Location     Type
  2514 ;;		None               void
  2515 ;; Registers used:
  2516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2525 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2526 ;;Total ram usage:        2 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:    4
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_rx_loop
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text4
  2537  012848                     __ptext4:
  2538                           	opt stack 0
  2539  012848                     _ringbuf_delete:
  2540                           	opt stack 25
  2541                           
  2542                           ;My_header\My_ringbuf.h: 86: rb->head = rb->tail;
  2543                           
  2544                           ;incstack = 0
  2545  012848  EE20 F006          	lfsr	2,6
  2546  01284C  501F               	movf	ringbuf_delete@rb,w,c
  2547  01284E  26D9               	addwf	fsr2l,f,c
  2548  012850  5020               	movf	ringbuf_delete@rb+1,w,c
  2549  012852  22DA               	addwfc	fsr2h,f,c
  2550  012854  EE10 F004          	lfsr	1,4
  2551  012858  501F               	movf	ringbuf_delete@rb,w,c
  2552  01285A  26E1               	addwf	fsr1l,f,c
  2553  01285C  5020               	movf	ringbuf_delete@rb+1,w,c
  2554  01285E  22E2               	addwfc	fsr1h,f,c
  2555  012860  CFDE FFE6          	movff	postinc2,postinc1
  2556  012864  CFDD FFE5          	movff	postdec2,postdec1
  2557  012868  0012               	return		;funcret
  2558  01286A                     __end_of_ringbuf_delete:
  2559                           	opt stack 0
  2560                           tblptru	equ	0xFF8
  2561                           tblptrh	equ	0xFF7
  2562                           tblptrl	equ	0xFF6
  2563                           tablat	equ	0xFF5
  2564                           prodh	equ	0xFF4
  2565                           prodl	equ	0xFF3
  2566                           intcon	equ	0xFF2
  2567                           postinc0	equ	0xFEE
  2568                           wreg	equ	0xFE8
  2569                           postinc1	equ	0xFE6
  2570                           postdec1	equ	0xFE5
  2571                           fsr1h	equ	0xFE2
  2572                           fsr1l	equ	0xFE1
  2573                           indf2	equ	0xFDF
  2574                           postinc2	equ	0xFDE
  2575                           postdec2	equ	0xFDD
  2576                           fsr2h	equ	0xFDA
  2577                           fsr2l	equ	0xFD9
  2578                           status	equ	0xFD8
  2579                           
  2580 ;; *************** function _ringbuf_backspace *****************
  2581 ;; Defined at:
  2582 ;;		line 78 in file "../My_header\My_ringbuf.h"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;  rb              2   32[COMRAM] PTR struct ringbuf
  2585 ;;		 -> rx_loop@comm_buf(8), 
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;		None
  2588 ;; Return value:  Size  Location     Type
  2589 ;;		None               void
  2590 ;; Registers used:
  2591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2597 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2599 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2600 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2601 ;;Total ram usage:        6 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; Hardware stack levels required when called:    5
  2604 ;; This function calls:
  2605 ;;		_ringbuf_num
  2606 ;; This function is called by:
  2607 ;;		_rx_loop
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           	psect	text5
  2612  0120CC                     __ptext5:
  2613                           	opt stack 0
  2614  0120CC                     _ringbuf_backspace:
  2615                           	opt stack 24
  2616                           
  2617                           ;My_header\My_ringbuf.h: 79: if (ringbuf_num(rb)) {
  2618                           
  2619                           ;incstack = 0
  2620  0120CC  C021  F01F         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  2621  0120D0  C022  F020         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  2622  0120D4  EC4A  F08A         	call	_ringbuf_num	;wreg free
  2623  0120D8  501F               	movf	?_ringbuf_num,w,c
  2624  0120DA  1020               	iorwf	?_ringbuf_num+1,w,c
  2625  0120DC  B4D8               	btfsc	status,2,c
  2626  0120DE  0012               	return	
  2627                           
  2628                           ;My_header\My_ringbuf.h: 80: if (rb->head) rb->head--;
  2629  0120E0  EE20 F004          	lfsr	2,4
  2630  0120E4  5021               	movf	ringbuf_backspace@rb,w,c
  2631  0120E6  26D9               	addwf	fsr2l,f,c
  2632  0120E8  5022               	movf	ringbuf_backspace@rb+1,w,c
  2633  0120EA  22DA               	addwfc	fsr2h,f,c
  2634  0120EC  50DE               	movf	postinc2,w,c
  2635  0120EE  10DE               	iorwf	postinc2,w,c
  2636  0120F0  B4D8               	btfsc	status,2,c
  2637  0120F2  D00A               	goto	l4560
  2638  0120F4  EE20 F004          	lfsr	2,4
  2639  0120F8  5021               	movf	ringbuf_backspace@rb,w,c
  2640  0120FA  26D9               	addwf	fsr2l,f,c
  2641  0120FC  5022               	movf	ringbuf_backspace@rb+1,w,c
  2642  0120FE  22DA               	addwfc	fsr2h,f,c
  2643  012100  06DE               	decf	postinc2,f,c
  2644  012102  0E00               	movlw	0
  2645  012104  5ADD               	subwfb	postdec2,f,c
  2646  012106  0012               	return	
  2647  012108                     l4560:
  2648                           
  2649                           ;My_header\My_ringbuf.h: 81: else rb->head = rb->size - 1;
  2650  012108  0EFF               	movlw	255
  2651  01210A  0100               	movlb	0	; () banked
  2652  01210C  6F66               	movwf	??_ringbuf_backspace& (0+255),b
  2653  01210E  0EFF               	movlw	255
  2654  012110  0100               	movlb	0	; () banked
  2655  012112  6F67               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  2656  012114  EE20 F002          	lfsr	2,2
  2657  012118  5021               	movf	ringbuf_backspace@rb,w,c
  2658  01211A  26D9               	addwf	fsr2l,f,c
  2659  01211C  5022               	movf	ringbuf_backspace@rb+1,w,c
  2660  01211E  22DA               	addwfc	fsr2h,f,c
  2661  012120  CFDE F068          	movff	postinc2,??_ringbuf_backspace+2
  2662  012124  CFDD F069          	movff	postdec2,??_ringbuf_backspace+3
  2663  012128  0100               	movlb	0	; () banked
  2664  01212A  5166               	movf	??_ringbuf_backspace& (0+255),w,b
  2665  01212C  0100               	movlb	0	; () banked
  2666  01212E  2768               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  2667  012130  0100               	movlb	0	; () banked
  2668  012132  5167               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  2669  012134  0100               	movlb	0	; () banked
  2670  012136  2369               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  2671  012138  EE20 F004          	lfsr	2,4
  2672  01213C  5021               	movf	ringbuf_backspace@rb,w,c
  2673  01213E  26D9               	addwf	fsr2l,f,c
  2674  012140  5022               	movf	ringbuf_backspace@rb+1,w,c
  2675  012142  22DA               	addwfc	fsr2h,f,c
  2676  012144  C068  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  2677  012148  C069  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  2678                           
  2679                           ; BSR set to: 0
  2680  01214C  0012               	return	
  2681                           
  2682                           ; BSR set to: 0
  2683  01214E  0012               	return		;funcret
  2684  012150                     __end_of_ringbuf_backspace:
  2685                           	opt stack 0
  2686                           tblptru	equ	0xFF8
  2687                           tblptrh	equ	0xFF7
  2688                           tblptrl	equ	0xFF6
  2689                           tablat	equ	0xFF5
  2690                           prodh	equ	0xFF4
  2691                           prodl	equ	0xFF3
  2692                           intcon	equ	0xFF2
  2693                           postinc0	equ	0xFEE
  2694                           wreg	equ	0xFE8
  2695                           postinc1	equ	0xFE6
  2696                           postdec1	equ	0xFE5
  2697                           fsr1h	equ	0xFE2
  2698                           fsr1l	equ	0xFE1
  2699                           indf2	equ	0xFDF
  2700                           postinc2	equ	0xFDE
  2701                           postdec2	equ	0xFDD
  2702                           fsr2h	equ	0xFDA
  2703                           fsr2l	equ	0xFD9
  2704                           status	equ	0xFD8
  2705                           
  2706 ;; *************** function _command_operation *****************
  2707 ;; Defined at:
  2708 ;;		line 209 in file "PIC18F27J53-killifish_light02.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  opcode          2   64[BANK0 ] PTR unsigned char 
  2711 ;;		 -> rx_loop@opcode(100), 
  2712 ;;  opland1         2   66[BANK0 ] PTR unsigned char 
  2713 ;;		 -> rx_loop@opland1(100), 
  2714 ;;  opland2         2   68[BANK0 ] PTR unsigned char 
  2715 ;;		 -> rx_loop@opland2(100), 
  2716 ;;  opland3         2   70[BANK0 ] PTR unsigned char 
  2717 ;;		 -> rx_loop@opland3(100), 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;		None
  2720 ;; Return value:  Size  Location     Type
  2721 ;;		None               void
  2722 ;; Registers used:
  2723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2729 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2730 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2732 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2733 ;;Total ram usage:        9 bytes
  2734 ;; Hardware stack levels used:    1
  2735 ;; Hardware stack levels required when called:   10
  2736 ;; This function calls:
  2737 ;;		_PWM_set
  2738 ;;		_comm_at
  2739 ;;		_month_length
  2740 ;;		_my_atoi
  2741 ;;		_my_strcmp
  2742 ;;		_print_time
  2743 ;;		_tx_sends
  2744 ;; This function is called by:
  2745 ;;		_rx_loop
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text6
  2750  010000                     __ptext6:
  2751                           	opt stack 0
  2752  010000                     _command_operation:
  2753                           	opt stack 19
  2754                           
  2755                           ;PIC18F27J53-killifish_light02.c: 210: if (!my_strcmp(opcode, "help") || !my_strcmp(opco
      +                          de, "?")) {
  2756                           
  2757                           ;incstack = 0
  2758  010000  C0A0  F01F         	movff	command_operation@opcode,my_strcmp@str1
  2759  010004  C0A1  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  2760  010008  0EBC               	movlw	low STR_9
  2761  01000A  6E21               	movwf	my_strcmp@str2,c
  2762  01000C  0EFF               	movlw	high STR_9
  2763  01000E  6E22               	movwf	my_strcmp@str2+1,c
  2764  010010  ECD3  F08F         	call	_my_strcmp	;wreg free
  2765  010014  0900               	iorlw	0
  2766  010016  B4D8               	btfsc	status,2,c
  2767  010018  D00D               	goto	l4584
  2768  01001A  C0A0  F01F         	movff	command_operation@opcode,my_strcmp@str1
  2769  01001E  C0A1  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  2770  010022  0EE6               	movlw	low STR_10
  2771  010024  6E21               	movwf	my_strcmp@str2,c
  2772  010026  0EFF               	movlw	high STR_10
  2773  010028  6E22               	movwf	my_strcmp@str2+1,c
  2774  01002A  ECD3  F08F         	call	_my_strcmp	;wreg free
  2775  01002E  0900               	iorlw	0
  2776  010030  A4D8               	btfss	status,2,c
  2777  010032  D009               	goto	l4586
  2778  010034                     l4584:
  2779                           
  2780                           ;PIC18F27J53-killifish_light02.c: 211: tx_sends(
  2781                           ;PIC18F27J53-killifish_light02.c: 212: "\t**************************\n"
  2782                           ;PIC18F27J53-killifish_light02.c: 213: "\t**** Killifish Light  ****\n"
  2783                           ;PIC18F27J53-killifish_light02.c: 214: "\t**** Made by @Ryokeri ****\n"
  2784                           ;PIC18F27J53-killifish_light02.c: 215: "\t**************************\n\n"
  2785                           ;PIC18F27J53-killifish_light02.c: 216: "\tcommand \topeland1\topeland2\n\n"
  2786                           ;PIC18F27J53-killifish_light02.c: 217: "\tprint_time(t)\n"
  2787                           ;PIC18F27J53-killifish_light02.c: 218: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(deci
      +                          mal)]\n"
  2788  010034  0E49               	movlw	low STR_11
  2789  010036  0100               	movlb	0	; () banked
  2790  010038  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  2791  01003A  0EFE               	movlw	high STR_11
  2792  01003C  0100               	movlb	0	; () banked
  2793  01003E  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  2794  010040  EC1A  F092         	call	_tx_sends	;wreg free
  2795  010044  D000               	goto	l4586
  2796  010046                     l4586:
  2797                           
  2798                           ;PIC18F27J53-killifish_light02.c: 225: }
  2799                           ;PIC18F27J53-killifish_light02.c: 226: if (!my_strcmp(opcode, "RESET();")) {
  2800  010046  C0A0  F01F         	movff	command_operation@opcode,my_strcmp@str1
  2801  01004A  C0A1  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  2802  01004E  0E9B               	movlw	low STR_12
  2803  010050  6E21               	movwf	my_strcmp@str2,c
  2804  010052  0EFF               	movlw	high STR_12
  2805  010054  6E22               	movwf	my_strcmp@str2+1,c
  2806  010056  ECD3  F08F         	call	_my_strcmp	;wreg free
  2807  01005A  0900               	iorlw	0
  2808  01005C  A4D8               	btfss	status,2,c
  2809  01005E  D002               	goto	l4590
  2810  010060  00FF               	reset		;# 
  2811  010062  D000               	goto	l4590
  2812  010064                     l4590:
  2813                           
  2814                           ;PIC18F27J53-killifish_light02.c: 228: }
  2815                           ;PIC18F27J53-killifish_light02.c: 229: if (!my_strcmp(opcode, "at") || !my_strcmp(opcode
      +                          , "adjust_time")) {
  2816  010064  C0A0  F01F         	movff	command_operation@opcode,my_strcmp@str1
  2817  010068  C0A1  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  2818  01006C  0EDF               	movlw	low STR_13
  2819  01006E  6E21               	movwf	my_strcmp@str2,c
  2820  010070  0EFF               	movlw	high STR_13
  2821  010072  6E22               	movwf	my_strcmp@str2+1,c
  2822  010074  ECD3  F08F         	call	_my_strcmp	;wreg free
  2823  010078  0900               	iorlw	0
  2824  01007A  B4D8               	btfsc	status,2,c
  2825  01007C  D00D               	goto	l4594
  2826  01007E  C0A0  F01F         	movff	command_operation@opcode,my_strcmp@str1
  2827  010082  C0A1  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  2828  010086  0E84               	movlw	low STR_14
  2829  010088  6E21               	movwf	my_strcmp@str2,c
  2830  01008A  0EFF               	movlw	high STR_14
  2831  01008C  6E22               	movwf	my_strcmp@str2+1,c
  2832  01008E  ECD3  F08F         	call	_my_strcmp	;wreg free
  2833  010092  0900               	iorlw	0
  2834  010094  A4D8               	btfss	status,2,c
  2835  010096  D0EA               	goto	l4620
  2836  010098                     l4594:
  2837                           
  2838                           ;PIC18F27J53-killifish_light02.c: 230: if (!my_strcmp(opland1, "y")) {
  2839  010098  C0A2  F01F         	movff	command_operation@opland1,my_strcmp@str1
  2840  01009C  C0A3  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  2841  0100A0  0EFC               	movlw	low STR_15
  2842  0100A2  6E21               	movwf	my_strcmp@str2,c
  2843  0100A4  0EFF               	movlw	high STR_15
  2844  0100A6  6E22               	movwf	my_strcmp@str2+1,c
  2845  0100A8  ECD3  F08F         	call	_my_strcmp	;wreg free
  2846  0100AC  0900               	iorlw	0
  2847  0100AE  A4D8               	btfss	status,2,c
  2848  0100B0  D019               	goto	l4598
  2849                           
  2850                           ;PIC18F27J53-killifish_light02.c: 231: comm_at(&caltime_now.YY, 0, 99, my_atoi(opland2))
      +                          ;
  2851  0100B2  0E35               	movlw	low (_caltime_now+6)
  2852  0100B4  0100               	movlb	0	; () banked
  2853  0100B6  6F9B               	movwf	comm_at@hand& (0+255),b
  2854  0100B8  0E00               	movlw	high (_caltime_now+6)
  2855  0100BA  0100               	movlb	0	; () banked
  2856  0100BC  6F9C               	movwf	(comm_at@hand+1)& (0+255),b
  2857  0100BE  0E00               	movlw	0
  2858  0100C0  0100               	movlb	0	; () banked
  2859  0100C2  6F9D               	movwf	comm_at@min& (0+255),b
  2860  0100C4  0E63               	movlw	99
  2861  0100C6  0100               	movlb	0	; () banked
  2862  0100C8  6F9E               	movwf	comm_at@max& (0+255),b
  2863  0100CA  C0A4  F064         	movff	command_operation@opland2,my_atoi@str
  2864  0100CE  C0A5  F065         	movff	command_operation@opland2+1,my_atoi@str+1
  2865  0100D2  EC32  F08F         	call	_my_atoi	;wreg free
  2866  0100D6  0100               	movlb	0	; () banked
  2867  0100D8  5164               	movf	?_my_atoi& (0+255),w,b
  2868  0100DA  0100               	movlb	0	; () banked
  2869  0100DC  6F9F               	movwf	comm_at@value& (0+255),b
  2870  0100DE  EC7F  F092         	call	_comm_at	;wreg free
  2871  0100E2  D000               	goto	l4598
  2872  0100E4                     l4598:
  2873                           
  2874                           ;PIC18F27J53-killifish_light02.c: 232: }
  2875                           ;PIC18F27J53-killifish_light02.c: 233: if (!my_strcmp(opland1, "M")) {
  2876  0100E4  C0A2  F01F         	movff	command_operation@opland1,my_strcmp@str1
  2877  0100E8  C0A3  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  2878  0100EC  0ECB               	movlw	low (STR_28+2)
  2879  0100EE  6E21               	movwf	my_strcmp@str2,c
  2880  0100F0  0EFF               	movlw	high (STR_28+2)
  2881  0100F2  6E22               	movwf	my_strcmp@str2+1,c
  2882  0100F4  ECD3  F08F         	call	_my_strcmp	;wreg free
  2883  0100F8  0900               	iorlw	0
  2884  0100FA  A4D8               	btfss	status,2,c
  2885  0100FC  D019               	goto	l4602
  2886                           
  2887                           ;PIC18F27J53-killifish_light02.c: 234: comm_at(&caltime_now.MM, 1, 12, my_atoi(opland2))
      +                          ;
  2888  0100FE  0E34               	movlw	low (_caltime_now+5)
  2889  010100  0100               	movlb	0	; () banked
  2890  010102  6F9B               	movwf	comm_at@hand& (0+255),b
  2891  010104  0E00               	movlw	high (_caltime_now+5)
  2892  010106  0100               	movlb	0	; () banked
  2893  010108  6F9C               	movwf	(comm_at@hand+1)& (0+255),b
  2894  01010A  0E01               	movlw	1
  2895  01010C  0100               	movlb	0	; () banked
  2896  01010E  6F9D               	movwf	comm_at@min& (0+255),b
  2897  010110  0E0C               	movlw	12
  2898  010112  0100               	movlb	0	; () banked
  2899  010114  6F9E               	movwf	comm_at@max& (0+255),b
  2900  010116  C0A4  F064         	movff	command_operation@opland2,my_atoi@str
  2901  01011A  C0A5  F065         	movff	command_operation@opland2+1,my_atoi@str+1
  2902  01011E  EC32  F08F         	call	_my_atoi	;wreg free
  2903  010122  0100               	movlb	0	; () banked
  2904  010124  5164               	movf	?_my_atoi& (0+255),w,b
  2905  010126  0100               	movlb	0	; () banked
  2906  010128  6F9F               	movwf	comm_at@value& (0+255),b
  2907  01012A  EC7F  F092         	call	_comm_at	;wreg free
  2908  01012E  D000               	goto	l4602
  2909  010130                     l4602:
  2910                           
  2911                           ;PIC18F27J53-killifish_light02.c: 235: }
  2912                           ;PIC18F27J53-killifish_light02.c: 236: if (!my_strcmp(opland1, "d")) {
  2913  010130  C0A2  F01F         	movff	command_operation@opland1,my_strcmp@str1
  2914  010134  C0A3  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  2915  010138  0EF2               	movlw	low STR_17
  2916  01013A  6E21               	movwf	my_strcmp@str2,c
  2917  01013C  0EFF               	movlw	high STR_17
  2918  01013E  6E22               	movwf	my_strcmp@str2+1,c
  2919  010140  ECD3  F08F         	call	_my_strcmp	;wreg free
  2920  010144  0900               	iorlw	0
  2921  010146  A4D8               	btfss	status,2,c
  2922  010148  D01F               	goto	l4608
  2923                           
  2924                           ;PIC18F27J53-killifish_light02.c: 237: comm_at(&caltime_now.DD, 1, month_length(caltime_
      +                          now.YY, caltime_now.MM), my_atoi(opland2));
  2925  01014A  C034  F060         	movff	_caltime_now+5,month_length@month
  2926  01014E  5035               	movf	_caltime_now+6,w,c
  2927  010150  EC8B  F08B         	call	_month_length
  2928  010154  0100               	movlb	0	; () banked
  2929  010156  6FA8               	movwf	_command_operation$3059& (0+255),b
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;PIC18F27J53-killifish_light02.c: 237: comm_at(&caltime_now.DD, 1, month_length(caltime_
      +                          now.YY, caltime_now.MM), my_atoi(opland2));
  2933  010158  0E33               	movlw	low (_caltime_now+4)
  2934  01015A  0100               	movlb	0	; () banked
  2935  01015C  6F9B               	movwf	comm_at@hand& (0+255),b
  2936  01015E  0E00               	movlw	high (_caltime_now+4)
  2937  010160  0100               	movlb	0	; () banked
  2938  010162  6F9C               	movwf	(comm_at@hand+1)& (0+255),b
  2939  010164  0E01               	movlw	1
  2940  010166  0100               	movlb	0	; () banked
  2941  010168  6F9D               	movwf	comm_at@min& (0+255),b
  2942  01016A  C0A8  F09E         	movff	_command_operation$3059,comm_at@max
  2943  01016E  C0A4  F064         	movff	command_operation@opland2,my_atoi@str
  2944  010172  C0A5  F065         	movff	command_operation@opland2+1,my_atoi@str+1
  2945  010176  EC32  F08F         	call	_my_atoi	;wreg free
  2946  01017A  0100               	movlb	0	; () banked
  2947  01017C  5164               	movf	?_my_atoi& (0+255),w,b
  2948  01017E  0100               	movlb	0	; () banked
  2949  010180  6F9F               	movwf	comm_at@value& (0+255),b
  2950  010182  EC7F  F092         	call	_comm_at	;wreg free
  2951  010186  D000               	goto	l4608
  2952  010188                     l4608:
  2953                           
  2954                           ;PIC18F27J53-killifish_light02.c: 238: }
  2955                           ;PIC18F27J53-killifish_light02.c: 239: if (!my_strcmp(opland1, "h")) {
  2956  010188  C0A2  F01F         	movff	command_operation@opland1,my_strcmp@str1
  2957  01018C  C0A3  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  2958  010190  0EF6               	movlw	low STR_18
  2959  010192  6E21               	movwf	my_strcmp@str2,c
  2960  010194  0EFF               	movlw	high STR_18
  2961  010196  6E22               	movwf	my_strcmp@str2+1,c
  2962  010198  ECD3  F08F         	call	_my_strcmp	;wreg free
  2963  01019C  0900               	iorlw	0
  2964  01019E  A4D8               	btfss	status,2,c
  2965  0101A0  D019               	goto	l4612
  2966                           
  2967                           ;PIC18F27J53-killifish_light02.c: 240: comm_at(&caltime_now.hh, 0, 23, my_atoi(opland2))
      +                          ;
  2968  0101A2  0E31               	movlw	low (_caltime_now+2)
  2969  0101A4  0100               	movlb	0	; () banked
  2970  0101A6  6F9B               	movwf	comm_at@hand& (0+255),b
  2971  0101A8  0E00               	movlw	high (_caltime_now+2)
  2972  0101AA  0100               	movlb	0	; () banked
  2973  0101AC  6F9C               	movwf	(comm_at@hand+1)& (0+255),b
  2974  0101AE  0E00               	movlw	0
  2975  0101B0  0100               	movlb	0	; () banked
  2976  0101B2  6F9D               	movwf	comm_at@min& (0+255),b
  2977  0101B4  0E17               	movlw	23
  2978  0101B6  0100               	movlb	0	; () banked
  2979  0101B8  6F9E               	movwf	comm_at@max& (0+255),b
  2980  0101BA  C0A4  F064         	movff	command_operation@opland2,my_atoi@str
  2981  0101BE  C0A5  F065         	movff	command_operation@opland2+1,my_atoi@str+1
  2982  0101C2  EC32  F08F         	call	_my_atoi	;wreg free
  2983  0101C6  0100               	movlb	0	; () banked
  2984  0101C8  5164               	movf	?_my_atoi& (0+255),w,b
  2985  0101CA  0100               	movlb	0	; () banked
  2986  0101CC  6F9F               	movwf	comm_at@value& (0+255),b
  2987  0101CE  EC7F  F092         	call	_comm_at	;wreg free
  2988  0101D2  D000               	goto	l4612
  2989  0101D4                     l4612:
  2990                           
  2991                           ;PIC18F27J53-killifish_light02.c: 241: }
  2992                           ;PIC18F27J53-killifish_light02.c: 242: if (!my_strcmp(opland1, "m")) {
  2993  0101D4  C0A2  F01F         	movff	command_operation@opland1,my_strcmp@str1
  2994  0101D8  C0A3  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  2995  0101DC  0ED3               	movlw	low (STR_27+2)
  2996  0101DE  6E21               	movwf	my_strcmp@str2,c
  2997  0101E0  0EFF               	movlw	high (STR_27+2)
  2998  0101E2  6E22               	movwf	my_strcmp@str2+1,c
  2999  0101E4  ECD3  F08F         	call	_my_strcmp	;wreg free
  3000  0101E8  0900               	iorlw	0
  3001  0101EA  A4D8               	btfss	status,2,c
  3002  0101EC  D019               	goto	l4616
  3003                           
  3004                           ;PIC18F27J53-killifish_light02.c: 243: comm_at(&caltime_now.mm, 0, 59, my_atoi(opland2))
      +                          ;
  3005  0101EE  0E30               	movlw	low (_caltime_now+1)
  3006  0101F0  0100               	movlb	0	; () banked
  3007  0101F2  6F9B               	movwf	comm_at@hand& (0+255),b
  3008  0101F4  0E00               	movlw	high (_caltime_now+1)
  3009  0101F6  0100               	movlb	0	; () banked
  3010  0101F8  6F9C               	movwf	(comm_at@hand+1)& (0+255),b
  3011  0101FA  0E00               	movlw	0
  3012  0101FC  0100               	movlb	0	; () banked
  3013  0101FE  6F9D               	movwf	comm_at@min& (0+255),b
  3014  010200  0E3B               	movlw	59
  3015  010202  0100               	movlb	0	; () banked
  3016  010204  6F9E               	movwf	comm_at@max& (0+255),b
  3017  010206  C0A4  F064         	movff	command_operation@opland2,my_atoi@str
  3018  01020A  C0A5  F065         	movff	command_operation@opland2+1,my_atoi@str+1
  3019  01020E  EC32  F08F         	call	_my_atoi	;wreg free
  3020  010212  0100               	movlb	0	; () banked
  3021  010214  5164               	movf	?_my_atoi& (0+255),w,b
  3022  010216  0100               	movlb	0	; () banked
  3023  010218  6F9F               	movwf	comm_at@value& (0+255),b
  3024  01021A  EC7F  F092         	call	_comm_at	;wreg free
  3025  01021E  D000               	goto	l4616
  3026  010220                     l4616:
  3027                           
  3028                           ;PIC18F27J53-killifish_light02.c: 244: }
  3029                           ;PIC18F27J53-killifish_light02.c: 245: if (!my_strcmp(opland1, "s")) {
  3030  010220  C0A2  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3031  010224  C0A3  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3032  010228  0EF8               	movlw	low STR_20
  3033  01022A  6E21               	movwf	my_strcmp@str2,c
  3034  01022C  0EFF               	movlw	high STR_20
  3035  01022E  6E22               	movwf	my_strcmp@str2+1,c
  3036  010230  ECD3  F08F         	call	_my_strcmp	;wreg free
  3037  010234  0900               	iorlw	0
  3038  010236  A4D8               	btfss	status,2,c
  3039  010238  D019               	goto	l4620
  3040                           
  3041                           ;PIC18F27J53-killifish_light02.c: 246: comm_at(&caltime_now.ss, 0, 59, my_atoi(opland2))
      +                          ;
  3042  01023A  0E2F               	movlw	low _caltime_now
  3043  01023C  0100               	movlb	0	; () banked
  3044  01023E  6F9B               	movwf	comm_at@hand& (0+255),b
  3045  010240  0E00               	movlw	high _caltime_now
  3046  010242  0100               	movlb	0	; () banked
  3047  010244  6F9C               	movwf	(comm_at@hand+1)& (0+255),b
  3048  010246  0E00               	movlw	0
  3049  010248  0100               	movlb	0	; () banked
  3050  01024A  6F9D               	movwf	comm_at@min& (0+255),b
  3051  01024C  0E3B               	movlw	59
  3052  01024E  0100               	movlb	0	; () banked
  3053  010250  6F9E               	movwf	comm_at@max& (0+255),b
  3054  010252  C0A4  F064         	movff	command_operation@opland2,my_atoi@str
  3055  010256  C0A5  F065         	movff	command_operation@opland2+1,my_atoi@str+1
  3056  01025A  EC32  F08F         	call	_my_atoi	;wreg free
  3057  01025E  0100               	movlb	0	; () banked
  3058  010260  5164               	movf	?_my_atoi& (0+255),w,b
  3059  010262  0100               	movlb	0	; () banked
  3060  010264  6F9F               	movwf	comm_at@value& (0+255),b
  3061  010266  EC7F  F092         	call	_comm_at	;wreg free
  3062  01026A  D000               	goto	l4620
  3063  01026C                     l4620:
  3064                           
  3065                           ;PIC18F27J53-killifish_light02.c: 247: }
  3066                           ;PIC18F27J53-killifish_light02.c: 248: }
  3067                           ;PIC18F27J53-killifish_light02.c: 249: if (!my_strcmp(opcode, "print_time") || !my_strcm
      +                          p(opcode, "t")) {
  3068  01026C  C0A0  F01F         	movff	command_operation@opcode,my_strcmp@str1
  3069  010270  C0A1  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3070  010274  0E90               	movlw	low STR_21
  3071  010276  6E21               	movwf	my_strcmp@str2,c
  3072  010278  0EFF               	movlw	high STR_21
  3073  01027A  6E22               	movwf	my_strcmp@str2+1,c
  3074  01027C  ECD3  F08F         	call	_my_strcmp	;wreg free
  3075  010280  0900               	iorlw	0
  3076  010282  B4D8               	btfsc	status,2,c
  3077  010284  D00D               	goto	l4624
  3078  010286  C0A0  F01F         	movff	command_operation@opcode,my_strcmp@str1
  3079  01028A  C0A1  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3080  01028E  0EE0               	movlw	low (STR_13+1)
  3081  010290  6E21               	movwf	my_strcmp@str2,c
  3082  010292  0EFF               	movlw	high (STR_13+1)
  3083  010294  6E22               	movwf	my_strcmp@str2+1,c
  3084  010296  ECD3  F08F         	call	_my_strcmp	;wreg free
  3085  01029A  0900               	iorlw	0
  3086  01029C  A4D8               	btfss	status,2,c
  3087  01029E  D003               	goto	l4626
  3088  0102A0                     l4624:
  3089                           
  3090                           ;PIC18F27J53-killifish_light02.c: 250: print_time();
  3091  0102A0  ECB7  F089         	call	_print_time	;wreg free
  3092  0102A4  D000               	goto	l4626
  3093  0102A6                     l4626:
  3094                           
  3095                           ;PIC18F27J53-killifish_light02.c: 251: }
  3096                           ;PIC18F27J53-killifish_light02.c: 252: if (!my_strcmp(opcode, "set")) {
  3097  0102A6  C0A0  F01F         	movff	command_operation@opcode,my_strcmp@str1
  3098  0102AA  C0A1  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3099  0102AE  0ED5               	movlw	low STR_23
  3100  0102B0  6E21               	movwf	my_strcmp@str2,c
  3101  0102B2  0EFF               	movlw	high STR_23
  3102  0102B4  6E22               	movwf	my_strcmp@str2+1,c
  3103  0102B6  ECD3  F08F         	call	_my_strcmp	;wreg free
  3104  0102BA  0900               	iorlw	0
  3105  0102BC  A4D8               	btfss	status,2,c
  3106  0102BE  D02F               	goto	l4638
  3107                           
  3108                           ;PIC18F27J53-killifish_light02.c: 253: if (!my_strcmp(opland1, "sync")) {
  3109  0102C0  C0A2  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3110  0102C4  C0A3  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3111  0102C8  0EB7               	movlw	low STR_24
  3112  0102CA  6E21               	movwf	my_strcmp@str2,c
  3113  0102CC  0EFF               	movlw	high STR_24
  3114  0102CE  6E22               	movwf	my_strcmp@str2+1,c
  3115  0102D0  ECD3  F08F         	call	_my_strcmp	;wreg free
  3116  0102D4  0900               	iorlw	0
  3117  0102D6  A4D8               	btfss	status,2,c
  3118  0102D8  D004               	goto	l4632
  3119                           
  3120                           ;PIC18F27J53-killifish_light02.c: 254: light_mode = TIME_SYNC_mode;
  3121  0102DA  0E00               	movlw	0
  3122  0102DC  0100               	movlb	0	; () banked
  3123  0102DE  6FB0               	movwf	_light_mode& (0+255),b
  3124  0102E0  D000               	goto	l4632
  3125  0102E2                     l4632:
  3126                           
  3127                           ;PIC18F27J53-killifish_light02.c: 255: }
  3128                           ;PIC18F27J53-killifish_light02.c: 256: if (!my_strcmp(opland1, "adc") || !my_strcmp(opla
      +                          nd1, "ADC")) {
  3129  0102E2  C0A2  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3130  0102E6  C0A3  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3131  0102EA  0ECD               	movlw	low STR_25
  3132  0102EC  6E21               	movwf	my_strcmp@str2,c
  3133  0102EE  0EFF               	movlw	high STR_25
  3134  0102F0  6E22               	movwf	my_strcmp@str2+1,c
  3135  0102F2  ECD3  F08F         	call	_my_strcmp	;wreg free
  3136  0102F6  0900               	iorlw	0
  3137  0102F8  B4D8               	btfsc	status,2,c
  3138  0102FA  D00D               	goto	l4636
  3139  0102FC  C0A2  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3140  010300  C0A3  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3141  010304  0EC5               	movlw	low STR_26
  3142  010306  6E21               	movwf	my_strcmp@str2,c
  3143  010308  0EFF               	movlw	high STR_26
  3144  01030A  6E22               	movwf	my_strcmp@str2+1,c
  3145  01030C  ECD3  F08F         	call	_my_strcmp	;wreg free
  3146  010310  0900               	iorlw	0
  3147  010312  A4D8               	btfss	status,2,c
  3148  010314  D004               	goto	l4638
  3149  010316                     l4636:
  3150                           
  3151                           ;PIC18F27J53-killifish_light02.c: 257: light_mode = ADC_mode;
  3152  010316  0E01               	movlw	1
  3153  010318  0100               	movlb	0	; () banked
  3154  01031A  6FB0               	movwf	_light_mode& (0+255),b
  3155                           
  3156                           ; BSR set to: 0
  3157  01031C  D000               	goto	l4638
  3158  01031E                     l4638:
  3159                           
  3160                           ;PIC18F27J53-killifish_light02.c: 258: }
  3161                           ;PIC18F27J53-killifish_light02.c: 259: }
  3162                           ;PIC18F27J53-killifish_light02.c: 260: if (!my_strcmp(opcode, "pwm") || !my_strcmp(opcod
      +                          e, "PWM")) {
  3163  01031E  C0A0  F01F         	movff	command_operation@opcode,my_strcmp@str1
  3164  010322  C0A1  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3165  010326  0ED1               	movlw	low STR_27
  3166  010328  6E21               	movwf	my_strcmp@str2,c
  3167  01032A  0EFF               	movlw	high STR_27
  3168  01032C  6E22               	movwf	my_strcmp@str2+1,c
  3169  01032E  ECD3  F08F         	call	_my_strcmp	;wreg free
  3170  010332  0900               	iorlw	0
  3171  010334  B4D8               	btfsc	status,2,c
  3172  010336  D00D               	goto	l4642
  3173  010338  C0A0  F01F         	movff	command_operation@opcode,my_strcmp@str1
  3174  01033C  C0A1  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3175  010340  0EC9               	movlw	low STR_28
  3176  010342  6E21               	movwf	my_strcmp@str2,c
  3177  010344  0EFF               	movlw	high STR_28
  3178  010346  6E22               	movwf	my_strcmp@str2+1,c
  3179  010348  ECD3  F08F         	call	_my_strcmp	;wreg free
  3180  01034C  0900               	iorlw	0
  3181  01034E  A4D8               	btfss	status,2,c
  3182  010350  0012               	return	
  3183  010352                     l4642:
  3184                           
  3185                           ;PIC18F27J53-killifish_light02.c: 261: if (!my_strcmp(opland1, "r") || !my_strcmp(opland
      +                          1, "R")) {
  3186  010352  C0A2  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3187  010356  C0A3  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3188  01035A  0EB0               	movlw	low (STR_37+4)
  3189  01035C  6E21               	movwf	my_strcmp@str2,c
  3190  01035E  0EFF               	movlw	high (STR_37+4)
  3191  010360  6E22               	movwf	my_strcmp@str2+1,c
  3192  010362  ECD3  F08F         	call	_my_strcmp	;wreg free
  3193  010366  0900               	iorlw	0
  3194  010368  B4D8               	btfsc	status,2,c
  3195  01036A  D00D               	goto	l4646
  3196  01036C  C0A2  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3197  010370  C0A3  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3198  010374  0EEC               	movlw	low STR_30
  3199  010376  6E21               	movwf	my_strcmp@str2,c
  3200  010378  0EFF               	movlw	high STR_30
  3201  01037A  6E22               	movwf	my_strcmp@str2+1,c
  3202  01037C  ECD3  F08F         	call	_my_strcmp	;wreg free
  3203  010380  0900               	iorlw	0
  3204  010382  A4D8               	btfss	status,2,c
  3205  010384  D011               	goto	l4650
  3206  010386                     l4646:
  3207                           
  3208                           ;PIC18F27J53-killifish_light02.c: 262: light_mode = COMMAND_mode;
  3209  010386  0E02               	movlw	2
  3210  010388  0100               	movlb	0	; () banked
  3211  01038A  6FB0               	movwf	_light_mode& (0+255),b
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;PIC18F27J53-killifish_light02.c: 263: PWM_set(0, my_atoi(opland2));
  3215  01038C  C0A4  F064         	movff	command_operation@opland2,my_atoi@str
  3216  010390  C0A5  F065         	movff	command_operation@opland2+1,my_atoi@str+1
  3217  010394  EC32  F08F         	call	_my_atoi	;wreg free
  3218  010398  C064  F06C         	movff	?_my_atoi,PWM_set@value
  3219  01039C  C065  F06D         	movff	?_my_atoi+1,PWM_set@value+1
  3220  0103A0  0E00               	movlw	0
  3221  0103A2  EC0D  F089         	call	_PWM_set
  3222  0103A6  D000               	goto	l4650
  3223  0103A8                     l4650:
  3224                           
  3225                           ;PIC18F27J53-killifish_light02.c: 264: }
  3226                           ;PIC18F27J53-killifish_light02.c: 265: if (!my_strcmp(opland1, "g") || !my_strcmp(opland
      +                          1, "G")) {
  3227  0103A8  C0A2  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3228  0103AC  C0A3  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3229  0103B0  0EF4               	movlw	low STR_31
  3230  0103B2  6E21               	movwf	my_strcmp@str2,c
  3231  0103B4  0EFF               	movlw	high STR_31
  3232  0103B6  6E22               	movwf	my_strcmp@str2+1,c
  3233  0103B8  ECD3  F08F         	call	_my_strcmp	;wreg free
  3234  0103BC  0900               	iorlw	0
  3235  0103BE  B4D8               	btfsc	status,2,c
  3236  0103C0  D00D               	goto	l4654
  3237  0103C2  C0A2  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3238  0103C6  C0A3  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3239  0103CA  0EEA               	movlw	low STR_32
  3240  0103CC  6E21               	movwf	my_strcmp@str2,c
  3241  0103CE  0EFF               	movlw	high STR_32
  3242  0103D0  6E22               	movwf	my_strcmp@str2+1,c
  3243  0103D2  ECD3  F08F         	call	_my_strcmp	;wreg free
  3244  0103D6  0900               	iorlw	0
  3245  0103D8  A4D8               	btfss	status,2,c
  3246  0103DA  D011               	goto	l4658
  3247  0103DC                     l4654:
  3248                           
  3249                           ;PIC18F27J53-killifish_light02.c: 266: light_mode = COMMAND_mode;
  3250  0103DC  0E02               	movlw	2
  3251  0103DE  0100               	movlb	0	; () banked
  3252  0103E0  6FB0               	movwf	_light_mode& (0+255),b
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;PIC18F27J53-killifish_light02.c: 267: PWM_set(1, my_atoi(opland2));
  3256  0103E2  C0A4  F064         	movff	command_operation@opland2,my_atoi@str
  3257  0103E6  C0A5  F065         	movff	command_operation@opland2+1,my_atoi@str+1
  3258  0103EA  EC32  F08F         	call	_my_atoi	;wreg free
  3259  0103EE  C064  F06C         	movff	?_my_atoi,PWM_set@value
  3260  0103F2  C065  F06D         	movff	?_my_atoi+1,PWM_set@value+1
  3261  0103F6  0E01               	movlw	1
  3262  0103F8  EC0D  F089         	call	_PWM_set
  3263  0103FC  D000               	goto	l4658
  3264  0103FE                     l4658:
  3265                           
  3266                           ;PIC18F27J53-killifish_light02.c: 268: }
  3267                           ;PIC18F27J53-killifish_light02.c: 269: if (!my_strcmp(opland1, "b") || !my_strcmp(opland
      +                          1, "B")) {
  3268  0103FE  C0A2  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3269  010402  C0A3  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3270  010406  0EF0               	movlw	low STR_33
  3271  010408  6E21               	movwf	my_strcmp@str2,c
  3272  01040A  0EFF               	movlw	high STR_33
  3273  01040C  6E22               	movwf	my_strcmp@str2+1,c
  3274  01040E  ECD3  F08F         	call	_my_strcmp	;wreg free
  3275  010412  0900               	iorlw	0
  3276  010414  B4D8               	btfsc	status,2,c
  3277  010416  D00D               	goto	l4662
  3278  010418  C0A2  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3279  01041C  C0A3  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3280  010420  0EE8               	movlw	low STR_34
  3281  010422  6E21               	movwf	my_strcmp@str2,c
  3282  010424  0EFF               	movlw	high STR_34
  3283  010426  6E22               	movwf	my_strcmp@str2+1,c
  3284  010428  ECD3  F08F         	call	_my_strcmp	;wreg free
  3285  01042C  0900               	iorlw	0
  3286  01042E  A4D8               	btfss	status,2,c
  3287  010430  D011               	goto	l4666
  3288  010432                     l4662:
  3289                           
  3290                           ;PIC18F27J53-killifish_light02.c: 270: light_mode = COMMAND_mode;
  3291  010432  0E02               	movlw	2
  3292  010434  0100               	movlb	0	; () banked
  3293  010436  6FB0               	movwf	_light_mode& (0+255),b
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;PIC18F27J53-killifish_light02.c: 271: PWM_set(2, my_atoi(opland2));
  3297  010438  C0A4  F064         	movff	command_operation@opland2,my_atoi@str
  3298  01043C  C0A5  F065         	movff	command_operation@opland2+1,my_atoi@str+1
  3299  010440  EC32  F08F         	call	_my_atoi	;wreg free
  3300  010444  C064  F06C         	movff	?_my_atoi,PWM_set@value
  3301  010448  C065  F06D         	movff	?_my_atoi+1,PWM_set@value+1
  3302  01044C  0E02               	movlw	2
  3303  01044E  EC0D  F089         	call	_PWM_set
  3304  010452  D000               	goto	l4666
  3305  010454                     l4666:
  3306                           
  3307                           ;PIC18F27J53-killifish_light02.c: 272: }
  3308                           ;PIC18F27J53-killifish_light02.c: 273: if (!my_strcmp(opland1, "w") || !my_strcmp(opland
      +                          1, "W")) {
  3309  010454  C0A2  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3310  010458  C0A3  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3311  01045C  0EFA               	movlw	low STR_35
  3312  01045E  6E21               	movwf	my_strcmp@str2,c
  3313  010460  0EFF               	movlw	high STR_35
  3314  010462  6E22               	movwf	my_strcmp@str2+1,c
  3315  010464  ECD3  F08F         	call	_my_strcmp	;wreg free
  3316  010468  0900               	iorlw	0
  3317  01046A  B4D8               	btfsc	status,2,c
  3318  01046C  D00D               	goto	l4670
  3319  01046E  C0A2  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3320  010472  C0A3  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3321  010476  0EEE               	movlw	low STR_36
  3322  010478  6E21               	movwf	my_strcmp@str2,c
  3323  01047A  0EFF               	movlw	high STR_36
  3324  01047C  6E22               	movwf	my_strcmp@str2+1,c
  3325  01047E  ECD3  F08F         	call	_my_strcmp	;wreg free
  3326  010482  0900               	iorlw	0
  3327  010484  A4D8               	btfss	status,2,c
  3328  010486  D011               	goto	l4674
  3329  010488                     l4670:
  3330                           
  3331                           ;PIC18F27J53-killifish_light02.c: 274: light_mode = COMMAND_mode;
  3332  010488  0E02               	movlw	2
  3333  01048A  0100               	movlb	0	; () banked
  3334  01048C  6FB0               	movwf	_light_mode& (0+255),b
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;PIC18F27J53-killifish_light02.c: 275: PWM_set(3, my_atoi(opland2));
  3338  01048E  C0A4  F064         	movff	command_operation@opland2,my_atoi@str
  3339  010492  C0A5  F065         	movff	command_operation@opland2+1,my_atoi@str+1
  3340  010496  EC32  F08F         	call	_my_atoi	;wreg free
  3341  01049A  C064  F06C         	movff	?_my_atoi,PWM_set@value
  3342  01049E  C065  F06D         	movff	?_my_atoi+1,PWM_set@value+1
  3343  0104A2  0E03               	movlw	3
  3344  0104A4  EC0D  F089         	call	_PWM_set
  3345  0104A8  D000               	goto	l4674
  3346  0104AA                     l4674:
  3347                           
  3348                           ;PIC18F27J53-killifish_light02.c: 276: }
  3349                           ;PIC18F27J53-killifish_light02.c: 277: if (!my_strcmp(opland1, "clear")) {
  3350  0104AA  C0A2  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3351  0104AE  C0A3  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3352  0104B2  0EAC               	movlw	low STR_37
  3353  0104B4  6E21               	movwf	my_strcmp@str2,c
  3354  0104B6  0EFF               	movlw	high STR_37
  3355  0104B8  6E22               	movwf	my_strcmp@str2+1,c
  3356  0104BA  ECD3  F08F         	call	_my_strcmp	;wreg free
  3357  0104BE  0900               	iorlw	0
  3358  0104C0  A4D8               	btfss	status,2,c
  3359  0104C2  0012               	return	
  3360                           
  3361                           ;PIC18F27J53-killifish_light02.c: 278: light_mode = COMMAND_mode;
  3362  0104C4  0E02               	movlw	2
  3363  0104C6  0100               	movlb	0	; () banked
  3364  0104C8  6FB0               	movwf	_light_mode& (0+255),b
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;PIC18F27J53-killifish_light02.c: 279: PWM_set(0, 0);
  3368  0104CA  0E00               	movlw	0
  3369  0104CC  0100               	movlb	0	; () banked
  3370  0104CE  6F6D               	movwf	(PWM_set@value+1)& (0+255),b
  3371  0104D0  0E00               	movlw	0
  3372  0104D2  6F6C               	movwf	PWM_set@value& (0+255),b
  3373  0104D4  0E00               	movlw	0
  3374  0104D6  EC0D  F089         	call	_PWM_set
  3375                           
  3376                           ;PIC18F27J53-killifish_light02.c: 280: PWM_set(1, 0);
  3377  0104DA  0E00               	movlw	0
  3378  0104DC  0100               	movlb	0	; () banked
  3379  0104DE  6F6D               	movwf	(PWM_set@value+1)& (0+255),b
  3380  0104E0  0E00               	movlw	0
  3381  0104E2  6F6C               	movwf	PWM_set@value& (0+255),b
  3382  0104E4  0E01               	movlw	1
  3383  0104E6  EC0D  F089         	call	_PWM_set
  3384                           
  3385                           ;PIC18F27J53-killifish_light02.c: 281: PWM_set(2, 0);
  3386  0104EA  0E00               	movlw	0
  3387  0104EC  0100               	movlb	0	; () banked
  3388  0104EE  6F6D               	movwf	(PWM_set@value+1)& (0+255),b
  3389  0104F0  0E00               	movlw	0
  3390  0104F2  6F6C               	movwf	PWM_set@value& (0+255),b
  3391  0104F4  0E02               	movlw	2
  3392  0104F6  EC0D  F089         	call	_PWM_set
  3393                           
  3394                           ;PIC18F27J53-killifish_light02.c: 282: PWM_set(3, 0);
  3395  0104FA  0E00               	movlw	0
  3396  0104FC  0100               	movlb	0	; () banked
  3397  0104FE  6F6D               	movwf	(PWM_set@value+1)& (0+255),b
  3398  010500  0E00               	movlw	0
  3399  010502  6F6C               	movwf	PWM_set@value& (0+255),b
  3400  010504  0E03               	movlw	3
  3401  010506  EC0D  F089         	call	_PWM_set
  3402  01050A  0012               	return	
  3403  01050C  0012               	return		;funcret
  3404  01050E                     __end_of_command_operation:
  3405                           	opt stack 0
  3406                           tblptru	equ	0xFF8
  3407                           tblptrh	equ	0xFF7
  3408                           tblptrl	equ	0xFF6
  3409                           tablat	equ	0xFF5
  3410                           prodh	equ	0xFF4
  3411                           prodl	equ	0xFF3
  3412                           intcon	equ	0xFF2
  3413                           postinc0	equ	0xFEE
  3414                           wreg	equ	0xFE8
  3415                           postinc1	equ	0xFE6
  3416                           postdec1	equ	0xFE5
  3417                           fsr1h	equ	0xFE2
  3418                           fsr1l	equ	0xFE1
  3419                           indf2	equ	0xFDF
  3420                           postinc2	equ	0xFDE
  3421                           postdec2	equ	0xFDD
  3422                           fsr2h	equ	0xFDA
  3423                           fsr2l	equ	0xFD9
  3424                           status	equ	0xFD8
  3425                           
  3426 ;; *************** function _my_strcmp *****************
  3427 ;; Defined at:
  3428 ;;		line 53 in file "../My_header\My_stdlib.h"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;  str1            2   30[COMRAM] PTR const unsigned char 
  3431 ;;		 -> rx_loop@opland1(100), rx_loop@opcode(100), 
  3432 ;;  str2            2   32[COMRAM] PTR const unsigned char 
  3433 ;;		 -> STR_37(6), STR_36(2), STR_35(2), STR_34(2), 
  3434 ;;		 -> STR_33(2), STR_32(2), STR_31(2), STR_30(2), 
  3435 ;;		 -> STR_29(2), STR_28(4), STR_27(4), STR_26(4), 
  3436 ;;		 -> STR_25(4), STR_24(5), STR_23(4), STR_22(2), 
  3437 ;;		 -> STR_21(11), STR_20(2), STR_19(2), STR_18(2), 
  3438 ;;		 -> STR_17(2), STR_16(2), STR_15(2), STR_14(12), 
  3439 ;;		 -> STR_13(3), STR_12(9), STR_10(2), STR_9(5), 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;		None
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      char 
  3444 ;; Registers used:
  3445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3451 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3453 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3454 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3455 ;;Total ram usage:        5 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:    4
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_command_operation
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           	psect	text7
  3466  011FA6                     __ptext7:
  3467                           	opt stack 0
  3468  011FA6                     _my_strcmp:
  3469                           	opt stack 24
  3470                           
  3471                           ;My_header\My_stdlib.h: 54: while (*str1 && *str2) {
  3472                           
  3473                           ;incstack = 0
  3474  011FA6  D027               	goto	l4450
  3475  011FA8                     l4442:
  3476                           
  3477                           ;My_header\My_stdlib.h: 55: if (*str1 != *str2)return (*str1 - *str2);
  3478  011FA8  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  3479  011FAC  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  3480  011FB0  50DF               	movf	indf2,w,c
  3481  011FB2  6E23               	movwf	??_my_strcmp& (0+255),c
  3482  011FB4  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  3483  011FB8  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  3484  011FBC                     	if	0	;tblptru may be non-zero
  3485  011FBC                     	endif
  3486  011FBC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3487  011FBC  0E00               	movlw	low (__mediumconst shr (0+16))
  3488  011FBE  6EF8               	movwf	tblptru,c
  3489  011FC0                     	endif
  3490  011FC0  0008               	tblrd		*
  3491  011FC2  50F5               	movf	tablat,w,c
  3492  011FC4  1823               	xorwf	??_my_strcmp,w,c
  3493  011FC6  B4D8               	btfsc	status,2,c
  3494  011FC8  D011               	goto	l4448
  3495  011FCA  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  3496  011FCE  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  3497  011FD2  50DF               	movf	indf2,w,c
  3498  011FD4  6E23               	movwf	??_my_strcmp& (0+255),c
  3499  011FD6  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  3500  011FDA  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  3501  011FDE                     	if	0	;tblptru may be non-zero
  3502  011FDE                     	endif
  3503  011FDE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3504  011FDE  0E00               	movlw	low (__mediumconst shr (0+16))
  3505  011FE0  6EF8               	movwf	tblptru,c
  3506  011FE2                     	endif
  3507  011FE2  0008               	tblrd		*
  3508  011FE4  50F5               	movf	tablat,w,c
  3509  011FE6  0800               	sublw	0
  3510  011FE8  2423               	addwf	??_my_strcmp,w,c
  3511  011FEA  0012               	return	
  3512  011FEC                     l4448:
  3513                           
  3514                           ;My_header\My_stdlib.h: 56: str1++;
  3515  011FEC  4A1F               	infsnz	my_strcmp@str1,f,c
  3516  011FEE  2A20               	incf	my_strcmp@str1+1,f,c
  3517                           
  3518                           ;My_header\My_stdlib.h: 57: str2++;
  3519  011FF0  4A21               	infsnz	my_strcmp@str2,f,c
  3520  011FF2  2A22               	incf	my_strcmp@str2+1,f,c
  3521  011FF4  D000               	goto	l4450
  3522  011FF6                     l4450:
  3523  011FF6  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  3524  011FFA  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  3525  011FFE  50DF               	movf	indf2,w,c
  3526  012000  B4D8               	btfsc	status,2,c
  3527  012002  D00D               	goto	l4454
  3528  012004  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  3529  012008  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  3530  01200C                     	if	0	;tblptru may be non-zero
  3531  01200C                     	endif
  3532  01200C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3533  01200C  0E00               	movlw	low (__mediumconst shr (0+16))
  3534  01200E  6EF8               	movwf	tblptru,c
  3535  012010                     	endif
  3536  012010  0008               	tblrd		*
  3537  012012  50F5               	movf	tablat,w,c
  3538  012014  0900               	iorlw	0
  3539  012016  B4D8               	btfsc	status,2,c
  3540  012018  D002               	goto	l4454
  3541  01201A  D7C6               	goto	l4442
  3542  01201C  D000               	goto	l4454
  3543  01201E                     l4454:
  3544                           
  3545                           ;My_header\My_stdlib.h: 58: }
  3546                           ;My_header\My_stdlib.h: 59: return (*str1 - *str2);
  3547  01201E  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  3548  012022  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  3549  012026  50DF               	movf	indf2,w,c
  3550  012028  6E23               	movwf	??_my_strcmp& (0+255),c
  3551  01202A  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  3552  01202E  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  3553  012032                     	if	0	;tblptru may be non-zero
  3554  012032                     	endif
  3555  012032                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3556  012032  0E00               	movlw	low (__mediumconst shr (0+16))
  3557  012034  6EF8               	movwf	tblptru,c
  3558  012036                     	endif
  3559  012036  0008               	tblrd		*
  3560  012038  50F5               	movf	tablat,w,c
  3561  01203A  0800               	sublw	0
  3562  01203C  2423               	addwf	??_my_strcmp,w,c
  3563  01203E  0012               	return	
  3564  012040  0012               	return		;funcret
  3565  012042                     __end_of_my_strcmp:
  3566                           	opt stack 0
  3567                           tblptru	equ	0xFF8
  3568                           tblptrh	equ	0xFF7
  3569                           tblptrl	equ	0xFF6
  3570                           tablat	equ	0xFF5
  3571                           prodh	equ	0xFF4
  3572                           prodl	equ	0xFF3
  3573                           intcon	equ	0xFF2
  3574                           postinc0	equ	0xFEE
  3575                           wreg	equ	0xFE8
  3576                           postinc1	equ	0xFE6
  3577                           postdec1	equ	0xFE5
  3578                           fsr1h	equ	0xFE2
  3579                           fsr1l	equ	0xFE1
  3580                           indf2	equ	0xFDF
  3581                           postinc2	equ	0xFDE
  3582                           postdec2	equ	0xFDD
  3583                           fsr2h	equ	0xFDA
  3584                           fsr2l	equ	0xFD9
  3585                           status	equ	0xFD8
  3586                           
  3587 ;; *************** function _my_atoi *****************
  3588 ;; Defined at:
  3589 ;;		line 41 in file "../My_header\My_stdlib.h"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;  str             2    4[BANK0 ] PTR const unsigned char 
  3592 ;;		 -> rx_loop@opland2(100), 
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;  ret             2   10[BANK0 ] unsigned int 
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  2    4[BANK0 ] unsigned int 
  3597 ;; Registers used:
  3598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3604 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3605 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3606 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3607 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3608 ;;Total ram usage:        8 bytes
  3609 ;; Hardware stack levels used:    1
  3610 ;; Hardware stack levels required when called:    5
  3611 ;; This function calls:
  3612 ;;		___wmul
  3613 ;; This function is called by:
  3614 ;;		_command_operation
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           	psect	text8
  3619  011E64                     __ptext8:
  3620                           	opt stack 0
  3621  011E64                     _my_atoi:
  3622                           	opt stack 23
  3623                           
  3624                           ;My_header\My_stdlib.h: 42: uint16_t ret = 0;
  3625                           
  3626                           ;incstack = 0
  3627  011E64  0E00               	movlw	0
  3628  011E66  0100               	movlb	0	; () banked
  3629  011E68  6F6B               	movwf	(my_atoi@ret+1)& (0+255),b
  3630  011E6A  0E00               	movlw	0
  3631  011E6C  6F6A               	movwf	my_atoi@ret& (0+255),b
  3632                           
  3633                           ;My_header\My_stdlib.h: 43: while (*str) {
  3634  011E6E  D040               	goto	l4438
  3635  011E70                     l4428:
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;My_header\My_stdlib.h: 44: if (*str >= '0' && *str <= '9') {
  3639  011E70  C064  FFD9         	movff	my_atoi@str,fsr2l
  3640  011E74  C065  FFDA         	movff	my_atoi@str+1,fsr2h
  3641  011E78  0E2F               	movlw	47
  3642  011E7A  64DF               	cpfsgt	indf2,c
  3643  011E7C  D035               	goto	l4436
  3644                           
  3645                           ; BSR set to: 0
  3646  011E7E  C064  FFD9         	movff	my_atoi@str,fsr2l
  3647  011E82  C065  FFDA         	movff	my_atoi@str+1,fsr2h
  3648  011E86  0E3A               	movlw	58
  3649  011E88  60DF               	cpfslt	indf2,c
  3650  011E8A  D02E               	goto	l4436
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;My_header\My_stdlib.h: 45: ret *= 10;
  3654  011E8C  C06A  F060         	movff	my_atoi@ret,___wmul@multiplier
  3655  011E90  C06B  F061         	movff	my_atoi@ret+1,___wmul@multiplier+1
  3656  011E94  0E00               	movlw	0
  3657  011E96  0100               	movlb	0	; () banked
  3658  011E98  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3659  011E9A  0E0A               	movlw	10
  3660  011E9C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3661  011E9E  ECB1  F093         	call	___wmul	;wreg free
  3662  011EA2  C060  F06A         	movff	?___wmul,my_atoi@ret
  3663  011EA6  C061  F06B         	movff	?___wmul+1,my_atoi@ret+1
  3664                           
  3665                           ;My_header\My_stdlib.h: 46: ret += *str - '0';
  3666  011EAA  0ED0               	movlw	208
  3667  011EAC  0100               	movlb	0	; () banked
  3668  011EAE  6F66               	movwf	??_my_atoi& (0+255),b
  3669  011EB0  0EFF               	movlw	255
  3670  011EB2  0100               	movlb	0	; () banked
  3671  011EB4  6F67               	movwf	(??_my_atoi+1)& (0+255),b
  3672  011EB6  C064  FFD9         	movff	my_atoi@str,fsr2l
  3673  011EBA  C065  FFDA         	movff	my_atoi@str+1,fsr2h
  3674  011EBE  50DF               	movf	indf2,w,c
  3675  011EC0  0100               	movlb	0	; () banked
  3676  011EC2  6F68               	movwf	(??_my_atoi+2)& (0+255),b
  3677  011EC4  6B69               	clrf	(??_my_atoi+3)& (0+255),b
  3678  011EC6  0100               	movlb	0	; () banked
  3679  011EC8  5166               	movf	??_my_atoi& (0+255),w,b
  3680  011ECA  0100               	movlb	0	; () banked
  3681  011ECC  2768               	addwf	(??_my_atoi+2)& (0+255),f,b
  3682  011ECE  0100               	movlb	0	; () banked
  3683  011ED0  5167               	movf	(??_my_atoi+1)& (0+255),w,b
  3684  011ED2  0100               	movlb	0	; () banked
  3685  011ED4  2369               	addwfc	(??_my_atoi+3)& (0+255),f,b
  3686  011ED6  0100               	movlb	0	; () banked
  3687  011ED8  5168               	movf	(??_my_atoi+2)& (0+255),w,b
  3688  011EDA  0100               	movlb	0	; () banked
  3689  011EDC  276A               	addwf	my_atoi@ret& (0+255),f,b
  3690  011EDE  0100               	movlb	0	; () banked
  3691  011EE0  5169               	movf	(??_my_atoi+3)& (0+255),w,b
  3692  011EE2  0100               	movlb	0	; () banked
  3693  011EE4  236B               	addwfc	(my_atoi@ret+1)& (0+255),f,b
  3694  011EE6  D000               	goto	l4436
  3695  011EE8                     l4436:
  3696                           
  3697                           ; BSR set to: 0
  3698                           ;My_header\My_stdlib.h: 47: }
  3699                           ;My_header\My_stdlib.h: 48: str++;
  3700  011EE8  0100               	movlb	0	; () banked
  3701  011EEA  4B64               	infsnz	my_atoi@str& (0+255),f,b
  3702  011EEC  2B65               	incf	(my_atoi@str+1)& (0+255),f,b
  3703  011EEE  D000               	goto	l4438
  3704  011EF0                     l4438:
  3705                           
  3706                           ; BSR set to: 0
  3707  011EF0  C064  FFD9         	movff	my_atoi@str,fsr2l
  3708  011EF4  C065  FFDA         	movff	my_atoi@str+1,fsr2h
  3709  011EF8  50DF               	movf	indf2,w,c
  3710  011EFA  A4D8               	btfss	status,2,c
  3711  011EFC  D7B9               	goto	l4428
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;My_header\My_stdlib.h: 49: }
  3715                           ;My_header\My_stdlib.h: 50: return ret;
  3716  011EFE  C06A  F064         	movff	my_atoi@ret,?_my_atoi
  3717  011F02  C06B  F065         	movff	my_atoi@ret+1,?_my_atoi+1
  3718                           
  3719                           ; BSR set to: 0
  3720  011F06  0012               	return		;funcret
  3721  011F08                     __end_of_my_atoi:
  3722                           	opt stack 0
  3723                           tblptru	equ	0xFF8
  3724                           tblptrh	equ	0xFF7
  3725                           tblptrl	equ	0xFF6
  3726                           tablat	equ	0xFF5
  3727                           prodh	equ	0xFF4
  3728                           prodl	equ	0xFF3
  3729                           intcon	equ	0xFF2
  3730                           postinc0	equ	0xFEE
  3731                           wreg	equ	0xFE8
  3732                           postinc1	equ	0xFE6
  3733                           postdec1	equ	0xFE5
  3734                           fsr1h	equ	0xFE2
  3735                           fsr1l	equ	0xFE1
  3736                           indf2	equ	0xFDF
  3737                           postinc2	equ	0xFDE
  3738                           postdec2	equ	0xFDD
  3739                           fsr2h	equ	0xFDA
  3740                           fsr2l	equ	0xFD9
  3741                           status	equ	0xFD8
  3742                           
  3743 ;; *************** function _comm_at *****************
  3744 ;; Defined at:
  3745 ;;		line 198 in file "PIC18F27J53-killifish_light02.c"
  3746 ;; Parameters:    Size  Location     Type
  3747 ;;  hand            2   59[BANK0 ] PTR unsigned char 
  3748 ;;		 -> caltime_now(7), 
  3749 ;;  min             1   61[BANK0 ] unsigned char 
  3750 ;;  max             1   62[BANK0 ] unsigned char 
  3751 ;;  value           1   63[BANK0 ] unsigned char 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;		None
  3754 ;; Return value:  Size  Location     Type
  3755 ;;		None               void
  3756 ;; Registers used:
  3757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3763 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3766 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3767 ;;Total ram usage:        5 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; Hardware stack levels required when called:    9
  3770 ;; This function calls:
  3771 ;;		_RTCC_from_caltime
  3772 ;;		_print_time
  3773 ;;		_tx_sends
  3774 ;; This function is called by:
  3775 ;;		_command_operation
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text9
  3780  0124FE                     __ptext9:
  3781                           	opt stack 0
  3782  0124FE                     _comm_at:
  3783                           	opt stack 19
  3784                           
  3785                           ;PIC18F27J53-killifish_light02.c: 199: if (value >= min && value <= max) {
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;incstack = 0
  3789  0124FE  0100               	movlb	0	; () banked
  3790  012500  519D               	movf	comm_at@min& (0+255),w,b
  3791  012502  0100               	movlb	0	; () banked
  3792  012504  5D9F               	subwf	comm_at@value& (0+255),w,b
  3793  012506  A0D8               	btfss	status,0,c
  3794  012508  D020               	goto	l4512
  3795                           
  3796                           ; BSR set to: 0
  3797  01250A  0100               	movlb	0	; () banked
  3798  01250C  519F               	movf	comm_at@value& (0+255),w,b
  3799  01250E  0100               	movlb	0	; () banked
  3800  012510  5D9E               	subwf	comm_at@max& (0+255),w,b
  3801  012512  A0D8               	btfss	status,0,c
  3802  012514  D01A               	goto	l4512
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;PIC18F27J53-killifish_light02.c: 200: *hand = value;
  3806  012516  C09B  FFD9         	movff	comm_at@hand,fsr2l
  3807  01251A  C09C  FFDA         	movff	comm_at@hand+1,fsr2h
  3808  01251E  C09F  FFDF         	movff	comm_at@value,indf2
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;PIC18F27J53-killifish_light02.c: 201: RTCC_from_caltime(&caltime_now, &epoch_now);
  3812  012522  0E2F               	movlw	low _caltime_now
  3813  012524  0100               	movlb	0	; () banked
  3814  012526  6F97               	movwf	RTCC_from_caltime@ct& (0+255),b
  3815  012528  0E00               	movlw	high _caltime_now
  3816  01252A  0100               	movlb	0	; () banked
  3817  01252C  6F98               	movwf	(RTCC_from_caltime@ct+1)& (0+255),b
  3818  01252E  0E36               	movlw	low _epoch_now
  3819  012530  0100               	movlb	0	; () banked
  3820  012532  6F99               	movwf	RTCC_from_caltime@ep& (0+255),b
  3821  012534  0E00               	movlw	high _epoch_now
  3822  012536  0100               	movlb	0	; () banked
  3823  012538  6F9A               	movwf	(RTCC_from_caltime@ep+1)& (0+255),b
  3824  01253A  EC96  F093         	call	_RTCC_from_caltime	;wreg free
  3825                           
  3826                           ;PIC18F27J53-killifish_light02.c: 202: time_change_flag = 1;
  3827  01253E  0E01               	movlw	1
  3828  012540  0100               	movlb	0	; () banked
  3829  012542  6FB2               	movwf	_time_change_flag& (0+255),b
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;PIC18F27J53-killifish_light02.c: 203: print_time();
  3833  012544  ECB7  F089         	call	_print_time	;wreg free
  3834                           
  3835                           ;PIC18F27J53-killifish_light02.c: 204: } else {
  3836  012548  0012               	return	
  3837  01254A                     l4512:
  3838                           
  3839                           ;PIC18F27J53-killifish_light02.c: 205: tx_sends("\terror\n");
  3840  01254A  0EA4               	movlw	low STR_8
  3841  01254C  0100               	movlb	0	; () banked
  3842  01254E  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  3843  012550  0EFF               	movlw	high STR_8
  3844  012552  0100               	movlb	0	; () banked
  3845  012554  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3846  012556  EC1A  F092         	call	_tx_sends	;wreg free
  3847  01255A  0012               	return	
  3848  01255C  0012               	return		;funcret
  3849  01255E                     __end_of_comm_at:
  3850                           	opt stack 0
  3851                           tblptru	equ	0xFF8
  3852                           tblptrh	equ	0xFF7
  3853                           tblptrl	equ	0xFF6
  3854                           tablat	equ	0xFF5
  3855                           prodh	equ	0xFF4
  3856                           prodl	equ	0xFF3
  3857                           intcon	equ	0xFF2
  3858                           postinc0	equ	0xFEE
  3859                           wreg	equ	0xFE8
  3860                           postinc1	equ	0xFE6
  3861                           postdec1	equ	0xFE5
  3862                           fsr1h	equ	0xFE2
  3863                           fsr1l	equ	0xFE1
  3864                           indf2	equ	0xFDF
  3865                           postinc2	equ	0xFDE
  3866                           postdec2	equ	0xFDD
  3867                           fsr2h	equ	0xFDA
  3868                           fsr2l	equ	0xFD9
  3869                           status	equ	0xFD8
  3870                           
  3871 ;; *************** function _print_time *****************
  3872 ;; Defined at:
  3873 ;;		line 175 in file "PIC18F27J53-killifish_light02.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;		None
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;		None
  3878 ;; Return value:  Size  Location     Type
  3879 ;;		None               void
  3880 ;; Registers used:
  3881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3891 ;;Total ram usage:        0 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; Hardware stack levels required when called:    8
  3894 ;; This function calls:
  3895 ;;		_RTCC_from_RTCC
  3896 ;;		_tx_send
  3897 ;;		_tx_send_dec
  3898 ;;		_tx_sends
  3899 ;; This function is called by:
  3900 ;;		_comm_at
  3901 ;;		_command_operation
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text10
  3906  01136E                     __ptext10:
  3907                           	opt stack 0
  3908  01136E                     _print_time:
  3909                           	opt stack 20
  3910                           
  3911                           ;PIC18F27J53-killifish_light02.c: 176: RTCC_from_RTCC(&caltime_now, &epoch_now);
  3912                           
  3913                           ;incstack = 0
  3914  01136E  0E2F               	movlw	low _caltime_now
  3915  011370  0100               	movlb	0	; () banked
  3916  011372  6F81               	movwf	RTCC_from_RTCC@ct& (0+255),b
  3917  011374  0E00               	movlw	high _caltime_now
  3918  011376  0100               	movlb	0	; () banked
  3919  011378  6F82               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  3920  01137A  0E36               	movlw	low _epoch_now
  3921  01137C  0100               	movlb	0	; () banked
  3922  01137E  6F83               	movwf	RTCC_from_RTCC@ep& (0+255),b
  3923  011380  0E00               	movlw	high _epoch_now
  3924  011382  0100               	movlb	0	; () banked
  3925  011384  6F84               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  3926  011386  EC35  F094         	call	_RTCC_from_RTCC	;wreg free
  3927                           
  3928                           ;PIC18F27J53-killifish_light02.c: 177: GIE = 0;
  3929  01138A  9EF2               	bcf	intcon,7,c	;volatile
  3930                           
  3931                           ;PIC18F27J53-killifish_light02.c: 178: tx_sends("    ");
  3932  01138C  0EB2               	movlw	low STR_2
  3933  01138E  0100               	movlb	0	; () banked
  3934  011390  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  3935  011392  0EFF               	movlw	high STR_2
  3936  011394  0100               	movlb	0	; () banked
  3937  011396  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3938  011398  EC1A  F092         	call	_tx_sends	;wreg free
  3939                           
  3940                           ;PIC18F27J53-killifish_light02.c: 179: tx_send_dec(20, edit_flag.flag.YY);
  3941  01139C  0E00               	movlw	0
  3942  01139E  BA2A               	btfsc	_edit_flag,5,c
  3943  0113A0  0E01               	movlw	1
  3944  0113A2  0100               	movlb	0	; () banked
  3945  0113A4  6F73               	movwf	tx_send_dec@edit& (0+255),b
  3946  0113A6  0E14               	movlw	20
  3947  0113A8  ECAF  F092         	call	_tx_send_dec
  3948                           
  3949                           ;PIC18F27J53-killifish_light02.c: 180: tx_send_dec(caltime_now.YY, edit_flag.flag.YY);
  3950  0113AC  0E00               	movlw	0
  3951  0113AE  BA2A               	btfsc	_edit_flag,5,c
  3952  0113B0  0E01               	movlw	1
  3953  0113B2  0100               	movlb	0	; () banked
  3954  0113B4  6F73               	movwf	tx_send_dec@edit& (0+255),b
  3955  0113B6  5035               	movf	_caltime_now+6,w,c
  3956  0113B8  ECAF  F092         	call	_tx_send_dec
  3957                           
  3958                           ;PIC18F27J53-killifish_light02.c: 181: tx_sends("/");
  3959  0113BC  0EE4               	movlw	low STR_3
  3960  0113BE  0100               	movlb	0	; () banked
  3961  0113C0  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  3962  0113C2  0EFF               	movlw	high STR_3
  3963  0113C4  0100               	movlb	0	; () banked
  3964  0113C6  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3965  0113C8  EC1A  F092         	call	_tx_sends	;wreg free
  3966                           
  3967                           ;PIC18F27J53-killifish_light02.c: 182: tx_send_dec(caltime_now.MM, edit_flag.flag.MM);
  3968  0113CC  0E00               	movlw	0
  3969  0113CE  B82A               	btfsc	_edit_flag,4,c
  3970  0113D0  0E01               	movlw	1
  3971  0113D2  0100               	movlb	0	; () banked
  3972  0113D4  6F73               	movwf	tx_send_dec@edit& (0+255),b
  3973  0113D6  5034               	movf	_caltime_now+5,w,c
  3974  0113D8  ECAF  F092         	call	_tx_send_dec
  3975                           
  3976                           ;PIC18F27J53-killifish_light02.c: 183: tx_sends("/");
  3977  0113DC  0EE4               	movlw	low STR_3
  3978  0113DE  0100               	movlb	0	; () banked
  3979  0113E0  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  3980  0113E2  0EFF               	movlw	high STR_3
  3981  0113E4  0100               	movlb	0	; () banked
  3982  0113E6  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3983  0113E8  EC1A  F092         	call	_tx_sends	;wreg free
  3984                           
  3985                           ;PIC18F27J53-killifish_light02.c: 184: tx_send_dec(caltime_now.DD, edit_flag.flag.DD);
  3986  0113EC  0E00               	movlw	0
  3987  0113EE  B62A               	btfsc	_edit_flag,3,c
  3988  0113F0  0E01               	movlw	1
  3989  0113F2  0100               	movlb	0	; () banked
  3990  0113F4  6F73               	movwf	tx_send_dec@edit& (0+255),b
  3991  0113F6  5033               	movf	_caltime_now+4,w,c
  3992  0113F8  ECAF  F092         	call	_tx_send_dec
  3993                           
  3994                           ;PIC18F27J53-killifish_light02.c: 185: tx_sends(" (");
  3995  0113FC  0EDC               	movlw	low STR_5
  3996  0113FE  0100               	movlb	0	; () banked
  3997  011400  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  3998  011402  0EFF               	movlw	high STR_5
  3999  011404  0100               	movlb	0	; () banked
  4000  011406  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4001  011408  EC1A  F092         	call	_tx_sends	;wreg free
  4002                           
  4003                           ;PIC18F27J53-killifish_light02.c: 186: tx_sends(weekday_3char[caltime_now.EE]);
  4004  01140C  5032               	movf	_caltime_now+3,w,c
  4005  01140E  0D04               	mullw	4
  4006  011410  0E2D               	movlw	low _weekday_3char
  4007  011412  24F3               	addwf	prodl,w,c
  4008  011414  0100               	movlb	0	; () banked
  4009  011416  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  4010  011418  0EFE               	movlw	high _weekday_3char
  4011  01141A  20F4               	addwfc	prodh,w,c
  4012  01141C  0100               	movlb	0	; () banked
  4013  01141E  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4014  011420  EC1A  F092         	call	_tx_sends	;wreg free
  4015                           
  4016                           ;PIC18F27J53-killifish_light02.c: 187: tx_sends(") ");
  4017  011424  0ED9               	movlw	low STR_6
  4018  011426  0100               	movlb	0	; () banked
  4019  011428  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  4020  01142A  0EFF               	movlw	high STR_6
  4021  01142C  0100               	movlb	0	; () banked
  4022  01142E  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4023  011430  EC1A  F092         	call	_tx_sends	;wreg free
  4024                           
  4025                           ;PIC18F27J53-killifish_light02.c: 188: tx_send_dec(caltime_now.hh, edit_flag.flag.hh);
  4026  011434  0E00               	movlw	0
  4027  011436  B42A               	btfsc	_edit_flag,2,c
  4028  011438  0E01               	movlw	1
  4029  01143A  0100               	movlb	0	; () banked
  4030  01143C  6F73               	movwf	tx_send_dec@edit& (0+255),b
  4031  01143E  5031               	movf	_caltime_now+2,w,c
  4032  011440  ECAF  F092         	call	_tx_send_dec
  4033                           
  4034                           ;PIC18F27J53-killifish_light02.c: 189: if (colon)tx_send(':');
  4035  011444  5028               	movf	_colon,w,c
  4036  011446  B4D8               	btfsc	status,2,c
  4037  011448  D004               	goto	l4408
  4038  01144A  0E3A               	movlw	58
  4039  01144C  EC92  F094         	call	_tx_send
  4040  011450  D004               	goto	l4410
  4041  011452                     l4408:
  4042                           
  4043                           ;PIC18F27J53-killifish_light02.c: 190: else tx_send(' ');
  4044  011452  0E20               	movlw	32
  4045  011454  EC92  F094         	call	_tx_send
  4046  011458  D000               	goto	l4410
  4047  01145A                     l4410:
  4048                           
  4049                           ;PIC18F27J53-killifish_light02.c: 191: tx_send_dec(caltime_now.mm, edit_flag.flag.mm);
  4050  01145A  0E00               	movlw	0
  4051  01145C  B22A               	btfsc	_edit_flag,1,c
  4052  01145E  0E01               	movlw	1
  4053  011460  0100               	movlb	0	; () banked
  4054  011462  6F73               	movwf	tx_send_dec@edit& (0+255),b
  4055  011464  5030               	movf	_caltime_now+1,w,c
  4056  011466  ECAF  F092         	call	_tx_send_dec
  4057                           
  4058                           ;PIC18F27J53-killifish_light02.c: 192: tx_sends("-");
  4059  01146A  0EE2               	movlw	low STR_7
  4060  01146C  0100               	movlb	0	; () banked
  4061  01146E  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  4062  011470  0EFF               	movlw	high STR_7
  4063  011472  0100               	movlb	0	; () banked
  4064  011474  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4065  011476  EC1A  F092         	call	_tx_sends	;wreg free
  4066                           
  4067                           ;PIC18F27J53-killifish_light02.c: 193: tx_send_dec(caltime_now.ss, edit_flag.flag.ss);
  4068  01147A  0E00               	movlw	0
  4069  01147C  B02A               	btfsc	_edit_flag,0,c
  4070  01147E  0E01               	movlw	1
  4071  011480  0100               	movlb	0	; () banked
  4072  011482  6F73               	movwf	tx_send_dec@edit& (0+255),b
  4073  011484  502F               	movf	_caltime_now,w,c
  4074  011486  ECAF  F092         	call	_tx_send_dec
  4075                           
  4076                           ;PIC18F27J53-killifish_light02.c: 194: tx_send('\n');
  4077  01148A  0E0A               	movlw	10
  4078  01148C  EC92  F094         	call	_tx_send
  4079                           
  4080                           ;PIC18F27J53-killifish_light02.c: 195: GIE = 1;
  4081  011490  8EF2               	bsf	intcon,7,c	;volatile
  4082  011492  0012               	return		;funcret
  4083  011494                     __end_of_print_time:
  4084                           	opt stack 0
  4085                           tblptru	equ	0xFF8
  4086                           tblptrh	equ	0xFF7
  4087                           tblptrl	equ	0xFF6
  4088                           tablat	equ	0xFF5
  4089                           prodh	equ	0xFF4
  4090                           prodl	equ	0xFF3
  4091                           intcon	equ	0xFF2
  4092                           postinc0	equ	0xFEE
  4093                           wreg	equ	0xFE8
  4094                           postinc1	equ	0xFE6
  4095                           postdec1	equ	0xFE5
  4096                           fsr1h	equ	0xFE2
  4097                           fsr1l	equ	0xFE1
  4098                           indf2	equ	0xFDF
  4099                           postinc2	equ	0xFDE
  4100                           postdec2	equ	0xFDD
  4101                           fsr2h	equ	0xFDA
  4102                           fsr2l	equ	0xFD9
  4103                           status	equ	0xFD8
  4104                           
  4105 ;; *************** function _tx_send_dec *****************
  4106 ;; Defined at:
  4107 ;;		line 168 in file "PIC18F27J53-killifish_light02.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;  dec             1    wreg     unsigned char 
  4110 ;;  edit            1   19[BANK0 ] unsigned char 
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;  dec             1   30[BANK0 ] unsigned char 
  4113 ;;  str            10   20[BANK0 ] unsigned char [10]
  4114 ;; Return value:  Size  Location     Type
  4115 ;;		None               void
  4116 ;; Registers used:
  4117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4123 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4124 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4126 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4127 ;;Total ram usage:       12 bytes
  4128 ;; Hardware stack levels used:    1
  4129 ;; Hardware stack levels required when called:    7
  4130 ;; This function calls:
  4131 ;;		_my_utoa
  4132 ;;		_tx_sends
  4133 ;; This function is called by:
  4134 ;;		_print_time
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           	psect	text11
  4139  01255E                     __ptext11:
  4140                           	opt stack 0
  4141  01255E                     _tx_send_dec:
  4142                           	opt stack 20
  4143                           
  4144                           ;incstack = 0
  4145                           ;tx_send_dec@dec stored from wreg
  4146  01255E  0100               	movlb	0	; () banked
  4147  012560  6F7E               	movwf	tx_send_dec@dec& (0+255),b
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;PIC18F27J53-killifish_light02.c: 169: uint8_t str[10];
  4151                           ;PIC18F27J53-killifish_light02.c: 170: my_utoa(&str, dec, 2);
  4152  012562  0E74               	movlw	low tx_send_dec@str
  4153  012564  0100               	movlb	0	; () banked
  4154  012566  6F6B               	movwf	my_utoa@str& (0+255),b
  4155  012568  0E00               	movlw	high tx_send_dec@str
  4156  01256A  0100               	movlb	0	; () banked
  4157  01256C  6F6C               	movwf	(my_utoa@str+1)& (0+255),b
  4158  01256E  C07E  F06D         	movff	tx_send_dec@dec,my_utoa@value
  4159  012572  0100               	movlb	0	; () banked
  4160  012574  6B6E               	clrf	(my_utoa@value+1)& (0+255),b
  4161  012576  0E02               	movlw	2
  4162  012578  0100               	movlb	0	; () banked
  4163  01257A  6F6F               	movwf	my_utoa@digits& (0+255),b
  4164  01257C  EC21  F090         	call	_my_utoa	;wreg free
  4165                           
  4166                           ;PIC18F27J53-killifish_light02.c: 171: if (edit && RTCCFGbits.HALFSEC)tx_sends("  ");
  4167  012580  0100               	movlb	0	; () banked
  4168  012582  5173               	movf	tx_send_dec@edit& (0+255),w,b
  4169  012584  0100               	movlb	0	; () banked
  4170  012586  B4D8               	btfsc	status,2,c
  4171  012588  D00C               	goto	l4372
  4172                           
  4173                           ; BSR set to: 0
  4174  01258A  010F               	movlb	15	; () banked
  4175  01258C  A73F               	btfss	63,3,b	;volatile
  4176  01258E  D009               	goto	l4372
  4177                           
  4178                           ; BSR set to: 15
  4179  012590  0EB4               	movlw	low (STR_2+2)
  4180  012592  0100               	movlb	0	; () banked
  4181  012594  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  4182  012596  0EFF               	movlw	high (STR_2+2)
  4183  012598  0100               	movlb	0	; () banked
  4184  01259A  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4185  01259C  EC1A  F092         	call	_tx_sends	;wreg free
  4186  0125A0  0012               	return	
  4187  0125A2                     l4372:
  4188                           
  4189                           ;PIC18F27J53-killifish_light02.c: 172: else tx_sends(str);
  4190  0125A2  0E74               	movlw	low tx_send_dec@str
  4191  0125A4  0100               	movlb	0	; () banked
  4192  0125A6  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  4193  0125A8  0E00               	movlw	high tx_send_dec@str
  4194  0125AA  0100               	movlb	0	; () banked
  4195  0125AC  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4196  0125AE  EC1A  F092         	call	_tx_sends	;wreg free
  4197  0125B2  0012               	return	
  4198  0125B4  0012               	return		;funcret
  4199  0125B6                     __end_of_tx_send_dec:
  4200                           	opt stack 0
  4201                           tblptru	equ	0xFF8
  4202                           tblptrh	equ	0xFF7
  4203                           tblptrl	equ	0xFF6
  4204                           tablat	equ	0xFF5
  4205                           prodh	equ	0xFF4
  4206                           prodl	equ	0xFF3
  4207                           intcon	equ	0xFF2
  4208                           postinc0	equ	0xFEE
  4209                           wreg	equ	0xFE8
  4210                           postinc1	equ	0xFE6
  4211                           postdec1	equ	0xFE5
  4212                           fsr1h	equ	0xFE2
  4213                           fsr1l	equ	0xFE1
  4214                           indf2	equ	0xFDF
  4215                           postinc2	equ	0xFDE
  4216                           postdec2	equ	0xFDD
  4217                           fsr2h	equ	0xFDA
  4218                           fsr2l	equ	0xFD9
  4219                           status	equ	0xFD8
  4220                           
  4221 ;; *************** function _tx_sends *****************
  4222 ;; Defined at:
  4223 ;;		line 227 in file "../My_header\My_header.h"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;  asciicode       2   10[BANK0 ] PTR const unsigned char 
  4226 ;;		 -> STR_40(4), STR_39(4), STR_38(2), STR_11(315), 
  4227 ;;		 -> STR_8(8), STR_7(2), STR_6(3), weekday_3char(28), 
  4228 ;;		 -> STR_5(3), STR_4(2), STR_3(2), STR_2(5), 
  4229 ;;		 -> STR_1(3), tx_send_dec@str(10), 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;		None
  4232 ;; Return value:  Size  Location     Type
  4233 ;;		None               void
  4234 ;; Registers used:
  4235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4241 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4244 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4245 ;;Total ram usage:        2 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; Hardware stack levels required when called:    6
  4248 ;; This function calls:
  4249 ;;		_ringbuf_put
  4250 ;; This function is called by:
  4251 ;;		_tx_send_dec
  4252 ;;		_print_time
  4253 ;;		_comm_at
  4254 ;;		_command_operation
  4255 ;;		_rx_loop
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text12
  4260  012434                     __ptext12:
  4261                           	opt stack 0
  4262  012434                     _tx_sends:
  4263                           	opt stack 23
  4264                           
  4265                           ;My_header\My_header.h: 228: while (*asciicode) {
  4266                           
  4267                           ;incstack = 0
  4268  012434  D01C               	goto	l4210
  4269  012436                     l4206:
  4270                           
  4271                           ;My_header\My_header.h: 229: ringbuf_put(&tx_buf, *asciicode++);
  4272  012436  0ED3               	movlw	low _tx_buf
  4273  012438  6E21               	movwf	ringbuf_put@rb,c
  4274  01243A  0E01               	movlw	high _tx_buf
  4275  01243C  6E22               	movwf	ringbuf_put@rb+1,c
  4276  01243E  C06A  FFF6         	movff	tx_sends@asciicode,tblptrl
  4277  012442  C06B  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  4278  012446  0E00               	movlw	low (__mediumconst shr (0+16))
  4279  012448  6EF8               	movwf	tblptru,c
  4280  01244A  0E0E               	movlw	(high __ramtop+-1)
  4281  01244C  64F7               	cpfsgt	tblptrh,c
  4282  01244E  D003               	bra	u4487
  4283  012450  0008               	tblrd		*
  4284  012452  50F5               	movf	tablat,w,c
  4285  012454  D005               	bra	u4480
  4286  012456                     u4487:
  4287  012456  CFF6 FFE1          	movff	tblptrl,fsr1l
  4288  01245A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4289  01245E  50E7               	movf	indf1,w,c
  4290  012460                     u4480:
  4291  012460  6E23               	movwf	ringbuf_put@asciicode,c
  4292  012462  ECF3  F08B         	call	_ringbuf_put	;wreg free
  4293  012466  0100               	movlb	0	; () banked
  4294  012468  4B6A               	infsnz	tx_sends@asciicode& (0+255),f,b
  4295  01246A  2B6B               	incf	(tx_sends@asciicode+1)& (0+255),f,b
  4296  01246C  D000               	goto	l4210
  4297  01246E                     l4210:
  4298  01246E  C06A  FFF6         	movff	tx_sends@asciicode,tblptrl
  4299  012472  C06B  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  4300  012476  0E00               	movlw	low (__mediumconst shr (0+16))
  4301  012478  6EF8               	movwf	tblptru,c
  4302  01247A  0E0E               	movlw	(high __ramtop+-1)
  4303  01247C  64F7               	cpfsgt	tblptrh,c
  4304  01247E  D003               	bra	u4497
  4305  012480  0008               	tblrd		*
  4306  012482  50F5               	movf	tablat,w,c
  4307  012484  D005               	bra	u4490
  4308  012486                     u4497:
  4309  012486  CFF6 FFE1          	movff	tblptrl,fsr1l
  4310  01248A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4311  01248E  50E7               	movf	indf1,w,c
  4312  012490                     u4490:
  4313  012490  0900               	iorlw	0
  4314  012492  A4D8               	btfss	status,2,c
  4315  012494  D7D0               	goto	l4206
  4316                           
  4317                           ;My_header\My_header.h: 230: }
  4318                           ;My_header\My_header.h: 231: PIE1bits.TXIE = 1;
  4319  012496  889D               	bsf	3997,4,c	;volatile
  4320  012498  0012               	return		;funcret
  4321  01249A                     __end_of_tx_sends:
  4322                           	opt stack 0
  4323                           tblptru	equ	0xFF8
  4324                           tblptrh	equ	0xFF7
  4325                           tblptrl	equ	0xFF6
  4326                           tablat	equ	0xFF5
  4327                           prodh	equ	0xFF4
  4328                           prodl	equ	0xFF3
  4329                           intcon	equ	0xFF2
  4330                           postinc0	equ	0xFEE
  4331                           wreg	equ	0xFE8
  4332                           indf1	equ	0xFE7
  4333                           postinc1	equ	0xFE6
  4334                           postdec1	equ	0xFE5
  4335                           fsr1h	equ	0xFE2
  4336                           fsr1l	equ	0xFE1
  4337                           indf2	equ	0xFDF
  4338                           postinc2	equ	0xFDE
  4339                           postdec2	equ	0xFDD
  4340                           fsr2h	equ	0xFDA
  4341                           fsr2l	equ	0xFD9
  4342                           status	equ	0xFD8
  4343                           
  4344 ;; *************** function _my_utoa *****************
  4345 ;; Defined at:
  4346 ;;		line 11 in file "../My_header\My_stdlib.h"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;  str             2   11[BANK0 ] PTR unsigned char 
  4349 ;;		 -> tx_send_dec@str(10), 
  4350 ;;  value           2   13[BANK0 ] unsigned int 
  4351 ;;  digits          1   15[BANK0 ] unsigned char 
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;  v               2   17[BANK0 ] unsigned int 
  4354 ;;  d               1   16[BANK0 ] unsigned char 
  4355 ;; Return value:  Size  Location     Type
  4356 ;;		None               void
  4357 ;; Registers used:
  4358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4364 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4365 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4367 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4368 ;;Total ram usage:        8 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; Hardware stack levels required when called:    5
  4371 ;; This function calls:
  4372 ;;		___lwdiv
  4373 ;;		___lwmod
  4374 ;; This function is called by:
  4375 ;;		_tx_send_dec
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           	psect	text13
  4380  012042                     __ptext13:
  4381                           	opt stack 0
  4382  012042                     _my_utoa:
  4383                           	opt stack 21
  4384                           
  4385                           ;My_header\My_stdlib.h: 12: uint16_t v;
  4386                           ;My_header\My_stdlib.h: 13: uint8_t d;
  4387                           ;My_header\My_stdlib.h: 14: while (digits--) {
  4388                           
  4389                           ;incstack = 0
  4390  012042  D037               	goto	l4272
  4391  012044                     l426:
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;My_header\My_stdlib.h: 15: v = value;
  4395  012044  C06D  F071         	movff	my_utoa@value,my_utoa@v
  4396  012048  C06E  F072         	movff	my_utoa@value+1,my_utoa@v+1
  4397                           
  4398                           ;My_header\My_stdlib.h: 16: d = digits;
  4399  01204C  C06F  F070         	movff	my_utoa@digits,my_utoa@d
  4400                           
  4401                           ;My_header\My_stdlib.h: 17: while (d--) {
  4402  012050  D010               	goto	l4264
  4403  012052                     l4262:
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;My_header\My_stdlib.h: 18: v /= 10;
  4407  012052  C071  F064         	movff	my_utoa@v,___lwdiv@dividend
  4408  012056  C072  F065         	movff	my_utoa@v+1,___lwdiv@dividend+1
  4409  01205A  0E00               	movlw	0
  4410  01205C  0100               	movlb	0	; () banked
  4411  01205E  6F67               	movwf	(___lwdiv@divisor+1)& (0+255),b
  4412  012060  0E0A               	movlw	10
  4413  012062  6F66               	movwf	___lwdiv@divisor& (0+255),b
  4414  012064  ECA8  F090         	call	___lwdiv	;wreg free
  4415  012068  C064  F071         	movff	?___lwdiv,my_utoa@v
  4416  01206C  C065  F072         	movff	?___lwdiv+1,my_utoa@v+1
  4417  012070  D000               	goto	l4264
  4418  012072                     l4264:
  4419  012072  0100               	movlb	0	; () banked
  4420  012074  0770               	decf	my_utoa@d& (0+255),f,b
  4421  012076  0100               	movlb	0	; () banked
  4422  012078  2970               	incf	my_utoa@d& (0+255),w,b
  4423  01207A  A4D8               	btfss	status,2,c
  4424  01207C  D7EA               	goto	l4262
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;My_header\My_stdlib.h: 19: }
  4428                           ;My_header\My_stdlib.h: 20: v %= 10;
  4429                           
  4430                           ; BSR set to: 0
  4431  01207E  C071  F01F         	movff	my_utoa@v,___lwmod@dividend
  4432  012082  C072  F020         	movff	my_utoa@v+1,___lwmod@dividend+1
  4433  012086  0E00               	movlw	0
  4434  012088  6E22               	movwf	___lwmod@divisor+1,c
  4435  01208A  0E0A               	movlw	10
  4436  01208C  6E21               	movwf	___lwmod@divisor,c
  4437  01208E  EC29  F093         	call	___lwmod	;wreg free
  4438  012092  C01F  F071         	movff	?___lwmod,my_utoa@v
  4439  012096  C020  F072         	movff	?___lwmod+1,my_utoa@v+1
  4440                           
  4441                           ;My_header\My_stdlib.h: 21: *str++ = '0' + v;
  4442  01209A  0100               	movlb	0	; () banked
  4443  01209C  5171               	movf	my_utoa@v& (0+255),w,b
  4444  01209E  0F30               	addlw	48
  4445  0120A0  C06B  FFD9         	movff	my_utoa@str,fsr2l
  4446  0120A4  C06C  FFDA         	movff	my_utoa@str+1,fsr2h
  4447  0120A8  6EDF               	movwf	indf2,c
  4448                           
  4449                           ; BSR set to: 0
  4450  0120AA  0100               	movlb	0	; () banked
  4451  0120AC  4B6B               	infsnz	my_utoa@str& (0+255),f,b
  4452  0120AE  2B6C               	incf	(my_utoa@str+1)& (0+255),f,b
  4453  0120B0  D000               	goto	l4272
  4454  0120B2                     l4272:
  4455  0120B2  0100               	movlb	0	; () banked
  4456  0120B4  076F               	decf	my_utoa@digits& (0+255),f,b
  4457  0120B6  0100               	movlb	0	; () banked
  4458  0120B8  296F               	incf	my_utoa@digits& (0+255),w,b
  4459  0120BA  A4D8               	btfss	status,2,c
  4460  0120BC  D7C3               	goto	l426
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;My_header\My_stdlib.h: 22: }
  4464                           ;My_header\My_stdlib.h: 23: *str = '\0';
  4465                           
  4466                           ; BSR set to: 0
  4467  0120BE  C06B  FFD9         	movff	my_utoa@str,fsr2l
  4468  0120C2  C06C  FFDA         	movff	my_utoa@str+1,fsr2h
  4469  0120C6  0E00               	movlw	0
  4470  0120C8  6EDF               	movwf	indf2,c
  4471                           
  4472                           ; BSR set to: 0
  4473  0120CA  0012               	return		;funcret
  4474  0120CC                     __end_of_my_utoa:
  4475                           	opt stack 0
  4476                           tblptru	equ	0xFF8
  4477                           tblptrh	equ	0xFF7
  4478                           tblptrl	equ	0xFF6
  4479                           tablat	equ	0xFF5
  4480                           prodh	equ	0xFF4
  4481                           prodl	equ	0xFF3
  4482                           intcon	equ	0xFF2
  4483                           postinc0	equ	0xFEE
  4484                           wreg	equ	0xFE8
  4485                           indf1	equ	0xFE7
  4486                           postinc1	equ	0xFE6
  4487                           postdec1	equ	0xFE5
  4488                           fsr1h	equ	0xFE2
  4489                           fsr1l	equ	0xFE1
  4490                           indf2	equ	0xFDF
  4491                           postinc2	equ	0xFDE
  4492                           postdec2	equ	0xFDD
  4493                           fsr2h	equ	0xFDA
  4494                           fsr2l	equ	0xFD9
  4495                           status	equ	0xFD8
  4496                           
  4497 ;; *************** function ___lwmod *****************
  4498 ;; Defined at:
  4499 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  dividend        2   30[COMRAM] unsigned int 
  4502 ;;  divisor         2   32[COMRAM] unsigned int 
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;  counter         1   34[COMRAM] unsigned char 
  4505 ;; Return value:  Size  Location     Type
  4506 ;;                  2   30[COMRAM] unsigned int 
  4507 ;; Registers used:
  4508 ;;		wreg, status,2, status,0
  4509 ;; Tracked objects:
  4510 ;;		On entry : 0/0
  4511 ;;		On exit  : 0/0
  4512 ;;		Unchanged: 0/0
  4513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4514 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4515 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4517 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4518 ;;Total ram usage:        5 bytes
  4519 ;; Hardware stack levels used:    1
  4520 ;; Hardware stack levels required when called:    4
  4521 ;; This function calls:
  4522 ;;		Nothing
  4523 ;; This function is called by:
  4524 ;;		_tx_sendn
  4525 ;;		_my_utoa
  4526 ;;		_ringbuf_put_num
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           
  4530                           	psect	text14
  4531  012652                     __ptext14:
  4532                           	opt stack 0
  4533  012652                     ___lwmod:
  4534                           	opt stack 24
  4535                           
  4536                           ; BSR set to: 0
  4537                           ;incstack = 0
  4538  012652  5021               	movf	___lwmod@divisor,w,c
  4539  012654  1022               	iorwf	___lwmod@divisor+1,w,c
  4540  012656  B4D8               	btfsc	status,2,c
  4541  012658  D01D               	goto	l1161
  4542  01265A  0E01               	movlw	1
  4543  01265C  6E23               	movwf	___lwmod@counter,c
  4544  01265E  D005               	goto	l4194
  4545  012660                     l4192:
  4546  012660  90D8               	bcf	status,0,c
  4547  012662  3621               	rlcf	___lwmod@divisor,f,c
  4548  012664  3622               	rlcf	___lwmod@divisor+1,f,c
  4549  012666  2A23               	incf	___lwmod@counter,f,c
  4550  012668  D000               	goto	l4194
  4551  01266A                     l4194:
  4552  01266A  BE22               	btfsc	___lwmod@divisor+1,7,c
  4553  01266C  D002               	goto	l4196
  4554  01266E  D7F8               	goto	l4192
  4555  012670  D000               	goto	l4196
  4556  012672                     l4196:
  4557  012672  5021               	movf	___lwmod@divisor,w,c
  4558  012674  5C1F               	subwf	___lwmod@dividend,w,c
  4559  012676  5022               	movf	___lwmod@divisor+1,w,c
  4560  012678  5820               	subwfb	___lwmod@dividend+1,w,c
  4561  01267A  A0D8               	btfss	status,0,c
  4562  01267C  D005               	goto	l4200
  4563  01267E  5021               	movf	___lwmod@divisor,w,c
  4564  012680  5E1F               	subwf	___lwmod@dividend,f,c
  4565  012682  5022               	movf	___lwmod@divisor+1,w,c
  4566  012684  5A20               	subwfb	___lwmod@dividend+1,f,c
  4567  012686  D000               	goto	l4200
  4568  012688                     l4200:
  4569  012688  90D8               	bcf	status,0,c
  4570  01268A  3222               	rrcf	___lwmod@divisor+1,f,c
  4571  01268C  3221               	rrcf	___lwmod@divisor,f,c
  4572  01268E  2E23               	decfsz	___lwmod@counter,f,c
  4573  012690  D7F0               	goto	l4196
  4574  012692  D000               	goto	l1161
  4575  012694                     l1161:
  4576  012694  C01F  F01F         	movff	___lwmod@dividend,?___lwmod
  4577  012698  C020  F020         	movff	___lwmod@dividend+1,?___lwmod+1
  4578  01269C  0012               	return		;funcret
  4579  01269E                     __end_of___lwmod:
  4580                           	opt stack 0
  4581                           tblptru	equ	0xFF8
  4582                           tblptrh	equ	0xFF7
  4583                           tblptrl	equ	0xFF6
  4584                           tablat	equ	0xFF5
  4585                           prodh	equ	0xFF4
  4586                           prodl	equ	0xFF3
  4587                           intcon	equ	0xFF2
  4588                           postinc0	equ	0xFEE
  4589                           wreg	equ	0xFE8
  4590                           indf1	equ	0xFE7
  4591                           postinc1	equ	0xFE6
  4592                           postdec1	equ	0xFE5
  4593                           fsr1h	equ	0xFE2
  4594                           fsr1l	equ	0xFE1
  4595                           indf2	equ	0xFDF
  4596                           postinc2	equ	0xFDE
  4597                           postdec2	equ	0xFDD
  4598                           fsr2h	equ	0xFDA
  4599                           fsr2l	equ	0xFD9
  4600                           status	equ	0xFD8
  4601                           
  4602 ;; *************** function _tx_send *****************
  4603 ;; Defined at:
  4604 ;;		line 222 in file "../My_header\My_header.h"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;  asciicode       1    wreg     const unsigned char 
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;  asciicode       1   35[COMRAM] const unsigned char 
  4609 ;; Return value:  Size  Location     Type
  4610 ;;		None               void
  4611 ;; Registers used:
  4612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4619 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4621 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4622 ;;Total ram usage:        1 bytes
  4623 ;; Hardware stack levels used:    1
  4624 ;; Hardware stack levels required when called:    6
  4625 ;; This function calls:
  4626 ;;		_ringbuf_put
  4627 ;; This function is called by:
  4628 ;;		_tx_sendn
  4629 ;;		_print_time
  4630 ;;		_rx_loop
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634                           	psect	text15
  4635  012924                     __ptext15:
  4636                           	opt stack 0
  4637  012924                     _tx_send:
  4638                           	opt stack 22
  4639                           
  4640                           ;incstack = 0
  4641                           ;tx_send@asciicode stored from wreg
  4642  012924  6E24               	movwf	tx_send@asciicode,c
  4643                           
  4644                           ;My_header\My_header.h: 223: ringbuf_put(&tx_buf, asciicode);
  4645  012926  0ED3               	movlw	low _tx_buf
  4646  012928  6E21               	movwf	ringbuf_put@rb,c
  4647  01292A  0E01               	movlw	high _tx_buf
  4648  01292C  6E22               	movwf	ringbuf_put@rb+1,c
  4649  01292E  C024  F023         	movff	tx_send@asciicode,ringbuf_put@asciicode
  4650  012932  ECF3  F08B         	call	_ringbuf_put	;wreg free
  4651                           
  4652                           ;My_header\My_header.h: 224: PIE1bits.TXIE = 1;
  4653  012936  889D               	bsf	3997,4,c	;volatile
  4654  012938  0012               	return		;funcret
  4655  01293A                     __end_of_tx_send:
  4656                           	opt stack 0
  4657                           tblptru	equ	0xFF8
  4658                           tblptrh	equ	0xFF7
  4659                           tblptrl	equ	0xFF6
  4660                           tablat	equ	0xFF5
  4661                           prodh	equ	0xFF4
  4662                           prodl	equ	0xFF3
  4663                           intcon	equ	0xFF2
  4664                           postinc0	equ	0xFEE
  4665                           wreg	equ	0xFE8
  4666                           indf1	equ	0xFE7
  4667                           postinc1	equ	0xFE6
  4668                           postdec1	equ	0xFE5
  4669                           fsr1h	equ	0xFE2
  4670                           fsr1l	equ	0xFE1
  4671                           indf2	equ	0xFDF
  4672                           postinc2	equ	0xFDE
  4673                           postdec2	equ	0xFDD
  4674                           fsr2h	equ	0xFDA
  4675                           fsr2l	equ	0xFD9
  4676                           status	equ	0xFD8
  4677                           
  4678 ;; *************** function _ringbuf_put *****************
  4679 ;; Defined at:
  4680 ;;		line 39 in file "../My_header\My_ringbuf.h"
  4681 ;; Parameters:    Size  Location     Type
  4682 ;;  rb              2   32[COMRAM] PTR struct ringbuf
  4683 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
  4684 ;;  asciicode       1   34[COMRAM] unsigned char 
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;		None
  4687 ;; Return value:  Size  Location     Type
  4688 ;;		None               void
  4689 ;; Registers used:
  4690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4691 ;; Tracked objects:
  4692 ;;		On entry : 0/0
  4693 ;;		On exit  : 0/0
  4694 ;;		Unchanged: 0/0
  4695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4696 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4698 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4699 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4700 ;;Total ram usage:        7 bytes
  4701 ;; Hardware stack levels used:    1
  4702 ;; Hardware stack levels required when called:    5
  4703 ;; This function calls:
  4704 ;;		_ringbuf_num
  4705 ;; This function is called by:
  4706 ;;		_tx_send
  4707 ;;		_tx_sends
  4708 ;;		_rx_loop
  4709 ;;		_ringbuf_put_num
  4710 ;;		_ringbuf_put_str
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           	psect	text16
  4715  0117E6                     __ptext16:
  4716                           	opt stack 0
  4717  0117E6                     _ringbuf_put:
  4718                           	opt stack 23
  4719                           
  4720                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
  4721                           
  4722                           ;incstack = 0
  4723  0117E6  C021  F01F         	movff	ringbuf_put@rb,ringbuf_num@rb
  4724  0117EA  C022  F020         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  4725  0117EE  EC4A  F08A         	call	_ringbuf_num	;wreg free
  4726  0117F2  EE20 F002          	lfsr	2,2
  4727  0117F6  5021               	movf	ringbuf_put@rb,w,c
  4728  0117F8  26D9               	addwf	fsr2l,f,c
  4729  0117FA  5022               	movf	ringbuf_put@rb+1,w,c
  4730  0117FC  22DA               	addwfc	fsr2h,f,c
  4731  0117FE  50DE               	movf	postinc2,w,c
  4732  011800  5C1F               	subwf	?_ringbuf_num,w,c
  4733  011802  50DE               	movf	postinc2,w,c
  4734  011804  5820               	subwfb	?_ringbuf_num+1,w,c
  4735  011806  B0D8               	btfsc	status,0,c
  4736  011808  0012               	return	
  4737                           
  4738                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
  4739  01180A  EE20 F004          	lfsr	2,4
  4740  01180E  5021               	movf	ringbuf_put@rb,w,c
  4741  011810  26D9               	addwf	fsr2l,f,c
  4742  011812  5022               	movf	ringbuf_put@rb+1,w,c
  4743  011814  22DA               	addwfc	fsr2h,f,c
  4744  011816  CFDE F066          	movff	postinc2,??_ringbuf_put
  4745  01181A  CFDD F067          	movff	postdec2,??_ringbuf_put+1
  4746  01181E  C021  FFD9         	movff	ringbuf_put@rb,fsr2l
  4747  011822  C022  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  4748  011826  CFDE F068          	movff	postinc2,??_ringbuf_put+2
  4749  01182A  CFDD F069          	movff	postdec2,??_ringbuf_put+3
  4750  01182E  0100               	movlb	0	; () banked
  4751  011830  5166               	movf	??_ringbuf_put& (0+255),w,b
  4752  011832  0100               	movlb	0	; () banked
  4753  011834  2568               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  4754  011836  6ED9               	movwf	fsr2l,c
  4755  011838  0100               	movlb	0	; () banked
  4756  01183A  5167               	movf	(??_ringbuf_put+1)& (0+255),w,b
  4757  01183C  0100               	movlb	0	; () banked
  4758  01183E  2169               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  4759  011840  6EDA               	movwf	fsr2h,c
  4760  011842  C023  FFDF         	movff	ringbuf_put@asciicode,indf2
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
  4764  011846  EE20 F002          	lfsr	2,2
  4765  01184A  5021               	movf	ringbuf_put@rb,w,c
  4766  01184C  26D9               	addwf	fsr2l,f,c
  4767  01184E  5022               	movf	ringbuf_put@rb+1,w,c
  4768  011850  22DA               	addwfc	fsr2h,f,c
  4769  011852  EE10 F004          	lfsr	1,4
  4770  011856  5021               	movf	ringbuf_put@rb,w,c
  4771  011858  26E1               	addwf	fsr1l,f,c
  4772  01185A  5022               	movf	ringbuf_put@rb+1,w,c
  4773  01185C  22E2               	addwfc	fsr1h,f,c
  4774  01185E  CFE6 F068          	movff	postinc1,??_ringbuf_put+2
  4775  011862  CFE5 F069          	movff	postdec1,??_ringbuf_put+3
  4776  011866  0E01               	movlw	1
  4777  011868  0100               	movlb	0	; () banked
  4778  01186A  2768               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  4779  01186C  0E00               	movlw	0
  4780  01186E  2369               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  4781  011870  50DE               	movf	postinc2,w,c
  4782  011872  0100               	movlb	0	; () banked
  4783  011874  5D68               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  4784  011876  50DE               	movf	postinc2,w,c
  4785  011878  0100               	movlb	0	; () banked
  4786  01187A  5969               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  4787  01187C  B0D8               	btfsc	status,0,c
  4788  01187E  D00A               	goto	l4072
  4789                           
  4790                           ; BSR set to: 0
  4791  011880  EE20 F004          	lfsr	2,4
  4792  011884  5021               	movf	ringbuf_put@rb,w,c
  4793  011886  26D9               	addwf	fsr2l,f,c
  4794  011888  5022               	movf	ringbuf_put@rb+1,w,c
  4795  01188A  22DA               	addwfc	fsr2h,f,c
  4796  01188C  2ADE               	incf	postinc2,f,c
  4797  01188E  0E00               	movlw	0
  4798  011890  22DD               	addwfc	postdec2,f,c
  4799  011892  0012               	return	
  4800  011894                     l4072:
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
  4804  011894  EE20 F004          	lfsr	2,4
  4805  011898  5021               	movf	ringbuf_put@rb,w,c
  4806  01189A  26D9               	addwf	fsr2l,f,c
  4807  01189C  5022               	movf	ringbuf_put@rb+1,w,c
  4808  01189E  22DA               	addwfc	fsr2h,f,c
  4809  0118A0  0E00               	movlw	0
  4810  0118A2  6EDE               	movwf	postinc2,c
  4811  0118A4  0E00               	movlw	0
  4812  0118A6  6EDD               	movwf	postdec2,c
  4813                           
  4814                           ; BSR set to: 0
  4815  0118A8  0012               	return	
  4816                           
  4817                           ; BSR set to: 0
  4818  0118AA  0012               	return		;funcret
  4819  0118AC                     __end_of_ringbuf_put:
  4820                           	opt stack 0
  4821                           tblptru	equ	0xFF8
  4822                           tblptrh	equ	0xFF7
  4823                           tblptrl	equ	0xFF6
  4824                           tablat	equ	0xFF5
  4825                           prodh	equ	0xFF4
  4826                           prodl	equ	0xFF3
  4827                           intcon	equ	0xFF2
  4828                           postinc0	equ	0xFEE
  4829                           wreg	equ	0xFE8
  4830                           indf1	equ	0xFE7
  4831                           postinc1	equ	0xFE6
  4832                           postdec1	equ	0xFE5
  4833                           fsr1h	equ	0xFE2
  4834                           fsr1l	equ	0xFE1
  4835                           indf2	equ	0xFDF
  4836                           postinc2	equ	0xFDE
  4837                           postdec2	equ	0xFDD
  4838                           fsr2h	equ	0xFDA
  4839                           fsr2l	equ	0xFD9
  4840                           status	equ	0xFD8
  4841                           
  4842 ;; *************** function _ringbuf_num *****************
  4843 ;; Defined at:
  4844 ;;		line 31 in file "../My_header\My_ringbuf.h"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;  rb              2   30[COMRAM] PTR struct ringbuf
  4847 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;		None
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  2   30[COMRAM] unsigned int 
  4852 ;; Registers used:
  4853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4859 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4861 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4862 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4863 ;;Total ram usage:        8 bytes
  4864 ;; Hardware stack levels used:    1
  4865 ;; Hardware stack levels required when called:    4
  4866 ;; This function calls:
  4867 ;;		Nothing
  4868 ;; This function is called by:
  4869 ;;		_ringbuf_put
  4870 ;;		_ringbuf_pop
  4871 ;;		_ringbuf_backspace
  4872 ;;		_rx_loop
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876                           	psect	text17
  4877  011494                     __ptext17:
  4878                           	opt stack 0
  4879  011494                     _ringbuf_num:
  4880                           	opt stack 23
  4881                           
  4882                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
  4883                           
  4884                           ;incstack = 0
  4885  011494  EE20 F006          	lfsr	2,6
  4886  011498  501F               	movf	ringbuf_num@rb,w,c
  4887  01149A  26D9               	addwf	fsr2l,f,c
  4888  01149C  5020               	movf	ringbuf_num@rb+1,w,c
  4889  01149E  22DA               	addwfc	fsr2h,f,c
  4890  0114A0  EE10 F004          	lfsr	1,4
  4891  0114A4  501F               	movf	ringbuf_num@rb,w,c
  4892  0114A6  26E1               	addwf	fsr1l,f,c
  4893  0114A8  5020               	movf	ringbuf_num@rb+1,w,c
  4894  0114AA  22E2               	addwfc	fsr1h,f,c
  4895  0114AC  50DE               	movf	postinc2,w,c
  4896  0114AE  5CE6               	subwf	postinc1,w,c
  4897  0114B0  50DE               	movf	postinc2,w,c
  4898  0114B2  58E6               	subwfb	postinc1,w,c
  4899  0114B4  A0D8               	btfss	status,0,c
  4900  0114B6  D024               	goto	l4024
  4901                           
  4902                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
  4903  0114B8  EE20 F004          	lfsr	2,4
  4904  0114BC  501F               	movf	ringbuf_num@rb,w,c
  4905  0114BE  26D9               	addwf	fsr2l,f,c
  4906  0114C0  5020               	movf	ringbuf_num@rb+1,w,c
  4907  0114C2  22DA               	addwfc	fsr2h,f,c
  4908  0114C4  CFDE F060          	movff	postinc2,??_ringbuf_num
  4909  0114C8  CFDD F061          	movff	postdec2,??_ringbuf_num+1
  4910  0114CC  EE20 F006          	lfsr	2,6
  4911  0114D0  501F               	movf	ringbuf_num@rb,w,c
  4912  0114D2  26D9               	addwf	fsr2l,f,c
  4913  0114D4  5020               	movf	ringbuf_num@rb+1,w,c
  4914  0114D6  22DA               	addwfc	fsr2h,f,c
  4915  0114D8  CFDE F062          	movff	postinc2,??_ringbuf_num+2
  4916  0114DC  CFDD F063          	movff	postdec2,??_ringbuf_num+3
  4917  0114E0  0100               	movlb	0	; () banked
  4918  0114E2  1F62               	comf	(??_ringbuf_num+2)& (0+255),f,b
  4919  0114E4  1F63               	comf	(??_ringbuf_num+3)& (0+255),f,b
  4920  0114E6  4B62               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
  4921  0114E8  2B63               	incf	(??_ringbuf_num+3)& (0+255),f,b
  4922  0114EA  0100               	movlb	0	; () banked
  4923  0114EC  5160               	movf	??_ringbuf_num& (0+255),w,b
  4924  0114EE  0100               	movlb	0	; () banked
  4925  0114F0  2562               	addwf	(??_ringbuf_num+2)& (0+255),w,b
  4926  0114F2  6E1F               	movwf	?_ringbuf_num,c
  4927  0114F4  0100               	movlb	0	; () banked
  4928  0114F6  5161               	movf	(??_ringbuf_num+1)& (0+255),w,b
  4929  0114F8  0100               	movlb	0	; () banked
  4930  0114FA  2163               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
  4931  0114FC  6E20               	movwf	?_ringbuf_num+1,c
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;My_header\My_ringbuf.h: 34: } else {
  4935                           
  4936                           ; BSR set to: 0
  4937  0114FE  0012               	return	
  4938  011500                     l4024:
  4939                           
  4940                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
  4941  011500  EE20 F004          	lfsr	2,4
  4942  011504  501F               	movf	ringbuf_num@rb,w,c
  4943  011506  26D9               	addwf	fsr2l,f,c
  4944  011508  5020               	movf	ringbuf_num@rb+1,w,c
  4945  01150A  22DA               	addwfc	fsr2h,f,c
  4946  01150C  CFDE F060          	movff	postinc2,??_ringbuf_num
  4947  011510  CFDD F061          	movff	postdec2,??_ringbuf_num+1
  4948  011514  EE20 F002          	lfsr	2,2
  4949  011518  501F               	movf	ringbuf_num@rb,w,c
  4950  01151A  26D9               	addwf	fsr2l,f,c
  4951  01151C  5020               	movf	ringbuf_num@rb+1,w,c
  4952  01151E  22DA               	addwfc	fsr2h,f,c
  4953  011520  CFDE F062          	movff	postinc2,??_ringbuf_num+2
  4954  011524  CFDD F063          	movff	postdec2,??_ringbuf_num+3
  4955  011528  EE20 F006          	lfsr	2,6
  4956  01152C  501F               	movf	ringbuf_num@rb,w,c
  4957  01152E  26D9               	addwf	fsr2l,f,c
  4958  011530  5020               	movf	ringbuf_num@rb+1,w,c
  4959  011532  22DA               	addwfc	fsr2h,f,c
  4960  011534  CFDE F064          	movff	postinc2,??_ringbuf_num+4
  4961  011538  CFDD F065          	movff	postdec2,??_ringbuf_num+5
  4962  01153C  0100               	movlb	0	; () banked
  4963  01153E  1F64               	comf	(??_ringbuf_num+4)& (0+255),f,b
  4964  011540  1F65               	comf	(??_ringbuf_num+5)& (0+255),f,b
  4965  011542  4B64               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
  4966  011544  2B65               	incf	(??_ringbuf_num+5)& (0+255),f,b
  4967  011546  0100               	movlb	0	; () banked
  4968  011548  5162               	movf	(??_ringbuf_num+2)& (0+255),w,b
  4969  01154A  0100               	movlb	0	; () banked
  4970  01154C  2764               	addwf	(??_ringbuf_num+4)& (0+255),f,b
  4971  01154E  0100               	movlb	0	; () banked
  4972  011550  5163               	movf	(??_ringbuf_num+3)& (0+255),w,b
  4973  011552  0100               	movlb	0	; () banked
  4974  011554  2365               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
  4975  011556  0100               	movlb	0	; () banked
  4976  011558  5160               	movf	??_ringbuf_num& (0+255),w,b
  4977  01155A  0100               	movlb	0	; () banked
  4978  01155C  2564               	addwf	(??_ringbuf_num+4)& (0+255),w,b
  4979  01155E  6E1F               	movwf	?_ringbuf_num,c
  4980  011560  0100               	movlb	0	; () banked
  4981  011562  5161               	movf	(??_ringbuf_num+1)& (0+255),w,b
  4982  011564  0100               	movlb	0	; () banked
  4983  011566  2165               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
  4984  011568  6E20               	movwf	?_ringbuf_num+1,c
  4985                           
  4986                           ; BSR set to: 0
  4987  01156A  0012               	return	
  4988                           
  4989                           ; BSR set to: 0
  4990                           
  4991                           ; BSR set to: 0
  4992  01156C  0012               	return		;funcret
  4993  01156E                     __end_of_ringbuf_num:
  4994                           	opt stack 0
  4995                           tblptru	equ	0xFF8
  4996                           tblptrh	equ	0xFF7
  4997                           tblptrl	equ	0xFF6
  4998                           tablat	equ	0xFF5
  4999                           prodh	equ	0xFF4
  5000                           prodl	equ	0xFF3
  5001                           intcon	equ	0xFF2
  5002                           postinc0	equ	0xFEE
  5003                           wreg	equ	0xFE8
  5004                           indf1	equ	0xFE7
  5005                           postinc1	equ	0xFE6
  5006                           postdec1	equ	0xFE5
  5007                           fsr1h	equ	0xFE2
  5008                           fsr1l	equ	0xFE1
  5009                           indf2	equ	0xFDF
  5010                           postinc2	equ	0xFDE
  5011                           postdec2	equ	0xFDD
  5012                           fsr2h	equ	0xFDA
  5013                           fsr2l	equ	0xFD9
  5014                           status	equ	0xFD8
  5015                           
  5016 ;; *************** function _RTCC_from_caltime *****************
  5017 ;; Defined at:
  5018 ;;		line 236 in file "../My_header\My_RTCC.h"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;  ct              2   55[BANK0 ] PTR struct .
  5021 ;;		 -> caltime_now(7), 
  5022 ;;  ep              2   57[BANK0 ] PTR unsigned long 
  5023 ;;		 -> epoch_now(4), 
  5024 ;; Auto vars:     Size  Location     Type
  5025 ;;		None
  5026 ;; Return value:  Size  Location     Type
  5027 ;;		None               void
  5028 ;; Registers used:
  5029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5035 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5038 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5039 ;;Total ram usage:        4 bytes
  5040 ;; Hardware stack levels used:    1
  5041 ;; Hardware stack levels required when called:    7
  5042 ;; This function calls:
  5043 ;;		_caltime_to_RTCC
  5044 ;;		_caltime_to_epoch
  5045 ;;		_epoch_to_caltime
  5046 ;; This function is called by:
  5047 ;;		_comm_at
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           	psect	text18
  5052  01272C                     __ptext18:
  5053                           	opt stack 0
  5054  01272C                     _RTCC_from_caltime:
  5055                           	opt stack 20
  5056                           
  5057                           ;My_header\My_RTCC.h: 237: caltime_to_epoch(ct, ep);
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;incstack = 0
  5061  01272C  C097  F072         	movff	RTCC_from_caltime@ct,caltime_to_epoch@ct
  5062  012730  C098  F073         	movff	RTCC_from_caltime@ct+1,caltime_to_epoch@ct+1
  5063  012734  C099  F074         	movff	RTCC_from_caltime@ep,caltime_to_epoch@ep
  5064  012738  C09A  F075         	movff	RTCC_from_caltime@ep+1,caltime_to_epoch@ep+1
  5065  01273C  EC8E  F085         	call	_caltime_to_epoch	;wreg free
  5066                           
  5067                           ;My_header\My_RTCC.h: 238: epoch_to_caltime(ct, ep);
  5068  012740  C097  F087         	movff	RTCC_from_caltime@ct,epoch_to_caltime@ct
  5069  012744  C098  F088         	movff	RTCC_from_caltime@ct+1,epoch_to_caltime@ct+1
  5070  012748  C099  F089         	movff	RTCC_from_caltime@ep,epoch_to_caltime@ep
  5071  01274C  C09A  F08A         	movff	RTCC_from_caltime@ep+1,epoch_to_caltime@ep+1
  5072  012750  EC17  F088         	call	_epoch_to_caltime	;wreg free
  5073                           
  5074                           ;My_header\My_RTCC.h: 239: caltime_to_RTCC(ct);
  5075  012754  C097  F064         	movff	RTCC_from_caltime@ct,caltime_to_RTCC@ct
  5076  012758  C098  F065         	movff	RTCC_from_caltime@ct+1,caltime_to_RTCC@ct+1
  5077  01275C  EC22  F08B         	call	_caltime_to_RTCC	;wreg free
  5078  012760  0012               	return		;funcret
  5079  012762                     __end_of_RTCC_from_caltime:
  5080                           	opt stack 0
  5081                           tblptru	equ	0xFF8
  5082                           tblptrh	equ	0xFF7
  5083                           tblptrl	equ	0xFF6
  5084                           tablat	equ	0xFF5
  5085                           prodh	equ	0xFF4
  5086                           prodl	equ	0xFF3
  5087                           intcon	equ	0xFF2
  5088                           postinc0	equ	0xFEE
  5089                           wreg	equ	0xFE8
  5090                           indf1	equ	0xFE7
  5091                           postinc1	equ	0xFE6
  5092                           postdec1	equ	0xFE5
  5093                           fsr1h	equ	0xFE2
  5094                           fsr1l	equ	0xFE1
  5095                           indf2	equ	0xFDF
  5096                           postinc2	equ	0xFDE
  5097                           postdec2	equ	0xFDD
  5098                           fsr2h	equ	0xFDA
  5099                           fsr2l	equ	0xFD9
  5100                           status	equ	0xFD8
  5101                           
  5102 ;; *************** function _normal_loop *****************
  5103 ;; Defined at:
  5104 ;;		line 340 in file "PIC18F27J53-killifish_light02.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;		None
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;  scan            2   41[BANK0 ] unsigned int 
  5109 ;;  i               1   46[BANK0 ] unsigned char 
  5110 ;;  i               1   45[BANK0 ] unsigned char 
  5111 ;;  temp            4   47[BANK0 ] unsigned long 
  5112 ;;  value           1   44[BANK0 ] unsigned char 
  5113 ;;  value           1   43[BANK0 ] unsigned char 
  5114 ;; Return value:  Size  Location     Type
  5115 ;;		None               void
  5116 ;; Registers used:
  5117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5124 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5125 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5126 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5127 ;;Total ram usage:       14 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; Hardware stack levels required when called:    8
  5130 ;; This function calls:
  5131 ;;		_ADC
  5132 ;;		_PWM_set
  5133 ;;		_RTCC_from_RTCC
  5134 ;;		___lldiv
  5135 ;;		___llmod
  5136 ;;		___lmul
  5137 ;;		___lwdiv
  5138 ;;		___wmul
  5139 ;; This function is called by:
  5140 ;;		_main
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144                           	psect	text19
  5145  01050E                     __ptext19:
  5146                           	opt stack 0
  5147  01050E                     _normal_loop:
  5148                           	opt stack 22
  5149                           
  5150                           ;PIC18F27J53-killifish_light02.c: 341: if (time_change_flag) {
  5151                           
  5152                           ;incstack = 0
  5153  01050E  0100               	movlb	0	; () banked
  5154  010510  51B2               	movf	_time_change_flag& (0+255),w,b
  5155  010512  B4D8               	btfsc	status,2,c
  5156  010514  D0D9               	goto	l4956
  5157                           
  5158                           ; BSR set to: 0
  5159                           ;PIC18F27J53-killifish_light02.c: 342: time_change_flag = 0;
  5160  010516  0E00               	movlw	0
  5161  010518  0100               	movlb	0	; () banked
  5162  01051A  6FB2               	movwf	_time_change_flag& (0+255),b
  5163                           
  5164                           ; BSR set to: 0
  5165                           ;PIC18F27J53-killifish_light02.c: 343: RTCC_from_RTCC(&caltime_now, &epoch_now);
  5166  01051C  0E2F               	movlw	low _caltime_now
  5167  01051E  0100               	movlb	0	; () banked
  5168  010520  6F81               	movwf	RTCC_from_RTCC@ct& (0+255),b
  5169  010522  0E00               	movlw	high _caltime_now
  5170  010524  0100               	movlb	0	; () banked
  5171  010526  6F82               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  5172  010528  0E36               	movlw	low _epoch_now
  5173  01052A  0100               	movlb	0	; () banked
  5174  01052C  6F83               	movwf	RTCC_from_RTCC@ep& (0+255),b
  5175  01052E  0E00               	movlw	high _epoch_now
  5176  010530  0100               	movlb	0	; () banked
  5177  010532  6F84               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  5178  010534  EC35  F094         	call	_RTCC_from_RTCC	;wreg free
  5179                           
  5180                           ;PIC18F27J53-killifish_light02.c: 344: if (light_mode == TIME_SYNC_mode) {
  5181  010538  0100               	movlb	0	; () banked
  5182  01053A  51B0               	movf	_light_mode& (0+255),w,b
  5183  01053C  A4D8               	btfss	status,2,c
  5184  01053E  D0C4               	goto	l4956
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;PIC18F27J53-killifish_light02.c: 345: epoch_t temp = (epoch_t) epoch_now % ((epoch_t)60
      +                          *60*24);
  5188  010540  C036  F060         	movff	_epoch_now,___llmod@dividend
  5189  010544  C037  F061         	movff	_epoch_now+1,___llmod@dividend+1
  5190  010548  C038  F062         	movff	_epoch_now+2,___llmod@dividend+2
  5191  01054C  C039  F063         	movff	_epoch_now+3,___llmod@dividend+3
  5192  010550  0E80               	movlw	128
  5193  010552  0100               	movlb	0	; () banked
  5194  010554  6F64               	movwf	___llmod@divisor& (0+255),b
  5195  010556  0E51               	movlw	81
  5196  010558  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  5197  01055A  0E01               	movlw	1
  5198  01055C  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  5199  01055E  0E00               	movlw	0
  5200  010560  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  5201  010562  EC84  F08F         	call	___llmod	;wreg free
  5202  010566  C060  F08F         	movff	?___llmod,normal_loop@temp
  5203  01056A  C061  F090         	movff	?___llmod+1,normal_loop@temp+1
  5204  01056E  C062  F091         	movff	?___llmod+2,normal_loop@temp+2
  5205  010572  C063  F092         	movff	?___llmod+3,normal_loop@temp+3
  5206                           
  5207                           ;PIC18F27J53-killifish_light02.c: 346: if (temp > ((epoch_t)60*60*24) / 2)temp = ((epoch
      +                          _t)60*60*24) - temp;
  5208  010576  0100               	movlb	0	; () banked
  5209  010578  5192               	movf	(normal_loop@temp+3)& (0+255),w,b
  5210  01057A  0100               	movlb	0	; () banked
  5211  01057C  1191               	iorwf	(normal_loop@temp+2)& (0+255),w,b
  5212  01057E  E108               	bnz	u5530
  5213  010580  0EC1               	movlw	193
  5214  010582  0100               	movlb	0	; () banked
  5215  010584  5D8F               	subwf	normal_loop@temp& (0+255),w,b
  5216  010586  0EA8               	movlw	168
  5217  010588  0100               	movlb	0	; () banked
  5218  01058A  5990               	subwfb	(normal_loop@temp+1)& (0+255),w,b
  5219  01058C  A0D8               	btfss	status,0,c
  5220  01058E  D027               	goto	l4942
  5221  010590                     u5530:
  5222                           
  5223                           ; BSR set to: 0
  5224  010590  C08F  F085         	movff	normal_loop@temp,??_normal_loop
  5225  010594  C090  F086         	movff	normal_loop@temp+1,??_normal_loop+1
  5226  010598  C091  F087         	movff	normal_loop@temp+2,??_normal_loop+2
  5227  01059C  C092  F088         	movff	normal_loop@temp+3,??_normal_loop+3
  5228  0105A0  0100               	movlb	0	; () banked
  5229  0105A2  1F85               	comf	??_normal_loop& (0+255),f,b
  5230  0105A4  1F86               	comf	(??_normal_loop+1)& (0+255),f,b
  5231  0105A6  1F87               	comf	(??_normal_loop+2)& (0+255),f,b
  5232  0105A8  1F88               	comf	(??_normal_loop+3)& (0+255),f,b
  5233  0105AA  2B85               	incf	??_normal_loop& (0+255),f,b
  5234  0105AC  0E00               	movlw	0
  5235  0105AE  2386               	addwfc	(??_normal_loop+1)& (0+255),f,b
  5236  0105B0  2387               	addwfc	(??_normal_loop+2)& (0+255),f,b
  5237  0105B2  2388               	addwfc	(??_normal_loop+3)& (0+255),f,b
  5238  0105B4  0E80               	movlw	128
  5239  0105B6  0100               	movlb	0	; () banked
  5240  0105B8  2585               	addwf	??_normal_loop& (0+255),w,b
  5241  0105BA  0100               	movlb	0	; () banked
  5242  0105BC  6F8F               	movwf	normal_loop@temp& (0+255),b
  5243  0105BE  0E51               	movlw	81
  5244  0105C0  0100               	movlb	0	; () banked
  5245  0105C2  2186               	addwfc	(??_normal_loop+1)& (0+255),w,b
  5246  0105C4  0100               	movlb	0	; () banked
  5247  0105C6  6F90               	movwf	(normal_loop@temp+1)& (0+255),b
  5248  0105C8  0E01               	movlw	1
  5249  0105CA  0100               	movlb	0	; () banked
  5250  0105CC  2187               	addwfc	(??_normal_loop+2)& (0+255),w,b
  5251  0105CE  0100               	movlb	0	; () banked
  5252  0105D0  6F91               	movwf	(normal_loop@temp+2)& (0+255),b
  5253  0105D2  0E00               	movlw	0
  5254  0105D4  0100               	movlb	0	; () banked
  5255  0105D6  2188               	addwfc	(??_normal_loop+3)& (0+255),w,b
  5256  0105D8  0100               	movlb	0	; () banked
  5257  0105DA  6F92               	movwf	(normal_loop@temp+3)& (0+255),b
  5258  0105DC  D000               	goto	l4942
  5259  0105DE                     l4942:
  5260                           
  5261                           ; BSR set to: 0
  5262                           ;PIC18F27J53-killifish_light02.c: 347: temp = temp * 2 * 100 / ((epoch_t)60*60*24);
  5263  0105DE  90D8               	bcf	status,0,c
  5264  0105E0  0100               	movlb	0	; () banked
  5265  0105E2  358F               	rlcf	normal_loop@temp& (0+255),w,b
  5266  0105E4  0100               	movlb	0	; () banked
  5267  0105E6  6F66               	movwf	___lmul@multiplier& (0+255),b
  5268  0105E8  0100               	movlb	0	; () banked
  5269  0105EA  3590               	rlcf	(normal_loop@temp+1)& (0+255),w,b
  5270  0105EC  0100               	movlb	0	; () banked
  5271  0105EE  6F67               	movwf	(___lmul@multiplier+1)& (0+255),b
  5272  0105F0  0100               	movlb	0	; () banked
  5273  0105F2  3591               	rlcf	(normal_loop@temp+2)& (0+255),w,b
  5274  0105F4  0100               	movlb	0	; () banked
  5275  0105F6  6F68               	movwf	(___lmul@multiplier+2)& (0+255),b
  5276  0105F8  0100               	movlb	0	; () banked
  5277  0105FA  3592               	rlcf	(normal_loop@temp+3)& (0+255),w,b
  5278  0105FC  0100               	movlb	0	; () banked
  5279  0105FE  6F69               	movwf	(___lmul@multiplier+3)& (0+255),b
  5280  010600  0E64               	movlw	100
  5281  010602  0100               	movlb	0	; () banked
  5282  010604  6F6A               	movwf	___lmul@multiplicand& (0+255),b
  5283  010606  0E00               	movlw	0
  5284  010608  6F6B               	movwf	(___lmul@multiplicand+1)& (0+255),b
  5285  01060A  0E00               	movlw	0
  5286  01060C  6F6C               	movwf	(___lmul@multiplicand+2)& (0+255),b
  5287  01060E  0E00               	movlw	0
  5288  010610  6F6D               	movwf	(___lmul@multiplicand+3)& (0+255),b
  5289  010612  EC6B  F091         	call	___lmul	;wreg free
  5290  010616  C066  F072         	movff	?___lmul,___lldiv@dividend
  5291  01061A  C067  F073         	movff	?___lmul+1,___lldiv@dividend+1
  5292  01061E  C068  F074         	movff	?___lmul+2,___lldiv@dividend+2
  5293  010622  C069  F075         	movff	?___lmul+3,___lldiv@dividend+3
  5294  010626  0E80               	movlw	128
  5295  010628  0100               	movlb	0	; () banked
  5296  01062A  6F76               	movwf	___lldiv@divisor& (0+255),b
  5297  01062C  0E51               	movlw	81
  5298  01062E  6F77               	movwf	(___lldiv@divisor+1)& (0+255),b
  5299  010630  0E01               	movlw	1
  5300  010632  6F78               	movwf	(___lldiv@divisor+2)& (0+255),b
  5301  010634  0E00               	movlw	0
  5302  010636  6F79               	movwf	(___lldiv@divisor+3)& (0+255),b
  5303  010638  EC56  F08C         	call	___lldiv	;wreg free
  5304  01063C  C072  F08F         	movff	?___lldiv,normal_loop@temp
  5305  010640  C073  F090         	movff	?___lldiv+1,normal_loop@temp+1
  5306  010644  C074  F091         	movff	?___lldiv+2,normal_loop@temp+2
  5307  010648  C075  F092         	movff	?___lldiv+3,normal_loop@temp+3
  5308                           
  5309                           ;PIC18F27J53-killifish_light02.c: 348: temp *= 2;
  5310  01064C  0100               	movlb	0	; () banked
  5311  01064E  90D8               	bcf	status,0,c
  5312  010650  378F               	rlcf	normal_loop@temp& (0+255),f,b
  5313  010652  3790               	rlcf	(normal_loop@temp+1)& (0+255),f,b
  5314  010654  3791               	rlcf	(normal_loop@temp+2)& (0+255),f,b
  5315  010656  3792               	rlcf	(normal_loop@temp+3)& (0+255),f,b
  5316                           
  5317                           ; BSR set to: 0
  5318                           ;PIC18F27J53-killifish_light02.c: 349: temp /= 3;
  5319  010658  C08F  F072         	movff	normal_loop@temp,___lldiv@dividend
  5320  01065C  C090  F073         	movff	normal_loop@temp+1,___lldiv@dividend+1
  5321  010660  C091  F074         	movff	normal_loop@temp+2,___lldiv@dividend+2
  5322  010664  C092  F075         	movff	normal_loop@temp+3,___lldiv@dividend+3
  5323  010668  0E03               	movlw	3
  5324  01066A  0100               	movlb	0	; () banked
  5325  01066C  6F76               	movwf	___lldiv@divisor& (0+255),b
  5326  01066E  0E00               	movlw	0
  5327  010670  6F77               	movwf	(___lldiv@divisor+1)& (0+255),b
  5328  010672  0E00               	movlw	0
  5329  010674  6F78               	movwf	(___lldiv@divisor+2)& (0+255),b
  5330  010676  0E00               	movlw	0
  5331  010678  6F79               	movwf	(___lldiv@divisor+3)& (0+255),b
  5332  01067A  EC56  F08C         	call	___lldiv	;wreg free
  5333  01067E  C072  F08F         	movff	?___lldiv,normal_loop@temp
  5334  010682  C073  F090         	movff	?___lldiv+1,normal_loop@temp+1
  5335  010686  C074  F091         	movff	?___lldiv+2,normal_loop@temp+2
  5336  01068A  C075  F092         	movff	?___lldiv+3,normal_loop@temp+3
  5337                           
  5338                           ;PIC18F27J53-killifish_light02.c: 350: PWM_set(0, temp);
  5339  01068E  C08F  F06C         	movff	normal_loop@temp,PWM_set@value
  5340  010692  C090  F06D         	movff	normal_loop@temp+1,PWM_set@value+1
  5341  010696  0E00               	movlw	0
  5342  010698  EC0D  F089         	call	_PWM_set
  5343                           
  5344                           ;PIC18F27J53-killifish_light02.c: 351: PWM_set(1, temp);
  5345  01069C  C08F  F06C         	movff	normal_loop@temp,PWM_set@value
  5346  0106A0  C090  F06D         	movff	normal_loop@temp+1,PWM_set@value+1
  5347  0106A4  0E01               	movlw	1
  5348  0106A6  EC0D  F089         	call	_PWM_set
  5349                           
  5350                           ;PIC18F27J53-killifish_light02.c: 352: PWM_set(2, temp);
  5351  0106AA  C08F  F06C         	movff	normal_loop@temp,PWM_set@value
  5352  0106AE  C090  F06D         	movff	normal_loop@temp+1,PWM_set@value+1
  5353  0106B2  0E02               	movlw	2
  5354  0106B4  EC0D  F089         	call	_PWM_set
  5355                           
  5356                           ;PIC18F27J53-killifish_light02.c: 353: PWM_set(3, temp);
  5357  0106B8  C08F  F06C         	movff	normal_loop@temp,PWM_set@value
  5358  0106BC  C090  F06D         	movff	normal_loop@temp+1,PWM_set@value+1
  5359  0106C0  0E03               	movlw	3
  5360  0106C2  EC0D  F089         	call	_PWM_set
  5361  0106C6  D000               	goto	l4956
  5362  0106C8                     l4956:
  5363                           
  5364                           ;PIC18F27J53-killifish_light02.c: 354: }
  5365                           ;PIC18F27J53-killifish_light02.c: 355: }
  5366                           ;PIC18F27J53-killifish_light02.c: 356: if (light_mode == ADC_mode) {
  5367  0106C8  0100               	movlb	0	; () banked
  5368  0106CA  05B0               	decf	_light_mode& (0+255),w,b
  5369  0106CC  A4D8               	btfss	status,2,c
  5370  0106CE  D049               	goto	l598
  5371                           
  5372                           ; BSR set to: 0
  5373                           ;PIC18F27J53-killifish_light02.c: 357: PWM_set(3, 0);
  5374  0106D0  0E00               	movlw	0
  5375  0106D2  0100               	movlb	0	; () banked
  5376  0106D4  6F6D               	movwf	(PWM_set@value+1)& (0+255),b
  5377  0106D6  0E00               	movlw	0
  5378  0106D8  6F6C               	movwf	PWM_set@value& (0+255),b
  5379  0106DA  0E03               	movlw	3
  5380  0106DC  EC0D  F089         	call	_PWM_set
  5381                           
  5382                           ;PIC18F27J53-killifish_light02.c: 358: if (t0if) {
  5383  0106E0  0100               	movlb	0	; () banked
  5384  0106E2  51B1               	movf	_t0if& (0+255),w,b
  5385  0106E4  B4D8               	btfsc	status,2,c
  5386  0106E6  D03D               	goto	l598
  5387                           
  5388                           ; BSR set to: 0
  5389                           ;PIC18F27J53-killifish_light02.c: 359: t0if = 0;
  5390  0106E8  0E00               	movlw	0
  5391  0106EA  0100               	movlb	0	; () banked
  5392  0106EC  6FB1               	movwf	_t0if& (0+255),b
  5393                           
  5394                           ;PIC18F27J53-killifish_light02.c: 360: for (uint8_t i = 0; i < 3; i++) {
  5395  0106EE  0E00               	movlw	0
  5396  0106F0  0100               	movlb	0	; () banked
  5397  0106F2  6F8E               	movwf	normal_loop@i& (0+255),b
  5398  0106F4                     l4964:
  5399                           
  5400                           ; BSR set to: 0
  5401  0106F4  0E02               	movlw	2
  5402  0106F6  0100               	movlb	0	; () banked
  5403  0106F8  658E               	cpfsgt	normal_loop@i& (0+255),b
  5404  0106FA  D001               	goto	l4968
  5405                           
  5406                           ; BSR set to: 0
  5407  0106FC  D032               	goto	l598
  5408  0106FE                     l4968:
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;PIC18F27J53-killifish_light02.c: 361: uint16_t scan = (ADC(i) >> 4) * 100 / 255;
  5412  0106FE  0100               	movlb	0	; () banked
  5413  010700  518E               	movf	normal_loop@i& (0+255),w,b
  5414  010702  ECFC  F093         	call	_ADC
  5415  010706  0E04               	movlw	4
  5416  010708  0100               	movlb	0	; () banked
  5417  01070A  6F85               	movwf	??_normal_loop& (0+255),b
  5418  01070C                     u5575:
  5419  01070C  90D8               	bcf	status,0,c
  5420  01070E  3220               	rrcf	?_ADC+1,f,c
  5421  010710  321F               	rrcf	?_ADC,f,c
  5422  010712  0100               	movlb	0	; () banked
  5423  010714  2F85               	decfsz	??_normal_loop& (0+255),f,b
  5424  010716  D7FA               	goto	u5575
  5425  010718  C01F  F060         	movff	?_ADC,___wmul@multiplier
  5426  01071C  C020  F061         	movff	?_ADC+1,___wmul@multiplier+1
  5427  010720  0E00               	movlw	0
  5428  010722  0100               	movlb	0	; () banked
  5429  010724  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5430  010726  0E64               	movlw	100
  5431  010728  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5432  01072A  ECB1  F093         	call	___wmul	;wreg free
  5433  01072E  C060  F064         	movff	?___wmul,___lwdiv@dividend
  5434  010732  C061  F065         	movff	?___wmul+1,___lwdiv@dividend+1
  5435  010736  0E00               	movlw	0
  5436  010738  0100               	movlb	0	; () banked
  5437  01073A  6F67               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5438  01073C  6966               	setf	___lwdiv@divisor& (0+255),b
  5439  01073E  ECA8  F090         	call	___lwdiv	;wreg free
  5440  010742  C064  F089         	movff	?___lwdiv,normal_loop@scan
  5441  010746  C065  F08A         	movff	?___lwdiv+1,normal_loop@scan+1
  5442                           
  5443                           ;PIC18F27J53-killifish_light02.c: 362: PWM_set(i, scan);
  5444  01074A  C089  F06C         	movff	normal_loop@scan,PWM_set@value
  5445  01074E  C08A  F06D         	movff	normal_loop@scan+1,PWM_set@value+1
  5446  010752  0100               	movlb	0	; () banked
  5447  010754  518E               	movf	normal_loop@i& (0+255),w,b
  5448  010756  EC0D  F089         	call	_PWM_set
  5449  01075A  0100               	movlb	0	; () banked
  5450  01075C  2B8E               	incf	normal_loop@i& (0+255),f,b
  5451  01075E  D7CA               	goto	l4964
  5452                           
  5453                           ; BSR set to: 0
  5454                           
  5455                           ; BSR set to: 0
  5456  010760  D000               	goto	l598
  5457  010762                     l598:
  5458                           
  5459                           ; BSR set to: 0
  5460                           ;PIC18F27J53-killifish_light02.c: 363: }
  5461                           ;PIC18F27J53-killifish_light02.c: 364: }
  5462                           ;PIC18F27J53-killifish_light02.c: 365: }
  5463                           ;PIC18F27J53-killifish_light02.c: 366: if (sw_R.flag.press) {
  5464  010762  A040               	btfss	_sw_R+2,0,c
  5465  010764  D008               	goto	l4976
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;PIC18F27J53-killifish_light02.c: 367: sw_R.flags = 0;
  5469  010766  0E00               	movlw	0
  5470  010768  6E41               	movwf	_sw_R+3,c
  5471  01076A  0E00               	movlw	0
  5472  01076C  6E40               	movwf	_sw_R+2,c
  5473                           
  5474                           ;PIC18F27J53-killifish_light02.c: 368: light_mode = TIME_SYNC_mode;
  5475  01076E  0E00               	movlw	0
  5476  010770  0100               	movlb	0	; () banked
  5477  010772  6FB0               	movwf	_light_mode& (0+255),b
  5478  010774  D000               	goto	l4976
  5479  010776                     l4976:
  5480                           
  5481                           ; BSR set to: 0
  5482                           ;PIC18F27J53-killifish_light02.c: 369: }
  5483                           ;PIC18F27J53-killifish_light02.c: 370: if (sw_R.flag.long_holding_1) {
  5484  010776  A241               	btfss	_sw_R+3,1,c
  5485  010778  D008               	goto	l4980
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;PIC18F27J53-killifish_light02.c: 371: sw_R.flags = 0;
  5489  01077A  0E00               	movlw	0
  5490  01077C  6E41               	movwf	_sw_R+3,c
  5491  01077E  0E00               	movlw	0
  5492  010780  6E40               	movwf	_sw_R+2,c
  5493                           
  5494                           ;PIC18F27J53-killifish_light02.c: 372: light_mode = ADC_mode;
  5495  010782  0E01               	movlw	1
  5496  010784  0100               	movlb	0	; () banked
  5497  010786  6FB0               	movwf	_light_mode& (0+255),b
  5498  010788  D000               	goto	l4980
  5499  01078A                     l4980:
  5500                           
  5501                           ; BSR set to: 0
  5502                           ;PIC18F27J53-killifish_light02.c: 373: }
  5503                           ;PIC18F27J53-killifish_light02.c: 374: if (sw_G.flag.press) {
  5504  01078A  A03C               	btfss	_sw_G+2,0,c
  5505  01078C  D02A               	goto	l604
  5506                           
  5507                           ; BSR set to: 0
  5508                           ;PIC18F27J53-killifish_light02.c: 375: sw_G.flags = 0;
  5509  01078E  0E00               	movlw	0
  5510  010790  6E3D               	movwf	_sw_G+3,c
  5511  010792  0E00               	movlw	0
  5512  010794  6E3C               	movwf	_sw_G+2,c
  5513                           
  5514                           ;PIC18F27J53-killifish_light02.c: 376: light_mode = COMMAND_mode;
  5515  010796  0E02               	movlw	2
  5516  010798  0100               	movlb	0	; () banked
  5517  01079A  6FB0               	movwf	_light_mode& (0+255),b
  5518                           
  5519                           ; BSR set to: 0
  5520                           ;PIC18F27J53-killifish_light02.c: 377: static uint8_t n = 0;
  5521                           ;PIC18F27J53-killifish_light02.c: 378: if (n >= 4) n = 0;
  5522  01079C  0E03               	movlw	3
  5523  01079E  0100               	movlb	0	; () banked
  5524  0107A0  65B5               	cpfsgt	normal_loop@n& (0+255),b
  5525  0107A2  D004               	goto	l4988
  5526                           
  5527                           ; BSR set to: 0
  5528  0107A4  0E00               	movlw	0
  5529  0107A6  0100               	movlb	0	; () banked
  5530  0107A8  6FB5               	movwf	normal_loop@n& (0+255),b
  5531  0107AA  D003               	goto	l4990
  5532  0107AC                     l4988:
  5533                           
  5534                           ; BSR set to: 0
  5535                           ;PIC18F27J53-killifish_light02.c: 379: else n++;
  5536  0107AC  0100               	movlb	0	; () banked
  5537  0107AE  2BB5               	incf	normal_loop@n& (0+255),f,b
  5538  0107B0  D000               	goto	l4990
  5539  0107B2                     l4990:
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;PIC18F27J53-killifish_light02.c: 380: uint8_t value = 100 / 4 * n;
  5543  0107B2  0100               	movlb	0	; () banked
  5544  0107B4  51B5               	movf	normal_loop@n& (0+255),w,b
  5545  0107B6  0D19               	mullw	25
  5546  0107B8  CFF3 F08B          	movff	prodl,normal_loop@value
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;PIC18F27J53-killifish_light02.c: 381: for (uint8_t i = 0; i < 3; i++) {
  5550  0107BC  0E00               	movlw	0
  5551  0107BE  0100               	movlb	0	; () banked
  5552  0107C0  6F8D               	movwf	normal_loop@i_2415& (0+255),b
  5553  0107C2                     l4994:
  5554                           
  5555                           ; BSR set to: 0
  5556  0107C2  0E02               	movlw	2
  5557  0107C4  0100               	movlb	0	; () banked
  5558  0107C6  658D               	cpfsgt	normal_loop@i_2415& (0+255),b
  5559  0107C8  D001               	goto	l4998
  5560                           
  5561                           ; BSR set to: 0
  5562  0107CA  D00B               	goto	l604
  5563  0107CC                     l4998:
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;PIC18F27J53-killifish_light02.c: 382: PWM_set(i, value);
  5567  0107CC  C08B  F06C         	movff	normal_loop@value,PWM_set@value
  5568  0107D0  0100               	movlb	0	; () banked
  5569  0107D2  6B6D               	clrf	(PWM_set@value+1)& (0+255),b
  5570  0107D4  0100               	movlb	0	; () banked
  5571  0107D6  518D               	movf	normal_loop@i_2415& (0+255),w,b
  5572  0107D8  EC0D  F089         	call	_PWM_set
  5573  0107DC  0100               	movlb	0	; () banked
  5574  0107DE  2B8D               	incf	normal_loop@i_2415& (0+255),f,b
  5575  0107E0  D7F0               	goto	l4994
  5576  0107E2                     l604:
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;PIC18F27J53-killifish_light02.c: 383: }
  5580                           ;PIC18F27J53-killifish_light02.c: 384: }
  5581                           ;PIC18F27J53-killifish_light02.c: 385: if (sw_B.flag.press) {
  5582  0107E2  0101               	movlb	1	; () banked
  5583  0107E4  A1E5               	btfss	(_sw_B+2)& (0+255),0,b
  5584  0107E6  0012               	return	
  5585                           
  5586                           ; BSR set to: 1
  5587                           ;PIC18F27J53-killifish_light02.c: 386: sw_B.flags = 0;
  5588  0107E8  0E00               	movlw	0
  5589  0107EA  0101               	movlb	1	; () banked
  5590  0107EC  6FE6               	movwf	(_sw_B+3)& (0+255),b
  5591  0107EE  0E00               	movlw	0
  5592  0107F0  6FE5               	movwf	(_sw_B+2)& (0+255),b
  5593                           
  5594                           ;PIC18F27J53-killifish_light02.c: 387: light_mode = COMMAND_mode;
  5595  0107F2  0E02               	movlw	2
  5596  0107F4  0100               	movlb	0	; () banked
  5597  0107F6  6FB0               	movwf	_light_mode& (0+255),b
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;PIC18F27J53-killifish_light02.c: 388: static uint8_t n = 0;
  5601                           ;PIC18F27J53-killifish_light02.c: 389: if (n >= 4) n = 0;
  5602  0107F8  0E03               	movlw	3
  5603  0107FA  0100               	movlb	0	; () banked
  5604  0107FC  65B4               	cpfsgt	normal_loop@_2432& (0+255),b
  5605  0107FE  D004               	goto	l5010
  5606                           
  5607                           ; BSR set to: 0
  5608  010800  0E00               	movlw	0
  5609  010802  0100               	movlb	0	; () banked
  5610  010804  6FB4               	movwf	normal_loop@_2432& (0+255),b
  5611  010806  D003               	goto	l5012
  5612  010808                     l5010:
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;PIC18F27J53-killifish_light02.c: 390: else n++;
  5616  010808  0100               	movlb	0	; () banked
  5617  01080A  2BB4               	incf	normal_loop@_2432& (0+255),f,b
  5618  01080C  D000               	goto	l5012
  5619  01080E                     l5012:
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;PIC18F27J53-killifish_light02.c: 391: uint8_t value = 100 / 4 * n;
  5623  01080E  0100               	movlb	0	; () banked
  5624  010810  51B4               	movf	normal_loop@_2432& (0+255),w,b
  5625  010812  0D19               	mullw	25
  5626  010814  CFF3 F08C          	movff	prodl,normal_loop@value_2433
  5627                           
  5628                           ; BSR set to: 0
  5629                           ;PIC18F27J53-killifish_light02.c: 392: PWM_set(3, value);
  5630  010818  C08C  F06C         	movff	normal_loop@value_2433,PWM_set@value
  5631  01081C  0100               	movlb	0	; () banked
  5632  01081E  6B6D               	clrf	(PWM_set@value+1)& (0+255),b
  5633  010820  0E03               	movlw	3
  5634  010822  EC0D  F089         	call	_PWM_set
  5635  010826  0012               	return	
  5636  010828  0012               	return		;funcret
  5637  01082A                     __end_of_normal_loop:
  5638                           	opt stack 0
  5639                           tblptru	equ	0xFF8
  5640                           tblptrh	equ	0xFF7
  5641                           tblptrl	equ	0xFF6
  5642                           tablat	equ	0xFF5
  5643                           prodh	equ	0xFF4
  5644                           prodl	equ	0xFF3
  5645                           intcon	equ	0xFF2
  5646                           postinc0	equ	0xFEE
  5647                           wreg	equ	0xFE8
  5648                           indf1	equ	0xFE7
  5649                           postinc1	equ	0xFE6
  5650                           postdec1	equ	0xFE5
  5651                           fsr1h	equ	0xFE2
  5652                           fsr1l	equ	0xFE1
  5653                           indf2	equ	0xFDF
  5654                           postinc2	equ	0xFDE
  5655                           postdec2	equ	0xFDD
  5656                           fsr2h	equ	0xFDA
  5657                           fsr2l	equ	0xFD9
  5658                           status	equ	0xFD8
  5659                           
  5660 ;; *************** function ___llmod *****************
  5661 ;; Defined at:
  5662 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;  dividend        4    0[BANK0 ] unsigned long 
  5665 ;;  divisor         4    4[BANK0 ] unsigned long 
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;  counter         1   30[COMRAM] unsigned char 
  5668 ;; Return value:  Size  Location     Type
  5669 ;;                  4    0[BANK0 ] unsigned long 
  5670 ;; Registers used:
  5671 ;;		wreg, status,2, status,0
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5677 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5678 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5680 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5681 ;;Total ram usage:        9 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; Hardware stack levels required when called:    4
  5684 ;; This function calls:
  5685 ;;		Nothing
  5686 ;; This function is called by:
  5687 ;;		_normal_loop
  5688 ;;		_my_utoa32
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text20
  5693  011F08                     __ptext20:
  5694                           	opt stack 0
  5695  011F08                     ___llmod:
  5696                           	opt stack 25
  5697                           
  5698                           ;incstack = 0
  5699  011F08  0100               	movlb	0	; () banked
  5700  011F0A  5164               	movf	___llmod@divisor& (0+255),w,b
  5701  011F0C  0100               	movlb	0	; () banked
  5702  011F0E  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  5703  011F10  0100               	movlb	0	; () banked
  5704  011F12  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  5705  011F14  0100               	movlb	0	; () banked
  5706  011F16  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  5707  011F18  B4D8               	btfsc	status,2,c
  5708  011F1A  D03C               	goto	l1098
  5709                           
  5710                           ; BSR set to: 0
  5711  011F1C  0E01               	movlw	1
  5712  011F1E  6E1F               	movwf	___llmod@counter,c
  5713  011F20  D008               	goto	l4692
  5714  011F22                     l4690:
  5715                           
  5716                           ; BSR set to: 0
  5717  011F22  0100               	movlb	0	; () banked
  5718  011F24  90D8               	bcf	status,0,c
  5719  011F26  3764               	rlcf	___llmod@divisor& (0+255),f,b
  5720  011F28  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  5721  011F2A  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  5722  011F2C  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  5723  011F2E  2A1F               	incf	___llmod@counter,f,c
  5724  011F30  D000               	goto	l4692
  5725  011F32                     l4692:
  5726                           
  5727                           ; BSR set to: 0
  5728  011F32  0100               	movlb	0	; () banked
  5729  011F34  BF67               	btfsc	(___llmod@divisor+3)& (0+255),7,b
  5730  011F36  D002               	goto	l4694
  5731  011F38  D7F4               	goto	l4690
  5732                           
  5733                           ; BSR set to: 0
  5734  011F3A  D000               	goto	l4694
  5735  011F3C                     l4694:
  5736                           
  5737                           ; BSR set to: 0
  5738  011F3C  0100               	movlb	0	; () banked
  5739  011F3E  5164               	movf	___llmod@divisor& (0+255),w,b
  5740  011F40  0100               	movlb	0	; () banked
  5741  011F42  5D60               	subwf	___llmod@dividend& (0+255),w,b
  5742  011F44  0100               	movlb	0	; () banked
  5743  011F46  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  5744  011F48  0100               	movlb	0	; () banked
  5745  011F4A  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  5746  011F4C  0100               	movlb	0	; () banked
  5747  011F4E  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  5748  011F50  0100               	movlb	0	; () banked
  5749  011F52  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  5750  011F54  0100               	movlb	0	; () banked
  5751  011F56  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  5752  011F58  0100               	movlb	0	; () banked
  5753  011F5A  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  5754  011F5C  A0D8               	btfss	status,0,c
  5755  011F5E  D011               	goto	l4698
  5756                           
  5757                           ; BSR set to: 0
  5758  011F60  0100               	movlb	0	; () banked
  5759  011F62  5164               	movf	___llmod@divisor& (0+255),w,b
  5760  011F64  0100               	movlb	0	; () banked
  5761  011F66  5F60               	subwf	___llmod@dividend& (0+255),f,b
  5762  011F68  0100               	movlb	0	; () banked
  5763  011F6A  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  5764  011F6C  0100               	movlb	0	; () banked
  5765  011F6E  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  5766  011F70  0100               	movlb	0	; () banked
  5767  011F72  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  5768  011F74  0100               	movlb	0	; () banked
  5769  011F76  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  5770  011F78  0100               	movlb	0	; () banked
  5771  011F7A  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  5772  011F7C  0100               	movlb	0	; () banked
  5773  011F7E  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  5774  011F80  D000               	goto	l4698
  5775  011F82                     l4698:
  5776                           
  5777                           ; BSR set to: 0
  5778  011F82  0100               	movlb	0	; () banked
  5779  011F84  90D8               	bcf	status,0,c
  5780  011F86  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  5781  011F88  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  5782  011F8A  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  5783  011F8C  3364               	rrcf	___llmod@divisor& (0+255),f,b
  5784                           
  5785                           ; BSR set to: 0
  5786  011F8E  2E1F               	decfsz	___llmod@counter,f,c
  5787  011F90  D7D5               	goto	l4694
  5788  011F92  D000               	goto	l1098
  5789  011F94                     l1098:
  5790                           
  5791                           ; BSR set to: 0
  5792  011F94  C060  F060         	movff	___llmod@dividend,?___llmod
  5793  011F98  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  5794  011F9C  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  5795  011FA0  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  5796                           
  5797                           ; BSR set to: 0
  5798  011FA4  0012               	return		;funcret
  5799  011FA6                     __end_of___llmod:
  5800                           	opt stack 0
  5801                           tblptru	equ	0xFF8
  5802                           tblptrh	equ	0xFF7
  5803                           tblptrl	equ	0xFF6
  5804                           tablat	equ	0xFF5
  5805                           prodh	equ	0xFF4
  5806                           prodl	equ	0xFF3
  5807                           intcon	equ	0xFF2
  5808                           postinc0	equ	0xFEE
  5809                           wreg	equ	0xFE8
  5810                           indf1	equ	0xFE7
  5811                           postinc1	equ	0xFE6
  5812                           postdec1	equ	0xFE5
  5813                           fsr1h	equ	0xFE2
  5814                           fsr1l	equ	0xFE1
  5815                           indf2	equ	0xFDF
  5816                           postinc2	equ	0xFDE
  5817                           postdec2	equ	0xFDD
  5818                           fsr2h	equ	0xFDA
  5819                           fsr2l	equ	0xFD9
  5820                           status	equ	0xFD8
  5821                           
  5822 ;; *************** function _RTCC_from_RTCC *****************
  5823 ;; Defined at:
  5824 ;;		line 231 in file "../My_header\My_RTCC.h"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;  ct              2   33[BANK0 ] PTR struct .
  5827 ;;		 -> caltime_now(7), 
  5828 ;;  ep              2   35[BANK0 ] PTR unsigned long 
  5829 ;;		 -> epoch_now(4), 
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;		None
  5832 ;; Return value:  Size  Location     Type
  5833 ;;		None               void
  5834 ;; Registers used:
  5835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/0
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5841 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5844 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5845 ;;Total ram usage:        4 bytes
  5846 ;; Hardware stack levels used:    1
  5847 ;; Hardware stack levels required when called:    7
  5848 ;; This function calls:
  5849 ;;		_RTCC_to_caltime
  5850 ;;		_caltime_to_epoch
  5851 ;; This function is called by:
  5852 ;;		_print_time
  5853 ;;		_normal_loop
  5854 ;;		_main
  5855 ;;		_RTCC_adjust_time_inc
  5856 ;;		_RTCC_adjust_time_dec
  5857 ;; This function uses a non-reentrant model
  5858 ;;
  5859                           
  5860                           	psect	text21
  5861  01286A                     __ptext21:
  5862                           	opt stack 0
  5863  01286A                     _RTCC_from_RTCC:
  5864                           	opt stack 20
  5865                           
  5866                           ;My_header\My_RTCC.h: 232: RTCC_to_caltime(ct);
  5867                           
  5868                           ; BSR set to: 0
  5869                           ;incstack = 0
  5870  01286A  C081  F021         	movff	RTCC_from_RTCC@ct,RTCC_to_caltime@ct
  5871  01286E  C082  F022         	movff	RTCC_from_RTCC@ct+1,RTCC_to_caltime@ct+1
  5872  012872  ECDC  F08E         	call	_RTCC_to_caltime	;wreg free
  5873                           
  5874                           ;My_header\My_RTCC.h: 233: caltime_to_epoch(ct, ep);
  5875  012876  C081  F072         	movff	RTCC_from_RTCC@ct,caltime_to_epoch@ct
  5876  01287A  C082  F073         	movff	RTCC_from_RTCC@ct+1,caltime_to_epoch@ct+1
  5877  01287E  C083  F074         	movff	RTCC_from_RTCC@ep,caltime_to_epoch@ep
  5878  012882  C084  F075         	movff	RTCC_from_RTCC@ep+1,caltime_to_epoch@ep+1
  5879  012886  EC8E  F085         	call	_caltime_to_epoch	;wreg free
  5880  01288A  0012               	return		;funcret
  5881  01288C                     __end_of_RTCC_from_RTCC:
  5882                           	opt stack 0
  5883                           tblptru	equ	0xFF8
  5884                           tblptrh	equ	0xFF7
  5885                           tblptrl	equ	0xFF6
  5886                           tablat	equ	0xFF5
  5887                           prodh	equ	0xFF4
  5888                           prodl	equ	0xFF3
  5889                           intcon	equ	0xFF2
  5890                           postinc0	equ	0xFEE
  5891                           wreg	equ	0xFE8
  5892                           indf1	equ	0xFE7
  5893                           postinc1	equ	0xFE6
  5894                           postdec1	equ	0xFE5
  5895                           fsr1h	equ	0xFE2
  5896                           fsr1l	equ	0xFE1
  5897                           indf2	equ	0xFDF
  5898                           postinc2	equ	0xFDE
  5899                           postdec2	equ	0xFDD
  5900                           fsr2h	equ	0xFDA
  5901                           fsr2l	equ	0xFD9
  5902                           status	equ	0xFD8
  5903                           
  5904 ;; *************** function _caltime_to_epoch *****************
  5905 ;; Defined at:
  5906 ;;		line 211 in file "../My_header\My_RTCC.h"
  5907 ;; Parameters:    Size  Location     Type
  5908 ;;  ct              2   18[BANK0 ] PTR struct .
  5909 ;;		 -> caltime_now(7), 
  5910 ;;  ep              2   20[BANK0 ] PTR unsigned long 
  5911 ;;		 -> epoch_now(4), 
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;  month           1   32[BANK0 ] unsigned char 
  5914 ;;  month           1   27[BANK0 ] unsigned char 
  5915 ;;  year            1   26[BANK0 ] unsigned char 
  5916 ;;  epoch           4   28[BANK0 ] unsigned long 
  5917 ;; Return value:  Size  Location     Type
  5918 ;;		None               void
  5919 ;; Registers used:
  5920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5921 ;; Tracked objects:
  5922 ;;		On entry : 0/0
  5923 ;;		On exit  : 0/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5926 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5927 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5928 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5929 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5930 ;;Total ram usage:       15 bytes
  5931 ;; Hardware stack levels used:    1
  5932 ;; Hardware stack levels required when called:    6
  5933 ;; This function calls:
  5934 ;;		___lmul
  5935 ;;		_month_length
  5936 ;; This function is called by:
  5937 ;;		_RTCC_from_RTCC
  5938 ;;		_RTCC_from_caltime
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text22
  5943  010B1C                     __ptext22:
  5944                           	opt stack 0
  5945  010B1C                     _caltime_to_epoch:
  5946                           	opt stack 20
  5947                           
  5948                           ;My_header\My_RTCC.h: 212: epoch_t epoch = 0;
  5949                           
  5950                           ;incstack = 0
  5951  010B1C  0E00               	movlw	0
  5952  010B1E  0100               	movlb	0	; () banked
  5953  010B20  6F7C               	movwf	caltime_to_epoch@epoch& (0+255),b
  5954  010B22  0E00               	movlw	0
  5955  010B24  6F7D               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
  5956  010B26  0E00               	movlw	0
  5957  010B28  6F7E               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
  5958  010B2A  0E00               	movlw	0
  5959  010B2C  6F7F               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
  5960                           
  5961                           ;My_header\My_RTCC.h: 213: for (uint8_t year = 0; year < ct->YY; year++) {
  5962  010B2E  0E00               	movlw	0
  5963  010B30  0100               	movlb	0	; () banked
  5964  010B32  6F7A               	movwf	caltime_to_epoch@year& (0+255),b
  5965  010B34  D038               	goto	l4244
  5966  010B36                     l4230:
  5967                           
  5968                           ; BSR set to: 0
  5969                           ;My_header\My_RTCC.h: 214: for (uint8_t month = 1; month <= 12; month++) {
  5970  010B36  0E01               	movlw	1
  5971  010B38  0100               	movlb	0	; () banked
  5972  010B3A  6F80               	movwf	caltime_to_epoch@month& (0+255),b
  5973  010B3C                     l4232:
  5974                           
  5975                           ; BSR set to: 0
  5976  010B3C  0E0C               	movlw	12
  5977  010B3E  0100               	movlb	0	; () banked
  5978  010B40  6580               	cpfsgt	caltime_to_epoch@month& (0+255),b
  5979  010B42  D001               	goto	l4236
  5980                           
  5981                           ; BSR set to: 0
  5982  010B44  D02D               	goto	l4242
  5983  010B46                     l4236:
  5984                           
  5985                           ; BSR set to: 0
  5986                           ;My_header\My_RTCC.h: 215: epoch += ((epoch_t)60*60*24) * month_length(year, month);
  5987  010B46  C080  F060         	movff	caltime_to_epoch@month,month_length@month
  5988  010B4A  0100               	movlb	0	; () banked
  5989  010B4C  517A               	movf	caltime_to_epoch@year& (0+255),w,b
  5990  010B4E  EC8B  F08B         	call	_month_length
  5991  010B52  0100               	movlb	0	; () banked
  5992  010B54  6F76               	movwf	??_caltime_to_epoch& (0+255),b
  5993  010B56  0100               	movlb	0	; () banked
  5994  010B58  5176               	movf	??_caltime_to_epoch& (0+255),w,b
  5995  010B5A  0100               	movlb	0	; () banked
  5996  010B5C  6F66               	movwf	___lmul@multiplier& (0+255),b
  5997  010B5E  6B67               	clrf	(___lmul@multiplier+1)& (0+255),b
  5998  010B60  6B68               	clrf	(___lmul@multiplier+2)& (0+255),b
  5999  010B62  6B69               	clrf	(___lmul@multiplier+3)& (0+255),b
  6000  010B64  0E80               	movlw	128
  6001  010B66  0100               	movlb	0	; () banked
  6002  010B68  6F6A               	movwf	___lmul@multiplicand& (0+255),b
  6003  010B6A  0E51               	movlw	81
  6004  010B6C  6F6B               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6005  010B6E  0E01               	movlw	1
  6006  010B70  6F6C               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6007  010B72  0E00               	movlw	0
  6008  010B74  6F6D               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6009  010B76  EC6B  F091         	call	___lmul	;wreg free
  6010  010B7A  0100               	movlb	0	; () banked
  6011  010B7C  5166               	movf	?___lmul& (0+255),w,b
  6012  010B7E  0100               	movlb	0	; () banked
  6013  010B80  277C               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6014  010B82  0100               	movlb	0	; () banked
  6015  010B84  5167               	movf	(?___lmul+1)& (0+255),w,b
  6016  010B86  0100               	movlb	0	; () banked
  6017  010B88  237D               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6018  010B8A  0100               	movlb	0	; () banked
  6019  010B8C  5168               	movf	(?___lmul+2)& (0+255),w,b
  6020  010B8E  0100               	movlb	0	; () banked
  6021  010B90  237E               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6022  010B92  0100               	movlb	0	; () banked
  6023  010B94  5169               	movf	(?___lmul+3)& (0+255),w,b
  6024  010B96  0100               	movlb	0	; () banked
  6025  010B98  237F               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6026                           
  6027                           ; BSR set to: 0
  6028  010B9A  0100               	movlb	0	; () banked
  6029  010B9C  2B80               	incf	caltime_to_epoch@month& (0+255),f,b
  6030  010B9E  D7CE               	goto	l4232
  6031  010BA0                     l4242:
  6032                           
  6033                           ; BSR set to: 0
  6034  010BA0  0100               	movlb	0	; () banked
  6035  010BA2  2B7A               	incf	caltime_to_epoch@year& (0+255),f,b
  6036  010BA4  D000               	goto	l4244
  6037  010BA6                     l4244:
  6038                           
  6039                           ; BSR set to: 0
  6040  010BA6  0100               	movlb	0	; () banked
  6041  010BA8  EE20 F006          	lfsr	2,6
  6042  010BAC  5172               	movf	caltime_to_epoch@ct& (0+255),w,b
  6043  010BAE  26D9               	addwf	fsr2l,f,c
  6044  010BB0  5173               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6045  010BB2  22DA               	addwfc	fsr2h,f,c
  6046  010BB4  50DE               	movf	postinc2,w,c
  6047  010BB6  0100               	movlb	0	; () banked
  6048  010BB8  5D7A               	subwf	caltime_to_epoch@year& (0+255),w,b
  6049  010BBA  A0D8               	btfss	status,0,c
  6050  010BBC  D7BC               	goto	l4230
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;My_header\My_RTCC.h: 216: }
  6054                           ;My_header\My_RTCC.h: 217: }
  6055                           ;My_header\My_RTCC.h: 218: for (uint8_t month = 1; month < ct->MM; month++) {
  6056                           
  6057                           ; BSR set to: 0
  6058  010BBE  0E01               	movlw	1
  6059  010BC0  0100               	movlb	0	; () banked
  6060  010BC2  6F7B               	movwf	caltime_to_epoch@month_1993& (0+255),b
  6061  010BC4  D033               	goto	l4252
  6062  010BC6                     l4248:
  6063                           
  6064                           ; BSR set to: 0
  6065                           ;My_header\My_RTCC.h: 219: epoch += ((epoch_t)60*60*24) * month_length(ct->YY, month);
  6066  010BC6  C07B  F060         	movff	caltime_to_epoch@month_1993,month_length@month
  6067  010BCA  0100               	movlb	0	; () banked
  6068  010BCC  EE20 F006          	lfsr	2,6
  6069  010BD0  5172               	movf	caltime_to_epoch@ct& (0+255),w,b
  6070  010BD2  26D9               	addwf	fsr2l,f,c
  6071  010BD4  5173               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6072  010BD6  22DA               	addwfc	fsr2h,f,c
  6073  010BD8  50DF               	movf	indf2,w,c
  6074  010BDA  EC8B  F08B         	call	_month_length
  6075  010BDE  0100               	movlb	0	; () banked
  6076  010BE0  6F76               	movwf	??_caltime_to_epoch& (0+255),b
  6077  010BE2  0100               	movlb	0	; () banked
  6078  010BE4  5176               	movf	??_caltime_to_epoch& (0+255),w,b
  6079  010BE6  0100               	movlb	0	; () banked
  6080  010BE8  6F66               	movwf	___lmul@multiplier& (0+255),b
  6081  010BEA  6B67               	clrf	(___lmul@multiplier+1)& (0+255),b
  6082  010BEC  6B68               	clrf	(___lmul@multiplier+2)& (0+255),b
  6083  010BEE  6B69               	clrf	(___lmul@multiplier+3)& (0+255),b
  6084  010BF0  0E80               	movlw	128
  6085  010BF2  0100               	movlb	0	; () banked
  6086  010BF4  6F6A               	movwf	___lmul@multiplicand& (0+255),b
  6087  010BF6  0E51               	movlw	81
  6088  010BF8  6F6B               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6089  010BFA  0E01               	movlw	1
  6090  010BFC  6F6C               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6091  010BFE  0E00               	movlw	0
  6092  010C00  6F6D               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6093  010C02  EC6B  F091         	call	___lmul	;wreg free
  6094  010C06  0100               	movlb	0	; () banked
  6095  010C08  5166               	movf	?___lmul& (0+255),w,b
  6096  010C0A  0100               	movlb	0	; () banked
  6097  010C0C  277C               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6098  010C0E  0100               	movlb	0	; () banked
  6099  010C10  5167               	movf	(?___lmul+1)& (0+255),w,b
  6100  010C12  0100               	movlb	0	; () banked
  6101  010C14  237D               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6102  010C16  0100               	movlb	0	; () banked
  6103  010C18  5168               	movf	(?___lmul+2)& (0+255),w,b
  6104  010C1A  0100               	movlb	0	; () banked
  6105  010C1C  237E               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6106  010C1E  0100               	movlb	0	; () banked
  6107  010C20  5169               	movf	(?___lmul+3)& (0+255),w,b
  6108  010C22  0100               	movlb	0	; () banked
  6109  010C24  237F               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6110                           
  6111                           ; BSR set to: 0
  6112  010C26  0100               	movlb	0	; () banked
  6113  010C28  2B7B               	incf	caltime_to_epoch@month_1993& (0+255),f,b
  6114  010C2A  D000               	goto	l4252
  6115  010C2C                     l4252:
  6116                           
  6117                           ; BSR set to: 0
  6118  010C2C  0100               	movlb	0	; () banked
  6119  010C2E  EE20 F005          	lfsr	2,5
  6120  010C32  5172               	movf	caltime_to_epoch@ct& (0+255),w,b
  6121  010C34  26D9               	addwf	fsr2l,f,c
  6122  010C36  5173               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6123  010C38  22DA               	addwfc	fsr2h,f,c
  6124  010C3A  50DE               	movf	postinc2,w,c
  6125  010C3C  0100               	movlb	0	; () banked
  6126  010C3E  5D7B               	subwf	caltime_to_epoch@month_1993& (0+255),w,b
  6127  010C40  A0D8               	btfss	status,0,c
  6128  010C42  D7C1               	goto	l4248
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;My_header\My_RTCC.h: 220: }
  6132                           ;My_header\My_RTCC.h: 221: epoch += ((epoch_t)60*60*24) * (ct->DD - 1);
  6133                           
  6134                           ; BSR set to: 0
  6135  010C44  0EFF               	movlw	255
  6136  010C46  0100               	movlb	0	; () banked
  6137  010C48  6F76               	movwf	??_caltime_to_epoch& (0+255),b
  6138  010C4A  0EFF               	movlw	255
  6139  010C4C  0100               	movlb	0	; () banked
  6140  010C4E  6F77               	movwf	(??_caltime_to_epoch+1)& (0+255),b
  6141  010C50  0100               	movlb	0	; () banked
  6142  010C52  EE20 F004          	lfsr	2,4
  6143  010C56  5172               	movf	caltime_to_epoch@ct& (0+255),w,b
  6144  010C58  26D9               	addwf	fsr2l,f,c
  6145  010C5A  5173               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6146  010C5C  22DA               	addwfc	fsr2h,f,c
  6147  010C5E  50DF               	movf	indf2,w,c
  6148  010C60  0100               	movlb	0	; () banked
  6149  010C62  6F78               	movwf	(??_caltime_to_epoch+2)& (0+255),b
  6150  010C64  6B79               	clrf	(??_caltime_to_epoch+3)& (0+255),b
  6151  010C66  0100               	movlb	0	; () banked
  6152  010C68  5176               	movf	??_caltime_to_epoch& (0+255),w,b
  6153  010C6A  0100               	movlb	0	; () banked
  6154  010C6C  2778               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
  6155  010C6E  0100               	movlb	0	; () banked
  6156  010C70  5177               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  6157  010C72  0100               	movlb	0	; () banked
  6158  010C74  2379               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
  6159  010C76  C078  F066         	movff	??_caltime_to_epoch+2,___lmul@multiplier
  6160  010C7A  C079  F067         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
  6161  010C7E  0100               	movlb	0	; () banked
  6162  010C80  0E00               	movlw	0
  6163  010C82  BF67               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  6164  010C84  0EFF               	movlw	-1
  6165  010C86  6F68               	movwf	(___lmul@multiplier+2)& (0+255),b
  6166  010C88  6F69               	movwf	(___lmul@multiplier+3)& (0+255),b
  6167  010C8A  0E80               	movlw	128
  6168  010C8C  0100               	movlb	0	; () banked
  6169  010C8E  6F6A               	movwf	___lmul@multiplicand& (0+255),b
  6170  010C90  0E51               	movlw	81
  6171  010C92  6F6B               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6172  010C94  0E01               	movlw	1
  6173  010C96  6F6C               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6174  010C98  0E00               	movlw	0
  6175  010C9A  6F6D               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6176  010C9C  EC6B  F091         	call	___lmul	;wreg free
  6177  010CA0  0100               	movlb	0	; () banked
  6178  010CA2  5166               	movf	?___lmul& (0+255),w,b
  6179  010CA4  0100               	movlb	0	; () banked
  6180  010CA6  277C               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6181  010CA8  0100               	movlb	0	; () banked
  6182  010CAA  5167               	movf	(?___lmul+1)& (0+255),w,b
  6183  010CAC  0100               	movlb	0	; () banked
  6184  010CAE  237D               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6185  010CB0  0100               	movlb	0	; () banked
  6186  010CB2  5168               	movf	(?___lmul+2)& (0+255),w,b
  6187  010CB4  0100               	movlb	0	; () banked
  6188  010CB6  237E               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6189  010CB8  0100               	movlb	0	; () banked
  6190  010CBA  5169               	movf	(?___lmul+3)& (0+255),w,b
  6191  010CBC  0100               	movlb	0	; () banked
  6192  010CBE  237F               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6193                           
  6194                           ;My_header\My_RTCC.h: 222: epoch += ((epoch_t)60*60) * ct->hh;
  6195  010CC0  0100               	movlb	0	; () banked
  6196  010CC2  EE20 F002          	lfsr	2,2
  6197  010CC6  5172               	movf	caltime_to_epoch@ct& (0+255),w,b
  6198  010CC8  26D9               	addwf	fsr2l,f,c
  6199  010CCA  5173               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6200  010CCC  22DA               	addwfc	fsr2h,f,c
  6201  010CCE  50DF               	movf	indf2,w,c
  6202  010CD0  0100               	movlb	0	; () banked
  6203  010CD2  6F76               	movwf	??_caltime_to_epoch& (0+255),b
  6204  010CD4  0100               	movlb	0	; () banked
  6205  010CD6  5176               	movf	??_caltime_to_epoch& (0+255),w,b
  6206  010CD8  0100               	movlb	0	; () banked
  6207  010CDA  6F66               	movwf	___lmul@multiplier& (0+255),b
  6208  010CDC  6B67               	clrf	(___lmul@multiplier+1)& (0+255),b
  6209  010CDE  6B68               	clrf	(___lmul@multiplier+2)& (0+255),b
  6210  010CE0  6B69               	clrf	(___lmul@multiplier+3)& (0+255),b
  6211  010CE2  0E10               	movlw	16
  6212  010CE4  0100               	movlb	0	; () banked
  6213  010CE6  6F6A               	movwf	___lmul@multiplicand& (0+255),b
  6214  010CE8  0E0E               	movlw	14
  6215  010CEA  6F6B               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6216  010CEC  0E00               	movlw	0
  6217  010CEE  6F6C               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6218  010CF0  0E00               	movlw	0
  6219  010CF2  6F6D               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6220  010CF4  EC6B  F091         	call	___lmul	;wreg free
  6221  010CF8  0100               	movlb	0	; () banked
  6222  010CFA  5166               	movf	?___lmul& (0+255),w,b
  6223  010CFC  0100               	movlb	0	; () banked
  6224  010CFE  277C               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6225  010D00  0100               	movlb	0	; () banked
  6226  010D02  5167               	movf	(?___lmul+1)& (0+255),w,b
  6227  010D04  0100               	movlb	0	; () banked
  6228  010D06  237D               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6229  010D08  0100               	movlb	0	; () banked
  6230  010D0A  5168               	movf	(?___lmul+2)& (0+255),w,b
  6231  010D0C  0100               	movlb	0	; () banked
  6232  010D0E  237E               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6233  010D10  0100               	movlb	0	; () banked
  6234  010D12  5169               	movf	(?___lmul+3)& (0+255),w,b
  6235  010D14  0100               	movlb	0	; () banked
  6236  010D16  237F               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6237                           
  6238                           ;My_header\My_RTCC.h: 223: epoch += ((epoch_t)60) * ct->mm;
  6239  010D18  0100               	movlb	0	; () banked
  6240  010D1A  EE20 F001          	lfsr	2,1
  6241  010D1E  5172               	movf	caltime_to_epoch@ct& (0+255),w,b
  6242  010D20  26D9               	addwf	fsr2l,f,c
  6243  010D22  5173               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6244  010D24  22DA               	addwfc	fsr2h,f,c
  6245  010D26  50DF               	movf	indf2,w,c
  6246  010D28  0100               	movlb	0	; () banked
  6247  010D2A  6F76               	movwf	??_caltime_to_epoch& (0+255),b
  6248  010D2C  0100               	movlb	0	; () banked
  6249  010D2E  5176               	movf	??_caltime_to_epoch& (0+255),w,b
  6250  010D30  0100               	movlb	0	; () banked
  6251  010D32  6F66               	movwf	___lmul@multiplier& (0+255),b
  6252  010D34  6B67               	clrf	(___lmul@multiplier+1)& (0+255),b
  6253  010D36  6B68               	clrf	(___lmul@multiplier+2)& (0+255),b
  6254  010D38  6B69               	clrf	(___lmul@multiplier+3)& (0+255),b
  6255  010D3A  0E3C               	movlw	60
  6256  010D3C  0100               	movlb	0	; () banked
  6257  010D3E  6F6A               	movwf	___lmul@multiplicand& (0+255),b
  6258  010D40  0E00               	movlw	0
  6259  010D42  6F6B               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6260  010D44  0E00               	movlw	0
  6261  010D46  6F6C               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6262  010D48  0E00               	movlw	0
  6263  010D4A  6F6D               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6264  010D4C  EC6B  F091         	call	___lmul	;wreg free
  6265  010D50  0100               	movlb	0	; () banked
  6266  010D52  5166               	movf	?___lmul& (0+255),w,b
  6267  010D54  0100               	movlb	0	; () banked
  6268  010D56  277C               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6269  010D58  0100               	movlb	0	; () banked
  6270  010D5A  5167               	movf	(?___lmul+1)& (0+255),w,b
  6271  010D5C  0100               	movlb	0	; () banked
  6272  010D5E  237D               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6273  010D60  0100               	movlb	0	; () banked
  6274  010D62  5168               	movf	(?___lmul+2)& (0+255),w,b
  6275  010D64  0100               	movlb	0	; () banked
  6276  010D66  237E               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6277  010D68  0100               	movlb	0	; () banked
  6278  010D6A  5169               	movf	(?___lmul+3)& (0+255),w,b
  6279  010D6C  0100               	movlb	0	; () banked
  6280  010D6E  237F               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6281                           
  6282                           ; BSR set to: 0
  6283                           ;My_header\My_RTCC.h: 224: epoch += ct->ss;
  6284  010D70  C072  FFD9         	movff	caltime_to_epoch@ct,fsr2l
  6285  010D74  C073  FFDA         	movff	caltime_to_epoch@ct+1,fsr2h
  6286  010D78  50DF               	movf	indf2,w,c
  6287  010D7A  0100               	movlb	0	; () banked
  6288  010D7C  6F76               	movwf	??_caltime_to_epoch& (0+255),b
  6289  010D7E  0100               	movlb	0	; () banked
  6290  010D80  5176               	movf	??_caltime_to_epoch& (0+255),w,b
  6291  010D82  0100               	movlb	0	; () banked
  6292  010D84  277C               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6293  010D86  0E00               	movlw	0
  6294  010D88  237D               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6295  010D8A  237E               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6296  010D8C  237F               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6297                           
  6298                           ; BSR set to: 0
  6299                           ;My_header\My_RTCC.h: 226: *ep = epoch;
  6300  010D8E  C074  FFD9         	movff	caltime_to_epoch@ep,fsr2l
  6301  010D92  C075  FFDA         	movff	caltime_to_epoch@ep+1,fsr2h
  6302  010D96  C07C  FFDE         	movff	caltime_to_epoch@epoch,postinc2
  6303  010D9A  C07D  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
  6304  010D9E  C07E  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
  6305  010DA2  C07F  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
  6306                           
  6307                           ; BSR set to: 0
  6308  010DA6  0012               	return		;funcret
  6309  010DA8                     __end_of_caltime_to_epoch:
  6310                           	opt stack 0
  6311                           tblptru	equ	0xFF8
  6312                           tblptrh	equ	0xFF7
  6313                           tblptrl	equ	0xFF6
  6314                           tablat	equ	0xFF5
  6315                           prodh	equ	0xFF4
  6316                           prodl	equ	0xFF3
  6317                           intcon	equ	0xFF2
  6318                           postinc0	equ	0xFEE
  6319                           wreg	equ	0xFE8
  6320                           indf1	equ	0xFE7
  6321                           postinc1	equ	0xFE6
  6322                           postdec1	equ	0xFE5
  6323                           fsr1h	equ	0xFE2
  6324                           fsr1l	equ	0xFE1
  6325                           indf2	equ	0xFDF
  6326                           postinc2	equ	0xFDE
  6327                           postdec2	equ	0xFDD
  6328                           fsr2h	equ	0xFDA
  6329                           fsr2l	equ	0xFD9
  6330                           status	equ	0xFD8
  6331                           
  6332 ;; *************** function _RTCC_to_caltime *****************
  6333 ;; Defined at:
  6334 ;;		line 121 in file "../My_header\My_RTCC.h"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;  ct              2   32[COMRAM] PTR struct .
  6337 ;;		 -> caltime_now(7), 
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;  dumy            1   34[COMRAM] unsigned char 
  6340 ;; Return value:  Size  Location     Type
  6341 ;;		None               void
  6342 ;; Registers used:
  6343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6344 ;; Tracked objects:
  6345 ;;		On entry : 0/0
  6346 ;;		On exit  : 0/0
  6347 ;;		Unchanged: 0/0
  6348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6349 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6350 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6352 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6353 ;;Total ram usage:        3 bytes
  6354 ;; Hardware stack levels used:    1
  6355 ;; Hardware stack levels required when called:    5
  6356 ;; This function calls:
  6357 ;;		_x_to_d
  6358 ;; This function is called by:
  6359 ;;		_RTCC_from_RTCC
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363                           	psect	text23
  6364  011DB8                     __ptext23:
  6365                           	opt stack 0
  6366  011DB8                     _RTCC_to_caltime:
  6367                           	opt stack 21
  6368                           
  6369                           ;My_header\My_RTCC.h: 122: while (RTCCFGbits.RTCSYNC);
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;incstack = 0
  6373  011DB8  D000               	goto	l311
  6374  011DBA                     l311:
  6375  011DBA  010F               	movlb	15	; () banked
  6376  011DBC  B93F               	btfsc	63,4,b	;volatile
  6377  011DBE  D7FD               	goto	l311
  6378                           
  6379                           ; BSR set to: 15
  6380                           ;My_header\My_RTCC.h: 124: RTCCFGbits.RTCPTR0 = 1;
  6381  011DC0  010F               	movlb	15	; () banked
  6382  011DC2  813F               	bsf	63,0,b	;volatile
  6383                           
  6384                           ;My_header\My_RTCC.h: 125: RTCCFGbits.RTCPTR1 = 1;
  6385  011DC4  010F               	movlb	15	; () banked
  6386  011DC6  833F               	bsf	63,1,b	;volatile
  6387                           
  6388                           ; BSR set to: 15
  6389                           ;My_header\My_RTCC.h: 127: ct->YY = x_to_d(RTCVALL);
  6390  011DC8  EE20 F006          	lfsr	2,6
  6391  011DCC  5021               	movf	RTCC_to_caltime@ct,w,c
  6392  011DCE  26D9               	addwf	fsr2l,f,c
  6393  011DD0  5022               	movf	RTCC_to_caltime@ct+1,w,c
  6394  011DD2  22DA               	addwfc	fsr2h,f,c
  6395  011DD4  010F               	movlb	15	; () banked
  6396  011DD6  513A               	movf	58,w,b	;volatile
  6397  011DD8  EC85  F094         	call	_x_to_d
  6398  011DDC  6EDF               	movwf	indf2,c
  6399                           
  6400                           ;My_header\My_RTCC.h: 128: uint8_t dumy = RTCVALH;
  6401  011DDE  CF3B F023          	movff	3899,RTCC_to_caltime@dumy	;volatile
  6402                           
  6403                           ;My_header\My_RTCC.h: 129: ct->DD = x_to_d(RTCVALL);
  6404  011DE2  EE20 F004          	lfsr	2,4
  6405  011DE6  5021               	movf	RTCC_to_caltime@ct,w,c
  6406  011DE8  26D9               	addwf	fsr2l,f,c
  6407  011DEA  5022               	movf	RTCC_to_caltime@ct+1,w,c
  6408  011DEC  22DA               	addwfc	fsr2h,f,c
  6409  011DEE  010F               	movlb	15	; () banked
  6410  011DF0  513A               	movf	58,w,b	;volatile
  6411  011DF2  EC85  F094         	call	_x_to_d
  6412  011DF6  6EDF               	movwf	indf2,c
  6413                           
  6414                           ;My_header\My_RTCC.h: 130: ct->MM = x_to_d(RTCVALH);
  6415  011DF8  EE20 F005          	lfsr	2,5
  6416  011DFC  5021               	movf	RTCC_to_caltime@ct,w,c
  6417  011DFE  26D9               	addwf	fsr2l,f,c
  6418  011E00  5022               	movf	RTCC_to_caltime@ct+1,w,c
  6419  011E02  22DA               	addwfc	fsr2h,f,c
  6420  011E04  010F               	movlb	15	; () banked
  6421  011E06  513B               	movf	59,w,b	;volatile
  6422  011E08  EC85  F094         	call	_x_to_d
  6423  011E0C  6EDF               	movwf	indf2,c
  6424                           
  6425                           ;My_header\My_RTCC.h: 131: ct->hh = x_to_d(RTCVALL);
  6426  011E0E  EE20 F002          	lfsr	2,2
  6427  011E12  5021               	movf	RTCC_to_caltime@ct,w,c
  6428  011E14  26D9               	addwf	fsr2l,f,c
  6429  011E16  5022               	movf	RTCC_to_caltime@ct+1,w,c
  6430  011E18  22DA               	addwfc	fsr2h,f,c
  6431  011E1A  010F               	movlb	15	; () banked
  6432  011E1C  513A               	movf	58,w,b	;volatile
  6433  011E1E  EC85  F094         	call	_x_to_d
  6434  011E22  6EDF               	movwf	indf2,c
  6435                           
  6436                           ;My_header\My_RTCC.h: 132: ct->EE = x_to_d(RTCVALH);
  6437  011E24  EE20 F003          	lfsr	2,3
  6438  011E28  5021               	movf	RTCC_to_caltime@ct,w,c
  6439  011E2A  26D9               	addwf	fsr2l,f,c
  6440  011E2C  5022               	movf	RTCC_to_caltime@ct+1,w,c
  6441  011E2E  22DA               	addwfc	fsr2h,f,c
  6442  011E30  010F               	movlb	15	; () banked
  6443  011E32  513B               	movf	59,w,b	;volatile
  6444  011E34  EC85  F094         	call	_x_to_d
  6445  011E38  6EDF               	movwf	indf2,c
  6446                           
  6447                           ;My_header\My_RTCC.h: 133: ct->ss = x_to_d(RTCVALL);
  6448  011E3A  010F               	movlb	15	; () banked
  6449  011E3C  513A               	movf	58,w,b	;volatile
  6450  011E3E  EC85  F094         	call	_x_to_d
  6451  011E42  C021  FFD9         	movff	RTCC_to_caltime@ct,fsr2l
  6452  011E46  C022  FFDA         	movff	RTCC_to_caltime@ct+1,fsr2h
  6453  011E4A  6EDF               	movwf	indf2,c
  6454                           
  6455                           ;My_header\My_RTCC.h: 134: ct->mm = x_to_d(RTCVALH);
  6456  011E4C  EE20 F001          	lfsr	2,1
  6457  011E50  5021               	movf	RTCC_to_caltime@ct,w,c
  6458  011E52  26D9               	addwf	fsr2l,f,c
  6459  011E54  5022               	movf	RTCC_to_caltime@ct+1,w,c
  6460  011E56  22DA               	addwfc	fsr2h,f,c
  6461  011E58  010F               	movlb	15	; () banked
  6462  011E5A  513B               	movf	59,w,b	;volatile
  6463  011E5C  EC85  F094         	call	_x_to_d
  6464  011E60  6EDF               	movwf	indf2,c
  6465  011E62  0012               	return		;funcret
  6466  011E64                     __end_of_RTCC_to_caltime:
  6467                           	opt stack 0
  6468                           tblptru	equ	0xFF8
  6469                           tblptrh	equ	0xFF7
  6470                           tblptrl	equ	0xFF6
  6471                           tablat	equ	0xFF5
  6472                           prodh	equ	0xFF4
  6473                           prodl	equ	0xFF3
  6474                           intcon	equ	0xFF2
  6475                           postinc0	equ	0xFEE
  6476                           wreg	equ	0xFE8
  6477                           indf1	equ	0xFE7
  6478                           postinc1	equ	0xFE6
  6479                           postdec1	equ	0xFE5
  6480                           fsr1h	equ	0xFE2
  6481                           fsr1l	equ	0xFE1
  6482                           indf2	equ	0xFDF
  6483                           postinc2	equ	0xFDE
  6484                           postdec2	equ	0xFDD
  6485                           fsr2h	equ	0xFDA
  6486                           fsr2l	equ	0xFD9
  6487                           status	equ	0xFD8
  6488                           
  6489 ;; *************** function _x_to_d *****************
  6490 ;; Defined at:
  6491 ;;		line 81 in file "../My_header\My_RTCC.h"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;  hex             1    wreg     unsigned char 
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;  hex             1   31[COMRAM] unsigned char 
  6496 ;; Return value:  Size  Location     Type
  6497 ;;                  1    wreg      unsigned char 
  6498 ;; Registers used:
  6499 ;;		wreg, status,2, status,0, prodl, prodh
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6506 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6507 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6508 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6509 ;;Total ram usage:        2 bytes
  6510 ;; Hardware stack levels used:    1
  6511 ;; Hardware stack levels required when called:    4
  6512 ;; This function calls:
  6513 ;;		Nothing
  6514 ;; This function is called by:
  6515 ;;		_RTCC_to_caltime
  6516 ;; This function uses a non-reentrant model
  6517 ;;
  6518                           
  6519                           	psect	text24
  6520  01290A                     __ptext24:
  6521                           	opt stack 0
  6522  01290A                     _x_to_d:
  6523                           	opt stack 21
  6524                           
  6525                           ;incstack = 0
  6526                           ;x_to_d@hex stored from wreg
  6527  01290A  6E20               	movwf	x_to_d@hex,c
  6528                           
  6529                           ;My_header\My_RTCC.h: 82: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
  6530  01290C  C020  F01F         	movff	x_to_d@hex,??_x_to_d
  6531  012910  0E0F               	movlw	15
  6532  012912  161F               	andwf	??_x_to_d,f,c
  6533  012914  3820               	swapf	x_to_d@hex,w,c
  6534  012916  0B0F               	andlw	15
  6535  012918  0B0F               	andlw	15
  6536  01291A  0D0A               	mullw	10
  6537  01291C  50F3               	movf	prodl,w,c
  6538  01291E  241F               	addwf	??_x_to_d,w,c
  6539  012920  0012               	return	
  6540  012922  0012               	return		;funcret
  6541  012924                     __end_of_x_to_d:
  6542                           	opt stack 0
  6543                           tblptru	equ	0xFF8
  6544                           tblptrh	equ	0xFF7
  6545                           tblptrl	equ	0xFF6
  6546                           tablat	equ	0xFF5
  6547                           prodh	equ	0xFF4
  6548                           prodl	equ	0xFF3
  6549                           intcon	equ	0xFF2
  6550                           postinc0	equ	0xFEE
  6551                           wreg	equ	0xFE8
  6552                           indf1	equ	0xFE7
  6553                           postinc1	equ	0xFE6
  6554                           postdec1	equ	0xFE5
  6555                           fsr1h	equ	0xFE2
  6556                           fsr1l	equ	0xFE1
  6557                           indf2	equ	0xFDF
  6558                           postinc2	equ	0xFDE
  6559                           postdec2	equ	0xFDD
  6560                           fsr2h	equ	0xFDA
  6561                           fsr2l	equ	0xFD9
  6562                           status	equ	0xFD8
  6563                           
  6564 ;; *************** function _PWM_set *****************
  6565 ;; Defined at:
  6566 ;;		line 121 in file "PIC18F27J53-killifish_light02.c"
  6567 ;; Parameters:    Size  Location     Type
  6568 ;;  color           1    wreg     unsigned char 
  6569 ;;  value           2   12[BANK0 ] unsigned int 
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;  color           1   16[BANK0 ] unsigned char 
  6572 ;; Return value:  Size  Location     Type
  6573 ;;		None               void
  6574 ;; Registers used:
  6575 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6576 ;; Tracked objects:
  6577 ;;		On entry : 0/0
  6578 ;;		On exit  : 0/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6581 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6582 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6583 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6584 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6585 ;;Total ram usage:        5 bytes
  6586 ;; Hardware stack levels used:    1
  6587 ;; Hardware stack levels required when called:    5
  6588 ;; This function calls:
  6589 ;;		___lwdiv
  6590 ;;		___wmul
  6591 ;; This function is called by:
  6592 ;;		_command_operation
  6593 ;;		_normal_loop
  6594 ;; This function uses a non-reentrant model
  6595 ;;
  6596                           
  6597                           	psect	text25
  6598  01121A                     __ptext25:
  6599                           	opt stack 0
  6600  01121A                     _PWM_set:
  6601                           	opt stack 23
  6602                           
  6603                           ;incstack = 0
  6604                           ;PWM_set@color stored from wreg
  6605  01121A  0100               	movlb	0	; () banked
  6606  01121C  6F70               	movwf	PWM_set@color& (0+255),b
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;PIC18F27J53-killifish_light02.c: 122: value = value * value / 100;
  6610  01121E  C06C  F060         	movff	PWM_set@value,___wmul@multiplier
  6611  011222  C06D  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
  6612  011226  C06C  F062         	movff	PWM_set@value,___wmul@multiplicand
  6613  01122A  C06D  F063         	movff	PWM_set@value+1,___wmul@multiplicand+1
  6614  01122E  ECB1  F093         	call	___wmul	;wreg free
  6615  011232  C060  F064         	movff	?___wmul,___lwdiv@dividend
  6616  011236  C061  F065         	movff	?___wmul+1,___lwdiv@dividend+1
  6617  01123A  0E00               	movlw	0
  6618  01123C  0100               	movlb	0	; () banked
  6619  01123E  6F67               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6620  011240  0E64               	movlw	100
  6621  011242  6F66               	movwf	___lwdiv@divisor& (0+255),b
  6622  011244  ECA8  F090         	call	___lwdiv	;wreg free
  6623  011248  C064  F06C         	movff	?___lwdiv,PWM_set@value
  6624  01124C  C065  F06D         	movff	?___lwdiv+1,PWM_set@value+1
  6625                           
  6626                           ;PIC18F27J53-killifish_light02.c: 123: switch (color) {
  6627  011250  D05B               	goto	l4478
  6628  011252                     l4460:
  6629                           
  6630                           ;PIC18F27J53-killifish_light02.c: 125: if (value < 100 / 4) {
  6631  011252  0100               	movlb	0	; () banked
  6632  011254  516D               	movf	(PWM_set@value+1)& (0+255),w,b
  6633  011256  E107               	bnz	l4464
  6634  011258  0E19               	movlw	25
  6635  01125A  0100               	movlb	0	; () banked
  6636  01125C  5D6C               	subwf	PWM_set@value& (0+255),w,b
  6637  01125E  A0D8               	btfss	status,0,c
  6638  011260  D076               	goto	l4498
  6639  011262  D001               	goto	l4464
  6640                           
  6641                           ; BSR set to: 0
  6642                           ;PIC18F27J53-killifish_light02.c: 127: } else {
  6643  011264  D074               	goto	l4498
  6644  011266                     l4464:
  6645                           
  6646                           ; BSR set to: 0
  6647                           ;PIC18F27J53-killifish_light02.c: 128: value = 2 * (value - 100 / 4) / 3 + 100 / 4;
  6648  011266  C06C  F06E         	movff	PWM_set@value,??_PWM_set
  6649  01126A  C06D  F06F         	movff	PWM_set@value+1,??_PWM_set+1
  6650  01126E  90D8               	bcf	status,0,c
  6651  011270  0100               	movlb	0	; () banked
  6652  011272  376E               	rlcf	??_PWM_set& (0+255),f,b
  6653  011274  376F               	rlcf	(??_PWM_set+1)& (0+255),f,b
  6654  011276  0ECE               	movlw	206
  6655  011278  0100               	movlb	0	; () banked
  6656  01127A  256E               	addwf	??_PWM_set& (0+255),w,b
  6657  01127C  0100               	movlb	0	; () banked
  6658  01127E  6F64               	movwf	___lwdiv@dividend& (0+255),b
  6659  011280  0EFF               	movlw	255
  6660  011282  0100               	movlb	0	; () banked
  6661  011284  216F               	addwfc	(??_PWM_set+1)& (0+255),w,b
  6662  011286  0100               	movlb	0	; () banked
  6663  011288  6F65               	movwf	(___lwdiv@dividend+1)& (0+255),b
  6664  01128A  0E00               	movlw	0
  6665  01128C  0100               	movlb	0	; () banked
  6666  01128E  6F67               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6667  011290  0E03               	movlw	3
  6668  011292  6F66               	movwf	___lwdiv@divisor& (0+255),b
  6669  011294  ECA8  F090         	call	___lwdiv	;wreg free
  6670  011298  0E19               	movlw	25
  6671  01129A  0100               	movlb	0	; () banked
  6672  01129C  2564               	addwf	?___lwdiv& (0+255),w,b
  6673  01129E  0100               	movlb	0	; () banked
  6674  0112A0  6F6C               	movwf	PWM_set@value& (0+255),b
  6675  0112A2  0E00               	movlw	0
  6676  0112A4  0100               	movlb	0	; () banked
  6677  0112A6  2165               	addwfc	(?___lwdiv+1)& (0+255),w,b
  6678  0112A8  D02C               	goto	L1
  6679                           
  6680                           ; BSR set to: 0
  6681                           ;PIC18F27J53-killifish_light02.c: 136: }
  6682                           ;PIC18F27J53-killifish_light02.c: 137: break;
  6683                           
  6684                           ; BSR set to: 0
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;PIC18F27J53-killifish_light02.c: 134: } else {
  6688                           
  6689                           ; BSR set to: 0
  6690                           
  6691                           ; BSR set to: 0
  6692                           
  6693                           ;PIC18F27J53-killifish_light02.c: 131: case 1:
  6694                           
  6695                           ; BSR set to: 0
  6696                           ;PIC18F27J53-killifish_light02.c: 129: }
  6697                           ;PIC18F27J53-killifish_light02.c: 130: break;
  6698  0112AA  D051               	goto	l4498
  6699  0112AC                     l4470:
  6700                           
  6701                           ; BSR set to: 0
  6702                           ;PIC18F27J53-killifish_light02.c: 139: if (value < 100 / 4) {
  6703  0112AC  0100               	movlb	0	; () banked
  6704  0112AE  516D               	movf	(PWM_set@value+1)& (0+255),w,b
  6705  0112B0  E107               	bnz	l4474
  6706  0112B2  0E19               	movlw	25
  6707  0112B4  0100               	movlb	0	; () banked
  6708  0112B6  5D6C               	subwf	PWM_set@value& (0+255),w,b
  6709  0112B8  A0D8               	btfss	status,0,c
  6710  0112BA  D049               	goto	l4498
  6711  0112BC  D001               	goto	l4474
  6712                           
  6713                           ; BSR set to: 0
  6714                           ;PIC18F27J53-killifish_light02.c: 141: } else {
  6715  0112BE  D047               	goto	l4498
  6716  0112C0                     l4474:
  6717                           
  6718                           ; BSR set to: 0
  6719                           ;PIC18F27J53-killifish_light02.c: 142: value = 3 * (value - 100 / 4) / 4 + 100 / 4;
  6720  0112C0  0EE7               	movlw	231
  6721  0112C2  0100               	movlb	0	; () banked
  6722  0112C4  256C               	addwf	PWM_set@value& (0+255),w,b
  6723  0112C6  0100               	movlb	0	; () banked
  6724  0112C8  6F60               	movwf	___wmul@multiplier& (0+255),b
  6725  0112CA  0EFF               	movlw	255
  6726  0112CC  0100               	movlb	0	; () banked
  6727  0112CE  216D               	addwfc	(PWM_set@value+1)& (0+255),w,b
  6728  0112D0  0100               	movlb	0	; () banked
  6729  0112D2  6F61               	movwf	(___wmul@multiplier+1)& (0+255),b
  6730  0112D4  0E00               	movlw	0
  6731  0112D6  0100               	movlb	0	; () banked
  6732  0112D8  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6733  0112DA  0E03               	movlw	3
  6734  0112DC  6F62               	movwf	___wmul@multiplicand& (0+255),b
  6735  0112DE  ECB1  F093         	call	___wmul	;wreg free
  6736  0112E2  0100               	movlb	0	; () banked
  6737  0112E4  90D8               	bcf	status,0,c
  6738  0112E6  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  6739  0112E8  3360               	rrcf	?___wmul& (0+255),f,b
  6740  0112EA  0100               	movlb	0	; () banked
  6741  0112EC  90D8               	bcf	status,0,c
  6742  0112EE  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  6743  0112F0  3360               	rrcf	?___wmul& (0+255),f,b
  6744  0112F2  0E19               	movlw	25
  6745  0112F4  0100               	movlb	0	; () banked
  6746  0112F6  2560               	addwf	?___wmul& (0+255),w,b
  6747  0112F8  0100               	movlb	0	; () banked
  6748  0112FA  6F6C               	movwf	PWM_set@value& (0+255),b
  6749  0112FC  0E00               	movlw	0
  6750  0112FE  0100               	movlb	0	; () banked
  6751  011300  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  6752  011302                     L1:
  6753  011302  0100               	movlb	0	; () banked
  6754  011304  6F6D               	movwf	(PWM_set@value+1)& (0+255),b
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;PIC18F27J53-killifish_light02.c: 147: }
  6758                           
  6759                           ; BSR set to: 0
  6760                           ;PIC18F27J53-killifish_light02.c: 146: break;
  6761                           
  6762                           ;PIC18F27J53-killifish_light02.c: 145: case 3:
  6763                           
  6764                           ; BSR set to: 0
  6765                           ;PIC18F27J53-killifish_light02.c: 143: }
  6766                           ;PIC18F27J53-killifish_light02.c: 144: break;
  6767  011306  D023               	goto	l4498
  6768  011308                     l4478:
  6769  011308  0100               	movlb	0	; () banked
  6770  01130A  5170               	movf	PWM_set@color& (0+255),w,b
  6771                           
  6772                           ; Switch size 1, requested type "space"
  6773                           ; Number of cases is 4, Range of values is 0 to 3
  6774                           ; switch strategies available:
  6775                           ; Name         Instructions Cycles
  6776                           ; simple_byte           13     7 (average)
  6777                           ;	Chosen strategy is simple_byte
  6778  01130C  0A00               	xorlw	0	; case 0
  6779  01130E  B4D8               	btfsc	status,2,c
  6780  011310  D7A0               	goto	l4460
  6781  011312  0A01               	xorlw	1	; case 1
  6782  011314  B4D8               	btfsc	status,2,c
  6783  011316  D01B               	goto	l4498
  6784  011318  0A03               	xorlw	3	; case 2
  6785  01131A  B4D8               	btfsc	status,2,c
  6786  01131C  D7C7               	goto	l4470
  6787  01131E  0A01               	xorlw	1	; case 3
  6788                           
  6789                           ; BSR set to: 0
  6790                           ;PIC18F27J53-killifish_light02.c: 148: switch (color) {
  6791  011320  D016               	goto	l4498
  6792  011322                     l4480:
  6793                           
  6794                           ; BSR set to: 0
  6795                           ;PIC18F27J53-killifish_light02.c: 150: CCP1CONbits.DC1B = 0;
  6796  011322  0ECF               	movlw	-49
  6797  011324  16BA               	andwf	4026,f,c	;volatile
  6798                           
  6799                           ; BSR set to: 0
  6800                           ;PIC18F27J53-killifish_light02.c: 151: CCPR1L = value;
  6801  011326  C06C  FFBB         	movff	PWM_set@value,4027	;volatile
  6802                           
  6803                           ;PIC18F27J53-killifish_light02.c: 152: break;
  6804  01132A  0012               	return	
  6805  01132C                     l4484:
  6806                           
  6807                           ; BSR set to: 0
  6808                           ;PIC18F27J53-killifish_light02.c: 154: CCP2CONbits.DC2B = 0;
  6809  01132C  0ECF               	movlw	-49
  6810  01132E  16B4               	andwf	4020,f,c	;volatile
  6811                           
  6812                           ; BSR set to: 0
  6813                           ;PIC18F27J53-killifish_light02.c: 155: CCPR2L = value;
  6814  011330  C06C  FFB5         	movff	PWM_set@value,4021	;volatile
  6815                           
  6816                           ;PIC18F27J53-killifish_light02.c: 156: break;
  6817  011334  0012               	return	
  6818  011336                     l4488:
  6819                           
  6820                           ; BSR set to: 0
  6821                           ;PIC18F27J53-killifish_light02.c: 158: CCP3CONbits.DC3B = 0;
  6822  011336  0ECF               	movlw	-49
  6823  011338  010F               	movlb	15	; () banked
  6824  01133A  1715               	andwf	21,f,b	;volatile
  6825                           
  6826                           ; BSR set to: 15
  6827                           ;PIC18F27J53-killifish_light02.c: 159: CCPR3L = value;
  6828  01133C  C06C  FF16         	movff	PWM_set@value,3862	;volatile
  6829                           
  6830                           ;PIC18F27J53-killifish_light02.c: 160: break;
  6831  011340  0012               	return	
  6832  011342                     l4492:
  6833                           
  6834                           ;PIC18F27J53-killifish_light02.c: 162: CCP4CONbits.DC4B = 0;
  6835  011342  0ECF               	movlw	-49
  6836  011344  010F               	movlb	15	; () banked
  6837  011346  1712               	andwf	18,f,b	;volatile
  6838                           
  6839                           ; BSR set to: 15
  6840                           ;PIC18F27J53-killifish_light02.c: 163: CCPR4L = value;
  6841  011348  C06C  FF13         	movff	PWM_set@value,3859	;volatile
  6842                           
  6843                           ; BSR set to: 15
  6844                           ;PIC18F27J53-killifish_light02.c: 165: }
  6845                           
  6846                           ;PIC18F27J53-killifish_light02.c: 164: break;
  6847  01134C  0012               	return	
  6848  01134E                     l4498:
  6849  01134E  0100               	movlb	0	; () banked
  6850  011350  5170               	movf	PWM_set@color& (0+255),w,b
  6851                           
  6852                           ; Switch size 1, requested type "space"
  6853                           ; Number of cases is 4, Range of values is 0 to 3
  6854                           ; switch strategies available:
  6855                           ; Name         Instructions Cycles
  6856                           ; simple_byte           13     7 (average)
  6857                           ;	Chosen strategy is simple_byte
  6858  011352  0A00               	xorlw	0	; case 0
  6859  011354  B4D8               	btfsc	status,2,c
  6860  011356  D7E5               	goto	l4480
  6861  011358  0A01               	xorlw	1	; case 1
  6862  01135A  B4D8               	btfsc	status,2,c
  6863  01135C  D7E7               	goto	l4484
  6864  01135E  0A03               	xorlw	3	; case 2
  6865  011360  B4D8               	btfsc	status,2,c
  6866  011362  D7E9               	goto	l4488
  6867  011364  0A01               	xorlw	1	; case 3
  6868  011366  A4D8               	btfss	status,2,c
  6869  011368  0012               	return	
  6870  01136A  D7EB               	goto	l4492
  6871                           
  6872                           ; BSR set to: 0
  6873  01136C  0012               	return		;funcret
  6874  01136E                     __end_of_PWM_set:
  6875                           	opt stack 0
  6876                           tblptru	equ	0xFF8
  6877                           tblptrh	equ	0xFF7
  6878                           tblptrl	equ	0xFF6
  6879                           tablat	equ	0xFF5
  6880                           prodh	equ	0xFF4
  6881                           prodl	equ	0xFF3
  6882                           intcon	equ	0xFF2
  6883                           postinc0	equ	0xFEE
  6884                           wreg	equ	0xFE8
  6885                           indf1	equ	0xFE7
  6886                           postinc1	equ	0xFE6
  6887                           postdec1	equ	0xFE5
  6888                           fsr1h	equ	0xFE2
  6889                           fsr1l	equ	0xFE1
  6890                           indf2	equ	0xFDF
  6891                           postinc2	equ	0xFDE
  6892                           postdec2	equ	0xFDD
  6893                           fsr2h	equ	0xFDA
  6894                           fsr2l	equ	0xFD9
  6895                           status	equ	0xFD8
  6896                           
  6897 ;; *************** function ___wmul *****************
  6898 ;; Defined at:
  6899 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  6900 ;; Parameters:    Size  Location     Type
  6901 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6902 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6903 ;; Auto vars:     Size  Location     Type
  6904 ;;  product         2   34[COMRAM] unsigned int 
  6905 ;; Return value:  Size  Location     Type
  6906 ;;                  2    0[BANK0 ] unsigned int 
  6907 ;; Registers used:
  6908 ;;		wreg, status,2, status,0, prodl, prodh
  6909 ;; Tracked objects:
  6910 ;;		On entry : 0/0
  6911 ;;		On exit  : 0/0
  6912 ;;		Unchanged: 0/0
  6913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6914 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6915 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6917 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6918 ;;Total ram usage:        6 bytes
  6919 ;; Hardware stack levels used:    1
  6920 ;; Hardware stack levels required when called:    4
  6921 ;; This function calls:
  6922 ;;		Nothing
  6923 ;; This function is called by:
  6924 ;;		_my_atoi
  6925 ;;		_PWM_set
  6926 ;;		_normal_loop
  6927 ;; This function uses a non-reentrant model
  6928 ;;
  6929                           
  6930                           	psect	text26
  6931  012762                     __ptext26:
  6932                           	opt stack 0
  6933  012762                     ___wmul:
  6934                           	opt stack 23
  6935                           
  6936                           ;incstack = 0
  6937  012762  0100               	movlb	0	; () banked
  6938  012764  5160               	movf	___wmul@multiplier& (0+255),w,b
  6939  012766  0100               	movlb	0	; () banked
  6940  012768  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6941  01276A  CFF3 F023          	movff	prodl,___wmul@product
  6942  01276E  CFF4 F024          	movff	prodh,___wmul@product+1
  6943  012772  0100               	movlb	0	; () banked
  6944  012774  5160               	movf	___wmul@multiplier& (0+255),w,b
  6945  012776  0100               	movlb	0	; () banked
  6946  012778  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6947  01277A  50F3               	movf	prodl,w,c
  6948  01277C  2624               	addwf	___wmul@product+1,f,c
  6949  01277E  0100               	movlb	0	; () banked
  6950  012780  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6951  012782  0100               	movlb	0	; () banked
  6952  012784  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6953  012786  50F3               	movf	prodl,w,c
  6954  012788  2624               	addwf	___wmul@product+1,f,c
  6955                           
  6956                           ; BSR set to: 0
  6957  01278A  C023  F060         	movff	___wmul@product,?___wmul
  6958  01278E  C024  F061         	movff	___wmul@product+1,?___wmul+1
  6959  012792  0012               	return	
  6960                           
  6961                           ; BSR set to: 0
  6962                           
  6963                           ; BSR set to: 0
  6964  012794  0012               	return		;funcret
  6965  012796                     __end_of___wmul:
  6966                           	opt stack 0
  6967                           tblptru	equ	0xFF8
  6968                           tblptrh	equ	0xFF7
  6969                           tblptrl	equ	0xFF6
  6970                           tablat	equ	0xFF5
  6971                           prodh	equ	0xFF4
  6972                           prodl	equ	0xFF3
  6973                           intcon	equ	0xFF2
  6974                           postinc0	equ	0xFEE
  6975                           wreg	equ	0xFE8
  6976                           indf1	equ	0xFE7
  6977                           postinc1	equ	0xFE6
  6978                           postdec1	equ	0xFE5
  6979                           fsr1h	equ	0xFE2
  6980                           fsr1l	equ	0xFE1
  6981                           indf2	equ	0xFDF
  6982                           postinc2	equ	0xFDE
  6983                           postdec2	equ	0xFDD
  6984                           fsr2h	equ	0xFDA
  6985                           fsr2l	equ	0xFD9
  6986                           status	equ	0xFD8
  6987                           
  6988 ;; *************** function ___lwdiv *****************
  6989 ;; Defined at:
  6990 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  6991 ;; Parameters:    Size  Location     Type
  6992 ;;  dividend        2    4[BANK0 ] unsigned int 
  6993 ;;  divisor         2    6[BANK0 ] unsigned int 
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;  quotient        2    9[BANK0 ] unsigned int 
  6996 ;;  counter         1    8[BANK0 ] unsigned char 
  6997 ;; Return value:  Size  Location     Type
  6998 ;;                  2    4[BANK0 ] unsigned int 
  6999 ;; Registers used:
  7000 ;;		wreg, status,2, status,0
  7001 ;; Tracked objects:
  7002 ;;		On entry : 0/0
  7003 ;;		On exit  : 0/0
  7004 ;;		Unchanged: 0/0
  7005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7006 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7007 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7009 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7010 ;;Total ram usage:        7 bytes
  7011 ;; Hardware stack levels used:    1
  7012 ;; Hardware stack levels required when called:    4
  7013 ;; This function calls:
  7014 ;;		Nothing
  7015 ;; This function is called by:
  7016 ;;		_tx_sendn
  7017 ;;		_my_utoa
  7018 ;;		_PWM_set
  7019 ;;		_normal_loop
  7020 ;;		_ringbuf_put_num
  7021 ;; This function uses a non-reentrant model
  7022 ;;
  7023                           
  7024                           	psect	text27
  7025  012150                     __ptext27:
  7026                           	opt stack 0
  7027  012150                     ___lwdiv:
  7028                           	opt stack 24
  7029                           
  7030                           ; BSR set to: 0
  7031                           ;incstack = 0
  7032  012150  0E00               	movlw	0
  7033  012152  0100               	movlb	0	; () banked
  7034  012154  6F6A               	movwf	(___lwdiv@quotient+1)& (0+255),b
  7035  012156  0E00               	movlw	0
  7036  012158  6F69               	movwf	___lwdiv@quotient& (0+255),b
  7037                           
  7038                           ; BSR set to: 0
  7039  01215A  0100               	movlb	0	; () banked
  7040  01215C  5166               	movf	___lwdiv@divisor& (0+255),w,b
  7041  01215E  0100               	movlb	0	; () banked
  7042  012160  1167               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  7043  012162  B4D8               	btfsc	status,2,c
  7044  012164  D031               	goto	l1151
  7045                           
  7046                           ; BSR set to: 0
  7047  012166  0E01               	movlw	1
  7048  012168  0100               	movlb	0	; () banked
  7049  01216A  6F68               	movwf	___lwdiv@counter& (0+255),b
  7050  01216C  D007               	goto	l4174
  7051  01216E                     l4172:
  7052                           
  7053                           ; BSR set to: 0
  7054  01216E  0100               	movlb	0	; () banked
  7055  012170  90D8               	bcf	status,0,c
  7056  012172  3766               	rlcf	___lwdiv@divisor& (0+255),f,b
  7057  012174  3767               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  7058  012176  0100               	movlb	0	; () banked
  7059  012178  2B68               	incf	___lwdiv@counter& (0+255),f,b
  7060  01217A  D000               	goto	l4174
  7061  01217C                     l4174:
  7062                           
  7063                           ; BSR set to: 0
  7064  01217C  0100               	movlb	0	; () banked
  7065  01217E  BF67               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  7066  012180  D002               	goto	l4176
  7067  012182  D7F5               	goto	l4172
  7068                           
  7069                           ; BSR set to: 0
  7070  012184  D000               	goto	l4176
  7071  012186                     l4176:
  7072                           
  7073                           ; BSR set to: 0
  7074  012186  0100               	movlb	0	; () banked
  7075  012188  90D8               	bcf	status,0,c
  7076  01218A  3769               	rlcf	___lwdiv@quotient& (0+255),f,b
  7077  01218C  376A               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  7078                           
  7079                           ; BSR set to: 0
  7080  01218E  0100               	movlb	0	; () banked
  7081  012190  5166               	movf	___lwdiv@divisor& (0+255),w,b
  7082  012192  0100               	movlb	0	; () banked
  7083  012194  5D64               	subwf	___lwdiv@dividend& (0+255),w,b
  7084  012196  0100               	movlb	0	; () banked
  7085  012198  5167               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7086  01219A  0100               	movlb	0	; () banked
  7087  01219C  5965               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  7088  01219E  A0D8               	btfss	status,0,c
  7089  0121A0  D00B               	goto	l4184
  7090                           
  7091                           ; BSR set to: 0
  7092  0121A2  0100               	movlb	0	; () banked
  7093  0121A4  5166               	movf	___lwdiv@divisor& (0+255),w,b
  7094  0121A6  0100               	movlb	0	; () banked
  7095  0121A8  5F64               	subwf	___lwdiv@dividend& (0+255),f,b
  7096  0121AA  0100               	movlb	0	; () banked
  7097  0121AC  5167               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7098  0121AE  0100               	movlb	0	; () banked
  7099  0121B0  5B65               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  7100                           
  7101                           ; BSR set to: 0
  7102  0121B2  0100               	movlb	0	; () banked
  7103  0121B4  8169               	bsf	___lwdiv@quotient& (0+255),0,b
  7104  0121B6  D000               	goto	l4184
  7105  0121B8                     l4184:
  7106                           
  7107                           ; BSR set to: 0
  7108  0121B8  0100               	movlb	0	; () banked
  7109  0121BA  90D8               	bcf	status,0,c
  7110  0121BC  3367               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  7111  0121BE  3366               	rrcf	___lwdiv@divisor& (0+255),f,b
  7112                           
  7113                           ; BSR set to: 0
  7114  0121C0  0100               	movlb	0	; () banked
  7115  0121C2  2F68               	decfsz	___lwdiv@counter& (0+255),f,b
  7116  0121C4  D7E0               	goto	l4176
  7117  0121C6  D000               	goto	l1151
  7118  0121C8                     l1151:
  7119                           
  7120                           ; BSR set to: 0
  7121  0121C8  C069  F064         	movff	___lwdiv@quotient,?___lwdiv
  7122  0121CC  C06A  F065         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7123                           
  7124                           ; BSR set to: 0
  7125  0121D0  0012               	return		;funcret
  7126  0121D2                     __end_of___lwdiv:
  7127                           	opt stack 0
  7128                           tblptru	equ	0xFF8
  7129                           tblptrh	equ	0xFF7
  7130                           tblptrl	equ	0xFF6
  7131                           tablat	equ	0xFF5
  7132                           prodh	equ	0xFF4
  7133                           prodl	equ	0xFF3
  7134                           intcon	equ	0xFF2
  7135                           postinc0	equ	0xFEE
  7136                           wreg	equ	0xFE8
  7137                           indf1	equ	0xFE7
  7138                           postinc1	equ	0xFE6
  7139                           postdec1	equ	0xFE5
  7140                           fsr1h	equ	0xFE2
  7141                           fsr1l	equ	0xFE1
  7142                           indf2	equ	0xFDF
  7143                           postinc2	equ	0xFDE
  7144                           postdec2	equ	0xFDD
  7145                           fsr2h	equ	0xFDA
  7146                           fsr2l	equ	0xFD9
  7147                           status	equ	0xFD8
  7148                           
  7149 ;; *************** function _ADC *****************
  7150 ;; Defined at:
  7151 ;;		line 172 in file "../My_header\My_header.h"
  7152 ;; Parameters:    Size  Location     Type
  7153 ;;  ch              1    wreg     unsigned char 
  7154 ;; Auto vars:     Size  Location     Type
  7155 ;;  ch              1   33[COMRAM] unsigned char 
  7156 ;; Return value:  Size  Location     Type
  7157 ;;                  2   30[COMRAM] unsigned int 
  7158 ;; Registers used:
  7159 ;;		wreg, status,2, status,0
  7160 ;; Tracked objects:
  7161 ;;		On entry : 0/0
  7162 ;;		On exit  : 0/0
  7163 ;;		Unchanged: 0/0
  7164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7165 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7166 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7167 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7168 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7169 ;;Total ram usage:        4 bytes
  7170 ;; Hardware stack levels used:    1
  7171 ;; Hardware stack levels required when called:    4
  7172 ;; This function calls:
  7173 ;;		Nothing
  7174 ;; This function is called by:
  7175 ;;		_normal_loop
  7176 ;; This function uses a non-reentrant model
  7177 ;;
  7178                           
  7179                           	psect	text28
  7180  0127F8                     __ptext28:
  7181                           	opt stack 0
  7182  0127F8                     _ADC:
  7183                           	opt stack 25
  7184                           
  7185                           ; BSR set to: 0
  7186                           ;incstack = 0
  7187                           ;ADC@ch stored from wreg
  7188  0127F8  6E22               	movwf	ADC@ch,c
  7189                           
  7190                           ;My_header\My_header.h: 173: ADCON0bits.CHS = ch;
  7191  0127FA  C022  F021         	movff	ADC@ch,??_ADC
  7192  0127FE  4621               	rlncf	??_ADC,f,c
  7193  012800  4621               	rlncf	??_ADC,f,c
  7194  012802  50C2               	movf	4034,w,c	;volatile
  7195  012804  1821               	xorwf	??_ADC,w,c
  7196  012806  0BC3               	andlw	-61
  7197  012808  1821               	xorwf	??_ADC,w,c
  7198  01280A  6EC2               	movwf	4034,c	;volatile
  7199                           
  7200                           ;My_header\My_header.h: 174: ADCON0bits.ADON = 1;
  7201  01280C  80C2               	bsf	4034,0,c	;volatile
  7202                           
  7203                           ;My_header\My_header.h: 176: PIR1bits.ADIF = 0;
  7204  01280E  9C9E               	bcf	3998,6,c	;volatile
  7205                           
  7206                           ;My_header\My_header.h: 177: ADCON0bits.GO_nDONE = 1;
  7207  012810  82C2               	bsf	4034,1,c	;volatile
  7208                           
  7209                           ;My_header\My_header.h: 178: while (!PIR1bits.ADIF);
  7210  012812  D000               	goto	l151
  7211  012814                     l151:
  7212  012814  AC9E               	btfss	3998,6,c	;volatile
  7213  012816  D7FE               	goto	l151
  7214                           
  7215                           ;My_header\My_header.h: 179: return ADRES;
  7216  012818  CFC3 F01F          	movff	4035,?_ADC	;volatile
  7217  01281C  CFC4 F020          	movff	4036,?_ADC+1	;volatile
  7218  012820  0012               	return		;funcret
  7219  012822                     __end_of_ADC:
  7220                           	opt stack 0
  7221                           tblptru	equ	0xFF8
  7222                           tblptrh	equ	0xFF7
  7223                           tblptrl	equ	0xFF6
  7224                           tablat	equ	0xFF5
  7225                           prodh	equ	0xFF4
  7226                           prodl	equ	0xFF3
  7227                           intcon	equ	0xFF2
  7228                           postinc0	equ	0xFEE
  7229                           wreg	equ	0xFE8
  7230                           indf1	equ	0xFE7
  7231                           postinc1	equ	0xFE6
  7232                           postdec1	equ	0xFE5
  7233                           fsr1h	equ	0xFE2
  7234                           fsr1l	equ	0xFE1
  7235                           indf2	equ	0xFDF
  7236                           postinc2	equ	0xFDE
  7237                           postdec2	equ	0xFDD
  7238                           fsr2h	equ	0xFDA
  7239                           fsr2l	equ	0xFD9
  7240                           status	equ	0xFD8
  7241                           
  7242 ;; *************** function _main_init *****************
  7243 ;; Defined at:
  7244 ;;		line 396 in file "PIC18F27J53-killifish_light02.c"
  7245 ;; Parameters:    Size  Location     Type
  7246 ;;		None
  7247 ;; Auto vars:     Size  Location     Type
  7248 ;;		None
  7249 ;; Return value:  Size  Location     Type
  7250 ;;		None               void
  7251 ;; Registers used:
  7252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7253 ;; Tracked objects:
  7254 ;;		On entry : 0/0
  7255 ;;		On exit  : 0/0
  7256 ;;		Unchanged: 0/0
  7257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7262 ;;Total ram usage:        0 bytes
  7263 ;; Hardware stack levels used:    1
  7264 ;; Hardware stack levels required when called:    5
  7265 ;; This function calls:
  7266 ;;		_ADC_init
  7267 ;;		_OSC_init
  7268 ;;		_PWM_init
  7269 ;;		_RTCC_init
  7270 ;;		_UART_init
  7271 ;;		_ringbuf_init
  7272 ;;		_timer0_init
  7273 ;;		_timer1_init
  7274 ;;		_timer3_init
  7275 ;; This function is called by:
  7276 ;;		_main
  7277 ;; This function uses a non-reentrant model
  7278 ;;
  7279                           
  7280                           	psect	text29
  7281  0121D2                     __ptext29:
  7282                           	opt stack 0
  7283  0121D2                     _main_init:
  7284                           	opt stack 25
  7285                           
  7286                           ;PIC18F27J53-killifish_light02.c: 397: OSC_init();
  7287                           
  7288                           ;incstack = 0
  7289  0121D2  EC9D  F094         	call	_OSC_init	;wreg free
  7290                           
  7291                           ;PIC18F27J53-killifish_light02.c: 398: TRISA = 0b11110111;
  7292  0121D6  0EF7               	movlw	247
  7293  0121D8  6E92               	movwf	3986,c	;volatile
  7294                           
  7295                           ;PIC18F27J53-killifish_light02.c: 399: TRISB = 0b00000000;
  7296  0121DA  0E00               	movlw	0
  7297  0121DC  6E93               	movwf	3987,c	;volatile
  7298                           
  7299                           ;PIC18F27J53-killifish_light02.c: 400: TRISC = 0b10111010;
  7300  0121DE  0EBA               	movlw	186
  7301  0121E0  6E94               	movwf	3988,c	;volatile
  7302                           
  7303                           ;PIC18F27J53-killifish_light02.c: 401: ANCON0 = 0b11111000;
  7304  0121E2  0EF8               	movlw	248
  7305  0121E4  010F               	movlb	15	; () banked
  7306  0121E6  6F48               	movwf	72,b	;volatile
  7307                           
  7308                           ; BSR set to: 15
  7309                           ;PIC18F27J53-killifish_light02.c: 402: ANCON1 = 0b00011111;
  7310  0121E8  0E1F               	movlw	31
  7311  0121EA  010F               	movlb	15	; () banked
  7312  0121EC  6F49               	movwf	73,b	;volatile
  7313                           
  7314                           ; BSR set to: 15
  7315                           ;PIC18F27J53-killifish_light02.c: 403: INTCON2bits.RBPU = 0;
  7316  0121EE  9EF1               	bcf	intcon2,7,c	;volatile
  7317                           
  7318                           ; BSR set to: 15
  7319                           ;PIC18F27J53-killifish_light02.c: 405: timer0_init(6);
  7320  0121F0  0E06               	movlw	6
  7321  0121F2  ECCB  F093         	call	_timer0_init
  7322                           
  7323                           ;PIC18F27J53-killifish_light02.c: 406: timer1_init(0, 2);
  7324  0121F6  0E02               	movlw	2
  7325  0121F8  6E1F               	movwf	timer1_init@clock_select,c
  7326  0121FA  0E00               	movlw	0
  7327  0121FC  EC73  F093         	call	_timer1_init
  7328                           
  7329                           ;PIC18F27J53-killifish_light02.c: 407: timer3_init(2);
  7330  012200  0E02               	movlw	2
  7331  012202  EC11  F094         	call	_timer3_init
  7332                           
  7333                           ;PIC18F27J53-killifish_light02.c: 408: ADC_init(0);
  7334  012206  0E00               	movlw	0
  7335  012208  EC77  F094         	call	_ADC_init
  7336                           
  7337                           ;PIC18F27J53-killifish_light02.c: 409: RTCC_init();
  7338  01220C  ECE4  F093         	call	_RTCC_init	;wreg free
  7339                           
  7340                           ;PIC18F27J53-killifish_light02.c: 410: PWM_init(100);
  7341  012210  0E64               	movlw	100
  7342  012212  ECD3  F08D         	call	_PWM_init
  7343                           
  7344                           ;PIC18F27J53-killifish_light02.c: 412: UART_init();
  7345  012216  EC57  F094         	call	_UART_init	;wreg free
  7346                           
  7347                           ;PIC18F27J53-killifish_light02.c: 413: static uint8_t txbuf[1000];
  7348                           ;PIC18F27J53-killifish_light02.c: 414: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
  7349  01221A  0ED3               	movlw	low _tx_buf
  7350  01221C  6E1F               	movwf	ringbuf_init@rb,c
  7351  01221E  0E01               	movlw	high _tx_buf
  7352  012220  6E20               	movwf	ringbuf_init@rb+1,c
  7353  012222  0E64               	movlw	low main_init@txbuf
  7354  012224  6E21               	movwf	ringbuf_init@internal_buf,c
  7355  012226  0E04               	movlw	high main_init@txbuf
  7356  012228  6E22               	movwf	ringbuf_init@internal_buf+1,c
  7357  01222A  0E03               	movlw	3
  7358  01222C  6E24               	movwf	ringbuf_init@bufsize+1,c
  7359  01222E  0EE8               	movlw	232
  7360  012230  6E23               	movwf	ringbuf_init@bufsize,c
  7361  012232  ECDB  F092         	call	_ringbuf_init	;wreg free
  7362                           
  7363                           ;PIC18F27J53-killifish_light02.c: 415: static uint8_t rxbuf[250];
  7364                           ;PIC18F27J53-killifish_light02.c: 416: ringbuf_init(&rx_buf, rxbuf, sizeof (rxbuf));
  7365  012236  0ECB               	movlw	low _rx_buf
  7366  012238  6E1F               	movwf	ringbuf_init@rb,c
  7367  01223A  0E01               	movlw	high _rx_buf
  7368  01223C  6E20               	movwf	ringbuf_init@rb+1,c
  7369  01223E  0E00               	movlw	low main_init@rxbuf
  7370  012240  6E21               	movwf	ringbuf_init@internal_buf,c
  7371  012242  0E03               	movlw	high main_init@rxbuf
  7372  012244  6E22               	movwf	ringbuf_init@internal_buf+1,c
  7373  012246  0E00               	movlw	0
  7374  012248  6E24               	movwf	ringbuf_init@bufsize+1,c
  7375  01224A  0EFA               	movlw	250
  7376  01224C  6E23               	movwf	ringbuf_init@bufsize,c
  7377  01224E  ECDB  F092         	call	_ringbuf_init	;wreg free
  7378  012252  0012               	return		;funcret
  7379  012254                     __end_of_main_init:
  7380                           	opt stack 0
  7381                           tblptru	equ	0xFF8
  7382                           tblptrh	equ	0xFF7
  7383                           tblptrl	equ	0xFF6
  7384                           tablat	equ	0xFF5
  7385                           prodh	equ	0xFF4
  7386                           prodl	equ	0xFF3
  7387                           intcon	equ	0xFF2
  7388                           intcon2	equ	0xFF1
  7389                           postinc0	equ	0xFEE
  7390                           wreg	equ	0xFE8
  7391                           indf1	equ	0xFE7
  7392                           postinc1	equ	0xFE6
  7393                           postdec1	equ	0xFE5
  7394                           fsr1h	equ	0xFE2
  7395                           fsr1l	equ	0xFE1
  7396                           indf2	equ	0xFDF
  7397                           postinc2	equ	0xFDE
  7398                           postdec2	equ	0xFDD
  7399                           fsr2h	equ	0xFDA
  7400                           fsr2l	equ	0xFD9
  7401                           status	equ	0xFD8
  7402                           
  7403 ;; *************** function _timer3_init *****************
  7404 ;; Defined at:
  7405 ;;		line 85 in file "../My_header\My_header.h"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;  prescaler       1    wreg     unsigned char 
  7408 ;; Auto vars:     Size  Location     Type
  7409 ;;  prescaler       1   31[COMRAM] unsigned char 
  7410 ;; Return value:  Size  Location     Type
  7411 ;;		None               void
  7412 ;; Registers used:
  7413 ;;		wreg, status,2, status,0
  7414 ;; Tracked objects:
  7415 ;;		On entry : 0/0
  7416 ;;		On exit  : 0/0
  7417 ;;		Unchanged: 0/0
  7418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7420 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7421 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7422 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7423 ;;Total ram usage:        2 bytes
  7424 ;; Hardware stack levels used:    1
  7425 ;; Hardware stack levels required when called:    4
  7426 ;; This function calls:
  7427 ;;		Nothing
  7428 ;; This function is called by:
  7429 ;;		_main_init
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433                           	psect	text30
  7434  012822                     __ptext30:
  7435                           	opt stack 0
  7436  012822                     _timer3_init:
  7437                           	opt stack 25
  7438                           
  7439                           ;incstack = 0
  7440                           ;timer3_init@prescaler stored from wreg
  7441  012822  6E20               	movwf	timer3_init@prescaler,c
  7442                           
  7443                           ;My_header\My_header.h: 86: T3CONbits.TMR3CS = 0;
  7444  012824  0E3F               	movlw	-193
  7445  012826  1679               	andwf	3961,f,c	;volatile
  7446                           
  7447                           ;My_header\My_header.h: 87: T3CONbits.T3OSCEN = 0;
  7448  012828  9679               	bcf	3961,3,c	;volatile
  7449                           
  7450                           ;My_header\My_header.h: 88: T3CONbits.T3CKPS = prescaler;
  7451  01282A  C020  F01F         	movff	timer3_init@prescaler,??_timer3_init
  7452  01282E  3A1F               	swapf	??_timer3_init,f,c
  7453  012830  5079               	movf	3961,w,c	;volatile
  7454  012832  181F               	xorwf	??_timer3_init,w,c
  7455  012834  0BCF               	andlw	-49
  7456  012836  181F               	xorwf	??_timer3_init,w,c
  7457  012838  6E79               	movwf	3961,c	;volatile
  7458                           
  7459                           ;My_header\My_header.h: 89: T3CONbits.RD163 = 0;
  7460  01283A  9E79               	bcf	3961,7,c	;volatile
  7461                           
  7462                           ;My_header\My_header.h: 90: T3CONbits.TMR3ON = 1;
  7463  01283C  8079               	bsf	3961,0,c	;volatile
  7464                           
  7465                           ;My_header\My_header.h: 91: IPR2bits.TMR3IP = 0;
  7466  01283E  92A2               	bcf	4002,1,c	;volatile
  7467                           
  7468                           ;My_header\My_header.h: 92: PIR2bits.TMR3IF = 0;
  7469  012840  92A1               	bcf	4001,1,c	;volatile
  7470                           
  7471                           ;My_header\My_header.h: 93: PIE2bits.TMR3IE = 1;
  7472  012842  82A0               	bsf	4000,1,c	;volatile
  7473                           
  7474                           ;My_header\My_header.h: 94: INTCONbits.PEIE = 1;
  7475  012844  8CF2               	bsf	intcon,6,c	;volatile
  7476  012846  0012               	return		;funcret
  7477  012848                     __end_of_timer3_init:
  7478                           	opt stack 0
  7479                           tblptru	equ	0xFF8
  7480                           tblptrh	equ	0xFF7
  7481                           tblptrl	equ	0xFF6
  7482                           tablat	equ	0xFF5
  7483                           prodh	equ	0xFF4
  7484                           prodl	equ	0xFF3
  7485                           intcon	equ	0xFF2
  7486                           intcon2	equ	0xFF1
  7487                           postinc0	equ	0xFEE
  7488                           wreg	equ	0xFE8
  7489                           indf1	equ	0xFE7
  7490                           postinc1	equ	0xFE6
  7491                           postdec1	equ	0xFE5
  7492                           fsr1h	equ	0xFE2
  7493                           fsr1l	equ	0xFE1
  7494                           indf2	equ	0xFDF
  7495                           postinc2	equ	0xFDE
  7496                           postdec2	equ	0xFDD
  7497                           fsr2h	equ	0xFDA
  7498                           fsr2l	equ	0xFD9
  7499                           status	equ	0xFD8
  7500                           
  7501 ;; *************** function _timer1_init *****************
  7502 ;; Defined at:
  7503 ;;		line 54 in file "../My_header\My_header.h"
  7504 ;; Parameters:    Size  Location     Type
  7505 ;;  prescaler       1    wreg     unsigned char 
  7506 ;;  clock_select    1   30[COMRAM] unsigned char 
  7507 ;; Auto vars:     Size  Location     Type
  7508 ;;  prescaler       1   32[COMRAM] unsigned char 
  7509 ;; Return value:  Size  Location     Type
  7510 ;;		None               void
  7511 ;; Registers used:
  7512 ;;		wreg, status,2, status,0
  7513 ;; Tracked objects:
  7514 ;;		On entry : 0/0
  7515 ;;		On exit  : 0/0
  7516 ;;		Unchanged: 0/0
  7517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7518 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7519 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7520 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7521 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7522 ;;Total ram usage:        3 bytes
  7523 ;; Hardware stack levels used:    1
  7524 ;; Hardware stack levels required when called:    4
  7525 ;; This function calls:
  7526 ;;		Nothing
  7527 ;; This function is called by:
  7528 ;;		_main_init
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532                           	psect	text31
  7533  0126E6                     __ptext31:
  7534                           	opt stack 0
  7535  0126E6                     _timer1_init:
  7536                           	opt stack 25
  7537                           
  7538                           ;incstack = 0
  7539                           ;timer1_init@prescaler stored from wreg
  7540  0126E6  6E21               	movwf	timer1_init@prescaler,c
  7541                           
  7542                           ;My_header\My_header.h: 55: T1CONbits.TMR1CS = clock_select;
  7543  0126E8  C01F  F020         	movff	timer1_init@clock_select,??_timer1_init
  7544  0126EC  3A20               	swapf	??_timer1_init,f,c
  7545  0126EE  4620               	rlncf	??_timer1_init,f,c
  7546  0126F0  4620               	rlncf	??_timer1_init,f,c
  7547  0126F2  50CD               	movf	4045,w,c	;volatile
  7548  0126F4  1820               	xorwf	??_timer1_init,w,c
  7549  0126F6  0B3F               	andlw	-193
  7550  0126F8  1820               	xorwf	??_timer1_init,w,c
  7551  0126FA  6ECD               	movwf	4045,c	;volatile
  7552                           
  7553                           ;My_header\My_header.h: 56: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  7554  0126FC  0E02               	movlw	2
  7555  0126FE  181F               	xorwf	timer1_init@clock_select,w,c
  7556  012700  A4D8               	btfss	status,2,c
  7557  012702  D002               	goto	l134
  7558  012704  86CD               	bsf	4045,3,c	;volatile
  7559  012706  D002               	goto	l3184
  7560  012708                     l134:
  7561                           
  7562                           ;My_header\My_header.h: 57: else T1CONbits.T1OSCEN = 0;
  7563  012708  96CD               	bcf	4045,3,c	;volatile
  7564  01270A  D000               	goto	l3184
  7565  01270C                     l3184:
  7566                           
  7567                           ;My_header\My_header.h: 58: T1CONbits.T1CKPS = prescaler;
  7568  01270C  C021  F020         	movff	timer1_init@prescaler,??_timer1_init
  7569  012710  3A20               	swapf	??_timer1_init,f,c
  7570  012712  50CD               	movf	4045,w,c	;volatile
  7571  012714  1820               	xorwf	??_timer1_init,w,c
  7572  012716  0BCF               	andlw	-49
  7573  012718  1820               	xorwf	??_timer1_init,w,c
  7574  01271A  6ECD               	movwf	4045,c	;volatile
  7575                           
  7576                           ;My_header\My_header.h: 59: T1CONbits.nT1SYNC = 1;
  7577  01271C  84CD               	bsf	4045,2,c	;volatile
  7578                           
  7579                           ;My_header\My_header.h: 60: T1CONbits.RD16 = 0;
  7580  01271E  92CD               	bcf	4045,1,c	;volatile
  7581                           
  7582                           ;My_header\My_header.h: 61: T1CONbits.TMR1ON = 1;
  7583  012720  80CD               	bsf	4045,0,c	;volatile
  7584                           
  7585                           ;My_header\My_header.h: 62: IPR1bits.TMR1IP = 0;
  7586  012722  909F               	bcf	3999,0,c	;volatile
  7587                           
  7588                           ;My_header\My_header.h: 63: PIR1bits.TMR1IF = 0;
  7589  012724  909E               	bcf	3998,0,c	;volatile
  7590                           
  7591                           ;My_header\My_header.h: 64: PIE1bits.TMR1IE = 1;
  7592  012726  809D               	bsf	3997,0,c	;volatile
  7593                           
  7594                           ;My_header\My_header.h: 65: INTCONbits.PEIE = 1;
  7595  012728  8CF2               	bsf	intcon,6,c	;volatile
  7596  01272A  0012               	return		;funcret
  7597  01272C                     __end_of_timer1_init:
  7598                           	opt stack 0
  7599                           tblptru	equ	0xFF8
  7600                           tblptrh	equ	0xFF7
  7601                           tblptrl	equ	0xFF6
  7602                           tablat	equ	0xFF5
  7603                           prodh	equ	0xFF4
  7604                           prodl	equ	0xFF3
  7605                           intcon	equ	0xFF2
  7606                           intcon2	equ	0xFF1
  7607                           postinc0	equ	0xFEE
  7608                           wreg	equ	0xFE8
  7609                           indf1	equ	0xFE7
  7610                           postinc1	equ	0xFE6
  7611                           postdec1	equ	0xFE5
  7612                           fsr1h	equ	0xFE2
  7613                           fsr1l	equ	0xFE1
  7614                           indf2	equ	0xFDF
  7615                           postinc2	equ	0xFDE
  7616                           postdec2	equ	0xFDD
  7617                           fsr2h	equ	0xFDA
  7618                           fsr2l	equ	0xFD9
  7619                           status	equ	0xFD8
  7620                           
  7621 ;; *************** function _timer0_init *****************
  7622 ;; Defined at:
  7623 ;;		line 15 in file "../My_header\My_header.h"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;  prescaler       1    wreg     unsigned char 
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;  prescaler       1   31[COMRAM] unsigned char 
  7628 ;; Return value:  Size  Location     Type
  7629 ;;		None               void
  7630 ;; Registers used:
  7631 ;;		wreg, status,2, status,0
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7638 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7639 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7640 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7641 ;;Total ram usage:        2 bytes
  7642 ;; Hardware stack levels used:    1
  7643 ;; Hardware stack levels required when called:    4
  7644 ;; This function calls:
  7645 ;;		Nothing
  7646 ;; This function is called by:
  7647 ;;		_main_init
  7648 ;; This function uses a non-reentrant model
  7649 ;;
  7650                           
  7651                           	psect	text32
  7652  012796                     __ptext32:
  7653                           	opt stack 0
  7654  012796                     _timer0_init:
  7655                           	opt stack 25
  7656                           
  7657                           ;incstack = 0
  7658                           ;timer0_init@prescaler stored from wreg
  7659  012796  6E20               	movwf	timer0_init@prescaler,c
  7660                           
  7661                           ;My_header\My_header.h: 16: T0CONbits.TMR0ON = 1;
  7662  012798  8ED5               	bsf	4053,7,c	;volatile
  7663                           
  7664                           ;My_header\My_header.h: 17: T0CONbits.T08BIT = 1;
  7665  01279A  8CD5               	bsf	4053,6,c	;volatile
  7666                           
  7667                           ;My_header\My_header.h: 18: T0CONbits.T0CS = 0;
  7668  01279C  9AD5               	bcf	4053,5,c	;volatile
  7669                           
  7670                           ;My_header\My_header.h: 19: if (prescaler == 0) {
  7671  01279E  5020               	movf	timer0_init@prescaler,w,c
  7672  0127A0  A4D8               	btfss	status,2,c
  7673  0127A2  D002               	goto	l129
  7674                           
  7675                           ;My_header\My_header.h: 20: T0CONbits.PSA = 1;
  7676  0127A4  86D5               	bsf	4053,3,c	;volatile
  7677                           
  7678                           ;My_header\My_header.h: 21: } else {
  7679  0127A6  D00B               	goto	l3172
  7680  0127A8                     l129:
  7681                           
  7682                           ;My_header\My_header.h: 22: T0CONbits.PSA = 0;
  7683  0127A8  96D5               	bcf	4053,3,c	;volatile
  7684                           
  7685                           ;My_header\My_header.h: 23: T0CONbits.T0PS = prescaler - 1;
  7686  0127AA  C020  F01F         	movff	timer0_init@prescaler,??_timer0_init
  7687  0127AE  0EFF               	movlw	255
  7688  0127B0  261F               	addwf	??_timer0_init,f,c
  7689  0127B2  50D5               	movf	4053,w,c	;volatile
  7690  0127B4  181F               	xorwf	??_timer0_init,w,c
  7691  0127B6  0BF8               	andlw	-8
  7692  0127B8  181F               	xorwf	??_timer0_init,w,c
  7693  0127BA  6ED5               	movwf	4053,c	;volatile
  7694  0127BC  D000               	goto	l3172
  7695  0127BE                     l3172:
  7696                           
  7697                           ;My_header\My_header.h: 24: }
  7698                           ;My_header\My_header.h: 25: INTCONbits.T0IE = 1;
  7699  0127BE  8AF2               	bsf	intcon,5,c	;volatile
  7700                           
  7701                           ;My_header\My_header.h: 26: INTCONbits.TMR0IF = 0;
  7702  0127C0  94F2               	bcf	intcon,2,c	;volatile
  7703                           
  7704                           ;My_header\My_header.h: 27: INTCON2bits.TMR0IP = 0;
  7705  0127C2  94F1               	bcf	intcon2,2,c	;volatile
  7706                           
  7707                           ;My_header\My_header.h: 28: INTCONbits.PEIE = 1;
  7708  0127C4  8CF2               	bsf	intcon,6,c	;volatile
  7709  0127C6  0012               	return		;funcret
  7710  0127C8                     __end_of_timer0_init:
  7711                           	opt stack 0
  7712                           tblptru	equ	0xFF8
  7713                           tblptrh	equ	0xFF7
  7714                           tblptrl	equ	0xFF6
  7715                           tablat	equ	0xFF5
  7716                           prodh	equ	0xFF4
  7717                           prodl	equ	0xFF3
  7718                           intcon	equ	0xFF2
  7719                           intcon2	equ	0xFF1
  7720                           postinc0	equ	0xFEE
  7721                           wreg	equ	0xFE8
  7722                           indf1	equ	0xFE7
  7723                           postinc1	equ	0xFE6
  7724                           postdec1	equ	0xFE5
  7725                           fsr1h	equ	0xFE2
  7726                           fsr1l	equ	0xFE1
  7727                           indf2	equ	0xFDF
  7728                           postinc2	equ	0xFDE
  7729                           postdec2	equ	0xFDD
  7730                           fsr2h	equ	0xFDA
  7731                           fsr2l	equ	0xFD9
  7732                           status	equ	0xFD8
  7733                           
  7734 ;; *************** function _ringbuf_init *****************
  7735 ;; Defined at:
  7736 ;;		line 24 in file "../My_header\My_ringbuf.h"
  7737 ;; Parameters:    Size  Location     Type
  7738 ;;  rb              2   30[COMRAM] PTR struct ringbuf
  7739 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
  7740 ;;  internal_buf    2   32[COMRAM] PTR unsigned char 
  7741 ;;		 -> main_init@rxbuf(250), main_init@txbuf(1000), rx_loop@buf(100), 
  7742 ;;  bufsize         2   34[COMRAM] unsigned int 
  7743 ;; Auto vars:     Size  Location     Type
  7744 ;;		None
  7745 ;; Return value:  Size  Location     Type
  7746 ;;		None               void
  7747 ;; Registers used:
  7748 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7749 ;; Tracked objects:
  7750 ;;		On entry : 0/0
  7751 ;;		On exit  : 0/0
  7752 ;;		Unchanged: 0/0
  7753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7754 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7757 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7758 ;;Total ram usage:        6 bytes
  7759 ;; Hardware stack levels used:    1
  7760 ;; Hardware stack levels required when called:    4
  7761 ;; This function calls:
  7762 ;;		Nothing
  7763 ;; This function is called by:
  7764 ;;		_rx_loop
  7765 ;;		_main_init
  7766 ;; This function uses a non-reentrant model
  7767 ;;
  7768                           
  7769                           	psect	text33
  7770  0125B6                     __ptext33:
  7771                           	opt stack 0
  7772  0125B6                     _ringbuf_init:
  7773                           	opt stack 25
  7774                           
  7775                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
  7776                           
  7777                           ;incstack = 0
  7778  0125B6  C01F  FFD9         	movff	ringbuf_init@rb,fsr2l
  7779  0125BA  C020  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  7780  0125BE  C021  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  7781  0125C2  C022  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  7782                           
  7783                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
  7784  0125C6  EE20 F002          	lfsr	2,2
  7785  0125CA  501F               	movf	ringbuf_init@rb,w,c
  7786  0125CC  26D9               	addwf	fsr2l,f,c
  7787  0125CE  5020               	movf	ringbuf_init@rb+1,w,c
  7788  0125D0  22DA               	addwfc	fsr2h,f,c
  7789  0125D2  C023  FFDE         	movff	ringbuf_init@bufsize,postinc2
  7790  0125D6  C024  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  7791                           
  7792                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
  7793  0125DA  EE20 F004          	lfsr	2,4
  7794  0125DE  501F               	movf	ringbuf_init@rb,w,c
  7795  0125E0  26D9               	addwf	fsr2l,f,c
  7796  0125E2  5020               	movf	ringbuf_init@rb+1,w,c
  7797  0125E4  22DA               	addwfc	fsr2h,f,c
  7798  0125E6  0E00               	movlw	0
  7799  0125E8  6EDE               	movwf	postinc2,c
  7800  0125EA  0E00               	movlw	0
  7801  0125EC  6EDD               	movwf	postdec2,c
  7802                           
  7803                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
  7804  0125EE  EE20 F006          	lfsr	2,6
  7805  0125F2  501F               	movf	ringbuf_init@rb,w,c
  7806  0125F4  26D9               	addwf	fsr2l,f,c
  7807  0125F6  5020               	movf	ringbuf_init@rb+1,w,c
  7808  0125F8  22DA               	addwfc	fsr2h,f,c
  7809  0125FA  0E00               	movlw	0
  7810  0125FC  6EDE               	movwf	postinc2,c
  7811  0125FE  0E00               	movlw	0
  7812  012600  6EDD               	movwf	postdec2,c
  7813  012602  0012               	return		;funcret
  7814  012604                     __end_of_ringbuf_init:
  7815                           	opt stack 0
  7816                           tblptru	equ	0xFF8
  7817                           tblptrh	equ	0xFF7
  7818                           tblptrl	equ	0xFF6
  7819                           tablat	equ	0xFF5
  7820                           prodh	equ	0xFF4
  7821                           prodl	equ	0xFF3
  7822                           intcon	equ	0xFF2
  7823                           intcon2	equ	0xFF1
  7824                           postinc0	equ	0xFEE
  7825                           wreg	equ	0xFE8
  7826                           indf1	equ	0xFE7
  7827                           postinc1	equ	0xFE6
  7828                           postdec1	equ	0xFE5
  7829                           fsr1h	equ	0xFE2
  7830                           fsr1l	equ	0xFE1
  7831                           indf2	equ	0xFDF
  7832                           postinc2	equ	0xFDE
  7833                           postdec2	equ	0xFDD
  7834                           fsr2h	equ	0xFDA
  7835                           fsr2l	equ	0xFD9
  7836                           status	equ	0xFD8
  7837                           
  7838 ;; *************** function _UART_init *****************
  7839 ;; Defined at:
  7840 ;;		line 192 in file "../My_header\My_header.h"
  7841 ;; Parameters:    Size  Location     Type
  7842 ;;		None
  7843 ;; Auto vars:     Size  Location     Type
  7844 ;;		None
  7845 ;; Return value:  Size  Location     Type
  7846 ;;		None               void
  7847 ;; Registers used:
  7848 ;;		wreg, status,2
  7849 ;; Tracked objects:
  7850 ;;		On entry : 0/0
  7851 ;;		On exit  : 0/0
  7852 ;;		Unchanged: 0/0
  7853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7858 ;;Total ram usage:        0 bytes
  7859 ;; Hardware stack levels used:    1
  7860 ;; Hardware stack levels required when called:    4
  7861 ;; This function calls:
  7862 ;;		Nothing
  7863 ;; This function is called by:
  7864 ;;		_main_init
  7865 ;; This function uses a non-reentrant model
  7866 ;;
  7867                           
  7868                           	psect	text34
  7869  0128AE                     __ptext34:
  7870                           	opt stack 0
  7871  0128AE                     _UART_init:
  7872                           	opt stack 25
  7873                           
  7874                           ;My_header\My_header.h: 193: TXSTA1bits.TX9 = 0;
  7875                           
  7876                           ;incstack = 0
  7877  0128AE  9CAD               	bcf	4013,6,c	;volatile
  7878                           
  7879                           ;My_header\My_header.h: 194: TXSTA1bits.TXEN = 1;
  7880  0128B0  8AAD               	bsf	4013,5,c	;volatile
  7881                           
  7882                           ;My_header\My_header.h: 195: TXSTA1bits.SYNC = 0;
  7883  0128B2  98AD               	bcf	4013,4,c	;volatile
  7884                           
  7885                           ;My_header\My_header.h: 196: TXSTA1bits.BRGH = 0;
  7886  0128B4  94AD               	bcf	4013,2,c	;volatile
  7887                           
  7888                           ;My_header\My_header.h: 197: RCSTA1bits.SPEN = 1;
  7889  0128B6  8EAC               	bsf	4012,7,c	;volatile
  7890                           
  7891                           ;My_header\My_header.h: 198: RCSTA1bits.RX9 = 0;
  7892  0128B8  9CAC               	bcf	4012,6,c	;volatile
  7893                           
  7894                           ;My_header\My_header.h: 199: RCSTA1bits.CREN = 1;
  7895  0128BA  88AC               	bsf	4012,4,c	;volatile
  7896                           
  7897                           ;My_header\My_header.h: 200: BAUDCON1bits.BRG16 = 0;
  7898  0128BC  967E               	bcf	3966,3,c	;volatile
  7899                           
  7900                           ;My_header\My_header.h: 201: SPBRG1 = 48000000 / 64 / 9600 - 1;
  7901  0128BE  0E4D               	movlw	77
  7902  0128C0  6EB0               	movwf	4016,c	;volatile
  7903                           
  7904                           ;My_header\My_header.h: 202: SPBRGH1 = 0;
  7905  0128C2  0E00               	movlw	0
  7906  0128C4  6E7F               	movwf	3967,c	;volatile
  7907                           
  7908                           ;My_header\My_header.h: 203: IPR1bits.RC1IP = 0;
  7909  0128C6  9A9F               	bcf	3999,5,c	;volatile
  7910                           
  7911                           ;My_header\My_header.h: 204: PIE1bits.RCIE = 1;
  7912  0128C8  8A9D               	bsf	3997,5,c	;volatile
  7913                           
  7914                           ;My_header\My_header.h: 205: INTCONbits.PEIE = 1;
  7915  0128CA  8CF2               	bsf	intcon,6,c	;volatile
  7916  0128CC  0012               	return		;funcret
  7917  0128CE                     __end_of_UART_init:
  7918                           	opt stack 0
  7919                           tblptru	equ	0xFF8
  7920                           tblptrh	equ	0xFF7
  7921                           tblptrl	equ	0xFF6
  7922                           tablat	equ	0xFF5
  7923                           prodh	equ	0xFF4
  7924                           prodl	equ	0xFF3
  7925                           intcon	equ	0xFF2
  7926                           intcon2	equ	0xFF1
  7927                           postinc0	equ	0xFEE
  7928                           wreg	equ	0xFE8
  7929                           indf1	equ	0xFE7
  7930                           postinc1	equ	0xFE6
  7931                           postdec1	equ	0xFE5
  7932                           fsr1h	equ	0xFE2
  7933                           fsr1l	equ	0xFE1
  7934                           indf2	equ	0xFDF
  7935                           postinc2	equ	0xFDE
  7936                           postdec2	equ	0xFDD
  7937                           fsr2h	equ	0xFDA
  7938                           fsr2l	equ	0xFD9
  7939                           status	equ	0xFD8
  7940                           
  7941 ;; *************** function _RTCC_init *****************
  7942 ;; Defined at:
  7943 ;;		line 56 in file "../My_header\My_RTCC.h"
  7944 ;; Parameters:    Size  Location     Type
  7945 ;;		None
  7946 ;; Auto vars:     Size  Location     Type
  7947 ;;		None
  7948 ;; Return value:  Size  Location     Type
  7949 ;;		None               void
  7950 ;; Registers used:
  7951 ;;		wreg, status,2
  7952 ;; Tracked objects:
  7953 ;;		On entry : 0/0
  7954 ;;		On exit  : 0/0
  7955 ;;		Unchanged: 0/0
  7956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7961 ;;Total ram usage:        0 bytes
  7962 ;; Hardware stack levels used:    1
  7963 ;; Hardware stack levels required when called:    4
  7964 ;; This function calls:
  7965 ;;		Nothing
  7966 ;; This function is called by:
  7967 ;;		_main_init
  7968 ;; This function uses a non-reentrant model
  7969 ;;
  7970                           
  7971                           	psect	text35
  7972  0127C8                     __ptext35:
  7973                           	opt stack 0
  7974  0127C8                     _RTCC_init:
  7975                           	opt stack 25
  7976                           
  7977                           ;My_header\My_RTCC.h: 57: RTCCFGbits.RTCWREN = 1;
  7978                           
  7979                           ;incstack = 0
  7980  0127C8  010F               	movlb	15	; () banked
  7981  0127CA  8B3F               	bsf	63,5,b	;volatile
  7982                           
  7983                           ;My_header\My_RTCC.h: 58: if (RTCCFGbits.RTCWREN != 1) {
  7984  0127CC  010F               	movlb	15	; () banked
  7985  0127CE  BB3F               	btfsc	63,5,b	;volatile
  7986  0127D0  D007               	goto	l3310
  7987                           
  7988                           ; BSR set to: 15
  7989                           ;My_header\My_RTCC.h: 59: EECON2 = 0x55;
  7990  0127D2  0E55               	movlw	85
  7991  0127D4  6EA7               	movwf	4007,c	;volatile
  7992                           
  7993                           ;My_header\My_RTCC.h: 60: EECON2 = 0xAA;
  7994  0127D6  0EAA               	movlw	170
  7995  0127D8  6EA7               	movwf	4007,c	;volatile
  7996                           
  7997                           ; BSR set to: 15
  7998                           ;My_header\My_RTCC.h: 61: RTCCFGbits.RTCWREN = 1;
  7999  0127DA  010F               	movlb	15	; () banked
  8000  0127DC  8B3F               	bsf	63,5,b	;volatile
  8001  0127DE  D000               	goto	l3310
  8002  0127E0                     l3310:
  8003                           
  8004                           ; BSR set to: 15
  8005                           ;My_header\My_RTCC.h: 62: }
  8006                           ;My_header\My_RTCC.h: 63: RTCCFGbits.RTCEN = 1;
  8007  0127E0  010F               	movlb	15	; () banked
  8008  0127E2  8F3F               	bsf	63,7,b	;volatile
  8009                           
  8010                           ; BSR set to: 15
  8011                           ;My_header\My_RTCC.h: 64: RTCCFGbits.RTCOE = 0;
  8012  0127E4  010F               	movlb	15	; () banked
  8013  0127E6  953F               	bcf	63,2,b	;volatile
  8014                           
  8015                           ; BSR set to: 15
  8016                           ;My_header\My_RTCC.h: 65: PADCFG1bits.RTSECSEL0 = 1;
  8017  0127E8  010F               	movlb	15	; () banked
  8018  0127EA  833C               	bsf	60,1,b	;volatile
  8019                           
  8020                           ; BSR set to: 15
  8021                           ;My_header\My_RTCC.h: 66: PADCFG1bits.RTSECSEL1 = 1;
  8022  0127EC  010F               	movlb	15	; () banked
  8023  0127EE  853C               	bsf	60,2,b	;volatile
  8024                           
  8025                           ;My_header\My_RTCC.h: 67: RTCCAL = 0x00;
  8026  0127F0  0E00               	movlw	0
  8027  0127F2  010F               	movlb	15	; () banked
  8028  0127F4  6F3E               	movwf	62,b	;volatile
  8029                           
  8030                           ; BSR set to: 15
  8031  0127F6  0012               	return		;funcret
  8032  0127F8                     __end_of_RTCC_init:
  8033                           	opt stack 0
  8034                           tblptru	equ	0xFF8
  8035                           tblptrh	equ	0xFF7
  8036                           tblptrl	equ	0xFF6
  8037                           tablat	equ	0xFF5
  8038                           prodh	equ	0xFF4
  8039                           prodl	equ	0xFF3
  8040                           intcon	equ	0xFF2
  8041                           intcon2	equ	0xFF1
  8042                           postinc0	equ	0xFEE
  8043                           wreg	equ	0xFE8
  8044                           indf1	equ	0xFE7
  8045                           postinc1	equ	0xFE6
  8046                           postdec1	equ	0xFE5
  8047                           fsr1h	equ	0xFE2
  8048                           fsr1l	equ	0xFE1
  8049                           indf2	equ	0xFDF
  8050                           postinc2	equ	0xFDE
  8051                           postdec2	equ	0xFDD
  8052                           fsr2h	equ	0xFDA
  8053                           fsr2l	equ	0xFD9
  8054                           status	equ	0xFD8
  8055                           
  8056 ;; *************** function _PWM_init *****************
  8057 ;; Defined at:
  8058 ;;		line 80 in file "PIC18F27J53-killifish_light02.c"
  8059 ;; Parameters:    Size  Location     Type
  8060 ;;  PR              1    wreg     unsigned char 
  8061 ;; Auto vars:     Size  Location     Type
  8062 ;;  PR              1   30[COMRAM] unsigned char 
  8063 ;; Return value:  Size  Location     Type
  8064 ;;		None               void
  8065 ;; Registers used:
  8066 ;;		wreg, status,2, status,0
  8067 ;; Tracked objects:
  8068 ;;		On entry : 0/0
  8069 ;;		On exit  : 0/0
  8070 ;;		Unchanged: 0/0
  8071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8073 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8075 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8076 ;;Total ram usage:        1 bytes
  8077 ;; Hardware stack levels used:    1
  8078 ;; Hardware stack levels required when called:    4
  8079 ;; This function calls:
  8080 ;;		Nothing
  8081 ;; This function is called by:
  8082 ;;		_main_init
  8083 ;; This function uses a non-reentrant model
  8084 ;;
  8085                           
  8086                           	psect	text36
  8087  011BA6                     __ptext36:
  8088                           	opt stack 0
  8089  011BA6                     _PWM_init:
  8090                           	opt stack 25
  8091                           
  8092                           ; BSR set to: 15
  8093                           ;incstack = 0
  8094                           ;PWM_init@PR stored from wreg
  8095  011BA6  6E1F               	movwf	PWM_init@PR,c
  8096                           
  8097                           ;PIC18F27J53-killifish_light02.c: 81: PPSCONbits.IOLOCK = 0;
  8098  011BA8  010E               	movlb	14	; () banked
  8099  011BAA  91BF               	bcf	191,0,b	;volatile
  8100                           
  8101                           ;PIC18F27J53-killifish_light02.c: 82: if (PPSCONbits.IOLOCK != 0) {
  8102  011BAC  010E               	movlb	14	; () banked
  8103  011BAE  A1BF               	btfss	191,0,b	;volatile
  8104  011BB0  D006               	goto	l483
  8105                           
  8106                           ; BSR set to: 14
  8107                           ;PIC18F27J53-killifish_light02.c: 83: EECON2 = 0x55;
  8108  011BB2  0E55               	movlw	85
  8109  011BB4  6EA7               	movwf	4007,c	;volatile
  8110                           
  8111                           ;PIC18F27J53-killifish_light02.c: 84: EECON2 = 0xAA;
  8112  011BB6  0EAA               	movlw	170
  8113  011BB8  6EA7               	movwf	4007,c	;volatile
  8114                           
  8115                           ; BSR set to: 14
  8116                           ;PIC18F27J53-killifish_light02.c: 85: PPSCONbits.IOLOCK = 0;
  8117  011BBA  010E               	movlb	14	; () banked
  8118  011BBC  91BF               	bcf	191,0,b	;volatile
  8119  011BBE                     l483:
  8120                           
  8121                           ; BSR set to: 14
  8122                           ;PIC18F27J53-killifish_light02.c: 86: }
  8123                           ;PIC18F27J53-killifish_light02.c: 88: RPOR3 = 14;
  8124  011BBE  0E0E               	movlw	14
  8125  011BC0  010E               	movlb	14	; () banked
  8126  011BC2  6FC3               	movwf	195,b	;volatile
  8127                           
  8128                           ;PIC18F27J53-killifish_light02.c: 89: RPOR4 = 18;
  8129  011BC4  0E12               	movlw	18
  8130  011BC6  010E               	movlb	14	; () banked
  8131  011BC8  6FC4               	movwf	196,b	;volatile
  8132                           
  8133                           ;PIC18F27J53-killifish_light02.c: 90: RPOR5 = 22;
  8134  011BCA  0E16               	movlw	22
  8135  011BCC  010E               	movlb	14	; () banked
  8136  011BCE  6FC5               	movwf	197,b	;volatile
  8137                           
  8138                           ; BSR set to: 14
  8139                           ;PIC18F27J53-killifish_light02.c: 92: CCP1CONbits.CCP1M = 12;
  8140  011BD0  50BA               	movf	4026,w,c	;volatile
  8141  011BD2  0BF0               	andlw	-16
  8142  011BD4  090C               	iorlw	12
  8143  011BD6  6EBA               	movwf	4026,c	;volatile
  8144                           
  8145                           ; BSR set to: 14
  8146                           ;PIC18F27J53-killifish_light02.c: 93: CCP1CONbits.P1M = 0;
  8147  011BD8  0E3F               	movlw	-193
  8148  011BDA  16BA               	andwf	4026,f,c	;volatile
  8149                           
  8150                           ; BSR set to: 14
  8151                           ;PIC18F27J53-killifish_light02.c: 94: CCPTMRS0bits.C1TSEL = 0;
  8152  011BDC  9152               	bcf	82,0,b	;volatile
  8153  011BDE  9352               	bcf	82,1,b	;volatile
  8154  011BE0  9552               	bcf	82,2,b	;volatile
  8155                           
  8156                           ; BSR set to: 14
  8157                           ;PIC18F27J53-killifish_light02.c: 95: CCPR1Lbits.CCPR1L = 0;
  8158  011BE2  0E00               	movlw	0
  8159  011BE4  6EBB               	movwf	4027,c	;volatile
  8160                           
  8161                           ; BSR set to: 14
  8162                           ;PIC18F27J53-killifish_light02.c: 96: CCP1CONbits.DC1B = 0;
  8163  011BE6  0ECF               	movlw	-49
  8164  011BE8  16BA               	andwf	4026,f,c	;volatile
  8165                           
  8166                           ; BSR set to: 14
  8167                           ;PIC18F27J53-killifish_light02.c: 98: CCP2CONbits.CCP2M = 12;
  8168  011BEA  50B4               	movf	4020,w,c	;volatile
  8169  011BEC  0BF0               	andlw	-16
  8170  011BEE  090C               	iorlw	12
  8171  011BF0  6EB4               	movwf	4020,c	;volatile
  8172                           
  8173                           ; BSR set to: 14
  8174                           ;PIC18F27J53-killifish_light02.c: 99: CCP2CONbits.P2M = 0;
  8175  011BF2  0E3F               	movlw	-193
  8176  011BF4  16B4               	andwf	4020,f,c	;volatile
  8177                           
  8178                           ; BSR set to: 14
  8179                           ;PIC18F27J53-killifish_light02.c: 100: CCPTMRS0bits.C2TSEL = 0;
  8180  011BF6  9752               	bcf	82,3,b	;volatile
  8181  011BF8  9952               	bcf	82,4,b	;volatile
  8182  011BFA  9B52               	bcf	82,5,b	;volatile
  8183                           
  8184                           ; BSR set to: 14
  8185                           ;PIC18F27J53-killifish_light02.c: 101: CCPR2Lbits.CCPR2L = 0;
  8186  011BFC  0E00               	movlw	0
  8187  011BFE  6EB5               	movwf	4021,c	;volatile
  8188                           
  8189                           ; BSR set to: 14
  8190                           ;PIC18F27J53-killifish_light02.c: 102: CCP2CONbits.DC2B = 0;
  8191  011C00  0ECF               	movlw	-49
  8192  011C02  16B4               	andwf	4020,f,c	;volatile
  8193                           
  8194                           ; BSR set to: 14
  8195                           ;PIC18F27J53-killifish_light02.c: 104: CCP3CONbits.CCP3M = 12;
  8196  011C04  010F               	movlb	15	; () banked
  8197  011C06  5115               	movf	21,w,b	;volatile
  8198  011C08  0BF0               	andlw	-16
  8199  011C0A  090C               	iorlw	12
  8200  011C0C  6F15               	movwf	21,b	;volatile
  8201                           
  8202                           ; BSR set to: 15
  8203                           ;PIC18F27J53-killifish_light02.c: 105: CCP3CONbits.P3M = 0;
  8204  011C0E  0E3F               	movlw	-193
  8205  011C10  010F               	movlb	15	; () banked
  8206  011C12  1715               	andwf	21,f,b	;volatile
  8207                           
  8208                           ; BSR set to: 15
  8209                           ;PIC18F27J53-killifish_light02.c: 106: CCPTMRS0bits.C3TSEL = 0;
  8210  011C14  0E3F               	movlw	-193
  8211  011C16  010F               	movlb	15	; () banked
  8212  011C18  1752               	andwf	82,f,b	;volatile
  8213                           
  8214                           ; BSR set to: 15
  8215                           ;PIC18F27J53-killifish_light02.c: 107: CCPR3Lbits.CCPR3L = 0;
  8216  011C1A  0E00               	movlw	0
  8217  011C1C  010F               	movlb	15	; () banked
  8218  011C1E  6F16               	movwf	22,b	;volatile
  8219                           
  8220                           ; BSR set to: 15
  8221                           ;PIC18F27J53-killifish_light02.c: 108: CCP3CONbits.DC3B = 0;
  8222  011C20  0ECF               	movlw	-49
  8223  011C22  010F               	movlb	15	; () banked
  8224  011C24  1715               	andwf	21,f,b	;volatile
  8225                           
  8226                           ; BSR set to: 15
  8227                           ;PIC18F27J53-killifish_light02.c: 110: CCP4CONbits.CCP4M = 12;
  8228  011C26  010F               	movlb	15	; () banked
  8229  011C28  5112               	movf	18,w,b	;volatile
  8230  011C2A  0BF0               	andlw	-16
  8231  011C2C  090C               	iorlw	12
  8232  011C2E  6F12               	movwf	18,b	;volatile
  8233                           
  8234                           ; BSR set to: 15
  8235                           ;PIC18F27J53-killifish_light02.c: 111: CCPTMRS1bits.C4TSEL = 0;
  8236  011C30  0EFC               	movlw	-4
  8237  011C32  010F               	movlb	15	; () banked
  8238  011C34  1751               	andwf	81,f,b	;volatile
  8239                           
  8240                           ; BSR set to: 15
  8241                           ;PIC18F27J53-killifish_light02.c: 112: CCPR4Lbits.CCPR4L = 0;
  8242  011C36  0E00               	movlw	0
  8243  011C38  010F               	movlb	15	; () banked
  8244  011C3A  6F13               	movwf	19,b	;volatile
  8245                           
  8246                           ; BSR set to: 15
  8247                           ;PIC18F27J53-killifish_light02.c: 113: CCP4CONbits.DC4B = 0;
  8248  011C3C  0ECF               	movlw	-49
  8249  011C3E  010F               	movlb	15	; () banked
  8250  011C40  1712               	andwf	18,f,b	;volatile
  8251                           
  8252                           ; BSR set to: 15
  8253                           ;PIC18F27J53-killifish_light02.c: 115: T2CONbits.T2OUTPS = 0;
  8254  011C42  96CA               	bcf	4042,3,c	;volatile
  8255  011C44  98CA               	bcf	4042,4,c	;volatile
  8256  011C46  9ACA               	bcf	4042,5,c	;volatile
  8257  011C48  9CCA               	bcf	4042,6,c	;volatile
  8258                           
  8259                           ; BSR set to: 15
  8260                           ;PIC18F27J53-killifish_light02.c: 116: T2CONbits.T2CKPS = 2;
  8261  011C4A  50CA               	movf	4042,w,c	;volatile
  8262  011C4C  0BFC               	andlw	-4
  8263  011C4E  0902               	iorlw	2
  8264  011C50  6ECA               	movwf	4042,c	;volatile
  8265                           
  8266                           ; BSR set to: 15
  8267                           ;PIC18F27J53-killifish_light02.c: 117: PR2 = PR - 1;
  8268  011C52  041F               	decf	PWM_init@PR,w,c
  8269  011C54  6ECB               	movwf	4043,c	;volatile
  8270                           
  8271                           ; BSR set to: 15
  8272                           ;PIC18F27J53-killifish_light02.c: 118: T2CONbits.TMR2ON = 1;
  8273  011C56  84CA               	bsf	4042,2,c	;volatile
  8274                           
  8275                           ; BSR set to: 15
  8276  011C58  0012               	return		;funcret
  8277  011C5A                     __end_of_PWM_init:
  8278                           	opt stack 0
  8279                           tblptru	equ	0xFF8
  8280                           tblptrh	equ	0xFF7
  8281                           tblptrl	equ	0xFF6
  8282                           tablat	equ	0xFF5
  8283                           prodh	equ	0xFF4
  8284                           prodl	equ	0xFF3
  8285                           intcon	equ	0xFF2
  8286                           intcon2	equ	0xFF1
  8287                           postinc0	equ	0xFEE
  8288                           wreg	equ	0xFE8
  8289                           indf1	equ	0xFE7
  8290                           postinc1	equ	0xFE6
  8291                           postdec1	equ	0xFE5
  8292                           fsr1h	equ	0xFE2
  8293                           fsr1l	equ	0xFE1
  8294                           indf2	equ	0xFDF
  8295                           postinc2	equ	0xFDE
  8296                           postdec2	equ	0xFDD
  8297                           fsr2h	equ	0xFDA
  8298                           fsr2l	equ	0xFD9
  8299                           status	equ	0xFD8
  8300                           
  8301 ;; *************** function _OSC_init *****************
  8302 ;; Defined at:
  8303 ;;		line 119 in file "../My_header\My_header.h"
  8304 ;; Parameters:    Size  Location     Type
  8305 ;;		None
  8306 ;; Auto vars:     Size  Location     Type
  8307 ;;		None
  8308 ;; Return value:  Size  Location     Type
  8309 ;;		None               void
  8310 ;; Registers used:
  8311 ;;		wreg, status,2
  8312 ;; Tracked objects:
  8313 ;;		On entry : 0/0
  8314 ;;		On exit  : 0/0
  8315 ;;		Unchanged: 0/0
  8316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8321 ;;Total ram usage:        0 bytes
  8322 ;; Hardware stack levels used:    1
  8323 ;; Hardware stack levels required when called:    4
  8324 ;; This function calls:
  8325 ;;		Nothing
  8326 ;; This function is called by:
  8327 ;;		_main_init
  8328 ;; This function uses a non-reentrant model
  8329 ;;
  8330                           
  8331                           	psect	text37
  8332  01293A                     __ptext37:
  8333                           	opt stack 0
  8334  01293A                     _OSC_init:
  8335                           	opt stack 25
  8336                           
  8337                           ;My_header\My_header.h: 120: OSCCONbits.IRCF = 7;
  8338                           
  8339                           ; BSR set to: 15
  8340                           ;incstack = 0
  8341  01293A  88D3               	bsf	4051,4,c	;volatile
  8342  01293C  8AD3               	bsf	4051,5,c	;volatile
  8343  01293E  8CD3               	bsf	4051,6,c	;volatile
  8344                           
  8345                           ;My_header\My_header.h: 121: OSCTUNEbits.PLLEN = 1;
  8346  012940  8C9B               	bsf	3995,6,c	;volatile
  8347                           
  8348                           ;My_header\My_header.h: 122: OSCCONbits.SCS = 0;
  8349  012942  0EFC               	movlw	-4
  8350  012944  16D3               	andwf	4051,f,c	;volatile
  8351  012946  0012               	return		;funcret
  8352  012948                     __end_of_OSC_init:
  8353                           	opt stack 0
  8354                           tblptru	equ	0xFF8
  8355                           tblptrh	equ	0xFF7
  8356                           tblptrl	equ	0xFF6
  8357                           tablat	equ	0xFF5
  8358                           prodh	equ	0xFF4
  8359                           prodl	equ	0xFF3
  8360                           intcon	equ	0xFF2
  8361                           intcon2	equ	0xFF1
  8362                           postinc0	equ	0xFEE
  8363                           wreg	equ	0xFE8
  8364                           indf1	equ	0xFE7
  8365                           postinc1	equ	0xFE6
  8366                           postdec1	equ	0xFE5
  8367                           fsr1h	equ	0xFE2
  8368                           fsr1l	equ	0xFE1
  8369                           indf2	equ	0xFDF
  8370                           postinc2	equ	0xFDE
  8371                           postdec2	equ	0xFDD
  8372                           fsr2h	equ	0xFDA
  8373                           fsr2l	equ	0xFD9
  8374                           status	equ	0xFD8
  8375                           
  8376 ;; *************** function _ADC_init *****************
  8377 ;; Defined at:
  8378 ;;		line 149 in file "../My_header\My_header.h"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;  p_ref           1    wreg     unsigned char 
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;  p_ref           1   30[COMRAM] unsigned char 
  8383 ;; Return value:  Size  Location     Type
  8384 ;;		None               void
  8385 ;; Registers used:
  8386 ;;		wreg, status,2
  8387 ;; Tracked objects:
  8388 ;;		On entry : 0/0
  8389 ;;		On exit  : 0/0
  8390 ;;		Unchanged: 0/0
  8391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8393 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8395 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8396 ;;Total ram usage:        1 bytes
  8397 ;; Hardware stack levels used:    1
  8398 ;; Hardware stack levels required when called:    4
  8399 ;; This function calls:
  8400 ;;		Nothing
  8401 ;; This function is called by:
  8402 ;;		_main_init
  8403 ;; This function uses a non-reentrant model
  8404 ;;
  8405                           
  8406                           	psect	text38
  8407  0128EE                     __ptext38:
  8408                           	opt stack 0
  8409  0128EE                     _ADC_init:
  8410                           	opt stack 25
  8411                           
  8412                           ;incstack = 0
  8413                           ;ADC_init@p_ref stored from wreg
  8414  0128EE  6E1F               	movwf	ADC_init@p_ref,c
  8415                           
  8416                           ;My_header\My_header.h: 150: ADCON0bits.VCFG1 = 0;
  8417  0128F0  9EC2               	bcf	4034,7,c	;volatile
  8418                           
  8419                           ;My_header\My_header.h: 151: ADCON0bits.VCFG0 = p_ref;
  8420  0128F2  B01F               	btfsc	ADC_init@p_ref,0,c
  8421  0128F4  D002               	bra	u2765
  8422  0128F6  9CC2               	bcf	4034,6,c	;volatile
  8423  0128F8  D001               	bra	u2766
  8424  0128FA                     u2765:
  8425  0128FA  8CC2               	bsf	4034,6,c	;volatile
  8426  0128FC                     u2766:
  8427                           
  8428                           ;My_header\My_header.h: 153: ADCON1bits.ADFM = 1;
  8429  0128FC  8EC1               	bsf	4033,7,c	;volatile
  8430                           
  8431                           ;My_header\My_header.h: 154: ADCON1bits.ADCAL = 0;
  8432  0128FE  9CC1               	bcf	4033,6,c	;volatile
  8433                           
  8434                           ;My_header\My_header.h: 155: ADCON1bits.ADCS = 6;
  8435  012900  50C1               	movf	4033,w,c	;volatile
  8436  012902  0BF8               	andlw	-8
  8437  012904  0906               	iorlw	6
  8438  012906  6EC1               	movwf	4033,c	;volatile
  8439  012908  0012               	return		;funcret
  8440  01290A                     __end_of_ADC_init:
  8441                           	opt stack 0
  8442                           tblptru	equ	0xFF8
  8443                           tblptrh	equ	0xFF7
  8444                           tblptrl	equ	0xFF6
  8445                           tablat	equ	0xFF5
  8446                           prodh	equ	0xFF4
  8447                           prodl	equ	0xFF3
  8448                           intcon	equ	0xFF2
  8449                           intcon2	equ	0xFF1
  8450                           postinc0	equ	0xFEE
  8451                           wreg	equ	0xFE8
  8452                           indf1	equ	0xFE7
  8453                           postinc1	equ	0xFE6
  8454                           postdec1	equ	0xFE5
  8455                           fsr1h	equ	0xFE2
  8456                           fsr1l	equ	0xFE1
  8457                           indf2	equ	0xFDF
  8458                           postinc2	equ	0xFDE
  8459                           postdec2	equ	0xFDD
  8460                           fsr2h	equ	0xFDA
  8461                           fsr2l	equ	0xFD9
  8462                           status	equ	0xFD8
  8463                           
  8464 ;; *************** function _RTCC_loop *****************
  8465 ;; Defined at:
  8466 ;;		line 387 in file "../My_header\My_RTCC.h"
  8467 ;; Parameters:    Size  Location     Type
  8468 ;;		None
  8469 ;; Auto vars:     Size  Location     Type
  8470 ;;  GIE_cache       1   30[COMRAM] unsigned char 
  8471 ;; Return value:  Size  Location     Type
  8472 ;;		None               void
  8473 ;; Registers used:
  8474 ;;		wreg, status,2
  8475 ;; Tracked objects:
  8476 ;;		On entry : 0/0
  8477 ;;		On exit  : 0/0
  8478 ;;		Unchanged: 0/0
  8479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8481 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8483 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8484 ;;Total ram usage:        1 bytes
  8485 ;; Hardware stack levels used:    1
  8486 ;; Hardware stack levels required when called:    4
  8487 ;; This function calls:
  8488 ;;		Nothing
  8489 ;; This function is called by:
  8490 ;;		_main
  8491 ;; This function uses a non-reentrant model
  8492 ;;
  8493                           
  8494                           	psect	text39
  8495  01269E                     __ptext39:
  8496                           	opt stack 0
  8497  01269E                     _RTCC_loop:
  8498                           	opt stack 26
  8499                           
  8500                           ;My_header\My_RTCC.h: 388: uint8_t GIE_cache = INTCONbits.GIE;
  8501                           
  8502                           ;incstack = 0
  8503  01269E  0E00               	movlw	0
  8504  0126A0  BEF2               	btfsc	intcon,7,c	;volatile
  8505  0126A2  0E01               	movlw	1
  8506  0126A4  6E1F               	movwf	RTCC_loop@GIE_cache,c
  8507                           
  8508                           ;My_header\My_RTCC.h: 389: INTCONbits.GIE = 0;
  8509  0126A6  9EF2               	bcf	intcon,7,c	;volatile
  8510                           
  8511                           ;My_header\My_RTCC.h: 390: static uint8_t prev_halfsec;
  8512                           ;My_header\My_RTCC.h: 391: while (RTCCFGbits.RTCSYNC);
  8513  0126A8  D000               	goto	l418
  8514  0126AA                     l418:
  8515  0126AA  010F               	movlb	15	; () banked
  8516  0126AC  B93F               	btfsc	63,4,b	;volatile
  8517  0126AE  D7FD               	goto	l418
  8518                           
  8519                           ; BSR set to: 15
  8520                           ;My_header\My_RTCC.h: 392: if (prev_halfsec != RTCCFGbits.HALFSEC) {
  8521                           
  8522                           ; BSR set to: 15
  8523  0126B0  010F               	movlb	15	; () banked
  8524  0126B2  A73F               	btfss	63,3,b	;volatile
  8525  0126B4  D002               	goto	u3650
  8526  0126B6  0E01               	movlw	1
  8527  0126B8  D001               	goto	u3656
  8528  0126BA                     u3650:
  8529  0126BA  0E00               	movlw	0
  8530  0126BC                     u3656:
  8531  0126BC  1827               	xorwf	RTCC_loop@prev_halfsec,w,c
  8532  0126BE  B4D8               	btfsc	status,2,c
  8533  0126C0  D00C               	goto	l3716
  8534                           
  8535                           ; BSR set to: 15
  8536                           ;My_header\My_RTCC.h: 393: prev_halfsec = RTCCFGbits.HALFSEC;
  8537  0126C2  0E00               	movlw	0
  8538  0126C4  B73F               	btfsc	63,3,b	;volatile
  8539  0126C6  0E01               	movlw	1
  8540  0126C8  6E27               	movwf	RTCC_loop@prev_halfsec,c
  8541                           
  8542                           ; BSR set to: 15
  8543                           ;My_header\My_RTCC.h: 394: halfsec = prev_halfsec;
  8544  0126CA  C027  F02B         	movff	RTCC_loop@prev_halfsec,_halfsec
  8545                           
  8546                           ; BSR set to: 15
  8547                           ;My_header\My_RTCC.h: 395: colon = halfsec;
  8548  0126CE  C02B  F028         	movff	_halfsec,_colon
  8549                           
  8550                           ; BSR set to: 15
  8551                           ;My_header\My_RTCC.h: 396: time_change_flag = 1;
  8552  0126D2  0E01               	movlw	1
  8553  0126D4  0100               	movlb	0	; () banked
  8554  0126D6  6FB2               	movwf	_time_change_flag& (0+255),b
  8555  0126D8  D000               	goto	l3716
  8556  0126DA                     l3716:
  8557                           
  8558                           ;My_header\My_RTCC.h: 397: }
  8559                           ;My_header\My_RTCC.h: 398: INTCONbits.GIE = GIE_cache;
  8560  0126DA  B01F               	btfsc	RTCC_loop@GIE_cache,0,c
  8561  0126DC  D002               	bra	u3675
  8562  0126DE  9EF2               	bcf	intcon,7,c	;volatile
  8563  0126E0  D001               	bra	u3676
  8564  0126E2                     u3675:
  8565  0126E2  8EF2               	bsf	intcon,7,c	;volatile
  8566  0126E4                     u3676:
  8567  0126E4  0012               	return		;funcret
  8568  0126E6                     __end_of_RTCC_loop:
  8569                           	opt stack 0
  8570                           tblptru	equ	0xFF8
  8571                           tblptrh	equ	0xFF7
  8572                           tblptrl	equ	0xFF6
  8573                           tablat	equ	0xFF5
  8574                           prodh	equ	0xFF4
  8575                           prodl	equ	0xFF3
  8576                           intcon	equ	0xFF2
  8577                           intcon2	equ	0xFF1
  8578                           postinc0	equ	0xFEE
  8579                           wreg	equ	0xFE8
  8580                           indf1	equ	0xFE7
  8581                           postinc1	equ	0xFE6
  8582                           postdec1	equ	0xFE5
  8583                           fsr1h	equ	0xFE2
  8584                           fsr1l	equ	0xFE1
  8585                           indf2	equ	0xFDF
  8586                           postinc2	equ	0xFDE
  8587                           postdec2	equ	0xFDD
  8588                           fsr2h	equ	0xFDA
  8589                           fsr2l	equ	0xFD9
  8590                           status	equ	0xFD8
  8591                           
  8592 ;; *************** function _RTCC_from_epoch *****************
  8593 ;; Defined at:
  8594 ;;		line 242 in file "../My_header\My_RTCC.h"
  8595 ;; Parameters:    Size  Location     Type
  8596 ;;  ct              2   55[BANK0 ] PTR struct .
  8597 ;;		 -> caltime_now(7), 
  8598 ;;  ep              2   57[BANK0 ] PTR unsigned long 
  8599 ;;		 -> epoch_now(4), 
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;		None
  8602 ;; Return value:  Size  Location     Type
  8603 ;;		None               void
  8604 ;; Registers used:
  8605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8606 ;; Tracked objects:
  8607 ;;		On entry : 0/0
  8608 ;;		On exit  : 0/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8611 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8614 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8615 ;;Total ram usage:        4 bytes
  8616 ;; Hardware stack levels used:    1
  8617 ;; Hardware stack levels required when called:    7
  8618 ;; This function calls:
  8619 ;;		_caltime_to_RTCC
  8620 ;;		_epoch_to_caltime
  8621 ;; This function is called by:
  8622 ;;		_main
  8623 ;;		_RTCC_adjust_time_inc
  8624 ;;		_RTCC_adjust_time_dec
  8625 ;; This function uses a non-reentrant model
  8626 ;;
  8627                           
  8628                           	psect	text40
  8629  01288C                     __ptext40:
  8630                           	opt stack 0
  8631  01288C                     _RTCC_from_epoch:
  8632                           	opt stack 23
  8633                           
  8634                           ;My_header\My_RTCC.h: 243: epoch_to_caltime(ct, ep);
  8635                           
  8636                           ;incstack = 0
  8637  01288C  C097  F087         	movff	RTCC_from_epoch@ct,epoch_to_caltime@ct
  8638  012890  C098  F088         	movff	RTCC_from_epoch@ct+1,epoch_to_caltime@ct+1
  8639  012894  C099  F089         	movff	RTCC_from_epoch@ep,epoch_to_caltime@ep
  8640  012898  C09A  F08A         	movff	RTCC_from_epoch@ep+1,epoch_to_caltime@ep+1
  8641  01289C  EC17  F088         	call	_epoch_to_caltime	;wreg free
  8642                           
  8643                           ;My_header\My_RTCC.h: 244: caltime_to_RTCC(ct);
  8644  0128A0  C097  F064         	movff	RTCC_from_epoch@ct,caltime_to_RTCC@ct
  8645  0128A4  C098  F065         	movff	RTCC_from_epoch@ct+1,caltime_to_RTCC@ct+1
  8646  0128A8  EC22  F08B         	call	_caltime_to_RTCC	;wreg free
  8647  0128AC  0012               	return		;funcret
  8648  0128AE                     __end_of_RTCC_from_epoch:
  8649                           	opt stack 0
  8650                           tblptru	equ	0xFF8
  8651                           tblptrh	equ	0xFF7
  8652                           tblptrl	equ	0xFF6
  8653                           tablat	equ	0xFF5
  8654                           prodh	equ	0xFF4
  8655                           prodl	equ	0xFF3
  8656                           intcon	equ	0xFF2
  8657                           intcon2	equ	0xFF1
  8658                           postinc0	equ	0xFEE
  8659                           wreg	equ	0xFE8
  8660                           indf1	equ	0xFE7
  8661                           postinc1	equ	0xFE6
  8662                           postdec1	equ	0xFE5
  8663                           fsr1h	equ	0xFE2
  8664                           fsr1l	equ	0xFE1
  8665                           indf2	equ	0xFDF
  8666                           postinc2	equ	0xFDE
  8667                           postdec2	equ	0xFDD
  8668                           fsr2h	equ	0xFDA
  8669                           fsr2l	equ	0xFD9
  8670                           status	equ	0xFD8
  8671                           
  8672 ;; *************** function _epoch_to_caltime *****************
  8673 ;; Defined at:
  8674 ;;		line 157 in file "../My_header\My_RTCC.h"
  8675 ;; Parameters:    Size  Location     Type
  8676 ;;  ct              2   39[BANK0 ] PTR struct .
  8677 ;;		 -> caltime_now(7), 
  8678 ;;  ep              2   41[BANK0 ] PTR unsigned long 
  8679 ;;		 -> epoch_now(4), 
  8680 ;; Auto vars:     Size  Location     Type
  8681 ;;  num             4   51[BANK0 ] unsigned long 
  8682 ;;  day             2   47[BANK0 ] unsigned int 
  8683 ;;  day_since_ep    2   45[BANK0 ] unsigned int 
  8684 ;;  month           1   50[BANK0 ] unsigned char 
  8685 ;;  year            1   49[BANK0 ] unsigned char 
  8686 ;; Return value:  Size  Location     Type
  8687 ;;		None               void
  8688 ;; Registers used:
  8689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8690 ;; Tracked objects:
  8691 ;;		On entry : 0/0
  8692 ;;		On exit  : 0/0
  8693 ;;		Unchanged: 0/0
  8694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8695 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8696 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8697 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8698 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8699 ;;Total ram usage:       16 bytes
  8700 ;; Hardware stack levels used:    1
  8701 ;; Hardware stack levels required when called:    6
  8702 ;; This function calls:
  8703 ;;		_get_quot_rem
  8704 ;;		_month_length
  8705 ;; This function is called by:
  8706 ;;		_RTCC_from_caltime
  8707 ;;		_RTCC_from_epoch
  8708 ;; This function uses a non-reentrant model
  8709 ;;
  8710                           
  8711                           	psect	text41
  8712  01102E                     __ptext41:
  8713                           	opt stack 0
  8714  01102E                     _epoch_to_caltime:
  8715                           	opt stack 20
  8716                           
  8717                           ;My_header\My_RTCC.h: 160: static uint16_t day_cache = 0;
  8718                           ;My_header\My_RTCC.h: 161: static uint8_t month_cache = 1;
  8719                           ;My_header\My_RTCC.h: 162: static uint8_t year_cache = 0;
  8720                           ;My_header\My_RTCC.h: 163: uint16_t day_since_epoch;
  8721                           ;My_header\My_RTCC.h: 164: uint16_t day;
  8722                           ;My_header\My_RTCC.h: 165: uint8_t year = 0;
  8723                           
  8724                           ;incstack = 0
  8725  01102E  0E00               	movlw	0
  8726  011030  0100               	movlb	0	; () banked
  8727  011032  6F91               	movwf	epoch_to_caltime@year& (0+255),b
  8728                           
  8729                           ;My_header\My_RTCC.h: 166: uint8_t month = 1;
  8730  011034  0E01               	movlw	1
  8731  011036  0100               	movlb	0	; () banked
  8732  011038  6F92               	movwf	epoch_to_caltime@month& (0+255),b
  8733                           
  8734                           ; BSR set to: 0
  8735                           ;My_header\My_RTCC.h: 167: epoch_t num;
  8736                           ;My_header\My_RTCC.h: 169: num = *ep;
  8737  01103A  C089  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  8738  01103E  C08A  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  8739  011042  CFDE F093          	movff	postinc2,epoch_to_caltime@num
  8740  011046  CFDE F094          	movff	postinc2,epoch_to_caltime@num+1
  8741  01104A  CFDE F095          	movff	postinc2,epoch_to_caltime@num+2
  8742  01104E  CFDE F096          	movff	postinc2,epoch_to_caltime@num+3
  8743                           
  8744                           ; BSR set to: 0
  8745                           ;My_header\My_RTCC.h: 170: ct->ss = get_quot_rem(&num, 60);
  8746  011052  0E93               	movlw	low epoch_to_caltime@num
  8747  011054  0100               	movlb	0	; () banked
  8748  011056  6F7F               	movwf	get_quot_rem@quot& (0+255),b
  8749  011058  0E00               	movlw	high epoch_to_caltime@num
  8750  01105A  0100               	movlb	0	; () banked
  8751  01105C  6F80               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8752  01105E  0E3C               	movlw	60
  8753  011060  0100               	movlb	0	; () banked
  8754  011062  6F81               	movwf	get_quot_rem@div& (0+255),b
  8755  011064  ECB7  F08A         	call	_get_quot_rem	;wreg free
  8756  011068  0100               	movlb	0	; () banked
  8757  01106A  517F               	movf	?_get_quot_rem& (0+255),w,b
  8758  01106C  C087  FFD9         	movff	epoch_to_caltime@ct,fsr2l
  8759  011070  C088  FFDA         	movff	epoch_to_caltime@ct+1,fsr2h
  8760  011074  6EDF               	movwf	indf2,c
  8761                           
  8762                           ; BSR set to: 0
  8763                           ;My_header\My_RTCC.h: 171: ct->mm = get_quot_rem(&num, 60);
  8764  011076  0E93               	movlw	low epoch_to_caltime@num
  8765  011078  0100               	movlb	0	; () banked
  8766  01107A  6F7F               	movwf	get_quot_rem@quot& (0+255),b
  8767  01107C  0E00               	movlw	high epoch_to_caltime@num
  8768  01107E  0100               	movlb	0	; () banked
  8769  011080  6F80               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8770  011082  0E3C               	movlw	60
  8771  011084  0100               	movlb	0	; () banked
  8772  011086  6F81               	movwf	get_quot_rem@div& (0+255),b
  8773  011088  ECB7  F08A         	call	_get_quot_rem	;wreg free
  8774  01108C  0100               	movlb	0	; () banked
  8775  01108E  EE20 F001          	lfsr	2,1
  8776  011092  5187               	movf	epoch_to_caltime@ct& (0+255),w,b
  8777  011094  26D9               	addwf	fsr2l,f,c
  8778  011096  5188               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8779  011098  22DA               	addwfc	fsr2h,f,c
  8780  01109A  0100               	movlb	0	; () banked
  8781  01109C  C07F  FFDF         	movff	?_get_quot_rem,indf2
  8782                           
  8783                           ; BSR set to: 0
  8784                           ;My_header\My_RTCC.h: 172: ct->hh = get_quot_rem(&num, 24);
  8785  0110A0  0E93               	movlw	low epoch_to_caltime@num
  8786  0110A2  0100               	movlb	0	; () banked
  8787  0110A4  6F7F               	movwf	get_quot_rem@quot& (0+255),b
  8788  0110A6  0E00               	movlw	high epoch_to_caltime@num
  8789  0110A8  0100               	movlb	0	; () banked
  8790  0110AA  6F80               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8791  0110AC  0E18               	movlw	24
  8792  0110AE  0100               	movlb	0	; () banked
  8793  0110B0  6F81               	movwf	get_quot_rem@div& (0+255),b
  8794  0110B2  ECB7  F08A         	call	_get_quot_rem	;wreg free
  8795  0110B6  0100               	movlb	0	; () banked
  8796  0110B8  EE20 F002          	lfsr	2,2
  8797  0110BC  5187               	movf	epoch_to_caltime@ct& (0+255),w,b
  8798  0110BE  26D9               	addwf	fsr2l,f,c
  8799  0110C0  5188               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8800  0110C2  22DA               	addwfc	fsr2h,f,c
  8801  0110C4  0100               	movlb	0	; () banked
  8802  0110C6  C07F  FFDF         	movff	?_get_quot_rem,indf2
  8803                           
  8804                           ; BSR set to: 0
  8805                           ;My_header\My_RTCC.h: 173: day = num;
  8806  0110CA  C093  F08F         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  8807  0110CE  C094  F090         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;My_header\My_RTCC.h: 174: day_since_epoch = day;
  8811  0110D2  C08F  F08D         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  8812  0110D6  C090  F08E         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  8813                           
  8814                           ; BSR set to: 0
  8815                           ;My_header\My_RTCC.h: 176: num += 6;
  8816  0110DA  0E06               	movlw	6
  8817  0110DC  0100               	movlb	0	; () banked
  8818  0110DE  2793               	addwf	epoch_to_caltime@num& (0+255),f,b
  8819  0110E0  0E00               	movlw	0
  8820  0110E2  2394               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  8821  0110E4  2395               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  8822  0110E6  2396               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  8823                           
  8824                           ; BSR set to: 0
  8825                           ;My_header\My_RTCC.h: 177: ct->EE = get_quot_rem(&num, 7);
  8826  0110E8  0E93               	movlw	low epoch_to_caltime@num
  8827  0110EA  0100               	movlb	0	; () banked
  8828  0110EC  6F7F               	movwf	get_quot_rem@quot& (0+255),b
  8829  0110EE  0E00               	movlw	high epoch_to_caltime@num
  8830  0110F0  0100               	movlb	0	; () banked
  8831  0110F2  6F80               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8832  0110F4  0E07               	movlw	7
  8833  0110F6  0100               	movlb	0	; () banked
  8834  0110F8  6F81               	movwf	get_quot_rem@div& (0+255),b
  8835  0110FA  ECB7  F08A         	call	_get_quot_rem	;wreg free
  8836  0110FE  0100               	movlb	0	; () banked
  8837  011100  EE20 F003          	lfsr	2,3
  8838  011104  5187               	movf	epoch_to_caltime@ct& (0+255),w,b
  8839  011106  26D9               	addwf	fsr2l,f,c
  8840  011108  5188               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8841  01110A  22DA               	addwfc	fsr2h,f,c
  8842  01110C  0100               	movlb	0	; () banked
  8843  01110E  C07F  FFDF         	movff	?_get_quot_rem,indf2
  8844                           
  8845                           ;My_header\My_RTCC.h: 186: while (day >= month_length(year, month)) {
  8846  011112  D041               	goto	l4348
  8847  011114                     l330:
  8848                           
  8849                           ; BSR set to: 0
  8850                           ;My_header\My_RTCC.h: 187: LATB2 = 1;
  8851  011114  848A               	bsf	3978,2,c	;volatile
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;My_header\My_RTCC.h: 188: day = day - month_length(year, month);
  8855  011116  C092  F060         	movff	epoch_to_caltime@month,month_length@month
  8856  01111A  0100               	movlb	0	; () banked
  8857  01111C  5191               	movf	epoch_to_caltime@year& (0+255),w,b
  8858  01111E  EC8B  F08B         	call	_month_length
  8859  011122  0100               	movlb	0	; () banked
  8860  011124  6F8B               	movwf	??_epoch_to_caltime& (0+255),b
  8861  011126  6B8C               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  8862  011128  0100               	movlb	0	; () banked
  8863  01112A  1F8B               	comf	??_epoch_to_caltime& (0+255),f,b
  8864  01112C  1F8C               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  8865  01112E  4B8B               	infsnz	??_epoch_to_caltime& (0+255),f,b
  8866  011130  2B8C               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  8867  011132  0100               	movlb	0	; () banked
  8868  011134  518F               	movf	epoch_to_caltime@day& (0+255),w,b
  8869  011136  0100               	movlb	0	; () banked
  8870  011138  258B               	addwf	??_epoch_to_caltime& (0+255),w,b
  8871  01113A  0100               	movlb	0	; () banked
  8872  01113C  6F8F               	movwf	epoch_to_caltime@day& (0+255),b
  8873  01113E  0100               	movlb	0	; () banked
  8874  011140  5190               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  8875  011142  0100               	movlb	0	; () banked
  8876  011144  218C               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  8877  011146  0100               	movlb	0	; () banked
  8878  011148  6F90               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;My_header\My_RTCC.h: 189: if (month == 12) {
  8882  01114A  0E0C               	movlw	12
  8883  01114C  0100               	movlb	0	; () banked
  8884  01114E  1992               	xorwf	epoch_to_caltime@month& (0+255),w,b
  8885  011150  A4D8               	btfss	status,2,c
  8886  011152  D019               	goto	l4342
  8887                           
  8888                           ; BSR set to: 0
  8889                           ;My_header\My_RTCC.h: 190: month = 1;
  8890  011154  0E01               	movlw	1
  8891  011156  0100               	movlb	0	; () banked
  8892  011158  6F92               	movwf	epoch_to_caltime@month& (0+255),b
  8893                           
  8894                           ; BSR set to: 0
  8895                           ;My_header\My_RTCC.h: 191: year++;
  8896  01115A  0100               	movlb	0	; () banked
  8897  01115C  2B91               	incf	epoch_to_caltime@year& (0+255),f,b
  8898                           
  8899                           ; BSR set to: 0
  8900                           ;My_header\My_RTCC.h: 193: if (year >= 100) {
  8901  01115E  0E63               	movlw	99
  8902  011160  0100               	movlb	0	; () banked
  8903  011162  6591               	cpfsgt	epoch_to_caltime@year& (0+255),b
  8904  011164  D013               	goto	l4344
  8905                           
  8906                           ; BSR set to: 0
  8907                           ;My_header\My_RTCC.h: 194: *ep -= 3155760000;
  8908  011166  C089  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  8909  01116A  C08A  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  8910  01116E  0E80               	movlw	128
  8911  011170  5EDE               	subwf	postinc2,f,c
  8912  011172  0E13               	movlw	19
  8913  011174  5ADE               	subwfb	postinc2,f,c
  8914  011176  0E19               	movlw	25
  8915  011178  5ADE               	subwfb	postinc2,f,c
  8916  01117A  0EBC               	movlw	188
  8917  01117C  5ADE               	subwfb	postinc2,f,c
  8918                           
  8919                           ; BSR set to: 0
  8920                           ;My_header\My_RTCC.h: 195: year = 0;
  8921  01117E  0E00               	movlw	0
  8922  011180  0100               	movlb	0	; () banked
  8923  011182  6F91               	movwf	epoch_to_caltime@year& (0+255),b
  8924                           
  8925                           ; BSR set to: 0
  8926                           ;My_header\My_RTCC.h: 196: }
  8927                           ;My_header\My_RTCC.h: 197: } else {
  8928  011184  D003               	goto	l4344
  8929  011186                     l4342:
  8930                           
  8931                           ; BSR set to: 0
  8932                           ;My_header\My_RTCC.h: 198: month++;
  8933  011186  0100               	movlb	0	; () banked
  8934  011188  2B92               	incf	epoch_to_caltime@month& (0+255),f,b
  8935  01118A  D000               	goto	l4344
  8936  01118C                     l4344:
  8937                           
  8938                           ; BSR set to: 0
  8939                           ;My_header\My_RTCC.h: 199: }
  8940                           ;My_header\My_RTCC.h: 200: month_cache = month;
  8941  01118C  C092  F0B6         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  8942                           
  8943                           ; BSR set to: 0
  8944                           ;My_header\My_RTCC.h: 201: year_cache = year;
  8945  011190  C091  F0B3         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  8946  011194  D000               	goto	l4348
  8947  011196                     l4348:
  8948                           
  8949                           ; BSR set to: 0
  8950  011196  C092  F060         	movff	epoch_to_caltime@month,month_length@month
  8951  01119A  0100               	movlb	0	; () banked
  8952  01119C  5191               	movf	epoch_to_caltime@year& (0+255),w,b
  8953  01119E  EC8B  F08B         	call	_month_length
  8954  0111A2  0100               	movlb	0	; () banked
  8955  0111A4  6F8B               	movwf	??_epoch_to_caltime& (0+255),b
  8956  0111A6  0100               	movlb	0	; () banked
  8957  0111A8  518B               	movf	??_epoch_to_caltime& (0+255),w,b
  8958  0111AA  0100               	movlb	0	; () banked
  8959  0111AC  5D8F               	subwf	epoch_to_caltime@day& (0+255),w,b
  8960  0111AE  0E00               	movlw	0
  8961  0111B0  5990               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  8962  0111B2  B0D8               	btfsc	status,0,c
  8963  0111B4  D7AF               	goto	l330
  8964                           
  8965                           ; BSR set to: 0
  8966                           ;My_header\My_RTCC.h: 202: }
  8967                           ;My_header\My_RTCC.h: 203: day_cache = day_since_epoch - day;
  8968                           
  8969                           ; BSR set to: 0
  8970  0111B6  C08F  F08B         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  8971  0111BA  C090  F08C         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  8972  0111BE  0100               	movlb	0	; () banked
  8973  0111C0  1F8B               	comf	??_epoch_to_caltime& (0+255),f,b
  8974  0111C2  1F8C               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  8975  0111C4  4B8B               	infsnz	??_epoch_to_caltime& (0+255),f,b
  8976  0111C6  2B8C               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  8977  0111C8  0100               	movlb	0	; () banked
  8978  0111CA  518D               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  8979  0111CC  0100               	movlb	0	; () banked
  8980  0111CE  258B               	addwf	??_epoch_to_caltime& (0+255),w,b
  8981  0111D0  6E25               	movwf	epoch_to_caltime@day_cache,c
  8982  0111D2  0100               	movlb	0	; () banked
  8983  0111D4  518E               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  8984  0111D6  0100               	movlb	0	; () banked
  8985  0111D8  218C               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  8986  0111DA  6E26               	movwf	epoch_to_caltime@day_cache+1,c
  8987                           
  8988                           ; BSR set to: 0
  8989                           ;My_header\My_RTCC.h: 204: day++;
  8990  0111DC  0100               	movlb	0	; () banked
  8991  0111DE  4B8F               	infsnz	epoch_to_caltime@day& (0+255),f,b
  8992  0111E0  2B90               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  8993                           
  8994                           ; BSR set to: 0
  8995                           ;My_header\My_RTCC.h: 206: ct->YY = year;
  8996  0111E2  0100               	movlb	0	; () banked
  8997  0111E4  EE20 F006          	lfsr	2,6
  8998  0111E8  5187               	movf	epoch_to_caltime@ct& (0+255),w,b
  8999  0111EA  26D9               	addwf	fsr2l,f,c
  9000  0111EC  5188               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  9001  0111EE  22DA               	addwfc	fsr2h,f,c
  9002  0111F0  C091  FFDF         	movff	epoch_to_caltime@year,indf2
  9003                           
  9004                           ; BSR set to: 0
  9005                           ;My_header\My_RTCC.h: 207: ct->MM = month;
  9006  0111F4  0100               	movlb	0	; () banked
  9007  0111F6  EE20 F005          	lfsr	2,5
  9008  0111FA  5187               	movf	epoch_to_caltime@ct& (0+255),w,b
  9009  0111FC  26D9               	addwf	fsr2l,f,c
  9010  0111FE  5188               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  9011  011200  22DA               	addwfc	fsr2h,f,c
  9012  011202  C092  FFDF         	movff	epoch_to_caltime@month,indf2
  9013                           
  9014                           ; BSR set to: 0
  9015                           ;My_header\My_RTCC.h: 208: ct->DD = day;
  9016  011206  0100               	movlb	0	; () banked
  9017  011208  EE20 F004          	lfsr	2,4
  9018  01120C  5187               	movf	epoch_to_caltime@ct& (0+255),w,b
  9019  01120E  26D9               	addwf	fsr2l,f,c
  9020  011210  5188               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  9021  011212  22DA               	addwfc	fsr2h,f,c
  9022  011214  C08F  FFDF         	movff	epoch_to_caltime@day,indf2
  9023                           
  9024                           ; BSR set to: 0
  9025  011218  0012               	return		;funcret
  9026  01121A                     __end_of_epoch_to_caltime:
  9027                           	opt stack 0
  9028                           tblptru	equ	0xFF8
  9029                           tblptrh	equ	0xFF7
  9030                           tblptrl	equ	0xFF6
  9031                           tablat	equ	0xFF5
  9032                           prodh	equ	0xFF4
  9033                           prodl	equ	0xFF3
  9034                           intcon	equ	0xFF2
  9035                           intcon2	equ	0xFF1
  9036                           postinc0	equ	0xFEE
  9037                           wreg	equ	0xFE8
  9038                           indf1	equ	0xFE7
  9039                           postinc1	equ	0xFE6
  9040                           postdec1	equ	0xFE5
  9041                           fsr1h	equ	0xFE2
  9042                           fsr1l	equ	0xFE1
  9043                           indf2	equ	0xFDF
  9044                           postinc2	equ	0xFDE
  9045                           postdec2	equ	0xFDD
  9046                           fsr2h	equ	0xFDA
  9047                           fsr2l	equ	0xFD9
  9048                           status	equ	0xFD8
  9049                           
  9050 ;; *************** function _month_length *****************
  9051 ;; Defined at:
  9052 ;;		line 87 in file "../My_header\My_RTCC.h"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;  year            1    wreg     unsigned char 
  9055 ;;  month           1    0[BANK0 ] unsigned char 
  9056 ;; Auto vars:     Size  Location     Type
  9057 ;;  year            1    5[BANK0 ] unsigned char 
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  1    wreg      unsigned char 
  9060 ;; Registers used:
  9061 ;;		wreg, status,2, status,0, cstack
  9062 ;; Tracked objects:
  9063 ;;		On entry : 0/0
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9067 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9068 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9069 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9070 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9071 ;;Total ram usage:        6 bytes
  9072 ;; Hardware stack levels used:    1
  9073 ;; Hardware stack levels required when called:    5
  9074 ;; This function calls:
  9075 ;;		___awmod
  9076 ;; This function is called by:
  9077 ;;		_epoch_to_caltime
  9078 ;;		_caltime_to_epoch
  9079 ;;		_command_operation
  9080 ;;		_RTCC_adjust_time_inc
  9081 ;;		_RTCC_adjust_time_dec
  9082 ;; This function uses a non-reentrant model
  9083 ;;
  9084                           
  9085                           	psect	text42
  9086  011716                     __ptext42:
  9087                           	opt stack 0
  9088  011716                     _month_length:
  9089                           	opt stack 20
  9090                           
  9091                           ; BSR set to: 0
  9092                           ;incstack = 0
  9093                           ;month_length@year stored from wreg
  9094  011716  0100               	movlb	0	; () banked
  9095  011718  6F65               	movwf	month_length@year& (0+255),b
  9096                           
  9097                           ; BSR set to: 0
  9098                           ;My_header\My_RTCC.h: 88: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year %
      +                           400);
  9099  01171A  0E02               	movlw	2
  9100  01171C  0100               	movlb	0	; () banked
  9101  01171E  1960               	xorwf	month_length@month& (0+255),w,b
  9102  011720  A4D8               	btfss	status,2,c
  9103  011722  D036               	goto	l4086
  9104                           
  9105                           ; BSR set to: 0
  9106  011724  C065  F01F         	movff	month_length@year,___awmod@dividend
  9107  011728  6A20               	clrf	___awmod@dividend+1,c
  9108  01172A  0E00               	movlw	0
  9109  01172C  6E22               	movwf	___awmod@divisor+1,c
  9110  01172E  0E64               	movlw	100
  9111  011730  6E21               	movwf	___awmod@divisor,c
  9112  011732  EC2A  F091         	call	___awmod	;wreg free
  9113  011736  501F               	movf	?___awmod,w,c
  9114  011738  1020               	iorwf	?___awmod+1,w,c
  9115  01173A  A4D8               	btfss	status,2,c
  9116  01173C  D002               	goto	u4230
  9117  01173E  0E01               	movlw	1
  9118  011740  D001               	goto	u4240
  9119  011742                     u4230:
  9120  011742  0E00               	movlw	0
  9121  011744                     u4240:
  9122  011744  0800               	sublw	0
  9123  011746  0100               	movlb	0	; () banked
  9124  011748  6F61               	movwf	??_month_length& (0+255),b
  9125  01174A  C065  F01F         	movff	month_length@year,___awmod@dividend
  9126  01174E  6A20               	clrf	___awmod@dividend+1,c
  9127  011750  0E01               	movlw	1
  9128  011752  6E22               	movwf	___awmod@divisor+1,c
  9129  011754  0E90               	movlw	144
  9130  011756  6E21               	movwf	___awmod@divisor,c
  9131  011758  EC2A  F091         	call	___awmod	;wreg free
  9132  01175C  501F               	movf	?___awmod,w,c
  9133  01175E  1020               	iorwf	?___awmod+1,w,c
  9134  011760  A4D8               	btfss	status,2,c
  9135  011762  D004               	goto	u4250
  9136  011764  0100               	movlb	0	; () banked
  9137  011766  6B62               	clrf	(??_month_length+1)& (0+255),b
  9138  011768  2B62               	incf	(??_month_length+1)& (0+255),f,b
  9139  01176A  D002               	goto	u4268
  9140  01176C                     u4250:
  9141  01176C  0100               	movlb	0	; () banked
  9142  01176E  6B62               	clrf	(??_month_length+1)& (0+255),b
  9143  011770                     u4268:
  9144  011770  C065  F063         	movff	month_length@year,??_month_length+2
  9145  011774  0E03               	movlw	3
  9146  011776  0100               	movlb	0	; () banked
  9147  011778  1763               	andwf	(??_month_length+2)& (0+255),f,b
  9148  01177A  A4D8               	btfss	status,2,c
  9149  01177C  D002               	goto	u4270
  9150  01177E  0E01               	movlw	1
  9151  011780  D001               	goto	u4280
  9152  011782                     u4270:
  9153  011782  0E00               	movlw	0
  9154  011784                     u4280:
  9155  011784  0100               	movlb	0	; () banked
  9156  011786  2562               	addwf	(??_month_length+1)& (0+255),w,b
  9157  011788  0100               	movlb	0	; () banked
  9158  01178A  2561               	addwf	??_month_length& (0+255),w,b
  9159  01178C  0F1C               	addlw	28
  9160                           
  9161                           ; BSR set to: 0
  9162                           
  9163                           ; BSR set to: 0
  9164  01178E  0012               	return	
  9165  011790                     l4086:
  9166                           
  9167                           ; BSR set to: 0
  9168                           ;My_header\My_RTCC.h: 89: else return 31 - (((-(month & 1)^month)&13) == 4);
  9169  011790  0100               	movlb	0	; () banked
  9170  011792  5160               	movf	month_length@month& (0+255),w,b
  9171  011794  0B01               	andlw	1
  9172  011796  0100               	movlb	0	; () banked
  9173  011798  6F61               	movwf	??_month_length& (0+255),b
  9174  01179A  6B62               	clrf	(??_month_length+1)& (0+255),b
  9175  01179C  0100               	movlb	0	; () banked
  9176  01179E  1F61               	comf	??_month_length& (0+255),f,b
  9177  0117A0  1F62               	comf	(??_month_length+1)& (0+255),f,b
  9178  0117A2  4B61               	infsnz	??_month_length& (0+255),f,b
  9179  0117A4  2B62               	incf	(??_month_length+1)& (0+255),f,b
  9180  0117A6  0100               	movlb	0	; () banked
  9181  0117A8  5160               	movf	month_length@month& (0+255),w,b
  9182  0117AA  0100               	movlb	0	; () banked
  9183  0117AC  6F63               	movwf	(??_month_length+2)& (0+255),b
  9184  0117AE  6B64               	clrf	(??_month_length+3)& (0+255),b
  9185  0117B0  0100               	movlb	0	; () banked
  9186  0117B2  5161               	movf	??_month_length& (0+255),w,b
  9187  0117B4  0100               	movlb	0	; () banked
  9188  0117B6  1B63               	xorwf	(??_month_length+2)& (0+255),f,b
  9189  0117B8  0100               	movlb	0	; () banked
  9190  0117BA  5162               	movf	(??_month_length+1)& (0+255),w,b
  9191  0117BC  0100               	movlb	0	; () banked
  9192  0117BE  1B64               	xorwf	(??_month_length+3)& (0+255),f,b
  9193  0117C0  0E0D               	movlw	13
  9194  0117C2  0100               	movlb	0	; () banked
  9195  0117C4  1763               	andwf	(??_month_length+2)& (0+255),f,b
  9196  0117C6  0E00               	movlw	0
  9197  0117C8  1764               	andwf	(??_month_length+3)& (0+255),f,b
  9198  0117CA  0E04               	movlw	4
  9199  0117CC  0100               	movlb	0	; () banked
  9200  0117CE  1963               	xorwf	(??_month_length+2)& (0+255),w,b
  9201  0117D0  0100               	movlb	0	; () banked
  9202  0117D2  1164               	iorwf	(??_month_length+3)& (0+255),w,b
  9203  0117D4  A4D8               	btfss	status,2,c
  9204  0117D6  D002               	goto	u4290
  9205  0117D8  0E01               	movlw	1
  9206  0117DA  D001               	goto	u4300
  9207  0117DC                     u4290:
  9208  0117DC  0E00               	movlw	0
  9209  0117DE                     u4300:
  9210  0117DE  0800               	sublw	0
  9211  0117E0  0F1F               	addlw	31
  9212                           
  9213                           ; BSR set to: 0
  9214  0117E2  0012               	return	
  9215                           
  9216                           ; BSR set to: 0
  9217                           
  9218                           ; BSR set to: 0
  9219  0117E4  0012               	return		;funcret
  9220  0117E6                     __end_of_month_length:
  9221                           	opt stack 0
  9222                           tblptru	equ	0xFF8
  9223                           tblptrh	equ	0xFF7
  9224                           tblptrl	equ	0xFF6
  9225                           tablat	equ	0xFF5
  9226                           prodh	equ	0xFF4
  9227                           prodl	equ	0xFF3
  9228                           intcon	equ	0xFF2
  9229                           intcon2	equ	0xFF1
  9230                           postinc0	equ	0xFEE
  9231                           wreg	equ	0xFE8
  9232                           indf1	equ	0xFE7
  9233                           postinc1	equ	0xFE6
  9234                           postdec1	equ	0xFE5
  9235                           fsr1h	equ	0xFE2
  9236                           fsr1l	equ	0xFE1
  9237                           indf2	equ	0xFDF
  9238                           postinc2	equ	0xFDE
  9239                           postdec2	equ	0xFDD
  9240                           fsr2h	equ	0xFDA
  9241                           fsr2l	equ	0xFD9
  9242                           status	equ	0xFD8
  9243                           
  9244 ;; *************** function ___awmod *****************
  9245 ;; Defined at:
  9246 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  9247 ;; Parameters:    Size  Location     Type
  9248 ;;  dividend        2   30[COMRAM] int 
  9249 ;;  divisor         2   32[COMRAM] int 
  9250 ;; Auto vars:     Size  Location     Type
  9251 ;;  sign            1   35[COMRAM] unsigned char 
  9252 ;;  counter         1   34[COMRAM] unsigned char 
  9253 ;; Return value:  Size  Location     Type
  9254 ;;                  2   30[COMRAM] int 
  9255 ;; Registers used:
  9256 ;;		wreg, status,2, status,0
  9257 ;; Tracked objects:
  9258 ;;		On entry : 0/0
  9259 ;;		On exit  : 0/0
  9260 ;;		Unchanged: 0/0
  9261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9262 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9263 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9265 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9266 ;;Total ram usage:        6 bytes
  9267 ;; Hardware stack levels used:    1
  9268 ;; Hardware stack levels required when called:    4
  9269 ;; This function calls:
  9270 ;;		Nothing
  9271 ;; This function is called by:
  9272 ;;		_month_length
  9273 ;; This function uses a non-reentrant model
  9274 ;;
  9275                           
  9276                           	psect	text43
  9277  012254                     __ptext43:
  9278                           	opt stack 0
  9279  012254                     ___awmod:
  9280                           	opt stack 20
  9281                           
  9282                           ; BSR set to: 0
  9283                           ;incstack = 0
  9284  012254  0E00               	movlw	0
  9285  012256  6E24               	movwf	___awmod@sign,c
  9286  012258  AE20               	btfss	___awmod@dividend+1,7,c
  9287  01225A  D007               	goto	l4036
  9288  01225C  6C1F               	negf	___awmod@dividend,c
  9289  01225E  1E20               	comf	___awmod@dividend+1,f,c
  9290  012260  B0D8               	btfsc	status,0,c
  9291  012262  2A20               	incf	___awmod@dividend+1,f,c
  9292  012264  0E01               	movlw	1
  9293  012266  6E24               	movwf	___awmod@sign,c
  9294  012268  D000               	goto	l4036
  9295  01226A                     l4036:
  9296  01226A  AE22               	btfss	___awmod@divisor+1,7,c
  9297  01226C  D005               	goto	l4040
  9298  01226E  6C21               	negf	___awmod@divisor,c
  9299  012270  1E22               	comf	___awmod@divisor+1,f,c
  9300  012272  B0D8               	btfsc	status,0,c
  9301  012274  2A22               	incf	___awmod@divisor+1,f,c
  9302  012276  D000               	goto	l4040
  9303  012278                     l4040:
  9304  012278  5021               	movf	___awmod@divisor,w,c
  9305  01227A  1022               	iorwf	___awmod@divisor+1,w,c
  9306  01227C  B4D8               	btfsc	status,2,c
  9307  01227E  D01D               	goto	l4056
  9308  012280  0E01               	movlw	1
  9309  012282  6E23               	movwf	___awmod@counter,c
  9310  012284  D005               	goto	l4046
  9311  012286                     l4044:
  9312  012286  90D8               	bcf	status,0,c
  9313  012288  3621               	rlcf	___awmod@divisor,f,c
  9314  01228A  3622               	rlcf	___awmod@divisor+1,f,c
  9315  01228C  2A23               	incf	___awmod@counter,f,c
  9316  01228E  D000               	goto	l4046
  9317  012290                     l4046:
  9318  012290  BE22               	btfsc	___awmod@divisor+1,7,c
  9319  012292  D002               	goto	l4048
  9320  012294  D7F8               	goto	l4044
  9321  012296  D000               	goto	l4048
  9322  012298                     l4048:
  9323  012298  5021               	movf	___awmod@divisor,w,c
  9324  01229A  5C1F               	subwf	___awmod@dividend,w,c
  9325  01229C  5022               	movf	___awmod@divisor+1,w,c
  9326  01229E  5820               	subwfb	___awmod@dividend+1,w,c
  9327  0122A0  A0D8               	btfss	status,0,c
  9328  0122A2  D005               	goto	l4052
  9329  0122A4  5021               	movf	___awmod@divisor,w,c
  9330  0122A6  5E1F               	subwf	___awmod@dividend,f,c
  9331  0122A8  5022               	movf	___awmod@divisor+1,w,c
  9332  0122AA  5A20               	subwfb	___awmod@dividend+1,f,c
  9333  0122AC  D000               	goto	l4052
  9334  0122AE                     l4052:
  9335  0122AE  90D8               	bcf	status,0,c
  9336  0122B0  3222               	rrcf	___awmod@divisor+1,f,c
  9337  0122B2  3221               	rrcf	___awmod@divisor,f,c
  9338  0122B4  2E23               	decfsz	___awmod@counter,f,c
  9339  0122B6  D7F0               	goto	l4048
  9340  0122B8  D000               	goto	l4056
  9341  0122BA                     l4056:
  9342  0122BA  5024               	movf	___awmod@sign,w,c
  9343  0122BC  B4D8               	btfsc	status,2,c
  9344  0122BE  D005               	goto	l4060
  9345  0122C0  6C1F               	negf	___awmod@dividend,c
  9346  0122C2  1E20               	comf	___awmod@dividend+1,f,c
  9347  0122C4  B0D8               	btfsc	status,0,c
  9348  0122C6  2A20               	incf	___awmod@dividend+1,f,c
  9349  0122C8  D000               	goto	l4060
  9350  0122CA                     l4060:
  9351  0122CA  C01F  F01F         	movff	___awmod@dividend,?___awmod
  9352  0122CE  C020  F020         	movff	___awmod@dividend+1,?___awmod+1
  9353  0122D2  0012               	return	
  9354  0122D4  0012               	return		;funcret
  9355  0122D6                     __end_of___awmod:
  9356                           	opt stack 0
  9357                           tblptru	equ	0xFF8
  9358                           tblptrh	equ	0xFF7
  9359                           tblptrl	equ	0xFF6
  9360                           tablat	equ	0xFF5
  9361                           prodh	equ	0xFF4
  9362                           prodl	equ	0xFF3
  9363                           intcon	equ	0xFF2
  9364                           intcon2	equ	0xFF1
  9365                           postinc0	equ	0xFEE
  9366                           wreg	equ	0xFE8
  9367                           indf1	equ	0xFE7
  9368                           postinc1	equ	0xFE6
  9369                           postdec1	equ	0xFE5
  9370                           fsr1h	equ	0xFE2
  9371                           fsr1l	equ	0xFE1
  9372                           indf2	equ	0xFDF
  9373                           postinc2	equ	0xFDE
  9374                           postdec2	equ	0xFDD
  9375                           fsr2h	equ	0xFDA
  9376                           fsr2l	equ	0xFD9
  9377                           status	equ	0xFD8
  9378                           
  9379 ;; *************** function _get_quot_rem *****************
  9380 ;; Defined at:
  9381 ;;		line 112 in file "../My_header\My_RTCC.h"
  9382 ;; Parameters:    Size  Location     Type
  9383 ;;  quot            2   31[BANK0 ] PTR unsigned long 
  9384 ;;		 -> epoch_to_caltime@num(4), 
  9385 ;;  div             1   33[BANK0 ] unsigned char 
  9386 ;; Auto vars:     Size  Location     Type
  9387 ;;  num             4   35[BANK0 ] unsigned long 
  9388 ;; Return value:  Size  Location     Type
  9389 ;;                  4   31[BANK0 ] unsigned long 
  9390 ;; Registers used:
  9391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9392 ;; Tracked objects:
  9393 ;;		On entry : 0/0
  9394 ;;		On exit  : 0/0
  9395 ;;		Unchanged: 0/0
  9396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9397 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9398 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9400 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9401 ;;Total ram usage:        8 bytes
  9402 ;; Hardware stack levels used:    1
  9403 ;; Hardware stack levels required when called:    5
  9404 ;; This function calls:
  9405 ;;		___lldiv
  9406 ;;		___lmul
  9407 ;; This function is called by:
  9408 ;;		_epoch_to_caltime
  9409 ;; This function uses a non-reentrant model
  9410 ;;
  9411                           
  9412                           	psect	text44
  9413  01156E                     __ptext44:
  9414                           	opt stack 0
  9415  01156E                     _get_quot_rem:
  9416                           	opt stack 20
  9417                           
  9418                           ;My_header\My_RTCC.h: 115: epoch_t num = *quot;
  9419                           
  9420                           ;incstack = 0
  9421  01156E  C07F  FFD9         	movff	get_quot_rem@quot,fsr2l
  9422  011572  C080  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  9423  011576  CFDE F083          	movff	postinc2,get_quot_rem@num
  9424  01157A  CFDE F084          	movff	postinc2,get_quot_rem@num+1
  9425  01157E  CFDE F085          	movff	postinc2,get_quot_rem@num+2
  9426  011582  CFDE F086          	movff	postinc2,get_quot_rem@num+3
  9427                           
  9428                           ;My_header\My_RTCC.h: 116: return num - (*quot = num / div) * div;
  9429  011586  0100               	movlb	0	; () banked
  9430  011588  5181               	movf	get_quot_rem@div& (0+255),w,b
  9431  01158A  0100               	movlb	0	; () banked
  9432  01158C  6F76               	movwf	___lldiv@divisor& (0+255),b
  9433  01158E  6B77               	clrf	(___lldiv@divisor+1)& (0+255),b
  9434  011590  6B78               	clrf	(___lldiv@divisor+2)& (0+255),b
  9435  011592  6B79               	clrf	(___lldiv@divisor+3)& (0+255),b
  9436  011594  C083  F072         	movff	get_quot_rem@num,___lldiv@dividend
  9437  011598  C084  F073         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  9438  01159C  C085  F074         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  9439  0115A0  C086  F075         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  9440  0115A4  EC56  F08C         	call	___lldiv	;wreg free
  9441  0115A8  C07F  FFD9         	movff	get_quot_rem@quot,fsr2l
  9442  0115AC  C080  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  9443  0115B0  0100               	movlb	0	; () banked
  9444  0115B2  C072  FFDE         	movff	?___lldiv,postinc2
  9445  0115B6  0100               	movlb	0	; () banked
  9446  0115B8  C073  FFDE         	movff	?___lldiv+1,postinc2
  9447  0115BC  0100               	movlb	0	; () banked
  9448  0115BE  C074  FFDE         	movff	?___lldiv+2,postinc2
  9449  0115C2  0100               	movlb	0	; () banked
  9450  0115C4  C075  FFDD         	movff	?___lldiv+3,postdec2
  9451  0115C8  52DD               	movf	postdec2,f,c
  9452  0115CA  52DD               	movf	postdec2,f,c
  9453  0115CC  CFDE F066          	movff	postinc2,___lmul@multiplier
  9454  0115D0  CFDE F067          	movff	postinc2,___lmul@multiplier+1
  9455  0115D4  CFDE F068          	movff	postinc2,___lmul@multiplier+2
  9456  0115D8  CFDE F069          	movff	postinc2,___lmul@multiplier+3
  9457  0115DC  0100               	movlb	0	; () banked
  9458  0115DE  5181               	movf	get_quot_rem@div& (0+255),w,b
  9459  0115E0  0100               	movlb	0	; () banked
  9460  0115E2  6F6A               	movwf	___lmul@multiplicand& (0+255),b
  9461  0115E4  6B6B               	clrf	(___lmul@multiplicand+1)& (0+255),b
  9462  0115E6  6B6C               	clrf	(___lmul@multiplicand+2)& (0+255),b
  9463  0115E8  6B6D               	clrf	(___lmul@multiplicand+3)& (0+255),b
  9464  0115EA  EC6B  F091         	call	___lmul	;wreg free
  9465  0115EE  0100               	movlb	0	; () banked
  9466  0115F0  1F66               	comf	?___lmul& (0+255),f,b
  9467  0115F2  0100               	movlb	0	; () banked
  9468  0115F4  1F67               	comf	(?___lmul+1)& (0+255),f,b
  9469  0115F6  0100               	movlb	0	; () banked
  9470  0115F8  1F68               	comf	(?___lmul+2)& (0+255),f,b
  9471  0115FA  0100               	movlb	0	; () banked
  9472  0115FC  1F69               	comf	(?___lmul+3)& (0+255),f,b
  9473  0115FE  0100               	movlb	0	; () banked
  9474  011600  2B66               	incf	?___lmul& (0+255),f,b
  9475  011602  0E00               	movlw	0
  9476  011604  0100               	movlb	0	; () banked
  9477  011606  2367               	addwfc	(?___lmul+1)& (0+255),f,b
  9478  011608  0100               	movlb	0	; () banked
  9479  01160A  2368               	addwfc	(?___lmul+2)& (0+255),f,b
  9480  01160C  0100               	movlb	0	; () banked
  9481  01160E  2369               	addwfc	(?___lmul+3)& (0+255),f,b
  9482  011610  0100               	movlb	0	; () banked
  9483  011612  5183               	movf	get_quot_rem@num& (0+255),w,b
  9484  011614  0100               	movlb	0	; () banked
  9485  011616  2566               	addwf	?___lmul& (0+255),w,b
  9486  011618  0100               	movlb	0	; () banked
  9487  01161A  6F7F               	movwf	?_get_quot_rem& (0+255),b
  9488  01161C  0100               	movlb	0	; () banked
  9489  01161E  5184               	movf	(get_quot_rem@num+1)& (0+255),w,b
  9490  011620  0100               	movlb	0	; () banked
  9491  011622  2167               	addwfc	(?___lmul+1)& (0+255),w,b
  9492  011624  0100               	movlb	0	; () banked
  9493  011626  6F80               	movwf	(?_get_quot_rem+1)& (0+255),b
  9494  011628  0100               	movlb	0	; () banked
  9495  01162A  5185               	movf	(get_quot_rem@num+2)& (0+255),w,b
  9496  01162C  0100               	movlb	0	; () banked
  9497  01162E  2168               	addwfc	(?___lmul+2)& (0+255),w,b
  9498  011630  0100               	movlb	0	; () banked
  9499  011632  6F81               	movwf	(?_get_quot_rem+2)& (0+255),b
  9500  011634  0100               	movlb	0	; () banked
  9501  011636  5186               	movf	(get_quot_rem@num+3)& (0+255),w,b
  9502  011638  0100               	movlb	0	; () banked
  9503  01163A  2169               	addwfc	(?___lmul+3)& (0+255),w,b
  9504  01163C  0100               	movlb	0	; () banked
  9505  01163E  6F82               	movwf	(?_get_quot_rem+3)& (0+255),b
  9506  011640  0012               	return	
  9507                           
  9508                           ; BSR set to: 0
  9509                           
  9510                           ; BSR set to: 0
  9511  011642  0012               	return		;funcret
  9512  011644                     __end_of_get_quot_rem:
  9513                           	opt stack 0
  9514                           tblptru	equ	0xFF8
  9515                           tblptrh	equ	0xFF7
  9516                           tblptrl	equ	0xFF6
  9517                           tablat	equ	0xFF5
  9518                           prodh	equ	0xFF4
  9519                           prodl	equ	0xFF3
  9520                           intcon	equ	0xFF2
  9521                           intcon2	equ	0xFF1
  9522                           postinc0	equ	0xFEE
  9523                           wreg	equ	0xFE8
  9524                           indf1	equ	0xFE7
  9525                           postinc1	equ	0xFE6
  9526                           postdec1	equ	0xFE5
  9527                           fsr1h	equ	0xFE2
  9528                           fsr1l	equ	0xFE1
  9529                           indf2	equ	0xFDF
  9530                           postinc2	equ	0xFDE
  9531                           postdec2	equ	0xFDD
  9532                           fsr2h	equ	0xFDA
  9533                           fsr2l	equ	0xFD9
  9534                           status	equ	0xFD8
  9535                           
  9536 ;; *************** function ___lmul *****************
  9537 ;; Defined at:
  9538 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
  9539 ;; Parameters:    Size  Location     Type
  9540 ;;  multiplier      4    6[BANK0 ] unsigned long 
  9541 ;;  multiplicand    4   10[BANK0 ] unsigned long 
  9542 ;; Auto vars:     Size  Location     Type
  9543 ;;  product         4   14[BANK0 ] unsigned long 
  9544 ;; Return value:  Size  Location     Type
  9545 ;;                  4    6[BANK0 ] unsigned long 
  9546 ;; Registers used:
  9547 ;;		wreg, status,2, status,0
  9548 ;; Tracked objects:
  9549 ;;		On entry : 0/0
  9550 ;;		On exit  : 0/0
  9551 ;;		Unchanged: 0/0
  9552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9553 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9554 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9556 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9557 ;;Total ram usage:       12 bytes
  9558 ;; Hardware stack levels used:    1
  9559 ;; Hardware stack levels required when called:    4
  9560 ;; This function calls:
  9561 ;;		Nothing
  9562 ;; This function is called by:
  9563 ;;		_get_quot_rem
  9564 ;;		_caltime_to_epoch
  9565 ;;		_normal_loop
  9566 ;;		_RTCC_adjust_time_inc
  9567 ;;		_RTCC_adjust_time_dec
  9568 ;; This function uses a non-reentrant model
  9569 ;;
  9570                           
  9571                           	psect	text45
  9572  0122D6                     __ptext45:
  9573                           	opt stack 0
  9574  0122D6                     ___lmul:
  9575                           	opt stack 21
  9576                           
  9577                           ; BSR set to: 0
  9578                           ;incstack = 0
  9579  0122D6  0E00               	movlw	0
  9580  0122D8  0100               	movlb	0	; () banked
  9581  0122DA  6F6E               	movwf	___lmul@product& (0+255),b
  9582  0122DC  0E00               	movlw	0
  9583  0122DE  6F6F               	movwf	(___lmul@product+1)& (0+255),b
  9584  0122E0  0E00               	movlw	0
  9585  0122E2  6F70               	movwf	(___lmul@product+2)& (0+255),b
  9586  0122E4  0E00               	movlw	0
  9587  0122E6  6F71               	movwf	(___lmul@product+3)& (0+255),b
  9588  0122E8  D000               	goto	l4092
  9589  0122EA                     l4092:
  9590                           
  9591                           ; BSR set to: 0
  9592  0122EA  0100               	movlb	0	; () banked
  9593  0122EC  A166               	btfss	___lmul@multiplier& (0+255),0,b
  9594  0122EE  D011               	goto	l4096
  9595                           
  9596                           ; BSR set to: 0
  9597  0122F0  0100               	movlb	0	; () banked
  9598  0122F2  516A               	movf	___lmul@multiplicand& (0+255),w,b
  9599  0122F4  0100               	movlb	0	; () banked
  9600  0122F6  276E               	addwf	___lmul@product& (0+255),f,b
  9601  0122F8  0100               	movlb	0	; () banked
  9602  0122FA  516B               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  9603  0122FC  0100               	movlb	0	; () banked
  9604  0122FE  236F               	addwfc	(___lmul@product+1)& (0+255),f,b
  9605  012300  0100               	movlb	0	; () banked
  9606  012302  516C               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  9607  012304  0100               	movlb	0	; () banked
  9608  012306  2370               	addwfc	(___lmul@product+2)& (0+255),f,b
  9609  012308  0100               	movlb	0	; () banked
  9610  01230A  516D               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  9611  01230C  0100               	movlb	0	; () banked
  9612  01230E  2371               	addwfc	(___lmul@product+3)& (0+255),f,b
  9613  012310  D000               	goto	l4096
  9614  012312                     l4096:
  9615                           
  9616                           ; BSR set to: 0
  9617  012312  0100               	movlb	0	; () banked
  9618  012314  90D8               	bcf	status,0,c
  9619  012316  376A               	rlcf	___lmul@multiplicand& (0+255),f,b
  9620  012318  376B               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  9621  01231A  376C               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  9622  01231C  376D               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  9623                           
  9624                           ; BSR set to: 0
  9625  01231E  0100               	movlb	0	; () banked
  9626  012320  90D8               	bcf	status,0,c
  9627  012322  3369               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  9628  012324  3368               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  9629  012326  3367               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  9630  012328  3366               	rrcf	___lmul@multiplier& (0+255),f,b
  9631  01232A  0100               	movlb	0	; () banked
  9632  01232C  5166               	movf	___lmul@multiplier& (0+255),w,b
  9633  01232E  0100               	movlb	0	; () banked
  9634  012330  1167               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  9635  012332  0100               	movlb	0	; () banked
  9636  012334  1168               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  9637  012336  0100               	movlb	0	; () banked
  9638  012338  1169               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  9639  01233A  A4D8               	btfss	status,2,c
  9640  01233C  D7D6               	goto	l4092
  9641                           
  9642                           ; BSR set to: 0
  9643  01233E  C06E  F066         	movff	___lmul@product,?___lmul
  9644  012342  C06F  F067         	movff	___lmul@product+1,?___lmul+1
  9645  012346  C070  F068         	movff	___lmul@product+2,?___lmul+2
  9646  01234A  C071  F069         	movff	___lmul@product+3,?___lmul+3
  9647                           
  9648                           ; BSR set to: 0
  9649  01234E  0012               	return		;funcret
  9650  012350                     __end_of___lmul:
  9651                           	opt stack 0
  9652                           tblptru	equ	0xFF8
  9653                           tblptrh	equ	0xFF7
  9654                           tblptrl	equ	0xFF6
  9655                           tablat	equ	0xFF5
  9656                           prodh	equ	0xFF4
  9657                           prodl	equ	0xFF3
  9658                           intcon	equ	0xFF2
  9659                           intcon2	equ	0xFF1
  9660                           postinc0	equ	0xFEE
  9661                           wreg	equ	0xFE8
  9662                           indf1	equ	0xFE7
  9663                           postinc1	equ	0xFE6
  9664                           postdec1	equ	0xFE5
  9665                           fsr1h	equ	0xFE2
  9666                           fsr1l	equ	0xFE1
  9667                           indf2	equ	0xFDF
  9668                           postinc2	equ	0xFDE
  9669                           postdec2	equ	0xFDD
  9670                           fsr2h	equ	0xFDA
  9671                           fsr2l	equ	0xFD9
  9672                           status	equ	0xFD8
  9673                           
  9674 ;; *************** function ___lldiv *****************
  9675 ;; Defined at:
  9676 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  9677 ;; Parameters:    Size  Location     Type
  9678 ;;  dividend        4   18[BANK0 ] unsigned long 
  9679 ;;  divisor         4   22[BANK0 ] unsigned long 
  9680 ;; Auto vars:     Size  Location     Type
  9681 ;;  quotient        4   26[BANK0 ] unsigned long 
  9682 ;;  counter         1   30[BANK0 ] unsigned char 
  9683 ;; Return value:  Size  Location     Type
  9684 ;;                  4   18[BANK0 ] unsigned long 
  9685 ;; Registers used:
  9686 ;;		wreg, status,2, status,0
  9687 ;; Tracked objects:
  9688 ;;		On entry : 0/0
  9689 ;;		On exit  : 0/0
  9690 ;;		Unchanged: 0/0
  9691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9692 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9693 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9695 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9696 ;;Total ram usage:       13 bytes
  9697 ;; Hardware stack levels used:    1
  9698 ;; Hardware stack levels required when called:    4
  9699 ;; This function calls:
  9700 ;;		Nothing
  9701 ;; This function is called by:
  9702 ;;		_get_quot_rem
  9703 ;;		_normal_loop
  9704 ;;		_my_utoa32
  9705 ;; This function uses a non-reentrant model
  9706 ;;
  9707                           
  9708                           	psect	text46
  9709  0118AC                     __ptext46:
  9710                           	opt stack 0
  9711  0118AC                     ___lldiv:
  9712                           	opt stack 20
  9713                           
  9714                           ; BSR set to: 0
  9715                           ;incstack = 0
  9716  0118AC  0E00               	movlw	0
  9717  0118AE  0100               	movlb	0	; () banked
  9718  0118B0  6F7A               	movwf	___lldiv@quotient& (0+255),b
  9719  0118B2  0E00               	movlw	0
  9720  0118B4  6F7B               	movwf	(___lldiv@quotient+1)& (0+255),b
  9721  0118B6  0E00               	movlw	0
  9722  0118B8  6F7C               	movwf	(___lldiv@quotient+2)& (0+255),b
  9723  0118BA  0E00               	movlw	0
  9724  0118BC  6F7D               	movwf	(___lldiv@quotient+3)& (0+255),b
  9725                           
  9726                           ; BSR set to: 0
  9727  0118BE  0100               	movlb	0	; () banked
  9728  0118C0  5176               	movf	___lldiv@divisor& (0+255),w,b
  9729  0118C2  0100               	movlb	0	; () banked
  9730  0118C4  1177               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  9731  0118C6  0100               	movlb	0	; () banked
  9732  0118C8  1178               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  9733  0118CA  0100               	movlb	0	; () banked
  9734  0118CC  1179               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  9735  0118CE  B4D8               	btfsc	status,2,c
  9736  0118D0  D047               	goto	l1088
  9737                           
  9738                           ; BSR set to: 0
  9739  0118D2  0E01               	movlw	1
  9740  0118D4  0100               	movlb	0	; () banked
  9741  0118D6  6F7E               	movwf	___lldiv@counter& (0+255),b
  9742  0118D8  D009               	goto	l4152
  9743  0118DA                     l4150:
  9744                           
  9745                           ; BSR set to: 0
  9746  0118DA  0100               	movlb	0	; () banked
  9747  0118DC  90D8               	bcf	status,0,c
  9748  0118DE  3776               	rlcf	___lldiv@divisor& (0+255),f,b
  9749  0118E0  3777               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  9750  0118E2  3778               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  9751  0118E4  3779               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  9752  0118E6  0100               	movlb	0	; () banked
  9753  0118E8  2B7E               	incf	___lldiv@counter& (0+255),f,b
  9754  0118EA  D000               	goto	l4152
  9755  0118EC                     l4152:
  9756                           
  9757                           ; BSR set to: 0
  9758  0118EC  0100               	movlb	0	; () banked
  9759  0118EE  BF79               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
  9760  0118F0  D002               	goto	l4154
  9761  0118F2  D7F3               	goto	l4150
  9762                           
  9763                           ; BSR set to: 0
  9764  0118F4  D000               	goto	l4154
  9765  0118F6                     l4154:
  9766                           
  9767                           ; BSR set to: 0
  9768  0118F6  0100               	movlb	0	; () banked
  9769  0118F8  90D8               	bcf	status,0,c
  9770  0118FA  377A               	rlcf	___lldiv@quotient& (0+255),f,b
  9771  0118FC  377B               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  9772  0118FE  377C               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  9773  011900  377D               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  9774                           
  9775                           ; BSR set to: 0
  9776  011902  0100               	movlb	0	; () banked
  9777  011904  5176               	movf	___lldiv@divisor& (0+255),w,b
  9778  011906  0100               	movlb	0	; () banked
  9779  011908  5D72               	subwf	___lldiv@dividend& (0+255),w,b
  9780  01190A  0100               	movlb	0	; () banked
  9781  01190C  5177               	movf	(___lldiv@divisor+1)& (0+255),w,b
  9782  01190E  0100               	movlb	0	; () banked
  9783  011910  5973               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  9784  011912  0100               	movlb	0	; () banked
  9785  011914  5178               	movf	(___lldiv@divisor+2)& (0+255),w,b
  9786  011916  0100               	movlb	0	; () banked
  9787  011918  5974               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  9788  01191A  0100               	movlb	0	; () banked
  9789  01191C  5179               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9790  01191E  0100               	movlb	0	; () banked
  9791  011920  5975               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  9792  011922  A0D8               	btfss	status,0,c
  9793  011924  D013               	goto	l4162
  9794                           
  9795                           ; BSR set to: 0
  9796  011926  0100               	movlb	0	; () banked
  9797  011928  5176               	movf	___lldiv@divisor& (0+255),w,b
  9798  01192A  0100               	movlb	0	; () banked
  9799  01192C  5F72               	subwf	___lldiv@dividend& (0+255),f,b
  9800  01192E  0100               	movlb	0	; () banked
  9801  011930  5177               	movf	(___lldiv@divisor+1)& (0+255),w,b
  9802  011932  0100               	movlb	0	; () banked
  9803  011934  5B73               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  9804  011936  0100               	movlb	0	; () banked
  9805  011938  5178               	movf	(___lldiv@divisor+2)& (0+255),w,b
  9806  01193A  0100               	movlb	0	; () banked
  9807  01193C  5B74               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  9808  01193E  0100               	movlb	0	; () banked
  9809  011940  5179               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9810  011942  0100               	movlb	0	; () banked
  9811  011944  5B75               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  9812                           
  9813                           ; BSR set to: 0
  9814  011946  0100               	movlb	0	; () banked
  9815  011948  817A               	bsf	___lldiv@quotient& (0+255),0,b
  9816  01194A  D000               	goto	l4162
  9817  01194C                     l4162:
  9818                           
  9819                           ; BSR set to: 0
  9820  01194C  0100               	movlb	0	; () banked
  9821  01194E  90D8               	bcf	status,0,c
  9822  011950  3379               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  9823  011952  3378               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  9824  011954  3377               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  9825  011956  3376               	rrcf	___lldiv@divisor& (0+255),f,b
  9826                           
  9827                           ; BSR set to: 0
  9828  011958  0100               	movlb	0	; () banked
  9829  01195A  2F7E               	decfsz	___lldiv@counter& (0+255),f,b
  9830  01195C  D7CC               	goto	l4154
  9831  01195E  D000               	goto	l1088
  9832  011960                     l1088:
  9833                           
  9834                           ; BSR set to: 0
  9835  011960  C07A  F072         	movff	___lldiv@quotient,?___lldiv
  9836  011964  C07B  F073         	movff	___lldiv@quotient+1,?___lldiv+1
  9837  011968  C07C  F074         	movff	___lldiv@quotient+2,?___lldiv+2
  9838  01196C  C07D  F075         	movff	___lldiv@quotient+3,?___lldiv+3
  9839                           
  9840                           ; BSR set to: 0
  9841  011970  0012               	return		;funcret
  9842  011972                     __end_of___lldiv:
  9843                           	opt stack 0
  9844                           tblptru	equ	0xFF8
  9845                           tblptrh	equ	0xFF7
  9846                           tblptrl	equ	0xFF6
  9847                           tablat	equ	0xFF5
  9848                           prodh	equ	0xFF4
  9849                           prodl	equ	0xFF3
  9850                           intcon	equ	0xFF2
  9851                           intcon2	equ	0xFF1
  9852                           postinc0	equ	0xFEE
  9853                           wreg	equ	0xFE8
  9854                           indf1	equ	0xFE7
  9855                           postinc1	equ	0xFE6
  9856                           postdec1	equ	0xFE5
  9857                           fsr1h	equ	0xFE2
  9858                           fsr1l	equ	0xFE1
  9859                           indf2	equ	0xFDF
  9860                           postinc2	equ	0xFDE
  9861                           postdec2	equ	0xFDD
  9862                           fsr2h	equ	0xFDA
  9863                           fsr2l	equ	0xFD9
  9864                           status	equ	0xFD8
  9865                           
  9866 ;; *************** function _caltime_to_RTCC *****************
  9867 ;; Defined at:
  9868 ;;		line 137 in file "../My_header\My_RTCC.h"
  9869 ;; Parameters:    Size  Location     Type
  9870 ;;  ct              2    4[BANK0 ] PTR struct .
  9871 ;;		 -> caltime_now(7), 
  9872 ;; Auto vars:     Size  Location     Type
  9873 ;;		None
  9874 ;; Return value:  Size  Location     Type
  9875 ;;		None               void
  9876 ;; Registers used:
  9877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9878 ;; Tracked objects:
  9879 ;;		On entry : 0/0
  9880 ;;		On exit  : 0/0
  9881 ;;		Unchanged: 0/0
  9882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9883 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9886 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9887 ;;Total ram usage:        2 bytes
  9888 ;; Hardware stack levels used:    1
  9889 ;; Hardware stack levels required when called:    6
  9890 ;; This function calls:
  9891 ;;		_d_to_x
  9892 ;; This function is called by:
  9893 ;;		_RTCC_from_caltime
  9894 ;;		_RTCC_from_epoch
  9895 ;; This function uses a non-reentrant model
  9896 ;;
  9897                           
  9898                           	psect	text47
  9899  011644                     __ptext47:
  9900                           	opt stack 0
  9901  011644                     _caltime_to_RTCC:
  9902                           	opt stack 20
  9903                           
  9904                           ;My_header\My_RTCC.h: 138: while (RTCCFGbits.RTCSYNC);
  9905                           
  9906                           ; BSR set to: 0
  9907                           ;incstack = 0
  9908  011644  D000               	goto	l317
  9909  011646                     l317:
  9910  011646  010F               	movlb	15	; () banked
  9911  011648  B93F               	btfsc	63,4,b	;volatile
  9912  01164A  D7FD               	goto	l317
  9913                           
  9914                           ; BSR set to: 15
  9915                           ;My_header\My_RTCC.h: 139: RTCCFGbits.RTCPTR0 = 1;
  9916  01164C  010F               	movlb	15	; () banked
  9917  01164E  813F               	bsf	63,0,b	;volatile
  9918                           
  9919                           ;My_header\My_RTCC.h: 140: RTCCFGbits.RTCPTR1 = 1;
  9920  011650  010F               	movlb	15	; () banked
  9921  011652  833F               	bsf	63,1,b	;volatile
  9922                           
  9923                           ; BSR set to: 15
  9924                           ;My_header\My_RTCC.h: 141: RTCVALL = d_to_x(ct->YY);
  9925  011654  0100               	movlb	0	; () banked
  9926  011656  EE20 F006          	lfsr	2,6
  9927  01165A  5164               	movf	caltime_to_RTCC@ct& (0+255),w,b
  9928  01165C  26D9               	addwf	fsr2l,f,c
  9929  01165E  5165               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  9930  011660  22DA               	addwfc	fsr2h,f,c
  9931  011662  50DF               	movf	indf2,w,c
  9932  011664  EC67  F094         	call	_d_to_x
  9933  011668  010F               	movlb	15	; () banked
  9934  01166A  6F3A               	movwf	58,b	;volatile
  9935                           
  9936                           ; BSR set to: 15
  9937                           ;My_header\My_RTCC.h: 142: RTCVALH = 0x00;
  9938  01166C  0E00               	movlw	0
  9939  01166E  010F               	movlb	15	; () banked
  9940  011670  6F3B               	movwf	59,b	;volatile
  9941                           
  9942                           ; BSR set to: 15
  9943                           ;My_header\My_RTCC.h: 143: RTCCFGbits.RTCPTR0 = 0;
  9944  011672  010F               	movlb	15	; () banked
  9945  011674  913F               	bcf	63,0,b	;volatile
  9946                           
  9947                           ; BSR set to: 15
  9948                           ;My_header\My_RTCC.h: 144: RTCCFGbits.RTCPTR1 = 1;
  9949  011676  010F               	movlb	15	; () banked
  9950  011678  833F               	bsf	63,1,b	;volatile
  9951                           
  9952                           ; BSR set to: 15
  9953                           ;My_header\My_RTCC.h: 145: RTCVALL = d_to_x(ct->DD);
  9954  01167A  0100               	movlb	0	; () banked
  9955  01167C  EE20 F004          	lfsr	2,4
  9956  011680  5164               	movf	caltime_to_RTCC@ct& (0+255),w,b
  9957  011682  26D9               	addwf	fsr2l,f,c
  9958  011684  5165               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  9959  011686  22DA               	addwfc	fsr2h,f,c
  9960  011688  50DF               	movf	indf2,w,c
  9961  01168A  EC67  F094         	call	_d_to_x
  9962  01168E  010F               	movlb	15	; () banked
  9963  011690  6F3A               	movwf	58,b	;volatile
  9964                           
  9965                           ; BSR set to: 15
  9966                           ;My_header\My_RTCC.h: 146: RTCVALH = d_to_x(ct->MM);
  9967  011692  0100               	movlb	0	; () banked
  9968  011694  EE20 F005          	lfsr	2,5
  9969  011698  5164               	movf	caltime_to_RTCC@ct& (0+255),w,b
  9970  01169A  26D9               	addwf	fsr2l,f,c
  9971  01169C  5165               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  9972  01169E  22DA               	addwfc	fsr2h,f,c
  9973  0116A0  50DF               	movf	indf2,w,c
  9974  0116A2  EC67  F094         	call	_d_to_x
  9975  0116A6  010F               	movlb	15	; () banked
  9976  0116A8  6F3B               	movwf	59,b	;volatile
  9977                           
  9978                           ; BSR set to: 15
  9979                           ;My_header\My_RTCC.h: 147: RTCCFGbits.RTCPTR0 = 1;
  9980  0116AA  010F               	movlb	15	; () banked
  9981  0116AC  813F               	bsf	63,0,b	;volatile
  9982                           
  9983                           ; BSR set to: 15
  9984                           ;My_header\My_RTCC.h: 148: RTCCFGbits.RTCPTR1 = 0;
  9985  0116AE  010F               	movlb	15	; () banked
  9986  0116B0  933F               	bcf	63,1,b	;volatile
  9987                           
  9988                           ; BSR set to: 15
  9989                           ;My_header\My_RTCC.h: 149: RTCVALL = d_to_x(ct->hh);
  9990  0116B2  0100               	movlb	0	; () banked
  9991  0116B4  EE20 F002          	lfsr	2,2
  9992  0116B8  5164               	movf	caltime_to_RTCC@ct& (0+255),w,b
  9993  0116BA  26D9               	addwf	fsr2l,f,c
  9994  0116BC  5165               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  9995  0116BE  22DA               	addwfc	fsr2h,f,c
  9996  0116C0  50DF               	movf	indf2,w,c
  9997  0116C2  EC67  F094         	call	_d_to_x
  9998  0116C6  010F               	movlb	15	; () banked
  9999  0116C8  6F3A               	movwf	58,b	;volatile
 10000                           
 10001                           ; BSR set to: 15
 10002                           ;My_header\My_RTCC.h: 150: RTCVALH = d_to_x(ct->EE);
 10003  0116CA  0100               	movlb	0	; () banked
 10004  0116CC  EE20 F003          	lfsr	2,3
 10005  0116D0  5164               	movf	caltime_to_RTCC@ct& (0+255),w,b
 10006  0116D2  26D9               	addwf	fsr2l,f,c
 10007  0116D4  5165               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 10008  0116D6  22DA               	addwfc	fsr2h,f,c
 10009  0116D8  50DF               	movf	indf2,w,c
 10010  0116DA  EC67  F094         	call	_d_to_x
 10011  0116DE  010F               	movlb	15	; () banked
 10012  0116E0  6F3B               	movwf	59,b	;volatile
 10013                           
 10014                           ; BSR set to: 15
 10015                           ;My_header\My_RTCC.h: 151: RTCCFGbits.RTCPTR0 = 0;
 10016  0116E2  010F               	movlb	15	; () banked
 10017  0116E4  913F               	bcf	63,0,b	;volatile
 10018                           
 10019                           ; BSR set to: 15
 10020                           ;My_header\My_RTCC.h: 152: RTCCFGbits.RTCPTR1 = 0;
 10021  0116E6  010F               	movlb	15	; () banked
 10022  0116E8  933F               	bcf	63,1,b	;volatile
 10023                           
 10024                           ; BSR set to: 15
 10025                           ;My_header\My_RTCC.h: 153: RTCVALL = d_to_x(ct->ss);
 10026  0116EA  C064  FFD9         	movff	caltime_to_RTCC@ct,fsr2l
 10027  0116EE  C065  FFDA         	movff	caltime_to_RTCC@ct+1,fsr2h
 10028  0116F2  50DF               	movf	indf2,w,c
 10029  0116F4  EC67  F094         	call	_d_to_x
 10030  0116F8  010F               	movlb	15	; () banked
 10031  0116FA  6F3A               	movwf	58,b	;volatile
 10032                           
 10033                           ; BSR set to: 15
 10034                           ;My_header\My_RTCC.h: 154: RTCVALH = d_to_x(ct->mm);
 10035  0116FC  0100               	movlb	0	; () banked
 10036  0116FE  EE20 F001          	lfsr	2,1
 10037  011702  5164               	movf	caltime_to_RTCC@ct& (0+255),w,b
 10038  011704  26D9               	addwf	fsr2l,f,c
 10039  011706  5165               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 10040  011708  22DA               	addwfc	fsr2h,f,c
 10041  01170A  50DF               	movf	indf2,w,c
 10042  01170C  EC67  F094         	call	_d_to_x
 10043  011710  010F               	movlb	15	; () banked
 10044  011712  6F3B               	movwf	59,b	;volatile
 10045                           
 10046                           ; BSR set to: 15
 10047  011714  0012               	return		;funcret
 10048  011716                     __end_of_caltime_to_RTCC:
 10049                           	opt stack 0
 10050                           tblptru	equ	0xFF8
 10051                           tblptrh	equ	0xFF7
 10052                           tblptrl	equ	0xFF6
 10053                           tablat	equ	0xFF5
 10054                           prodh	equ	0xFF4
 10055                           prodl	equ	0xFF3
 10056                           intcon	equ	0xFF2
 10057                           intcon2	equ	0xFF1
 10058                           postinc0	equ	0xFEE
 10059                           wreg	equ	0xFE8
 10060                           indf1	equ	0xFE7
 10061                           postinc1	equ	0xFE6
 10062                           postdec1	equ	0xFE5
 10063                           fsr1h	equ	0xFE2
 10064                           fsr1l	equ	0xFE1
 10065                           indf2	equ	0xFDF
 10066                           postinc2	equ	0xFDE
 10067                           postdec2	equ	0xFDD
 10068                           fsr2h	equ	0xFDA
 10069                           fsr2l	equ	0xFD9
 10070                           status	equ	0xFD8
 10071                           
 10072 ;; *************** function _d_to_x *****************
 10073 ;; Defined at:
 10074 ;;		line 73 in file "../My_header\My_RTCC.h"
 10075 ;; Parameters:    Size  Location     Type
 10076 ;;  dec             1    wreg     unsigned char 
 10077 ;; Auto vars:     Size  Location     Type
 10078 ;;  dec             1   34[COMRAM] unsigned char 
 10079 ;; Return value:  Size  Location     Type
 10080 ;;                  1    wreg      unsigned char 
 10081 ;; Registers used:
 10082 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10083 ;; Tracked objects:
 10084 ;;		On entry : 0/0
 10085 ;;		On exit  : 0/0
 10086 ;;		Unchanged: 0/0
 10087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10089 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10091 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10092 ;;Total ram usage:        1 bytes
 10093 ;; Hardware stack levels used:    1
 10094 ;; Hardware stack levels required when called:    5
 10095 ;; This function calls:
 10096 ;;		___awdiv
 10097 ;; This function is called by:
 10098 ;;		_caltime_to_RTCC
 10099 ;; This function uses a non-reentrant model
 10100 ;;
 10101                           
 10102                           	psect	text48
 10103  0128CE                     __ptext48:
 10104                           	opt stack 0
 10105  0128CE                     _d_to_x:
 10106                           	opt stack 20
 10107                           
 10108                           ; BSR set to: 15
 10109                           ;incstack = 0
 10110                           ;d_to_x@dec stored from wreg
 10111  0128CE  6E23               	movwf	d_to_x@dec,c
 10112                           
 10113                           ;My_header\My_RTCC.h: 76: return dec / 10 * 6 + dec;
 10114  0128D0  C023  F01F         	movff	d_to_x@dec,___awdiv@dividend
 10115  0128D4  6A20               	clrf	___awdiv@dividend+1,c
 10116  0128D6  0E00               	movlw	0
 10117  0128D8  6E22               	movwf	___awdiv@divisor+1,c
 10118  0128DA  0E0A               	movlw	10
 10119  0128DC  6E21               	movwf	___awdiv@divisor,c
 10120  0128DE  EC85  F08E         	call	___awdiv	;wreg free
 10121  0128E2  501F               	movf	?___awdiv,w,c
 10122  0128E4  0D06               	mullw	6
 10123  0128E6  50F3               	movf	prodl,w,c
 10124  0128E8  2423               	addwf	d_to_x@dec,w,c
 10125  0128EA  0012               	return	
 10126  0128EC  0012               	return		;funcret
 10127  0128EE                     __end_of_d_to_x:
 10128                           	opt stack 0
 10129                           tblptru	equ	0xFF8
 10130                           tblptrh	equ	0xFF7
 10131                           tblptrl	equ	0xFF6
 10132                           tablat	equ	0xFF5
 10133                           prodh	equ	0xFF4
 10134                           prodl	equ	0xFF3
 10135                           intcon	equ	0xFF2
 10136                           intcon2	equ	0xFF1
 10137                           postinc0	equ	0xFEE
 10138                           wreg	equ	0xFE8
 10139                           indf1	equ	0xFE7
 10140                           postinc1	equ	0xFE6
 10141                           postdec1	equ	0xFE5
 10142                           fsr1h	equ	0xFE2
 10143                           fsr1l	equ	0xFE1
 10144                           indf2	equ	0xFDF
 10145                           postinc2	equ	0xFDE
 10146                           postdec2	equ	0xFDD
 10147                           fsr2h	equ	0xFDA
 10148                           fsr2l	equ	0xFD9
 10149                           status	equ	0xFD8
 10150                           
 10151 ;; *************** function ___awdiv *****************
 10152 ;; Defined at:
 10153 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 10154 ;; Parameters:    Size  Location     Type
 10155 ;;  dividend        2   30[COMRAM] int 
 10156 ;;  divisor         2   32[COMRAM] int 
 10157 ;; Auto vars:     Size  Location     Type
 10158 ;;  quotient        2    2[BANK0 ] int 
 10159 ;;  sign            1    1[BANK0 ] unsigned char 
 10160 ;;  counter         1    0[BANK0 ] unsigned char 
 10161 ;; Return value:  Size  Location     Type
 10162 ;;                  2   30[COMRAM] int 
 10163 ;; Registers used:
 10164 ;;		wreg, status,2, status,0
 10165 ;; Tracked objects:
 10166 ;;		On entry : 0/0
 10167 ;;		On exit  : 0/0
 10168 ;;		Unchanged: 0/0
 10169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10170 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10171 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10173 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10174 ;;Total ram usage:        8 bytes
 10175 ;; Hardware stack levels used:    1
 10176 ;; Hardware stack levels required when called:    4
 10177 ;; This function calls:
 10178 ;;		Nothing
 10179 ;; This function is called by:
 10180 ;;		_d_to_x
 10181 ;; This function uses a non-reentrant model
 10182 ;;
 10183                           
 10184                           	psect	text49
 10185  011D0A                     __ptext49:
 10186                           	opt stack 0
 10187  011D0A                     ___awdiv:
 10188                           	opt stack 20
 10189                           
 10190                           ;incstack = 0
 10191  011D0A  0E00               	movlw	0
 10192  011D0C  0100               	movlb	0	; () banked
 10193  011D0E  6F61               	movwf	___awdiv@sign& (0+255),b
 10194                           
 10195                           ; BSR set to: 0
 10196  011D10  AE22               	btfss	___awdiv@divisor+1,7,c
 10197  011D12  D008               	goto	l4108
 10198                           
 10199                           ; BSR set to: 0
 10200  011D14  6C21               	negf	___awdiv@divisor,c
 10201  011D16  1E22               	comf	___awdiv@divisor+1,f,c
 10202  011D18  B0D8               	btfsc	status,0,c
 10203  011D1A  2A22               	incf	___awdiv@divisor+1,f,c
 10204                           
 10205                           ; BSR set to: 0
 10206  011D1C  0E01               	movlw	1
 10207  011D1E  0100               	movlb	0	; () banked
 10208  011D20  6F61               	movwf	___awdiv@sign& (0+255),b
 10209  011D22  D000               	goto	l4108
 10210  011D24                     l4108:
 10211                           
 10212                           ; BSR set to: 0
 10213  011D24  AE20               	btfss	___awdiv@dividend+1,7,c
 10214  011D26  D008               	goto	l4114
 10215                           
 10216                           ; BSR set to: 0
 10217  011D28  6C1F               	negf	___awdiv@dividend,c
 10218  011D2A  1E20               	comf	___awdiv@dividend+1,f,c
 10219  011D2C  B0D8               	btfsc	status,0,c
 10220  011D2E  2A20               	incf	___awdiv@dividend+1,f,c
 10221                           
 10222                           ; BSR set to: 0
 10223  011D30  0E01               	movlw	1
 10224  011D32  0100               	movlb	0	; () banked
 10225  011D34  1B61               	xorwf	___awdiv@sign& (0+255),f,b
 10226  011D36  D000               	goto	l4114
 10227  011D38                     l4114:
 10228                           
 10229                           ; BSR set to: 0
 10230  011D38  0E00               	movlw	0
 10231  011D3A  0100               	movlb	0	; () banked
 10232  011D3C  6F63               	movwf	(___awdiv@quotient+1)& (0+255),b
 10233  011D3E  0E00               	movlw	0
 10234  011D40  6F62               	movwf	___awdiv@quotient& (0+255),b
 10235                           
 10236                           ; BSR set to: 0
 10237  011D42  5021               	movf	___awdiv@divisor,w,c
 10238  011D44  1022               	iorwf	___awdiv@divisor+1,w,c
 10239  011D46  B4D8               	btfsc	status,2,c
 10240  011D48  D026               	goto	l4136
 10241                           
 10242                           ; BSR set to: 0
 10243  011D4A  0E01               	movlw	1
 10244  011D4C  0100               	movlb	0	; () banked
 10245  011D4E  6F60               	movwf	___awdiv@counter& (0+255),b
 10246  011D50  D006               	goto	l4122
 10247  011D52                     l4120:
 10248                           
 10249                           ; BSR set to: 0
 10250  011D52  90D8               	bcf	status,0,c
 10251  011D54  3621               	rlcf	___awdiv@divisor,f,c
 10252  011D56  3622               	rlcf	___awdiv@divisor+1,f,c
 10253  011D58  0100               	movlb	0	; () banked
 10254  011D5A  2B60               	incf	___awdiv@counter& (0+255),f,b
 10255  011D5C  D000               	goto	l4122
 10256  011D5E                     l4122:
 10257                           
 10258                           ; BSR set to: 0
 10259  011D5E  BE22               	btfsc	___awdiv@divisor+1,7,c
 10260  011D60  D002               	goto	l4124
 10261  011D62  D7F7               	goto	l4120
 10262                           
 10263                           ; BSR set to: 0
 10264  011D64  D000               	goto	l4124
 10265  011D66                     l4124:
 10266                           
 10267                           ; BSR set to: 0
 10268  011D66  0100               	movlb	0	; () banked
 10269  011D68  90D8               	bcf	status,0,c
 10270  011D6A  3762               	rlcf	___awdiv@quotient& (0+255),f,b
 10271  011D6C  3763               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10272                           
 10273                           ; BSR set to: 0
 10274  011D6E  5021               	movf	___awdiv@divisor,w,c
 10275  011D70  5C1F               	subwf	___awdiv@dividend,w,c
 10276  011D72  5022               	movf	___awdiv@divisor+1,w,c
 10277  011D74  5820               	subwfb	___awdiv@dividend+1,w,c
 10278  011D76  A0D8               	btfss	status,0,c
 10279  011D78  D007               	goto	l4132
 10280                           
 10281                           ; BSR set to: 0
 10282  011D7A  5021               	movf	___awdiv@divisor,w,c
 10283  011D7C  5E1F               	subwf	___awdiv@dividend,f,c
 10284  011D7E  5022               	movf	___awdiv@divisor+1,w,c
 10285  011D80  5A20               	subwfb	___awdiv@dividend+1,f,c
 10286                           
 10287                           ; BSR set to: 0
 10288  011D82  0100               	movlb	0	; () banked
 10289  011D84  8162               	bsf	___awdiv@quotient& (0+255),0,b
 10290  011D86  D000               	goto	l4132
 10291  011D88                     l4132:
 10292                           
 10293                           ; BSR set to: 0
 10294  011D88  90D8               	bcf	status,0,c
 10295  011D8A  3222               	rrcf	___awdiv@divisor+1,f,c
 10296  011D8C  3221               	rrcf	___awdiv@divisor,f,c
 10297                           
 10298                           ; BSR set to: 0
 10299  011D8E  0100               	movlb	0	; () banked
 10300  011D90  2F60               	decfsz	___awdiv@counter& (0+255),f,b
 10301  011D92  D7E9               	goto	l4124
 10302                           
 10303                           ; BSR set to: 0
 10304  011D94  D000               	goto	l4136
 10305  011D96                     l4136:
 10306                           
 10307                           ; BSR set to: 0
 10308  011D96  0100               	movlb	0	; () banked
 10309  011D98  5161               	movf	___awdiv@sign& (0+255),w,b
 10310  011D9A  0100               	movlb	0	; () banked
 10311  011D9C  B4D8               	btfsc	status,2,c
 10312  011D9E  D006               	goto	l4140
 10313                           
 10314                           ; BSR set to: 0
 10315  011DA0  0100               	movlb	0	; () banked
 10316  011DA2  6D62               	negf	___awdiv@quotient& (0+255),b
 10317  011DA4  1F63               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10318  011DA6  B0D8               	btfsc	status,0,c
 10319  011DA8  2B63               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10320  011DAA  D000               	goto	l4140
 10321  011DAC                     l4140:
 10322                           
 10323                           ; BSR set to: 0
 10324  011DAC  C062  F01F         	movff	___awdiv@quotient,?___awdiv
 10325  011DB0  C063  F020         	movff	___awdiv@quotient+1,?___awdiv+1
 10326  011DB4  0012               	return	
 10327                           
 10328                           ; BSR set to: 0
 10329                           
 10330                           ; BSR set to: 0
 10331  011DB6  0012               	return		;funcret
 10332  011DB8                     __end_of___awdiv:
 10333                           	opt stack 0
 10334                           tblptru	equ	0xFF8
 10335                           tblptrh	equ	0xFF7
 10336                           tblptrl	equ	0xFF6
 10337                           tablat	equ	0xFF5
 10338                           prodh	equ	0xFF4
 10339                           prodl	equ	0xFF3
 10340                           intcon	equ	0xFF2
 10341                           intcon2	equ	0xFF1
 10342                           postinc0	equ	0xFEE
 10343                           wreg	equ	0xFE8
 10344                           indf1	equ	0xFE7
 10345                           postinc1	equ	0xFE6
 10346                           postdec1	equ	0xFE5
 10347                           fsr1h	equ	0xFE2
 10348                           fsr1l	equ	0xFE1
 10349                           indf2	equ	0xFDF
 10350                           postinc2	equ	0xFDE
 10351                           postdec2	equ	0xFDD
 10352                           fsr2h	equ	0xFDA
 10353                           fsr2l	equ	0xFD9
 10354                           status	equ	0xFD8
 10355                           
 10356 ;; *************** function _ISR *****************
 10357 ;; Defined at:
 10358 ;;		line 62 in file "PIC18F27J53-killifish_light02.c"
 10359 ;; Parameters:    Size  Location     Type
 10360 ;;		None
 10361 ;; Auto vars:     Size  Location     Type
 10362 ;;		None
 10363 ;; Return value:  Size  Location     Type
 10364 ;;		None               void
 10365 ;; Registers used:
 10366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10367 ;; Tracked objects:
 10368 ;;		On entry : 0/0
 10369 ;;		On exit  : 0/0
 10370 ;;		Unchanged: 0/0
 10371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10374 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10375 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10376 ;;Total ram usage:       14 bytes
 10377 ;; Hardware stack levels used:    1
 10378 ;; Hardware stack levels required when called:    3
 10379 ;; This function calls:
 10380 ;;		_UART_ISR
 10381 ;;		_button_timer_interrupt
 10382 ;; This function is called by:
 10383 ;;		Interrupt level 2
 10384 ;; This function uses a non-reentrant model
 10385 ;;
 10386                           
 10387                           	psect	intcode
 10388  000008                     __pintcode:
 10389                           	opt stack 0
 10390  000008                     _ISR:
 10391                           	opt stack 19
 10392                           
 10393                           ; BSR set to: 0
 10394                           ;incstack = 0
 10395  000008  CFFA F011          	movff	pclath,??_ISR
 10396  00000C  CFFB F012          	movff	pclatu,??_ISR+1
 10397  000010  CFE9 F013          	movff	fsr0l,??_ISR+2
 10398  000014  CFEA F014          	movff	fsr0h,??_ISR+3
 10399  000018  CFE1 F015          	movff	fsr1l,??_ISR+4
 10400  00001C  CFE2 F016          	movff	fsr1h,??_ISR+5
 10401  000020  CFD9 F017          	movff	fsr2l,??_ISR+6
 10402  000024  CFDA F018          	movff	fsr2h,??_ISR+7
 10403  000028  CFF3 F019          	movff	prodl,??_ISR+8
 10404  00002C  CFF4 F01A          	movff	prodh,??_ISR+9
 10405  000030  CFF6 F01B          	movff	tblptrl,??_ISR+10
 10406  000034  CFF7 F01C          	movff	tblptrh,??_ISR+11
 10407  000038  CFF8 F01D          	movff	tblptru,??_ISR+12
 10408  00003C  CFF5 F01E          	movff	tablat,??_ISR+13
 10409                           
 10410                           ;PIC18F27J53-killifish_light02.c: 63: UART_ISR();
 10411  000040  EC02  F093         	call	_UART_ISR	;wreg free
 10412                           
 10413                           ;PIC18F27J53-killifish_light02.c: 64: if (INTCONbits.T0IF) {
 10414  000044  A4F2               	btfss	intcon,2,c	;volatile
 10415  000046  D005               	goto	i2l5118
 10416                           
 10417                           ;PIC18F27J53-killifish_light02.c: 65: INTCONbits.T0IF = 0;
 10418  000048  94F2               	bcf	intcon,2,c	;volatile
 10419                           
 10420                           ;PIC18F27J53-killifish_light02.c: 66: t0if = 1;
 10421  00004A  0E01               	movlw	1
 10422  00004C  0100               	movlb	0	; () banked
 10423  00004E  6FB1               	movwf	_t0if& (0+255),b
 10424  000050  D000               	goto	i2l5118
 10425  000052                     i2l5118:
 10426                           
 10427                           ;PIC18F27J53-killifish_light02.c: 67: }
 10428                           ;PIC18F27J53-killifish_light02.c: 68: if (PIR1bits.TMR1IF) {
 10429  000052  A09E               	btfss	3998,0,c	;volatile
 10430  000054  D004               	goto	i2l5124
 10431                           
 10432                           ;PIC18F27J53-killifish_light02.c: 69: PIR1bits.TMR1IF = 0;
 10433  000056  909E               	bcf	3998,0,c	;volatile
 10434                           
 10435                           ;PIC18F27J53-killifish_light02.c: 70: TMR1H = 0x80;
 10436  000058  0E80               	movlw	128
 10437  00005A  6ECF               	movwf	4047,c	;volatile
 10438  00005C  D000               	goto	i2l5124
 10439  00005E                     i2l5124:
 10440                           
 10441                           ;PIC18F27J53-killifish_light02.c: 71: }
 10442                           ;PIC18F27J53-killifish_light02.c: 72: if (PIR2bits.TMR3IF) {
 10443  00005E  A2A1               	btfss	4001,1,c	;volatile
 10444  000060  D026               	goto	i2l480
 10445                           
 10446                           ;PIC18F27J53-killifish_light02.c: 73: PIR2bits.TMR3IF = 0;
 10447  000062  92A1               	bcf	4001,1,c	;volatile
 10448                           
 10449                           ;PIC18F27J53-killifish_light02.c: 74: button_timer_interrupt(&sw_R, !PORTAbits.RA5);
 10450  000064  0E3E               	movlw	low _sw_R
 10451  000066  6E01               	movwf	button_timer_interrupt@bt,c
 10452  000068  0E00               	movlw	high _sw_R
 10453  00006A  6E02               	movwf	button_timer_interrupt@bt+1,c
 10454  00006C  BA80               	btfsc	3968,5,c	;volatile
 10455  00006E  D002               	goto	i2u580_40
 10456  000070  0E01               	movlw	1
 10457  000072  D001               	goto	i2u581_40
 10458  000074                     i2u580_40:
 10459  000074  0E00               	movlw	0
 10460  000076                     i2u581_40:
 10461  000076  6E03               	movwf	button_timer_interrupt@sw_value,c
 10462  000078  ECD4  F086         	call	_button_timer_interrupt	;wreg free
 10463                           
 10464                           ;PIC18F27J53-killifish_light02.c: 75: button_timer_interrupt(&sw_G, !PORTAbits.RA6);
 10465  00007C  0E3A               	movlw	low _sw_G
 10466  00007E  6E01               	movwf	button_timer_interrupt@bt,c
 10467  000080  0E00               	movlw	high _sw_G
 10468  000082  6E02               	movwf	button_timer_interrupt@bt+1,c
 10469  000084  BC80               	btfsc	3968,6,c	;volatile
 10470  000086  D002               	goto	i2u582_40
 10471  000088  0E01               	movlw	1
 10472  00008A  D001               	goto	i2u583_40
 10473  00008C                     i2u582_40:
 10474  00008C  0E00               	movlw	0
 10475  00008E                     i2u583_40:
 10476  00008E  6E03               	movwf	button_timer_interrupt@sw_value,c
 10477  000090  ECD4  F086         	call	_button_timer_interrupt	;wreg free
 10478                           
 10479                           ;PIC18F27J53-killifish_light02.c: 76: button_timer_interrupt(&sw_B, !PORTAbits.RA7);
 10480  000094  0EE3               	movlw	low _sw_B
 10481  000096  6E01               	movwf	button_timer_interrupt@bt,c
 10482  000098  0E01               	movlw	high _sw_B
 10483  00009A  6E02               	movwf	button_timer_interrupt@bt+1,c
 10484  00009C  BE80               	btfsc	3968,7,c	;volatile
 10485  00009E  D002               	goto	i2u584_40
 10486  0000A0  0E01               	movlw	1
 10487  0000A2  D001               	goto	i2u585_40
 10488  0000A4                     i2u584_40:
 10489  0000A4  0E00               	movlw	0
 10490  0000A6                     i2u585_40:
 10491  0000A6  6E03               	movwf	button_timer_interrupt@sw_value,c
 10492  0000A8  ECD4  F086         	call	_button_timer_interrupt	;wreg free
 10493  0000AC  D000               	goto	i2l480
 10494  0000AE                     i2l480:
 10495  0000AE  C01E  FFF5         	movff	??_ISR+13,tablat
 10496  0000B2  C01D  FFF8         	movff	??_ISR+12,tblptru
 10497  0000B6  C01C  FFF7         	movff	??_ISR+11,tblptrh
 10498  0000BA  C01B  FFF6         	movff	??_ISR+10,tblptrl
 10499  0000BE  C01A  FFF4         	movff	??_ISR+9,prodh
 10500  0000C2  C019  FFF3         	movff	??_ISR+8,prodl
 10501  0000C6  C018  FFDA         	movff	??_ISR+7,fsr2h
 10502  0000CA  C017  FFD9         	movff	??_ISR+6,fsr2l
 10503  0000CE  C016  FFE2         	movff	??_ISR+5,fsr1h
 10504  0000D2  C015  FFE1         	movff	??_ISR+4,fsr1l
 10505  0000D6  C014  FFEA         	movff	??_ISR+3,fsr0h
 10506  0000DA  C013  FFE9         	movff	??_ISR+2,fsr0l
 10507  0000DE  C012  FFFB         	movff	??_ISR+1,pclatu
 10508  0000E2  C011  FFFA         	movff	??_ISR,pclath
 10509  0000E6  0011               	retfie		f
 10510  0000E8                     __end_of_ISR:
 10511                           	opt stack 0
 10512                           pclatu	equ	0xFFB
 10513                           pclath	equ	0xFFA
 10514                           tblptru	equ	0xFF8
 10515                           tblptrh	equ	0xFF7
 10516                           tblptrl	equ	0xFF6
 10517                           tablat	equ	0xFF5
 10518                           prodh	equ	0xFF4
 10519                           prodl	equ	0xFF3
 10520                           intcon	equ	0xFF2
 10521                           intcon2	equ	0xFF1
 10522                           postinc0	equ	0xFEE
 10523                           fsr0h	equ	0xFEA
 10524                           fsr0l	equ	0xFE9
 10525                           wreg	equ	0xFE8
 10526                           indf1	equ	0xFE7
 10527                           postinc1	equ	0xFE6
 10528                           postdec1	equ	0xFE5
 10529                           fsr1h	equ	0xFE2
 10530                           fsr1l	equ	0xFE1
 10531                           indf2	equ	0xFDF
 10532                           postinc2	equ	0xFDE
 10533                           postdec2	equ	0xFDD
 10534                           fsr2h	equ	0xFDA
 10535                           fsr2l	equ	0xFD9
 10536                           status	equ	0xFD8
 10537                           
 10538 ;; *************** function _button_timer_interrupt *****************
 10539 ;; Defined at:
 10540 ;;		line 51 in file "../My_header\My_button.h"
 10541 ;; Parameters:    Size  Location     Type
 10542 ;;  bt              2    0[COMRAM] PTR struct button
 10543 ;;		 -> sw_B(4), sw_G(4), sw_R(4), 
 10544 ;;  sw_value        1    2[COMRAM] unsigned char 
 10545 ;; Auto vars:     Size  Location     Type
 10546 ;;		None
 10547 ;; Return value:  Size  Location     Type
 10548 ;;		None               void
 10549 ;; Registers used:
 10550 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10551 ;; Tracked objects:
 10552 ;;		On entry : 0/0
 10553 ;;		On exit  : 0/0
 10554 ;;		Unchanged: 0/0
 10555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10556 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10558 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10559 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10560 ;;Total ram usage:        5 bytes
 10561 ;; Hardware stack levels used:    1
 10562 ;; This function calls:
 10563 ;;		Nothing
 10564 ;; This function is called by:
 10565 ;;		_ISR
 10566 ;; This function uses a non-reentrant model
 10567 ;;
 10568                           
 10569                           	psect	text51
 10570  010DA8                     __ptext51:
 10571                           	opt stack 0
 10572  010DA8                     _button_timer_interrupt:
 10573                           	opt stack 21
 10574                           
 10575                           ;My_header\My_button.h: 52: if (sw_value) {
 10576                           
 10577                           ;incstack = 0
 10578  010DA8  5003               	movf	button_timer_interrupt@sw_value,w,c
 10579  010DAA  B4D8               	btfsc	status,2,c
 10580  010DAC  D098               	goto	i2l3558
 10581                           
 10582                           ;My_header\My_button.h: 53: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 10583  010DAE  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10584  010DB2  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10585  010DB6  0E84               	movlw	132
 10586  010DB8  18DE               	xorwf	postinc2,w,c
 10587  010DBA  E10B               	bnz	i2l251
 10588  010DBC  0E03               	movlw	3
 10589  010DBE  18DE               	xorwf	postinc2,w,c
 10590  010DC0  A4D8               	btfss	status,2,c
 10591  010DC2  D007               	goto	i2l251
 10592  010DC4  EE20 F003          	lfsr	2,3
 10593  010DC8  5001               	movf	button_timer_interrupt@bt,w,c
 10594  010DCA  26D9               	addwf	fsr2l,f,c
 10595  010DCC  5002               	movf	button_timer_interrupt@bt+1,w,c
 10596  010DCE  22DA               	addwfc	fsr2h,f,c
 10597  010DD0  8EDF               	bsf	indf2,7,c
 10598  010DD2                     i2l251:
 10599                           
 10600                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 10601  010DD2  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10602  010DD6  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10603  010DDA  0EBC               	movlw	188
 10604  010DDC  18DE               	xorwf	postinc2,w,c
 10605  010DDE  E10B               	bnz	i2l252
 10606  010DE0  0E02               	movlw	2
 10607  010DE2  18DE               	xorwf	postinc2,w,c
 10608  010DE4  A4D8               	btfss	status,2,c
 10609  010DE6  D007               	goto	i2l252
 10610  010DE8  EE20 F003          	lfsr	2,3
 10611  010DEC  5001               	movf	button_timer_interrupt@bt,w,c
 10612  010DEE  26D9               	addwf	fsr2l,f,c
 10613  010DF0  5002               	movf	button_timer_interrupt@bt+1,w,c
 10614  010DF2  22DA               	addwfc	fsr2h,f,c
 10615  010DF4  8CDF               	bsf	indf2,6,c
 10616  010DF6                     i2l252:
 10617                           
 10618                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 10619  010DF6  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10620  010DFA  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10621  010DFE  0EF4               	movlw	244
 10622  010E00  18DE               	xorwf	postinc2,w,c
 10623  010E02  E10A               	bnz	i2l253
 10624  010E04  04DE               	decf	postinc2,w,c
 10625  010E06  A4D8               	btfss	status,2,c
 10626  010E08  D007               	goto	i2l253
 10627  010E0A  EE20 F003          	lfsr	2,3
 10628  010E0E  5001               	movf	button_timer_interrupt@bt,w,c
 10629  010E10  26D9               	addwf	fsr2l,f,c
 10630  010E12  5002               	movf	button_timer_interrupt@bt+1,w,c
 10631  010E14  22DA               	addwfc	fsr2h,f,c
 10632  010E16  8ADF               	bsf	indf2,5,c
 10633  010E18                     i2l253:
 10634                           
 10635                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 10636  010E18  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10637  010E1C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10638  010E20  0E2C               	movlw	44
 10639  010E22  18DE               	xorwf	postinc2,w,c
 10640  010E24  E10A               	bnz	i2l254
 10641  010E26  04DE               	decf	postinc2,w,c
 10642  010E28  A4D8               	btfss	status,2,c
 10643  010E2A  D007               	goto	i2l254
 10644  010E2C  EE20 F003          	lfsr	2,3
 10645  010E30  5001               	movf	button_timer_interrupt@bt,w,c
 10646  010E32  26D9               	addwf	fsr2l,f,c
 10647  010E34  5002               	movf	button_timer_interrupt@bt+1,w,c
 10648  010E36  22DA               	addwfc	fsr2h,f,c
 10649  010E38  88DF               	bsf	indf2,4,c
 10650  010E3A                     i2l254:
 10651                           
 10652                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 10653  010E3A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10654  010E3E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10655  010E42  0E96               	movlw	150
 10656  010E44  18DE               	xorwf	postinc2,w,c
 10657  010E46  10DE               	iorwf	postinc2,w,c
 10658  010E48  A4D8               	btfss	status,2,c
 10659  010E4A  D007               	goto	i2l255
 10660  010E4C  EE20 F003          	lfsr	2,3
 10661  010E50  5001               	movf	button_timer_interrupt@bt,w,c
 10662  010E52  26D9               	addwf	fsr2l,f,c
 10663  010E54  5002               	movf	button_timer_interrupt@bt+1,w,c
 10664  010E56  22DA               	addwfc	fsr2h,f,c
 10665  010E58  86DF               	bsf	indf2,3,c
 10666  010E5A                     i2l255:
 10667                           
 10668                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 10669  010E5A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10670  010E5E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10671  010E62  0E3C               	movlw	60
 10672  010E64  18DE               	xorwf	postinc2,w,c
 10673  010E66  10DE               	iorwf	postinc2,w,c
 10674  010E68  A4D8               	btfss	status,2,c
 10675  010E6A  D007               	goto	i2l256
 10676  010E6C  EE20 F003          	lfsr	2,3
 10677  010E70  5001               	movf	button_timer_interrupt@bt,w,c
 10678  010E72  26D9               	addwf	fsr2l,f,c
 10679  010E74  5002               	movf	button_timer_interrupt@bt+1,w,c
 10680  010E76  22DA               	addwfc	fsr2h,f,c
 10681  010E78  84DF               	bsf	indf2,2,c
 10682  010E7A                     i2l256:
 10683                           
 10684                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 10685  010E7A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10686  010E7E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10687  010E82  0E10               	movlw	16
 10688  010E84  18DE               	xorwf	postinc2,w,c
 10689  010E86  10DE               	iorwf	postinc2,w,c
 10690  010E88  A4D8               	btfss	status,2,c
 10691  010E8A  D007               	goto	i2l257
 10692  010E8C  EE20 F003          	lfsr	2,3
 10693  010E90  5001               	movf	button_timer_interrupt@bt,w,c
 10694  010E92  26D9               	addwf	fsr2l,f,c
 10695  010E94  5002               	movf	button_timer_interrupt@bt+1,w,c
 10696  010E96  22DA               	addwfc	fsr2h,f,c
 10697  010E98  82DF               	bsf	indf2,1,c
 10698  010E9A                     i2l257:
 10699                           
 10700                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 10701  010E9A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10702  010E9E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10703  010EA2  0E02               	movlw	2
 10704  010EA4  18DE               	xorwf	postinc2,w,c
 10705  010EA6  10DE               	iorwf	postinc2,w,c
 10706  010EA8  A4D8               	btfss	status,2,c
 10707  010EAA  D007               	goto	i2l258
 10708  010EAC  EE20 F003          	lfsr	2,3
 10709  010EB0  5001               	movf	button_timer_interrupt@bt,w,c
 10710  010EB2  26D9               	addwf	fsr2l,f,c
 10711  010EB4  5002               	movf	button_timer_interrupt@bt+1,w,c
 10712  010EB6  22DA               	addwfc	fsr2h,f,c
 10713  010EB8  80DF               	bsf	indf2,0,c
 10714  010EBA                     i2l258:
 10715                           
 10716                           ;My_header\My_button.h: 61: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 10717  010EBA  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10718  010EBE  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10719  010EC2  0E85               	movlw	133
 10720  010EC4  5CDE               	subwf	postinc2,w,c
 10721  010EC6  0E03               	movlw	3
 10722  010EC8  58DE               	subwfb	postinc2,w,c
 10723  010ECA  B0D8               	btfsc	status,0,c
 10724  010ECC  0012               	return	
 10725  010ECE  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10726  010ED2  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10727  010ED6  2ADE               	incf	postinc2,f,c
 10728  010ED8  0E00               	movlw	0
 10729  010EDA  22DD               	addwfc	postdec2,f,c
 10730                           
 10731                           ;My_header\My_button.h: 62: } else {
 10732  010EDC  0012               	return	
 10733  010EDE                     i2l3558:
 10734                           
 10735                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 10736  010EDE  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10737  010EE2  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10738  010EE6  0E84               	movlw	132
 10739  010EE8  5CDE               	subwf	postinc2,w,c
 10740  010EEA  0E03               	movlw	3
 10741  010EEC  58DE               	subwfb	postinc2,w,c
 10742  010EEE  A0D8               	btfss	status,0,c
 10743  010EF0  D008               	goto	i2l3562
 10744  010EF2  EE20 F002          	lfsr	2,2
 10745  010EF6  5001               	movf	button_timer_interrupt@bt,w,c
 10746  010EF8  26D9               	addwf	fsr2l,f,c
 10747  010EFA  5002               	movf	button_timer_interrupt@bt+1,w,c
 10748  010EFC  22DA               	addwfc	fsr2h,f,c
 10749  010EFE  8EDF               	bsf	indf2,7,c
 10750  010F00  D082               	goto	i2l3590
 10751  010F02                     i2l3562:
 10752                           
 10753                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 10754  010F02  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10755  010F06  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10756  010F0A  0EBC               	movlw	188
 10757  010F0C  5CDE               	subwf	postinc2,w,c
 10758  010F0E  0E02               	movlw	2
 10759  010F10  58DE               	subwfb	postinc2,w,c
 10760  010F12  A0D8               	btfss	status,0,c
 10761  010F14  D008               	goto	i2l3566
 10762  010F16  EE20 F002          	lfsr	2,2
 10763  010F1A  5001               	movf	button_timer_interrupt@bt,w,c
 10764  010F1C  26D9               	addwf	fsr2l,f,c
 10765  010F1E  5002               	movf	button_timer_interrupt@bt+1,w,c
 10766  010F20  22DA               	addwfc	fsr2h,f,c
 10767  010F22  8CDF               	bsf	indf2,6,c
 10768  010F24  D070               	goto	i2l3590
 10769  010F26                     i2l3566:
 10770                           
 10771                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 10772  010F26  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10773  010F2A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10774  010F2E  0EF4               	movlw	244
 10775  010F30  5CDE               	subwf	postinc2,w,c
 10776  010F32  0E01               	movlw	1
 10777  010F34  58DE               	subwfb	postinc2,w,c
 10778  010F36  A0D8               	btfss	status,0,c
 10779  010F38  D008               	goto	i2l3570
 10780  010F3A  EE20 F002          	lfsr	2,2
 10781  010F3E  5001               	movf	button_timer_interrupt@bt,w,c
 10782  010F40  26D9               	addwf	fsr2l,f,c
 10783  010F42  5002               	movf	button_timer_interrupt@bt+1,w,c
 10784  010F44  22DA               	addwfc	fsr2h,f,c
 10785  010F46  8ADF               	bsf	indf2,5,c
 10786  010F48  D05E               	goto	i2l3590
 10787  010F4A                     i2l3570:
 10788                           
 10789                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 10790  010F4A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10791  010F4E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10792  010F52  0E2C               	movlw	44
 10793  010F54  5CDE               	subwf	postinc2,w,c
 10794  010F56  0E01               	movlw	1
 10795  010F58  58DE               	subwfb	postinc2,w,c
 10796  010F5A  A0D8               	btfss	status,0,c
 10797  010F5C  D008               	goto	i2l3574
 10798  010F5E  EE20 F002          	lfsr	2,2
 10799  010F62  5001               	movf	button_timer_interrupt@bt,w,c
 10800  010F64  26D9               	addwf	fsr2l,f,c
 10801  010F66  5002               	movf	button_timer_interrupt@bt+1,w,c
 10802  010F68  22DA               	addwfc	fsr2h,f,c
 10803  010F6A  88DF               	bsf	indf2,4,c
 10804  010F6C  D04C               	goto	i2l3590
 10805  010F6E                     i2l3574:
 10806                           
 10807                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 10808  010F6E  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10809  010F72  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10810  010F76  0E01               	movlw	1
 10811  010F78  50DB               	movf	plusw2,w,c
 10812  010F7A  E104               	bnz	i2u340_40
 10813  010F7C  0E96               	movlw	150
 10814  010F7E  5CDE               	subwf	postinc2,w,c
 10815  010F80  A0D8               	btfss	status,0,c
 10816  010F82  D008               	goto	i2l3578
 10817  010F84                     i2u340_40:
 10818  010F84  EE20 F002          	lfsr	2,2
 10819  010F88  5001               	movf	button_timer_interrupt@bt,w,c
 10820  010F8A  26D9               	addwf	fsr2l,f,c
 10821  010F8C  5002               	movf	button_timer_interrupt@bt+1,w,c
 10822  010F8E  22DA               	addwfc	fsr2h,f,c
 10823  010F90  86DF               	bsf	indf2,3,c
 10824  010F92  D039               	goto	i2l3590
 10825  010F94                     i2l3578:
 10826                           
 10827                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 10828  010F94  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10829  010F98  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10830  010F9C  0E01               	movlw	1
 10831  010F9E  50DB               	movf	plusw2,w,c
 10832  010FA0  E104               	bnz	i2u341_40
 10833  010FA2  0E3C               	movlw	60
 10834  010FA4  5CDE               	subwf	postinc2,w,c
 10835  010FA6  A0D8               	btfss	status,0,c
 10836  010FA8  D008               	goto	i2l3582
 10837  010FAA                     i2u341_40:
 10838  010FAA  EE20 F002          	lfsr	2,2
 10839  010FAE  5001               	movf	button_timer_interrupt@bt,w,c
 10840  010FB0  26D9               	addwf	fsr2l,f,c
 10841  010FB2  5002               	movf	button_timer_interrupt@bt+1,w,c
 10842  010FB4  22DA               	addwfc	fsr2h,f,c
 10843  010FB6  84DF               	bsf	indf2,2,c
 10844  010FB8  D026               	goto	i2l3590
 10845  010FBA                     i2l3582:
 10846                           
 10847                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 10848  010FBA  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10849  010FBE  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10850  010FC2  0E01               	movlw	1
 10851  010FC4  50DB               	movf	plusw2,w,c
 10852  010FC6  E104               	bnz	i2u342_40
 10853  010FC8  0E10               	movlw	16
 10854  010FCA  5CDE               	subwf	postinc2,w,c
 10855  010FCC  A0D8               	btfss	status,0,c
 10856  010FCE  D008               	goto	i2l3586
 10857  010FD0                     i2u342_40:
 10858  010FD0  EE20 F002          	lfsr	2,2
 10859  010FD4  5001               	movf	button_timer_interrupt@bt,w,c
 10860  010FD6  26D9               	addwf	fsr2l,f,c
 10861  010FD8  5002               	movf	button_timer_interrupt@bt+1,w,c
 10862  010FDA  22DA               	addwfc	fsr2h,f,c
 10863  010FDC  82DF               	bsf	indf2,1,c
 10864  010FDE  D013               	goto	i2l3590
 10865  010FE0                     i2l3586:
 10866                           
 10867                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 10868  010FE0  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10869  010FE4  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10870  010FE8  0E01               	movlw	1
 10871  010FEA  50DB               	movf	plusw2,w,c
 10872  010FEC  E104               	bnz	i2u343_40
 10873  010FEE  0E02               	movlw	2
 10874  010FF0  5CDE               	subwf	postinc2,w,c
 10875  010FF2  A0D8               	btfss	status,0,c
 10876  010FF4  D008               	goto	i2l3590
 10877  010FF6                     i2u343_40:
 10878  010FF6  EE20 F002          	lfsr	2,2
 10879  010FFA  5001               	movf	button_timer_interrupt@bt,w,c
 10880  010FFC  26D9               	addwf	fsr2l,f,c
 10881  010FFE  5002               	movf	button_timer_interrupt@bt+1,w,c
 10882  011000  22DA               	addwfc	fsr2h,f,c
 10883  011002  80DF               	bsf	indf2,0,c
 10884  011004  D000               	goto	i2l3590
 10885  011006                     i2l3590:
 10886                           
 10887                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
 10888  011006  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10889  01100A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10890  01100E  0E00               	movlw	0
 10891  011010  6EDE               	movwf	postinc2,c
 10892  011012  0E00               	movlw	0
 10893  011014  6EDD               	movwf	postdec2,c
 10894                           
 10895                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
 10896  011016  EE20 F002          	lfsr	2,2
 10897  01101A  5001               	movf	button_timer_interrupt@bt,w,c
 10898  01101C  26D9               	addwf	fsr2l,f,c
 10899  01101E  5002               	movf	button_timer_interrupt@bt+1,w,c
 10900  011020  22DA               	addwfc	fsr2h,f,c
 10901  011022  0EFF               	movlw	255
 10902  011024  16DE               	andwf	postinc2,f,c
 10903  011026  0E00               	movlw	0
 10904  011028  16DD               	andwf	postdec2,f,c
 10905  01102A  0012               	return	
 10906  01102C  0012               	return		;funcret
 10907  01102E                     __end_of_button_timer_interrupt:
 10908                           	opt stack 0
 10909                           pclatu	equ	0xFFB
 10910                           pclath	equ	0xFFA
 10911                           tblptru	equ	0xFF8
 10912                           tblptrh	equ	0xFF7
 10913                           tblptrl	equ	0xFF6
 10914                           tablat	equ	0xFF5
 10915                           prodh	equ	0xFF4
 10916                           prodl	equ	0xFF3
 10917                           intcon	equ	0xFF2
 10918                           intcon2	equ	0xFF1
 10919                           postinc0	equ	0xFEE
 10920                           fsr0h	equ	0xFEA
 10921                           fsr0l	equ	0xFE9
 10922                           wreg	equ	0xFE8
 10923                           indf1	equ	0xFE7
 10924                           postinc1	equ	0xFE6
 10925                           postdec1	equ	0xFE5
 10926                           fsr1h	equ	0xFE2
 10927                           fsr1l	equ	0xFE1
 10928                           indf2	equ	0xFDF
 10929                           postinc2	equ	0xFDE
 10930                           postdec2	equ	0xFDD
 10931                           plusw2	equ	0xFDB
 10932                           fsr2h	equ	0xFDA
 10933                           fsr2l	equ	0xFD9
 10934                           status	equ	0xFD8
 10935                           
 10936 ;; *************** function _UART_ISR *****************
 10937 ;; Defined at:
 10938 ;;		line 208 in file "../My_header\My_header.h"
 10939 ;; Parameters:    Size  Location     Type
 10940 ;;		None
 10941 ;; Auto vars:     Size  Location     Type
 10942 ;;  ascii           1   15[COMRAM] unsigned char 
 10943 ;; Return value:  Size  Location     Type
 10944 ;;		None               void
 10945 ;; Registers used:
 10946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10947 ;; Tracked objects:
 10948 ;;		On entry : 0/0
 10949 ;;		On exit  : 0/0
 10950 ;;		Unchanged: 0/0
 10951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10953 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10955 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10956 ;;Total ram usage:        1 bytes
 10957 ;; Hardware stack levels used:    1
 10958 ;; Hardware stack levels required when called:    2
 10959 ;; This function calls:
 10960 ;;		i2_ringbuf_num
 10961 ;;		i2_ringbuf_pop
 10962 ;;		i2_ringbuf_put
 10963 ;; This function is called by:
 10964 ;;		_ISR
 10965 ;; This function uses a non-reentrant model
 10966 ;;
 10967                           
 10968                           	psect	text52
 10969  012604                     __ptext52:
 10970                           	opt stack 0
 10971  012604                     _UART_ISR:
 10972                           	opt stack 19
 10973                           
 10974                           ;My_header\My_header.h: 209: if (PIE1bits.TXIE && PIR1bits.TXIF) {
 10975                           
 10976                           ;incstack = 0
 10977  012604  B89D               	btfsc	3997,4,c	;volatile
 10978  012606  A89E               	btfss	3998,4,c	;volatile
 10979  012608  D014               	goto	i2l209
 10980                           
 10981                           ;My_header\My_header.h: 210: if (ringbuf_num(&tx_buf)) {
 10982  01260A  0ED3               	movlw	low _tx_buf
 10983  01260C  6E01               	movwf	i2ringbuf_num@rb,c
 10984  01260E  0E01               	movlw	high _tx_buf
 10985  012610  6E02               	movwf	i2ringbuf_num@rb+1,c
 10986  012612  EC18  F08D         	call	i2_ringbuf_num	;wreg free
 10987  012616  5001               	movf	?i2_ringbuf_num,w,c
 10988  012618  1002               	iorwf	?i2_ringbuf_num+1,w,c
 10989  01261A  B4D8               	btfsc	status,2,c
 10990  01261C  D008               	goto	i2l210
 10991                           
 10992                           ;My_header\My_header.h: 211: TXREG1 = ringbuf_pop(&tx_buf);
 10993  01261E  0ED3               	movlw	low _tx_buf
 10994  012620  6E09               	movwf	i2ringbuf_pop@rb,c
 10995  012622  0E01               	movlw	high _tx_buf
 10996  012624  6E0A               	movwf	i2ringbuf_pop@rb+1,c
 10997  012626  EC2D  F08E         	call	i2_ringbuf_pop	;wreg free
 10998  01262A  6EAE               	movwf	4014,c	;volatile
 10999                           
 11000                           ;My_header\My_header.h: 212: } else {
 11001  01262C  D002               	goto	i2l209
 11002  01262E                     i2l210:
 11003                           
 11004                           ;My_header\My_header.h: 213: PIE1bits.TXIE = 0;
 11005  01262E  989D               	bcf	3997,4,c	;volatile
 11006  012630  D000               	goto	i2l209
 11007  012632                     i2l209:
 11008                           
 11009                           ;My_header\My_header.h: 214: }
 11010                           ;My_header\My_header.h: 215: }
 11011                           ;My_header\My_header.h: 216: if (PIR1bits.RCIF && PIE1bits.RCIE) {
 11012  012632  AA9E               	btfss	3998,5,c	;volatile
 11013  012634  0012               	return	
 11014  012636  AA9D               	btfss	3997,5,c	;volatile
 11015  012638  0012               	return	
 11016                           
 11017                           ;My_header\My_header.h: 217: char ascii = RCREG1;
 11018  01263A  CFAF F010          	movff	4015,UART_ISR@ascii	;volatile
 11019                           
 11020                           ;My_header\My_header.h: 218: ringbuf_put(&rx_buf, ascii);
 11021  01263E  0ECB               	movlw	low _rx_buf
 11022  012640  6E09               	movwf	i2ringbuf_put@rb,c
 11023  012642  0E01               	movlw	high _rx_buf
 11024  012644  6E0A               	movwf	i2ringbuf_put@rb+1,c
 11025  012646  C010  F00B         	movff	UART_ISR@ascii,i2ringbuf_put@asciicode
 11026  01264A  EC77  F08D         	call	i2_ringbuf_put	;wreg free
 11027  01264E  0012               	return	
 11028  012650  0012               	return		;funcret
 11029  012652                     __end_of_UART_ISR:
 11030                           	opt stack 0
 11031                           pclatu	equ	0xFFB
 11032                           pclath	equ	0xFFA
 11033                           tblptru	equ	0xFF8
 11034                           tblptrh	equ	0xFF7
 11035                           tblptrl	equ	0xFF6
 11036                           tablat	equ	0xFF5
 11037                           prodh	equ	0xFF4
 11038                           prodl	equ	0xFF3
 11039                           intcon	equ	0xFF2
 11040                           intcon2	equ	0xFF1
 11041                           postinc0	equ	0xFEE
 11042                           fsr0h	equ	0xFEA
 11043                           fsr0l	equ	0xFE9
 11044                           wreg	equ	0xFE8
 11045                           indf1	equ	0xFE7
 11046                           postinc1	equ	0xFE6
 11047                           postdec1	equ	0xFE5
 11048                           fsr1h	equ	0xFE2
 11049                           fsr1l	equ	0xFE1
 11050                           indf2	equ	0xFDF
 11051                           postinc2	equ	0xFDE
 11052                           postdec2	equ	0xFDD
 11053                           plusw2	equ	0xFDB
 11054                           fsr2h	equ	0xFDA
 11055                           fsr2l	equ	0xFD9
 11056                           status	equ	0xFD8
 11057                           
 11058 ;; *************** function i2_ringbuf_put *****************
 11059 ;; Defined at:
 11060 ;;		line 39 in file "../My_header\My_ringbuf.h"
 11061 ;; Parameters:    Size  Location     Type
 11062 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 11063 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
 11064 ;;  asciicode       1   10[COMRAM] unsigned char 
 11065 ;; Auto vars:     Size  Location     Type
 11066 ;;		None
 11067 ;; Return value:  Size  Location     Type
 11068 ;;		None               void
 11069 ;; Registers used:
 11070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11071 ;; Tracked objects:
 11072 ;;		On entry : 0/0
 11073 ;;		On exit  : 0/0
 11074 ;;		Unchanged: 0/0
 11075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11076 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11078 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11079 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11080 ;;Total ram usage:        7 bytes
 11081 ;; Hardware stack levels used:    1
 11082 ;; Hardware stack levels required when called:    1
 11083 ;; This function calls:
 11084 ;;		i2_ringbuf_num
 11085 ;; This function is called by:
 11086 ;;		_UART_ISR
 11087 ;; This function uses a non-reentrant model
 11088 ;;
 11089                           
 11090                           	psect	text53
 11091  011AEE                     __ptext53:
 11092                           	opt stack 0
 11093  011AEE                     i2_ringbuf_put:
 11094                           	opt stack 19
 11095                           
 11096                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
 11097                           
 11098                           ;incstack = 0
 11099  011AEE  C009  F001         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
 11100  011AF2  C00A  F002         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
 11101  011AF6  EC18  F08D         	call	i2_ringbuf_num	;wreg free
 11102  011AFA  EE20 F002          	lfsr	2,2
 11103  011AFE  5009               	movf	i2ringbuf_put@rb,w,c
 11104  011B00  26D9               	addwf	fsr2l,f,c
 11105  011B02  500A               	movf	i2ringbuf_put@rb+1,w,c
 11106  011B04  22DA               	addwfc	fsr2h,f,c
 11107  011B06  50DE               	movf	postinc2,w,c
 11108  011B08  5C01               	subwf	?i2_ringbuf_num,w,c
 11109  011B0A  50DE               	movf	postinc2,w,c
 11110  011B0C  5802               	subwfb	?i2_ringbuf_num+1,w,c
 11111  011B0E  B0D8               	btfsc	status,0,c
 11112  011B10  0012               	return	
 11113                           
 11114                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
 11115  011B12  EE20 F004          	lfsr	2,4
 11116  011B16  5009               	movf	i2ringbuf_put@rb,w,c
 11117  011B18  26D9               	addwf	fsr2l,f,c
 11118  011B1A  500A               	movf	i2ringbuf_put@rb+1,w,c
 11119  011B1C  22DA               	addwfc	fsr2h,f,c
 11120  011B1E  CFDE F00C          	movff	postinc2,??i2_ringbuf_put
 11121  011B22  CFDD F00D          	movff	postdec2,??i2_ringbuf_put+1
 11122  011B26  C009  FFD9         	movff	i2ringbuf_put@rb,fsr2l
 11123  011B2A  C00A  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
 11124  011B2E  CFDE F00E          	movff	postinc2,??i2_ringbuf_put+2
 11125  011B32  CFDD F00F          	movff	postdec2,??i2_ringbuf_put+3
 11126  011B36  500C               	movf	??i2_ringbuf_put,w,c
 11127  011B38  240E               	addwf	??i2_ringbuf_put+2,w,c
 11128  011B3A  6ED9               	movwf	fsr2l,c
 11129  011B3C  500D               	movf	??i2_ringbuf_put+1,w,c
 11130  011B3E  200F               	addwfc	??i2_ringbuf_put+3,w,c
 11131  011B40  6EDA               	movwf	fsr2h,c
 11132  011B42  C00B  FFDF         	movff	i2ringbuf_put@asciicode,indf2
 11133                           
 11134                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
 11135  011B46  EE20 F002          	lfsr	2,2
 11136  011B4A  5009               	movf	i2ringbuf_put@rb,w,c
 11137  011B4C  26D9               	addwf	fsr2l,f,c
 11138  011B4E  500A               	movf	i2ringbuf_put@rb+1,w,c
 11139  011B50  22DA               	addwfc	fsr2h,f,c
 11140  011B52  EE10 F004          	lfsr	1,4
 11141  011B56  5009               	movf	i2ringbuf_put@rb,w,c
 11142  011B58  26E1               	addwf	fsr1l,f,c
 11143  011B5A  500A               	movf	i2ringbuf_put@rb+1,w,c
 11144  011B5C  22E2               	addwfc	fsr1h,f,c
 11145  011B5E  CFE6 F00E          	movff	postinc1,??i2_ringbuf_put+2
 11146  011B62  CFE5 F00F          	movff	postdec1,??i2_ringbuf_put+3
 11147  011B66  0E01               	movlw	1
 11148  011B68  260E               	addwf	??i2_ringbuf_put+2,f,c
 11149  011B6A  0E00               	movlw	0
 11150  011B6C  220F               	addwfc	??i2_ringbuf_put+3,f,c
 11151  011B6E  50DE               	movf	postinc2,w,c
 11152  011B70  5C0E               	subwf	??i2_ringbuf_put+2,w,c
 11153  011B72  50DE               	movf	postinc2,w,c
 11154  011B74  580F               	subwfb	??i2_ringbuf_put+3,w,c
 11155  011B76  B0D8               	btfsc	status,0,c
 11156  011B78  D00A               	goto	i2l4710
 11157  011B7A  EE20 F004          	lfsr	2,4
 11158  011B7E  5009               	movf	i2ringbuf_put@rb,w,c
 11159  011B80  26D9               	addwf	fsr2l,f,c
 11160  011B82  500A               	movf	i2ringbuf_put@rb+1,w,c
 11161  011B84  22DA               	addwfc	fsr2h,f,c
 11162  011B86  2ADE               	incf	postinc2,f,c
 11163  011B88  0E00               	movlw	0
 11164  011B8A  22DD               	addwfc	postdec2,f,c
 11165  011B8C  0012               	return	
 11166  011B8E                     i2l4710:
 11167                           
 11168                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
 11169  011B8E  EE20 F004          	lfsr	2,4
 11170  011B92  5009               	movf	i2ringbuf_put@rb,w,c
 11171  011B94  26D9               	addwf	fsr2l,f,c
 11172  011B96  500A               	movf	i2ringbuf_put@rb+1,w,c
 11173  011B98  22DA               	addwfc	fsr2h,f,c
 11174  011B9A  0E00               	movlw	0
 11175  011B9C  6EDE               	movwf	postinc2,c
 11176  011B9E  0E00               	movlw	0
 11177  011BA0  6EDD               	movwf	postdec2,c
 11178  011BA2  0012               	return	
 11179  011BA4  0012               	return		;funcret
 11180  011BA6                     __end_ofi2_ringbuf_put:
 11181                           	opt stack 0
 11182                           pclatu	equ	0xFFB
 11183                           pclath	equ	0xFFA
 11184                           tblptru	equ	0xFF8
 11185                           tblptrh	equ	0xFF7
 11186                           tblptrl	equ	0xFF6
 11187                           tablat	equ	0xFF5
 11188                           prodh	equ	0xFF4
 11189                           prodl	equ	0xFF3
 11190                           intcon	equ	0xFF2
 11191                           intcon2	equ	0xFF1
 11192                           postinc0	equ	0xFEE
 11193                           fsr0h	equ	0xFEA
 11194                           fsr0l	equ	0xFE9
 11195                           wreg	equ	0xFE8
 11196                           indf1	equ	0xFE7
 11197                           postinc1	equ	0xFE6
 11198                           postdec1	equ	0xFE5
 11199                           fsr1h	equ	0xFE2
 11200                           fsr1l	equ	0xFE1
 11201                           indf2	equ	0xFDF
 11202                           postinc2	equ	0xFDE
 11203                           postdec2	equ	0xFDD
 11204                           plusw2	equ	0xFDB
 11205                           fsr2h	equ	0xFDA
 11206                           fsr2l	equ	0xFD9
 11207                           status	equ	0xFD8
 11208                           
 11209 ;; *************** function i2_ringbuf_pop *****************
 11210 ;; Defined at:
 11211 ;;		line 64 in file "../My_header\My_ringbuf.h"
 11212 ;; Parameters:    Size  Location     Type
 11213 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 11214 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
 11215 ;; Auto vars:     Size  Location     Type
 11216 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
 11217 ;; Return value:  Size  Location     Type
 11218 ;;                  1    wreg      unsigned char 
 11219 ;; Registers used:
 11220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11221 ;; Tracked objects:
 11222 ;;		On entry : 0/0
 11223 ;;		On exit  : 0/0
 11224 ;;		Unchanged: 0/0
 11225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11226 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11227 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11228 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11229 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11230 ;;Total ram usage:        7 bytes
 11231 ;; Hardware stack levels used:    1
 11232 ;; Hardware stack levels required when called:    1
 11233 ;; This function calls:
 11234 ;;		i2_ringbuf_num
 11235 ;; This function is called by:
 11236 ;;		_UART_ISR
 11237 ;; This function uses a non-reentrant model
 11238 ;;
 11239                           
 11240                           	psect	text54
 11241  011C5A                     __ptext54:
 11242                           	opt stack 0
 11243  011C5A                     i2_ringbuf_pop:
 11244                           	opt stack 19
 11245                           
 11246                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
 11247                           
 11248                           ;incstack = 0
 11249  011C5A  C009  F001         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 11250  011C5E  C00A  F002         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 11251  011C62  EC18  F08D         	call	i2_ringbuf_num	;wreg free
 11252  011C66  5001               	movf	?i2_ringbuf_num,w,c
 11253  011C68  1002               	iorwf	?i2_ringbuf_num+1,w,c
 11254  011C6A  B4D8               	btfsc	status,2,c
 11255  011C6C  D04B               	goto	i2l4728
 11256                           
 11257                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
 11258  011C6E  EE20 F006          	lfsr	2,6
 11259  011C72  5009               	movf	i2ringbuf_pop@rb,w,c
 11260  011C74  26D9               	addwf	fsr2l,f,c
 11261  011C76  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11262  011C78  22DA               	addwfc	fsr2h,f,c
 11263  011C7A  CFDE F00B          	movff	postinc2,??i2_ringbuf_pop
 11264  011C7E  CFDD F00C          	movff	postdec2,??i2_ringbuf_pop+1
 11265  011C82  C009  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 11266  011C86  C00A  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 11267  011C8A  CFDE F00D          	movff	postinc2,??i2_ringbuf_pop+2
 11268  011C8E  CFDD F00E          	movff	postdec2,??i2_ringbuf_pop+3
 11269  011C92  500B               	movf	??i2_ringbuf_pop,w,c
 11270  011C94  240D               	addwf	??i2_ringbuf_pop+2,w,c
 11271  011C96  6ED9               	movwf	fsr2l,c
 11272  011C98  500C               	movf	??i2_ringbuf_pop+1,w,c
 11273  011C9A  200E               	addwfc	??i2_ringbuf_pop+3,w,c
 11274  011C9C  6EDA               	movwf	fsr2h,c
 11275  011C9E  50DF               	movf	indf2,w,c
 11276  011CA0  6E0F               	movwf	i2ringbuf_pop@ret,c
 11277                           
 11278                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
 11279  011CA2  EE20 F002          	lfsr	2,2
 11280  011CA6  5009               	movf	i2ringbuf_pop@rb,w,c
 11281  011CA8  26D9               	addwf	fsr2l,f,c
 11282  011CAA  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11283  011CAC  22DA               	addwfc	fsr2h,f,c
 11284  011CAE  EE10 F006          	lfsr	1,6
 11285  011CB2  5009               	movf	i2ringbuf_pop@rb,w,c
 11286  011CB4  26E1               	addwf	fsr1l,f,c
 11287  011CB6  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11288  011CB8  22E2               	addwfc	fsr1h,f,c
 11289  011CBA  CFE6 F00D          	movff	postinc1,??i2_ringbuf_pop+2
 11290  011CBE  CFE5 F00E          	movff	postdec1,??i2_ringbuf_pop+3
 11291  011CC2  0E01               	movlw	1
 11292  011CC4  260D               	addwf	??i2_ringbuf_pop+2,f,c
 11293  011CC6  0E00               	movlw	0
 11294  011CC8  220E               	addwfc	??i2_ringbuf_pop+3,f,c
 11295  011CCA  50DE               	movf	postinc2,w,c
 11296  011CCC  5C0D               	subwf	??i2_ringbuf_pop+2,w,c
 11297  011CCE  50DE               	movf	postinc2,w,c
 11298  011CD0  580E               	subwfb	??i2_ringbuf_pop+3,w,c
 11299  011CD2  B0D8               	btfsc	status,0,c
 11300  011CD4  D00A               	goto	i2l4720
 11301                           
 11302                           ;My_header\My_ringbuf.h: 68: rb->tail++;
 11303  011CD6  EE20 F006          	lfsr	2,6
 11304  011CDA  5009               	movf	i2ringbuf_pop@rb,w,c
 11305  011CDC  26D9               	addwf	fsr2l,f,c
 11306  011CDE  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11307  011CE0  22DA               	addwfc	fsr2h,f,c
 11308  011CE2  2ADE               	incf	postinc2,f,c
 11309  011CE4  0E00               	movlw	0
 11310  011CE6  22DD               	addwfc	postdec2,f,c
 11311                           
 11312                           ;My_header\My_ringbuf.h: 69: } else {
 11313  011CE8  D00B               	goto	i2l4722
 11314  011CEA                     i2l4720:
 11315                           
 11316                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
 11317  011CEA  EE20 F006          	lfsr	2,6
 11318  011CEE  5009               	movf	i2ringbuf_pop@rb,w,c
 11319  011CF0  26D9               	addwf	fsr2l,f,c
 11320  011CF2  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11321  011CF4  22DA               	addwfc	fsr2h,f,c
 11322  011CF6  0E00               	movlw	0
 11323  011CF8  6EDE               	movwf	postinc2,c
 11324  011CFA  0E00               	movlw	0
 11325  011CFC  6EDD               	movwf	postdec2,c
 11326  011CFE  D000               	goto	i2l4722
 11327  011D00                     i2l4722:
 11328                           
 11329                           ;My_header\My_ringbuf.h: 71: }
 11330                           ;My_header\My_ringbuf.h: 72: return ret;
 11331  011D00  500F               	movf	i2ringbuf_pop@ret,w,c
 11332                           
 11333                           ;My_header\My_ringbuf.h: 73: } else {
 11334  011D02  0012               	return	
 11335  011D04                     i2l4728:
 11336                           
 11337                           ;My_header\My_ringbuf.h: 74: return 0;
 11338  011D04  0E00               	movlw	0
 11339  011D06  0012               	return	
 11340  011D08  0012               	return		;funcret
 11341  011D0A                     __end_ofi2_ringbuf_pop:
 11342                           	opt stack 0
 11343                           pclatu	equ	0xFFB
 11344                           pclath	equ	0xFFA
 11345                           tblptru	equ	0xFF8
 11346                           tblptrh	equ	0xFF7
 11347                           tblptrl	equ	0xFF6
 11348                           tablat	equ	0xFF5
 11349                           prodh	equ	0xFF4
 11350                           prodl	equ	0xFF3
 11351                           intcon	equ	0xFF2
 11352                           intcon2	equ	0xFF1
 11353                           postinc0	equ	0xFEE
 11354                           fsr0h	equ	0xFEA
 11355                           fsr0l	equ	0xFE9
 11356                           wreg	equ	0xFE8
 11357                           indf1	equ	0xFE7
 11358                           postinc1	equ	0xFE6
 11359                           postdec1	equ	0xFE5
 11360                           fsr1h	equ	0xFE2
 11361                           fsr1l	equ	0xFE1
 11362                           indf2	equ	0xFDF
 11363                           postinc2	equ	0xFDE
 11364                           postdec2	equ	0xFDD
 11365                           plusw2	equ	0xFDB
 11366                           fsr2h	equ	0xFDA
 11367                           fsr2l	equ	0xFD9
 11368                           status	equ	0xFD8
 11369                           
 11370 ;; *************** function i2_ringbuf_num *****************
 11371 ;; Defined at:
 11372 ;;		line 31 in file "../My_header\My_ringbuf.h"
 11373 ;; Parameters:    Size  Location     Type
 11374 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 11375 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
 11376 ;; Auto vars:     Size  Location     Type
 11377 ;;		None
 11378 ;; Return value:  Size  Location     Type
 11379 ;;                  2    0[COMRAM] unsigned int 
 11380 ;; Registers used:
 11381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11382 ;; Tracked objects:
 11383 ;;		On entry : 0/0
 11384 ;;		On exit  : 0/0
 11385 ;;		Unchanged: 0/0
 11386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11389 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11390 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11391 ;;Total ram usage:        8 bytes
 11392 ;; Hardware stack levels used:    1
 11393 ;; This function calls:
 11394 ;;		Nothing
 11395 ;; This function is called by:
 11396 ;;		_UART_ISR
 11397 ;;		i2_ringbuf_put
 11398 ;;		i2_ringbuf_pop
 11399 ;; This function uses a non-reentrant model
 11400 ;;
 11401                           
 11402                           	psect	text55
 11403  011A30                     __ptext55:
 11404                           	opt stack 0
 11405  011A30                     i2_ringbuf_num:
 11406                           	opt stack 19
 11407                           
 11408                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
 11409                           
 11410                           ;incstack = 0
 11411  011A30  EE20 F006          	lfsr	2,6
 11412  011A34  5001               	movf	i2ringbuf_num@rb,w,c
 11413  011A36  26D9               	addwf	fsr2l,f,c
 11414  011A38  5002               	movf	i2ringbuf_num@rb+1,w,c
 11415  011A3A  22DA               	addwfc	fsr2h,f,c
 11416  011A3C  EE10 F004          	lfsr	1,4
 11417  011A40  5001               	movf	i2ringbuf_num@rb,w,c
 11418  011A42  26E1               	addwf	fsr1l,f,c
 11419  011A44  5002               	movf	i2ringbuf_num@rb+1,w,c
 11420  011A46  22E2               	addwfc	fsr1h,f,c
 11421  011A48  50DE               	movf	postinc2,w,c
 11422  011A4A  5CE6               	subwf	postinc1,w,c
 11423  011A4C  50DE               	movf	postinc2,w,c
 11424  011A4E  58E6               	subwfb	postinc1,w,c
 11425  011A50  A0D8               	btfss	status,0,c
 11426  011A52  D01F               	goto	i2l4522
 11427                           
 11428                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
 11429  011A54  EE20 F004          	lfsr	2,4
 11430  011A58  5001               	movf	i2ringbuf_num@rb,w,c
 11431  011A5A  26D9               	addwf	fsr2l,f,c
 11432  011A5C  5002               	movf	i2ringbuf_num@rb+1,w,c
 11433  011A5E  22DA               	addwfc	fsr2h,f,c
 11434  011A60  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 11435  011A64  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 11436  011A68  EE20 F006          	lfsr	2,6
 11437  011A6C  5001               	movf	i2ringbuf_num@rb,w,c
 11438  011A6E  26D9               	addwf	fsr2l,f,c
 11439  011A70  5002               	movf	i2ringbuf_num@rb+1,w,c
 11440  011A72  22DA               	addwfc	fsr2h,f,c
 11441  011A74  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 11442  011A78  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 11443  011A7C  1E05               	comf	??i2_ringbuf_num+2,f,c
 11444  011A7E  1E06               	comf	??i2_ringbuf_num+3,f,c
 11445  011A80  4A05               	infsnz	??i2_ringbuf_num+2,f,c
 11446  011A82  2A06               	incf	??i2_ringbuf_num+3,f,c
 11447  011A84  5003               	movf	??i2_ringbuf_num,w,c
 11448  011A86  2405               	addwf	??i2_ringbuf_num+2,w,c
 11449  011A88  6E01               	movwf	?i2_ringbuf_num,c
 11450  011A8A  5004               	movf	??i2_ringbuf_num+1,w,c
 11451  011A8C  2006               	addwfc	??i2_ringbuf_num+3,w,c
 11452  011A8E  6E02               	movwf	?i2_ringbuf_num+1,c
 11453                           
 11454                           ;My_header\My_ringbuf.h: 34: } else {
 11455  011A90  0012               	return	
 11456  011A92                     i2l4522:
 11457                           
 11458                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
 11459  011A92  EE20 F004          	lfsr	2,4
 11460  011A96  5001               	movf	i2ringbuf_num@rb,w,c
 11461  011A98  26D9               	addwf	fsr2l,f,c
 11462  011A9A  5002               	movf	i2ringbuf_num@rb+1,w,c
 11463  011A9C  22DA               	addwfc	fsr2h,f,c
 11464  011A9E  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 11465  011AA2  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 11466  011AA6  EE20 F002          	lfsr	2,2
 11467  011AAA  5001               	movf	i2ringbuf_num@rb,w,c
 11468  011AAC  26D9               	addwf	fsr2l,f,c
 11469  011AAE  5002               	movf	i2ringbuf_num@rb+1,w,c
 11470  011AB0  22DA               	addwfc	fsr2h,f,c
 11471  011AB2  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 11472  011AB6  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 11473  011ABA  EE20 F006          	lfsr	2,6
 11474  011ABE  5001               	movf	i2ringbuf_num@rb,w,c
 11475  011AC0  26D9               	addwf	fsr2l,f,c
 11476  011AC2  5002               	movf	i2ringbuf_num@rb+1,w,c
 11477  011AC4  22DA               	addwfc	fsr2h,f,c
 11478  011AC6  CFDE F007          	movff	postinc2,??i2_ringbuf_num+4
 11479  011ACA  CFDD F008          	movff	postdec2,??i2_ringbuf_num+5
 11480  011ACE  1E07               	comf	??i2_ringbuf_num+4,f,c
 11481  011AD0  1E08               	comf	??i2_ringbuf_num+5,f,c
 11482  011AD2  4A07               	infsnz	??i2_ringbuf_num+4,f,c
 11483  011AD4  2A08               	incf	??i2_ringbuf_num+5,f,c
 11484  011AD6  5005               	movf	??i2_ringbuf_num+2,w,c
 11485  011AD8  2607               	addwf	??i2_ringbuf_num+4,f,c
 11486  011ADA  5006               	movf	??i2_ringbuf_num+3,w,c
 11487  011ADC  2208               	addwfc	??i2_ringbuf_num+5,f,c
 11488  011ADE  5003               	movf	??i2_ringbuf_num,w,c
 11489  011AE0  2407               	addwf	??i2_ringbuf_num+4,w,c
 11490  011AE2  6E01               	movwf	?i2_ringbuf_num,c
 11491  011AE4  5004               	movf	??i2_ringbuf_num+1,w,c
 11492  011AE6  2008               	addwfc	??i2_ringbuf_num+5,w,c
 11493  011AE8  6E02               	movwf	?i2_ringbuf_num+1,c
 11494  011AEA  0012               	return	
 11495  011AEC  0012               	return		;funcret
 11496  011AEE                     __end_ofi2_ringbuf_num:
 11497                           	opt stack 0
 11498                           pclatu	equ	0xFFB
 11499                           pclath	equ	0xFFA
 11500                           tblptru	equ	0xFF8
 11501                           tblptrh	equ	0xFF7
 11502                           tblptrl	equ	0xFF6
 11503                           tablat	equ	0xFF5
 11504                           prodh	equ	0xFF4
 11505                           prodl	equ	0xFF3
 11506                           intcon	equ	0xFF2
 11507                           intcon2	equ	0xFF1
 11508                           postinc0	equ	0xFEE
 11509                           fsr0h	equ	0xFEA
 11510                           fsr0l	equ	0xFE9
 11511                           wreg	equ	0xFE8
 11512                           indf1	equ	0xFE7
 11513                           postinc1	equ	0xFE6
 11514                           postdec1	equ	0xFE5
 11515                           fsr1h	equ	0xFE2
 11516                           fsr1l	equ	0xFE1
 11517                           indf2	equ	0xFDF
 11518                           postinc2	equ	0xFDE
 11519                           postdec2	equ	0xFDD
 11520                           plusw2	equ	0xFDB
 11521                           fsr2h	equ	0xFDA
 11522                           fsr2l	equ	0xFD9
 11523                           status	equ	0xFD8
 11524                           pclatu	equ	0xFFB
 11525                           pclath	equ	0xFFA
 11526                           tblptru	equ	0xFF8
 11527                           tblptrh	equ	0xFF7
 11528                           tblptrl	equ	0xFF6
 11529                           tablat	equ	0xFF5
 11530                           prodh	equ	0xFF4
 11531                           prodl	equ	0xFF3
 11532                           intcon	equ	0xFF2
 11533                           intcon2	equ	0xFF1
 11534                           postinc0	equ	0xFEE
 11535                           fsr0h	equ	0xFEA
 11536                           fsr0l	equ	0xFE9
 11537                           wreg	equ	0xFE8
 11538                           indf1	equ	0xFE7
 11539                           postinc1	equ	0xFE6
 11540                           postdec1	equ	0xFE5
 11541                           fsr1h	equ	0xFE2
 11542                           fsr1l	equ	0xFE1
 11543                           indf2	equ	0xFDF
 11544                           postinc2	equ	0xFDE
 11545                           postdec2	equ	0xFDD
 11546                           plusw2	equ	0xFDB
 11547                           fsr2h	equ	0xFDA
 11548                           fsr2l	equ	0xFD9
 11549                           status	equ	0xFD8
 11550                           
 11551                           	psect	rparam
 11552  0000                     pclatu	equ	0xFFB
 11553                           pclath	equ	0xFFA
 11554                           tblptru	equ	0xFF8
 11555                           tblptrh	equ	0xFF7
 11556                           tblptrl	equ	0xFF6
 11557                           tablat	equ	0xFF5
 11558                           prodh	equ	0xFF4
 11559                           prodl	equ	0xFF3
 11560                           intcon	equ	0xFF2
 11561                           intcon2	equ	0xFF1
 11562                           postinc0	equ	0xFEE
 11563                           fsr0h	equ	0xFEA
 11564                           fsr0l	equ	0xFE9
 11565                           wreg	equ	0xFE8
 11566                           indf1	equ	0xFE7
 11567                           postinc1	equ	0xFE6
 11568                           postdec1	equ	0xFE5
 11569                           fsr1h	equ	0xFE2
 11570                           fsr1l	equ	0xFE1
 11571                           indf2	equ	0xFDF
 11572                           postinc2	equ	0xFDE
 11573                           postdec2	equ	0xFDD
 11574                           plusw2	equ	0xFDB
 11575                           fsr2h	equ	0xFDA
 11576                           fsr2l	equ	0xFD9
 11577                           status	equ	0xFD8


Data Sizes:
    Strings     437
    Constant    28
    Data        2
    BSS         1316
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      65
    BANK0           160     80      88
    BANK1           256    200     231
    BANK2           256    200     200
    BANK3           256      0     250
    BANK4           256    100     100
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    command_operation@opland3	PTR unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland3(BANK2[100]), 

    F9980.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    command_operation@opland2	PTR unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland2(BANK4[100]), 

    command_operation@opland1	PTR unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland1(BANK2[100]), 

    command_operation@opcode	PTR unsigned char  size(2) Largest target is 100
		 -> rx_loop@opcode(BANK1[100]), 

    comm_at@hand	PTR unsigned char  size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    my_strcmp@str2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_37(CODE[6]), STR_36(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), 
		 -> STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[2]), STR_28(CODE[4]), STR_27(CODE[4]), STR_26(CODE[4]), 
		 -> STR_25(CODE[4]), STR_24(CODE[5]), STR_23(CODE[4]), STR_22(CODE[2]), 
		 -> STR_21(CODE[11]), STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[12]), 
		 -> STR_13(CODE[3]), STR_12(CODE[9]), STR_10(CODE[2]), STR_9(CODE[5]), 

    my_strcmp@str1	PTR const unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland1(BANK2[100]), rx_loop@opcode(BANK1[100]), 

    my_atoi@str	PTR const unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland2(BANK4[100]), 

    my_utoa@str	PTR unsigned char  size(2) Largest target is 10
		 -> tx_send_dec@str(BANK0[10]), 

    RTCC_from_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(COMRAM[4]), 

    RTCC_from_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    RTCC_from_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(COMRAM[4]), 

    RTCC_from_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    RTCC_from_RTCC@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(COMRAM[4]), 

    RTCC_from_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    caltime_to_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(COMRAM[4]), 

    caltime_to_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    epoch_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    epoch_to_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(COMRAM[4]), 

    caltime_to_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    RTCC_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> sw_B(BANK1[4]), sw_G(COMRAM[4]), sw_R(COMRAM[4]), 

    tx_sends@asciicode	PTR const unsigned char  size(2) Largest target is 315
		 -> STR_40(CODE[4]), STR_39(CODE[4]), STR_38(CODE[2]), STR_11(CODE[315]), 
		 -> STR_8(CODE[8]), STR_7(CODE[2]), STR_6(CODE[3]), weekday_3char(CODE[28]), 
		 -> STR_5(CODE[3]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[5]), 
		 -> STR_1(CODE[3]), tx_send_dec@str(BANK0[10]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), rx_buf(BANK1[8]), tx_buf(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), rx_buf(BANK1[8]), tx_buf(BANK1[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), rx_buf(BANK1[8]), tx_buf(BANK1[8]), 

    S790ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), rx_buf(BANK1[8]), tx_buf(BANK1[8]), 


Critical Paths under _main in COMRAM

    _rx_loop->_ringbuf_init
    _rx_loop->_tx_send
    _tx_sendn->_tx_send
    _ringbuf_pop->_ringbuf_num
    _ringbuf_backspace->_ringbuf_num
    _my_atoi->___wmul
    _print_time->_tx_send
    _tx_sends->_ringbuf_put
    _tx_send->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _normal_loop->___wmul
    _RTCC_to_caltime->_x_to_d
    _PWM_set->___wmul
    ___wmul->_ADC
    ___lwdiv->___wmul
    _main_init->_ringbuf_init
    _month_length->___awmod
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv

Critical Paths under _ISR in COMRAM

    _ISR->_UART_ISR
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _main->_rx_loop
    _rx_loop->_command_operation
    _tx_sendn->___lwdiv
    _ringbuf_pop->_ringbuf_num
    _ringbuf_backspace->_ringbuf_num
    _command_operation->_comm_at
    _my_atoi->___wmul
    _comm_at->_RTCC_from_caltime
    _print_time->_RTCC_from_RTCC
    _tx_send_dec->_my_utoa
    _tx_sends->_ringbuf_put
    _my_utoa->___lwdiv
    _tx_send->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _RTCC_from_caltime->_epoch_to_caltime
    _normal_loop->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _PWM_set->_my_atoi
    ___lwdiv->___wmul
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lldiv
    ___lmul->_month_length
    ___lldiv->___lmul
    _d_to_x->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_rx_loop

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_rx_loop

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_rx_loop

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  144902
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_loop
                          _main_init
                        _normal_loop
                            _rx_loop
 ---------------------------------------------------------------------------------
 (1) _rx_loop                                            507   507      0  108482
                                             73 BANK0      7     7      0
                                              0 BANK1    200   200      0
                                              0 BANK2    200   200      0
                                              0 BANK4    100   100      0
                  _command_operation
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                            _tx_send
                           _tx_sendn
                           _tx_sends
 ---------------------------------------------------------------------------------
 (2) _tx_sendn                                             6     3      3    5599
                                             11 BANK0      6     3      3
                            ___lwdiv
                            ___lwmod
                            _tx_send
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    1750
                                             32 COMRAM     3     1      2
                                              6 BANK0      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     166
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1169
                                             32 COMRAM     2     0      2
                                              6 BANK0      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _command_operation                                    9     1      8   86859
                                             64 BANK0      9     1      8
                            _PWM_set
                            _comm_at
                       _month_length
                            _my_atoi
                          _my_strcmp
                         _print_time
                           _tx_sends
 ---------------------------------------------------------------------------------
 (3) _my_strcmp                                            5     1      4    6078
                                             30 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _my_atoi                                              8     6      2    2302
                                              4 BANK0      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _comm_at                                              5     0      5   43679
                                             59 BANK0      5     0      5
                  _RTCC_from_caltime
                            _my_atoi (ARG)
                         _print_time
                           _tx_sends
 ---------------------------------------------------------------------------------
 (3) _print_time                                           0     0      0   22060
                     _RTCC_from_RTCC
                            _tx_send
                        _tx_send_dec
                           _tx_sends
 ---------------------------------------------------------------------------------
 (4) _tx_send_dec                                         12    11      1    8125
                                             19 BANK0     12    11      1
                            _my_utoa
                           _tx_sends
 ---------------------------------------------------------------------------------
 (2) _tx_sends                                             2     0      2    4304
                                             10 BANK0      2     0      2
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (5) _my_utoa                                              8     3      5    2951
                                             11 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     856
                                             30 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _tx_send                                              1     1      0    2814
                                             35 COMRAM     1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _ringbuf_put                                          7     4      3    2783
                                             32 COMRAM     3     0      3
                                              6 BANK0      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (4) _ringbuf_num                                          8     6      2     910
                                             30 COMRAM     2     0      2
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) _RTCC_from_caltime                                    4     0      4   14633
                                             55 BANK0      4     0      4
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (1) _normal_loop                                         14    14      0   18504
                                             37 BANK0     14    14      0
                                _ADC
                            _PWM_set
                     _RTCC_from_RTCC
                            ___lldiv
                            ___llmod
                             ___lmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     648
                                             30 COMRAM     1     1      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (4) _RTCC_from_RTCC                                       4     0      4    6817
                                             33 BANK0      4     0      4
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (5) _caltime_to_epoch                                    15    11      4    5298
                                             18 BANK0     15    11      4
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (5) _RTCC_to_caltime                                      3     1      2     386
                                             32 COMRAM     3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (6) _x_to_d                                               2     2      0      62
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _PWM_set                                              5     3      2    4629
                                             12 BANK0      5     3      2
                            ___lwdiv
                             ___wmul
                            _my_atoi (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1064
                                             34 COMRAM     2     2      0
                                              0 BANK0      4     0      4
                                _ADC (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1489
                                              4 BANK0      7     3      4
                                _ADC (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  4     2      2      22
                                             30 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    1387
                           _ADC_init
                           _OSC_init
                           _PWM_init
                          _RTCC_init
                          _UART_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      22
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     155
                                             30 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      44
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1122
                                             30 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_init                                             1     1      0      22
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      22
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            1     1      0      23
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_from_epoch                                      4     0      4    9689
                                             55 BANK0      4     0      4
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (5) _epoch_to_caltime                                    16    12      4    7832
                                             39 BANK0     16    12      4
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (6) _month_length                                         6     5      1    2179
                                              0 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     849
                                             30 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _get_quot_rem                                         8     4      4    4262
                                             31 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    2168
                                              6 BANK0     12     4      8
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    1073
                                             18 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _caltime_to_RTCC                                      2     0      2    1140
                                              4 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (6) _d_to_x                                               1     1      0     715
                                             34 COMRAM     1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     653
                                             30 COMRAM     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                 14    14      0    2983
                                             16 COMRAM    14    14      0
                           _UART_ISR
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (10) _button_timer_interrupt                              5     2      3    1348
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (10) _UART_ISR                                            1     1      0    1635
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (11) i2_ringbuf_put                                       7     4      3     671
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (11) i2_ringbuf_pop                                       7     5      2     608
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_num                                       8     6      2     322
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
           ___lmul (ARG)
             _month_length (ARG)
               ___awmod
         ___lmul
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_loop
   _main_init
     _ADC_init
     _OSC_init
     _PWM_init
     _RTCC_init
     _UART_init
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _normal_loop
     _ADC
     _PWM_set
       ___lwdiv
         _ADC (ARG)
         ___wmul (ARG)
           _ADC (ARG)
       ___wmul
         _ADC (ARG)
       _my_atoi (ARG)
         ___wmul
           _ADC (ARG)
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     ___lldiv
       ___lmul (ARG)
         _month_length (ARG)
           ___awmod
     ___llmod
     ___lmul
       _month_length (ARG)
         ___awmod
     ___lwdiv
       _ADC (ARG)
       ___wmul (ARG)
         _ADC (ARG)
     ___wmul
       _ADC (ARG)
   _rx_loop
     _command_operation
       _PWM_set
         ___lwdiv
           _ADC (ARG)
           ___wmul (ARG)
             _ADC (ARG)
         ___wmul
           _ADC (ARG)
         _my_atoi (ARG)
           ___wmul
             _ADC (ARG)
       _comm_at
         _RTCC_from_caltime
           _caltime_to_RTCC
             _d_to_x
               ___awdiv
           _caltime_to_epoch
             ___lmul
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
           _epoch_to_caltime
             _get_quot_rem
               ___lldiv
                 ___lmul (ARG)
                   _month_length (ARG)
                     ___awmod
               ___lmul
                 _month_length (ARG)
                   ___awmod
             _month_length
               ___awmod
         _my_atoi (ARG)
           ___wmul
             _ADC (ARG)
         _print_time (ARG)
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _tx_send
             _ringbuf_put
               _ringbuf_num
           _tx_send_dec
             _my_utoa
               ___lwdiv
                 _ADC (ARG)
                 ___wmul (ARG)
                   _ADC (ARG)
               ___lwmod
             _tx_sends
               _ringbuf_put
                 _ringbuf_num
           _tx_sends
             _ringbuf_put
               _ringbuf_num
         _tx_sends (ARG)
           _ringbuf_put
             _ringbuf_num
       _month_length
         ___awmod
       _my_atoi
         ___wmul
           _ADC (ARG)
       _my_strcmp
       _print_time
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _tx_send
           _ringbuf_put
             _ringbuf_num
         _tx_send_dec
           _my_utoa
             ___lwdiv
               _ADC (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
             ___lwmod
           _tx_sends
             _ringbuf_put
               _ringbuf_num
         _tx_sends
           _ringbuf_put
             _ringbuf_num
       _tx_sends
         _ringbuf_put
           _ringbuf_num
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _tx_send
       _ringbuf_put
         _ringbuf_num
     _tx_sendn
       ___lwdiv
         _ADC (ARG)
         ___wmul (ARG)
           _ADC (ARG)
       ___lwmod
       _tx_send
         _ringbuf_put
           _ringbuf_num
     _tx_sends
       _ringbuf_put
         _ringbuf_num

 _ISR (ROOT)
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _button_timer_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0     3E8      35       26.6%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100     64      64      14       39.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FA      12       97.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8      C8      10       78.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100     C8      E7       8       90.2%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      58       5       55.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     24      41       1       68.4%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3A6       6        0.0%
DATA                 0      0     78E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Jul 18 19:00:42 2015

                  my_strcmp@str1 001F                    my_strcmp@str2 0021  
                             _d1 01C8                     ___awdiv@sign 0061  
            ___wmul@multiplicand 0062                ??_RTCC_from_epoch 0025  
                   __CFG_CP0$OFF 000000                     _rx_loop$3060 00AB  
                            l134 2708                              l151 2814  
                            l311 1DBA                              l129 27A8  
                            l330 1114                              l226 2352  
                            l317 1646                              _ADC 27F8  
                            l418 26AA                              l426 2044  
                            l604 07E2                              l483 1BBE  
                            l598 0762                              _GIE 007F97  
                            _PR2 000FCB                              _ISR 0008  
                    comm_at@hand 009B                    ?_get_quot_rem 007F  
             caltime_to_epoch@ep 0074               caltime_to_epoch@ct 0072  
              _RTCC_from_caltime 272C                     ___awmod@sign 0024  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAD               ?_RTCC_from_caltime 0097  
                           ?_ADC 001F                             ?_ISR 0001  
          normal_loop@value_2433 008C                             l1151 21C8  
                           l1161 2694                             l1088 1960  
                           l1098 1F94                             l3310 27E0  
                           l4120 1D52                             l4040 2278  
                           l4024 1500                             l4200 2688  
                           l4122 1D5E                             l4114 1D38  
                           l5010 0808                             l4210 246E  
                           l4140 1DAC                             l4132 1D88  
                           l4124 1D66                             l4108 1D24  
                           l4060 22CA                             l4052 22AE  
                           l4044 2286                             l4036 226A  
                           l3172 27BE                             l5012 080E  
                           l4150 18DA                             l4046 2290  
                           l4230 0B36                             l4206 2436  
                           l4136 1D96                             l4152 18EC  
                           l4048 2298                             l4056 22BA  
                           l3184 270C                             l4232 0B3C  
                           l4072 1894                             l4162 194C  
                           l4154 18F6                             l4242 0BA0  
                           l4410 145A                             l4092 22EA  
                           l4172 216E                             l4252 0C2C  
                           l4236 0B46                             l4244 0BA6  
                           l4086 1790                             l4342 1186  
                           l4174 217C                             l4262 2052  
                           l5142 241E                             l4096 2312  
                           l4344 118C                             l4184 21B8  
                           l4176 2186                             l4248 0BC6  
                           l4192 2660                             l4264 2072  
                           l4272 20B2                             l4408 1452  
                           l4512 254A                             l4194 266A  
                           l4442 1FA8                             l4450 1FF6  
                           l4602 0130                             l4348 1196  
                           l3716 26DA                             l4460 1252  
                           l4196 2672                             l4372 25A2  
                           l4436 1EE8                             l4428 1E70  
                           l4612 01D4                             l4620 026C  
                           l4470 12AC                             l4438 1EF0  
                           l4454 201E                             l4542 1A10  
                           l4550 1A2A                             l4480 1322  
                           l4464 1266                             l4448 1FEC  
                           l4632 02E2                             l4624 02A0  
                           l4616 0220                             l4608 0188  
                           l4560 2108                             l4544 1A26  
                           l4474 12C0                             l4650 03A8  
                           l4642 0352                             l4626 02A6  
                           l4492 1342                             l4484 132C  
                           l4636 0316                             l4572 2386  
                           l4478 1308                             l4670 0488  
                           l4662 0432                             l4654 03DC  
                           l4646 0386                             l4638 031E  
                           l4590 0064                             l4910 0A86  
                           l4902 0A48                             l4488 1336  
                           l4584 0034                             l4568 2362  
                           l4904 0A60                             l4498 134E  
                           l4690 1F22                             l4674 04AA  
                           l4666 0454                             l4658 03FE  
                           l4594 0098                             l4586 0046  
                           l4578 23BA                             l4914 0A9C  
                           l4692 1F32                             l4908 0A7E  
                           l4860 0858                             l4694 1F3C  
                           l4942 05DE                             l4598 00E4  
                           l4918 0AD0                             l4870 08DA  
                           l4926 0AFA                             l4880 0930  
                           l4872 08E0                             l4864 087E  
             __CFG_WPFP$PAGE_127 000000                             l4698 1F82  
                           l4980 078A                             l4964 06F4  
                           l4956 06C8                             l4990 07B2  
                           l4894 09CA                             l4886 097A  
                           l4878 092A                             l4976 0776  
                           l4968 06FE                             l4896 09D0  
                           l4888 0980                             l4994 07C2  
                           l4988 07AC                             l4998 07CC  
                           STR_1 FFB4                             STR_2 FFB2  
                           STR_3 FFE4                             STR_4 FFE4  
                           STR_5 FFDC                             STR_6 FFD9  
                           STR_7 FFE2                             STR_8 FFA4  
                           STR_9 FFBC                             u4300 17DE  
                           u4230 1742                             u4240 1744  
                           u4250 176C                             u4270 1782  
                           u4280 1784                             u4290 17DC  
                           u3650 26BA                             u4268 1770  
                           u2765 28FA                             u2766 28FC  
                           u3656 26BC                             u4480 2460  
                           u5530 0590                             u4490 2490  
                           u3675 26E2                             u3676 26E4  
                           u4487 2456                             u4497 2486  
                           u5575 070C                             _t0if 00B1  
                   comm_at@value 009F              ??_RTCC_from_caltime 0025  
                           _main 23C8         button_timer_interrupt@bt 0001  
                           _sw_B 01E3                             _sw_G 003A  
                           _sw_R 003E                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9           __CFG_DSWDTOSC$T1OSCREF 000000  
                           pclat 000FFA                      _tx_send_dec 255E  
                           prodh 000FF4                             prodl 000FF3  
                __end_of_PWM_set 136E                             start 00E8  
               __end_of_ADC_init 290A                    __CFG_IESO$OFF 000000  
                   ___param_bank 000010            __end_ofi2_ringbuf_pop 1D0A  
          __end_ofi2_ringbuf_num 1AEE                            ??_ADC 0021  
          __end_ofi2_ringbuf_put 1BA6                            ADC@ch 0022  
                  ADC_init@p_ref 001F                            ??_ISR 0011  
              ??_RTCC_to_caltime 0023                    __CFG_PLLDIV$2 000000  
                   _BAUDCON1bits 000F7E        __end_of_RTCC_from_caltime 2762  
                          ?_main 0001                   ??_get_quot_rem 0025  
                __end_of___awdiv 1DB8                            _ADRES 000FC3  
                          STR_10 FFE6                            STR_11 FE49  
                          STR_20 FFF8                            STR_12 FF9B  
                          STR_13 FFDF                            STR_21 FF90  
                          STR_22 FFE0                            STR_30 FFEC  
                          STR_14 FF84                            STR_15 FFFC  
                          STR_31 FFF4                            STR_23 FFD5  
                          STR_40 FFC1                            STR_16 FFCB  
                          STR_32 FFEA                            STR_24 FFB7  
                          STR_17 FFF2                            STR_33 FFF0  
                          STR_25 FFCD                            STR_18 FFF6  
                          STR_34 FFE8                            STR_26 FFC5  
                          STR_19 FFD3                            STR_35 FFFA  
                          STR_27 FFD1                            STR_36 FFEE  
                          STR_28 FFC9                  __end_of___awmod 22D6  
                          STR_29 FFB0                            STR_37 FFAC  
                          STR_38 FF82                            STR_39 FFC1  
                __end_of___lldiv 1972                  ___awdiv@divisor 0021  
                __end_of___llmod 1FA6                            _LATB2 007C52  
                __end_of___lwdiv 21D2                  __end_of___lwmod 269E  
                          i2l210 262E                            i2l209 2632  
                          i2l251 0DD2                            i2l252 0DF6  
                          i2l253 0E18                            i2l254 0E3A  
                          i2l255 0E5A                            i2l256 0E7A  
                          i2l257 0E9A                            i2l258 0EBA  
                          i2l480 00AE                  ___awdiv@counter 0060  
                          _TMR1H 000FCF                            _RPOR3 000EC3  
                          _RPOR4 000EC4                            _RPOR5 000EC5  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94              ___lmul@multiplicand 006A  
                 __CFG_FCMEN$OFF 000000                 __end_of_UART_ISR 2652  
                __end_of_comm_at 255E             caltime_to_epoch@year 007A  
             __size_of_UART_init 0020                            _colon 0028  
               __end_of_OSC_init 2948               __size_of_RTCC_init 0030  
             __size_of_RTCC_loop 0048                 ringbuf_delete@rb 001F  
                __end_of_my_atoi 1F08                            tablat 000FF5  
                __end_of_my_utoa 20CC                            plusw2 000FDB  
               __end_of_PWM_init 1C5A       __size_of_ringbuf_backspace 0084  
                __end_of_rx_loop 0B1C                            status 000FD8  
                __end_of_tx_send 293A                month_length@month 0060  
                __initialization 249A                     __end_of_main 2434  
            ringbuf_init@bufsize 0023                 RTCC_from_RTCC@ep 0083  
               RTCC_from_RTCC@ct 0081                           ??_main 0025  
                  __activetblptr 000003                normal_loop@i_2415 008D  
               ___llmod@dividend 0060                           _CCPR1L 000FBB  
                         _CCPR2L 000FB5                           _CCPR3L 000F16  
                         _CCPR4L 000F13                           _EECON2 000FA7  
                         _ANCON0 000F48                           _ANCON1 000F49  
               ___awdiv@dividend 001F                        ??_PWM_set 006E  
                 __CFG_WDTEN$OFF 000000                           i2l5124 005E  
                         i2l5118 0052                           i2l4522 1A92  
                         i2l3570 0F4A                           i2l3562 0F02  
                         i2l4710 1B8E                           i2l3582 0FBA  
                         i2l3574 0F6E                           i2l3566 0F26  
                         i2l3590 1006                           i2l3558 0EDE  
                         i2l4720 1CEA                           i2l4722 1D00  
                         i2l3586 0FE0                           i2l3578 0F94  
                         i2l4728 1D04                           _RCREG1 000FAF  
                         _RTCCAL 000F3E                           _SPBRG1 000FB0  
                 __CFG_WPCFG$OFF 000000                           _TXREG1 000FAE  
                i2ringbuf_pop@rb 0009                  i2ringbuf_num@rb 0001  
                i2ringbuf_put@rb 0009                   __CFG_WPDIS$OFF 000000  
             epoch_to_caltime@ep 0089               epoch_to_caltime@ct 0087  
                 __CFG_XINST$OFF 000000                ?_epoch_to_caltime 0087  
                   _CCPTMRS0bits 000F52                     _CCPTMRS1bits 000F51  
          caltime_to_epoch@epoch 007C                     ?_ringbuf_pop 0021  
                   ?_ringbuf_num 001F                     ?_ringbuf_put 0021  
          caltime_to_epoch@month 0080                           ___lmul 22D6  
                _caltime_to_RTCC 1644                           ___wmul 2762  
             ??_epoch_to_caltime 008B                __end_of_UART_init 28CE  
                      ??___awdiv 0023                        ??___awmod 0023  
                         _d_to_x 28CE                        ??___lldiv 0025  
                   ?_timer0_init 0001                        ??___llmod 001F  
              __end_of_RTCC_init 27F8                     ?_timer1_init 001F  
                      ??___lwdiv 0025                __end_of_RTCC_loop 26E6  
                      ??___lwmod 0023                     ?_timer3_init 0001  
                   ?_normal_loop 0001                           clear_0 24A2  
                         clear_1 24B4                           clear_2 24C0  
                         clear_3 24DA                  __CFG_CLKOEC$OFF 000000  
                   rx_loop@ascii 00AE                 ___awdiv@quotient 0062  
                ___awmod@divisor 0021                  ___awmod@counter 0023  
                         _x_to_d 290A                           _rx_buf 01CB  
     __size_of_RTCC_from_caltime 0036                _command_operation 0000  
                         _tx_buf 01D3                        ??_comm_at 0025  
      __size_of_caltime_to_epoch 028C             rx_loop@comm_buf_init 00B7  
             ?_command_operation 00A0                     __mediumconst FE2C  
                         tblptrh 000FF7                           tblptrl 000FF6  
                      ??_my_atoi 0066                           tblptru 000FF8  
                      ?_ADC_init 0001                        ??_my_utoa 0025  
                      ??_rx_loop 00A9                        ??_tx_send 0024  
               __end_of_tx_sendn 23C8                 __end_of_tx_sends 249A  
            ??_command_operation 0025             __CFG_LS48MHZ$SYS48X8 000000  
                     __accesstop 0060          __end_of__initialization 24F8  
           __end_of_get_quot_rem 1644                    ___rparam_used 000001  
                _RTCC_from_epoch 288C             __CFG_WPEND$PAGE_WPFP 000000  
                 __pcstackCOMRAM 0001                     __pidataBANK0 2948  
                      ?_UART_ISR 0001         command_operation@opland1 00A2  
       command_operation@opland2 00A4         command_operation@opland3 00A6  
      __end_of_command_operation 050E                        ?_OSC_init 0001  
                __CFG_DSWDTPS$G2 000000                        ?_PWM_init 0001  
        __size_of_ringbuf_delete 0022                  normal_loop@scan 0089  
                normal_loop@temp 008F                       ??_ADC_init 001F  
     caltime_to_epoch@month_1993 007B               __size_of_main_init 0082  
                     __pbssBANK0 00B0                       __pbssBANK1 01C8  
                     __pbssBANK3 0300          __end_of_caltime_to_RTCC 1716  
                _RTCC_to_caltime 1DB8                     ?_tx_send_dec 0073  
          __end_of_weekday_3char FE49                          ?___lmul 0066  
                     ??_UART_ISR 0010                          ?___wmul 0060  
                        ?_d_to_x 0001                       ??_OSC_init 001F  
                 ___lmul@product 006E                          ?_x_to_d 0001  
                     ??_PWM_init 001F               __CFG_OSC$INTOSCPLL 000000  
             __size_of_my_strcmp 009C                  __CFG_WDTPS$1024 000000  
                   tx_sendn@temp 006F                          _SPBRGH1 000F7F  
                        _RTCVALH 000F3B                          _RTCVALL 000F3A  
        __end_of_RTCC_from_epoch 28AE             timer1_init@prescaler 0021  
                        _PWM_set 121A                 i2ringbuf_pop@ret 000F  
                   PWM_set@color 0070                 __CFG_CFGPLLEN$ON 000000  
       ??_button_timer_interrupt 0004                     PWM_set@value 006C  
                  ?_month_length 0060              epoch_to_caltime@day 008F  
              RTCC_from_epoch@ep 0099                RTCC_from_epoch@ct 0097  
            epoch_to_caltime@num 0093                          __Hparam 0000  
                        __Lparam 0000                    ?_ringbuf_init 001F  
                        ___awdiv 1D0A                  __size_of___lmul 007A  
                        ___awmod 2254                          ___lldiv 18AC  
                __size_of___wmul 0034                          ___llmod 1F08  
                     _light_mode 00B0                          ___lwdiv 2150  
                        ___lwmod 2652                  __size_of_d_to_x 0020  
     __size_of_command_operation 050E             __size_of_ringbuf_pop 00BE  
           __size_of_ringbuf_num 00DA             __size_of_ringbuf_put 00C6  
                __CFG_STVREN$OFF 000000                __end_of_main_init 2254  
    epoch_to_caltime@month_cache 00B6                          __pcinit 249A  
                      ?_tx_sendn 006B                        ?_tx_sends 006A  
                  rx_loop@i_2373 00AD                          __ramtop 0F00  
           __size_of_timer0_init 0032                          _halfsec 002B  
           __size_of_timer1_init 0046                          __ptext0 23C8  
                        __ptext1 082A                          __ptext2 2350  
                        __ptext3 1972                          __ptext4 2848  
                        __ptext5 20CC                          __ptext6 0000  
                        __ptext7 1FA6                          __ptext8 1E64  
                        __ptext9 24FE             __size_of_timer3_init 0026  
           __size_of_normal_loop 031C                  __size_of_x_to_d 001A  
                        _comm_at 24FE                        _T0CONbits 000FD5  
                   __size_of_ADC 002A                 _time_change_flag 00B2  
               _caltime_to_epoch 0B1C                     __size_of_ISR 00E0  
                      _T1CONbits 000FCD          __size_of_RTCC_from_RTCC 0022  
                      _T2CONbits 000FCA                          _rc_flag 002C  
                      _T3CONbits 000F79                 ___awmod@dividend 001F  
                      _T5CONbits 000F22                          _my_atoi 1E64  
                        _my_utoa 2042                    rx_loop@opcode 0164  
                        _rx_flag 002D                          _rx_loop 082A  
        __end_of_RTCC_to_caltime 1E64                          _tx_send 2924  
          __size_of_get_quot_rem 00D6             end_of_initialization 24F8  
         __size_ofi2_ringbuf_pop 00B0           __size_ofi2_ringbuf_num 00BE  
         __size_ofi2_ringbuf_put 00B8                   ??_month_length 0061  
               ?_caltime_to_RTCC 0064                  ___lldiv@divisor 0076  
           timer3_init@prescaler 0020                __end_of_my_strcmp 2042  
                ___lldiv@counter 007E                   tx_send_dec@dec 007E  
                 tx_sendn@digits 006D                   tx_send_dec@str 0074  
                 ??_ringbuf_init 0025                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                     ??_tx_sendn 0025                       ??_tx_sends 0024  
                      _PORTAbits 000F80                        _UART_init 28AE  
               __CFG_DSBOREN$OFF 000000                        _RTCC_init 27C8  
                      _RTCC_loop 269E                     _display_flag 0029  
      epoch_to_caltime@day_cache 0025           i2ringbuf_put@asciicode 000B  
                   _get_quot_rem 156E                       _print_time 136E  
                 _ringbuf_delete 2848        __size_of_epoch_to_caltime 01EC  
               __CFG_CPUDIV$OSC1 000000              RTCC_from_caltime@ep 0099  
            RTCC_from_caltime@ct 0097                __size_of_ADC_init 001C  
               ?_RTCC_from_epoch 0097                       comm_at@max 009E  
                     comm_at@min 009D  __size_of_button_timer_interrupt 0286  
        timer1_init@clock_select 001F                      _CCP1CONbits 000FBA  
                    _CCP2CONbits 000FB4                 __CFG_IOL1WAY$OFF 000000  
                    _CCP3CONbits 000F15                      _CCP4CONbits 000F12  
           __size_of_tx_send_dec 0058              __CFG_MSSP7B_EN$MSK7 000000  
                 ringbuf_init@rb 001F                   ringbuf_pop@ret 0023  
                  i2_ringbuf_pop 1C5A                    i2_ringbuf_num 1A30  
                  i2_ringbuf_put 1AEE                   __end_of___lmul 2350  
                 __end_of___wmul 2796                   __end_of_d_to_x 28EE  
              __size_of_UART_ISR 004E           __end_of_ringbuf_delete 286A  
                     ?_UART_init 0001                       ?_RTCC_init 0001  
              __size_of_OSC_init 000E                       ?_RTCC_loop 0001  
               __CFG_DSWDTEN$OFF 000000                   __end_of_x_to_d 2924  
          epoch_to_caltime@month 0092              start_initialization 249A  
               month_length@year 0065                      __end_of_ADC 2822  
                    __end_of_ISR 00E8                __size_of_PWM_init 00B4  
                  UART_ISR@ascii 0010                 ?_RTCC_to_caltime 0021  
               normal_loop@_2432 00B4                  ___llmod@divisor 0064  
                ___llmod@counter 001F                 normal_loop@value 008B  
                       ??___lmul 0025                   ?i2_ringbuf_pop 0009  
                 ?i2_ringbuf_num 0001                   ?i2_ringbuf_put 0009  
                       ??___wmul 0023                         ??_d_to_x 0023  
              __CFG_ADCSEL$BIT12 000000                      __pdataBANK0 00B6  
         _button_timer_interrupt 0DA8                         ??_x_to_d 001F  
                ?_ringbuf_delete 001F             __end_of_month_length 17E6  
                 _RTCC_from_RTCC 286A                      ?_print_time 0001  
                    __pbssBIGRAM 0464                      __pbssCOMRAM 0025  
            RTCC_to_caltime@dumy 0023                    __pcstackBANK0 0060  
                  __pcstackBANK1 0100                    __pcstackBANK2 0200  
                  __pcstackBANK4 0400          command_operation@opcode 00A0  
                    _caltime_now 002F             __end_of_ringbuf_init 2604  
               tx_send@asciicode 0024                         ?_PWM_set 006C  
       __end_of_caltime_to_epoch 0DA8                 ___lwdiv@dividend 0064  
                      _edit_flag 002A                        __pintcode 0008  
                  __pmediumconst FE2C                         ?___awdiv 001F  
                       ?___awmod 001F                         ?___lldiv 0072  
                       ?___llmod 0060                         ?___lwdiv 0064  
                       ?___lwmod 001F           __end_of_RTCC_from_RTCC 288C  
                    ??_UART_init 001F                         ?_comm_at 009B  
                    ??_RTCC_init 001F                      ??_RTCC_loop 001F  
              __size_of_tx_sendn 0078                __size_of_tx_sends 0066  
                      _epoch_now 0036                        _main_init 21D2  
               _epoch_to_caltime 102E             __CFG_RTCOSC$T1OSCREF 000000  
                       ?_my_atoi 0064                         _ADC_init 28EE  
                    _PADCFG1bits 000F3C                         ?_my_utoa 006B  
            ringbuf_backspace@rb 0021                 ___lwdiv@quotient 0069  
                       ?_rx_loop 0001                         ?_tx_send 0001  
                     my_atoi@ret 006A                       my_atoi@str 0064  
                      d_to_x@dec 0023         ringbuf_init@internal_buf 0021  
                 ___wmul@product 0023                         _IPR1bits 000F9F  
                       _IPR2bits 000FA2                         _PIE1bits 000F9D  
                       _PIE2bits 000FA0                  rx_loop@comm_buf 01DB  
                       _IPR5bits 000F99                         _PIE5bits 000F91  
            __size_of_print_time 0126                         i2u340_40 0F84  
                ??i2_ringbuf_pop 000B                  ??i2_ringbuf_num 0003  
                       i2u341_40 0FAA                         i2u342_40 0FD0  
                ??i2_ringbuf_put 000C                         i2u343_40 0FF6  
                       _PIR1bits 000F9E                         _PIR2bits 000FA1  
                       _PIR5bits 000F98       epoch_to_caltime@year_cache 00B3  
                       i2u580_40 0074                         i2u581_40 0076  
                       i2u582_40 008C                         i2u583_40 008E  
                       i2u584_40 00A4                         i2u585_40 00A6  
                  ??_ringbuf_pop 0066                    ??_ringbuf_num 0060  
                  ??_ringbuf_put 0066                    tx_sendn@value 006B  
                       _UART_ISR 2604                    ??_timer0_init 001F  
                  ??_timer1_init 0020                        _time_sync 002E  
                  ??_timer3_init 001F                    ??_normal_loop 0085  
                      _my_strcmp 1FA6                         _OSC_init 293A  
                ?_RTCC_from_RTCC 0081                       my_utoa@str 006B  
                     _ADCON0bits 000FC2                       _ADCON1bits 000FC1  
              ___wmul@multiplier 0060                 __CFG_SOSCSEL$LOW 000000  
                       _PWM_init 1BA6   button_timer_interrupt@sw_value 0003  
                     ?_main_init 0001                    ringbuf_pop@rb 0021  
                  ringbuf_num@rb 001F                    ringbuf_put@rb 0021  
              ___lmul@multiplier 0066                      _INTCON2bits 000FF1  
           epoch_to_caltime@year 0091                 __size_of_PWM_set 0154  
                     _CCPR1Lbits 000FBB                       _CCPR2Lbits 000FB5  
                     _CCPR3Lbits 000F16                       _CCPR4Lbits 000F13  
                       __Hrparam 0000                         __Lrparam 0000  
                     rx_loop@buf 0100                    _weekday_3char FE2D  
          __size_of_month_length 00D0                       ?_my_strcmp 001F  
       __size_of_caltime_to_RTCC 00D2                 __size_of___awdiv 00AE  
               __size_of___awmod 0082                 __size_of___lldiv 00C6  
               __size_of___llmod 009E                 __size_of___lwdiv 0082  
               __size_of___lwmod 004C                tx_sends@asciicode 006A  
            __end_of_ringbuf_pop 1A30              __end_of_ringbuf_num 156E  
            __end_of_ringbuf_put 18AC              __end_of_timer0_init 27C8  
          __size_of_ringbuf_init 004E                 __size_of_comm_at 0060  
            __end_of_timer1_init 272C              __end_of_timer3_init 2848  
            __end_of_normal_loop 082A                  ___lwdiv@divisor 0066  
                ___lwdiv@counter 0068             timer0_init@prescaler 0020  
                       __ptext10 136E                         __ptext11 255E  
                       __ptext20 1F08                         __ptext12 2434  
                       __ptext21 286A                         __ptext13 2042  
                       __ptext30 2822                         __ptext22 0B1C  
                       __ptext14 2652                         __ptext31 26E6  
                       __ptext23 1DB8                         __ptext15 2924  
                       __ptext40 288C                         __ptext32 2796  
                       __ptext24 290A                         __ptext16 17E6  
                       __ptext41 102E                         __ptext33 25B6  
                       __ptext25 121A                         __ptext17 1494  
                       __ptext42 1716                         __ptext34 28AE  
                       __ptext26 2762                         __ptext18 272C  
                       __ptext51 0DA8                         __ptext43 2254  
                       __ptext35 27C8                         __ptext27 2150  
                       __ptext19 050E                         __ptext52 2604  
                       __ptext44 156E                         __ptext36 1BA6  
                       __ptext28 27F8                         __ptext53 1AEE  
                       __ptext45 22D6                         __ptext37 293A  
                       __ptext29 21D2                         __ptext54 1C5A  
                       __ptext46 18AC                         __ptext38 28EE  
                       __ptext55 1A30                         __ptext47 1644  
                       __ptext39 269E                         __ptext48 28CE  
                       __ptext49 1D0A                 __size_of_my_atoi 00A4  
                     PWM_init@PR 001F                 __size_of_my_utoa 008A  
               __size_of_rx_loop 02F2            RTCC_loop@prev_halfsec 0027  
               __size_of_tx_send 0016                    __size_of_main 006C  
                  ??_tx_send_dec 0025                     _month_length 1716  
       __size_of_RTCC_from_epoch 0022                 ??_ringbuf_delete 0021  
        ?_button_timer_interrupt 0001                   rx_loop@opland1 0264  
                 rx_loop@opland2 0400                   rx_loop@opland3 0200  
                   _ringbuf_init 25B6                        x_to_d@hex 0020  
                       _tx_sendn 2350                         _tx_sends 2434  
                   ??_print_time 0025                   main_init@rxbuf 0300  
                 main_init@txbuf 0464                      ??_main_init 0025  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
           ringbuf_put@asciicode 0023                 get_quot_rem@quot 007F  
              RTCC_to_caltime@ct 0021                     normal_loop@i 008E  
                       intlevel2 0000                     normal_loop@n 00B5  
               ___lwmod@dividend 001F                 ___lldiv@dividend 0072  
                      tx_sendn@i 006E               RTCC_loop@GIE_cache 001F  
                     _RCSTA1bits 000FAC                ?_caltime_to_epoch 0072  
              _ringbuf_backspace 20CC         __end_of_epoch_to_caltime 121A  
       __size_of_RTCC_to_caltime 00AC                       _OSCCONbits 000FD3  
 __end_of_button_timer_interrupt 102E                  tx_send_dec@edit 0073  
             __end_of_print_time 1494               ??_caltime_to_epoch 0076  
             ?_ringbuf_backspace 0021                         my_utoa@d 0070  
                       my_utoa@v 0071                      _ringbuf_pop 1972  
                    _ringbuf_num 1494                      _ringbuf_put 17E6  
            __end_of_tx_send_dec 25B6                      ??_my_strcmp 0023  
                    _timer0_init 2796                      _timer1_init 26E6  
                    _timer3_init 2822                      _normal_loop 050E  
                       rx_loop@i 00AF              ??_ringbuf_backspace 0066  
                get_quot_rem@div 0081                  get_quot_rem@num 0083  
                     _RTCCFGbits 000F3F                       _PPSCONbits 000EBF  
               ___lldiv@quotient 007A                caltime_to_RTCC@ct 0064  
                ___lwmod@divisor 0021                ??_caltime_to_RTCC 0024  
                ___lwmod@counter 0023  epoch_to_caltime@day_since_epoch 008D  
                  my_utoa@digits 006F        __end_of_ringbuf_backspace 2150  
                   my_utoa@value 006D           _command_operation$3059 00A8  
               ??_RTCC_from_RTCC 0025  
