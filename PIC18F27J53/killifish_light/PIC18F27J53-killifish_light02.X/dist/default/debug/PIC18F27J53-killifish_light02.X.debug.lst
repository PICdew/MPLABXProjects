

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Jul 18 18:48:01 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    14                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    75  0000                     
    76                           	psect	idataBANK0
    77  012942                     __pidataBANK0:
    78                           	opt stack 0
    79                           
    80                           ;initializer for epoch_to_caltime@month_cache
    81  012942  01                 	db	1
    82                           
    83                           ;initializer for rx_loop@comm_buf_init
    84  012943  01                 	db	1
    85                           
    86                           	psect	mediumconst
    87  00FE2C                     __pmediumconst:
    88                           	opt stack 0
    89  00FE2C  00                 	db	0
    90  00FE2D                     _weekday_3char:
    91                           	opt stack 0
    92  00FE2D  53                 	db	83
    93  00FE2E  55                 	db	85
    94  00FE2F  4E                 	db	78
    95  00FE30  00                 	db	0
    96  00FE31  4D                 	db	77
    97  00FE32  4F                 	db	79
    98  00FE33  4E                 	db	78
    99  00FE34  00                 	db	0
   100  00FE35  54                 	db	84
   101  00FE36  55                 	db	85
   102  00FE37  45                 	db	69
   103  00FE38  00                 	db	0
   104  00FE39  57                 	db	87
   105  00FE3A  45                 	db	69
   106  00FE3B  44                 	db	68
   107  00FE3C  00                 	db	0
   108  00FE3D  54                 	db	84
   109  00FE3E  48                 	db	72
   110  00FE3F  55                 	db	85
   111  00FE40  00                 	db	0
   112  00FE41  46                 	db	70
   113  00FE42  52                 	db	82
   114  00FE43  49                 	db	73
   115  00FE44  00                 	db	0
   116  00FE45  53                 	db	83
   117  00FE46  41                 	db	65
   118  00FE47  54                 	db	84
   119  00FE48  00                 	db	0
   120  00FE49                     __end_of_weekday_3char:
   121                           	opt stack 0
   122  0000                     _PPSCONbits	set	3775
   123  0000                     _RPOR3	set	3779
   124  0000                     _RPOR4	set	3780
   125  0000                     _RPOR5	set	3781
   126  0000                     _ANCON0	set	3912
   127  0000                     _ANCON1	set	3913
   128  0000                     _CCP3CONbits	set	3861
   129  0000                     _CCP4CONbits	set	3858
   130  0000                     _CCPR3L	set	3862
   131  0000                     _CCPR3Lbits	set	3862
   132  0000                     _CCPR4L	set	3859
   133  0000                     _CCPR4Lbits	set	3859
   134  0000                     _CCPTMRS0bits	set	3922
   135  0000                     _CCPTMRS1bits	set	3921
   136  0000                     _PADCFG1bits	set	3900
   137  0000                     _RTCCAL	set	3902
   138  0000                     _RTCCFGbits	set	3903
   139  0000                     _RTCVALH	set	3899
   140  0000                     _RTCVALL	set	3898
   141  0000                     _T5CONbits	set	3874
   142  0000                     _ADRES	set	4035
   143  0000                     _ADCON0bits	set	4034
   144  0000                     _ADCON1bits	set	4033
   145  0000                     _BAUDCON1bits	set	3966
   146  0000                     _CCP1CONbits	set	4026
   147  0000                     _CCP2CONbits	set	4020
   148  0000                     _CCPR1L	set	4027
   149  0000                     _CCPR1Lbits	set	4027
   150  0000                     _CCPR2L	set	4021
   151  0000                     _CCPR2Lbits	set	4021
   152  0000                     _EECON2	set	4007
   153  0000                     _INTCON2bits	set	4081
   154  0000                     _INTCONbits	set	4082
   155  0000                     _IPR1bits	set	3999
   156  0000                     _IPR2bits	set	4002
   157  0000                     _IPR5bits	set	3993
   158  0000                     _OSCCONbits	set	4051
   159  0000                     _OSCTUNEbits	set	3995
   160  0000                     _PIE1bits	set	3997
   161  0000                     _PIE2bits	set	4000
   162  0000                     _PIE5bits	set	3985
   163  0000                     _PIR1bits	set	3998
   164  0000                     _PIR2bits	set	4001
   165  0000                     _PIR5bits	set	3992
   166  0000                     _PORTAbits	set	3968
   167  0000                     _PR2	set	4043
   168  0000                     _RCREG1	set	4015
   169  0000                     _RCSTA1bits	set	4012
   170  0000                     _SPBRG1	set	4016
   171  0000                     _SPBRGH1	set	3967
   172  0000                     _T0CONbits	set	4053
   173  0000                     _T1CONbits	set	4045
   174  0000                     _T2CONbits	set	4042
   175  0000                     _T3CONbits	set	3961
   176  0000                     _TMR1H	set	4047
   177  0000                     _TRISA	set	3986
   178  0000                     _TRISB	set	3987
   179  0000                     _TRISC	set	3988
   180  0000                     _TXREG1	set	4014
   181  0000                     _TXSTA1bits	set	4013
   182  0000                     _GIE	set	32663
   183  0000                     _LATB2	set	31826
   184  00FE49                     STR_11:
   185  00FE49  09                 	db	9
   186  00FE4A  2A                 	db	42
   187  00FE4B  2A                 	db	42
   188  00FE4C  2A                 	db	42
   189  00FE4D  2A                 	db	42
   190  00FE4E  2A                 	db	42
   191  00FE4F  2A                 	db	42
   192  00FE50  2A                 	db	42
   193  00FE51  2A                 	db	42
   194  00FE52  2A                 	db	42
   195  00FE53  2A                 	db	42
   196  00FE54  2A                 	db	42
   197  00FE55  2A                 	db	42
   198  00FE56  2A                 	db	42
   199  00FE57  2A                 	db	42
   200  00FE58  2A                 	db	42
   201  00FE59  2A                 	db	42
   202  00FE5A  2A                 	db	42
   203  00FE5B  2A                 	db	42
   204  00FE5C  2A                 	db	42
   205  00FE5D  2A                 	db	42
   206  00FE5E  2A                 	db	42
   207  00FE5F  2A                 	db	42
   208  00FE60  2A                 	db	42
   209  00FE61  2A                 	db	42
   210  00FE62  2A                 	db	42
   211  00FE63  2A                 	db	42
   212  00FE64  0A                 	db	10
   213  00FE65  09                 	db	9
   214  00FE66  2A                 	db	42
   215  00FE67  2A                 	db	42
   216  00FE68  2A                 	db	42
   217  00FE69  2A                 	db	42
   218  00FE6A  20                 	db	32
   219  00FE6B  4B                 	db	75	;'K'
   220  00FE6C  69                 	db	105	;'i'
   221  00FE6D  6C                 	db	108	;'l'
   222  00FE6E  6C                 	db	108	;'l'
   223  00FE6F  69                 	db	105	;'i'
   224  00FE70  66                 	db	102	;'f'
   225  00FE71  69                 	db	105	;'i'
   226  00FE72  73                 	db	115	;'s'
   227  00FE73  68                 	db	104	;'h'
   228  00FE74  20                 	db	32
   229  00FE75  4C                 	db	76	;'L'
   230  00FE76  69                 	db	105	;'i'
   231  00FE77  67                 	db	103	;'g'
   232  00FE78  68                 	db	104	;'h'
   233  00FE79  74                 	db	116	;'t'
   234  00FE7A  20                 	db	32
   235  00FE7B  20                 	db	32
   236  00FE7C  2A                 	db	42
   237  00FE7D  2A                 	db	42
   238  00FE7E  2A                 	db	42
   239  00FE7F  2A                 	db	42
   240  00FE80  0A                 	db	10
   241  00FE81  09                 	db	9
   242  00FE82  2A                 	db	42
   243  00FE83  2A                 	db	42
   244  00FE84  2A                 	db	42
   245  00FE85  2A                 	db	42
   246  00FE86  20                 	db	32
   247  00FE87  4D                 	db	77	;'M'
   248  00FE88  61                 	db	97	;'a'
   249  00FE89  64                 	db	100	;'d'
   250  00FE8A  65                 	db	101	;'e'
   251  00FE8B  20                 	db	32
   252  00FE8C  62                 	db	98	;'b'
   253  00FE8D  79                 	db	121	;'y'
   254  00FE8E  20                 	db	32
   255  00FE8F  40                 	db	64	;'@'
   256  00FE90  52                 	db	82	;'R'
   257  00FE91  79                 	db	121	;'y'
   258  00FE92  6F                 	db	111	;'o'
   259  00FE93  6B                 	db	107	;'k'
   260  00FE94  65                 	db	101	;'e'
   261  00FE95  72                 	db	114	;'r'
   262  00FE96  69                 	db	105	;'i'
   263  00FE97  20                 	db	32
   264  00FE98  2A                 	db	42
   265  00FE99  2A                 	db	42
   266  00FE9A  2A                 	db	42
   267  00FE9B  2A                 	db	42
   268  00FE9C  0A                 	db	10
   269  00FE9D  09                 	db	9
   270  00FE9E  2A                 	db	42
   271  00FE9F  2A                 	db	42
   272  00FEA0  2A                 	db	42
   273  00FEA1  2A                 	db	42
   274  00FEA2  2A                 	db	42
   275  00FEA3  2A                 	db	42
   276  00FEA4  2A                 	db	42
   277  00FEA5  2A                 	db	42
   278  00FEA6  2A                 	db	42
   279  00FEA7  2A                 	db	42
   280  00FEA8  2A                 	db	42
   281  00FEA9  2A                 	db	42
   282  00FEAA  2A                 	db	42
   283  00FEAB  2A                 	db	42
   284  00FEAC  2A                 	db	42
   285  00FEAD  2A                 	db	42
   286  00FEAE  2A                 	db	42
   287  00FEAF  2A                 	db	42
   288  00FEB0  2A                 	db	42
   289  00FEB1  2A                 	db	42
   290  00FEB2  2A                 	db	42
   291  00FEB3  2A                 	db	42
   292  00FEB4  2A                 	db	42
   293  00FEB5  2A                 	db	42
   294  00FEB6  2A                 	db	42
   295  00FEB7  2A                 	db	42
   296  00FEB8  0A                 	db	10
   297  00FEB9  0A                 	db	10
   298  00FEBA  09                 	db	9
   299  00FEBB  63                 	db	99	;'c'
   300  00FEBC  6F                 	db	111	;'o'
   301  00FEBD  6D                 	db	109	;'m'
   302  00FEBE  6D                 	db	109	;'m'
   303  00FEBF  61                 	db	97	;'a'
   304  00FEC0  6E                 	db	110	;'n'
   305  00FEC1  64                 	db	100	;'d'
   306  00FEC2  20                 	db	32
   307  00FEC3  09                 	db	9
   308  00FEC4  6F                 	db	111	;'o'
   309  00FEC5  70                 	db	112	;'p'
   310  00FEC6  65                 	db	101	;'e'
   311  00FEC7  6C                 	db	108	;'l'
   312  00FEC8  61                 	db	97	;'a'
   313  00FEC9  6E                 	db	110	;'n'
   314  00FECA  64                 	db	100	;'d'
   315  00FECB  31                 	db	49	;'1'
   316  00FECC  09                 	db	9
   317  00FECD  6F                 	db	111	;'o'
   318  00FECE  70                 	db	112	;'p'
   319  00FECF  65                 	db	101	;'e'
   320  00FED0  6C                 	db	108	;'l'
   321  00FED1  61                 	db	97	;'a'
   322  00FED2  6E                 	db	110	;'n'
   323  00FED3  64                 	db	100	;'d'
   324  00FED4  32                 	db	50	;'2'
   325  00FED5  0A                 	db	10
   326  00FED6  0A                 	db	10
   327  00FED7  09                 	db	9
   328  00FED8  70                 	db	112	;'p'
   329  00FED9  72                 	db	114	;'r'
   330  00FEDA  69                 	db	105	;'i'
   331  00FEDB  6E                 	db	110	;'n'
   332  00FEDC  74                 	db	116	;'t'
   333  00FEDD  5F                 	db	95	;'_'
   334  00FEDE  74                 	db	116	;'t'
   335  00FEDF  69                 	db	105	;'i'
   336  00FEE0  6D                 	db	109	;'m'
   337  00FEE1  65                 	db	101	;'e'
   338  00FEE2  28                 	db	40
   339  00FEE3  74                 	db	116	;'t'
   340  00FEE4  29                 	db	41
   341  00FEE5  0A                 	db	10
   342  00FEE6  09                 	db	9
   343  00FEE7  61                 	db	97	;'a'
   344  00FEE8  64                 	db	100	;'d'
   345  00FEE9  6A                 	db	106	;'j'
   346  00FEEA  75                 	db	117	;'u'
   347  00FEEB  73                 	db	115	;'s'
   348  00FEEC  74                 	db	116	;'t'
   349  00FEED  5F                 	db	95	;'_'
   350  00FEEE  74                 	db	116	;'t'
   351  00FEEF  69                 	db	105	;'i'
   352  00FEF0  6D                 	db	109	;'m'
   353  00FEF1  65                 	db	101	;'e'
   354  00FEF2  28                 	db	40
   355  00FEF3  61                 	db	97	;'a'
   356  00FEF4  74                 	db	116	;'t'
   357  00FEF5  29                 	db	41
   358  00FEF6  20                 	db	32
   359  00FEF7  5B                 	db	91	;'['
   360  00FEF8  68                 	db	104	;'h'
   361  00FEF9  61                 	db	97	;'a'
   362  00FEFA  6E                 	db	110	;'n'
   363  00FEFB  64                 	db	100	;'d'
   364  00FEFC  3A                 	db	58	;':'
   365  00FEFD  79                 	db	121	;'y'
   366  00FEFE  2C                 	db	44
   367  00FEFF  4D                 	db	77	;'M'
   368  00FF00  2C                 	db	44
   369  00FF01  64                 	db	100	;'d'
   370  00FF02  2C                 	db	44
   371  00FF03  68                 	db	104	;'h'
   372  00FF04  2C                 	db	44
   373  00FF05  6D                 	db	109	;'m'
   374  00FF06  2C                 	db	44
   375  00FF07  73                 	db	115	;'s'
   376  00FF08  5D                 	db	93	;']'
   377  00FF09  20                 	db	32
   378  00FF0A  5B                 	db	91	;'['
   379  00FF0B  76                 	db	118	;'v'
   380  00FF0C  61                 	db	97	;'a'
   381  00FF0D  6C                 	db	108	;'l'
   382  00FF0E  75                 	db	117	;'u'
   383  00FF0F  65                 	db	101	;'e'
   384  00FF10  28                 	db	40
   385  00FF11  64                 	db	100	;'d'
   386  00FF12  65                 	db	101	;'e'
   387  00FF13  63                 	db	99	;'c'
   388  00FF14  69                 	db	105	;'i'
   389  00FF15  6D                 	db	109	;'m'
   390  00FF16  61                 	db	97	;'a'
   391  00FF17  6C                 	db	108	;'l'
   392  00FF18  29                 	db	41
   393  00FF19  5D                 	db	93	;']'
   394  00FF1A  0A                 	db	10
   395  00FF1B  09                 	db	9
   396  00FF1C  70                 	db	112	;'p'
   397  00FF1D  77                 	db	119	;'w'
   398  00FF1E  6D                 	db	109	;'m'
   399  00FF1F  20                 	db	32
   400  00FF20  5B                 	db	91	;'['
   401  00FF21  63                 	db	99	;'c'
   402  00FF22  6F                 	db	111	;'o'
   403  00FF23  6C                 	db	108	;'l'
   404  00FF24  6F                 	db	111	;'o'
   405  00FF25  72                 	db	114	;'r'
   406  00FF26  3A                 	db	58	;':'
   407  00FF27  52                 	db	82	;'R'
   408  00FF28  2C                 	db	44
   409  00FF29  47                 	db	71	;'G'
   410  00FF2A  2C                 	db	44
   411  00FF2B  42                 	db	66	;'B'
   412  00FF2C  2C                 	db	44
   413  00FF2D  57                 	db	87	;'W'
   414  00FF2E  5D                 	db	93	;']'
   415  00FF2F  20                 	db	32
   416  00FF30  5B                 	db	91	;'['
   417  00FF31  76                 	db	118	;'v'
   418  00FF32  61                 	db	97	;'a'
   419  00FF33  6C                 	db	108	;'l'
   420  00FF34  75                 	db	117	;'u'
   421  00FF35  65                 	db	101	;'e'
   422  00FF36  28                 	db	40
   423  00FF37  25                 	db	37
   424  00FF38  29                 	db	41
   425  00FF39  3A                 	db	58	;':'
   426  00FF3A  30                 	db	48	;'0'
   427  00FF3B  7E                 	db	126
   428  00FF3C  31                 	db	49	;'1'
   429  00FF3D  30                 	db	48	;'0'
   430  00FF3E  30                 	db	48	;'0'
   431  00FF3F  5D                 	db	93	;']'
   432  00FF40  0A                 	db	10
   433  00FF41  09                 	db	9
   434  00FF42  70                 	db	112	;'p'
   435  00FF43  77                 	db	119	;'w'
   436  00FF44  6D                 	db	109	;'m'
   437  00FF45  20                 	db	32
   438  00FF46  63                 	db	99	;'c'
   439  00FF47  6C                 	db	108	;'l'
   440  00FF48  65                 	db	101	;'e'
   441  00FF49  61                 	db	97	;'a'
   442  00FF4A  72                 	db	114	;'r'
   443  00FF4B  0A                 	db	10
   444  00FF4C  09                 	db	9
   445  00FF4D  73                 	db	115	;'s'
   446  00FF4E  65                 	db	101	;'e'
   447  00FF4F  74                 	db	116	;'t'
   448  00FF50  20                 	db	32
   449  00FF51  74                 	db	116	;'t'
   450  00FF52  69                 	db	105	;'i'
   451  00FF53  6D                 	db	109	;'m'
   452  00FF54  65                 	db	101	;'e'
   453  00FF55  5F                 	db	95	;'_'
   454  00FF56  73                 	db	115	;'s'
   455  00FF57  79                 	db	121	;'y'
   456  00FF58  6E                 	db	110	;'n'
   457  00FF59  63                 	db	99	;'c'
   458  00FF5A  5F                 	db	95	;'_'
   459  00FF5B  6D                 	db	109	;'m'
   460  00FF5C  6F                 	db	111	;'o'
   461  00FF5D  64                 	db	100	;'d'
   462  00FF5E  65                 	db	101	;'e'
   463  00FF5F  28                 	db	40
   464  00FF60  73                 	db	115	;'s'
   465  00FF61  79                 	db	121	;'y'
   466  00FF62  6E                 	db	110	;'n'
   467  00FF63  63                 	db	99	;'c'
   468  00FF64  29                 	db	41
   469  00FF65  0A                 	db	10
   470  00FF66  09                 	db	9
   471  00FF67  73                 	db	115	;'s'
   472  00FF68  65                 	db	101	;'e'
   473  00FF69  74                 	db	116	;'t'
   474  00FF6A  20                 	db	32
   475  00FF6B  41                 	db	65	;'A'
   476  00FF6C  44                 	db	68	;'D'
   477  00FF6D  43                 	db	67	;'C'
   478  00FF6E  5F                 	db	95	;'_'
   479  00FF6F  6D                 	db	109	;'m'
   480  00FF70  6F                 	db	111	;'o'
   481  00FF71  64                 	db	100	;'d'
   482  00FF72  65                 	db	101	;'e'
   483  00FF73  28                 	db	40
   484  00FF74  61                 	db	97	;'a'
   485  00FF75  64                 	db	100	;'d'
   486  00FF76  63                 	db	99	;'c'
   487  00FF77  29                 	db	41
   488  00FF78  0A                 	db	10
   489  00FF79  09                 	db	9
   490  00FF7A  52                 	db	82	;'R'
   491  00FF7B  45                 	db	69	;'E'
   492  00FF7C  53                 	db	83	;'S'
   493  00FF7D  45                 	db	69	;'E'
   494  00FF7E  54                 	db	84	;'T'
   495  00FF7F  28                 	db	40
   496  00FF80  29                 	db	41
   497  00FF81  3B                 	db	59	;';'
   498  00FF82  0A                 	db	10
   499  00FF83  00                 	db	0
   500  00FF84                     STR_14:
   501  00FF84  61                 	db	97	;'a'
   502  00FF85  64                 	db	100	;'d'
   503  00FF86  6A                 	db	106	;'j'
   504  00FF87  75                 	db	117	;'u'
   505  00FF88  73                 	db	115	;'s'
   506  00FF89  74                 	db	116	;'t'
   507  00FF8A  5F                 	db	95	;'_'
   508  00FF8B  74                 	db	116	;'t'
   509  00FF8C  69                 	db	105	;'i'
   510  00FF8D  6D                 	db	109	;'m'
   511  00FF8E  65                 	db	101	;'e'
   512  00FF8F  00                 	db	0
   513  00FF90                     STR_21:
   514  00FF90  70                 	db	112	;'p'
   515  00FF91  72                 	db	114	;'r'
   516  00FF92  69                 	db	105	;'i'
   517  00FF93  6E                 	db	110	;'n'
   518  00FF94  74                 	db	116	;'t'
   519  00FF95  5F                 	db	95	;'_'
   520  00FF96  74                 	db	116	;'t'
   521  00FF97  69                 	db	105	;'i'
   522  00FF98  6D                 	db	109	;'m'
   523  00FF99  65                 	db	101	;'e'
   524  00FF9A  00                 	db	0
   525  00FF9B                     STR_12:
   526  00FF9B  52                 	db	82	;'R'
   527  00FF9C  45                 	db	69	;'E'
   528  00FF9D  53                 	db	83	;'S'
   529  00FF9E  45                 	db	69	;'E'
   530  00FF9F  54                 	db	84	;'T'
   531  00FFA0  28                 	db	40
   532  00FFA1  29                 	db	41
   533  00FFA2  3B                 	db	59	;';'
   534  00FFA3  00                 	db	0
   535  00FFA4                     STR_8:
   536  00FFA4  09                 	db	9
   537  00FFA5  65                 	db	101	;'e'
   538  00FFA6  72                 	db	114	;'r'
   539  00FFA7  72                 	db	114	;'r'
   540  00FFA8  6F                 	db	111	;'o'
   541  00FFA9  72                 	db	114	;'r'
   542  00FFAA  0A                 	db	10
   543  00FFAB  00                 	db	0
   544  00FFAC                     STR_37:
   545  00FFAC  63                 	db	99	;'c'
   546  00FFAD  6C                 	db	108	;'l'
   547  00FFAE  65                 	db	101	;'e'
   548  00FFAF  61                 	db	97	;'a'
   549  00FFB0  72                 	db	114	;'r'
   550  00FFB1  00                 	db	0
   551  00FFB2                     STR_2:
   552  00FFB2  20                 	db	32
   553  00FFB3  20                 	db	32
   554  00FFB4  20                 	db	32
   555  00FFB5  20                 	db	32
   556  00FFB6  00                 	db	0
   557  00FFB7                     STR_24:
   558  00FFB7  73                 	db	115	;'s'
   559  00FFB8  79                 	db	121	;'y'
   560  00FFB9  6E                 	db	110	;'n'
   561  00FFBA  63                 	db	99	;'c'
   562  00FFBB  00                 	db	0
   563  00FFBC                     STR_9:
   564  00FFBC  68                 	db	104	;'h'
   565  00FFBD  65                 	db	101	;'e'
   566  00FFBE  6C                 	db	108	;'l'
   567  00FFBF  70                 	db	112	;'p'
   568  00FFC0  00                 	db	0
   569  00FFC1                     STR_39:
   570  00FFC1  08                 	db	8
   571  00FFC2  20                 	db	32
   572  00FFC3  08                 	db	8
   573  00FFC4  00                 	db	0
   574  00FFC5                     STR_26:
   575  00FFC5  41                 	db	65	;'A'
   576  00FFC6  44                 	db	68	;'D'
   577  00FFC7  43                 	db	67	;'C'
   578  00FFC8  00                 	db	0
   579  00FFC9                     STR_28:
   580  00FFC9  50                 	db	80	;'P'
   581  00FFCA  57                 	db	87	;'W'
   582  00FFCB  4D                 	db	77	;'M'
   583  00FFCC  00                 	db	0
   584  00FFCD                     STR_25:
   585  00FFCD  61                 	db	97	;'a'
   586  00FFCE  64                 	db	100	;'d'
   587  00FFCF  63                 	db	99	;'c'
   588  00FFD0  00                 	db	0
   589  00FFD1                     STR_27:
   590  00FFD1  70                 	db	112	;'p'
   591  00FFD2  77                 	db	119	;'w'
   592  00FFD3  6D                 	db	109	;'m'
   593  00FFD4  00                 	db	0
   594  00FFD5                     STR_23:
   595  00FFD5  73                 	db	115	;'s'
   596  00FFD6  65                 	db	101	;'e'
   597  00FFD7  74                 	db	116	;'t'
   598  00FFD8  00                 	db	0
   599  00FFD9                     STR_6:
   600  00FFD9  29                 	db	41
   601  00FFDA  20                 	db	32
   602  00FFDB  00                 	db	0
   603  00FFDC                     STR_5:
   604  00FFDC  20                 	db	32
   605  00FFDD  28                 	db	40
   606  00FFDE  00                 	db	0
   607  00FFDF                     STR_13:
   608  00FFDF  61                 	db	97	;'a'
   609  00FFE0  74                 	db	116	;'t'
   610  00FFE1  00                 	db	0
   611  00FFE2                     STR_7:
   612  00FFE2  2D                 	db	45
   613  00FFE3  00                 	db	0
   614  00FFE4                     STR_3:
   615  00FFE4  2F                 	db	47
   616  00FFE5  00                 	db	0
   617  00FFE6                     STR_10:
   618  00FFE6  3F                 	db	63	;'?'
   619  00FFE7  00                 	db	0
   620  00FFE8                     STR_34:
   621  00FFE8  42                 	db	66	;'B'
   622  00FFE9  00                 	db	0
   623  00FFEA                     STR_32:
   624  00FFEA  47                 	db	71	;'G'
   625  00FFEB  00                 	db	0
   626  00FFEC                     STR_30:
   627  00FFEC  52                 	db	82	;'R'
   628  00FFED  00                 	db	0
   629  00FFEE                     STR_36:
   630  00FFEE  57                 	db	87	;'W'
   631  00FFEF  00                 	db	0
   632  00FFF0                     STR_33:
   633  00FFF0  62                 	db	98	;'b'
   634  00FFF1  00                 	db	0
   635  00FFF2                     STR_17:
   636  00FFF2  64                 	db	100	;'d'
   637  00FFF3  00                 	db	0
   638  00FFF4                     STR_31:
   639  00FFF4  67                 	db	103	;'g'
   640  00FFF5  00                 	db	0
   641  00FFF6                     STR_18:
   642  00FFF6  68                 	db	104	;'h'
   643  00FFF7  00                 	db	0
   644  00FFF8                     STR_20:
   645  00FFF8  73                 	db	115	;'s'
   646  00FFF9  00                 	db	0
   647  00FFFA                     STR_35:
   648  00FFFA  77                 	db	119	;'w'
   649  00FFFB  00                 	db	0
   650  00FFFC                     STR_15:
   651  00FFFC  79                 	db	121	;'y'
   652  00FFFD  00                 	db	0
   653  0000                     
   654                           ; #config settings
   655  00FFFE  00                 	db	0	; dummy byte at the end
   656  0000                     
   657                           	psect	cinit
   658  012520                     __pcinit:
   659                           	opt stack 0
   660  012520                     start_initialization:
   661                           	opt stack 0
   662  012520                     __initialization:
   663                           	opt stack 0
   664                           
   665                           ; Clear objects allocated to BIGRAM (1000 bytes)
   666  012520  EE04  F064         	lfsr	0,__pbssBIGRAM
   667  012524  EE13 F0E8          	lfsr	1,1000
   668  012528                     clear_0:
   669  012528  6AEE               	clrf	postinc0,c
   670  01252A  50E5               	movf	postdec1,w,c
   671  01252C  50E1               	movf	fsr1l,w,c
   672  01252E  E1FC               	bnz	clear_0
   673  012530  50E2               	movf	fsr1h,w,c
   674  012532  E1FA               	bnz	clear_0
   675                           
   676                           ; Clear objects allocated to BANK3 (250 bytes)
   677  012534  EE03  F000         	lfsr	0,__pbssBANK3
   678  012538  0EFA               	movlw	250
   679  01253A                     clear_1:
   680  01253A  6AEE               	clrf	postinc0,c
   681  01253C  06E8               	decf	wreg,f,c
   682  01253E  E1FD               	bnz	clear_1
   683                           
   684                           ; Clear objects allocated to BANK1 (32 bytes)
   685  012540  EE01  F0C8         	lfsr	0,__pbssBANK1
   686  012544  0E20               	movlw	32
   687  012546                     clear_2:
   688  012546  6AEE               	clrf	postinc0,c
   689  012548  06E8               	decf	wreg,f,c
   690  01254A  E1FD               	bnz	clear_2
   691                           
   692                           ; Clear objects allocated to BANK0 (3 bytes)
   693  01254C  0100               	movlb	0
   694  01254E  6BC1               	clrf	(__pbssBANK0+2)& (0+255),b
   695  012550  6BC0               	clrf	(__pbssBANK0+1)& (0+255),b
   696  012552  6BBF               	clrf	__pbssBANK0& (0+255),b
   697                           
   698                           ; Clear objects allocated to COMRAM (30 bytes)
   699  012554  EE00  F024         	lfsr	0,__pbssCOMRAM
   700  012558  0E1E               	movlw	30
   701  01255A                     clear_3:
   702  01255A  6AEE               	clrf	postinc0,c
   703  01255C  06E8               	decf	wreg,f,c
   704  01255E  E1FD               	bnz	clear_3
   705                           
   706                           ; Initialize objects allocated to BANK0 (2 bytes)
   707                           ; load TBLPTR registers with __pidataBANK0
   708  012560  0E42               	movlw	low __pidataBANK0
   709  012562  6EF6               	movwf	tblptrl,c
   710  012564  0E29               	movlw	high __pidataBANK0
   711  012566  6EF7               	movwf	tblptrh,c
   712  012568  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   713  01256A  6EF8               	movwf	tblptru,c
   714  01256C  0009               	tblrd		*+	;fetch initializer
   715  01256E  CFF5 F0C2          	movff	tablat,__pdataBANK0
   716  012572  0009               	tblrd		*+	;fetch initializer
   717  012574  CFF5 F0C3          	movff	tablat,__pdataBANK0+1
   718  012578                     end_of_initialization:
   719                           	opt stack 0
   720  012578                     __end_of__initialization:
   721                           	opt stack 0
   722  012578  0100               	movlb	0
   723  01257A  EF87  F082         	goto	_main	;jump to C main() function
   724                           tblptru	equ	0xFF8
   725                           tblptrh	equ	0xFF7
   726                           tblptrl	equ	0xFF6
   727                           tablat	equ	0xFF5
   728                           postinc0	equ	0xFEE
   729                           wreg	equ	0xFE8
   730                           postdec1	equ	0xFE5
   731                           fsr1h	equ	0xFE2
   732                           fsr1l	equ	0xFE1
   733                           
   734                           	psect	bssCOMRAM
   735  000024                     __pbssCOMRAM:
   736                           	opt stack 0
   737  000024                     _d1:
   738                           	opt stack 0
   739  000024                     	ds	3
   740  000027                     RTCC_loop@prev_halfsec:
   741                           	opt stack 0
   742  000027                     	ds	1
   743  000028                     _colon:
   744                           	opt stack 0
   745  000028                     	ds	1
   746  000029                     _display_flag:
   747                           	opt stack 0
   748  000029                     	ds	1
   749  00002A                     _edit_flag:
   750                           	opt stack 0
   751  00002A                     	ds	1
   752  00002B                     _halfsec:
   753                           	opt stack 0
   754  00002B                     	ds	1
   755  00002C                     _rc_flag:
   756                           	opt stack 0
   757  00002C                     	ds	1
   758  00002D                     _rx_flag:
   759                           	opt stack 0
   760  00002D                     	ds	1
   761  00002E                     _time_sync:
   762                           	opt stack 0
   763  00002E                     	ds	1
   764  00002F                     _caltime_now:
   765                           	opt stack 0
   766  00002F                     	ds	7
   767  000036                     _epoch_now:
   768                           	opt stack 0
   769  000036                     	ds	4
   770  00003A                     _sw_G:
   771                           	opt stack 0
   772  00003A                     	ds	4
   773  00003E                     _sw_R:
   774                           	opt stack 0
   775  00003E                     	ds	4
   776                           tblptru	equ	0xFF8
   777                           tblptrh	equ	0xFF7
   778                           tblptrl	equ	0xFF6
   779                           tablat	equ	0xFF5
   780                           postinc0	equ	0xFEE
   781                           wreg	equ	0xFE8
   782                           postdec1	equ	0xFE5
   783                           fsr1h	equ	0xFE2
   784                           fsr1l	equ	0xFE1
   785                           
   786                           	psect	bssBANK0
   787  0000BF                     __pbssBANK0:
   788                           	opt stack 0
   789  0000BF                     epoch_to_caltime@day_cache:
   790                           	opt stack 0
   791  0000BF                     	ds	2
   792  0000C1                     epoch_to_caltime@year_cache:
   793                           	opt stack 0
   794  0000C1                     	ds	1
   795                           tblptru	equ	0xFF8
   796                           tblptrh	equ	0xFF7
   797                           tblptrl	equ	0xFF6
   798                           tablat	equ	0xFF5
   799                           postinc0	equ	0xFEE
   800                           wreg	equ	0xFE8
   801                           postdec1	equ	0xFE5
   802                           fsr1h	equ	0xFE2
   803                           fsr1l	equ	0xFE1
   804                           
   805                           	psect	dataBANK0
   806  0000C2                     __pdataBANK0:
   807                           	opt stack 0
   808  0000C2                     epoch_to_caltime@month_cache:
   809                           	opt stack 0
   810  0000C2                     	ds	1
   811  0000C3                     rx_loop@comm_buf_init:
   812                           	opt stack 0
   813  0000C3                     	ds	1
   814                           tblptru	equ	0xFF8
   815                           tblptrh	equ	0xFF7
   816                           tblptrl	equ	0xFF6
   817                           tablat	equ	0xFF5
   818                           postinc0	equ	0xFEE
   819                           wreg	equ	0xFE8
   820                           postdec1	equ	0xFE5
   821                           fsr1h	equ	0xFE2
   822                           fsr1l	equ	0xFE1
   823                           
   824                           	psect	bssBANK1
   825  0001C8                     __pbssBANK1:
   826                           	opt stack 0
   827  0001C8                     _light_mode:
   828                           	opt stack 0
   829  0001C8                     	ds	1
   830  0001C9                     _time_change_flag:
   831                           	opt stack 0
   832  0001C9                     	ds	1
   833  0001CA                     _rx_buf:
   834                           	opt stack 0
   835  0001CA                     	ds	8
   836  0001D2                     _tx_buf:
   837                           	opt stack 0
   838  0001D2                     	ds	8
   839  0001DA                     rx_loop@comm_buf:
   840                           	opt stack 0
   841  0001DA                     	ds	8
   842  0001E2                     _sw_B:
   843                           	opt stack 0
   844  0001E2                     	ds	4
   845  0001E6                     main@_2448:
   846                           	opt stack 0
   847  0001E6                     	ds	1
   848  0001E7                     main@n:
   849                           	opt stack 0
   850  0001E7                     	ds	1
   851                           tblptru	equ	0xFF8
   852                           tblptrh	equ	0xFF7
   853                           tblptrl	equ	0xFF6
   854                           tablat	equ	0xFF5
   855                           postinc0	equ	0xFEE
   856                           wreg	equ	0xFE8
   857                           postdec1	equ	0xFE5
   858                           fsr1h	equ	0xFE2
   859                           fsr1l	equ	0xFE1
   860                           
   861                           	psect	bssBANK3
   862  000300                     __pbssBANK3:
   863                           	opt stack 0
   864  000300                     main_init@rxbuf:
   865                           	opt stack 0
   866  000300                     	ds	250
   867                           tblptru	equ	0xFF8
   868                           tblptrh	equ	0xFF7
   869                           tblptrl	equ	0xFF6
   870                           tablat	equ	0xFF5
   871                           postinc0	equ	0xFEE
   872                           wreg	equ	0xFE8
   873                           postdec1	equ	0xFE5
   874                           fsr1h	equ	0xFE2
   875                           fsr1l	equ	0xFE1
   876                           
   877                           	psect	bssBIGRAM
   878  000464                     __pbssBIGRAM:
   879                           	opt stack 0
   880  000464                     main_init@txbuf:
   881                           	opt stack 0
   882  000464                     	ds	1000
   883                           tblptru	equ	0xFF8
   884                           tblptrh	equ	0xFF7
   885                           tblptrl	equ	0xFF6
   886                           tablat	equ	0xFF5
   887                           postinc0	equ	0xFEE
   888                           wreg	equ	0xFE8
   889                           postdec1	equ	0xFE5
   890                           fsr1h	equ	0xFE2
   891                           fsr1l	equ	0xFE1
   892                           
   893                           	psect	cstackBANK4
   894  000400                     __pcstackBANK4:
   895                           	opt stack 0
   896  000400                     rx_loop@opland2:
   897                           	opt stack 0
   898                           
   899                           ; 100 bytes @ 0x0
   900  000400                     	ds	100
   901                           tblptru	equ	0xFF8
   902                           tblptrh	equ	0xFF7
   903                           tblptrl	equ	0xFF6
   904                           tablat	equ	0xFF5
   905                           postinc0	equ	0xFEE
   906                           wreg	equ	0xFE8
   907                           postdec1	equ	0xFE5
   908                           fsr1h	equ	0xFE2
   909                           fsr1l	equ	0xFE1
   910                           
   911                           	psect	cstackBANK2
   912  000200                     __pcstackBANK2:
   913                           	opt stack 0
   914  000200                     rx_loop@opland3:
   915                           	opt stack 0
   916                           
   917                           ; 100 bytes @ 0x0
   918  000200                     	ds	100
   919  000264                     rx_loop@opland1:
   920                           	opt stack 0
   921                           
   922                           ; 100 bytes @ 0x64
   923  000264                     	ds	100
   924                           tblptru	equ	0xFF8
   925                           tblptrh	equ	0xFF7
   926                           tblptrl	equ	0xFF6
   927                           tablat	equ	0xFF5
   928                           postinc0	equ	0xFEE
   929                           wreg	equ	0xFE8
   930                           postdec1	equ	0xFE5
   931                           fsr1h	equ	0xFE2
   932                           fsr1l	equ	0xFE1
   933                           
   934                           	psect	cstackBANK1
   935  000100                     __pcstackBANK1:
   936                           	opt stack 0
   937  000100                     rx_loop@buf:
   938                           	opt stack 0
   939                           
   940                           ; 100 bytes @ 0x0
   941  000100                     	ds	100
   942  000164                     rx_loop@opcode:
   943                           	opt stack 0
   944                           
   945                           ; 100 bytes @ 0x64
   946  000164                     	ds	100
   947                           tblptru	equ	0xFF8
   948                           tblptrh	equ	0xFF7
   949                           tblptrl	equ	0xFF6
   950                           tablat	equ	0xFF5
   951                           postinc0	equ	0xFEE
   952                           wreg	equ	0xFE8
   953                           postdec1	equ	0xFE5
   954                           fsr1h	equ	0xFE2
   955                           fsr1l	equ	0xFE1
   956                           
   957                           	psect	cstackBANK0
   958  000060                     __pcstackBANK0:
   959                           	opt stack 0
   960  000060                     ??_ringbuf_num:
   961  000060                     ?___wmul:
   962                           	opt stack 0
   963  000060                     ?___llmod:
   964                           	opt stack 0
   965  000060                     ___awdiv@counter:
   966                           	opt stack 0
   967  000060                     ___awmod@counter:
   968                           	opt stack 0
   969  000060                     ringbuf_init@rb:
   970                           	opt stack 0
   971  000060                     ___wmul@multiplier:
   972                           	opt stack 0
   973  000060                     ___llmod@dividend:
   974                           	opt stack 0
   975                           
   976                           ; 4 bytes @ 0x0
   977  000060                     	ds	1
   978  000061                     ___awdiv@sign:
   979                           	opt stack 0
   980  000061                     ___awmod@sign:
   981                           	opt stack 0
   982                           
   983                           ; 1 bytes @ 0x1
   984  000061                     	ds	1
   985  000062                     ??_month_length:
   986  000062                     ringbuf_init@internal_buf:
   987                           	opt stack 0
   988  000062                     ___wmul@multiplicand:
   989                           	opt stack 0
   990  000062                     ___awdiv@quotient:
   991                           	opt stack 0
   992                           
   993                           ; 2 bytes @ 0x2
   994  000062                     	ds	2
   995  000064                     ringbuf_init@bufsize:
   996                           	opt stack 0
   997  000064                     caltime_to_RTCC@ct:
   998                           	opt stack 0
   999  000064                     ___wmul@product:
  1000                           	opt stack 0
  1001  000064                     ___llmod@divisor:
  1002                           	opt stack 0
  1003                           
  1004                           ; 4 bytes @ 0x4
  1005  000064                     	ds	2
  1006  000066                     ??_ringbuf_put:
  1007  000066                     ??_ringbuf_pop:
  1008  000066                     ??_ringbuf_backspace:
  1009  000066                     ?_my_atoi:
  1010                           	opt stack 0
  1011  000066                     ?___lwdiv:
  1012                           	opt stack 0
  1013  000066                     month_length@year:
  1014                           	opt stack 0
  1015  000066                     my_atoi@str:
  1016                           	opt stack 0
  1017  000066                     ___lwdiv@dividend:
  1018                           	opt stack 0
  1019                           
  1020                           ; 2 bytes @ 0x6
  1021  000066                     	ds	1
  1022  000067                     ?___lmul:
  1023                           	opt stack 0
  1024  000067                     ___lmul@multiplier:
  1025                           	opt stack 0
  1026                           
  1027                           ; 4 bytes @ 0x7
  1028  000067                     	ds	1
  1029  000068                     ??_my_atoi:
  1030  000068                     ___lwdiv@divisor:
  1031                           	opt stack 0
  1032                           
  1033                           ; 2 bytes @ 0x8
  1034  000068                     	ds	2
  1035  00006A                     tx_send@asciicode:
  1036                           	opt stack 0
  1037  00006A                     ___lwdiv@counter:
  1038                           	opt stack 0
  1039  00006A                     tx_sends@asciicode:
  1040                           	opt stack 0
  1041                           
  1042                           ; 2 bytes @ 0xA
  1043  00006A                     	ds	1
  1044  00006B                     ___lwdiv@quotient:
  1045                           	opt stack 0
  1046  00006B                     ___lmul@multiplicand:
  1047                           	opt stack 0
  1048                           
  1049                           ; 4 bytes @ 0xB
  1050  00006B                     	ds	1
  1051  00006C                     my_atoi@ret:
  1052                           	opt stack 0
  1053                           
  1054                           ; 2 bytes @ 0xC
  1055  00006C                     	ds	1
  1056  00006D                     tx_sendn@value:
  1057                           	opt stack 0
  1058  00006D                     my_utoa@str:
  1059                           	opt stack 0
  1060                           
  1061                           ; 2 bytes @ 0xD
  1062  00006D                     	ds	1
  1063  00006E                     PWM_set@value:
  1064                           	opt stack 0
  1065                           
  1066                           ; 2 bytes @ 0xE
  1067  00006E                     	ds	1
  1068  00006F                     tx_sendn@digits:
  1069                           	opt stack 0
  1070  00006F                     my_utoa@value:
  1071                           	opt stack 0
  1072  00006F                     ___lmul@product:
  1073                           	opt stack 0
  1074                           
  1075                           ; 4 bytes @ 0xF
  1076  00006F                     	ds	1
  1077  000070                     ??_PWM_set:
  1078  000070                     tx_sendn@i:
  1079                           	opt stack 0
  1080                           
  1081                           ; 1 bytes @ 0x10
  1082  000070                     	ds	1
  1083  000071                     my_utoa@digits:
  1084                           	opt stack 0
  1085  000071                     tx_sendn@temp:
  1086                           	opt stack 0
  1087                           
  1088                           ; 2 bytes @ 0x11
  1089  000071                     	ds	1
  1090  000072                     my_utoa@d:
  1091                           	opt stack 0
  1092                           
  1093                           ; 1 bytes @ 0x12
  1094  000072                     	ds	1
  1095  000073                     ?___lldiv:
  1096                           	opt stack 0
  1097  000073                     caltime_to_epoch@ct:
  1098                           	opt stack 0
  1099  000073                     my_utoa@v:
  1100                           	opt stack 0
  1101  000073                     ___lldiv@dividend:
  1102                           	opt stack 0
  1103                           
  1104                           ; 4 bytes @ 0x13
  1105  000073                     	ds	2
  1106  000075                     tx_send_dec@edit:
  1107                           	opt stack 0
  1108  000075                     caltime_to_epoch@ep:
  1109                           	opt stack 0
  1110                           
  1111                           ; 2 bytes @ 0x15
  1112  000075                     	ds	1
  1113  000076                     tx_send_dec@str:
  1114                           	opt stack 0
  1115                           
  1116                           ; 10 bytes @ 0x16
  1117  000076                     	ds	1
  1118  000077                     ??_caltime_to_epoch:
  1119  000077                     ___lldiv@divisor:
  1120                           	opt stack 0
  1121                           
  1122                           ; 4 bytes @ 0x17
  1123  000077                     	ds	4
  1124  00007B                     caltime_to_epoch@year:
  1125                           	opt stack 0
  1126  00007B                     ___lldiv@quotient:
  1127                           	opt stack 0
  1128                           
  1129                           ; 4 bytes @ 0x1B
  1130  00007B                     	ds	1
  1131  00007C                     caltime_to_epoch@month_1993:
  1132                           	opt stack 0
  1133                           
  1134                           ; 1 bytes @ 0x1C
  1135  00007C                     	ds	1
  1136  00007D                     caltime_to_epoch@epoch:
  1137                           	opt stack 0
  1138                           
  1139                           ; 4 bytes @ 0x1D
  1140  00007D                     	ds	2
  1141  00007F                     ___lldiv@counter:
  1142                           	opt stack 0
  1143                           
  1144                           ; 1 bytes @ 0x1F
  1145  00007F                     	ds	1
  1146  000080                     ?_get_quot_rem:
  1147                           	opt stack 0
  1148  000080                     tx_send_dec@dec:
  1149                           	opt stack 0
  1150  000080                     get_quot_rem@quot:
  1151                           	opt stack 0
  1152                           
  1153                           ; 2 bytes @ 0x20
  1154  000080                     	ds	1
  1155  000081                     caltime_to_epoch@month:
  1156                           	opt stack 0
  1157                           
  1158                           ; 1 bytes @ 0x21
  1159  000081                     	ds	1
  1160  000082                     get_quot_rem@div:
  1161                           	opt stack 0
  1162  000082                     RTCC_from_RTCC@ct:
  1163                           	opt stack 0
  1164                           
  1165                           ; 2 bytes @ 0x22
  1166  000082                     	ds	2
  1167  000084                     RTCC_from_RTCC@ep:
  1168                           	opt stack 0
  1169  000084                     get_quot_rem@num:
  1170                           	opt stack 0
  1171                           
  1172                           ; 4 bytes @ 0x24
  1173  000084                     	ds	4
  1174  000088                     epoch_to_caltime@ct:
  1175                           	opt stack 0
  1176                           
  1177                           ; 2 bytes @ 0x28
  1178  000088                     	ds	2
  1179  00008A                     epoch_to_caltime@ep:
  1180                           	opt stack 0
  1181                           
  1182                           ; 2 bytes @ 0x2A
  1183  00008A                     	ds	2
  1184  00008C                     ??_epoch_to_caltime:
  1185                           
  1186                           ; 0 bytes @ 0x2C
  1187  00008C                     	ds	2
  1188  00008E                     epoch_to_caltime@day_since_epoch:
  1189                           	opt stack 0
  1190                           
  1191                           ; 2 bytes @ 0x2E
  1192  00008E                     	ds	2
  1193  000090                     epoch_to_caltime@day:
  1194                           	opt stack 0
  1195                           
  1196                           ; 2 bytes @ 0x30
  1197  000090                     	ds	2
  1198  000092                     epoch_to_caltime@year:
  1199                           	opt stack 0
  1200                           
  1201                           ; 1 bytes @ 0x32
  1202  000092                     	ds	1
  1203  000093                     epoch_to_caltime@month:
  1204                           	opt stack 0
  1205                           
  1206                           ; 1 bytes @ 0x33
  1207  000093                     	ds	1
  1208  000094                     epoch_to_caltime@num:
  1209                           	opt stack 0
  1210                           
  1211                           ; 4 bytes @ 0x34
  1212  000094                     	ds	4
  1213  000098                     RTCC_from_caltime@ct:
  1214                           	opt stack 0
  1215  000098                     RTCC_from_epoch@ct:
  1216                           	opt stack 0
  1217                           
  1218                           ; 2 bytes @ 0x38
  1219  000098                     	ds	2
  1220  00009A                     RTCC_from_caltime@ep:
  1221                           	opt stack 0
  1222  00009A                     RTCC_from_epoch@ep:
  1223                           	opt stack 0
  1224                           
  1225                           ; 2 bytes @ 0x3A
  1226  00009A                     	ds	2
  1227  00009C                     comm_at@hand:
  1228                           	opt stack 0
  1229                           
  1230                           ; 2 bytes @ 0x3C
  1231  00009C                     	ds	2
  1232  00009E                     comm_at@min:
  1233                           	opt stack 0
  1234                           
  1235                           ; 1 bytes @ 0x3E
  1236  00009E                     	ds	1
  1237  00009F                     comm_at@max:
  1238                           	opt stack 0
  1239                           
  1240                           ; 1 bytes @ 0x3F
  1241  00009F                     	ds	1
  1242  0000A0                     comm_at@value:
  1243                           	opt stack 0
  1244                           
  1245                           ; 1 bytes @ 0x40
  1246  0000A0                     	ds	1
  1247  0000A1                     command_operation@opcode:
  1248                           	opt stack 0
  1249                           
  1250                           ; 2 bytes @ 0x41
  1251  0000A1                     	ds	2
  1252  0000A3                     command_operation@opland1:
  1253                           	opt stack 0
  1254                           
  1255                           ; 2 bytes @ 0x43
  1256  0000A3                     	ds	2
  1257  0000A5                     command_operation@opland2:
  1258                           	opt stack 0
  1259                           
  1260                           ; 2 bytes @ 0x45
  1261  0000A5                     	ds	2
  1262  0000A7                     command_operation@opland3:
  1263                           	opt stack 0
  1264                           
  1265                           ; 2 bytes @ 0x47
  1266  0000A7                     	ds	2
  1267  0000A9                     _command_operation$3053:
  1268                           	opt stack 0
  1269                           
  1270                           ; 1 bytes @ 0x49
  1271  0000A9                     	ds	1
  1272  0000AA                     ??_rx_loop:
  1273                           
  1274                           ; 0 bytes @ 0x4A
  1275  0000AA                     	ds	2
  1276  0000AC                     _rx_loop$3054:
  1277                           	opt stack 0
  1278                           
  1279                           ; 2 bytes @ 0x4C
  1280  0000AC                     	ds	2
  1281  0000AE                     rx_loop@i_2372:
  1282                           	opt stack 0
  1283                           
  1284                           ; 1 bytes @ 0x4E
  1285  0000AE                     	ds	1
  1286  0000AF                     rx_loop@ascii:
  1287                           	opt stack 0
  1288                           
  1289                           ; 1 bytes @ 0x4F
  1290  0000AF                     	ds	1
  1291  0000B0                     rx_loop@i:
  1292                           	opt stack 0
  1293                           
  1294                           ; 1 bytes @ 0x50
  1295  0000B0                     	ds	1
  1296  0000B1                     ??_main:
  1297                           
  1298                           ; 0 bytes @ 0x51
  1299  0000B1                     	ds	4
  1300  0000B5                     main@scan:
  1301                           	opt stack 0
  1302                           
  1303                           ; 2 bytes @ 0x55
  1304  0000B5                     	ds	2
  1305  0000B7                     main@value:
  1306                           	opt stack 0
  1307                           
  1308                           ; 1 bytes @ 0x57
  1309  0000B7                     	ds	1
  1310  0000B8                     main@value_2449:
  1311                           	opt stack 0
  1312                           
  1313                           ; 1 bytes @ 0x58
  1314  0000B8                     	ds	1
  1315  0000B9                     main@i:
  1316                           	opt stack 0
  1317                           
  1318                           ; 2 bytes @ 0x59
  1319  0000B9                     	ds	2
  1320  0000BB                     main@temp:
  1321                           	opt stack 0
  1322                           
  1323                           ; 4 bytes @ 0x5B
  1324  0000BB                     	ds	4
  1325                           tblptru	equ	0xFF8
  1326                           tblptrh	equ	0xFF7
  1327                           tblptrl	equ	0xFF6
  1328                           tablat	equ	0xFF5
  1329                           postinc0	equ	0xFEE
  1330                           wreg	equ	0xFE8
  1331                           postdec1	equ	0xFE5
  1332                           fsr1h	equ	0xFE2
  1333                           fsr1l	equ	0xFE1
  1334                           
  1335                           	psect	cstackCOMRAM
  1336  000001                     __pcstackCOMRAM:
  1337                           	opt stack 0
  1338  000001                     ?i2_ringbuf_num:
  1339                           	opt stack 0
  1340  000001                     button_timer_interrupt@bt:
  1341                           	opt stack 0
  1342  000001                     i2ringbuf_num@rb:
  1343                           	opt stack 0
  1344                           
  1345                           ; 2 bytes @ 0x0
  1346  000001                     	ds	2
  1347  000003                     ??i2_ringbuf_num:
  1348  000003                     button_timer_interrupt@sw_value:
  1349                           	opt stack 0
  1350                           
  1351                           ; 1 bytes @ 0x2
  1352  000003                     	ds	1
  1353  000004                     
  1354                           ; 0 bytes @ 0x3
  1355  000004                     	ds	5
  1356  000009                     i2ringbuf_put@rb:
  1357                           	opt stack 0
  1358  000009                     i2ringbuf_pop@rb:
  1359                           	opt stack 0
  1360                           
  1361                           ; 2 bytes @ 0x8
  1362  000009                     	ds	2
  1363  00000B                     ??i2_ringbuf_pop:
  1364  00000B                     i2ringbuf_put@asciicode:
  1365                           	opt stack 0
  1366                           
  1367                           ; 1 bytes @ 0xA
  1368  00000B                     	ds	1
  1369  00000C                     ??i2_ringbuf_put:
  1370                           
  1371                           ; 0 bytes @ 0xB
  1372  00000C                     	ds	3
  1373  00000F                     i2ringbuf_pop@ret:
  1374                           	opt stack 0
  1375                           
  1376                           ; 1 bytes @ 0xE
  1377  00000F                     	ds	1
  1378  000010                     UART_ISR@ascii:
  1379                           	opt stack 0
  1380                           
  1381                           ; 1 bytes @ 0xF
  1382  000010                     	ds	1
  1383  000011                     ??_ISR:
  1384                           
  1385                           ; 0 bytes @ 0x10
  1386  000011                     	ds	14
  1387  00001F                     ??_timer3_init:
  1388  00001F                     ??_x_to_d:
  1389  00001F                     ?_ADC:
  1390                           	opt stack 0
  1391  00001F                     ?_ringbuf_num:
  1392                           	opt stack 0
  1393  00001F                     ?___awdiv:
  1394                           	opt stack 0
  1395  00001F                     ?___awmod:
  1396                           	opt stack 0
  1397  00001F                     ?___lwmod:
  1398                           	opt stack 0
  1399  00001F                     timer1_init@clock_select:
  1400                           	opt stack 0
  1401  00001F                     ADC_init@p_ref:
  1402                           	opt stack 0
  1403  00001F                     RTCC_loop@GIE_cache:
  1404                           	opt stack 0
  1405  00001F                     PWM_init@PR:
  1406                           	opt stack 0
  1407  00001F                     ___llmod@counter:
  1408                           	opt stack 0
  1409  00001F                     ringbuf_num@rb:
  1410                           	opt stack 0
  1411  00001F                     ringbuf_delete@rb:
  1412                           	opt stack 0
  1413  00001F                     my_strcmp@str1:
  1414                           	opt stack 0
  1415  00001F                     ___awdiv@dividend:
  1416                           	opt stack 0
  1417  00001F                     ___awmod@dividend:
  1418                           	opt stack 0
  1419  00001F                     ___lwmod@dividend:
  1420                           	opt stack 0
  1421                           
  1422                           ; 2 bytes @ 0x1E
  1423  00001F                     	ds	1
  1424  000020                     ??_timer1_init:
  1425  000020                     timer3_init@prescaler:
  1426                           	opt stack 0
  1427  000020                     x_to_d@hex:
  1428                           	opt stack 0
  1429                           
  1430                           ; 1 bytes @ 0x1F
  1431  000020                     	ds	1
  1432  000021                     ??_ADC:
  1433  000021                     timer1_init@prescaler:
  1434                           	opt stack 0
  1435  000021                     ringbuf_put@rb:
  1436                           	opt stack 0
  1437  000021                     ringbuf_pop@rb:
  1438                           	opt stack 0
  1439  000021                     ringbuf_backspace@rb:
  1440                           	opt stack 0
  1441  000021                     RTCC_to_caltime@ct:
  1442                           	opt stack 0
  1443  000021                     my_strcmp@str2:
  1444                           	opt stack 0
  1445  000021                     ___awdiv@divisor:
  1446                           	opt stack 0
  1447  000021                     ___awmod@divisor:
  1448                           	opt stack 0
  1449  000021                     ___lwmod@divisor:
  1450                           	opt stack 0
  1451                           
  1452                           ; 2 bytes @ 0x20
  1453  000021                     	ds	1
  1454  000022                     ADC@ch:
  1455                           	opt stack 0
  1456                           
  1457                           ; 1 bytes @ 0x21
  1458  000022                     	ds	1
  1459  000023                     ??_my_strcmp:
  1460  000023                     ringbuf_put@asciicode:
  1461                           	opt stack 0
  1462  000023                     ringbuf_pop@ret:
  1463                           	opt stack 0
  1464  000023                     d_to_x@dec:
  1465                           	opt stack 0
  1466  000023                     month_length@month:
  1467                           	opt stack 0
  1468  000023                     RTCC_to_caltime@dumy:
  1469                           	opt stack 0
  1470  000023                     PWM_set@color:
  1471                           	opt stack 0
  1472  000023                     ___lwmod@counter:
  1473                           	opt stack 0
  1474                           
  1475                           ; 1 bytes @ 0x22
  1476  000023                     	ds	1
  1477  000024                     tblptru	equ	0xFF8
  1478                           tblptrh	equ	0xFF7
  1479                           tblptrl	equ	0xFF6
  1480                           tablat	equ	0xFF5
  1481                           postinc0	equ	0xFEE
  1482                           wreg	equ	0xFE8
  1483                           postdec1	equ	0xFE5
  1484                           fsr1h	equ	0xFE2
  1485                           fsr1l	equ	0xFE1
  1486                           
  1487                           ; 0 bytes @ 0x23
  1488 ;;
  1489 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1490 ;;
  1491 ;; *************** function _main *****************
  1492 ;; Defined at:
  1493 ;;		line 361 in file "PIC18F27J53-killifish_light02.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;		None
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  scan            2   85[BANK0 ] unsigned int 
  1498 ;;  temp            4   91[BANK0 ] unsigned long 
  1499 ;;  value           1   88[BANK0 ] unsigned char 
  1500 ;;  value           1   87[BANK0 ] unsigned char 
  1501 ;;  i               2   89[BANK0 ] unsigned int 
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  2  599[None  ] int 
  1504 ;; Registers used:
  1505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1512 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1513 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1514 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1515 ;;Total ram usage:       14 bytes
  1516 ;; Hardware stack levels required when called:   12
  1517 ;; This function calls:
  1518 ;;		_ADC
  1519 ;;		_PWM_set
  1520 ;;		_RTCC_from_RTCC
  1521 ;;		_RTCC_from_epoch
  1522 ;;		_RTCC_loop
  1523 ;;		___lldiv
  1524 ;;		___llmod
  1525 ;;		___lmul
  1526 ;;		___lwdiv
  1527 ;;		___wmul
  1528 ;;		_main_init
  1529 ;;		_rx_loop
  1530 ;; This function is called by:
  1531 ;;		Startup code after reset
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           	psect	text0
  1536  01050E                     __ptext0:
  1537                           	opt stack 0
  1538  01050E                     _main:
  1539                           	opt stack 19
  1540                           
  1541                           ;PIC18F27J53-killifish_light02.c: 362: main_init();
  1542                           
  1543                           ;incstack = 0
  1544  01050E  EC5C  F090         	call	_main_init	;wreg free
  1545                           
  1546                           ;PIC18F27J53-killifish_light02.c: 363: INTCONbits.GIE = 1;
  1547  010512  8EF2               	bsf	intcon,7,c	;volatile
  1548                           
  1549                           ;PIC18F27J53-killifish_light02.c: 365: RTCC_from_RTCC(&caltime_now, &epoch_now);
  1550  010514  0E2F               	movlw	low _caltime_now
  1551  010516  0100               	movlb	0	; () banked
  1552  010518  6F82               	movwf	RTCC_from_RTCC@ct& (0+255),b
  1553  01051A  0E00               	movlw	high _caltime_now
  1554  01051C  0100               	movlb	0	; () banked
  1555  01051E  6F83               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  1556  010520  0E36               	movlw	low _epoch_now
  1557  010522  0100               	movlb	0	; () banked
  1558  010524  6F84               	movwf	RTCC_from_RTCC@ep& (0+255),b
  1559  010526  0E00               	movlw	high _epoch_now
  1560  010528  0100               	movlb	0	; () banked
  1561  01052A  6F85               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  1562  01052C  EC31  F094         	call	_RTCC_from_RTCC	;wreg free
  1563                           
  1564                           ;PIC18F27J53-killifish_light02.c: 366: if (caltime_now.DD == 0) {
  1565  010530  5033               	movf	_caltime_now+4,w,c
  1566  010532  A4D8               	btfss	status,2,c
  1567  010534  D017               	goto	l5150
  1568                           
  1569                           ;PIC18F27J53-killifish_light02.c: 367: epoch_now = 0;
  1570  010536  0E00               	movlw	0
  1571  010538  6E36               	movwf	_epoch_now,c
  1572  01053A  0E00               	movlw	0
  1573  01053C  6E37               	movwf	_epoch_now+1,c
  1574  01053E  0E00               	movlw	0
  1575  010540  6E38               	movwf	_epoch_now+2,c
  1576  010542  0E00               	movlw	0
  1577  010544  6E39               	movwf	_epoch_now+3,c
  1578                           
  1579                           ;PIC18F27J53-killifish_light02.c: 368: RTCC_from_epoch(&caltime_now, &epoch_now);
  1580  010546  0E2F               	movlw	low _caltime_now
  1581  010548  0100               	movlb	0	; () banked
  1582  01054A  6F98               	movwf	RTCC_from_epoch@ct& (0+255),b
  1583  01054C  0E00               	movlw	high _caltime_now
  1584  01054E  0100               	movlb	0	; () banked
  1585  010550  6F99               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  1586  010552  0E36               	movlw	low _epoch_now
  1587  010554  0100               	movlb	0	; () banked
  1588  010556  6F9A               	movwf	RTCC_from_epoch@ep& (0+255),b
  1589  010558  0E00               	movlw	high _epoch_now
  1590  01055A  0100               	movlb	0	; () banked
  1591  01055C  6F9B               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  1592  01055E  EC42  F094         	call	_RTCC_from_epoch	;wreg free
  1593  010562  D000               	goto	l5150
  1594  010564                     l5150:
  1595                           
  1596                           ;PIC18F27J53-killifish_light02.c: 373: RTCC_loop();
  1597  010564  EC62  F093         	call	_RTCC_loop	;wreg free
  1598                           
  1599                           ;PIC18F27J53-killifish_light02.c: 374: rx_loop();
  1600  010568  EC4F  F084         	call	_rx_loop	;wreg free
  1601                           
  1602                           ;PIC18F27J53-killifish_light02.c: 375: if (time_change_flag) {
  1603  01056C  0101               	movlb	1	; () banked
  1604  01056E  51C9               	movf	_time_change_flag& (0+255),w,b
  1605  010570  B4D8               	btfsc	status,2,c
  1606  010572  D0D9               	goto	l5182
  1607                           
  1608                           ; BSR set to: 1
  1609                           ;PIC18F27J53-killifish_light02.c: 376: time_change_flag = 0;
  1610  010574  0E00               	movlw	0
  1611  010576  0101               	movlb	1	; () banked
  1612  010578  6FC9               	movwf	_time_change_flag& (0+255),b
  1613                           
  1614                           ; BSR set to: 1
  1615                           ;PIC18F27J53-killifish_light02.c: 377: RTCC_from_RTCC(&caltime_now, &epoch_now);
  1616  01057A  0E2F               	movlw	low _caltime_now
  1617  01057C  0100               	movlb	0	; () banked
  1618  01057E  6F82               	movwf	RTCC_from_RTCC@ct& (0+255),b
  1619  010580  0E00               	movlw	high _caltime_now
  1620  010582  0100               	movlb	0	; () banked
  1621  010584  6F83               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  1622  010586  0E36               	movlw	low _epoch_now
  1623  010588  0100               	movlb	0	; () banked
  1624  01058A  6F84               	movwf	RTCC_from_RTCC@ep& (0+255),b
  1625  01058C  0E00               	movlw	high _epoch_now
  1626  01058E  0100               	movlb	0	; () banked
  1627  010590  6F85               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  1628  010592  EC31  F094         	call	_RTCC_from_RTCC	;wreg free
  1629                           
  1630                           ;PIC18F27J53-killifish_light02.c: 378: if (light_mode == TIME_SYNC_mode) {
  1631  010596  0101               	movlb	1	; () banked
  1632  010598  51C8               	movf	_light_mode& (0+255),w,b
  1633  01059A  A4D8               	btfss	status,2,c
  1634  01059C  D0C4               	goto	l5182
  1635                           
  1636                           ; BSR set to: 1
  1637                           ;PIC18F27J53-killifish_light02.c: 379: epoch_t temp = (epoch_t) epoch_now % ((epoch_t)60
      +                          *60*24);
  1638  01059E  C036  F060         	movff	_epoch_now,___llmod@dividend
  1639  0105A2  C037  F061         	movff	_epoch_now+1,___llmod@dividend+1
  1640  0105A6  C038  F062         	movff	_epoch_now+2,___llmod@dividend+2
  1641  0105AA  C039  F063         	movff	_epoch_now+3,___llmod@dividend+3
  1642  0105AE  0E80               	movlw	128
  1643  0105B0  0100               	movlb	0	; () banked
  1644  0105B2  6F64               	movwf	___llmod@divisor& (0+255),b
  1645  0105B4  0E51               	movlw	81
  1646  0105B6  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  1647  0105B8  0E01               	movlw	1
  1648  0105BA  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  1649  0105BC  0E00               	movlw	0
  1650  0105BE  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  1651  0105C0  ECBF  F08F         	call	___llmod	;wreg free
  1652  0105C4  C060  F0BB         	movff	?___llmod,main@temp
  1653  0105C8  C061  F0BC         	movff	?___llmod+1,main@temp+1
  1654  0105CC  C062  F0BD         	movff	?___llmod+2,main@temp+2
  1655  0105D0  C063  F0BE         	movff	?___llmod+3,main@temp+3
  1656                           
  1657                           ;PIC18F27J53-killifish_light02.c: 380: if (temp > ((epoch_t)60*60*24) / 2)temp = ((epoch
      +                          _t)60*60*24) - temp;
  1658  0105D4  0100               	movlb	0	; () banked
  1659  0105D6  51BE               	movf	(main@temp+3)& (0+255),w,b
  1660  0105D8  0100               	movlb	0	; () banked
  1661  0105DA  11BD               	iorwf	(main@temp+2)& (0+255),w,b
  1662  0105DC  E108               	bnz	u5790
  1663  0105DE  0EC1               	movlw	193
  1664  0105E0  0100               	movlb	0	; () banked
  1665  0105E2  5DBB               	subwf	main@temp& (0+255),w,b
  1666  0105E4  0EA8               	movlw	168
  1667  0105E6  0100               	movlb	0	; () banked
  1668  0105E8  59BC               	subwfb	(main@temp+1)& (0+255),w,b
  1669  0105EA  A0D8               	btfss	status,0,c
  1670  0105EC  D027               	goto	l5168
  1671  0105EE                     u5790:
  1672                           
  1673                           ; BSR set to: 0
  1674  0105EE  C0BB  F0B1         	movff	main@temp,??_main
  1675  0105F2  C0BC  F0B2         	movff	main@temp+1,??_main+1
  1676  0105F6  C0BD  F0B3         	movff	main@temp+2,??_main+2
  1677  0105FA  C0BE  F0B4         	movff	main@temp+3,??_main+3
  1678  0105FE  0100               	movlb	0	; () banked
  1679  010600  1FB1               	comf	??_main& (0+255),f,b
  1680  010602  1FB2               	comf	(??_main+1)& (0+255),f,b
  1681  010604  1FB3               	comf	(??_main+2)& (0+255),f,b
  1682  010606  1FB4               	comf	(??_main+3)& (0+255),f,b
  1683  010608  2BB1               	incf	??_main& (0+255),f,b
  1684  01060A  0E00               	movlw	0
  1685  01060C  23B2               	addwfc	(??_main+1)& (0+255),f,b
  1686  01060E  23B3               	addwfc	(??_main+2)& (0+255),f,b
  1687  010610  23B4               	addwfc	(??_main+3)& (0+255),f,b
  1688  010612  0E80               	movlw	128
  1689  010614  0100               	movlb	0	; () banked
  1690  010616  25B1               	addwf	??_main& (0+255),w,b
  1691  010618  0100               	movlb	0	; () banked
  1692  01061A  6FBB               	movwf	main@temp& (0+255),b
  1693  01061C  0E51               	movlw	81
  1694  01061E  0100               	movlb	0	; () banked
  1695  010620  21B2               	addwfc	(??_main+1)& (0+255),w,b
  1696  010622  0100               	movlb	0	; () banked
  1697  010624  6FBC               	movwf	(main@temp+1)& (0+255),b
  1698  010626  0E01               	movlw	1
  1699  010628  0100               	movlb	0	; () banked
  1700  01062A  21B3               	addwfc	(??_main+2)& (0+255),w,b
  1701  01062C  0100               	movlb	0	; () banked
  1702  01062E  6FBD               	movwf	(main@temp+2)& (0+255),b
  1703  010630  0E00               	movlw	0
  1704  010632  0100               	movlb	0	; () banked
  1705  010634  21B4               	addwfc	(??_main+3)& (0+255),w,b
  1706  010636  0100               	movlb	0	; () banked
  1707  010638  6FBE               	movwf	(main@temp+3)& (0+255),b
  1708  01063A  D000               	goto	l5168
  1709  01063C                     l5168:
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;PIC18F27J53-killifish_light02.c: 381: temp = temp * 2 * 100 / ((epoch_t)60*60*24);
  1713  01063C  90D8               	bcf	status,0,c
  1714  01063E  0100               	movlb	0	; () banked
  1715  010640  35BB               	rlcf	main@temp& (0+255),w,b
  1716  010642  0100               	movlb	0	; () banked
  1717  010644  6F67               	movwf	___lmul@multiplier& (0+255),b
  1718  010646  0100               	movlb	0	; () banked
  1719  010648  35BC               	rlcf	(main@temp+1)& (0+255),w,b
  1720  01064A  0100               	movlb	0	; () banked
  1721  01064C  6F68               	movwf	(___lmul@multiplier+1)& (0+255),b
  1722  01064E  0100               	movlb	0	; () banked
  1723  010650  35BD               	rlcf	(main@temp+2)& (0+255),w,b
  1724  010652  0100               	movlb	0	; () banked
  1725  010654  6F69               	movwf	(___lmul@multiplier+2)& (0+255),b
  1726  010656  0100               	movlb	0	; () banked
  1727  010658  35BE               	rlcf	(main@temp+3)& (0+255),w,b
  1728  01065A  0100               	movlb	0	; () banked
  1729  01065C  6F6A               	movwf	(___lmul@multiplier+3)& (0+255),b
  1730  01065E  0E64               	movlw	100
  1731  010660  0100               	movlb	0	; () banked
  1732  010662  6F6B               	movwf	___lmul@multiplicand& (0+255),b
  1733  010664  0E00               	movlw	0
  1734  010666  6F6C               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1735  010668  0E00               	movlw	0
  1736  01066A  6F6D               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1737  01066C  0E00               	movlw	0
  1738  01066E  6F6E               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1739  010670  ECB4  F091         	call	___lmul	;wreg free
  1740  010674  C067  F073         	movff	?___lmul,___lldiv@dividend
  1741  010678  C068  F074         	movff	?___lmul+1,___lldiv@dividend+1
  1742  01067C  C069  F075         	movff	?___lmul+2,___lldiv@dividend+2
  1743  010680  C06A  F076         	movff	?___lmul+3,___lldiv@dividend+3
  1744  010684  0E80               	movlw	128
  1745  010686  0100               	movlb	0	; () banked
  1746  010688  6F77               	movwf	___lldiv@divisor& (0+255),b
  1747  01068A  0E51               	movlw	81
  1748  01068C  6F78               	movwf	(___lldiv@divisor+1)& (0+255),b
  1749  01068E  0E01               	movlw	1
  1750  010690  6F79               	movwf	(___lldiv@divisor+2)& (0+255),b
  1751  010692  0E00               	movlw	0
  1752  010694  6F7A               	movwf	(___lldiv@divisor+3)& (0+255),b
  1753  010696  EC91  F08C         	call	___lldiv	;wreg free
  1754  01069A  C073  F0BB         	movff	?___lldiv,main@temp
  1755  01069E  C074  F0BC         	movff	?___lldiv+1,main@temp+1
  1756  0106A2  C075  F0BD         	movff	?___lldiv+2,main@temp+2
  1757  0106A6  C076  F0BE         	movff	?___lldiv+3,main@temp+3
  1758                           
  1759                           ;PIC18F27J53-killifish_light02.c: 382: temp *= 2;
  1760  0106AA  0100               	movlb	0	; () banked
  1761  0106AC  90D8               	bcf	status,0,c
  1762  0106AE  37BB               	rlcf	main@temp& (0+255),f,b
  1763  0106B0  37BC               	rlcf	(main@temp+1)& (0+255),f,b
  1764  0106B2  37BD               	rlcf	(main@temp+2)& (0+255),f,b
  1765  0106B4  37BE               	rlcf	(main@temp+3)& (0+255),f,b
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;PIC18F27J53-killifish_light02.c: 383: temp /= 3;
  1769  0106B6  C0BB  F073         	movff	main@temp,___lldiv@dividend
  1770  0106BA  C0BC  F074         	movff	main@temp+1,___lldiv@dividend+1
  1771  0106BE  C0BD  F075         	movff	main@temp+2,___lldiv@dividend+2
  1772  0106C2  C0BE  F076         	movff	main@temp+3,___lldiv@dividend+3
  1773  0106C6  0E03               	movlw	3
  1774  0106C8  0100               	movlb	0	; () banked
  1775  0106CA  6F77               	movwf	___lldiv@divisor& (0+255),b
  1776  0106CC  0E00               	movlw	0
  1777  0106CE  6F78               	movwf	(___lldiv@divisor+1)& (0+255),b
  1778  0106D0  0E00               	movlw	0
  1779  0106D2  6F79               	movwf	(___lldiv@divisor+2)& (0+255),b
  1780  0106D4  0E00               	movlw	0
  1781  0106D6  6F7A               	movwf	(___lldiv@divisor+3)& (0+255),b
  1782  0106D8  EC91  F08C         	call	___lldiv	;wreg free
  1783  0106DC  C073  F0BB         	movff	?___lldiv,main@temp
  1784  0106E0  C074  F0BC         	movff	?___lldiv+1,main@temp+1
  1785  0106E4  C075  F0BD         	movff	?___lldiv+2,main@temp+2
  1786  0106E8  C076  F0BE         	movff	?___lldiv+3,main@temp+3
  1787                           
  1788                           ;PIC18F27J53-killifish_light02.c: 384: PWM_set(0, temp);
  1789  0106EC  C0BB  F06E         	movff	main@temp,PWM_set@value
  1790  0106F0  C0BC  F06F         	movff	main@temp+1,PWM_set@value+1
  1791  0106F4  0E00               	movlw	0
  1792  0106F6  EC4E  F089         	call	_PWM_set
  1793                           
  1794                           ;PIC18F27J53-killifish_light02.c: 385: PWM_set(1, temp);
  1795  0106FA  C0BB  F06E         	movff	main@temp,PWM_set@value
  1796  0106FE  C0BC  F06F         	movff	main@temp+1,PWM_set@value+1
  1797  010702  0E01               	movlw	1
  1798  010704  EC4E  F089         	call	_PWM_set
  1799                           
  1800                           ;PIC18F27J53-killifish_light02.c: 386: PWM_set(2, temp);
  1801  010708  C0BB  F06E         	movff	main@temp,PWM_set@value
  1802  01070C  C0BC  F06F         	movff	main@temp+1,PWM_set@value+1
  1803  010710  0E02               	movlw	2
  1804  010712  EC4E  F089         	call	_PWM_set
  1805                           
  1806                           ;PIC18F27J53-killifish_light02.c: 387: PWM_set(3, temp);
  1807  010716  C0BB  F06E         	movff	main@temp,PWM_set@value
  1808  01071A  C0BC  F06F         	movff	main@temp+1,PWM_set@value+1
  1809  01071E  0E03               	movlw	3
  1810  010720  EC4E  F089         	call	_PWM_set
  1811  010724  D000               	goto	l5182
  1812  010726                     l5182:
  1813                           
  1814                           ;PIC18F27J53-killifish_light02.c: 388: }
  1815                           ;PIC18F27J53-killifish_light02.c: 389: }
  1816                           ;PIC18F27J53-killifish_light02.c: 390: if (light_mode == ADC_mode) {
  1817  010726  0101               	movlb	1	; () banked
  1818  010728  05C8               	decf	_light_mode& (0+255),w,b
  1819  01072A  A4D8               	btfss	status,2,c
  1820  01072C  D04A               	goto	l605
  1821                           
  1822                           ; BSR set to: 1
  1823                           ;PIC18F27J53-killifish_light02.c: 391: PWM_set(3, 0);
  1824  01072E  0E00               	movlw	0
  1825  010730  0100               	movlb	0	; () banked
  1826  010732  6F6F               	movwf	(PWM_set@value+1)& (0+255),b
  1827  010734  0E00               	movlw	0
  1828  010736  6F6E               	movwf	PWM_set@value& (0+255),b
  1829  010738  0E03               	movlw	3
  1830  01073A  EC4E  F089         	call	_PWM_set
  1831                           
  1832                           ;PIC18F27J53-killifish_light02.c: 392: for (i = 0; i < 3; i++) {
  1833  01073E  0E00               	movlw	0
  1834  010740  0100               	movlb	0	; () banked
  1835  010742  6FBA               	movwf	(main@i+1)& (0+255),b
  1836  010744  0E00               	movlw	0
  1837  010746  6FB9               	movwf	main@i& (0+255),b
  1838  010748                     l5188:
  1839                           
  1840                           ; BSR set to: 0
  1841  010748  0100               	movlb	0	; () banked
  1842  01074A  51BA               	movf	(main@i+1)& (0+255),w,b
  1843  01074C  E13A               	bnz	l605
  1844  01074E  0E03               	movlw	3
  1845  010750  0100               	movlb	0	; () banked
  1846  010752  5DB9               	subwf	main@i& (0+255),w,b
  1847  010754  B0D8               	btfsc	status,0,c
  1848  010756  D035               	goto	l605
  1849  010758  D001               	goto	l5192
  1850                           
  1851                           ; BSR set to: 0
  1852  01075A  D033               	goto	l605
  1853  01075C                     l5192:
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;PIC18F27J53-killifish_light02.c: 393: uint16_t scan = (ADC(i) >> 4) * 100 / 255;
  1857  01075C  0100               	movlb	0	; () banked
  1858  01075E  51B9               	movf	main@i& (0+255),w,b
  1859  010760  ECF8  F093         	call	_ADC
  1860  010764  0E04               	movlw	4
  1861  010766  0100               	movlb	0	; () banked
  1862  010768  6FB1               	movwf	??_main& (0+255),b
  1863  01076A                     u5825:
  1864  01076A  90D8               	bcf	status,0,c
  1865  01076C  3220               	rrcf	?_ADC+1,f,c
  1866  01076E  321F               	rrcf	?_ADC,f,c
  1867  010770  0100               	movlb	0	; () banked
  1868  010772  2FB1               	decfsz	??_main& (0+255),f,b
  1869  010774  D7FA               	goto	u5825
  1870  010776  C01F  F060         	movff	?_ADC,___wmul@multiplier
  1871  01077A  C020  F061         	movff	?_ADC+1,___wmul@multiplier+1
  1872  01077E  0E00               	movlw	0
  1873  010780  0100               	movlb	0	; () banked
  1874  010782  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1875  010784  0E64               	movlw	100
  1876  010786  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1877  010788  ECA9  F093         	call	___wmul	;wreg free
  1878  01078C  C060  F066         	movff	?___wmul,___lwdiv@dividend
  1879  010790  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  1880  010794  0E00               	movlw	0
  1881  010796  0100               	movlb	0	; () banked
  1882  010798  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1883  01079A  6968               	setf	___lwdiv@divisor& (0+255),b
  1884  01079C  EC73  F091         	call	___lwdiv	;wreg free
  1885  0107A0  C066  F0B5         	movff	?___lwdiv,main@scan
  1886  0107A4  C067  F0B6         	movff	?___lwdiv+1,main@scan+1
  1887                           
  1888                           ;PIC18F27J53-killifish_light02.c: 394: PWM_set(i, scan);
  1889  0107A8  C0B5  F06E         	movff	main@scan,PWM_set@value
  1890  0107AC  C0B6  F06F         	movff	main@scan+1,PWM_set@value+1
  1891  0107B0  0100               	movlb	0	; () banked
  1892  0107B2  51B9               	movf	main@i& (0+255),w,b
  1893  0107B4  EC4E  F089         	call	_PWM_set
  1894  0107B8  0100               	movlb	0	; () banked
  1895  0107BA  4BB9               	infsnz	main@i& (0+255),f,b
  1896  0107BC  2BBA               	incf	(main@i+1)& (0+255),f,b
  1897  0107BE  D7C4               	goto	l5188
  1898                           
  1899                           ; BSR set to: 0
  1900  0107C0  D000               	goto	l605
  1901  0107C2                     l605:
  1902                           
  1903                           ;PIC18F27J53-killifish_light02.c: 395: }
  1904                           ;PIC18F27J53-killifish_light02.c: 396: }
  1905                           ;PIC18F27J53-killifish_light02.c: 397: if (sw_R.flag.press) {
  1906  0107C2  A040               	btfss	_sw_R+2,0,c
  1907  0107C4  D008               	goto	l5200
  1908                           
  1909                           ;PIC18F27J53-killifish_light02.c: 398: sw_R.flags = 0;
  1910  0107C6  0E00               	movlw	0
  1911  0107C8  6E41               	movwf	_sw_R+3,c
  1912  0107CA  0E00               	movlw	0
  1913  0107CC  6E40               	movwf	_sw_R+2,c
  1914                           
  1915                           ;PIC18F27J53-killifish_light02.c: 399: light_mode = TIME_SYNC_mode;
  1916  0107CE  0E00               	movlw	0
  1917  0107D0  0101               	movlb	1	; () banked
  1918  0107D2  6FC8               	movwf	_light_mode& (0+255),b
  1919  0107D4  D000               	goto	l5200
  1920  0107D6                     l5200:
  1921                           
  1922                           ;PIC18F27J53-killifish_light02.c: 400: }
  1923                           ;PIC18F27J53-killifish_light02.c: 401: if (sw_R.flag.long_holding_1) {
  1924  0107D6  A241               	btfss	_sw_R+3,1,c
  1925  0107D8  D008               	goto	l5204
  1926                           
  1927                           ;PIC18F27J53-killifish_light02.c: 402: sw_R.flags = 0;
  1928  0107DA  0E00               	movlw	0
  1929  0107DC  6E41               	movwf	_sw_R+3,c
  1930  0107DE  0E00               	movlw	0
  1931  0107E0  6E40               	movwf	_sw_R+2,c
  1932                           
  1933                           ;PIC18F27J53-killifish_light02.c: 403: light_mode = ADC_mode;
  1934  0107E2  0E01               	movlw	1
  1935  0107E4  0101               	movlb	1	; () banked
  1936  0107E6  6FC8               	movwf	_light_mode& (0+255),b
  1937  0107E8  D000               	goto	l5204
  1938  0107EA                     l5204:
  1939                           
  1940                           ;PIC18F27J53-killifish_light02.c: 404: }
  1941                           ;PIC18F27J53-killifish_light02.c: 405: if (sw_G.flag.press) {
  1942  0107EA  A03C               	btfss	_sw_G+2,0,c
  1943  0107EC  D033               	goto	l610
  1944                           
  1945                           ;PIC18F27J53-killifish_light02.c: 406: sw_G.flags = 0;
  1946  0107EE  0E00               	movlw	0
  1947  0107F0  6E3D               	movwf	_sw_G+3,c
  1948  0107F2  0E00               	movlw	0
  1949  0107F4  6E3C               	movwf	_sw_G+2,c
  1950                           
  1951                           ;PIC18F27J53-killifish_light02.c: 407: light_mode = COMMAND_mode;
  1952  0107F6  0E02               	movlw	2
  1953  0107F8  0101               	movlb	1	; () banked
  1954  0107FA  6FC8               	movwf	_light_mode& (0+255),b
  1955                           
  1956                           ; BSR set to: 1
  1957                           ;PIC18F27J53-killifish_light02.c: 408: static uint8_t n = 0;
  1958                           ;PIC18F27J53-killifish_light02.c: 409: if (n >= 4) n = 0;
  1959  0107FC  0E03               	movlw	3
  1960  0107FE  0101               	movlb	1	; () banked
  1961  010800  65E7               	cpfsgt	main@n& (0+255),b
  1962  010802  D004               	goto	l5212
  1963                           
  1964                           ; BSR set to: 1
  1965  010804  0E00               	movlw	0
  1966  010806  0101               	movlb	1	; () banked
  1967  010808  6FE7               	movwf	main@n& (0+255),b
  1968  01080A  D003               	goto	l5214
  1969  01080C                     l5212:
  1970                           
  1971                           ; BSR set to: 1
  1972                           ;PIC18F27J53-killifish_light02.c: 410: else n++;
  1973  01080C  0101               	movlb	1	; () banked
  1974  01080E  2BE7               	incf	main@n& (0+255),f,b
  1975  010810  D000               	goto	l5214
  1976  010812                     l5214:
  1977                           
  1978                           ; BSR set to: 1
  1979                           ;PIC18F27J53-killifish_light02.c: 411: uint8_t value = 100 / 4 * n;
  1980  010812  0101               	movlb	1	; () banked
  1981  010814  51E7               	movf	main@n& (0+255),w,b
  1982  010816  0D19               	mullw	25
  1983  010818  CFF3 F0B7          	movff	prodl,main@value
  1984                           
  1985                           ; BSR set to: 1
  1986                           ;PIC18F27J53-killifish_light02.c: 412: for (i = 0; i < 3; i++) {
  1987  01081C  0E00               	movlw	0
  1988  01081E  0100               	movlb	0	; () banked
  1989  010820  6FBA               	movwf	(main@i+1)& (0+255),b
  1990  010822  0E00               	movlw	0
  1991  010824  6FB9               	movwf	main@i& (0+255),b
  1992  010826                     l5218:
  1993                           
  1994                           ; BSR set to: 0
  1995  010826  0100               	movlb	0	; () banked
  1996  010828  51BA               	movf	(main@i+1)& (0+255),w,b
  1997  01082A  E114               	bnz	l610
  1998  01082C  0E03               	movlw	3
  1999  01082E  0100               	movlb	0	; () banked
  2000  010830  5DB9               	subwf	main@i& (0+255),w,b
  2001  010832  B0D8               	btfsc	status,0,c
  2002  010834  D00F               	goto	l610
  2003  010836  D001               	goto	l5222
  2004                           
  2005                           ; BSR set to: 0
  2006  010838  D00D               	goto	l610
  2007  01083A                     l5222:
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;PIC18F27J53-killifish_light02.c: 413: PWM_set(i, value);
  2011  01083A  C0B7  F06E         	movff	main@value,PWM_set@value
  2012  01083E  0100               	movlb	0	; () banked
  2013  010840  6B6F               	clrf	(PWM_set@value+1)& (0+255),b
  2014  010842  0100               	movlb	0	; () banked
  2015  010844  51B9               	movf	main@i& (0+255),w,b
  2016  010846  EC4E  F089         	call	_PWM_set
  2017  01084A  0100               	movlb	0	; () banked
  2018  01084C  4BB9               	infsnz	main@i& (0+255),f,b
  2019  01084E  2BBA               	incf	(main@i+1)& (0+255),f,b
  2020  010850  D7EA               	goto	l5218
  2021                           
  2022                           ; BSR set to: 0
  2023  010852  D000               	goto	l610
  2024  010854                     l610:
  2025                           
  2026                           ;PIC18F27J53-killifish_light02.c: 414: }
  2027                           ;PIC18F27J53-killifish_light02.c: 415: }
  2028                           ;PIC18F27J53-killifish_light02.c: 416: if (sw_B.flag.press) {
  2029  010854  0101               	movlb	1	; () banked
  2030  010856  A1E4               	btfss	(_sw_B+2)& (0+255),0,b
  2031  010858  D685               	goto	l5150
  2032                           
  2033                           ; BSR set to: 1
  2034                           ;PIC18F27J53-killifish_light02.c: 417: sw_B.flags = 0;
  2035  01085A  0E00               	movlw	0
  2036  01085C  0101               	movlb	1	; () banked
  2037  01085E  6FE5               	movwf	(_sw_B+3)& (0+255),b
  2038  010860  0E00               	movlw	0
  2039  010862  6FE4               	movwf	(_sw_B+2)& (0+255),b
  2040                           
  2041                           ;PIC18F27J53-killifish_light02.c: 418: light_mode = COMMAND_mode;
  2042  010864  0E02               	movlw	2
  2043  010866  0101               	movlb	1	; () banked
  2044  010868  6FC8               	movwf	_light_mode& (0+255),b
  2045                           
  2046                           ; BSR set to: 1
  2047                           ;PIC18F27J53-killifish_light02.c: 419: static uint8_t n = 0;
  2048                           ;PIC18F27J53-killifish_light02.c: 420: if (n >= 4) n = 0;
  2049  01086A  0E03               	movlw	3
  2050  01086C  0101               	movlb	1	; () banked
  2051  01086E  65E6               	cpfsgt	main@_2448& (0+255),b
  2052  010870  D004               	goto	l5234
  2053                           
  2054                           ; BSR set to: 1
  2055  010872  0E00               	movlw	0
  2056  010874  0101               	movlb	1	; () banked
  2057  010876  6FE6               	movwf	main@_2448& (0+255),b
  2058  010878  D003               	goto	l5236
  2059  01087A                     l5234:
  2060                           
  2061                           ; BSR set to: 1
  2062                           ;PIC18F27J53-killifish_light02.c: 421: else n++;
  2063  01087A  0101               	movlb	1	; () banked
  2064  01087C  2BE6               	incf	main@_2448& (0+255),f,b
  2065  01087E  D000               	goto	l5236
  2066  010880                     l5236:
  2067                           
  2068                           ; BSR set to: 1
  2069                           ;PIC18F27J53-killifish_light02.c: 422: uint8_t value = 100 / 4 * n;
  2070  010880  0101               	movlb	1	; () banked
  2071  010882  51E6               	movf	main@_2448& (0+255),w,b
  2072  010884  0D19               	mullw	25
  2073  010886  CFF3 F0B8          	movff	prodl,main@value_2449
  2074                           
  2075                           ; BSR set to: 1
  2076                           ;PIC18F27J53-killifish_light02.c: 423: PWM_set(3, value);
  2077  01088A  C0B8  F06E         	movff	main@value_2449,PWM_set@value
  2078  01088E  0100               	movlb	0	; () banked
  2079  010890  6B6F               	clrf	(PWM_set@value+1)& (0+255),b
  2080  010892  0E03               	movlw	3
  2081  010894  EC4E  F089         	call	_PWM_set
  2082  010898  D665               	goto	l5150
  2083                           
  2084                           ;PIC18F27J53-killifish_light02.c: 424: }
  2085                           ;PIC18F27J53-killifish_light02.c: 425: }
  2086                           ;PIC18F27J53-killifish_light02.c: 426: return 0;
  2087                           ;	Return value of _main is never used
  2088  01089A  EF6F  F000         	goto	start
  2089  01089E                     __end_of_main:
  2090                           	opt stack 0
  2091                           tblptru	equ	0xFF8
  2092                           tblptrh	equ	0xFF7
  2093                           tblptrl	equ	0xFF6
  2094                           tablat	equ	0xFF5
  2095                           prodl	equ	0xFF3
  2096                           intcon	equ	0xFF2
  2097                           postinc0	equ	0xFEE
  2098                           wreg	equ	0xFE8
  2099                           postdec1	equ	0xFE5
  2100                           fsr1h	equ	0xFE2
  2101                           fsr1l	equ	0xFE1
  2102                           status	equ	0xFD8
  2103                           
  2104 ;; *************** function _rx_loop *****************
  2105 ;; Defined at:
  2106 ;;		line 285 in file "PIC18F27J53-killifish_light02.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;		None
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;  i               1   78[BANK0 ] unsigned char 
  2111 ;;  opland2       100    0[BANK4 ] unsigned char [100]
  2112 ;;  opland1       100  100[BANK2 ] unsigned char [100]
  2113 ;;  opcode        100  100[BANK1 ] unsigned char [100]
  2114 ;;  opland3       100    0[BANK2 ] unsigned char [100]
  2115 ;;  i               1   80[BANK0 ] unsigned char 
  2116 ;;  ascii           1   79[BANK0 ] unsigned char 
  2117 ;;  buf           100    0[BANK1 ] unsigned char [100]
  2118 ;; Return value:  Size  Location     Type
  2119 ;;		None               void
  2120 ;; Registers used:
  2121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2128 ;;      Locals:         0       5     200     200       0     100       0       0       0       0       0       0       
      +0       0       0       0
  2129 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2130 ;;      Totals:         0       7     200     200       0     100       0       0       0       0       0       0       
      +0       0       0       0
  2131 ;;Total ram usage:      507 bytes
  2132 ;; Hardware stack levels used:    1
  2133 ;; Hardware stack levels required when called:   11
  2134 ;; This function calls:
  2135 ;;		_command_operation
  2136 ;;		_ringbuf_backspace
  2137 ;;		_ringbuf_delete
  2138 ;;		_ringbuf_init
  2139 ;;		_ringbuf_num
  2140 ;;		_ringbuf_pop
  2141 ;;		_ringbuf_put
  2142 ;;		_tx_send
  2143 ;;		_tx_sendn
  2144 ;;		_tx_sends
  2145 ;; This function is called by:
  2146 ;;		_main
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text1
  2151  01089E                     __ptext1:
  2152                           	opt stack 0
  2153  01089E                     _rx_loop:
  2154                           	opt stack 19
  2155                           
  2156                           ;PIC18F27J53-killifish_light02.c: 286: static ringbuf_t comm_buf;
  2157                           ;PIC18F27J53-killifish_light02.c: 287: static uint8_t comm_buf_init = 1;
  2158                           ;PIC18F27J53-killifish_light02.c: 288: if (comm_buf_init) {
  2159                           
  2160                           ;incstack = 0
  2161  01089E  0100               	movlb	0	; () banked
  2162  0108A0  51C3               	movf	rx_loop@comm_buf_init& (0+255),w,b
  2163  0108A2  0100               	movlb	0	; () banked
  2164  0108A4  B4D8               	btfsc	status,2,c
  2165  0108A6  D017               	goto	l4946
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;PIC18F27J53-killifish_light02.c: 289: comm_buf_init = 0;
  2169  0108A8  0E00               	movlw	0
  2170  0108AA  0100               	movlb	0	; () banked
  2171  0108AC  6FC3               	movwf	rx_loop@comm_buf_init& (0+255),b
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;PIC18F27J53-killifish_light02.c: 290: char buf[100];
  2175                           ;PIC18F27J53-killifish_light02.c: 291: ringbuf_init(&comm_buf, buf, sizeof (buf));
  2176  0108AE  0EDA               	movlw	low rx_loop@comm_buf
  2177  0108B0  0100               	movlb	0	; () banked
  2178  0108B2  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2179  0108B4  0E01               	movlw	high rx_loop@comm_buf
  2180  0108B6  0100               	movlb	0	; () banked
  2181  0108B8  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2182  0108BA  0E00               	movlw	low rx_loop@buf
  2183  0108BC  0100               	movlb	0	; () banked
  2184  0108BE  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2185  0108C0  0E01               	movlw	high rx_loop@buf
  2186  0108C2  0100               	movlb	0	; () banked
  2187  0108C4  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2188  0108C6  0E00               	movlw	0
  2189  0108C8  0100               	movlb	0	; () banked
  2190  0108CA  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2191  0108CC  0E64               	movlw	100
  2192  0108CE  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2193  0108D0  ECEB  F092         	call	_ringbuf_init	;wreg free
  2194  0108D4  D000               	goto	l4946
  2195  0108D6                     l4946:
  2196                           
  2197                           ;PIC18F27J53-killifish_light02.c: 292: }
  2198                           ;PIC18F27J53-killifish_light02.c: 293: if (ringbuf_num(&rx_buf)) {
  2199  0108D6  0ECA               	movlw	low _rx_buf
  2200  0108D8  6E1F               	movwf	ringbuf_num@rb,c
  2201  0108DA  0E01               	movlw	high _rx_buf
  2202  0108DC  6E20               	movwf	ringbuf_num@rb+1,c
  2203  0108DE  EC88  F08A         	call	_ringbuf_num	;wreg free
  2204  0108E2  501F               	movf	?_ringbuf_num,w,c
  2205  0108E4  1020               	iorwf	?_ringbuf_num+1,w,c
  2206  0108E6  B4D8               	btfsc	status,2,c
  2207  0108E8  0012               	return	
  2208                           
  2209                           ;PIC18F27J53-killifish_light02.c: 294: char ascii = ringbuf_pop(&rx_buf);
  2210  0108EA  0ECA               	movlw	low _rx_buf
  2211  0108EC  6E21               	movwf	ringbuf_pop@rb,c
  2212  0108EE  0E01               	movlw	high _rx_buf
  2213  0108F0  6E22               	movwf	ringbuf_pop@rb+1,c
  2214  0108F2  ECF4  F08C         	call	_ringbuf_pop	;wreg free
  2215  0108F6  0100               	movlb	0	; () banked
  2216  0108F8  6FAF               	movwf	rx_loop@ascii& (0+255),b
  2217                           
  2218                           ;PIC18F27J53-killifish_light02.c: 295: switch (ascii) {
  2219  0108FA  D13E               	goto	l5012
  2220  0108FC                     l4950:
  2221                           
  2222                           ; BSR set to: 0
  2223                           ;PIC18F27J53-killifish_light02.c: 297: ringbuf_put(&comm_buf, '\0');
  2224  0108FC  0EDA               	movlw	low rx_loop@comm_buf
  2225  0108FE  6E21               	movwf	ringbuf_put@rb,c
  2226  010900  0E01               	movlw	high rx_loop@comm_buf
  2227  010902  6E22               	movwf	ringbuf_put@rb+1,c
  2228  010904  0E00               	movlw	0
  2229  010906  6E23               	movwf	ringbuf_put@asciicode,c
  2230  010908  EC2E  F08C         	call	_ringbuf_put	;wreg free
  2231                           
  2232                           ;PIC18F27J53-killifish_light02.c: 298: tx_send('\t');
  2233  01090C  0E09               	movlw	9
  2234  01090E  EC8E  F094         	call	_tx_send
  2235                           
  2236                           ;PIC18F27J53-killifish_light02.c: 299: tx_sendn(ringbuf_num(&comm_buf) - 1, 2);
  2237  010912  0EDA               	movlw	low rx_loop@comm_buf
  2238  010914  6E1F               	movwf	ringbuf_num@rb,c
  2239  010916  0E01               	movlw	high rx_loop@comm_buf
  2240  010918  6E20               	movwf	ringbuf_num@rb+1,c
  2241  01091A  EC88  F08A         	call	_ringbuf_num	;wreg free
  2242  01091E  0EFF               	movlw	255
  2243  010920  241F               	addwf	?_ringbuf_num,w,c
  2244  010922  0100               	movlb	0	; () banked
  2245  010924  6FAC               	movwf	_rx_loop$3054& (0+255),b
  2246  010926  0EFF               	movlw	255
  2247  010928  2020               	addwfc	?_ringbuf_num+1,w,c
  2248  01092A  0100               	movlb	0	; () banked
  2249  01092C  6FAD               	movwf	(_rx_loop$3054+1)& (0+255),b
  2250                           
  2251                           ;PIC18F27J53-killifish_light02.c: 299: tx_sendn(ringbuf_num(&comm_buf) - 1, 2);
  2252  01092E  C0AC  F06D         	movff	_rx_loop$3054,tx_sendn@value
  2253  010932  C0AD  F06E         	movff	_rx_loop$3054+1,tx_sendn@value+1
  2254  010936  0E02               	movlw	2
  2255  010938  0100               	movlb	0	; () banked
  2256  01093A  6F6F               	movwf	tx_sendn@digits& (0+255),b
  2257  01093C  ECF1  F091         	call	_tx_sendn	;wreg free
  2258                           
  2259                           ;PIC18F27J53-killifish_light02.c: 300: tx_sends("\n");
  2260  010940  0E82               	movlw	low (STR_11+313)
  2261  010942  0100               	movlb	0	; () banked
  2262  010944  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  2263  010946  0EFF               	movlw	high (STR_11+313)
  2264  010948  0100               	movlb	0	; () banked
  2265  01094A  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  2266  01094C  EC2D  F092         	call	_tx_sends	;wreg free
  2267                           
  2268                           ;PIC18F27J53-killifish_light02.c: 301: char opcode[100];
  2269                           ;PIC18F27J53-killifish_light02.c: 302: char opland1[100];
  2270                           ;PIC18F27J53-killifish_light02.c: 303: char opland2[100];
  2271                           ;PIC18F27J53-killifish_light02.c: 304: char opland3[100];
  2272                           ;PIC18F27J53-killifish_light02.c: 305: uint8_t i;
  2273                           ;PIC18F27J53-killifish_light02.c: 306: for (i = 0; opcode[i] = ringbuf_pop(&comm_buf); i
      +                          ++);
  2274  010950  0E00               	movlw	0
  2275  010952  0100               	movlb	0	; () banked
  2276  010954  6FB0               	movwf	rx_loop@i& (0+255),b
  2277  010956  D003               	goto	l4958
  2278  010958                     l4956:
  2279                           
  2280                           ; BSR set to: 0
  2281  010958  0100               	movlb	0	; () banked
  2282  01095A  2BB0               	incf	rx_loop@i& (0+255),f,b
  2283  01095C  D000               	goto	l4958
  2284  01095E                     l4958:
  2285                           
  2286                           ; BSR set to: 0
  2287  01095E  0EDA               	movlw	low rx_loop@comm_buf
  2288  010960  6E21               	movwf	ringbuf_pop@rb,c
  2289  010962  0E01               	movlw	high rx_loop@comm_buf
  2290  010964  6E22               	movwf	ringbuf_pop@rb+1,c
  2291  010966  ECF4  F08C         	call	_ringbuf_pop	;wreg free
  2292  01096A  0100               	movlb	0	; () banked
  2293  01096C  6FAA               	movwf	??_rx_loop& (0+255),b
  2294  01096E  0100               	movlb	0	; () banked
  2295  010970  51B0               	movf	rx_loop@i& (0+255),w,b
  2296  010972  0D01               	mullw	1
  2297  010974  0E64               	movlw	low rx_loop@opcode
  2298  010976  24F3               	addwf	prodl,w,c
  2299  010978  6ED9               	movwf	fsr2l,c
  2300  01097A  0E01               	movlw	high rx_loop@opcode
  2301  01097C  20F4               	addwfc	prodh,w,c
  2302  01097E  6EDA               	movwf	fsr2h,c
  2303  010980  C0AA  FFDF         	movff	??_rx_loop,indf2
  2304  010984  50DF               	movf	indf2,w,c
  2305  010986  A4D8               	btfss	status,2,c
  2306  010988  D7E7               	goto	l4956
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;PIC18F27J53-killifish_light02.c: 307: opcode[i] = '\0';
  2310                           
  2311                           ; BSR set to: 0
  2312  01098A  0100               	movlb	0	; () banked
  2313  01098C  51B0               	movf	rx_loop@i& (0+255),w,b
  2314  01098E  0D01               	mullw	1
  2315  010990  0E64               	movlw	low rx_loop@opcode
  2316  010992  24F3               	addwf	prodl,w,c
  2317  010994  6ED9               	movwf	fsr2l,c
  2318  010996  0E01               	movlw	high rx_loop@opcode
  2319  010998  20F4               	addwfc	prodh,w,c
  2320  01099A  6EDA               	movwf	fsr2h,c
  2321  01099C  0E00               	movlw	0
  2322  01099E  6EDF               	movwf	indf2,c
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;PIC18F27J53-killifish_light02.c: 308: for (i = 0; opland1[i] = ringbuf_pop(&comm_buf); 
      +                          i++);
  2326  0109A0  0E00               	movlw	0
  2327  0109A2  0100               	movlb	0	; () banked
  2328  0109A4  6FB0               	movwf	rx_loop@i& (0+255),b
  2329  0109A6  D003               	goto	l4966
  2330  0109A8                     l4964:
  2331                           
  2332                           ; BSR set to: 0
  2333  0109A8  0100               	movlb	0	; () banked
  2334  0109AA  2BB0               	incf	rx_loop@i& (0+255),f,b
  2335  0109AC  D000               	goto	l4966
  2336  0109AE                     l4966:
  2337                           
  2338                           ; BSR set to: 0
  2339  0109AE  0EDA               	movlw	low rx_loop@comm_buf
  2340  0109B0  6E21               	movwf	ringbuf_pop@rb,c
  2341  0109B2  0E01               	movlw	high rx_loop@comm_buf
  2342  0109B4  6E22               	movwf	ringbuf_pop@rb+1,c
  2343  0109B6  ECF4  F08C         	call	_ringbuf_pop	;wreg free
  2344  0109BA  0100               	movlb	0	; () banked
  2345  0109BC  6FAA               	movwf	??_rx_loop& (0+255),b
  2346  0109BE  0100               	movlb	0	; () banked
  2347  0109C0  51B0               	movf	rx_loop@i& (0+255),w,b
  2348  0109C2  0D01               	mullw	1
  2349  0109C4  0E64               	movlw	low rx_loop@opland1
  2350  0109C6  24F3               	addwf	prodl,w,c
  2351  0109C8  6ED9               	movwf	fsr2l,c
  2352  0109CA  0E02               	movlw	high rx_loop@opland1
  2353  0109CC  20F4               	addwfc	prodh,w,c
  2354  0109CE  6EDA               	movwf	fsr2h,c
  2355  0109D0  C0AA  FFDF         	movff	??_rx_loop,indf2
  2356  0109D4  50DF               	movf	indf2,w,c
  2357  0109D6  A4D8               	btfss	status,2,c
  2358  0109D8  D7E7               	goto	l4964
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;PIC18F27J53-killifish_light02.c: 309: opland1[i] = '\0';
  2362                           
  2363                           ; BSR set to: 0
  2364  0109DA  0100               	movlb	0	; () banked
  2365  0109DC  51B0               	movf	rx_loop@i& (0+255),w,b
  2366  0109DE  0D01               	mullw	1
  2367  0109E0  0E64               	movlw	low rx_loop@opland1
  2368  0109E2  24F3               	addwf	prodl,w,c
  2369  0109E4  6ED9               	movwf	fsr2l,c
  2370  0109E6  0E02               	movlw	high rx_loop@opland1
  2371  0109E8  20F4               	addwfc	prodh,w,c
  2372  0109EA  6EDA               	movwf	fsr2h,c
  2373  0109EC  0E00               	movlw	0
  2374  0109EE  6EDF               	movwf	indf2,c
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;PIC18F27J53-killifish_light02.c: 310: for (i = 0; opland2[i] = ringbuf_pop(&comm_buf); 
      +                          i++);
  2378  0109F0  0E00               	movlw	0
  2379  0109F2  0100               	movlb	0	; () banked
  2380  0109F4  6FB0               	movwf	rx_loop@i& (0+255),b
  2381  0109F6  D003               	goto	l4974
  2382  0109F8                     l4972:
  2383                           
  2384                           ; BSR set to: 0
  2385  0109F8  0100               	movlb	0	; () banked
  2386  0109FA  2BB0               	incf	rx_loop@i& (0+255),f,b
  2387  0109FC  D000               	goto	l4974
  2388  0109FE                     l4974:
  2389                           
  2390                           ; BSR set to: 0
  2391  0109FE  0EDA               	movlw	low rx_loop@comm_buf
  2392  010A00  6E21               	movwf	ringbuf_pop@rb,c
  2393  010A02  0E01               	movlw	high rx_loop@comm_buf
  2394  010A04  6E22               	movwf	ringbuf_pop@rb+1,c
  2395  010A06  ECF4  F08C         	call	_ringbuf_pop	;wreg free
  2396  010A0A  0100               	movlb	0	; () banked
  2397  010A0C  6FAA               	movwf	??_rx_loop& (0+255),b
  2398  010A0E  0100               	movlb	0	; () banked
  2399  010A10  51B0               	movf	rx_loop@i& (0+255),w,b
  2400  010A12  0D01               	mullw	1
  2401  010A14  0E00               	movlw	low rx_loop@opland2
  2402  010A16  24F3               	addwf	prodl,w,c
  2403  010A18  6ED9               	movwf	fsr2l,c
  2404  010A1A  0E04               	movlw	high rx_loop@opland2
  2405  010A1C  20F4               	addwfc	prodh,w,c
  2406  010A1E  6EDA               	movwf	fsr2h,c
  2407  010A20  C0AA  FFDF         	movff	??_rx_loop,indf2
  2408  010A24  50DF               	movf	indf2,w,c
  2409  010A26  A4D8               	btfss	status,2,c
  2410  010A28  D7E7               	goto	l4972
  2411                           
  2412                           ; BSR set to: 0
  2413                           ;PIC18F27J53-killifish_light02.c: 311: opland2[i] = '\0';
  2414                           
  2415                           ; BSR set to: 0
  2416  010A2A  0100               	movlb	0	; () banked
  2417  010A2C  51B0               	movf	rx_loop@i& (0+255),w,b
  2418  010A2E  0D01               	mullw	1
  2419  010A30  0E00               	movlw	low rx_loop@opland2
  2420  010A32  24F3               	addwf	prodl,w,c
  2421  010A34  6ED9               	movwf	fsr2l,c
  2422  010A36  0E04               	movlw	high rx_loop@opland2
  2423  010A38  20F4               	addwfc	prodh,w,c
  2424  010A3A  6EDA               	movwf	fsr2h,c
  2425  010A3C  0E00               	movlw	0
  2426  010A3E  6EDF               	movwf	indf2,c
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;PIC18F27J53-killifish_light02.c: 312: for (i = 0; opland3[i] = ringbuf_pop(&comm_buf); 
      +                          i++);
  2430  010A40  0E00               	movlw	0
  2431  010A42  0100               	movlb	0	; () banked
  2432  010A44  6FB0               	movwf	rx_loop@i& (0+255),b
  2433  010A46  D003               	goto	l4982
  2434  010A48                     l4980:
  2435                           
  2436                           ; BSR set to: 0
  2437  010A48  0100               	movlb	0	; () banked
  2438  010A4A  2BB0               	incf	rx_loop@i& (0+255),f,b
  2439  010A4C  D000               	goto	l4982
  2440  010A4E                     l4982:
  2441                           
  2442                           ; BSR set to: 0
  2443  010A4E  0EDA               	movlw	low rx_loop@comm_buf
  2444  010A50  6E21               	movwf	ringbuf_pop@rb,c
  2445  010A52  0E01               	movlw	high rx_loop@comm_buf
  2446  010A54  6E22               	movwf	ringbuf_pop@rb+1,c
  2447  010A56  ECF4  F08C         	call	_ringbuf_pop	;wreg free
  2448  010A5A  0100               	movlb	0	; () banked
  2449  010A5C  6FAA               	movwf	??_rx_loop& (0+255),b
  2450  010A5E  0100               	movlb	0	; () banked
  2451  010A60  51B0               	movf	rx_loop@i& (0+255),w,b
  2452  010A62  0D01               	mullw	1
  2453  010A64  0E00               	movlw	low rx_loop@opland3
  2454  010A66  24F3               	addwf	prodl,w,c
  2455  010A68  6ED9               	movwf	fsr2l,c
  2456  010A6A  0E02               	movlw	high rx_loop@opland3
  2457  010A6C  20F4               	addwfc	prodh,w,c
  2458  010A6E  6EDA               	movwf	fsr2h,c
  2459  010A70  C0AA  FFDF         	movff	??_rx_loop,indf2
  2460  010A74  50DF               	movf	indf2,w,c
  2461  010A76  A4D8               	btfss	status,2,c
  2462  010A78  D7E7               	goto	l4980
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;PIC18F27J53-killifish_light02.c: 313: opland3[i] = '\0';
  2466                           
  2467                           ; BSR set to: 0
  2468  010A7A  0100               	movlb	0	; () banked
  2469  010A7C  51B0               	movf	rx_loop@i& (0+255),w,b
  2470  010A7E  0D01               	mullw	1
  2471  010A80  0E00               	movlw	low rx_loop@opland3
  2472  010A82  24F3               	addwf	prodl,w,c
  2473  010A84  6ED9               	movwf	fsr2l,c
  2474  010A86  0E02               	movlw	high rx_loop@opland3
  2475  010A88  20F4               	addwfc	prodh,w,c
  2476  010A8A  6EDA               	movwf	fsr2h,c
  2477  010A8C  0E00               	movlw	0
  2478  010A8E  6EDF               	movwf	indf2,c
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;PIC18F27J53-killifish_light02.c: 314: command_operation(opcode, opland1, opland2, oplan
      +                          d3);
  2482  010A90  0E64               	movlw	low rx_loop@opcode
  2483  010A92  0100               	movlb	0	; () banked
  2484  010A94  6FA1               	movwf	command_operation@opcode& (0+255),b
  2485  010A96  0E01               	movlw	high rx_loop@opcode
  2486  010A98  0100               	movlb	0	; () banked
  2487  010A9A  6FA2               	movwf	(command_operation@opcode+1)& (0+255),b
  2488  010A9C  0E64               	movlw	low rx_loop@opland1
  2489  010A9E  0100               	movlb	0	; () banked
  2490  010AA0  6FA3               	movwf	command_operation@opland1& (0+255),b
  2491  010AA2  0E02               	movlw	high rx_loop@opland1
  2492  010AA4  0100               	movlb	0	; () banked
  2493  010AA6  6FA4               	movwf	(command_operation@opland1+1)& (0+255),b
  2494  010AA8  0E00               	movlw	low rx_loop@opland2
  2495  010AAA  0100               	movlb	0	; () banked
  2496  010AAC  6FA5               	movwf	command_operation@opland2& (0+255),b
  2497  010AAE  0E04               	movlw	high rx_loop@opland2
  2498  010AB0  0100               	movlb	0	; () banked
  2499  010AB2  6FA6               	movwf	(command_operation@opland2+1)& (0+255),b
  2500  010AB4  0E00               	movlw	low rx_loop@opland3
  2501  010AB6  0100               	movlb	0	; () banked
  2502  010AB8  6FA7               	movwf	command_operation@opland3& (0+255),b
  2503  010ABA  0E02               	movlw	high rx_loop@opland3
  2504  010ABC  0100               	movlb	0	; () banked
  2505  010ABE  6FA8               	movwf	(command_operation@opland3+1)& (0+255),b
  2506  010AC0  EC00  F080         	call	_command_operation	;wreg free
  2507                           
  2508                           ;PIC18F27J53-killifish_light02.c: 315: break;
  2509  010AC4  0012               	return	
  2510  010AC6                     l4988:
  2511                           
  2512                           ;PIC18F27J53-killifish_light02.c: 317: ringbuf_put(&comm_buf, '\0');
  2513  010AC6  0EDA               	movlw	low rx_loop@comm_buf
  2514  010AC8  6E21               	movwf	ringbuf_put@rb,c
  2515  010ACA  0E01               	movlw	high rx_loop@comm_buf
  2516  010ACC  6E22               	movwf	ringbuf_put@rb+1,c
  2517  010ACE  0E00               	movlw	0
  2518  010AD0  6E23               	movwf	ringbuf_put@asciicode,c
  2519  010AD2  EC2E  F08C         	call	_ringbuf_put	;wreg free
  2520                           
  2521                           ;PIC18F27J53-killifish_light02.c: 318: tx_send(' ');
  2522  010AD6  0E20               	movlw	32
  2523  010AD8  EC8E  F094         	call	_tx_send
  2524                           
  2525                           ;PIC18F27J53-killifish_light02.c: 319: break;
  2526  010ADC  0012               	return	
  2527  010ADE                     l4990:
  2528                           
  2529                           ;PIC18F27J53-killifish_light02.c: 321: ringbuf_backspace(&comm_buf);
  2530  010ADE  0EDA               	movlw	low rx_loop@comm_buf
  2531  010AE0  6E21               	movwf	ringbuf_backspace@rb,c
  2532  010AE2  0E01               	movlw	high rx_loop@comm_buf
  2533  010AE4  6E22               	movwf	ringbuf_backspace@rb+1,c
  2534  010AE6  EC31  F091         	call	_ringbuf_backspace	;wreg free
  2535                           
  2536                           ;PIC18F27J53-killifish_light02.c: 322: tx_sends("\b \b");
  2537  010AEA  0EC1               	movlw	low STR_39
  2538  010AEC  0100               	movlb	0	; () banked
  2539  010AEE  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  2540  010AF0  0EFF               	movlw	high STR_39
  2541  010AF2  0100               	movlb	0	; () banked
  2542  010AF4  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  2543  010AF6  EC2D  F092         	call	_tx_sends	;wreg free
  2544                           
  2545                           ;PIC18F27J53-killifish_light02.c: 323: break;
  2546  010AFA  0012               	return	
  2547  010AFC                     l4994:
  2548                           
  2549                           ;PIC18F27J53-killifish_light02.c: 325: for (uint8_t i = 0; i < ringbuf_num(&comm_buf); i
      +                          ++) tx_sends("\b \b");
  2550  010AFC  0E00               	movlw	0
  2551  010AFE  0100               	movlb	0	; () banked
  2552  010B00  6FAE               	movwf	rx_loop@i_2372& (0+255),b
  2553  010B02  D00B               	goto	l5000
  2554  010B04                     l4996:
  2555                           
  2556                           ; BSR set to: 0
  2557  010B04  0EC1               	movlw	low STR_39
  2558  010B06  0100               	movlb	0	; () banked
  2559  010B08  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  2560  010B0A  0EFF               	movlw	high STR_39
  2561  010B0C  0100               	movlb	0	; () banked
  2562  010B0E  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  2563  010B10  EC2D  F092         	call	_tx_sends	;wreg free
  2564  010B14  0100               	movlb	0	; () banked
  2565  010B16  2BAE               	incf	rx_loop@i_2372& (0+255),f,b
  2566  010B18  D000               	goto	l5000
  2567  010B1A                     l5000:
  2568                           
  2569                           ; BSR set to: 0
  2570  010B1A  0EDA               	movlw	low rx_loop@comm_buf
  2571  010B1C  6E1F               	movwf	ringbuf_num@rb,c
  2572  010B1E  0E01               	movlw	high rx_loop@comm_buf
  2573  010B20  6E20               	movwf	ringbuf_num@rb+1,c
  2574  010B22  EC88  F08A         	call	_ringbuf_num	;wreg free
  2575  010B26  0100               	movlb	0	; () banked
  2576  010B28  51AE               	movf	rx_loop@i_2372& (0+255),w,b
  2577  010B2A  0100               	movlb	0	; () banked
  2578  010B2C  6FAA               	movwf	??_rx_loop& (0+255),b
  2579  010B2E  6BAB               	clrf	(??_rx_loop+1)& (0+255),b
  2580  010B30  501F               	movf	?_ringbuf_num,w,c
  2581  010B32  0100               	movlb	0	; () banked
  2582  010B34  5DAA               	subwf	??_rx_loop& (0+255),w,b
  2583  010B36  5020               	movf	?_ringbuf_num+1,w,c
  2584  010B38  0100               	movlb	0	; () banked
  2585  010B3A  59AB               	subwfb	(??_rx_loop+1)& (0+255),w,b
  2586  010B3C  A0D8               	btfss	status,0,c
  2587  010B3E  D7E2               	goto	l4996
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;PIC18F27J53-killifish_light02.c: 326: ringbuf_delete(&comm_buf);
  2591                           
  2592                           ; BSR set to: 0
  2593  010B40  0EDA               	movlw	low rx_loop@comm_buf
  2594  010B42  6E1F               	movwf	ringbuf_delete@rb,c
  2595  010B44  0E01               	movlw	high rx_loop@comm_buf
  2596  010B46  6E20               	movwf	ringbuf_delete@rb+1,c
  2597  010B48  EC20  F094         	call	_ringbuf_delete	;wreg free
  2598                           
  2599                           ;PIC18F27J53-killifish_light02.c: 327: break;
  2600  010B4C  0012               	return	
  2601  010B4E                     l5004:
  2602                           
  2603                           ;PIC18F27J53-killifish_light02.c: 329: if (ascii >= ' ' && ascii <= '~') {
  2604  010B4E  0E1F               	movlw	31
  2605  010B50  0100               	movlb	0	; () banked
  2606  010B52  65AF               	cpfsgt	rx_loop@ascii& (0+255),b
  2607  010B54  0012               	return	
  2608                           
  2609                           ; BSR set to: 0
  2610  010B56  0E7F               	movlw	127
  2611  010B58  0100               	movlb	0	; () banked
  2612  010B5A  61AF               	cpfslt	rx_loop@ascii& (0+255),b
  2613  010B5C  0012               	return	
  2614                           
  2615                           ; BSR set to: 0
  2616                           ;PIC18F27J53-killifish_light02.c: 330: ringbuf_put(&comm_buf, ascii);
  2617  010B5E  0EDA               	movlw	low rx_loop@comm_buf
  2618  010B60  6E21               	movwf	ringbuf_put@rb,c
  2619  010B62  0E01               	movlw	high rx_loop@comm_buf
  2620  010B64  6E22               	movwf	ringbuf_put@rb+1,c
  2621  010B66  C0AF  F023         	movff	rx_loop@ascii,ringbuf_put@asciicode
  2622  010B6A  EC2E  F08C         	call	_ringbuf_put	;wreg free
  2623                           
  2624                           ;PIC18F27J53-killifish_light02.c: 331: tx_send(ascii);
  2625  010B6E  0100               	movlb	0	; () banked
  2626  010B70  51AF               	movf	rx_loop@ascii& (0+255),w,b
  2627  010B72  EC8E  F094         	call	_tx_send
  2628                           
  2629                           ;PIC18F27J53-killifish_light02.c: 334: }
  2630                           
  2631                           ;PIC18F27J53-killifish_light02.c: 332: }
  2632                           ;PIC18F27J53-killifish_light02.c: 333: break;
  2633  010B76  0012               	return	
  2634  010B78                     l5012:
  2635  010B78  0100               	movlb	0	; () banked
  2636  010B7A  51AF               	movf	rx_loop@ascii& (0+255),w,b
  2637                           
  2638                           ; Switch size 1, requested type "space"
  2639                           ; Number of cases is 4, Range of values is 8 to 127
  2640                           ; switch strategies available:
  2641                           ; Name         Instructions Cycles
  2642                           ; simple_byte           13     7 (average)
  2643                           ;	Chosen strategy is simple_byte
  2644  010B7C  0A08               	xorlw	8	; case 8
  2645  010B7E  B4D8               	btfsc	status,2,c
  2646  010B80  D7AE               	goto	l4990
  2647  010B82  0A05               	xorlw	5	; case 13
  2648  010B84  B4D8               	btfsc	status,2,c
  2649  010B86  D6BA               	goto	l4950
  2650  010B88  0A2D               	xorlw	45	; case 32
  2651  010B8A  B4D8               	btfsc	status,2,c
  2652  010B8C  D79C               	goto	l4988
  2653  010B8E  0A5F               	xorlw	95	; case 127
  2654  010B90  B4D8               	btfsc	status,2,c
  2655  010B92  D7B4               	goto	l4994
  2656  010B94  D7DC               	goto	l5004
  2657                           
  2658                           ; BSR set to: 0
  2659  010B96  0012               	return	
  2660                           
  2661                           ; BSR set to: 0
  2662  010B98  0012               	return		;funcret
  2663  010B9A                     __end_of_rx_loop:
  2664                           	opt stack 0
  2665                           tblptru	equ	0xFF8
  2666                           tblptrh	equ	0xFF7
  2667                           tblptrl	equ	0xFF6
  2668                           tablat	equ	0xFF5
  2669                           prodh	equ	0xFF4
  2670                           prodl	equ	0xFF3
  2671                           intcon	equ	0xFF2
  2672                           postinc0	equ	0xFEE
  2673                           wreg	equ	0xFE8
  2674                           postdec1	equ	0xFE5
  2675                           fsr1h	equ	0xFE2
  2676                           fsr1l	equ	0xFE1
  2677                           indf2	equ	0xFDF
  2678                           fsr2h	equ	0xFDA
  2679                           fsr2l	equ	0xFD9
  2680                           status	equ	0xFD8
  2681                           
  2682 ;; *************** function _tx_sendn *****************
  2683 ;; Defined at:
  2684 ;;		line 272 in file "../My_header\My_header.h"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  value           2   13[BANK0 ] const unsigned int 
  2687 ;;  digits          1   15[BANK0 ] unsigned char 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  i               1   16[BANK0 ] unsigned char 
  2690 ;;  temp            2   17[BANK0 ] unsigned int 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;		None               void
  2693 ;; Registers used:
  2694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2700 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2701 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2703 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2704 ;;Total ram usage:        6 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:    7
  2707 ;; This function calls:
  2708 ;;		___lwdiv
  2709 ;;		___lwmod
  2710 ;;		_tx_send
  2711 ;; This function is called by:
  2712 ;;		_rx_loop
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text2
  2717  0123E2                     __ptext2:
  2718                           	opt stack 0
  2719  0123E2                     _tx_sendn:
  2720                           	opt stack 22
  2721                           
  2722                           ;My_header\My_header.h: 273: while (digits--) {
  2723                           
  2724                           ;incstack = 0
  2725  0123E2  D034               	goto	l4590
  2726  0123E4                     l226:
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;My_header\My_header.h: 274: uint16_t temp = value;
  2730  0123E4  C06D  F071         	movff	tx_sendn@value,tx_sendn@temp
  2731  0123E8  C06E  F072         	movff	tx_sendn@value+1,tx_sendn@temp+1
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;My_header\My_header.h: 275: for (uint8_t i = 0; i < digits; i++) {
  2735  0123EC  0E00               	movlw	0
  2736  0123EE  0100               	movlb	0	; () banked
  2737  0123F0  6F70               	movwf	tx_sendn@i& (0+255),b
  2738  0123F2  D012               	goto	l4584
  2739  0123F4                     l4580:
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;My_header\My_header.h: 276: temp /= 10;
  2743  0123F4  C071  F066         	movff	tx_sendn@temp,___lwdiv@dividend
  2744  0123F8  C072  F067         	movff	tx_sendn@temp+1,___lwdiv@dividend+1
  2745  0123FC  0E00               	movlw	0
  2746  0123FE  0100               	movlb	0	; () banked
  2747  012400  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2748  012402  0E0A               	movlw	10
  2749  012404  6F68               	movwf	___lwdiv@divisor& (0+255),b
  2750  012406  EC73  F091         	call	___lwdiv	;wreg free
  2751  01240A  C066  F071         	movff	?___lwdiv,tx_sendn@temp
  2752  01240E  C067  F072         	movff	?___lwdiv+1,tx_sendn@temp+1
  2753  012412  0100               	movlb	0	; () banked
  2754  012414  2B70               	incf	tx_sendn@i& (0+255),f,b
  2755  012416  D000               	goto	l4584
  2756  012418                     l4584:
  2757                           
  2758                           ; BSR set to: 0
  2759  012418  0100               	movlb	0	; () banked
  2760  01241A  516F               	movf	tx_sendn@digits& (0+255),w,b
  2761  01241C  0100               	movlb	0	; () banked
  2762  01241E  5D70               	subwf	tx_sendn@i& (0+255),w,b
  2763  012420  A0D8               	btfss	status,0,c
  2764  012422  D7E8               	goto	l4580
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;My_header\My_header.h: 277: }
  2768                           ;My_header\My_header.h: 278: temp %= 10;
  2769                           
  2770                           ; BSR set to: 0
  2771  012424  C071  F01F         	movff	tx_sendn@temp,___lwmod@dividend
  2772  012428  C072  F020         	movff	tx_sendn@temp+1,___lwmod@dividend+1
  2773  01242C  0E00               	movlw	0
  2774  01242E  6E22               	movwf	___lwmod@divisor+1,c
  2775  012430  0E0A               	movlw	10
  2776  012432  6E21               	movwf	___lwmod@divisor,c
  2777  012434  EC3C  F093         	call	___lwmod	;wreg free
  2778  012438  C01F  F071         	movff	?___lwmod,tx_sendn@temp
  2779  01243C  C020  F072         	movff	?___lwmod+1,tx_sendn@temp+1
  2780                           
  2781                           ;My_header\My_header.h: 279: tx_send('0' + temp);
  2782  012440  0100               	movlb	0	; () banked
  2783  012442  5171               	movf	tx_sendn@temp& (0+255),w,b
  2784  012444  0F30               	addlw	48
  2785  012446  EC8E  F094         	call	_tx_send
  2786  01244A  D000               	goto	l4590
  2787  01244C                     l4590:
  2788  01244C  0100               	movlb	0	; () banked
  2789  01244E  076F               	decf	tx_sendn@digits& (0+255),f,b
  2790  012450  0100               	movlb	0	; () banked
  2791  012452  296F               	incf	tx_sendn@digits& (0+255),w,b
  2792  012454  A4D8               	btfss	status,2,c
  2793  012456  D7C6               	goto	l226
  2794                           
  2795                           ; BSR set to: 0
  2796                           
  2797                           ; BSR set to: 0
  2798  012458  0012               	return		;funcret
  2799  01245A                     __end_of_tx_sendn:
  2800                           	opt stack 0
  2801                           tblptru	equ	0xFF8
  2802                           tblptrh	equ	0xFF7
  2803                           tblptrl	equ	0xFF6
  2804                           tablat	equ	0xFF5
  2805                           prodh	equ	0xFF4
  2806                           prodl	equ	0xFF3
  2807                           intcon	equ	0xFF2
  2808                           postinc0	equ	0xFEE
  2809                           wreg	equ	0xFE8
  2810                           postdec1	equ	0xFE5
  2811                           fsr1h	equ	0xFE2
  2812                           fsr1l	equ	0xFE1
  2813                           indf2	equ	0xFDF
  2814                           fsr2h	equ	0xFDA
  2815                           fsr2l	equ	0xFD9
  2816                           status	equ	0xFD8
  2817                           
  2818 ;; *************** function _ringbuf_pop *****************
  2819 ;; Defined at:
  2820 ;;		line 64 in file "../My_header\My_ringbuf.h"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  rb              2   32[COMRAM] PTR struct ringbuf
  2823 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;  ret             1   34[COMRAM] unsigned char 
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      unsigned char 
  2828 ;; Registers used:
  2829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2835 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2837 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2838 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2839 ;;Total ram usage:        7 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    5
  2842 ;; This function calls:
  2843 ;;		_ringbuf_num
  2844 ;; This function is called by:
  2845 ;;		_rx_loop
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text3
  2850  0119E8                     __ptext3:
  2851                           	opt stack 0
  2852  0119E8                     _ringbuf_pop:
  2853                           	opt stack 24
  2854                           
  2855                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;incstack = 0
  2859  0119E8  C021  F01F         	movff	ringbuf_pop@rb,ringbuf_num@rb
  2860  0119EC  C022  F020         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  2861  0119F0  EC88  F08A         	call	_ringbuf_num	;wreg free
  2862  0119F4  501F               	movf	?_ringbuf_num,w,c
  2863  0119F6  1020               	iorwf	?_ringbuf_num+1,w,c
  2864  0119F8  B4D8               	btfsc	status,2,c
  2865  0119FA  D052               	goto	l4552
  2866                           
  2867                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
  2868  0119FC  EE20 F006          	lfsr	2,6
  2869  011A00  5021               	movf	ringbuf_pop@rb,w,c
  2870  011A02  26D9               	addwf	fsr2l,f,c
  2871  011A04  5022               	movf	ringbuf_pop@rb+1,w,c
  2872  011A06  22DA               	addwfc	fsr2h,f,c
  2873  011A08  CFDE F066          	movff	postinc2,??_ringbuf_pop
  2874  011A0C  CFDD F067          	movff	postdec2,??_ringbuf_pop+1
  2875  011A10  C021  FFD9         	movff	ringbuf_pop@rb,fsr2l
  2876  011A14  C022  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  2877  011A18  CFDE F068          	movff	postinc2,??_ringbuf_pop+2
  2878  011A1C  CFDD F069          	movff	postdec2,??_ringbuf_pop+3
  2879  011A20  0100               	movlb	0	; () banked
  2880  011A22  5166               	movf	??_ringbuf_pop& (0+255),w,b
  2881  011A24  0100               	movlb	0	; () banked
  2882  011A26  2568               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  2883  011A28  6ED9               	movwf	fsr2l,c
  2884  011A2A  0100               	movlb	0	; () banked
  2885  011A2C  5167               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  2886  011A2E  0100               	movlb	0	; () banked
  2887  011A30  2169               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  2888  011A32  6EDA               	movwf	fsr2h,c
  2889  011A34  50DF               	movf	indf2,w,c
  2890  011A36  6E23               	movwf	ringbuf_pop@ret,c
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
  2894  011A38  EE20 F002          	lfsr	2,2
  2895  011A3C  5021               	movf	ringbuf_pop@rb,w,c
  2896  011A3E  26D9               	addwf	fsr2l,f,c
  2897  011A40  5022               	movf	ringbuf_pop@rb+1,w,c
  2898  011A42  22DA               	addwfc	fsr2h,f,c
  2899  011A44  EE10 F006          	lfsr	1,6
  2900  011A48  5021               	movf	ringbuf_pop@rb,w,c
  2901  011A4A  26E1               	addwf	fsr1l,f,c
  2902  011A4C  5022               	movf	ringbuf_pop@rb+1,w,c
  2903  011A4E  22E2               	addwfc	fsr1h,f,c
  2904  011A50  CFE6 F068          	movff	postinc1,??_ringbuf_pop+2
  2905  011A54  CFE5 F069          	movff	postdec1,??_ringbuf_pop+3
  2906  011A58  0E01               	movlw	1
  2907  011A5A  0100               	movlb	0	; () banked
  2908  011A5C  2768               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  2909  011A5E  0E00               	movlw	0
  2910  011A60  2369               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  2911  011A62  50DE               	movf	postinc2,w,c
  2912  011A64  0100               	movlb	0	; () banked
  2913  011A66  5D68               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  2914  011A68  50DE               	movf	postinc2,w,c
  2915  011A6A  0100               	movlb	0	; () banked
  2916  011A6C  5969               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  2917  011A6E  B0D8               	btfsc	status,0,c
  2918  011A70  D00A               	goto	l4544
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;My_header\My_ringbuf.h: 68: rb->tail++;
  2922  011A72  EE20 F006          	lfsr	2,6
  2923  011A76  5021               	movf	ringbuf_pop@rb,w,c
  2924  011A78  26D9               	addwf	fsr2l,f,c
  2925  011A7A  5022               	movf	ringbuf_pop@rb+1,w,c
  2926  011A7C  22DA               	addwfc	fsr2h,f,c
  2927  011A7E  2ADE               	incf	postinc2,f,c
  2928  011A80  0E00               	movlw	0
  2929  011A82  22DD               	addwfc	postdec2,f,c
  2930                           
  2931                           ;My_header\My_ringbuf.h: 69: } else {
  2932  011A84  D00B               	goto	l4546
  2933  011A86                     l4544:
  2934                           
  2935                           ; BSR set to: 0
  2936                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
  2937  011A86  EE20 F006          	lfsr	2,6
  2938  011A8A  5021               	movf	ringbuf_pop@rb,w,c
  2939  011A8C  26D9               	addwf	fsr2l,f,c
  2940  011A8E  5022               	movf	ringbuf_pop@rb+1,w,c
  2941  011A90  22DA               	addwfc	fsr2h,f,c
  2942  011A92  0E00               	movlw	0
  2943  011A94  6EDE               	movwf	postinc2,c
  2944  011A96  0E00               	movlw	0
  2945  011A98  6EDD               	movwf	postdec2,c
  2946  011A9A  D000               	goto	l4546
  2947  011A9C                     l4546:
  2948                           
  2949                           ; BSR set to: 0
  2950                           ;My_header\My_ringbuf.h: 71: }
  2951                           ;My_header\My_ringbuf.h: 72: return ret;
  2952  011A9C  5023               	movf	ringbuf_pop@ret,w,c
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;My_header\My_ringbuf.h: 73: } else {
  2956                           
  2957                           ; BSR set to: 0
  2958  011A9E  0012               	return	
  2959  011AA0                     l4552:
  2960                           
  2961                           ;My_header\My_ringbuf.h: 74: return 0;
  2962  011AA0  0E00               	movlw	0
  2963  011AA2  0012               	return	
  2964  011AA4  0012               	return		;funcret
  2965  011AA6                     __end_of_ringbuf_pop:
  2966                           	opt stack 0
  2967                           tblptru	equ	0xFF8
  2968                           tblptrh	equ	0xFF7
  2969                           tblptrl	equ	0xFF6
  2970                           tablat	equ	0xFF5
  2971                           prodh	equ	0xFF4
  2972                           prodl	equ	0xFF3
  2973                           intcon	equ	0xFF2
  2974                           postinc0	equ	0xFEE
  2975                           wreg	equ	0xFE8
  2976                           postinc1	equ	0xFE6
  2977                           postdec1	equ	0xFE5
  2978                           fsr1h	equ	0xFE2
  2979                           fsr1l	equ	0xFE1
  2980                           indf2	equ	0xFDF
  2981                           postinc2	equ	0xFDE
  2982                           postdec2	equ	0xFDD
  2983                           fsr2h	equ	0xFDA
  2984                           fsr2l	equ	0xFD9
  2985                           status	equ	0xFD8
  2986                           
  2987 ;; *************** function _ringbuf_delete *****************
  2988 ;; Defined at:
  2989 ;;		line 85 in file "../My_header\My_ringbuf.h"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;  rb              2   30[COMRAM] PTR struct ringbuf
  2992 ;;		 -> rx_loop@comm_buf(8), 
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;		None               void
  2997 ;; Registers used:
  2998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3007 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3008 ;;Total ram usage:        2 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    4
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_rx_loop
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text4
  3019  012840                     __ptext4:
  3020                           	opt stack 0
  3021  012840                     _ringbuf_delete:
  3022                           	opt stack 25
  3023                           
  3024                           ;My_header\My_ringbuf.h: 86: rb->head = rb->tail;
  3025                           
  3026                           ;incstack = 0
  3027  012840  EE20 F006          	lfsr	2,6
  3028  012844  501F               	movf	ringbuf_delete@rb,w,c
  3029  012846  26D9               	addwf	fsr2l,f,c
  3030  012848  5020               	movf	ringbuf_delete@rb+1,w,c
  3031  01284A  22DA               	addwfc	fsr2h,f,c
  3032  01284C  EE10 F004          	lfsr	1,4
  3033  012850  501F               	movf	ringbuf_delete@rb,w,c
  3034  012852  26E1               	addwf	fsr1l,f,c
  3035  012854  5020               	movf	ringbuf_delete@rb+1,w,c
  3036  012856  22E2               	addwfc	fsr1h,f,c
  3037  012858  CFDE FFE6          	movff	postinc2,postinc1
  3038  01285C  CFDD FFE5          	movff	postdec2,postdec1
  3039  012860  0012               	return		;funcret
  3040  012862                     __end_of_ringbuf_delete:
  3041                           	opt stack 0
  3042                           tblptru	equ	0xFF8
  3043                           tblptrh	equ	0xFF7
  3044                           tblptrl	equ	0xFF6
  3045                           tablat	equ	0xFF5
  3046                           prodh	equ	0xFF4
  3047                           prodl	equ	0xFF3
  3048                           intcon	equ	0xFF2
  3049                           postinc0	equ	0xFEE
  3050                           wreg	equ	0xFE8
  3051                           postinc1	equ	0xFE6
  3052                           postdec1	equ	0xFE5
  3053                           fsr1h	equ	0xFE2
  3054                           fsr1l	equ	0xFE1
  3055                           indf2	equ	0xFDF
  3056                           postinc2	equ	0xFDE
  3057                           postdec2	equ	0xFDD
  3058                           fsr2h	equ	0xFDA
  3059                           fsr2l	equ	0xFD9
  3060                           status	equ	0xFD8
  3061                           
  3062 ;; *************** function _ringbuf_backspace *****************
  3063 ;; Defined at:
  3064 ;;		line 78 in file "../My_header\My_ringbuf.h"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;  rb              2   32[COMRAM] PTR struct ringbuf
  3067 ;;		 -> rx_loop@comm_buf(8), 
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;		None
  3070 ;; Return value:  Size  Location     Type
  3071 ;;		None               void
  3072 ;; Registers used:
  3073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3079 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3081 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3082 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3083 ;;Total ram usage:        6 bytes
  3084 ;; Hardware stack levels used:    1
  3085 ;; Hardware stack levels required when called:    5
  3086 ;; This function calls:
  3087 ;;		_ringbuf_num
  3088 ;; This function is called by:
  3089 ;;		_rx_loop
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text5
  3094  012262                     __ptext5:
  3095                           	opt stack 0
  3096  012262                     _ringbuf_backspace:
  3097                           	opt stack 24
  3098                           
  3099                           ;My_header\My_ringbuf.h: 79: if (ringbuf_num(rb)) {
  3100                           
  3101                           ;incstack = 0
  3102  012262  C021  F01F         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  3103  012266  C022  F020         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  3104  01226A  EC88  F08A         	call	_ringbuf_num	;wreg free
  3105  01226E  501F               	movf	?_ringbuf_num,w,c
  3106  012270  1020               	iorwf	?_ringbuf_num+1,w,c
  3107  012272  B4D8               	btfsc	status,2,c
  3108  012274  0012               	return	
  3109                           
  3110                           ;My_header\My_ringbuf.h: 80: if (rb->head) rb->head--;
  3111  012276  EE20 F004          	lfsr	2,4
  3112  01227A  5021               	movf	ringbuf_backspace@rb,w,c
  3113  01227C  26D9               	addwf	fsr2l,f,c
  3114  01227E  5022               	movf	ringbuf_backspace@rb+1,w,c
  3115  012280  22DA               	addwfc	fsr2h,f,c
  3116  012282  50DE               	movf	postinc2,w,c
  3117  012284  10DE               	iorwf	postinc2,w,c
  3118  012286  B4D8               	btfsc	status,2,c
  3119  012288  D00A               	goto	l4562
  3120  01228A  EE20 F004          	lfsr	2,4
  3121  01228E  5021               	movf	ringbuf_backspace@rb,w,c
  3122  012290  26D9               	addwf	fsr2l,f,c
  3123  012292  5022               	movf	ringbuf_backspace@rb+1,w,c
  3124  012294  22DA               	addwfc	fsr2h,f,c
  3125  012296  06DE               	decf	postinc2,f,c
  3126  012298  0E00               	movlw	0
  3127  01229A  5ADD               	subwfb	postdec2,f,c
  3128  01229C  0012               	return	
  3129  01229E                     l4562:
  3130                           
  3131                           ;My_header\My_ringbuf.h: 81: else rb->head = rb->size - 1;
  3132  01229E  0EFF               	movlw	255
  3133  0122A0  0100               	movlb	0	; () banked
  3134  0122A2  6F66               	movwf	??_ringbuf_backspace& (0+255),b
  3135  0122A4  0EFF               	movlw	255
  3136  0122A6  0100               	movlb	0	; () banked
  3137  0122A8  6F67               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  3138  0122AA  EE20 F002          	lfsr	2,2
  3139  0122AE  5021               	movf	ringbuf_backspace@rb,w,c
  3140  0122B0  26D9               	addwf	fsr2l,f,c
  3141  0122B2  5022               	movf	ringbuf_backspace@rb+1,w,c
  3142  0122B4  22DA               	addwfc	fsr2h,f,c
  3143  0122B6  CFDE F068          	movff	postinc2,??_ringbuf_backspace+2
  3144  0122BA  CFDD F069          	movff	postdec2,??_ringbuf_backspace+3
  3145  0122BE  0100               	movlb	0	; () banked
  3146  0122C0  5166               	movf	??_ringbuf_backspace& (0+255),w,b
  3147  0122C2  0100               	movlb	0	; () banked
  3148  0122C4  2768               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  3149  0122C6  0100               	movlb	0	; () banked
  3150  0122C8  5167               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  3151  0122CA  0100               	movlb	0	; () banked
  3152  0122CC  2369               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  3153  0122CE  EE20 F004          	lfsr	2,4
  3154  0122D2  5021               	movf	ringbuf_backspace@rb,w,c
  3155  0122D4  26D9               	addwf	fsr2l,f,c
  3156  0122D6  5022               	movf	ringbuf_backspace@rb+1,w,c
  3157  0122D8  22DA               	addwfc	fsr2h,f,c
  3158  0122DA  C068  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  3159  0122DE  C069  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  3160                           
  3161                           ; BSR set to: 0
  3162  0122E2  0012               	return	
  3163                           
  3164                           ; BSR set to: 0
  3165  0122E4  0012               	return		;funcret
  3166  0122E6                     __end_of_ringbuf_backspace:
  3167                           	opt stack 0
  3168                           tblptru	equ	0xFF8
  3169                           tblptrh	equ	0xFF7
  3170                           tblptrl	equ	0xFF6
  3171                           tablat	equ	0xFF5
  3172                           prodh	equ	0xFF4
  3173                           prodl	equ	0xFF3
  3174                           intcon	equ	0xFF2
  3175                           postinc0	equ	0xFEE
  3176                           wreg	equ	0xFE8
  3177                           postinc1	equ	0xFE6
  3178                           postdec1	equ	0xFE5
  3179                           fsr1h	equ	0xFE2
  3180                           fsr1l	equ	0xFE1
  3181                           indf2	equ	0xFDF
  3182                           postinc2	equ	0xFDE
  3183                           postdec2	equ	0xFDD
  3184                           fsr2h	equ	0xFDA
  3185                           fsr2l	equ	0xFD9
  3186                           status	equ	0xFD8
  3187                           
  3188 ;; *************** function _command_operation *****************
  3189 ;; Defined at:
  3190 ;;		line 207 in file "PIC18F27J53-killifish_light02.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  opcode          2   65[BANK0 ] PTR unsigned char 
  3193 ;;		 -> rx_loop@opcode(100), 
  3194 ;;  opland1         2   67[BANK0 ] PTR unsigned char 
  3195 ;;		 -> rx_loop@opland1(100), 
  3196 ;;  opland2         2   69[BANK0 ] PTR unsigned char 
  3197 ;;		 -> rx_loop@opland2(100), 
  3198 ;;  opland3         2   71[BANK0 ] PTR unsigned char 
  3199 ;;		 -> rx_loop@opland3(100), 
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;		None               void
  3204 ;; Registers used:
  3205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3211 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3212 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3214 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3215 ;;Total ram usage:        9 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:   10
  3218 ;; This function calls:
  3219 ;;		_PWM_set
  3220 ;;		_comm_at
  3221 ;;		_month_length
  3222 ;;		_my_atoi
  3223 ;;		_my_strcmp
  3224 ;;		_print_time
  3225 ;;		_tx_sends
  3226 ;; This function is called by:
  3227 ;;		_rx_loop
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           	psect	text6
  3232  010000                     __ptext6:
  3233                           	opt stack 0
  3234  010000                     _command_operation:
  3235                           	opt stack 19
  3236                           
  3237                           ;PIC18F27J53-killifish_light02.c: 208: if (!my_strcmp(opcode, "help") || !my_strcmp(opco
      +                          de, "?")) {
  3238                           
  3239                           ;incstack = 0
  3240  010000  C0A1  F01F         	movff	command_operation@opcode,my_strcmp@str1
  3241  010004  C0A2  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3242  010008  0EBC               	movlw	low STR_9
  3243  01000A  6E21               	movwf	my_strcmp@str2,c
  3244  01000C  0EFF               	movlw	high STR_9
  3245  01000E  6E22               	movwf	my_strcmp@str2+1,c
  3246  010010  EC0E  F090         	call	_my_strcmp	;wreg free
  3247  010014  0900               	iorlw	0
  3248  010016  B4D8               	btfsc	status,2,c
  3249  010018  D00D               	goto	l4662
  3250  01001A  C0A1  F01F         	movff	command_operation@opcode,my_strcmp@str1
  3251  01001E  C0A2  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3252  010022  0EE6               	movlw	low STR_10
  3253  010024  6E21               	movwf	my_strcmp@str2,c
  3254  010026  0EFF               	movlw	high STR_10
  3255  010028  6E22               	movwf	my_strcmp@str2+1,c
  3256  01002A  EC0E  F090         	call	_my_strcmp	;wreg free
  3257  01002E  0900               	iorlw	0
  3258  010030  A4D8               	btfss	status,2,c
  3259  010032  D009               	goto	l4664
  3260  010034                     l4662:
  3261                           
  3262                           ;PIC18F27J53-killifish_light02.c: 209: tx_sends(
  3263                           ;PIC18F27J53-killifish_light02.c: 210: "\t**************************\n"
  3264                           ;PIC18F27J53-killifish_light02.c: 211: "\t**** Killifish Light  ****\n"
  3265                           ;PIC18F27J53-killifish_light02.c: 212: "\t**** Made by @Ryokeri ****\n"
  3266                           ;PIC18F27J53-killifish_light02.c: 213: "\t**************************\n\n"
  3267                           ;PIC18F27J53-killifish_light02.c: 214: "\tcommand \topeland1\topeland2\n\n"
  3268                           ;PIC18F27J53-killifish_light02.c: 215: "\tprint_time(t)\n"
  3269                           ;PIC18F27J53-killifish_light02.c: 216: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(deci
      +                          mal)]\n"
  3270  010034  0E49               	movlw	low STR_11
  3271  010036  0100               	movlb	0	; () banked
  3272  010038  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  3273  01003A  0EFE               	movlw	high STR_11
  3274  01003C  0100               	movlb	0	; () banked
  3275  01003E  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3276  010040  EC2D  F092         	call	_tx_sends	;wreg free
  3277  010044  D000               	goto	l4664
  3278  010046                     l4664:
  3279                           
  3280                           ;PIC18F27J53-killifish_light02.c: 223: }
  3281                           ;PIC18F27J53-killifish_light02.c: 224: if (!my_strcmp(opcode, "RESET();")) {
  3282  010046  C0A1  F01F         	movff	command_operation@opcode,my_strcmp@str1
  3283  01004A  C0A2  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3284  01004E  0E9B               	movlw	low STR_12
  3285  010050  6E21               	movwf	my_strcmp@str2,c
  3286  010052  0EFF               	movlw	high STR_12
  3287  010054  6E22               	movwf	my_strcmp@str2+1,c
  3288  010056  EC0E  F090         	call	_my_strcmp	;wreg free
  3289  01005A  0900               	iorlw	0
  3290  01005C  A4D8               	btfss	status,2,c
  3291  01005E  D002               	goto	l4668
  3292  010060  00FF               	reset		;# 
  3293  010062  D000               	goto	l4668
  3294  010064                     l4668:
  3295                           
  3296                           ;PIC18F27J53-killifish_light02.c: 226: }
  3297                           ;PIC18F27J53-killifish_light02.c: 227: if (!my_strcmp(opcode, "at") || !my_strcmp(opcode
      +                          , "adjust_time")) {
  3298  010064  C0A1  F01F         	movff	command_operation@opcode,my_strcmp@str1
  3299  010068  C0A2  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3300  01006C  0EDF               	movlw	low STR_13
  3301  01006E  6E21               	movwf	my_strcmp@str2,c
  3302  010070  0EFF               	movlw	high STR_13
  3303  010072  6E22               	movwf	my_strcmp@str2+1,c
  3304  010074  EC0E  F090         	call	_my_strcmp	;wreg free
  3305  010078  0900               	iorlw	0
  3306  01007A  B4D8               	btfsc	status,2,c
  3307  01007C  D00D               	goto	l4672
  3308  01007E  C0A1  F01F         	movff	command_operation@opcode,my_strcmp@str1
  3309  010082  C0A2  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3310  010086  0E84               	movlw	low STR_14
  3311  010088  6E21               	movwf	my_strcmp@str2,c
  3312  01008A  0EFF               	movlw	high STR_14
  3313  01008C  6E22               	movwf	my_strcmp@str2+1,c
  3314  01008E  EC0E  F090         	call	_my_strcmp	;wreg free
  3315  010092  0900               	iorlw	0
  3316  010094  A4D8               	btfss	status,2,c
  3317  010096  D0EA               	goto	l4698
  3318  010098                     l4672:
  3319                           
  3320                           ;PIC18F27J53-killifish_light02.c: 228: if (!my_strcmp(opland1, "y")) {
  3321  010098  C0A3  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3322  01009C  C0A4  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3323  0100A0  0EFC               	movlw	low STR_15
  3324  0100A2  6E21               	movwf	my_strcmp@str2,c
  3325  0100A4  0EFF               	movlw	high STR_15
  3326  0100A6  6E22               	movwf	my_strcmp@str2+1,c
  3327  0100A8  EC0E  F090         	call	_my_strcmp	;wreg free
  3328  0100AC  0900               	iorlw	0
  3329  0100AE  A4D8               	btfss	status,2,c
  3330  0100B0  D019               	goto	l4676
  3331                           
  3332                           ;PIC18F27J53-killifish_light02.c: 229: comm_at(&caltime_now.YY, 0, 99, my_atoi(opland2))
      +                          ;
  3333  0100B2  0E35               	movlw	low (_caltime_now+6)
  3334  0100B4  0100               	movlb	0	; () banked
  3335  0100B6  6F9C               	movwf	comm_at@hand& (0+255),b
  3336  0100B8  0E00               	movlw	high (_caltime_now+6)
  3337  0100BA  0100               	movlb	0	; () banked
  3338  0100BC  6F9D               	movwf	(comm_at@hand+1)& (0+255),b
  3339  0100BE  0E00               	movlw	0
  3340  0100C0  0100               	movlb	0	; () banked
  3341  0100C2  6F9E               	movwf	comm_at@min& (0+255),b
  3342  0100C4  0E63               	movlw	99
  3343  0100C6  0100               	movlb	0	; () banked
  3344  0100C8  6F9F               	movwf	comm_at@max& (0+255),b
  3345  0100CA  C0A5  F066         	movff	command_operation@opland2,my_atoi@str
  3346  0100CE  C0A6  F067         	movff	command_operation@opland2+1,my_atoi@str+1
  3347  0100D2  EC6D  F08F         	call	_my_atoi	;wreg free
  3348  0100D6  0100               	movlb	0	; () banked
  3349  0100D8  5166               	movf	?_my_atoi& (0+255),w,b
  3350  0100DA  0100               	movlb	0	; () banked
  3351  0100DC  6FA0               	movwf	comm_at@value& (0+255),b
  3352  0100DE  EC60  F092         	call	_comm_at	;wreg free
  3353  0100E2  D000               	goto	l4676
  3354  0100E4                     l4676:
  3355                           
  3356                           ;PIC18F27J53-killifish_light02.c: 230: }
  3357                           ;PIC18F27J53-killifish_light02.c: 231: if (!my_strcmp(opland1, "M")) {
  3358  0100E4  C0A3  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3359  0100E8  C0A4  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3360  0100EC  0ECB               	movlw	low (STR_28+2)
  3361  0100EE  6E21               	movwf	my_strcmp@str2,c
  3362  0100F0  0EFF               	movlw	high (STR_28+2)
  3363  0100F2  6E22               	movwf	my_strcmp@str2+1,c
  3364  0100F4  EC0E  F090         	call	_my_strcmp	;wreg free
  3365  0100F8  0900               	iorlw	0
  3366  0100FA  A4D8               	btfss	status,2,c
  3367  0100FC  D019               	goto	l4680
  3368                           
  3369                           ;PIC18F27J53-killifish_light02.c: 232: comm_at(&caltime_now.MM, 1, 12, my_atoi(opland2))
      +                          ;
  3370  0100FE  0E34               	movlw	low (_caltime_now+5)
  3371  010100  0100               	movlb	0	; () banked
  3372  010102  6F9C               	movwf	comm_at@hand& (0+255),b
  3373  010104  0E00               	movlw	high (_caltime_now+5)
  3374  010106  0100               	movlb	0	; () banked
  3375  010108  6F9D               	movwf	(comm_at@hand+1)& (0+255),b
  3376  01010A  0E01               	movlw	1
  3377  01010C  0100               	movlb	0	; () banked
  3378  01010E  6F9E               	movwf	comm_at@min& (0+255),b
  3379  010110  0E0C               	movlw	12
  3380  010112  0100               	movlb	0	; () banked
  3381  010114  6F9F               	movwf	comm_at@max& (0+255),b
  3382  010116  C0A5  F066         	movff	command_operation@opland2,my_atoi@str
  3383  01011A  C0A6  F067         	movff	command_operation@opland2+1,my_atoi@str+1
  3384  01011E  EC6D  F08F         	call	_my_atoi	;wreg free
  3385  010122  0100               	movlb	0	; () banked
  3386  010124  5166               	movf	?_my_atoi& (0+255),w,b
  3387  010126  0100               	movlb	0	; () banked
  3388  010128  6FA0               	movwf	comm_at@value& (0+255),b
  3389  01012A  EC60  F092         	call	_comm_at	;wreg free
  3390  01012E  D000               	goto	l4680
  3391  010130                     l4680:
  3392                           
  3393                           ;PIC18F27J53-killifish_light02.c: 233: }
  3394                           ;PIC18F27J53-killifish_light02.c: 234: if (!my_strcmp(opland1, "d")) {
  3395  010130  C0A3  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3396  010134  C0A4  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3397  010138  0EF2               	movlw	low STR_17
  3398  01013A  6E21               	movwf	my_strcmp@str2,c
  3399  01013C  0EFF               	movlw	high STR_17
  3400  01013E  6E22               	movwf	my_strcmp@str2+1,c
  3401  010140  EC0E  F090         	call	_my_strcmp	;wreg free
  3402  010144  0900               	iorlw	0
  3403  010146  A4D8               	btfss	status,2,c
  3404  010148  D01F               	goto	l4686
  3405                           
  3406                           ;PIC18F27J53-killifish_light02.c: 235: comm_at(&caltime_now.DD, 1, month_length(caltime_
      +                          now.YY, caltime_now.MM), my_atoi(opland2));
  3407  01014A  C034  F023         	movff	_caltime_now+5,month_length@month
  3408  01014E  5035               	movf	_caltime_now+6,w,c
  3409  010150  ECC9  F08B         	call	_month_length
  3410  010154  0100               	movlb	0	; () banked
  3411  010156  6FA9               	movwf	_command_operation$3053& (0+255),b
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;PIC18F27J53-killifish_light02.c: 235: comm_at(&caltime_now.DD, 1, month_length(caltime_
      +                          now.YY, caltime_now.MM), my_atoi(opland2));
  3415  010158  0E33               	movlw	low (_caltime_now+4)
  3416  01015A  0100               	movlb	0	; () banked
  3417  01015C  6F9C               	movwf	comm_at@hand& (0+255),b
  3418  01015E  0E00               	movlw	high (_caltime_now+4)
  3419  010160  0100               	movlb	0	; () banked
  3420  010162  6F9D               	movwf	(comm_at@hand+1)& (0+255),b
  3421  010164  0E01               	movlw	1
  3422  010166  0100               	movlb	0	; () banked
  3423  010168  6F9E               	movwf	comm_at@min& (0+255),b
  3424  01016A  C0A9  F09F         	movff	_command_operation$3053,comm_at@max
  3425  01016E  C0A5  F066         	movff	command_operation@opland2,my_atoi@str
  3426  010172  C0A6  F067         	movff	command_operation@opland2+1,my_atoi@str+1
  3427  010176  EC6D  F08F         	call	_my_atoi	;wreg free
  3428  01017A  0100               	movlb	0	; () banked
  3429  01017C  5166               	movf	?_my_atoi& (0+255),w,b
  3430  01017E  0100               	movlb	0	; () banked
  3431  010180  6FA0               	movwf	comm_at@value& (0+255),b
  3432  010182  EC60  F092         	call	_comm_at	;wreg free
  3433  010186  D000               	goto	l4686
  3434  010188                     l4686:
  3435                           
  3436                           ;PIC18F27J53-killifish_light02.c: 236: }
  3437                           ;PIC18F27J53-killifish_light02.c: 237: if (!my_strcmp(opland1, "h")) {
  3438  010188  C0A3  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3439  01018C  C0A4  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3440  010190  0EF6               	movlw	low STR_18
  3441  010192  6E21               	movwf	my_strcmp@str2,c
  3442  010194  0EFF               	movlw	high STR_18
  3443  010196  6E22               	movwf	my_strcmp@str2+1,c
  3444  010198  EC0E  F090         	call	_my_strcmp	;wreg free
  3445  01019C  0900               	iorlw	0
  3446  01019E  A4D8               	btfss	status,2,c
  3447  0101A0  D019               	goto	l4690
  3448                           
  3449                           ;PIC18F27J53-killifish_light02.c: 238: comm_at(&caltime_now.hh, 0, 23, my_atoi(opland2))
      +                          ;
  3450  0101A2  0E31               	movlw	low (_caltime_now+2)
  3451  0101A4  0100               	movlb	0	; () banked
  3452  0101A6  6F9C               	movwf	comm_at@hand& (0+255),b
  3453  0101A8  0E00               	movlw	high (_caltime_now+2)
  3454  0101AA  0100               	movlb	0	; () banked
  3455  0101AC  6F9D               	movwf	(comm_at@hand+1)& (0+255),b
  3456  0101AE  0E00               	movlw	0
  3457  0101B0  0100               	movlb	0	; () banked
  3458  0101B2  6F9E               	movwf	comm_at@min& (0+255),b
  3459  0101B4  0E17               	movlw	23
  3460  0101B6  0100               	movlb	0	; () banked
  3461  0101B8  6F9F               	movwf	comm_at@max& (0+255),b
  3462  0101BA  C0A5  F066         	movff	command_operation@opland2,my_atoi@str
  3463  0101BE  C0A6  F067         	movff	command_operation@opland2+1,my_atoi@str+1
  3464  0101C2  EC6D  F08F         	call	_my_atoi	;wreg free
  3465  0101C6  0100               	movlb	0	; () banked
  3466  0101C8  5166               	movf	?_my_atoi& (0+255),w,b
  3467  0101CA  0100               	movlb	0	; () banked
  3468  0101CC  6FA0               	movwf	comm_at@value& (0+255),b
  3469  0101CE  EC60  F092         	call	_comm_at	;wreg free
  3470  0101D2  D000               	goto	l4690
  3471  0101D4                     l4690:
  3472                           
  3473                           ;PIC18F27J53-killifish_light02.c: 239: }
  3474                           ;PIC18F27J53-killifish_light02.c: 240: if (!my_strcmp(opland1, "m")) {
  3475  0101D4  C0A3  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3476  0101D8  C0A4  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3477  0101DC  0ED3               	movlw	low (STR_27+2)
  3478  0101DE  6E21               	movwf	my_strcmp@str2,c
  3479  0101E0  0EFF               	movlw	high (STR_27+2)
  3480  0101E2  6E22               	movwf	my_strcmp@str2+1,c
  3481  0101E4  EC0E  F090         	call	_my_strcmp	;wreg free
  3482  0101E8  0900               	iorlw	0
  3483  0101EA  A4D8               	btfss	status,2,c
  3484  0101EC  D019               	goto	l4694
  3485                           
  3486                           ;PIC18F27J53-killifish_light02.c: 241: comm_at(&caltime_now.mm, 0, 59, my_atoi(opland2))
      +                          ;
  3487  0101EE  0E30               	movlw	low (_caltime_now+1)
  3488  0101F0  0100               	movlb	0	; () banked
  3489  0101F2  6F9C               	movwf	comm_at@hand& (0+255),b
  3490  0101F4  0E00               	movlw	high (_caltime_now+1)
  3491  0101F6  0100               	movlb	0	; () banked
  3492  0101F8  6F9D               	movwf	(comm_at@hand+1)& (0+255),b
  3493  0101FA  0E00               	movlw	0
  3494  0101FC  0100               	movlb	0	; () banked
  3495  0101FE  6F9E               	movwf	comm_at@min& (0+255),b
  3496  010200  0E3B               	movlw	59
  3497  010202  0100               	movlb	0	; () banked
  3498  010204  6F9F               	movwf	comm_at@max& (0+255),b
  3499  010206  C0A5  F066         	movff	command_operation@opland2,my_atoi@str
  3500  01020A  C0A6  F067         	movff	command_operation@opland2+1,my_atoi@str+1
  3501  01020E  EC6D  F08F         	call	_my_atoi	;wreg free
  3502  010212  0100               	movlb	0	; () banked
  3503  010214  5166               	movf	?_my_atoi& (0+255),w,b
  3504  010216  0100               	movlb	0	; () banked
  3505  010218  6FA0               	movwf	comm_at@value& (0+255),b
  3506  01021A  EC60  F092         	call	_comm_at	;wreg free
  3507  01021E  D000               	goto	l4694
  3508  010220                     l4694:
  3509                           
  3510                           ;PIC18F27J53-killifish_light02.c: 242: }
  3511                           ;PIC18F27J53-killifish_light02.c: 243: if (!my_strcmp(opland1, "s")) {
  3512  010220  C0A3  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3513  010224  C0A4  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3514  010228  0EF8               	movlw	low STR_20
  3515  01022A  6E21               	movwf	my_strcmp@str2,c
  3516  01022C  0EFF               	movlw	high STR_20
  3517  01022E  6E22               	movwf	my_strcmp@str2+1,c
  3518  010230  EC0E  F090         	call	_my_strcmp	;wreg free
  3519  010234  0900               	iorlw	0
  3520  010236  A4D8               	btfss	status,2,c
  3521  010238  D019               	goto	l4698
  3522                           
  3523                           ;PIC18F27J53-killifish_light02.c: 244: comm_at(&caltime_now.ss, 0, 59, my_atoi(opland2))
      +                          ;
  3524  01023A  0E2F               	movlw	low _caltime_now
  3525  01023C  0100               	movlb	0	; () banked
  3526  01023E  6F9C               	movwf	comm_at@hand& (0+255),b
  3527  010240  0E00               	movlw	high _caltime_now
  3528  010242  0100               	movlb	0	; () banked
  3529  010244  6F9D               	movwf	(comm_at@hand+1)& (0+255),b
  3530  010246  0E00               	movlw	0
  3531  010248  0100               	movlb	0	; () banked
  3532  01024A  6F9E               	movwf	comm_at@min& (0+255),b
  3533  01024C  0E3B               	movlw	59
  3534  01024E  0100               	movlb	0	; () banked
  3535  010250  6F9F               	movwf	comm_at@max& (0+255),b
  3536  010252  C0A5  F066         	movff	command_operation@opland2,my_atoi@str
  3537  010256  C0A6  F067         	movff	command_operation@opland2+1,my_atoi@str+1
  3538  01025A  EC6D  F08F         	call	_my_atoi	;wreg free
  3539  01025E  0100               	movlb	0	; () banked
  3540  010260  5166               	movf	?_my_atoi& (0+255),w,b
  3541  010262  0100               	movlb	0	; () banked
  3542  010264  6FA0               	movwf	comm_at@value& (0+255),b
  3543  010266  EC60  F092         	call	_comm_at	;wreg free
  3544  01026A  D000               	goto	l4698
  3545  01026C                     l4698:
  3546                           
  3547                           ;PIC18F27J53-killifish_light02.c: 245: }
  3548                           ;PIC18F27J53-killifish_light02.c: 246: }
  3549                           ;PIC18F27J53-killifish_light02.c: 247: if (!my_strcmp(opcode, "print_time") || !my_strcm
      +                          p(opcode, "t")) {
  3550  01026C  C0A1  F01F         	movff	command_operation@opcode,my_strcmp@str1
  3551  010270  C0A2  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3552  010274  0E90               	movlw	low STR_21
  3553  010276  6E21               	movwf	my_strcmp@str2,c
  3554  010278  0EFF               	movlw	high STR_21
  3555  01027A  6E22               	movwf	my_strcmp@str2+1,c
  3556  01027C  EC0E  F090         	call	_my_strcmp	;wreg free
  3557  010280  0900               	iorlw	0
  3558  010282  B4D8               	btfsc	status,2,c
  3559  010284  D00D               	goto	l4702
  3560  010286  C0A1  F01F         	movff	command_operation@opcode,my_strcmp@str1
  3561  01028A  C0A2  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3562  01028E  0EE0               	movlw	low (STR_13+1)
  3563  010290  6E21               	movwf	my_strcmp@str2,c
  3564  010292  0EFF               	movlw	high (STR_13+1)
  3565  010294  6E22               	movwf	my_strcmp@str2+1,c
  3566  010296  EC0E  F090         	call	_my_strcmp	;wreg free
  3567  01029A  0900               	iorlw	0
  3568  01029C  A4D8               	btfss	status,2,c
  3569  01029E  D003               	goto	l4704
  3570  0102A0                     l4702:
  3571                           
  3572                           ;PIC18F27J53-killifish_light02.c: 248: print_time();
  3573  0102A0  ECF5  F089         	call	_print_time	;wreg free
  3574  0102A4  D000               	goto	l4704
  3575  0102A6                     l4704:
  3576                           
  3577                           ;PIC18F27J53-killifish_light02.c: 249: }
  3578                           ;PIC18F27J53-killifish_light02.c: 250: if (!my_strcmp(opcode, "set")) {
  3579  0102A6  C0A1  F01F         	movff	command_operation@opcode,my_strcmp@str1
  3580  0102AA  C0A2  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3581  0102AE  0ED5               	movlw	low STR_23
  3582  0102B0  6E21               	movwf	my_strcmp@str2,c
  3583  0102B2  0EFF               	movlw	high STR_23
  3584  0102B4  6E22               	movwf	my_strcmp@str2+1,c
  3585  0102B6  EC0E  F090         	call	_my_strcmp	;wreg free
  3586  0102BA  0900               	iorlw	0
  3587  0102BC  A4D8               	btfss	status,2,c
  3588  0102BE  D02F               	goto	l4716
  3589                           
  3590                           ;PIC18F27J53-killifish_light02.c: 251: if (!my_strcmp(opland1, "sync")) {
  3591  0102C0  C0A3  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3592  0102C4  C0A4  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3593  0102C8  0EB7               	movlw	low STR_24
  3594  0102CA  6E21               	movwf	my_strcmp@str2,c
  3595  0102CC  0EFF               	movlw	high STR_24
  3596  0102CE  6E22               	movwf	my_strcmp@str2+1,c
  3597  0102D0  EC0E  F090         	call	_my_strcmp	;wreg free
  3598  0102D4  0900               	iorlw	0
  3599  0102D6  A4D8               	btfss	status,2,c
  3600  0102D8  D004               	goto	l4710
  3601                           
  3602                           ;PIC18F27J53-killifish_light02.c: 252: light_mode = TIME_SYNC_mode;
  3603  0102DA  0E00               	movlw	0
  3604  0102DC  0101               	movlb	1	; () banked
  3605  0102DE  6FC8               	movwf	_light_mode& (0+255),b
  3606  0102E0  D000               	goto	l4710
  3607  0102E2                     l4710:
  3608                           
  3609                           ;PIC18F27J53-killifish_light02.c: 253: }
  3610                           ;PIC18F27J53-killifish_light02.c: 254: if (!my_strcmp(opland1, "adc") || !my_strcmp(opla
      +                          nd1, "ADC")) {
  3611  0102E2  C0A3  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3612  0102E6  C0A4  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3613  0102EA  0ECD               	movlw	low STR_25
  3614  0102EC  6E21               	movwf	my_strcmp@str2,c
  3615  0102EE  0EFF               	movlw	high STR_25
  3616  0102F0  6E22               	movwf	my_strcmp@str2+1,c
  3617  0102F2  EC0E  F090         	call	_my_strcmp	;wreg free
  3618  0102F6  0900               	iorlw	0
  3619  0102F8  B4D8               	btfsc	status,2,c
  3620  0102FA  D00D               	goto	l4714
  3621  0102FC  C0A3  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3622  010300  C0A4  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3623  010304  0EC5               	movlw	low STR_26
  3624  010306  6E21               	movwf	my_strcmp@str2,c
  3625  010308  0EFF               	movlw	high STR_26
  3626  01030A  6E22               	movwf	my_strcmp@str2+1,c
  3627  01030C  EC0E  F090         	call	_my_strcmp	;wreg free
  3628  010310  0900               	iorlw	0
  3629  010312  A4D8               	btfss	status,2,c
  3630  010314  D004               	goto	l4716
  3631  010316                     l4714:
  3632                           
  3633                           ;PIC18F27J53-killifish_light02.c: 255: light_mode = ADC_mode;
  3634  010316  0E01               	movlw	1
  3635  010318  0101               	movlb	1	; () banked
  3636  01031A  6FC8               	movwf	_light_mode& (0+255),b
  3637                           
  3638                           ; BSR set to: 1
  3639  01031C  D000               	goto	l4716
  3640  01031E                     l4716:
  3641                           
  3642                           ;PIC18F27J53-killifish_light02.c: 256: }
  3643                           ;PIC18F27J53-killifish_light02.c: 257: }
  3644                           ;PIC18F27J53-killifish_light02.c: 258: if (!my_strcmp(opcode, "pwm") || !my_strcmp(opcod
      +                          e, "PWM")) {
  3645  01031E  C0A1  F01F         	movff	command_operation@opcode,my_strcmp@str1
  3646  010322  C0A2  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3647  010326  0ED1               	movlw	low STR_27
  3648  010328  6E21               	movwf	my_strcmp@str2,c
  3649  01032A  0EFF               	movlw	high STR_27
  3650  01032C  6E22               	movwf	my_strcmp@str2+1,c
  3651  01032E  EC0E  F090         	call	_my_strcmp	;wreg free
  3652  010332  0900               	iorlw	0
  3653  010334  B4D8               	btfsc	status,2,c
  3654  010336  D00D               	goto	l4720
  3655  010338  C0A1  F01F         	movff	command_operation@opcode,my_strcmp@str1
  3656  01033C  C0A2  F020         	movff	command_operation@opcode+1,my_strcmp@str1+1
  3657  010340  0EC9               	movlw	low STR_28
  3658  010342  6E21               	movwf	my_strcmp@str2,c
  3659  010344  0EFF               	movlw	high STR_28
  3660  010346  6E22               	movwf	my_strcmp@str2+1,c
  3661  010348  EC0E  F090         	call	_my_strcmp	;wreg free
  3662  01034C  0900               	iorlw	0
  3663  01034E  A4D8               	btfss	status,2,c
  3664  010350  0012               	return	
  3665  010352                     l4720:
  3666                           
  3667                           ;PIC18F27J53-killifish_light02.c: 259: if (!my_strcmp(opland1, "r") || !my_strcmp(opland
      +                          1, "R")) {
  3668  010352  C0A3  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3669  010356  C0A4  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3670  01035A  0EB0               	movlw	low (STR_37+4)
  3671  01035C  6E21               	movwf	my_strcmp@str2,c
  3672  01035E  0EFF               	movlw	high (STR_37+4)
  3673  010360  6E22               	movwf	my_strcmp@str2+1,c
  3674  010362  EC0E  F090         	call	_my_strcmp	;wreg free
  3675  010366  0900               	iorlw	0
  3676  010368  B4D8               	btfsc	status,2,c
  3677  01036A  D00D               	goto	l4724
  3678  01036C  C0A3  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3679  010370  C0A4  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3680  010374  0EEC               	movlw	low STR_30
  3681  010376  6E21               	movwf	my_strcmp@str2,c
  3682  010378  0EFF               	movlw	high STR_30
  3683  01037A  6E22               	movwf	my_strcmp@str2+1,c
  3684  01037C  EC0E  F090         	call	_my_strcmp	;wreg free
  3685  010380  0900               	iorlw	0
  3686  010382  A4D8               	btfss	status,2,c
  3687  010384  D011               	goto	l4728
  3688  010386                     l4724:
  3689                           
  3690                           ;PIC18F27J53-killifish_light02.c: 260: light_mode = COMMAND_mode;
  3691  010386  0E02               	movlw	2
  3692  010388  0101               	movlb	1	; () banked
  3693  01038A  6FC8               	movwf	_light_mode& (0+255),b
  3694                           
  3695                           ; BSR set to: 1
  3696                           ;PIC18F27J53-killifish_light02.c: 261: PWM_set(0, my_atoi(opland2));
  3697  01038C  C0A5  F066         	movff	command_operation@opland2,my_atoi@str
  3698  010390  C0A6  F067         	movff	command_operation@opland2+1,my_atoi@str+1
  3699  010394  EC6D  F08F         	call	_my_atoi	;wreg free
  3700  010398  C066  F06E         	movff	?_my_atoi,PWM_set@value
  3701  01039C  C067  F06F         	movff	?_my_atoi+1,PWM_set@value+1
  3702  0103A0  0E00               	movlw	0
  3703  0103A2  EC4E  F089         	call	_PWM_set
  3704  0103A6  D000               	goto	l4728
  3705  0103A8                     l4728:
  3706                           
  3707                           ;PIC18F27J53-killifish_light02.c: 262: }
  3708                           ;PIC18F27J53-killifish_light02.c: 263: if (!my_strcmp(opland1, "g") || !my_strcmp(opland
      +                          1, "G")) {
  3709  0103A8  C0A3  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3710  0103AC  C0A4  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3711  0103B0  0EF4               	movlw	low STR_31
  3712  0103B2  6E21               	movwf	my_strcmp@str2,c
  3713  0103B4  0EFF               	movlw	high STR_31
  3714  0103B6  6E22               	movwf	my_strcmp@str2+1,c
  3715  0103B8  EC0E  F090         	call	_my_strcmp	;wreg free
  3716  0103BC  0900               	iorlw	0
  3717  0103BE  B4D8               	btfsc	status,2,c
  3718  0103C0  D00D               	goto	l4732
  3719  0103C2  C0A3  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3720  0103C6  C0A4  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3721  0103CA  0EEA               	movlw	low STR_32
  3722  0103CC  6E21               	movwf	my_strcmp@str2,c
  3723  0103CE  0EFF               	movlw	high STR_32
  3724  0103D0  6E22               	movwf	my_strcmp@str2+1,c
  3725  0103D2  EC0E  F090         	call	_my_strcmp	;wreg free
  3726  0103D6  0900               	iorlw	0
  3727  0103D8  A4D8               	btfss	status,2,c
  3728  0103DA  D011               	goto	l4736
  3729  0103DC                     l4732:
  3730                           
  3731                           ;PIC18F27J53-killifish_light02.c: 264: light_mode = COMMAND_mode;
  3732  0103DC  0E02               	movlw	2
  3733  0103DE  0101               	movlb	1	; () banked
  3734  0103E0  6FC8               	movwf	_light_mode& (0+255),b
  3735                           
  3736                           ; BSR set to: 1
  3737                           ;PIC18F27J53-killifish_light02.c: 265: PWM_set(1, my_atoi(opland2));
  3738  0103E2  C0A5  F066         	movff	command_operation@opland2,my_atoi@str
  3739  0103E6  C0A6  F067         	movff	command_operation@opland2+1,my_atoi@str+1
  3740  0103EA  EC6D  F08F         	call	_my_atoi	;wreg free
  3741  0103EE  C066  F06E         	movff	?_my_atoi,PWM_set@value
  3742  0103F2  C067  F06F         	movff	?_my_atoi+1,PWM_set@value+1
  3743  0103F6  0E01               	movlw	1
  3744  0103F8  EC4E  F089         	call	_PWM_set
  3745  0103FC  D000               	goto	l4736
  3746  0103FE                     l4736:
  3747                           
  3748                           ;PIC18F27J53-killifish_light02.c: 266: }
  3749                           ;PIC18F27J53-killifish_light02.c: 267: if (!my_strcmp(opland1, "b") || !my_strcmp(opland
      +                          1, "B")) {
  3750  0103FE  C0A3  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3751  010402  C0A4  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3752  010406  0EF0               	movlw	low STR_33
  3753  010408  6E21               	movwf	my_strcmp@str2,c
  3754  01040A  0EFF               	movlw	high STR_33
  3755  01040C  6E22               	movwf	my_strcmp@str2+1,c
  3756  01040E  EC0E  F090         	call	_my_strcmp	;wreg free
  3757  010412  0900               	iorlw	0
  3758  010414  B4D8               	btfsc	status,2,c
  3759  010416  D00D               	goto	l4740
  3760  010418  C0A3  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3761  01041C  C0A4  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3762  010420  0EE8               	movlw	low STR_34
  3763  010422  6E21               	movwf	my_strcmp@str2,c
  3764  010424  0EFF               	movlw	high STR_34
  3765  010426  6E22               	movwf	my_strcmp@str2+1,c
  3766  010428  EC0E  F090         	call	_my_strcmp	;wreg free
  3767  01042C  0900               	iorlw	0
  3768  01042E  A4D8               	btfss	status,2,c
  3769  010430  D011               	goto	l4744
  3770  010432                     l4740:
  3771                           
  3772                           ;PIC18F27J53-killifish_light02.c: 268: light_mode = COMMAND_mode;
  3773  010432  0E02               	movlw	2
  3774  010434  0101               	movlb	1	; () banked
  3775  010436  6FC8               	movwf	_light_mode& (0+255),b
  3776                           
  3777                           ; BSR set to: 1
  3778                           ;PIC18F27J53-killifish_light02.c: 269: PWM_set(2, my_atoi(opland2));
  3779  010438  C0A5  F066         	movff	command_operation@opland2,my_atoi@str
  3780  01043C  C0A6  F067         	movff	command_operation@opland2+1,my_atoi@str+1
  3781  010440  EC6D  F08F         	call	_my_atoi	;wreg free
  3782  010444  C066  F06E         	movff	?_my_atoi,PWM_set@value
  3783  010448  C067  F06F         	movff	?_my_atoi+1,PWM_set@value+1
  3784  01044C  0E02               	movlw	2
  3785  01044E  EC4E  F089         	call	_PWM_set
  3786  010452  D000               	goto	l4744
  3787  010454                     l4744:
  3788                           
  3789                           ;PIC18F27J53-killifish_light02.c: 270: }
  3790                           ;PIC18F27J53-killifish_light02.c: 271: if (!my_strcmp(opland1, "w") || !my_strcmp(opland
      +                          1, "W")) {
  3791  010454  C0A3  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3792  010458  C0A4  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3793  01045C  0EFA               	movlw	low STR_35
  3794  01045E  6E21               	movwf	my_strcmp@str2,c
  3795  010460  0EFF               	movlw	high STR_35
  3796  010462  6E22               	movwf	my_strcmp@str2+1,c
  3797  010464  EC0E  F090         	call	_my_strcmp	;wreg free
  3798  010468  0900               	iorlw	0
  3799  01046A  B4D8               	btfsc	status,2,c
  3800  01046C  D00D               	goto	l4748
  3801  01046E  C0A3  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3802  010472  C0A4  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3803  010476  0EEE               	movlw	low STR_36
  3804  010478  6E21               	movwf	my_strcmp@str2,c
  3805  01047A  0EFF               	movlw	high STR_36
  3806  01047C  6E22               	movwf	my_strcmp@str2+1,c
  3807  01047E  EC0E  F090         	call	_my_strcmp	;wreg free
  3808  010482  0900               	iorlw	0
  3809  010484  A4D8               	btfss	status,2,c
  3810  010486  D011               	goto	l4752
  3811  010488                     l4748:
  3812                           
  3813                           ;PIC18F27J53-killifish_light02.c: 272: light_mode = COMMAND_mode;
  3814  010488  0E02               	movlw	2
  3815  01048A  0101               	movlb	1	; () banked
  3816  01048C  6FC8               	movwf	_light_mode& (0+255),b
  3817                           
  3818                           ; BSR set to: 1
  3819                           ;PIC18F27J53-killifish_light02.c: 273: PWM_set(3, my_atoi(opland2));
  3820  01048E  C0A5  F066         	movff	command_operation@opland2,my_atoi@str
  3821  010492  C0A6  F067         	movff	command_operation@opland2+1,my_atoi@str+1
  3822  010496  EC6D  F08F         	call	_my_atoi	;wreg free
  3823  01049A  C066  F06E         	movff	?_my_atoi,PWM_set@value
  3824  01049E  C067  F06F         	movff	?_my_atoi+1,PWM_set@value+1
  3825  0104A2  0E03               	movlw	3
  3826  0104A4  EC4E  F089         	call	_PWM_set
  3827  0104A8  D000               	goto	l4752
  3828  0104AA                     l4752:
  3829                           
  3830                           ;PIC18F27J53-killifish_light02.c: 274: }
  3831                           ;PIC18F27J53-killifish_light02.c: 275: if (!my_strcmp(opland1, "clear")) {
  3832  0104AA  C0A3  F01F         	movff	command_operation@opland1,my_strcmp@str1
  3833  0104AE  C0A4  F020         	movff	command_operation@opland1+1,my_strcmp@str1+1
  3834  0104B2  0EAC               	movlw	low STR_37
  3835  0104B4  6E21               	movwf	my_strcmp@str2,c
  3836  0104B6  0EFF               	movlw	high STR_37
  3837  0104B8  6E22               	movwf	my_strcmp@str2+1,c
  3838  0104BA  EC0E  F090         	call	_my_strcmp	;wreg free
  3839  0104BE  0900               	iorlw	0
  3840  0104C0  A4D8               	btfss	status,2,c
  3841  0104C2  0012               	return	
  3842                           
  3843                           ;PIC18F27J53-killifish_light02.c: 276: light_mode = COMMAND_mode;
  3844  0104C4  0E02               	movlw	2
  3845  0104C6  0101               	movlb	1	; () banked
  3846  0104C8  6FC8               	movwf	_light_mode& (0+255),b
  3847                           
  3848                           ; BSR set to: 1
  3849                           ;PIC18F27J53-killifish_light02.c: 277: PWM_set(0, 0);
  3850  0104CA  0E00               	movlw	0
  3851  0104CC  0100               	movlb	0	; () banked
  3852  0104CE  6F6F               	movwf	(PWM_set@value+1)& (0+255),b
  3853  0104D0  0E00               	movlw	0
  3854  0104D2  6F6E               	movwf	PWM_set@value& (0+255),b
  3855  0104D4  0E00               	movlw	0
  3856  0104D6  EC4E  F089         	call	_PWM_set
  3857                           
  3858                           ;PIC18F27J53-killifish_light02.c: 278: PWM_set(1, 0);
  3859  0104DA  0E00               	movlw	0
  3860  0104DC  0100               	movlb	0	; () banked
  3861  0104DE  6F6F               	movwf	(PWM_set@value+1)& (0+255),b
  3862  0104E0  0E00               	movlw	0
  3863  0104E2  6F6E               	movwf	PWM_set@value& (0+255),b
  3864  0104E4  0E01               	movlw	1
  3865  0104E6  EC4E  F089         	call	_PWM_set
  3866                           
  3867                           ;PIC18F27J53-killifish_light02.c: 279: PWM_set(2, 0);
  3868  0104EA  0E00               	movlw	0
  3869  0104EC  0100               	movlb	0	; () banked
  3870  0104EE  6F6F               	movwf	(PWM_set@value+1)& (0+255),b
  3871  0104F0  0E00               	movlw	0
  3872  0104F2  6F6E               	movwf	PWM_set@value& (0+255),b
  3873  0104F4  0E02               	movlw	2
  3874  0104F6  EC4E  F089         	call	_PWM_set
  3875                           
  3876                           ;PIC18F27J53-killifish_light02.c: 280: PWM_set(3, 0);
  3877  0104FA  0E00               	movlw	0
  3878  0104FC  0100               	movlb	0	; () banked
  3879  0104FE  6F6F               	movwf	(PWM_set@value+1)& (0+255),b
  3880  010500  0E00               	movlw	0
  3881  010502  6F6E               	movwf	PWM_set@value& (0+255),b
  3882  010504  0E03               	movlw	3
  3883  010506  EC4E  F089         	call	_PWM_set
  3884  01050A  0012               	return	
  3885  01050C  0012               	return		;funcret
  3886  01050E                     __end_of_command_operation:
  3887                           	opt stack 0
  3888                           tblptru	equ	0xFF8
  3889                           tblptrh	equ	0xFF7
  3890                           tblptrl	equ	0xFF6
  3891                           tablat	equ	0xFF5
  3892                           prodh	equ	0xFF4
  3893                           prodl	equ	0xFF3
  3894                           intcon	equ	0xFF2
  3895                           postinc0	equ	0xFEE
  3896                           wreg	equ	0xFE8
  3897                           postinc1	equ	0xFE6
  3898                           postdec1	equ	0xFE5
  3899                           fsr1h	equ	0xFE2
  3900                           fsr1l	equ	0xFE1
  3901                           indf2	equ	0xFDF
  3902                           postinc2	equ	0xFDE
  3903                           postdec2	equ	0xFDD
  3904                           fsr2h	equ	0xFDA
  3905                           fsr2l	equ	0xFD9
  3906                           status	equ	0xFD8
  3907                           
  3908 ;; *************** function _my_strcmp *****************
  3909 ;; Defined at:
  3910 ;;		line 53 in file "../My_header\My_stdlib.h"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  str1            2   30[COMRAM] PTR const unsigned char 
  3913 ;;		 -> rx_loop@opland1(100), rx_loop@opcode(100), 
  3914 ;;  str2            2   32[COMRAM] PTR const unsigned char 
  3915 ;;		 -> STR_37(6), STR_36(2), STR_35(2), STR_34(2), 
  3916 ;;		 -> STR_33(2), STR_32(2), STR_31(2), STR_30(2), 
  3917 ;;		 -> STR_29(2), STR_28(4), STR_27(4), STR_26(4), 
  3918 ;;		 -> STR_25(4), STR_24(5), STR_23(4), STR_22(2), 
  3919 ;;		 -> STR_21(11), STR_20(2), STR_19(2), STR_18(2), 
  3920 ;;		 -> STR_17(2), STR_16(2), STR_15(2), STR_14(12), 
  3921 ;;		 -> STR_13(3), STR_12(9), STR_10(2), STR_9(5), 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;		None
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  1    wreg      char 
  3926 ;; Registers used:
  3927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3933 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3935 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3936 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3937 ;;Total ram usage:        5 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; Hardware stack levels required when called:    4
  3940 ;; This function calls:
  3941 ;;		Nothing
  3942 ;; This function is called by:
  3943 ;;		_command_operation
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text7
  3948  01201C                     __ptext7:
  3949                           	opt stack 0
  3950  01201C                     _my_strcmp:
  3951                           	opt stack 24
  3952                           
  3953                           ;My_header\My_stdlib.h: 54: while (*str1 && *str2) {
  3954                           
  3955                           ;incstack = 0
  3956  01201C  D027               	goto	l4400
  3957  01201E                     l4392:
  3958                           
  3959                           ;My_header\My_stdlib.h: 55: if (*str1 != *str2)return (*str1 - *str2);
  3960  01201E  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  3961  012022  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  3962  012026  50DF               	movf	indf2,w,c
  3963  012028  6E23               	movwf	??_my_strcmp& (0+255),c
  3964  01202A  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  3965  01202E  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  3966  012032                     	if	0	;tblptru may be non-zero
  3967  012032                     	endif
  3968  012032                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3969  012032  0E00               	movlw	low (__mediumconst shr (0+16))
  3970  012034  6EF8               	movwf	tblptru,c
  3971  012036                     	endif
  3972  012036  0008               	tblrd		*
  3973  012038  50F5               	movf	tablat,w,c
  3974  01203A  1823               	xorwf	??_my_strcmp,w,c
  3975  01203C  B4D8               	btfsc	status,2,c
  3976  01203E  D011               	goto	l4398
  3977  012040  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  3978  012044  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  3979  012048  50DF               	movf	indf2,w,c
  3980  01204A  6E23               	movwf	??_my_strcmp& (0+255),c
  3981  01204C  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  3982  012050  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  3983  012054                     	if	0	;tblptru may be non-zero
  3984  012054                     	endif
  3985  012054                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3986  012054  0E00               	movlw	low (__mediumconst shr (0+16))
  3987  012056  6EF8               	movwf	tblptru,c
  3988  012058                     	endif
  3989  012058  0008               	tblrd		*
  3990  01205A  50F5               	movf	tablat,w,c
  3991  01205C  0800               	sublw	0
  3992  01205E  2423               	addwf	??_my_strcmp,w,c
  3993  012060  0012               	return	
  3994  012062                     l4398:
  3995                           
  3996                           ;My_header\My_stdlib.h: 56: str1++;
  3997  012062  4A1F               	infsnz	my_strcmp@str1,f,c
  3998  012064  2A20               	incf	my_strcmp@str1+1,f,c
  3999                           
  4000                           ;My_header\My_stdlib.h: 57: str2++;
  4001  012066  4A21               	infsnz	my_strcmp@str2,f,c
  4002  012068  2A22               	incf	my_strcmp@str2+1,f,c
  4003  01206A  D000               	goto	l4400
  4004  01206C                     l4400:
  4005  01206C  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  4006  012070  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  4007  012074  50DF               	movf	indf2,w,c
  4008  012076  B4D8               	btfsc	status,2,c
  4009  012078  D00D               	goto	l4404
  4010  01207A  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  4011  01207E  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  4012  012082                     	if	0	;tblptru may be non-zero
  4013  012082                     	endif
  4014  012082                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4015  012082  0E00               	movlw	low (__mediumconst shr (0+16))
  4016  012084  6EF8               	movwf	tblptru,c
  4017  012086                     	endif
  4018  012086  0008               	tblrd		*
  4019  012088  50F5               	movf	tablat,w,c
  4020  01208A  0900               	iorlw	0
  4021  01208C  B4D8               	btfsc	status,2,c
  4022  01208E  D002               	goto	l4404
  4023  012090  D7C6               	goto	l4392
  4024  012092  D000               	goto	l4404
  4025  012094                     l4404:
  4026                           
  4027                           ;My_header\My_stdlib.h: 58: }
  4028                           ;My_header\My_stdlib.h: 59: return (*str1 - *str2);
  4029  012094  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  4030  012098  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  4031  01209C  50DF               	movf	indf2,w,c
  4032  01209E  6E23               	movwf	??_my_strcmp& (0+255),c
  4033  0120A0  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  4034  0120A4  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  4035  0120A8                     	if	0	;tblptru may be non-zero
  4036  0120A8                     	endif
  4037  0120A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4038  0120A8  0E00               	movlw	low (__mediumconst shr (0+16))
  4039  0120AA  6EF8               	movwf	tblptru,c
  4040  0120AC                     	endif
  4041  0120AC  0008               	tblrd		*
  4042  0120AE  50F5               	movf	tablat,w,c
  4043  0120B0  0800               	sublw	0
  4044  0120B2  2423               	addwf	??_my_strcmp,w,c
  4045  0120B4  0012               	return	
  4046  0120B6  0012               	return		;funcret
  4047  0120B8                     __end_of_my_strcmp:
  4048                           	opt stack 0
  4049                           tblptru	equ	0xFF8
  4050                           tblptrh	equ	0xFF7
  4051                           tblptrl	equ	0xFF6
  4052                           tablat	equ	0xFF5
  4053                           prodh	equ	0xFF4
  4054                           prodl	equ	0xFF3
  4055                           intcon	equ	0xFF2
  4056                           postinc0	equ	0xFEE
  4057                           wreg	equ	0xFE8
  4058                           postinc1	equ	0xFE6
  4059                           postdec1	equ	0xFE5
  4060                           fsr1h	equ	0xFE2
  4061                           fsr1l	equ	0xFE1
  4062                           indf2	equ	0xFDF
  4063                           postinc2	equ	0xFDE
  4064                           postdec2	equ	0xFDD
  4065                           fsr2h	equ	0xFDA
  4066                           fsr2l	equ	0xFD9
  4067                           status	equ	0xFD8
  4068                           
  4069 ;; *************** function _my_atoi *****************
  4070 ;; Defined at:
  4071 ;;		line 41 in file "../My_header\My_stdlib.h"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;  str             2    6[BANK0 ] PTR const unsigned char 
  4074 ;;		 -> rx_loop@opland2(100), 
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;  ret             2   12[BANK0 ] unsigned int 
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  2    6[BANK0 ] unsigned int 
  4079 ;; Registers used:
  4080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4086 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4087 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4088 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4089 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4090 ;;Total ram usage:        8 bytes
  4091 ;; Hardware stack levels used:    1
  4092 ;; Hardware stack levels required when called:    5
  4093 ;; This function calls:
  4094 ;;		___wmul
  4095 ;; This function is called by:
  4096 ;;		_command_operation
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           	psect	text8
  4101  011EDA                     __ptext8:
  4102                           	opt stack 0
  4103  011EDA                     _my_atoi:
  4104                           	opt stack 23
  4105                           
  4106                           ;My_header\My_stdlib.h: 42: uint16_t ret = 0;
  4107                           
  4108                           ;incstack = 0
  4109  011EDA  0E00               	movlw	0
  4110  011EDC  0100               	movlb	0	; () banked
  4111  011EDE  6F6D               	movwf	(my_atoi@ret+1)& (0+255),b
  4112  011EE0  0E00               	movlw	0
  4113  011EE2  6F6C               	movwf	my_atoi@ret& (0+255),b
  4114                           
  4115                           ;My_header\My_stdlib.h: 43: while (*str) {
  4116  011EE4  D040               	goto	l4388
  4117  011EE6                     l4378:
  4118                           
  4119                           ; BSR set to: 0
  4120                           ;My_header\My_stdlib.h: 44: if (*str >= '0' && *str <= '9') {
  4121  011EE6  C066  FFD9         	movff	my_atoi@str,fsr2l
  4122  011EEA  C067  FFDA         	movff	my_atoi@str+1,fsr2h
  4123  011EEE  0E2F               	movlw	47
  4124  011EF0  64DF               	cpfsgt	indf2,c
  4125  011EF2  D035               	goto	l4386
  4126                           
  4127                           ; BSR set to: 0
  4128  011EF4  C066  FFD9         	movff	my_atoi@str,fsr2l
  4129  011EF8  C067  FFDA         	movff	my_atoi@str+1,fsr2h
  4130  011EFC  0E3A               	movlw	58
  4131  011EFE  60DF               	cpfslt	indf2,c
  4132  011F00  D02E               	goto	l4386
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;My_header\My_stdlib.h: 45: ret *= 10;
  4136  011F02  C06C  F060         	movff	my_atoi@ret,___wmul@multiplier
  4137  011F06  C06D  F061         	movff	my_atoi@ret+1,___wmul@multiplier+1
  4138  011F0A  0E00               	movlw	0
  4139  011F0C  0100               	movlb	0	; () banked
  4140  011F0E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4141  011F10  0E0A               	movlw	10
  4142  011F12  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4143  011F14  ECA9  F093         	call	___wmul	;wreg free
  4144  011F18  C060  F06C         	movff	?___wmul,my_atoi@ret
  4145  011F1C  C061  F06D         	movff	?___wmul+1,my_atoi@ret+1
  4146                           
  4147                           ;My_header\My_stdlib.h: 46: ret += *str - '0';
  4148  011F20  0ED0               	movlw	208
  4149  011F22  0100               	movlb	0	; () banked
  4150  011F24  6F68               	movwf	??_my_atoi& (0+255),b
  4151  011F26  0EFF               	movlw	255
  4152  011F28  0100               	movlb	0	; () banked
  4153  011F2A  6F69               	movwf	(??_my_atoi+1)& (0+255),b
  4154  011F2C  C066  FFD9         	movff	my_atoi@str,fsr2l
  4155  011F30  C067  FFDA         	movff	my_atoi@str+1,fsr2h
  4156  011F34  50DF               	movf	indf2,w,c
  4157  011F36  0100               	movlb	0	; () banked
  4158  011F38  6F6A               	movwf	(??_my_atoi+2)& (0+255),b
  4159  011F3A  6B6B               	clrf	(??_my_atoi+3)& (0+255),b
  4160  011F3C  0100               	movlb	0	; () banked
  4161  011F3E  5168               	movf	??_my_atoi& (0+255),w,b
  4162  011F40  0100               	movlb	0	; () banked
  4163  011F42  276A               	addwf	(??_my_atoi+2)& (0+255),f,b
  4164  011F44  0100               	movlb	0	; () banked
  4165  011F46  5169               	movf	(??_my_atoi+1)& (0+255),w,b
  4166  011F48  0100               	movlb	0	; () banked
  4167  011F4A  236B               	addwfc	(??_my_atoi+3)& (0+255),f,b
  4168  011F4C  0100               	movlb	0	; () banked
  4169  011F4E  516A               	movf	(??_my_atoi+2)& (0+255),w,b
  4170  011F50  0100               	movlb	0	; () banked
  4171  011F52  276C               	addwf	my_atoi@ret& (0+255),f,b
  4172  011F54  0100               	movlb	0	; () banked
  4173  011F56  516B               	movf	(??_my_atoi+3)& (0+255),w,b
  4174  011F58  0100               	movlb	0	; () banked
  4175  011F5A  236D               	addwfc	(my_atoi@ret+1)& (0+255),f,b
  4176  011F5C  D000               	goto	l4386
  4177  011F5E                     l4386:
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;My_header\My_stdlib.h: 47: }
  4181                           ;My_header\My_stdlib.h: 48: str++;
  4182  011F5E  0100               	movlb	0	; () banked
  4183  011F60  4B66               	infsnz	my_atoi@str& (0+255),f,b
  4184  011F62  2B67               	incf	(my_atoi@str+1)& (0+255),f,b
  4185  011F64  D000               	goto	l4388
  4186  011F66                     l4388:
  4187                           
  4188                           ; BSR set to: 0
  4189  011F66  C066  FFD9         	movff	my_atoi@str,fsr2l
  4190  011F6A  C067  FFDA         	movff	my_atoi@str+1,fsr2h
  4191  011F6E  50DF               	movf	indf2,w,c
  4192  011F70  A4D8               	btfss	status,2,c
  4193  011F72  D7B9               	goto	l4378
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;My_header\My_stdlib.h: 49: }
  4197                           ;My_header\My_stdlib.h: 50: return ret;
  4198  011F74  C06C  F066         	movff	my_atoi@ret,?_my_atoi
  4199  011F78  C06D  F067         	movff	my_atoi@ret+1,?_my_atoi+1
  4200                           
  4201                           ; BSR set to: 0
  4202  011F7C  0012               	return		;funcret
  4203  011F7E                     __end_of_my_atoi:
  4204                           	opt stack 0
  4205                           tblptru	equ	0xFF8
  4206                           tblptrh	equ	0xFF7
  4207                           tblptrl	equ	0xFF6
  4208                           tablat	equ	0xFF5
  4209                           prodh	equ	0xFF4
  4210                           prodl	equ	0xFF3
  4211                           intcon	equ	0xFF2
  4212                           postinc0	equ	0xFEE
  4213                           wreg	equ	0xFE8
  4214                           postinc1	equ	0xFE6
  4215                           postdec1	equ	0xFE5
  4216                           fsr1h	equ	0xFE2
  4217                           fsr1l	equ	0xFE1
  4218                           indf2	equ	0xFDF
  4219                           postinc2	equ	0xFDE
  4220                           postdec2	equ	0xFDD
  4221                           fsr2h	equ	0xFDA
  4222                           fsr2l	equ	0xFD9
  4223                           status	equ	0xFD8
  4224                           
  4225 ;; *************** function _comm_at *****************
  4226 ;; Defined at:
  4227 ;;		line 196 in file "PIC18F27J53-killifish_light02.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;  hand            2   60[BANK0 ] PTR unsigned char 
  4230 ;;		 -> caltime_now(7), 
  4231 ;;  min             1   62[BANK0 ] unsigned char 
  4232 ;;  max             1   63[BANK0 ] unsigned char 
  4233 ;;  value           1   64[BANK0 ] unsigned char 
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;		None
  4236 ;; Return value:  Size  Location     Type
  4237 ;;		None               void
  4238 ;; Registers used:
  4239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4245 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4248 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4249 ;;Total ram usage:        5 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; Hardware stack levels required when called:    9
  4252 ;; This function calls:
  4253 ;;		_RTCC_from_caltime
  4254 ;;		_print_time
  4255 ;;		_tx_sends
  4256 ;; This function is called by:
  4257 ;;		_command_operation
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261                           	psect	text9
  4262  0124C0                     __ptext9:
  4263                           	opt stack 0
  4264  0124C0                     _comm_at:
  4265                           	opt stack 19
  4266                           
  4267                           ;PIC18F27J53-killifish_light02.c: 197: if (value >= min && value <= max) {
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;incstack = 0
  4271  0124C0  0100               	movlb	0	; () banked
  4272  0124C2  519E               	movf	comm_at@min& (0+255),w,b
  4273  0124C4  0100               	movlb	0	; () banked
  4274  0124C6  5DA0               	subwf	comm_at@value& (0+255),w,b
  4275  0124C8  A0D8               	btfss	status,0,c
  4276  0124CA  D020               	goto	l4462
  4277                           
  4278                           ; BSR set to: 0
  4279  0124CC  0100               	movlb	0	; () banked
  4280  0124CE  51A0               	movf	comm_at@value& (0+255),w,b
  4281  0124D0  0100               	movlb	0	; () banked
  4282  0124D2  5D9F               	subwf	comm_at@max& (0+255),w,b
  4283  0124D4  A0D8               	btfss	status,0,c
  4284  0124D6  D01A               	goto	l4462
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;PIC18F27J53-killifish_light02.c: 198: *hand = value;
  4288  0124D8  C09C  FFD9         	movff	comm_at@hand,fsr2l
  4289  0124DC  C09D  FFDA         	movff	comm_at@hand+1,fsr2h
  4290  0124E0  C0A0  FFDF         	movff	comm_at@value,indf2
  4291                           
  4292                           ; BSR set to: 0
  4293                           ;PIC18F27J53-killifish_light02.c: 199: RTCC_from_caltime(&caltime_now, &epoch_now);
  4294  0124E4  0E2F               	movlw	low _caltime_now
  4295  0124E6  0100               	movlb	0	; () banked
  4296  0124E8  6F98               	movwf	RTCC_from_caltime@ct& (0+255),b
  4297  0124EA  0E00               	movlw	high _caltime_now
  4298  0124EC  0100               	movlb	0	; () banked
  4299  0124EE  6F99               	movwf	(RTCC_from_caltime@ct+1)& (0+255),b
  4300  0124F0  0E36               	movlw	low _epoch_now
  4301  0124F2  0100               	movlb	0	; () banked
  4302  0124F4  6F9A               	movwf	RTCC_from_caltime@ep& (0+255),b
  4303  0124F6  0E00               	movlw	high _epoch_now
  4304  0124F8  0100               	movlb	0	; () banked
  4305  0124FA  6F9B               	movwf	(RTCC_from_caltime@ep+1)& (0+255),b
  4306  0124FC  ECC5  F093         	call	_RTCC_from_caltime	;wreg free
  4307                           
  4308                           ;PIC18F27J53-killifish_light02.c: 200: time_change_flag = 1;
  4309  012500  0E01               	movlw	1
  4310  012502  0101               	movlb	1	; () banked
  4311  012504  6FC9               	movwf	_time_change_flag& (0+255),b
  4312                           
  4313                           ; BSR set to: 1
  4314                           ;PIC18F27J53-killifish_light02.c: 201: print_time();
  4315  012506  ECF5  F089         	call	_print_time	;wreg free
  4316                           
  4317                           ;PIC18F27J53-killifish_light02.c: 202: } else {
  4318  01250A  0012               	return	
  4319  01250C                     l4462:
  4320                           
  4321                           ;PIC18F27J53-killifish_light02.c: 203: tx_sends("\terror\n");
  4322  01250C  0EA4               	movlw	low STR_8
  4323  01250E  0100               	movlb	0	; () banked
  4324  012510  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  4325  012512  0EFF               	movlw	high STR_8
  4326  012514  0100               	movlb	0	; () banked
  4327  012516  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4328  012518  EC2D  F092         	call	_tx_sends	;wreg free
  4329  01251C  0012               	return	
  4330  01251E  0012               	return		;funcret
  4331  012520                     __end_of_comm_at:
  4332                           	opt stack 0
  4333                           tblptru	equ	0xFF8
  4334                           tblptrh	equ	0xFF7
  4335                           tblptrl	equ	0xFF6
  4336                           tablat	equ	0xFF5
  4337                           prodh	equ	0xFF4
  4338                           prodl	equ	0xFF3
  4339                           intcon	equ	0xFF2
  4340                           postinc0	equ	0xFEE
  4341                           wreg	equ	0xFE8
  4342                           postinc1	equ	0xFE6
  4343                           postdec1	equ	0xFE5
  4344                           fsr1h	equ	0xFE2
  4345                           fsr1l	equ	0xFE1
  4346                           indf2	equ	0xFDF
  4347                           postinc2	equ	0xFDE
  4348                           postdec2	equ	0xFDD
  4349                           fsr2h	equ	0xFDA
  4350                           fsr2l	equ	0xFD9
  4351                           status	equ	0xFD8
  4352                           
  4353 ;; *************** function _print_time *****************
  4354 ;; Defined at:
  4355 ;;		line 173 in file "PIC18F27J53-killifish_light02.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;		None
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;		None
  4360 ;; Return value:  Size  Location     Type
  4361 ;;		None               void
  4362 ;; Registers used:
  4363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4373 ;;Total ram usage:        0 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; Hardware stack levels required when called:    8
  4376 ;; This function calls:
  4377 ;;		_RTCC_from_RTCC
  4378 ;;		_tx_send
  4379 ;;		_tx_send_dec
  4380 ;;		_tx_sends
  4381 ;; This function is called by:
  4382 ;;		_comm_at
  4383 ;;		_command_operation
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           	psect	text10
  4388  0113EA                     __ptext10:
  4389                           	opt stack 0
  4390  0113EA                     _print_time:
  4391                           	opt stack 20
  4392                           
  4393                           ;PIC18F27J53-killifish_light02.c: 174: RTCC_from_RTCC(&caltime_now, &epoch_now);
  4394                           
  4395                           ;incstack = 0
  4396  0113EA  0E2F               	movlw	low _caltime_now
  4397  0113EC  0100               	movlb	0	; () banked
  4398  0113EE  6F82               	movwf	RTCC_from_RTCC@ct& (0+255),b
  4399  0113F0  0E00               	movlw	high _caltime_now
  4400  0113F2  0100               	movlb	0	; () banked
  4401  0113F4  6F83               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  4402  0113F6  0E36               	movlw	low _epoch_now
  4403  0113F8  0100               	movlb	0	; () banked
  4404  0113FA  6F84               	movwf	RTCC_from_RTCC@ep& (0+255),b
  4405  0113FC  0E00               	movlw	high _epoch_now
  4406  0113FE  0100               	movlb	0	; () banked
  4407  011400  6F85               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  4408  011402  EC31  F094         	call	_RTCC_from_RTCC	;wreg free
  4409                           
  4410                           ;PIC18F27J53-killifish_light02.c: 175: GIE = 0;
  4411  011406  9EF2               	bcf	intcon,7,c	;volatile
  4412                           
  4413                           ;PIC18F27J53-killifish_light02.c: 176: tx_sends("    ");
  4414  011408  0EB2               	movlw	low STR_2
  4415  01140A  0100               	movlb	0	; () banked
  4416  01140C  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  4417  01140E  0EFF               	movlw	high STR_2
  4418  011410  0100               	movlb	0	; () banked
  4419  011412  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4420  011414  EC2D  F092         	call	_tx_sends	;wreg free
  4421                           
  4422                           ;PIC18F27J53-killifish_light02.c: 177: tx_send_dec(20, edit_flag.flag.YY);
  4423  011418  0E00               	movlw	0
  4424  01141A  BA2A               	btfsc	_edit_flag,5,c
  4425  01141C  0E01               	movlw	1
  4426  01141E  0100               	movlb	0	; () banked
  4427  011420  6F75               	movwf	tx_send_dec@edit& (0+255),b
  4428  011422  0E14               	movlw	20
  4429  011424  ECBF  F092         	call	_tx_send_dec
  4430                           
  4431                           ;PIC18F27J53-killifish_light02.c: 178: tx_send_dec(caltime_now.YY, edit_flag.flag.YY);
  4432  011428  0E00               	movlw	0
  4433  01142A  BA2A               	btfsc	_edit_flag,5,c
  4434  01142C  0E01               	movlw	1
  4435  01142E  0100               	movlb	0	; () banked
  4436  011430  6F75               	movwf	tx_send_dec@edit& (0+255),b
  4437  011432  5035               	movf	_caltime_now+6,w,c
  4438  011434  ECBF  F092         	call	_tx_send_dec
  4439                           
  4440                           ;PIC18F27J53-killifish_light02.c: 179: tx_sends("/");
  4441  011438  0EE4               	movlw	low STR_3
  4442  01143A  0100               	movlb	0	; () banked
  4443  01143C  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  4444  01143E  0EFF               	movlw	high STR_3
  4445  011440  0100               	movlb	0	; () banked
  4446  011442  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4447  011444  EC2D  F092         	call	_tx_sends	;wreg free
  4448                           
  4449                           ;PIC18F27J53-killifish_light02.c: 180: tx_send_dec(caltime_now.MM, edit_flag.flag.MM);
  4450  011448  0E00               	movlw	0
  4451  01144A  B82A               	btfsc	_edit_flag,4,c
  4452  01144C  0E01               	movlw	1
  4453  01144E  0100               	movlb	0	; () banked
  4454  011450  6F75               	movwf	tx_send_dec@edit& (0+255),b
  4455  011452  5034               	movf	_caltime_now+5,w,c
  4456  011454  ECBF  F092         	call	_tx_send_dec
  4457                           
  4458                           ;PIC18F27J53-killifish_light02.c: 181: tx_sends("/");
  4459  011458  0EE4               	movlw	low STR_3
  4460  01145A  0100               	movlb	0	; () banked
  4461  01145C  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  4462  01145E  0EFF               	movlw	high STR_3
  4463  011460  0100               	movlb	0	; () banked
  4464  011462  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4465  011464  EC2D  F092         	call	_tx_sends	;wreg free
  4466                           
  4467                           ;PIC18F27J53-killifish_light02.c: 182: tx_send_dec(caltime_now.DD, edit_flag.flag.DD);
  4468  011468  0E00               	movlw	0
  4469  01146A  B62A               	btfsc	_edit_flag,3,c
  4470  01146C  0E01               	movlw	1
  4471  01146E  0100               	movlb	0	; () banked
  4472  011470  6F75               	movwf	tx_send_dec@edit& (0+255),b
  4473  011472  5033               	movf	_caltime_now+4,w,c
  4474  011474  ECBF  F092         	call	_tx_send_dec
  4475                           
  4476                           ;PIC18F27J53-killifish_light02.c: 183: tx_sends(" (");
  4477  011478  0EDC               	movlw	low STR_5
  4478  01147A  0100               	movlb	0	; () banked
  4479  01147C  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  4480  01147E  0EFF               	movlw	high STR_5
  4481  011480  0100               	movlb	0	; () banked
  4482  011482  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4483  011484  EC2D  F092         	call	_tx_sends	;wreg free
  4484                           
  4485                           ;PIC18F27J53-killifish_light02.c: 184: tx_sends(weekday_3char[caltime_now.EE]);
  4486  011488  5032               	movf	_caltime_now+3,w,c
  4487  01148A  0D04               	mullw	4
  4488  01148C  0E2D               	movlw	low _weekday_3char
  4489  01148E  24F3               	addwf	prodl,w,c
  4490  011490  0100               	movlb	0	; () banked
  4491  011492  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  4492  011494  0EFE               	movlw	high _weekday_3char
  4493  011496  20F4               	addwfc	prodh,w,c
  4494  011498  0100               	movlb	0	; () banked
  4495  01149A  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4496  01149C  EC2D  F092         	call	_tx_sends	;wreg free
  4497                           
  4498                           ;PIC18F27J53-killifish_light02.c: 185: tx_sends(") ");
  4499  0114A0  0ED9               	movlw	low STR_6
  4500  0114A2  0100               	movlb	0	; () banked
  4501  0114A4  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  4502  0114A6  0EFF               	movlw	high STR_6
  4503  0114A8  0100               	movlb	0	; () banked
  4504  0114AA  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4505  0114AC  EC2D  F092         	call	_tx_sends	;wreg free
  4506                           
  4507                           ;PIC18F27J53-killifish_light02.c: 186: tx_send_dec(caltime_now.hh, edit_flag.flag.hh);
  4508  0114B0  0E00               	movlw	0
  4509  0114B2  B42A               	btfsc	_edit_flag,2,c
  4510  0114B4  0E01               	movlw	1
  4511  0114B6  0100               	movlb	0	; () banked
  4512  0114B8  6F75               	movwf	tx_send_dec@edit& (0+255),b
  4513  0114BA  5031               	movf	_caltime_now+2,w,c
  4514  0114BC  ECBF  F092         	call	_tx_send_dec
  4515                           
  4516                           ;PIC18F27J53-killifish_light02.c: 187: if (colon)tx_send(':');
  4517  0114C0  5028               	movf	_colon,w,c
  4518  0114C2  B4D8               	btfsc	status,2,c
  4519  0114C4  D004               	goto	l4358
  4520  0114C6  0E3A               	movlw	58
  4521  0114C8  EC8E  F094         	call	_tx_send
  4522  0114CC  D004               	goto	l4360
  4523  0114CE                     l4358:
  4524                           
  4525                           ;PIC18F27J53-killifish_light02.c: 188: else tx_send(' ');
  4526  0114CE  0E20               	movlw	32
  4527  0114D0  EC8E  F094         	call	_tx_send
  4528  0114D4  D000               	goto	l4360
  4529  0114D6                     l4360:
  4530                           
  4531                           ;PIC18F27J53-killifish_light02.c: 189: tx_send_dec(caltime_now.mm, edit_flag.flag.mm);
  4532  0114D6  0E00               	movlw	0
  4533  0114D8  B22A               	btfsc	_edit_flag,1,c
  4534  0114DA  0E01               	movlw	1
  4535  0114DC  0100               	movlb	0	; () banked
  4536  0114DE  6F75               	movwf	tx_send_dec@edit& (0+255),b
  4537  0114E0  5030               	movf	_caltime_now+1,w,c
  4538  0114E2  ECBF  F092         	call	_tx_send_dec
  4539                           
  4540                           ;PIC18F27J53-killifish_light02.c: 190: tx_sends("-");
  4541  0114E6  0EE2               	movlw	low STR_7
  4542  0114E8  0100               	movlb	0	; () banked
  4543  0114EA  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  4544  0114EC  0EFF               	movlw	high STR_7
  4545  0114EE  0100               	movlb	0	; () banked
  4546  0114F0  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4547  0114F2  EC2D  F092         	call	_tx_sends	;wreg free
  4548                           
  4549                           ;PIC18F27J53-killifish_light02.c: 191: tx_send_dec(caltime_now.ss, edit_flag.flag.ss);
  4550  0114F6  0E00               	movlw	0
  4551  0114F8  B02A               	btfsc	_edit_flag,0,c
  4552  0114FA  0E01               	movlw	1
  4553  0114FC  0100               	movlb	0	; () banked
  4554  0114FE  6F75               	movwf	tx_send_dec@edit& (0+255),b
  4555  011500  502F               	movf	_caltime_now,w,c
  4556  011502  ECBF  F092         	call	_tx_send_dec
  4557                           
  4558                           ;PIC18F27J53-killifish_light02.c: 192: tx_send('\n');
  4559  011506  0E0A               	movlw	10
  4560  011508  EC8E  F094         	call	_tx_send
  4561                           
  4562                           ;PIC18F27J53-killifish_light02.c: 193: GIE = 1;
  4563  01150C  8EF2               	bsf	intcon,7,c	;volatile
  4564  01150E  0012               	return		;funcret
  4565  011510                     __end_of_print_time:
  4566                           	opt stack 0
  4567                           tblptru	equ	0xFF8
  4568                           tblptrh	equ	0xFF7
  4569                           tblptrl	equ	0xFF6
  4570                           tablat	equ	0xFF5
  4571                           prodh	equ	0xFF4
  4572                           prodl	equ	0xFF3
  4573                           intcon	equ	0xFF2
  4574                           postinc0	equ	0xFEE
  4575                           wreg	equ	0xFE8
  4576                           postinc1	equ	0xFE6
  4577                           postdec1	equ	0xFE5
  4578                           fsr1h	equ	0xFE2
  4579                           fsr1l	equ	0xFE1
  4580                           indf2	equ	0xFDF
  4581                           postinc2	equ	0xFDE
  4582                           postdec2	equ	0xFDD
  4583                           fsr2h	equ	0xFDA
  4584                           fsr2l	equ	0xFD9
  4585                           status	equ	0xFD8
  4586                           
  4587 ;; *************** function _tx_send_dec *****************
  4588 ;; Defined at:
  4589 ;;		line 166 in file "PIC18F27J53-killifish_light02.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;  dec             1    wreg     unsigned char 
  4592 ;;  edit            1   21[BANK0 ] unsigned char 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  dec             1   32[BANK0 ] unsigned char 
  4595 ;;  str            10   22[BANK0 ] unsigned char [10]
  4596 ;; Return value:  Size  Location     Type
  4597 ;;		None               void
  4598 ;; Registers used:
  4599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4605 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4606 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4608 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4609 ;;Total ram usage:       12 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    7
  4612 ;; This function calls:
  4613 ;;		_my_utoa
  4614 ;;		_tx_sends
  4615 ;; This function is called by:
  4616 ;;		_print_time
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           	psect	text11
  4621  01257E                     __ptext11:
  4622                           	opt stack 0
  4623  01257E                     _tx_send_dec:
  4624                           	opt stack 20
  4625                           
  4626                           ;incstack = 0
  4627                           ;tx_send_dec@dec stored from wreg
  4628  01257E  0100               	movlb	0	; () banked
  4629  012580  6F80               	movwf	tx_send_dec@dec& (0+255),b
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;PIC18F27J53-killifish_light02.c: 167: uint8_t str[10];
  4633                           ;PIC18F27J53-killifish_light02.c: 168: my_utoa(&str, dec, 2);
  4634  012582  0E76               	movlw	low tx_send_dec@str
  4635  012584  0100               	movlb	0	; () banked
  4636  012586  6F6D               	movwf	my_utoa@str& (0+255),b
  4637  012588  0E00               	movlw	high tx_send_dec@str
  4638  01258A  0100               	movlb	0	; () banked
  4639  01258C  6F6E               	movwf	(my_utoa@str+1)& (0+255),b
  4640  01258E  C080  F06F         	movff	tx_send_dec@dec,my_utoa@value
  4641  012592  0100               	movlb	0	; () banked
  4642  012594  6B70               	clrf	(my_utoa@value+1)& (0+255),b
  4643  012596  0E02               	movlw	2
  4644  012598  0100               	movlb	0	; () banked
  4645  01259A  6F71               	movwf	my_utoa@digits& (0+255),b
  4646  01259C  ECEC  F090         	call	_my_utoa	;wreg free
  4647                           
  4648                           ;PIC18F27J53-killifish_light02.c: 169: if (edit && RTCCFGbits.HALFSEC)tx_sends("  ");
  4649  0125A0  0100               	movlb	0	; () banked
  4650  0125A2  5175               	movf	tx_send_dec@edit& (0+255),w,b
  4651  0125A4  0100               	movlb	0	; () banked
  4652  0125A6  B4D8               	btfsc	status,2,c
  4653  0125A8  D00C               	goto	l4322
  4654                           
  4655                           ; BSR set to: 0
  4656  0125AA  010F               	movlb	15	; () banked
  4657  0125AC  A73F               	btfss	63,3,b	;volatile
  4658  0125AE  D009               	goto	l4322
  4659                           
  4660                           ; BSR set to: 15
  4661  0125B0  0EB4               	movlw	low (STR_2+2)
  4662  0125B2  0100               	movlb	0	; () banked
  4663  0125B4  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  4664  0125B6  0EFF               	movlw	high (STR_2+2)
  4665  0125B8  0100               	movlb	0	; () banked
  4666  0125BA  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4667  0125BC  EC2D  F092         	call	_tx_sends	;wreg free
  4668  0125C0  0012               	return	
  4669  0125C2                     l4322:
  4670                           
  4671                           ;PIC18F27J53-killifish_light02.c: 170: else tx_sends(str);
  4672  0125C2  0E76               	movlw	low tx_send_dec@str
  4673  0125C4  0100               	movlb	0	; () banked
  4674  0125C6  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  4675  0125C8  0E00               	movlw	high tx_send_dec@str
  4676  0125CA  0100               	movlb	0	; () banked
  4677  0125CC  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  4678  0125CE  EC2D  F092         	call	_tx_sends	;wreg free
  4679  0125D2  0012               	return	
  4680  0125D4  0012               	return		;funcret
  4681  0125D6                     __end_of_tx_send_dec:
  4682                           	opt stack 0
  4683                           tblptru	equ	0xFF8
  4684                           tblptrh	equ	0xFF7
  4685                           tblptrl	equ	0xFF6
  4686                           tablat	equ	0xFF5
  4687                           prodh	equ	0xFF4
  4688                           prodl	equ	0xFF3
  4689                           intcon	equ	0xFF2
  4690                           postinc0	equ	0xFEE
  4691                           wreg	equ	0xFE8
  4692                           postinc1	equ	0xFE6
  4693                           postdec1	equ	0xFE5
  4694                           fsr1h	equ	0xFE2
  4695                           fsr1l	equ	0xFE1
  4696                           indf2	equ	0xFDF
  4697                           postinc2	equ	0xFDE
  4698                           postdec2	equ	0xFDD
  4699                           fsr2h	equ	0xFDA
  4700                           fsr2l	equ	0xFD9
  4701                           status	equ	0xFD8
  4702                           
  4703 ;; *************** function _tx_sends *****************
  4704 ;; Defined at:
  4705 ;;		line 227 in file "../My_header\My_header.h"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;  asciicode       2   10[BANK0 ] PTR const unsigned char 
  4708 ;;		 -> STR_40(4), STR_39(4), STR_38(2), STR_11(315), 
  4709 ;;		 -> STR_8(8), STR_7(2), STR_6(3), weekday_3char(28), 
  4710 ;;		 -> STR_5(3), STR_4(2), STR_3(2), STR_2(5), 
  4711 ;;		 -> STR_1(3), tx_send_dec@str(10), 
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;		None
  4714 ;; Return value:  Size  Location     Type
  4715 ;;		None               void
  4716 ;; Registers used:
  4717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4723 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4726 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4727 ;;Total ram usage:        2 bytes
  4728 ;; Hardware stack levels used:    1
  4729 ;; Hardware stack levels required when called:    6
  4730 ;; This function calls:
  4731 ;;		_ringbuf_put
  4732 ;; This function is called by:
  4733 ;;		_tx_send_dec
  4734 ;;		_print_time
  4735 ;;		_comm_at
  4736 ;;		_command_operation
  4737 ;;		_rx_loop
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           	psect	text12
  4742  01245A                     __ptext12:
  4743                           	opt stack 0
  4744  01245A                     _tx_sends:
  4745                           	opt stack 23
  4746                           
  4747                           ;My_header\My_header.h: 228: while (*asciicode) {
  4748                           
  4749                           ;incstack = 0
  4750  01245A  D01C               	goto	l4160
  4751  01245C                     l4156:
  4752                           
  4753                           ;My_header\My_header.h: 229: ringbuf_put(&tx_buf, *asciicode++);
  4754  01245C  0ED2               	movlw	low _tx_buf
  4755  01245E  6E21               	movwf	ringbuf_put@rb,c
  4756  012460  0E01               	movlw	high _tx_buf
  4757  012462  6E22               	movwf	ringbuf_put@rb+1,c
  4758  012464  C06A  FFF6         	movff	tx_sends@asciicode,tblptrl
  4759  012468  C06B  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  4760  01246C  0E00               	movlw	low (__mediumconst shr (0+16))
  4761  01246E  6EF8               	movwf	tblptru,c
  4762  012470  0E0E               	movlw	(high __ramtop+-1)
  4763  012472  64F7               	cpfsgt	tblptrh,c
  4764  012474  D003               	bra	u4457
  4765  012476  0008               	tblrd		*
  4766  012478  50F5               	movf	tablat,w,c
  4767  01247A  D005               	bra	u4450
  4768  01247C                     u4457:
  4769  01247C  CFF6 FFE1          	movff	tblptrl,fsr1l
  4770  012480  CFF7 FFE2          	movff	tblptrh,fsr1h
  4771  012484  50E7               	movf	indf1,w,c
  4772  012486                     u4450:
  4773  012486  6E23               	movwf	ringbuf_put@asciicode,c
  4774  012488  EC2E  F08C         	call	_ringbuf_put	;wreg free
  4775  01248C  0100               	movlb	0	; () banked
  4776  01248E  4B6A               	infsnz	tx_sends@asciicode& (0+255),f,b
  4777  012490  2B6B               	incf	(tx_sends@asciicode+1)& (0+255),f,b
  4778  012492  D000               	goto	l4160
  4779  012494                     l4160:
  4780  012494  C06A  FFF6         	movff	tx_sends@asciicode,tblptrl
  4781  012498  C06B  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  4782  01249C  0E00               	movlw	low (__mediumconst shr (0+16))
  4783  01249E  6EF8               	movwf	tblptru,c
  4784  0124A0  0E0E               	movlw	(high __ramtop+-1)
  4785  0124A2  64F7               	cpfsgt	tblptrh,c
  4786  0124A4  D003               	bra	u4467
  4787  0124A6  0008               	tblrd		*
  4788  0124A8  50F5               	movf	tablat,w,c
  4789  0124AA  D005               	bra	u4460
  4790  0124AC                     u4467:
  4791  0124AC  CFF6 FFE1          	movff	tblptrl,fsr1l
  4792  0124B0  CFF7 FFE2          	movff	tblptrh,fsr1h
  4793  0124B4  50E7               	movf	indf1,w,c
  4794  0124B6                     u4460:
  4795  0124B6  0900               	iorlw	0
  4796  0124B8  A4D8               	btfss	status,2,c
  4797  0124BA  D7D0               	goto	l4156
  4798                           
  4799                           ;My_header\My_header.h: 230: }
  4800                           ;My_header\My_header.h: 231: PIE1bits.TXIE = 1;
  4801  0124BC  889D               	bsf	3997,4,c	;volatile
  4802  0124BE  0012               	return		;funcret
  4803  0124C0                     __end_of_tx_sends:
  4804                           	opt stack 0
  4805                           tblptru	equ	0xFF8
  4806                           tblptrh	equ	0xFF7
  4807                           tblptrl	equ	0xFF6
  4808                           tablat	equ	0xFF5
  4809                           prodh	equ	0xFF4
  4810                           prodl	equ	0xFF3
  4811                           intcon	equ	0xFF2
  4812                           postinc0	equ	0xFEE
  4813                           wreg	equ	0xFE8
  4814                           indf1	equ	0xFE7
  4815                           postinc1	equ	0xFE6
  4816                           postdec1	equ	0xFE5
  4817                           fsr1h	equ	0xFE2
  4818                           fsr1l	equ	0xFE1
  4819                           indf2	equ	0xFDF
  4820                           postinc2	equ	0xFDE
  4821                           postdec2	equ	0xFDD
  4822                           fsr2h	equ	0xFDA
  4823                           fsr2l	equ	0xFD9
  4824                           status	equ	0xFD8
  4825                           
  4826 ;; *************** function _my_utoa *****************
  4827 ;; Defined at:
  4828 ;;		line 11 in file "../My_header\My_stdlib.h"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;  str             2   13[BANK0 ] PTR unsigned char 
  4831 ;;		 -> tx_send_dec@str(10), 
  4832 ;;  value           2   15[BANK0 ] unsigned int 
  4833 ;;  digits          1   17[BANK0 ] unsigned char 
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;  v               2   19[BANK0 ] unsigned int 
  4836 ;;  d               1   18[BANK0 ] unsigned char 
  4837 ;; Return value:  Size  Location     Type
  4838 ;;		None               void
  4839 ;; Registers used:
  4840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4846 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4847 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4849 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4850 ;;Total ram usage:        8 bytes
  4851 ;; Hardware stack levels used:    1
  4852 ;; Hardware stack levels required when called:    5
  4853 ;; This function calls:
  4854 ;;		___lwdiv
  4855 ;;		___lwmod
  4856 ;; This function is called by:
  4857 ;;		_tx_send_dec
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           	psect	text13
  4862  0121D8                     __ptext13:
  4863                           	opt stack 0
  4864  0121D8                     _my_utoa:
  4865                           	opt stack 21
  4866                           
  4867                           ;My_header\My_stdlib.h: 12: uint16_t v;
  4868                           ;My_header\My_stdlib.h: 13: uint8_t d;
  4869                           ;My_header\My_stdlib.h: 14: while (digits--) {
  4870                           
  4871                           ;incstack = 0
  4872  0121D8  D037               	goto	l4222
  4873  0121DA                     l426:
  4874                           
  4875                           ; BSR set to: 0
  4876                           ;My_header\My_stdlib.h: 15: v = value;
  4877  0121DA  C06F  F073         	movff	my_utoa@value,my_utoa@v
  4878  0121DE  C070  F074         	movff	my_utoa@value+1,my_utoa@v+1
  4879                           
  4880                           ;My_header\My_stdlib.h: 16: d = digits;
  4881  0121E2  C071  F072         	movff	my_utoa@digits,my_utoa@d
  4882                           
  4883                           ;My_header\My_stdlib.h: 17: while (d--) {
  4884  0121E6  D010               	goto	l4214
  4885  0121E8                     l4212:
  4886                           
  4887                           ; BSR set to: 0
  4888                           ;My_header\My_stdlib.h: 18: v /= 10;
  4889  0121E8  C073  F066         	movff	my_utoa@v,___lwdiv@dividend
  4890  0121EC  C074  F067         	movff	my_utoa@v+1,___lwdiv@dividend+1
  4891  0121F0  0E00               	movlw	0
  4892  0121F2  0100               	movlb	0	; () banked
  4893  0121F4  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  4894  0121F6  0E0A               	movlw	10
  4895  0121F8  6F68               	movwf	___lwdiv@divisor& (0+255),b
  4896  0121FA  EC73  F091         	call	___lwdiv	;wreg free
  4897  0121FE  C066  F073         	movff	?___lwdiv,my_utoa@v
  4898  012202  C067  F074         	movff	?___lwdiv+1,my_utoa@v+1
  4899  012206  D000               	goto	l4214
  4900  012208                     l4214:
  4901  012208  0100               	movlb	0	; () banked
  4902  01220A  0772               	decf	my_utoa@d& (0+255),f,b
  4903  01220C  0100               	movlb	0	; () banked
  4904  01220E  2972               	incf	my_utoa@d& (0+255),w,b
  4905  012210  A4D8               	btfss	status,2,c
  4906  012212  D7EA               	goto	l4212
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;My_header\My_stdlib.h: 19: }
  4910                           ;My_header\My_stdlib.h: 20: v %= 10;
  4911                           
  4912                           ; BSR set to: 0
  4913  012214  C073  F01F         	movff	my_utoa@v,___lwmod@dividend
  4914  012218  C074  F020         	movff	my_utoa@v+1,___lwmod@dividend+1
  4915  01221C  0E00               	movlw	0
  4916  01221E  6E22               	movwf	___lwmod@divisor+1,c
  4917  012220  0E0A               	movlw	10
  4918  012222  6E21               	movwf	___lwmod@divisor,c
  4919  012224  EC3C  F093         	call	___lwmod	;wreg free
  4920  012228  C01F  F073         	movff	?___lwmod,my_utoa@v
  4921  01222C  C020  F074         	movff	?___lwmod+1,my_utoa@v+1
  4922                           
  4923                           ;My_header\My_stdlib.h: 21: *str++ = '0' + v;
  4924  012230  0100               	movlb	0	; () banked
  4925  012232  5173               	movf	my_utoa@v& (0+255),w,b
  4926  012234  0F30               	addlw	48
  4927  012236  C06D  FFD9         	movff	my_utoa@str,fsr2l
  4928  01223A  C06E  FFDA         	movff	my_utoa@str+1,fsr2h
  4929  01223E  6EDF               	movwf	indf2,c
  4930                           
  4931                           ; BSR set to: 0
  4932  012240  0100               	movlb	0	; () banked
  4933  012242  4B6D               	infsnz	my_utoa@str& (0+255),f,b
  4934  012244  2B6E               	incf	(my_utoa@str+1)& (0+255),f,b
  4935  012246  D000               	goto	l4222
  4936  012248                     l4222:
  4937  012248  0100               	movlb	0	; () banked
  4938  01224A  0771               	decf	my_utoa@digits& (0+255),f,b
  4939  01224C  0100               	movlb	0	; () banked
  4940  01224E  2971               	incf	my_utoa@digits& (0+255),w,b
  4941  012250  A4D8               	btfss	status,2,c
  4942  012252  D7C3               	goto	l426
  4943                           
  4944                           ; BSR set to: 0
  4945                           ;My_header\My_stdlib.h: 22: }
  4946                           ;My_header\My_stdlib.h: 23: *str = '\0';
  4947                           
  4948                           ; BSR set to: 0
  4949  012254  C06D  FFD9         	movff	my_utoa@str,fsr2l
  4950  012258  C06E  FFDA         	movff	my_utoa@str+1,fsr2h
  4951  01225C  0E00               	movlw	0
  4952  01225E  6EDF               	movwf	indf2,c
  4953                           
  4954                           ; BSR set to: 0
  4955  012260  0012               	return		;funcret
  4956  012262                     __end_of_my_utoa:
  4957                           	opt stack 0
  4958                           tblptru	equ	0xFF8
  4959                           tblptrh	equ	0xFF7
  4960                           tblptrl	equ	0xFF6
  4961                           tablat	equ	0xFF5
  4962                           prodh	equ	0xFF4
  4963                           prodl	equ	0xFF3
  4964                           intcon	equ	0xFF2
  4965                           postinc0	equ	0xFEE
  4966                           wreg	equ	0xFE8
  4967                           indf1	equ	0xFE7
  4968                           postinc1	equ	0xFE6
  4969                           postdec1	equ	0xFE5
  4970                           fsr1h	equ	0xFE2
  4971                           fsr1l	equ	0xFE1
  4972                           indf2	equ	0xFDF
  4973                           postinc2	equ	0xFDE
  4974                           postdec2	equ	0xFDD
  4975                           fsr2h	equ	0xFDA
  4976                           fsr2l	equ	0xFD9
  4977                           status	equ	0xFD8
  4978                           
  4979 ;; *************** function ___lwmod *****************
  4980 ;; Defined at:
  4981 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;  dividend        2   30[COMRAM] unsigned int 
  4984 ;;  divisor         2   32[COMRAM] unsigned int 
  4985 ;; Auto vars:     Size  Location     Type
  4986 ;;  counter         1   34[COMRAM] unsigned char 
  4987 ;; Return value:  Size  Location     Type
  4988 ;;                  2   30[COMRAM] unsigned int 
  4989 ;; Registers used:
  4990 ;;		wreg, status,2, status,0
  4991 ;; Tracked objects:
  4992 ;;		On entry : 0/0
  4993 ;;		On exit  : 0/0
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4996 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4997 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4999 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5000 ;;Total ram usage:        5 bytes
  5001 ;; Hardware stack levels used:    1
  5002 ;; Hardware stack levels required when called:    4
  5003 ;; This function calls:
  5004 ;;		Nothing
  5005 ;; This function is called by:
  5006 ;;		_tx_sendn
  5007 ;;		_my_utoa
  5008 ;;		_ringbuf_put_num
  5009 ;; This function uses a non-reentrant model
  5010 ;;
  5011                           
  5012                           	psect	text14
  5013  012678                     __ptext14:
  5014                           	opt stack 0
  5015  012678                     ___lwmod:
  5016                           	opt stack 24
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;incstack = 0
  5020  012678  5021               	movf	___lwmod@divisor,w,c
  5021  01267A  1022               	iorwf	___lwmod@divisor+1,w,c
  5022  01267C  B4D8               	btfsc	status,2,c
  5023  01267E  D01D               	goto	l1155
  5024  012680  0E01               	movlw	1
  5025  012682  6E23               	movwf	___lwmod@counter,c
  5026  012684  D005               	goto	l4144
  5027  012686                     l4142:
  5028  012686  90D8               	bcf	status,0,c
  5029  012688  3621               	rlcf	___lwmod@divisor,f,c
  5030  01268A  3622               	rlcf	___lwmod@divisor+1,f,c
  5031  01268C  2A23               	incf	___lwmod@counter,f,c
  5032  01268E  D000               	goto	l4144
  5033  012690                     l4144:
  5034  012690  BE22               	btfsc	___lwmod@divisor+1,7,c
  5035  012692  D002               	goto	l4146
  5036  012694  D7F8               	goto	l4142
  5037  012696  D000               	goto	l4146
  5038  012698                     l4146:
  5039  012698  5021               	movf	___lwmod@divisor,w,c
  5040  01269A  5C1F               	subwf	___lwmod@dividend,w,c
  5041  01269C  5022               	movf	___lwmod@divisor+1,w,c
  5042  01269E  5820               	subwfb	___lwmod@dividend+1,w,c
  5043  0126A0  A0D8               	btfss	status,0,c
  5044  0126A2  D005               	goto	l4150
  5045  0126A4  5021               	movf	___lwmod@divisor,w,c
  5046  0126A6  5E1F               	subwf	___lwmod@dividend,f,c
  5047  0126A8  5022               	movf	___lwmod@divisor+1,w,c
  5048  0126AA  5A20               	subwfb	___lwmod@dividend+1,f,c
  5049  0126AC  D000               	goto	l4150
  5050  0126AE                     l4150:
  5051  0126AE  90D8               	bcf	status,0,c
  5052  0126B0  3222               	rrcf	___lwmod@divisor+1,f,c
  5053  0126B2  3221               	rrcf	___lwmod@divisor,f,c
  5054  0126B4  2E23               	decfsz	___lwmod@counter,f,c
  5055  0126B6  D7F0               	goto	l4146
  5056  0126B8  D000               	goto	l1155
  5057  0126BA                     l1155:
  5058  0126BA  C01F  F01F         	movff	___lwmod@dividend,?___lwmod
  5059  0126BE  C020  F020         	movff	___lwmod@dividend+1,?___lwmod+1
  5060  0126C2  0012               	return		;funcret
  5061  0126C4                     __end_of___lwmod:
  5062                           	opt stack 0
  5063                           tblptru	equ	0xFF8
  5064                           tblptrh	equ	0xFF7
  5065                           tblptrl	equ	0xFF6
  5066                           tablat	equ	0xFF5
  5067                           prodh	equ	0xFF4
  5068                           prodl	equ	0xFF3
  5069                           intcon	equ	0xFF2
  5070                           postinc0	equ	0xFEE
  5071                           wreg	equ	0xFE8
  5072                           indf1	equ	0xFE7
  5073                           postinc1	equ	0xFE6
  5074                           postdec1	equ	0xFE5
  5075                           fsr1h	equ	0xFE2
  5076                           fsr1l	equ	0xFE1
  5077                           indf2	equ	0xFDF
  5078                           postinc2	equ	0xFDE
  5079                           postdec2	equ	0xFDD
  5080                           fsr2h	equ	0xFDA
  5081                           fsr2l	equ	0xFD9
  5082                           status	equ	0xFD8
  5083                           
  5084 ;; *************** function _tx_send *****************
  5085 ;; Defined at:
  5086 ;;		line 222 in file "../My_header\My_header.h"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;  asciicode       1    wreg     const unsigned char 
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;  asciicode       1   10[BANK0 ] const unsigned char 
  5091 ;; Return value:  Size  Location     Type
  5092 ;;		None               void
  5093 ;; Registers used:
  5094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5101 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5103 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5104 ;;Total ram usage:        1 bytes
  5105 ;; Hardware stack levels used:    1
  5106 ;; Hardware stack levels required when called:    6
  5107 ;; This function calls:
  5108 ;;		_ringbuf_put
  5109 ;; This function is called by:
  5110 ;;		_tx_sendn
  5111 ;;		_print_time
  5112 ;;		_rx_loop
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116                           	psect	text15
  5117  01291C                     __ptext15:
  5118                           	opt stack 0
  5119  01291C                     _tx_send:
  5120                           	opt stack 22
  5121                           
  5122                           ;incstack = 0
  5123                           ;tx_send@asciicode stored from wreg
  5124  01291C  0100               	movlb	0	; () banked
  5125  01291E  6F6A               	movwf	tx_send@asciicode& (0+255),b
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;My_header\My_header.h: 223: ringbuf_put(&tx_buf, asciicode);
  5129  012920  0ED2               	movlw	low _tx_buf
  5130  012922  6E21               	movwf	ringbuf_put@rb,c
  5131  012924  0E01               	movlw	high _tx_buf
  5132  012926  6E22               	movwf	ringbuf_put@rb+1,c
  5133  012928  C06A  F023         	movff	tx_send@asciicode,ringbuf_put@asciicode
  5134  01292C  EC2E  F08C         	call	_ringbuf_put	;wreg free
  5135                           
  5136                           ;My_header\My_header.h: 224: PIE1bits.TXIE = 1;
  5137  012930  889D               	bsf	3997,4,c	;volatile
  5138  012932  0012               	return		;funcret
  5139  012934                     __end_of_tx_send:
  5140                           	opt stack 0
  5141                           tblptru	equ	0xFF8
  5142                           tblptrh	equ	0xFF7
  5143                           tblptrl	equ	0xFF6
  5144                           tablat	equ	0xFF5
  5145                           prodh	equ	0xFF4
  5146                           prodl	equ	0xFF3
  5147                           intcon	equ	0xFF2
  5148                           postinc0	equ	0xFEE
  5149                           wreg	equ	0xFE8
  5150                           indf1	equ	0xFE7
  5151                           postinc1	equ	0xFE6
  5152                           postdec1	equ	0xFE5
  5153                           fsr1h	equ	0xFE2
  5154                           fsr1l	equ	0xFE1
  5155                           indf2	equ	0xFDF
  5156                           postinc2	equ	0xFDE
  5157                           postdec2	equ	0xFDD
  5158                           fsr2h	equ	0xFDA
  5159                           fsr2l	equ	0xFD9
  5160                           status	equ	0xFD8
  5161                           
  5162 ;; *************** function _ringbuf_put *****************
  5163 ;; Defined at:
  5164 ;;		line 39 in file "../My_header\My_ringbuf.h"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;  rb              2   32[COMRAM] PTR struct ringbuf
  5167 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
  5168 ;;  asciicode       1   34[COMRAM] unsigned char 
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;		None
  5171 ;; Return value:  Size  Location     Type
  5172 ;;		None               void
  5173 ;; Registers used:
  5174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5180 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5182 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5183 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5184 ;;Total ram usage:        7 bytes
  5185 ;; Hardware stack levels used:    1
  5186 ;; Hardware stack levels required when called:    5
  5187 ;; This function calls:
  5188 ;;		_ringbuf_num
  5189 ;; This function is called by:
  5190 ;;		_tx_send
  5191 ;;		_tx_sends
  5192 ;;		_rx_loop
  5193 ;;		_ringbuf_put_num
  5194 ;;		_ringbuf_put_str
  5195 ;; This function uses a non-reentrant model
  5196 ;;
  5197                           
  5198                           	psect	text16
  5199  01185C                     __ptext16:
  5200                           	opt stack 0
  5201  01185C                     _ringbuf_put:
  5202                           	opt stack 23
  5203                           
  5204                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
  5205                           
  5206                           ;incstack = 0
  5207  01185C  C021  F01F         	movff	ringbuf_put@rb,ringbuf_num@rb
  5208  011860  C022  F020         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  5209  011864  EC88  F08A         	call	_ringbuf_num	;wreg free
  5210  011868  EE20 F002          	lfsr	2,2
  5211  01186C  5021               	movf	ringbuf_put@rb,w,c
  5212  01186E  26D9               	addwf	fsr2l,f,c
  5213  011870  5022               	movf	ringbuf_put@rb+1,w,c
  5214  011872  22DA               	addwfc	fsr2h,f,c
  5215  011874  50DE               	movf	postinc2,w,c
  5216  011876  5C1F               	subwf	?_ringbuf_num,w,c
  5217  011878  50DE               	movf	postinc2,w,c
  5218  01187A  5820               	subwfb	?_ringbuf_num+1,w,c
  5219  01187C  B0D8               	btfsc	status,0,c
  5220  01187E  0012               	return	
  5221                           
  5222                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
  5223  011880  EE20 F004          	lfsr	2,4
  5224  011884  5021               	movf	ringbuf_put@rb,w,c
  5225  011886  26D9               	addwf	fsr2l,f,c
  5226  011888  5022               	movf	ringbuf_put@rb+1,w,c
  5227  01188A  22DA               	addwfc	fsr2h,f,c
  5228  01188C  CFDE F066          	movff	postinc2,??_ringbuf_put
  5229  011890  CFDD F067          	movff	postdec2,??_ringbuf_put+1
  5230  011894  C021  FFD9         	movff	ringbuf_put@rb,fsr2l
  5231  011898  C022  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  5232  01189C  CFDE F068          	movff	postinc2,??_ringbuf_put+2
  5233  0118A0  CFDD F069          	movff	postdec2,??_ringbuf_put+3
  5234  0118A4  0100               	movlb	0	; () banked
  5235  0118A6  5166               	movf	??_ringbuf_put& (0+255),w,b
  5236  0118A8  0100               	movlb	0	; () banked
  5237  0118AA  2568               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  5238  0118AC  6ED9               	movwf	fsr2l,c
  5239  0118AE  0100               	movlb	0	; () banked
  5240  0118B0  5167               	movf	(??_ringbuf_put+1)& (0+255),w,b
  5241  0118B2  0100               	movlb	0	; () banked
  5242  0118B4  2169               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  5243  0118B6  6EDA               	movwf	fsr2h,c
  5244  0118B8  C023  FFDF         	movff	ringbuf_put@asciicode,indf2
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
  5248  0118BC  EE20 F002          	lfsr	2,2
  5249  0118C0  5021               	movf	ringbuf_put@rb,w,c
  5250  0118C2  26D9               	addwf	fsr2l,f,c
  5251  0118C4  5022               	movf	ringbuf_put@rb+1,w,c
  5252  0118C6  22DA               	addwfc	fsr2h,f,c
  5253  0118C8  EE10 F004          	lfsr	1,4
  5254  0118CC  5021               	movf	ringbuf_put@rb,w,c
  5255  0118CE  26E1               	addwf	fsr1l,f,c
  5256  0118D0  5022               	movf	ringbuf_put@rb+1,w,c
  5257  0118D2  22E2               	addwfc	fsr1h,f,c
  5258  0118D4  CFE6 F068          	movff	postinc1,??_ringbuf_put+2
  5259  0118D8  CFE5 F069          	movff	postdec1,??_ringbuf_put+3
  5260  0118DC  0E01               	movlw	1
  5261  0118DE  0100               	movlb	0	; () banked
  5262  0118E0  2768               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  5263  0118E2  0E00               	movlw	0
  5264  0118E4  2369               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  5265  0118E6  50DE               	movf	postinc2,w,c
  5266  0118E8  0100               	movlb	0	; () banked
  5267  0118EA  5D68               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  5268  0118EC  50DE               	movf	postinc2,w,c
  5269  0118EE  0100               	movlb	0	; () banked
  5270  0118F0  5969               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  5271  0118F2  B0D8               	btfsc	status,0,c
  5272  0118F4  D00A               	goto	l4022
  5273                           
  5274                           ; BSR set to: 0
  5275  0118F6  EE20 F004          	lfsr	2,4
  5276  0118FA  5021               	movf	ringbuf_put@rb,w,c
  5277  0118FC  26D9               	addwf	fsr2l,f,c
  5278  0118FE  5022               	movf	ringbuf_put@rb+1,w,c
  5279  011900  22DA               	addwfc	fsr2h,f,c
  5280  011902  2ADE               	incf	postinc2,f,c
  5281  011904  0E00               	movlw	0
  5282  011906  22DD               	addwfc	postdec2,f,c
  5283  011908  0012               	return	
  5284  01190A                     l4022:
  5285                           
  5286                           ; BSR set to: 0
  5287                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
  5288  01190A  EE20 F004          	lfsr	2,4
  5289  01190E  5021               	movf	ringbuf_put@rb,w,c
  5290  011910  26D9               	addwf	fsr2l,f,c
  5291  011912  5022               	movf	ringbuf_put@rb+1,w,c
  5292  011914  22DA               	addwfc	fsr2h,f,c
  5293  011916  0E00               	movlw	0
  5294  011918  6EDE               	movwf	postinc2,c
  5295  01191A  0E00               	movlw	0
  5296  01191C  6EDD               	movwf	postdec2,c
  5297                           
  5298                           ; BSR set to: 0
  5299  01191E  0012               	return	
  5300                           
  5301                           ; BSR set to: 0
  5302  011920  0012               	return		;funcret
  5303  011922                     __end_of_ringbuf_put:
  5304                           	opt stack 0
  5305                           tblptru	equ	0xFF8
  5306                           tblptrh	equ	0xFF7
  5307                           tblptrl	equ	0xFF6
  5308                           tablat	equ	0xFF5
  5309                           prodh	equ	0xFF4
  5310                           prodl	equ	0xFF3
  5311                           intcon	equ	0xFF2
  5312                           postinc0	equ	0xFEE
  5313                           wreg	equ	0xFE8
  5314                           indf1	equ	0xFE7
  5315                           postinc1	equ	0xFE6
  5316                           postdec1	equ	0xFE5
  5317                           fsr1h	equ	0xFE2
  5318                           fsr1l	equ	0xFE1
  5319                           indf2	equ	0xFDF
  5320                           postinc2	equ	0xFDE
  5321                           postdec2	equ	0xFDD
  5322                           fsr2h	equ	0xFDA
  5323                           fsr2l	equ	0xFD9
  5324                           status	equ	0xFD8
  5325                           
  5326 ;; *************** function _ringbuf_num *****************
  5327 ;; Defined at:
  5328 ;;		line 31 in file "../My_header\My_ringbuf.h"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;  rb              2   30[COMRAM] PTR struct ringbuf
  5331 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;		None
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  2   30[COMRAM] unsigned int 
  5336 ;; Registers used:
  5337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5343 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5345 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5346 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5347 ;;Total ram usage:        8 bytes
  5348 ;; Hardware stack levels used:    1
  5349 ;; Hardware stack levels required when called:    4
  5350 ;; This function calls:
  5351 ;;		Nothing
  5352 ;; This function is called by:
  5353 ;;		_ringbuf_put
  5354 ;;		_ringbuf_pop
  5355 ;;		_ringbuf_backspace
  5356 ;;		_rx_loop
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           	psect	text17
  5361  011510                     __ptext17:
  5362                           	opt stack 0
  5363  011510                     _ringbuf_num:
  5364                           	opt stack 23
  5365                           
  5366                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
  5367                           
  5368                           ;incstack = 0
  5369  011510  EE20 F006          	lfsr	2,6
  5370  011514  501F               	movf	ringbuf_num@rb,w,c
  5371  011516  26D9               	addwf	fsr2l,f,c
  5372  011518  5020               	movf	ringbuf_num@rb+1,w,c
  5373  01151A  22DA               	addwfc	fsr2h,f,c
  5374  01151C  EE10 F004          	lfsr	1,4
  5375  011520  501F               	movf	ringbuf_num@rb,w,c
  5376  011522  26E1               	addwf	fsr1l,f,c
  5377  011524  5020               	movf	ringbuf_num@rb+1,w,c
  5378  011526  22E2               	addwfc	fsr1h,f,c
  5379  011528  50DE               	movf	postinc2,w,c
  5380  01152A  5CE6               	subwf	postinc1,w,c
  5381  01152C  50DE               	movf	postinc2,w,c
  5382  01152E  58E6               	subwfb	postinc1,w,c
  5383  011530  A0D8               	btfss	status,0,c
  5384  011532  D024               	goto	l3974
  5385                           
  5386                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
  5387  011534  EE20 F004          	lfsr	2,4
  5388  011538  501F               	movf	ringbuf_num@rb,w,c
  5389  01153A  26D9               	addwf	fsr2l,f,c
  5390  01153C  5020               	movf	ringbuf_num@rb+1,w,c
  5391  01153E  22DA               	addwfc	fsr2h,f,c
  5392  011540  CFDE F060          	movff	postinc2,??_ringbuf_num
  5393  011544  CFDD F061          	movff	postdec2,??_ringbuf_num+1
  5394  011548  EE20 F006          	lfsr	2,6
  5395  01154C  501F               	movf	ringbuf_num@rb,w,c
  5396  01154E  26D9               	addwf	fsr2l,f,c
  5397  011550  5020               	movf	ringbuf_num@rb+1,w,c
  5398  011552  22DA               	addwfc	fsr2h,f,c
  5399  011554  CFDE F062          	movff	postinc2,??_ringbuf_num+2
  5400  011558  CFDD F063          	movff	postdec2,??_ringbuf_num+3
  5401  01155C  0100               	movlb	0	; () banked
  5402  01155E  1F62               	comf	(??_ringbuf_num+2)& (0+255),f,b
  5403  011560  1F63               	comf	(??_ringbuf_num+3)& (0+255),f,b
  5404  011562  4B62               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
  5405  011564  2B63               	incf	(??_ringbuf_num+3)& (0+255),f,b
  5406  011566  0100               	movlb	0	; () banked
  5407  011568  5160               	movf	??_ringbuf_num& (0+255),w,b
  5408  01156A  0100               	movlb	0	; () banked
  5409  01156C  2562               	addwf	(??_ringbuf_num+2)& (0+255),w,b
  5410  01156E  6E1F               	movwf	?_ringbuf_num,c
  5411  011570  0100               	movlb	0	; () banked
  5412  011572  5161               	movf	(??_ringbuf_num+1)& (0+255),w,b
  5413  011574  0100               	movlb	0	; () banked
  5414  011576  2163               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
  5415  011578  6E20               	movwf	?_ringbuf_num+1,c
  5416                           
  5417                           ; BSR set to: 0
  5418                           ;My_header\My_ringbuf.h: 34: } else {
  5419                           
  5420                           ; BSR set to: 0
  5421  01157A  0012               	return	
  5422  01157C                     l3974:
  5423                           
  5424                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
  5425  01157C  EE20 F004          	lfsr	2,4
  5426  011580  501F               	movf	ringbuf_num@rb,w,c
  5427  011582  26D9               	addwf	fsr2l,f,c
  5428  011584  5020               	movf	ringbuf_num@rb+1,w,c
  5429  011586  22DA               	addwfc	fsr2h,f,c
  5430  011588  CFDE F060          	movff	postinc2,??_ringbuf_num
  5431  01158C  CFDD F061          	movff	postdec2,??_ringbuf_num+1
  5432  011590  EE20 F002          	lfsr	2,2
  5433  011594  501F               	movf	ringbuf_num@rb,w,c
  5434  011596  26D9               	addwf	fsr2l,f,c
  5435  011598  5020               	movf	ringbuf_num@rb+1,w,c
  5436  01159A  22DA               	addwfc	fsr2h,f,c
  5437  01159C  CFDE F062          	movff	postinc2,??_ringbuf_num+2
  5438  0115A0  CFDD F063          	movff	postdec2,??_ringbuf_num+3
  5439  0115A4  EE20 F006          	lfsr	2,6
  5440  0115A8  501F               	movf	ringbuf_num@rb,w,c
  5441  0115AA  26D9               	addwf	fsr2l,f,c
  5442  0115AC  5020               	movf	ringbuf_num@rb+1,w,c
  5443  0115AE  22DA               	addwfc	fsr2h,f,c
  5444  0115B0  CFDE F064          	movff	postinc2,??_ringbuf_num+4
  5445  0115B4  CFDD F065          	movff	postdec2,??_ringbuf_num+5
  5446  0115B8  0100               	movlb	0	; () banked
  5447  0115BA  1F64               	comf	(??_ringbuf_num+4)& (0+255),f,b
  5448  0115BC  1F65               	comf	(??_ringbuf_num+5)& (0+255),f,b
  5449  0115BE  4B64               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
  5450  0115C0  2B65               	incf	(??_ringbuf_num+5)& (0+255),f,b
  5451  0115C2  0100               	movlb	0	; () banked
  5452  0115C4  5162               	movf	(??_ringbuf_num+2)& (0+255),w,b
  5453  0115C6  0100               	movlb	0	; () banked
  5454  0115C8  2764               	addwf	(??_ringbuf_num+4)& (0+255),f,b
  5455  0115CA  0100               	movlb	0	; () banked
  5456  0115CC  5163               	movf	(??_ringbuf_num+3)& (0+255),w,b
  5457  0115CE  0100               	movlb	0	; () banked
  5458  0115D0  2365               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
  5459  0115D2  0100               	movlb	0	; () banked
  5460  0115D4  5160               	movf	??_ringbuf_num& (0+255),w,b
  5461  0115D6  0100               	movlb	0	; () banked
  5462  0115D8  2564               	addwf	(??_ringbuf_num+4)& (0+255),w,b
  5463  0115DA  6E1F               	movwf	?_ringbuf_num,c
  5464  0115DC  0100               	movlb	0	; () banked
  5465  0115DE  5161               	movf	(??_ringbuf_num+1)& (0+255),w,b
  5466  0115E0  0100               	movlb	0	; () banked
  5467  0115E2  2165               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
  5468  0115E4  6E20               	movwf	?_ringbuf_num+1,c
  5469                           
  5470                           ; BSR set to: 0
  5471  0115E6  0012               	return	
  5472                           
  5473                           ; BSR set to: 0
  5474                           
  5475                           ; BSR set to: 0
  5476  0115E8  0012               	return		;funcret
  5477  0115EA                     __end_of_ringbuf_num:
  5478                           	opt stack 0
  5479                           tblptru	equ	0xFF8
  5480                           tblptrh	equ	0xFF7
  5481                           tblptrl	equ	0xFF6
  5482                           tablat	equ	0xFF5
  5483                           prodh	equ	0xFF4
  5484                           prodl	equ	0xFF3
  5485                           intcon	equ	0xFF2
  5486                           postinc0	equ	0xFEE
  5487                           wreg	equ	0xFE8
  5488                           indf1	equ	0xFE7
  5489                           postinc1	equ	0xFE6
  5490                           postdec1	equ	0xFE5
  5491                           fsr1h	equ	0xFE2
  5492                           fsr1l	equ	0xFE1
  5493                           indf2	equ	0xFDF
  5494                           postinc2	equ	0xFDE
  5495                           postdec2	equ	0xFDD
  5496                           fsr2h	equ	0xFDA
  5497                           fsr2l	equ	0xFD9
  5498                           status	equ	0xFD8
  5499                           
  5500 ;; *************** function _RTCC_from_RTCC *****************
  5501 ;; Defined at:
  5502 ;;		line 231 in file "../My_header\My_RTCC.h"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;  ct              2   34[BANK0 ] PTR struct .
  5505 ;;		 -> caltime_now(7), 
  5506 ;;  ep              2   36[BANK0 ] PTR unsigned long 
  5507 ;;		 -> epoch_now(4), 
  5508 ;; Auto vars:     Size  Location     Type
  5509 ;;		None
  5510 ;; Return value:  Size  Location     Type
  5511 ;;		None               void
  5512 ;; Registers used:
  5513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5514 ;; Tracked objects:
  5515 ;;		On entry : 0/0
  5516 ;;		On exit  : 0/0
  5517 ;;		Unchanged: 0/0
  5518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5519 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5522 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5523 ;;Total ram usage:        4 bytes
  5524 ;; Hardware stack levels used:    1
  5525 ;; Hardware stack levels required when called:    7
  5526 ;; This function calls:
  5527 ;;		_RTCC_to_caltime
  5528 ;;		_caltime_to_epoch
  5529 ;; This function is called by:
  5530 ;;		_print_time
  5531 ;;		_main
  5532 ;;		_RTCC_adjust_time_inc
  5533 ;;		_RTCC_adjust_time_dec
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           	psect	text18
  5538  012862                     __ptext18:
  5539                           	opt stack 0
  5540  012862                     _RTCC_from_RTCC:
  5541                           	opt stack 20
  5542                           
  5543                           ;My_header\My_RTCC.h: 232: RTCC_to_caltime(ct);
  5544                           
  5545                           ; BSR set to: 0
  5546                           ;incstack = 0
  5547  012862  C082  F021         	movff	RTCC_from_RTCC@ct,RTCC_to_caltime@ct
  5548  012866  C083  F022         	movff	RTCC_from_RTCC@ct+1,RTCC_to_caltime@ct+1
  5549  01286A  EC17  F08F         	call	_RTCC_to_caltime	;wreg free
  5550                           
  5551                           ;My_header\My_RTCC.h: 233: caltime_to_epoch(ct, ep);
  5552  01286E  C082  F073         	movff	RTCC_from_RTCC@ct,caltime_to_epoch@ct
  5553  012872  C083  F074         	movff	RTCC_from_RTCC@ct+1,caltime_to_epoch@ct+1
  5554  012876  C084  F075         	movff	RTCC_from_RTCC@ep,caltime_to_epoch@ep
  5555  01287A  C085  F076         	movff	RTCC_from_RTCC@ep+1,caltime_to_epoch@ep+1
  5556  01287E  ECCD  F085         	call	_caltime_to_epoch	;wreg free
  5557  012882  0012               	return		;funcret
  5558  012884                     __end_of_RTCC_from_RTCC:
  5559                           	opt stack 0
  5560                           tblptru	equ	0xFF8
  5561                           tblptrh	equ	0xFF7
  5562                           tblptrl	equ	0xFF6
  5563                           tablat	equ	0xFF5
  5564                           prodh	equ	0xFF4
  5565                           prodl	equ	0xFF3
  5566                           intcon	equ	0xFF2
  5567                           postinc0	equ	0xFEE
  5568                           wreg	equ	0xFE8
  5569                           indf1	equ	0xFE7
  5570                           postinc1	equ	0xFE6
  5571                           postdec1	equ	0xFE5
  5572                           fsr1h	equ	0xFE2
  5573                           fsr1l	equ	0xFE1
  5574                           indf2	equ	0xFDF
  5575                           postinc2	equ	0xFDE
  5576                           postdec2	equ	0xFDD
  5577                           fsr2h	equ	0xFDA
  5578                           fsr2l	equ	0xFD9
  5579                           status	equ	0xFD8
  5580                           
  5581 ;; *************** function _RTCC_to_caltime *****************
  5582 ;; Defined at:
  5583 ;;		line 121 in file "../My_header\My_RTCC.h"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;  ct              2   32[COMRAM] PTR struct .
  5586 ;;		 -> caltime_now(7), 
  5587 ;; Auto vars:     Size  Location     Type
  5588 ;;  dumy            1   34[COMRAM] unsigned char 
  5589 ;; Return value:  Size  Location     Type
  5590 ;;		None               void
  5591 ;; Registers used:
  5592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5598 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5599 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5601 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5602 ;;Total ram usage:        3 bytes
  5603 ;; Hardware stack levels used:    1
  5604 ;; Hardware stack levels required when called:    5
  5605 ;; This function calls:
  5606 ;;		_x_to_d
  5607 ;; This function is called by:
  5608 ;;		_RTCC_from_RTCC
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           	psect	text19
  5613  011E2E                     __ptext19:
  5614                           	opt stack 0
  5615  011E2E                     _RTCC_to_caltime:
  5616                           	opt stack 21
  5617                           
  5618                           ;My_header\My_RTCC.h: 122: while (RTCCFGbits.RTCSYNC);
  5619                           
  5620                           ;incstack = 0
  5621  011E2E  D000               	goto	l311
  5622  011E30                     l311:
  5623  011E30  010F               	movlb	15	; () banked
  5624  011E32  B93F               	btfsc	63,4,b	;volatile
  5625  011E34  D7FD               	goto	l311
  5626                           
  5627                           ; BSR set to: 15
  5628                           ;My_header\My_RTCC.h: 124: RTCCFGbits.RTCPTR0 = 1;
  5629  011E36  010F               	movlb	15	; () banked
  5630  011E38  813F               	bsf	63,0,b	;volatile
  5631                           
  5632                           ;My_header\My_RTCC.h: 125: RTCCFGbits.RTCPTR1 = 1;
  5633  011E3A  010F               	movlb	15	; () banked
  5634  011E3C  833F               	bsf	63,1,b	;volatile
  5635                           
  5636                           ; BSR set to: 15
  5637                           ;My_header\My_RTCC.h: 127: ct->YY = x_to_d(RTCVALL);
  5638  011E3E  EE20 F006          	lfsr	2,6
  5639  011E42  5021               	movf	RTCC_to_caltime@ct,w,c
  5640  011E44  26D9               	addwf	fsr2l,f,c
  5641  011E46  5022               	movf	RTCC_to_caltime@ct+1,w,c
  5642  011E48  22DA               	addwfc	fsr2h,f,c
  5643  011E4A  010F               	movlb	15	; () banked
  5644  011E4C  513A               	movf	58,w,b	;volatile
  5645  011E4E  EC81  F094         	call	_x_to_d
  5646  011E52  6EDF               	movwf	indf2,c
  5647                           
  5648                           ;My_header\My_RTCC.h: 128: uint8_t dumy = RTCVALH;
  5649  011E54  CF3B F023          	movff	3899,RTCC_to_caltime@dumy	;volatile
  5650                           
  5651                           ;My_header\My_RTCC.h: 129: ct->DD = x_to_d(RTCVALL);
  5652  011E58  EE20 F004          	lfsr	2,4
  5653  011E5C  5021               	movf	RTCC_to_caltime@ct,w,c
  5654  011E5E  26D9               	addwf	fsr2l,f,c
  5655  011E60  5022               	movf	RTCC_to_caltime@ct+1,w,c
  5656  011E62  22DA               	addwfc	fsr2h,f,c
  5657  011E64  010F               	movlb	15	; () banked
  5658  011E66  513A               	movf	58,w,b	;volatile
  5659  011E68  EC81  F094         	call	_x_to_d
  5660  011E6C  6EDF               	movwf	indf2,c
  5661                           
  5662                           ;My_header\My_RTCC.h: 130: ct->MM = x_to_d(RTCVALH);
  5663  011E6E  EE20 F005          	lfsr	2,5
  5664  011E72  5021               	movf	RTCC_to_caltime@ct,w,c
  5665  011E74  26D9               	addwf	fsr2l,f,c
  5666  011E76  5022               	movf	RTCC_to_caltime@ct+1,w,c
  5667  011E78  22DA               	addwfc	fsr2h,f,c
  5668  011E7A  010F               	movlb	15	; () banked
  5669  011E7C  513B               	movf	59,w,b	;volatile
  5670  011E7E  EC81  F094         	call	_x_to_d
  5671  011E82  6EDF               	movwf	indf2,c
  5672                           
  5673                           ;My_header\My_RTCC.h: 131: ct->hh = x_to_d(RTCVALL);
  5674  011E84  EE20 F002          	lfsr	2,2
  5675  011E88  5021               	movf	RTCC_to_caltime@ct,w,c
  5676  011E8A  26D9               	addwf	fsr2l,f,c
  5677  011E8C  5022               	movf	RTCC_to_caltime@ct+1,w,c
  5678  011E8E  22DA               	addwfc	fsr2h,f,c
  5679  011E90  010F               	movlb	15	; () banked
  5680  011E92  513A               	movf	58,w,b	;volatile
  5681  011E94  EC81  F094         	call	_x_to_d
  5682  011E98  6EDF               	movwf	indf2,c
  5683                           
  5684                           ;My_header\My_RTCC.h: 132: ct->EE = x_to_d(RTCVALH);
  5685  011E9A  EE20 F003          	lfsr	2,3
  5686  011E9E  5021               	movf	RTCC_to_caltime@ct,w,c
  5687  011EA0  26D9               	addwf	fsr2l,f,c
  5688  011EA2  5022               	movf	RTCC_to_caltime@ct+1,w,c
  5689  011EA4  22DA               	addwfc	fsr2h,f,c
  5690  011EA6  010F               	movlb	15	; () banked
  5691  011EA8  513B               	movf	59,w,b	;volatile
  5692  011EAA  EC81  F094         	call	_x_to_d
  5693  011EAE  6EDF               	movwf	indf2,c
  5694                           
  5695                           ;My_header\My_RTCC.h: 133: ct->ss = x_to_d(RTCVALL);
  5696  011EB0  010F               	movlb	15	; () banked
  5697  011EB2  513A               	movf	58,w,b	;volatile
  5698  011EB4  EC81  F094         	call	_x_to_d
  5699  011EB8  C021  FFD9         	movff	RTCC_to_caltime@ct,fsr2l
  5700  011EBC  C022  FFDA         	movff	RTCC_to_caltime@ct+1,fsr2h
  5701  011EC0  6EDF               	movwf	indf2,c
  5702                           
  5703                           ;My_header\My_RTCC.h: 134: ct->mm = x_to_d(RTCVALH);
  5704  011EC2  EE20 F001          	lfsr	2,1
  5705  011EC6  5021               	movf	RTCC_to_caltime@ct,w,c
  5706  011EC8  26D9               	addwf	fsr2l,f,c
  5707  011ECA  5022               	movf	RTCC_to_caltime@ct+1,w,c
  5708  011ECC  22DA               	addwfc	fsr2h,f,c
  5709  011ECE  010F               	movlb	15	; () banked
  5710  011ED0  513B               	movf	59,w,b	;volatile
  5711  011ED2  EC81  F094         	call	_x_to_d
  5712  011ED6  6EDF               	movwf	indf2,c
  5713  011ED8  0012               	return		;funcret
  5714  011EDA                     __end_of_RTCC_to_caltime:
  5715                           	opt stack 0
  5716                           tblptru	equ	0xFF8
  5717                           tblptrh	equ	0xFF7
  5718                           tblptrl	equ	0xFF6
  5719                           tablat	equ	0xFF5
  5720                           prodh	equ	0xFF4
  5721                           prodl	equ	0xFF3
  5722                           intcon	equ	0xFF2
  5723                           postinc0	equ	0xFEE
  5724                           wreg	equ	0xFE8
  5725                           indf1	equ	0xFE7
  5726                           postinc1	equ	0xFE6
  5727                           postdec1	equ	0xFE5
  5728                           fsr1h	equ	0xFE2
  5729                           fsr1l	equ	0xFE1
  5730                           indf2	equ	0xFDF
  5731                           postinc2	equ	0xFDE
  5732                           postdec2	equ	0xFDD
  5733                           fsr2h	equ	0xFDA
  5734                           fsr2l	equ	0xFD9
  5735                           status	equ	0xFD8
  5736                           
  5737 ;; *************** function _x_to_d *****************
  5738 ;; Defined at:
  5739 ;;		line 81 in file "../My_header\My_RTCC.h"
  5740 ;; Parameters:    Size  Location     Type
  5741 ;;  hex             1    wreg     unsigned char 
  5742 ;; Auto vars:     Size  Location     Type
  5743 ;;  hex             1   31[COMRAM] unsigned char 
  5744 ;; Return value:  Size  Location     Type
  5745 ;;                  1    wreg      unsigned char 
  5746 ;; Registers used:
  5747 ;;		wreg, status,2, status,0, prodl, prodh
  5748 ;; Tracked objects:
  5749 ;;		On entry : 0/0
  5750 ;;		On exit  : 0/0
  5751 ;;		Unchanged: 0/0
  5752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5754 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5755 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5756 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5757 ;;Total ram usage:        2 bytes
  5758 ;; Hardware stack levels used:    1
  5759 ;; Hardware stack levels required when called:    4
  5760 ;; This function calls:
  5761 ;;		Nothing
  5762 ;; This function is called by:
  5763 ;;		_RTCC_to_caltime
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766                           
  5767                           	psect	text20
  5768  012902                     __ptext20:
  5769                           	opt stack 0
  5770  012902                     _x_to_d:
  5771                           	opt stack 21
  5772                           
  5773                           ;incstack = 0
  5774                           ;x_to_d@hex stored from wreg
  5775  012902  6E20               	movwf	x_to_d@hex,c
  5776                           
  5777                           ;My_header\My_RTCC.h: 82: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
  5778  012904  C020  F01F         	movff	x_to_d@hex,??_x_to_d
  5779  012908  0E0F               	movlw	15
  5780  01290A  161F               	andwf	??_x_to_d,f,c
  5781  01290C  3820               	swapf	x_to_d@hex,w,c
  5782  01290E  0B0F               	andlw	15
  5783  012910  0B0F               	andlw	15
  5784  012912  0D0A               	mullw	10
  5785  012914  50F3               	movf	prodl,w,c
  5786  012916  241F               	addwf	??_x_to_d,w,c
  5787  012918  0012               	return	
  5788  01291A  0012               	return		;funcret
  5789  01291C                     __end_of_x_to_d:
  5790                           	opt stack 0
  5791                           tblptru	equ	0xFF8
  5792                           tblptrh	equ	0xFF7
  5793                           tblptrl	equ	0xFF6
  5794                           tablat	equ	0xFF5
  5795                           prodh	equ	0xFF4
  5796                           prodl	equ	0xFF3
  5797                           intcon	equ	0xFF2
  5798                           postinc0	equ	0xFEE
  5799                           wreg	equ	0xFE8
  5800                           indf1	equ	0xFE7
  5801                           postinc1	equ	0xFE6
  5802                           postdec1	equ	0xFE5
  5803                           fsr1h	equ	0xFE2
  5804                           fsr1l	equ	0xFE1
  5805                           indf2	equ	0xFDF
  5806                           postinc2	equ	0xFDE
  5807                           postdec2	equ	0xFDD
  5808                           fsr2h	equ	0xFDA
  5809                           fsr2l	equ	0xFD9
  5810                           status	equ	0xFD8
  5811                           
  5812 ;; *************** function _RTCC_from_caltime *****************
  5813 ;; Defined at:
  5814 ;;		line 236 in file "../My_header\My_RTCC.h"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;  ct              2   56[BANK0 ] PTR struct .
  5817 ;;		 -> caltime_now(7), 
  5818 ;;  ep              2   58[BANK0 ] PTR unsigned long 
  5819 ;;		 -> epoch_now(4), 
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;		None
  5822 ;; Return value:  Size  Location     Type
  5823 ;;		None               void
  5824 ;; Registers used:
  5825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5831 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5834 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5835 ;;Total ram usage:        4 bytes
  5836 ;; Hardware stack levels used:    1
  5837 ;; Hardware stack levels required when called:    7
  5838 ;; This function calls:
  5839 ;;		_caltime_to_RTCC
  5840 ;;		_caltime_to_epoch
  5841 ;;		_epoch_to_caltime
  5842 ;; This function is called by:
  5843 ;;		_comm_at
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           	psect	text21
  5848  01278A                     __ptext21:
  5849                           	opt stack 0
  5850  01278A                     _RTCC_from_caltime:
  5851                           	opt stack 20
  5852                           
  5853                           ;My_header\My_RTCC.h: 237: caltime_to_epoch(ct, ep);
  5854                           
  5855                           ;incstack = 0
  5856  01278A  C098  F073         	movff	RTCC_from_caltime@ct,caltime_to_epoch@ct
  5857  01278E  C099  F074         	movff	RTCC_from_caltime@ct+1,caltime_to_epoch@ct+1
  5858  012792  C09A  F075         	movff	RTCC_from_caltime@ep,caltime_to_epoch@ep
  5859  012796  C09B  F076         	movff	RTCC_from_caltime@ep+1,caltime_to_epoch@ep+1
  5860  01279A  ECCD  F085         	call	_caltime_to_epoch	;wreg free
  5861                           
  5862                           ;My_header\My_RTCC.h: 238: epoch_to_caltime(ct, ep);
  5863  01279E  C098  F088         	movff	RTCC_from_caltime@ct,epoch_to_caltime@ct
  5864  0127A2  C099  F089         	movff	RTCC_from_caltime@ct+1,epoch_to_caltime@ct+1
  5865  0127A6  C09A  F08A         	movff	RTCC_from_caltime@ep,epoch_to_caltime@ep
  5866  0127AA  C09B  F08B         	movff	RTCC_from_caltime@ep+1,epoch_to_caltime@ep+1
  5867  0127AE  EC56  F088         	call	_epoch_to_caltime	;wreg free
  5868                           
  5869                           ;My_header\My_RTCC.h: 239: caltime_to_RTCC(ct);
  5870  0127B2  C098  F064         	movff	RTCC_from_caltime@ct,caltime_to_RTCC@ct
  5871  0127B6  C099  F065         	movff	RTCC_from_caltime@ct+1,caltime_to_RTCC@ct+1
  5872  0127BA  EC60  F08B         	call	_caltime_to_RTCC	;wreg free
  5873  0127BE  0012               	return		;funcret
  5874  0127C0                     __end_of_RTCC_from_caltime:
  5875                           	opt stack 0
  5876                           tblptru	equ	0xFF8
  5877                           tblptrh	equ	0xFF7
  5878                           tblptrl	equ	0xFF6
  5879                           tablat	equ	0xFF5
  5880                           prodh	equ	0xFF4
  5881                           prodl	equ	0xFF3
  5882                           intcon	equ	0xFF2
  5883                           postinc0	equ	0xFEE
  5884                           wreg	equ	0xFE8
  5885                           indf1	equ	0xFE7
  5886                           postinc1	equ	0xFE6
  5887                           postdec1	equ	0xFE5
  5888                           fsr1h	equ	0xFE2
  5889                           fsr1l	equ	0xFE1
  5890                           indf2	equ	0xFDF
  5891                           postinc2	equ	0xFDE
  5892                           postdec2	equ	0xFDD
  5893                           fsr2h	equ	0xFDA
  5894                           fsr2l	equ	0xFD9
  5895                           status	equ	0xFD8
  5896                           
  5897 ;; *************** function _caltime_to_epoch *****************
  5898 ;; Defined at:
  5899 ;;		line 211 in file "../My_header\My_RTCC.h"
  5900 ;; Parameters:    Size  Location     Type
  5901 ;;  ct              2   19[BANK0 ] PTR struct .
  5902 ;;		 -> caltime_now(7), 
  5903 ;;  ep              2   21[BANK0 ] PTR unsigned long 
  5904 ;;		 -> epoch_now(4), 
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;  month           1   33[BANK0 ] unsigned char 
  5907 ;;  month           1   28[BANK0 ] unsigned char 
  5908 ;;  year            1   27[BANK0 ] unsigned char 
  5909 ;;  epoch           4   29[BANK0 ] unsigned long 
  5910 ;; Return value:  Size  Location     Type
  5911 ;;		None               void
  5912 ;; Registers used:
  5913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5919 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5920 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5921 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5922 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5923 ;;Total ram usage:       15 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; Hardware stack levels required when called:    6
  5926 ;; This function calls:
  5927 ;;		___lmul
  5928 ;;		_month_length
  5929 ;; This function is called by:
  5930 ;;		_RTCC_from_RTCC
  5931 ;;		_RTCC_from_caltime
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           	psect	text22
  5936  010B9A                     __ptext22:
  5937                           	opt stack 0
  5938  010B9A                     _caltime_to_epoch:
  5939                           	opt stack 20
  5940                           
  5941                           ;My_header\My_RTCC.h: 212: epoch_t epoch = 0;
  5942                           
  5943                           ;incstack = 0
  5944  010B9A  0E00               	movlw	0
  5945  010B9C  0100               	movlb	0	; () banked
  5946  010B9E  6F7D               	movwf	caltime_to_epoch@epoch& (0+255),b
  5947  010BA0  0E00               	movlw	0
  5948  010BA2  6F7E               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
  5949  010BA4  0E00               	movlw	0
  5950  010BA6  6F7F               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
  5951  010BA8  0E00               	movlw	0
  5952  010BAA  6F80               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
  5953                           
  5954                           ;My_header\My_RTCC.h: 213: for (uint8_t year = 0; year < ct->YY; year++) {
  5955  010BAC  0E00               	movlw	0
  5956  010BAE  0100               	movlb	0	; () banked
  5957  010BB0  6F7B               	movwf	caltime_to_epoch@year& (0+255),b
  5958  010BB2  D038               	goto	l4194
  5959  010BB4                     l4180:
  5960                           
  5961                           ; BSR set to: 0
  5962                           ;My_header\My_RTCC.h: 214: for (uint8_t month = 1; month <= 12; month++) {
  5963  010BB4  0E01               	movlw	1
  5964  010BB6  0100               	movlb	0	; () banked
  5965  010BB8  6F81               	movwf	caltime_to_epoch@month& (0+255),b
  5966  010BBA                     l4182:
  5967                           
  5968                           ; BSR set to: 0
  5969  010BBA  0E0C               	movlw	12
  5970  010BBC  0100               	movlb	0	; () banked
  5971  010BBE  6581               	cpfsgt	caltime_to_epoch@month& (0+255),b
  5972  010BC0  D001               	goto	l4186
  5973                           
  5974                           ; BSR set to: 0
  5975  010BC2  D02D               	goto	l4192
  5976  010BC4                     l4186:
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;My_header\My_RTCC.h: 215: epoch += ((epoch_t)60*60*24) * month_length(year, month);
  5980  010BC4  C081  F023         	movff	caltime_to_epoch@month,month_length@month
  5981  010BC8  0100               	movlb	0	; () banked
  5982  010BCA  517B               	movf	caltime_to_epoch@year& (0+255),w,b
  5983  010BCC  ECC9  F08B         	call	_month_length
  5984  010BD0  0100               	movlb	0	; () banked
  5985  010BD2  6F77               	movwf	??_caltime_to_epoch& (0+255),b
  5986  010BD4  0100               	movlb	0	; () banked
  5987  010BD6  5177               	movf	??_caltime_to_epoch& (0+255),w,b
  5988  010BD8  0100               	movlb	0	; () banked
  5989  010BDA  6F67               	movwf	___lmul@multiplier& (0+255),b
  5990  010BDC  6B68               	clrf	(___lmul@multiplier+1)& (0+255),b
  5991  010BDE  6B69               	clrf	(___lmul@multiplier+2)& (0+255),b
  5992  010BE0  6B6A               	clrf	(___lmul@multiplier+3)& (0+255),b
  5993  010BE2  0E80               	movlw	128
  5994  010BE4  0100               	movlb	0	; () banked
  5995  010BE6  6F6B               	movwf	___lmul@multiplicand& (0+255),b
  5996  010BE8  0E51               	movlw	81
  5997  010BEA  6F6C               	movwf	(___lmul@multiplicand+1)& (0+255),b
  5998  010BEC  0E01               	movlw	1
  5999  010BEE  6F6D               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6000  010BF0  0E00               	movlw	0
  6001  010BF2  6F6E               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6002  010BF4  ECB4  F091         	call	___lmul	;wreg free
  6003  010BF8  0100               	movlb	0	; () banked
  6004  010BFA  5167               	movf	?___lmul& (0+255),w,b
  6005  010BFC  0100               	movlb	0	; () banked
  6006  010BFE  277D               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6007  010C00  0100               	movlb	0	; () banked
  6008  010C02  5168               	movf	(?___lmul+1)& (0+255),w,b
  6009  010C04  0100               	movlb	0	; () banked
  6010  010C06  237E               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6011  010C08  0100               	movlb	0	; () banked
  6012  010C0A  5169               	movf	(?___lmul+2)& (0+255),w,b
  6013  010C0C  0100               	movlb	0	; () banked
  6014  010C0E  237F               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6015  010C10  0100               	movlb	0	; () banked
  6016  010C12  516A               	movf	(?___lmul+3)& (0+255),w,b
  6017  010C14  0100               	movlb	0	; () banked
  6018  010C16  2380               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6019                           
  6020                           ; BSR set to: 0
  6021  010C18  0100               	movlb	0	; () banked
  6022  010C1A  2B81               	incf	caltime_to_epoch@month& (0+255),f,b
  6023  010C1C  D7CE               	goto	l4182
  6024  010C1E                     l4192:
  6025                           
  6026                           ; BSR set to: 0
  6027  010C1E  0100               	movlb	0	; () banked
  6028  010C20  2B7B               	incf	caltime_to_epoch@year& (0+255),f,b
  6029  010C22  D000               	goto	l4194
  6030  010C24                     l4194:
  6031                           
  6032                           ; BSR set to: 0
  6033  010C24  0100               	movlb	0	; () banked
  6034  010C26  EE20 F006          	lfsr	2,6
  6035  010C2A  5173               	movf	caltime_to_epoch@ct& (0+255),w,b
  6036  010C2C  26D9               	addwf	fsr2l,f,c
  6037  010C2E  5174               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6038  010C30  22DA               	addwfc	fsr2h,f,c
  6039  010C32  50DE               	movf	postinc2,w,c
  6040  010C34  0100               	movlb	0	; () banked
  6041  010C36  5D7B               	subwf	caltime_to_epoch@year& (0+255),w,b
  6042  010C38  A0D8               	btfss	status,0,c
  6043  010C3A  D7BC               	goto	l4180
  6044                           
  6045                           ; BSR set to: 0
  6046                           ;My_header\My_RTCC.h: 216: }
  6047                           ;My_header\My_RTCC.h: 217: }
  6048                           ;My_header\My_RTCC.h: 218: for (uint8_t month = 1; month < ct->MM; month++) {
  6049                           
  6050                           ; BSR set to: 0
  6051  010C3C  0E01               	movlw	1
  6052  010C3E  0100               	movlb	0	; () banked
  6053  010C40  6F7C               	movwf	caltime_to_epoch@month_1993& (0+255),b
  6054  010C42  D033               	goto	l4202
  6055  010C44                     l4198:
  6056                           
  6057                           ; BSR set to: 0
  6058                           ;My_header\My_RTCC.h: 219: epoch += ((epoch_t)60*60*24) * month_length(ct->YY, month);
  6059  010C44  C07C  F023         	movff	caltime_to_epoch@month_1993,month_length@month
  6060  010C48  0100               	movlb	0	; () banked
  6061  010C4A  EE20 F006          	lfsr	2,6
  6062  010C4E  5173               	movf	caltime_to_epoch@ct& (0+255),w,b
  6063  010C50  26D9               	addwf	fsr2l,f,c
  6064  010C52  5174               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6065  010C54  22DA               	addwfc	fsr2h,f,c
  6066  010C56  50DF               	movf	indf2,w,c
  6067  010C58  ECC9  F08B         	call	_month_length
  6068  010C5C  0100               	movlb	0	; () banked
  6069  010C5E  6F77               	movwf	??_caltime_to_epoch& (0+255),b
  6070  010C60  0100               	movlb	0	; () banked
  6071  010C62  5177               	movf	??_caltime_to_epoch& (0+255),w,b
  6072  010C64  0100               	movlb	0	; () banked
  6073  010C66  6F67               	movwf	___lmul@multiplier& (0+255),b
  6074  010C68  6B68               	clrf	(___lmul@multiplier+1)& (0+255),b
  6075  010C6A  6B69               	clrf	(___lmul@multiplier+2)& (0+255),b
  6076  010C6C  6B6A               	clrf	(___lmul@multiplier+3)& (0+255),b
  6077  010C6E  0E80               	movlw	128
  6078  010C70  0100               	movlb	0	; () banked
  6079  010C72  6F6B               	movwf	___lmul@multiplicand& (0+255),b
  6080  010C74  0E51               	movlw	81
  6081  010C76  6F6C               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6082  010C78  0E01               	movlw	1
  6083  010C7A  6F6D               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6084  010C7C  0E00               	movlw	0
  6085  010C7E  6F6E               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6086  010C80  ECB4  F091         	call	___lmul	;wreg free
  6087  010C84  0100               	movlb	0	; () banked
  6088  010C86  5167               	movf	?___lmul& (0+255),w,b
  6089  010C88  0100               	movlb	0	; () banked
  6090  010C8A  277D               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6091  010C8C  0100               	movlb	0	; () banked
  6092  010C8E  5168               	movf	(?___lmul+1)& (0+255),w,b
  6093  010C90  0100               	movlb	0	; () banked
  6094  010C92  237E               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6095  010C94  0100               	movlb	0	; () banked
  6096  010C96  5169               	movf	(?___lmul+2)& (0+255),w,b
  6097  010C98  0100               	movlb	0	; () banked
  6098  010C9A  237F               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6099  010C9C  0100               	movlb	0	; () banked
  6100  010C9E  516A               	movf	(?___lmul+3)& (0+255),w,b
  6101  010CA0  0100               	movlb	0	; () banked
  6102  010CA2  2380               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6103                           
  6104                           ; BSR set to: 0
  6105  010CA4  0100               	movlb	0	; () banked
  6106  010CA6  2B7C               	incf	caltime_to_epoch@month_1993& (0+255),f,b
  6107  010CA8  D000               	goto	l4202
  6108  010CAA                     l4202:
  6109                           
  6110                           ; BSR set to: 0
  6111  010CAA  0100               	movlb	0	; () banked
  6112  010CAC  EE20 F005          	lfsr	2,5
  6113  010CB0  5173               	movf	caltime_to_epoch@ct& (0+255),w,b
  6114  010CB2  26D9               	addwf	fsr2l,f,c
  6115  010CB4  5174               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6116  010CB6  22DA               	addwfc	fsr2h,f,c
  6117  010CB8  50DE               	movf	postinc2,w,c
  6118  010CBA  0100               	movlb	0	; () banked
  6119  010CBC  5D7C               	subwf	caltime_to_epoch@month_1993& (0+255),w,b
  6120  010CBE  A0D8               	btfss	status,0,c
  6121  010CC0  D7C1               	goto	l4198
  6122                           
  6123                           ; BSR set to: 0
  6124                           ;My_header\My_RTCC.h: 220: }
  6125                           ;My_header\My_RTCC.h: 221: epoch += ((epoch_t)60*60*24) * (ct->DD - 1);
  6126                           
  6127                           ; BSR set to: 0
  6128  010CC2  0EFF               	movlw	255
  6129  010CC4  0100               	movlb	0	; () banked
  6130  010CC6  6F77               	movwf	??_caltime_to_epoch& (0+255),b
  6131  010CC8  0EFF               	movlw	255
  6132  010CCA  0100               	movlb	0	; () banked
  6133  010CCC  6F78               	movwf	(??_caltime_to_epoch+1)& (0+255),b
  6134  010CCE  0100               	movlb	0	; () banked
  6135  010CD0  EE20 F004          	lfsr	2,4
  6136  010CD4  5173               	movf	caltime_to_epoch@ct& (0+255),w,b
  6137  010CD6  26D9               	addwf	fsr2l,f,c
  6138  010CD8  5174               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6139  010CDA  22DA               	addwfc	fsr2h,f,c
  6140  010CDC  50DF               	movf	indf2,w,c
  6141  010CDE  0100               	movlb	0	; () banked
  6142  010CE0  6F79               	movwf	(??_caltime_to_epoch+2)& (0+255),b
  6143  010CE2  6B7A               	clrf	(??_caltime_to_epoch+3)& (0+255),b
  6144  010CE4  0100               	movlb	0	; () banked
  6145  010CE6  5177               	movf	??_caltime_to_epoch& (0+255),w,b
  6146  010CE8  0100               	movlb	0	; () banked
  6147  010CEA  2779               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
  6148  010CEC  0100               	movlb	0	; () banked
  6149  010CEE  5178               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  6150  010CF0  0100               	movlb	0	; () banked
  6151  010CF2  237A               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
  6152  010CF4  C079  F067         	movff	??_caltime_to_epoch+2,___lmul@multiplier
  6153  010CF8  C07A  F068         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
  6154  010CFC  0100               	movlb	0	; () banked
  6155  010CFE  0E00               	movlw	0
  6156  010D00  BF68               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  6157  010D02  0EFF               	movlw	-1
  6158  010D04  6F69               	movwf	(___lmul@multiplier+2)& (0+255),b
  6159  010D06  6F6A               	movwf	(___lmul@multiplier+3)& (0+255),b
  6160  010D08  0E80               	movlw	128
  6161  010D0A  0100               	movlb	0	; () banked
  6162  010D0C  6F6B               	movwf	___lmul@multiplicand& (0+255),b
  6163  010D0E  0E51               	movlw	81
  6164  010D10  6F6C               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6165  010D12  0E01               	movlw	1
  6166  010D14  6F6D               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6167  010D16  0E00               	movlw	0
  6168  010D18  6F6E               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6169  010D1A  ECB4  F091         	call	___lmul	;wreg free
  6170  010D1E  0100               	movlb	0	; () banked
  6171  010D20  5167               	movf	?___lmul& (0+255),w,b
  6172  010D22  0100               	movlb	0	; () banked
  6173  010D24  277D               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6174  010D26  0100               	movlb	0	; () banked
  6175  010D28  5168               	movf	(?___lmul+1)& (0+255),w,b
  6176  010D2A  0100               	movlb	0	; () banked
  6177  010D2C  237E               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6178  010D2E  0100               	movlb	0	; () banked
  6179  010D30  5169               	movf	(?___lmul+2)& (0+255),w,b
  6180  010D32  0100               	movlb	0	; () banked
  6181  010D34  237F               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6182  010D36  0100               	movlb	0	; () banked
  6183  010D38  516A               	movf	(?___lmul+3)& (0+255),w,b
  6184  010D3A  0100               	movlb	0	; () banked
  6185  010D3C  2380               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6186                           
  6187                           ;My_header\My_RTCC.h: 222: epoch += ((epoch_t)60*60) * ct->hh;
  6188  010D3E  0100               	movlb	0	; () banked
  6189  010D40  EE20 F002          	lfsr	2,2
  6190  010D44  5173               	movf	caltime_to_epoch@ct& (0+255),w,b
  6191  010D46  26D9               	addwf	fsr2l,f,c
  6192  010D48  5174               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6193  010D4A  22DA               	addwfc	fsr2h,f,c
  6194  010D4C  50DF               	movf	indf2,w,c
  6195  010D4E  0100               	movlb	0	; () banked
  6196  010D50  6F77               	movwf	??_caltime_to_epoch& (0+255),b
  6197  010D52  0100               	movlb	0	; () banked
  6198  010D54  5177               	movf	??_caltime_to_epoch& (0+255),w,b
  6199  010D56  0100               	movlb	0	; () banked
  6200  010D58  6F67               	movwf	___lmul@multiplier& (0+255),b
  6201  010D5A  6B68               	clrf	(___lmul@multiplier+1)& (0+255),b
  6202  010D5C  6B69               	clrf	(___lmul@multiplier+2)& (0+255),b
  6203  010D5E  6B6A               	clrf	(___lmul@multiplier+3)& (0+255),b
  6204  010D60  0E10               	movlw	16
  6205  010D62  0100               	movlb	0	; () banked
  6206  010D64  6F6B               	movwf	___lmul@multiplicand& (0+255),b
  6207  010D66  0E0E               	movlw	14
  6208  010D68  6F6C               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6209  010D6A  0E00               	movlw	0
  6210  010D6C  6F6D               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6211  010D6E  0E00               	movlw	0
  6212  010D70  6F6E               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6213  010D72  ECB4  F091         	call	___lmul	;wreg free
  6214  010D76  0100               	movlb	0	; () banked
  6215  010D78  5167               	movf	?___lmul& (0+255),w,b
  6216  010D7A  0100               	movlb	0	; () banked
  6217  010D7C  277D               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6218  010D7E  0100               	movlb	0	; () banked
  6219  010D80  5168               	movf	(?___lmul+1)& (0+255),w,b
  6220  010D82  0100               	movlb	0	; () banked
  6221  010D84  237E               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6222  010D86  0100               	movlb	0	; () banked
  6223  010D88  5169               	movf	(?___lmul+2)& (0+255),w,b
  6224  010D8A  0100               	movlb	0	; () banked
  6225  010D8C  237F               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6226  010D8E  0100               	movlb	0	; () banked
  6227  010D90  516A               	movf	(?___lmul+3)& (0+255),w,b
  6228  010D92  0100               	movlb	0	; () banked
  6229  010D94  2380               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6230                           
  6231                           ;My_header\My_RTCC.h: 223: epoch += ((epoch_t)60) * ct->mm;
  6232  010D96  0100               	movlb	0	; () banked
  6233  010D98  EE20 F001          	lfsr	2,1
  6234  010D9C  5173               	movf	caltime_to_epoch@ct& (0+255),w,b
  6235  010D9E  26D9               	addwf	fsr2l,f,c
  6236  010DA0  5174               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6237  010DA2  22DA               	addwfc	fsr2h,f,c
  6238  010DA4  50DF               	movf	indf2,w,c
  6239  010DA6  0100               	movlb	0	; () banked
  6240  010DA8  6F77               	movwf	??_caltime_to_epoch& (0+255),b
  6241  010DAA  0100               	movlb	0	; () banked
  6242  010DAC  5177               	movf	??_caltime_to_epoch& (0+255),w,b
  6243  010DAE  0100               	movlb	0	; () banked
  6244  010DB0  6F67               	movwf	___lmul@multiplier& (0+255),b
  6245  010DB2  6B68               	clrf	(___lmul@multiplier+1)& (0+255),b
  6246  010DB4  6B69               	clrf	(___lmul@multiplier+2)& (0+255),b
  6247  010DB6  6B6A               	clrf	(___lmul@multiplier+3)& (0+255),b
  6248  010DB8  0E3C               	movlw	60
  6249  010DBA  0100               	movlb	0	; () banked
  6250  010DBC  6F6B               	movwf	___lmul@multiplicand& (0+255),b
  6251  010DBE  0E00               	movlw	0
  6252  010DC0  6F6C               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6253  010DC2  0E00               	movlw	0
  6254  010DC4  6F6D               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6255  010DC6  0E00               	movlw	0
  6256  010DC8  6F6E               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6257  010DCA  ECB4  F091         	call	___lmul	;wreg free
  6258  010DCE  0100               	movlb	0	; () banked
  6259  010DD0  5167               	movf	?___lmul& (0+255),w,b
  6260  010DD2  0100               	movlb	0	; () banked
  6261  010DD4  277D               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6262  010DD6  0100               	movlb	0	; () banked
  6263  010DD8  5168               	movf	(?___lmul+1)& (0+255),w,b
  6264  010DDA  0100               	movlb	0	; () banked
  6265  010DDC  237E               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6266  010DDE  0100               	movlb	0	; () banked
  6267  010DE0  5169               	movf	(?___lmul+2)& (0+255),w,b
  6268  010DE2  0100               	movlb	0	; () banked
  6269  010DE4  237F               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6270  010DE6  0100               	movlb	0	; () banked
  6271  010DE8  516A               	movf	(?___lmul+3)& (0+255),w,b
  6272  010DEA  0100               	movlb	0	; () banked
  6273  010DEC  2380               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;My_header\My_RTCC.h: 224: epoch += ct->ss;
  6277  010DEE  C073  FFD9         	movff	caltime_to_epoch@ct,fsr2l
  6278  010DF2  C074  FFDA         	movff	caltime_to_epoch@ct+1,fsr2h
  6279  010DF6  50DF               	movf	indf2,w,c
  6280  010DF8  0100               	movlb	0	; () banked
  6281  010DFA  6F77               	movwf	??_caltime_to_epoch& (0+255),b
  6282  010DFC  0100               	movlb	0	; () banked
  6283  010DFE  5177               	movf	??_caltime_to_epoch& (0+255),w,b
  6284  010E00  0100               	movlb	0	; () banked
  6285  010E02  277D               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6286  010E04  0E00               	movlw	0
  6287  010E06  237E               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6288  010E08  237F               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6289  010E0A  2380               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;My_header\My_RTCC.h: 226: *ep = epoch;
  6293  010E0C  C075  FFD9         	movff	caltime_to_epoch@ep,fsr2l
  6294  010E10  C076  FFDA         	movff	caltime_to_epoch@ep+1,fsr2h
  6295  010E14  C07D  FFDE         	movff	caltime_to_epoch@epoch,postinc2
  6296  010E18  C07E  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
  6297  010E1C  C07F  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
  6298  010E20  C080  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
  6299                           
  6300                           ; BSR set to: 0
  6301  010E24  0012               	return		;funcret
  6302  010E26                     __end_of_caltime_to_epoch:
  6303                           	opt stack 0
  6304                           tblptru	equ	0xFF8
  6305                           tblptrh	equ	0xFF7
  6306                           tblptrl	equ	0xFF6
  6307                           tablat	equ	0xFF5
  6308                           prodh	equ	0xFF4
  6309                           prodl	equ	0xFF3
  6310                           intcon	equ	0xFF2
  6311                           postinc0	equ	0xFEE
  6312                           wreg	equ	0xFE8
  6313                           indf1	equ	0xFE7
  6314                           postinc1	equ	0xFE6
  6315                           postdec1	equ	0xFE5
  6316                           fsr1h	equ	0xFE2
  6317                           fsr1l	equ	0xFE1
  6318                           indf2	equ	0xFDF
  6319                           postinc2	equ	0xFDE
  6320                           postdec2	equ	0xFDD
  6321                           fsr2h	equ	0xFDA
  6322                           fsr2l	equ	0xFD9
  6323                           status	equ	0xFD8
  6324                           
  6325 ;; *************** function _PWM_set *****************
  6326 ;; Defined at:
  6327 ;;		line 119 in file "PIC18F27J53-killifish_light02.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;  color           1    wreg     unsigned char 
  6330 ;;  value           2   14[BANK0 ] unsigned int 
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;  color           1   34[COMRAM] unsigned char 
  6333 ;; Return value:  Size  Location     Type
  6334 ;;		None               void
  6335 ;; Registers used:
  6336 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6337 ;; Tracked objects:
  6338 ;;		On entry : 0/0
  6339 ;;		On exit  : 0/0
  6340 ;;		Unchanged: 0/0
  6341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6342 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6343 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6344 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6345 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6346 ;;Total ram usage:        5 bytes
  6347 ;; Hardware stack levels used:    1
  6348 ;; Hardware stack levels required when called:    5
  6349 ;; This function calls:
  6350 ;;		___lwdiv
  6351 ;;		___wmul
  6352 ;; This function is called by:
  6353 ;;		_command_operation
  6354 ;;		_main
  6355 ;; This function uses a non-reentrant model
  6356 ;;
  6357                           
  6358                           	psect	text23
  6359  01129C                     __ptext23:
  6360                           	opt stack 0
  6361  01129C                     _PWM_set:
  6362                           	opt stack 23
  6363                           
  6364                           ; BSR set to: 0
  6365                           ;incstack = 0
  6366                           ;PWM_set@color stored from wreg
  6367  01129C  6E23               	movwf	PWM_set@color,c
  6368                           
  6369                           ;PIC18F27J53-killifish_light02.c: 120: value = value * value / 100;
  6370  01129E  C06E  F060         	movff	PWM_set@value,___wmul@multiplier
  6371  0112A2  C06F  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
  6372  0112A6  C06E  F062         	movff	PWM_set@value,___wmul@multiplicand
  6373  0112AA  C06F  F063         	movff	PWM_set@value+1,___wmul@multiplicand+1
  6374  0112AE  ECA9  F093         	call	___wmul	;wreg free
  6375  0112B2  C060  F066         	movff	?___wmul,___lwdiv@dividend
  6376  0112B6  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  6377  0112BA  0E00               	movlw	0
  6378  0112BC  0100               	movlb	0	; () banked
  6379  0112BE  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6380  0112C0  0E64               	movlw	100
  6381  0112C2  6F68               	movwf	___lwdiv@divisor& (0+255),b
  6382  0112C4  EC73  F091         	call	___lwdiv	;wreg free
  6383  0112C8  C066  F06E         	movff	?___lwdiv,PWM_set@value
  6384  0112CC  C067  F06F         	movff	?___lwdiv+1,PWM_set@value+1
  6385                           
  6386                           ;PIC18F27J53-killifish_light02.c: 121: switch (color) {
  6387  0112D0  D05B               	goto	l4428
  6388  0112D2                     l4410:
  6389                           
  6390                           ;PIC18F27J53-killifish_light02.c: 123: if (value < 100 / 4) {
  6391  0112D2  0100               	movlb	0	; () banked
  6392  0112D4  516F               	movf	(PWM_set@value+1)& (0+255),w,b
  6393  0112D6  E107               	bnz	l4414
  6394  0112D8  0E19               	movlw	25
  6395  0112DA  0100               	movlb	0	; () banked
  6396  0112DC  5D6E               	subwf	PWM_set@value& (0+255),w,b
  6397  0112DE  A0D8               	btfss	status,0,c
  6398  0112E0  D075               	goto	l4448
  6399  0112E2  D001               	goto	l4414
  6400                           
  6401                           ; BSR set to: 0
  6402                           ;PIC18F27J53-killifish_light02.c: 125: } else {
  6403  0112E4  D073               	goto	l4448
  6404  0112E6                     l4414:
  6405                           
  6406                           ; BSR set to: 0
  6407                           ;PIC18F27J53-killifish_light02.c: 126: value = 2 * (value - 100 / 4) / 3 + 100 / 4;
  6408  0112E6  C06E  F070         	movff	PWM_set@value,??_PWM_set
  6409  0112EA  C06F  F071         	movff	PWM_set@value+1,??_PWM_set+1
  6410  0112EE  90D8               	bcf	status,0,c
  6411  0112F0  0100               	movlb	0	; () banked
  6412  0112F2  3770               	rlcf	??_PWM_set& (0+255),f,b
  6413  0112F4  3771               	rlcf	(??_PWM_set+1)& (0+255),f,b
  6414  0112F6  0ECE               	movlw	206
  6415  0112F8  0100               	movlb	0	; () banked
  6416  0112FA  2570               	addwf	??_PWM_set& (0+255),w,b
  6417  0112FC  0100               	movlb	0	; () banked
  6418  0112FE  6F66               	movwf	___lwdiv@dividend& (0+255),b
  6419  011300  0EFF               	movlw	255
  6420  011302  0100               	movlb	0	; () banked
  6421  011304  2171               	addwfc	(??_PWM_set+1)& (0+255),w,b
  6422  011306  0100               	movlb	0	; () banked
  6423  011308  6F67               	movwf	(___lwdiv@dividend+1)& (0+255),b
  6424  01130A  0E00               	movlw	0
  6425  01130C  0100               	movlb	0	; () banked
  6426  01130E  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6427  011310  0E03               	movlw	3
  6428  011312  6F68               	movwf	___lwdiv@divisor& (0+255),b
  6429  011314  EC73  F091         	call	___lwdiv	;wreg free
  6430  011318  0E19               	movlw	25
  6431  01131A  0100               	movlb	0	; () banked
  6432  01131C  2566               	addwf	?___lwdiv& (0+255),w,b
  6433  01131E  0100               	movlb	0	; () banked
  6434  011320  6F6E               	movwf	PWM_set@value& (0+255),b
  6435  011322  0E00               	movlw	0
  6436  011324  0100               	movlb	0	; () banked
  6437  011326  2167               	addwfc	(?___lwdiv+1)& (0+255),w,b
  6438  011328  D02C               	goto	L1
  6439                           
  6440                           ; BSR set to: 0
  6441                           ;PIC18F27J53-killifish_light02.c: 134: }
  6442                           ;PIC18F27J53-killifish_light02.c: 135: break;
  6443                           
  6444                           ; BSR set to: 0
  6445                           
  6446                           ; BSR set to: 0
  6447                           ;PIC18F27J53-killifish_light02.c: 132: } else {
  6448                           
  6449                           ; BSR set to: 0
  6450                           
  6451                           ; BSR set to: 0
  6452                           
  6453                           ;PIC18F27J53-killifish_light02.c: 129: case 1:
  6454                           
  6455                           ; BSR set to: 0
  6456                           ;PIC18F27J53-killifish_light02.c: 127: }
  6457                           ;PIC18F27J53-killifish_light02.c: 128: break;
  6458  01132A  D050               	goto	l4448
  6459  01132C                     l4420:
  6460                           
  6461                           ;PIC18F27J53-killifish_light02.c: 137: if (value < 100 / 4) {
  6462  01132C  0100               	movlb	0	; () banked
  6463  01132E  516F               	movf	(PWM_set@value+1)& (0+255),w,b
  6464  011330  E107               	bnz	l4424
  6465  011332  0E19               	movlw	25
  6466  011334  0100               	movlb	0	; () banked
  6467  011336  5D6E               	subwf	PWM_set@value& (0+255),w,b
  6468  011338  A0D8               	btfss	status,0,c
  6469  01133A  D048               	goto	l4448
  6470  01133C  D001               	goto	l4424
  6471                           
  6472                           ; BSR set to: 0
  6473                           ;PIC18F27J53-killifish_light02.c: 139: } else {
  6474  01133E  D046               	goto	l4448
  6475  011340                     l4424:
  6476                           
  6477                           ; BSR set to: 0
  6478                           ;PIC18F27J53-killifish_light02.c: 140: value = 3 * (value - 100 / 4) / 4 + 100 / 4;
  6479  011340  0EE7               	movlw	231
  6480  011342  0100               	movlb	0	; () banked
  6481  011344  256E               	addwf	PWM_set@value& (0+255),w,b
  6482  011346  0100               	movlb	0	; () banked
  6483  011348  6F60               	movwf	___wmul@multiplier& (0+255),b
  6484  01134A  0EFF               	movlw	255
  6485  01134C  0100               	movlb	0	; () banked
  6486  01134E  216F               	addwfc	(PWM_set@value+1)& (0+255),w,b
  6487  011350  0100               	movlb	0	; () banked
  6488  011352  6F61               	movwf	(___wmul@multiplier+1)& (0+255),b
  6489  011354  0E00               	movlw	0
  6490  011356  0100               	movlb	0	; () banked
  6491  011358  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6492  01135A  0E03               	movlw	3
  6493  01135C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  6494  01135E  ECA9  F093         	call	___wmul	;wreg free
  6495  011362  0100               	movlb	0	; () banked
  6496  011364  90D8               	bcf	status,0,c
  6497  011366  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  6498  011368  3360               	rrcf	?___wmul& (0+255),f,b
  6499  01136A  0100               	movlb	0	; () banked
  6500  01136C  90D8               	bcf	status,0,c
  6501  01136E  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  6502  011370  3360               	rrcf	?___wmul& (0+255),f,b
  6503  011372  0E19               	movlw	25
  6504  011374  0100               	movlb	0	; () banked
  6505  011376  2560               	addwf	?___wmul& (0+255),w,b
  6506  011378  0100               	movlb	0	; () banked
  6507  01137A  6F6E               	movwf	PWM_set@value& (0+255),b
  6508  01137C  0E00               	movlw	0
  6509  01137E  0100               	movlb	0	; () banked
  6510  011380  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  6511  011382                     L1:
  6512  011382  0100               	movlb	0	; () banked
  6513  011384  6F6F               	movwf	(PWM_set@value+1)& (0+255),b
  6514                           
  6515                           ; BSR set to: 0
  6516                           ;PIC18F27J53-killifish_light02.c: 145: }
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;PIC18F27J53-killifish_light02.c: 144: break;
  6520                           
  6521                           ;PIC18F27J53-killifish_light02.c: 143: case 3:
  6522                           
  6523                           ; BSR set to: 0
  6524                           ;PIC18F27J53-killifish_light02.c: 141: }
  6525                           ;PIC18F27J53-killifish_light02.c: 142: break;
  6526  011386  D022               	goto	l4448
  6527  011388                     l4428:
  6528  011388  5023               	movf	PWM_set@color,w,c
  6529                           
  6530                           ; Switch size 1, requested type "space"
  6531                           ; Number of cases is 4, Range of values is 0 to 3
  6532                           ; switch strategies available:
  6533                           ; Name         Instructions Cycles
  6534                           ; simple_byte           13     7 (average)
  6535                           ;	Chosen strategy is simple_byte
  6536  01138A  0A00               	xorlw	0	; case 0
  6537  01138C  B4D8               	btfsc	status,2,c
  6538  01138E  D7A1               	goto	l4410
  6539  011390  0A01               	xorlw	1	; case 1
  6540  011392  B4D8               	btfsc	status,2,c
  6541  011394  D01B               	goto	l4448
  6542  011396  0A03               	xorlw	3	; case 2
  6543  011398  B4D8               	btfsc	status,2,c
  6544  01139A  D7C8               	goto	l4420
  6545  01139C  0A01               	xorlw	1	; case 3
  6546                           
  6547                           ;PIC18F27J53-killifish_light02.c: 146: switch (color) {
  6548  01139E  D016               	goto	l4448
  6549  0113A0                     l4430:
  6550                           
  6551                           ;PIC18F27J53-killifish_light02.c: 148: CCP1CONbits.DC1B = 0;
  6552  0113A0  0ECF               	movlw	-49
  6553  0113A2  16BA               	andwf	4026,f,c	;volatile
  6554                           
  6555                           ;PIC18F27J53-killifish_light02.c: 149: CCPR1L = value;
  6556  0113A4  C06E  FFBB         	movff	PWM_set@value,4027	;volatile
  6557                           
  6558                           ;PIC18F27J53-killifish_light02.c: 150: break;
  6559  0113A8  0012               	return	
  6560  0113AA                     l4434:
  6561                           
  6562                           ;PIC18F27J53-killifish_light02.c: 152: CCP2CONbits.DC2B = 0;
  6563  0113AA  0ECF               	movlw	-49
  6564  0113AC  16B4               	andwf	4020,f,c	;volatile
  6565                           
  6566                           ;PIC18F27J53-killifish_light02.c: 153: CCPR2L = value;
  6567  0113AE  C06E  FFB5         	movff	PWM_set@value,4021	;volatile
  6568                           
  6569                           ;PIC18F27J53-killifish_light02.c: 154: break;
  6570  0113B2  0012               	return	
  6571  0113B4                     l4438:
  6572                           
  6573                           ;PIC18F27J53-killifish_light02.c: 156: CCP3CONbits.DC3B = 0;
  6574  0113B4  0ECF               	movlw	-49
  6575  0113B6  010F               	movlb	15	; () banked
  6576  0113B8  1715               	andwf	21,f,b	;volatile
  6577                           
  6578                           ; BSR set to: 15
  6579                           ;PIC18F27J53-killifish_light02.c: 157: CCPR3L = value;
  6580  0113BA  C06E  FF16         	movff	PWM_set@value,3862	;volatile
  6581                           
  6582                           ;PIC18F27J53-killifish_light02.c: 158: break;
  6583  0113BE  0012               	return	
  6584  0113C0                     l4442:
  6585                           
  6586                           ;PIC18F27J53-killifish_light02.c: 160: CCP4CONbits.DC4B = 0;
  6587  0113C0  0ECF               	movlw	-49
  6588  0113C2  010F               	movlb	15	; () banked
  6589  0113C4  1712               	andwf	18,f,b	;volatile
  6590                           
  6591                           ; BSR set to: 15
  6592                           ;PIC18F27J53-killifish_light02.c: 161: CCPR4L = value;
  6593  0113C6  C06E  FF13         	movff	PWM_set@value,3859	;volatile
  6594                           
  6595                           ; BSR set to: 15
  6596                           ;PIC18F27J53-killifish_light02.c: 163: }
  6597                           
  6598                           ;PIC18F27J53-killifish_light02.c: 162: break;
  6599  0113CA  0012               	return	
  6600  0113CC                     l4448:
  6601  0113CC  5023               	movf	PWM_set@color,w,c
  6602                           
  6603                           ; Switch size 1, requested type "space"
  6604                           ; Number of cases is 4, Range of values is 0 to 3
  6605                           ; switch strategies available:
  6606                           ; Name         Instructions Cycles
  6607                           ; simple_byte           13     7 (average)
  6608                           ;	Chosen strategy is simple_byte
  6609  0113CE  0A00               	xorlw	0	; case 0
  6610  0113D0  B4D8               	btfsc	status,2,c
  6611  0113D2  D7E6               	goto	l4430
  6612  0113D4  0A01               	xorlw	1	; case 1
  6613  0113D6  B4D8               	btfsc	status,2,c
  6614  0113D8  D7E8               	goto	l4434
  6615  0113DA  0A03               	xorlw	3	; case 2
  6616  0113DC  B4D8               	btfsc	status,2,c
  6617  0113DE  D7EA               	goto	l4438
  6618  0113E0  0A01               	xorlw	1	; case 3
  6619  0113E2  A4D8               	btfss	status,2,c
  6620  0113E4  0012               	return	
  6621  0113E6  D7EC               	goto	l4442
  6622  0113E8  0012               	return		;funcret
  6623  0113EA                     __end_of_PWM_set:
  6624                           	opt stack 0
  6625                           tblptru	equ	0xFF8
  6626                           tblptrh	equ	0xFF7
  6627                           tblptrl	equ	0xFF6
  6628                           tablat	equ	0xFF5
  6629                           prodh	equ	0xFF4
  6630                           prodl	equ	0xFF3
  6631                           intcon	equ	0xFF2
  6632                           postinc0	equ	0xFEE
  6633                           wreg	equ	0xFE8
  6634                           indf1	equ	0xFE7
  6635                           postinc1	equ	0xFE6
  6636                           postdec1	equ	0xFE5
  6637                           fsr1h	equ	0xFE2
  6638                           fsr1l	equ	0xFE1
  6639                           indf2	equ	0xFDF
  6640                           postinc2	equ	0xFDE
  6641                           postdec2	equ	0xFDD
  6642                           fsr2h	equ	0xFDA
  6643                           fsr2l	equ	0xFD9
  6644                           status	equ	0xFD8
  6645                           
  6646 ;; *************** function ___wmul *****************
  6647 ;; Defined at:
  6648 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  6649 ;; Parameters:    Size  Location     Type
  6650 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6651 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6652 ;; Auto vars:     Size  Location     Type
  6653 ;;  product         2    4[BANK0 ] unsigned int 
  6654 ;; Return value:  Size  Location     Type
  6655 ;;                  2    0[BANK0 ] unsigned int 
  6656 ;; Registers used:
  6657 ;;		wreg, status,2, status,0, prodl, prodh
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6663 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6664 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6666 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6667 ;;Total ram usage:        6 bytes
  6668 ;; Hardware stack levels used:    1
  6669 ;; Hardware stack levels required when called:    4
  6670 ;; This function calls:
  6671 ;;		Nothing
  6672 ;; This function is called by:
  6673 ;;		_my_atoi
  6674 ;;		_PWM_set
  6675 ;;		_main
  6676 ;; This function uses a non-reentrant model
  6677 ;;
  6678                           
  6679                           	psect	text24
  6680  012752                     __ptext24:
  6681                           	opt stack 0
  6682  012752                     ___wmul:
  6683                           	opt stack 23
  6684                           
  6685                           ;incstack = 0
  6686  012752  0100               	movlb	0	; () banked
  6687  012754  5160               	movf	___wmul@multiplier& (0+255),w,b
  6688  012756  0100               	movlb	0	; () banked
  6689  012758  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6690  01275A  CFF3 F064          	movff	prodl,___wmul@product
  6691  01275E  CFF4 F065          	movff	prodh,___wmul@product+1
  6692  012762  0100               	movlb	0	; () banked
  6693  012764  5160               	movf	___wmul@multiplier& (0+255),w,b
  6694  012766  0100               	movlb	0	; () banked
  6695  012768  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6696  01276A  50F3               	movf	prodl,w,c
  6697  01276C  0100               	movlb	0	; () banked
  6698  01276E  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  6699  012770  0100               	movlb	0	; () banked
  6700  012772  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6701  012774  0100               	movlb	0	; () banked
  6702  012776  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6703  012778  50F3               	movf	prodl,w,c
  6704  01277A  0100               	movlb	0	; () banked
  6705  01277C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  6706                           
  6707                           ; BSR set to: 0
  6708  01277E  C064  F060         	movff	___wmul@product,?___wmul
  6709  012782  C065  F061         	movff	___wmul@product+1,?___wmul+1
  6710  012786  0012               	return	
  6711                           
  6712                           ; BSR set to: 0
  6713                           
  6714                           ; BSR set to: 0
  6715  012788  0012               	return		;funcret
  6716  01278A                     __end_of___wmul:
  6717                           	opt stack 0
  6718                           tblptru	equ	0xFF8
  6719                           tblptrh	equ	0xFF7
  6720                           tblptrl	equ	0xFF6
  6721                           tablat	equ	0xFF5
  6722                           prodh	equ	0xFF4
  6723                           prodl	equ	0xFF3
  6724                           intcon	equ	0xFF2
  6725                           postinc0	equ	0xFEE
  6726                           wreg	equ	0xFE8
  6727                           indf1	equ	0xFE7
  6728                           postinc1	equ	0xFE6
  6729                           postdec1	equ	0xFE5
  6730                           fsr1h	equ	0xFE2
  6731                           fsr1l	equ	0xFE1
  6732                           indf2	equ	0xFDF
  6733                           postinc2	equ	0xFDE
  6734                           postdec2	equ	0xFDD
  6735                           fsr2h	equ	0xFDA
  6736                           fsr2l	equ	0xFD9
  6737                           status	equ	0xFD8
  6738                           
  6739 ;; *************** function ___lwdiv *****************
  6740 ;; Defined at:
  6741 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  6742 ;; Parameters:    Size  Location     Type
  6743 ;;  dividend        2    6[BANK0 ] unsigned int 
  6744 ;;  divisor         2    8[BANK0 ] unsigned int 
  6745 ;; Auto vars:     Size  Location     Type
  6746 ;;  quotient        2   11[BANK0 ] unsigned int 
  6747 ;;  counter         1   10[BANK0 ] unsigned char 
  6748 ;; Return value:  Size  Location     Type
  6749 ;;                  2    6[BANK0 ] unsigned int 
  6750 ;; Registers used:
  6751 ;;		wreg, status,2, status,0
  6752 ;; Tracked objects:
  6753 ;;		On entry : 0/0
  6754 ;;		On exit  : 0/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6757 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6758 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6760 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6761 ;;Total ram usage:        7 bytes
  6762 ;; Hardware stack levels used:    1
  6763 ;; Hardware stack levels required when called:    4
  6764 ;; This function calls:
  6765 ;;		Nothing
  6766 ;; This function is called by:
  6767 ;;		_tx_sendn
  6768 ;;		_my_utoa
  6769 ;;		_PWM_set
  6770 ;;		_main
  6771 ;;		_ringbuf_put_num
  6772 ;; This function uses a non-reentrant model
  6773 ;;
  6774                           
  6775                           	psect	text25
  6776  0122E6                     __ptext25:
  6777                           	opt stack 0
  6778  0122E6                     ___lwdiv:
  6779                           	opt stack 24
  6780                           
  6781                           ; BSR set to: 0
  6782                           ;incstack = 0
  6783  0122E6  0E00               	movlw	0
  6784  0122E8  0100               	movlb	0	; () banked
  6785  0122EA  6F6C               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6786  0122EC  0E00               	movlw	0
  6787  0122EE  6F6B               	movwf	___lwdiv@quotient& (0+255),b
  6788                           
  6789                           ; BSR set to: 0
  6790  0122F0  0100               	movlb	0	; () banked
  6791  0122F2  5168               	movf	___lwdiv@divisor& (0+255),w,b
  6792  0122F4  0100               	movlb	0	; () banked
  6793  0122F6  1169               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6794  0122F8  B4D8               	btfsc	status,2,c
  6795  0122FA  D031               	goto	l1145
  6796                           
  6797                           ; BSR set to: 0
  6798  0122FC  0E01               	movlw	1
  6799  0122FE  0100               	movlb	0	; () banked
  6800  012300  6F6A               	movwf	___lwdiv@counter& (0+255),b
  6801  012302  D007               	goto	l4124
  6802  012304                     l4122:
  6803                           
  6804                           ; BSR set to: 0
  6805  012304  0100               	movlb	0	; () banked
  6806  012306  90D8               	bcf	status,0,c
  6807  012308  3768               	rlcf	___lwdiv@divisor& (0+255),f,b
  6808  01230A  3769               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6809  01230C  0100               	movlb	0	; () banked
  6810  01230E  2B6A               	incf	___lwdiv@counter& (0+255),f,b
  6811  012310  D000               	goto	l4124
  6812  012312                     l4124:
  6813                           
  6814                           ; BSR set to: 0
  6815  012312  0100               	movlb	0	; () banked
  6816  012314  BF69               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  6817  012316  D002               	goto	l4126
  6818  012318  D7F5               	goto	l4122
  6819                           
  6820                           ; BSR set to: 0
  6821  01231A  D000               	goto	l4126
  6822  01231C                     l4126:
  6823                           
  6824                           ; BSR set to: 0
  6825  01231C  0100               	movlb	0	; () banked
  6826  01231E  90D8               	bcf	status,0,c
  6827  012320  376B               	rlcf	___lwdiv@quotient& (0+255),f,b
  6828  012322  376C               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6829                           
  6830                           ; BSR set to: 0
  6831  012324  0100               	movlb	0	; () banked
  6832  012326  5168               	movf	___lwdiv@divisor& (0+255),w,b
  6833  012328  0100               	movlb	0	; () banked
  6834  01232A  5D66               	subwf	___lwdiv@dividend& (0+255),w,b
  6835  01232C  0100               	movlb	0	; () banked
  6836  01232E  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6837  012330  0100               	movlb	0	; () banked
  6838  012332  5967               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6839  012334  A0D8               	btfss	status,0,c
  6840  012336  D00B               	goto	l4134
  6841                           
  6842                           ; BSR set to: 0
  6843  012338  0100               	movlb	0	; () banked
  6844  01233A  5168               	movf	___lwdiv@divisor& (0+255),w,b
  6845  01233C  0100               	movlb	0	; () banked
  6846  01233E  5F66               	subwf	___lwdiv@dividend& (0+255),f,b
  6847  012340  0100               	movlb	0	; () banked
  6848  012342  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6849  012344  0100               	movlb	0	; () banked
  6850  012346  5B67               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6851                           
  6852                           ; BSR set to: 0
  6853  012348  0100               	movlb	0	; () banked
  6854  01234A  816B               	bsf	___lwdiv@quotient& (0+255),0,b
  6855  01234C  D000               	goto	l4134
  6856  01234E                     l4134:
  6857                           
  6858                           ; BSR set to: 0
  6859  01234E  0100               	movlb	0	; () banked
  6860  012350  90D8               	bcf	status,0,c
  6861  012352  3369               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6862  012354  3368               	rrcf	___lwdiv@divisor& (0+255),f,b
  6863                           
  6864                           ; BSR set to: 0
  6865  012356  0100               	movlb	0	; () banked
  6866  012358  2F6A               	decfsz	___lwdiv@counter& (0+255),f,b
  6867  01235A  D7E0               	goto	l4126
  6868  01235C  D000               	goto	l1145
  6869  01235E                     l1145:
  6870                           
  6871                           ; BSR set to: 0
  6872  01235E  C06B  F066         	movff	___lwdiv@quotient,?___lwdiv
  6873  012362  C06C  F067         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6874                           
  6875                           ; BSR set to: 0
  6876  012366  0012               	return		;funcret
  6877  012368                     __end_of___lwdiv:
  6878                           	opt stack 0
  6879                           tblptru	equ	0xFF8
  6880                           tblptrh	equ	0xFF7
  6881                           tblptrl	equ	0xFF6
  6882                           tablat	equ	0xFF5
  6883                           prodh	equ	0xFF4
  6884                           prodl	equ	0xFF3
  6885                           intcon	equ	0xFF2
  6886                           postinc0	equ	0xFEE
  6887                           wreg	equ	0xFE8
  6888                           indf1	equ	0xFE7
  6889                           postinc1	equ	0xFE6
  6890                           postdec1	equ	0xFE5
  6891                           fsr1h	equ	0xFE2
  6892                           fsr1l	equ	0xFE1
  6893                           indf2	equ	0xFDF
  6894                           postinc2	equ	0xFDE
  6895                           postdec2	equ	0xFDD
  6896                           fsr2h	equ	0xFDA
  6897                           fsr2l	equ	0xFD9
  6898                           status	equ	0xFD8
  6899                           
  6900 ;; *************** function _main_init *****************
  6901 ;; Defined at:
  6902 ;;		line 338 in file "PIC18F27J53-killifish_light02.c"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;		None
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;		None
  6907 ;; Return value:  Size  Location     Type
  6908 ;;		None               void
  6909 ;; Registers used:
  6910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6911 ;; Tracked objects:
  6912 ;;		On entry : 0/0
  6913 ;;		On exit  : 0/0
  6914 ;;		Unchanged: 0/0
  6915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6920 ;;Total ram usage:        0 bytes
  6921 ;; Hardware stack levels used:    1
  6922 ;; Hardware stack levels required when called:    5
  6923 ;; This function calls:
  6924 ;;		_ADC_init
  6925 ;;		_OSC_init
  6926 ;;		_PWM_init
  6927 ;;		_RTCC_init
  6928 ;;		_UART_init
  6929 ;;		_ringbuf_init
  6930 ;;		_timer1_init
  6931 ;;		_timer3_init
  6932 ;; This function is called by:
  6933 ;;		_main
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           	psect	text26
  6938  0120B8                     __ptext26:
  6939                           	opt stack 0
  6940  0120B8                     _main_init:
  6941                           	opt stack 25
  6942                           
  6943                           ;PIC18F27J53-killifish_light02.c: 339: OSC_init();
  6944                           
  6945                           ; BSR set to: 0
  6946                           ;incstack = 0
  6947  0120B8  EC9A  F094         	call	_OSC_init	;wreg free
  6948                           
  6949                           ;PIC18F27J53-killifish_light02.c: 340: TRISA = 0b11110111;
  6950  0120BC  0EF7               	movlw	247
  6951  0120BE  6E92               	movwf	3986,c	;volatile
  6952                           
  6953                           ;PIC18F27J53-killifish_light02.c: 341: TRISB = 0b00000000;
  6954  0120C0  0E00               	movlw	0
  6955  0120C2  6E93               	movwf	3987,c	;volatile
  6956                           
  6957                           ;PIC18F27J53-killifish_light02.c: 342: TRISC = 0b10111010;
  6958  0120C4  0EBA               	movlw	186
  6959  0120C6  6E94               	movwf	3988,c	;volatile
  6960                           
  6961                           ;PIC18F27J53-killifish_light02.c: 343: ANCON0 = 0b11111000;
  6962  0120C8  0EF8               	movlw	248
  6963  0120CA  010F               	movlb	15	; () banked
  6964  0120CC  6F48               	movwf	72,b	;volatile
  6965                           
  6966                           ; BSR set to: 15
  6967                           ;PIC18F27J53-killifish_light02.c: 344: ANCON1 = 0b00011111;
  6968  0120CE  0E1F               	movlw	31
  6969  0120D0  010F               	movlb	15	; () banked
  6970  0120D2  6F49               	movwf	73,b	;volatile
  6971                           
  6972                           ; BSR set to: 15
  6973                           ;PIC18F27J53-killifish_light02.c: 345: INTCON2bits.RBPU = 0;
  6974  0120D4  9EF1               	bcf	intcon2,7,c	;volatile
  6975                           
  6976                           ; BSR set to: 15
  6977                           ;PIC18F27J53-killifish_light02.c: 348: timer1_init(0, 2);
  6978  0120D6  0E02               	movlw	2
  6979  0120D8  6E1F               	movwf	timer1_init@clock_select,c
  6980  0120DA  0E00               	movlw	0
  6981  0120DC  EC86  F093         	call	_timer1_init
  6982                           
  6983                           ;PIC18F27J53-killifish_light02.c: 349: timer3_init(2);
  6984  0120E0  0E02               	movlw	2
  6985  0120E2  EC0D  F094         	call	_timer3_init
  6986                           
  6987                           ;PIC18F27J53-killifish_light02.c: 350: ADC_init(0);
  6988  0120E6  0E00               	movlw	0
  6989  0120E8  EC73  F094         	call	_ADC_init
  6990                           
  6991                           ;PIC18F27J53-killifish_light02.c: 351: RTCC_init();
  6992  0120EC  ECE0  F093         	call	_RTCC_init	;wreg free
  6993                           
  6994                           ;PIC18F27J53-killifish_light02.c: 352: PWM_init(100);
  6995  0120F0  0E64               	movlw	100
  6996  0120F2  EC0E  F08E         	call	_PWM_init
  6997                           
  6998                           ;PIC18F27J53-killifish_light02.c: 354: UART_init();
  6999  0120F6  EC53  F094         	call	_UART_init	;wreg free
  7000                           
  7001                           ;PIC18F27J53-killifish_light02.c: 355: static uint8_t txbuf[1000];
  7002                           ;PIC18F27J53-killifish_light02.c: 356: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
  7003  0120FA  0ED2               	movlw	low _tx_buf
  7004  0120FC  0100               	movlb	0	; () banked
  7005  0120FE  6F60               	movwf	ringbuf_init@rb& (0+255),b
  7006  012100  0E01               	movlw	high _tx_buf
  7007  012102  0100               	movlb	0	; () banked
  7008  012104  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  7009  012106  0E64               	movlw	low main_init@txbuf
  7010  012108  0100               	movlb	0	; () banked
  7011  01210A  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  7012  01210C  0E04               	movlw	high main_init@txbuf
  7013  01210E  0100               	movlb	0	; () banked
  7014  012110  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  7015  012112  0E03               	movlw	3
  7016  012114  0100               	movlb	0	; () banked
  7017  012116  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  7018  012118  0EE8               	movlw	232
  7019  01211A  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  7020  01211C  ECEB  F092         	call	_ringbuf_init	;wreg free
  7021                           
  7022                           ;PIC18F27J53-killifish_light02.c: 357: static uint8_t rxbuf[250];
  7023                           ;PIC18F27J53-killifish_light02.c: 358: ringbuf_init(&rx_buf, rxbuf, sizeof (rxbuf));
  7024  012120  0ECA               	movlw	low _rx_buf
  7025  012122  0100               	movlb	0	; () banked
  7026  012124  6F60               	movwf	ringbuf_init@rb& (0+255),b
  7027  012126  0E01               	movlw	high _rx_buf
  7028  012128  0100               	movlb	0	; () banked
  7029  01212A  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  7030  01212C  0E00               	movlw	low main_init@rxbuf
  7031  01212E  0100               	movlb	0	; () banked
  7032  012130  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  7033  012132  0E03               	movlw	high main_init@rxbuf
  7034  012134  0100               	movlb	0	; () banked
  7035  012136  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  7036  012138  0E00               	movlw	0
  7037  01213A  0100               	movlb	0	; () banked
  7038  01213C  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  7039  01213E  0EFA               	movlw	250
  7040  012140  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  7041  012142  ECEB  F092         	call	_ringbuf_init	;wreg free
  7042  012146  0012               	return		;funcret
  7043  012148                     __end_of_main_init:
  7044                           	opt stack 0
  7045                           tblptru	equ	0xFF8
  7046                           tblptrh	equ	0xFF7
  7047                           tblptrl	equ	0xFF6
  7048                           tablat	equ	0xFF5
  7049                           prodh	equ	0xFF4
  7050                           prodl	equ	0xFF3
  7051                           intcon	equ	0xFF2
  7052                           intcon2	equ	0xFF1
  7053                           postinc0	equ	0xFEE
  7054                           wreg	equ	0xFE8
  7055                           indf1	equ	0xFE7
  7056                           postinc1	equ	0xFE6
  7057                           postdec1	equ	0xFE5
  7058                           fsr1h	equ	0xFE2
  7059                           fsr1l	equ	0xFE1
  7060                           indf2	equ	0xFDF
  7061                           postinc2	equ	0xFDE
  7062                           postdec2	equ	0xFDD
  7063                           fsr2h	equ	0xFDA
  7064                           fsr2l	equ	0xFD9
  7065                           status	equ	0xFD8
  7066                           
  7067 ;; *************** function _timer3_init *****************
  7068 ;; Defined at:
  7069 ;;		line 85 in file "../My_header\My_header.h"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;  prescaler       1    wreg     unsigned char 
  7072 ;; Auto vars:     Size  Location     Type
  7073 ;;  prescaler       1   31[COMRAM] unsigned char 
  7074 ;; Return value:  Size  Location     Type
  7075 ;;		None               void
  7076 ;; Registers used:
  7077 ;;		wreg, status,2, status,0
  7078 ;; Tracked objects:
  7079 ;;		On entry : 0/0
  7080 ;;		On exit  : 0/0
  7081 ;;		Unchanged: 0/0
  7082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7084 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7085 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7086 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7087 ;;Total ram usage:        2 bytes
  7088 ;; Hardware stack levels used:    1
  7089 ;; Hardware stack levels required when called:    4
  7090 ;; This function calls:
  7091 ;;		Nothing
  7092 ;; This function is called by:
  7093 ;;		_main_init
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           	psect	text27
  7098  01281A                     __ptext27:
  7099                           	opt stack 0
  7100  01281A                     _timer3_init:
  7101                           	opt stack 25
  7102                           
  7103                           ;incstack = 0
  7104                           ;timer3_init@prescaler stored from wreg
  7105  01281A  6E20               	movwf	timer3_init@prescaler,c
  7106                           
  7107                           ;My_header\My_header.h: 86: T3CONbits.TMR3CS = 0;
  7108  01281C  0E3F               	movlw	-193
  7109  01281E  1679               	andwf	3961,f,c	;volatile
  7110                           
  7111                           ;My_header\My_header.h: 87: T3CONbits.T3OSCEN = 0;
  7112  012820  9679               	bcf	3961,3,c	;volatile
  7113                           
  7114                           ;My_header\My_header.h: 88: T3CONbits.T3CKPS = prescaler;
  7115  012822  C020  F01F         	movff	timer3_init@prescaler,??_timer3_init
  7116  012826  3A1F               	swapf	??_timer3_init,f,c
  7117  012828  5079               	movf	3961,w,c	;volatile
  7118  01282A  181F               	xorwf	??_timer3_init,w,c
  7119  01282C  0BCF               	andlw	-49
  7120  01282E  181F               	xorwf	??_timer3_init,w,c
  7121  012830  6E79               	movwf	3961,c	;volatile
  7122                           
  7123                           ;My_header\My_header.h: 89: T3CONbits.RD163 = 0;
  7124  012832  9E79               	bcf	3961,7,c	;volatile
  7125                           
  7126                           ;My_header\My_header.h: 90: T3CONbits.TMR3ON = 1;
  7127  012834  8079               	bsf	3961,0,c	;volatile
  7128                           
  7129                           ;My_header\My_header.h: 91: IPR2bits.TMR3IP = 0;
  7130  012836  92A2               	bcf	4002,1,c	;volatile
  7131                           
  7132                           ;My_header\My_header.h: 92: PIR2bits.TMR3IF = 0;
  7133  012838  92A1               	bcf	4001,1,c	;volatile
  7134                           
  7135                           ;My_header\My_header.h: 93: PIE2bits.TMR3IE = 1;
  7136  01283A  82A0               	bsf	4000,1,c	;volatile
  7137                           
  7138                           ;My_header\My_header.h: 94: INTCONbits.PEIE = 1;
  7139  01283C  8CF2               	bsf	intcon,6,c	;volatile
  7140  01283E  0012               	return		;funcret
  7141  012840                     __end_of_timer3_init:
  7142                           	opt stack 0
  7143                           tblptru	equ	0xFF8
  7144                           tblptrh	equ	0xFF7
  7145                           tblptrl	equ	0xFF6
  7146                           tablat	equ	0xFF5
  7147                           prodh	equ	0xFF4
  7148                           prodl	equ	0xFF3
  7149                           intcon	equ	0xFF2
  7150                           intcon2	equ	0xFF1
  7151                           postinc0	equ	0xFEE
  7152                           wreg	equ	0xFE8
  7153                           indf1	equ	0xFE7
  7154                           postinc1	equ	0xFE6
  7155                           postdec1	equ	0xFE5
  7156                           fsr1h	equ	0xFE2
  7157                           fsr1l	equ	0xFE1
  7158                           indf2	equ	0xFDF
  7159                           postinc2	equ	0xFDE
  7160                           postdec2	equ	0xFDD
  7161                           fsr2h	equ	0xFDA
  7162                           fsr2l	equ	0xFD9
  7163                           status	equ	0xFD8
  7164                           
  7165 ;; *************** function _timer1_init *****************
  7166 ;; Defined at:
  7167 ;;		line 54 in file "../My_header\My_header.h"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;  prescaler       1    wreg     unsigned char 
  7170 ;;  clock_select    1   30[COMRAM] unsigned char 
  7171 ;; Auto vars:     Size  Location     Type
  7172 ;;  prescaler       1   32[COMRAM] unsigned char 
  7173 ;; Return value:  Size  Location     Type
  7174 ;;		None               void
  7175 ;; Registers used:
  7176 ;;		wreg, status,2, status,0
  7177 ;; Tracked objects:
  7178 ;;		On entry : 0/0
  7179 ;;		On exit  : 0/0
  7180 ;;		Unchanged: 0/0
  7181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7182 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7183 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7185 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7186 ;;Total ram usage:        3 bytes
  7187 ;; Hardware stack levels used:    1
  7188 ;; Hardware stack levels required when called:    4
  7189 ;; This function calls:
  7190 ;;		Nothing
  7191 ;; This function is called by:
  7192 ;;		_main_init
  7193 ;; This function uses a non-reentrant model
  7194 ;;
  7195                           
  7196                           	psect	text28
  7197  01270C                     __ptext28:
  7198                           	opt stack 0
  7199  01270C                     _timer1_init:
  7200                           	opt stack 25
  7201                           
  7202                           ;incstack = 0
  7203                           ;timer1_init@prescaler stored from wreg
  7204  01270C  6E21               	movwf	timer1_init@prescaler,c
  7205                           
  7206                           ;My_header\My_header.h: 55: T1CONbits.TMR1CS = clock_select;
  7207  01270E  C01F  F020         	movff	timer1_init@clock_select,??_timer1_init
  7208  012712  3A20               	swapf	??_timer1_init,f,c
  7209  012714  4620               	rlncf	??_timer1_init,f,c
  7210  012716  4620               	rlncf	??_timer1_init,f,c
  7211  012718  50CD               	movf	4045,w,c	;volatile
  7212  01271A  1820               	xorwf	??_timer1_init,w,c
  7213  01271C  0B3F               	andlw	-193
  7214  01271E  1820               	xorwf	??_timer1_init,w,c
  7215  012720  6ECD               	movwf	4045,c	;volatile
  7216                           
  7217                           ;My_header\My_header.h: 56: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  7218  012722  0E02               	movlw	2
  7219  012724  181F               	xorwf	timer1_init@clock_select,w,c
  7220  012726  A4D8               	btfss	status,2,c
  7221  012728  D002               	goto	l134
  7222  01272A  86CD               	bsf	4045,3,c	;volatile
  7223  01272C  D002               	goto	l4480
  7224  01272E                     l134:
  7225                           
  7226                           ;My_header\My_header.h: 57: else T1CONbits.T1OSCEN = 0;
  7227  01272E  96CD               	bcf	4045,3,c	;volatile
  7228  012730  D000               	goto	l4480
  7229  012732                     l4480:
  7230                           
  7231                           ;My_header\My_header.h: 58: T1CONbits.T1CKPS = prescaler;
  7232  012732  C021  F020         	movff	timer1_init@prescaler,??_timer1_init
  7233  012736  3A20               	swapf	??_timer1_init,f,c
  7234  012738  50CD               	movf	4045,w,c	;volatile
  7235  01273A  1820               	xorwf	??_timer1_init,w,c
  7236  01273C  0BCF               	andlw	-49
  7237  01273E  1820               	xorwf	??_timer1_init,w,c
  7238  012740  6ECD               	movwf	4045,c	;volatile
  7239                           
  7240                           ;My_header\My_header.h: 59: T1CONbits.nT1SYNC = 1;
  7241  012742  84CD               	bsf	4045,2,c	;volatile
  7242                           
  7243                           ;My_header\My_header.h: 60: T1CONbits.RD16 = 0;
  7244  012744  92CD               	bcf	4045,1,c	;volatile
  7245                           
  7246                           ;My_header\My_header.h: 61: T1CONbits.TMR1ON = 1;
  7247  012746  80CD               	bsf	4045,0,c	;volatile
  7248                           
  7249                           ;My_header\My_header.h: 62: IPR1bits.TMR1IP = 0;
  7250  012748  909F               	bcf	3999,0,c	;volatile
  7251                           
  7252                           ;My_header\My_header.h: 63: PIR1bits.TMR1IF = 0;
  7253  01274A  909E               	bcf	3998,0,c	;volatile
  7254                           
  7255                           ;My_header\My_header.h: 64: PIE1bits.TMR1IE = 1;
  7256  01274C  809D               	bsf	3997,0,c	;volatile
  7257                           
  7258                           ;My_header\My_header.h: 65: INTCONbits.PEIE = 1;
  7259  01274E  8CF2               	bsf	intcon,6,c	;volatile
  7260  012750  0012               	return		;funcret
  7261  012752                     __end_of_timer1_init:
  7262                           	opt stack 0
  7263                           tblptru	equ	0xFF8
  7264                           tblptrh	equ	0xFF7
  7265                           tblptrl	equ	0xFF6
  7266                           tablat	equ	0xFF5
  7267                           prodh	equ	0xFF4
  7268                           prodl	equ	0xFF3
  7269                           intcon	equ	0xFF2
  7270                           intcon2	equ	0xFF1
  7271                           postinc0	equ	0xFEE
  7272                           wreg	equ	0xFE8
  7273                           indf1	equ	0xFE7
  7274                           postinc1	equ	0xFE6
  7275                           postdec1	equ	0xFE5
  7276                           fsr1h	equ	0xFE2
  7277                           fsr1l	equ	0xFE1
  7278                           indf2	equ	0xFDF
  7279                           postinc2	equ	0xFDE
  7280                           postdec2	equ	0xFDD
  7281                           fsr2h	equ	0xFDA
  7282                           fsr2l	equ	0xFD9
  7283                           status	equ	0xFD8
  7284                           
  7285 ;; *************** function _ringbuf_init *****************
  7286 ;; Defined at:
  7287 ;;		line 24 in file "../My_header\My_ringbuf.h"
  7288 ;; Parameters:    Size  Location     Type
  7289 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  7290 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
  7291 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  7292 ;;		 -> main_init@rxbuf(250), main_init@txbuf(1000), rx_loop@buf(100), 
  7293 ;;  bufsize         2    4[BANK0 ] unsigned int 
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;		None
  7296 ;; Return value:  Size  Location     Type
  7297 ;;		None               void
  7298 ;; Registers used:
  7299 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7300 ;; Tracked objects:
  7301 ;;		On entry : 0/0
  7302 ;;		On exit  : 0/0
  7303 ;;		Unchanged: 0/0
  7304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7305 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7308 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7309 ;;Total ram usage:        6 bytes
  7310 ;; Hardware stack levels used:    1
  7311 ;; Hardware stack levels required when called:    4
  7312 ;; This function calls:
  7313 ;;		Nothing
  7314 ;; This function is called by:
  7315 ;;		_rx_loop
  7316 ;;		_main_init
  7317 ;; This function uses a non-reentrant model
  7318 ;;
  7319                           
  7320                           	psect	text29
  7321  0125D6                     __ptext29:
  7322                           	opt stack 0
  7323  0125D6                     _ringbuf_init:
  7324                           	opt stack 25
  7325                           
  7326                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
  7327                           
  7328                           ;incstack = 0
  7329  0125D6  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  7330  0125DA  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  7331  0125DE  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  7332  0125E2  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  7333                           
  7334                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
  7335  0125E6  0100               	movlb	0	; () banked
  7336  0125E8  EE20 F002          	lfsr	2,2
  7337  0125EC  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7338  0125EE  26D9               	addwf	fsr2l,f,c
  7339  0125F0  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7340  0125F2  22DA               	addwfc	fsr2h,f,c
  7341  0125F4  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  7342  0125F8  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  7343                           
  7344                           ; BSR set to: 0
  7345                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
  7346  0125FC  0100               	movlb	0	; () banked
  7347  0125FE  EE20 F004          	lfsr	2,4
  7348  012602  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7349  012604  26D9               	addwf	fsr2l,f,c
  7350  012606  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7351  012608  22DA               	addwfc	fsr2h,f,c
  7352  01260A  0E00               	movlw	0
  7353  01260C  6EDE               	movwf	postinc2,c
  7354  01260E  0E00               	movlw	0
  7355  012610  6EDD               	movwf	postdec2,c
  7356                           
  7357                           ; BSR set to: 0
  7358                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
  7359  012612  0100               	movlb	0	; () banked
  7360  012614  EE20 F006          	lfsr	2,6
  7361  012618  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7362  01261A  26D9               	addwf	fsr2l,f,c
  7363  01261C  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7364  01261E  22DA               	addwfc	fsr2h,f,c
  7365  012620  0E00               	movlw	0
  7366  012622  6EDE               	movwf	postinc2,c
  7367  012624  0E00               	movlw	0
  7368  012626  6EDD               	movwf	postdec2,c
  7369                           
  7370                           ; BSR set to: 0
  7371  012628  0012               	return		;funcret
  7372  01262A                     __end_of_ringbuf_init:
  7373                           	opt stack 0
  7374                           tblptru	equ	0xFF8
  7375                           tblptrh	equ	0xFF7
  7376                           tblptrl	equ	0xFF6
  7377                           tablat	equ	0xFF5
  7378                           prodh	equ	0xFF4
  7379                           prodl	equ	0xFF3
  7380                           intcon	equ	0xFF2
  7381                           intcon2	equ	0xFF1
  7382                           postinc0	equ	0xFEE
  7383                           wreg	equ	0xFE8
  7384                           indf1	equ	0xFE7
  7385                           postinc1	equ	0xFE6
  7386                           postdec1	equ	0xFE5
  7387                           fsr1h	equ	0xFE2
  7388                           fsr1l	equ	0xFE1
  7389                           indf2	equ	0xFDF
  7390                           postinc2	equ	0xFDE
  7391                           postdec2	equ	0xFDD
  7392                           fsr2h	equ	0xFDA
  7393                           fsr2l	equ	0xFD9
  7394                           status	equ	0xFD8
  7395                           
  7396 ;; *************** function _UART_init *****************
  7397 ;; Defined at:
  7398 ;;		line 192 in file "../My_header\My_header.h"
  7399 ;; Parameters:    Size  Location     Type
  7400 ;;		None
  7401 ;; Auto vars:     Size  Location     Type
  7402 ;;		None
  7403 ;; Return value:  Size  Location     Type
  7404 ;;		None               void
  7405 ;; Registers used:
  7406 ;;		wreg, status,2
  7407 ;; Tracked objects:
  7408 ;;		On entry : 0/0
  7409 ;;		On exit  : 0/0
  7410 ;;		Unchanged: 0/0
  7411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7416 ;;Total ram usage:        0 bytes
  7417 ;; Hardware stack levels used:    1
  7418 ;; Hardware stack levels required when called:    4
  7419 ;; This function calls:
  7420 ;;		Nothing
  7421 ;; This function is called by:
  7422 ;;		_main_init
  7423 ;; This function uses a non-reentrant model
  7424 ;;
  7425                           
  7426                           	psect	text30
  7427  0128A6                     __ptext30:
  7428                           	opt stack 0
  7429  0128A6                     _UART_init:
  7430                           	opt stack 25
  7431                           
  7432                           ;My_header\My_header.h: 193: TXSTA1bits.TX9 = 0;
  7433                           
  7434                           ; BSR set to: 0
  7435                           ;incstack = 0
  7436  0128A6  9CAD               	bcf	4013,6,c	;volatile
  7437                           
  7438                           ;My_header\My_header.h: 194: TXSTA1bits.TXEN = 1;
  7439  0128A8  8AAD               	bsf	4013,5,c	;volatile
  7440                           
  7441                           ;My_header\My_header.h: 195: TXSTA1bits.SYNC = 0;
  7442  0128AA  98AD               	bcf	4013,4,c	;volatile
  7443                           
  7444                           ;My_header\My_header.h: 196: TXSTA1bits.BRGH = 0;
  7445  0128AC  94AD               	bcf	4013,2,c	;volatile
  7446                           
  7447                           ;My_header\My_header.h: 197: RCSTA1bits.SPEN = 1;
  7448  0128AE  8EAC               	bsf	4012,7,c	;volatile
  7449                           
  7450                           ;My_header\My_header.h: 198: RCSTA1bits.RX9 = 0;
  7451  0128B0  9CAC               	bcf	4012,6,c	;volatile
  7452                           
  7453                           ;My_header\My_header.h: 199: RCSTA1bits.CREN = 1;
  7454  0128B2  88AC               	bsf	4012,4,c	;volatile
  7455                           
  7456                           ;My_header\My_header.h: 200: BAUDCON1bits.BRG16 = 0;
  7457  0128B4  967E               	bcf	3966,3,c	;volatile
  7458                           
  7459                           ;My_header\My_header.h: 201: SPBRG1 = 48000000 / 64 / 9600 - 1;
  7460  0128B6  0E4D               	movlw	77
  7461  0128B8  6EB0               	movwf	4016,c	;volatile
  7462                           
  7463                           ;My_header\My_header.h: 202: SPBRGH1 = 0;
  7464  0128BA  0E00               	movlw	0
  7465  0128BC  6E7F               	movwf	3967,c	;volatile
  7466                           
  7467                           ;My_header\My_header.h: 203: IPR1bits.RC1IP = 0;
  7468  0128BE  9A9F               	bcf	3999,5,c	;volatile
  7469                           
  7470                           ;My_header\My_header.h: 204: PIE1bits.RCIE = 1;
  7471  0128C0  8A9D               	bsf	3997,5,c	;volatile
  7472                           
  7473                           ;My_header\My_header.h: 205: INTCONbits.PEIE = 1;
  7474  0128C2  8CF2               	bsf	intcon,6,c	;volatile
  7475  0128C4  0012               	return		;funcret
  7476  0128C6                     __end_of_UART_init:
  7477                           	opt stack 0
  7478                           tblptru	equ	0xFF8
  7479                           tblptrh	equ	0xFF7
  7480                           tblptrl	equ	0xFF6
  7481                           tablat	equ	0xFF5
  7482                           prodh	equ	0xFF4
  7483                           prodl	equ	0xFF3
  7484                           intcon	equ	0xFF2
  7485                           intcon2	equ	0xFF1
  7486                           postinc0	equ	0xFEE
  7487                           wreg	equ	0xFE8
  7488                           indf1	equ	0xFE7
  7489                           postinc1	equ	0xFE6
  7490                           postdec1	equ	0xFE5
  7491                           fsr1h	equ	0xFE2
  7492                           fsr1l	equ	0xFE1
  7493                           indf2	equ	0xFDF
  7494                           postinc2	equ	0xFDE
  7495                           postdec2	equ	0xFDD
  7496                           fsr2h	equ	0xFDA
  7497                           fsr2l	equ	0xFD9
  7498                           status	equ	0xFD8
  7499                           
  7500 ;; *************** function _RTCC_init *****************
  7501 ;; Defined at:
  7502 ;;		line 56 in file "../My_header\My_RTCC.h"
  7503 ;; Parameters:    Size  Location     Type
  7504 ;;		None
  7505 ;; Auto vars:     Size  Location     Type
  7506 ;;		None
  7507 ;; Return value:  Size  Location     Type
  7508 ;;		None               void
  7509 ;; Registers used:
  7510 ;;		wreg, status,2
  7511 ;; Tracked objects:
  7512 ;;		On entry : 0/0
  7513 ;;		On exit  : 0/0
  7514 ;;		Unchanged: 0/0
  7515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7520 ;;Total ram usage:        0 bytes
  7521 ;; Hardware stack levels used:    1
  7522 ;; Hardware stack levels required when called:    4
  7523 ;; This function calls:
  7524 ;;		Nothing
  7525 ;; This function is called by:
  7526 ;;		_main_init
  7527 ;; This function uses a non-reentrant model
  7528 ;;
  7529                           
  7530                           	psect	text31
  7531  0127C0                     __ptext31:
  7532                           	opt stack 0
  7533  0127C0                     _RTCC_init:
  7534                           	opt stack 25
  7535                           
  7536                           ;My_header\My_RTCC.h: 57: RTCCFGbits.RTCWREN = 1;
  7537                           
  7538                           ;incstack = 0
  7539  0127C0  010F               	movlb	15	; () banked
  7540  0127C2  8B3F               	bsf	63,5,b	;volatile
  7541                           
  7542                           ;My_header\My_RTCC.h: 58: if (RTCCFGbits.RTCWREN != 1) {
  7543  0127C4  010F               	movlb	15	; () banked
  7544  0127C6  BB3F               	btfsc	63,5,b	;volatile
  7545  0127C8  D007               	goto	l4598
  7546                           
  7547                           ; BSR set to: 15
  7548                           ;My_header\My_RTCC.h: 59: EECON2 = 0x55;
  7549  0127CA  0E55               	movlw	85
  7550  0127CC  6EA7               	movwf	4007,c	;volatile
  7551                           
  7552                           ;My_header\My_RTCC.h: 60: EECON2 = 0xAA;
  7553  0127CE  0EAA               	movlw	170
  7554  0127D0  6EA7               	movwf	4007,c	;volatile
  7555                           
  7556                           ; BSR set to: 15
  7557                           ;My_header\My_RTCC.h: 61: RTCCFGbits.RTCWREN = 1;
  7558  0127D2  010F               	movlb	15	; () banked
  7559  0127D4  8B3F               	bsf	63,5,b	;volatile
  7560  0127D6  D000               	goto	l4598
  7561  0127D8                     l4598:
  7562                           
  7563                           ; BSR set to: 15
  7564                           ;My_header\My_RTCC.h: 62: }
  7565                           ;My_header\My_RTCC.h: 63: RTCCFGbits.RTCEN = 1;
  7566  0127D8  010F               	movlb	15	; () banked
  7567  0127DA  8F3F               	bsf	63,7,b	;volatile
  7568                           
  7569                           ; BSR set to: 15
  7570                           ;My_header\My_RTCC.h: 64: RTCCFGbits.RTCOE = 0;
  7571  0127DC  010F               	movlb	15	; () banked
  7572  0127DE  953F               	bcf	63,2,b	;volatile
  7573                           
  7574                           ; BSR set to: 15
  7575                           ;My_header\My_RTCC.h: 65: PADCFG1bits.RTSECSEL0 = 1;
  7576  0127E0  010F               	movlb	15	; () banked
  7577  0127E2  833C               	bsf	60,1,b	;volatile
  7578                           
  7579                           ; BSR set to: 15
  7580                           ;My_header\My_RTCC.h: 66: PADCFG1bits.RTSECSEL1 = 1;
  7581  0127E4  010F               	movlb	15	; () banked
  7582  0127E6  853C               	bsf	60,2,b	;volatile
  7583                           
  7584                           ;My_header\My_RTCC.h: 67: RTCCAL = 0x00;
  7585  0127E8  0E00               	movlw	0
  7586  0127EA  010F               	movlb	15	; () banked
  7587  0127EC  6F3E               	movwf	62,b	;volatile
  7588                           
  7589                           ; BSR set to: 15
  7590  0127EE  0012               	return		;funcret
  7591  0127F0                     __end_of_RTCC_init:
  7592                           	opt stack 0
  7593                           tblptru	equ	0xFF8
  7594                           tblptrh	equ	0xFF7
  7595                           tblptrl	equ	0xFF6
  7596                           tablat	equ	0xFF5
  7597                           prodh	equ	0xFF4
  7598                           prodl	equ	0xFF3
  7599                           intcon	equ	0xFF2
  7600                           intcon2	equ	0xFF1
  7601                           postinc0	equ	0xFEE
  7602                           wreg	equ	0xFE8
  7603                           indf1	equ	0xFE7
  7604                           postinc1	equ	0xFE6
  7605                           postdec1	equ	0xFE5
  7606                           fsr1h	equ	0xFE2
  7607                           fsr1l	equ	0xFE1
  7608                           indf2	equ	0xFDF
  7609                           postinc2	equ	0xFDE
  7610                           postdec2	equ	0xFDD
  7611                           fsr2h	equ	0xFDA
  7612                           fsr2l	equ	0xFD9
  7613                           status	equ	0xFD8
  7614                           
  7615 ;; *************** function _PWM_init *****************
  7616 ;; Defined at:
  7617 ;;		line 78 in file "PIC18F27J53-killifish_light02.c"
  7618 ;; Parameters:    Size  Location     Type
  7619 ;;  PR              1    wreg     unsigned char 
  7620 ;; Auto vars:     Size  Location     Type
  7621 ;;  PR              1   30[COMRAM] unsigned char 
  7622 ;; Return value:  Size  Location     Type
  7623 ;;		None               void
  7624 ;; Registers used:
  7625 ;;		wreg, status,2, status,0
  7626 ;; Tracked objects:
  7627 ;;		On entry : 0/0
  7628 ;;		On exit  : 0/0
  7629 ;;		Unchanged: 0/0
  7630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7632 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7634 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7635 ;;Total ram usage:        1 bytes
  7636 ;; Hardware stack levels used:    1
  7637 ;; Hardware stack levels required when called:    4
  7638 ;; This function calls:
  7639 ;;		Nothing
  7640 ;; This function is called by:
  7641 ;;		_main_init
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           
  7645                           	psect	text32
  7646  011C1C                     __ptext32:
  7647                           	opt stack 0
  7648  011C1C                     _PWM_init:
  7649                           	opt stack 25
  7650                           
  7651                           ; BSR set to: 15
  7652                           ;incstack = 0
  7653                           ;PWM_init@PR stored from wreg
  7654  011C1C  6E1F               	movwf	PWM_init@PR,c
  7655                           
  7656                           ;PIC18F27J53-killifish_light02.c: 79: PPSCONbits.IOLOCK = 0;
  7657  011C1E  010E               	movlb	14	; () banked
  7658  011C20  91BF               	bcf	191,0,b	;volatile
  7659                           
  7660                           ;PIC18F27J53-killifish_light02.c: 80: if (PPSCONbits.IOLOCK != 0) {
  7661  011C22  010E               	movlb	14	; () banked
  7662  011C24  A1BF               	btfss	191,0,b	;volatile
  7663  011C26  D006               	goto	l481
  7664                           
  7665                           ; BSR set to: 14
  7666                           ;PIC18F27J53-killifish_light02.c: 81: EECON2 = 0x55;
  7667  011C28  0E55               	movlw	85
  7668  011C2A  6EA7               	movwf	4007,c	;volatile
  7669                           
  7670                           ;PIC18F27J53-killifish_light02.c: 82: EECON2 = 0xAA;
  7671  011C2C  0EAA               	movlw	170
  7672  011C2E  6EA7               	movwf	4007,c	;volatile
  7673                           
  7674                           ; BSR set to: 14
  7675                           ;PIC18F27J53-killifish_light02.c: 83: PPSCONbits.IOLOCK = 0;
  7676  011C30  010E               	movlb	14	; () banked
  7677  011C32  91BF               	bcf	191,0,b	;volatile
  7678  011C34                     l481:
  7679                           
  7680                           ; BSR set to: 14
  7681                           ;PIC18F27J53-killifish_light02.c: 84: }
  7682                           ;PIC18F27J53-killifish_light02.c: 86: RPOR3 = 14;
  7683  011C34  0E0E               	movlw	14
  7684  011C36  010E               	movlb	14	; () banked
  7685  011C38  6FC3               	movwf	195,b	;volatile
  7686                           
  7687                           ;PIC18F27J53-killifish_light02.c: 87: RPOR4 = 18;
  7688  011C3A  0E12               	movlw	18
  7689  011C3C  010E               	movlb	14	; () banked
  7690  011C3E  6FC4               	movwf	196,b	;volatile
  7691                           
  7692                           ;PIC18F27J53-killifish_light02.c: 88: RPOR5 = 22;
  7693  011C40  0E16               	movlw	22
  7694  011C42  010E               	movlb	14	; () banked
  7695  011C44  6FC5               	movwf	197,b	;volatile
  7696                           
  7697                           ; BSR set to: 14
  7698                           ;PIC18F27J53-killifish_light02.c: 90: CCP1CONbits.CCP1M = 12;
  7699  011C46  50BA               	movf	4026,w,c	;volatile
  7700  011C48  0BF0               	andlw	-16
  7701  011C4A  090C               	iorlw	12
  7702  011C4C  6EBA               	movwf	4026,c	;volatile
  7703                           
  7704                           ; BSR set to: 14
  7705                           ;PIC18F27J53-killifish_light02.c: 91: CCP1CONbits.P1M = 0;
  7706  011C4E  0E3F               	movlw	-193
  7707  011C50  16BA               	andwf	4026,f,c	;volatile
  7708                           
  7709                           ; BSR set to: 14
  7710                           ;PIC18F27J53-killifish_light02.c: 92: CCPTMRS0bits.C1TSEL = 0;
  7711  011C52  9152               	bcf	82,0,b	;volatile
  7712  011C54  9352               	bcf	82,1,b	;volatile
  7713  011C56  9552               	bcf	82,2,b	;volatile
  7714                           
  7715                           ; BSR set to: 14
  7716                           ;PIC18F27J53-killifish_light02.c: 93: CCPR1Lbits.CCPR1L = 0;
  7717  011C58  0E00               	movlw	0
  7718  011C5A  6EBB               	movwf	4027,c	;volatile
  7719                           
  7720                           ; BSR set to: 14
  7721                           ;PIC18F27J53-killifish_light02.c: 94: CCP1CONbits.DC1B = 0;
  7722  011C5C  0ECF               	movlw	-49
  7723  011C5E  16BA               	andwf	4026,f,c	;volatile
  7724                           
  7725                           ; BSR set to: 14
  7726                           ;PIC18F27J53-killifish_light02.c: 96: CCP2CONbits.CCP2M = 12;
  7727  011C60  50B4               	movf	4020,w,c	;volatile
  7728  011C62  0BF0               	andlw	-16
  7729  011C64  090C               	iorlw	12
  7730  011C66  6EB4               	movwf	4020,c	;volatile
  7731                           
  7732                           ; BSR set to: 14
  7733                           ;PIC18F27J53-killifish_light02.c: 97: CCP2CONbits.P2M = 0;
  7734  011C68  0E3F               	movlw	-193
  7735  011C6A  16B4               	andwf	4020,f,c	;volatile
  7736                           
  7737                           ; BSR set to: 14
  7738                           ;PIC18F27J53-killifish_light02.c: 98: CCPTMRS0bits.C2TSEL = 0;
  7739  011C6C  9752               	bcf	82,3,b	;volatile
  7740  011C6E  9952               	bcf	82,4,b	;volatile
  7741  011C70  9B52               	bcf	82,5,b	;volatile
  7742                           
  7743                           ; BSR set to: 14
  7744                           ;PIC18F27J53-killifish_light02.c: 99: CCPR2Lbits.CCPR2L = 0;
  7745  011C72  0E00               	movlw	0
  7746  011C74  6EB5               	movwf	4021,c	;volatile
  7747                           
  7748                           ; BSR set to: 14
  7749                           ;PIC18F27J53-killifish_light02.c: 100: CCP2CONbits.DC2B = 0;
  7750  011C76  0ECF               	movlw	-49
  7751  011C78  16B4               	andwf	4020,f,c	;volatile
  7752                           
  7753                           ; BSR set to: 14
  7754                           ;PIC18F27J53-killifish_light02.c: 102: CCP3CONbits.CCP3M = 12;
  7755  011C7A  010F               	movlb	15	; () banked
  7756  011C7C  5115               	movf	21,w,b	;volatile
  7757  011C7E  0BF0               	andlw	-16
  7758  011C80  090C               	iorlw	12
  7759  011C82  6F15               	movwf	21,b	;volatile
  7760                           
  7761                           ; BSR set to: 15
  7762                           ;PIC18F27J53-killifish_light02.c: 103: CCP3CONbits.P3M = 0;
  7763  011C84  0E3F               	movlw	-193
  7764  011C86  010F               	movlb	15	; () banked
  7765  011C88  1715               	andwf	21,f,b	;volatile
  7766                           
  7767                           ; BSR set to: 15
  7768                           ;PIC18F27J53-killifish_light02.c: 104: CCPTMRS0bits.C3TSEL = 0;
  7769  011C8A  0E3F               	movlw	-193
  7770  011C8C  010F               	movlb	15	; () banked
  7771  011C8E  1752               	andwf	82,f,b	;volatile
  7772                           
  7773                           ; BSR set to: 15
  7774                           ;PIC18F27J53-killifish_light02.c: 105: CCPR3Lbits.CCPR3L = 0;
  7775  011C90  0E00               	movlw	0
  7776  011C92  010F               	movlb	15	; () banked
  7777  011C94  6F16               	movwf	22,b	;volatile
  7778                           
  7779                           ; BSR set to: 15
  7780                           ;PIC18F27J53-killifish_light02.c: 106: CCP3CONbits.DC3B = 0;
  7781  011C96  0ECF               	movlw	-49
  7782  011C98  010F               	movlb	15	; () banked
  7783  011C9A  1715               	andwf	21,f,b	;volatile
  7784                           
  7785                           ; BSR set to: 15
  7786                           ;PIC18F27J53-killifish_light02.c: 108: CCP4CONbits.CCP4M = 12;
  7787  011C9C  010F               	movlb	15	; () banked
  7788  011C9E  5112               	movf	18,w,b	;volatile
  7789  011CA0  0BF0               	andlw	-16
  7790  011CA2  090C               	iorlw	12
  7791  011CA4  6F12               	movwf	18,b	;volatile
  7792                           
  7793                           ; BSR set to: 15
  7794                           ;PIC18F27J53-killifish_light02.c: 109: CCPTMRS1bits.C4TSEL = 0;
  7795  011CA6  0EFC               	movlw	-4
  7796  011CA8  010F               	movlb	15	; () banked
  7797  011CAA  1751               	andwf	81,f,b	;volatile
  7798                           
  7799                           ; BSR set to: 15
  7800                           ;PIC18F27J53-killifish_light02.c: 110: CCPR4Lbits.CCPR4L = 0;
  7801  011CAC  0E00               	movlw	0
  7802  011CAE  010F               	movlb	15	; () banked
  7803  011CB0  6F13               	movwf	19,b	;volatile
  7804                           
  7805                           ; BSR set to: 15
  7806                           ;PIC18F27J53-killifish_light02.c: 111: CCP4CONbits.DC4B = 0;
  7807  011CB2  0ECF               	movlw	-49
  7808  011CB4  010F               	movlb	15	; () banked
  7809  011CB6  1712               	andwf	18,f,b	;volatile
  7810                           
  7811                           ; BSR set to: 15
  7812                           ;PIC18F27J53-killifish_light02.c: 113: T2CONbits.T2OUTPS = 0;
  7813  011CB8  96CA               	bcf	4042,3,c	;volatile
  7814  011CBA  98CA               	bcf	4042,4,c	;volatile
  7815  011CBC  9ACA               	bcf	4042,5,c	;volatile
  7816  011CBE  9CCA               	bcf	4042,6,c	;volatile
  7817                           
  7818                           ; BSR set to: 15
  7819                           ;PIC18F27J53-killifish_light02.c: 114: T2CONbits.T2CKPS = 2;
  7820  011CC0  50CA               	movf	4042,w,c	;volatile
  7821  011CC2  0BFC               	andlw	-4
  7822  011CC4  0902               	iorlw	2
  7823  011CC6  6ECA               	movwf	4042,c	;volatile
  7824                           
  7825                           ; BSR set to: 15
  7826                           ;PIC18F27J53-killifish_light02.c: 115: PR2 = PR - 1;
  7827  011CC8  041F               	decf	PWM_init@PR,w,c
  7828  011CCA  6ECB               	movwf	4043,c	;volatile
  7829                           
  7830                           ; BSR set to: 15
  7831                           ;PIC18F27J53-killifish_light02.c: 116: T2CONbits.TMR2ON = 1;
  7832  011CCC  84CA               	bsf	4042,2,c	;volatile
  7833                           
  7834                           ; BSR set to: 15
  7835  011CCE  0012               	return		;funcret
  7836  011CD0                     __end_of_PWM_init:
  7837                           	opt stack 0
  7838                           tblptru	equ	0xFF8
  7839                           tblptrh	equ	0xFF7
  7840                           tblptrl	equ	0xFF6
  7841                           tablat	equ	0xFF5
  7842                           prodh	equ	0xFF4
  7843                           prodl	equ	0xFF3
  7844                           intcon	equ	0xFF2
  7845                           intcon2	equ	0xFF1
  7846                           postinc0	equ	0xFEE
  7847                           wreg	equ	0xFE8
  7848                           indf1	equ	0xFE7
  7849                           postinc1	equ	0xFE6
  7850                           postdec1	equ	0xFE5
  7851                           fsr1h	equ	0xFE2
  7852                           fsr1l	equ	0xFE1
  7853                           indf2	equ	0xFDF
  7854                           postinc2	equ	0xFDE
  7855                           postdec2	equ	0xFDD
  7856                           fsr2h	equ	0xFDA
  7857                           fsr2l	equ	0xFD9
  7858                           status	equ	0xFD8
  7859                           
  7860 ;; *************** function _OSC_init *****************
  7861 ;; Defined at:
  7862 ;;		line 119 in file "../My_header\My_header.h"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;		None
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;		None
  7867 ;; Return value:  Size  Location     Type
  7868 ;;		None               void
  7869 ;; Registers used:
  7870 ;;		wreg, status,2
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7880 ;;Total ram usage:        0 bytes
  7881 ;; Hardware stack levels used:    1
  7882 ;; Hardware stack levels required when called:    4
  7883 ;; This function calls:
  7884 ;;		Nothing
  7885 ;; This function is called by:
  7886 ;;		_main_init
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           	psect	text33
  7891  012934                     __ptext33:
  7892                           	opt stack 0
  7893  012934                     _OSC_init:
  7894                           	opt stack 25
  7895                           
  7896                           ;My_header\My_header.h: 120: OSCCONbits.IRCF = 7;
  7897                           
  7898                           ; BSR set to: 15
  7899                           ;incstack = 0
  7900  012934  88D3               	bsf	4051,4,c	;volatile
  7901  012936  8AD3               	bsf	4051,5,c	;volatile
  7902  012938  8CD3               	bsf	4051,6,c	;volatile
  7903                           
  7904                           ;My_header\My_header.h: 121: OSCTUNEbits.PLLEN = 1;
  7905  01293A  8C9B               	bsf	3995,6,c	;volatile
  7906                           
  7907                           ;My_header\My_header.h: 122: OSCCONbits.SCS = 0;
  7908  01293C  0EFC               	movlw	-4
  7909  01293E  16D3               	andwf	4051,f,c	;volatile
  7910  012940  0012               	return		;funcret
  7911  012942                     __end_of_OSC_init:
  7912                           	opt stack 0
  7913                           tblptru	equ	0xFF8
  7914                           tblptrh	equ	0xFF7
  7915                           tblptrl	equ	0xFF6
  7916                           tablat	equ	0xFF5
  7917                           prodh	equ	0xFF4
  7918                           prodl	equ	0xFF3
  7919                           intcon	equ	0xFF2
  7920                           intcon2	equ	0xFF1
  7921                           postinc0	equ	0xFEE
  7922                           wreg	equ	0xFE8
  7923                           indf1	equ	0xFE7
  7924                           postinc1	equ	0xFE6
  7925                           postdec1	equ	0xFE5
  7926                           fsr1h	equ	0xFE2
  7927                           fsr1l	equ	0xFE1
  7928                           indf2	equ	0xFDF
  7929                           postinc2	equ	0xFDE
  7930                           postdec2	equ	0xFDD
  7931                           fsr2h	equ	0xFDA
  7932                           fsr2l	equ	0xFD9
  7933                           status	equ	0xFD8
  7934                           
  7935 ;; *************** function _ADC_init *****************
  7936 ;; Defined at:
  7937 ;;		line 149 in file "../My_header\My_header.h"
  7938 ;; Parameters:    Size  Location     Type
  7939 ;;  p_ref           1    wreg     unsigned char 
  7940 ;; Auto vars:     Size  Location     Type
  7941 ;;  p_ref           1   30[COMRAM] unsigned char 
  7942 ;; Return value:  Size  Location     Type
  7943 ;;		None               void
  7944 ;; Registers used:
  7945 ;;		wreg, status,2
  7946 ;; Tracked objects:
  7947 ;;		On entry : 0/0
  7948 ;;		On exit  : 0/0
  7949 ;;		Unchanged: 0/0
  7950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7952 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7954 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7955 ;;Total ram usage:        1 bytes
  7956 ;; Hardware stack levels used:    1
  7957 ;; Hardware stack levels required when called:    4
  7958 ;; This function calls:
  7959 ;;		Nothing
  7960 ;; This function is called by:
  7961 ;;		_main_init
  7962 ;; This function uses a non-reentrant model
  7963 ;;
  7964                           
  7965                           	psect	text34
  7966  0128E6                     __ptext34:
  7967                           	opt stack 0
  7968  0128E6                     _ADC_init:
  7969                           	opt stack 25
  7970                           
  7971                           ;incstack = 0
  7972                           ;ADC_init@p_ref stored from wreg
  7973  0128E6  6E1F               	movwf	ADC_init@p_ref,c
  7974                           
  7975                           ;My_header\My_header.h: 150: ADCON0bits.VCFG1 = 0;
  7976  0128E8  9EC2               	bcf	4034,7,c	;volatile
  7977                           
  7978                           ;My_header\My_header.h: 151: ADCON0bits.VCFG0 = p_ref;
  7979  0128EA  B01F               	btfsc	ADC_init@p_ref,0,c
  7980  0128EC  D002               	bra	u4745
  7981  0128EE  9CC2               	bcf	4034,6,c	;volatile
  7982  0128F0  D001               	bra	u4746
  7983  0128F2                     u4745:
  7984  0128F2  8CC2               	bsf	4034,6,c	;volatile
  7985  0128F4                     u4746:
  7986                           
  7987                           ;My_header\My_header.h: 153: ADCON1bits.ADFM = 1;
  7988  0128F4  8EC1               	bsf	4033,7,c	;volatile
  7989                           
  7990                           ;My_header\My_header.h: 154: ADCON1bits.ADCAL = 0;
  7991  0128F6  9CC1               	bcf	4033,6,c	;volatile
  7992                           
  7993                           ;My_header\My_header.h: 155: ADCON1bits.ADCS = 6;
  7994  0128F8  50C1               	movf	4033,w,c	;volatile
  7995  0128FA  0BF8               	andlw	-8
  7996  0128FC  0906               	iorlw	6
  7997  0128FE  6EC1               	movwf	4033,c	;volatile
  7998  012900  0012               	return		;funcret
  7999  012902                     __end_of_ADC_init:
  8000                           	opt stack 0
  8001                           tblptru	equ	0xFF8
  8002                           tblptrh	equ	0xFF7
  8003                           tblptrl	equ	0xFF6
  8004                           tablat	equ	0xFF5
  8005                           prodh	equ	0xFF4
  8006                           prodl	equ	0xFF3
  8007                           intcon	equ	0xFF2
  8008                           intcon2	equ	0xFF1
  8009                           postinc0	equ	0xFEE
  8010                           wreg	equ	0xFE8
  8011                           indf1	equ	0xFE7
  8012                           postinc1	equ	0xFE6
  8013                           postdec1	equ	0xFE5
  8014                           fsr1h	equ	0xFE2
  8015                           fsr1l	equ	0xFE1
  8016                           indf2	equ	0xFDF
  8017                           postinc2	equ	0xFDE
  8018                           postdec2	equ	0xFDD
  8019                           fsr2h	equ	0xFDA
  8020                           fsr2l	equ	0xFD9
  8021                           status	equ	0xFD8
  8022                           
  8023 ;; *************** function ___llmod *****************
  8024 ;; Defined at:
  8025 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;  dividend        4    0[BANK0 ] unsigned long 
  8028 ;;  divisor         4    4[BANK0 ] unsigned long 
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;  counter         1   30[COMRAM] unsigned char 
  8031 ;; Return value:  Size  Location     Type
  8032 ;;                  4    0[BANK0 ] unsigned long 
  8033 ;; Registers used:
  8034 ;;		wreg, status,2, status,0
  8035 ;; Tracked objects:
  8036 ;;		On entry : 0/0
  8037 ;;		On exit  : 0/0
  8038 ;;		Unchanged: 0/0
  8039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8040 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8041 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8043 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8044 ;;Total ram usage:        9 bytes
  8045 ;; Hardware stack levels used:    1
  8046 ;; Hardware stack levels required when called:    4
  8047 ;; This function calls:
  8048 ;;		Nothing
  8049 ;; This function is called by:
  8050 ;;		_main
  8051 ;;		_my_utoa32
  8052 ;; This function uses a non-reentrant model
  8053 ;;
  8054                           
  8055                           	psect	text35
  8056  011F7E                     __ptext35:
  8057                           	opt stack 0
  8058  011F7E                     ___llmod:
  8059                           	opt stack 26
  8060                           
  8061                           ;incstack = 0
  8062  011F7E  0100               	movlb	0	; () banked
  8063  011F80  5164               	movf	___llmod@divisor& (0+255),w,b
  8064  011F82  0100               	movlb	0	; () banked
  8065  011F84  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  8066  011F86  0100               	movlb	0	; () banked
  8067  011F88  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  8068  011F8A  0100               	movlb	0	; () banked
  8069  011F8C  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  8070  011F8E  B4D8               	btfsc	status,2,c
  8071  011F90  D03C               	goto	l1092
  8072                           
  8073                           ; BSR set to: 0
  8074  011F92  0E01               	movlw	1
  8075  011F94  6E1F               	movwf	___llmod@counter,c
  8076  011F96  D008               	goto	l5050
  8077  011F98                     l5048:
  8078                           
  8079                           ; BSR set to: 0
  8080  011F98  0100               	movlb	0	; () banked
  8081  011F9A  90D8               	bcf	status,0,c
  8082  011F9C  3764               	rlcf	___llmod@divisor& (0+255),f,b
  8083  011F9E  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  8084  011FA0  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  8085  011FA2  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  8086  011FA4  2A1F               	incf	___llmod@counter,f,c
  8087  011FA6  D000               	goto	l5050
  8088  011FA8                     l5050:
  8089                           
  8090                           ; BSR set to: 0
  8091  011FA8  0100               	movlb	0	; () banked
  8092  011FAA  BF67               	btfsc	(___llmod@divisor+3)& (0+255),7,b
  8093  011FAC  D002               	goto	l5052
  8094  011FAE  D7F4               	goto	l5048
  8095                           
  8096                           ; BSR set to: 0
  8097  011FB0  D000               	goto	l5052
  8098  011FB2                     l5052:
  8099                           
  8100                           ; BSR set to: 0
  8101  011FB2  0100               	movlb	0	; () banked
  8102  011FB4  5164               	movf	___llmod@divisor& (0+255),w,b
  8103  011FB6  0100               	movlb	0	; () banked
  8104  011FB8  5D60               	subwf	___llmod@dividend& (0+255),w,b
  8105  011FBA  0100               	movlb	0	; () banked
  8106  011FBC  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  8107  011FBE  0100               	movlb	0	; () banked
  8108  011FC0  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  8109  011FC2  0100               	movlb	0	; () banked
  8110  011FC4  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  8111  011FC6  0100               	movlb	0	; () banked
  8112  011FC8  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  8113  011FCA  0100               	movlb	0	; () banked
  8114  011FCC  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  8115  011FCE  0100               	movlb	0	; () banked
  8116  011FD0  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  8117  011FD2  A0D8               	btfss	status,0,c
  8118  011FD4  D011               	goto	l5056
  8119                           
  8120                           ; BSR set to: 0
  8121  011FD6  0100               	movlb	0	; () banked
  8122  011FD8  5164               	movf	___llmod@divisor& (0+255),w,b
  8123  011FDA  0100               	movlb	0	; () banked
  8124  011FDC  5F60               	subwf	___llmod@dividend& (0+255),f,b
  8125  011FDE  0100               	movlb	0	; () banked
  8126  011FE0  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  8127  011FE2  0100               	movlb	0	; () banked
  8128  011FE4  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  8129  011FE6  0100               	movlb	0	; () banked
  8130  011FE8  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  8131  011FEA  0100               	movlb	0	; () banked
  8132  011FEC  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  8133  011FEE  0100               	movlb	0	; () banked
  8134  011FF0  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  8135  011FF2  0100               	movlb	0	; () banked
  8136  011FF4  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  8137  011FF6  D000               	goto	l5056
  8138  011FF8                     l5056:
  8139                           
  8140                           ; BSR set to: 0
  8141  011FF8  0100               	movlb	0	; () banked
  8142  011FFA  90D8               	bcf	status,0,c
  8143  011FFC  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  8144  011FFE  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  8145  012000  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  8146  012002  3364               	rrcf	___llmod@divisor& (0+255),f,b
  8147                           
  8148                           ; BSR set to: 0
  8149  012004  2E1F               	decfsz	___llmod@counter,f,c
  8150  012006  D7D5               	goto	l5052
  8151  012008  D000               	goto	l1092
  8152  01200A                     l1092:
  8153                           
  8154                           ; BSR set to: 0
  8155  01200A  C060  F060         	movff	___llmod@dividend,?___llmod
  8156  01200E  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  8157  012012  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  8158  012016  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  8159                           
  8160                           ; BSR set to: 0
  8161  01201A  0012               	return		;funcret
  8162  01201C                     __end_of___llmod:
  8163                           	opt stack 0
  8164                           tblptru	equ	0xFF8
  8165                           tblptrh	equ	0xFF7
  8166                           tblptrl	equ	0xFF6
  8167                           tablat	equ	0xFF5
  8168                           prodh	equ	0xFF4
  8169                           prodl	equ	0xFF3
  8170                           intcon	equ	0xFF2
  8171                           intcon2	equ	0xFF1
  8172                           postinc0	equ	0xFEE
  8173                           wreg	equ	0xFE8
  8174                           indf1	equ	0xFE7
  8175                           postinc1	equ	0xFE6
  8176                           postdec1	equ	0xFE5
  8177                           fsr1h	equ	0xFE2
  8178                           fsr1l	equ	0xFE1
  8179                           indf2	equ	0xFDF
  8180                           postinc2	equ	0xFDE
  8181                           postdec2	equ	0xFDD
  8182                           fsr2h	equ	0xFDA
  8183                           fsr2l	equ	0xFD9
  8184                           status	equ	0xFD8
  8185                           
  8186 ;; *************** function _RTCC_loop *****************
  8187 ;; Defined at:
  8188 ;;		line 387 in file "../My_header\My_RTCC.h"
  8189 ;; Parameters:    Size  Location     Type
  8190 ;;		None
  8191 ;; Auto vars:     Size  Location     Type
  8192 ;;  GIE_cache       1   30[COMRAM] unsigned char 
  8193 ;; Return value:  Size  Location     Type
  8194 ;;		None               void
  8195 ;; Registers used:
  8196 ;;		wreg, status,2
  8197 ;; Tracked objects:
  8198 ;;		On entry : 0/0
  8199 ;;		On exit  : 0/0
  8200 ;;		Unchanged: 0/0
  8201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8203 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8205 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8206 ;;Total ram usage:        1 bytes
  8207 ;; Hardware stack levels used:    1
  8208 ;; Hardware stack levels required when called:    4
  8209 ;; This function calls:
  8210 ;;		Nothing
  8211 ;; This function is called by:
  8212 ;;		_main
  8213 ;; This function uses a non-reentrant model
  8214 ;;
  8215                           
  8216                           	psect	text36
  8217  0126C4                     __ptext36:
  8218                           	opt stack 0
  8219  0126C4                     _RTCC_loop:
  8220                           	opt stack 26
  8221                           
  8222                           ;My_header\My_RTCC.h: 388: uint8_t GIE_cache = INTCONbits.GIE;
  8223                           
  8224                           ; BSR set to: 0
  8225                           ;incstack = 0
  8226  0126C4  0E00               	movlw	0
  8227  0126C6  BEF2               	btfsc	intcon,7,c	;volatile
  8228  0126C8  0E01               	movlw	1
  8229  0126CA  6E1F               	movwf	RTCC_loop@GIE_cache,c
  8230                           
  8231                           ;My_header\My_RTCC.h: 389: INTCONbits.GIE = 0;
  8232  0126CC  9EF2               	bcf	intcon,7,c	;volatile
  8233                           
  8234                           ;My_header\My_RTCC.h: 390: static uint8_t prev_halfsec;
  8235                           ;My_header\My_RTCC.h: 391: while (RTCCFGbits.RTCSYNC);
  8236  0126CE  D000               	goto	l418
  8237  0126D0                     l418:
  8238  0126D0  010F               	movlb	15	; () banked
  8239  0126D2  B93F               	btfsc	63,4,b	;volatile
  8240  0126D4  D7FD               	goto	l418
  8241                           
  8242                           ; BSR set to: 15
  8243                           ;My_header\My_RTCC.h: 392: if (prev_halfsec != RTCCFGbits.HALFSEC) {
  8244                           
  8245                           ; BSR set to: 15
  8246  0126D6  010F               	movlb	15	; () banked
  8247  0126D8  A73F               	btfss	63,3,b	;volatile
  8248  0126DA  D002               	goto	u5420
  8249  0126DC  0E01               	movlw	1
  8250  0126DE  D001               	goto	u5426
  8251  0126E0                     u5420:
  8252  0126E0  0E00               	movlw	0
  8253  0126E2                     u5426:
  8254  0126E2  1827               	xorwf	RTCC_loop@prev_halfsec,w,c
  8255  0126E4  B4D8               	btfsc	status,2,c
  8256  0126E6  D00C               	goto	l4938
  8257                           
  8258                           ; BSR set to: 15
  8259                           ;My_header\My_RTCC.h: 393: prev_halfsec = RTCCFGbits.HALFSEC;
  8260  0126E8  0E00               	movlw	0
  8261  0126EA  B73F               	btfsc	63,3,b	;volatile
  8262  0126EC  0E01               	movlw	1
  8263  0126EE  6E27               	movwf	RTCC_loop@prev_halfsec,c
  8264                           
  8265                           ; BSR set to: 15
  8266                           ;My_header\My_RTCC.h: 394: halfsec = prev_halfsec;
  8267  0126F0  C027  F02B         	movff	RTCC_loop@prev_halfsec,_halfsec
  8268                           
  8269                           ; BSR set to: 15
  8270                           ;My_header\My_RTCC.h: 395: colon = halfsec;
  8271  0126F4  C02B  F028         	movff	_halfsec,_colon
  8272                           
  8273                           ; BSR set to: 15
  8274                           ;My_header\My_RTCC.h: 396: time_change_flag = 1;
  8275  0126F8  0E01               	movlw	1
  8276  0126FA  0101               	movlb	1	; () banked
  8277  0126FC  6FC9               	movwf	_time_change_flag& (0+255),b
  8278  0126FE  D000               	goto	l4938
  8279  012700                     l4938:
  8280                           
  8281                           ;My_header\My_RTCC.h: 397: }
  8282                           ;My_header\My_RTCC.h: 398: INTCONbits.GIE = GIE_cache;
  8283  012700  B01F               	btfsc	RTCC_loop@GIE_cache,0,c
  8284  012702  D002               	bra	u5445
  8285  012704  9EF2               	bcf	intcon,7,c	;volatile
  8286  012706  D001               	bra	u5446
  8287  012708                     u5445:
  8288  012708  8EF2               	bsf	intcon,7,c	;volatile
  8289  01270A                     u5446:
  8290  01270A  0012               	return		;funcret
  8291  01270C                     __end_of_RTCC_loop:
  8292                           	opt stack 0
  8293                           tblptru	equ	0xFF8
  8294                           tblptrh	equ	0xFF7
  8295                           tblptrl	equ	0xFF6
  8296                           tablat	equ	0xFF5
  8297                           prodh	equ	0xFF4
  8298                           prodl	equ	0xFF3
  8299                           intcon	equ	0xFF2
  8300                           intcon2	equ	0xFF1
  8301                           postinc0	equ	0xFEE
  8302                           wreg	equ	0xFE8
  8303                           indf1	equ	0xFE7
  8304                           postinc1	equ	0xFE6
  8305                           postdec1	equ	0xFE5
  8306                           fsr1h	equ	0xFE2
  8307                           fsr1l	equ	0xFE1
  8308                           indf2	equ	0xFDF
  8309                           postinc2	equ	0xFDE
  8310                           postdec2	equ	0xFDD
  8311                           fsr2h	equ	0xFDA
  8312                           fsr2l	equ	0xFD9
  8313                           status	equ	0xFD8
  8314                           
  8315 ;; *************** function _RTCC_from_epoch *****************
  8316 ;; Defined at:
  8317 ;;		line 242 in file "../My_header\My_RTCC.h"
  8318 ;; Parameters:    Size  Location     Type
  8319 ;;  ct              2   56[BANK0 ] PTR struct .
  8320 ;;		 -> caltime_now(7), 
  8321 ;;  ep              2   58[BANK0 ] PTR unsigned long 
  8322 ;;		 -> epoch_now(4), 
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;		None
  8325 ;; Return value:  Size  Location     Type
  8326 ;;		None               void
  8327 ;; Registers used:
  8328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8329 ;; Tracked objects:
  8330 ;;		On entry : 0/0
  8331 ;;		On exit  : 0/0
  8332 ;;		Unchanged: 0/0
  8333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8334 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8337 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8338 ;;Total ram usage:        4 bytes
  8339 ;; Hardware stack levels used:    1
  8340 ;; Hardware stack levels required when called:    7
  8341 ;; This function calls:
  8342 ;;		_caltime_to_RTCC
  8343 ;;		_epoch_to_caltime
  8344 ;; This function is called by:
  8345 ;;		_main
  8346 ;;		_RTCC_adjust_time_inc
  8347 ;;		_RTCC_adjust_time_dec
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           	psect	text37
  8352  012884                     __ptext37:
  8353                           	opt stack 0
  8354  012884                     _RTCC_from_epoch:
  8355                           	opt stack 23
  8356                           
  8357                           ;My_header\My_RTCC.h: 243: epoch_to_caltime(ct, ep);
  8358                           
  8359                           ;incstack = 0
  8360  012884  C098  F088         	movff	RTCC_from_epoch@ct,epoch_to_caltime@ct
  8361  012888  C099  F089         	movff	RTCC_from_epoch@ct+1,epoch_to_caltime@ct+1
  8362  01288C  C09A  F08A         	movff	RTCC_from_epoch@ep,epoch_to_caltime@ep
  8363  012890  C09B  F08B         	movff	RTCC_from_epoch@ep+1,epoch_to_caltime@ep+1
  8364  012894  EC56  F088         	call	_epoch_to_caltime	;wreg free
  8365                           
  8366                           ;My_header\My_RTCC.h: 244: caltime_to_RTCC(ct);
  8367  012898  C098  F064         	movff	RTCC_from_epoch@ct,caltime_to_RTCC@ct
  8368  01289C  C099  F065         	movff	RTCC_from_epoch@ct+1,caltime_to_RTCC@ct+1
  8369  0128A0  EC60  F08B         	call	_caltime_to_RTCC	;wreg free
  8370  0128A4  0012               	return		;funcret
  8371  0128A6                     __end_of_RTCC_from_epoch:
  8372                           	opt stack 0
  8373                           tblptru	equ	0xFF8
  8374                           tblptrh	equ	0xFF7
  8375                           tblptrl	equ	0xFF6
  8376                           tablat	equ	0xFF5
  8377                           prodh	equ	0xFF4
  8378                           prodl	equ	0xFF3
  8379                           intcon	equ	0xFF2
  8380                           intcon2	equ	0xFF1
  8381                           postinc0	equ	0xFEE
  8382                           wreg	equ	0xFE8
  8383                           indf1	equ	0xFE7
  8384                           postinc1	equ	0xFE6
  8385                           postdec1	equ	0xFE5
  8386                           fsr1h	equ	0xFE2
  8387                           fsr1l	equ	0xFE1
  8388                           indf2	equ	0xFDF
  8389                           postinc2	equ	0xFDE
  8390                           postdec2	equ	0xFDD
  8391                           fsr2h	equ	0xFDA
  8392                           fsr2l	equ	0xFD9
  8393                           status	equ	0xFD8
  8394                           
  8395 ;; *************** function _epoch_to_caltime *****************
  8396 ;; Defined at:
  8397 ;;		line 157 in file "../My_header\My_RTCC.h"
  8398 ;; Parameters:    Size  Location     Type
  8399 ;;  ct              2   40[BANK0 ] PTR struct .
  8400 ;;		 -> caltime_now(7), 
  8401 ;;  ep              2   42[BANK0 ] PTR unsigned long 
  8402 ;;		 -> epoch_now(4), 
  8403 ;; Auto vars:     Size  Location     Type
  8404 ;;  num             4   52[BANK0 ] unsigned long 
  8405 ;;  day             2   48[BANK0 ] unsigned int 
  8406 ;;  day_since_ep    2   46[BANK0 ] unsigned int 
  8407 ;;  month           1   51[BANK0 ] unsigned char 
  8408 ;;  year            1   50[BANK0 ] unsigned char 
  8409 ;; Return value:  Size  Location     Type
  8410 ;;		None               void
  8411 ;; Registers used:
  8412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8413 ;; Tracked objects:
  8414 ;;		On entry : 0/0
  8415 ;;		On exit  : 0/0
  8416 ;;		Unchanged: 0/0
  8417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8418 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8419 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8420 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8421 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8422 ;;Total ram usage:       16 bytes
  8423 ;; Hardware stack levels used:    1
  8424 ;; Hardware stack levels required when called:    6
  8425 ;; This function calls:
  8426 ;;		_get_quot_rem
  8427 ;;		_month_length
  8428 ;; This function is called by:
  8429 ;;		_RTCC_from_caltime
  8430 ;;		_RTCC_from_epoch
  8431 ;; This function uses a non-reentrant model
  8432 ;;
  8433                           
  8434                           	psect	text38
  8435  0110AC                     __ptext38:
  8436                           	opt stack 0
  8437  0110AC                     _epoch_to_caltime:
  8438                           	opt stack 20
  8439                           
  8440                           ;My_header\My_RTCC.h: 160: static uint16_t day_cache = 0;
  8441                           ;My_header\My_RTCC.h: 161: static uint8_t month_cache = 1;
  8442                           ;My_header\My_RTCC.h: 162: static uint8_t year_cache = 0;
  8443                           ;My_header\My_RTCC.h: 163: uint16_t day_since_epoch;
  8444                           ;My_header\My_RTCC.h: 164: uint16_t day;
  8445                           ;My_header\My_RTCC.h: 165: uint8_t year = 0;
  8446                           
  8447                           ;incstack = 0
  8448  0110AC  0E00               	movlw	0
  8449  0110AE  0100               	movlb	0	; () banked
  8450  0110B0  6F92               	movwf	epoch_to_caltime@year& (0+255),b
  8451                           
  8452                           ;My_header\My_RTCC.h: 166: uint8_t month = 1;
  8453  0110B2  0E01               	movlw	1
  8454  0110B4  0100               	movlb	0	; () banked
  8455  0110B6  6F93               	movwf	epoch_to_caltime@month& (0+255),b
  8456                           
  8457                           ; BSR set to: 0
  8458                           ;My_header\My_RTCC.h: 167: epoch_t num;
  8459                           ;My_header\My_RTCC.h: 169: num = *ep;
  8460  0110B8  C08A  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  8461  0110BC  C08B  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  8462  0110C0  CFDE F094          	movff	postinc2,epoch_to_caltime@num
  8463  0110C4  CFDE F095          	movff	postinc2,epoch_to_caltime@num+1
  8464  0110C8  CFDE F096          	movff	postinc2,epoch_to_caltime@num+2
  8465  0110CC  CFDE F097          	movff	postinc2,epoch_to_caltime@num+3
  8466                           
  8467                           ; BSR set to: 0
  8468                           ;My_header\My_RTCC.h: 170: ct->ss = get_quot_rem(&num, 60);
  8469  0110D0  0E94               	movlw	low epoch_to_caltime@num
  8470  0110D2  0100               	movlb	0	; () banked
  8471  0110D4  6F80               	movwf	get_quot_rem@quot& (0+255),b
  8472  0110D6  0E00               	movlw	high epoch_to_caltime@num
  8473  0110D8  0100               	movlb	0	; () banked
  8474  0110DA  6F81               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8475  0110DC  0E3C               	movlw	60
  8476  0110DE  0100               	movlb	0	; () banked
  8477  0110E0  6F82               	movwf	get_quot_rem@div& (0+255),b
  8478  0110E2  ECF5  F08A         	call	_get_quot_rem	;wreg free
  8479  0110E6  0100               	movlb	0	; () banked
  8480  0110E8  5180               	movf	?_get_quot_rem& (0+255),w,b
  8481  0110EA  C088  FFD9         	movff	epoch_to_caltime@ct,fsr2l
  8482  0110EE  C089  FFDA         	movff	epoch_to_caltime@ct+1,fsr2h
  8483  0110F2  6EDF               	movwf	indf2,c
  8484                           
  8485                           ; BSR set to: 0
  8486                           ;My_header\My_RTCC.h: 171: ct->mm = get_quot_rem(&num, 60);
  8487  0110F4  0E94               	movlw	low epoch_to_caltime@num
  8488  0110F6  0100               	movlb	0	; () banked
  8489  0110F8  6F80               	movwf	get_quot_rem@quot& (0+255),b
  8490  0110FA  0E00               	movlw	high epoch_to_caltime@num
  8491  0110FC  0100               	movlb	0	; () banked
  8492  0110FE  6F81               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8493  011100  0E3C               	movlw	60
  8494  011102  0100               	movlb	0	; () banked
  8495  011104  6F82               	movwf	get_quot_rem@div& (0+255),b
  8496  011106  ECF5  F08A         	call	_get_quot_rem	;wreg free
  8497  01110A  0100               	movlb	0	; () banked
  8498  01110C  EE20 F001          	lfsr	2,1
  8499  011110  5188               	movf	epoch_to_caltime@ct& (0+255),w,b
  8500  011112  26D9               	addwf	fsr2l,f,c
  8501  011114  5189               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8502  011116  22DA               	addwfc	fsr2h,f,c
  8503  011118  0100               	movlb	0	; () banked
  8504  01111A  C080  FFDF         	movff	?_get_quot_rem,indf2
  8505                           
  8506                           ; BSR set to: 0
  8507                           ;My_header\My_RTCC.h: 172: ct->hh = get_quot_rem(&num, 24);
  8508  01111E  0E94               	movlw	low epoch_to_caltime@num
  8509  011120  0100               	movlb	0	; () banked
  8510  011122  6F80               	movwf	get_quot_rem@quot& (0+255),b
  8511  011124  0E00               	movlw	high epoch_to_caltime@num
  8512  011126  0100               	movlb	0	; () banked
  8513  011128  6F81               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8514  01112A  0E18               	movlw	24
  8515  01112C  0100               	movlb	0	; () banked
  8516  01112E  6F82               	movwf	get_quot_rem@div& (0+255),b
  8517  011130  ECF5  F08A         	call	_get_quot_rem	;wreg free
  8518  011134  0100               	movlb	0	; () banked
  8519  011136  EE20 F002          	lfsr	2,2
  8520  01113A  5188               	movf	epoch_to_caltime@ct& (0+255),w,b
  8521  01113C  26D9               	addwf	fsr2l,f,c
  8522  01113E  5189               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8523  011140  22DA               	addwfc	fsr2h,f,c
  8524  011142  0100               	movlb	0	; () banked
  8525  011144  C080  FFDF         	movff	?_get_quot_rem,indf2
  8526                           
  8527                           ; BSR set to: 0
  8528                           ;My_header\My_RTCC.h: 173: day = num;
  8529  011148  C094  F090         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  8530  01114C  C095  F091         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  8531                           
  8532                           ; BSR set to: 0
  8533                           ;My_header\My_RTCC.h: 174: day_since_epoch = day;
  8534  011150  C090  F08E         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  8535  011154  C091  F08F         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  8536                           
  8537                           ; BSR set to: 0
  8538                           ;My_header\My_RTCC.h: 176: num += 6;
  8539  011158  0E06               	movlw	6
  8540  01115A  0100               	movlb	0	; () banked
  8541  01115C  2794               	addwf	epoch_to_caltime@num& (0+255),f,b
  8542  01115E  0E00               	movlw	0
  8543  011160  2395               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  8544  011162  2396               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  8545  011164  2397               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  8546                           
  8547                           ; BSR set to: 0
  8548                           ;My_header\My_RTCC.h: 177: ct->EE = get_quot_rem(&num, 7);
  8549  011166  0E94               	movlw	low epoch_to_caltime@num
  8550  011168  0100               	movlb	0	; () banked
  8551  01116A  6F80               	movwf	get_quot_rem@quot& (0+255),b
  8552  01116C  0E00               	movlw	high epoch_to_caltime@num
  8553  01116E  0100               	movlb	0	; () banked
  8554  011170  6F81               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8555  011172  0E07               	movlw	7
  8556  011174  0100               	movlb	0	; () banked
  8557  011176  6F82               	movwf	get_quot_rem@div& (0+255),b
  8558  011178  ECF5  F08A         	call	_get_quot_rem	;wreg free
  8559  01117C  0100               	movlb	0	; () banked
  8560  01117E  EE20 F003          	lfsr	2,3
  8561  011182  5188               	movf	epoch_to_caltime@ct& (0+255),w,b
  8562  011184  26D9               	addwf	fsr2l,f,c
  8563  011186  5189               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8564  011188  22DA               	addwfc	fsr2h,f,c
  8565  01118A  0100               	movlb	0	; () banked
  8566  01118C  C080  FFDF         	movff	?_get_quot_rem,indf2
  8567                           
  8568                           ;My_header\My_RTCC.h: 186: while (day >= month_length(year, month)) {
  8569  011190  D041               	goto	l4298
  8570  011192                     l330:
  8571                           
  8572                           ; BSR set to: 0
  8573                           ;My_header\My_RTCC.h: 187: LATB2 = 1;
  8574  011192  848A               	bsf	3978,2,c	;volatile
  8575                           
  8576                           ; BSR set to: 0
  8577                           ;My_header\My_RTCC.h: 188: day = day - month_length(year, month);
  8578  011194  C093  F023         	movff	epoch_to_caltime@month,month_length@month
  8579  011198  0100               	movlb	0	; () banked
  8580  01119A  5192               	movf	epoch_to_caltime@year& (0+255),w,b
  8581  01119C  ECC9  F08B         	call	_month_length
  8582  0111A0  0100               	movlb	0	; () banked
  8583  0111A2  6F8C               	movwf	??_epoch_to_caltime& (0+255),b
  8584  0111A4  6B8D               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  8585  0111A6  0100               	movlb	0	; () banked
  8586  0111A8  1F8C               	comf	??_epoch_to_caltime& (0+255),f,b
  8587  0111AA  1F8D               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  8588  0111AC  4B8C               	infsnz	??_epoch_to_caltime& (0+255),f,b
  8589  0111AE  2B8D               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  8590  0111B0  0100               	movlb	0	; () banked
  8591  0111B2  5190               	movf	epoch_to_caltime@day& (0+255),w,b
  8592  0111B4  0100               	movlb	0	; () banked
  8593  0111B6  258C               	addwf	??_epoch_to_caltime& (0+255),w,b
  8594  0111B8  0100               	movlb	0	; () banked
  8595  0111BA  6F90               	movwf	epoch_to_caltime@day& (0+255),b
  8596  0111BC  0100               	movlb	0	; () banked
  8597  0111BE  5191               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  8598  0111C0  0100               	movlb	0	; () banked
  8599  0111C2  218D               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  8600  0111C4  0100               	movlb	0	; () banked
  8601  0111C6  6F91               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  8602                           
  8603                           ; BSR set to: 0
  8604                           ;My_header\My_RTCC.h: 189: if (month == 12) {
  8605  0111C8  0E0C               	movlw	12
  8606  0111CA  0100               	movlb	0	; () banked
  8607  0111CC  1993               	xorwf	epoch_to_caltime@month& (0+255),w,b
  8608  0111CE  A4D8               	btfss	status,2,c
  8609  0111D0  D019               	goto	l4292
  8610                           
  8611                           ; BSR set to: 0
  8612                           ;My_header\My_RTCC.h: 190: month = 1;
  8613  0111D2  0E01               	movlw	1
  8614  0111D4  0100               	movlb	0	; () banked
  8615  0111D6  6F93               	movwf	epoch_to_caltime@month& (0+255),b
  8616                           
  8617                           ; BSR set to: 0
  8618                           ;My_header\My_RTCC.h: 191: year++;
  8619  0111D8  0100               	movlb	0	; () banked
  8620  0111DA  2B92               	incf	epoch_to_caltime@year& (0+255),f,b
  8621                           
  8622                           ; BSR set to: 0
  8623                           ;My_header\My_RTCC.h: 193: if (year >= 100) {
  8624  0111DC  0E63               	movlw	99
  8625  0111DE  0100               	movlb	0	; () banked
  8626  0111E0  6592               	cpfsgt	epoch_to_caltime@year& (0+255),b
  8627  0111E2  D013               	goto	l4294
  8628                           
  8629                           ; BSR set to: 0
  8630                           ;My_header\My_RTCC.h: 194: *ep -= 3155760000;
  8631  0111E4  C08A  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  8632  0111E8  C08B  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  8633  0111EC  0E80               	movlw	128
  8634  0111EE  5EDE               	subwf	postinc2,f,c
  8635  0111F0  0E13               	movlw	19
  8636  0111F2  5ADE               	subwfb	postinc2,f,c
  8637  0111F4  0E19               	movlw	25
  8638  0111F6  5ADE               	subwfb	postinc2,f,c
  8639  0111F8  0EBC               	movlw	188
  8640  0111FA  5ADE               	subwfb	postinc2,f,c
  8641                           
  8642                           ; BSR set to: 0
  8643                           ;My_header\My_RTCC.h: 195: year = 0;
  8644  0111FC  0E00               	movlw	0
  8645  0111FE  0100               	movlb	0	; () banked
  8646  011200  6F92               	movwf	epoch_to_caltime@year& (0+255),b
  8647                           
  8648                           ; BSR set to: 0
  8649                           ;My_header\My_RTCC.h: 196: }
  8650                           ;My_header\My_RTCC.h: 197: } else {
  8651  011202  D003               	goto	l4294
  8652  011204                     l4292:
  8653                           
  8654                           ; BSR set to: 0
  8655                           ;My_header\My_RTCC.h: 198: month++;
  8656  011204  0100               	movlb	0	; () banked
  8657  011206  2B93               	incf	epoch_to_caltime@month& (0+255),f,b
  8658  011208  D000               	goto	l4294
  8659  01120A                     l4294:
  8660                           
  8661                           ; BSR set to: 0
  8662                           ;My_header\My_RTCC.h: 199: }
  8663                           ;My_header\My_RTCC.h: 200: month_cache = month;
  8664  01120A  C093  F0C2         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  8665                           
  8666                           ; BSR set to: 0
  8667                           ;My_header\My_RTCC.h: 201: year_cache = year;
  8668  01120E  C092  F0C1         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  8669  011212  D000               	goto	l4298
  8670  011214                     l4298:
  8671                           
  8672                           ; BSR set to: 0
  8673  011214  C093  F023         	movff	epoch_to_caltime@month,month_length@month
  8674  011218  0100               	movlb	0	; () banked
  8675  01121A  5192               	movf	epoch_to_caltime@year& (0+255),w,b
  8676  01121C  ECC9  F08B         	call	_month_length
  8677  011220  0100               	movlb	0	; () banked
  8678  011222  6F8C               	movwf	??_epoch_to_caltime& (0+255),b
  8679  011224  0100               	movlb	0	; () banked
  8680  011226  518C               	movf	??_epoch_to_caltime& (0+255),w,b
  8681  011228  0100               	movlb	0	; () banked
  8682  01122A  5D90               	subwf	epoch_to_caltime@day& (0+255),w,b
  8683  01122C  0E00               	movlw	0
  8684  01122E  5991               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  8685  011230  B0D8               	btfsc	status,0,c
  8686  011232  D7AF               	goto	l330
  8687                           
  8688                           ; BSR set to: 0
  8689                           ;My_header\My_RTCC.h: 202: }
  8690                           ;My_header\My_RTCC.h: 203: day_cache = day_since_epoch - day;
  8691                           
  8692                           ; BSR set to: 0
  8693  011234  C090  F08C         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  8694  011238  C091  F08D         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  8695  01123C  0100               	movlb	0	; () banked
  8696  01123E  1F8C               	comf	??_epoch_to_caltime& (0+255),f,b
  8697  011240  1F8D               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  8698  011242  4B8C               	infsnz	??_epoch_to_caltime& (0+255),f,b
  8699  011244  2B8D               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  8700  011246  0100               	movlb	0	; () banked
  8701  011248  518E               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  8702  01124A  0100               	movlb	0	; () banked
  8703  01124C  258C               	addwf	??_epoch_to_caltime& (0+255),w,b
  8704  01124E  0100               	movlb	0	; () banked
  8705  011250  6FBF               	movwf	epoch_to_caltime@day_cache& (0+255),b
  8706  011252  0100               	movlb	0	; () banked
  8707  011254  518F               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  8708  011256  0100               	movlb	0	; () banked
  8709  011258  218D               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  8710  01125A  0100               	movlb	0	; () banked
  8711  01125C  6FC0               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;My_header\My_RTCC.h: 204: day++;
  8715  01125E  0100               	movlb	0	; () banked
  8716  011260  4B90               	infsnz	epoch_to_caltime@day& (0+255),f,b
  8717  011262  2B91               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  8718                           
  8719                           ; BSR set to: 0
  8720                           ;My_header\My_RTCC.h: 206: ct->YY = year;
  8721  011264  0100               	movlb	0	; () banked
  8722  011266  EE20 F006          	lfsr	2,6
  8723  01126A  5188               	movf	epoch_to_caltime@ct& (0+255),w,b
  8724  01126C  26D9               	addwf	fsr2l,f,c
  8725  01126E  5189               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8726  011270  22DA               	addwfc	fsr2h,f,c
  8727  011272  C092  FFDF         	movff	epoch_to_caltime@year,indf2
  8728                           
  8729                           ; BSR set to: 0
  8730                           ;My_header\My_RTCC.h: 207: ct->MM = month;
  8731  011276  0100               	movlb	0	; () banked
  8732  011278  EE20 F005          	lfsr	2,5
  8733  01127C  5188               	movf	epoch_to_caltime@ct& (0+255),w,b
  8734  01127E  26D9               	addwf	fsr2l,f,c
  8735  011280  5189               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8736  011282  22DA               	addwfc	fsr2h,f,c
  8737  011284  C093  FFDF         	movff	epoch_to_caltime@month,indf2
  8738                           
  8739                           ; BSR set to: 0
  8740                           ;My_header\My_RTCC.h: 208: ct->DD = day;
  8741  011288  0100               	movlb	0	; () banked
  8742  01128A  EE20 F004          	lfsr	2,4
  8743  01128E  5188               	movf	epoch_to_caltime@ct& (0+255),w,b
  8744  011290  26D9               	addwf	fsr2l,f,c
  8745  011292  5189               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8746  011294  22DA               	addwfc	fsr2h,f,c
  8747  011296  C090  FFDF         	movff	epoch_to_caltime@day,indf2
  8748                           
  8749                           ; BSR set to: 0
  8750  01129A  0012               	return		;funcret
  8751  01129C                     __end_of_epoch_to_caltime:
  8752                           	opt stack 0
  8753                           tblptru	equ	0xFF8
  8754                           tblptrh	equ	0xFF7
  8755                           tblptrl	equ	0xFF6
  8756                           tablat	equ	0xFF5
  8757                           prodh	equ	0xFF4
  8758                           prodl	equ	0xFF3
  8759                           intcon	equ	0xFF2
  8760                           intcon2	equ	0xFF1
  8761                           postinc0	equ	0xFEE
  8762                           wreg	equ	0xFE8
  8763                           indf1	equ	0xFE7
  8764                           postinc1	equ	0xFE6
  8765                           postdec1	equ	0xFE5
  8766                           fsr1h	equ	0xFE2
  8767                           fsr1l	equ	0xFE1
  8768                           indf2	equ	0xFDF
  8769                           postinc2	equ	0xFDE
  8770                           postdec2	equ	0xFDD
  8771                           fsr2h	equ	0xFDA
  8772                           fsr2l	equ	0xFD9
  8773                           status	equ	0xFD8
  8774                           
  8775 ;; *************** function _month_length *****************
  8776 ;; Defined at:
  8777 ;;		line 87 in file "../My_header\My_RTCC.h"
  8778 ;; Parameters:    Size  Location     Type
  8779 ;;  year            1    wreg     unsigned char 
  8780 ;;  month           1   34[COMRAM] unsigned char 
  8781 ;; Auto vars:     Size  Location     Type
  8782 ;;  year            1    6[BANK0 ] unsigned char 
  8783 ;; Return value:  Size  Location     Type
  8784 ;;                  1    wreg      unsigned char 
  8785 ;; Registers used:
  8786 ;;		wreg, status,2, status,0, cstack
  8787 ;; Tracked objects:
  8788 ;;		On entry : 0/0
  8789 ;;		On exit  : 0/0
  8790 ;;		Unchanged: 0/0
  8791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8792 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8793 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8794 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8795 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8796 ;;Total ram usage:        6 bytes
  8797 ;; Hardware stack levels used:    1
  8798 ;; Hardware stack levels required when called:    5
  8799 ;; This function calls:
  8800 ;;		___awmod
  8801 ;; This function is called by:
  8802 ;;		_epoch_to_caltime
  8803 ;;		_caltime_to_epoch
  8804 ;;		_command_operation
  8805 ;;		_RTCC_adjust_time_inc
  8806 ;;		_RTCC_adjust_time_dec
  8807 ;; This function uses a non-reentrant model
  8808 ;;
  8809                           
  8810                           	psect	text39
  8811  011792                     __ptext39:
  8812                           	opt stack 0
  8813  011792                     _month_length:
  8814                           	opt stack 20
  8815                           
  8816                           ; BSR set to: 0
  8817                           ;incstack = 0
  8818                           ;month_length@year stored from wreg
  8819  011792  0100               	movlb	0	; () banked
  8820  011794  6F66               	movwf	month_length@year& (0+255),b
  8821                           
  8822                           ; BSR set to: 0
  8823                           ;My_header\My_RTCC.h: 88: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year %
      +                           400);
  8824  011796  0E02               	movlw	2
  8825  011798  1823               	xorwf	month_length@month,w,c
  8826  01179A  A4D8               	btfss	status,2,c
  8827  01179C  D036               	goto	l4036
  8828                           
  8829                           ; BSR set to: 0
  8830  01179E  C066  F01F         	movff	month_length@year,___awmod@dividend
  8831  0117A2  6A20               	clrf	___awmod@dividend+1,c
  8832  0117A4  0E00               	movlw	0
  8833  0117A6  6E22               	movwf	___awmod@divisor+1,c
  8834  0117A8  0E64               	movlw	100
  8835  0117AA  6E21               	movwf	___awmod@divisor,c
  8836  0117AC  ECA4  F090         	call	___awmod	;wreg free
  8837  0117B0  501F               	movf	?___awmod,w,c
  8838  0117B2  1020               	iorwf	?___awmod+1,w,c
  8839  0117B4  A4D8               	btfss	status,2,c
  8840  0117B6  D002               	goto	u4200
  8841  0117B8  0E01               	movlw	1
  8842  0117BA  D001               	goto	u4210
  8843  0117BC                     u4200:
  8844  0117BC  0E00               	movlw	0
  8845  0117BE                     u4210:
  8846  0117BE  0800               	sublw	0
  8847  0117C0  0100               	movlb	0	; () banked
  8848  0117C2  6F62               	movwf	??_month_length& (0+255),b
  8849  0117C4  C066  F01F         	movff	month_length@year,___awmod@dividend
  8850  0117C8  6A20               	clrf	___awmod@dividend+1,c
  8851  0117CA  0E01               	movlw	1
  8852  0117CC  6E22               	movwf	___awmod@divisor+1,c
  8853  0117CE  0E90               	movlw	144
  8854  0117D0  6E21               	movwf	___awmod@divisor,c
  8855  0117D2  ECA4  F090         	call	___awmod	;wreg free
  8856  0117D6  501F               	movf	?___awmod,w,c
  8857  0117D8  1020               	iorwf	?___awmod+1,w,c
  8858  0117DA  A4D8               	btfss	status,2,c
  8859  0117DC  D004               	goto	u4220
  8860  0117DE  0100               	movlb	0	; () banked
  8861  0117E0  6B63               	clrf	(??_month_length+1)& (0+255),b
  8862  0117E2  2B63               	incf	(??_month_length+1)& (0+255),f,b
  8863  0117E4  D002               	goto	u4238
  8864  0117E6                     u4220:
  8865  0117E6  0100               	movlb	0	; () banked
  8866  0117E8  6B63               	clrf	(??_month_length+1)& (0+255),b
  8867  0117EA                     u4238:
  8868  0117EA  C066  F064         	movff	month_length@year,??_month_length+2
  8869  0117EE  0E03               	movlw	3
  8870  0117F0  0100               	movlb	0	; () banked
  8871  0117F2  1764               	andwf	(??_month_length+2)& (0+255),f,b
  8872  0117F4  A4D8               	btfss	status,2,c
  8873  0117F6  D002               	goto	u4240
  8874  0117F8  0E01               	movlw	1
  8875  0117FA  D001               	goto	u4250
  8876  0117FC                     u4240:
  8877  0117FC  0E00               	movlw	0
  8878  0117FE                     u4250:
  8879  0117FE  0100               	movlb	0	; () banked
  8880  011800  2563               	addwf	(??_month_length+1)& (0+255),w,b
  8881  011802  0100               	movlb	0	; () banked
  8882  011804  2562               	addwf	??_month_length& (0+255),w,b
  8883  011806  0F1C               	addlw	28
  8884                           
  8885                           ; BSR set to: 0
  8886                           
  8887                           ; BSR set to: 0
  8888  011808  0012               	return	
  8889  01180A                     l4036:
  8890                           
  8891                           ; BSR set to: 0
  8892                           ;My_header\My_RTCC.h: 89: else return 31 - (((-(month & 1)^month)&13) == 4);
  8893  01180A  5023               	movf	month_length@month,w,c
  8894  01180C  0B01               	andlw	1
  8895  01180E  0100               	movlb	0	; () banked
  8896  011810  6F62               	movwf	??_month_length& (0+255),b
  8897  011812  6B63               	clrf	(??_month_length+1)& (0+255),b
  8898  011814  0100               	movlb	0	; () banked
  8899  011816  1F62               	comf	??_month_length& (0+255),f,b
  8900  011818  1F63               	comf	(??_month_length+1)& (0+255),f,b
  8901  01181A  4B62               	infsnz	??_month_length& (0+255),f,b
  8902  01181C  2B63               	incf	(??_month_length+1)& (0+255),f,b
  8903  01181E  5023               	movf	month_length@month,w,c
  8904  011820  0100               	movlb	0	; () banked
  8905  011822  6F64               	movwf	(??_month_length+2)& (0+255),b
  8906  011824  6B65               	clrf	(??_month_length+3)& (0+255),b
  8907  011826  0100               	movlb	0	; () banked
  8908  011828  5162               	movf	??_month_length& (0+255),w,b
  8909  01182A  0100               	movlb	0	; () banked
  8910  01182C  1B64               	xorwf	(??_month_length+2)& (0+255),f,b
  8911  01182E  0100               	movlb	0	; () banked
  8912  011830  5163               	movf	(??_month_length+1)& (0+255),w,b
  8913  011832  0100               	movlb	0	; () banked
  8914  011834  1B65               	xorwf	(??_month_length+3)& (0+255),f,b
  8915  011836  0E0D               	movlw	13
  8916  011838  0100               	movlb	0	; () banked
  8917  01183A  1764               	andwf	(??_month_length+2)& (0+255),f,b
  8918  01183C  0E00               	movlw	0
  8919  01183E  1765               	andwf	(??_month_length+3)& (0+255),f,b
  8920  011840  0E04               	movlw	4
  8921  011842  0100               	movlb	0	; () banked
  8922  011844  1964               	xorwf	(??_month_length+2)& (0+255),w,b
  8923  011846  0100               	movlb	0	; () banked
  8924  011848  1165               	iorwf	(??_month_length+3)& (0+255),w,b
  8925  01184A  A4D8               	btfss	status,2,c
  8926  01184C  D002               	goto	u4260
  8927  01184E  0E01               	movlw	1
  8928  011850  D001               	goto	u4270
  8929  011852                     u4260:
  8930  011852  0E00               	movlw	0
  8931  011854                     u4270:
  8932  011854  0800               	sublw	0
  8933  011856  0F1F               	addlw	31
  8934                           
  8935                           ; BSR set to: 0
  8936  011858  0012               	return	
  8937                           
  8938                           ; BSR set to: 0
  8939                           
  8940                           ; BSR set to: 0
  8941  01185A  0012               	return		;funcret
  8942  01185C                     __end_of_month_length:
  8943                           	opt stack 0
  8944                           tblptru	equ	0xFF8
  8945                           tblptrh	equ	0xFF7
  8946                           tblptrl	equ	0xFF6
  8947                           tablat	equ	0xFF5
  8948                           prodh	equ	0xFF4
  8949                           prodl	equ	0xFF3
  8950                           intcon	equ	0xFF2
  8951                           intcon2	equ	0xFF1
  8952                           postinc0	equ	0xFEE
  8953                           wreg	equ	0xFE8
  8954                           indf1	equ	0xFE7
  8955                           postinc1	equ	0xFE6
  8956                           postdec1	equ	0xFE5
  8957                           fsr1h	equ	0xFE2
  8958                           fsr1l	equ	0xFE1
  8959                           indf2	equ	0xFDF
  8960                           postinc2	equ	0xFDE
  8961                           postdec2	equ	0xFDD
  8962                           fsr2h	equ	0xFDA
  8963                           fsr2l	equ	0xFD9
  8964                           status	equ	0xFD8
  8965                           
  8966 ;; *************** function ___awmod *****************
  8967 ;; Defined at:
  8968 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  8969 ;; Parameters:    Size  Location     Type
  8970 ;;  dividend        2   30[COMRAM] int 
  8971 ;;  divisor         2   32[COMRAM] int 
  8972 ;; Auto vars:     Size  Location     Type
  8973 ;;  sign            1    1[BANK0 ] unsigned char 
  8974 ;;  counter         1    0[BANK0 ] unsigned char 
  8975 ;; Return value:  Size  Location     Type
  8976 ;;                  2   30[COMRAM] int 
  8977 ;; Registers used:
  8978 ;;		wreg, status,2, status,0
  8979 ;; Tracked objects:
  8980 ;;		On entry : 0/0
  8981 ;;		On exit  : 0/0
  8982 ;;		Unchanged: 0/0
  8983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8984 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8985 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8987 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8988 ;;Total ram usage:        6 bytes
  8989 ;; Hardware stack levels used:    1
  8990 ;; Hardware stack levels required when called:    4
  8991 ;; This function calls:
  8992 ;;		Nothing
  8993 ;; This function is called by:
  8994 ;;		_month_length
  8995 ;; This function uses a non-reentrant model
  8996 ;;
  8997                           
  8998                           	psect	text40
  8999  012148                     __ptext40:
  9000                           	opt stack 0
  9001  012148                     ___awmod:
  9002                           	opt stack 20
  9003                           
  9004                           ; BSR set to: 0
  9005                           ;incstack = 0
  9006  012148  0E00               	movlw	0
  9007  01214A  0100               	movlb	0	; () banked
  9008  01214C  6F61               	movwf	___awmod@sign& (0+255),b
  9009                           
  9010                           ; BSR set to: 0
  9011  01214E  AE20               	btfss	___awmod@dividend+1,7,c
  9012  012150  D008               	goto	l3986
  9013                           
  9014                           ; BSR set to: 0
  9015  012152  6C1F               	negf	___awmod@dividend,c
  9016  012154  1E20               	comf	___awmod@dividend+1,f,c
  9017  012156  B0D8               	btfsc	status,0,c
  9018  012158  2A20               	incf	___awmod@dividend+1,f,c
  9019                           
  9020                           ; BSR set to: 0
  9021  01215A  0E01               	movlw	1
  9022  01215C  0100               	movlb	0	; () banked
  9023  01215E  6F61               	movwf	___awmod@sign& (0+255),b
  9024  012160  D000               	goto	l3986
  9025  012162                     l3986:
  9026                           
  9027                           ; BSR set to: 0
  9028  012162  AE22               	btfss	___awmod@divisor+1,7,c
  9029  012164  D005               	goto	l3990
  9030                           
  9031                           ; BSR set to: 0
  9032  012166  6C21               	negf	___awmod@divisor,c
  9033  012168  1E22               	comf	___awmod@divisor+1,f,c
  9034  01216A  B0D8               	btfsc	status,0,c
  9035  01216C  2A22               	incf	___awmod@divisor+1,f,c
  9036  01216E  D000               	goto	l3990
  9037  012170                     l3990:
  9038                           
  9039                           ; BSR set to: 0
  9040  012170  5021               	movf	___awmod@divisor,w,c
  9041  012172  1022               	iorwf	___awmod@divisor+1,w,c
  9042  012174  B4D8               	btfsc	status,2,c
  9043  012176  D020               	goto	l4006
  9044                           
  9045                           ; BSR set to: 0
  9046  012178  0E01               	movlw	1
  9047  01217A  0100               	movlb	0	; () banked
  9048  01217C  6F60               	movwf	___awmod@counter& (0+255),b
  9049  01217E  D006               	goto	l3996
  9050  012180                     l3994:
  9051                           
  9052                           ; BSR set to: 0
  9053  012180  90D8               	bcf	status,0,c
  9054  012182  3621               	rlcf	___awmod@divisor,f,c
  9055  012184  3622               	rlcf	___awmod@divisor+1,f,c
  9056  012186  0100               	movlb	0	; () banked
  9057  012188  2B60               	incf	___awmod@counter& (0+255),f,b
  9058  01218A  D000               	goto	l3996
  9059  01218C                     l3996:
  9060                           
  9061                           ; BSR set to: 0
  9062  01218C  BE22               	btfsc	___awmod@divisor+1,7,c
  9063  01218E  D002               	goto	l3998
  9064  012190  D7F7               	goto	l3994
  9065                           
  9066                           ; BSR set to: 0
  9067  012192  D000               	goto	l3998
  9068  012194                     l3998:
  9069                           
  9070                           ; BSR set to: 0
  9071  012194  5021               	movf	___awmod@divisor,w,c
  9072  012196  5C1F               	subwf	___awmod@dividend,w,c
  9073  012198  5022               	movf	___awmod@divisor+1,w,c
  9074  01219A  5820               	subwfb	___awmod@dividend+1,w,c
  9075  01219C  A0D8               	btfss	status,0,c
  9076  01219E  D005               	goto	l4002
  9077                           
  9078                           ; BSR set to: 0
  9079  0121A0  5021               	movf	___awmod@divisor,w,c
  9080  0121A2  5E1F               	subwf	___awmod@dividend,f,c
  9081  0121A4  5022               	movf	___awmod@divisor+1,w,c
  9082  0121A6  5A20               	subwfb	___awmod@dividend+1,f,c
  9083  0121A8  D000               	goto	l4002
  9084  0121AA                     l4002:
  9085                           
  9086                           ; BSR set to: 0
  9087  0121AA  90D8               	bcf	status,0,c
  9088  0121AC  3222               	rrcf	___awmod@divisor+1,f,c
  9089  0121AE  3221               	rrcf	___awmod@divisor,f,c
  9090                           
  9091                           ; BSR set to: 0
  9092  0121B0  0100               	movlb	0	; () banked
  9093  0121B2  2F60               	decfsz	___awmod@counter& (0+255),f,b
  9094  0121B4  D7EF               	goto	l3998
  9095                           
  9096                           ; BSR set to: 0
  9097  0121B6  D000               	goto	l4006
  9098  0121B8                     l4006:
  9099                           
  9100                           ; BSR set to: 0
  9101  0121B8  0100               	movlb	0	; () banked
  9102  0121BA  5161               	movf	___awmod@sign& (0+255),w,b
  9103  0121BC  0100               	movlb	0	; () banked
  9104  0121BE  B4D8               	btfsc	status,2,c
  9105  0121C0  D005               	goto	l4010
  9106                           
  9107                           ; BSR set to: 0
  9108  0121C2  6C1F               	negf	___awmod@dividend,c
  9109  0121C4  1E20               	comf	___awmod@dividend+1,f,c
  9110  0121C6  B0D8               	btfsc	status,0,c
  9111  0121C8  2A20               	incf	___awmod@dividend+1,f,c
  9112  0121CA  D000               	goto	l4010
  9113  0121CC                     l4010:
  9114                           
  9115                           ; BSR set to: 0
  9116  0121CC  C01F  F01F         	movff	___awmod@dividend,?___awmod
  9117  0121D0  C020  F020         	movff	___awmod@dividend+1,?___awmod+1
  9118  0121D4  0012               	return	
  9119                           
  9120                           ; BSR set to: 0
  9121                           
  9122                           ; BSR set to: 0
  9123  0121D6  0012               	return		;funcret
  9124  0121D8                     __end_of___awmod:
  9125                           	opt stack 0
  9126                           tblptru	equ	0xFF8
  9127                           tblptrh	equ	0xFF7
  9128                           tblptrl	equ	0xFF6
  9129                           tablat	equ	0xFF5
  9130                           prodh	equ	0xFF4
  9131                           prodl	equ	0xFF3
  9132                           intcon	equ	0xFF2
  9133                           intcon2	equ	0xFF1
  9134                           postinc0	equ	0xFEE
  9135                           wreg	equ	0xFE8
  9136                           indf1	equ	0xFE7
  9137                           postinc1	equ	0xFE6
  9138                           postdec1	equ	0xFE5
  9139                           fsr1h	equ	0xFE2
  9140                           fsr1l	equ	0xFE1
  9141                           indf2	equ	0xFDF
  9142                           postinc2	equ	0xFDE
  9143                           postdec2	equ	0xFDD
  9144                           fsr2h	equ	0xFDA
  9145                           fsr2l	equ	0xFD9
  9146                           status	equ	0xFD8
  9147                           
  9148 ;; *************** function _get_quot_rem *****************
  9149 ;; Defined at:
  9150 ;;		line 112 in file "../My_header\My_RTCC.h"
  9151 ;; Parameters:    Size  Location     Type
  9152 ;;  quot            2   32[BANK0 ] PTR unsigned long 
  9153 ;;		 -> epoch_to_caltime@num(4), 
  9154 ;;  div             1   34[BANK0 ] unsigned char 
  9155 ;; Auto vars:     Size  Location     Type
  9156 ;;  num             4   36[BANK0 ] unsigned long 
  9157 ;; Return value:  Size  Location     Type
  9158 ;;                  4   32[BANK0 ] unsigned long 
  9159 ;; Registers used:
  9160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9161 ;; Tracked objects:
  9162 ;;		On entry : 0/0
  9163 ;;		On exit  : 0/0
  9164 ;;		Unchanged: 0/0
  9165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9166 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9167 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9169 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9170 ;;Total ram usage:        8 bytes
  9171 ;; Hardware stack levels used:    1
  9172 ;; Hardware stack levels required when called:    5
  9173 ;; This function calls:
  9174 ;;		___lldiv
  9175 ;;		___lmul
  9176 ;; This function is called by:
  9177 ;;		_epoch_to_caltime
  9178 ;; This function uses a non-reentrant model
  9179 ;;
  9180                           
  9181                           	psect	text41
  9182  0115EA                     __ptext41:
  9183                           	opt stack 0
  9184  0115EA                     _get_quot_rem:
  9185                           	opt stack 20
  9186                           
  9187                           ;My_header\My_RTCC.h: 115: epoch_t num = *quot;
  9188                           
  9189                           ; BSR set to: 0
  9190                           ;incstack = 0
  9191  0115EA  C080  FFD9         	movff	get_quot_rem@quot,fsr2l
  9192  0115EE  C081  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  9193  0115F2  CFDE F084          	movff	postinc2,get_quot_rem@num
  9194  0115F6  CFDE F085          	movff	postinc2,get_quot_rem@num+1
  9195  0115FA  CFDE F086          	movff	postinc2,get_quot_rem@num+2
  9196  0115FE  CFDE F087          	movff	postinc2,get_quot_rem@num+3
  9197                           
  9198                           ;My_header\My_RTCC.h: 116: return num - (*quot = num / div) * div;
  9199  011602  0100               	movlb	0	; () banked
  9200  011604  5182               	movf	get_quot_rem@div& (0+255),w,b
  9201  011606  0100               	movlb	0	; () banked
  9202  011608  6F77               	movwf	___lldiv@divisor& (0+255),b
  9203  01160A  6B78               	clrf	(___lldiv@divisor+1)& (0+255),b
  9204  01160C  6B79               	clrf	(___lldiv@divisor+2)& (0+255),b
  9205  01160E  6B7A               	clrf	(___lldiv@divisor+3)& (0+255),b
  9206  011610  C084  F073         	movff	get_quot_rem@num,___lldiv@dividend
  9207  011614  C085  F074         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  9208  011618  C086  F075         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  9209  01161C  C087  F076         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  9210  011620  EC91  F08C         	call	___lldiv	;wreg free
  9211  011624  C080  FFD9         	movff	get_quot_rem@quot,fsr2l
  9212  011628  C081  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  9213  01162C  0100               	movlb	0	; () banked
  9214  01162E  C073  FFDE         	movff	?___lldiv,postinc2
  9215  011632  0100               	movlb	0	; () banked
  9216  011634  C074  FFDE         	movff	?___lldiv+1,postinc2
  9217  011638  0100               	movlb	0	; () banked
  9218  01163A  C075  FFDE         	movff	?___lldiv+2,postinc2
  9219  01163E  0100               	movlb	0	; () banked
  9220  011640  C076  FFDD         	movff	?___lldiv+3,postdec2
  9221  011644  52DD               	movf	postdec2,f,c
  9222  011646  52DD               	movf	postdec2,f,c
  9223  011648  CFDE F067          	movff	postinc2,___lmul@multiplier
  9224  01164C  CFDE F068          	movff	postinc2,___lmul@multiplier+1
  9225  011650  CFDE F069          	movff	postinc2,___lmul@multiplier+2
  9226  011654  CFDE F06A          	movff	postinc2,___lmul@multiplier+3
  9227  011658  0100               	movlb	0	; () banked
  9228  01165A  5182               	movf	get_quot_rem@div& (0+255),w,b
  9229  01165C  0100               	movlb	0	; () banked
  9230  01165E  6F6B               	movwf	___lmul@multiplicand& (0+255),b
  9231  011660  6B6C               	clrf	(___lmul@multiplicand+1)& (0+255),b
  9232  011662  6B6D               	clrf	(___lmul@multiplicand+2)& (0+255),b
  9233  011664  6B6E               	clrf	(___lmul@multiplicand+3)& (0+255),b
  9234  011666  ECB4  F091         	call	___lmul	;wreg free
  9235  01166A  0100               	movlb	0	; () banked
  9236  01166C  1F67               	comf	?___lmul& (0+255),f,b
  9237  01166E  0100               	movlb	0	; () banked
  9238  011670  1F68               	comf	(?___lmul+1)& (0+255),f,b
  9239  011672  0100               	movlb	0	; () banked
  9240  011674  1F69               	comf	(?___lmul+2)& (0+255),f,b
  9241  011676  0100               	movlb	0	; () banked
  9242  011678  1F6A               	comf	(?___lmul+3)& (0+255),f,b
  9243  01167A  0100               	movlb	0	; () banked
  9244  01167C  2B67               	incf	?___lmul& (0+255),f,b
  9245  01167E  0E00               	movlw	0
  9246  011680  0100               	movlb	0	; () banked
  9247  011682  2368               	addwfc	(?___lmul+1)& (0+255),f,b
  9248  011684  0100               	movlb	0	; () banked
  9249  011686  2369               	addwfc	(?___lmul+2)& (0+255),f,b
  9250  011688  0100               	movlb	0	; () banked
  9251  01168A  236A               	addwfc	(?___lmul+3)& (0+255),f,b
  9252  01168C  0100               	movlb	0	; () banked
  9253  01168E  5184               	movf	get_quot_rem@num& (0+255),w,b
  9254  011690  0100               	movlb	0	; () banked
  9255  011692  2567               	addwf	?___lmul& (0+255),w,b
  9256  011694  0100               	movlb	0	; () banked
  9257  011696  6F80               	movwf	?_get_quot_rem& (0+255),b
  9258  011698  0100               	movlb	0	; () banked
  9259  01169A  5185               	movf	(get_quot_rem@num+1)& (0+255),w,b
  9260  01169C  0100               	movlb	0	; () banked
  9261  01169E  2168               	addwfc	(?___lmul+1)& (0+255),w,b
  9262  0116A0  0100               	movlb	0	; () banked
  9263  0116A2  6F81               	movwf	(?_get_quot_rem+1)& (0+255),b
  9264  0116A4  0100               	movlb	0	; () banked
  9265  0116A6  5186               	movf	(get_quot_rem@num+2)& (0+255),w,b
  9266  0116A8  0100               	movlb	0	; () banked
  9267  0116AA  2169               	addwfc	(?___lmul+2)& (0+255),w,b
  9268  0116AC  0100               	movlb	0	; () banked
  9269  0116AE  6F82               	movwf	(?_get_quot_rem+2)& (0+255),b
  9270  0116B0  0100               	movlb	0	; () banked
  9271  0116B2  5187               	movf	(get_quot_rem@num+3)& (0+255),w,b
  9272  0116B4  0100               	movlb	0	; () banked
  9273  0116B6  216A               	addwfc	(?___lmul+3)& (0+255),w,b
  9274  0116B8  0100               	movlb	0	; () banked
  9275  0116BA  6F83               	movwf	(?_get_quot_rem+3)& (0+255),b
  9276  0116BC  0012               	return	
  9277                           
  9278                           ; BSR set to: 0
  9279                           
  9280                           ; BSR set to: 0
  9281  0116BE  0012               	return		;funcret
  9282  0116C0                     __end_of_get_quot_rem:
  9283                           	opt stack 0
  9284                           tblptru	equ	0xFF8
  9285                           tblptrh	equ	0xFF7
  9286                           tblptrl	equ	0xFF6
  9287                           tablat	equ	0xFF5
  9288                           prodh	equ	0xFF4
  9289                           prodl	equ	0xFF3
  9290                           intcon	equ	0xFF2
  9291                           intcon2	equ	0xFF1
  9292                           postinc0	equ	0xFEE
  9293                           wreg	equ	0xFE8
  9294                           indf1	equ	0xFE7
  9295                           postinc1	equ	0xFE6
  9296                           postdec1	equ	0xFE5
  9297                           fsr1h	equ	0xFE2
  9298                           fsr1l	equ	0xFE1
  9299                           indf2	equ	0xFDF
  9300                           postinc2	equ	0xFDE
  9301                           postdec2	equ	0xFDD
  9302                           fsr2h	equ	0xFDA
  9303                           fsr2l	equ	0xFD9
  9304                           status	equ	0xFD8
  9305                           
  9306 ;; *************** function ___lmul *****************
  9307 ;; Defined at:
  9308 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
  9309 ;; Parameters:    Size  Location     Type
  9310 ;;  multiplier      4    7[BANK0 ] unsigned long 
  9311 ;;  multiplicand    4   11[BANK0 ] unsigned long 
  9312 ;; Auto vars:     Size  Location     Type
  9313 ;;  product         4   15[BANK0 ] unsigned long 
  9314 ;; Return value:  Size  Location     Type
  9315 ;;                  4    7[BANK0 ] unsigned long 
  9316 ;; Registers used:
  9317 ;;		wreg, status,2, status,0
  9318 ;; Tracked objects:
  9319 ;;		On entry : 0/0
  9320 ;;		On exit  : 0/0
  9321 ;;		Unchanged: 0/0
  9322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9323 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9324 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9326 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9327 ;;Total ram usage:       12 bytes
  9328 ;; Hardware stack levels used:    1
  9329 ;; Hardware stack levels required when called:    4
  9330 ;; This function calls:
  9331 ;;		Nothing
  9332 ;; This function is called by:
  9333 ;;		_get_quot_rem
  9334 ;;		_caltime_to_epoch
  9335 ;;		_main
  9336 ;;		_RTCC_adjust_time_inc
  9337 ;;		_RTCC_adjust_time_dec
  9338 ;; This function uses a non-reentrant model
  9339 ;;
  9340                           
  9341                           	psect	text42
  9342  012368                     __ptext42:
  9343                           	opt stack 0
  9344  012368                     ___lmul:
  9345                           	opt stack 21
  9346                           
  9347                           ; BSR set to: 0
  9348                           ;incstack = 0
  9349  012368  0E00               	movlw	0
  9350  01236A  0100               	movlb	0	; () banked
  9351  01236C  6F6F               	movwf	___lmul@product& (0+255),b
  9352  01236E  0E00               	movlw	0
  9353  012370  6F70               	movwf	(___lmul@product+1)& (0+255),b
  9354  012372  0E00               	movlw	0
  9355  012374  6F71               	movwf	(___lmul@product+2)& (0+255),b
  9356  012376  0E00               	movlw	0
  9357  012378  6F72               	movwf	(___lmul@product+3)& (0+255),b
  9358  01237A  D000               	goto	l4042
  9359  01237C                     l4042:
  9360                           
  9361                           ; BSR set to: 0
  9362  01237C  0100               	movlb	0	; () banked
  9363  01237E  A167               	btfss	___lmul@multiplier& (0+255),0,b
  9364  012380  D011               	goto	l4046
  9365                           
  9366                           ; BSR set to: 0
  9367  012382  0100               	movlb	0	; () banked
  9368  012384  516B               	movf	___lmul@multiplicand& (0+255),w,b
  9369  012386  0100               	movlb	0	; () banked
  9370  012388  276F               	addwf	___lmul@product& (0+255),f,b
  9371  01238A  0100               	movlb	0	; () banked
  9372  01238C  516C               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  9373  01238E  0100               	movlb	0	; () banked
  9374  012390  2370               	addwfc	(___lmul@product+1)& (0+255),f,b
  9375  012392  0100               	movlb	0	; () banked
  9376  012394  516D               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  9377  012396  0100               	movlb	0	; () banked
  9378  012398  2371               	addwfc	(___lmul@product+2)& (0+255),f,b
  9379  01239A  0100               	movlb	0	; () banked
  9380  01239C  516E               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  9381  01239E  0100               	movlb	0	; () banked
  9382  0123A0  2372               	addwfc	(___lmul@product+3)& (0+255),f,b
  9383  0123A2  D000               	goto	l4046
  9384  0123A4                     l4046:
  9385                           
  9386                           ; BSR set to: 0
  9387  0123A4  0100               	movlb	0	; () banked
  9388  0123A6  90D8               	bcf	status,0,c
  9389  0123A8  376B               	rlcf	___lmul@multiplicand& (0+255),f,b
  9390  0123AA  376C               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  9391  0123AC  376D               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  9392  0123AE  376E               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  9393                           
  9394                           ; BSR set to: 0
  9395  0123B0  0100               	movlb	0	; () banked
  9396  0123B2  90D8               	bcf	status,0,c
  9397  0123B4  336A               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  9398  0123B6  3369               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  9399  0123B8  3368               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  9400  0123BA  3367               	rrcf	___lmul@multiplier& (0+255),f,b
  9401  0123BC  0100               	movlb	0	; () banked
  9402  0123BE  5167               	movf	___lmul@multiplier& (0+255),w,b
  9403  0123C0  0100               	movlb	0	; () banked
  9404  0123C2  1168               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  9405  0123C4  0100               	movlb	0	; () banked
  9406  0123C6  1169               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  9407  0123C8  0100               	movlb	0	; () banked
  9408  0123CA  116A               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  9409  0123CC  A4D8               	btfss	status,2,c
  9410  0123CE  D7D6               	goto	l4042
  9411                           
  9412                           ; BSR set to: 0
  9413  0123D0  C06F  F067         	movff	___lmul@product,?___lmul
  9414  0123D4  C070  F068         	movff	___lmul@product+1,?___lmul+1
  9415  0123D8  C071  F069         	movff	___lmul@product+2,?___lmul+2
  9416  0123DC  C072  F06A         	movff	___lmul@product+3,?___lmul+3
  9417                           
  9418                           ; BSR set to: 0
  9419  0123E0  0012               	return		;funcret
  9420  0123E2                     __end_of___lmul:
  9421                           	opt stack 0
  9422                           tblptru	equ	0xFF8
  9423                           tblptrh	equ	0xFF7
  9424                           tblptrl	equ	0xFF6
  9425                           tablat	equ	0xFF5
  9426                           prodh	equ	0xFF4
  9427                           prodl	equ	0xFF3
  9428                           intcon	equ	0xFF2
  9429                           intcon2	equ	0xFF1
  9430                           postinc0	equ	0xFEE
  9431                           wreg	equ	0xFE8
  9432                           indf1	equ	0xFE7
  9433                           postinc1	equ	0xFE6
  9434                           postdec1	equ	0xFE5
  9435                           fsr1h	equ	0xFE2
  9436                           fsr1l	equ	0xFE1
  9437                           indf2	equ	0xFDF
  9438                           postinc2	equ	0xFDE
  9439                           postdec2	equ	0xFDD
  9440                           fsr2h	equ	0xFDA
  9441                           fsr2l	equ	0xFD9
  9442                           status	equ	0xFD8
  9443                           
  9444 ;; *************** function ___lldiv *****************
  9445 ;; Defined at:
  9446 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  9447 ;; Parameters:    Size  Location     Type
  9448 ;;  dividend        4   19[BANK0 ] unsigned long 
  9449 ;;  divisor         4   23[BANK0 ] unsigned long 
  9450 ;; Auto vars:     Size  Location     Type
  9451 ;;  quotient        4   27[BANK0 ] unsigned long 
  9452 ;;  counter         1   31[BANK0 ] unsigned char 
  9453 ;; Return value:  Size  Location     Type
  9454 ;;                  4   19[BANK0 ] unsigned long 
  9455 ;; Registers used:
  9456 ;;		wreg, status,2, status,0
  9457 ;; Tracked objects:
  9458 ;;		On entry : 0/0
  9459 ;;		On exit  : 0/0
  9460 ;;		Unchanged: 0/0
  9461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9462 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9463 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9465 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9466 ;;Total ram usage:       13 bytes
  9467 ;; Hardware stack levels used:    1
  9468 ;; Hardware stack levels required when called:    4
  9469 ;; This function calls:
  9470 ;;		Nothing
  9471 ;; This function is called by:
  9472 ;;		_get_quot_rem
  9473 ;;		_main
  9474 ;;		_my_utoa32
  9475 ;; This function uses a non-reentrant model
  9476 ;;
  9477                           
  9478                           	psect	text43
  9479  011922                     __ptext43:
  9480                           	opt stack 0
  9481  011922                     ___lldiv:
  9482                           	opt stack 20
  9483                           
  9484                           ; BSR set to: 0
  9485                           ;incstack = 0
  9486  011922  0E00               	movlw	0
  9487  011924  0100               	movlb	0	; () banked
  9488  011926  6F7B               	movwf	___lldiv@quotient& (0+255),b
  9489  011928  0E00               	movlw	0
  9490  01192A  6F7C               	movwf	(___lldiv@quotient+1)& (0+255),b
  9491  01192C  0E00               	movlw	0
  9492  01192E  6F7D               	movwf	(___lldiv@quotient+2)& (0+255),b
  9493  011930  0E00               	movlw	0
  9494  011932  6F7E               	movwf	(___lldiv@quotient+3)& (0+255),b
  9495                           
  9496                           ; BSR set to: 0
  9497  011934  0100               	movlb	0	; () banked
  9498  011936  5177               	movf	___lldiv@divisor& (0+255),w,b
  9499  011938  0100               	movlb	0	; () banked
  9500  01193A  1178               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  9501  01193C  0100               	movlb	0	; () banked
  9502  01193E  1179               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  9503  011940  0100               	movlb	0	; () banked
  9504  011942  117A               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  9505  011944  B4D8               	btfsc	status,2,c
  9506  011946  D047               	goto	l1082
  9507                           
  9508                           ; BSR set to: 0
  9509  011948  0E01               	movlw	1
  9510  01194A  0100               	movlb	0	; () banked
  9511  01194C  6F7F               	movwf	___lldiv@counter& (0+255),b
  9512  01194E  D009               	goto	l4102
  9513  011950                     l4100:
  9514                           
  9515                           ; BSR set to: 0
  9516  011950  0100               	movlb	0	; () banked
  9517  011952  90D8               	bcf	status,0,c
  9518  011954  3777               	rlcf	___lldiv@divisor& (0+255),f,b
  9519  011956  3778               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  9520  011958  3779               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  9521  01195A  377A               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  9522  01195C  0100               	movlb	0	; () banked
  9523  01195E  2B7F               	incf	___lldiv@counter& (0+255),f,b
  9524  011960  D000               	goto	l4102
  9525  011962                     l4102:
  9526                           
  9527                           ; BSR set to: 0
  9528  011962  0100               	movlb	0	; () banked
  9529  011964  BF7A               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
  9530  011966  D002               	goto	l4104
  9531  011968  D7F3               	goto	l4100
  9532                           
  9533                           ; BSR set to: 0
  9534  01196A  D000               	goto	l4104
  9535  01196C                     l4104:
  9536                           
  9537                           ; BSR set to: 0
  9538  01196C  0100               	movlb	0	; () banked
  9539  01196E  90D8               	bcf	status,0,c
  9540  011970  377B               	rlcf	___lldiv@quotient& (0+255),f,b
  9541  011972  377C               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  9542  011974  377D               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  9543  011976  377E               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  9544                           
  9545                           ; BSR set to: 0
  9546  011978  0100               	movlb	0	; () banked
  9547  01197A  5177               	movf	___lldiv@divisor& (0+255),w,b
  9548  01197C  0100               	movlb	0	; () banked
  9549  01197E  5D73               	subwf	___lldiv@dividend& (0+255),w,b
  9550  011980  0100               	movlb	0	; () banked
  9551  011982  5178               	movf	(___lldiv@divisor+1)& (0+255),w,b
  9552  011984  0100               	movlb	0	; () banked
  9553  011986  5974               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  9554  011988  0100               	movlb	0	; () banked
  9555  01198A  5179               	movf	(___lldiv@divisor+2)& (0+255),w,b
  9556  01198C  0100               	movlb	0	; () banked
  9557  01198E  5975               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  9558  011990  0100               	movlb	0	; () banked
  9559  011992  517A               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9560  011994  0100               	movlb	0	; () banked
  9561  011996  5976               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  9562  011998  A0D8               	btfss	status,0,c
  9563  01199A  D013               	goto	l4112
  9564                           
  9565                           ; BSR set to: 0
  9566  01199C  0100               	movlb	0	; () banked
  9567  01199E  5177               	movf	___lldiv@divisor& (0+255),w,b
  9568  0119A0  0100               	movlb	0	; () banked
  9569  0119A2  5F73               	subwf	___lldiv@dividend& (0+255),f,b
  9570  0119A4  0100               	movlb	0	; () banked
  9571  0119A6  5178               	movf	(___lldiv@divisor+1)& (0+255),w,b
  9572  0119A8  0100               	movlb	0	; () banked
  9573  0119AA  5B74               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  9574  0119AC  0100               	movlb	0	; () banked
  9575  0119AE  5179               	movf	(___lldiv@divisor+2)& (0+255),w,b
  9576  0119B0  0100               	movlb	0	; () banked
  9577  0119B2  5B75               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  9578  0119B4  0100               	movlb	0	; () banked
  9579  0119B6  517A               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9580  0119B8  0100               	movlb	0	; () banked
  9581  0119BA  5B76               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  9582                           
  9583                           ; BSR set to: 0
  9584  0119BC  0100               	movlb	0	; () banked
  9585  0119BE  817B               	bsf	___lldiv@quotient& (0+255),0,b
  9586  0119C0  D000               	goto	l4112
  9587  0119C2                     l4112:
  9588                           
  9589                           ; BSR set to: 0
  9590  0119C2  0100               	movlb	0	; () banked
  9591  0119C4  90D8               	bcf	status,0,c
  9592  0119C6  337A               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  9593  0119C8  3379               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  9594  0119CA  3378               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  9595  0119CC  3377               	rrcf	___lldiv@divisor& (0+255),f,b
  9596                           
  9597                           ; BSR set to: 0
  9598  0119CE  0100               	movlb	0	; () banked
  9599  0119D0  2F7F               	decfsz	___lldiv@counter& (0+255),f,b
  9600  0119D2  D7CC               	goto	l4104
  9601  0119D4  D000               	goto	l1082
  9602  0119D6                     l1082:
  9603                           
  9604                           ; BSR set to: 0
  9605  0119D6  C07B  F073         	movff	___lldiv@quotient,?___lldiv
  9606  0119DA  C07C  F074         	movff	___lldiv@quotient+1,?___lldiv+1
  9607  0119DE  C07D  F075         	movff	___lldiv@quotient+2,?___lldiv+2
  9608  0119E2  C07E  F076         	movff	___lldiv@quotient+3,?___lldiv+3
  9609                           
  9610                           ; BSR set to: 0
  9611  0119E6  0012               	return		;funcret
  9612  0119E8                     __end_of___lldiv:
  9613                           	opt stack 0
  9614                           tblptru	equ	0xFF8
  9615                           tblptrh	equ	0xFF7
  9616                           tblptrl	equ	0xFF6
  9617                           tablat	equ	0xFF5
  9618                           prodh	equ	0xFF4
  9619                           prodl	equ	0xFF3
  9620                           intcon	equ	0xFF2
  9621                           intcon2	equ	0xFF1
  9622                           postinc0	equ	0xFEE
  9623                           wreg	equ	0xFE8
  9624                           indf1	equ	0xFE7
  9625                           postinc1	equ	0xFE6
  9626                           postdec1	equ	0xFE5
  9627                           fsr1h	equ	0xFE2
  9628                           fsr1l	equ	0xFE1
  9629                           indf2	equ	0xFDF
  9630                           postinc2	equ	0xFDE
  9631                           postdec2	equ	0xFDD
  9632                           fsr2h	equ	0xFDA
  9633                           fsr2l	equ	0xFD9
  9634                           status	equ	0xFD8
  9635                           
  9636 ;; *************** function _caltime_to_RTCC *****************
  9637 ;; Defined at:
  9638 ;;		line 137 in file "../My_header\My_RTCC.h"
  9639 ;; Parameters:    Size  Location     Type
  9640 ;;  ct              2    4[BANK0 ] PTR struct .
  9641 ;;		 -> caltime_now(7), 
  9642 ;; Auto vars:     Size  Location     Type
  9643 ;;		None
  9644 ;; Return value:  Size  Location     Type
  9645 ;;		None               void
  9646 ;; Registers used:
  9647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9648 ;; Tracked objects:
  9649 ;;		On entry : 0/0
  9650 ;;		On exit  : 0/0
  9651 ;;		Unchanged: 0/0
  9652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9653 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9656 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9657 ;;Total ram usage:        2 bytes
  9658 ;; Hardware stack levels used:    1
  9659 ;; Hardware stack levels required when called:    6
  9660 ;; This function calls:
  9661 ;;		_d_to_x
  9662 ;; This function is called by:
  9663 ;;		_RTCC_from_caltime
  9664 ;;		_RTCC_from_epoch
  9665 ;; This function uses a non-reentrant model
  9666 ;;
  9667                           
  9668                           	psect	text44
  9669  0116C0                     __ptext44:
  9670                           	opt stack 0
  9671  0116C0                     _caltime_to_RTCC:
  9672                           	opt stack 20
  9673                           
  9674                           ;My_header\My_RTCC.h: 138: while (RTCCFGbits.RTCSYNC);
  9675                           
  9676                           ; BSR set to: 0
  9677                           ;incstack = 0
  9678  0116C0  D000               	goto	l317
  9679  0116C2                     l317:
  9680  0116C2  010F               	movlb	15	; () banked
  9681  0116C4  B93F               	btfsc	63,4,b	;volatile
  9682  0116C6  D7FD               	goto	l317
  9683                           
  9684                           ; BSR set to: 15
  9685                           ;My_header\My_RTCC.h: 139: RTCCFGbits.RTCPTR0 = 1;
  9686  0116C8  010F               	movlb	15	; () banked
  9687  0116CA  813F               	bsf	63,0,b	;volatile
  9688                           
  9689                           ;My_header\My_RTCC.h: 140: RTCCFGbits.RTCPTR1 = 1;
  9690  0116CC  010F               	movlb	15	; () banked
  9691  0116CE  833F               	bsf	63,1,b	;volatile
  9692                           
  9693                           ; BSR set to: 15
  9694                           ;My_header\My_RTCC.h: 141: RTCVALL = d_to_x(ct->YY);
  9695  0116D0  0100               	movlb	0	; () banked
  9696  0116D2  EE20 F006          	lfsr	2,6
  9697  0116D6  5164               	movf	caltime_to_RTCC@ct& (0+255),w,b
  9698  0116D8  26D9               	addwf	fsr2l,f,c
  9699  0116DA  5165               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  9700  0116DC  22DA               	addwfc	fsr2h,f,c
  9701  0116DE  50DF               	movf	indf2,w,c
  9702  0116E0  EC63  F094         	call	_d_to_x
  9703  0116E4  010F               	movlb	15	; () banked
  9704  0116E6  6F3A               	movwf	58,b	;volatile
  9705                           
  9706                           ; BSR set to: 15
  9707                           ;My_header\My_RTCC.h: 142: RTCVALH = 0x00;
  9708  0116E8  0E00               	movlw	0
  9709  0116EA  010F               	movlb	15	; () banked
  9710  0116EC  6F3B               	movwf	59,b	;volatile
  9711                           
  9712                           ; BSR set to: 15
  9713                           ;My_header\My_RTCC.h: 143: RTCCFGbits.RTCPTR0 = 0;
  9714  0116EE  010F               	movlb	15	; () banked
  9715  0116F0  913F               	bcf	63,0,b	;volatile
  9716                           
  9717                           ; BSR set to: 15
  9718                           ;My_header\My_RTCC.h: 144: RTCCFGbits.RTCPTR1 = 1;
  9719  0116F2  010F               	movlb	15	; () banked
  9720  0116F4  833F               	bsf	63,1,b	;volatile
  9721                           
  9722                           ; BSR set to: 15
  9723                           ;My_header\My_RTCC.h: 145: RTCVALL = d_to_x(ct->DD);
  9724  0116F6  0100               	movlb	0	; () banked
  9725  0116F8  EE20 F004          	lfsr	2,4
  9726  0116FC  5164               	movf	caltime_to_RTCC@ct& (0+255),w,b
  9727  0116FE  26D9               	addwf	fsr2l,f,c
  9728  011700  5165               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  9729  011702  22DA               	addwfc	fsr2h,f,c
  9730  011704  50DF               	movf	indf2,w,c
  9731  011706  EC63  F094         	call	_d_to_x
  9732  01170A  010F               	movlb	15	; () banked
  9733  01170C  6F3A               	movwf	58,b	;volatile
  9734                           
  9735                           ; BSR set to: 15
  9736                           ;My_header\My_RTCC.h: 146: RTCVALH = d_to_x(ct->MM);
  9737  01170E  0100               	movlb	0	; () banked
  9738  011710  EE20 F005          	lfsr	2,5
  9739  011714  5164               	movf	caltime_to_RTCC@ct& (0+255),w,b
  9740  011716  26D9               	addwf	fsr2l,f,c
  9741  011718  5165               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  9742  01171A  22DA               	addwfc	fsr2h,f,c
  9743  01171C  50DF               	movf	indf2,w,c
  9744  01171E  EC63  F094         	call	_d_to_x
  9745  011722  010F               	movlb	15	; () banked
  9746  011724  6F3B               	movwf	59,b	;volatile
  9747                           
  9748                           ; BSR set to: 15
  9749                           ;My_header\My_RTCC.h: 147: RTCCFGbits.RTCPTR0 = 1;
  9750  011726  010F               	movlb	15	; () banked
  9751  011728  813F               	bsf	63,0,b	;volatile
  9752                           
  9753                           ; BSR set to: 15
  9754                           ;My_header\My_RTCC.h: 148: RTCCFGbits.RTCPTR1 = 0;
  9755  01172A  010F               	movlb	15	; () banked
  9756  01172C  933F               	bcf	63,1,b	;volatile
  9757                           
  9758                           ; BSR set to: 15
  9759                           ;My_header\My_RTCC.h: 149: RTCVALL = d_to_x(ct->hh);
  9760  01172E  0100               	movlb	0	; () banked
  9761  011730  EE20 F002          	lfsr	2,2
  9762  011734  5164               	movf	caltime_to_RTCC@ct& (0+255),w,b
  9763  011736  26D9               	addwf	fsr2l,f,c
  9764  011738  5165               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  9765  01173A  22DA               	addwfc	fsr2h,f,c
  9766  01173C  50DF               	movf	indf2,w,c
  9767  01173E  EC63  F094         	call	_d_to_x
  9768  011742  010F               	movlb	15	; () banked
  9769  011744  6F3A               	movwf	58,b	;volatile
  9770                           
  9771                           ; BSR set to: 15
  9772                           ;My_header\My_RTCC.h: 150: RTCVALH = d_to_x(ct->EE);
  9773  011746  0100               	movlb	0	; () banked
  9774  011748  EE20 F003          	lfsr	2,3
  9775  01174C  5164               	movf	caltime_to_RTCC@ct& (0+255),w,b
  9776  01174E  26D9               	addwf	fsr2l,f,c
  9777  011750  5165               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  9778  011752  22DA               	addwfc	fsr2h,f,c
  9779  011754  50DF               	movf	indf2,w,c
  9780  011756  EC63  F094         	call	_d_to_x
  9781  01175A  010F               	movlb	15	; () banked
  9782  01175C  6F3B               	movwf	59,b	;volatile
  9783                           
  9784                           ; BSR set to: 15
  9785                           ;My_header\My_RTCC.h: 151: RTCCFGbits.RTCPTR0 = 0;
  9786  01175E  010F               	movlb	15	; () banked
  9787  011760  913F               	bcf	63,0,b	;volatile
  9788                           
  9789                           ; BSR set to: 15
  9790                           ;My_header\My_RTCC.h: 152: RTCCFGbits.RTCPTR1 = 0;
  9791  011762  010F               	movlb	15	; () banked
  9792  011764  933F               	bcf	63,1,b	;volatile
  9793                           
  9794                           ; BSR set to: 15
  9795                           ;My_header\My_RTCC.h: 153: RTCVALL = d_to_x(ct->ss);
  9796  011766  C064  FFD9         	movff	caltime_to_RTCC@ct,fsr2l
  9797  01176A  C065  FFDA         	movff	caltime_to_RTCC@ct+1,fsr2h
  9798  01176E  50DF               	movf	indf2,w,c
  9799  011770  EC63  F094         	call	_d_to_x
  9800  011774  010F               	movlb	15	; () banked
  9801  011776  6F3A               	movwf	58,b	;volatile
  9802                           
  9803                           ; BSR set to: 15
  9804                           ;My_header\My_RTCC.h: 154: RTCVALH = d_to_x(ct->mm);
  9805  011778  0100               	movlb	0	; () banked
  9806  01177A  EE20 F001          	lfsr	2,1
  9807  01177E  5164               	movf	caltime_to_RTCC@ct& (0+255),w,b
  9808  011780  26D9               	addwf	fsr2l,f,c
  9809  011782  5165               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  9810  011784  22DA               	addwfc	fsr2h,f,c
  9811  011786  50DF               	movf	indf2,w,c
  9812  011788  EC63  F094         	call	_d_to_x
  9813  01178C  010F               	movlb	15	; () banked
  9814  01178E  6F3B               	movwf	59,b	;volatile
  9815                           
  9816                           ; BSR set to: 15
  9817  011790  0012               	return		;funcret
  9818  011792                     __end_of_caltime_to_RTCC:
  9819                           	opt stack 0
  9820                           tblptru	equ	0xFF8
  9821                           tblptrh	equ	0xFF7
  9822                           tblptrl	equ	0xFF6
  9823                           tablat	equ	0xFF5
  9824                           prodh	equ	0xFF4
  9825                           prodl	equ	0xFF3
  9826                           intcon	equ	0xFF2
  9827                           intcon2	equ	0xFF1
  9828                           postinc0	equ	0xFEE
  9829                           wreg	equ	0xFE8
  9830                           indf1	equ	0xFE7
  9831                           postinc1	equ	0xFE6
  9832                           postdec1	equ	0xFE5
  9833                           fsr1h	equ	0xFE2
  9834                           fsr1l	equ	0xFE1
  9835                           indf2	equ	0xFDF
  9836                           postinc2	equ	0xFDE
  9837                           postdec2	equ	0xFDD
  9838                           fsr2h	equ	0xFDA
  9839                           fsr2l	equ	0xFD9
  9840                           status	equ	0xFD8
  9841                           
  9842 ;; *************** function _d_to_x *****************
  9843 ;; Defined at:
  9844 ;;		line 73 in file "../My_header\My_RTCC.h"
  9845 ;; Parameters:    Size  Location     Type
  9846 ;;  dec             1    wreg     unsigned char 
  9847 ;; Auto vars:     Size  Location     Type
  9848 ;;  dec             1   34[COMRAM] unsigned char 
  9849 ;; Return value:  Size  Location     Type
  9850 ;;                  1    wreg      unsigned char 
  9851 ;; Registers used:
  9852 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9853 ;; Tracked objects:
  9854 ;;		On entry : 0/0
  9855 ;;		On exit  : 0/0
  9856 ;;		Unchanged: 0/0
  9857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9859 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9861 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9862 ;;Total ram usage:        1 bytes
  9863 ;; Hardware stack levels used:    1
  9864 ;; Hardware stack levels required when called:    5
  9865 ;; This function calls:
  9866 ;;		___awdiv
  9867 ;; This function is called by:
  9868 ;;		_caltime_to_RTCC
  9869 ;; This function uses a non-reentrant model
  9870 ;;
  9871                           
  9872                           	psect	text45
  9873  0128C6                     __ptext45:
  9874                           	opt stack 0
  9875  0128C6                     _d_to_x:
  9876                           	opt stack 20
  9877                           
  9878                           ; BSR set to: 15
  9879                           ;incstack = 0
  9880                           ;d_to_x@dec stored from wreg
  9881  0128C6  6E23               	movwf	d_to_x@dec,c
  9882                           
  9883                           ;My_header\My_RTCC.h: 76: return dec / 10 * 6 + dec;
  9884  0128C8  C023  F01F         	movff	d_to_x@dec,___awdiv@dividend
  9885  0128CC  6A20               	clrf	___awdiv@dividend+1,c
  9886  0128CE  0E00               	movlw	0
  9887  0128D0  6E22               	movwf	___awdiv@divisor+1,c
  9888  0128D2  0E0A               	movlw	10
  9889  0128D4  6E21               	movwf	___awdiv@divisor,c
  9890  0128D6  ECC0  F08E         	call	___awdiv	;wreg free
  9891  0128DA  501F               	movf	?___awdiv,w,c
  9892  0128DC  0D06               	mullw	6
  9893  0128DE  50F3               	movf	prodl,w,c
  9894  0128E0  2423               	addwf	d_to_x@dec,w,c
  9895  0128E2  0012               	return	
  9896  0128E4  0012               	return		;funcret
  9897  0128E6                     __end_of_d_to_x:
  9898                           	opt stack 0
  9899                           tblptru	equ	0xFF8
  9900                           tblptrh	equ	0xFF7
  9901                           tblptrl	equ	0xFF6
  9902                           tablat	equ	0xFF5
  9903                           prodh	equ	0xFF4
  9904                           prodl	equ	0xFF3
  9905                           intcon	equ	0xFF2
  9906                           intcon2	equ	0xFF1
  9907                           postinc0	equ	0xFEE
  9908                           wreg	equ	0xFE8
  9909                           indf1	equ	0xFE7
  9910                           postinc1	equ	0xFE6
  9911                           postdec1	equ	0xFE5
  9912                           fsr1h	equ	0xFE2
  9913                           fsr1l	equ	0xFE1
  9914                           indf2	equ	0xFDF
  9915                           postinc2	equ	0xFDE
  9916                           postdec2	equ	0xFDD
  9917                           fsr2h	equ	0xFDA
  9918                           fsr2l	equ	0xFD9
  9919                           status	equ	0xFD8
  9920                           
  9921 ;; *************** function ___awdiv *****************
  9922 ;; Defined at:
  9923 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  9924 ;; Parameters:    Size  Location     Type
  9925 ;;  dividend        2   30[COMRAM] int 
  9926 ;;  divisor         2   32[COMRAM] int 
  9927 ;; Auto vars:     Size  Location     Type
  9928 ;;  quotient        2    2[BANK0 ] int 
  9929 ;;  sign            1    1[BANK0 ] unsigned char 
  9930 ;;  counter         1    0[BANK0 ] unsigned char 
  9931 ;; Return value:  Size  Location     Type
  9932 ;;                  2   30[COMRAM] int 
  9933 ;; Registers used:
  9934 ;;		wreg, status,2, status,0
  9935 ;; Tracked objects:
  9936 ;;		On entry : 0/0
  9937 ;;		On exit  : 0/0
  9938 ;;		Unchanged: 0/0
  9939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9940 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9941 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9943 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9944 ;;Total ram usage:        8 bytes
  9945 ;; Hardware stack levels used:    1
  9946 ;; Hardware stack levels required when called:    4
  9947 ;; This function calls:
  9948 ;;		Nothing
  9949 ;; This function is called by:
  9950 ;;		_d_to_x
  9951 ;; This function uses a non-reentrant model
  9952 ;;
  9953                           
  9954                           	psect	text46
  9955  011D80                     __ptext46:
  9956                           	opt stack 0
  9957  011D80                     ___awdiv:
  9958                           	opt stack 20
  9959                           
  9960                           ;incstack = 0
  9961  011D80  0E00               	movlw	0
  9962  011D82  0100               	movlb	0	; () banked
  9963  011D84  6F61               	movwf	___awdiv@sign& (0+255),b
  9964                           
  9965                           ; BSR set to: 0
  9966  011D86  AE22               	btfss	___awdiv@divisor+1,7,c
  9967  011D88  D008               	goto	l4058
  9968                           
  9969                           ; BSR set to: 0
  9970  011D8A  6C21               	negf	___awdiv@divisor,c
  9971  011D8C  1E22               	comf	___awdiv@divisor+1,f,c
  9972  011D8E  B0D8               	btfsc	status,0,c
  9973  011D90  2A22               	incf	___awdiv@divisor+1,f,c
  9974                           
  9975                           ; BSR set to: 0
  9976  011D92  0E01               	movlw	1
  9977  011D94  0100               	movlb	0	; () banked
  9978  011D96  6F61               	movwf	___awdiv@sign& (0+255),b
  9979  011D98  D000               	goto	l4058
  9980  011D9A                     l4058:
  9981                           
  9982                           ; BSR set to: 0
  9983  011D9A  AE20               	btfss	___awdiv@dividend+1,7,c
  9984  011D9C  D008               	goto	l4064
  9985                           
  9986                           ; BSR set to: 0
  9987  011D9E  6C1F               	negf	___awdiv@dividend,c
  9988  011DA0  1E20               	comf	___awdiv@dividend+1,f,c
  9989  011DA2  B0D8               	btfsc	status,0,c
  9990  011DA4  2A20               	incf	___awdiv@dividend+1,f,c
  9991                           
  9992                           ; BSR set to: 0
  9993  011DA6  0E01               	movlw	1
  9994  011DA8  0100               	movlb	0	; () banked
  9995  011DAA  1B61               	xorwf	___awdiv@sign& (0+255),f,b
  9996  011DAC  D000               	goto	l4064
  9997  011DAE                     l4064:
  9998                           
  9999                           ; BSR set to: 0
 10000  011DAE  0E00               	movlw	0
 10001  011DB0  0100               	movlb	0	; () banked
 10002  011DB2  6F63               	movwf	(___awdiv@quotient+1)& (0+255),b
 10003  011DB4  0E00               	movlw	0
 10004  011DB6  6F62               	movwf	___awdiv@quotient& (0+255),b
 10005                           
 10006                           ; BSR set to: 0
 10007  011DB8  5021               	movf	___awdiv@divisor,w,c
 10008  011DBA  1022               	iorwf	___awdiv@divisor+1,w,c
 10009  011DBC  B4D8               	btfsc	status,2,c
 10010  011DBE  D026               	goto	l4086
 10011                           
 10012                           ; BSR set to: 0
 10013  011DC0  0E01               	movlw	1
 10014  011DC2  0100               	movlb	0	; () banked
 10015  011DC4  6F60               	movwf	___awdiv@counter& (0+255),b
 10016  011DC6  D006               	goto	l4072
 10017  011DC8                     l4070:
 10018                           
 10019                           ; BSR set to: 0
 10020  011DC8  90D8               	bcf	status,0,c
 10021  011DCA  3621               	rlcf	___awdiv@divisor,f,c
 10022  011DCC  3622               	rlcf	___awdiv@divisor+1,f,c
 10023  011DCE  0100               	movlb	0	; () banked
 10024  011DD0  2B60               	incf	___awdiv@counter& (0+255),f,b
 10025  011DD2  D000               	goto	l4072
 10026  011DD4                     l4072:
 10027                           
 10028                           ; BSR set to: 0
 10029  011DD4  BE22               	btfsc	___awdiv@divisor+1,7,c
 10030  011DD6  D002               	goto	l4074
 10031  011DD8  D7F7               	goto	l4070
 10032                           
 10033                           ; BSR set to: 0
 10034  011DDA  D000               	goto	l4074
 10035  011DDC                     l4074:
 10036                           
 10037                           ; BSR set to: 0
 10038  011DDC  0100               	movlb	0	; () banked
 10039  011DDE  90D8               	bcf	status,0,c
 10040  011DE0  3762               	rlcf	___awdiv@quotient& (0+255),f,b
 10041  011DE2  3763               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10042                           
 10043                           ; BSR set to: 0
 10044  011DE4  5021               	movf	___awdiv@divisor,w,c
 10045  011DE6  5C1F               	subwf	___awdiv@dividend,w,c
 10046  011DE8  5022               	movf	___awdiv@divisor+1,w,c
 10047  011DEA  5820               	subwfb	___awdiv@dividend+1,w,c
 10048  011DEC  A0D8               	btfss	status,0,c
 10049  011DEE  D007               	goto	l4082
 10050                           
 10051                           ; BSR set to: 0
 10052  011DF0  5021               	movf	___awdiv@divisor,w,c
 10053  011DF2  5E1F               	subwf	___awdiv@dividend,f,c
 10054  011DF4  5022               	movf	___awdiv@divisor+1,w,c
 10055  011DF6  5A20               	subwfb	___awdiv@dividend+1,f,c
 10056                           
 10057                           ; BSR set to: 0
 10058  011DF8  0100               	movlb	0	; () banked
 10059  011DFA  8162               	bsf	___awdiv@quotient& (0+255),0,b
 10060  011DFC  D000               	goto	l4082
 10061  011DFE                     l4082:
 10062                           
 10063                           ; BSR set to: 0
 10064  011DFE  90D8               	bcf	status,0,c
 10065  011E00  3222               	rrcf	___awdiv@divisor+1,f,c
 10066  011E02  3221               	rrcf	___awdiv@divisor,f,c
 10067                           
 10068                           ; BSR set to: 0
 10069  011E04  0100               	movlb	0	; () banked
 10070  011E06  2F60               	decfsz	___awdiv@counter& (0+255),f,b
 10071  011E08  D7E9               	goto	l4074
 10072                           
 10073                           ; BSR set to: 0
 10074  011E0A  D000               	goto	l4086
 10075  011E0C                     l4086:
 10076                           
 10077                           ; BSR set to: 0
 10078  011E0C  0100               	movlb	0	; () banked
 10079  011E0E  5161               	movf	___awdiv@sign& (0+255),w,b
 10080  011E10  0100               	movlb	0	; () banked
 10081  011E12  B4D8               	btfsc	status,2,c
 10082  011E14  D006               	goto	l4090
 10083                           
 10084                           ; BSR set to: 0
 10085  011E16  0100               	movlb	0	; () banked
 10086  011E18  6D62               	negf	___awdiv@quotient& (0+255),b
 10087  011E1A  1F63               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10088  011E1C  B0D8               	btfsc	status,0,c
 10089  011E1E  2B63               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10090  011E20  D000               	goto	l4090
 10091  011E22                     l4090:
 10092                           
 10093                           ; BSR set to: 0
 10094  011E22  C062  F01F         	movff	___awdiv@quotient,?___awdiv
 10095  011E26  C063  F020         	movff	___awdiv@quotient+1,?___awdiv+1
 10096  011E2A  0012               	return	
 10097                           
 10098                           ; BSR set to: 0
 10099                           
 10100                           ; BSR set to: 0
 10101  011E2C  0012               	return		;funcret
 10102  011E2E                     __end_of___awdiv:
 10103                           	opt stack 0
 10104                           tblptru	equ	0xFF8
 10105                           tblptrh	equ	0xFF7
 10106                           tblptrl	equ	0xFF6
 10107                           tablat	equ	0xFF5
 10108                           prodh	equ	0xFF4
 10109                           prodl	equ	0xFF3
 10110                           intcon	equ	0xFF2
 10111                           intcon2	equ	0xFF1
 10112                           postinc0	equ	0xFEE
 10113                           wreg	equ	0xFE8
 10114                           indf1	equ	0xFE7
 10115                           postinc1	equ	0xFE6
 10116                           postdec1	equ	0xFE5
 10117                           fsr1h	equ	0xFE2
 10118                           fsr1l	equ	0xFE1
 10119                           indf2	equ	0xFDF
 10120                           postinc2	equ	0xFDE
 10121                           postdec2	equ	0xFDD
 10122                           fsr2h	equ	0xFDA
 10123                           fsr2l	equ	0xFD9
 10124                           status	equ	0xFD8
 10125                           
 10126 ;; *************** function _ADC *****************
 10127 ;; Defined at:
 10128 ;;		line 172 in file "../My_header\My_header.h"
 10129 ;; Parameters:    Size  Location     Type
 10130 ;;  ch              1    wreg     unsigned char 
 10131 ;; Auto vars:     Size  Location     Type
 10132 ;;  ch              1   33[COMRAM] unsigned char 
 10133 ;; Return value:  Size  Location     Type
 10134 ;;                  2   30[COMRAM] unsigned int 
 10135 ;; Registers used:
 10136 ;;		wreg, status,2, status,0
 10137 ;; Tracked objects:
 10138 ;;		On entry : 0/0
 10139 ;;		On exit  : 0/0
 10140 ;;		Unchanged: 0/0
 10141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10142 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10143 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10144 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10145 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10146 ;;Total ram usage:        4 bytes
 10147 ;; Hardware stack levels used:    1
 10148 ;; Hardware stack levels required when called:    4
 10149 ;; This function calls:
 10150 ;;		Nothing
 10151 ;; This function is called by:
 10152 ;;		_main
 10153 ;; This function uses a non-reentrant model
 10154 ;;
 10155                           
 10156                           	psect	text47
 10157  0127F0                     __ptext47:
 10158                           	opt stack 0
 10159  0127F0                     _ADC:
 10160                           	opt stack 26
 10161                           
 10162                           ; BSR set to: 0
 10163                           ;incstack = 0
 10164                           ;ADC@ch stored from wreg
 10165  0127F0  6E22               	movwf	ADC@ch,c
 10166                           
 10167                           ;My_header\My_header.h: 173: ADCON0bits.CHS = ch;
 10168  0127F2  C022  F021         	movff	ADC@ch,??_ADC
 10169  0127F6  4621               	rlncf	??_ADC,f,c
 10170  0127F8  4621               	rlncf	??_ADC,f,c
 10171  0127FA  50C2               	movf	4034,w,c	;volatile
 10172  0127FC  1821               	xorwf	??_ADC,w,c
 10173  0127FE  0BC3               	andlw	-61
 10174  012800  1821               	xorwf	??_ADC,w,c
 10175  012802  6EC2               	movwf	4034,c	;volatile
 10176                           
 10177                           ;My_header\My_header.h: 174: ADCON0bits.ADON = 1;
 10178  012804  80C2               	bsf	4034,0,c	;volatile
 10179                           
 10180                           ;My_header\My_header.h: 176: PIR1bits.ADIF = 0;
 10181  012806  9C9E               	bcf	3998,6,c	;volatile
 10182                           
 10183                           ;My_header\My_header.h: 177: ADCON0bits.GO_nDONE = 1;
 10184  012808  82C2               	bsf	4034,1,c	;volatile
 10185                           
 10186                           ;My_header\My_header.h: 178: while (!PIR1bits.ADIF);
 10187  01280A  D000               	goto	l151
 10188  01280C                     l151:
 10189  01280C  AC9E               	btfss	3998,6,c	;volatile
 10190  01280E  D7FE               	goto	l151
 10191                           
 10192                           ;My_header\My_header.h: 179: return ADRES;
 10193  012810  CFC3 F01F          	movff	4035,?_ADC	;volatile
 10194  012814  CFC4 F020          	movff	4036,?_ADC+1	;volatile
 10195  012818  0012               	return		;funcret
 10196  01281A                     __end_of_ADC:
 10197                           	opt stack 0
 10198                           tblptru	equ	0xFF8
 10199                           tblptrh	equ	0xFF7
 10200                           tblptrl	equ	0xFF6
 10201                           tablat	equ	0xFF5
 10202                           prodh	equ	0xFF4
 10203                           prodl	equ	0xFF3
 10204                           intcon	equ	0xFF2
 10205                           intcon2	equ	0xFF1
 10206                           postinc0	equ	0xFEE
 10207                           wreg	equ	0xFE8
 10208                           indf1	equ	0xFE7
 10209                           postinc1	equ	0xFE6
 10210                           postdec1	equ	0xFE5
 10211                           fsr1h	equ	0xFE2
 10212                           fsr1l	equ	0xFE1
 10213                           indf2	equ	0xFDF
 10214                           postinc2	equ	0xFDE
 10215                           postdec2	equ	0xFDD
 10216                           fsr2h	equ	0xFDA
 10217                           fsr2l	equ	0xFD9
 10218                           status	equ	0xFD8
 10219                           
 10220 ;; *************** function _ISR *****************
 10221 ;; Defined at:
 10222 ;;		line 61 in file "PIC18F27J53-killifish_light02.c"
 10223 ;; Parameters:    Size  Location     Type
 10224 ;;		None
 10225 ;; Auto vars:     Size  Location     Type
 10226 ;;		None
 10227 ;; Return value:  Size  Location     Type
 10228 ;;		None               void
 10229 ;; Registers used:
 10230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10231 ;; Tracked objects:
 10232 ;;		On entry : 0/0
 10233 ;;		On exit  : 0/0
 10234 ;;		Unchanged: 0/0
 10235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10238 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10239 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10240 ;;Total ram usage:       14 bytes
 10241 ;; Hardware stack levels used:    1
 10242 ;; Hardware stack levels required when called:    3
 10243 ;; This function calls:
 10244 ;;		_UART_ISR
 10245 ;;		_button_timer_interrupt
 10246 ;; This function is called by:
 10247 ;;		Interrupt level 2
 10248 ;; This function uses a non-reentrant model
 10249 ;;
 10250                           
 10251                           	psect	intcode
 10252  000008                     __pintcode:
 10253                           	opt stack 0
 10254  000008                     _ISR:
 10255                           	opt stack 19
 10256                           
 10257                           ;incstack = 0
 10258  000008  CFFA F011          	movff	pclath,??_ISR
 10259  00000C  CFFB F012          	movff	pclatu,??_ISR+1
 10260  000010  CFE9 F013          	movff	fsr0l,??_ISR+2
 10261  000014  CFEA F014          	movff	fsr0h,??_ISR+3
 10262  000018  CFE1 F015          	movff	fsr1l,??_ISR+4
 10263  00001C  CFE2 F016          	movff	fsr1h,??_ISR+5
 10264  000020  CFD9 F017          	movff	fsr2l,??_ISR+6
 10265  000024  CFDA F018          	movff	fsr2h,??_ISR+7
 10266  000028  CFF3 F019          	movff	prodl,??_ISR+8
 10267  00002C  CFF4 F01A          	movff	prodh,??_ISR+9
 10268  000030  CFF6 F01B          	movff	tblptrl,??_ISR+10
 10269  000034  CFF7 F01C          	movff	tblptrh,??_ISR+11
 10270  000038  CFF8 F01D          	movff	tblptru,??_ISR+12
 10271  00003C  CFF5 F01E          	movff	tablat,??_ISR+13
 10272                           
 10273                           ;PIC18F27J53-killifish_light02.c: 62: UART_ISR();
 10274  000040  EC15  F093         	call	_UART_ISR	;wreg free
 10275                           
 10276                           ;PIC18F27J53-killifish_light02.c: 63: if (INTCONbits.T0IF) {
 10277  000044  B4F2               	btfsc	intcon,2,c	;volatile
 10278                           
 10279                           ;PIC18F27J53-killifish_light02.c: 64: INTCONbits.T0IF = 0;
 10280  000046  94F2               	bcf	intcon,2,c	;volatile
 10281                           
 10282                           ;PIC18F27J53-killifish_light02.c: 65: }
 10283                           ;PIC18F27J53-killifish_light02.c: 66: if (PIR1bits.TMR1IF) {
 10284  000048  A09E               	btfss	3998,0,c	;volatile
 10285  00004A  D004               	goto	i2l5132
 10286                           
 10287                           ;PIC18F27J53-killifish_light02.c: 67: PIR1bits.TMR1IF = 0;
 10288  00004C  909E               	bcf	3998,0,c	;volatile
 10289                           
 10290                           ;PIC18F27J53-killifish_light02.c: 68: TMR1H = 0x80;
 10291  00004E  0E80               	movlw	128
 10292  000050  6ECF               	movwf	4047,c	;volatile
 10293  000052  D000               	goto	i2l5132
 10294  000054                     i2l5132:
 10295                           
 10296                           ;PIC18F27J53-killifish_light02.c: 69: }
 10297                           ;PIC18F27J53-killifish_light02.c: 70: if (PIR2bits.TMR3IF) {
 10298  000054  A2A1               	btfss	4001,1,c	;volatile
 10299  000056  D026               	goto	i2l478
 10300                           
 10301                           ;PIC18F27J53-killifish_light02.c: 71: PIR2bits.TMR3IF = 0;
 10302  000058  92A1               	bcf	4001,1,c	;volatile
 10303                           
 10304                           ;PIC18F27J53-killifish_light02.c: 72: button_timer_interrupt(&sw_R, !PORTAbits.RA5);
 10305  00005A  0E3E               	movlw	low _sw_R
 10306  00005C  6E01               	movwf	button_timer_interrupt@bt,c
 10307  00005E  0E00               	movlw	high _sw_R
 10308  000060  6E02               	movwf	button_timer_interrupt@bt+1,c
 10309  000062  BA80               	btfsc	3968,5,c	;volatile
 10310  000064  D002               	goto	i2u570_40
 10311  000066  0E01               	movlw	1
 10312  000068  D001               	goto	i2u571_40
 10313  00006A                     i2u570_40:
 10314  00006A  0E00               	movlw	0
 10315  00006C                     i2u571_40:
 10316  00006C  6E03               	movwf	button_timer_interrupt@sw_value,c
 10317  00006E  EC13  F087         	call	_button_timer_interrupt	;wreg free
 10318                           
 10319                           ;PIC18F27J53-killifish_light02.c: 73: button_timer_interrupt(&sw_G, !PORTAbits.RA6);
 10320  000072  0E3A               	movlw	low _sw_G
 10321  000074  6E01               	movwf	button_timer_interrupt@bt,c
 10322  000076  0E00               	movlw	high _sw_G
 10323  000078  6E02               	movwf	button_timer_interrupt@bt+1,c
 10324  00007A  BC80               	btfsc	3968,6,c	;volatile
 10325  00007C  D002               	goto	i2u572_40
 10326  00007E  0E01               	movlw	1
 10327  000080  D001               	goto	i2u573_40
 10328  000082                     i2u572_40:
 10329  000082  0E00               	movlw	0
 10330  000084                     i2u573_40:
 10331  000084  6E03               	movwf	button_timer_interrupt@sw_value,c
 10332  000086  EC13  F087         	call	_button_timer_interrupt	;wreg free
 10333                           
 10334                           ;PIC18F27J53-killifish_light02.c: 74: button_timer_interrupt(&sw_B, !PORTAbits.RA7);
 10335  00008A  0EE2               	movlw	low _sw_B
 10336  00008C  6E01               	movwf	button_timer_interrupt@bt,c
 10337  00008E  0E01               	movlw	high _sw_B
 10338  000090  6E02               	movwf	button_timer_interrupt@bt+1,c
 10339  000092  BE80               	btfsc	3968,7,c	;volatile
 10340  000094  D002               	goto	i2u574_40
 10341  000096  0E01               	movlw	1
 10342  000098  D001               	goto	i2u575_40
 10343  00009A                     i2u574_40:
 10344  00009A  0E00               	movlw	0
 10345  00009C                     i2u575_40:
 10346  00009C  6E03               	movwf	button_timer_interrupt@sw_value,c
 10347  00009E  EC13  F087         	call	_button_timer_interrupt	;wreg free
 10348  0000A2  D000               	goto	i2l478
 10349  0000A4                     i2l478:
 10350  0000A4  C01E  FFF5         	movff	??_ISR+13,tablat
 10351  0000A8  C01D  FFF8         	movff	??_ISR+12,tblptru
 10352  0000AC  C01C  FFF7         	movff	??_ISR+11,tblptrh
 10353  0000B0  C01B  FFF6         	movff	??_ISR+10,tblptrl
 10354  0000B4  C01A  FFF4         	movff	??_ISR+9,prodh
 10355  0000B8  C019  FFF3         	movff	??_ISR+8,prodl
 10356  0000BC  C018  FFDA         	movff	??_ISR+7,fsr2h
 10357  0000C0  C017  FFD9         	movff	??_ISR+6,fsr2l
 10358  0000C4  C016  FFE2         	movff	??_ISR+5,fsr1h
 10359  0000C8  C015  FFE1         	movff	??_ISR+4,fsr1l
 10360  0000CC  C014  FFEA         	movff	??_ISR+3,fsr0h
 10361  0000D0  C013  FFE9         	movff	??_ISR+2,fsr0l
 10362  0000D4  C012  FFFB         	movff	??_ISR+1,pclatu
 10363  0000D8  C011  FFFA         	movff	??_ISR,pclath
 10364  0000DC  0011               	retfie		f
 10365  0000DE                     __end_of_ISR:
 10366                           	opt stack 0
 10367                           pclatu	equ	0xFFB
 10368                           pclath	equ	0xFFA
 10369                           tblptru	equ	0xFF8
 10370                           tblptrh	equ	0xFF7
 10371                           tblptrl	equ	0xFF6
 10372                           tablat	equ	0xFF5
 10373                           prodh	equ	0xFF4
 10374                           prodl	equ	0xFF3
 10375                           intcon	equ	0xFF2
 10376                           intcon2	equ	0xFF1
 10377                           postinc0	equ	0xFEE
 10378                           fsr0h	equ	0xFEA
 10379                           fsr0l	equ	0xFE9
 10380                           wreg	equ	0xFE8
 10381                           indf1	equ	0xFE7
 10382                           postinc1	equ	0xFE6
 10383                           postdec1	equ	0xFE5
 10384                           fsr1h	equ	0xFE2
 10385                           fsr1l	equ	0xFE1
 10386                           indf2	equ	0xFDF
 10387                           postinc2	equ	0xFDE
 10388                           postdec2	equ	0xFDD
 10389                           fsr2h	equ	0xFDA
 10390                           fsr2l	equ	0xFD9
 10391                           status	equ	0xFD8
 10392                           
 10393 ;; *************** function _button_timer_interrupt *****************
 10394 ;; Defined at:
 10395 ;;		line 51 in file "../My_header\My_button.h"
 10396 ;; Parameters:    Size  Location     Type
 10397 ;;  bt              2    0[COMRAM] PTR struct button
 10398 ;;		 -> sw_B(4), sw_G(4), sw_R(4), 
 10399 ;;  sw_value        1    2[COMRAM] unsigned char 
 10400 ;; Auto vars:     Size  Location     Type
 10401 ;;		None
 10402 ;; Return value:  Size  Location     Type
 10403 ;;		None               void
 10404 ;; Registers used:
 10405 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10406 ;; Tracked objects:
 10407 ;;		On entry : 0/0
 10408 ;;		On exit  : 0/0
 10409 ;;		Unchanged: 0/0
 10410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10411 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10413 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10414 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10415 ;;Total ram usage:        5 bytes
 10416 ;; Hardware stack levels used:    1
 10417 ;; This function calls:
 10418 ;;		Nothing
 10419 ;; This function is called by:
 10420 ;;		_ISR
 10421 ;; This function uses a non-reentrant model
 10422 ;;
 10423                           
 10424                           	psect	text49
 10425  010E26                     __ptext49:
 10426                           	opt stack 0
 10427  010E26                     _button_timer_interrupt:
 10428                           	opt stack 21
 10429                           
 10430                           ;My_header\My_button.h: 52: if (sw_value) {
 10431                           
 10432                           ;incstack = 0
 10433  010E26  5003               	movf	button_timer_interrupt@sw_value,w,c
 10434  010E28  B4D8               	btfsc	status,2,c
 10435  010E2A  D098               	goto	i2l3506
 10436                           
 10437                           ;My_header\My_button.h: 53: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 10438  010E2C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10439  010E30  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10440  010E34  0E84               	movlw	132
 10441  010E36  18DE               	xorwf	postinc2,w,c
 10442  010E38  E10B               	bnz	i2l251
 10443  010E3A  0E03               	movlw	3
 10444  010E3C  18DE               	xorwf	postinc2,w,c
 10445  010E3E  A4D8               	btfss	status,2,c
 10446  010E40  D007               	goto	i2l251
 10447  010E42  EE20 F003          	lfsr	2,3
 10448  010E46  5001               	movf	button_timer_interrupt@bt,w,c
 10449  010E48  26D9               	addwf	fsr2l,f,c
 10450  010E4A  5002               	movf	button_timer_interrupt@bt+1,w,c
 10451  010E4C  22DA               	addwfc	fsr2h,f,c
 10452  010E4E  8EDF               	bsf	indf2,7,c
 10453  010E50                     i2l251:
 10454                           
 10455                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 10456  010E50  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10457  010E54  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10458  010E58  0EBC               	movlw	188
 10459  010E5A  18DE               	xorwf	postinc2,w,c
 10460  010E5C  E10B               	bnz	i2l252
 10461  010E5E  0E02               	movlw	2
 10462  010E60  18DE               	xorwf	postinc2,w,c
 10463  010E62  A4D8               	btfss	status,2,c
 10464  010E64  D007               	goto	i2l252
 10465  010E66  EE20 F003          	lfsr	2,3
 10466  010E6A  5001               	movf	button_timer_interrupt@bt,w,c
 10467  010E6C  26D9               	addwf	fsr2l,f,c
 10468  010E6E  5002               	movf	button_timer_interrupt@bt+1,w,c
 10469  010E70  22DA               	addwfc	fsr2h,f,c
 10470  010E72  8CDF               	bsf	indf2,6,c
 10471  010E74                     i2l252:
 10472                           
 10473                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 10474  010E74  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10475  010E78  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10476  010E7C  0EF4               	movlw	244
 10477  010E7E  18DE               	xorwf	postinc2,w,c
 10478  010E80  E10A               	bnz	i2l253
 10479  010E82  04DE               	decf	postinc2,w,c
 10480  010E84  A4D8               	btfss	status,2,c
 10481  010E86  D007               	goto	i2l253
 10482  010E88  EE20 F003          	lfsr	2,3
 10483  010E8C  5001               	movf	button_timer_interrupt@bt,w,c
 10484  010E8E  26D9               	addwf	fsr2l,f,c
 10485  010E90  5002               	movf	button_timer_interrupt@bt+1,w,c
 10486  010E92  22DA               	addwfc	fsr2h,f,c
 10487  010E94  8ADF               	bsf	indf2,5,c
 10488  010E96                     i2l253:
 10489                           
 10490                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 10491  010E96  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10492  010E9A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10493  010E9E  0E2C               	movlw	44
 10494  010EA0  18DE               	xorwf	postinc2,w,c
 10495  010EA2  E10A               	bnz	i2l254
 10496  010EA4  04DE               	decf	postinc2,w,c
 10497  010EA6  A4D8               	btfss	status,2,c
 10498  010EA8  D007               	goto	i2l254
 10499  010EAA  EE20 F003          	lfsr	2,3
 10500  010EAE  5001               	movf	button_timer_interrupt@bt,w,c
 10501  010EB0  26D9               	addwf	fsr2l,f,c
 10502  010EB2  5002               	movf	button_timer_interrupt@bt+1,w,c
 10503  010EB4  22DA               	addwfc	fsr2h,f,c
 10504  010EB6  88DF               	bsf	indf2,4,c
 10505  010EB8                     i2l254:
 10506                           
 10507                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 10508  010EB8  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10509  010EBC  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10510  010EC0  0E96               	movlw	150
 10511  010EC2  18DE               	xorwf	postinc2,w,c
 10512  010EC4  10DE               	iorwf	postinc2,w,c
 10513  010EC6  A4D8               	btfss	status,2,c
 10514  010EC8  D007               	goto	i2l255
 10515  010ECA  EE20 F003          	lfsr	2,3
 10516  010ECE  5001               	movf	button_timer_interrupt@bt,w,c
 10517  010ED0  26D9               	addwf	fsr2l,f,c
 10518  010ED2  5002               	movf	button_timer_interrupt@bt+1,w,c
 10519  010ED4  22DA               	addwfc	fsr2h,f,c
 10520  010ED6  86DF               	bsf	indf2,3,c
 10521  010ED8                     i2l255:
 10522                           
 10523                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 10524  010ED8  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10525  010EDC  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10526  010EE0  0E3C               	movlw	60
 10527  010EE2  18DE               	xorwf	postinc2,w,c
 10528  010EE4  10DE               	iorwf	postinc2,w,c
 10529  010EE6  A4D8               	btfss	status,2,c
 10530  010EE8  D007               	goto	i2l256
 10531  010EEA  EE20 F003          	lfsr	2,3
 10532  010EEE  5001               	movf	button_timer_interrupt@bt,w,c
 10533  010EF0  26D9               	addwf	fsr2l,f,c
 10534  010EF2  5002               	movf	button_timer_interrupt@bt+1,w,c
 10535  010EF4  22DA               	addwfc	fsr2h,f,c
 10536  010EF6  84DF               	bsf	indf2,2,c
 10537  010EF8                     i2l256:
 10538                           
 10539                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 10540  010EF8  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10541  010EFC  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10542  010F00  0E10               	movlw	16
 10543  010F02  18DE               	xorwf	postinc2,w,c
 10544  010F04  10DE               	iorwf	postinc2,w,c
 10545  010F06  A4D8               	btfss	status,2,c
 10546  010F08  D007               	goto	i2l257
 10547  010F0A  EE20 F003          	lfsr	2,3
 10548  010F0E  5001               	movf	button_timer_interrupt@bt,w,c
 10549  010F10  26D9               	addwf	fsr2l,f,c
 10550  010F12  5002               	movf	button_timer_interrupt@bt+1,w,c
 10551  010F14  22DA               	addwfc	fsr2h,f,c
 10552  010F16  82DF               	bsf	indf2,1,c
 10553  010F18                     i2l257:
 10554                           
 10555                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 10556  010F18  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10557  010F1C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10558  010F20  0E02               	movlw	2
 10559  010F22  18DE               	xorwf	postinc2,w,c
 10560  010F24  10DE               	iorwf	postinc2,w,c
 10561  010F26  A4D8               	btfss	status,2,c
 10562  010F28  D007               	goto	i2l258
 10563  010F2A  EE20 F003          	lfsr	2,3
 10564  010F2E  5001               	movf	button_timer_interrupt@bt,w,c
 10565  010F30  26D9               	addwf	fsr2l,f,c
 10566  010F32  5002               	movf	button_timer_interrupt@bt+1,w,c
 10567  010F34  22DA               	addwfc	fsr2h,f,c
 10568  010F36  80DF               	bsf	indf2,0,c
 10569  010F38                     i2l258:
 10570                           
 10571                           ;My_header\My_button.h: 61: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 10572  010F38  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10573  010F3C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10574  010F40  0E85               	movlw	133
 10575  010F42  5CDE               	subwf	postinc2,w,c
 10576  010F44  0E03               	movlw	3
 10577  010F46  58DE               	subwfb	postinc2,w,c
 10578  010F48  B0D8               	btfsc	status,0,c
 10579  010F4A  0012               	return	
 10580  010F4C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10581  010F50  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10582  010F54  2ADE               	incf	postinc2,f,c
 10583  010F56  0E00               	movlw	0
 10584  010F58  22DD               	addwfc	postdec2,f,c
 10585                           
 10586                           ;My_header\My_button.h: 62: } else {
 10587  010F5A  0012               	return	
 10588  010F5C                     i2l3506:
 10589                           
 10590                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 10591  010F5C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10592  010F60  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10593  010F64  0E84               	movlw	132
 10594  010F66  5CDE               	subwf	postinc2,w,c
 10595  010F68  0E03               	movlw	3
 10596  010F6A  58DE               	subwfb	postinc2,w,c
 10597  010F6C  A0D8               	btfss	status,0,c
 10598  010F6E  D008               	goto	i2l3510
 10599  010F70  EE20 F002          	lfsr	2,2
 10600  010F74  5001               	movf	button_timer_interrupt@bt,w,c
 10601  010F76  26D9               	addwf	fsr2l,f,c
 10602  010F78  5002               	movf	button_timer_interrupt@bt+1,w,c
 10603  010F7A  22DA               	addwfc	fsr2h,f,c
 10604  010F7C  8EDF               	bsf	indf2,7,c
 10605  010F7E  D082               	goto	i2l3538
 10606  010F80                     i2l3510:
 10607                           
 10608                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 10609  010F80  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10610  010F84  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10611  010F88  0EBC               	movlw	188
 10612  010F8A  5CDE               	subwf	postinc2,w,c
 10613  010F8C  0E02               	movlw	2
 10614  010F8E  58DE               	subwfb	postinc2,w,c
 10615  010F90  A0D8               	btfss	status,0,c
 10616  010F92  D008               	goto	i2l3514
 10617  010F94  EE20 F002          	lfsr	2,2
 10618  010F98  5001               	movf	button_timer_interrupt@bt,w,c
 10619  010F9A  26D9               	addwf	fsr2l,f,c
 10620  010F9C  5002               	movf	button_timer_interrupt@bt+1,w,c
 10621  010F9E  22DA               	addwfc	fsr2h,f,c
 10622  010FA0  8CDF               	bsf	indf2,6,c
 10623  010FA2  D070               	goto	i2l3538
 10624  010FA4                     i2l3514:
 10625                           
 10626                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 10627  010FA4  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10628  010FA8  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10629  010FAC  0EF4               	movlw	244
 10630  010FAE  5CDE               	subwf	postinc2,w,c
 10631  010FB0  0E01               	movlw	1
 10632  010FB2  58DE               	subwfb	postinc2,w,c
 10633  010FB4  A0D8               	btfss	status,0,c
 10634  010FB6  D008               	goto	i2l3518
 10635  010FB8  EE20 F002          	lfsr	2,2
 10636  010FBC  5001               	movf	button_timer_interrupt@bt,w,c
 10637  010FBE  26D9               	addwf	fsr2l,f,c
 10638  010FC0  5002               	movf	button_timer_interrupt@bt+1,w,c
 10639  010FC2  22DA               	addwfc	fsr2h,f,c
 10640  010FC4  8ADF               	bsf	indf2,5,c
 10641  010FC6  D05E               	goto	i2l3538
 10642  010FC8                     i2l3518:
 10643                           
 10644                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 10645  010FC8  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10646  010FCC  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10647  010FD0  0E2C               	movlw	44
 10648  010FD2  5CDE               	subwf	postinc2,w,c
 10649  010FD4  0E01               	movlw	1
 10650  010FD6  58DE               	subwfb	postinc2,w,c
 10651  010FD8  A0D8               	btfss	status,0,c
 10652  010FDA  D008               	goto	i2l3522
 10653  010FDC  EE20 F002          	lfsr	2,2
 10654  010FE0  5001               	movf	button_timer_interrupt@bt,w,c
 10655  010FE2  26D9               	addwf	fsr2l,f,c
 10656  010FE4  5002               	movf	button_timer_interrupt@bt+1,w,c
 10657  010FE6  22DA               	addwfc	fsr2h,f,c
 10658  010FE8  88DF               	bsf	indf2,4,c
 10659  010FEA  D04C               	goto	i2l3538
 10660  010FEC                     i2l3522:
 10661                           
 10662                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 10663  010FEC  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10664  010FF0  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10665  010FF4  0E01               	movlw	1
 10666  010FF6  50DB               	movf	plusw2,w,c
 10667  010FF8  E104               	bnz	i2u335_40
 10668  010FFA  0E96               	movlw	150
 10669  010FFC  5CDE               	subwf	postinc2,w,c
 10670  010FFE  A0D8               	btfss	status,0,c
 10671  011000  D008               	goto	i2l3526
 10672  011002                     i2u335_40:
 10673  011002  EE20 F002          	lfsr	2,2
 10674  011006  5001               	movf	button_timer_interrupt@bt,w,c
 10675  011008  26D9               	addwf	fsr2l,f,c
 10676  01100A  5002               	movf	button_timer_interrupt@bt+1,w,c
 10677  01100C  22DA               	addwfc	fsr2h,f,c
 10678  01100E  86DF               	bsf	indf2,3,c
 10679  011010  D039               	goto	i2l3538
 10680  011012                     i2l3526:
 10681                           
 10682                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 10683  011012  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10684  011016  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10685  01101A  0E01               	movlw	1
 10686  01101C  50DB               	movf	plusw2,w,c
 10687  01101E  E104               	bnz	i2u336_40
 10688  011020  0E3C               	movlw	60
 10689  011022  5CDE               	subwf	postinc2,w,c
 10690  011024  A0D8               	btfss	status,0,c
 10691  011026  D008               	goto	i2l3530
 10692  011028                     i2u336_40:
 10693  011028  EE20 F002          	lfsr	2,2
 10694  01102C  5001               	movf	button_timer_interrupt@bt,w,c
 10695  01102E  26D9               	addwf	fsr2l,f,c
 10696  011030  5002               	movf	button_timer_interrupt@bt+1,w,c
 10697  011032  22DA               	addwfc	fsr2h,f,c
 10698  011034  84DF               	bsf	indf2,2,c
 10699  011036  D026               	goto	i2l3538
 10700  011038                     i2l3530:
 10701                           
 10702                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 10703  011038  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10704  01103C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10705  011040  0E01               	movlw	1
 10706  011042  50DB               	movf	plusw2,w,c
 10707  011044  E104               	bnz	i2u337_40
 10708  011046  0E10               	movlw	16
 10709  011048  5CDE               	subwf	postinc2,w,c
 10710  01104A  A0D8               	btfss	status,0,c
 10711  01104C  D008               	goto	i2l3534
 10712  01104E                     i2u337_40:
 10713  01104E  EE20 F002          	lfsr	2,2
 10714  011052  5001               	movf	button_timer_interrupt@bt,w,c
 10715  011054  26D9               	addwf	fsr2l,f,c
 10716  011056  5002               	movf	button_timer_interrupt@bt+1,w,c
 10717  011058  22DA               	addwfc	fsr2h,f,c
 10718  01105A  82DF               	bsf	indf2,1,c
 10719  01105C  D013               	goto	i2l3538
 10720  01105E                     i2l3534:
 10721                           
 10722                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 10723  01105E  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10724  011062  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10725  011066  0E01               	movlw	1
 10726  011068  50DB               	movf	plusw2,w,c
 10727  01106A  E104               	bnz	i2u338_40
 10728  01106C  0E02               	movlw	2
 10729  01106E  5CDE               	subwf	postinc2,w,c
 10730  011070  A0D8               	btfss	status,0,c
 10731  011072  D008               	goto	i2l3538
 10732  011074                     i2u338_40:
 10733  011074  EE20 F002          	lfsr	2,2
 10734  011078  5001               	movf	button_timer_interrupt@bt,w,c
 10735  01107A  26D9               	addwf	fsr2l,f,c
 10736  01107C  5002               	movf	button_timer_interrupt@bt+1,w,c
 10737  01107E  22DA               	addwfc	fsr2h,f,c
 10738  011080  80DF               	bsf	indf2,0,c
 10739  011082  D000               	goto	i2l3538
 10740  011084                     i2l3538:
 10741                           
 10742                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
 10743  011084  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10744  011088  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10745  01108C  0E00               	movlw	0
 10746  01108E  6EDE               	movwf	postinc2,c
 10747  011090  0E00               	movlw	0
 10748  011092  6EDD               	movwf	postdec2,c
 10749                           
 10750                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
 10751  011094  EE20 F002          	lfsr	2,2
 10752  011098  5001               	movf	button_timer_interrupt@bt,w,c
 10753  01109A  26D9               	addwf	fsr2l,f,c
 10754  01109C  5002               	movf	button_timer_interrupt@bt+1,w,c
 10755  01109E  22DA               	addwfc	fsr2h,f,c
 10756  0110A0  0EFF               	movlw	255
 10757  0110A2  16DE               	andwf	postinc2,f,c
 10758  0110A4  0E00               	movlw	0
 10759  0110A6  16DD               	andwf	postdec2,f,c
 10760  0110A8  0012               	return	
 10761  0110AA  0012               	return		;funcret
 10762  0110AC                     __end_of_button_timer_interrupt:
 10763                           	opt stack 0
 10764                           pclatu	equ	0xFFB
 10765                           pclath	equ	0xFFA
 10766                           tblptru	equ	0xFF8
 10767                           tblptrh	equ	0xFF7
 10768                           tblptrl	equ	0xFF6
 10769                           tablat	equ	0xFF5
 10770                           prodh	equ	0xFF4
 10771                           prodl	equ	0xFF3
 10772                           intcon	equ	0xFF2
 10773                           intcon2	equ	0xFF1
 10774                           postinc0	equ	0xFEE
 10775                           fsr0h	equ	0xFEA
 10776                           fsr0l	equ	0xFE9
 10777                           wreg	equ	0xFE8
 10778                           indf1	equ	0xFE7
 10779                           postinc1	equ	0xFE6
 10780                           postdec1	equ	0xFE5
 10781                           fsr1h	equ	0xFE2
 10782                           fsr1l	equ	0xFE1
 10783                           indf2	equ	0xFDF
 10784                           postinc2	equ	0xFDE
 10785                           postdec2	equ	0xFDD
 10786                           plusw2	equ	0xFDB
 10787                           fsr2h	equ	0xFDA
 10788                           fsr2l	equ	0xFD9
 10789                           status	equ	0xFD8
 10790                           
 10791 ;; *************** function _UART_ISR *****************
 10792 ;; Defined at:
 10793 ;;		line 208 in file "../My_header\My_header.h"
 10794 ;; Parameters:    Size  Location     Type
 10795 ;;		None
 10796 ;; Auto vars:     Size  Location     Type
 10797 ;;  ascii           1   15[COMRAM] unsigned char 
 10798 ;; Return value:  Size  Location     Type
 10799 ;;		None               void
 10800 ;; Registers used:
 10801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10802 ;; Tracked objects:
 10803 ;;		On entry : 0/0
 10804 ;;		On exit  : 0/0
 10805 ;;		Unchanged: 0/0
 10806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10810 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10811 ;;Total ram usage:        1 bytes
 10812 ;; Hardware stack levels used:    1
 10813 ;; Hardware stack levels required when called:    2
 10814 ;; This function calls:
 10815 ;;		i2_ringbuf_num
 10816 ;;		i2_ringbuf_pop
 10817 ;;		i2_ringbuf_put
 10818 ;; This function is called by:
 10819 ;;		_ISR
 10820 ;; This function uses a non-reentrant model
 10821 ;;
 10822                           
 10823                           	psect	text50
 10824  01262A                     __ptext50:
 10825                           	opt stack 0
 10826  01262A                     _UART_ISR:
 10827                           	opt stack 19
 10828                           
 10829                           ;My_header\My_header.h: 209: if (PIE1bits.TXIE && PIR1bits.TXIF) {
 10830                           
 10831                           ;incstack = 0
 10832  01262A  B89D               	btfsc	3997,4,c	;volatile
 10833  01262C  A89E               	btfss	3998,4,c	;volatile
 10834  01262E  D014               	goto	i2l209
 10835                           
 10836                           ;My_header\My_header.h: 210: if (ringbuf_num(&tx_buf)) {
 10837  012630  0ED2               	movlw	low _tx_buf
 10838  012632  6E01               	movwf	i2ringbuf_num@rb,c
 10839  012634  0E01               	movlw	high _tx_buf
 10840  012636  6E02               	movwf	i2ringbuf_num@rb+1,c
 10841  012638  EC53  F08D         	call	i2_ringbuf_num	;wreg free
 10842  01263C  5001               	movf	?i2_ringbuf_num,w,c
 10843  01263E  1002               	iorwf	?i2_ringbuf_num+1,w,c
 10844  012640  B4D8               	btfsc	status,2,c
 10845  012642  D008               	goto	i2l210
 10846                           
 10847                           ;My_header\My_header.h: 211: TXREG1 = ringbuf_pop(&tx_buf);
 10848  012644  0ED2               	movlw	low _tx_buf
 10849  012646  6E09               	movwf	i2ringbuf_pop@rb,c
 10850  012648  0E01               	movlw	high _tx_buf
 10851  01264A  6E0A               	movwf	i2ringbuf_pop@rb+1,c
 10852  01264C  EC68  F08E         	call	i2_ringbuf_pop	;wreg free
 10853  012650  6EAE               	movwf	4014,c	;volatile
 10854                           
 10855                           ;My_header\My_header.h: 212: } else {
 10856  012652  D002               	goto	i2l209
 10857  012654                     i2l210:
 10858                           
 10859                           ;My_header\My_header.h: 213: PIE1bits.TXIE = 0;
 10860  012654  989D               	bcf	3997,4,c	;volatile
 10861  012656  D000               	goto	i2l209
 10862  012658                     i2l209:
 10863                           
 10864                           ;My_header\My_header.h: 214: }
 10865                           ;My_header\My_header.h: 215: }
 10866                           ;My_header\My_header.h: 216: if (PIR1bits.RCIF && PIE1bits.RCIE) {
 10867  012658  AA9E               	btfss	3998,5,c	;volatile
 10868  01265A  0012               	return	
 10869  01265C  AA9D               	btfss	3997,5,c	;volatile
 10870  01265E  0012               	return	
 10871                           
 10872                           ;My_header\My_header.h: 217: char ascii = RCREG1;
 10873  012660  CFAF F010          	movff	4015,UART_ISR@ascii	;volatile
 10874                           
 10875                           ;My_header\My_header.h: 218: ringbuf_put(&rx_buf, ascii);
 10876  012664  0ECA               	movlw	low _rx_buf
 10877  012666  6E09               	movwf	i2ringbuf_put@rb,c
 10878  012668  0E01               	movlw	high _rx_buf
 10879  01266A  6E0A               	movwf	i2ringbuf_put@rb+1,c
 10880  01266C  C010  F00B         	movff	UART_ISR@ascii,i2ringbuf_put@asciicode
 10881  012670  ECB2  F08D         	call	i2_ringbuf_put	;wreg free
 10882  012674  0012               	return	
 10883  012676  0012               	return		;funcret
 10884  012678                     __end_of_UART_ISR:
 10885                           	opt stack 0
 10886                           pclatu	equ	0xFFB
 10887                           pclath	equ	0xFFA
 10888                           tblptru	equ	0xFF8
 10889                           tblptrh	equ	0xFF7
 10890                           tblptrl	equ	0xFF6
 10891                           tablat	equ	0xFF5
 10892                           prodh	equ	0xFF4
 10893                           prodl	equ	0xFF3
 10894                           intcon	equ	0xFF2
 10895                           intcon2	equ	0xFF1
 10896                           postinc0	equ	0xFEE
 10897                           fsr0h	equ	0xFEA
 10898                           fsr0l	equ	0xFE9
 10899                           wreg	equ	0xFE8
 10900                           indf1	equ	0xFE7
 10901                           postinc1	equ	0xFE6
 10902                           postdec1	equ	0xFE5
 10903                           fsr1h	equ	0xFE2
 10904                           fsr1l	equ	0xFE1
 10905                           indf2	equ	0xFDF
 10906                           postinc2	equ	0xFDE
 10907                           postdec2	equ	0xFDD
 10908                           plusw2	equ	0xFDB
 10909                           fsr2h	equ	0xFDA
 10910                           fsr2l	equ	0xFD9
 10911                           status	equ	0xFD8
 10912                           
 10913 ;; *************** function i2_ringbuf_put *****************
 10914 ;; Defined at:
 10915 ;;		line 39 in file "../My_header\My_ringbuf.h"
 10916 ;; Parameters:    Size  Location     Type
 10917 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 10918 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
 10919 ;;  asciicode       1   10[COMRAM] unsigned char 
 10920 ;; Auto vars:     Size  Location     Type
 10921 ;;		None
 10922 ;; Return value:  Size  Location     Type
 10923 ;;		None               void
 10924 ;; Registers used:
 10925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10926 ;; Tracked objects:
 10927 ;;		On entry : 0/0
 10928 ;;		On exit  : 0/0
 10929 ;;		Unchanged: 0/0
 10930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10931 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10933 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10934 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10935 ;;Total ram usage:        7 bytes
 10936 ;; Hardware stack levels used:    1
 10937 ;; Hardware stack levels required when called:    1
 10938 ;; This function calls:
 10939 ;;		i2_ringbuf_num
 10940 ;; This function is called by:
 10941 ;;		_UART_ISR
 10942 ;; This function uses a non-reentrant model
 10943 ;;
 10944                           
 10945                           	psect	text51
 10946  011B64                     __ptext51:
 10947                           	opt stack 0
 10948  011B64                     i2_ringbuf_put:
 10949                           	opt stack 19
 10950                           
 10951                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
 10952                           
 10953                           ;incstack = 0
 10954  011B64  C009  F001         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
 10955  011B68  C00A  F002         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
 10956  011B6C  EC53  F08D         	call	i2_ringbuf_num	;wreg free
 10957  011B70  EE20 F002          	lfsr	2,2
 10958  011B74  5009               	movf	i2ringbuf_put@rb,w,c
 10959  011B76  26D9               	addwf	fsr2l,f,c
 10960  011B78  500A               	movf	i2ringbuf_put@rb+1,w,c
 10961  011B7A  22DA               	addwfc	fsr2h,f,c
 10962  011B7C  50DE               	movf	postinc2,w,c
 10963  011B7E  5C01               	subwf	?i2_ringbuf_num,w,c
 10964  011B80  50DE               	movf	postinc2,w,c
 10965  011B82  5802               	subwfb	?i2_ringbuf_num+1,w,c
 10966  011B84  B0D8               	btfsc	status,0,c
 10967  011B86  0012               	return	
 10968                           
 10969                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
 10970  011B88  EE20 F004          	lfsr	2,4
 10971  011B8C  5009               	movf	i2ringbuf_put@rb,w,c
 10972  011B8E  26D9               	addwf	fsr2l,f,c
 10973  011B90  500A               	movf	i2ringbuf_put@rb+1,w,c
 10974  011B92  22DA               	addwfc	fsr2h,f,c
 10975  011B94  CFDE F00C          	movff	postinc2,??i2_ringbuf_put
 10976  011B98  CFDD F00D          	movff	postdec2,??i2_ringbuf_put+1
 10977  011B9C  C009  FFD9         	movff	i2ringbuf_put@rb,fsr2l
 10978  011BA0  C00A  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
 10979  011BA4  CFDE F00E          	movff	postinc2,??i2_ringbuf_put+2
 10980  011BA8  CFDD F00F          	movff	postdec2,??i2_ringbuf_put+3
 10981  011BAC  500C               	movf	??i2_ringbuf_put,w,c
 10982  011BAE  240E               	addwf	??i2_ringbuf_put+2,w,c
 10983  011BB0  6ED9               	movwf	fsr2l,c
 10984  011BB2  500D               	movf	??i2_ringbuf_put+1,w,c
 10985  011BB4  200F               	addwfc	??i2_ringbuf_put+3,w,c
 10986  011BB6  6EDA               	movwf	fsr2h,c
 10987  011BB8  C00B  FFDF         	movff	i2ringbuf_put@asciicode,indf2
 10988                           
 10989                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
 10990  011BBC  EE20 F002          	lfsr	2,2
 10991  011BC0  5009               	movf	i2ringbuf_put@rb,w,c
 10992  011BC2  26D9               	addwf	fsr2l,f,c
 10993  011BC4  500A               	movf	i2ringbuf_put@rb+1,w,c
 10994  011BC6  22DA               	addwfc	fsr2h,f,c
 10995  011BC8  EE10 F004          	lfsr	1,4
 10996  011BCC  5009               	movf	i2ringbuf_put@rb,w,c
 10997  011BCE  26E1               	addwf	fsr1l,f,c
 10998  011BD0  500A               	movf	i2ringbuf_put@rb+1,w,c
 10999  011BD2  22E2               	addwfc	fsr1h,f,c
 11000  011BD4  CFE6 F00E          	movff	postinc1,??i2_ringbuf_put+2
 11001  011BD8  CFE5 F00F          	movff	postdec1,??i2_ringbuf_put+3
 11002  011BDC  0E01               	movlw	1
 11003  011BDE  260E               	addwf	??i2_ringbuf_put+2,f,c
 11004  011BE0  0E00               	movlw	0
 11005  011BE2  220F               	addwfc	??i2_ringbuf_put+3,f,c
 11006  011BE4  50DE               	movf	postinc2,w,c
 11007  011BE6  5C0E               	subwf	??i2_ringbuf_put+2,w,c
 11008  011BE8  50DE               	movf	postinc2,w,c
 11009  011BEA  580F               	subwfb	??i2_ringbuf_put+3,w,c
 11010  011BEC  B0D8               	btfsc	status,0,c
 11011  011BEE  D00A               	goto	i2l4772
 11012  011BF0  EE20 F004          	lfsr	2,4
 11013  011BF4  5009               	movf	i2ringbuf_put@rb,w,c
 11014  011BF6  26D9               	addwf	fsr2l,f,c
 11015  011BF8  500A               	movf	i2ringbuf_put@rb+1,w,c
 11016  011BFA  22DA               	addwfc	fsr2h,f,c
 11017  011BFC  2ADE               	incf	postinc2,f,c
 11018  011BFE  0E00               	movlw	0
 11019  011C00  22DD               	addwfc	postdec2,f,c
 11020  011C02  0012               	return	
 11021  011C04                     i2l4772:
 11022                           
 11023                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
 11024  011C04  EE20 F004          	lfsr	2,4
 11025  011C08  5009               	movf	i2ringbuf_put@rb,w,c
 11026  011C0A  26D9               	addwf	fsr2l,f,c
 11027  011C0C  500A               	movf	i2ringbuf_put@rb+1,w,c
 11028  011C0E  22DA               	addwfc	fsr2h,f,c
 11029  011C10  0E00               	movlw	0
 11030  011C12  6EDE               	movwf	postinc2,c
 11031  011C14  0E00               	movlw	0
 11032  011C16  6EDD               	movwf	postdec2,c
 11033  011C18  0012               	return	
 11034  011C1A  0012               	return		;funcret
 11035  011C1C                     __end_ofi2_ringbuf_put:
 11036                           	opt stack 0
 11037                           pclatu	equ	0xFFB
 11038                           pclath	equ	0xFFA
 11039                           tblptru	equ	0xFF8
 11040                           tblptrh	equ	0xFF7
 11041                           tblptrl	equ	0xFF6
 11042                           tablat	equ	0xFF5
 11043                           prodh	equ	0xFF4
 11044                           prodl	equ	0xFF3
 11045                           intcon	equ	0xFF2
 11046                           intcon2	equ	0xFF1
 11047                           postinc0	equ	0xFEE
 11048                           fsr0h	equ	0xFEA
 11049                           fsr0l	equ	0xFE9
 11050                           wreg	equ	0xFE8
 11051                           indf1	equ	0xFE7
 11052                           postinc1	equ	0xFE6
 11053                           postdec1	equ	0xFE5
 11054                           fsr1h	equ	0xFE2
 11055                           fsr1l	equ	0xFE1
 11056                           indf2	equ	0xFDF
 11057                           postinc2	equ	0xFDE
 11058                           postdec2	equ	0xFDD
 11059                           plusw2	equ	0xFDB
 11060                           fsr2h	equ	0xFDA
 11061                           fsr2l	equ	0xFD9
 11062                           status	equ	0xFD8
 11063                           
 11064 ;; *************** function i2_ringbuf_pop *****************
 11065 ;; Defined at:
 11066 ;;		line 64 in file "../My_header\My_ringbuf.h"
 11067 ;; Parameters:    Size  Location     Type
 11068 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 11069 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
 11070 ;; Auto vars:     Size  Location     Type
 11071 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
 11072 ;; Return value:  Size  Location     Type
 11073 ;;                  1    wreg      unsigned char 
 11074 ;; Registers used:
 11075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11076 ;; Tracked objects:
 11077 ;;		On entry : 0/0
 11078 ;;		On exit  : 0/0
 11079 ;;		Unchanged: 0/0
 11080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11081 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11083 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11084 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11085 ;;Total ram usage:        7 bytes
 11086 ;; Hardware stack levels used:    1
 11087 ;; Hardware stack levels required when called:    1
 11088 ;; This function calls:
 11089 ;;		i2_ringbuf_num
 11090 ;; This function is called by:
 11091 ;;		_UART_ISR
 11092 ;; This function uses a non-reentrant model
 11093 ;;
 11094                           
 11095                           	psect	text52
 11096  011CD0                     __ptext52:
 11097                           	opt stack 0
 11098  011CD0                     i2_ringbuf_pop:
 11099                           	opt stack 19
 11100                           
 11101                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
 11102                           
 11103                           ;incstack = 0
 11104  011CD0  C009  F001         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 11105  011CD4  C00A  F002         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 11106  011CD8  EC53  F08D         	call	i2_ringbuf_num	;wreg free
 11107  011CDC  5001               	movf	?i2_ringbuf_num,w,c
 11108  011CDE  1002               	iorwf	?i2_ringbuf_num+1,w,c
 11109  011CE0  B4D8               	btfsc	status,2,c
 11110  011CE2  D04B               	goto	i2l4790
 11111                           
 11112                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
 11113  011CE4  EE20 F006          	lfsr	2,6
 11114  011CE8  5009               	movf	i2ringbuf_pop@rb,w,c
 11115  011CEA  26D9               	addwf	fsr2l,f,c
 11116  011CEC  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11117  011CEE  22DA               	addwfc	fsr2h,f,c
 11118  011CF0  CFDE F00B          	movff	postinc2,??i2_ringbuf_pop
 11119  011CF4  CFDD F00C          	movff	postdec2,??i2_ringbuf_pop+1
 11120  011CF8  C009  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 11121  011CFC  C00A  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 11122  011D00  CFDE F00D          	movff	postinc2,??i2_ringbuf_pop+2
 11123  011D04  CFDD F00E          	movff	postdec2,??i2_ringbuf_pop+3
 11124  011D08  500B               	movf	??i2_ringbuf_pop,w,c
 11125  011D0A  240D               	addwf	??i2_ringbuf_pop+2,w,c
 11126  011D0C  6ED9               	movwf	fsr2l,c
 11127  011D0E  500C               	movf	??i2_ringbuf_pop+1,w,c
 11128  011D10  200E               	addwfc	??i2_ringbuf_pop+3,w,c
 11129  011D12  6EDA               	movwf	fsr2h,c
 11130  011D14  50DF               	movf	indf2,w,c
 11131  011D16  6E0F               	movwf	i2ringbuf_pop@ret,c
 11132                           
 11133                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
 11134  011D18  EE20 F002          	lfsr	2,2
 11135  011D1C  5009               	movf	i2ringbuf_pop@rb,w,c
 11136  011D1E  26D9               	addwf	fsr2l,f,c
 11137  011D20  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11138  011D22  22DA               	addwfc	fsr2h,f,c
 11139  011D24  EE10 F006          	lfsr	1,6
 11140  011D28  5009               	movf	i2ringbuf_pop@rb,w,c
 11141  011D2A  26E1               	addwf	fsr1l,f,c
 11142  011D2C  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11143  011D2E  22E2               	addwfc	fsr1h,f,c
 11144  011D30  CFE6 F00D          	movff	postinc1,??i2_ringbuf_pop+2
 11145  011D34  CFE5 F00E          	movff	postdec1,??i2_ringbuf_pop+3
 11146  011D38  0E01               	movlw	1
 11147  011D3A  260D               	addwf	??i2_ringbuf_pop+2,f,c
 11148  011D3C  0E00               	movlw	0
 11149  011D3E  220E               	addwfc	??i2_ringbuf_pop+3,f,c
 11150  011D40  50DE               	movf	postinc2,w,c
 11151  011D42  5C0D               	subwf	??i2_ringbuf_pop+2,w,c
 11152  011D44  50DE               	movf	postinc2,w,c
 11153  011D46  580E               	subwfb	??i2_ringbuf_pop+3,w,c
 11154  011D48  B0D8               	btfsc	status,0,c
 11155  011D4A  D00A               	goto	i2l4782
 11156                           
 11157                           ;My_header\My_ringbuf.h: 68: rb->tail++;
 11158  011D4C  EE20 F006          	lfsr	2,6
 11159  011D50  5009               	movf	i2ringbuf_pop@rb,w,c
 11160  011D52  26D9               	addwf	fsr2l,f,c
 11161  011D54  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11162  011D56  22DA               	addwfc	fsr2h,f,c
 11163  011D58  2ADE               	incf	postinc2,f,c
 11164  011D5A  0E00               	movlw	0
 11165  011D5C  22DD               	addwfc	postdec2,f,c
 11166                           
 11167                           ;My_header\My_ringbuf.h: 69: } else {
 11168  011D5E  D00B               	goto	i2l4784
 11169  011D60                     i2l4782:
 11170                           
 11171                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
 11172  011D60  EE20 F006          	lfsr	2,6
 11173  011D64  5009               	movf	i2ringbuf_pop@rb,w,c
 11174  011D66  26D9               	addwf	fsr2l,f,c
 11175  011D68  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11176  011D6A  22DA               	addwfc	fsr2h,f,c
 11177  011D6C  0E00               	movlw	0
 11178  011D6E  6EDE               	movwf	postinc2,c
 11179  011D70  0E00               	movlw	0
 11180  011D72  6EDD               	movwf	postdec2,c
 11181  011D74  D000               	goto	i2l4784
 11182  011D76                     i2l4784:
 11183                           
 11184                           ;My_header\My_ringbuf.h: 71: }
 11185                           ;My_header\My_ringbuf.h: 72: return ret;
 11186  011D76  500F               	movf	i2ringbuf_pop@ret,w,c
 11187                           
 11188                           ;My_header\My_ringbuf.h: 73: } else {
 11189  011D78  0012               	return	
 11190  011D7A                     i2l4790:
 11191                           
 11192                           ;My_header\My_ringbuf.h: 74: return 0;
 11193  011D7A  0E00               	movlw	0
 11194  011D7C  0012               	return	
 11195  011D7E  0012               	return		;funcret
 11196  011D80                     __end_ofi2_ringbuf_pop:
 11197                           	opt stack 0
 11198                           pclatu	equ	0xFFB
 11199                           pclath	equ	0xFFA
 11200                           tblptru	equ	0xFF8
 11201                           tblptrh	equ	0xFF7
 11202                           tblptrl	equ	0xFF6
 11203                           tablat	equ	0xFF5
 11204                           prodh	equ	0xFF4
 11205                           prodl	equ	0xFF3
 11206                           intcon	equ	0xFF2
 11207                           intcon2	equ	0xFF1
 11208                           postinc0	equ	0xFEE
 11209                           fsr0h	equ	0xFEA
 11210                           fsr0l	equ	0xFE9
 11211                           wreg	equ	0xFE8
 11212                           indf1	equ	0xFE7
 11213                           postinc1	equ	0xFE6
 11214                           postdec1	equ	0xFE5
 11215                           fsr1h	equ	0xFE2
 11216                           fsr1l	equ	0xFE1
 11217                           indf2	equ	0xFDF
 11218                           postinc2	equ	0xFDE
 11219                           postdec2	equ	0xFDD
 11220                           plusw2	equ	0xFDB
 11221                           fsr2h	equ	0xFDA
 11222                           fsr2l	equ	0xFD9
 11223                           status	equ	0xFD8
 11224                           
 11225 ;; *************** function i2_ringbuf_num *****************
 11226 ;; Defined at:
 11227 ;;		line 31 in file "../My_header\My_ringbuf.h"
 11228 ;; Parameters:    Size  Location     Type
 11229 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 11230 ;;		 -> rx_loop@comm_buf(8), rx_buf(8), tx_buf(8), 
 11231 ;; Auto vars:     Size  Location     Type
 11232 ;;		None
 11233 ;; Return value:  Size  Location     Type
 11234 ;;                  2    0[COMRAM] unsigned int 
 11235 ;; Registers used:
 11236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11237 ;; Tracked objects:
 11238 ;;		On entry : 0/0
 11239 ;;		On exit  : 0/0
 11240 ;;		Unchanged: 0/0
 11241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11244 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11245 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11246 ;;Total ram usage:        8 bytes
 11247 ;; Hardware stack levels used:    1
 11248 ;; This function calls:
 11249 ;;		Nothing
 11250 ;; This function is called by:
 11251 ;;		_UART_ISR
 11252 ;;		i2_ringbuf_put
 11253 ;;		i2_ringbuf_pop
 11254 ;; This function uses a non-reentrant model
 11255 ;;
 11256                           
 11257                           	psect	text53
 11258  011AA6                     __ptext53:
 11259                           	opt stack 0
 11260  011AA6                     i2_ringbuf_num:
 11261                           	opt stack 19
 11262                           
 11263                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
 11264                           
 11265                           ;incstack = 0
 11266  011AA6  EE20 F006          	lfsr	2,6
 11267  011AAA  5001               	movf	i2ringbuf_num@rb,w,c
 11268  011AAC  26D9               	addwf	fsr2l,f,c
 11269  011AAE  5002               	movf	i2ringbuf_num@rb+1,w,c
 11270  011AB0  22DA               	addwfc	fsr2h,f,c
 11271  011AB2  EE10 F004          	lfsr	1,4
 11272  011AB6  5001               	movf	i2ringbuf_num@rb,w,c
 11273  011AB8  26E1               	addwf	fsr1l,f,c
 11274  011ABA  5002               	movf	i2ringbuf_num@rb+1,w,c
 11275  011ABC  22E2               	addwfc	fsr1h,f,c
 11276  011ABE  50DE               	movf	postinc2,w,c
 11277  011AC0  5CE6               	subwf	postinc1,w,c
 11278  011AC2  50DE               	movf	postinc2,w,c
 11279  011AC4  58E6               	subwfb	postinc1,w,c
 11280  011AC6  A0D8               	btfss	status,0,c
 11281  011AC8  D01F               	goto	i2l4472
 11282                           
 11283                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
 11284  011ACA  EE20 F004          	lfsr	2,4
 11285  011ACE  5001               	movf	i2ringbuf_num@rb,w,c
 11286  011AD0  26D9               	addwf	fsr2l,f,c
 11287  011AD2  5002               	movf	i2ringbuf_num@rb+1,w,c
 11288  011AD4  22DA               	addwfc	fsr2h,f,c
 11289  011AD6  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 11290  011ADA  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 11291  011ADE  EE20 F006          	lfsr	2,6
 11292  011AE2  5001               	movf	i2ringbuf_num@rb,w,c
 11293  011AE4  26D9               	addwf	fsr2l,f,c
 11294  011AE6  5002               	movf	i2ringbuf_num@rb+1,w,c
 11295  011AE8  22DA               	addwfc	fsr2h,f,c
 11296  011AEA  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 11297  011AEE  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 11298  011AF2  1E05               	comf	??i2_ringbuf_num+2,f,c
 11299  011AF4  1E06               	comf	??i2_ringbuf_num+3,f,c
 11300  011AF6  4A05               	infsnz	??i2_ringbuf_num+2,f,c
 11301  011AF8  2A06               	incf	??i2_ringbuf_num+3,f,c
 11302  011AFA  5003               	movf	??i2_ringbuf_num,w,c
 11303  011AFC  2405               	addwf	??i2_ringbuf_num+2,w,c
 11304  011AFE  6E01               	movwf	?i2_ringbuf_num,c
 11305  011B00  5004               	movf	??i2_ringbuf_num+1,w,c
 11306  011B02  2006               	addwfc	??i2_ringbuf_num+3,w,c
 11307  011B04  6E02               	movwf	?i2_ringbuf_num+1,c
 11308                           
 11309                           ;My_header\My_ringbuf.h: 34: } else {
 11310  011B06  0012               	return	
 11311  011B08                     i2l4472:
 11312                           
 11313                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
 11314  011B08  EE20 F004          	lfsr	2,4
 11315  011B0C  5001               	movf	i2ringbuf_num@rb,w,c
 11316  011B0E  26D9               	addwf	fsr2l,f,c
 11317  011B10  5002               	movf	i2ringbuf_num@rb+1,w,c
 11318  011B12  22DA               	addwfc	fsr2h,f,c
 11319  011B14  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 11320  011B18  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 11321  011B1C  EE20 F002          	lfsr	2,2
 11322  011B20  5001               	movf	i2ringbuf_num@rb,w,c
 11323  011B22  26D9               	addwf	fsr2l,f,c
 11324  011B24  5002               	movf	i2ringbuf_num@rb+1,w,c
 11325  011B26  22DA               	addwfc	fsr2h,f,c
 11326  011B28  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 11327  011B2C  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 11328  011B30  EE20 F006          	lfsr	2,6
 11329  011B34  5001               	movf	i2ringbuf_num@rb,w,c
 11330  011B36  26D9               	addwf	fsr2l,f,c
 11331  011B38  5002               	movf	i2ringbuf_num@rb+1,w,c
 11332  011B3A  22DA               	addwfc	fsr2h,f,c
 11333  011B3C  CFDE F007          	movff	postinc2,??i2_ringbuf_num+4
 11334  011B40  CFDD F008          	movff	postdec2,??i2_ringbuf_num+5
 11335  011B44  1E07               	comf	??i2_ringbuf_num+4,f,c
 11336  011B46  1E08               	comf	??i2_ringbuf_num+5,f,c
 11337  011B48  4A07               	infsnz	??i2_ringbuf_num+4,f,c
 11338  011B4A  2A08               	incf	??i2_ringbuf_num+5,f,c
 11339  011B4C  5005               	movf	??i2_ringbuf_num+2,w,c
 11340  011B4E  2607               	addwf	??i2_ringbuf_num+4,f,c
 11341  011B50  5006               	movf	??i2_ringbuf_num+3,w,c
 11342  011B52  2208               	addwfc	??i2_ringbuf_num+5,f,c
 11343  011B54  5003               	movf	??i2_ringbuf_num,w,c
 11344  011B56  2407               	addwf	??i2_ringbuf_num+4,w,c
 11345  011B58  6E01               	movwf	?i2_ringbuf_num,c
 11346  011B5A  5004               	movf	??i2_ringbuf_num+1,w,c
 11347  011B5C  2008               	addwfc	??i2_ringbuf_num+5,w,c
 11348  011B5E  6E02               	movwf	?i2_ringbuf_num+1,c
 11349  011B60  0012               	return	
 11350  011B62  0012               	return		;funcret
 11351  011B64                     __end_ofi2_ringbuf_num:
 11352                           	opt stack 0
 11353                           pclatu	equ	0xFFB
 11354                           pclath	equ	0xFFA
 11355                           tblptru	equ	0xFF8
 11356                           tblptrh	equ	0xFF7
 11357                           tblptrl	equ	0xFF6
 11358                           tablat	equ	0xFF5
 11359                           prodh	equ	0xFF4
 11360                           prodl	equ	0xFF3
 11361                           intcon	equ	0xFF2
 11362                           intcon2	equ	0xFF1
 11363                           postinc0	equ	0xFEE
 11364                           fsr0h	equ	0xFEA
 11365                           fsr0l	equ	0xFE9
 11366                           wreg	equ	0xFE8
 11367                           indf1	equ	0xFE7
 11368                           postinc1	equ	0xFE6
 11369                           postdec1	equ	0xFE5
 11370                           fsr1h	equ	0xFE2
 11371                           fsr1l	equ	0xFE1
 11372                           indf2	equ	0xFDF
 11373                           postinc2	equ	0xFDE
 11374                           postdec2	equ	0xFDD
 11375                           plusw2	equ	0xFDB
 11376                           fsr2h	equ	0xFDA
 11377                           fsr2l	equ	0xFD9
 11378                           status	equ	0xFD8
 11379                           pclatu	equ	0xFFB
 11380                           pclath	equ	0xFFA
 11381                           tblptru	equ	0xFF8
 11382                           tblptrh	equ	0xFF7
 11383                           tblptrl	equ	0xFF6
 11384                           tablat	equ	0xFF5
 11385                           prodh	equ	0xFF4
 11386                           prodl	equ	0xFF3
 11387                           intcon	equ	0xFF2
 11388                           intcon2	equ	0xFF1
 11389                           postinc0	equ	0xFEE
 11390                           fsr0h	equ	0xFEA
 11391                           fsr0l	equ	0xFE9
 11392                           wreg	equ	0xFE8
 11393                           indf1	equ	0xFE7
 11394                           postinc1	equ	0xFE6
 11395                           postdec1	equ	0xFE5
 11396                           fsr1h	equ	0xFE2
 11397                           fsr1l	equ	0xFE1
 11398                           indf2	equ	0xFDF
 11399                           postinc2	equ	0xFDE
 11400                           postdec2	equ	0xFDD
 11401                           plusw2	equ	0xFDB
 11402                           fsr2h	equ	0xFDA
 11403                           fsr2l	equ	0xFD9
 11404                           status	equ	0xFD8
 11405                           
 11406                           	psect	rparam
 11407  0000                     pclatu	equ	0xFFB
 11408                           pclath	equ	0xFFA
 11409                           tblptru	equ	0xFF8
 11410                           tblptrh	equ	0xFF7
 11411                           tblptrl	equ	0xFF6
 11412                           tablat	equ	0xFF5
 11413                           prodh	equ	0xFF4
 11414                           prodl	equ	0xFF3
 11415                           intcon	equ	0xFF2
 11416                           intcon2	equ	0xFF1
 11417                           postinc0	equ	0xFEE
 11418                           fsr0h	equ	0xFEA
 11419                           fsr0l	equ	0xFE9
 11420                           wreg	equ	0xFE8
 11421                           indf1	equ	0xFE7
 11422                           postinc1	equ	0xFE6
 11423                           postdec1	equ	0xFE5
 11424                           fsr1h	equ	0xFE2
 11425                           fsr1l	equ	0xFE1
 11426                           indf2	equ	0xFDF
 11427                           postinc2	equ	0xFDE
 11428                           postdec2	equ	0xFDD
 11429                           plusw2	equ	0xFDB
 11430                           fsr2h	equ	0xFDA
 11431                           fsr2l	equ	0xFD9
 11432                           status	equ	0xFD8


Data Sizes:
    Strings     437
    Constant    28
    Data        2
    BSS         1315
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     35      65
    BANK0           160     95     100
    BANK1           256    200     232
    BANK2           256    200     200
    BANK3           256      0     250
    BANK4           256    100     100
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    command_operation@opland3	PTR unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland3(BANK2[100]), 

    F9979.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    command_operation@opland2	PTR unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland2(BANK4[100]), 

    command_operation@opland1	PTR unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland1(BANK2[100]), 

    command_operation@opcode	PTR unsigned char  size(2) Largest target is 100
		 -> rx_loop@opcode(BANK1[100]), 

    comm_at@hand	PTR unsigned char  size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    my_strcmp@str2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_37(CODE[6]), STR_36(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), 
		 -> STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[2]), STR_28(CODE[4]), STR_27(CODE[4]), STR_26(CODE[4]), 
		 -> STR_25(CODE[4]), STR_24(CODE[5]), STR_23(CODE[4]), STR_22(CODE[2]), 
		 -> STR_21(CODE[11]), STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[12]), 
		 -> STR_13(CODE[3]), STR_12(CODE[9]), STR_10(CODE[2]), STR_9(CODE[5]), 

    my_strcmp@str1	PTR const unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland1(BANK2[100]), rx_loop@opcode(BANK1[100]), 

    my_atoi@str	PTR const unsigned char  size(2) Largest target is 100
		 -> rx_loop@opland2(BANK4[100]), 

    my_utoa@str	PTR unsigned char  size(2) Largest target is 10
		 -> tx_send_dec@str(BANK0[10]), 

    RTCC_from_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(COMRAM[4]), 

    RTCC_from_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    RTCC_from_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(COMRAM[4]), 

    RTCC_from_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    RTCC_from_RTCC@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(COMRAM[4]), 

    RTCC_from_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    caltime_to_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(COMRAM[4]), 

    caltime_to_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    epoch_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    epoch_to_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(COMRAM[4]), 

    caltime_to_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    RTCC_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> sw_B(BANK1[4]), sw_G(COMRAM[4]), sw_R(COMRAM[4]), 

    tx_sends@asciicode	PTR const unsigned char  size(2) Largest target is 315
		 -> STR_40(CODE[4]), STR_39(CODE[4]), STR_38(CODE[2]), STR_11(CODE[315]), 
		 -> STR_8(CODE[8]), STR_7(CODE[2]), STR_6(CODE[3]), weekday_3char(CODE[28]), 
		 -> STR_5(CODE[3]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[5]), 
		 -> STR_1(CODE[3]), tx_send_dec@str(BANK0[10]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), rx_buf(BANK1[8]), tx_buf(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), rx_buf(BANK1[8]), tx_buf(BANK1[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), rx_buf(BANK1[8]), tx_buf(BANK1[8]), 

    S790ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAM[1000]), rx_loop@buf(BANK1[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_loop@comm_buf(BANK1[8]), rx_buf(BANK1[8]), tx_buf(BANK1[8]), 


Critical Paths under _main in COMRAM

    _main->_PWM_set
    _rx_loop->_ringbuf_pop
    _rx_loop->_ringbuf_put
    _tx_sendn->___lwmod
    _ringbuf_pop->_ringbuf_num
    _ringbuf_backspace->_ringbuf_num
    _command_operation->_PWM_set
    _command_operation->_month_length
    _command_operation->_my_strcmp
    _tx_sends->_ringbuf_put
    _my_utoa->___lwmod
    _tx_send->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _RTCC_from_RTCC->_RTCC_to_caltime
    _RTCC_to_caltime->_x_to_d
    _caltime_to_epoch->_month_length
    ___wmul->_ADC
    ___lwdiv->_ADC
    _main_init->_timer1_init
    _epoch_to_caltime->_month_length
    _month_length->___awmod
    ___lmul->_month_length
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv

Critical Paths under _ISR in COMRAM

    _ISR->_UART_ISR
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _main->_rx_loop
    _rx_loop->_command_operation
    _tx_sendn->___lwdiv
    _ringbuf_pop->_ringbuf_num
    _ringbuf_backspace->_ringbuf_num
    _command_operation->_comm_at
    _my_atoi->___wmul
    _comm_at->_RTCC_from_caltime
    _print_time->_RTCC_from_RTCC
    _tx_send_dec->_my_utoa
    _tx_sends->_ringbuf_put
    _my_utoa->___lwdiv
    _tx_send->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _RTCC_from_RTCC->_caltime_to_epoch
    _RTCC_from_caltime->_epoch_to_caltime
    _caltime_to_epoch->___lmul
    _PWM_set->_my_atoi
    ___lwdiv->___wmul
    _main_init->_ringbuf_init
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _month_length->___awmod
    _get_quot_rem->___lldiv
    ___lmul->_month_length
    ___lldiv->___lmul
    _d_to_x->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_rx_loop

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_rx_loop

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_rx_loop

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0  138130
                                             81 BANK0     14    14      0
                                _ADC
                            _PWM_set
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_loop
                            ___lldiv
                            ___llmod
                             ___lmul
                            ___lwdiv
                             ___wmul
                          _main_init
                            _rx_loop
 ---------------------------------------------------------------------------------
 (1) _rx_loop                                            507   507      0  108482
                                             74 BANK0      7     7      0
                                              0 BANK1    200   200      0
                                              0 BANK2    200   200      0
                                              0 BANK4    100   100      0
                  _command_operation
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                            _tx_send
                           _tx_sendn
                           _tx_sends
 ---------------------------------------------------------------------------------
 (2) _tx_sendn                                             6     3      3    5599
                                             13 BANK0      6     3      3
                            ___lwdiv
                            ___lwmod
                            _tx_send
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    1750
                                             32 COMRAM     3     1      2
                                              6 BANK0      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     166
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1169
                                             32 COMRAM     2     0      2
                                              6 BANK0      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _command_operation                                    9     1      8   86859
                                             65 BANK0      9     1      8
                            _PWM_set
                            _comm_at
                       _month_length
                            _my_atoi
                          _my_strcmp
                         _print_time
                           _tx_sends
 ---------------------------------------------------------------------------------
 (3) _my_strcmp                                            5     1      4    6078
                                             30 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _my_atoi                                              8     6      2    2302
                                              6 BANK0      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _comm_at                                              5     0      5   43679
                                             60 BANK0      5     0      5
                  _RTCC_from_caltime
                            _my_atoi (ARG)
                         _print_time
                           _tx_sends
 ---------------------------------------------------------------------------------
 (3) _print_time                                           0     0      0   22060
                     _RTCC_from_RTCC
                            _tx_send
                        _tx_send_dec
                           _tx_sends
 ---------------------------------------------------------------------------------
 (4) _tx_send_dec                                         12    11      1    8125
                                             21 BANK0     12    11      1
                            _my_utoa
                           _tx_sends
 ---------------------------------------------------------------------------------
 (2) _tx_sends                                             2     0      2    4304
                                             10 BANK0      2     0      2
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (5) _my_utoa                                              8     3      5    2951
                                             13 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     856
                                             30 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _tx_send                                              1     1      0    2814
                                             10 BANK0      1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _ringbuf_put                                          7     4      3    2783
                                             32 COMRAM     3     0      3
                                              6 BANK0      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (4) _ringbuf_num                                          8     6      2     910
                                             30 COMRAM     2     0      2
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) _RTCC_from_RTCC                                       4     0      4    6817
                                             34 BANK0      4     0      4
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (5) _RTCC_to_caltime                                      3     1      2     386
                                             32 COMRAM     3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (6) _x_to_d                                               2     2      0      62
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _RTCC_from_caltime                                    4     0      4   14633
                                             56 BANK0      4     0      4
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (5) _caltime_to_epoch                                    15    11      4    5298
                                             19 BANK0     15    11      4
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (3) _PWM_set                                              5     3      2    4629
                                             34 COMRAM     1     1      0
                                             14 BANK0      4     2      2
                            ___lwdiv
                             ___wmul
                            _my_atoi (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1064
                                              0 BANK0      6     2      4
                                _ADC (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1489
                                              6 BANK0      7     3      4
                                _ADC (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    1412
                           _ADC_init
                           _OSC_init
                           _PWM_init
                          _RTCC_init
                          _UART_init
                       _ringbuf_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     197
                                             30 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1122
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_init                                             1     1      0      31
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     648
                                             30 COMRAM     1     1      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            1     1      0      34
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_from_epoch                                      4     0      4    9689
                                             56 BANK0      4     0      4
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (5) _epoch_to_caltime                                    16    12      4    7832
                                             40 BANK0     16    12      4
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (6) _month_length                                         6     5      1    2179
                                             34 COMRAM     1     0      1
                                              2 BANK0      5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     849
                                             30 COMRAM     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _get_quot_rem                                         8     4      4    4262
                                             32 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    2168
                                              7 BANK0     12     4      8
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    1073
                                             19 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _caltime_to_RTCC                                      2     0      2    1140
                                              4 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (6) _d_to_x                                               1     1      0     715
                                             34 COMRAM     1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     653
                                             30 COMRAM     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  4     2      2      31
                                             30 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                 14    14      0    2983
                                             16 COMRAM    14    14      0
                           _UART_ISR
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (10) _button_timer_interrupt                              5     2      3    1348
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (10) _UART_ISR                                            1     1      0    1635
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (11) i2_ringbuf_put                                       7     4      3     671
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (11) i2_ringbuf_pop                                       7     5      2     608
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_num                                       8     6      2     322
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _PWM_set
     ___lwdiv
       _ADC (ARG)
       ___wmul (ARG)
         _ADC (ARG)
     ___wmul
       _ADC (ARG)
     _my_atoi (ARG)
       ___wmul
         _ADC (ARG)
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
           ___lmul (ARG)
             _month_length (ARG)
               ___awmod
         ___lmul
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_loop
   ___lldiv
     ___lmul (ARG)
       _month_length (ARG)
         ___awmod
   ___llmod
   ___lmul
     _month_length (ARG)
       ___awmod
   ___lwdiv
     _ADC (ARG)
     ___wmul (ARG)
       _ADC (ARG)
   ___wmul
     _ADC (ARG)
   _main_init
     _ADC_init
     _OSC_init
     _PWM_init
     _RTCC_init
     _UART_init
     _ringbuf_init
     _timer1_init
     _timer3_init
   _rx_loop
     _command_operation
       _PWM_set
         ___lwdiv
           _ADC (ARG)
           ___wmul (ARG)
             _ADC (ARG)
         ___wmul
           _ADC (ARG)
         _my_atoi (ARG)
           ___wmul
             _ADC (ARG)
       _comm_at
         _RTCC_from_caltime
           _caltime_to_RTCC
             _d_to_x
               ___awdiv
           _caltime_to_epoch
             ___lmul
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
           _epoch_to_caltime
             _get_quot_rem
               ___lldiv
                 ___lmul (ARG)
                   _month_length (ARG)
                     ___awmod
               ___lmul
                 _month_length (ARG)
                   ___awmod
             _month_length
               ___awmod
         _my_atoi (ARG)
           ___wmul
             _ADC (ARG)
         _print_time (ARG)
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _tx_send
             _ringbuf_put
               _ringbuf_num
           _tx_send_dec
             _my_utoa
               ___lwdiv
                 _ADC (ARG)
                 ___wmul (ARG)
                   _ADC (ARG)
               ___lwmod
             _tx_sends
               _ringbuf_put
                 _ringbuf_num
           _tx_sends
             _ringbuf_put
               _ringbuf_num
         _tx_sends (ARG)
           _ringbuf_put
             _ringbuf_num
       _month_length
         ___awmod
       _my_atoi
         ___wmul
           _ADC (ARG)
       _my_strcmp
       _print_time
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _tx_send
           _ringbuf_put
             _ringbuf_num
         _tx_send_dec
           _my_utoa
             ___lwdiv
               _ADC (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
             ___lwmod
           _tx_sends
             _ringbuf_put
               _ringbuf_num
         _tx_sends
           _ringbuf_put
             _ringbuf_num
       _tx_sends
         _ringbuf_put
           _ringbuf_num
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _tx_send
       _ringbuf_put
         _ringbuf_num
     _tx_sendn
       ___lwdiv
         _ADC (ARG)
         ___wmul (ARG)
           _ADC (ARG)
       ___lwmod
       _tx_send
         _ringbuf_put
           _ringbuf_num
     _tx_sends
       _ringbuf_put
         _ringbuf_num

 _ISR (ROOT)
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _button_timer_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0     3E8      35       26.6%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100     64      64      14       39.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FA      12       97.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8      C8      10       78.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100     C8      E8       8       90.6%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5F      64       5       62.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     23      41       1       68.4%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3B3       6        0.0%
DATA                 0      0     79B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Jul 18 18:48:01 2015

                  my_strcmp@str1 001F                    my_strcmp@str2 0021  
                             _d1 0024                     ___awdiv@sign 0061  
            ___wmul@multiplicand 0062                ??_RTCC_from_epoch 0024  
                   __CFG_CP0$OFF 000000                     _rx_loop$3054 00AC  
                            l134 272E                              l151 280C  
                            l311 1E30                              l330 1192  
                            l226 23E4                              l317 16C2  
                            _ADC 27F0                              l418 26D0  
                            l426 21DA                              l610 0854  
                            l605 07C2                              l481 1C34  
                            _GIE 007F97                              _PR2 000FCB  
                            _ISR 0008                      comm_at@hand 009C  
                  ?_get_quot_rem 0080               caltime_to_epoch@ep 0075  
             caltime_to_epoch@ct 0073                _RTCC_from_caltime 278A  
                   ___awmod@sign 0061                              prod 000FF3  
                            wreg 000FE8                       _TXSTA1bits 000FAD  
             ?_RTCC_from_caltime 0098                             ?_ADC 001F  
                           ?_ISR 0001                             l1145 235E  
                           l1082 19D6                             l1155 26BA  
                           l1092 200A                             l4010 21CC  
                           l4002 21AA                             l4100 1950  
                           l4102 1962                             l4006 21B8  
                           l4022 190A                             l4112 19C2  
                           l4104 196C                             l5000 0B1A  
                           l4042 237C                             l4122 2304  
                           l4202 0CAA                             l4036 180A  
                           l4124 2312                             l4212 21E8  
                           l5004 0B4E                             l5012 0B78  
                           l4070 1DC8                             l4046 23A4  
                           l4134 234E                             l4126 231C  
                           l4150 26AE                             l4142 2686  
                           l4214 2208                             l4222 2248  
                           l4072 1DD4                             l4064 1DAE  
                           l4144 2690                             l4160 2494  
                           l4400 206C                             l5200 07D6  
                           l4090 1E22                             l4082 1DFE  
                           l4074 1DDC                             l4058 1D9A  
                           l5050 1FA8                             l4410 12D2  
                           l4146 2698                             l4322 25C2  
                           l5052 1FB2                             l4420 132C  
                           l4180 0BB4                             l4156 245C  
                           l4404 2094                             l5212 080C  
                           l5204 07EA                             l4086 1E0C  
                           l4430 13A0                             l4414 12E6  
                           l4182 0BBA                             l5222 083A  
                           l5214 0812                             l5150 0564  
                           l5056 1FF8                             l5048 1F98  
                           l4424 1340                             l4192 0C1E  
                           l4360 14D6                             l4442 13C0  
                           l4434 13AA                             l4186 0BC4  
                           l4194 0C24                             l5234 087A  
                           l5218 0826                             l4292 1204  
                           l4428 1388                             l5236 0880  
                           l4294 120A                             l4438 13B4  
                           l4198 0C44                             l4358 14CE  
                           l4462 250C                             l4710 02E2  
                           l4702 02A0                             l5182 0726  
                           l4480 2732                             l4448 13CC  
                           l4392 201E                             l4720 0352  
                           l4704 02A6                             l4544 1A86  
                           l4552 1AA0                             l5192 075C  
                           l5168 063C                             l4298 1214  
                           l4386 1F5E                             l4378 1EE6  
                           l4714 0316                             l4562 229E  
                           l4546 1A9C                             l4388 1F66  
                           l4740 0432                             l4732 03DC  
                           l4724 0386                             l4716 031E  
                           l4580 23F4                             l5188 0748  
                           l4398 2062                             l4662 0034  
                           l4590 244C                             l4752 04AA  
                           l4744 0454                             l4736 03FE  
                           l4728 03A8                             l4680 0130  
                           l4672 0098                             l4664 0046  
                           l4584 2418                             l4690 01D4  
                           l4748 0488                             l4676 00E4  
                           l4668 0064                             l3990 2170  
                           l4598 27D8                             l3974 157C  
                           l4694 0220                             l4686 0188  
                           l4950 08FC               __CFG_WPFP$PAGE_127 000000  
                           l3994 2180                             l3986 2162  
                           l4938 2700                             l4698 026C  
                           l4946 08D6                             l3996 218C  
                           l4980 0A48                             l4972 09F8  
                           l4964 09A8                             l4956 0958  
                           l3998 2194                             l4990 0ADE  
                           l4982 0A4E                             l4974 09FE  
                           l4966 09AE                             l4958 095E  
                           l4994 0AFC                             l4996 0B04  
                           l4988 0AC6                             STR_1 FFB4  
                           STR_2 FFB2                             STR_3 FFE4  
                           STR_4 FFE4                             STR_5 FFDC  
                           STR_6 FFD9                             STR_7 FFE2  
                           STR_8 FFA4                             STR_9 FFBC  
                           u4200 17BC                             u4210 17BE  
                           u4220 17E6                             u4240 17FC  
                           u4250 17FE                             u4260 1852  
                           u4270 1854                             u4238 17EA  
                           u4450 2486                             u5420 26E0  
                           u4460 24B6                             u4457 247C  
                           u5426 26E2                             u4467 24AC  
                           u5445 2708                             u5446 270A  
                           u4745 28F2                             u4746 28F4  
                           u5825 076A                             u5790 05EE  
                   comm_at@value 00A0              ??_RTCC_from_caltime 0024  
                           _main 050E         button_timer_interrupt@bt 0001  
                           _sw_B 01E2                             _sw_G 003A  
                           _sw_R 003E                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9           __CFG_DSWDTOSC$T1OSCREF 000000  
                           pclat 000FFA                      _tx_send_dec 257E  
                           prodh 000FF4                             prodl 000FF3  
                __end_of_PWM_set 13EA                             start 00DE  
               __end_of_ADC_init 2902                    __CFG_IESO$OFF 000000  
                   ___param_bank 000010            __end_ofi2_ringbuf_pop 1D80  
          __end_ofi2_ringbuf_num 1B64                            ??_ADC 0021  
          __end_ofi2_ringbuf_put 1C1C                            ADC@ch 0022  
                  ADC_init@p_ref 001F                            ??_ISR 0011  
              ??_RTCC_to_caltime 0023                    __CFG_PLLDIV$2 000000  
                   _BAUDCON1bits 000F7E        __end_of_RTCC_from_caltime 27C0  
                          ?_main 0001                   ??_get_quot_rem 0024  
                __end_of___awdiv 1E2E                            _ADRES 000FC3  
                          STR_10 FFE6                            STR_11 FE49  
                          STR_20 FFF8                            STR_12 FF9B  
                          STR_13 FFDF                            STR_21 FF90  
                          STR_22 FFE0                            STR_30 FFEC  
                          STR_14 FF84                            STR_15 FFFC  
                          STR_31 FFF4                            STR_23 FFD5  
                          STR_40 FFC1                            STR_16 FFCB  
                          STR_32 FFEA                            STR_24 FFB7  
                          STR_17 FFF2                            STR_33 FFF0  
                          STR_25 FFCD                            STR_18 FFF6  
                          STR_34 FFE8                            STR_26 FFC5  
                          STR_19 FFD3                            STR_35 FFFA  
                          STR_27 FFD1                            STR_36 FFEE  
                          STR_28 FFC9                  __end_of___awmod 21D8  
                          STR_29 FFB0                            STR_37 FFAC  
                          STR_38 FF82                            STR_39 FFC1  
                __end_of___lldiv 19E8                  ___awdiv@divisor 0021  
                __end_of___llmod 201C                            _LATB2 007C52  
                __end_of___lwdiv 2368                  __end_of___lwmod 26C4  
                          i2l210 2654                            i2l209 2658  
                          i2l251 0E50                            i2l252 0E74  
                          i2l253 0E96                            i2l254 0EB8  
                          i2l255 0ED8                            i2l256 0EF8  
                          i2l257 0F18                            i2l258 0F38  
                          i2l478 00A4                  ___awdiv@counter 0060  
                          _TMR1H 000FCF                            _RPOR3 000EC3  
                          _RPOR4 000EC4                            _RPOR5 000EC5  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94              ___lmul@multiplicand 006B  
                 __CFG_FCMEN$OFF 000000                 __end_of_UART_ISR 2678  
                __end_of_comm_at 2520             caltime_to_epoch@year 007B  
             __size_of_UART_init 0020                            _colon 0028  
               __end_of_OSC_init 2942               __size_of_RTCC_init 0030  
             __size_of_RTCC_loop 0048                 ringbuf_delete@rb 001F  
                          main@i 00B9                            main@n 01E7  
                __end_of_my_atoi 1F7E                            tablat 000FF5  
                __end_of_my_utoa 2262                            plusw2 000FDB  
               __end_of_PWM_init 1CD0       __size_of_ringbuf_backspace 0084  
                __end_of_rx_loop 0B9A                            status 000FD8  
                __end_of_tx_send 2934                month_length@month 0023  
                __initialization 2520                     __end_of_main 089E  
            ringbuf_init@bufsize 0064                 RTCC_from_RTCC@ep 0084  
               RTCC_from_RTCC@ct 0082                           ??_main 00B1  
                  __activetblptr 000003                 ___llmod@dividend 0060  
                         _CCPR1L 000FBB                           _CCPR2L 000FB5  
                         _CCPR3L 000F16                           _CCPR4L 000F13  
                         _EECON2 000FA7                           _ANCON0 000F48  
                         _ANCON1 000F49                 ___awdiv@dividend 001F  
                      ??_PWM_set 0070                           i2l3510 0F80  
                 __CFG_WDTEN$OFF 000000                           i2l3530 1038  
                         i2l3522 0FEC                           i2l3514 0FA4  
                         i2l3506 0F5C                           i2l5132 0054  
                         i2l3534 105E                           i2l3526 1012  
                         i2l3518 0FC8                           i2l3538 1084  
                         i2l4472 1B08                           i2l4772 1C04  
                         i2l4782 1D60                           i2l4790 1D7A  
                         i2l4784 1D76                           _RCREG1 000FAF  
                         _RTCCAL 000F3E                           _SPBRG1 000FB0  
                 __CFG_WPCFG$OFF 000000                           _TXREG1 000FAE  
                i2ringbuf_pop@rb 0009                  i2ringbuf_num@rb 0001  
                i2ringbuf_put@rb 0009                   __CFG_WPDIS$OFF 000000  
             epoch_to_caltime@ep 008A               epoch_to_caltime@ct 0088  
                 __CFG_XINST$OFF 000000                ?_epoch_to_caltime 0088  
                   _CCPTMRS0bits 000F52                     _CCPTMRS1bits 000F51  
          caltime_to_epoch@epoch 007D                     ?_ringbuf_pop 0021  
                   ?_ringbuf_num 001F                     ?_ringbuf_put 0021  
          caltime_to_epoch@month 0081                           ___lmul 2368  
                _caltime_to_RTCC 16C0                           ___wmul 2752  
             ??_epoch_to_caltime 008C                __end_of_UART_init 28C6  
                      ??___awdiv 0023                        ??___awmod 0023  
                         _d_to_x 28C6                        ??___lldiv 0024  
                      ??___llmod 001F                __end_of_RTCC_init 27F0  
                   ?_timer1_init 001F                        ??___lwdiv 0023  
              __end_of_RTCC_loop 270C                        ??___lwmod 0023  
                   ?_timer3_init 0001                           clear_0 2528  
                         clear_1 253A                           clear_2 2546  
                         clear_3 255A                  __CFG_CLKOEC$OFF 000000  
                   rx_loop@ascii 00AF                 ___awdiv@quotient 0062  
                ___awmod@divisor 0021                  ___awmod@counter 0060  
                         _x_to_d 2902                           _rx_buf 01CA  
     __size_of_RTCC_from_caltime 0036                _command_operation 0000  
                         _tx_buf 01D2                        ??_comm_at 0024  
      __size_of_caltime_to_epoch 028C             rx_loop@comm_buf_init 00C3  
             ?_command_operation 00A1                     __mediumconst FE2C  
                         tblptrh 000FF7                           tblptrl 000FF6  
                      ??_my_atoi 0068                           tblptru 000FF8  
                      ?_ADC_init 0001                        ??_my_utoa 0024  
                      ??_rx_loop 00AA                        ??_tx_send 0024  
               __end_of_tx_sendn 245A                 __end_of_tx_sends 24C0  
            ??_command_operation 0024             __CFG_LS48MHZ$SYS48X8 000000  
                     __accesstop 0060          __end_of__initialization 2578  
           __end_of_get_quot_rem 16C0                    ___rparam_used 000001  
                _RTCC_from_epoch 2884             __CFG_WPEND$PAGE_WPFP 000000  
                 __pcstackCOMRAM 0001                     __pidataBANK0 2942  
                      ?_UART_ISR 0001         command_operation@opland1 00A3  
       command_operation@opland2 00A5         command_operation@opland3 00A7  
      __end_of_command_operation 050E                        ?_OSC_init 0001  
                __CFG_DSWDTPS$G2 000000                        ?_PWM_init 0001  
        __size_of_ringbuf_delete 0022                       ??_ADC_init 001F  
     caltime_to_epoch@month_1993 007C               __size_of_main_init 0090  
                     __pbssBANK0 00BF                       __pbssBANK1 01C8  
                     __pbssBANK3 0300          __end_of_caltime_to_RTCC 1792  
                _RTCC_to_caltime 1E2E                     ?_tx_send_dec 0075  
          __end_of_weekday_3char FE49                          ?___lmul 0067  
                     ??_UART_ISR 0010                          ?___wmul 0060  
                        ?_d_to_x 0001                       ??_OSC_init 001F  
                 ___lmul@product 006F                          ?_x_to_d 0001  
                     ??_PWM_init 001F               __CFG_OSC$INTOSCPLL 000000  
             __size_of_my_strcmp 009C                  __CFG_WDTPS$1024 000000  
                   tx_sendn@temp 0071                          _SPBRGH1 000F7F  
                        _RTCVALH 000F3B                          _RTCVALL 000F3A  
        __end_of_RTCC_from_epoch 28A6             timer1_init@prescaler 0021  
                        _PWM_set 129C                 i2ringbuf_pop@ret 000F  
                   PWM_set@color 0023                 __CFG_CFGPLLEN$ON 000000  
       ??_button_timer_interrupt 0004                     PWM_set@value 006E  
                  ?_month_length 0023              epoch_to_caltime@day 0090  
              RTCC_from_epoch@ep 009A                RTCC_from_epoch@ct 0098  
            epoch_to_caltime@num 0094                          __Hparam 0000  
                        __Lparam 0000                    ?_ringbuf_init 0060  
                        ___awdiv 1D80                  __size_of___lmul 007A  
                        ___awmod 2148                          ___lldiv 1922  
                __size_of___wmul 0038                          ___llmod 1F7E  
                     _light_mode 01C8                          ___lwdiv 22E6  
                        ___lwmod 2678                  __size_of_d_to_x 0020  
     __size_of_command_operation 050E             __size_of_ringbuf_pop 00BE  
           __size_of_ringbuf_num 00DA             __size_of_ringbuf_put 00C6  
                __CFG_STVREN$OFF 000000                __end_of_main_init 2148  
    epoch_to_caltime@month_cache 00C2                          __pcinit 2520  
                      ?_tx_sendn 006D                        ?_tx_sends 006A  
                  rx_loop@i_2372 00AE                          __ramtop 0F00  
                        _halfsec 002B             __size_of_timer1_init 0046  
                        __ptext0 050E                          __ptext1 089E  
                        __ptext2 23E2                          __ptext3 19E8  
                        __ptext4 2840                          __ptext5 2262  
                        __ptext6 0000                          __ptext7 201C  
                        __ptext8 1EDA                          __ptext9 24C0  
           __size_of_timer3_init 0026                  __size_of_x_to_d 001A  
                        _comm_at 24C0                        _T0CONbits 000FD5  
                   __size_of_ADC 002A                 _time_change_flag 01C9  
               _caltime_to_epoch 0B9A                     __size_of_ISR 00D6  
                      _T1CONbits 000FCD          __size_of_RTCC_from_RTCC 0022  
                      _T2CONbits 000FCA                          _rc_flag 002C  
                      _T3CONbits 000F79                 ___awmod@dividend 001F  
                 main@value_2449 00B8                        _T5CONbits 000F22  
                        _my_atoi 1EDA                          _my_utoa 21D8  
                  rx_loop@opcode 0164                          _rx_flag 002D  
                        _rx_loop 089E          __end_of_RTCC_to_caltime 1EDA  
                        _tx_send 291C            __size_of_get_quot_rem 00D6  
           end_of_initialization 2578           __size_ofi2_ringbuf_pop 00B0  
         __size_ofi2_ringbuf_num 00BE           __size_ofi2_ringbuf_put 00B8  
                 ??_month_length 0062                 ?_caltime_to_RTCC 0064  
                ___lldiv@divisor 0077             timer3_init@prescaler 0020  
              __end_of_my_strcmp 20B8                  ___lldiv@counter 007F  
                 tx_send_dec@dec 0080                   tx_sendn@digits 006F  
                 tx_send_dec@str 0076                   ??_ringbuf_init 001F  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                       ??_tx_sendn 0024  
                     ??_tx_sends 0024                        _PORTAbits 000F80  
                      _UART_init 28A6                 __CFG_DSBOREN$OFF 000000  
                      _RTCC_init 27C0                        _RTCC_loop 26C4  
                   _display_flag 0029        epoch_to_caltime@day_cache 00BF  
         i2ringbuf_put@asciicode 000B                     _get_quot_rem 15EA  
                     _print_time 13EA                   _ringbuf_delete 2840  
      __size_of_epoch_to_caltime 01F0                 __CFG_CPUDIV$OSC1 000000  
            RTCC_from_caltime@ep 009A              RTCC_from_caltime@ct 0098  
              __size_of_ADC_init 001C                 ?_RTCC_from_epoch 0098  
                     comm_at@max 009F                       comm_at@min 009E  
__size_of_button_timer_interrupt 0286          timer1_init@clock_select 001F  
                    _CCP1CONbits 000FBA                      _CCP2CONbits 000FB4  
               __CFG_IOL1WAY$OFF 000000                      _CCP3CONbits 000F15  
                    _CCP4CONbits 000F12             __size_of_tx_send_dec 0058  
            __CFG_MSSP7B_EN$MSK7 000000                   ringbuf_init@rb 0060  
                 ringbuf_pop@ret 0023                    i2_ringbuf_pop 1CD0  
                  i2_ringbuf_num 1AA6                    i2_ringbuf_put 1B64  
                 __end_of___lmul 23E2                   __end_of___wmul 278A  
                 __end_of_d_to_x 28E6                __size_of_UART_ISR 004E  
         __end_of_ringbuf_delete 2862                       ?_UART_init 0001  
                     ?_RTCC_init 0001                __size_of_OSC_init 000E  
                     ?_RTCC_loop 0001                 __CFG_DSWDTEN$OFF 000000  
                 __end_of_x_to_d 291C            epoch_to_caltime@month 0093  
            start_initialization 2520                 month_length@year 0066  
                    __end_of_ADC 281A                      __end_of_ISR 00DE  
              __size_of_PWM_init 00B4                    UART_ISR@ascii 0010  
               ?_RTCC_to_caltime 0021                  ___llmod@divisor 0064  
                ___llmod@counter 001F                         ??___lmul 0024  
                 ?i2_ringbuf_pop 0009                   ?i2_ringbuf_num 0001  
                 ?i2_ringbuf_put 0009                         ??___wmul 0023  
                       ??_d_to_x 0023                __CFG_ADCSEL$BIT12 000000  
                    __pdataBANK0 00C2           _button_timer_interrupt 0E26  
                       ??_x_to_d 001F                  ?_ringbuf_delete 001F  
           __end_of_month_length 185C                   _RTCC_from_RTCC 2862  
                    ?_print_time 0001                      __pbssBIGRAM 0464  
                    __pbssCOMRAM 0024              RTCC_to_caltime@dumy 0023  
                  __pcstackBANK0 0060                    __pcstackBANK1 0100  
                  __pcstackBANK2 0200                    __pcstackBANK4 0400  
        command_operation@opcode 00A1                      _caltime_now 002F  
           __end_of_ringbuf_init 262A                 tx_send@asciicode 006A  
                       ?_PWM_set 006E         __end_of_caltime_to_epoch 0E26  
               ___lwdiv@dividend 0066                        _edit_flag 002A  
                      __pintcode 0008                    __pmediumconst FE2C  
                       ?___awdiv 001F                         ?___awmod 001F  
                       ?___lldiv 0073                         ?___llmod 0060  
                       ?___lwdiv 0066                         ?___lwmod 001F  
         __end_of_RTCC_from_RTCC 2884                      ??_UART_init 001F  
                       ?_comm_at 009C                      ??_RTCC_init 001F  
                    ??_RTCC_loop 001F                __size_of_tx_sendn 0078  
              __size_of_tx_sends 0066                        _epoch_now 0036  
                      _main_init 20B8                 _epoch_to_caltime 10AC  
           __CFG_RTCOSC$T1OSCREF 000000                         ?_my_atoi 0066  
                       _ADC_init 28E6                      _PADCFG1bits 000F3C  
                       ?_my_utoa 006D              ringbuf_backspace@rb 0021  
               ___lwdiv@quotient 006B                         ?_rx_loop 0001  
                       ?_tx_send 0001                       my_atoi@ret 006C  
                     my_atoi@str 0066                        d_to_x@dec 0023  
       ringbuf_init@internal_buf 0062                   ___wmul@product 0064  
                       _IPR1bits 000F9F                         _IPR2bits 000FA2  
                       _PIE1bits 000F9D                         _PIE2bits 000FA0  
                rx_loop@comm_buf 01DA                         _IPR5bits 000F99  
                       _PIE5bits 000F91              __size_of_print_time 0126  
                ??i2_ringbuf_pop 000B                  ??i2_ringbuf_num 0003  
                ??i2_ringbuf_put 000C                         i2u335_40 1002  
                       i2u336_40 1028                         i2u337_40 104E  
                       _PIR1bits 000F9E                         i2u338_40 1074  
                       _PIR2bits 000FA1                         _PIR5bits 000F98  
                       i2u570_40 006A       epoch_to_caltime@year_cache 00C1  
                       i2u571_40 006C                         i2u572_40 0082  
                       i2u573_40 0084                         i2u574_40 009A  
                       i2u575_40 009C                    ??_ringbuf_pop 0066  
                  ??_ringbuf_num 0060                    ??_ringbuf_put 0066  
                  tx_sendn@value 006D                         _UART_ISR 262A  
                  ??_timer1_init 0020                        _time_sync 002E  
                  ??_timer3_init 001F                        _my_strcmp 201C  
                      main@_2448 01E6                         _OSC_init 2934  
                ?_RTCC_from_RTCC 0082                       my_utoa@str 006D  
                     _ADCON0bits 000FC2                       _ADCON1bits 000FC1  
              ___wmul@multiplier 0060                 __CFG_SOSCSEL$LOW 000000  
                       _PWM_init 1C1C   button_timer_interrupt@sw_value 0003  
                     ?_main_init 0001                        main@value 00B7  
                  ringbuf_pop@rb 0021                    ringbuf_num@rb 001F  
                  ringbuf_put@rb 0021                ___lmul@multiplier 0067  
                    _INTCON2bits 000FF1             epoch_to_caltime@year 0092  
               __size_of_PWM_set 014E                       _CCPR1Lbits 000FBB  
                     _CCPR2Lbits 000FB5                       _CCPR3Lbits 000F16  
                     _CCPR4Lbits 000F13                         __Hrparam 0000  
                       __Lrparam 0000                       rx_loop@buf 0100  
                  _weekday_3char FE2D            __size_of_month_length 00CA  
                     ?_my_strcmp 001F         __size_of_caltime_to_RTCC 00D2  
               __size_of___awdiv 00AE                 __size_of___awmod 0090  
               __size_of___lldiv 00C6                 __size_of___llmod 009E  
               __size_of___lwdiv 0082                 __size_of___lwmod 004C  
              tx_sends@asciicode 006A              __end_of_ringbuf_pop 1AA6  
            __end_of_ringbuf_num 15EA              __end_of_ringbuf_put 1922  
          __size_of_ringbuf_init 0054                 __size_of_comm_at 0060  
            __end_of_timer1_init 2752              __end_of_timer3_init 2840  
                ___lwdiv@divisor 0068                  ___lwdiv@counter 006A  
                       __ptext10 13EA                         __ptext11 257E  
                       __ptext20 2902                         __ptext12 245A  
                       __ptext21 278A                         __ptext13 21D8  
                       __ptext30 28A6                         __ptext22 0B9A  
                       __ptext14 2678                         __ptext31 27C0  
                       __ptext23 129C                         __ptext15 291C  
                       __ptext40 2148                         __ptext32 1C1C  
                       __ptext24 2752                         __ptext16 185C  
                       __ptext41 15EA                         __ptext33 2934  
                       __ptext25 22E6                         __ptext17 1510  
                       __ptext50 262A                         __ptext42 2368  
                       __ptext34 28E6                         __ptext26 20B8  
                       __ptext18 2862                         __ptext51 1B64  
                       __ptext43 1922                         __ptext35 1F7E  
                       __ptext27 281A                         __ptext19 1E2E  
                       __ptext52 1CD0                         __ptext44 16C0  
                       __ptext36 26C4                         __ptext28 270C  
                       __ptext53 1AA6                         __ptext45 28C6  
                       __ptext37 2884                         __ptext29 25D6  
                       __ptext46 1D80                         __ptext38 10AC  
                       __ptext47 27F0                         __ptext39 1792  
                       __ptext49 0E26                 __size_of_my_atoi 00A4  
                     PWM_init@PR 001F                 __size_of_my_utoa 008A  
               __size_of_rx_loop 02FC            RTCC_loop@prev_halfsec 0027  
               __size_of_tx_send 0018                    __size_of_main 0390  
                  ??_tx_send_dec 0024                     _month_length 1792  
       __size_of_RTCC_from_epoch 0022                 ??_ringbuf_delete 0021  
        ?_button_timer_interrupt 0001                   rx_loop@opland1 0264  
                 rx_loop@opland2 0400                   rx_loop@opland3 0200  
                   _ringbuf_init 25D6                        x_to_d@hex 0020  
                       main@scan 00B5                         main@temp 00BB  
                       _tx_sendn 23E2                         _tx_sends 245A  
                   ??_print_time 0024                   main_init@rxbuf 0300  
                 main_init@txbuf 0464                      ??_main_init 0022  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
           ringbuf_put@asciicode 0023                 get_quot_rem@quot 0080  
              RTCC_to_caltime@ct 0021                         intlevel2 0000  
               ___lwmod@dividend 001F                 ___lldiv@dividend 0073  
                      tx_sendn@i 0070               RTCC_loop@GIE_cache 001F  
                     _RCSTA1bits 000FAC                ?_caltime_to_epoch 0073  
              _ringbuf_backspace 2262         __end_of_epoch_to_caltime 129C  
       __size_of_RTCC_to_caltime 00AC                       _OSCCONbits 000FD3  
 __end_of_button_timer_interrupt 10AC                  tx_send_dec@edit 0075  
             __end_of_print_time 1510               ??_caltime_to_epoch 0077  
             ?_ringbuf_backspace 0021                         my_utoa@d 0072  
                       my_utoa@v 0073                      _ringbuf_pop 19E8  
                    _ringbuf_num 1510                      _ringbuf_put 185C  
            __end_of_tx_send_dec 25D6                      ??_my_strcmp 0023  
                    _timer1_init 270C                      _timer3_init 281A  
                       rx_loop@i 00B0              ??_ringbuf_backspace 0066  
                get_quot_rem@div 0082                  get_quot_rem@num 0084  
                     _RTCCFGbits 000F3F                       _PPSCONbits 000EBF  
               ___lldiv@quotient 007B                caltime_to_RTCC@ct 0064  
                ___lwmod@divisor 0021                ??_caltime_to_RTCC 0024  
                ___lwmod@counter 0023  epoch_to_caltime@day_since_epoch 008E  
                  my_utoa@digits 0071        __end_of_ringbuf_backspace 22E6  
                   my_utoa@value 006F           _command_operation$3053 00A9  
               ??_RTCC_from_RTCC 0024  
