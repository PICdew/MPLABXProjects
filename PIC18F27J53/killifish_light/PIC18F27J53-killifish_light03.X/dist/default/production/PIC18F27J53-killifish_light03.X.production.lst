

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Aug 26 23:30:51 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    74  0000                     
    75                           	psect	idataBANK0
    76  001004                     __pidataBANK0:
    77                           	opt stack 0
    78                           
    79                           ;initializer for epoch_to_caltime@month_cache
    80  001004  01                 	db	1
    81                           
    82                           	psect	mediumconst
    83  00FE2C                     __pmediumconst:
    84                           	opt stack 0
    85  00FE2C  00                 	db	0
    86  00FE2D                     _weekday_3char:
    87                           	opt stack 0
    88  00FE2D  53                 	db	83
    89  00FE2E  55                 	db	85
    90  00FE2F  4E                 	db	78
    91  00FE30  00                 	db	0
    92  00FE31  4D                 	db	77
    93  00FE32  4F                 	db	79
    94  00FE33  4E                 	db	78
    95  00FE34  00                 	db	0
    96  00FE35  54                 	db	84
    97  00FE36  55                 	db	85
    98  00FE37  45                 	db	69
    99  00FE38  00                 	db	0
   100  00FE39  57                 	db	87
   101  00FE3A  45                 	db	69
   102  00FE3B  44                 	db	68
   103  00FE3C  00                 	db	0
   104  00FE3D  54                 	db	84
   105  00FE3E  48                 	db	72
   106  00FE3F  55                 	db	85
   107  00FE40  00                 	db	0
   108  00FE41  46                 	db	70
   109  00FE42  52                 	db	82
   110  00FE43  49                 	db	73
   111  00FE44  00                 	db	0
   112  00FE45  53                 	db	83
   113  00FE46  41                 	db	65
   114  00FE47  54                 	db	84
   115  00FE48  00                 	db	0
   116  00FE49                     __end_of_weekday_3char:
   117                           	opt stack 0
   118  0000                     _PPSCONbits	set	3775
   119  0000                     _RPOR3	set	3779
   120  0000                     _RPOR4	set	3780
   121  0000                     _RPOR5	set	3781
   122  0000                     _ANCON0	set	3912
   123  0000                     _ANCON1	set	3913
   124  0000                     _CCP3CONbits	set	3861
   125  0000                     _CCP4CONbits	set	3858
   126  0000                     _CCPR3L	set	3862
   127  0000                     _CCPR3Lbits	set	3862
   128  0000                     _CCPR4L	set	3859
   129  0000                     _CCPR4Lbits	set	3859
   130  0000                     _CCPTMRS0bits	set	3922
   131  0000                     _CCPTMRS1bits	set	3921
   132  0000                     _PADCFG1bits	set	3900
   133  0000                     _RTCCAL	set	3902
   134  0000                     _RTCCFGbits	set	3903
   135  0000                     _RTCVALH	set	3899
   136  0000                     _RTCVALL	set	3898
   137  0000                     _T5CONbits	set	3874
   138  0000                     _ADRES	set	4035
   139  0000                     _ADCON0bits	set	4034
   140  0000                     _ADCON1bits	set	4033
   141  0000                     _BAUDCON1bits	set	3966
   142  0000                     _CCP1CONbits	set	4026
   143  0000                     _CCP2CONbits	set	4020
   144  0000                     _CCPR1L	set	4027
   145  0000                     _CCPR1Lbits	set	4027
   146  0000                     _CCPR2L	set	4021
   147  0000                     _CCPR2Lbits	set	4021
   148  0000                     _CTMUCONH	set	4019
   149  0000                     _CTMUCONHbits	set	4019
   150  0000                     _CTMUCONL	set	4018
   151  0000                     _CTMUCONLbits	set	4018
   152  0000                     _CTMUICON	set	4017
   153  0000                     _EECON2	set	4007
   154  0000                     _INTCON2bits	set	4081
   155  0000                     _INTCONbits	set	4082
   156  0000                     _IPR1bits	set	3999
   157  0000                     _IPR2bits	set	4002
   158  0000                     _IPR5bits	set	3993
   159  0000                     _OSCCONbits	set	4051
   160  0000                     _OSCTUNEbits	set	3995
   161  0000                     _PIE1bits	set	3997
   162  0000                     _PIE2bits	set	4000
   163  0000                     _PIE5bits	set	3985
   164  0000                     _PIR1bits	set	3998
   165  0000                     _PIR2bits	set	4001
   166  0000                     _PIR5bits	set	3992
   167  0000                     _PORTAbits	set	3968
   168  0000                     _PR2	set	4043
   169  0000                     _RCREG1	set	4015
   170  0000                     _RCSTA1bits	set	4012
   171  0000                     _SPBRG1	set	4016
   172  0000                     _SPBRGH1	set	3967
   173  0000                     _T0CONbits	set	4053
   174  0000                     _T1CONbits	set	4045
   175  0000                     _T2CONbits	set	4042
   176  0000                     _T3CONbits	set	3961
   177  0000                     _TMR1H	set	4047
   178  0000                     _TRISA	set	3986
   179  0000                     _TRISB	set	3987
   180  0000                     _TRISC	set	3988
   181  0000                     _TXREG1	set	4014
   182  0000                     _TXSTA1bits	set	4013
   183  0000                     _LATB2	set	31826
   184  00FE49                     STR_19:
   185  00FE49  09                 	db	9
   186  00FE4A  2A                 	db	42
   187  00FE4B  2A                 	db	42
   188  00FE4C  2A                 	db	42
   189  00FE4D  2A                 	db	42
   190  00FE4E  2A                 	db	42
   191  00FE4F  2A                 	db	42
   192  00FE50  2A                 	db	42
   193  00FE51  2A                 	db	42
   194  00FE52  2A                 	db	42
   195  00FE53  2A                 	db	42
   196  00FE54  2A                 	db	42
   197  00FE55  2A                 	db	42
   198  00FE56  2A                 	db	42
   199  00FE57  2A                 	db	42
   200  00FE58  2A                 	db	42
   201  00FE59  2A                 	db	42
   202  00FE5A  2A                 	db	42
   203  00FE5B  2A                 	db	42
   204  00FE5C  2A                 	db	42
   205  00FE5D  2A                 	db	42
   206  00FE5E  2A                 	db	42
   207  00FE5F  2A                 	db	42
   208  00FE60  2A                 	db	42
   209  00FE61  2A                 	db	42
   210  00FE62  2A                 	db	42
   211  00FE63  2A                 	db	42
   212  00FE64  0A                 	db	10
   213  00FE65  09                 	db	9
   214  00FE66  2A                 	db	42
   215  00FE67  2A                 	db	42
   216  00FE68  2A                 	db	42
   217  00FE69  2A                 	db	42
   218  00FE6A  20                 	db	32
   219  00FE6B  4B                 	db	75	;'K'
   220  00FE6C  69                 	db	105	;'i'
   221  00FE6D  6C                 	db	108	;'l'
   222  00FE6E  6C                 	db	108	;'l'
   223  00FE6F  69                 	db	105	;'i'
   224  00FE70  66                 	db	102	;'f'
   225  00FE71  69                 	db	105	;'i'
   226  00FE72  73                 	db	115	;'s'
   227  00FE73  68                 	db	104	;'h'
   228  00FE74  20                 	db	32
   229  00FE75  4C                 	db	76	;'L'
   230  00FE76  69                 	db	105	;'i'
   231  00FE77  67                 	db	103	;'g'
   232  00FE78  68                 	db	104	;'h'
   233  00FE79  74                 	db	116	;'t'
   234  00FE7A  20                 	db	32
   235  00FE7B  20                 	db	32
   236  00FE7C  2A                 	db	42
   237  00FE7D  2A                 	db	42
   238  00FE7E  2A                 	db	42
   239  00FE7F  2A                 	db	42
   240  00FE80  0A                 	db	10
   241  00FE81  09                 	db	9
   242  00FE82  2A                 	db	42
   243  00FE83  2A                 	db	42
   244  00FE84  2A                 	db	42
   245  00FE85  2A                 	db	42
   246  00FE86  20                 	db	32
   247  00FE87  4D                 	db	77	;'M'
   248  00FE88  61                 	db	97	;'a'
   249  00FE89  64                 	db	100	;'d'
   250  00FE8A  65                 	db	101	;'e'
   251  00FE8B  20                 	db	32
   252  00FE8C  62                 	db	98	;'b'
   253  00FE8D  79                 	db	121	;'y'
   254  00FE8E  20                 	db	32
   255  00FE8F  40                 	db	64	;'@'
   256  00FE90  52                 	db	82	;'R'
   257  00FE91  79                 	db	121	;'y'
   258  00FE92  6F                 	db	111	;'o'
   259  00FE93  6B                 	db	107	;'k'
   260  00FE94  65                 	db	101	;'e'
   261  00FE95  72                 	db	114	;'r'
   262  00FE96  69                 	db	105	;'i'
   263  00FE97  20                 	db	32
   264  00FE98  2A                 	db	42
   265  00FE99  2A                 	db	42
   266  00FE9A  2A                 	db	42
   267  00FE9B  2A                 	db	42
   268  00FE9C  0A                 	db	10
   269  00FE9D  09                 	db	9
   270  00FE9E  2A                 	db	42
   271  00FE9F  2A                 	db	42
   272  00FEA0  2A                 	db	42
   273  00FEA1  2A                 	db	42
   274  00FEA2  2A                 	db	42
   275  00FEA3  2A                 	db	42
   276  00FEA4  2A                 	db	42
   277  00FEA5  2A                 	db	42
   278  00FEA6  2A                 	db	42
   279  00FEA7  2A                 	db	42
   280  00FEA8  2A                 	db	42
   281  00FEA9  2A                 	db	42
   282  00FEAA  2A                 	db	42
   283  00FEAB  2A                 	db	42
   284  00FEAC  2A                 	db	42
   285  00FEAD  2A                 	db	42
   286  00FEAE  2A                 	db	42
   287  00FEAF  2A                 	db	42
   288  00FEB0  2A                 	db	42
   289  00FEB1  2A                 	db	42
   290  00FEB2  2A                 	db	42
   291  00FEB3  2A                 	db	42
   292  00FEB4  2A                 	db	42
   293  00FEB5  2A                 	db	42
   294  00FEB6  2A                 	db	42
   295  00FEB7  2A                 	db	42
   296  00FEB8  0A                 	db	10
   297  00FEB9  0A                 	db	10
   298  00FEBA  09                 	db	9
   299  00FEBB  63                 	db	99	;'c'
   300  00FEBC  6F                 	db	111	;'o'
   301  00FEBD  6D                 	db	109	;'m'
   302  00FEBE  6D                 	db	109	;'m'
   303  00FEBF  61                 	db	97	;'a'
   304  00FEC0  6E                 	db	110	;'n'
   305  00FEC1  64                 	db	100	;'d'
   306  00FEC2  20                 	db	32
   307  00FEC3  09                 	db	9
   308  00FEC4  6F                 	db	111	;'o'
   309  00FEC5  70                 	db	112	;'p'
   310  00FEC6  65                 	db	101	;'e'
   311  00FEC7  6C                 	db	108	;'l'
   312  00FEC8  61                 	db	97	;'a'
   313  00FEC9  6E                 	db	110	;'n'
   314  00FECA  64                 	db	100	;'d'
   315  00FECB  31                 	db	49	;'1'
   316  00FECC  09                 	db	9
   317  00FECD  6F                 	db	111	;'o'
   318  00FECE  70                 	db	112	;'p'
   319  00FECF  65                 	db	101	;'e'
   320  00FED0  6C                 	db	108	;'l'
   321  00FED1  61                 	db	97	;'a'
   322  00FED2  6E                 	db	110	;'n'
   323  00FED3  64                 	db	100	;'d'
   324  00FED4  32                 	db	50	;'2'
   325  00FED5  0A                 	db	10
   326  00FED6  0A                 	db	10
   327  00FED7  09                 	db	9
   328  00FED8  70                 	db	112	;'p'
   329  00FED9  72                 	db	114	;'r'
   330  00FEDA  69                 	db	105	;'i'
   331  00FEDB  6E                 	db	110	;'n'
   332  00FEDC  74                 	db	116	;'t'
   333  00FEDD  5F                 	db	95	;'_'
   334  00FEDE  74                 	db	116	;'t'
   335  00FEDF  69                 	db	105	;'i'
   336  00FEE0  6D                 	db	109	;'m'
   337  00FEE1  65                 	db	101	;'e'
   338  00FEE2  28                 	db	40
   339  00FEE3  74                 	db	116	;'t'
   340  00FEE4  29                 	db	41
   341  00FEE5  0A                 	db	10
   342  00FEE6  09                 	db	9
   343  00FEE7  61                 	db	97	;'a'
   344  00FEE8  64                 	db	100	;'d'
   345  00FEE9  6A                 	db	106	;'j'
   346  00FEEA  75                 	db	117	;'u'
   347  00FEEB  73                 	db	115	;'s'
   348  00FEEC  74                 	db	116	;'t'
   349  00FEED  5F                 	db	95	;'_'
   350  00FEEE  74                 	db	116	;'t'
   351  00FEEF  69                 	db	105	;'i'
   352  00FEF0  6D                 	db	109	;'m'
   353  00FEF1  65                 	db	101	;'e'
   354  00FEF2  28                 	db	40
   355  00FEF3  61                 	db	97	;'a'
   356  00FEF4  74                 	db	116	;'t'
   357  00FEF5  29                 	db	41
   358  00FEF6  20                 	db	32
   359  00FEF7  5B                 	db	91	;'['
   360  00FEF8  68                 	db	104	;'h'
   361  00FEF9  61                 	db	97	;'a'
   362  00FEFA  6E                 	db	110	;'n'
   363  00FEFB  64                 	db	100	;'d'
   364  00FEFC  3A                 	db	58	;':'
   365  00FEFD  79                 	db	121	;'y'
   366  00FEFE  2C                 	db	44
   367  00FEFF  4D                 	db	77	;'M'
   368  00FF00  2C                 	db	44
   369  00FF01  64                 	db	100	;'d'
   370  00FF02  2C                 	db	44
   371  00FF03  68                 	db	104	;'h'
   372  00FF04  2C                 	db	44
   373  00FF05  6D                 	db	109	;'m'
   374  00FF06  2C                 	db	44
   375  00FF07  73                 	db	115	;'s'
   376  00FF08  5D                 	db	93	;']'
   377  00FF09  20                 	db	32
   378  00FF0A  5B                 	db	91	;'['
   379  00FF0B  76                 	db	118	;'v'
   380  00FF0C  61                 	db	97	;'a'
   381  00FF0D  6C                 	db	108	;'l'
   382  00FF0E  75                 	db	117	;'u'
   383  00FF0F  65                 	db	101	;'e'
   384  00FF10  28                 	db	40
   385  00FF11  64                 	db	100	;'d'
   386  00FF12  65                 	db	101	;'e'
   387  00FF13  63                 	db	99	;'c'
   388  00FF14  69                 	db	105	;'i'
   389  00FF15  6D                 	db	109	;'m'
   390  00FF16  61                 	db	97	;'a'
   391  00FF17  6C                 	db	108	;'l'
   392  00FF18  29                 	db	41
   393  00FF19  5D                 	db	93	;']'
   394  00FF1A  0A                 	db	10
   395  00FF1B  09                 	db	9
   396  00FF1C  70                 	db	112	;'p'
   397  00FF1D  77                 	db	119	;'w'
   398  00FF1E  6D                 	db	109	;'m'
   399  00FF1F  20                 	db	32
   400  00FF20  5B                 	db	91	;'['
   401  00FF21  63                 	db	99	;'c'
   402  00FF22  6F                 	db	111	;'o'
   403  00FF23  6C                 	db	108	;'l'
   404  00FF24  6F                 	db	111	;'o'
   405  00FF25  72                 	db	114	;'r'
   406  00FF26  3A                 	db	58	;':'
   407  00FF27  52                 	db	82	;'R'
   408  00FF28  2C                 	db	44
   409  00FF29  47                 	db	71	;'G'
   410  00FF2A  2C                 	db	44
   411  00FF2B  42                 	db	66	;'B'
   412  00FF2C  2C                 	db	44
   413  00FF2D  57                 	db	87	;'W'
   414  00FF2E  5D                 	db	93	;']'
   415  00FF2F  20                 	db	32
   416  00FF30  5B                 	db	91	;'['
   417  00FF31  76                 	db	118	;'v'
   418  00FF32  61                 	db	97	;'a'
   419  00FF33  6C                 	db	108	;'l'
   420  00FF34  75                 	db	117	;'u'
   421  00FF35  65                 	db	101	;'e'
   422  00FF36  28                 	db	40
   423  00FF37  25                 	db	37
   424  00FF38  29                 	db	41
   425  00FF39  3A                 	db	58	;':'
   426  00FF3A  30                 	db	48	;'0'
   427  00FF3B  7E                 	db	126
   428  00FF3C  31                 	db	49	;'1'
   429  00FF3D  30                 	db	48	;'0'
   430  00FF3E  30                 	db	48	;'0'
   431  00FF3F  5D                 	db	93	;']'
   432  00FF40  0A                 	db	10
   433  00FF41  09                 	db	9
   434  00FF42  70                 	db	112	;'p'
   435  00FF43  77                 	db	119	;'w'
   436  00FF44  6D                 	db	109	;'m'
   437  00FF45  20                 	db	32
   438  00FF46  63                 	db	99	;'c'
   439  00FF47  6C                 	db	108	;'l'
   440  00FF48  65                 	db	101	;'e'
   441  00FF49  61                 	db	97	;'a'
   442  00FF4A  72                 	db	114	;'r'
   443  00FF4B  0A                 	db	10
   444  00FF4C  09                 	db	9
   445  00FF4D  73                 	db	115	;'s'
   446  00FF4E  65                 	db	101	;'e'
   447  00FF4F  74                 	db	116	;'t'
   448  00FF50  20                 	db	32
   449  00FF51  74                 	db	116	;'t'
   450  00FF52  69                 	db	105	;'i'
   451  00FF53  6D                 	db	109	;'m'
   452  00FF54  65                 	db	101	;'e'
   453  00FF55  5F                 	db	95	;'_'
   454  00FF56  73                 	db	115	;'s'
   455  00FF57  79                 	db	121	;'y'
   456  00FF58  6E                 	db	110	;'n'
   457  00FF59  63                 	db	99	;'c'
   458  00FF5A  5F                 	db	95	;'_'
   459  00FF5B  6D                 	db	109	;'m'
   460  00FF5C  6F                 	db	111	;'o'
   461  00FF5D  64                 	db	100	;'d'
   462  00FF5E  65                 	db	101	;'e'
   463  00FF5F  28                 	db	40
   464  00FF60  73                 	db	115	;'s'
   465  00FF61  79                 	db	121	;'y'
   466  00FF62  6E                 	db	110	;'n'
   467  00FF63  63                 	db	99	;'c'
   468  00FF64  29                 	db	41
   469  00FF65  0A                 	db	10
   470  00FF66  09                 	db	9
   471  00FF67  73                 	db	115	;'s'
   472  00FF68  65                 	db	101	;'e'
   473  00FF69  74                 	db	116	;'t'
   474  00FF6A  20                 	db	32
   475  00FF6B  41                 	db	65	;'A'
   476  00FF6C  44                 	db	68	;'D'
   477  00FF6D  43                 	db	67	;'C'
   478  00FF6E  5F                 	db	95	;'_'
   479  00FF6F  6D                 	db	109	;'m'
   480  00FF70  6F                 	db	111	;'o'
   481  00FF71  64                 	db	100	;'d'
   482  00FF72  65                 	db	101	;'e'
   483  00FF73  28                 	db	40
   484  00FF74  61                 	db	97	;'a'
   485  00FF75  64                 	db	100	;'d'
   486  00FF76  63                 	db	99	;'c'
   487  00FF77  29                 	db	41
   488  00FF78  0A                 	db	10
   489  00FF79  09                 	db	9
   490  00FF7A  52                 	db	82	;'R'
   491  00FF7B  45                 	db	69	;'E'
   492  00FF7C  53                 	db	83	;'S'
   493  00FF7D  45                 	db	69	;'E'
   494  00FF7E  54                 	db	84	;'T'
   495  00FF7F  28                 	db	40
   496  00FF80  29                 	db	41
   497  00FF81  3B                 	db	59	;';'
   498  00FF82  0A                 	db	10
   499  00FF83  00                 	db	0
   500  00FF84                     STR_22:
   501  00FF84  61                 	db	97	;'a'
   502  00FF85  64                 	db	100	;'d'
   503  00FF86  6A                 	db	106	;'j'
   504  00FF87  75                 	db	117	;'u'
   505  00FF88  73                 	db	115	;'s'
   506  00FF89  74                 	db	116	;'t'
   507  00FF8A  5F                 	db	95	;'_'
   508  00FF8B  74                 	db	116	;'t'
   509  00FF8C  69                 	db	105	;'i'
   510  00FF8D  6D                 	db	109	;'m'
   511  00FF8E  65                 	db	101	;'e'
   512  00FF8F  00                 	db	0
   513  00FF90                     STR_23:
   514  00FF90  70                 	db	112	;'p'
   515  00FF91  72                 	db	114	;'r'
   516  00FF92  69                 	db	105	;'i'
   517  00FF93  6E                 	db	110	;'n'
   518  00FF94  74                 	db	116	;'t'
   519  00FF95  5F                 	db	95	;'_'
   520  00FF96  74                 	db	116	;'t'
   521  00FF97  69                 	db	105	;'i'
   522  00FF98  6D                 	db	109	;'m'
   523  00FF99  65                 	db	101	;'e'
   524  00FF9A  00                 	db	0
   525  00FF9B                     STR_20:
   526  00FF9B  52                 	db	82	;'R'
   527  00FF9C  45                 	db	69	;'E'
   528  00FF9D  53                 	db	83	;'S'
   529  00FF9E  45                 	db	69	;'E'
   530  00FF9F  54                 	db	84	;'T'
   531  00FFA0  28                 	db	40
   532  00FFA1  29                 	db	41
   533  00FFA2  3B                 	db	59	;';'
   534  00FFA3  00                 	db	0
   535  00FFA4                     STR_10:
   536  00FFA4  09                 	db	9
   537  00FFA5  65                 	db	101	;'e'
   538  00FFA6  72                 	db	114	;'r'
   539  00FFA7  72                 	db	114	;'r'
   540  00FFA8  6F                 	db	111	;'o'
   541  00FFA9  72                 	db	114	;'r'
   542  00FFAA  0A                 	db	10
   543  00FFAB  00                 	db	0
   544  00FFAC                     STR_39:
   545  00FFAC  63                 	db	99	;'c'
   546  00FFAD  6C                 	db	108	;'l'
   547  00FFAE  65                 	db	101	;'e'
   548  00FFAF  61                 	db	97	;'a'
   549  00FFB0  72                 	db	114	;'r'
   550  00FFB1  00                 	db	0
   551  00FFB2                     STR_26:
   552  00FFB2  73                 	db	115	;'s'
   553  00FFB3  79                 	db	121	;'y'
   554  00FFB4  6E                 	db	110	;'n'
   555  00FFB5  63                 	db	99	;'c'
   556  00FFB6  00                 	db	0
   557  00FFB7                     STR_17:
   558  00FFB7  68                 	db	104	;'h'
   559  00FFB8  65                 	db	101	;'e'
   560  00FFB9  6C                 	db	108	;'l'
   561  00FFBA  70                 	db	112	;'p'
   562  00FFBB  00                 	db	0
   563  00FFBC                     STR_1:
   564  00FFBC  08                 	db	8
   565  00FFBD  20                 	db	32
   566  00FFBE  08                 	db	8
   567  00FFBF  00                 	db	0
   568  00FFC0                     STR_28:
   569  00FFC0  41                 	db	65	;'A'
   570  00FFC1  44                 	db	68	;'D'
   571  00FFC2  43                 	db	67	;'C'
   572  00FFC3  00                 	db	0
   573  00FFC4                     STR_30:
   574  00FFC4  50                 	db	80	;'P'
   575  00FFC5  57                 	db	87	;'W'
   576  00FFC6  4D                 	db	77	;'M'
   577  00FFC7  00                 	db	0
   578  00FFC8                     STR_27:
   579  00FFC8  61                 	db	97	;'a'
   580  00FFC9  64                 	db	100	;'d'
   581  00FFCA  63                 	db	99	;'c'
   582  00FFCB  00                 	db	0
   583  00FFCC                     STR_29:
   584  00FFCC  70                 	db	112	;'p'
   585  00FFCD  77                 	db	119	;'w'
   586  00FFCE  6D                 	db	109	;'m'
   587  00FFCF  00                 	db	0
   588  00FFD0                     STR_25:
   589  00FFD0  73                 	db	115	;'s'
   590  00FFD1  65                 	db	101	;'e'
   591  00FFD2  74                 	db	116	;'t'
   592  00FFD3  00                 	db	0
   593  00FFD4                     STR_3:
   594  00FFD4  20                 	db	32
   595  00FFD5  20                 	db	32
   596  00FFD6  00                 	db	0
   597  00FFD7                     STR_8:
   598  00FFD7  29                 	db	41
   599  00FFD8  20                 	db	32
   600  00FFD9  00                 	db	0
   601  00FFDA                     STR_7:
   602  00FFDA  20                 	db	32
   603  00FFDB  28                 	db	40
   604  00FFDC  00                 	db	0
   605  00FFDD                     STR_21:
   606  00FFDD  61                 	db	97	;'a'
   607  00FFDE  74                 	db	116	;'t'
   608  00FFDF  00                 	db	0
   609  00FFE0                     STR_4:
   610  00FFE0  09                 	db	9
   611  00FFE1  00                 	db	0
   612  00FFE2                     STR_9:
   613  00FFE2  2D                 	db	45
   614  00FFE3  00                 	db	0
   615  00FFE4                     STR_5:
   616  00FFE4  2F                 	db	47
   617  00FFE5  00                 	db	0
   618  00FFE6                     STR_18:
   619  00FFE6  3F                 	db	63	;'?'
   620  00FFE7  00                 	db	0
   621  00FFE8                     STR_36:
   622  00FFE8  42                 	db	66	;'B'
   623  00FFE9  00                 	db	0
   624  00FFEA                     STR_34:
   625  00FFEA  47                 	db	71	;'G'
   626  00FFEB  00                 	db	0
   627  00FFEC                     STR_32:
   628  00FFEC  52                 	db	82	;'R'
   629  00FFED  00                 	db	0
   630  00FFEE                     STR_38:
   631  00FFEE  57                 	db	87	;'W'
   632  00FFEF  00                 	db	0
   633  00FFF0                     STR_35:
   634  00FFF0  62                 	db	98	;'b'
   635  00FFF1  00                 	db	0
   636  00FFF2                     STR_13:
   637  00FFF2  64                 	db	100	;'d'
   638  00FFF3  00                 	db	0
   639  00FFF4                     STR_33:
   640  00FFF4  67                 	db	103	;'g'
   641  00FFF5  00                 	db	0
   642  00FFF6                     STR_14:
   643  00FFF6  68                 	db	104	;'h'
   644  00FFF7  00                 	db	0
   645  00FFF8                     STR_16:
   646  00FFF8  73                 	db	115	;'s'
   647  00FFF9  00                 	db	0
   648  00FFFA                     STR_37:
   649  00FFFA  77                 	db	119	;'w'
   650  00FFFB  00                 	db	0
   651  00FFFC                     STR_11:
   652  00FFFC  79                 	db	121	;'y'
   653  00FFFD  00                 	db	0
   654  0000                     
   655                           ; #config settings
   656  00FFFE  00                 	db	0	; dummy byte at the end
   657  0000                     
   658                           	psect	cinit
   659  01271C                     __pcinit:
   660                           	opt stack 0
   661  01271C                     start_initialization:
   662                           	opt stack 0
   663  01271C                     __initialization:
   664                           	opt stack 0
   665                           
   666                           ; Clear objects allocated to BIGRAM (1000 bytes)
   667  01271C  EE02  F0FA         	lfsr	0,__pbssBIGRAM
   668  012720  EE13 F0E8          	lfsr	1,1000
   669  012724                     clear_0:
   670  012724  6AEE               	clrf	postinc0,c
   671  012726  50E5               	movf	postdec1,w,c
   672  012728  50E1               	movf	fsr1l,w,c
   673  01272A  E1FC               	bnz	clear_0
   674  01272C  50E2               	movf	fsr1h,w,c
   675  01272E  E1FA               	bnz	clear_0
   676                           
   677                           ; Clear objects allocated to BANK2 (250 bytes)
   678  012730  EE02  F000         	lfsr	0,__pbssBANK2
   679  012734  0EFA               	movlw	250
   680  012736                     clear_1:
   681  012736  6AEE               	clrf	postinc0,c
   682  012738  06E8               	decf	wreg,f,c
   683  01273A  E1FD               	bnz	clear_1
   684                           
   685                           ; Clear objects allocated to BANK1 (40 bytes)
   686  01273C  EE01  F081         	lfsr	0,__pbssBANK1
   687  012740  0E28               	movlw	40
   688  012742                     clear_2:
   689  012742  6AEE               	clrf	postinc0,c
   690  012744  06E8               	decf	wreg,f,c
   691  012746  E1FD               	bnz	clear_2
   692                           
   693                           ; Clear objects allocated to BANK0 (79 bytes)
   694  012748  EE00  F0B0         	lfsr	0,__pbssBANK0
   695  01274C  0E4F               	movlw	79
   696  01274E                     clear_3:
   697  01274E  6AEE               	clrf	postinc0,c
   698  012750  06E8               	decf	wreg,f,c
   699  012752  E1FD               	bnz	clear_3
   700                           
   701                           ; Clear objects allocated to COMRAM (30 bytes)
   702  012754  EE00  F024         	lfsr	0,__pbssCOMRAM
   703  012758  0E1E               	movlw	30
   704  01275A                     clear_4:
   705  01275A  6AEE               	clrf	postinc0,c
   706  01275C  06E8               	decf	wreg,f,c
   707  01275E  E1FD               	bnz	clear_4
   708                           
   709                           ; Initialize objects allocated to BANK0 (1 bytes)
   710                           ; load TBLPTR registers with __pidataBANK0
   711  012760  0E04               	movlw	low __pidataBANK0
   712  012762  6EF6               	movwf	tblptrl,c
   713  012764  0E10               	movlw	high __pidataBANK0
   714  012766  6EF7               	movwf	tblptrh,c
   715  012768  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   716  01276A  6EF8               	movwf	tblptru,c
   717  01276C  0009               	tblrd		*+	;fetch initializer
   718  01276E  CFF5 F0FF          	movff	tablat,__pdataBANK0
   719  012772                     end_of_initialization:
   720                           	opt stack 0
   721  012772                     __end_of__initialization:
   722                           	opt stack 0
   723  012772  0100               	movlb	0
   724  012774  EF00  F080         	goto	_main	;jump to C main() function
   725                           tblptru	equ	0xFF8
   726                           tblptrh	equ	0xFF7
   727                           tblptrl	equ	0xFF6
   728                           tablat	equ	0xFF5
   729                           postinc0	equ	0xFEE
   730                           wreg	equ	0xFE8
   731                           postdec1	equ	0xFE5
   732                           fsr1h	equ	0xFE2
   733                           fsr1l	equ	0xFE1
   734                           
   735                           	psect	bssCOMRAM
   736  000024                     __pbssCOMRAM:
   737                           	opt stack 0
   738  000024                     _d1:
   739                           	opt stack 0
   740  000024                     	ds	3
   741  000027                     RTCC_loop@prev_halfsec:
   742                           	opt stack 0
   743  000027                     	ds	1
   744  000028                     _colon:
   745                           	opt stack 0
   746  000028                     	ds	1
   747  000029                     _display_flag:
   748                           	opt stack 0
   749  000029                     	ds	1
   750  00002A                     _edit_flag:
   751                           	opt stack 0
   752  00002A                     	ds	1
   753  00002B                     _halfsec:
   754                           	opt stack 0
   755  00002B                     	ds	1
   756  00002C                     _rc_flag:
   757                           	opt stack 0
   758  00002C                     	ds	1
   759  00002D                     _rx_flag:
   760                           	opt stack 0
   761  00002D                     	ds	1
   762  00002E                     _time_sync:
   763                           	opt stack 0
   764  00002E                     	ds	1
   765  00002F                     _caltime_now:
   766                           	opt stack 0
   767  00002F                     	ds	7
   768  000036                     _epoch_now:
   769                           	opt stack 0
   770  000036                     	ds	4
   771  00003A                     _sw_G:
   772                           	opt stack 0
   773  00003A                     	ds	4
   774  00003E                     _sw_R:
   775                           	opt stack 0
   776  00003E                     	ds	4
   777                           tblptru	equ	0xFF8
   778                           tblptrh	equ	0xFF7
   779                           tblptrl	equ	0xFF6
   780                           tablat	equ	0xFF5
   781                           postinc0	equ	0xFEE
   782                           wreg	equ	0xFE8
   783                           postdec1	equ	0xFE5
   784                           fsr1h	equ	0xFE2
   785                           fsr1l	equ	0xFE1
   786                           
   787                           	psect	bssBANK0
   788  0000B0                     __pbssBANK0:
   789                           	opt stack 0
   790  0000B0                     main@prev_scan:
   791                           	opt stack 0
   792  0000B0                     	ds	3
   793  0000B3                     epoch_to_caltime@day_cache:
   794                           	opt stack 0
   795  0000B3                     	ds	2
   796  0000B5                     _light_mode:
   797                           	opt stack 0
   798  0000B5                     	ds	1
   799  0000B6                     _time_change_flag:
   800                           	opt stack 0
   801  0000B6                     	ds	1
   802  0000B7                     epoch_to_caltime@year_cache:
   803                           	opt stack 0
   804  0000B7                     	ds	1
   805  0000B8                     my_terminal_loop@command_init:
   806                           	opt stack 0
   807  0000B8                     	ds	1
   808  0000B9                     my_terminal_loop@op0:
   809                           	opt stack 0
   810  0000B9                     	ds	20
   811  0000CD                     my_terminal_loop@op1:
   812                           	opt stack 0
   813  0000CD                     	ds	20
   814  0000E1                     _rx_buf:
   815                           	opt stack 0
   816  0000E1                     	ds	8
   817  0000E9                     _tx_buf:
   818                           	opt stack 0
   819  0000E9                     	ds	8
   820  0000F1                     my_terminal_loop@command:
   821                           	opt stack 0
   822  0000F1                     	ds	8
   823  0000F9                     _sw_B:
   824                           	opt stack 0
   825  0000F9                     	ds	4
   826  0000FD                     main@_2516:
   827                           	opt stack 0
   828  0000FD                     	ds	1
   829  0000FE                     main@n:
   830                           	opt stack 0
   831  0000FE                     	ds	1
   832                           tblptru	equ	0xFF8
   833                           tblptrh	equ	0xFF7
   834                           tblptrl	equ	0xFF6
   835                           tablat	equ	0xFF5
   836                           postinc0	equ	0xFEE
   837                           wreg	equ	0xFE8
   838                           postdec1	equ	0xFE5
   839                           fsr1h	equ	0xFE2
   840                           fsr1l	equ	0xFE1
   841                           
   842                           	psect	dataBANK0
   843  0000FF                     __pdataBANK0:
   844                           	opt stack 0
   845  0000FF                     epoch_to_caltime@month_cache:
   846                           	opt stack 0
   847  0000FF                     	ds	1
   848                           tblptru	equ	0xFF8
   849                           tblptrh	equ	0xFF7
   850                           tblptrl	equ	0xFF6
   851                           tablat	equ	0xFF5
   852                           postinc0	equ	0xFEE
   853                           wreg	equ	0xFE8
   854                           postdec1	equ	0xFE5
   855                           fsr1h	equ	0xFE2
   856                           fsr1l	equ	0xFE1
   857                           
   858                           	psect	bssBANK1
   859  000181                     __pbssBANK1:
   860                           	opt stack 0
   861  000181                     my_terminal_loop@op2:
   862                           	opt stack 0
   863  000181                     	ds	20
   864  000195                     my_terminal_loop@op3:
   865                           	opt stack 0
   866  000195                     	ds	20
   867                           tblptru	equ	0xFF8
   868                           tblptrh	equ	0xFF7
   869                           tblptrl	equ	0xFF6
   870                           tablat	equ	0xFF5
   871                           postinc0	equ	0xFEE
   872                           wreg	equ	0xFE8
   873                           postdec1	equ	0xFE5
   874                           fsr1h	equ	0xFE2
   875                           fsr1l	equ	0xFE1
   876                           
   877                           	psect	bssBANK2
   878  000200                     __pbssBANK2:
   879                           	opt stack 0
   880  000200                     main_init@rxbuf:
   881                           	opt stack 0
   882  000200                     	ds	250
   883                           tblptru	equ	0xFF8
   884                           tblptrh	equ	0xFF7
   885                           tblptrl	equ	0xFF6
   886                           tablat	equ	0xFF5
   887                           postinc0	equ	0xFEE
   888                           wreg	equ	0xFE8
   889                           postdec1	equ	0xFE5
   890                           fsr1h	equ	0xFE2
   891                           fsr1l	equ	0xFE1
   892                           
   893                           	psect	bssBIGRAM
   894  0002FA                     __pbssBIGRAM:
   895                           	opt stack 0
   896  0002FA                     main_init@txbuf:
   897                           	opt stack 0
   898  0002FA                     	ds	1000
   899                           tblptru	equ	0xFF8
   900                           tblptrh	equ	0xFF7
   901                           tblptrl	equ	0xFF6
   902                           tablat	equ	0xFF5
   903                           postinc0	equ	0xFEE
   904                           wreg	equ	0xFE8
   905                           postdec1	equ	0xFE5
   906                           fsr1h	equ	0xFE2
   907                           fsr1l	equ	0xFE1
   908                           
   909                           	psect	cstackBANK1
   910  000100                     __pcstackBANK1:
   911                           	opt stack 0
   912  000100                     command_operation@tx:
   913                           	opt stack 0
   914                           
   915                           ; 2 bytes @ 0x0
   916  000100                     	ds	2
   917  000102                     command_operation@op0:
   918                           	opt stack 0
   919                           
   920                           ; 2 bytes @ 0x2
   921  000102                     	ds	2
   922  000104                     command_operation@op1:
   923                           	opt stack 0
   924                           
   925                           ; 2 bytes @ 0x4
   926  000104                     	ds	2
   927  000106                     command_operation@op2:
   928                           	opt stack 0
   929                           
   930                           ; 2 bytes @ 0x6
   931  000106                     	ds	2
   932  000108                     command_operation@op3:
   933                           	opt stack 0
   934                           
   935                           ; 2 bytes @ 0x8
   936  000108                     	ds	2
   937  00010A                     my_terminal_loop@buf:
   938                           	opt stack 0
   939                           
   940                           ; 100 bytes @ 0xA
   941  00010A                     	ds	100
   942  00016E                     _my_terminal_loop$3145:
   943                           	opt stack 0
   944                           
   945                           ; 2 bytes @ 0x6E
   946  00016E                     	ds	2
   947  000170                     my_terminal_loop@i_2274:
   948                           	opt stack 0
   949                           
   950                           ; 1 bytes @ 0x70
   951  000170                     	ds	1
   952  000171                     my_terminal_loop@ascii:
   953                           	opt stack 0
   954                           
   955                           ; 1 bytes @ 0x71
   956  000171                     	ds	1
   957  000172                     my_terminal_loop@i:
   958                           	opt stack 0
   959                           
   960                           ; 1 bytes @ 0x72
   961  000172                     	ds	1
   962  000173                     ??_main:
   963                           
   964                           ; 0 bytes @ 0x73
   965  000173                     	ds	4
   966  000177                     main@value:
   967                           	opt stack 0
   968                           
   969                           ; 1 bytes @ 0x77
   970  000177                     	ds	1
   971  000178                     main@value_2517:
   972                           	opt stack 0
   973                           
   974                           ; 1 bytes @ 0x78
   975  000178                     	ds	1
   976  000179                     main@scan:
   977                           	opt stack 0
   978                           
   979                           ; 2 bytes @ 0x79
   980  000179                     	ds	2
   981  00017B                     main@temp:
   982                           	opt stack 0
   983                           
   984                           ; 4 bytes @ 0x7B
   985  00017B                     	ds	4
   986  00017F                     main@i:
   987                           	opt stack 0
   988                           
   989                           ; 2 bytes @ 0x7F
   990  00017F                     	ds	2
   991                           tblptru	equ	0xFF8
   992                           tblptrh	equ	0xFF7
   993                           tblptrl	equ	0xFF6
   994                           tablat	equ	0xFF5
   995                           postinc0	equ	0xFEE
   996                           wreg	equ	0xFE8
   997                           postdec1	equ	0xFE5
   998                           fsr1h	equ	0xFE2
   999                           fsr1l	equ	0xFE1
  1000                           
  1001                           	psect	cstackBANK0
  1002  000060                     __pcstackBANK0:
  1003                           	opt stack 0
  1004  000060                     ??_ringbuf_num:
  1005  000060                     ?___wmul:
  1006                           	opt stack 0
  1007  000060                     ?___llmod:
  1008                           	opt stack 0
  1009  000060                     ___awdiv@counter:
  1010                           	opt stack 0
  1011  000060                     ___awmod@counter:
  1012                           	opt stack 0
  1013  000060                     ringbuf_init@rb:
  1014                           	opt stack 0
  1015  000060                     ___wmul@multiplier:
  1016                           	opt stack 0
  1017  000060                     ___llmod@dividend:
  1018                           	opt stack 0
  1019                           
  1020                           ; 4 bytes @ 0x0
  1021  000060                     	ds	1
  1022  000061                     ___awdiv@sign:
  1023                           	opt stack 0
  1024  000061                     ___awmod@sign:
  1025                           	opt stack 0
  1026                           
  1027                           ; 1 bytes @ 0x1
  1028  000061                     	ds	1
  1029  000062                     ??_month_length:
  1030  000062                     ringbuf_init@internal_buf:
  1031                           	opt stack 0
  1032  000062                     ___wmul@multiplicand:
  1033                           	opt stack 0
  1034  000062                     ___awdiv@quotient:
  1035                           	opt stack 0
  1036                           
  1037                           ; 2 bytes @ 0x2
  1038  000062                     	ds	2
  1039  000064                     ringbuf_init@bufsize:
  1040                           	opt stack 0
  1041  000064                     caltime_to_RTCC@ct:
  1042                           	opt stack 0
  1043  000064                     ___wmul@product:
  1044                           	opt stack 0
  1045  000064                     ___llmod@divisor:
  1046                           	opt stack 0
  1047                           
  1048                           ; 4 bytes @ 0x4
  1049  000064                     	ds	2
  1050  000066                     ??_ringbuf_put:
  1051  000066                     ??_ringbuf_pop:
  1052  000066                     ??_ringbuf_backspace:
  1053  000066                     ?_my_atoi:
  1054                           	opt stack 0
  1055  000066                     ?___lwdiv:
  1056                           	opt stack 0
  1057  000066                     month_length@year:
  1058                           	opt stack 0
  1059  000066                     my_atoi@str:
  1060                           	opt stack 0
  1061  000066                     ___lwdiv@dividend:
  1062                           	opt stack 0
  1063                           
  1064                           ; 2 bytes @ 0x6
  1065  000066                     	ds	1
  1066  000067                     ?___lmul:
  1067                           	opt stack 0
  1068  000067                     ___lmul@multiplier:
  1069                           	opt stack 0
  1070                           
  1071                           ; 4 bytes @ 0x7
  1072  000067                     	ds	1
  1073  000068                     ??_my_atoi:
  1074  000068                     ___lwdiv@divisor:
  1075                           	opt stack 0
  1076                           
  1077                           ; 2 bytes @ 0x8
  1078  000068                     	ds	2
  1079  00006A                     ___lwdiv@counter:
  1080                           	opt stack 0
  1081  00006A                     ringbuf_put_str@rb:
  1082                           	opt stack 0
  1083  00006A                     tx_sends@asciicode:
  1084                           	opt stack 0
  1085                           
  1086                           ; 2 bytes @ 0xA
  1087  00006A                     	ds	1
  1088  00006B                     ___lwdiv@quotient:
  1089                           	opt stack 0
  1090  00006B                     ___lmul@multiplicand:
  1091                           	opt stack 0
  1092                           
  1093                           ; 4 bytes @ 0xB
  1094  00006B                     	ds	1
  1095  00006C                     ringbuf_put_str@str:
  1096                           	opt stack 0
  1097  00006C                     my_atoi@ret:
  1098                           	opt stack 0
  1099                           
  1100                           ; 2 bytes @ 0xC
  1101  00006C                     	ds	1
  1102  00006D                     ringbuf_put_num@rb:
  1103                           	opt stack 0
  1104  00006D                     my_utoa@str:
  1105                           	opt stack 0
  1106                           
  1107                           ; 2 bytes @ 0xD
  1108  00006D                     	ds	1
  1109  00006E                     PWM_set@value:
  1110                           	opt stack 0
  1111                           
  1112                           ; 2 bytes @ 0xE
  1113  00006E                     	ds	1
  1114  00006F                     ringbuf_put_num@value:
  1115                           	opt stack 0
  1116  00006F                     my_utoa@value:
  1117                           	opt stack 0
  1118  00006F                     ___lmul@product:
  1119                           	opt stack 0
  1120                           
  1121                           ; 4 bytes @ 0xF
  1122  00006F                     	ds	1
  1123  000070                     ??_PWM_set:
  1124                           
  1125                           ; 0 bytes @ 0x10
  1126  000070                     	ds	1
  1127  000071                     ringbuf_put_num@digits:
  1128                           	opt stack 0
  1129  000071                     my_utoa@digits:
  1130                           	opt stack 0
  1131                           
  1132                           ; 1 bytes @ 0x11
  1133  000071                     	ds	1
  1134  000072                     ringbuf_put_num@i:
  1135                           	opt stack 0
  1136  000072                     my_utoa@d:
  1137                           	opt stack 0
  1138                           
  1139                           ; 1 bytes @ 0x12
  1140  000072                     	ds	1
  1141  000073                     ?___lldiv:
  1142                           	opt stack 0
  1143  000073                     ringbuf_put_num@temp:
  1144                           	opt stack 0
  1145  000073                     caltime_to_epoch@ct:
  1146                           	opt stack 0
  1147  000073                     my_utoa@v:
  1148                           	opt stack 0
  1149  000073                     ___lldiv@dividend:
  1150                           	opt stack 0
  1151                           
  1152                           ; 4 bytes @ 0x13
  1153  000073                     	ds	2
  1154  000075                     caltime_to_epoch@ep:
  1155                           	opt stack 0
  1156  000075                     print_time_dec@tx:
  1157                           	opt stack 0
  1158                           
  1159                           ; 2 bytes @ 0x15
  1160  000075                     	ds	2
  1161  000077                     ??_caltime_to_epoch:
  1162  000077                     print_time_dec@dec:
  1163                           	opt stack 0
  1164  000077                     ___lldiv@divisor:
  1165                           	opt stack 0
  1166                           
  1167                           ; 4 bytes @ 0x17
  1168  000077                     	ds	1
  1169  000078                     print_time_dec@edit:
  1170                           	opt stack 0
  1171                           
  1172                           ; 1 bytes @ 0x18
  1173  000078                     	ds	1
  1174  000079                     print_time_dec@str:
  1175                           	opt stack 0
  1176                           
  1177                           ; 10 bytes @ 0x19
  1178  000079                     	ds	2
  1179  00007B                     caltime_to_epoch@year:
  1180                           	opt stack 0
  1181  00007B                     ___lldiv@quotient:
  1182                           	opt stack 0
  1183                           
  1184                           ; 4 bytes @ 0x1B
  1185  00007B                     	ds	1
  1186  00007C                     caltime_to_epoch@month_2069:
  1187                           	opt stack 0
  1188                           
  1189                           ; 1 bytes @ 0x1C
  1190  00007C                     	ds	1
  1191  00007D                     caltime_to_epoch@epoch:
  1192                           	opt stack 0
  1193                           
  1194                           ; 4 bytes @ 0x1D
  1195  00007D                     	ds	2
  1196  00007F                     ___lldiv@counter:
  1197                           	opt stack 0
  1198                           
  1199                           ; 1 bytes @ 0x1F
  1200  00007F                     	ds	1
  1201  000080                     ?_get_quot_rem:
  1202                           	opt stack 0
  1203  000080                     get_quot_rem@quot:
  1204                           	opt stack 0
  1205                           
  1206                           ; 2 bytes @ 0x20
  1207  000080                     	ds	1
  1208  000081                     caltime_to_epoch@month:
  1209                           	opt stack 0
  1210                           
  1211                           ; 1 bytes @ 0x21
  1212  000081                     	ds	1
  1213  000082                     get_quot_rem@div:
  1214                           	opt stack 0
  1215  000082                     RTCC_from_RTCC@ct:
  1216                           	opt stack 0
  1217                           
  1218                           ; 2 bytes @ 0x22
  1219  000082                     	ds	2
  1220  000084                     RTCC_from_RTCC@ep:
  1221                           	opt stack 0
  1222  000084                     get_quot_rem@num:
  1223                           	opt stack 0
  1224                           
  1225                           ; 4 bytes @ 0x24
  1226  000084                     	ds	2
  1227  000086                     print_time@tx:
  1228                           	opt stack 0
  1229                           
  1230                           ; 2 bytes @ 0x26
  1231  000086                     	ds	2
  1232  000088                     print_time@carrige_return:
  1233                           	opt stack 0
  1234  000088                     epoch_to_caltime@ct:
  1235                           	opt stack 0
  1236                           
  1237                           ; 2 bytes @ 0x28
  1238  000088                     	ds	2
  1239  00008A                     epoch_to_caltime@ep:
  1240                           	opt stack 0
  1241                           
  1242                           ; 2 bytes @ 0x2A
  1243  00008A                     	ds	2
  1244  00008C                     ??_epoch_to_caltime:
  1245                           
  1246                           ; 0 bytes @ 0x2C
  1247  00008C                     	ds	2
  1248  00008E                     epoch_to_caltime@day_since_epoch:
  1249                           	opt stack 0
  1250                           
  1251                           ; 2 bytes @ 0x2E
  1252  00008E                     	ds	2
  1253  000090                     epoch_to_caltime@day:
  1254                           	opt stack 0
  1255                           
  1256                           ; 2 bytes @ 0x30
  1257  000090                     	ds	2
  1258  000092                     epoch_to_caltime@year:
  1259                           	opt stack 0
  1260                           
  1261                           ; 1 bytes @ 0x32
  1262  000092                     	ds	1
  1263  000093                     epoch_to_caltime@month:
  1264                           	opt stack 0
  1265                           
  1266                           ; 1 bytes @ 0x33
  1267  000093                     	ds	1
  1268  000094                     epoch_to_caltime@num:
  1269                           	opt stack 0
  1270                           
  1271                           ; 4 bytes @ 0x34
  1272  000094                     	ds	4
  1273  000098                     RTCC_from_caltime@ct:
  1274                           	opt stack 0
  1275  000098                     RTCC_from_epoch@ct:
  1276                           	opt stack 0
  1277                           
  1278                           ; 2 bytes @ 0x38
  1279  000098                     	ds	2
  1280  00009A                     RTCC_from_caltime@ep:
  1281                           	opt stack 0
  1282  00009A                     RTCC_from_epoch@ep:
  1283                           	opt stack 0
  1284                           
  1285                           ; 2 bytes @ 0x3A
  1286  00009A                     	ds	2
  1287  00009C                     command_at_hand@tx:
  1288                           	opt stack 0
  1289                           
  1290                           ; 2 bytes @ 0x3C
  1291  00009C                     	ds	2
  1292  00009E                     command_at_hand@hand:
  1293                           	opt stack 0
  1294                           
  1295                           ; 2 bytes @ 0x3E
  1296  00009E                     	ds	2
  1297  0000A0                     command_at_hand@min:
  1298                           	opt stack 0
  1299                           
  1300                           ; 1 bytes @ 0x40
  1301  0000A0                     	ds	1
  1302  0000A1                     command_at_hand@max:
  1303                           	opt stack 0
  1304                           
  1305                           ; 1 bytes @ 0x41
  1306  0000A1                     	ds	1
  1307  0000A2                     command_at_hand@value:
  1308                           	opt stack 0
  1309                           
  1310                           ; 1 bytes @ 0x42
  1311  0000A2                     	ds	1
  1312  0000A3                     command_at@tx:
  1313                           	opt stack 0
  1314                           
  1315                           ; 2 bytes @ 0x43
  1316  0000A3                     	ds	2
  1317  0000A5                     command_at@op1:
  1318                           	opt stack 0
  1319                           
  1320                           ; 2 bytes @ 0x45
  1321  0000A5                     	ds	2
  1322  0000A7                     command_at@op2:
  1323                           	opt stack 0
  1324                           
  1325                           ; 2 bytes @ 0x47
  1326  0000A7                     	ds	2
  1327  0000A9                     _command_at$3146:
  1328                           	opt stack 0
  1329                           
  1330                           ; 1 bytes @ 0x49
  1331  0000A9                     	ds	1
  1332  0000AA                     my_terminal_loop@tx:
  1333                           	opt stack 0
  1334                           
  1335                           ; 2 bytes @ 0x4A
  1336  0000AA                     	ds	2
  1337  0000AC                     my_terminal_loop@rx:
  1338                           	opt stack 0
  1339                           
  1340                           ; 2 bytes @ 0x4C
  1341  0000AC                     	ds	2
  1342  0000AE                     ??_my_terminal_loop:
  1343                           
  1344                           ; 0 bytes @ 0x4E
  1345  0000AE                     	ds	2
  1346                           tblptru	equ	0xFF8
  1347                           tblptrh	equ	0xFF7
  1348                           tblptrl	equ	0xFF6
  1349                           tablat	equ	0xFF5
  1350                           postinc0	equ	0xFEE
  1351                           wreg	equ	0xFE8
  1352                           postdec1	equ	0xFE5
  1353                           fsr1h	equ	0xFE2
  1354                           fsr1l	equ	0xFE1
  1355                           
  1356                           	psect	cstackCOMRAM
  1357  000001                     __pcstackCOMRAM:
  1358                           	opt stack 0
  1359  000001                     ?i2_ringbuf_num:
  1360                           	opt stack 0
  1361  000001                     button_timer_interrupt@bt:
  1362                           	opt stack 0
  1363  000001                     i2ringbuf_num@rb:
  1364                           	opt stack 0
  1365                           
  1366                           ; 2 bytes @ 0x0
  1367  000001                     	ds	2
  1368  000003                     ??i2_ringbuf_num:
  1369  000003                     button_timer_interrupt@sw_value:
  1370                           	opt stack 0
  1371                           
  1372                           ; 1 bytes @ 0x2
  1373  000003                     	ds	1
  1374  000004                     
  1375                           ; 0 bytes @ 0x3
  1376  000004                     	ds	5
  1377  000009                     i2ringbuf_put@rb:
  1378                           	opt stack 0
  1379  000009                     i2ringbuf_pop@rb:
  1380                           	opt stack 0
  1381                           
  1382                           ; 2 bytes @ 0x8
  1383  000009                     	ds	2
  1384  00000B                     ??i2_ringbuf_pop:
  1385  00000B                     i2ringbuf_put@asciicode:
  1386                           	opt stack 0
  1387                           
  1388                           ; 1 bytes @ 0xA
  1389  00000B                     	ds	1
  1390  00000C                     ??i2_ringbuf_put:
  1391                           
  1392                           ; 0 bytes @ 0xB
  1393  00000C                     	ds	3
  1394  00000F                     i2ringbuf_pop@ret:
  1395                           	opt stack 0
  1396                           
  1397                           ; 1 bytes @ 0xE
  1398  00000F                     	ds	1
  1399  000010                     UART_ISR@ascii:
  1400                           	opt stack 0
  1401                           
  1402                           ; 1 bytes @ 0xF
  1403  000010                     	ds	1
  1404  000011                     ??_ISR:
  1405                           
  1406                           ; 0 bytes @ 0x10
  1407  000011                     	ds	14
  1408  00001F                     ??_timer3_init:
  1409  00001F                     ??_x_to_d:
  1410  00001F                     ?_ADC:
  1411                           	opt stack 0
  1412  00001F                     ?_ringbuf_num:
  1413                           	opt stack 0
  1414  00001F                     ?___awdiv:
  1415                           	opt stack 0
  1416  00001F                     ?___awmod:
  1417                           	opt stack 0
  1418  00001F                     ?___lwmod:
  1419                           	opt stack 0
  1420  00001F                     timer1_init@clock_select:
  1421                           	opt stack 0
  1422  00001F                     ADC_init@p_ref:
  1423                           	opt stack 0
  1424  00001F                     PWM_init@PR:
  1425                           	opt stack 0
  1426  00001F                     ___llmod@counter:
  1427                           	opt stack 0
  1428  00001F                     ringbuf_num@rb:
  1429                           	opt stack 0
  1430  00001F                     ringbuf_delete@rb:
  1431                           	opt stack 0
  1432  00001F                     my_strcmp@str1:
  1433                           	opt stack 0
  1434  00001F                     ___awdiv@dividend:
  1435                           	opt stack 0
  1436  00001F                     ___awmod@dividend:
  1437                           	opt stack 0
  1438  00001F                     ___lwmod@dividend:
  1439                           	opt stack 0
  1440                           
  1441                           ; 2 bytes @ 0x1E
  1442  00001F                     	ds	1
  1443  000020                     ??_timer1_init:
  1444  000020                     timer3_init@prescaler:
  1445                           	opt stack 0
  1446  000020                     x_to_d@hex:
  1447                           	opt stack 0
  1448                           
  1449                           ; 1 bytes @ 0x1F
  1450  000020                     	ds	1
  1451  000021                     ??_ADC:
  1452  000021                     timer1_init@prescaler:
  1453                           	opt stack 0
  1454  000021                     ringbuf_put@rb:
  1455                           	opt stack 0
  1456  000021                     ringbuf_pop@rb:
  1457                           	opt stack 0
  1458  000021                     ringbuf_backspace@rb:
  1459                           	opt stack 0
  1460  000021                     RTCC_to_caltime@ct:
  1461                           	opt stack 0
  1462  000021                     my_strcmp@str2:
  1463                           	opt stack 0
  1464  000021                     ___awdiv@divisor:
  1465                           	opt stack 0
  1466  000021                     ___awmod@divisor:
  1467                           	opt stack 0
  1468  000021                     ___lwmod@divisor:
  1469                           	opt stack 0
  1470                           
  1471                           ; 2 bytes @ 0x20
  1472  000021                     	ds	1
  1473  000022                     ADC@ch:
  1474                           	opt stack 0
  1475                           
  1476                           ; 1 bytes @ 0x21
  1477  000022                     	ds	1
  1478  000023                     ??_my_strcmp:
  1479  000023                     ringbuf_put@asciicode:
  1480                           	opt stack 0
  1481  000023                     ringbuf_pop@ret:
  1482                           	opt stack 0
  1483  000023                     d_to_x@dec:
  1484                           	opt stack 0
  1485  000023                     month_length@month:
  1486                           	opt stack 0
  1487  000023                     RTCC_to_caltime@dumy:
  1488                           	opt stack 0
  1489  000023                     PWM_set@color:
  1490                           	opt stack 0
  1491  000023                     ___lwmod@counter:
  1492                           	opt stack 0
  1493                           
  1494                           ; 1 bytes @ 0x22
  1495  000023                     	ds	1
  1496  000024                     tblptru	equ	0xFF8
  1497                           tblptrh	equ	0xFF7
  1498                           tblptrl	equ	0xFF6
  1499                           tablat	equ	0xFF5
  1500                           postinc0	equ	0xFEE
  1501                           wreg	equ	0xFE8
  1502                           postdec1	equ	0xFE5
  1503                           fsr1h	equ	0xFE2
  1504                           fsr1l	equ	0xFE1
  1505                           
  1506                           ; 0 bytes @ 0x23
  1507 ;;
  1508 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1509 ;;
  1510 ;; *************** function _main *****************
  1511 ;; Defined at:
  1512 ;;		line 249 in file "PIC18F27J53-killifish_light03.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  scan            2  121[BANK1 ] unsigned int 
  1517 ;;  temp            4  123[BANK1 ] unsigned long 
  1518 ;;  value           1  120[BANK1 ] unsigned char 
  1519 ;;  value           1  119[BANK1 ] unsigned char 
  1520 ;;  i               2  127[BANK1 ] unsigned int 
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  2  633[None  ] int 
  1523 ;; Registers used:
  1524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1531 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1532 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1533 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1534 ;;Total ram usage:       14 bytes
  1535 ;; Hardware stack levels required when called:   13
  1536 ;; This function calls:
  1537 ;;		_ADC
  1538 ;;		_PWM_set
  1539 ;;		_RTCC_from_RTCC
  1540 ;;		_RTCC_from_epoch
  1541 ;;		_RTCC_loop
  1542 ;;		___lldiv
  1543 ;;		___llmod
  1544 ;;		___lmul
  1545 ;;		___lwdiv
  1546 ;;		___wmul
  1547 ;;		_main_init
  1548 ;;		_my_terminal_loop
  1549 ;;		_ringbuf_num
  1550 ;; This function is called by:
  1551 ;;		Startup code after reset
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           	psect	text0
  1556  010000                     __ptext0:
  1557                           	opt stack 0
  1558  010000                     _main:
  1559                           	opt stack 18
  1560                           
  1561                           ;PIC18F27J53-killifish_light03.c: 250: main_init();
  1562                           
  1563                           ;incstack = 0
  1564  010000  EC19  F091         	call	_main_init	;wreg free
  1565                           
  1566                           ;PIC18F27J53-killifish_light03.c: 251: INTCONbits.GIE = 1;
  1567  010004  8EF2               	bsf	intcon,7,c	;volatile
  1568                           
  1569                           ;PIC18F27J53-killifish_light03.c: 254: RTCC_from_RTCC(&caltime_now, &epoch_now);
  1570  010006  0E2F               	movlw	low _caltime_now
  1571  010008  0100               	movlb	0	; () banked
  1572  01000A  6F82               	movwf	RTCC_from_RTCC@ct& (0+255),b
  1573  01000C  0E00               	movlw	high _caltime_now
  1574  01000E  0100               	movlb	0	; () banked
  1575  010010  6F83               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  1576  010012  0E36               	movlw	low _epoch_now
  1577  010014  0100               	movlb	0	; () banked
  1578  010016  6F84               	movwf	RTCC_from_RTCC@ep& (0+255),b
  1579  010018  0E00               	movlw	high _epoch_now
  1580  01001A  0100               	movlb	0	; () banked
  1581  01001C  6F85               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  1582  01001E  EC14  F095         	call	_RTCC_from_RTCC	;wreg free
  1583                           
  1584                           ;PIC18F27J53-killifish_light03.c: 255: if (caltime_now.DD == 0) {
  1585  010022  5033               	movf	_caltime_now+4,w,c
  1586  010024  A4D8               	btfss	status,2,c
  1587  010026  D017               	goto	l5182
  1588                           
  1589                           ;PIC18F27J53-killifish_light03.c: 256: epoch_now = 0;
  1590  010028  0E00               	movlw	0
  1591  01002A  6E36               	movwf	_epoch_now,c
  1592  01002C  0E00               	movlw	0
  1593  01002E  6E37               	movwf	_epoch_now+1,c
  1594  010030  0E00               	movlw	0
  1595  010032  6E38               	movwf	_epoch_now+2,c
  1596  010034  0E00               	movlw	0
  1597  010036  6E39               	movwf	_epoch_now+3,c
  1598                           
  1599                           ;PIC18F27J53-killifish_light03.c: 257: RTCC_from_epoch(&caltime_now, &epoch_now);
  1600  010038  0E2F               	movlw	low _caltime_now
  1601  01003A  0100               	movlb	0	; () banked
  1602  01003C  6F98               	movwf	RTCC_from_epoch@ct& (0+255),b
  1603  01003E  0E00               	movlw	high _caltime_now
  1604  010040  0100               	movlb	0	; () banked
  1605  010042  6F99               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  1606  010044  0E36               	movlw	low _epoch_now
  1607  010046  0100               	movlb	0	; () banked
  1608  010048  6F9A               	movwf	RTCC_from_epoch@ep& (0+255),b
  1609  01004A  0E00               	movlw	high _epoch_now
  1610  01004C  0100               	movlb	0	; () banked
  1611  01004E  6F9B               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  1612  010050  EC25  F095         	call	_RTCC_from_epoch	;wreg free
  1613  010054  D000               	goto	l5182
  1614  010056                     l5182:
  1615                           
  1616                           ;PIC18F27J53-killifish_light03.c: 262: RTCC_loop();
  1617  010056  ECC6  F094         	call	_RTCC_loop	;wreg free
  1618                           
  1619                           ;PIC18F27J53-killifish_light03.c: 263: my_terminal_loop(&rx_buf, &tx_buf);
  1620  01005A  0EE1               	movlw	low _rx_buf
  1621  01005C  0100               	movlb	0	; () banked
  1622  01005E  6FAA               	movwf	my_terminal_loop@tx& (0+255),b
  1623  010060  0E00               	movlw	high _rx_buf
  1624  010062  0100               	movlb	0	; () banked
  1625  010064  6FAB               	movwf	(my_terminal_loop@tx+1)& (0+255),b
  1626  010066  0EE9               	movlw	low _tx_buf
  1627  010068  0100               	movlb	0	; () banked
  1628  01006A  6FAC               	movwf	my_terminal_loop@rx& (0+255),b
  1629  01006C  0E00               	movlw	high _tx_buf
  1630  01006E  0100               	movlb	0	; () banked
  1631  010070  6FAD               	movwf	(my_terminal_loop@rx+1)& (0+255),b
  1632  010072  EC7A  F083         	call	_my_terminal_loop	;wreg free
  1633                           
  1634                           ;PIC18F27J53-killifish_light03.c: 264: if (ringbuf_num(&tx_buf))PIE1bits.TXIE = 1;
  1635  010076  0EE9               	movlw	low _tx_buf
  1636  010078  6E1F               	movwf	ringbuf_num@rb,c
  1637  01007A  0E00               	movlw	high _tx_buf
  1638  01007C  6E20               	movwf	ringbuf_num@rb+1,c
  1639  01007E  EC45  F08B         	call	_ringbuf_num	;wreg free
  1640  010082  501F               	movf	?_ringbuf_num,w,c
  1641  010084  1020               	iorwf	?_ringbuf_num+1,w,c
  1642  010086  B4D8               	btfsc	status,2,c
  1643  010088  D002               	goto	l5190
  1644  01008A  889D               	bsf	3997,4,c	;volatile
  1645  01008C  D000               	goto	l5190
  1646  01008E                     l5190:
  1647                           
  1648                           ;PIC18F27J53-killifish_light03.c: 265: if (time_change_flag) {
  1649  01008E  0100               	movlb	0	; () banked
  1650  010090  51B6               	movf	_time_change_flag& (0+255),w,b
  1651  010092  B4D8               	btfsc	status,2,c
  1652  010094  D0A3               	goto	l5208
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;PIC18F27J53-killifish_light03.c: 266: time_change_flag = 0;
  1656  010096  0E00               	movlw	0
  1657  010098  0100               	movlb	0	; () banked
  1658  01009A  6FB6               	movwf	_time_change_flag& (0+255),b
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;PIC18F27J53-killifish_light03.c: 267: RTCC_from_RTCC(&caltime_now, &epoch_now);
  1662  01009C  0E2F               	movlw	low _caltime_now
  1663  01009E  0100               	movlb	0	; () banked
  1664  0100A0  6F82               	movwf	RTCC_from_RTCC@ct& (0+255),b
  1665  0100A2  0E00               	movlw	high _caltime_now
  1666  0100A4  0100               	movlb	0	; () banked
  1667  0100A6  6F83               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  1668  0100A8  0E36               	movlw	low _epoch_now
  1669  0100AA  0100               	movlb	0	; () banked
  1670  0100AC  6F84               	movwf	RTCC_from_RTCC@ep& (0+255),b
  1671  0100AE  0E00               	movlw	high _epoch_now
  1672  0100B0  0100               	movlb	0	; () banked
  1673  0100B2  6F85               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  1674  0100B4  EC14  F095         	call	_RTCC_from_RTCC	;wreg free
  1675                           
  1676                           ;PIC18F27J53-killifish_light03.c: 268: if (light_mode == TIME_SYNC_mode) {
  1677  0100B8  0100               	movlb	0	; () banked
  1678  0100BA  51B5               	movf	_light_mode& (0+255),w,b
  1679  0100BC  A4D8               	btfss	status,2,c
  1680  0100BE  D08E               	goto	l5208
  1681                           
  1682                           ; BSR set to: 0
  1683                           ;PIC18F27J53-killifish_light03.c: 269: epoch_t temp = (epoch_t) epoch_now % ((epoch_t)60
      +                          *60*24);
  1684  0100C0  C036  F060         	movff	_epoch_now,___llmod@dividend
  1685  0100C4  C037  F061         	movff	_epoch_now+1,___llmod@dividend+1
  1686  0100C8  C038  F062         	movff	_epoch_now+2,___llmod@dividend+2
  1687  0100CC  C039  F063         	movff	_epoch_now+3,___llmod@dividend+3
  1688  0100D0  0E80               	movlw	128
  1689  0100D2  0100               	movlb	0	; () banked
  1690  0100D4  6F64               	movwf	___llmod@divisor& (0+255),b
  1691  0100D6  0E51               	movlw	81
  1692  0100D8  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  1693  0100DA  0E01               	movlw	1
  1694  0100DC  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  1695  0100DE  0E00               	movlw	0
  1696  0100E0  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  1697  0100E2  EC7C  F090         	call	___llmod	;wreg free
  1698  0100E6  C060  F17B         	movff	?___llmod,main@temp
  1699  0100EA  C061  F17C         	movff	?___llmod+1,main@temp+1
  1700  0100EE  C062  F17D         	movff	?___llmod+2,main@temp+2
  1701  0100F2  C063  F17E         	movff	?___llmod+3,main@temp+3
  1702                           
  1703                           ;PIC18F27J53-killifish_light03.c: 270: if (temp > ((epoch_t)60*60*24) / 2)temp = ((epoch
      +                          _t)60*60*24) - temp;
  1704  0100F6  0101               	movlb	1	; () banked
  1705  0100F8  517E               	movf	(main@temp+3)& (0+255),w,b
  1706  0100FA  0101               	movlb	1	; () banked
  1707  0100FC  117D               	iorwf	(main@temp+2)& (0+255),w,b
  1708  0100FE  E108               	bnz	u5740
  1709  010100  0EC1               	movlw	193
  1710  010102  0101               	movlb	1	; () banked
  1711  010104  5D7B               	subwf	main@temp& (0+255),w,b
  1712  010106  0EA8               	movlw	168
  1713  010108  0101               	movlb	1	; () banked
  1714  01010A  597C               	subwfb	(main@temp+1)& (0+255),w,b
  1715  01010C  A0D8               	btfss	status,0,c
  1716  01010E  D027               	goto	l5204
  1717  010110                     u5740:
  1718                           
  1719                           ; BSR set to: 1
  1720  010110  C17B  F173         	movff	main@temp,??_main
  1721  010114  C17C  F174         	movff	main@temp+1,??_main+1
  1722  010118  C17D  F175         	movff	main@temp+2,??_main+2
  1723  01011C  C17E  F176         	movff	main@temp+3,??_main+3
  1724  010120  0101               	movlb	1	; () banked
  1725  010122  1F73               	comf	??_main& (0+255),f,b
  1726  010124  1F74               	comf	(??_main+1)& (0+255),f,b
  1727  010126  1F75               	comf	(??_main+2)& (0+255),f,b
  1728  010128  1F76               	comf	(??_main+3)& (0+255),f,b
  1729  01012A  2B73               	incf	??_main& (0+255),f,b
  1730  01012C  0E00               	movlw	0
  1731  01012E  2374               	addwfc	(??_main+1)& (0+255),f,b
  1732  010130  2375               	addwfc	(??_main+2)& (0+255),f,b
  1733  010132  2376               	addwfc	(??_main+3)& (0+255),f,b
  1734  010134  0E80               	movlw	128
  1735  010136  0101               	movlb	1	; () banked
  1736  010138  2573               	addwf	??_main& (0+255),w,b
  1737  01013A  0101               	movlb	1	; () banked
  1738  01013C  6F7B               	movwf	main@temp& (0+255),b
  1739  01013E  0E51               	movlw	81
  1740  010140  0101               	movlb	1	; () banked
  1741  010142  2174               	addwfc	(??_main+1)& (0+255),w,b
  1742  010144  0101               	movlb	1	; () banked
  1743  010146  6F7C               	movwf	(main@temp+1)& (0+255),b
  1744  010148  0E01               	movlw	1
  1745  01014A  0101               	movlb	1	; () banked
  1746  01014C  2175               	addwfc	(??_main+2)& (0+255),w,b
  1747  01014E  0101               	movlb	1	; () banked
  1748  010150  6F7D               	movwf	(main@temp+2)& (0+255),b
  1749  010152  0E00               	movlw	0
  1750  010154  0101               	movlb	1	; () banked
  1751  010156  2176               	addwfc	(??_main+3)& (0+255),w,b
  1752  010158  0101               	movlb	1	; () banked
  1753  01015A  6F7E               	movwf	(main@temp+3)& (0+255),b
  1754  01015C  D000               	goto	l5204
  1755  01015E                     l5204:
  1756                           
  1757                           ; BSR set to: 1
  1758                           ;PIC18F27J53-killifish_light03.c: 271: temp = temp * 2 * 100 / ((epoch_t)60*60*24);
  1759  01015E  90D8               	bcf	status,0,c
  1760  010160  0101               	movlb	1	; () banked
  1761  010162  357B               	rlcf	main@temp& (0+255),w,b
  1762  010164  0100               	movlb	0	; () banked
  1763  010166  6F67               	movwf	___lmul@multiplier& (0+255),b
  1764  010168  0101               	movlb	1	; () banked
  1765  01016A  357C               	rlcf	(main@temp+1)& (0+255),w,b
  1766  01016C  0100               	movlb	0	; () banked
  1767  01016E  6F68               	movwf	(___lmul@multiplier+1)& (0+255),b
  1768  010170  0101               	movlb	1	; () banked
  1769  010172  357D               	rlcf	(main@temp+2)& (0+255),w,b
  1770  010174  0100               	movlb	0	; () banked
  1771  010176  6F69               	movwf	(___lmul@multiplier+2)& (0+255),b
  1772  010178  0101               	movlb	1	; () banked
  1773  01017A  357E               	rlcf	(main@temp+3)& (0+255),w,b
  1774  01017C  0100               	movlb	0	; () banked
  1775  01017E  6F6A               	movwf	(___lmul@multiplier+3)& (0+255),b
  1776  010180  0E64               	movlw	100
  1777  010182  0100               	movlb	0	; () banked
  1778  010184  6F6B               	movwf	___lmul@multiplicand& (0+255),b
  1779  010186  0E00               	movlw	0
  1780  010188  6F6C               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1781  01018A  0E00               	movlw	0
  1782  01018C  6F6D               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1783  01018E  0E00               	movlw	0
  1784  010190  6F6E               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1785  010192  ECB2  F092         	call	___lmul	;wreg free
  1786  010196  C067  F073         	movff	?___lmul,___lldiv@dividend
  1787  01019A  C068  F074         	movff	?___lmul+1,___lldiv@dividend+1
  1788  01019E  C069  F075         	movff	?___lmul+2,___lldiv@dividend+2
  1789  0101A2  C06A  F076         	movff	?___lmul+3,___lldiv@dividend+3
  1790  0101A6  0E80               	movlw	128
  1791  0101A8  0100               	movlb	0	; () banked
  1792  0101AA  6F77               	movwf	___lldiv@divisor& (0+255),b
  1793  0101AC  0E51               	movlw	81
  1794  0101AE  6F78               	movwf	(___lldiv@divisor+1)& (0+255),b
  1795  0101B0  0E01               	movlw	1
  1796  0101B2  6F79               	movwf	(___lldiv@divisor+2)& (0+255),b
  1797  0101B4  0E00               	movlw	0
  1798  0101B6  6F7A               	movwf	(___lldiv@divisor+3)& (0+255),b
  1799  0101B8  EC4E  F08D         	call	___lldiv	;wreg free
  1800  0101BC  C073  F17B         	movff	?___lldiv,main@temp
  1801  0101C0  C074  F17C         	movff	?___lldiv+1,main@temp+1
  1802  0101C4  C075  F17D         	movff	?___lldiv+2,main@temp+2
  1803  0101C8  C076  F17E         	movff	?___lldiv+3,main@temp+3
  1804                           
  1805                           ;PIC18F27J53-killifish_light03.c: 272: PWM_set(3, temp);
  1806  0101CC  C17B  F06E         	movff	main@temp,PWM_set@value
  1807  0101D0  C17C  F06F         	movff	main@temp+1,PWM_set@value+1
  1808  0101D4  0E03               	movlw	3
  1809  0101D6  EC85  F08A         	call	_PWM_set
  1810  0101DA  D000               	goto	l5208
  1811  0101DC                     l5208:
  1812                           
  1813                           ;PIC18F27J53-killifish_light03.c: 273: }
  1814                           ;PIC18F27J53-killifish_light03.c: 274: }
  1815                           ;PIC18F27J53-killifish_light03.c: 275: if (sw_G.flag.press) {
  1816  0101DC  A03C               	btfss	_sw_G+2,0,c
  1817  0101DE  D033               	goto	l640
  1818                           
  1819                           ;PIC18F27J53-killifish_light03.c: 276: sw_G.flags = 0;
  1820  0101E0  0E00               	movlw	0
  1821  0101E2  6E3D               	movwf	_sw_G+3,c
  1822  0101E4  0E00               	movlw	0
  1823  0101E6  6E3C               	movwf	_sw_G+2,c
  1824                           
  1825                           ;PIC18F27J53-killifish_light03.c: 277: light_mode = COMMAND_mode;
  1826  0101E8  0E02               	movlw	2
  1827  0101EA  0100               	movlb	0	; () banked
  1828  0101EC  6FB5               	movwf	_light_mode& (0+255),b
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;PIC18F27J53-killifish_light03.c: 278: static uint8_t n = 0;
  1832                           ;PIC18F27J53-killifish_light03.c: 279: if (n >= 4) n = 0;
  1833  0101EE  0E03               	movlw	3
  1834  0101F0  0100               	movlb	0	; () banked
  1835  0101F2  65FE               	cpfsgt	main@n& (0+255),b
  1836  0101F4  D004               	goto	l5216
  1837                           
  1838                           ; BSR set to: 0
  1839  0101F6  0E00               	movlw	0
  1840  0101F8  0100               	movlb	0	; () banked
  1841  0101FA  6FFE               	movwf	main@n& (0+255),b
  1842  0101FC  D003               	goto	l5218
  1843  0101FE                     l5216:
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;PIC18F27J53-killifish_light03.c: 280: else n++;
  1847  0101FE  0100               	movlb	0	; () banked
  1848  010200  2BFE               	incf	main@n& (0+255),f,b
  1849  010202  D000               	goto	l5218
  1850  010204                     l5218:
  1851                           
  1852                           ; BSR set to: 0
  1853                           ;PIC18F27J53-killifish_light03.c: 281: uint8_t value = 100 / 4 * n;
  1854  010204  0100               	movlb	0	; () banked
  1855  010206  51FE               	movf	main@n& (0+255),w,b
  1856  010208  0D19               	mullw	25
  1857  01020A  CFF3 F177          	movff	prodl,main@value
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;PIC18F27J53-killifish_light03.c: 282: for (i = 0; i < 3; i++) {
  1861  01020E  0E00               	movlw	0
  1862  010210  0101               	movlb	1	; () banked
  1863  010212  6F80               	movwf	(main@i+1)& (0+255),b
  1864  010214  0E00               	movlw	0
  1865  010216  6F7F               	movwf	main@i& (0+255),b
  1866  010218                     l5222:
  1867                           
  1868                           ; BSR set to: 1
  1869  010218  0101               	movlb	1	; () banked
  1870  01021A  5180               	movf	(main@i+1)& (0+255),w,b
  1871  01021C  E114               	bnz	l640
  1872  01021E  0E03               	movlw	3
  1873  010220  0101               	movlb	1	; () banked
  1874  010222  5D7F               	subwf	main@i& (0+255),w,b
  1875  010224  B0D8               	btfsc	status,0,c
  1876  010226  D00F               	goto	l640
  1877  010228  D001               	goto	l5226
  1878                           
  1879                           ; BSR set to: 1
  1880  01022A  D00D               	goto	l640
  1881  01022C                     l5226:
  1882                           
  1883                           ; BSR set to: 1
  1884                           ;PIC18F27J53-killifish_light03.c: 283: PWM_set(i, value);
  1885  01022C  C177  F06E         	movff	main@value,PWM_set@value
  1886  010230  0100               	movlb	0	; () banked
  1887  010232  6B6F               	clrf	(PWM_set@value+1)& (0+255),b
  1888  010234  0101               	movlb	1	; () banked
  1889  010236  517F               	movf	main@i& (0+255),w,b
  1890  010238  EC85  F08A         	call	_PWM_set
  1891  01023C  0101               	movlb	1	; () banked
  1892  01023E  4B7F               	infsnz	main@i& (0+255),f,b
  1893  010240  2B80               	incf	(main@i+1)& (0+255),f,b
  1894  010242  D7EA               	goto	l5222
  1895                           
  1896                           ; BSR set to: 1
  1897  010244  D000               	goto	l640
  1898  010246                     l640:
  1899                           
  1900                           ;PIC18F27J53-killifish_light03.c: 284: }
  1901                           ;PIC18F27J53-killifish_light03.c: 285: }
  1902                           ;PIC18F27J53-killifish_light03.c: 286: if (sw_B.flag.press) {
  1903  010246  0100               	movlb	0	; () banked
  1904  010248  A1FB               	btfss	(_sw_B+2)& (0+255),0,b
  1905  01024A  D020               	goto	l5244
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;PIC18F27J53-killifish_light03.c: 287: sw_B.flags = 0;
  1909  01024C  0E00               	movlw	0
  1910  01024E  0100               	movlb	0	; () banked
  1911  010250  6FFC               	movwf	(_sw_B+3)& (0+255),b
  1912  010252  0E00               	movlw	0
  1913  010254  6FFB               	movwf	(_sw_B+2)& (0+255),b
  1914                           
  1915                           ;PIC18F27J53-killifish_light03.c: 288: light_mode = COMMAND_mode;
  1916  010256  0E02               	movlw	2
  1917  010258  0100               	movlb	0	; () banked
  1918  01025A  6FB5               	movwf	_light_mode& (0+255),b
  1919                           
  1920                           ; BSR set to: 0
  1921                           ;PIC18F27J53-killifish_light03.c: 289: static uint8_t n = 0;
  1922                           ;PIC18F27J53-killifish_light03.c: 290: if (n >= 4) n = 0;
  1923  01025C  0E03               	movlw	3
  1924  01025E  0100               	movlb	0	; () banked
  1925  010260  65FD               	cpfsgt	main@_2516& (0+255),b
  1926  010262  D004               	goto	l5238
  1927                           
  1928                           ; BSR set to: 0
  1929  010264  0E00               	movlw	0
  1930  010266  0100               	movlb	0	; () banked
  1931  010268  6FFD               	movwf	main@_2516& (0+255),b
  1932  01026A  D003               	goto	l5240
  1933  01026C                     l5238:
  1934                           
  1935                           ; BSR set to: 0
  1936                           ;PIC18F27J53-killifish_light03.c: 291: else n++;
  1937  01026C  0100               	movlb	0	; () banked
  1938  01026E  2BFD               	incf	main@_2516& (0+255),f,b
  1939  010270  D000               	goto	l5240
  1940  010272                     l5240:
  1941                           
  1942                           ; BSR set to: 0
  1943                           ;PIC18F27J53-killifish_light03.c: 292: uint8_t value = 100 / 4 * n;
  1944  010272  0100               	movlb	0	; () banked
  1945  010274  51FD               	movf	main@_2516& (0+255),w,b
  1946  010276  0D19               	mullw	25
  1947  010278  CFF3 F178          	movff	prodl,main@value_2517
  1948                           
  1949                           ; BSR set to: 0
  1950                           ;PIC18F27J53-killifish_light03.c: 293: PWM_set(3, value);
  1951  01027C  C178  F06E         	movff	main@value_2517,PWM_set@value
  1952  010280  0100               	movlb	0	; () banked
  1953  010282  6B6F               	clrf	(PWM_set@value+1)& (0+255),b
  1954  010284  0E03               	movlw	3
  1955  010286  EC85  F08A         	call	_PWM_set
  1956  01028A  D000               	goto	l5244
  1957  01028C                     l5244:
  1958                           
  1959                           ;PIC18F27J53-killifish_light03.c: 294: }
  1960                           ;PIC18F27J53-killifish_light03.c: 295: if (sw_R.flag.press) {
  1961  01028C  A040               	btfss	_sw_R+2,0,c
  1962  01028E  D008               	goto	l5248
  1963                           
  1964                           ;PIC18F27J53-killifish_light03.c: 296: sw_R.flags = 0;
  1965  010290  0E00               	movlw	0
  1966  010292  6E41               	movwf	_sw_R+3,c
  1967  010294  0E00               	movlw	0
  1968  010296  6E40               	movwf	_sw_R+2,c
  1969                           
  1970                           ;PIC18F27J53-killifish_light03.c: 297: light_mode = TIME_SYNC_mode;
  1971  010298  0E00               	movlw	0
  1972  01029A  0100               	movlb	0	; () banked
  1973  01029C  6FB5               	movwf	_light_mode& (0+255),b
  1974  01029E  D000               	goto	l5248
  1975  0102A0                     l5248:
  1976                           
  1977                           ;PIC18F27J53-killifish_light03.c: 298: }
  1978                           ;PIC18F27J53-killifish_light03.c: 299: if (sw_R.flag.long_hold_1) {
  1979  0102A0  A240               	btfss	_sw_R+2,1,c
  1980  0102A2  D008               	goto	l5252
  1981                           
  1982                           ;PIC18F27J53-killifish_light03.c: 300: sw_R.flags = 0;
  1983  0102A4  0E00               	movlw	0
  1984  0102A6  6E41               	movwf	_sw_R+3,c
  1985  0102A8  0E00               	movlw	0
  1986  0102AA  6E40               	movwf	_sw_R+2,c
  1987                           
  1988                           ;PIC18F27J53-killifish_light03.c: 301: light_mode = ADC_mode;
  1989  0102AC  0E01               	movlw	1
  1990  0102AE  0100               	movlb	0	; () banked
  1991  0102B0  6FB5               	movwf	_light_mode& (0+255),b
  1992  0102B2  D000               	goto	l5252
  1993  0102B4                     l5252:
  1994                           
  1995                           ;PIC18F27J53-killifish_light03.c: 302: }
  1996                           ;PIC18F27J53-killifish_light03.c: 303: if (light_mode == ADC_mode) {
  1997  0102B4  0100               	movlb	0	; () banked
  1998  0102B6  05B5               	decf	_light_mode& (0+255),w,b
  1999  0102B8  A4D8               	btfss	status,2,c
  2000  0102BA  D6CD               	goto	l5182
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;PIC18F27J53-killifish_light03.c: 304: for (i = 0; i < 3; i++) {
  2004  0102BC  0E00               	movlw	0
  2005  0102BE  0101               	movlb	1	; () banked
  2006  0102C0  6F80               	movwf	(main@i+1)& (0+255),b
  2007  0102C2  0E00               	movlw	0
  2008  0102C4  6F7F               	movwf	main@i& (0+255),b
  2009                           
  2010                           ; BSR set to: 1
  2011  0102C6  0101               	movlb	1	; () banked
  2012  0102C8  5180               	movf	(main@i+1)& (0+255),w,b
  2013  0102CA  E106               	bnz	u5840
  2014  0102CC  0E03               	movlw	3
  2015  0102CE  0101               	movlb	1	; () banked
  2016  0102D0  5D7F               	subwf	main@i& (0+255),w,b
  2017  0102D2  B0D8               	btfsc	status,0,c
  2018  0102D4  D6C0               	goto	l5182
  2019  0102D6  D001               	goto	l5260
  2020  0102D8                     u5840:
  2021                           
  2022                           ; BSR set to: 1
  2023  0102D8  D6BE               	goto	l5182
  2024  0102DA                     l5260:
  2025                           
  2026                           ; BSR set to: 1
  2027                           ;PIC18F27J53-killifish_light03.c: 305: uint16_t scan = (ADC(i) >> 4) * 100 / 255;
  2028  0102DA  0101               	movlb	1	; () banked
  2029  0102DC  517F               	movf	main@i& (0+255),w,b
  2030  0102DE  ECDB  F094         	call	_ADC
  2031  0102E2  0E04               	movlw	4
  2032  0102E4  0101               	movlb	1	; () banked
  2033  0102E6  6F73               	movwf	??_main& (0+255),b
  2034  0102E8                     u5855:
  2035  0102E8  90D8               	bcf	status,0,c
  2036  0102EA  3220               	rrcf	?_ADC+1,f,c
  2037  0102EC  321F               	rrcf	?_ADC,f,c
  2038  0102EE  0101               	movlb	1	; () banked
  2039  0102F0  2F73               	decfsz	??_main& (0+255),f,b
  2040  0102F2  D7FA               	goto	u5855
  2041  0102F4  C01F  F060         	movff	?_ADC,___wmul@multiplier
  2042  0102F8  C020  F061         	movff	?_ADC+1,___wmul@multiplier+1
  2043  0102FC  0E00               	movlw	0
  2044  0102FE  0100               	movlb	0	; () banked
  2045  010300  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2046  010302  0E64               	movlw	100
  2047  010304  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2048  010306  EC77  F094         	call	___wmul	;wreg free
  2049  01030A  C060  F066         	movff	?___wmul,___lwdiv@dividend
  2050  01030E  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  2051  010312  0E00               	movlw	0
  2052  010314  0100               	movlb	0	; () banked
  2053  010316  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2054  010318  6968               	setf	___lwdiv@divisor& (0+255),b
  2055  01031A  EC71  F092         	call	___lwdiv	;wreg free
  2056  01031E  C066  F179         	movff	?___lwdiv,main@scan
  2057  010322  C067  F17A         	movff	?___lwdiv+1,main@scan+1
  2058                           
  2059                           ;PIC18F27J53-killifish_light03.c: 306: static uint8_t prev_scan[3];
  2060                           ;PIC18F27J53-killifish_light03.c: 307: if (scan != prev_scan[i]) {
  2061  010326  0EB0               	movlw	low main@prev_scan
  2062  010328  0101               	movlb	1	; () banked
  2063  01032A  257F               	addwf	main@i& (0+255),w,b
  2064  01032C  6ED9               	movwf	fsr2l,c
  2065  01032E  0E00               	movlw	high main@prev_scan
  2066  010330  0101               	movlb	1	; () banked
  2067  010332  2180               	addwfc	(main@i+1)& (0+255),w,b
  2068  010334  6EDA               	movwf	fsr2h,c
  2069  010336  50DF               	movf	indf2,w,c
  2070  010338  0101               	movlb	1	; () banked
  2071  01033A  6F73               	movwf	??_main& (0+255),b
  2072  01033C  6B74               	clrf	(??_main+1)& (0+255),b
  2073  01033E  0101               	movlb	1	; () banked
  2074  010340  5179               	movf	main@scan& (0+255),w,b
  2075  010342  0101               	movlb	1	; () banked
  2076  010344  1973               	xorwf	??_main& (0+255),w,b
  2077  010346  E106               	bnz	u5860
  2078  010348  0101               	movlb	1	; () banked
  2079  01034A  517A               	movf	(main@scan+1)& (0+255),w,b
  2080  01034C  0101               	movlb	1	; () banked
  2081  01034E  1974               	xorwf	(??_main+1)& (0+255),w,b
  2082  010350  B4D8               	btfsc	status,2,c
  2083  010352  D013               	goto	l5268
  2084  010354                     u5860:
  2085                           
  2086                           ; BSR set to: 1
  2087                           ;PIC18F27J53-killifish_light03.c: 308: prev_scan[i] = scan;
  2088  010354  0EB0               	movlw	low main@prev_scan
  2089  010356  0101               	movlb	1	; () banked
  2090  010358  257F               	addwf	main@i& (0+255),w,b
  2091  01035A  6ED9               	movwf	fsr2l,c
  2092  01035C  0E00               	movlw	high main@prev_scan
  2093  01035E  0101               	movlb	1	; () banked
  2094  010360  2180               	addwfc	(main@i+1)& (0+255),w,b
  2095  010362  6EDA               	movwf	fsr2h,c
  2096  010364  C179  FFDF         	movff	main@scan,indf2
  2097                           
  2098                           ; BSR set to: 1
  2099                           ;PIC18F27J53-killifish_light03.c: 309: PWM_set(i, scan);
  2100  010368  C179  F06E         	movff	main@scan,PWM_set@value
  2101  01036C  C17A  F06F         	movff	main@scan+1,PWM_set@value+1
  2102  010370  0101               	movlb	1	; () banked
  2103  010372  517F               	movf	main@i& (0+255),w,b
  2104  010374  EC85  F08A         	call	_PWM_set
  2105  010378  D000               	goto	l5268
  2106  01037A                     l5268:
  2107  01037A  0101               	movlb	1	; () banked
  2108  01037C  4B7F               	infsnz	main@i& (0+255),f,b
  2109  01037E  2B80               	incf	(main@i+1)& (0+255),f,b
  2110                           
  2111                           ; BSR set to: 1
  2112  010380  0101               	movlb	1	; () banked
  2113  010382  5180               	movf	(main@i+1)& (0+255),w,b
  2114  010384  E101               	bnz	u5870
  2115  010386  D7A2               	goto	L1
  2116  010388                     u5870:
  2117                           
  2118                           ; BSR set to: 1
  2119                           
  2120                           ; BSR set to: 1
  2121                           
  2122                           ; BSR set to: 1
  2123  010388  D666               	goto	l5182
  2124                           
  2125                           ; BSR set to: 1
  2126                           
  2127                           ; BSR set to: 1
  2128                           ;PIC18F27J53-killifish_light03.c: 310: }
  2129                           ;PIC18F27J53-killifish_light03.c: 311: }
  2130                           ;PIC18F27J53-killifish_light03.c: 312: }
  2131                           ;PIC18F27J53-killifish_light03.c: 313: }
  2132                           ;PIC18F27J53-killifish_light03.c: 314: return 0;
  2133                           ;	Return value of _main is never used
  2134  01038A  EF6F  F008         	goto	start
  2135  01038E                     __end_of_main:
  2136                           	opt stack 0
  2137                           tblptru	equ	0xFF8
  2138                           tblptrh	equ	0xFF7
  2139                           tblptrl	equ	0xFF6
  2140                           tablat	equ	0xFF5
  2141                           prodl	equ	0xFF3
  2142                           intcon	equ	0xFF2
  2143                           postinc0	equ	0xFEE
  2144                           wreg	equ	0xFE8
  2145                           postdec1	equ	0xFE5
  2146                           fsr1h	equ	0xFE2
  2147                           fsr1l	equ	0xFE1
  2148                           indf2	equ	0xFDF
  2149                           fsr2h	equ	0xFDA
  2150                           fsr2l	equ	0xFD9
  2151                           status	equ	0xFD8
  2152                           
  2153 ;; *************** function _my_terminal_loop *****************
  2154 ;; Defined at:
  2155 ;;		line 21 in file "../My_header\My_terminal.h"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;  tx              2   74[BANK0 ] PTR struct ringbuf
  2158 ;;		 -> rx_buf(8), 
  2159 ;;  rx              2   76[BANK0 ] PTR struct ringbuf
  2160 ;;		 -> tx_buf(8), 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  i               1  112[BANK1 ] unsigned char 
  2163 ;;  i               1  114[BANK1 ] unsigned char 
  2164 ;;  ascii           1  113[BANK1 ] unsigned char 
  2165 ;;  buf           100   10[BANK1 ] unsigned char [100]
  2166 ;; Return value:  Size  Location     Type
  2167 ;;		None               void
  2168 ;; Registers used:
  2169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2175 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2176 ;;      Locals:         0       0     105       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2177 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2178 ;;      Totals:         0       6     105       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2179 ;;Total ram usage:      111 bytes
  2180 ;; Hardware stack levels used:    1
  2181 ;; Hardware stack levels required when called:   12
  2182 ;; This function calls:
  2183 ;;		_command_operation
  2184 ;;		_ringbuf_backspace
  2185 ;;		_ringbuf_delete
  2186 ;;		_ringbuf_init
  2187 ;;		_ringbuf_num
  2188 ;;		_ringbuf_pop
  2189 ;;		_ringbuf_put
  2190 ;;		_ringbuf_put_num
  2191 ;;		_ringbuf_put_str
  2192 ;; This function is called by:
  2193 ;;		_main
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text1
  2198  0106F4                     __ptext1:
  2199                           	opt stack 0
  2200  0106F4                     _my_terminal_loop:
  2201                           	opt stack 18
  2202                           
  2203                           ;My_header\My_terminal.h: 22: static ringbuf_t command;
  2204                           ;My_header\My_terminal.h: 23: static uint8_t command_init = 0;
  2205                           ;My_header\My_terminal.h: 24: if (command_init == 0) {
  2206                           
  2207                           ; BSR set to: 1
  2208                           ;incstack = 0
  2209  0106F4  0100               	movlb	0	; () banked
  2210  0106F6  51B8               	movf	my_terminal_loop@command_init& (0+255),w,b
  2211  0106F8  0100               	movlb	0	; () banked
  2212  0106FA  A4D8               	btfss	status,2,c
  2213  0106FC  D017               	goto	l4966
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;My_header\My_terminal.h: 25: command_init = 1;
  2217  0106FE  0E01               	movlw	1
  2218  010700  0100               	movlb	0	; () banked
  2219  010702  6FB8               	movwf	my_terminal_loop@command_init& (0+255),b
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;My_header\My_terminal.h: 26: char buf[100];
  2223                           ;My_header\My_terminal.h: 27: ringbuf_init(&command, buf, sizeof (buf));
  2224  010704  0EF1               	movlw	low my_terminal_loop@command
  2225  010706  0100               	movlb	0	; () banked
  2226  010708  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2227  01070A  0E00               	movlw	high my_terminal_loop@command
  2228  01070C  0100               	movlb	0	; () banked
  2229  01070E  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2230  010710  0E0A               	movlw	low my_terminal_loop@buf
  2231  010712  0100               	movlb	0	; () banked
  2232  010714  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2233  010716  0E01               	movlw	high my_terminal_loop@buf
  2234  010718  0100               	movlb	0	; () banked
  2235  01071A  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2236  01071C  0E00               	movlw	0
  2237  01071E  0100               	movlb	0	; () banked
  2238  010720  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2239  010722  0E64               	movlw	100
  2240  010724  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2241  010726  ECBC  F093         	call	_ringbuf_init	;wreg free
  2242  01072A  D000               	goto	l4966
  2243  01072C                     l4966:
  2244                           
  2245                           ;My_header\My_terminal.h: 28: }
  2246                           ;My_header\My_terminal.h: 29: if (ringbuf_num(rx)) {
  2247  01072C  C0AC  F01F         	movff	my_terminal_loop@rx,ringbuf_num@rb
  2248  010730  C0AD  F020         	movff	my_terminal_loop@rx+1,ringbuf_num@rb+1
  2249  010734  EC45  F08B         	call	_ringbuf_num	;wreg free
  2250  010738  501F               	movf	?_ringbuf_num,w,c
  2251  01073A  1020               	iorwf	?_ringbuf_num+1,w,c
  2252  01073C  B4D8               	btfsc	status,2,c
  2253  01073E  0012               	return	
  2254                           
  2255                           ;My_header\My_terminal.h: 30: char ascii = ringbuf_pop(rx);
  2256  010740  C0AC  F021         	movff	my_terminal_loop@rx,ringbuf_pop@rb
  2257  010744  C0AD  F022         	movff	my_terminal_loop@rx+1,ringbuf_pop@rb+1
  2258  010748  ECB1  F08D         	call	_ringbuf_pop	;wreg free
  2259  01074C  0101               	movlb	1	; () banked
  2260  01074E  6F71               	movwf	my_terminal_loop@ascii& (0+255),b
  2261                           
  2262                           ;My_header\My_terminal.h: 31: switch (ascii) {
  2263  010750  D15C               	goto	l5030
  2264  010752                     l4970:
  2265                           
  2266                           ; BSR set to: 1
  2267                           ;My_header\My_terminal.h: 33: ringbuf_put(&command, '\0');
  2268  010752  0EF1               	movlw	low my_terminal_loop@command
  2269  010754  6E21               	movwf	ringbuf_put@rb,c
  2270  010756  0E00               	movlw	high my_terminal_loop@command
  2271  010758  6E22               	movwf	ringbuf_put@rb+1,c
  2272  01075A  0E00               	movlw	0
  2273  01075C  6E23               	movwf	ringbuf_put@asciicode,c
  2274  01075E  ECEB  F08C         	call	_ringbuf_put	;wreg free
  2275                           
  2276                           ;My_header\My_terminal.h: 34: ringbuf_put(tx, '\t');
  2277  010762  C0AA  F021         	movff	my_terminal_loop@tx,ringbuf_put@rb
  2278  010766  C0AB  F022         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
  2279  01076A  0E09               	movlw	9
  2280  01076C  6E23               	movwf	ringbuf_put@asciicode,c
  2281  01076E  ECEB  F08C         	call	_ringbuf_put	;wreg free
  2282                           
  2283                           ;My_header\My_terminal.h: 35: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2284  010772  0EF1               	movlw	low my_terminal_loop@command
  2285  010774  6E1F               	movwf	ringbuf_num@rb,c
  2286  010776  0E00               	movlw	high my_terminal_loop@command
  2287  010778  6E20               	movwf	ringbuf_num@rb+1,c
  2288  01077A  EC45  F08B         	call	_ringbuf_num	;wreg free
  2289  01077E  0EFF               	movlw	255
  2290  010780  241F               	addwf	?_ringbuf_num,w,c
  2291  010782  0101               	movlb	1	; () banked
  2292  010784  6F6E               	movwf	_my_terminal_loop$3145& (0+255),b
  2293  010786  0EFF               	movlw	255
  2294  010788  2020               	addwfc	?_ringbuf_num+1,w,c
  2295  01078A  0101               	movlb	1	; () banked
  2296  01078C  6F6F               	movwf	(_my_terminal_loop$3145+1)& (0+255),b
  2297                           
  2298                           ;My_header\My_terminal.h: 35: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2299  01078E  C0AA  F06D         	movff	my_terminal_loop@tx,ringbuf_put_num@rb
  2300  010792  C0AB  F06E         	movff	my_terminal_loop@tx+1,ringbuf_put_num@rb+1
  2301  010796  C16E  F06F         	movff	_my_terminal_loop$3145,ringbuf_put_num@value
  2302  01079A  C16F  F070         	movff	_my_terminal_loop$3145+1,ringbuf_put_num@value+1
  2303  01079E  0E02               	movlw	2
  2304  0107A0  0100               	movlb	0	; () banked
  2305  0107A2  6F71               	movwf	ringbuf_put_num@digits& (0+255),b
  2306  0107A4  EC30  F092         	call	_ringbuf_put_num	;wreg free
  2307                           
  2308                           ;My_header\My_terminal.h: 36: ringbuf_put(tx, '\n');
  2309  0107A8  C0AA  F021         	movff	my_terminal_loop@tx,ringbuf_put@rb
  2310  0107AC  C0AB  F022         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
  2311  0107B0  0E0A               	movlw	10
  2312  0107B2  6E23               	movwf	ringbuf_put@asciicode,c
  2313  0107B4  ECEB  F08C         	call	_ringbuf_put	;wreg free
  2314                           
  2315                           ;My_header\My_terminal.h: 37: static char op0[20];
  2316                           ;My_header\My_terminal.h: 38: static char op1[20];
  2317                           ;My_header\My_terminal.h: 39: static char op2[20];
  2318                           ;My_header\My_terminal.h: 40: static char op3[20];
  2319                           ;My_header\My_terminal.h: 41: uint8_t i;
  2320                           ;My_header\My_terminal.h: 42: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  2321  0107B8  0E00               	movlw	0
  2322  0107BA  0101               	movlb	1	; () banked
  2323  0107BC  6F72               	movwf	my_terminal_loop@i& (0+255),b
  2324  0107BE  D003               	goto	l4976
  2325  0107C0                     l4974:
  2326                           
  2327                           ; BSR set to: 1
  2328  0107C0  0101               	movlb	1	; () banked
  2329  0107C2  2B72               	incf	my_terminal_loop@i& (0+255),f,b
  2330  0107C4  D000               	goto	l4976
  2331  0107C6                     l4976:
  2332                           
  2333                           ; BSR set to: 1
  2334  0107C6  0EF1               	movlw	low my_terminal_loop@command
  2335  0107C8  6E21               	movwf	ringbuf_pop@rb,c
  2336  0107CA  0E00               	movlw	high my_terminal_loop@command
  2337  0107CC  6E22               	movwf	ringbuf_pop@rb+1,c
  2338  0107CE  ECB1  F08D         	call	_ringbuf_pop	;wreg free
  2339  0107D2  0100               	movlb	0	; () banked
  2340  0107D4  6FAE               	movwf	??_my_terminal_loop& (0+255),b
  2341  0107D6  0101               	movlb	1	; () banked
  2342  0107D8  5172               	movf	my_terminal_loop@i& (0+255),w,b
  2343  0107DA  0D01               	mullw	1
  2344  0107DC  0EB9               	movlw	low my_terminal_loop@op0
  2345  0107DE  24F3               	addwf	prodl,w,c
  2346  0107E0  6ED9               	movwf	fsr2l,c
  2347  0107E2  0E00               	movlw	high my_terminal_loop@op0
  2348  0107E4  20F4               	addwfc	prodh,w,c
  2349  0107E6  6EDA               	movwf	fsr2h,c
  2350  0107E8  C0AE  FFDF         	movff	??_my_terminal_loop,indf2
  2351  0107EC  50DF               	movf	indf2,w,c
  2352  0107EE  A4D8               	btfss	status,2,c
  2353  0107F0  D7E7               	goto	l4974
  2354                           
  2355                           ; BSR set to: 1
  2356                           ;My_header\My_terminal.h: 43: op0[i] = '\0';
  2357                           
  2358                           ; BSR set to: 1
  2359  0107F2  0101               	movlb	1	; () banked
  2360  0107F4  5172               	movf	my_terminal_loop@i& (0+255),w,b
  2361  0107F6  0D01               	mullw	1
  2362  0107F8  0EB9               	movlw	low my_terminal_loop@op0
  2363  0107FA  24F3               	addwf	prodl,w,c
  2364  0107FC  6ED9               	movwf	fsr2l,c
  2365  0107FE  0E00               	movlw	high my_terminal_loop@op0
  2366  010800  20F4               	addwfc	prodh,w,c
  2367  010802  6EDA               	movwf	fsr2h,c
  2368  010804  0E00               	movlw	0
  2369  010806  6EDF               	movwf	indf2,c
  2370                           
  2371                           ; BSR set to: 1
  2372                           ;My_header\My_terminal.h: 44: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  2373  010808  0E00               	movlw	0
  2374  01080A  0101               	movlb	1	; () banked
  2375  01080C  6F72               	movwf	my_terminal_loop@i& (0+255),b
  2376  01080E  D003               	goto	l4984
  2377  010810                     l4982:
  2378                           
  2379                           ; BSR set to: 1
  2380  010810  0101               	movlb	1	; () banked
  2381  010812  2B72               	incf	my_terminal_loop@i& (0+255),f,b
  2382  010814  D000               	goto	l4984
  2383  010816                     l4984:
  2384                           
  2385                           ; BSR set to: 1
  2386  010816  0EF1               	movlw	low my_terminal_loop@command
  2387  010818  6E21               	movwf	ringbuf_pop@rb,c
  2388  01081A  0E00               	movlw	high my_terminal_loop@command
  2389  01081C  6E22               	movwf	ringbuf_pop@rb+1,c
  2390  01081E  ECB1  F08D         	call	_ringbuf_pop	;wreg free
  2391  010822  0100               	movlb	0	; () banked
  2392  010824  6FAE               	movwf	??_my_terminal_loop& (0+255),b
  2393  010826  0101               	movlb	1	; () banked
  2394  010828  5172               	movf	my_terminal_loop@i& (0+255),w,b
  2395  01082A  0D01               	mullw	1
  2396  01082C  0ECD               	movlw	low my_terminal_loop@op1
  2397  01082E  24F3               	addwf	prodl,w,c
  2398  010830  6ED9               	movwf	fsr2l,c
  2399  010832  0E00               	movlw	high my_terminal_loop@op1
  2400  010834  20F4               	addwfc	prodh,w,c
  2401  010836  6EDA               	movwf	fsr2h,c
  2402  010838  C0AE  FFDF         	movff	??_my_terminal_loop,indf2
  2403  01083C  50DF               	movf	indf2,w,c
  2404  01083E  A4D8               	btfss	status,2,c
  2405  010840  D7E7               	goto	l4982
  2406                           
  2407                           ; BSR set to: 1
  2408                           ;My_header\My_terminal.h: 45: op1[i] = '\0';
  2409                           
  2410                           ; BSR set to: 1
  2411  010842  0101               	movlb	1	; () banked
  2412  010844  5172               	movf	my_terminal_loop@i& (0+255),w,b
  2413  010846  0D01               	mullw	1
  2414  010848  0ECD               	movlw	low my_terminal_loop@op1
  2415  01084A  24F3               	addwf	prodl,w,c
  2416  01084C  6ED9               	movwf	fsr2l,c
  2417  01084E  0E00               	movlw	high my_terminal_loop@op1
  2418  010850  20F4               	addwfc	prodh,w,c
  2419  010852  6EDA               	movwf	fsr2h,c
  2420  010854  0E00               	movlw	0
  2421  010856  6EDF               	movwf	indf2,c
  2422                           
  2423                           ; BSR set to: 1
  2424                           ;My_header\My_terminal.h: 46: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  2425  010858  0E00               	movlw	0
  2426  01085A  0101               	movlb	1	; () banked
  2427  01085C  6F72               	movwf	my_terminal_loop@i& (0+255),b
  2428  01085E  D003               	goto	l4992
  2429  010860                     l4990:
  2430                           
  2431                           ; BSR set to: 1
  2432  010860  0101               	movlb	1	; () banked
  2433  010862  2B72               	incf	my_terminal_loop@i& (0+255),f,b
  2434  010864  D000               	goto	l4992
  2435  010866                     l4992:
  2436                           
  2437                           ; BSR set to: 1
  2438  010866  0EF1               	movlw	low my_terminal_loop@command
  2439  010868  6E21               	movwf	ringbuf_pop@rb,c
  2440  01086A  0E00               	movlw	high my_terminal_loop@command
  2441  01086C  6E22               	movwf	ringbuf_pop@rb+1,c
  2442  01086E  ECB1  F08D         	call	_ringbuf_pop	;wreg free
  2443  010872  0100               	movlb	0	; () banked
  2444  010874  6FAE               	movwf	??_my_terminal_loop& (0+255),b
  2445  010876  0101               	movlb	1	; () banked
  2446  010878  5172               	movf	my_terminal_loop@i& (0+255),w,b
  2447  01087A  0D01               	mullw	1
  2448  01087C  0E81               	movlw	low my_terminal_loop@op2
  2449  01087E  24F3               	addwf	prodl,w,c
  2450  010880  6ED9               	movwf	fsr2l,c
  2451  010882  0E01               	movlw	high my_terminal_loop@op2
  2452  010884  20F4               	addwfc	prodh,w,c
  2453  010886  6EDA               	movwf	fsr2h,c
  2454  010888  C0AE  FFDF         	movff	??_my_terminal_loop,indf2
  2455  01088C  50DF               	movf	indf2,w,c
  2456  01088E  A4D8               	btfss	status,2,c
  2457  010890  D7E7               	goto	l4990
  2458                           
  2459                           ; BSR set to: 1
  2460                           ;My_header\My_terminal.h: 47: op2[i] = '\0';
  2461                           
  2462                           ; BSR set to: 1
  2463  010892  0101               	movlb	1	; () banked
  2464  010894  5172               	movf	my_terminal_loop@i& (0+255),w,b
  2465  010896  0D01               	mullw	1
  2466  010898  0E81               	movlw	low my_terminal_loop@op2
  2467  01089A  24F3               	addwf	prodl,w,c
  2468  01089C  6ED9               	movwf	fsr2l,c
  2469  01089E  0E01               	movlw	high my_terminal_loop@op2
  2470  0108A0  20F4               	addwfc	prodh,w,c
  2471  0108A2  6EDA               	movwf	fsr2h,c
  2472  0108A4  0E00               	movlw	0
  2473  0108A6  6EDF               	movwf	indf2,c
  2474                           
  2475                           ; BSR set to: 1
  2476                           ;My_header\My_terminal.h: 48: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  2477  0108A8  0E00               	movlw	0
  2478  0108AA  0101               	movlb	1	; () banked
  2479  0108AC  6F72               	movwf	my_terminal_loop@i& (0+255),b
  2480  0108AE  D003               	goto	l5000
  2481  0108B0                     l4998:
  2482                           
  2483                           ; BSR set to: 1
  2484  0108B0  0101               	movlb	1	; () banked
  2485  0108B2  2B72               	incf	my_terminal_loop@i& (0+255),f,b
  2486  0108B4  D000               	goto	l5000
  2487  0108B6                     l5000:
  2488                           
  2489                           ; BSR set to: 1
  2490  0108B6  0EF1               	movlw	low my_terminal_loop@command
  2491  0108B8  6E21               	movwf	ringbuf_pop@rb,c
  2492  0108BA  0E00               	movlw	high my_terminal_loop@command
  2493  0108BC  6E22               	movwf	ringbuf_pop@rb+1,c
  2494  0108BE  ECB1  F08D         	call	_ringbuf_pop	;wreg free
  2495  0108C2  0100               	movlb	0	; () banked
  2496  0108C4  6FAE               	movwf	??_my_terminal_loop& (0+255),b
  2497  0108C6  0101               	movlb	1	; () banked
  2498  0108C8  5172               	movf	my_terminal_loop@i& (0+255),w,b
  2499  0108CA  0D01               	mullw	1
  2500  0108CC  0E95               	movlw	low my_terminal_loop@op3
  2501  0108CE  24F3               	addwf	prodl,w,c
  2502  0108D0  6ED9               	movwf	fsr2l,c
  2503  0108D2  0E01               	movlw	high my_terminal_loop@op3
  2504  0108D4  20F4               	addwfc	prodh,w,c
  2505  0108D6  6EDA               	movwf	fsr2h,c
  2506  0108D8  C0AE  FFDF         	movff	??_my_terminal_loop,indf2
  2507  0108DC  50DF               	movf	indf2,w,c
  2508  0108DE  A4D8               	btfss	status,2,c
  2509  0108E0  D7E7               	goto	l4998
  2510                           
  2511                           ; BSR set to: 1
  2512                           ;My_header\My_terminal.h: 49: op3[i] = '\0';
  2513                           
  2514                           ; BSR set to: 1
  2515  0108E2  0101               	movlb	1	; () banked
  2516  0108E4  5172               	movf	my_terminal_loop@i& (0+255),w,b
  2517  0108E6  0D01               	mullw	1
  2518  0108E8  0E95               	movlw	low my_terminal_loop@op3
  2519  0108EA  24F3               	addwf	prodl,w,c
  2520  0108EC  6ED9               	movwf	fsr2l,c
  2521  0108EE  0E01               	movlw	high my_terminal_loop@op3
  2522  0108F0  20F4               	addwfc	prodh,w,c
  2523  0108F2  6EDA               	movwf	fsr2h,c
  2524  0108F4  0E00               	movlw	0
  2525  0108F6  6EDF               	movwf	indf2,c
  2526                           
  2527                           ; BSR set to: 1
  2528                           ;My_header\My_terminal.h: 50: command_operation(tx, op0, op1, op2, op3);
  2529  0108F8  C0AA  F100         	movff	my_terminal_loop@tx,command_operation@tx
  2530  0108FC  C0AB  F101         	movff	my_terminal_loop@tx+1,command_operation@tx+1
  2531  010900  0EB9               	movlw	low my_terminal_loop@op0
  2532  010902  0101               	movlb	1	; () banked
  2533  010904  6F02               	movwf	command_operation@op0& (0+255),b
  2534  010906  0E00               	movlw	high my_terminal_loop@op0
  2535  010908  0101               	movlb	1	; () banked
  2536  01090A  6F03               	movwf	(command_operation@op0+1)& (0+255),b
  2537  01090C  0ECD               	movlw	low my_terminal_loop@op1
  2538  01090E  0101               	movlb	1	; () banked
  2539  010910  6F04               	movwf	command_operation@op1& (0+255),b
  2540  010912  0E00               	movlw	high my_terminal_loop@op1
  2541  010914  0101               	movlb	1	; () banked
  2542  010916  6F05               	movwf	(command_operation@op1+1)& (0+255),b
  2543  010918  0E81               	movlw	low my_terminal_loop@op2
  2544  01091A  0101               	movlb	1	; () banked
  2545  01091C  6F06               	movwf	command_operation@op2& (0+255),b
  2546  01091E  0E01               	movlw	high my_terminal_loop@op2
  2547  010920  0101               	movlb	1	; () banked
  2548  010922  6F07               	movwf	(command_operation@op2+1)& (0+255),b
  2549  010924  0E95               	movlw	low my_terminal_loop@op3
  2550  010926  0101               	movlb	1	; () banked
  2551  010928  6F08               	movwf	command_operation@op3& (0+255),b
  2552  01092A  0E01               	movlw	high my_terminal_loop@op3
  2553  01092C  0101               	movlb	1	; () banked
  2554  01092E  6F09               	movwf	(command_operation@op3+1)& (0+255),b
  2555  010930  ECC7  F081         	call	_command_operation	;wreg free
  2556                           
  2557                           ;My_header\My_terminal.h: 51: break;
  2558  010934  0012               	return	
  2559  010936                     l5006:
  2560                           
  2561                           ;My_header\My_terminal.h: 53: ringbuf_put(&command, '\0');
  2562  010936  0EF1               	movlw	low my_terminal_loop@command
  2563  010938  6E21               	movwf	ringbuf_put@rb,c
  2564  01093A  0E00               	movlw	high my_terminal_loop@command
  2565  01093C  6E22               	movwf	ringbuf_put@rb+1,c
  2566  01093E  0E00               	movlw	0
  2567  010940  6E23               	movwf	ringbuf_put@asciicode,c
  2568  010942  ECEB  F08C         	call	_ringbuf_put	;wreg free
  2569                           
  2570                           ;My_header\My_terminal.h: 54: ringbuf_put(tx, ' ');
  2571  010946  C0AA  F021         	movff	my_terminal_loop@tx,ringbuf_put@rb
  2572  01094A  C0AB  F022         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
  2573  01094E  0E20               	movlw	32
  2574  010950  6E23               	movwf	ringbuf_put@asciicode,c
  2575  010952  ECEB  F08C         	call	_ringbuf_put	;wreg free
  2576                           
  2577                           ;My_header\My_terminal.h: 55: break;
  2578  010956  0012               	return	
  2579  010958                     l5008:
  2580                           
  2581                           ;My_header\My_terminal.h: 57: ringbuf_backspace(&command);
  2582  010958  0EF1               	movlw	low my_terminal_loop@command
  2583  01095A  6E21               	movwf	ringbuf_backspace@rb,c
  2584  01095C  0E00               	movlw	high my_terminal_loop@command
  2585  01095E  6E22               	movwf	ringbuf_backspace@rb+1,c
  2586  010960  ECEE  F091         	call	_ringbuf_backspace	;wreg free
  2587                           
  2588                           ;My_header\My_terminal.h: 58: ringbuf_put_str(tx, "\b \b");
  2589  010964  C0AA  F06A         	movff	my_terminal_loop@tx,ringbuf_put_str@rb
  2590  010968  C0AB  F06B         	movff	my_terminal_loop@tx+1,ringbuf_put_str@rb+1
  2591  01096C  0EBC               	movlw	low STR_1
  2592  01096E  0100               	movlb	0	; () banked
  2593  010970  6F6C               	movwf	ringbuf_put_str@str& (0+255),b
  2594  010972  0EFF               	movlw	high STR_1
  2595  010974  0100               	movlb	0	; () banked
  2596  010976  6F6D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2597  010978  EC5C  F093         	call	_ringbuf_put_str	;wreg free
  2598                           
  2599                           ;My_header\My_terminal.h: 59: break;
  2600  01097C  0012               	return	
  2601  01097E                     l5012:
  2602                           
  2603                           ;My_header\My_terminal.h: 61: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbu
      +                          f_put_str(tx, "\b \b");
  2604  01097E  0E00               	movlw	0
  2605  010980  0101               	movlb	1	; () banked
  2606  010982  6F70               	movwf	my_terminal_loop@i_2274& (0+255),b
  2607  010984  D00F               	goto	l5018
  2608  010986                     l5014:
  2609  010986  C0AA  F06A         	movff	my_terminal_loop@tx,ringbuf_put_str@rb
  2610  01098A  C0AB  F06B         	movff	my_terminal_loop@tx+1,ringbuf_put_str@rb+1
  2611  01098E  0EBC               	movlw	low STR_1
  2612  010990  0100               	movlb	0	; () banked
  2613  010992  6F6C               	movwf	ringbuf_put_str@str& (0+255),b
  2614  010994  0EFF               	movlw	high STR_1
  2615  010996  0100               	movlb	0	; () banked
  2616  010998  6F6D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2617  01099A  EC5C  F093         	call	_ringbuf_put_str	;wreg free
  2618  01099E  0101               	movlb	1	; () banked
  2619  0109A0  2B70               	incf	my_terminal_loop@i_2274& (0+255),f,b
  2620  0109A2  D000               	goto	l5018
  2621  0109A4                     l5018:
  2622                           
  2623                           ; BSR set to: 1
  2624  0109A4  0EF1               	movlw	low my_terminal_loop@command
  2625  0109A6  6E1F               	movwf	ringbuf_num@rb,c
  2626  0109A8  0E00               	movlw	high my_terminal_loop@command
  2627  0109AA  6E20               	movwf	ringbuf_num@rb+1,c
  2628  0109AC  EC45  F08B         	call	_ringbuf_num	;wreg free
  2629  0109B0  0101               	movlb	1	; () banked
  2630  0109B2  5170               	movf	my_terminal_loop@i_2274& (0+255),w,b
  2631  0109B4  0100               	movlb	0	; () banked
  2632  0109B6  6FAE               	movwf	??_my_terminal_loop& (0+255),b
  2633  0109B8  6BAF               	clrf	(??_my_terminal_loop+1)& (0+255),b
  2634  0109BA  501F               	movf	?_ringbuf_num,w,c
  2635  0109BC  0100               	movlb	0	; () banked
  2636  0109BE  5DAE               	subwf	??_my_terminal_loop& (0+255),w,b
  2637  0109C0  5020               	movf	?_ringbuf_num+1,w,c
  2638  0109C2  0100               	movlb	0	; () banked
  2639  0109C4  59AF               	subwfb	(??_my_terminal_loop+1)& (0+255),w,b
  2640  0109C6  A0D8               	btfss	status,0,c
  2641  0109C8  D7DE               	goto	l5014
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;My_header\My_terminal.h: 62: ringbuf_delete(&command);
  2645                           
  2646                           ; BSR set to: 0
  2647  0109CA  0EF1               	movlw	low my_terminal_loop@command
  2648  0109CC  6E1F               	movwf	ringbuf_delete@rb,c
  2649  0109CE  0E00               	movlw	high my_terminal_loop@command
  2650  0109D0  6E20               	movwf	ringbuf_delete@rb+1,c
  2651  0109D2  EC03  F095         	call	_ringbuf_delete	;wreg free
  2652                           
  2653                           ;My_header\My_terminal.h: 63: break;
  2654  0109D6  0012               	return	
  2655  0109D8                     l5022:
  2656                           
  2657                           ;My_header\My_terminal.h: 65: if (ascii >= ' ' && ascii <= '~') {
  2658  0109D8  0E1F               	movlw	31
  2659  0109DA  0101               	movlb	1	; () banked
  2660  0109DC  6571               	cpfsgt	my_terminal_loop@ascii& (0+255),b
  2661  0109DE  0012               	return	
  2662                           
  2663                           ; BSR set to: 1
  2664  0109E0  0E7F               	movlw	127
  2665  0109E2  0101               	movlb	1	; () banked
  2666  0109E4  6171               	cpfslt	my_terminal_loop@ascii& (0+255),b
  2667  0109E6  0012               	return	
  2668                           
  2669                           ; BSR set to: 1
  2670                           ;My_header\My_terminal.h: 66: ringbuf_put(&command, ascii);
  2671  0109E8  0EF1               	movlw	low my_terminal_loop@command
  2672  0109EA  6E21               	movwf	ringbuf_put@rb,c
  2673  0109EC  0E00               	movlw	high my_terminal_loop@command
  2674  0109EE  6E22               	movwf	ringbuf_put@rb+1,c
  2675  0109F0  C171  F023         	movff	my_terminal_loop@ascii,ringbuf_put@asciicode
  2676  0109F4  ECEB  F08C         	call	_ringbuf_put	;wreg free
  2677                           
  2678                           ;My_header\My_terminal.h: 67: ringbuf_put(tx, ascii);
  2679  0109F8  C0AA  F021         	movff	my_terminal_loop@tx,ringbuf_put@rb
  2680  0109FC  C0AB  F022         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
  2681  010A00  C171  F023         	movff	my_terminal_loop@ascii,ringbuf_put@asciicode
  2682  010A04  ECEB  F08C         	call	_ringbuf_put	;wreg free
  2683                           
  2684                           ;My_header\My_terminal.h: 70: }
  2685                           
  2686                           ;My_header\My_terminal.h: 68: }
  2687                           ;My_header\My_terminal.h: 69: break;
  2688  010A08  0012               	return	
  2689  010A0A                     l5030:
  2690  010A0A  0101               	movlb	1	; () banked
  2691  010A0C  5171               	movf	my_terminal_loop@ascii& (0+255),w,b
  2692                           
  2693                           ; Switch size 1, requested type "space"
  2694                           ; Number of cases is 4, Range of values is 8 to 127
  2695                           ; switch strategies available:
  2696                           ; Name         Instructions Cycles
  2697                           ; simple_byte           13     7 (average)
  2698                           ;	Chosen strategy is simple_byte
  2699  010A0E  0A08               	xorlw	8	; case 8
  2700  010A10  B4D8               	btfsc	status,2,c
  2701  010A12  D7A2               	goto	l5008
  2702  010A14  0A05               	xorlw	5	; case 13
  2703  010A16  B4D8               	btfsc	status,2,c
  2704  010A18  D69C               	goto	l4970
  2705  010A1A  0A2D               	xorlw	45	; case 32
  2706  010A1C  B4D8               	btfsc	status,2,c
  2707  010A1E  D78B               	goto	l5006
  2708  010A20  0A5F               	xorlw	95	; case 127
  2709  010A22  B4D8               	btfsc	status,2,c
  2710  010A24  D7AC               	goto	l5012
  2711  010A26  D7D8               	goto	l5022
  2712                           
  2713                           ; BSR set to: 1
  2714  010A28  0012               	return	
  2715                           
  2716                           ; BSR set to: 1
  2717  010A2A  0012               	return		;funcret
  2718  010A2C                     __end_of_my_terminal_loop:
  2719                           	opt stack 0
  2720                           tblptru	equ	0xFF8
  2721                           tblptrh	equ	0xFF7
  2722                           tblptrl	equ	0xFF6
  2723                           tablat	equ	0xFF5
  2724                           prodh	equ	0xFF4
  2725                           prodl	equ	0xFF3
  2726                           intcon	equ	0xFF2
  2727                           postinc0	equ	0xFEE
  2728                           wreg	equ	0xFE8
  2729                           postdec1	equ	0xFE5
  2730                           fsr1h	equ	0xFE2
  2731                           fsr1l	equ	0xFE1
  2732                           indf2	equ	0xFDF
  2733                           fsr2h	equ	0xFDA
  2734                           fsr2l	equ	0xFD9
  2735                           status	equ	0xFD8
  2736                           
  2737 ;; *************** function _ringbuf_put_num *****************
  2738 ;; Defined at:
  2739 ;;		line 47 in file "../My_header\My_ringbuf.h"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;  rb              2   13[BANK0 ] PTR struct ringbuf
  2742 ;;		 -> rx_buf(8), 
  2743 ;;  value           2   15[BANK0 ] const unsigned int 
  2744 ;;  digits          1   17[BANK0 ] unsigned char 
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;  i               1   18[BANK0 ] unsigned char 
  2747 ;;  temp            2   19[BANK0 ] unsigned int 
  2748 ;; Return value:  Size  Location     Type
  2749 ;;		None               void
  2750 ;; Registers used:
  2751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2757 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2758 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2760 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2761 ;;Total ram usage:        8 bytes
  2762 ;; Hardware stack levels used:    1
  2763 ;; Hardware stack levels required when called:    6
  2764 ;; This function calls:
  2765 ;;		___lwdiv
  2766 ;;		___lwmod
  2767 ;;		_ringbuf_put
  2768 ;; This function is called by:
  2769 ;;		_my_terminal_loop
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	text2
  2774  012460                     __ptext2:
  2775                           	opt stack 0
  2776  012460                     _ringbuf_put_num:
  2777                           	opt stack 23
  2778                           
  2779                           ;My_header\My_ringbuf.h: 48: while (digits--) {
  2780                           
  2781                           ;incstack = 0
  2782  012460  D039               	goto	l4640
  2783  012462                     l182:
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;My_header\My_ringbuf.h: 49: uint16_t temp = value;
  2787  012462  C06F  F073         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  2788  012466  C070  F074         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;My_header\My_ringbuf.h: 50: for (uint8_t i = 0; i < digits; i++) {
  2792  01246A  0E00               	movlw	0
  2793  01246C  0100               	movlb	0	; () banked
  2794  01246E  6F72               	movwf	ringbuf_put_num@i& (0+255),b
  2795  012470  D012               	goto	l4634
  2796  012472                     l4630:
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;My_header\My_ringbuf.h: 51: temp /= 10;
  2800  012472  C073  F066         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  2801  012476  C074  F067         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  2802  01247A  0E00               	movlw	0
  2803  01247C  0100               	movlb	0	; () banked
  2804  01247E  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2805  012480  0E0A               	movlw	10
  2806  012482  6F68               	movwf	___lwdiv@divisor& (0+255),b
  2807  012484  EC71  F092         	call	___lwdiv	;wreg free
  2808  012488  C066  F073         	movff	?___lwdiv,ringbuf_put_num@temp
  2809  01248C  C067  F074         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  2810  012490  0100               	movlb	0	; () banked
  2811  012492  2B72               	incf	ringbuf_put_num@i& (0+255),f,b
  2812  012494  D000               	goto	l4634
  2813  012496                     l4634:
  2814                           
  2815                           ; BSR set to: 0
  2816  012496  0100               	movlb	0	; () banked
  2817  012498  5171               	movf	ringbuf_put_num@digits& (0+255),w,b
  2818  01249A  0100               	movlb	0	; () banked
  2819  01249C  5D72               	subwf	ringbuf_put_num@i& (0+255),w,b
  2820  01249E  A0D8               	btfss	status,0,c
  2821  0124A0  D7E8               	goto	l4630
  2822                           
  2823                           ; BSR set to: 0
  2824                           ;My_header\My_ringbuf.h: 52: }
  2825                           ;My_header\My_ringbuf.h: 53: temp %= 10;
  2826                           
  2827                           ; BSR set to: 0
  2828  0124A2  C073  F01F         	movff	ringbuf_put_num@temp,___lwmod@dividend
  2829  0124A6  C074  F020         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  2830  0124AA  0E00               	movlw	0
  2831  0124AC  6E22               	movwf	___lwmod@divisor+1,c
  2832  0124AE  0E0A               	movlw	10
  2833  0124B0  6E21               	movwf	___lwmod@divisor,c
  2834  0124B2  EC0D  F094         	call	___lwmod	;wreg free
  2835  0124B6  C01F  F073         	movff	?___lwmod,ringbuf_put_num@temp
  2836  0124BA  C020  F074         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  2837                           
  2838                           ;My_header\My_ringbuf.h: 54: ringbuf_put(rb, temp + '0');
  2839  0124BE  C06D  F021         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  2840  0124C2  C06E  F022         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  2841  0124C6  0100               	movlb	0	; () banked
  2842  0124C8  5173               	movf	ringbuf_put_num@temp& (0+255),w,b
  2843  0124CA  0F30               	addlw	48
  2844  0124CC  6E23               	movwf	ringbuf_put@asciicode,c
  2845  0124CE  ECEB  F08C         	call	_ringbuf_put	;wreg free
  2846  0124D2  D000               	goto	l4640
  2847  0124D4                     l4640:
  2848  0124D4  0100               	movlb	0	; () banked
  2849  0124D6  0771               	decf	ringbuf_put_num@digits& (0+255),f,b
  2850  0124D8  0100               	movlb	0	; () banked
  2851  0124DA  2971               	incf	ringbuf_put_num@digits& (0+255),w,b
  2852  0124DC  A4D8               	btfss	status,2,c
  2853  0124DE  D7C1               	goto	l182
  2854                           
  2855                           ; BSR set to: 0
  2856                           
  2857                           ; BSR set to: 0
  2858  0124E0  0012               	return		;funcret
  2859  0124E2                     __end_of_ringbuf_put_num:
  2860                           	opt stack 0
  2861                           tblptru	equ	0xFF8
  2862                           tblptrh	equ	0xFF7
  2863                           tblptrl	equ	0xFF6
  2864                           tablat	equ	0xFF5
  2865                           prodh	equ	0xFF4
  2866                           prodl	equ	0xFF3
  2867                           intcon	equ	0xFF2
  2868                           postinc0	equ	0xFEE
  2869                           wreg	equ	0xFE8
  2870                           postdec1	equ	0xFE5
  2871                           fsr1h	equ	0xFE2
  2872                           fsr1l	equ	0xFE1
  2873                           indf2	equ	0xFDF
  2874                           fsr2h	equ	0xFDA
  2875                           fsr2l	equ	0xFD9
  2876                           status	equ	0xFD8
  2877                           
  2878 ;; *************** function _ringbuf_pop *****************
  2879 ;; Defined at:
  2880 ;;		line 64 in file "../My_header\My_ringbuf.h"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;  rb              2   32[COMRAM] PTR struct ringbuf
  2883 ;;		 -> my_terminal_loop@command(8), tx_buf(8), 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  ret             1   34[COMRAM] unsigned char 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      unsigned char 
  2888 ;; Registers used:
  2889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2895 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2896 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2897 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2898 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2899 ;;Total ram usage:        7 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    5
  2902 ;; This function calls:
  2903 ;;		_ringbuf_num
  2904 ;; This function is called by:
  2905 ;;		_my_terminal_loop
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text3
  2910  011B62                     __ptext3:
  2911                           	opt stack 0
  2912  011B62                     _ringbuf_pop:
  2913                           	opt stack 24
  2914                           
  2915                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;incstack = 0
  2919  011B62  C021  F01F         	movff	ringbuf_pop@rb,ringbuf_num@rb
  2920  011B66  C022  F020         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  2921  011B6A  EC45  F08B         	call	_ringbuf_num	;wreg free
  2922  011B6E  501F               	movf	?_ringbuf_num,w,c
  2923  011B70  1020               	iorwf	?_ringbuf_num+1,w,c
  2924  011B72  B4D8               	btfsc	status,2,c
  2925  011B74  D052               	goto	l4658
  2926                           
  2927                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
  2928  011B76  EE20 F006          	lfsr	2,6
  2929  011B7A  5021               	movf	ringbuf_pop@rb,w,c
  2930  011B7C  26D9               	addwf	fsr2l,f,c
  2931  011B7E  5022               	movf	ringbuf_pop@rb+1,w,c
  2932  011B80  22DA               	addwfc	fsr2h,f,c
  2933  011B82  CFDE F066          	movff	postinc2,??_ringbuf_pop
  2934  011B86  CFDD F067          	movff	postdec2,??_ringbuf_pop+1
  2935  011B8A  C021  FFD9         	movff	ringbuf_pop@rb,fsr2l
  2936  011B8E  C022  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  2937  011B92  CFDE F068          	movff	postinc2,??_ringbuf_pop+2
  2938  011B96  CFDD F069          	movff	postdec2,??_ringbuf_pop+3
  2939  011B9A  0100               	movlb	0	; () banked
  2940  011B9C  5166               	movf	??_ringbuf_pop& (0+255),w,b
  2941  011B9E  0100               	movlb	0	; () banked
  2942  011BA0  2568               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  2943  011BA2  6ED9               	movwf	fsr2l,c
  2944  011BA4  0100               	movlb	0	; () banked
  2945  011BA6  5167               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  2946  011BA8  0100               	movlb	0	; () banked
  2947  011BAA  2169               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  2948  011BAC  6EDA               	movwf	fsr2h,c
  2949  011BAE  50DF               	movf	indf2,w,c
  2950  011BB0  6E23               	movwf	ringbuf_pop@ret,c
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
  2954  011BB2  EE20 F002          	lfsr	2,2
  2955  011BB6  5021               	movf	ringbuf_pop@rb,w,c
  2956  011BB8  26D9               	addwf	fsr2l,f,c
  2957  011BBA  5022               	movf	ringbuf_pop@rb+1,w,c
  2958  011BBC  22DA               	addwfc	fsr2h,f,c
  2959  011BBE  EE10 F006          	lfsr	1,6
  2960  011BC2  5021               	movf	ringbuf_pop@rb,w,c
  2961  011BC4  26E1               	addwf	fsr1l,f,c
  2962  011BC6  5022               	movf	ringbuf_pop@rb+1,w,c
  2963  011BC8  22E2               	addwfc	fsr1h,f,c
  2964  011BCA  CFE6 F068          	movff	postinc1,??_ringbuf_pop+2
  2965  011BCE  CFE5 F069          	movff	postdec1,??_ringbuf_pop+3
  2966  011BD2  0E01               	movlw	1
  2967  011BD4  0100               	movlb	0	; () banked
  2968  011BD6  2768               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  2969  011BD8  0E00               	movlw	0
  2970  011BDA  2369               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  2971  011BDC  50DE               	movf	postinc2,w,c
  2972  011BDE  0100               	movlb	0	; () banked
  2973  011BE0  5D68               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  2974  011BE2  50DE               	movf	postinc2,w,c
  2975  011BE4  0100               	movlb	0	; () banked
  2976  011BE6  5969               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  2977  011BE8  B0D8               	btfsc	status,0,c
  2978  011BEA  D00A               	goto	l4650
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;My_header\My_ringbuf.h: 68: rb->tail++;
  2982  011BEC  EE20 F006          	lfsr	2,6
  2983  011BF0  5021               	movf	ringbuf_pop@rb,w,c
  2984  011BF2  26D9               	addwf	fsr2l,f,c
  2985  011BF4  5022               	movf	ringbuf_pop@rb+1,w,c
  2986  011BF6  22DA               	addwfc	fsr2h,f,c
  2987  011BF8  2ADE               	incf	postinc2,f,c
  2988  011BFA  0E00               	movlw	0
  2989  011BFC  22DD               	addwfc	postdec2,f,c
  2990                           
  2991                           ;My_header\My_ringbuf.h: 69: } else {
  2992  011BFE  D00B               	goto	l4652
  2993  011C00                     l4650:
  2994                           
  2995                           ; BSR set to: 0
  2996                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
  2997  011C00  EE20 F006          	lfsr	2,6
  2998  011C04  5021               	movf	ringbuf_pop@rb,w,c
  2999  011C06  26D9               	addwf	fsr2l,f,c
  3000  011C08  5022               	movf	ringbuf_pop@rb+1,w,c
  3001  011C0A  22DA               	addwfc	fsr2h,f,c
  3002  011C0C  0E00               	movlw	0
  3003  011C0E  6EDE               	movwf	postinc2,c
  3004  011C10  0E00               	movlw	0
  3005  011C12  6EDD               	movwf	postdec2,c
  3006  011C14  D000               	goto	l4652
  3007  011C16                     l4652:
  3008                           
  3009                           ; BSR set to: 0
  3010                           ;My_header\My_ringbuf.h: 71: }
  3011                           ;My_header\My_ringbuf.h: 72: return ret;
  3012  011C16  5023               	movf	ringbuf_pop@ret,w,c
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;My_header\My_ringbuf.h: 73: } else {
  3016                           
  3017                           ; BSR set to: 0
  3018  011C18  0012               	return	
  3019  011C1A                     l4658:
  3020                           
  3021                           ;My_header\My_ringbuf.h: 74: return 0;
  3022  011C1A  0E00               	movlw	0
  3023  011C1C  0012               	return	
  3024  011C1E  0012               	return		;funcret
  3025  011C20                     __end_of_ringbuf_pop:
  3026                           	opt stack 0
  3027                           tblptru	equ	0xFF8
  3028                           tblptrh	equ	0xFF7
  3029                           tblptrl	equ	0xFF6
  3030                           tablat	equ	0xFF5
  3031                           prodh	equ	0xFF4
  3032                           prodl	equ	0xFF3
  3033                           intcon	equ	0xFF2
  3034                           postinc0	equ	0xFEE
  3035                           wreg	equ	0xFE8
  3036                           postinc1	equ	0xFE6
  3037                           postdec1	equ	0xFE5
  3038                           fsr1h	equ	0xFE2
  3039                           fsr1l	equ	0xFE1
  3040                           indf2	equ	0xFDF
  3041                           postinc2	equ	0xFDE
  3042                           postdec2	equ	0xFDD
  3043                           fsr2h	equ	0xFDA
  3044                           fsr2l	equ	0xFD9
  3045                           status	equ	0xFD8
  3046                           
  3047 ;; *************** function _ringbuf_delete *****************
  3048 ;; Defined at:
  3049 ;;		line 85 in file "../My_header\My_ringbuf.h"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;  rb              2   30[COMRAM] PTR struct ringbuf
  3052 ;;		 -> my_terminal_loop@command(8), 
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;		None               void
  3057 ;; Registers used:
  3058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3064 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3067 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3068 ;;Total ram usage:        2 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:    4
  3071 ;; This function calls:
  3072 ;;		Nothing
  3073 ;; This function is called by:
  3074 ;;		_my_terminal_loop
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           	psect	text4
  3079  012A06                     __ptext4:
  3080                           	opt stack 0
  3081  012A06                     _ringbuf_delete:
  3082                           	opt stack 25
  3083                           
  3084                           ;My_header\My_ringbuf.h: 86: rb->head = rb->tail;
  3085                           
  3086                           ;incstack = 0
  3087  012A06  EE20 F006          	lfsr	2,6
  3088  012A0A  501F               	movf	ringbuf_delete@rb,w,c
  3089  012A0C  26D9               	addwf	fsr2l,f,c
  3090  012A0E  5020               	movf	ringbuf_delete@rb+1,w,c
  3091  012A10  22DA               	addwfc	fsr2h,f,c
  3092  012A12  EE10 F004          	lfsr	1,4
  3093  012A16  501F               	movf	ringbuf_delete@rb,w,c
  3094  012A18  26E1               	addwf	fsr1l,f,c
  3095  012A1A  5020               	movf	ringbuf_delete@rb+1,w,c
  3096  012A1C  22E2               	addwfc	fsr1h,f,c
  3097  012A1E  CFDE FFE6          	movff	postinc2,postinc1
  3098  012A22  CFDD FFE5          	movff	postdec2,postdec1
  3099  012A26  0012               	return		;funcret
  3100  012A28                     __end_of_ringbuf_delete:
  3101                           	opt stack 0
  3102                           tblptru	equ	0xFF8
  3103                           tblptrh	equ	0xFF7
  3104                           tblptrl	equ	0xFF6
  3105                           tablat	equ	0xFF5
  3106                           prodh	equ	0xFF4
  3107                           prodl	equ	0xFF3
  3108                           intcon	equ	0xFF2
  3109                           postinc0	equ	0xFEE
  3110                           wreg	equ	0xFE8
  3111                           postinc1	equ	0xFE6
  3112                           postdec1	equ	0xFE5
  3113                           fsr1h	equ	0xFE2
  3114                           fsr1l	equ	0xFE1
  3115                           indf2	equ	0xFDF
  3116                           postinc2	equ	0xFDE
  3117                           postdec2	equ	0xFDD
  3118                           fsr2h	equ	0xFDA
  3119                           fsr2l	equ	0xFD9
  3120                           status	equ	0xFD8
  3121                           
  3122 ;; *************** function _ringbuf_backspace *****************
  3123 ;; Defined at:
  3124 ;;		line 78 in file "../My_header\My_ringbuf.h"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;  rb              2   32[COMRAM] PTR struct ringbuf
  3127 ;;		 -> my_terminal_loop@command(8), 
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;		None
  3130 ;; Return value:  Size  Location     Type
  3131 ;;		None               void
  3132 ;; Registers used:
  3133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3141 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3142 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3143 ;;Total ram usage:        6 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; Hardware stack levels required when called:    5
  3146 ;; This function calls:
  3147 ;;		_ringbuf_num
  3148 ;; This function is called by:
  3149 ;;		_my_terminal_loop
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           	psect	text5
  3154  0123DC                     __ptext5:
  3155                           	opt stack 0
  3156  0123DC                     _ringbuf_backspace:
  3157                           	opt stack 24
  3158                           
  3159                           ;My_header\My_ringbuf.h: 79: if (ringbuf_num(rb)) {
  3160                           
  3161                           ;incstack = 0
  3162  0123DC  C021  F01F         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  3163  0123E0  C022  F020         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  3164  0123E4  EC45  F08B         	call	_ringbuf_num	;wreg free
  3165  0123E8  501F               	movf	?_ringbuf_num,w,c
  3166  0123EA  1020               	iorwf	?_ringbuf_num+1,w,c
  3167  0123EC  B4D8               	btfsc	status,2,c
  3168  0123EE  0012               	return	
  3169                           
  3170                           ;My_header\My_ringbuf.h: 80: if (rb->head) rb->head--;
  3171  0123F0  EE20 F004          	lfsr	2,4
  3172  0123F4  5021               	movf	ringbuf_backspace@rb,w,c
  3173  0123F6  26D9               	addwf	fsr2l,f,c
  3174  0123F8  5022               	movf	ringbuf_backspace@rb+1,w,c
  3175  0123FA  22DA               	addwfc	fsr2h,f,c
  3176  0123FC  50DE               	movf	postinc2,w,c
  3177  0123FE  10DE               	iorwf	postinc2,w,c
  3178  012400  B4D8               	btfsc	status,2,c
  3179  012402  D00A               	goto	l4668
  3180  012404  EE20 F004          	lfsr	2,4
  3181  012408  5021               	movf	ringbuf_backspace@rb,w,c
  3182  01240A  26D9               	addwf	fsr2l,f,c
  3183  01240C  5022               	movf	ringbuf_backspace@rb+1,w,c
  3184  01240E  22DA               	addwfc	fsr2h,f,c
  3185  012410  06DE               	decf	postinc2,f,c
  3186  012412  0E00               	movlw	0
  3187  012414  5ADD               	subwfb	postdec2,f,c
  3188  012416  0012               	return	
  3189  012418                     l4668:
  3190                           
  3191                           ;My_header\My_ringbuf.h: 81: else rb->head = rb->size - 1;
  3192  012418  0EFF               	movlw	255
  3193  01241A  0100               	movlb	0	; () banked
  3194  01241C  6F66               	movwf	??_ringbuf_backspace& (0+255),b
  3195  01241E  0EFF               	movlw	255
  3196  012420  0100               	movlb	0	; () banked
  3197  012422  6F67               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  3198  012424  EE20 F002          	lfsr	2,2
  3199  012428  5021               	movf	ringbuf_backspace@rb,w,c
  3200  01242A  26D9               	addwf	fsr2l,f,c
  3201  01242C  5022               	movf	ringbuf_backspace@rb+1,w,c
  3202  01242E  22DA               	addwfc	fsr2h,f,c
  3203  012430  CFDE F068          	movff	postinc2,??_ringbuf_backspace+2
  3204  012434  CFDD F069          	movff	postdec2,??_ringbuf_backspace+3
  3205  012438  0100               	movlb	0	; () banked
  3206  01243A  5166               	movf	??_ringbuf_backspace& (0+255),w,b
  3207  01243C  0100               	movlb	0	; () banked
  3208  01243E  2768               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  3209  012440  0100               	movlb	0	; () banked
  3210  012442  5167               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  3211  012444  0100               	movlb	0	; () banked
  3212  012446  2369               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  3213  012448  EE20 F004          	lfsr	2,4
  3214  01244C  5021               	movf	ringbuf_backspace@rb,w,c
  3215  01244E  26D9               	addwf	fsr2l,f,c
  3216  012450  5022               	movf	ringbuf_backspace@rb+1,w,c
  3217  012452  22DA               	addwfc	fsr2h,f,c
  3218  012454  C068  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  3219  012458  C069  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  3220                           
  3221                           ; BSR set to: 0
  3222  01245C  0012               	return	
  3223                           
  3224                           ; BSR set to: 0
  3225  01245E  0012               	return		;funcret
  3226  012460                     __end_of_ringbuf_backspace:
  3227                           	opt stack 0
  3228                           tblptru	equ	0xFF8
  3229                           tblptrh	equ	0xFF7
  3230                           tblptrl	equ	0xFF6
  3231                           tablat	equ	0xFF5
  3232                           prodh	equ	0xFF4
  3233                           prodl	equ	0xFF3
  3234                           intcon	equ	0xFF2
  3235                           postinc0	equ	0xFEE
  3236                           wreg	equ	0xFE8
  3237                           postinc1	equ	0xFE6
  3238                           postdec1	equ	0xFE5
  3239                           fsr1h	equ	0xFE2
  3240                           fsr1l	equ	0xFE1
  3241                           indf2	equ	0xFDF
  3242                           postinc2	equ	0xFDE
  3243                           postdec2	equ	0xFDD
  3244                           fsr2h	equ	0xFDA
  3245                           fsr2l	equ	0xFD9
  3246                           status	equ	0xFD8
  3247                           
  3248 ;; *************** function _command_operation *****************
  3249 ;; Defined at:
  3250 ;;		line 165 in file "PIC18F27J53-killifish_light03.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  3253 ;;		 -> rx_buf(8), 
  3254 ;;  op0             2    2[BANK1 ] PTR unsigned char 
  3255 ;;		 -> my_terminal_loop@op0(20), 
  3256 ;;  op1             2    4[BANK1 ] PTR unsigned char 
  3257 ;;		 -> my_terminal_loop@op1(20), 
  3258 ;;  op2             2    6[BANK1 ] PTR unsigned char 
  3259 ;;		 -> my_terminal_loop@op2(20), 
  3260 ;;  op3             2    8[BANK1 ] PTR unsigned char 
  3261 ;;		 -> my_terminal_loop@op3(20), 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;		None               void
  3266 ;; Registers used:
  3267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3273 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3276 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3277 ;;Total ram usage:       10 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:   11
  3280 ;; This function calls:
  3281 ;;		_PWM_set
  3282 ;;		_command_at
  3283 ;;		_my_atoi
  3284 ;;		_my_strcmp
  3285 ;;		_print_time
  3286 ;;		_tx_sends
  3287 ;; This function is called by:
  3288 ;;		_my_terminal_loop
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           	psect	text6
  3293  01038E                     __ptext6:
  3294                           	opt stack 0
  3295  01038E                     _command_operation:
  3296                           	opt stack 18
  3297                           
  3298                           ;PIC18F27J53-killifish_light03.c: 166: if (!my_strcmp(op0, "help") || !my_strcmp(op0, "?
      +                          ")) {
  3299                           
  3300                           ;incstack = 0
  3301  01038E  C102  F01F         	movff	command_operation@op0,my_strcmp@str1
  3302  010392  C103  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  3303  010396  0EB7               	movlw	low STR_17
  3304  010398  6E21               	movwf	my_strcmp@str2,c
  3305  01039A  0EFF               	movlw	high STR_17
  3306  01039C  6E22               	movwf	my_strcmp@str2+1,c
  3307  01039E  ECCB  F090         	call	_my_strcmp	;wreg free
  3308  0103A2  0900               	iorlw	0
  3309  0103A4  B4D8               	btfsc	status,2,c
  3310  0103A6  D00D               	goto	l4700
  3311  0103A8  C102  F01F         	movff	command_operation@op0,my_strcmp@str1
  3312  0103AC  C103  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  3313  0103B0  0EE6               	movlw	low STR_18
  3314  0103B2  6E21               	movwf	my_strcmp@str2,c
  3315  0103B4  0EFF               	movlw	high STR_18
  3316  0103B6  6E22               	movwf	my_strcmp@str2+1,c
  3317  0103B8  ECCB  F090         	call	_my_strcmp	;wreg free
  3318  0103BC  0900               	iorlw	0
  3319  0103BE  A4D8               	btfss	status,2,c
  3320  0103C0  D009               	goto	l4702
  3321  0103C2                     l4700:
  3322                           
  3323                           ;PIC18F27J53-killifish_light03.c: 167: tx_sends(
  3324                           ;PIC18F27J53-killifish_light03.c: 168: "\t**************************\n"
  3325                           ;PIC18F27J53-killifish_light03.c: 169: "\t**** Killifish Light  ****\n"
  3326                           ;PIC18F27J53-killifish_light03.c: 170: "\t**** Made by @Ryokeri ****\n"
  3327                           ;PIC18F27J53-killifish_light03.c: 171: "\t**************************\n\n"
  3328                           ;PIC18F27J53-killifish_light03.c: 172: "\tcommand \topeland1\topeland2\n\n"
  3329                           ;PIC18F27J53-killifish_light03.c: 173: "\tprint_time(t)\n"
  3330                           ;PIC18F27J53-killifish_light03.c: 174: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(deci
      +                          mal)]\n"
  3331  0103C2  0E49               	movlw	low STR_19
  3332  0103C4  0100               	movlb	0	; () banked
  3333  0103C6  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  3334  0103C8  0EFE               	movlw	high STR_19
  3335  0103CA  0100               	movlb	0	; () banked
  3336  0103CC  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3337  0103CE  EC56  F094         	call	_tx_sends	;wreg free
  3338  0103D2  D000               	goto	l4702
  3339  0103D4                     l4702:
  3340                           
  3341                           ;PIC18F27J53-killifish_light03.c: 181: }
  3342                           ;PIC18F27J53-killifish_light03.c: 182: if (!my_strcmp(op0, "RESET();")) {
  3343  0103D4  C102  F01F         	movff	command_operation@op0,my_strcmp@str1
  3344  0103D8  C103  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  3345  0103DC  0E9B               	movlw	low STR_20
  3346  0103DE  6E21               	movwf	my_strcmp@str2,c
  3347  0103E0  0EFF               	movlw	high STR_20
  3348  0103E2  6E22               	movwf	my_strcmp@str2+1,c
  3349  0103E4  ECCB  F090         	call	_my_strcmp	;wreg free
  3350  0103E8  0900               	iorlw	0
  3351  0103EA  A4D8               	btfss	status,2,c
  3352  0103EC  D002               	goto	l4706
  3353  0103EE  00FF               	reset		;# 
  3354  0103F0  D000               	goto	l4706
  3355  0103F2                     l4706:
  3356                           
  3357                           ;PIC18F27J53-killifish_light03.c: 184: }
  3358                           ;PIC18F27J53-killifish_light03.c: 185: if (!my_strcmp(op0, "at") || !my_strcmp(op0, "adj
      +                          ust_time")) {
  3359  0103F2  C102  F01F         	movff	command_operation@op0,my_strcmp@str1
  3360  0103F6  C103  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  3361  0103FA  0EDD               	movlw	low STR_21
  3362  0103FC  6E21               	movwf	my_strcmp@str2,c
  3363  0103FE  0EFF               	movlw	high STR_21
  3364  010400  6E22               	movwf	my_strcmp@str2+1,c
  3365  010402  ECCB  F090         	call	_my_strcmp	;wreg free
  3366  010406  0900               	iorlw	0
  3367  010408  B4D8               	btfsc	status,2,c
  3368  01040A  D00D               	goto	l4710
  3369  01040C  C102  F01F         	movff	command_operation@op0,my_strcmp@str1
  3370  010410  C103  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  3371  010414  0E84               	movlw	low STR_22
  3372  010416  6E21               	movwf	my_strcmp@str2,c
  3373  010418  0EFF               	movlw	high STR_22
  3374  01041A  6E22               	movwf	my_strcmp@str2+1,c
  3375  01041C  ECCB  F090         	call	_my_strcmp	;wreg free
  3376  010420  0900               	iorlw	0
  3377  010422  A4D8               	btfss	status,2,c
  3378  010424  D00F               	goto	l4712
  3379  010426                     l4710:
  3380                           
  3381                           ;PIC18F27J53-killifish_light03.c: 186: command_at(tx, op1, op2);
  3382  010426  C100  F0A3         	movff	command_operation@tx,command_at@tx
  3383  01042A  C101  F0A4         	movff	command_operation@tx+1,command_at@tx+1
  3384  01042E  C104  F0A5         	movff	command_operation@op1,command_at@op1
  3385  010432  C105  F0A6         	movff	command_operation@op1+1,command_at@op1+1
  3386  010436  C106  F0A7         	movff	command_operation@op2,command_at@op2
  3387  01043A  C107  F0A8         	movff	command_operation@op2+1,command_at@op2+1
  3388  01043E  EC9F  F087         	call	_command_at	;wreg free
  3389  010442  D000               	goto	l4712
  3390  010444                     l4712:
  3391                           
  3392                           ;PIC18F27J53-killifish_light03.c: 187: }
  3393                           ;PIC18F27J53-killifish_light03.c: 188: if (!my_strcmp(op0, "print_time") || !my_strcmp(o
      +                          p0, "t")) {
  3394  010444  C102  F01F         	movff	command_operation@op0,my_strcmp@str1
  3395  010448  C103  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  3396  01044C  0E90               	movlw	low STR_23
  3397  01044E  6E21               	movwf	my_strcmp@str2,c
  3398  010450  0EFF               	movlw	high STR_23
  3399  010452  6E22               	movwf	my_strcmp@str2+1,c
  3400  010454  ECCB  F090         	call	_my_strcmp	;wreg free
  3401  010458  0900               	iorlw	0
  3402  01045A  B4D8               	btfsc	status,2,c
  3403  01045C  D00D               	goto	l4716
  3404  01045E  C102  F01F         	movff	command_operation@op0,my_strcmp@str1
  3405  010462  C103  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  3406  010466  0EDE               	movlw	low (STR_21+1)
  3407  010468  6E21               	movwf	my_strcmp@str2,c
  3408  01046A  0EFF               	movlw	high (STR_21+1)
  3409  01046C  6E22               	movwf	my_strcmp@str2+1,c
  3410  01046E  ECCB  F090         	call	_my_strcmp	;wreg free
  3411  010472  0900               	iorlw	0
  3412  010474  A4D8               	btfss	status,2,c
  3413  010476  D00A               	goto	l4718
  3414  010478                     l4716:
  3415                           
  3416                           ;PIC18F27J53-killifish_light03.c: 189: print_time(tx, 1);
  3417  010478  C100  F086         	movff	command_operation@tx,print_time@tx
  3418  01047C  C101  F087         	movff	command_operation@tx+1,print_time@tx+1
  3419  010480  0E01               	movlw	1
  3420  010482  0100               	movlb	0	; () banked
  3421  010484  6F88               	movwf	print_time@carrige_return& (0+255),b
  3422  010486  EC9A  F089         	call	_print_time	;wreg free
  3423  01048A  D000               	goto	l4718
  3424  01048C                     l4718:
  3425                           
  3426                           ;PIC18F27J53-killifish_light03.c: 190: }
  3427                           ;PIC18F27J53-killifish_light03.c: 191: if (!my_strcmp(op0, "set")) {
  3428  01048C  C102  F01F         	movff	command_operation@op0,my_strcmp@str1
  3429  010490  C103  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  3430  010494  0ED0               	movlw	low STR_25
  3431  010496  6E21               	movwf	my_strcmp@str2,c
  3432  010498  0EFF               	movlw	high STR_25
  3433  01049A  6E22               	movwf	my_strcmp@str2+1,c
  3434  01049C  ECCB  F090         	call	_my_strcmp	;wreg free
  3435  0104A0  0900               	iorlw	0
  3436  0104A2  A4D8               	btfss	status,2,c
  3437  0104A4  D02F               	goto	l4730
  3438                           
  3439                           ;PIC18F27J53-killifish_light03.c: 192: if (!my_strcmp(op1, "sync")) {
  3440  0104A6  C104  F01F         	movff	command_operation@op1,my_strcmp@str1
  3441  0104AA  C105  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3442  0104AE  0EB2               	movlw	low STR_26
  3443  0104B0  6E21               	movwf	my_strcmp@str2,c
  3444  0104B2  0EFF               	movlw	high STR_26
  3445  0104B4  6E22               	movwf	my_strcmp@str2+1,c
  3446  0104B6  ECCB  F090         	call	_my_strcmp	;wreg free
  3447  0104BA  0900               	iorlw	0
  3448  0104BC  A4D8               	btfss	status,2,c
  3449  0104BE  D004               	goto	l4724
  3450                           
  3451                           ;PIC18F27J53-killifish_light03.c: 193: light_mode = TIME_SYNC_mode;
  3452  0104C0  0E00               	movlw	0
  3453  0104C2  0100               	movlb	0	; () banked
  3454  0104C4  6FB5               	movwf	_light_mode& (0+255),b
  3455  0104C6  D000               	goto	l4724
  3456  0104C8                     l4724:
  3457                           
  3458                           ;PIC18F27J53-killifish_light03.c: 194: }
  3459                           ;PIC18F27J53-killifish_light03.c: 195: if (!my_strcmp(op1, "adc") || !my_strcmp(op1, "AD
      +                          C")) {
  3460  0104C8  C104  F01F         	movff	command_operation@op1,my_strcmp@str1
  3461  0104CC  C105  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3462  0104D0  0EC8               	movlw	low STR_27
  3463  0104D2  6E21               	movwf	my_strcmp@str2,c
  3464  0104D4  0EFF               	movlw	high STR_27
  3465  0104D6  6E22               	movwf	my_strcmp@str2+1,c
  3466  0104D8  ECCB  F090         	call	_my_strcmp	;wreg free
  3467  0104DC  0900               	iorlw	0
  3468  0104DE  B4D8               	btfsc	status,2,c
  3469  0104E0  D00D               	goto	l4728
  3470  0104E2  C104  F01F         	movff	command_operation@op1,my_strcmp@str1
  3471  0104E6  C105  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3472  0104EA  0EC0               	movlw	low STR_28
  3473  0104EC  6E21               	movwf	my_strcmp@str2,c
  3474  0104EE  0EFF               	movlw	high STR_28
  3475  0104F0  6E22               	movwf	my_strcmp@str2+1,c
  3476  0104F2  ECCB  F090         	call	_my_strcmp	;wreg free
  3477  0104F6  0900               	iorlw	0
  3478  0104F8  A4D8               	btfss	status,2,c
  3479  0104FA  D004               	goto	l4730
  3480  0104FC                     l4728:
  3481                           
  3482                           ;PIC18F27J53-killifish_light03.c: 196: light_mode = ADC_mode;
  3483  0104FC  0E01               	movlw	1
  3484  0104FE  0100               	movlb	0	; () banked
  3485  010500  6FB5               	movwf	_light_mode& (0+255),b
  3486                           
  3487                           ; BSR set to: 0
  3488  010502  D000               	goto	l4730
  3489  010504                     l4730:
  3490                           
  3491                           ;PIC18F27J53-killifish_light03.c: 197: }
  3492                           ;PIC18F27J53-killifish_light03.c: 198: }
  3493                           ;PIC18F27J53-killifish_light03.c: 199: if (!my_strcmp(op0, "pwm") || !my_strcmp(op0, "PW
      +                          M")) {
  3494  010504  C102  F01F         	movff	command_operation@op0,my_strcmp@str1
  3495  010508  C103  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  3496  01050C  0ECC               	movlw	low STR_29
  3497  01050E  6E21               	movwf	my_strcmp@str2,c
  3498  010510  0EFF               	movlw	high STR_29
  3499  010512  6E22               	movwf	my_strcmp@str2+1,c
  3500  010514  ECCB  F090         	call	_my_strcmp	;wreg free
  3501  010518  0900               	iorlw	0
  3502  01051A  B4D8               	btfsc	status,2,c
  3503  01051C  D00D               	goto	l4734
  3504  01051E  C102  F01F         	movff	command_operation@op0,my_strcmp@str1
  3505  010522  C103  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  3506  010526  0EC4               	movlw	low STR_30
  3507  010528  6E21               	movwf	my_strcmp@str2,c
  3508  01052A  0EFF               	movlw	high STR_30
  3509  01052C  6E22               	movwf	my_strcmp@str2+1,c
  3510  01052E  ECCB  F090         	call	_my_strcmp	;wreg free
  3511  010532  0900               	iorlw	0
  3512  010534  A4D8               	btfss	status,2,c
  3513  010536  0012               	return	
  3514  010538                     l4734:
  3515                           
  3516                           ;PIC18F27J53-killifish_light03.c: 200: if (!my_strcmp(op1, "r") || !my_strcmp(op1, "R"))
      +                           {
  3517  010538  C104  F01F         	movff	command_operation@op1,my_strcmp@str1
  3518  01053C  C105  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3519  010540  0EB0               	movlw	low (STR_39+4)
  3520  010542  6E21               	movwf	my_strcmp@str2,c
  3521  010544  0EFF               	movlw	high (STR_39+4)
  3522  010546  6E22               	movwf	my_strcmp@str2+1,c
  3523  010548  ECCB  F090         	call	_my_strcmp	;wreg free
  3524  01054C  0900               	iorlw	0
  3525  01054E  B4D8               	btfsc	status,2,c
  3526  010550  D00D               	goto	l4738
  3527  010552  C104  F01F         	movff	command_operation@op1,my_strcmp@str1
  3528  010556  C105  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3529  01055A  0EEC               	movlw	low STR_32
  3530  01055C  6E21               	movwf	my_strcmp@str2,c
  3531  01055E  0EFF               	movlw	high STR_32
  3532  010560  6E22               	movwf	my_strcmp@str2+1,c
  3533  010562  ECCB  F090         	call	_my_strcmp	;wreg free
  3534  010566  0900               	iorlw	0
  3535  010568  A4D8               	btfss	status,2,c
  3536  01056A  D011               	goto	l4742
  3537  01056C                     l4738:
  3538                           
  3539                           ;PIC18F27J53-killifish_light03.c: 201: light_mode = COMMAND_mode;
  3540  01056C  0E02               	movlw	2
  3541  01056E  0100               	movlb	0	; () banked
  3542  010570  6FB5               	movwf	_light_mode& (0+255),b
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;PIC18F27J53-killifish_light03.c: 202: PWM_set(0, my_atoi(op2));
  3546  010572  C106  F066         	movff	command_operation@op2,my_atoi@str
  3547  010576  C107  F067         	movff	command_operation@op2+1,my_atoi@str+1
  3548  01057A  EC2A  F090         	call	_my_atoi	;wreg free
  3549  01057E  C066  F06E         	movff	?_my_atoi,PWM_set@value
  3550  010582  C067  F06F         	movff	?_my_atoi+1,PWM_set@value+1
  3551  010586  0E00               	movlw	0
  3552  010588  EC85  F08A         	call	_PWM_set
  3553  01058C  D000               	goto	l4742
  3554  01058E                     l4742:
  3555                           
  3556                           ;PIC18F27J53-killifish_light03.c: 203: }
  3557                           ;PIC18F27J53-killifish_light03.c: 204: if (!my_strcmp(op1, "g") || !my_strcmp(op1, "G"))
      +                           {
  3558  01058E  C104  F01F         	movff	command_operation@op1,my_strcmp@str1
  3559  010592  C105  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3560  010596  0EF4               	movlw	low STR_33
  3561  010598  6E21               	movwf	my_strcmp@str2,c
  3562  01059A  0EFF               	movlw	high STR_33
  3563  01059C  6E22               	movwf	my_strcmp@str2+1,c
  3564  01059E  ECCB  F090         	call	_my_strcmp	;wreg free
  3565  0105A2  0900               	iorlw	0
  3566  0105A4  B4D8               	btfsc	status,2,c
  3567  0105A6  D00D               	goto	l4746
  3568  0105A8  C104  F01F         	movff	command_operation@op1,my_strcmp@str1
  3569  0105AC  C105  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3570  0105B0  0EEA               	movlw	low STR_34
  3571  0105B2  6E21               	movwf	my_strcmp@str2,c
  3572  0105B4  0EFF               	movlw	high STR_34
  3573  0105B6  6E22               	movwf	my_strcmp@str2+1,c
  3574  0105B8  ECCB  F090         	call	_my_strcmp	;wreg free
  3575  0105BC  0900               	iorlw	0
  3576  0105BE  A4D8               	btfss	status,2,c
  3577  0105C0  D011               	goto	l4750
  3578  0105C2                     l4746:
  3579                           
  3580                           ;PIC18F27J53-killifish_light03.c: 205: light_mode = COMMAND_mode;
  3581  0105C2  0E02               	movlw	2
  3582  0105C4  0100               	movlb	0	; () banked
  3583  0105C6  6FB5               	movwf	_light_mode& (0+255),b
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;PIC18F27J53-killifish_light03.c: 206: PWM_set(1, my_atoi(op2));
  3587  0105C8  C106  F066         	movff	command_operation@op2,my_atoi@str
  3588  0105CC  C107  F067         	movff	command_operation@op2+1,my_atoi@str+1
  3589  0105D0  EC2A  F090         	call	_my_atoi	;wreg free
  3590  0105D4  C066  F06E         	movff	?_my_atoi,PWM_set@value
  3591  0105D8  C067  F06F         	movff	?_my_atoi+1,PWM_set@value+1
  3592  0105DC  0E01               	movlw	1
  3593  0105DE  EC85  F08A         	call	_PWM_set
  3594  0105E2  D000               	goto	l4750
  3595  0105E4                     l4750:
  3596                           
  3597                           ;PIC18F27J53-killifish_light03.c: 207: }
  3598                           ;PIC18F27J53-killifish_light03.c: 208: if (!my_strcmp(op1, "b") || !my_strcmp(op1, "B"))
      +                           {
  3599  0105E4  C104  F01F         	movff	command_operation@op1,my_strcmp@str1
  3600  0105E8  C105  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3601  0105EC  0EF0               	movlw	low STR_35
  3602  0105EE  6E21               	movwf	my_strcmp@str2,c
  3603  0105F0  0EFF               	movlw	high STR_35
  3604  0105F2  6E22               	movwf	my_strcmp@str2+1,c
  3605  0105F4  ECCB  F090         	call	_my_strcmp	;wreg free
  3606  0105F8  0900               	iorlw	0
  3607  0105FA  B4D8               	btfsc	status,2,c
  3608  0105FC  D00D               	goto	l4754
  3609  0105FE  C104  F01F         	movff	command_operation@op1,my_strcmp@str1
  3610  010602  C105  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3611  010606  0EE8               	movlw	low STR_36
  3612  010608  6E21               	movwf	my_strcmp@str2,c
  3613  01060A  0EFF               	movlw	high STR_36
  3614  01060C  6E22               	movwf	my_strcmp@str2+1,c
  3615  01060E  ECCB  F090         	call	_my_strcmp	;wreg free
  3616  010612  0900               	iorlw	0
  3617  010614  A4D8               	btfss	status,2,c
  3618  010616  D011               	goto	l4758
  3619  010618                     l4754:
  3620                           
  3621                           ;PIC18F27J53-killifish_light03.c: 209: light_mode = COMMAND_mode;
  3622  010618  0E02               	movlw	2
  3623  01061A  0100               	movlb	0	; () banked
  3624  01061C  6FB5               	movwf	_light_mode& (0+255),b
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;PIC18F27J53-killifish_light03.c: 210: PWM_set(2, my_atoi(op2));
  3628  01061E  C106  F066         	movff	command_operation@op2,my_atoi@str
  3629  010622  C107  F067         	movff	command_operation@op2+1,my_atoi@str+1
  3630  010626  EC2A  F090         	call	_my_atoi	;wreg free
  3631  01062A  C066  F06E         	movff	?_my_atoi,PWM_set@value
  3632  01062E  C067  F06F         	movff	?_my_atoi+1,PWM_set@value+1
  3633  010632  0E02               	movlw	2
  3634  010634  EC85  F08A         	call	_PWM_set
  3635  010638  D000               	goto	l4758
  3636  01063A                     l4758:
  3637                           
  3638                           ;PIC18F27J53-killifish_light03.c: 211: }
  3639                           ;PIC18F27J53-killifish_light03.c: 212: if (!my_strcmp(op1, "w") || !my_strcmp(op1, "W"))
      +                           {
  3640  01063A  C104  F01F         	movff	command_operation@op1,my_strcmp@str1
  3641  01063E  C105  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3642  010642  0EFA               	movlw	low STR_37
  3643  010644  6E21               	movwf	my_strcmp@str2,c
  3644  010646  0EFF               	movlw	high STR_37
  3645  010648  6E22               	movwf	my_strcmp@str2+1,c
  3646  01064A  ECCB  F090         	call	_my_strcmp	;wreg free
  3647  01064E  0900               	iorlw	0
  3648  010650  B4D8               	btfsc	status,2,c
  3649  010652  D00D               	goto	l4762
  3650  010654  C104  F01F         	movff	command_operation@op1,my_strcmp@str1
  3651  010658  C105  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3652  01065C  0EEE               	movlw	low STR_38
  3653  01065E  6E21               	movwf	my_strcmp@str2,c
  3654  010660  0EFF               	movlw	high STR_38
  3655  010662  6E22               	movwf	my_strcmp@str2+1,c
  3656  010664  ECCB  F090         	call	_my_strcmp	;wreg free
  3657  010668  0900               	iorlw	0
  3658  01066A  A4D8               	btfss	status,2,c
  3659  01066C  D011               	goto	l4766
  3660  01066E                     l4762:
  3661                           
  3662                           ;PIC18F27J53-killifish_light03.c: 213: light_mode = COMMAND_mode;
  3663  01066E  0E02               	movlw	2
  3664  010670  0100               	movlb	0	; () banked
  3665  010672  6FB5               	movwf	_light_mode& (0+255),b
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;PIC18F27J53-killifish_light03.c: 214: PWM_set(3, my_atoi(op2));
  3669  010674  C106  F066         	movff	command_operation@op2,my_atoi@str
  3670  010678  C107  F067         	movff	command_operation@op2+1,my_atoi@str+1
  3671  01067C  EC2A  F090         	call	_my_atoi	;wreg free
  3672  010680  C066  F06E         	movff	?_my_atoi,PWM_set@value
  3673  010684  C067  F06F         	movff	?_my_atoi+1,PWM_set@value+1
  3674  010688  0E03               	movlw	3
  3675  01068A  EC85  F08A         	call	_PWM_set
  3676  01068E  D000               	goto	l4766
  3677  010690                     l4766:
  3678                           
  3679                           ;PIC18F27J53-killifish_light03.c: 215: }
  3680                           ;PIC18F27J53-killifish_light03.c: 216: if (!my_strcmp(op1, "clear")) {
  3681  010690  C104  F01F         	movff	command_operation@op1,my_strcmp@str1
  3682  010694  C105  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3683  010698  0EAC               	movlw	low STR_39
  3684  01069A  6E21               	movwf	my_strcmp@str2,c
  3685  01069C  0EFF               	movlw	high STR_39
  3686  01069E  6E22               	movwf	my_strcmp@str2+1,c
  3687  0106A0  ECCB  F090         	call	_my_strcmp	;wreg free
  3688  0106A4  0900               	iorlw	0
  3689  0106A6  A4D8               	btfss	status,2,c
  3690  0106A8  0012               	return	
  3691                           
  3692                           ;PIC18F27J53-killifish_light03.c: 217: light_mode = COMMAND_mode;
  3693  0106AA  0E02               	movlw	2
  3694  0106AC  0100               	movlb	0	; () banked
  3695  0106AE  6FB5               	movwf	_light_mode& (0+255),b
  3696                           
  3697                           ; BSR set to: 0
  3698                           ;PIC18F27J53-killifish_light03.c: 218: PWM_set(0, 0);
  3699  0106B0  0E00               	movlw	0
  3700  0106B2  0100               	movlb	0	; () banked
  3701  0106B4  6F6F               	movwf	(PWM_set@value+1)& (0+255),b
  3702  0106B6  0E00               	movlw	0
  3703  0106B8  6F6E               	movwf	PWM_set@value& (0+255),b
  3704  0106BA  0E00               	movlw	0
  3705  0106BC  EC85  F08A         	call	_PWM_set
  3706                           
  3707                           ;PIC18F27J53-killifish_light03.c: 219: PWM_set(1, 0);
  3708  0106C0  0E00               	movlw	0
  3709  0106C2  0100               	movlb	0	; () banked
  3710  0106C4  6F6F               	movwf	(PWM_set@value+1)& (0+255),b
  3711  0106C6  0E00               	movlw	0
  3712  0106C8  6F6E               	movwf	PWM_set@value& (0+255),b
  3713  0106CA  0E01               	movlw	1
  3714  0106CC  EC85  F08A         	call	_PWM_set
  3715                           
  3716                           ;PIC18F27J53-killifish_light03.c: 220: PWM_set(2, 0);
  3717  0106D0  0E00               	movlw	0
  3718  0106D2  0100               	movlb	0	; () banked
  3719  0106D4  6F6F               	movwf	(PWM_set@value+1)& (0+255),b
  3720  0106D6  0E00               	movlw	0
  3721  0106D8  6F6E               	movwf	PWM_set@value& (0+255),b
  3722  0106DA  0E02               	movlw	2
  3723  0106DC  EC85  F08A         	call	_PWM_set
  3724                           
  3725                           ;PIC18F27J53-killifish_light03.c: 221: PWM_set(3, 0);
  3726  0106E0  0E00               	movlw	0
  3727  0106E2  0100               	movlb	0	; () banked
  3728  0106E4  6F6F               	movwf	(PWM_set@value+1)& (0+255),b
  3729  0106E6  0E00               	movlw	0
  3730  0106E8  6F6E               	movwf	PWM_set@value& (0+255),b
  3731  0106EA  0E03               	movlw	3
  3732  0106EC  EC85  F08A         	call	_PWM_set
  3733  0106F0  0012               	return	
  3734  0106F2  0012               	return		;funcret
  3735  0106F4                     __end_of_command_operation:
  3736                           	opt stack 0
  3737                           tblptru	equ	0xFF8
  3738                           tblptrh	equ	0xFF7
  3739                           tblptrl	equ	0xFF6
  3740                           tablat	equ	0xFF5
  3741                           prodh	equ	0xFF4
  3742                           prodl	equ	0xFF3
  3743                           intcon	equ	0xFF2
  3744                           postinc0	equ	0xFEE
  3745                           wreg	equ	0xFE8
  3746                           postinc1	equ	0xFE6
  3747                           postdec1	equ	0xFE5
  3748                           fsr1h	equ	0xFE2
  3749                           fsr1l	equ	0xFE1
  3750                           indf2	equ	0xFDF
  3751                           postinc2	equ	0xFDE
  3752                           postdec2	equ	0xFDD
  3753                           fsr2h	equ	0xFDA
  3754                           fsr2l	equ	0xFD9
  3755                           status	equ	0xFD8
  3756                           
  3757 ;; *************** function _tx_sends *****************
  3758 ;; Defined at:
  3759 ;;		line 227 in file "../My_header\My_header.h"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  asciicode       2   10[BANK0 ] PTR const unsigned char 
  3762 ;;		 -> STR_19(315), 
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;		None
  3765 ;; Return value:  Size  Location     Type
  3766 ;;		None               void
  3767 ;; Registers used:
  3768 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3774 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3777 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3778 ;;Total ram usage:        2 bytes
  3779 ;; Hardware stack levels used:    1
  3780 ;; Hardware stack levels required when called:    6
  3781 ;; This function calls:
  3782 ;;		_ringbuf_put
  3783 ;; This function is called by:
  3784 ;;		_command_operation
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           	psect	text7
  3789  0128AC                     __ptext7:
  3790                           	opt stack 0
  3791  0128AC                     _tx_sends:
  3792                           	opt stack 22
  3793                           
  3794                           ;My_header\My_header.h: 228: while (*asciicode) {
  3795                           
  3796                           ;incstack = 0
  3797  0128AC  D013               	goto	l4496
  3798  0128AE                     l4492:
  3799                           
  3800                           ;My_header\My_header.h: 229: ringbuf_put(&tx_buf, *asciicode++);
  3801  0128AE  0EE9               	movlw	low _tx_buf
  3802  0128B0  6E21               	movwf	ringbuf_put@rb,c
  3803  0128B2  0E00               	movlw	high _tx_buf
  3804  0128B4  6E22               	movwf	ringbuf_put@rb+1,c
  3805  0128B6  C06A  FFF6         	movff	tx_sends@asciicode,tblptrl
  3806  0128BA  C06B  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  3807  0128BE                     	if	0	;tblptru may be non-zero
  3808  0128BE                     	endif
  3809  0128BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3810  0128BE  0E00               	movlw	low (__mediumconst shr (0+16))
  3811  0128C0  6EF8               	movwf	tblptru,c
  3812  0128C2                     	endif
  3813  0128C2  0008               	tblrd		*
  3814  0128C4  CFF5 F023          	movff	tablat,ringbuf_put@asciicode
  3815  0128C8  ECEB  F08C         	call	_ringbuf_put	;wreg free
  3816  0128CC  0100               	movlb	0	; () banked
  3817  0128CE  4B6A               	infsnz	tx_sends@asciicode& (0+255),f,b
  3818  0128D0  2B6B               	incf	(tx_sends@asciicode+1)& (0+255),f,b
  3819  0128D2  D000               	goto	l4496
  3820  0128D4                     l4496:
  3821  0128D4  C06A  FFF6         	movff	tx_sends@asciicode,tblptrl
  3822  0128D8  C06B  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  3823  0128DC                     	if	0	;tblptru may be non-zero
  3824  0128DC                     	endif
  3825  0128DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3826  0128DC  0E00               	movlw	low (__mediumconst shr (0+16))
  3827  0128DE  6EF8               	movwf	tblptru,c
  3828  0128E0                     	endif
  3829  0128E0  0008               	tblrd		*
  3830  0128E2  50F5               	movf	tablat,w,c
  3831  0128E4  0900               	iorlw	0
  3832  0128E6  A4D8               	btfss	status,2,c
  3833  0128E8  D7E2               	goto	l4492
  3834                           
  3835                           ;My_header\My_header.h: 230: }
  3836                           ;My_header\My_header.h: 231: PIE1bits.TXIE = 1;
  3837  0128EA  889D               	bsf	3997,4,c	;volatile
  3838  0128EC  0012               	return		;funcret
  3839  0128EE                     __end_of_tx_sends:
  3840                           	opt stack 0
  3841                           tblptru	equ	0xFF8
  3842                           tblptrh	equ	0xFF7
  3843                           tblptrl	equ	0xFF6
  3844                           tablat	equ	0xFF5
  3845                           prodh	equ	0xFF4
  3846                           prodl	equ	0xFF3
  3847                           intcon	equ	0xFF2
  3848                           postinc0	equ	0xFEE
  3849                           wreg	equ	0xFE8
  3850                           postinc1	equ	0xFE6
  3851                           postdec1	equ	0xFE5
  3852                           fsr1h	equ	0xFE2
  3853                           fsr1l	equ	0xFE1
  3854                           indf2	equ	0xFDF
  3855                           postinc2	equ	0xFDE
  3856                           postdec2	equ	0xFDD
  3857                           fsr2h	equ	0xFDA
  3858                           fsr2l	equ	0xFD9
  3859                           status	equ	0xFD8
  3860                           
  3861 ;; *************** function _command_at *****************
  3862 ;; Defined at:
  3863 ;;		line 113 in file "../My_header\My_terminal.h"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;  tx              2   67[BANK0 ] PTR struct ringbuf
  3866 ;;		 -> rx_buf(8), 
  3867 ;;  op1             2   69[BANK0 ] PTR unsigned char 
  3868 ;;		 -> my_terminal_loop@op1(20), 
  3869 ;;  op2             2   71[BANK0 ] PTR unsigned char 
  3870 ;;		 -> my_terminal_loop@op2(20), 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;		None               void
  3875 ;; Registers used:
  3876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3882 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3883 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3885 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3886 ;;Total ram usage:        7 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:   10
  3889 ;; This function calls:
  3890 ;;		_command_at_hand
  3891 ;;		_month_length
  3892 ;;		_my_atoi
  3893 ;;		_my_strcmp
  3894 ;; This function is called by:
  3895 ;;		_command_operation
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text8
  3900  010F3E                     __ptext8:
  3901                           	opt stack 0
  3902  010F3E                     _command_at:
  3903                           	opt stack 18
  3904                           
  3905                           ;My_header\My_terminal.h: 114: if (!my_strcmp(op1, "y")) {
  3906                           
  3907                           ;incstack = 0
  3908  010F3E  C0A5  F01F         	movff	command_at@op1,my_strcmp@str1
  3909  010F42  C0A6  F020         	movff	command_at@op1+1,my_strcmp@str1+1
  3910  010F46  0EFC               	movlw	low STR_11
  3911  010F48  6E21               	movwf	my_strcmp@str2,c
  3912  010F4A  0EFF               	movlw	high STR_11
  3913  010F4C  6E22               	movwf	my_strcmp@str2+1,c
  3914  010F4E  ECCB  F090         	call	_my_strcmp	;wreg free
  3915  010F52  0900               	iorlw	0
  3916  010F54  A4D8               	btfss	status,2,c
  3917  010F56  D01D               	goto	l4502
  3918                           
  3919                           ;My_header\My_terminal.h: 115: command_at_hand(tx, &caltime_now.YY, 0, 99, my_atoi(op2))
      +                          ;
  3920  010F58  C0A3  F09C         	movff	command_at@tx,command_at_hand@tx
  3921  010F5C  C0A4  F09D         	movff	command_at@tx+1,command_at_hand@tx+1
  3922  010F60  0E35               	movlw	low (_caltime_now+6)
  3923  010F62  0100               	movlb	0	; () banked
  3924  010F64  6F9E               	movwf	command_at_hand@hand& (0+255),b
  3925  010F66  0E00               	movlw	high (_caltime_now+6)
  3926  010F68  0100               	movlb	0	; () banked
  3927  010F6A  6F9F               	movwf	(command_at_hand@hand+1)& (0+255),b
  3928  010F6C  0E00               	movlw	0
  3929  010F6E  0100               	movlb	0	; () banked
  3930  010F70  6FA0               	movwf	command_at_hand@min& (0+255),b
  3931  010F72  0E63               	movlw	99
  3932  010F74  0100               	movlb	0	; () banked
  3933  010F76  6FA1               	movwf	command_at_hand@max& (0+255),b
  3934  010F78  C0A7  F066         	movff	command_at@op2,my_atoi@str
  3935  010F7C  C0A8  F067         	movff	command_at@op2+1,my_atoi@str+1
  3936  010F80  EC2A  F090         	call	_my_atoi	;wreg free
  3937  010F84  0100               	movlb	0	; () banked
  3938  010F86  5166               	movf	?_my_atoi& (0+255),w,b
  3939  010F88  0100               	movlb	0	; () banked
  3940  010F8A  6FA2               	movwf	command_at_hand@value& (0+255),b
  3941  010F8C  ECEF  F092         	call	_command_at_hand	;wreg free
  3942  010F90  D000               	goto	l4502
  3943  010F92                     l4502:
  3944                           
  3945                           ;My_header\My_terminal.h: 116: }
  3946                           ;My_header\My_terminal.h: 117: if (!my_strcmp(op1, "M")) {
  3947  010F92  C0A5  F01F         	movff	command_at@op1,my_strcmp@str1
  3948  010F96  C0A6  F020         	movff	command_at@op1+1,my_strcmp@str1+1
  3949  010F9A  0EC6               	movlw	low (STR_30+2)
  3950  010F9C  6E21               	movwf	my_strcmp@str2,c
  3951  010F9E  0EFF               	movlw	high (STR_30+2)
  3952  010FA0  6E22               	movwf	my_strcmp@str2+1,c
  3953  010FA2  ECCB  F090         	call	_my_strcmp	;wreg free
  3954  010FA6  0900               	iorlw	0
  3955  010FA8  A4D8               	btfss	status,2,c
  3956  010FAA  D01D               	goto	l4506
  3957                           
  3958                           ;My_header\My_terminal.h: 118: command_at_hand(tx, &caltime_now.MM, 1, 12, my_atoi(op2))
      +                          ;
  3959  010FAC  C0A3  F09C         	movff	command_at@tx,command_at_hand@tx
  3960  010FB0  C0A4  F09D         	movff	command_at@tx+1,command_at_hand@tx+1
  3961  010FB4  0E34               	movlw	low (_caltime_now+5)
  3962  010FB6  0100               	movlb	0	; () banked
  3963  010FB8  6F9E               	movwf	command_at_hand@hand& (0+255),b
  3964  010FBA  0E00               	movlw	high (_caltime_now+5)
  3965  010FBC  0100               	movlb	0	; () banked
  3966  010FBE  6F9F               	movwf	(command_at_hand@hand+1)& (0+255),b
  3967  010FC0  0E01               	movlw	1
  3968  010FC2  0100               	movlb	0	; () banked
  3969  010FC4  6FA0               	movwf	command_at_hand@min& (0+255),b
  3970  010FC6  0E0C               	movlw	12
  3971  010FC8  0100               	movlb	0	; () banked
  3972  010FCA  6FA1               	movwf	command_at_hand@max& (0+255),b
  3973  010FCC  C0A7  F066         	movff	command_at@op2,my_atoi@str
  3974  010FD0  C0A8  F067         	movff	command_at@op2+1,my_atoi@str+1
  3975  010FD4  EC2A  F090         	call	_my_atoi	;wreg free
  3976  010FD8  0100               	movlb	0	; () banked
  3977  010FDA  5166               	movf	?_my_atoi& (0+255),w,b
  3978  010FDC  0100               	movlb	0	; () banked
  3979  010FDE  6FA2               	movwf	command_at_hand@value& (0+255),b
  3980  010FE0  ECEF  F092         	call	_command_at_hand	;wreg free
  3981  010FE4  D000               	goto	l4506
  3982  010FE6                     l4506:
  3983                           
  3984                           ;My_header\My_terminal.h: 119: }
  3985                           ;My_header\My_terminal.h: 120: if (!my_strcmp(op1, "d")) {
  3986  010FE6  C0A5  F01F         	movff	command_at@op1,my_strcmp@str1
  3987  010FEA  C0A6  F020         	movff	command_at@op1+1,my_strcmp@str1+1
  3988  010FEE  0EF2               	movlw	low STR_13
  3989  010FF0  6E21               	movwf	my_strcmp@str2,c
  3990  010FF2  0EFF               	movlw	high STR_13
  3991  010FF4  6E22               	movwf	my_strcmp@str2+1,c
  3992  010FF6  ECCB  F090         	call	_my_strcmp	;wreg free
  3993  010FFA  0900               	iorlw	0
  3994  010FFC  A4D8               	btfss	status,2,c
  3995  010FFE  D023               	goto	l4512
  3996                           
  3997                           ;My_header\My_terminal.h: 121: command_at_hand(tx, &caltime_now.DD, 1, month_length(calt
      +                          ime_now.YY, caltime_now.MM), my_atoi(op2));
  3998  011000  C034  F023         	movff	_caltime_now+5,month_length@month
  3999  011004  5035               	movf	_caltime_now+6,w,c
  4000  011006  EC86  F08C         	call	_month_length
  4001  01100A  0100               	movlb	0	; () banked
  4002  01100C  6FA9               	movwf	_command_at$3146& (0+255),b
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;My_header\My_terminal.h: 121: command_at_hand(tx, &caltime_now.DD, 1, month_length(calt
      +                          ime_now.YY, caltime_now.MM), my_atoi(op2));
  4006  01100E  C0A3  F09C         	movff	command_at@tx,command_at_hand@tx
  4007  011012  C0A4  F09D         	movff	command_at@tx+1,command_at_hand@tx+1
  4008  011016  0E33               	movlw	low (_caltime_now+4)
  4009  011018  0100               	movlb	0	; () banked
  4010  01101A  6F9E               	movwf	command_at_hand@hand& (0+255),b
  4011  01101C  0E00               	movlw	high (_caltime_now+4)
  4012  01101E  0100               	movlb	0	; () banked
  4013  011020  6F9F               	movwf	(command_at_hand@hand+1)& (0+255),b
  4014  011022  0E01               	movlw	1
  4015  011024  0100               	movlb	0	; () banked
  4016  011026  6FA0               	movwf	command_at_hand@min& (0+255),b
  4017  011028  C0A9  F0A1         	movff	_command_at$3146,command_at_hand@max
  4018  01102C  C0A7  F066         	movff	command_at@op2,my_atoi@str
  4019  011030  C0A8  F067         	movff	command_at@op2+1,my_atoi@str+1
  4020  011034  EC2A  F090         	call	_my_atoi	;wreg free
  4021  011038  0100               	movlb	0	; () banked
  4022  01103A  5166               	movf	?_my_atoi& (0+255),w,b
  4023  01103C  0100               	movlb	0	; () banked
  4024  01103E  6FA2               	movwf	command_at_hand@value& (0+255),b
  4025  011040  ECEF  F092         	call	_command_at_hand	;wreg free
  4026  011044  D000               	goto	l4512
  4027  011046                     l4512:
  4028                           
  4029                           ;My_header\My_terminal.h: 122: }
  4030                           ;My_header\My_terminal.h: 123: if (!my_strcmp(op1, "h")) {
  4031  011046  C0A5  F01F         	movff	command_at@op1,my_strcmp@str1
  4032  01104A  C0A6  F020         	movff	command_at@op1+1,my_strcmp@str1+1
  4033  01104E  0EF6               	movlw	low STR_14
  4034  011050  6E21               	movwf	my_strcmp@str2,c
  4035  011052  0EFF               	movlw	high STR_14
  4036  011054  6E22               	movwf	my_strcmp@str2+1,c
  4037  011056  ECCB  F090         	call	_my_strcmp	;wreg free
  4038  01105A  0900               	iorlw	0
  4039  01105C  A4D8               	btfss	status,2,c
  4040  01105E  D01D               	goto	l4516
  4041                           
  4042                           ;My_header\My_terminal.h: 124: command_at_hand(tx, &caltime_now.hh, 0, 23, my_atoi(op2))
      +                          ;
  4043  011060  C0A3  F09C         	movff	command_at@tx,command_at_hand@tx
  4044  011064  C0A4  F09D         	movff	command_at@tx+1,command_at_hand@tx+1
  4045  011068  0E31               	movlw	low (_caltime_now+2)
  4046  01106A  0100               	movlb	0	; () banked
  4047  01106C  6F9E               	movwf	command_at_hand@hand& (0+255),b
  4048  01106E  0E00               	movlw	high (_caltime_now+2)
  4049  011070  0100               	movlb	0	; () banked
  4050  011072  6F9F               	movwf	(command_at_hand@hand+1)& (0+255),b
  4051  011074  0E00               	movlw	0
  4052  011076  0100               	movlb	0	; () banked
  4053  011078  6FA0               	movwf	command_at_hand@min& (0+255),b
  4054  01107A  0E17               	movlw	23
  4055  01107C  0100               	movlb	0	; () banked
  4056  01107E  6FA1               	movwf	command_at_hand@max& (0+255),b
  4057  011080  C0A7  F066         	movff	command_at@op2,my_atoi@str
  4058  011084  C0A8  F067         	movff	command_at@op2+1,my_atoi@str+1
  4059  011088  EC2A  F090         	call	_my_atoi	;wreg free
  4060  01108C  0100               	movlb	0	; () banked
  4061  01108E  5166               	movf	?_my_atoi& (0+255),w,b
  4062  011090  0100               	movlb	0	; () banked
  4063  011092  6FA2               	movwf	command_at_hand@value& (0+255),b
  4064  011094  ECEF  F092         	call	_command_at_hand	;wreg free
  4065  011098  D000               	goto	l4516
  4066  01109A                     l4516:
  4067                           
  4068                           ;My_header\My_terminal.h: 125: }
  4069                           ;My_header\My_terminal.h: 126: if (!my_strcmp(op1, "m")) {
  4070  01109A  C0A5  F01F         	movff	command_at@op1,my_strcmp@str1
  4071  01109E  C0A6  F020         	movff	command_at@op1+1,my_strcmp@str1+1
  4072  0110A2  0ECE               	movlw	low (STR_29+2)
  4073  0110A4  6E21               	movwf	my_strcmp@str2,c
  4074  0110A6  0EFF               	movlw	high (STR_29+2)
  4075  0110A8  6E22               	movwf	my_strcmp@str2+1,c
  4076  0110AA  ECCB  F090         	call	_my_strcmp	;wreg free
  4077  0110AE  0900               	iorlw	0
  4078  0110B0  A4D8               	btfss	status,2,c
  4079  0110B2  D01D               	goto	l4520
  4080                           
  4081                           ;My_header\My_terminal.h: 127: command_at_hand(tx, &caltime_now.mm, 0, 59, my_atoi(op2))
      +                          ;
  4082  0110B4  C0A3  F09C         	movff	command_at@tx,command_at_hand@tx
  4083  0110B8  C0A4  F09D         	movff	command_at@tx+1,command_at_hand@tx+1
  4084  0110BC  0E30               	movlw	low (_caltime_now+1)
  4085  0110BE  0100               	movlb	0	; () banked
  4086  0110C0  6F9E               	movwf	command_at_hand@hand& (0+255),b
  4087  0110C2  0E00               	movlw	high (_caltime_now+1)
  4088  0110C4  0100               	movlb	0	; () banked
  4089  0110C6  6F9F               	movwf	(command_at_hand@hand+1)& (0+255),b
  4090  0110C8  0E00               	movlw	0
  4091  0110CA  0100               	movlb	0	; () banked
  4092  0110CC  6FA0               	movwf	command_at_hand@min& (0+255),b
  4093  0110CE  0E3B               	movlw	59
  4094  0110D0  0100               	movlb	0	; () banked
  4095  0110D2  6FA1               	movwf	command_at_hand@max& (0+255),b
  4096  0110D4  C0A7  F066         	movff	command_at@op2,my_atoi@str
  4097  0110D8  C0A8  F067         	movff	command_at@op2+1,my_atoi@str+1
  4098  0110DC  EC2A  F090         	call	_my_atoi	;wreg free
  4099  0110E0  0100               	movlb	0	; () banked
  4100  0110E2  5166               	movf	?_my_atoi& (0+255),w,b
  4101  0110E4  0100               	movlb	0	; () banked
  4102  0110E6  6FA2               	movwf	command_at_hand@value& (0+255),b
  4103  0110E8  ECEF  F092         	call	_command_at_hand	;wreg free
  4104  0110EC  D000               	goto	l4520
  4105  0110EE                     l4520:
  4106                           
  4107                           ;My_header\My_terminal.h: 128: }
  4108                           ;My_header\My_terminal.h: 129: if (!my_strcmp(op1, "s")) {
  4109  0110EE  C0A5  F01F         	movff	command_at@op1,my_strcmp@str1
  4110  0110F2  C0A6  F020         	movff	command_at@op1+1,my_strcmp@str1+1
  4111  0110F6  0EF8               	movlw	low STR_16
  4112  0110F8  6E21               	movwf	my_strcmp@str2,c
  4113  0110FA  0EFF               	movlw	high STR_16
  4114  0110FC  6E22               	movwf	my_strcmp@str2+1,c
  4115  0110FE  ECCB  F090         	call	_my_strcmp	;wreg free
  4116  011102  0900               	iorlw	0
  4117  011104  A4D8               	btfss	status,2,c
  4118  011106  0012               	return	
  4119                           
  4120                           ;My_header\My_terminal.h: 130: command_at_hand(tx, &caltime_now.ss, 0, 59, my_atoi(op2))
      +                          ;
  4121  011108  C0A3  F09C         	movff	command_at@tx,command_at_hand@tx
  4122  01110C  C0A4  F09D         	movff	command_at@tx+1,command_at_hand@tx+1
  4123  011110  0E2F               	movlw	low _caltime_now
  4124  011112  0100               	movlb	0	; () banked
  4125  011114  6F9E               	movwf	command_at_hand@hand& (0+255),b
  4126  011116  0E00               	movlw	high _caltime_now
  4127  011118  0100               	movlb	0	; () banked
  4128  01111A  6F9F               	movwf	(command_at_hand@hand+1)& (0+255),b
  4129  01111C  0E00               	movlw	0
  4130  01111E  0100               	movlb	0	; () banked
  4131  011120  6FA0               	movwf	command_at_hand@min& (0+255),b
  4132  011122  0E3B               	movlw	59
  4133  011124  0100               	movlb	0	; () banked
  4134  011126  6FA1               	movwf	command_at_hand@max& (0+255),b
  4135  011128  C0A7  F066         	movff	command_at@op2,my_atoi@str
  4136  01112C  C0A8  F067         	movff	command_at@op2+1,my_atoi@str+1
  4137  011130  EC2A  F090         	call	_my_atoi	;wreg free
  4138  011134  0100               	movlb	0	; () banked
  4139  011136  5166               	movf	?_my_atoi& (0+255),w,b
  4140  011138  0100               	movlb	0	; () banked
  4141  01113A  6FA2               	movwf	command_at_hand@value& (0+255),b
  4142  01113C  ECEF  F092         	call	_command_at_hand	;wreg free
  4143  011140  0012               	return	
  4144  011142  0012               	return		;funcret
  4145  011144                     __end_of_command_at:
  4146                           	opt stack 0
  4147                           tblptru	equ	0xFF8
  4148                           tblptrh	equ	0xFF7
  4149                           tblptrl	equ	0xFF6
  4150                           tablat	equ	0xFF5
  4151                           prodh	equ	0xFF4
  4152                           prodl	equ	0xFF3
  4153                           intcon	equ	0xFF2
  4154                           postinc0	equ	0xFEE
  4155                           wreg	equ	0xFE8
  4156                           postinc1	equ	0xFE6
  4157                           postdec1	equ	0xFE5
  4158                           fsr1h	equ	0xFE2
  4159                           fsr1l	equ	0xFE1
  4160                           indf2	equ	0xFDF
  4161                           postinc2	equ	0xFDE
  4162                           postdec2	equ	0xFDD
  4163                           fsr2h	equ	0xFDA
  4164                           fsr2l	equ	0xFD9
  4165                           status	equ	0xFD8
  4166                           
  4167 ;; *************** function _my_strcmp *****************
  4168 ;; Defined at:
  4169 ;;		line 53 in file "../My_header\My_stdlib.h"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;  str1            2   30[COMRAM] PTR const unsigned char 
  4172 ;;		 -> my_terminal_loop@op1(20), my_terminal_loop@op0(20), 
  4173 ;;  str2            2   32[COMRAM] PTR const unsigned char 
  4174 ;;		 -> STR_39(6), STR_38(2), STR_37(2), STR_36(2), 
  4175 ;;		 -> STR_35(2), STR_34(2), STR_33(2), STR_32(2), 
  4176 ;;		 -> STR_31(2), STR_30(4), STR_29(4), STR_28(4), 
  4177 ;;		 -> STR_27(4), STR_26(5), STR_25(4), STR_24(2), 
  4178 ;;		 -> STR_23(11), STR_22(12), STR_21(3), STR_20(9), 
  4179 ;;		 -> STR_18(2), STR_17(5), STR_16(2), STR_15(2), 
  4180 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;		None
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1    wreg      char 
  4185 ;; Registers used:
  4186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4192 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4194 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4195 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4196 ;;Total ram usage:        5 bytes
  4197 ;; Hardware stack levels used:    1
  4198 ;; Hardware stack levels required when called:    4
  4199 ;; This function calls:
  4200 ;;		Nothing
  4201 ;; This function is called by:
  4202 ;;		_command_at
  4203 ;;		_command_operation
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           	psect	text9
  4208  012196                     __ptext9:
  4209                           	opt stack 0
  4210  012196                     _my_strcmp:
  4211                           	opt stack 24
  4212                           
  4213                           ;My_header\My_stdlib.h: 54: while (*str1 && *str2) {
  4214                           
  4215                           ;incstack = 0
  4216  012196  D027               	goto	l4468
  4217  012198                     l4460:
  4218                           
  4219                           ;My_header\My_stdlib.h: 55: if (*str1 != *str2)return (*str1 - *str2);
  4220  012198  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  4221  01219C  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  4222  0121A0  50DF               	movf	indf2,w,c
  4223  0121A2  6E23               	movwf	??_my_strcmp& (0+255),c
  4224  0121A4  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  4225  0121A8  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  4226  0121AC                     	if	0	;tblptru may be non-zero
  4227  0121AC                     	endif
  4228  0121AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4229  0121AC  0E00               	movlw	low (__mediumconst shr (0+16))
  4230  0121AE  6EF8               	movwf	tblptru,c
  4231  0121B0                     	endif
  4232  0121B0  0008               	tblrd		*
  4233  0121B2  50F5               	movf	tablat,w,c
  4234  0121B4  1823               	xorwf	??_my_strcmp,w,c
  4235  0121B6  B4D8               	btfsc	status,2,c
  4236  0121B8  D011               	goto	l4466
  4237  0121BA  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  4238  0121BE  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  4239  0121C2  50DF               	movf	indf2,w,c
  4240  0121C4  6E23               	movwf	??_my_strcmp& (0+255),c
  4241  0121C6  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  4242  0121CA  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  4243  0121CE                     	if	0	;tblptru may be non-zero
  4244  0121CE                     	endif
  4245  0121CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4246  0121CE  0E00               	movlw	low (__mediumconst shr (0+16))
  4247  0121D0  6EF8               	movwf	tblptru,c
  4248  0121D2                     	endif
  4249  0121D2  0008               	tblrd		*
  4250  0121D4  50F5               	movf	tablat,w,c
  4251  0121D6  0800               	sublw	0
  4252  0121D8  2423               	addwf	??_my_strcmp,w,c
  4253  0121DA  0012               	return	
  4254  0121DC                     l4466:
  4255                           
  4256                           ;My_header\My_stdlib.h: 56: str1++;
  4257  0121DC  4A1F               	infsnz	my_strcmp@str1,f,c
  4258  0121DE  2A20               	incf	my_strcmp@str1+1,f,c
  4259                           
  4260                           ;My_header\My_stdlib.h: 57: str2++;
  4261  0121E0  4A21               	infsnz	my_strcmp@str2,f,c
  4262  0121E2  2A22               	incf	my_strcmp@str2+1,f,c
  4263  0121E4  D000               	goto	l4468
  4264  0121E6                     l4468:
  4265  0121E6  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  4266  0121EA  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  4267  0121EE  50DF               	movf	indf2,w,c
  4268  0121F0  B4D8               	btfsc	status,2,c
  4269  0121F2  D00D               	goto	l4472
  4270  0121F4  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  4271  0121F8  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  4272  0121FC                     	if	0	;tblptru may be non-zero
  4273  0121FC                     	endif
  4274  0121FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4275  0121FC  0E00               	movlw	low (__mediumconst shr (0+16))
  4276  0121FE  6EF8               	movwf	tblptru,c
  4277  012200                     	endif
  4278  012200  0008               	tblrd		*
  4279  012202  50F5               	movf	tablat,w,c
  4280  012204  0900               	iorlw	0
  4281  012206  B4D8               	btfsc	status,2,c
  4282  012208  D002               	goto	l4472
  4283  01220A  D7C6               	goto	l4460
  4284  01220C  D000               	goto	l4472
  4285  01220E                     l4472:
  4286                           
  4287                           ;My_header\My_stdlib.h: 58: }
  4288                           ;My_header\My_stdlib.h: 59: return (*str1 - *str2);
  4289  01220E  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  4290  012212  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  4291  012216  50DF               	movf	indf2,w,c
  4292  012218  6E23               	movwf	??_my_strcmp& (0+255),c
  4293  01221A  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  4294  01221E  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  4295  012222                     	if	0	;tblptru may be non-zero
  4296  012222                     	endif
  4297  012222                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4298  012222  0E00               	movlw	low (__mediumconst shr (0+16))
  4299  012224  6EF8               	movwf	tblptru,c
  4300  012226                     	endif
  4301  012226  0008               	tblrd		*
  4302  012228  50F5               	movf	tablat,w,c
  4303  01222A  0800               	sublw	0
  4304  01222C  2423               	addwf	??_my_strcmp,w,c
  4305  01222E  0012               	return	
  4306  012230  0012               	return		;funcret
  4307  012232                     __end_of_my_strcmp:
  4308                           	opt stack 0
  4309                           tblptru	equ	0xFF8
  4310                           tblptrh	equ	0xFF7
  4311                           tblptrl	equ	0xFF6
  4312                           tablat	equ	0xFF5
  4313                           prodh	equ	0xFF4
  4314                           prodl	equ	0xFF3
  4315                           intcon	equ	0xFF2
  4316                           postinc0	equ	0xFEE
  4317                           wreg	equ	0xFE8
  4318                           postinc1	equ	0xFE6
  4319                           postdec1	equ	0xFE5
  4320                           fsr1h	equ	0xFE2
  4321                           fsr1l	equ	0xFE1
  4322                           indf2	equ	0xFDF
  4323                           postinc2	equ	0xFDE
  4324                           postdec2	equ	0xFDD
  4325                           fsr2h	equ	0xFDA
  4326                           fsr2l	equ	0xFD9
  4327                           status	equ	0xFD8
  4328                           
  4329 ;; *************** function _my_atoi *****************
  4330 ;; Defined at:
  4331 ;;		line 41 in file "../My_header\My_stdlib.h"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  str             2    6[BANK0 ] PTR const unsigned char 
  4334 ;;		 -> my_terminal_loop@op2(20), 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  ret             2   12[BANK0 ] unsigned int 
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  2    6[BANK0 ] unsigned int 
  4339 ;; Registers used:
  4340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4346 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4347 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4348 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4349 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4350 ;;Total ram usage:        8 bytes
  4351 ;; Hardware stack levels used:    1
  4352 ;; Hardware stack levels required when called:    5
  4353 ;; This function calls:
  4354 ;;		___wmul
  4355 ;; This function is called by:
  4356 ;;		_command_at
  4357 ;;		_command_operation
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           
  4361                           	psect	text10
  4362  012054                     __ptext10:
  4363                           	opt stack 0
  4364  012054                     _my_atoi:
  4365                           	opt stack 23
  4366                           
  4367                           ;My_header\My_stdlib.h: 42: uint16_t ret = 0;
  4368                           
  4369                           ;incstack = 0
  4370  012054  0E00               	movlw	0
  4371  012056  0100               	movlb	0	; () banked
  4372  012058  6F6D               	movwf	(my_atoi@ret+1)& (0+255),b
  4373  01205A  0E00               	movlw	0
  4374  01205C  6F6C               	movwf	my_atoi@ret& (0+255),b
  4375                           
  4376                           ;My_header\My_stdlib.h: 43: while (*str) {
  4377  01205E  D040               	goto	l4456
  4378  012060                     l4446:
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;My_header\My_stdlib.h: 44: if (*str >= '0' && *str <= '9') {
  4382  012060  C066  FFD9         	movff	my_atoi@str,fsr2l
  4383  012064  C067  FFDA         	movff	my_atoi@str+1,fsr2h
  4384  012068  0E2F               	movlw	47
  4385  01206A  64DF               	cpfsgt	indf2,c
  4386  01206C  D035               	goto	l4454
  4387                           
  4388                           ; BSR set to: 0
  4389  01206E  C066  FFD9         	movff	my_atoi@str,fsr2l
  4390  012072  C067  FFDA         	movff	my_atoi@str+1,fsr2h
  4391  012076  0E3A               	movlw	58
  4392  012078  60DF               	cpfslt	indf2,c
  4393  01207A  D02E               	goto	l4454
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;My_header\My_stdlib.h: 45: ret *= 10;
  4397  01207C  C06C  F060         	movff	my_atoi@ret,___wmul@multiplier
  4398  012080  C06D  F061         	movff	my_atoi@ret+1,___wmul@multiplier+1
  4399  012084  0E00               	movlw	0
  4400  012086  0100               	movlb	0	; () banked
  4401  012088  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4402  01208A  0E0A               	movlw	10
  4403  01208C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4404  01208E  EC77  F094         	call	___wmul	;wreg free
  4405  012092  C060  F06C         	movff	?___wmul,my_atoi@ret
  4406  012096  C061  F06D         	movff	?___wmul+1,my_atoi@ret+1
  4407                           
  4408                           ;My_header\My_stdlib.h: 46: ret += *str - '0';
  4409  01209A  0ED0               	movlw	208
  4410  01209C  0100               	movlb	0	; () banked
  4411  01209E  6F68               	movwf	??_my_atoi& (0+255),b
  4412  0120A0  0EFF               	movlw	255
  4413  0120A2  0100               	movlb	0	; () banked
  4414  0120A4  6F69               	movwf	(??_my_atoi+1)& (0+255),b
  4415  0120A6  C066  FFD9         	movff	my_atoi@str,fsr2l
  4416  0120AA  C067  FFDA         	movff	my_atoi@str+1,fsr2h
  4417  0120AE  50DF               	movf	indf2,w,c
  4418  0120B0  0100               	movlb	0	; () banked
  4419  0120B2  6F6A               	movwf	(??_my_atoi+2)& (0+255),b
  4420  0120B4  6B6B               	clrf	(??_my_atoi+3)& (0+255),b
  4421  0120B6  0100               	movlb	0	; () banked
  4422  0120B8  5168               	movf	??_my_atoi& (0+255),w,b
  4423  0120BA  0100               	movlb	0	; () banked
  4424  0120BC  276A               	addwf	(??_my_atoi+2)& (0+255),f,b
  4425  0120BE  0100               	movlb	0	; () banked
  4426  0120C0  5169               	movf	(??_my_atoi+1)& (0+255),w,b
  4427  0120C2  0100               	movlb	0	; () banked
  4428  0120C4  236B               	addwfc	(??_my_atoi+3)& (0+255),f,b
  4429  0120C6  0100               	movlb	0	; () banked
  4430  0120C8  516A               	movf	(??_my_atoi+2)& (0+255),w,b
  4431  0120CA  0100               	movlb	0	; () banked
  4432  0120CC  276C               	addwf	my_atoi@ret& (0+255),f,b
  4433  0120CE  0100               	movlb	0	; () banked
  4434  0120D0  516B               	movf	(??_my_atoi+3)& (0+255),w,b
  4435  0120D2  0100               	movlb	0	; () banked
  4436  0120D4  236D               	addwfc	(my_atoi@ret+1)& (0+255),f,b
  4437  0120D6  D000               	goto	l4454
  4438  0120D8                     l4454:
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;My_header\My_stdlib.h: 47: }
  4442                           ;My_header\My_stdlib.h: 48: str++;
  4443  0120D8  0100               	movlb	0	; () banked
  4444  0120DA  4B66               	infsnz	my_atoi@str& (0+255),f,b
  4445  0120DC  2B67               	incf	(my_atoi@str+1)& (0+255),f,b
  4446  0120DE  D000               	goto	l4456
  4447  0120E0                     l4456:
  4448                           
  4449                           ; BSR set to: 0
  4450  0120E0  C066  FFD9         	movff	my_atoi@str,fsr2l
  4451  0120E4  C067  FFDA         	movff	my_atoi@str+1,fsr2h
  4452  0120E8  50DF               	movf	indf2,w,c
  4453  0120EA  A4D8               	btfss	status,2,c
  4454  0120EC  D7B9               	goto	l4446
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;My_header\My_stdlib.h: 49: }
  4458                           ;My_header\My_stdlib.h: 50: return ret;
  4459  0120EE  C06C  F066         	movff	my_atoi@ret,?_my_atoi
  4460  0120F2  C06D  F067         	movff	my_atoi@ret+1,?_my_atoi+1
  4461                           
  4462                           ; BSR set to: 0
  4463  0120F6  0012               	return		;funcret
  4464  0120F8                     __end_of_my_atoi:
  4465                           	opt stack 0
  4466                           tblptru	equ	0xFF8
  4467                           tblptrh	equ	0xFF7
  4468                           tblptrl	equ	0xFF6
  4469                           tablat	equ	0xFF5
  4470                           prodh	equ	0xFF4
  4471                           prodl	equ	0xFF3
  4472                           intcon	equ	0xFF2
  4473                           postinc0	equ	0xFEE
  4474                           wreg	equ	0xFE8
  4475                           postinc1	equ	0xFE6
  4476                           postdec1	equ	0xFE5
  4477                           fsr1h	equ	0xFE2
  4478                           fsr1l	equ	0xFE1
  4479                           indf2	equ	0xFDF
  4480                           postinc2	equ	0xFDE
  4481                           postdec2	equ	0xFDD
  4482                           fsr2h	equ	0xFDA
  4483                           fsr2l	equ	0xFD9
  4484                           status	equ	0xFD8
  4485                           
  4486 ;; *************** function _command_at_hand *****************
  4487 ;; Defined at:
  4488 ;;		line 102 in file "../My_header\My_terminal.h"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;  tx              2   60[BANK0 ] PTR struct ringbuf
  4491 ;;		 -> rx_buf(8), 
  4492 ;;  hand            2   62[BANK0 ] PTR unsigned char 
  4493 ;;		 -> caltime_now(7), 
  4494 ;;  min             1   64[BANK0 ] unsigned char 
  4495 ;;  max             1   65[BANK0 ] unsigned char 
  4496 ;;  value           1   66[BANK0 ] unsigned char 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;		None
  4499 ;; Return value:  Size  Location     Type
  4500 ;;		None               void
  4501 ;; Registers used:
  4502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4508 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4511 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4512 ;;Total ram usage:        7 bytes
  4513 ;; Hardware stack levels used:    1
  4514 ;; Hardware stack levels required when called:    9
  4515 ;; This function calls:
  4516 ;;		_RTCC_from_caltime
  4517 ;;		_print_time
  4518 ;;		_ringbuf_put_str
  4519 ;; This function is called by:
  4520 ;;		_command_at
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           	psect	text11
  4525  0125DE                     __ptext11:
  4526                           	opt stack 0
  4527  0125DE                     _command_at_hand:
  4528                           	opt stack 18
  4529                           
  4530                           ;My_header\My_terminal.h: 103: if (value >= min && value <= max) {
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;incstack = 0
  4534  0125DE  0100               	movlb	0	; () banked
  4535  0125E0  51A0               	movf	command_at_hand@min& (0+255),w,b
  4536  0125E2  0100               	movlb	0	; () banked
  4537  0125E4  5DA2               	subwf	command_at_hand@value& (0+255),w,b
  4538  0125E6  A0D8               	btfss	status,0,c
  4539  0125E8  D027               	goto	l4488
  4540                           
  4541                           ; BSR set to: 0
  4542  0125EA  0100               	movlb	0	; () banked
  4543  0125EC  51A2               	movf	command_at_hand@value& (0+255),w,b
  4544  0125EE  0100               	movlb	0	; () banked
  4545  0125F0  5DA1               	subwf	command_at_hand@max& (0+255),w,b
  4546  0125F2  A0D8               	btfss	status,0,c
  4547  0125F4  D021               	goto	l4488
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;My_header\My_terminal.h: 104: *hand = value;
  4551  0125F6  C09E  FFD9         	movff	command_at_hand@hand,fsr2l
  4552  0125FA  C09F  FFDA         	movff	command_at_hand@hand+1,fsr2h
  4553  0125FE  C0A2  FFDF         	movff	command_at_hand@value,indf2
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;My_header\My_terminal.h: 105: RTCC_from_caltime(&caltime_now, &epoch_now);
  4557  012602  0E2F               	movlw	low _caltime_now
  4558  012604  0100               	movlb	0	; () banked
  4559  012606  6F98               	movwf	RTCC_from_caltime@ct& (0+255),b
  4560  012608  0E00               	movlw	high _caltime_now
  4561  01260A  0100               	movlb	0	; () banked
  4562  01260C  6F99               	movwf	(RTCC_from_caltime@ct+1)& (0+255),b
  4563  01260E  0E36               	movlw	low _epoch_now
  4564  012610  0100               	movlb	0	; () banked
  4565  012612  6F9A               	movwf	RTCC_from_caltime@ep& (0+255),b
  4566  012614  0E00               	movlw	high _epoch_now
  4567  012616  0100               	movlb	0	; () banked
  4568  012618  6F9B               	movwf	(RTCC_from_caltime@ep+1)& (0+255),b
  4569  01261A  EC93  F094         	call	_RTCC_from_caltime	;wreg free
  4570                           
  4571                           ;My_header\My_terminal.h: 106: time_change_flag = 1;
  4572  01261E  0E01               	movlw	1
  4573  012620  0100               	movlb	0	; () banked
  4574  012622  6FB6               	movwf	_time_change_flag& (0+255),b
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;My_header\My_terminal.h: 107: print_time(tx, 1);
  4578  012624  C09C  F086         	movff	command_at_hand@tx,print_time@tx
  4579  012628  C09D  F087         	movff	command_at_hand@tx+1,print_time@tx+1
  4580  01262C  0E01               	movlw	1
  4581  01262E  0100               	movlb	0	; () banked
  4582  012630  6F88               	movwf	print_time@carrige_return& (0+255),b
  4583  012632  EC9A  F089         	call	_print_time	;wreg free
  4584                           
  4585                           ;My_header\My_terminal.h: 108: } else {
  4586  012636  0012               	return	
  4587  012638                     l4488:
  4588                           
  4589                           ;My_header\My_terminal.h: 109: ringbuf_put_str(tx, "\terror\n");
  4590  012638  C09C  F06A         	movff	command_at_hand@tx,ringbuf_put_str@rb
  4591  01263C  C09D  F06B         	movff	command_at_hand@tx+1,ringbuf_put_str@rb+1
  4592  012640  0EA4               	movlw	low STR_10
  4593  012642  0100               	movlb	0	; () banked
  4594  012644  6F6C               	movwf	ringbuf_put_str@str& (0+255),b
  4595  012646  0EFF               	movlw	high STR_10
  4596  012648  0100               	movlb	0	; () banked
  4597  01264A  6F6D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4598  01264C  EC5C  F093         	call	_ringbuf_put_str	;wreg free
  4599  012650  0012               	return	
  4600  012652  0012               	return		;funcret
  4601  012654                     __end_of_command_at_hand:
  4602                           	opt stack 0
  4603                           tblptru	equ	0xFF8
  4604                           tblptrh	equ	0xFF7
  4605                           tblptrl	equ	0xFF6
  4606                           tablat	equ	0xFF5
  4607                           prodh	equ	0xFF4
  4608                           prodl	equ	0xFF3
  4609                           intcon	equ	0xFF2
  4610                           postinc0	equ	0xFEE
  4611                           wreg	equ	0xFE8
  4612                           postinc1	equ	0xFE6
  4613                           postdec1	equ	0xFE5
  4614                           fsr1h	equ	0xFE2
  4615                           fsr1l	equ	0xFE1
  4616                           indf2	equ	0xFDF
  4617                           postinc2	equ	0xFDE
  4618                           postdec2	equ	0xFDD
  4619                           fsr2h	equ	0xFDA
  4620                           fsr2l	equ	0xFD9
  4621                           status	equ	0xFD8
  4622                           
  4623 ;; *************** function _print_time *****************
  4624 ;; Defined at:
  4625 ;;		line 81 in file "../My_header\My_terminal.h"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;  tx              2   38[BANK0 ] PTR struct ringbuf
  4628 ;;		 -> rx_buf(8), 
  4629 ;;  carrige_retu    1   40[BANK0 ] unsigned char 
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;		None
  4632 ;; Return value:  Size  Location     Type
  4633 ;;		None               void
  4634 ;; Registers used:
  4635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4641 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4644 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4645 ;;Total ram usage:        3 bytes
  4646 ;; Hardware stack levels used:    1
  4647 ;; Hardware stack levels required when called:    8
  4648 ;; This function calls:
  4649 ;;		_RTCC_from_RTCC
  4650 ;;		_print_time_dec
  4651 ;;		_ringbuf_put
  4652 ;;		_ringbuf_put_str
  4653 ;; This function is called by:
  4654 ;;		_command_at_hand
  4655 ;;		_command_operation
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text12
  4660  011334                     __ptext12:
  4661                           	opt stack 0
  4662  011334                     _print_time:
  4663                           	opt stack 20
  4664                           
  4665                           ;My_header\My_terminal.h: 82: RTCC_from_RTCC(&caltime_now, &epoch_now);
  4666                           
  4667                           ;incstack = 0
  4668  011334  0E2F               	movlw	low _caltime_now
  4669  011336  0100               	movlb	0	; () banked
  4670  011338  6F82               	movwf	RTCC_from_RTCC@ct& (0+255),b
  4671  01133A  0E00               	movlw	high _caltime_now
  4672  01133C  0100               	movlb	0	; () banked
  4673  01133E  6F83               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  4674  011340  0E36               	movlw	low _epoch_now
  4675  011342  0100               	movlb	0	; () banked
  4676  011344  6F84               	movwf	RTCC_from_RTCC@ep& (0+255),b
  4677  011346  0E00               	movlw	high _epoch_now
  4678  011348  0100               	movlb	0	; () banked
  4679  01134A  6F85               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  4680  01134C  EC14  F095         	call	_RTCC_from_RTCC	;wreg free
  4681                           
  4682                           ;My_header\My_terminal.h: 83: if (carrige_return)ringbuf_put_str(tx, "\t");
  4683  011350  0100               	movlb	0	; () banked
  4684  011352  5188               	movf	print_time@carrige_return& (0+255),w,b
  4685  011354  0100               	movlb	0	; () banked
  4686  011356  B4D8               	btfsc	status,2,c
  4687  011358  D00C               	goto	l525
  4688                           
  4689                           ; BSR set to: 0
  4690  01135A  C086  F06A         	movff	print_time@tx,ringbuf_put_str@rb
  4691  01135E  C087  F06B         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  4692  011362  0EE0               	movlw	low STR_4
  4693  011364  0100               	movlb	0	; () banked
  4694  011366  6F6C               	movwf	ringbuf_put_str@str& (0+255),b
  4695  011368  0EFF               	movlw	high STR_4
  4696  01136A  0100               	movlb	0	; () banked
  4697  01136C  6F6D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4698  01136E  EC5C  F093         	call	_ringbuf_put_str	;wreg free
  4699  011372                     l525:
  4700                           
  4701                           ;My_header\My_terminal.h: 84: print_time_dec(tx, 20, edit_flag.flag.YY);
  4702  011372  C086  F075         	movff	print_time@tx,print_time_dec@tx
  4703  011376  C087  F076         	movff	print_time@tx+1,print_time_dec@tx+1
  4704  01137A  0E14               	movlw	20
  4705  01137C  0100               	movlb	0	; () banked
  4706  01137E  6F77               	movwf	print_time_dec@dec& (0+255),b
  4707  011380  0E00               	movlw	0
  4708  011382  BA2A               	btfsc	_edit_flag,5,c
  4709  011384  0E01               	movlw	1
  4710  011386  0100               	movlb	0	; () banked
  4711  011388  6F78               	movwf	print_time_dec@edit& (0+255),b
  4712  01138A  EC2A  F093         	call	_print_time_dec	;wreg free
  4713                           
  4714                           ;My_header\My_terminal.h: 85: print_time_dec(tx, caltime_now.YY, edit_flag.flag.YY);
  4715  01138E  C086  F075         	movff	print_time@tx,print_time_dec@tx
  4716  011392  C087  F076         	movff	print_time@tx+1,print_time_dec@tx+1
  4717  011396  C035  F077         	movff	_caltime_now+6,print_time_dec@dec
  4718  01139A  0E00               	movlw	0
  4719  01139C  BA2A               	btfsc	_edit_flag,5,c
  4720  01139E  0E01               	movlw	1
  4721  0113A0  0100               	movlb	0	; () banked
  4722  0113A2  6F78               	movwf	print_time_dec@edit& (0+255),b
  4723  0113A4  EC2A  F093         	call	_print_time_dec	;wreg free
  4724                           
  4725                           ;My_header\My_terminal.h: 86: ringbuf_put_str(tx, "/");
  4726  0113A8  C086  F06A         	movff	print_time@tx,ringbuf_put_str@rb
  4727  0113AC  C087  F06B         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  4728  0113B0  0EE4               	movlw	low STR_5
  4729  0113B2  0100               	movlb	0	; () banked
  4730  0113B4  6F6C               	movwf	ringbuf_put_str@str& (0+255),b
  4731  0113B6  0EFF               	movlw	high STR_5
  4732  0113B8  0100               	movlb	0	; () banked
  4733  0113BA  6F6D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4734  0113BC  EC5C  F093         	call	_ringbuf_put_str	;wreg free
  4735                           
  4736                           ;My_header\My_terminal.h: 87: print_time_dec(tx, caltime_now.MM, edit_flag.flag.MM);
  4737  0113C0  C086  F075         	movff	print_time@tx,print_time_dec@tx
  4738  0113C4  C087  F076         	movff	print_time@tx+1,print_time_dec@tx+1
  4739  0113C8  C034  F077         	movff	_caltime_now+5,print_time_dec@dec
  4740  0113CC  0E00               	movlw	0
  4741  0113CE  B82A               	btfsc	_edit_flag,4,c
  4742  0113D0  0E01               	movlw	1
  4743  0113D2  0100               	movlb	0	; () banked
  4744  0113D4  6F78               	movwf	print_time_dec@edit& (0+255),b
  4745  0113D6  EC2A  F093         	call	_print_time_dec	;wreg free
  4746                           
  4747                           ;My_header\My_terminal.h: 88: ringbuf_put_str(tx, "/");
  4748  0113DA  C086  F06A         	movff	print_time@tx,ringbuf_put_str@rb
  4749  0113DE  C087  F06B         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  4750  0113E2  0EE4               	movlw	low STR_5
  4751  0113E4  0100               	movlb	0	; () banked
  4752  0113E6  6F6C               	movwf	ringbuf_put_str@str& (0+255),b
  4753  0113E8  0EFF               	movlw	high STR_5
  4754  0113EA  0100               	movlb	0	; () banked
  4755  0113EC  6F6D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4756  0113EE  EC5C  F093         	call	_ringbuf_put_str	;wreg free
  4757                           
  4758                           ;My_header\My_terminal.h: 89: print_time_dec(tx, caltime_now.DD, edit_flag.flag.DD);
  4759  0113F2  C086  F075         	movff	print_time@tx,print_time_dec@tx
  4760  0113F6  C087  F076         	movff	print_time@tx+1,print_time_dec@tx+1
  4761  0113FA  C033  F077         	movff	_caltime_now+4,print_time_dec@dec
  4762  0113FE  0E00               	movlw	0
  4763  011400  B62A               	btfsc	_edit_flag,3,c
  4764  011402  0E01               	movlw	1
  4765  011404  0100               	movlb	0	; () banked
  4766  011406  6F78               	movwf	print_time_dec@edit& (0+255),b
  4767  011408  EC2A  F093         	call	_print_time_dec	;wreg free
  4768                           
  4769                           ;My_header\My_terminal.h: 90: ringbuf_put_str(tx, " (");
  4770  01140C  C086  F06A         	movff	print_time@tx,ringbuf_put_str@rb
  4771  011410  C087  F06B         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  4772  011414  0EDA               	movlw	low STR_7
  4773  011416  0100               	movlb	0	; () banked
  4774  011418  6F6C               	movwf	ringbuf_put_str@str& (0+255),b
  4775  01141A  0EFF               	movlw	high STR_7
  4776  01141C  0100               	movlb	0	; () banked
  4777  01141E  6F6D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4778  011420  EC5C  F093         	call	_ringbuf_put_str	;wreg free
  4779                           
  4780                           ;My_header\My_terminal.h: 91: ringbuf_put_str(tx, weekday_3char[caltime_now.EE]);
  4781  011424  C086  F06A         	movff	print_time@tx,ringbuf_put_str@rb
  4782  011428  C087  F06B         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  4783  01142C  5032               	movf	_caltime_now+3,w,c
  4784  01142E  0D04               	mullw	4
  4785  011430  0E2D               	movlw	low _weekday_3char
  4786  011432  24F3               	addwf	prodl,w,c
  4787  011434  0100               	movlb	0	; () banked
  4788  011436  6F6C               	movwf	ringbuf_put_str@str& (0+255),b
  4789  011438  0EFE               	movlw	high _weekday_3char
  4790  01143A  20F4               	addwfc	prodh,w,c
  4791  01143C  0100               	movlb	0	; () banked
  4792  01143E  6F6D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4793  011440  EC5C  F093         	call	_ringbuf_put_str	;wreg free
  4794                           
  4795                           ;My_header\My_terminal.h: 92: ringbuf_put_str(tx, ") ");
  4796  011444  C086  F06A         	movff	print_time@tx,ringbuf_put_str@rb
  4797  011448  C087  F06B         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  4798  01144C  0ED7               	movlw	low STR_8
  4799  01144E  0100               	movlb	0	; () banked
  4800  011450  6F6C               	movwf	ringbuf_put_str@str& (0+255),b
  4801  011452  0EFF               	movlw	high STR_8
  4802  011454  0100               	movlb	0	; () banked
  4803  011456  6F6D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4804  011458  EC5C  F093         	call	_ringbuf_put_str	;wreg free
  4805                           
  4806                           ;My_header\My_terminal.h: 93: print_time_dec(tx, caltime_now.hh, edit_flag.flag.hh);
  4807  01145C  C086  F075         	movff	print_time@tx,print_time_dec@tx
  4808  011460  C087  F076         	movff	print_time@tx+1,print_time_dec@tx+1
  4809  011464  C031  F077         	movff	_caltime_now+2,print_time_dec@dec
  4810  011468  0E00               	movlw	0
  4811  01146A  B42A               	btfsc	_edit_flag,2,c
  4812  01146C  0E01               	movlw	1
  4813  01146E  0100               	movlb	0	; () banked
  4814  011470  6F78               	movwf	print_time_dec@edit& (0+255),b
  4815  011472  EC2A  F093         	call	_print_time_dec	;wreg free
  4816                           
  4817                           ;My_header\My_terminal.h: 94: if (colon)ringbuf_put(tx, ':');
  4818  011476  5028               	movf	_colon,w,c
  4819  011478  B4D8               	btfsc	status,2,c
  4820  01147A  D009               	goto	l4426
  4821  01147C  C086  F021         	movff	print_time@tx,ringbuf_put@rb
  4822  011480  C087  F022         	movff	print_time@tx+1,ringbuf_put@rb+1
  4823  011484  0E3A               	movlw	58
  4824  011486  6E23               	movwf	ringbuf_put@asciicode,c
  4825  011488  ECEB  F08C         	call	_ringbuf_put	;wreg free
  4826  01148C  D009               	goto	l4428
  4827  01148E                     l4426:
  4828                           
  4829                           ;My_header\My_terminal.h: 95: else ringbuf_put(tx, ' ');
  4830  01148E  C086  F021         	movff	print_time@tx,ringbuf_put@rb
  4831  011492  C087  F022         	movff	print_time@tx+1,ringbuf_put@rb+1
  4832  011496  0E20               	movlw	32
  4833  011498  6E23               	movwf	ringbuf_put@asciicode,c
  4834  01149A  ECEB  F08C         	call	_ringbuf_put	;wreg free
  4835  01149E  D000               	goto	l4428
  4836  0114A0                     l4428:
  4837                           
  4838                           ;My_header\My_terminal.h: 96: print_time_dec(tx, caltime_now.mm, edit_flag.flag.mm);
  4839  0114A0  C086  F075         	movff	print_time@tx,print_time_dec@tx
  4840  0114A4  C087  F076         	movff	print_time@tx+1,print_time_dec@tx+1
  4841  0114A8  C030  F077         	movff	_caltime_now+1,print_time_dec@dec
  4842  0114AC  0E00               	movlw	0
  4843  0114AE  B22A               	btfsc	_edit_flag,1,c
  4844  0114B0  0E01               	movlw	1
  4845  0114B2  0100               	movlb	0	; () banked
  4846  0114B4  6F78               	movwf	print_time_dec@edit& (0+255),b
  4847  0114B6  EC2A  F093         	call	_print_time_dec	;wreg free
  4848                           
  4849                           ;My_header\My_terminal.h: 97: ringbuf_put_str(tx, "-");
  4850  0114BA  C086  F06A         	movff	print_time@tx,ringbuf_put_str@rb
  4851  0114BE  C087  F06B         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  4852  0114C2  0EE2               	movlw	low STR_9
  4853  0114C4  0100               	movlb	0	; () banked
  4854  0114C6  6F6C               	movwf	ringbuf_put_str@str& (0+255),b
  4855  0114C8  0EFF               	movlw	high STR_9
  4856  0114CA  0100               	movlb	0	; () banked
  4857  0114CC  6F6D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4858  0114CE  EC5C  F093         	call	_ringbuf_put_str	;wreg free
  4859                           
  4860                           ;My_header\My_terminal.h: 98: print_time_dec(tx, caltime_now.ss, edit_flag.flag.ss);
  4861  0114D2  C086  F075         	movff	print_time@tx,print_time_dec@tx
  4862  0114D6  C087  F076         	movff	print_time@tx+1,print_time_dec@tx+1
  4863  0114DA  C02F  F077         	movff	_caltime_now,print_time_dec@dec
  4864  0114DE  0E00               	movlw	0
  4865  0114E0  B02A               	btfsc	_edit_flag,0,c
  4866  0114E2  0E01               	movlw	1
  4867  0114E4  0100               	movlb	0	; () banked
  4868  0114E6  6F78               	movwf	print_time_dec@edit& (0+255),b
  4869  0114E8  EC2A  F093         	call	_print_time_dec	;wreg free
  4870                           
  4871                           ;My_header\My_terminal.h: 99: if (carrige_return)ringbuf_put(tx, '\n');
  4872  0114EC  0100               	movlb	0	; () banked
  4873  0114EE  5188               	movf	print_time@carrige_return& (0+255),w,b
  4874  0114F0  0100               	movlb	0	; () banked
  4875  0114F2  B4D8               	btfsc	status,2,c
  4876  0114F4  0012               	return	
  4877                           
  4878                           ; BSR set to: 0
  4879  0114F6  C086  F021         	movff	print_time@tx,ringbuf_put@rb
  4880  0114FA  C087  F022         	movff	print_time@tx+1,ringbuf_put@rb+1
  4881  0114FE  0E0A               	movlw	10
  4882  011500  6E23               	movwf	ringbuf_put@asciicode,c
  4883  011502  ECEB  F08C         	call	_ringbuf_put	;wreg free
  4884  011506  0012               	return	
  4885  011508  0012               	return		;funcret
  4886  01150A                     __end_of_print_time:
  4887                           	opt stack 0
  4888                           tblptru	equ	0xFF8
  4889                           tblptrh	equ	0xFF7
  4890                           tblptrl	equ	0xFF6
  4891                           tablat	equ	0xFF5
  4892                           prodh	equ	0xFF4
  4893                           prodl	equ	0xFF3
  4894                           intcon	equ	0xFF2
  4895                           postinc0	equ	0xFEE
  4896                           wreg	equ	0xFE8
  4897                           postinc1	equ	0xFE6
  4898                           postdec1	equ	0xFE5
  4899                           fsr1h	equ	0xFE2
  4900                           fsr1l	equ	0xFE1
  4901                           indf2	equ	0xFDF
  4902                           postinc2	equ	0xFDE
  4903                           postdec2	equ	0xFDD
  4904                           fsr2h	equ	0xFDA
  4905                           fsr2l	equ	0xFD9
  4906                           status	equ	0xFD8
  4907                           
  4908 ;; *************** function _print_time_dec *****************
  4909 ;; Defined at:
  4910 ;;		line 74 in file "../My_header\My_terminal.h"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;  tx              2   21[BANK0 ] PTR struct ringbuf
  4913 ;;		 -> rx_buf(8), 
  4914 ;;  dec             1   23[BANK0 ] unsigned char 
  4915 ;;  edit            1   24[BANK0 ] unsigned char 
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;  str            10   25[BANK0 ] unsigned char [10]
  4918 ;; Return value:  Size  Location     Type
  4919 ;;		None               void
  4920 ;; Registers used:
  4921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4927 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4928 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4930 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4931 ;;Total ram usage:       14 bytes
  4932 ;; Hardware stack levels used:    1
  4933 ;; Hardware stack levels required when called:    7
  4934 ;; This function calls:
  4935 ;;		_my_utoa
  4936 ;;		_ringbuf_put_str
  4937 ;; This function is called by:
  4938 ;;		_print_time
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           	psect	text13
  4943  012654                     __ptext13:
  4944                           	opt stack 0
  4945  012654                     _print_time_dec:
  4946                           	opt stack 20
  4947                           
  4948                           ;My_header\My_terminal.h: 75: uint8_t str[10];
  4949                           ;My_header\My_terminal.h: 76: my_utoa(str, dec, 2);
  4950                           
  4951                           ;incstack = 0
  4952  012654  0E79               	movlw	low print_time_dec@str
  4953  012656  0100               	movlb	0	; () banked
  4954  012658  6F6D               	movwf	my_utoa@str& (0+255),b
  4955  01265A  0E00               	movlw	high print_time_dec@str
  4956  01265C  0100               	movlb	0	; () banked
  4957  01265E  6F6E               	movwf	(my_utoa@str+1)& (0+255),b
  4958  012660  C077  F06F         	movff	print_time_dec@dec,my_utoa@value
  4959  012664  0100               	movlb	0	; () banked
  4960  012666  6B70               	clrf	(my_utoa@value+1)& (0+255),b
  4961  012668  0E02               	movlw	2
  4962  01266A  0100               	movlb	0	; () banked
  4963  01266C  6F71               	movwf	my_utoa@digits& (0+255),b
  4964  01266E  ECA9  F091         	call	_my_utoa	;wreg free
  4965                           
  4966                           ;My_header\My_terminal.h: 77: if (edit && RTCCFGbits.HALFSEC)ringbuf_put_str(tx, "  ");
  4967  012672  0100               	movlb	0	; () banked
  4968  012674  5178               	movf	print_time_dec@edit& (0+255),w,b
  4969  012676  0100               	movlb	0	; () banked
  4970  012678  B4D8               	btfsc	status,2,c
  4971  01267A  D010               	goto	l4404
  4972                           
  4973                           ; BSR set to: 0
  4974  01267C  010F               	movlb	15	; () banked
  4975  01267E  A73F               	btfss	63,3,b	;volatile
  4976  012680  D00D               	goto	l4404
  4977                           
  4978                           ; BSR set to: 15
  4979  012682  C075  F06A         	movff	print_time_dec@tx,ringbuf_put_str@rb
  4980  012686  C076  F06B         	movff	print_time_dec@tx+1,ringbuf_put_str@rb+1
  4981  01268A  0ED4               	movlw	low STR_3
  4982  01268C  0100               	movlb	0	; () banked
  4983  01268E  6F6C               	movwf	ringbuf_put_str@str& (0+255),b
  4984  012690  0EFF               	movlw	high STR_3
  4985  012692  0100               	movlb	0	; () banked
  4986  012694  6F6D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4987  012696  EC5C  F093         	call	_ringbuf_put_str	;wreg free
  4988  01269A  0012               	return	
  4989  01269C                     l4404:
  4990                           
  4991                           ;My_header\My_terminal.h: 78: else ringbuf_put_str(tx, str);
  4992  01269C  C075  F06A         	movff	print_time_dec@tx,ringbuf_put_str@rb
  4993  0126A0  C076  F06B         	movff	print_time_dec@tx+1,ringbuf_put_str@rb+1
  4994  0126A4  0E79               	movlw	low print_time_dec@str
  4995  0126A6  0100               	movlb	0	; () banked
  4996  0126A8  6F6C               	movwf	ringbuf_put_str@str& (0+255),b
  4997  0126AA  0E00               	movlw	high print_time_dec@str
  4998  0126AC  0100               	movlb	0	; () banked
  4999  0126AE  6F6D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  5000  0126B0  EC5C  F093         	call	_ringbuf_put_str	;wreg free
  5001  0126B4  0012               	return	
  5002  0126B6  0012               	return		;funcret
  5003  0126B8                     __end_of_print_time_dec:
  5004                           	opt stack 0
  5005                           tblptru	equ	0xFF8
  5006                           tblptrh	equ	0xFF7
  5007                           tblptrl	equ	0xFF6
  5008                           tablat	equ	0xFF5
  5009                           prodh	equ	0xFF4
  5010                           prodl	equ	0xFF3
  5011                           intcon	equ	0xFF2
  5012                           postinc0	equ	0xFEE
  5013                           wreg	equ	0xFE8
  5014                           postinc1	equ	0xFE6
  5015                           postdec1	equ	0xFE5
  5016                           fsr1h	equ	0xFE2
  5017                           fsr1l	equ	0xFE1
  5018                           indf2	equ	0xFDF
  5019                           postinc2	equ	0xFDE
  5020                           postdec2	equ	0xFDD
  5021                           fsr2h	equ	0xFDA
  5022                           fsr2l	equ	0xFD9
  5023                           status	equ	0xFD8
  5024                           
  5025 ;; *************** function _ringbuf_put_str *****************
  5026 ;; Defined at:
  5027 ;;		line 58 in file "../My_header\My_ringbuf.h"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  rb              2   10[BANK0 ] PTR struct ringbuf
  5030 ;;		 -> rx_buf(8), 
  5031 ;;  str             2   12[BANK0 ] PTR const unsigned char 
  5032 ;;		 -> STR_10(8), STR_9(2), STR_8(3), weekday_3char(28), 
  5033 ;;		 -> STR_7(3), STR_6(2), STR_5(2), STR_4(2), 
  5034 ;;		 -> STR_3(3), print_time_dec@str(10), STR_2(4), STR_1(4), 
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;		None
  5037 ;; Return value:  Size  Location     Type
  5038 ;;		None               void
  5039 ;; Registers used:
  5040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5046 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5049 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5050 ;;Total ram usage:        4 bytes
  5051 ;; Hardware stack levels used:    1
  5052 ;; Hardware stack levels required when called:    6
  5053 ;; This function calls:
  5054 ;;		_ringbuf_put
  5055 ;; This function is called by:
  5056 ;;		_my_terminal_loop
  5057 ;;		_print_time_dec
  5058 ;;		_print_time
  5059 ;;		_command_at_hand
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           	psect	text14
  5064  0126B8                     __ptext14:
  5065                           	opt stack 0
  5066  0126B8                     _ringbuf_put_str:
  5067                           	opt stack 23
  5068                           
  5069                           ;My_header\My_ringbuf.h: 59: while (*str) {
  5070                           
  5071                           ;incstack = 0
  5072  0126B8  D01C               	goto	l4246
  5073  0126BA                     l4242:
  5074                           
  5075                           ;My_header\My_ringbuf.h: 60: ringbuf_put(rb, *str++);
  5076  0126BA  C06A  F021         	movff	ringbuf_put_str@rb,ringbuf_put@rb
  5077  0126BE  C06B  F022         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
  5078  0126C2  C06C  FFF6         	movff	ringbuf_put_str@str,tblptrl
  5079  0126C6  C06D  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  5080  0126CA  0E00               	movlw	low (__mediumconst shr (0+16))
  5081  0126CC  6EF8               	movwf	tblptru,c
  5082  0126CE  0E0E               	movlw	(high __ramtop+-1)
  5083  0126D0  64F7               	cpfsgt	tblptrh,c
  5084  0126D2  D003               	bra	u4557
  5085  0126D4  0008               	tblrd		*
  5086  0126D6  50F5               	movf	tablat,w,c
  5087  0126D8  D005               	bra	u4550
  5088  0126DA                     u4557:
  5089  0126DA  CFF6 FFE1          	movff	tblptrl,fsr1l
  5090  0126DE  CFF7 FFE2          	movff	tblptrh,fsr1h
  5091  0126E2  50E7               	movf	indf1,w,c
  5092  0126E4                     u4550:
  5093  0126E4  6E23               	movwf	ringbuf_put@asciicode,c
  5094  0126E6  ECEB  F08C         	call	_ringbuf_put	;wreg free
  5095  0126EA  0100               	movlb	0	; () banked
  5096  0126EC  4B6C               	infsnz	ringbuf_put_str@str& (0+255),f,b
  5097  0126EE  2B6D               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
  5098  0126F0  D000               	goto	l4246
  5099  0126F2                     l4246:
  5100  0126F2  C06C  FFF6         	movff	ringbuf_put_str@str,tblptrl
  5101  0126F6  C06D  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  5102  0126FA  0E00               	movlw	low (__mediumconst shr (0+16))
  5103  0126FC  6EF8               	movwf	tblptru,c
  5104  0126FE  0E0E               	movlw	(high __ramtop+-1)
  5105  012700  64F7               	cpfsgt	tblptrh,c
  5106  012702  D003               	bra	u4567
  5107  012704  0008               	tblrd		*
  5108  012706  50F5               	movf	tablat,w,c
  5109  012708  D005               	bra	u4560
  5110  01270A                     u4567:
  5111  01270A  CFF6 FFE1          	movff	tblptrl,fsr1l
  5112  01270E  CFF7 FFE2          	movff	tblptrh,fsr1h
  5113  012712  50E7               	movf	indf1,w,c
  5114  012714                     u4560:
  5115  012714  0900               	iorlw	0
  5116  012716  A4D8               	btfss	status,2,c
  5117  012718  D7D0               	goto	l4242
  5118  01271A  0012               	return		;funcret
  5119  01271C                     __end_of_ringbuf_put_str:
  5120                           	opt stack 0
  5121                           tblptru	equ	0xFF8
  5122                           tblptrh	equ	0xFF7
  5123                           tblptrl	equ	0xFF6
  5124                           tablat	equ	0xFF5
  5125                           prodh	equ	0xFF4
  5126                           prodl	equ	0xFF3
  5127                           intcon	equ	0xFF2
  5128                           postinc0	equ	0xFEE
  5129                           wreg	equ	0xFE8
  5130                           indf1	equ	0xFE7
  5131                           postinc1	equ	0xFE6
  5132                           postdec1	equ	0xFE5
  5133                           fsr1h	equ	0xFE2
  5134                           fsr1l	equ	0xFE1
  5135                           indf2	equ	0xFDF
  5136                           postinc2	equ	0xFDE
  5137                           postdec2	equ	0xFDD
  5138                           fsr2h	equ	0xFDA
  5139                           fsr2l	equ	0xFD9
  5140                           status	equ	0xFD8
  5141                           
  5142 ;; *************** function _ringbuf_put *****************
  5143 ;; Defined at:
  5144 ;;		line 39 in file "../My_header\My_ringbuf.h"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;  rb              2   32[COMRAM] PTR struct ringbuf
  5147 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
  5148 ;;  asciicode       1   34[COMRAM] unsigned char 
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;		None
  5151 ;; Return value:  Size  Location     Type
  5152 ;;		None               void
  5153 ;; Registers used:
  5154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5160 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5162 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5163 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5164 ;;Total ram usage:        7 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; Hardware stack levels required when called:    5
  5167 ;; This function calls:
  5168 ;;		_ringbuf_num
  5169 ;; This function is called by:
  5170 ;;		_ringbuf_put_num
  5171 ;;		_ringbuf_put_str
  5172 ;;		_tx_sends
  5173 ;;		_my_terminal_loop
  5174 ;;		_print_time
  5175 ;;		_tx_send
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           	psect	text15
  5180  0119D6                     __ptext15:
  5181                           	opt stack 0
  5182  0119D6                     _ringbuf_put:
  5183                           	opt stack 23
  5184                           
  5185                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
  5186                           
  5187                           ;incstack = 0
  5188  0119D6  C021  F01F         	movff	ringbuf_put@rb,ringbuf_num@rb
  5189  0119DA  C022  F020         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  5190  0119DE  EC45  F08B         	call	_ringbuf_num	;wreg free
  5191  0119E2  EE20 F002          	lfsr	2,2
  5192  0119E6  5021               	movf	ringbuf_put@rb,w,c
  5193  0119E8  26D9               	addwf	fsr2l,f,c
  5194  0119EA  5022               	movf	ringbuf_put@rb+1,w,c
  5195  0119EC  22DA               	addwfc	fsr2h,f,c
  5196  0119EE  50DE               	movf	postinc2,w,c
  5197  0119F0  5C1F               	subwf	?_ringbuf_num,w,c
  5198  0119F2  50DE               	movf	postinc2,w,c
  5199  0119F4  5820               	subwfb	?_ringbuf_num+1,w,c
  5200  0119F6  B0D8               	btfsc	status,0,c
  5201  0119F8  0012               	return	
  5202                           
  5203                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
  5204  0119FA  EE20 F004          	lfsr	2,4
  5205  0119FE  5021               	movf	ringbuf_put@rb,w,c
  5206  011A00  26D9               	addwf	fsr2l,f,c
  5207  011A02  5022               	movf	ringbuf_put@rb+1,w,c
  5208  011A04  22DA               	addwfc	fsr2h,f,c
  5209  011A06  CFDE F066          	movff	postinc2,??_ringbuf_put
  5210  011A0A  CFDD F067          	movff	postdec2,??_ringbuf_put+1
  5211  011A0E  C021  FFD9         	movff	ringbuf_put@rb,fsr2l
  5212  011A12  C022  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  5213  011A16  CFDE F068          	movff	postinc2,??_ringbuf_put+2
  5214  011A1A  CFDD F069          	movff	postdec2,??_ringbuf_put+3
  5215  011A1E  0100               	movlb	0	; () banked
  5216  011A20  5166               	movf	??_ringbuf_put& (0+255),w,b
  5217  011A22  0100               	movlb	0	; () banked
  5218  011A24  2568               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  5219  011A26  6ED9               	movwf	fsr2l,c
  5220  011A28  0100               	movlb	0	; () banked
  5221  011A2A  5167               	movf	(??_ringbuf_put+1)& (0+255),w,b
  5222  011A2C  0100               	movlb	0	; () banked
  5223  011A2E  2169               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  5224  011A30  6EDA               	movwf	fsr2h,c
  5225  011A32  C023  FFDF         	movff	ringbuf_put@asciicode,indf2
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
  5229  011A36  EE20 F002          	lfsr	2,2
  5230  011A3A  5021               	movf	ringbuf_put@rb,w,c
  5231  011A3C  26D9               	addwf	fsr2l,f,c
  5232  011A3E  5022               	movf	ringbuf_put@rb+1,w,c
  5233  011A40  22DA               	addwfc	fsr2h,f,c
  5234  011A42  EE10 F004          	lfsr	1,4
  5235  011A46  5021               	movf	ringbuf_put@rb,w,c
  5236  011A48  26E1               	addwf	fsr1l,f,c
  5237  011A4A  5022               	movf	ringbuf_put@rb+1,w,c
  5238  011A4C  22E2               	addwfc	fsr1h,f,c
  5239  011A4E  CFE6 F068          	movff	postinc1,??_ringbuf_put+2
  5240  011A52  CFE5 F069          	movff	postdec1,??_ringbuf_put+3
  5241  011A56  0E01               	movlw	1
  5242  011A58  0100               	movlb	0	; () banked
  5243  011A5A  2768               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  5244  011A5C  0E00               	movlw	0
  5245  011A5E  2369               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  5246  011A60  50DE               	movf	postinc2,w,c
  5247  011A62  0100               	movlb	0	; () banked
  5248  011A64  5D68               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  5249  011A66  50DE               	movf	postinc2,w,c
  5250  011A68  0100               	movlb	0	; () banked
  5251  011A6A  5969               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  5252  011A6C  B0D8               	btfsc	status,0,c
  5253  011A6E  D00A               	goto	l4108
  5254                           
  5255                           ; BSR set to: 0
  5256  011A70  EE20 F004          	lfsr	2,4
  5257  011A74  5021               	movf	ringbuf_put@rb,w,c
  5258  011A76  26D9               	addwf	fsr2l,f,c
  5259  011A78  5022               	movf	ringbuf_put@rb+1,w,c
  5260  011A7A  22DA               	addwfc	fsr2h,f,c
  5261  011A7C  2ADE               	incf	postinc2,f,c
  5262  011A7E  0E00               	movlw	0
  5263  011A80  22DD               	addwfc	postdec2,f,c
  5264  011A82  0012               	return	
  5265  011A84                     l4108:
  5266                           
  5267                           ; BSR set to: 0
  5268                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
  5269  011A84  EE20 F004          	lfsr	2,4
  5270  011A88  5021               	movf	ringbuf_put@rb,w,c
  5271  011A8A  26D9               	addwf	fsr2l,f,c
  5272  011A8C  5022               	movf	ringbuf_put@rb+1,w,c
  5273  011A8E  22DA               	addwfc	fsr2h,f,c
  5274  011A90  0E00               	movlw	0
  5275  011A92  6EDE               	movwf	postinc2,c
  5276  011A94  0E00               	movlw	0
  5277  011A96  6EDD               	movwf	postdec2,c
  5278                           
  5279                           ; BSR set to: 0
  5280  011A98  0012               	return	
  5281                           
  5282                           ; BSR set to: 0
  5283  011A9A  0012               	return		;funcret
  5284  011A9C                     __end_of_ringbuf_put:
  5285                           	opt stack 0
  5286                           tblptru	equ	0xFF8
  5287                           tblptrh	equ	0xFF7
  5288                           tblptrl	equ	0xFF6
  5289                           tablat	equ	0xFF5
  5290                           prodh	equ	0xFF4
  5291                           prodl	equ	0xFF3
  5292                           intcon	equ	0xFF2
  5293                           postinc0	equ	0xFEE
  5294                           wreg	equ	0xFE8
  5295                           indf1	equ	0xFE7
  5296                           postinc1	equ	0xFE6
  5297                           postdec1	equ	0xFE5
  5298                           fsr1h	equ	0xFE2
  5299                           fsr1l	equ	0xFE1
  5300                           indf2	equ	0xFDF
  5301                           postinc2	equ	0xFDE
  5302                           postdec2	equ	0xFDD
  5303                           fsr2h	equ	0xFDA
  5304                           fsr2l	equ	0xFD9
  5305                           status	equ	0xFD8
  5306                           
  5307 ;; *************** function _ringbuf_num *****************
  5308 ;; Defined at:
  5309 ;;		line 31 in file "../My_header\My_ringbuf.h"
  5310 ;; Parameters:    Size  Location     Type
  5311 ;;  rb              2   30[COMRAM] PTR struct ringbuf
  5312 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
  5313 ;; Auto vars:     Size  Location     Type
  5314 ;;		None
  5315 ;; Return value:  Size  Location     Type
  5316 ;;                  2   30[COMRAM] unsigned int 
  5317 ;; Registers used:
  5318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5319 ;; Tracked objects:
  5320 ;;		On entry : 0/0
  5321 ;;		On exit  : 0/0
  5322 ;;		Unchanged: 0/0
  5323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5326 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5327 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5328 ;;Total ram usage:        8 bytes
  5329 ;; Hardware stack levels used:    1
  5330 ;; Hardware stack levels required when called:    4
  5331 ;; This function calls:
  5332 ;;		Nothing
  5333 ;; This function is called by:
  5334 ;;		_ringbuf_put
  5335 ;;		_ringbuf_pop
  5336 ;;		_ringbuf_backspace
  5337 ;;		_my_terminal_loop
  5338 ;;		_main
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           	psect	text16
  5343  01168A                     __ptext16:
  5344                           	opt stack 0
  5345  01168A                     _ringbuf_num:
  5346                           	opt stack 26
  5347                           
  5348                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
  5349                           
  5350                           ;incstack = 0
  5351  01168A  EE20 F006          	lfsr	2,6
  5352  01168E  501F               	movf	ringbuf_num@rb,w,c
  5353  011690  26D9               	addwf	fsr2l,f,c
  5354  011692  5020               	movf	ringbuf_num@rb+1,w,c
  5355  011694  22DA               	addwfc	fsr2h,f,c
  5356  011696  EE10 F004          	lfsr	1,4
  5357  01169A  501F               	movf	ringbuf_num@rb,w,c
  5358  01169C  26E1               	addwf	fsr1l,f,c
  5359  01169E  5020               	movf	ringbuf_num@rb+1,w,c
  5360  0116A0  22E2               	addwfc	fsr1h,f,c
  5361  0116A2  50DE               	movf	postinc2,w,c
  5362  0116A4  5CE6               	subwf	postinc1,w,c
  5363  0116A6  50DE               	movf	postinc2,w,c
  5364  0116A8  58E6               	subwfb	postinc1,w,c
  5365  0116AA  A0D8               	btfss	status,0,c
  5366  0116AC  D024               	goto	l4060
  5367                           
  5368                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
  5369  0116AE  EE20 F004          	lfsr	2,4
  5370  0116B2  501F               	movf	ringbuf_num@rb,w,c
  5371  0116B4  26D9               	addwf	fsr2l,f,c
  5372  0116B6  5020               	movf	ringbuf_num@rb+1,w,c
  5373  0116B8  22DA               	addwfc	fsr2h,f,c
  5374  0116BA  CFDE F060          	movff	postinc2,??_ringbuf_num
  5375  0116BE  CFDD F061          	movff	postdec2,??_ringbuf_num+1
  5376  0116C2  EE20 F006          	lfsr	2,6
  5377  0116C6  501F               	movf	ringbuf_num@rb,w,c
  5378  0116C8  26D9               	addwf	fsr2l,f,c
  5379  0116CA  5020               	movf	ringbuf_num@rb+1,w,c
  5380  0116CC  22DA               	addwfc	fsr2h,f,c
  5381  0116CE  CFDE F062          	movff	postinc2,??_ringbuf_num+2
  5382  0116D2  CFDD F063          	movff	postdec2,??_ringbuf_num+3
  5383  0116D6  0100               	movlb	0	; () banked
  5384  0116D8  1F62               	comf	(??_ringbuf_num+2)& (0+255),f,b
  5385  0116DA  1F63               	comf	(??_ringbuf_num+3)& (0+255),f,b
  5386  0116DC  4B62               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
  5387  0116DE  2B63               	incf	(??_ringbuf_num+3)& (0+255),f,b
  5388  0116E0  0100               	movlb	0	; () banked
  5389  0116E2  5160               	movf	??_ringbuf_num& (0+255),w,b
  5390  0116E4  0100               	movlb	0	; () banked
  5391  0116E6  2562               	addwf	(??_ringbuf_num+2)& (0+255),w,b
  5392  0116E8  6E1F               	movwf	?_ringbuf_num,c
  5393  0116EA  0100               	movlb	0	; () banked
  5394  0116EC  5161               	movf	(??_ringbuf_num+1)& (0+255),w,b
  5395  0116EE  0100               	movlb	0	; () banked
  5396  0116F0  2163               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
  5397  0116F2  6E20               	movwf	?_ringbuf_num+1,c
  5398                           
  5399                           ; BSR set to: 0
  5400                           ;My_header\My_ringbuf.h: 34: } else {
  5401                           
  5402                           ; BSR set to: 0
  5403  0116F4  0012               	return	
  5404  0116F6                     l4060:
  5405                           
  5406                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
  5407  0116F6  EE20 F004          	lfsr	2,4
  5408  0116FA  501F               	movf	ringbuf_num@rb,w,c
  5409  0116FC  26D9               	addwf	fsr2l,f,c
  5410  0116FE  5020               	movf	ringbuf_num@rb+1,w,c
  5411  011700  22DA               	addwfc	fsr2h,f,c
  5412  011702  CFDE F060          	movff	postinc2,??_ringbuf_num
  5413  011706  CFDD F061          	movff	postdec2,??_ringbuf_num+1
  5414  01170A  EE20 F002          	lfsr	2,2
  5415  01170E  501F               	movf	ringbuf_num@rb,w,c
  5416  011710  26D9               	addwf	fsr2l,f,c
  5417  011712  5020               	movf	ringbuf_num@rb+1,w,c
  5418  011714  22DA               	addwfc	fsr2h,f,c
  5419  011716  CFDE F062          	movff	postinc2,??_ringbuf_num+2
  5420  01171A  CFDD F063          	movff	postdec2,??_ringbuf_num+3
  5421  01171E  EE20 F006          	lfsr	2,6
  5422  011722  501F               	movf	ringbuf_num@rb,w,c
  5423  011724  26D9               	addwf	fsr2l,f,c
  5424  011726  5020               	movf	ringbuf_num@rb+1,w,c
  5425  011728  22DA               	addwfc	fsr2h,f,c
  5426  01172A  CFDE F064          	movff	postinc2,??_ringbuf_num+4
  5427  01172E  CFDD F065          	movff	postdec2,??_ringbuf_num+5
  5428  011732  0100               	movlb	0	; () banked
  5429  011734  1F64               	comf	(??_ringbuf_num+4)& (0+255),f,b
  5430  011736  1F65               	comf	(??_ringbuf_num+5)& (0+255),f,b
  5431  011738  4B64               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
  5432  01173A  2B65               	incf	(??_ringbuf_num+5)& (0+255),f,b
  5433  01173C  0100               	movlb	0	; () banked
  5434  01173E  5162               	movf	(??_ringbuf_num+2)& (0+255),w,b
  5435  011740  0100               	movlb	0	; () banked
  5436  011742  2764               	addwf	(??_ringbuf_num+4)& (0+255),f,b
  5437  011744  0100               	movlb	0	; () banked
  5438  011746  5163               	movf	(??_ringbuf_num+3)& (0+255),w,b
  5439  011748  0100               	movlb	0	; () banked
  5440  01174A  2365               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
  5441  01174C  0100               	movlb	0	; () banked
  5442  01174E  5160               	movf	??_ringbuf_num& (0+255),w,b
  5443  011750  0100               	movlb	0	; () banked
  5444  011752  2564               	addwf	(??_ringbuf_num+4)& (0+255),w,b
  5445  011754  6E1F               	movwf	?_ringbuf_num,c
  5446  011756  0100               	movlb	0	; () banked
  5447  011758  5161               	movf	(??_ringbuf_num+1)& (0+255),w,b
  5448  01175A  0100               	movlb	0	; () banked
  5449  01175C  2165               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
  5450  01175E  6E20               	movwf	?_ringbuf_num+1,c
  5451                           
  5452                           ; BSR set to: 0
  5453  011760  0012               	return	
  5454                           
  5455                           ; BSR set to: 0
  5456                           
  5457                           ; BSR set to: 0
  5458  011762  0012               	return		;funcret
  5459  011764                     __end_of_ringbuf_num:
  5460                           	opt stack 0
  5461                           tblptru	equ	0xFF8
  5462                           tblptrh	equ	0xFF7
  5463                           tblptrl	equ	0xFF6
  5464                           tablat	equ	0xFF5
  5465                           prodh	equ	0xFF4
  5466                           prodl	equ	0xFF3
  5467                           intcon	equ	0xFF2
  5468                           postinc0	equ	0xFEE
  5469                           wreg	equ	0xFE8
  5470                           indf1	equ	0xFE7
  5471                           postinc1	equ	0xFE6
  5472                           postdec1	equ	0xFE5
  5473                           fsr1h	equ	0xFE2
  5474                           fsr1l	equ	0xFE1
  5475                           indf2	equ	0xFDF
  5476                           postinc2	equ	0xFDE
  5477                           postdec2	equ	0xFDD
  5478                           fsr2h	equ	0xFDA
  5479                           fsr2l	equ	0xFD9
  5480                           status	equ	0xFD8
  5481                           
  5482 ;; *************** function _my_utoa *****************
  5483 ;; Defined at:
  5484 ;;		line 11 in file "../My_header\My_stdlib.h"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;  str             2   13[BANK0 ] PTR unsigned char 
  5487 ;;		 -> print_time_dec@str(10), 
  5488 ;;  value           2   15[BANK0 ] unsigned int 
  5489 ;;  digits          1   17[BANK0 ] unsigned char 
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;  v               2   19[BANK0 ] unsigned int 
  5492 ;;  d               1   18[BANK0 ] unsigned char 
  5493 ;; Return value:  Size  Location     Type
  5494 ;;		None               void
  5495 ;; Registers used:
  5496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5502 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5503 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5505 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5506 ;;Total ram usage:        8 bytes
  5507 ;; Hardware stack levels used:    1
  5508 ;; Hardware stack levels required when called:    5
  5509 ;; This function calls:
  5510 ;;		___lwdiv
  5511 ;;		___lwmod
  5512 ;; This function is called by:
  5513 ;;		_print_time_dec
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           
  5517                           	psect	text17
  5518  012352                     __ptext17:
  5519                           	opt stack 0
  5520  012352                     _my_utoa:
  5521                           	opt stack 21
  5522                           
  5523                           ;My_header\My_stdlib.h: 12: uint16_t v;
  5524                           ;My_header\My_stdlib.h: 13: uint8_t d;
  5525                           ;My_header\My_stdlib.h: 14: while (digits--) {
  5526                           
  5527                           ; BSR set to: 0
  5528                           ;incstack = 0
  5529  012352  D037               	goto	l4308
  5530  012354                     l447:
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;My_header\My_stdlib.h: 15: v = value;
  5534  012354  C06F  F073         	movff	my_utoa@value,my_utoa@v
  5535  012358  C070  F074         	movff	my_utoa@value+1,my_utoa@v+1
  5536                           
  5537                           ;My_header\My_stdlib.h: 16: d = digits;
  5538  01235C  C071  F072         	movff	my_utoa@digits,my_utoa@d
  5539                           
  5540                           ;My_header\My_stdlib.h: 17: while (d--) {
  5541  012360  D010               	goto	l4300
  5542  012362                     l4298:
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;My_header\My_stdlib.h: 18: v /= 10;
  5546  012362  C073  F066         	movff	my_utoa@v,___lwdiv@dividend
  5547  012366  C074  F067         	movff	my_utoa@v+1,___lwdiv@dividend+1
  5548  01236A  0E00               	movlw	0
  5549  01236C  0100               	movlb	0	; () banked
  5550  01236E  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5551  012370  0E0A               	movlw	10
  5552  012372  6F68               	movwf	___lwdiv@divisor& (0+255),b
  5553  012374  EC71  F092         	call	___lwdiv	;wreg free
  5554  012378  C066  F073         	movff	?___lwdiv,my_utoa@v
  5555  01237C  C067  F074         	movff	?___lwdiv+1,my_utoa@v+1
  5556  012380  D000               	goto	l4300
  5557  012382                     l4300:
  5558  012382  0100               	movlb	0	; () banked
  5559  012384  0772               	decf	my_utoa@d& (0+255),f,b
  5560  012386  0100               	movlb	0	; () banked
  5561  012388  2972               	incf	my_utoa@d& (0+255),w,b
  5562  01238A  A4D8               	btfss	status,2,c
  5563  01238C  D7EA               	goto	l4298
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;My_header\My_stdlib.h: 19: }
  5567                           ;My_header\My_stdlib.h: 20: v %= 10;
  5568                           
  5569                           ; BSR set to: 0
  5570  01238E  C073  F01F         	movff	my_utoa@v,___lwmod@dividend
  5571  012392  C074  F020         	movff	my_utoa@v+1,___lwmod@dividend+1
  5572  012396  0E00               	movlw	0
  5573  012398  6E22               	movwf	___lwmod@divisor+1,c
  5574  01239A  0E0A               	movlw	10
  5575  01239C  6E21               	movwf	___lwmod@divisor,c
  5576  01239E  EC0D  F094         	call	___lwmod	;wreg free
  5577  0123A2  C01F  F073         	movff	?___lwmod,my_utoa@v
  5578  0123A6  C020  F074         	movff	?___lwmod+1,my_utoa@v+1
  5579                           
  5580                           ;My_header\My_stdlib.h: 21: *str++ = '0' + v;
  5581  0123AA  0100               	movlb	0	; () banked
  5582  0123AC  5173               	movf	my_utoa@v& (0+255),w,b
  5583  0123AE  0F30               	addlw	48
  5584  0123B0  C06D  FFD9         	movff	my_utoa@str,fsr2l
  5585  0123B4  C06E  FFDA         	movff	my_utoa@str+1,fsr2h
  5586  0123B8  6EDF               	movwf	indf2,c
  5587                           
  5588                           ; BSR set to: 0
  5589  0123BA  0100               	movlb	0	; () banked
  5590  0123BC  4B6D               	infsnz	my_utoa@str& (0+255),f,b
  5591  0123BE  2B6E               	incf	(my_utoa@str+1)& (0+255),f,b
  5592  0123C0  D000               	goto	l4308
  5593  0123C2                     l4308:
  5594  0123C2  0100               	movlb	0	; () banked
  5595  0123C4  0771               	decf	my_utoa@digits& (0+255),f,b
  5596  0123C6  0100               	movlb	0	; () banked
  5597  0123C8  2971               	incf	my_utoa@digits& (0+255),w,b
  5598  0123CA  A4D8               	btfss	status,2,c
  5599  0123CC  D7C3               	goto	l447
  5600                           
  5601                           ; BSR set to: 0
  5602                           ;My_header\My_stdlib.h: 22: }
  5603                           ;My_header\My_stdlib.h: 23: *str = '\0';
  5604                           
  5605                           ; BSR set to: 0
  5606  0123CE  C06D  FFD9         	movff	my_utoa@str,fsr2l
  5607  0123D2  C06E  FFDA         	movff	my_utoa@str+1,fsr2h
  5608  0123D6  0E00               	movlw	0
  5609  0123D8  6EDF               	movwf	indf2,c
  5610                           
  5611                           ; BSR set to: 0
  5612  0123DA  0012               	return		;funcret
  5613  0123DC                     __end_of_my_utoa:
  5614                           	opt stack 0
  5615                           tblptru	equ	0xFF8
  5616                           tblptrh	equ	0xFF7
  5617                           tblptrl	equ	0xFF6
  5618                           tablat	equ	0xFF5
  5619                           prodh	equ	0xFF4
  5620                           prodl	equ	0xFF3
  5621                           intcon	equ	0xFF2
  5622                           postinc0	equ	0xFEE
  5623                           wreg	equ	0xFE8
  5624                           indf1	equ	0xFE7
  5625                           postinc1	equ	0xFE6
  5626                           postdec1	equ	0xFE5
  5627                           fsr1h	equ	0xFE2
  5628                           fsr1l	equ	0xFE1
  5629                           indf2	equ	0xFDF
  5630                           postinc2	equ	0xFDE
  5631                           postdec2	equ	0xFDD
  5632                           fsr2h	equ	0xFDA
  5633                           fsr2l	equ	0xFD9
  5634                           status	equ	0xFD8
  5635                           
  5636 ;; *************** function ___lwmod *****************
  5637 ;; Defined at:
  5638 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;  dividend        2   30[COMRAM] unsigned int 
  5641 ;;  divisor         2   32[COMRAM] unsigned int 
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;  counter         1   34[COMRAM] unsigned char 
  5644 ;; Return value:  Size  Location     Type
  5645 ;;                  2   30[COMRAM] unsigned int 
  5646 ;; Registers used:
  5647 ;;		wreg, status,2, status,0
  5648 ;; Tracked objects:
  5649 ;;		On entry : 0/0
  5650 ;;		On exit  : 0/0
  5651 ;;		Unchanged: 0/0
  5652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5653 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5656 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5657 ;;Total ram usage:        5 bytes
  5658 ;; Hardware stack levels used:    1
  5659 ;; Hardware stack levels required when called:    4
  5660 ;; This function calls:
  5661 ;;		Nothing
  5662 ;; This function is called by:
  5663 ;;		_ringbuf_put_num
  5664 ;;		_my_utoa
  5665 ;;		_tx_sendn
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669                           	psect	text18
  5670  01281A                     __ptext18:
  5671                           	opt stack 0
  5672  01281A                     ___lwmod:
  5673                           	opt stack 24
  5674                           
  5675                           ; BSR set to: 0
  5676                           ;incstack = 0
  5677  01281A  5021               	movf	___lwmod@divisor,w,c
  5678  01281C  1022               	iorwf	___lwmod@divisor+1,w,c
  5679  01281E  B4D8               	btfsc	status,2,c
  5680  012820  D01D               	goto	l1193
  5681  012822  0E01               	movlw	1
  5682  012824  6E23               	movwf	___lwmod@counter,c
  5683  012826  D005               	goto	l4230
  5684  012828                     l4228:
  5685  012828  90D8               	bcf	status,0,c
  5686  01282A  3621               	rlcf	___lwmod@divisor,f,c
  5687  01282C  3622               	rlcf	___lwmod@divisor+1,f,c
  5688  01282E  2A23               	incf	___lwmod@counter,f,c
  5689  012830  D000               	goto	l4230
  5690  012832                     l4230:
  5691  012832  BE22               	btfsc	___lwmod@divisor+1,7,c
  5692  012834  D002               	goto	l4232
  5693  012836  D7F8               	goto	l4228
  5694  012838  D000               	goto	l4232
  5695  01283A                     l4232:
  5696  01283A  5021               	movf	___lwmod@divisor,w,c
  5697  01283C  5C1F               	subwf	___lwmod@dividend,w,c
  5698  01283E  5022               	movf	___lwmod@divisor+1,w,c
  5699  012840  5820               	subwfb	___lwmod@dividend+1,w,c
  5700  012842  A0D8               	btfss	status,0,c
  5701  012844  D005               	goto	l4236
  5702  012846  5021               	movf	___lwmod@divisor,w,c
  5703  012848  5E1F               	subwf	___lwmod@dividend,f,c
  5704  01284A  5022               	movf	___lwmod@divisor+1,w,c
  5705  01284C  5A20               	subwfb	___lwmod@dividend+1,f,c
  5706  01284E  D000               	goto	l4236
  5707  012850                     l4236:
  5708  012850  90D8               	bcf	status,0,c
  5709  012852  3222               	rrcf	___lwmod@divisor+1,f,c
  5710  012854  3221               	rrcf	___lwmod@divisor,f,c
  5711  012856  2E23               	decfsz	___lwmod@counter,f,c
  5712  012858  D7F0               	goto	l4232
  5713  01285A  D000               	goto	l1193
  5714  01285C                     l1193:
  5715  01285C  C01F  F01F         	movff	___lwmod@dividend,?___lwmod
  5716  012860  C020  F020         	movff	___lwmod@dividend+1,?___lwmod+1
  5717  012864  0012               	return		;funcret
  5718  012866                     __end_of___lwmod:
  5719                           	opt stack 0
  5720                           tblptru	equ	0xFF8
  5721                           tblptrh	equ	0xFF7
  5722                           tblptrl	equ	0xFF6
  5723                           tablat	equ	0xFF5
  5724                           prodh	equ	0xFF4
  5725                           prodl	equ	0xFF3
  5726                           intcon	equ	0xFF2
  5727                           postinc0	equ	0xFEE
  5728                           wreg	equ	0xFE8
  5729                           indf1	equ	0xFE7
  5730                           postinc1	equ	0xFE6
  5731                           postdec1	equ	0xFE5
  5732                           fsr1h	equ	0xFE2
  5733                           fsr1l	equ	0xFE1
  5734                           indf2	equ	0xFDF
  5735                           postinc2	equ	0xFDE
  5736                           postdec2	equ	0xFDD
  5737                           fsr2h	equ	0xFDA
  5738                           fsr2l	equ	0xFD9
  5739                           status	equ	0xFD8
  5740                           
  5741 ;; *************** function _RTCC_from_RTCC *****************
  5742 ;; Defined at:
  5743 ;;		line 231 in file "../My_header\My_RTCC.h"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;  ct              2   34[BANK0 ] PTR struct .
  5746 ;;		 -> caltime_now(7), 
  5747 ;;  ep              2   36[BANK0 ] PTR unsigned long 
  5748 ;;		 -> epoch_now(4), 
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;		None
  5751 ;; Return value:  Size  Location     Type
  5752 ;;		None               void
  5753 ;; Registers used:
  5754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5760 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5763 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5764 ;;Total ram usage:        4 bytes
  5765 ;; Hardware stack levels used:    1
  5766 ;; Hardware stack levels required when called:    7
  5767 ;; This function calls:
  5768 ;;		_RTCC_to_caltime
  5769 ;;		_caltime_to_epoch
  5770 ;; This function is called by:
  5771 ;;		_print_time
  5772 ;;		_main
  5773 ;;		_RTCC_adjust_time_inc
  5774 ;;		_RTCC_adjust_time_dec
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778                           	psect	text19
  5779  012A28                     __ptext19:
  5780                           	opt stack 0
  5781  012A28                     _RTCC_from_RTCC:
  5782                           	opt stack 20
  5783                           
  5784                           ;My_header\My_RTCC.h: 232: RTCC_to_caltime(ct);
  5785                           
  5786                           ;incstack = 0
  5787  012A28  C082  F021         	movff	RTCC_from_RTCC@ct,RTCC_to_caltime@ct
  5788  012A2C  C083  F022         	movff	RTCC_from_RTCC@ct+1,RTCC_to_caltime@ct+1
  5789  012A30  ECD4  F08F         	call	_RTCC_to_caltime	;wreg free
  5790                           
  5791                           ;My_header\My_RTCC.h: 233: caltime_to_epoch(ct, ep);
  5792  012A34  C082  F073         	movff	RTCC_from_RTCC@ct,caltime_to_epoch@ct
  5793  012A38  C083  F074         	movff	RTCC_from_RTCC@ct+1,caltime_to_epoch@ct+1
  5794  012A3C  C084  F075         	movff	RTCC_from_RTCC@ep,caltime_to_epoch@ep
  5795  012A40  C085  F076         	movff	RTCC_from_RTCC@ep+1,caltime_to_epoch@ep+1
  5796  012A44  EC16  F085         	call	_caltime_to_epoch	;wreg free
  5797  012A48  0012               	return		;funcret
  5798  012A4A                     __end_of_RTCC_from_RTCC:
  5799                           	opt stack 0
  5800                           tblptru	equ	0xFF8
  5801                           tblptrh	equ	0xFF7
  5802                           tblptrl	equ	0xFF6
  5803                           tablat	equ	0xFF5
  5804                           prodh	equ	0xFF4
  5805                           prodl	equ	0xFF3
  5806                           intcon	equ	0xFF2
  5807                           postinc0	equ	0xFEE
  5808                           wreg	equ	0xFE8
  5809                           indf1	equ	0xFE7
  5810                           postinc1	equ	0xFE6
  5811                           postdec1	equ	0xFE5
  5812                           fsr1h	equ	0xFE2
  5813                           fsr1l	equ	0xFE1
  5814                           indf2	equ	0xFDF
  5815                           postinc2	equ	0xFDE
  5816                           postdec2	equ	0xFDD
  5817                           fsr2h	equ	0xFDA
  5818                           fsr2l	equ	0xFD9
  5819                           status	equ	0xFD8
  5820                           
  5821 ;; *************** function _RTCC_to_caltime *****************
  5822 ;; Defined at:
  5823 ;;		line 121 in file "../My_header\My_RTCC.h"
  5824 ;; Parameters:    Size  Location     Type
  5825 ;;  ct              2   32[COMRAM] PTR struct .
  5826 ;;		 -> caltime_now(7), 
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;  dumy            1   34[COMRAM] unsigned char 
  5829 ;; Return value:  Size  Location     Type
  5830 ;;		None               void
  5831 ;; Registers used:
  5832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5838 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5839 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5841 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5842 ;;Total ram usage:        3 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    5
  5845 ;; This function calls:
  5846 ;;		_x_to_d
  5847 ;; This function is called by:
  5848 ;;		_RTCC_from_RTCC
  5849 ;; This function uses a non-reentrant model
  5850 ;;
  5851                           
  5852                           	psect	text20
  5853  011FA8                     __ptext20:
  5854                           	opt stack 0
  5855  011FA8                     _RTCC_to_caltime:
  5856                           	opt stack 21
  5857                           
  5858                           ;My_header\My_RTCC.h: 122: while (RTCCFGbits.RTCSYNC);
  5859                           
  5860                           ;incstack = 0
  5861  011FA8  D000               	goto	l332
  5862  011FAA                     l332:
  5863  011FAA  010F               	movlb	15	; () banked
  5864  011FAC  B93F               	btfsc	63,4,b	;volatile
  5865  011FAE  D7FD               	goto	l332
  5866                           
  5867                           ; BSR set to: 15
  5868                           ;My_header\My_RTCC.h: 124: RTCCFGbits.RTCPTR0 = 1;
  5869  011FB0  010F               	movlb	15	; () banked
  5870  011FB2  813F               	bsf	63,0,b	;volatile
  5871                           
  5872                           ;My_header\My_RTCC.h: 125: RTCCFGbits.RTCPTR1 = 1;
  5873  011FB4  010F               	movlb	15	; () banked
  5874  011FB6  833F               	bsf	63,1,b	;volatile
  5875                           
  5876                           ; BSR set to: 15
  5877                           ;My_header\My_RTCC.h: 127: ct->YY = x_to_d(RTCVALL);
  5878  011FB8  EE20 F006          	lfsr	2,6
  5879  011FBC  5021               	movf	RTCC_to_caltime@ct,w,c
  5880  011FBE  26D9               	addwf	fsr2l,f,c
  5881  011FC0  5022               	movf	RTCC_to_caltime@ct+1,w,c
  5882  011FC2  22DA               	addwfc	fsr2h,f,c
  5883  011FC4  010F               	movlb	15	; () banked
  5884  011FC6  513A               	movf	58,w,b	;volatile
  5885  011FC8  EC64  F095         	call	_x_to_d
  5886  011FCC  6EDF               	movwf	indf2,c
  5887                           
  5888                           ;My_header\My_RTCC.h: 128: uint8_t dumy = RTCVALH;
  5889  011FCE  CF3B F023          	movff	3899,RTCC_to_caltime@dumy	;volatile
  5890                           
  5891                           ;My_header\My_RTCC.h: 129: ct->DD = x_to_d(RTCVALL);
  5892  011FD2  EE20 F004          	lfsr	2,4
  5893  011FD6  5021               	movf	RTCC_to_caltime@ct,w,c
  5894  011FD8  26D9               	addwf	fsr2l,f,c
  5895  011FDA  5022               	movf	RTCC_to_caltime@ct+1,w,c
  5896  011FDC  22DA               	addwfc	fsr2h,f,c
  5897  011FDE  010F               	movlb	15	; () banked
  5898  011FE0  513A               	movf	58,w,b	;volatile
  5899  011FE2  EC64  F095         	call	_x_to_d
  5900  011FE6  6EDF               	movwf	indf2,c
  5901                           
  5902                           ;My_header\My_RTCC.h: 130: ct->MM = x_to_d(RTCVALH);
  5903  011FE8  EE20 F005          	lfsr	2,5
  5904  011FEC  5021               	movf	RTCC_to_caltime@ct,w,c
  5905  011FEE  26D9               	addwf	fsr2l,f,c
  5906  011FF0  5022               	movf	RTCC_to_caltime@ct+1,w,c
  5907  011FF2  22DA               	addwfc	fsr2h,f,c
  5908  011FF4  010F               	movlb	15	; () banked
  5909  011FF6  513B               	movf	59,w,b	;volatile
  5910  011FF8  EC64  F095         	call	_x_to_d
  5911  011FFC  6EDF               	movwf	indf2,c
  5912                           
  5913                           ;My_header\My_RTCC.h: 131: ct->hh = x_to_d(RTCVALL);
  5914  011FFE  EE20 F002          	lfsr	2,2
  5915  012002  5021               	movf	RTCC_to_caltime@ct,w,c
  5916  012004  26D9               	addwf	fsr2l,f,c
  5917  012006  5022               	movf	RTCC_to_caltime@ct+1,w,c
  5918  012008  22DA               	addwfc	fsr2h,f,c
  5919  01200A  010F               	movlb	15	; () banked
  5920  01200C  513A               	movf	58,w,b	;volatile
  5921  01200E  EC64  F095         	call	_x_to_d
  5922  012012  6EDF               	movwf	indf2,c
  5923                           
  5924                           ;My_header\My_RTCC.h: 132: ct->EE = x_to_d(RTCVALH);
  5925  012014  EE20 F003          	lfsr	2,3
  5926  012018  5021               	movf	RTCC_to_caltime@ct,w,c
  5927  01201A  26D9               	addwf	fsr2l,f,c
  5928  01201C  5022               	movf	RTCC_to_caltime@ct+1,w,c
  5929  01201E  22DA               	addwfc	fsr2h,f,c
  5930  012020  010F               	movlb	15	; () banked
  5931  012022  513B               	movf	59,w,b	;volatile
  5932  012024  EC64  F095         	call	_x_to_d
  5933  012028  6EDF               	movwf	indf2,c
  5934                           
  5935                           ;My_header\My_RTCC.h: 133: ct->ss = x_to_d(RTCVALL);
  5936  01202A  010F               	movlb	15	; () banked
  5937  01202C  513A               	movf	58,w,b	;volatile
  5938  01202E  EC64  F095         	call	_x_to_d
  5939  012032  C021  FFD9         	movff	RTCC_to_caltime@ct,fsr2l
  5940  012036  C022  FFDA         	movff	RTCC_to_caltime@ct+1,fsr2h
  5941  01203A  6EDF               	movwf	indf2,c
  5942                           
  5943                           ;My_header\My_RTCC.h: 134: ct->mm = x_to_d(RTCVALH);
  5944  01203C  EE20 F001          	lfsr	2,1
  5945  012040  5021               	movf	RTCC_to_caltime@ct,w,c
  5946  012042  26D9               	addwf	fsr2l,f,c
  5947  012044  5022               	movf	RTCC_to_caltime@ct+1,w,c
  5948  012046  22DA               	addwfc	fsr2h,f,c
  5949  012048  010F               	movlb	15	; () banked
  5950  01204A  513B               	movf	59,w,b	;volatile
  5951  01204C  EC64  F095         	call	_x_to_d
  5952  012050  6EDF               	movwf	indf2,c
  5953  012052  0012               	return		;funcret
  5954  012054                     __end_of_RTCC_to_caltime:
  5955                           	opt stack 0
  5956                           tblptru	equ	0xFF8
  5957                           tblptrh	equ	0xFF7
  5958                           tblptrl	equ	0xFF6
  5959                           tablat	equ	0xFF5
  5960                           prodh	equ	0xFF4
  5961                           prodl	equ	0xFF3
  5962                           intcon	equ	0xFF2
  5963                           postinc0	equ	0xFEE
  5964                           wreg	equ	0xFE8
  5965                           indf1	equ	0xFE7
  5966                           postinc1	equ	0xFE6
  5967                           postdec1	equ	0xFE5
  5968                           fsr1h	equ	0xFE2
  5969                           fsr1l	equ	0xFE1
  5970                           indf2	equ	0xFDF
  5971                           postinc2	equ	0xFDE
  5972                           postdec2	equ	0xFDD
  5973                           fsr2h	equ	0xFDA
  5974                           fsr2l	equ	0xFD9
  5975                           status	equ	0xFD8
  5976                           
  5977 ;; *************** function _x_to_d *****************
  5978 ;; Defined at:
  5979 ;;		line 81 in file "../My_header\My_RTCC.h"
  5980 ;; Parameters:    Size  Location     Type
  5981 ;;  hex             1    wreg     unsigned char 
  5982 ;; Auto vars:     Size  Location     Type
  5983 ;;  hex             1   31[COMRAM] unsigned char 
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  1    wreg      unsigned char 
  5986 ;; Registers used:
  5987 ;;		wreg, status,2, status,0, prodl, prodh
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5994 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5995 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5996 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5997 ;;Total ram usage:        2 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; Hardware stack levels required when called:    4
  6000 ;; This function calls:
  6001 ;;		Nothing
  6002 ;; This function is called by:
  6003 ;;		_RTCC_to_caltime
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           	psect	text21
  6008  012AC8                     __ptext21:
  6009                           	opt stack 0
  6010  012AC8                     _x_to_d:
  6011                           	opt stack 21
  6012                           
  6013                           ;incstack = 0
  6014                           ;x_to_d@hex stored from wreg
  6015  012AC8  6E20               	movwf	x_to_d@hex,c
  6016                           
  6017                           ;My_header\My_RTCC.h: 82: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
  6018  012ACA  C020  F01F         	movff	x_to_d@hex,??_x_to_d
  6019  012ACE  0E0F               	movlw	15
  6020  012AD0  161F               	andwf	??_x_to_d,f,c
  6021  012AD2  3820               	swapf	x_to_d@hex,w,c
  6022  012AD4  0B0F               	andlw	15
  6023  012AD6  0B0F               	andlw	15
  6024  012AD8  0D0A               	mullw	10
  6025  012ADA  50F3               	movf	prodl,w,c
  6026  012ADC  241F               	addwf	??_x_to_d,w,c
  6027  012ADE  0012               	return	
  6028  012AE0  0012               	return		;funcret
  6029  012AE2                     __end_of_x_to_d:
  6030                           	opt stack 0
  6031                           tblptru	equ	0xFF8
  6032                           tblptrh	equ	0xFF7
  6033                           tblptrl	equ	0xFF6
  6034                           tablat	equ	0xFF5
  6035                           prodh	equ	0xFF4
  6036                           prodl	equ	0xFF3
  6037                           intcon	equ	0xFF2
  6038                           postinc0	equ	0xFEE
  6039                           wreg	equ	0xFE8
  6040                           indf1	equ	0xFE7
  6041                           postinc1	equ	0xFE6
  6042                           postdec1	equ	0xFE5
  6043                           fsr1h	equ	0xFE2
  6044                           fsr1l	equ	0xFE1
  6045                           indf2	equ	0xFDF
  6046                           postinc2	equ	0xFDE
  6047                           postdec2	equ	0xFDD
  6048                           fsr2h	equ	0xFDA
  6049                           fsr2l	equ	0xFD9
  6050                           status	equ	0xFD8
  6051                           
  6052 ;; *************** function _RTCC_from_caltime *****************
  6053 ;; Defined at:
  6054 ;;		line 236 in file "../My_header\My_RTCC.h"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;  ct              2   56[BANK0 ] PTR struct .
  6057 ;;		 -> caltime_now(7), 
  6058 ;;  ep              2   58[BANK0 ] PTR unsigned long 
  6059 ;;		 -> epoch_now(4), 
  6060 ;; Auto vars:     Size  Location     Type
  6061 ;;		None
  6062 ;; Return value:  Size  Location     Type
  6063 ;;		None               void
  6064 ;; Registers used:
  6065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6066 ;; Tracked objects:
  6067 ;;		On entry : 0/0
  6068 ;;		On exit  : 0/0
  6069 ;;		Unchanged: 0/0
  6070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6071 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6074 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6075 ;;Total ram usage:        4 bytes
  6076 ;; Hardware stack levels used:    1
  6077 ;; Hardware stack levels required when called:    7
  6078 ;; This function calls:
  6079 ;;		_caltime_to_RTCC
  6080 ;;		_caltime_to_epoch
  6081 ;;		_epoch_to_caltime
  6082 ;; This function is called by:
  6083 ;;		_command_at_hand
  6084 ;; This function uses a non-reentrant model
  6085 ;;
  6086                           
  6087                           	psect	text22
  6088  012926                     __ptext22:
  6089                           	opt stack 0
  6090  012926                     _RTCC_from_caltime:
  6091                           	opt stack 19
  6092                           
  6093                           ;My_header\My_RTCC.h: 237: caltime_to_epoch(ct, ep);
  6094                           
  6095                           ;incstack = 0
  6096  012926  C098  F073         	movff	RTCC_from_caltime@ct,caltime_to_epoch@ct
  6097  01292A  C099  F074         	movff	RTCC_from_caltime@ct+1,caltime_to_epoch@ct+1
  6098  01292E  C09A  F075         	movff	RTCC_from_caltime@ep,caltime_to_epoch@ep
  6099  012932  C09B  F076         	movff	RTCC_from_caltime@ep+1,caltime_to_epoch@ep+1
  6100  012936  EC16  F085         	call	_caltime_to_epoch	;wreg free
  6101                           
  6102                           ;My_header\My_RTCC.h: 238: epoch_to_caltime(ct, ep);
  6103  01293A  C098  F088         	movff	RTCC_from_caltime@ct,epoch_to_caltime@ct
  6104  01293E  C099  F089         	movff	RTCC_from_caltime@ct+1,epoch_to_caltime@ct+1
  6105  012942  C09A  F08A         	movff	RTCC_from_caltime@ep,epoch_to_caltime@ep
  6106  012946  C09B  F08B         	movff	RTCC_from_caltime@ep+1,epoch_to_caltime@ep+1
  6107  01294A  ECA2  F088         	call	_epoch_to_caltime	;wreg free
  6108                           
  6109                           ;My_header\My_RTCC.h: 239: caltime_to_RTCC(ct);
  6110  01294E  C098  F064         	movff	RTCC_from_caltime@ct,caltime_to_RTCC@ct
  6111  012952  C099  F065         	movff	RTCC_from_caltime@ct+1,caltime_to_RTCC@ct+1
  6112  012956  EC1D  F08C         	call	_caltime_to_RTCC	;wreg free
  6113  01295A  0012               	return		;funcret
  6114  01295C                     __end_of_RTCC_from_caltime:
  6115                           	opt stack 0
  6116                           tblptru	equ	0xFF8
  6117                           tblptrh	equ	0xFF7
  6118                           tblptrl	equ	0xFF6
  6119                           tablat	equ	0xFF5
  6120                           prodh	equ	0xFF4
  6121                           prodl	equ	0xFF3
  6122                           intcon	equ	0xFF2
  6123                           postinc0	equ	0xFEE
  6124                           wreg	equ	0xFE8
  6125                           indf1	equ	0xFE7
  6126                           postinc1	equ	0xFE6
  6127                           postdec1	equ	0xFE5
  6128                           fsr1h	equ	0xFE2
  6129                           fsr1l	equ	0xFE1
  6130                           indf2	equ	0xFDF
  6131                           postinc2	equ	0xFDE
  6132                           postdec2	equ	0xFDD
  6133                           fsr2h	equ	0xFDA
  6134                           fsr2l	equ	0xFD9
  6135                           status	equ	0xFD8
  6136                           
  6137 ;; *************** function _caltime_to_epoch *****************
  6138 ;; Defined at:
  6139 ;;		line 211 in file "../My_header\My_RTCC.h"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;  ct              2   19[BANK0 ] PTR struct .
  6142 ;;		 -> caltime_now(7), 
  6143 ;;  ep              2   21[BANK0 ] PTR unsigned long 
  6144 ;;		 -> epoch_now(4), 
  6145 ;; Auto vars:     Size  Location     Type
  6146 ;;  month           1   33[BANK0 ] unsigned char 
  6147 ;;  month           1   28[BANK0 ] unsigned char 
  6148 ;;  year            1   27[BANK0 ] unsigned char 
  6149 ;;  epoch           4   29[BANK0 ] unsigned long 
  6150 ;; Return value:  Size  Location     Type
  6151 ;;		None               void
  6152 ;; Registers used:
  6153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6154 ;; Tracked objects:
  6155 ;;		On entry : 0/0
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6159 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6160 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6161 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6162 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6163 ;;Total ram usage:       15 bytes
  6164 ;; Hardware stack levels used:    1
  6165 ;; Hardware stack levels required when called:    6
  6166 ;; This function calls:
  6167 ;;		___lmul
  6168 ;;		_month_length
  6169 ;; This function is called by:
  6170 ;;		_RTCC_from_RTCC
  6171 ;;		_RTCC_from_caltime
  6172 ;; This function uses a non-reentrant model
  6173 ;;
  6174                           
  6175                           	psect	text23
  6176  010A2C                     __ptext23:
  6177                           	opt stack 0
  6178  010A2C                     _caltime_to_epoch:
  6179                           	opt stack 20
  6180                           
  6181                           ;My_header\My_RTCC.h: 212: epoch_t epoch = 0;
  6182                           
  6183                           ;incstack = 0
  6184  010A2C  0E00               	movlw	0
  6185  010A2E  0100               	movlb	0	; () banked
  6186  010A30  6F7D               	movwf	caltime_to_epoch@epoch& (0+255),b
  6187  010A32  0E00               	movlw	0
  6188  010A34  6F7E               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
  6189  010A36  0E00               	movlw	0
  6190  010A38  6F7F               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
  6191  010A3A  0E00               	movlw	0
  6192  010A3C  6F80               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
  6193                           
  6194                           ;My_header\My_RTCC.h: 213: for (uint8_t year = 0; year < ct->YY; year++) {
  6195  010A3E  0E00               	movlw	0
  6196  010A40  0100               	movlb	0	; () banked
  6197  010A42  6F7B               	movwf	caltime_to_epoch@year& (0+255),b
  6198  010A44  D038               	goto	l4280
  6199  010A46                     l4266:
  6200                           
  6201                           ; BSR set to: 0
  6202                           ;My_header\My_RTCC.h: 214: for (uint8_t month = 1; month <= 12; month++) {
  6203  010A46  0E01               	movlw	1
  6204  010A48  0100               	movlb	0	; () banked
  6205  010A4A  6F81               	movwf	caltime_to_epoch@month& (0+255),b
  6206  010A4C                     l4268:
  6207                           
  6208                           ; BSR set to: 0
  6209  010A4C  0E0C               	movlw	12
  6210  010A4E  0100               	movlb	0	; () banked
  6211  010A50  6581               	cpfsgt	caltime_to_epoch@month& (0+255),b
  6212  010A52  D001               	goto	l4272
  6213                           
  6214                           ; BSR set to: 0
  6215  010A54  D02D               	goto	l4278
  6216  010A56                     l4272:
  6217                           
  6218                           ; BSR set to: 0
  6219                           ;My_header\My_RTCC.h: 215: epoch += ((epoch_t)60*60*24) * month_length(year, month);
  6220  010A56  C081  F023         	movff	caltime_to_epoch@month,month_length@month
  6221  010A5A  0100               	movlb	0	; () banked
  6222  010A5C  517B               	movf	caltime_to_epoch@year& (0+255),w,b
  6223  010A5E  EC86  F08C         	call	_month_length
  6224  010A62  0100               	movlb	0	; () banked
  6225  010A64  6F77               	movwf	??_caltime_to_epoch& (0+255),b
  6226  010A66  0100               	movlb	0	; () banked
  6227  010A68  5177               	movf	??_caltime_to_epoch& (0+255),w,b
  6228  010A6A  0100               	movlb	0	; () banked
  6229  010A6C  6F67               	movwf	___lmul@multiplier& (0+255),b
  6230  010A6E  6B68               	clrf	(___lmul@multiplier+1)& (0+255),b
  6231  010A70  6B69               	clrf	(___lmul@multiplier+2)& (0+255),b
  6232  010A72  6B6A               	clrf	(___lmul@multiplier+3)& (0+255),b
  6233  010A74  0E80               	movlw	128
  6234  010A76  0100               	movlb	0	; () banked
  6235  010A78  6F6B               	movwf	___lmul@multiplicand& (0+255),b
  6236  010A7A  0E51               	movlw	81
  6237  010A7C  6F6C               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6238  010A7E  0E01               	movlw	1
  6239  010A80  6F6D               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6240  010A82  0E00               	movlw	0
  6241  010A84  6F6E               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6242  010A86  ECB2  F092         	call	___lmul	;wreg free
  6243  010A8A  0100               	movlb	0	; () banked
  6244  010A8C  5167               	movf	?___lmul& (0+255),w,b
  6245  010A8E  0100               	movlb	0	; () banked
  6246  010A90  277D               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6247  010A92  0100               	movlb	0	; () banked
  6248  010A94  5168               	movf	(?___lmul+1)& (0+255),w,b
  6249  010A96  0100               	movlb	0	; () banked
  6250  010A98  237E               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6251  010A9A  0100               	movlb	0	; () banked
  6252  010A9C  5169               	movf	(?___lmul+2)& (0+255),w,b
  6253  010A9E  0100               	movlb	0	; () banked
  6254  010AA0  237F               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6255  010AA2  0100               	movlb	0	; () banked
  6256  010AA4  516A               	movf	(?___lmul+3)& (0+255),w,b
  6257  010AA6  0100               	movlb	0	; () banked
  6258  010AA8  2380               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6259                           
  6260                           ; BSR set to: 0
  6261  010AAA  0100               	movlb	0	; () banked
  6262  010AAC  2B81               	incf	caltime_to_epoch@month& (0+255),f,b
  6263  010AAE  D7CE               	goto	l4268
  6264  010AB0                     l4278:
  6265                           
  6266                           ; BSR set to: 0
  6267  010AB0  0100               	movlb	0	; () banked
  6268  010AB2  2B7B               	incf	caltime_to_epoch@year& (0+255),f,b
  6269  010AB4  D000               	goto	l4280
  6270  010AB6                     l4280:
  6271                           
  6272                           ; BSR set to: 0
  6273  010AB6  0100               	movlb	0	; () banked
  6274  010AB8  EE20 F006          	lfsr	2,6
  6275  010ABC  5173               	movf	caltime_to_epoch@ct& (0+255),w,b
  6276  010ABE  26D9               	addwf	fsr2l,f,c
  6277  010AC0  5174               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6278  010AC2  22DA               	addwfc	fsr2h,f,c
  6279  010AC4  50DE               	movf	postinc2,w,c
  6280  010AC6  0100               	movlb	0	; () banked
  6281  010AC8  5D7B               	subwf	caltime_to_epoch@year& (0+255),w,b
  6282  010ACA  A0D8               	btfss	status,0,c
  6283  010ACC  D7BC               	goto	l4266
  6284                           
  6285                           ; BSR set to: 0
  6286                           ;My_header\My_RTCC.h: 216: }
  6287                           ;My_header\My_RTCC.h: 217: }
  6288                           ;My_header\My_RTCC.h: 218: for (uint8_t month = 1; month < ct->MM; month++) {
  6289                           
  6290                           ; BSR set to: 0
  6291  010ACE  0E01               	movlw	1
  6292  010AD0  0100               	movlb	0	; () banked
  6293  010AD2  6F7C               	movwf	caltime_to_epoch@month_2069& (0+255),b
  6294  010AD4  D033               	goto	l4288
  6295  010AD6                     l4284:
  6296                           
  6297                           ; BSR set to: 0
  6298                           ;My_header\My_RTCC.h: 219: epoch += ((epoch_t)60*60*24) * month_length(ct->YY, month);
  6299  010AD6  C07C  F023         	movff	caltime_to_epoch@month_2069,month_length@month
  6300  010ADA  0100               	movlb	0	; () banked
  6301  010ADC  EE20 F006          	lfsr	2,6
  6302  010AE0  5173               	movf	caltime_to_epoch@ct& (0+255),w,b
  6303  010AE2  26D9               	addwf	fsr2l,f,c
  6304  010AE4  5174               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6305  010AE6  22DA               	addwfc	fsr2h,f,c
  6306  010AE8  50DF               	movf	indf2,w,c
  6307  010AEA  EC86  F08C         	call	_month_length
  6308  010AEE  0100               	movlb	0	; () banked
  6309  010AF0  6F77               	movwf	??_caltime_to_epoch& (0+255),b
  6310  010AF2  0100               	movlb	0	; () banked
  6311  010AF4  5177               	movf	??_caltime_to_epoch& (0+255),w,b
  6312  010AF6  0100               	movlb	0	; () banked
  6313  010AF8  6F67               	movwf	___lmul@multiplier& (0+255),b
  6314  010AFA  6B68               	clrf	(___lmul@multiplier+1)& (0+255),b
  6315  010AFC  6B69               	clrf	(___lmul@multiplier+2)& (0+255),b
  6316  010AFE  6B6A               	clrf	(___lmul@multiplier+3)& (0+255),b
  6317  010B00  0E80               	movlw	128
  6318  010B02  0100               	movlb	0	; () banked
  6319  010B04  6F6B               	movwf	___lmul@multiplicand& (0+255),b
  6320  010B06  0E51               	movlw	81
  6321  010B08  6F6C               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6322  010B0A  0E01               	movlw	1
  6323  010B0C  6F6D               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6324  010B0E  0E00               	movlw	0
  6325  010B10  6F6E               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6326  010B12  ECB2  F092         	call	___lmul	;wreg free
  6327  010B16  0100               	movlb	0	; () banked
  6328  010B18  5167               	movf	?___lmul& (0+255),w,b
  6329  010B1A  0100               	movlb	0	; () banked
  6330  010B1C  277D               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6331  010B1E  0100               	movlb	0	; () banked
  6332  010B20  5168               	movf	(?___lmul+1)& (0+255),w,b
  6333  010B22  0100               	movlb	0	; () banked
  6334  010B24  237E               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6335  010B26  0100               	movlb	0	; () banked
  6336  010B28  5169               	movf	(?___lmul+2)& (0+255),w,b
  6337  010B2A  0100               	movlb	0	; () banked
  6338  010B2C  237F               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6339  010B2E  0100               	movlb	0	; () banked
  6340  010B30  516A               	movf	(?___lmul+3)& (0+255),w,b
  6341  010B32  0100               	movlb	0	; () banked
  6342  010B34  2380               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6343                           
  6344                           ; BSR set to: 0
  6345  010B36  0100               	movlb	0	; () banked
  6346  010B38  2B7C               	incf	caltime_to_epoch@month_2069& (0+255),f,b
  6347  010B3A  D000               	goto	l4288
  6348  010B3C                     l4288:
  6349                           
  6350                           ; BSR set to: 0
  6351  010B3C  0100               	movlb	0	; () banked
  6352  010B3E  EE20 F005          	lfsr	2,5
  6353  010B42  5173               	movf	caltime_to_epoch@ct& (0+255),w,b
  6354  010B44  26D9               	addwf	fsr2l,f,c
  6355  010B46  5174               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6356  010B48  22DA               	addwfc	fsr2h,f,c
  6357  010B4A  50DE               	movf	postinc2,w,c
  6358  010B4C  0100               	movlb	0	; () banked
  6359  010B4E  5D7C               	subwf	caltime_to_epoch@month_2069& (0+255),w,b
  6360  010B50  A0D8               	btfss	status,0,c
  6361  010B52  D7C1               	goto	l4284
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;My_header\My_RTCC.h: 220: }
  6365                           ;My_header\My_RTCC.h: 221: epoch += ((epoch_t)60*60*24) * (ct->DD - 1);
  6366                           
  6367                           ; BSR set to: 0
  6368  010B54  0EFF               	movlw	255
  6369  010B56  0100               	movlb	0	; () banked
  6370  010B58  6F77               	movwf	??_caltime_to_epoch& (0+255),b
  6371  010B5A  0EFF               	movlw	255
  6372  010B5C  0100               	movlb	0	; () banked
  6373  010B5E  6F78               	movwf	(??_caltime_to_epoch+1)& (0+255),b
  6374  010B60  0100               	movlb	0	; () banked
  6375  010B62  EE20 F004          	lfsr	2,4
  6376  010B66  5173               	movf	caltime_to_epoch@ct& (0+255),w,b
  6377  010B68  26D9               	addwf	fsr2l,f,c
  6378  010B6A  5174               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6379  010B6C  22DA               	addwfc	fsr2h,f,c
  6380  010B6E  50DF               	movf	indf2,w,c
  6381  010B70  0100               	movlb	0	; () banked
  6382  010B72  6F79               	movwf	(??_caltime_to_epoch+2)& (0+255),b
  6383  010B74  6B7A               	clrf	(??_caltime_to_epoch+3)& (0+255),b
  6384  010B76  0100               	movlb	0	; () banked
  6385  010B78  5177               	movf	??_caltime_to_epoch& (0+255),w,b
  6386  010B7A  0100               	movlb	0	; () banked
  6387  010B7C  2779               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
  6388  010B7E  0100               	movlb	0	; () banked
  6389  010B80  5178               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  6390  010B82  0100               	movlb	0	; () banked
  6391  010B84  237A               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
  6392  010B86  C079  F067         	movff	??_caltime_to_epoch+2,___lmul@multiplier
  6393  010B8A  C07A  F068         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
  6394  010B8E  0100               	movlb	0	; () banked
  6395  010B90  0E00               	movlw	0
  6396  010B92  BF68               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  6397  010B94  0EFF               	movlw	-1
  6398  010B96  6F69               	movwf	(___lmul@multiplier+2)& (0+255),b
  6399  010B98  6F6A               	movwf	(___lmul@multiplier+3)& (0+255),b
  6400  010B9A  0E80               	movlw	128
  6401  010B9C  0100               	movlb	0	; () banked
  6402  010B9E  6F6B               	movwf	___lmul@multiplicand& (0+255),b
  6403  010BA0  0E51               	movlw	81
  6404  010BA2  6F6C               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6405  010BA4  0E01               	movlw	1
  6406  010BA6  6F6D               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6407  010BA8  0E00               	movlw	0
  6408  010BAA  6F6E               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6409  010BAC  ECB2  F092         	call	___lmul	;wreg free
  6410  010BB0  0100               	movlb	0	; () banked
  6411  010BB2  5167               	movf	?___lmul& (0+255),w,b
  6412  010BB4  0100               	movlb	0	; () banked
  6413  010BB6  277D               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6414  010BB8  0100               	movlb	0	; () banked
  6415  010BBA  5168               	movf	(?___lmul+1)& (0+255),w,b
  6416  010BBC  0100               	movlb	0	; () banked
  6417  010BBE  237E               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6418  010BC0  0100               	movlb	0	; () banked
  6419  010BC2  5169               	movf	(?___lmul+2)& (0+255),w,b
  6420  010BC4  0100               	movlb	0	; () banked
  6421  010BC6  237F               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6422  010BC8  0100               	movlb	0	; () banked
  6423  010BCA  516A               	movf	(?___lmul+3)& (0+255),w,b
  6424  010BCC  0100               	movlb	0	; () banked
  6425  010BCE  2380               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6426                           
  6427                           ;My_header\My_RTCC.h: 222: epoch += ((epoch_t)60*60) * ct->hh;
  6428  010BD0  0100               	movlb	0	; () banked
  6429  010BD2  EE20 F002          	lfsr	2,2
  6430  010BD6  5173               	movf	caltime_to_epoch@ct& (0+255),w,b
  6431  010BD8  26D9               	addwf	fsr2l,f,c
  6432  010BDA  5174               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6433  010BDC  22DA               	addwfc	fsr2h,f,c
  6434  010BDE  50DF               	movf	indf2,w,c
  6435  010BE0  0100               	movlb	0	; () banked
  6436  010BE2  6F77               	movwf	??_caltime_to_epoch& (0+255),b
  6437  010BE4  0100               	movlb	0	; () banked
  6438  010BE6  5177               	movf	??_caltime_to_epoch& (0+255),w,b
  6439  010BE8  0100               	movlb	0	; () banked
  6440  010BEA  6F67               	movwf	___lmul@multiplier& (0+255),b
  6441  010BEC  6B68               	clrf	(___lmul@multiplier+1)& (0+255),b
  6442  010BEE  6B69               	clrf	(___lmul@multiplier+2)& (0+255),b
  6443  010BF0  6B6A               	clrf	(___lmul@multiplier+3)& (0+255),b
  6444  010BF2  0E10               	movlw	16
  6445  010BF4  0100               	movlb	0	; () banked
  6446  010BF6  6F6B               	movwf	___lmul@multiplicand& (0+255),b
  6447  010BF8  0E0E               	movlw	14
  6448  010BFA  6F6C               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6449  010BFC  0E00               	movlw	0
  6450  010BFE  6F6D               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6451  010C00  0E00               	movlw	0
  6452  010C02  6F6E               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6453  010C04  ECB2  F092         	call	___lmul	;wreg free
  6454  010C08  0100               	movlb	0	; () banked
  6455  010C0A  5167               	movf	?___lmul& (0+255),w,b
  6456  010C0C  0100               	movlb	0	; () banked
  6457  010C0E  277D               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6458  010C10  0100               	movlb	0	; () banked
  6459  010C12  5168               	movf	(?___lmul+1)& (0+255),w,b
  6460  010C14  0100               	movlb	0	; () banked
  6461  010C16  237E               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6462  010C18  0100               	movlb	0	; () banked
  6463  010C1A  5169               	movf	(?___lmul+2)& (0+255),w,b
  6464  010C1C  0100               	movlb	0	; () banked
  6465  010C1E  237F               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6466  010C20  0100               	movlb	0	; () banked
  6467  010C22  516A               	movf	(?___lmul+3)& (0+255),w,b
  6468  010C24  0100               	movlb	0	; () banked
  6469  010C26  2380               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6470                           
  6471                           ;My_header\My_RTCC.h: 223: epoch += ((epoch_t)60) * ct->mm;
  6472  010C28  0100               	movlb	0	; () banked
  6473  010C2A  EE20 F001          	lfsr	2,1
  6474  010C2E  5173               	movf	caltime_to_epoch@ct& (0+255),w,b
  6475  010C30  26D9               	addwf	fsr2l,f,c
  6476  010C32  5174               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6477  010C34  22DA               	addwfc	fsr2h,f,c
  6478  010C36  50DF               	movf	indf2,w,c
  6479  010C38  0100               	movlb	0	; () banked
  6480  010C3A  6F77               	movwf	??_caltime_to_epoch& (0+255),b
  6481  010C3C  0100               	movlb	0	; () banked
  6482  010C3E  5177               	movf	??_caltime_to_epoch& (0+255),w,b
  6483  010C40  0100               	movlb	0	; () banked
  6484  010C42  6F67               	movwf	___lmul@multiplier& (0+255),b
  6485  010C44  6B68               	clrf	(___lmul@multiplier+1)& (0+255),b
  6486  010C46  6B69               	clrf	(___lmul@multiplier+2)& (0+255),b
  6487  010C48  6B6A               	clrf	(___lmul@multiplier+3)& (0+255),b
  6488  010C4A  0E3C               	movlw	60
  6489  010C4C  0100               	movlb	0	; () banked
  6490  010C4E  6F6B               	movwf	___lmul@multiplicand& (0+255),b
  6491  010C50  0E00               	movlw	0
  6492  010C52  6F6C               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6493  010C54  0E00               	movlw	0
  6494  010C56  6F6D               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6495  010C58  0E00               	movlw	0
  6496  010C5A  6F6E               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6497  010C5C  ECB2  F092         	call	___lmul	;wreg free
  6498  010C60  0100               	movlb	0	; () banked
  6499  010C62  5167               	movf	?___lmul& (0+255),w,b
  6500  010C64  0100               	movlb	0	; () banked
  6501  010C66  277D               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6502  010C68  0100               	movlb	0	; () banked
  6503  010C6A  5168               	movf	(?___lmul+1)& (0+255),w,b
  6504  010C6C  0100               	movlb	0	; () banked
  6505  010C6E  237E               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6506  010C70  0100               	movlb	0	; () banked
  6507  010C72  5169               	movf	(?___lmul+2)& (0+255),w,b
  6508  010C74  0100               	movlb	0	; () banked
  6509  010C76  237F               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6510  010C78  0100               	movlb	0	; () banked
  6511  010C7A  516A               	movf	(?___lmul+3)& (0+255),w,b
  6512  010C7C  0100               	movlb	0	; () banked
  6513  010C7E  2380               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6514                           
  6515                           ; BSR set to: 0
  6516                           ;My_header\My_RTCC.h: 224: epoch += ct->ss;
  6517  010C80  C073  FFD9         	movff	caltime_to_epoch@ct,fsr2l
  6518  010C84  C074  FFDA         	movff	caltime_to_epoch@ct+1,fsr2h
  6519  010C88  50DF               	movf	indf2,w,c
  6520  010C8A  0100               	movlb	0	; () banked
  6521  010C8C  6F77               	movwf	??_caltime_to_epoch& (0+255),b
  6522  010C8E  0100               	movlb	0	; () banked
  6523  010C90  5177               	movf	??_caltime_to_epoch& (0+255),w,b
  6524  010C92  0100               	movlb	0	; () banked
  6525  010C94  277D               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6526  010C96  0E00               	movlw	0
  6527  010C98  237E               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6528  010C9A  237F               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6529  010C9C  2380               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6530                           
  6531                           ; BSR set to: 0
  6532                           ;My_header\My_RTCC.h: 226: *ep = epoch;
  6533  010C9E  C075  FFD9         	movff	caltime_to_epoch@ep,fsr2l
  6534  010CA2  C076  FFDA         	movff	caltime_to_epoch@ep+1,fsr2h
  6535  010CA6  C07D  FFDE         	movff	caltime_to_epoch@epoch,postinc2
  6536  010CAA  C07E  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
  6537  010CAE  C07F  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
  6538  010CB2  C080  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
  6539                           
  6540                           ; BSR set to: 0
  6541  010CB6  0012               	return		;funcret
  6542  010CB8                     __end_of_caltime_to_epoch:
  6543                           	opt stack 0
  6544                           tblptru	equ	0xFF8
  6545                           tblptrh	equ	0xFF7
  6546                           tblptrl	equ	0xFF6
  6547                           tablat	equ	0xFF5
  6548                           prodh	equ	0xFF4
  6549                           prodl	equ	0xFF3
  6550                           intcon	equ	0xFF2
  6551                           postinc0	equ	0xFEE
  6552                           wreg	equ	0xFE8
  6553                           indf1	equ	0xFE7
  6554                           postinc1	equ	0xFE6
  6555                           postdec1	equ	0xFE5
  6556                           fsr1h	equ	0xFE2
  6557                           fsr1l	equ	0xFE1
  6558                           indf2	equ	0xFDF
  6559                           postinc2	equ	0xFDE
  6560                           postdec2	equ	0xFDD
  6561                           fsr2h	equ	0xFDA
  6562                           fsr2l	equ	0xFD9
  6563                           status	equ	0xFD8
  6564                           
  6565 ;; *************** function _PWM_set *****************
  6566 ;; Defined at:
  6567 ;;		line 117 in file "PIC18F27J53-killifish_light03.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;  color           1    wreg     unsigned char 
  6570 ;;  value           2   14[BANK0 ] unsigned int 
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;  color           1   34[COMRAM] unsigned char 
  6573 ;; Return value:  Size  Location     Type
  6574 ;;		None               void
  6575 ;; Registers used:
  6576 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6577 ;; Tracked objects:
  6578 ;;		On entry : 0/0
  6579 ;;		On exit  : 0/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6582 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6583 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6584 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6585 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6586 ;;Total ram usage:        5 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; Hardware stack levels required when called:    5
  6589 ;; This function calls:
  6590 ;;		___lwdiv
  6591 ;;		___wmul
  6592 ;; This function is called by:
  6593 ;;		_command_operation
  6594 ;;		_main
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           	psect	text24
  6599  01150A                     __ptext24:
  6600                           	opt stack 0
  6601  01150A                     _PWM_set:
  6602                           	opt stack 23
  6603                           
  6604                           ; BSR set to: 0
  6605                           ;incstack = 0
  6606                           ;PWM_set@color stored from wreg
  6607  01150A  6E23               	movwf	PWM_set@color,c
  6608                           
  6609                           ;PIC18F27J53-killifish_light03.c: 118: value = value * value / 100;
  6610  01150C  C06E  F060         	movff	PWM_set@value,___wmul@multiplier
  6611  011510  C06F  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
  6612  011514  C06E  F062         	movff	PWM_set@value,___wmul@multiplicand
  6613  011518  C06F  F063         	movff	PWM_set@value+1,___wmul@multiplicand+1
  6614  01151C  EC77  F094         	call	___wmul	;wreg free
  6615  011520  C060  F066         	movff	?___wmul,___lwdiv@dividend
  6616  011524  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  6617  011528  0E00               	movlw	0
  6618  01152A  0100               	movlb	0	; () banked
  6619  01152C  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6620  01152E  0E64               	movlw	100
  6621  011530  6F68               	movwf	___lwdiv@divisor& (0+255),b
  6622  011532  EC71  F092         	call	___lwdiv	;wreg free
  6623  011536  C066  F06E         	movff	?___lwdiv,PWM_set@value
  6624  01153A  C067  F06F         	movff	?___lwdiv+1,PWM_set@value+1
  6625                           
  6626                           ;PIC18F27J53-killifish_light03.c: 119: value = value * value / 100;
  6627  01153E  C06E  F060         	movff	PWM_set@value,___wmul@multiplier
  6628  011542  C06F  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
  6629  011546  C06E  F062         	movff	PWM_set@value,___wmul@multiplicand
  6630  01154A  C06F  F063         	movff	PWM_set@value+1,___wmul@multiplicand+1
  6631  01154E  EC77  F094         	call	___wmul	;wreg free
  6632  011552  C060  F066         	movff	?___wmul,___lwdiv@dividend
  6633  011556  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  6634  01155A  0E00               	movlw	0
  6635  01155C  0100               	movlb	0	; () banked
  6636  01155E  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6637  011560  0E64               	movlw	100
  6638  011562  6F68               	movwf	___lwdiv@divisor& (0+255),b
  6639  011564  EC71  F092         	call	___lwdiv	;wreg free
  6640  011568  C066  F06E         	movff	?___lwdiv,PWM_set@value
  6641  01156C  C067  F06F         	movff	?___lwdiv+1,PWM_set@value+1
  6642                           
  6643                           ;PIC18F27J53-killifish_light03.c: 120: switch (color) {
  6644  011570  D05B               	goto	l4544
  6645  011572                     l4526:
  6646                           
  6647                           ;PIC18F27J53-killifish_light03.c: 122: if (value < 100 / 4) {
  6648  011572  0100               	movlb	0	; () banked
  6649  011574  516F               	movf	(PWM_set@value+1)& (0+255),w,b
  6650  011576  E107               	bnz	l4530
  6651  011578  0E19               	movlw	25
  6652  01157A  0100               	movlb	0	; () banked
  6653  01157C  5D6E               	subwf	PWM_set@value& (0+255),w,b
  6654  01157E  A0D8               	btfss	status,0,c
  6655  011580  D075               	goto	l4564
  6656  011582  D001               	goto	l4530
  6657                           
  6658                           ; BSR set to: 0
  6659                           ;PIC18F27J53-killifish_light03.c: 124: } else {
  6660  011584  D073               	goto	l4564
  6661  011586                     l4530:
  6662                           
  6663                           ; BSR set to: 0
  6664                           ;PIC18F27J53-killifish_light03.c: 125: value = 2 * (value - 100 / 4) / 3 + 100 / 4;
  6665  011586  C06E  F070         	movff	PWM_set@value,??_PWM_set
  6666  01158A  C06F  F071         	movff	PWM_set@value+1,??_PWM_set+1
  6667  01158E  90D8               	bcf	status,0,c
  6668  011590  0100               	movlb	0	; () banked
  6669  011592  3770               	rlcf	??_PWM_set& (0+255),f,b
  6670  011594  3771               	rlcf	(??_PWM_set+1)& (0+255),f,b
  6671  011596  0ECE               	movlw	206
  6672  011598  0100               	movlb	0	; () banked
  6673  01159A  2570               	addwf	??_PWM_set& (0+255),w,b
  6674  01159C  0100               	movlb	0	; () banked
  6675  01159E  6F66               	movwf	___lwdiv@dividend& (0+255),b
  6676  0115A0  0EFF               	movlw	255
  6677  0115A2  0100               	movlb	0	; () banked
  6678  0115A4  2171               	addwfc	(??_PWM_set+1)& (0+255),w,b
  6679  0115A6  0100               	movlb	0	; () banked
  6680  0115A8  6F67               	movwf	(___lwdiv@dividend+1)& (0+255),b
  6681  0115AA  0E00               	movlw	0
  6682  0115AC  0100               	movlb	0	; () banked
  6683  0115AE  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6684  0115B0  0E03               	movlw	3
  6685  0115B2  6F68               	movwf	___lwdiv@divisor& (0+255),b
  6686  0115B4  EC71  F092         	call	___lwdiv	;wreg free
  6687  0115B8  0E19               	movlw	25
  6688  0115BA  0100               	movlb	0	; () banked
  6689  0115BC  2566               	addwf	?___lwdiv& (0+255),w,b
  6690  0115BE  0100               	movlb	0	; () banked
  6691  0115C0  6F6E               	movwf	PWM_set@value& (0+255),b
  6692  0115C2  0E00               	movlw	0
  6693  0115C4  0100               	movlb	0	; () banked
  6694  0115C6  2167               	addwfc	(?___lwdiv+1)& (0+255),w,b
  6695  0115C8  D02C               	goto	L2
  6696                           
  6697                           ; BSR set to: 0
  6698                           ;PIC18F27J53-killifish_light03.c: 133: }
  6699                           ;PIC18F27J53-killifish_light03.c: 134: break;
  6700                           
  6701                           ; BSR set to: 0
  6702                           
  6703                           ; BSR set to: 0
  6704                           ;PIC18F27J53-killifish_light03.c: 131: } else {
  6705                           
  6706                           ; BSR set to: 0
  6707                           
  6708                           ; BSR set to: 0
  6709                           
  6710                           ;PIC18F27J53-killifish_light03.c: 128: case 1:
  6711                           
  6712                           ; BSR set to: 0
  6713                           ;PIC18F27J53-killifish_light03.c: 126: }
  6714                           ;PIC18F27J53-killifish_light03.c: 127: break;
  6715  0115CA  D050               	goto	l4564
  6716  0115CC                     l4536:
  6717                           
  6718                           ;PIC18F27J53-killifish_light03.c: 136: if (value < 100 / 4) {
  6719  0115CC  0100               	movlb	0	; () banked
  6720  0115CE  516F               	movf	(PWM_set@value+1)& (0+255),w,b
  6721  0115D0  E107               	bnz	l4540
  6722  0115D2  0E19               	movlw	25
  6723  0115D4  0100               	movlb	0	; () banked
  6724  0115D6  5D6E               	subwf	PWM_set@value& (0+255),w,b
  6725  0115D8  A0D8               	btfss	status,0,c
  6726  0115DA  D048               	goto	l4564
  6727  0115DC  D001               	goto	l4540
  6728                           
  6729                           ; BSR set to: 0
  6730                           ;PIC18F27J53-killifish_light03.c: 138: } else {
  6731  0115DE  D046               	goto	l4564
  6732  0115E0                     l4540:
  6733                           
  6734                           ; BSR set to: 0
  6735                           ;PIC18F27J53-killifish_light03.c: 139: value = 3 * (value - 100 / 4) / 4 + 100 / 4;
  6736  0115E0  0EE7               	movlw	231
  6737  0115E2  0100               	movlb	0	; () banked
  6738  0115E4  256E               	addwf	PWM_set@value& (0+255),w,b
  6739  0115E6  0100               	movlb	0	; () banked
  6740  0115E8  6F60               	movwf	___wmul@multiplier& (0+255),b
  6741  0115EA  0EFF               	movlw	255
  6742  0115EC  0100               	movlb	0	; () banked
  6743  0115EE  216F               	addwfc	(PWM_set@value+1)& (0+255),w,b
  6744  0115F0  0100               	movlb	0	; () banked
  6745  0115F2  6F61               	movwf	(___wmul@multiplier+1)& (0+255),b
  6746  0115F4  0E00               	movlw	0
  6747  0115F6  0100               	movlb	0	; () banked
  6748  0115F8  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6749  0115FA  0E03               	movlw	3
  6750  0115FC  6F62               	movwf	___wmul@multiplicand& (0+255),b
  6751  0115FE  EC77  F094         	call	___wmul	;wreg free
  6752  011602  0100               	movlb	0	; () banked
  6753  011604  90D8               	bcf	status,0,c
  6754  011606  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  6755  011608  3360               	rrcf	?___wmul& (0+255),f,b
  6756  01160A  0100               	movlb	0	; () banked
  6757  01160C  90D8               	bcf	status,0,c
  6758  01160E  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  6759  011610  3360               	rrcf	?___wmul& (0+255),f,b
  6760  011612  0E19               	movlw	25
  6761  011614  0100               	movlb	0	; () banked
  6762  011616  2560               	addwf	?___wmul& (0+255),w,b
  6763  011618  0100               	movlb	0	; () banked
  6764  01161A  6F6E               	movwf	PWM_set@value& (0+255),b
  6765  01161C  0E00               	movlw	0
  6766  01161E  0100               	movlb	0	; () banked
  6767  011620  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  6768  011622                     L2:
  6769  011622  0100               	movlb	0	; () banked
  6770  011624  6F6F               	movwf	(PWM_set@value+1)& (0+255),b
  6771                           
  6772                           ; BSR set to: 0
  6773                           ;PIC18F27J53-killifish_light03.c: 144: }
  6774                           
  6775                           ; BSR set to: 0
  6776                           ;PIC18F27J53-killifish_light03.c: 143: break;
  6777                           
  6778                           ;PIC18F27J53-killifish_light03.c: 142: case 3:
  6779                           
  6780                           ; BSR set to: 0
  6781                           ;PIC18F27J53-killifish_light03.c: 140: }
  6782                           ;PIC18F27J53-killifish_light03.c: 141: break;
  6783  011626  D022               	goto	l4564
  6784  011628                     l4544:
  6785  011628  5023               	movf	PWM_set@color,w,c
  6786                           
  6787                           ; Switch size 1, requested type "space"
  6788                           ; Number of cases is 4, Range of values is 0 to 3
  6789                           ; switch strategies available:
  6790                           ; Name         Instructions Cycles
  6791                           ; simple_byte           13     7 (average)
  6792                           ;	Chosen strategy is simple_byte
  6793  01162A  0A00               	xorlw	0	; case 0
  6794  01162C  B4D8               	btfsc	status,2,c
  6795  01162E  D7A1               	goto	l4526
  6796  011630  0A01               	xorlw	1	; case 1
  6797  011632  B4D8               	btfsc	status,2,c
  6798  011634  D01B               	goto	l4564
  6799  011636  0A03               	xorlw	3	; case 2
  6800  011638  B4D8               	btfsc	status,2,c
  6801  01163A  D7C8               	goto	l4536
  6802  01163C  0A01               	xorlw	1	; case 3
  6803                           
  6804                           ;PIC18F27J53-killifish_light03.c: 145: switch (color) {
  6805  01163E  D016               	goto	l4564
  6806  011640                     l4546:
  6807                           
  6808                           ;PIC18F27J53-killifish_light03.c: 147: CCP1CONbits.DC1B = 0;
  6809  011640  0ECF               	movlw	-49
  6810  011642  16BA               	andwf	4026,f,c	;volatile
  6811                           
  6812                           ;PIC18F27J53-killifish_light03.c: 148: CCPR1L = value;
  6813  011644  C06E  FFBB         	movff	PWM_set@value,4027	;volatile
  6814                           
  6815                           ;PIC18F27J53-killifish_light03.c: 149: break;
  6816  011648  0012               	return	
  6817  01164A                     l4550:
  6818                           
  6819                           ;PIC18F27J53-killifish_light03.c: 151: CCP2CONbits.DC2B = 0;
  6820  01164A  0ECF               	movlw	-49
  6821  01164C  16B4               	andwf	4020,f,c	;volatile
  6822                           
  6823                           ;PIC18F27J53-killifish_light03.c: 152: CCPR2L = value;
  6824  01164E  C06E  FFB5         	movff	PWM_set@value,4021	;volatile
  6825                           
  6826                           ;PIC18F27J53-killifish_light03.c: 153: break;
  6827  011652  0012               	return	
  6828  011654                     l4554:
  6829                           
  6830                           ;PIC18F27J53-killifish_light03.c: 155: CCP3CONbits.DC3B = 0;
  6831  011654  0ECF               	movlw	-49
  6832  011656  010F               	movlb	15	; () banked
  6833  011658  1715               	andwf	21,f,b	;volatile
  6834                           
  6835                           ; BSR set to: 15
  6836                           ;PIC18F27J53-killifish_light03.c: 156: CCPR3L = value;
  6837  01165A  C06E  FF16         	movff	PWM_set@value,3862	;volatile
  6838                           
  6839                           ;PIC18F27J53-killifish_light03.c: 157: break;
  6840  01165E  0012               	return	
  6841  011660                     l4558:
  6842                           
  6843                           ;PIC18F27J53-killifish_light03.c: 159: CCP4CONbits.DC4B = 0;
  6844  011660  0ECF               	movlw	-49
  6845  011662  010F               	movlb	15	; () banked
  6846  011664  1712               	andwf	18,f,b	;volatile
  6847                           
  6848                           ; BSR set to: 15
  6849                           ;PIC18F27J53-killifish_light03.c: 160: CCPR4L = value;
  6850  011666  C06E  FF13         	movff	PWM_set@value,3859	;volatile
  6851                           
  6852                           ; BSR set to: 15
  6853                           ;PIC18F27J53-killifish_light03.c: 162: }
  6854                           
  6855                           ;PIC18F27J53-killifish_light03.c: 161: break;
  6856  01166A  0012               	return	
  6857  01166C                     l4564:
  6858  01166C  5023               	movf	PWM_set@color,w,c
  6859                           
  6860                           ; Switch size 1, requested type "space"
  6861                           ; Number of cases is 4, Range of values is 0 to 3
  6862                           ; switch strategies available:
  6863                           ; Name         Instructions Cycles
  6864                           ; simple_byte           13     7 (average)
  6865                           ;	Chosen strategy is simple_byte
  6866  01166E  0A00               	xorlw	0	; case 0
  6867  011670  B4D8               	btfsc	status,2,c
  6868  011672  D7E6               	goto	l4546
  6869  011674  0A01               	xorlw	1	; case 1
  6870  011676  B4D8               	btfsc	status,2,c
  6871  011678  D7E8               	goto	l4550
  6872  01167A  0A03               	xorlw	3	; case 2
  6873  01167C  B4D8               	btfsc	status,2,c
  6874  01167E  D7EA               	goto	l4554
  6875  011680  0A01               	xorlw	1	; case 3
  6876  011682  A4D8               	btfss	status,2,c
  6877  011684  0012               	return	
  6878  011686  D7EC               	goto	l4558
  6879  011688  0012               	return		;funcret
  6880  01168A                     __end_of_PWM_set:
  6881                           	opt stack 0
  6882                           tblptru	equ	0xFF8
  6883                           tblptrh	equ	0xFF7
  6884                           tblptrl	equ	0xFF6
  6885                           tablat	equ	0xFF5
  6886                           prodh	equ	0xFF4
  6887                           prodl	equ	0xFF3
  6888                           intcon	equ	0xFF2
  6889                           postinc0	equ	0xFEE
  6890                           wreg	equ	0xFE8
  6891                           indf1	equ	0xFE7
  6892                           postinc1	equ	0xFE6
  6893                           postdec1	equ	0xFE5
  6894                           fsr1h	equ	0xFE2
  6895                           fsr1l	equ	0xFE1
  6896                           indf2	equ	0xFDF
  6897                           postinc2	equ	0xFDE
  6898                           postdec2	equ	0xFDD
  6899                           fsr2h	equ	0xFDA
  6900                           fsr2l	equ	0xFD9
  6901                           status	equ	0xFD8
  6902                           
  6903 ;; *************** function ___wmul *****************
  6904 ;; Defined at:
  6905 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  6906 ;; Parameters:    Size  Location     Type
  6907 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6908 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;  product         2    4[BANK0 ] unsigned int 
  6911 ;; Return value:  Size  Location     Type
  6912 ;;                  2    0[BANK0 ] unsigned int 
  6913 ;; Registers used:
  6914 ;;		wreg, status,2, status,0, prodl, prodh
  6915 ;; Tracked objects:
  6916 ;;		On entry : 0/0
  6917 ;;		On exit  : 0/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6920 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6921 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6923 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6924 ;;Total ram usage:        6 bytes
  6925 ;; Hardware stack levels used:    1
  6926 ;; Hardware stack levels required when called:    4
  6927 ;; This function calls:
  6928 ;;		Nothing
  6929 ;; This function is called by:
  6930 ;;		_my_atoi
  6931 ;;		_PWM_set
  6932 ;;		_main
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936                           	psect	text25
  6937  0128EE                     __ptext25:
  6938                           	opt stack 0
  6939  0128EE                     ___wmul:
  6940                           	opt stack 23
  6941                           
  6942                           ;incstack = 0
  6943  0128EE  0100               	movlb	0	; () banked
  6944  0128F0  5160               	movf	___wmul@multiplier& (0+255),w,b
  6945  0128F2  0100               	movlb	0	; () banked
  6946  0128F4  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6947  0128F6  CFF3 F064          	movff	prodl,___wmul@product
  6948  0128FA  CFF4 F065          	movff	prodh,___wmul@product+1
  6949  0128FE  0100               	movlb	0	; () banked
  6950  012900  5160               	movf	___wmul@multiplier& (0+255),w,b
  6951  012902  0100               	movlb	0	; () banked
  6952  012904  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6953  012906  50F3               	movf	prodl,w,c
  6954  012908  0100               	movlb	0	; () banked
  6955  01290A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  6956  01290C  0100               	movlb	0	; () banked
  6957  01290E  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6958  012910  0100               	movlb	0	; () banked
  6959  012912  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6960  012914  50F3               	movf	prodl,w,c
  6961  012916  0100               	movlb	0	; () banked
  6962  012918  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  6963                           
  6964                           ; BSR set to: 0
  6965  01291A  C064  F060         	movff	___wmul@product,?___wmul
  6966  01291E  C065  F061         	movff	___wmul@product+1,?___wmul+1
  6967  012922  0012               	return	
  6968                           
  6969                           ; BSR set to: 0
  6970                           
  6971                           ; BSR set to: 0
  6972  012924  0012               	return		;funcret
  6973  012926                     __end_of___wmul:
  6974                           	opt stack 0
  6975                           tblptru	equ	0xFF8
  6976                           tblptrh	equ	0xFF7
  6977                           tblptrl	equ	0xFF6
  6978                           tablat	equ	0xFF5
  6979                           prodh	equ	0xFF4
  6980                           prodl	equ	0xFF3
  6981                           intcon	equ	0xFF2
  6982                           postinc0	equ	0xFEE
  6983                           wreg	equ	0xFE8
  6984                           indf1	equ	0xFE7
  6985                           postinc1	equ	0xFE6
  6986                           postdec1	equ	0xFE5
  6987                           fsr1h	equ	0xFE2
  6988                           fsr1l	equ	0xFE1
  6989                           indf2	equ	0xFDF
  6990                           postinc2	equ	0xFDE
  6991                           postdec2	equ	0xFDD
  6992                           fsr2h	equ	0xFDA
  6993                           fsr2l	equ	0xFD9
  6994                           status	equ	0xFD8
  6995                           
  6996 ;; *************** function ___lwdiv *****************
  6997 ;; Defined at:
  6998 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  6999 ;; Parameters:    Size  Location     Type
  7000 ;;  dividend        2    6[BANK0 ] unsigned int 
  7001 ;;  divisor         2    8[BANK0 ] unsigned int 
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;  quotient        2   11[BANK0 ] unsigned int 
  7004 ;;  counter         1   10[BANK0 ] unsigned char 
  7005 ;; Return value:  Size  Location     Type
  7006 ;;                  2    6[BANK0 ] unsigned int 
  7007 ;; Registers used:
  7008 ;;		wreg, status,2, status,0
  7009 ;; Tracked objects:
  7010 ;;		On entry : 0/0
  7011 ;;		On exit  : 0/0
  7012 ;;		Unchanged: 0/0
  7013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7014 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7015 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7017 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7018 ;;Total ram usage:        7 bytes
  7019 ;; Hardware stack levels used:    1
  7020 ;; Hardware stack levels required when called:    4
  7021 ;; This function calls:
  7022 ;;		Nothing
  7023 ;; This function is called by:
  7024 ;;		_ringbuf_put_num
  7025 ;;		_my_utoa
  7026 ;;		_PWM_set
  7027 ;;		_main
  7028 ;;		_tx_sendn
  7029 ;; This function uses a non-reentrant model
  7030 ;;
  7031                           
  7032                           	psect	text26
  7033  0124E2                     __ptext26:
  7034                           	opt stack 0
  7035  0124E2                     ___lwdiv:
  7036                           	opt stack 24
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;incstack = 0
  7040  0124E2  0E00               	movlw	0
  7041  0124E4  0100               	movlb	0	; () banked
  7042  0124E6  6F6C               	movwf	(___lwdiv@quotient+1)& (0+255),b
  7043  0124E8  0E00               	movlw	0
  7044  0124EA  6F6B               	movwf	___lwdiv@quotient& (0+255),b
  7045                           
  7046                           ; BSR set to: 0
  7047  0124EC  0100               	movlb	0	; () banked
  7048  0124EE  5168               	movf	___lwdiv@divisor& (0+255),w,b
  7049  0124F0  0100               	movlb	0	; () banked
  7050  0124F2  1169               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  7051  0124F4  B4D8               	btfsc	status,2,c
  7052  0124F6  D031               	goto	l1183
  7053                           
  7054                           ; BSR set to: 0
  7055  0124F8  0E01               	movlw	1
  7056  0124FA  0100               	movlb	0	; () banked
  7057  0124FC  6F6A               	movwf	___lwdiv@counter& (0+255),b
  7058  0124FE  D007               	goto	l4210
  7059  012500                     l4208:
  7060                           
  7061                           ; BSR set to: 0
  7062  012500  0100               	movlb	0	; () banked
  7063  012502  90D8               	bcf	status,0,c
  7064  012504  3768               	rlcf	___lwdiv@divisor& (0+255),f,b
  7065  012506  3769               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  7066  012508  0100               	movlb	0	; () banked
  7067  01250A  2B6A               	incf	___lwdiv@counter& (0+255),f,b
  7068  01250C  D000               	goto	l4210
  7069  01250E                     l4210:
  7070                           
  7071                           ; BSR set to: 0
  7072  01250E  0100               	movlb	0	; () banked
  7073  012510  BF69               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  7074  012512  D002               	goto	l4212
  7075  012514  D7F5               	goto	l4208
  7076                           
  7077                           ; BSR set to: 0
  7078  012516  D000               	goto	l4212
  7079  012518                     l4212:
  7080                           
  7081                           ; BSR set to: 0
  7082  012518  0100               	movlb	0	; () banked
  7083  01251A  90D8               	bcf	status,0,c
  7084  01251C  376B               	rlcf	___lwdiv@quotient& (0+255),f,b
  7085  01251E  376C               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  7086                           
  7087                           ; BSR set to: 0
  7088  012520  0100               	movlb	0	; () banked
  7089  012522  5168               	movf	___lwdiv@divisor& (0+255),w,b
  7090  012524  0100               	movlb	0	; () banked
  7091  012526  5D66               	subwf	___lwdiv@dividend& (0+255),w,b
  7092  012528  0100               	movlb	0	; () banked
  7093  01252A  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7094  01252C  0100               	movlb	0	; () banked
  7095  01252E  5967               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  7096  012530  A0D8               	btfss	status,0,c
  7097  012532  D00B               	goto	l4220
  7098                           
  7099                           ; BSR set to: 0
  7100  012534  0100               	movlb	0	; () banked
  7101  012536  5168               	movf	___lwdiv@divisor& (0+255),w,b
  7102  012538  0100               	movlb	0	; () banked
  7103  01253A  5F66               	subwf	___lwdiv@dividend& (0+255),f,b
  7104  01253C  0100               	movlb	0	; () banked
  7105  01253E  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7106  012540  0100               	movlb	0	; () banked
  7107  012542  5B67               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  7108                           
  7109                           ; BSR set to: 0
  7110  012544  0100               	movlb	0	; () banked
  7111  012546  816B               	bsf	___lwdiv@quotient& (0+255),0,b
  7112  012548  D000               	goto	l4220
  7113  01254A                     l4220:
  7114                           
  7115                           ; BSR set to: 0
  7116  01254A  0100               	movlb	0	; () banked
  7117  01254C  90D8               	bcf	status,0,c
  7118  01254E  3369               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  7119  012550  3368               	rrcf	___lwdiv@divisor& (0+255),f,b
  7120                           
  7121                           ; BSR set to: 0
  7122  012552  0100               	movlb	0	; () banked
  7123  012554  2F6A               	decfsz	___lwdiv@counter& (0+255),f,b
  7124  012556  D7E0               	goto	l4212
  7125  012558  D000               	goto	l1183
  7126  01255A                     l1183:
  7127                           
  7128                           ; BSR set to: 0
  7129  01255A  C06B  F066         	movff	___lwdiv@quotient,?___lwdiv
  7130  01255E  C06C  F067         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7131                           
  7132                           ; BSR set to: 0
  7133  012562  0012               	return		;funcret
  7134  012564                     __end_of___lwdiv:
  7135                           	opt stack 0
  7136                           tblptru	equ	0xFF8
  7137                           tblptrh	equ	0xFF7
  7138                           tblptrl	equ	0xFF6
  7139                           tablat	equ	0xFF5
  7140                           prodh	equ	0xFF4
  7141                           prodl	equ	0xFF3
  7142                           intcon	equ	0xFF2
  7143                           postinc0	equ	0xFEE
  7144                           wreg	equ	0xFE8
  7145                           indf1	equ	0xFE7
  7146                           postinc1	equ	0xFE6
  7147                           postdec1	equ	0xFE5
  7148                           fsr1h	equ	0xFE2
  7149                           fsr1l	equ	0xFE1
  7150                           indf2	equ	0xFDF
  7151                           postinc2	equ	0xFDE
  7152                           postdec2	equ	0xFDD
  7153                           fsr2h	equ	0xFDA
  7154                           fsr2l	equ	0xFD9
  7155                           status	equ	0xFD8
  7156                           
  7157 ;; *************** function _main_init *****************
  7158 ;; Defined at:
  7159 ;;		line 226 in file "PIC18F27J53-killifish_light03.c"
  7160 ;; Parameters:    Size  Location     Type
  7161 ;;		None
  7162 ;; Auto vars:     Size  Location     Type
  7163 ;;		None
  7164 ;; Return value:  Size  Location     Type
  7165 ;;		None               void
  7166 ;; Registers used:
  7167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7168 ;; Tracked objects:
  7169 ;;		On entry : 0/0
  7170 ;;		On exit  : 0/0
  7171 ;;		Unchanged: 0/0
  7172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7177 ;;Total ram usage:        0 bytes
  7178 ;; Hardware stack levels used:    1
  7179 ;; Hardware stack levels required when called:    5
  7180 ;; This function calls:
  7181 ;;		_ADC_init
  7182 ;;		_OSC_init
  7183 ;;		_PWM_init
  7184 ;;		_RTCC_init
  7185 ;;		_UART_init
  7186 ;;		_ringbuf_init
  7187 ;;		_timer1_init
  7188 ;;		_timer3_init
  7189 ;; This function is called by:
  7190 ;;		_main
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194                           	psect	text27
  7195  012232                     __ptext27:
  7196                           	opt stack 0
  7197  012232                     _main_init:
  7198                           	opt stack 25
  7199                           
  7200                           ;PIC18F27J53-killifish_light03.c: 227: OSC_init();
  7201                           
  7202                           ; BSR set to: 0
  7203                           ;incstack = 0
  7204  012232  EC71  F095         	call	_OSC_init	;wreg free
  7205                           
  7206                           ;PIC18F27J53-killifish_light03.c: 228: TRISA = 0b11100111;
  7207  012236  0EE7               	movlw	231
  7208  012238  6E92               	movwf	3986,c	;volatile
  7209                           
  7210                           ;PIC18F27J53-killifish_light03.c: 229: TRISB = 0b00000000;
  7211  01223A  0E00               	movlw	0
  7212  01223C  6E93               	movwf	3987,c	;volatile
  7213                           
  7214                           ;PIC18F27J53-killifish_light03.c: 230: TRISC = 0b10111010;
  7215  01223E  0EBA               	movlw	186
  7216  012240  6E94               	movwf	3988,c	;volatile
  7217                           
  7218                           ;PIC18F27J53-killifish_light03.c: 231: ANCON0 = 0b11111000;
  7219  012242  0EF8               	movlw	248
  7220  012244  010F               	movlb	15	; () banked
  7221  012246  6F48               	movwf	72,b	;volatile
  7222                           
  7223                           ; BSR set to: 15
  7224                           ;PIC18F27J53-killifish_light03.c: 232: ANCON1 = 0b00011111;
  7225  012248  0E1F               	movlw	31
  7226  01224A  010F               	movlb	15	; () banked
  7227  01224C  6F49               	movwf	73,b	;volatile
  7228                           
  7229                           ; BSR set to: 15
  7230                           ;PIC18F27J53-killifish_light03.c: 233: INTCON2bits.RBPU = 0;
  7231  01224E  9EF1               	bcf	intcon2,7,c	;volatile
  7232                           
  7233                           ; BSR set to: 15
  7234                           ;PIC18F27J53-killifish_light03.c: 236: timer1_init(0, 2);
  7235  012250  0E02               	movlw	2
  7236  012252  6E1F               	movwf	timer1_init@clock_select,c
  7237  012254  0E00               	movlw	0
  7238  012256  EC33  F094         	call	_timer1_init
  7239                           
  7240                           ;PIC18F27J53-killifish_light03.c: 237: timer3_init(2);
  7241  01225A  0E02               	movlw	2
  7242  01225C  ECF0  F094         	call	_timer3_init
  7243                           
  7244                           ;PIC18F27J53-killifish_light03.c: 238: ADC_init(0);
  7245  012260  0E00               	movlw	0
  7246  012262  EC56  F095         	call	_ADC_init
  7247                           
  7248                           ;PIC18F27J53-killifish_light03.c: 239: RTCC_init();
  7249  012266  ECAE  F094         	call	_RTCC_init	;wreg free
  7250                           
  7251                           ;PIC18F27J53-killifish_light03.c: 240: PWM_init(100);
  7252  01226A  0E64               	movlw	100
  7253  01226C  ECCB  F08E         	call	_PWM_init
  7254                           
  7255                           ;PIC18F27J53-killifish_light03.c: 242: UART_init();
  7256  012270  EC36  F095         	call	_UART_init	;wreg free
  7257                           
  7258                           ;PIC18F27J53-killifish_light03.c: 243: static uint8_t txbuf[1000];
  7259                           ;PIC18F27J53-killifish_light03.c: 244: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
  7260  012274  0EE9               	movlw	low _tx_buf
  7261  012276  0100               	movlb	0	; () banked
  7262  012278  6F60               	movwf	ringbuf_init@rb& (0+255),b
  7263  01227A  0E00               	movlw	high _tx_buf
  7264  01227C  0100               	movlb	0	; () banked
  7265  01227E  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  7266  012280  0EFA               	movlw	low main_init@txbuf
  7267  012282  0100               	movlb	0	; () banked
  7268  012284  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  7269  012286  0E02               	movlw	high main_init@txbuf
  7270  012288  0100               	movlb	0	; () banked
  7271  01228A  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  7272  01228C  0E03               	movlw	3
  7273  01228E  0100               	movlb	0	; () banked
  7274  012290  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  7275  012292  0EE8               	movlw	232
  7276  012294  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  7277  012296  ECBC  F093         	call	_ringbuf_init	;wreg free
  7278                           
  7279                           ;PIC18F27J53-killifish_light03.c: 245: static uint8_t rxbuf[250];
  7280                           ;PIC18F27J53-killifish_light03.c: 246: ringbuf_init(&rx_buf, rxbuf, sizeof (rxbuf));
  7281  01229A  0EE1               	movlw	low _rx_buf
  7282  01229C  0100               	movlb	0	; () banked
  7283  01229E  6F60               	movwf	ringbuf_init@rb& (0+255),b
  7284  0122A0  0E00               	movlw	high _rx_buf
  7285  0122A2  0100               	movlb	0	; () banked
  7286  0122A4  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  7287  0122A6  0E00               	movlw	low main_init@rxbuf
  7288  0122A8  0100               	movlb	0	; () banked
  7289  0122AA  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  7290  0122AC  0E02               	movlw	high main_init@rxbuf
  7291  0122AE  0100               	movlb	0	; () banked
  7292  0122B0  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  7293  0122B2  0E00               	movlw	0
  7294  0122B4  0100               	movlb	0	; () banked
  7295  0122B6  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  7296  0122B8  0EFA               	movlw	250
  7297  0122BA  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  7298  0122BC  ECBC  F093         	call	_ringbuf_init	;wreg free
  7299  0122C0  0012               	return		;funcret
  7300  0122C2                     __end_of_main_init:
  7301                           	opt stack 0
  7302                           tblptru	equ	0xFF8
  7303                           tblptrh	equ	0xFF7
  7304                           tblptrl	equ	0xFF6
  7305                           tablat	equ	0xFF5
  7306                           prodh	equ	0xFF4
  7307                           prodl	equ	0xFF3
  7308                           intcon	equ	0xFF2
  7309                           intcon2	equ	0xFF1
  7310                           postinc0	equ	0xFEE
  7311                           wreg	equ	0xFE8
  7312                           indf1	equ	0xFE7
  7313                           postinc1	equ	0xFE6
  7314                           postdec1	equ	0xFE5
  7315                           fsr1h	equ	0xFE2
  7316                           fsr1l	equ	0xFE1
  7317                           indf2	equ	0xFDF
  7318                           postinc2	equ	0xFDE
  7319                           postdec2	equ	0xFDD
  7320                           fsr2h	equ	0xFDA
  7321                           fsr2l	equ	0xFD9
  7322                           status	equ	0xFD8
  7323                           
  7324 ;; *************** function _timer3_init *****************
  7325 ;; Defined at:
  7326 ;;		line 85 in file "../My_header\My_header.h"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;  prescaler       1    wreg     unsigned char 
  7329 ;; Auto vars:     Size  Location     Type
  7330 ;;  prescaler       1   31[COMRAM] unsigned char 
  7331 ;; Return value:  Size  Location     Type
  7332 ;;		None               void
  7333 ;; Registers used:
  7334 ;;		wreg, status,2, status,0
  7335 ;; Tracked objects:
  7336 ;;		On entry : 0/0
  7337 ;;		On exit  : 0/0
  7338 ;;		Unchanged: 0/0
  7339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7341 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7342 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7343 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7344 ;;Total ram usage:        2 bytes
  7345 ;; Hardware stack levels used:    1
  7346 ;; Hardware stack levels required when called:    4
  7347 ;; This function calls:
  7348 ;;		Nothing
  7349 ;; This function is called by:
  7350 ;;		_main_init
  7351 ;; This function uses a non-reentrant model
  7352 ;;
  7353                           
  7354                           	psect	text28
  7355  0129E0                     __ptext28:
  7356                           	opt stack 0
  7357  0129E0                     _timer3_init:
  7358                           	opt stack 25
  7359                           
  7360                           ;incstack = 0
  7361                           ;timer3_init@prescaler stored from wreg
  7362  0129E0  6E20               	movwf	timer3_init@prescaler,c
  7363                           
  7364                           ;My_header\My_header.h: 86: T3CONbits.TMR3CS = 0;
  7365  0129E2  0E3F               	movlw	-193
  7366  0129E4  1679               	andwf	3961,f,c	;volatile
  7367                           
  7368                           ;My_header\My_header.h: 87: T3CONbits.T3OSCEN = 0;
  7369  0129E6  9679               	bcf	3961,3,c	;volatile
  7370                           
  7371                           ;My_header\My_header.h: 88: T3CONbits.T3CKPS = prescaler;
  7372  0129E8  C020  F01F         	movff	timer3_init@prescaler,??_timer3_init
  7373  0129EC  3A1F               	swapf	??_timer3_init,f,c
  7374  0129EE  5079               	movf	3961,w,c	;volatile
  7375  0129F0  181F               	xorwf	??_timer3_init,w,c
  7376  0129F2  0BCF               	andlw	-49
  7377  0129F4  181F               	xorwf	??_timer3_init,w,c
  7378  0129F6  6E79               	movwf	3961,c	;volatile
  7379                           
  7380                           ;My_header\My_header.h: 89: T3CONbits.RD163 = 0;
  7381  0129F8  9E79               	bcf	3961,7,c	;volatile
  7382                           
  7383                           ;My_header\My_header.h: 90: T3CONbits.TMR3ON = 1;
  7384  0129FA  8079               	bsf	3961,0,c	;volatile
  7385                           
  7386                           ;My_header\My_header.h: 91: IPR2bits.TMR3IP = 0;
  7387  0129FC  92A2               	bcf	4002,1,c	;volatile
  7388                           
  7389                           ;My_header\My_header.h: 92: PIR2bits.TMR3IF = 0;
  7390  0129FE  92A1               	bcf	4001,1,c	;volatile
  7391                           
  7392                           ;My_header\My_header.h: 93: PIE2bits.TMR3IE = 1;
  7393  012A00  82A0               	bsf	4000,1,c	;volatile
  7394                           
  7395                           ;My_header\My_header.h: 94: INTCONbits.PEIE = 1;
  7396  012A02  8CF2               	bsf	intcon,6,c	;volatile
  7397  012A04  0012               	return		;funcret
  7398  012A06                     __end_of_timer3_init:
  7399                           	opt stack 0
  7400                           tblptru	equ	0xFF8
  7401                           tblptrh	equ	0xFF7
  7402                           tblptrl	equ	0xFF6
  7403                           tablat	equ	0xFF5
  7404                           prodh	equ	0xFF4
  7405                           prodl	equ	0xFF3
  7406                           intcon	equ	0xFF2
  7407                           intcon2	equ	0xFF1
  7408                           postinc0	equ	0xFEE
  7409                           wreg	equ	0xFE8
  7410                           indf1	equ	0xFE7
  7411                           postinc1	equ	0xFE6
  7412                           postdec1	equ	0xFE5
  7413                           fsr1h	equ	0xFE2
  7414                           fsr1l	equ	0xFE1
  7415                           indf2	equ	0xFDF
  7416                           postinc2	equ	0xFDE
  7417                           postdec2	equ	0xFDD
  7418                           fsr2h	equ	0xFDA
  7419                           fsr2l	equ	0xFD9
  7420                           status	equ	0xFD8
  7421                           
  7422 ;; *************** function _timer1_init *****************
  7423 ;; Defined at:
  7424 ;;		line 54 in file "../My_header\My_header.h"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;  prescaler       1    wreg     unsigned char 
  7427 ;;  clock_select    1   30[COMRAM] unsigned char 
  7428 ;; Auto vars:     Size  Location     Type
  7429 ;;  prescaler       1   32[COMRAM] unsigned char 
  7430 ;; Return value:  Size  Location     Type
  7431 ;;		None               void
  7432 ;; Registers used:
  7433 ;;		wreg, status,2, status,0
  7434 ;; Tracked objects:
  7435 ;;		On entry : 0/0
  7436 ;;		On exit  : 0/0
  7437 ;;		Unchanged: 0/0
  7438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7439 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7441 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7442 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7443 ;;Total ram usage:        3 bytes
  7444 ;; Hardware stack levels used:    1
  7445 ;; Hardware stack levels required when called:    4
  7446 ;; This function calls:
  7447 ;;		Nothing
  7448 ;; This function is called by:
  7449 ;;		_main_init
  7450 ;; This function uses a non-reentrant model
  7451 ;;
  7452                           
  7453                           	psect	text29
  7454  012866                     __ptext29:
  7455                           	opt stack 0
  7456  012866                     _timer1_init:
  7457                           	opt stack 25
  7458                           
  7459                           ;incstack = 0
  7460                           ;timer1_init@prescaler stored from wreg
  7461  012866  6E21               	movwf	timer1_init@prescaler,c
  7462                           
  7463                           ;My_header\My_header.h: 55: T1CONbits.TMR1CS = clock_select;
  7464  012868  C01F  F020         	movff	timer1_init@clock_select,??_timer1_init
  7465  01286C  3A20               	swapf	??_timer1_init,f,c
  7466  01286E  4620               	rlncf	??_timer1_init,f,c
  7467  012870  4620               	rlncf	??_timer1_init,f,c
  7468  012872  50CD               	movf	4045,w,c	;volatile
  7469  012874  1820               	xorwf	??_timer1_init,w,c
  7470  012876  0B3F               	andlw	-193
  7471  012878  1820               	xorwf	??_timer1_init,w,c
  7472  01287A  6ECD               	movwf	4045,c	;volatile
  7473                           
  7474                           ;My_header\My_header.h: 56: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  7475  01287C  0E02               	movlw	2
  7476  01287E  181F               	xorwf	timer1_init@clock_select,w,c
  7477  012880  A4D8               	btfss	status,2,c
  7478  012882  D002               	goto	l144
  7479  012884  86CD               	bsf	4045,3,c	;volatile
  7480  012886  D002               	goto	l4570
  7481  012888                     l144:
  7482                           
  7483                           ;My_header\My_header.h: 57: else T1CONbits.T1OSCEN = 0;
  7484  012888  96CD               	bcf	4045,3,c	;volatile
  7485  01288A  D000               	goto	l4570
  7486  01288C                     l4570:
  7487                           
  7488                           ;My_header\My_header.h: 58: T1CONbits.T1CKPS = prescaler;
  7489  01288C  C021  F020         	movff	timer1_init@prescaler,??_timer1_init
  7490  012890  3A20               	swapf	??_timer1_init,f,c
  7491  012892  50CD               	movf	4045,w,c	;volatile
  7492  012894  1820               	xorwf	??_timer1_init,w,c
  7493  012896  0BCF               	andlw	-49
  7494  012898  1820               	xorwf	??_timer1_init,w,c
  7495  01289A  6ECD               	movwf	4045,c	;volatile
  7496                           
  7497                           ;My_header\My_header.h: 59: T1CONbits.nT1SYNC = 1;
  7498  01289C  84CD               	bsf	4045,2,c	;volatile
  7499                           
  7500                           ;My_header\My_header.h: 60: T1CONbits.RD16 = 0;
  7501  01289E  92CD               	bcf	4045,1,c	;volatile
  7502                           
  7503                           ;My_header\My_header.h: 61: T1CONbits.TMR1ON = 1;
  7504  0128A0  80CD               	bsf	4045,0,c	;volatile
  7505                           
  7506                           ;My_header\My_header.h: 62: IPR1bits.TMR1IP = 0;
  7507  0128A2  909F               	bcf	3999,0,c	;volatile
  7508                           
  7509                           ;My_header\My_header.h: 63: PIR1bits.TMR1IF = 0;
  7510  0128A4  909E               	bcf	3998,0,c	;volatile
  7511                           
  7512                           ;My_header\My_header.h: 64: PIE1bits.TMR1IE = 1;
  7513  0128A6  809D               	bsf	3997,0,c	;volatile
  7514                           
  7515                           ;My_header\My_header.h: 65: INTCONbits.PEIE = 1;
  7516  0128A8  8CF2               	bsf	intcon,6,c	;volatile
  7517  0128AA  0012               	return		;funcret
  7518  0128AC                     __end_of_timer1_init:
  7519                           	opt stack 0
  7520                           tblptru	equ	0xFF8
  7521                           tblptrh	equ	0xFF7
  7522                           tblptrl	equ	0xFF6
  7523                           tablat	equ	0xFF5
  7524                           prodh	equ	0xFF4
  7525                           prodl	equ	0xFF3
  7526                           intcon	equ	0xFF2
  7527                           intcon2	equ	0xFF1
  7528                           postinc0	equ	0xFEE
  7529                           wreg	equ	0xFE8
  7530                           indf1	equ	0xFE7
  7531                           postinc1	equ	0xFE6
  7532                           postdec1	equ	0xFE5
  7533                           fsr1h	equ	0xFE2
  7534                           fsr1l	equ	0xFE1
  7535                           indf2	equ	0xFDF
  7536                           postinc2	equ	0xFDE
  7537                           postdec2	equ	0xFDD
  7538                           fsr2h	equ	0xFDA
  7539                           fsr2l	equ	0xFD9
  7540                           status	equ	0xFD8
  7541                           
  7542 ;; *************** function _ringbuf_init *****************
  7543 ;; Defined at:
  7544 ;;		line 24 in file "../My_header\My_ringbuf.h"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  7547 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
  7548 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  7549 ;;		 -> main_init@rxbuf(250), main_init@txbuf(1000), my_terminal_loop@buf(100), 
  7550 ;;  bufsize         2    4[BANK0 ] unsigned int 
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;		None
  7553 ;; Return value:  Size  Location     Type
  7554 ;;		None               void
  7555 ;; Registers used:
  7556 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7557 ;; Tracked objects:
  7558 ;;		On entry : 0/0
  7559 ;;		On exit  : 0/0
  7560 ;;		Unchanged: 0/0
  7561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7562 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7565 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7566 ;;Total ram usage:        6 bytes
  7567 ;; Hardware stack levels used:    1
  7568 ;; Hardware stack levels required when called:    4
  7569 ;; This function calls:
  7570 ;;		Nothing
  7571 ;; This function is called by:
  7572 ;;		_my_terminal_loop
  7573 ;;		_main_init
  7574 ;; This function uses a non-reentrant model
  7575 ;;
  7576                           
  7577                           	psect	text30
  7578  012778                     __ptext30:
  7579                           	opt stack 0
  7580  012778                     _ringbuf_init:
  7581                           	opt stack 25
  7582                           
  7583                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
  7584                           
  7585                           ;incstack = 0
  7586  012778  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  7587  01277C  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  7588  012780  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  7589  012784  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  7590                           
  7591                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
  7592  012788  0100               	movlb	0	; () banked
  7593  01278A  EE20 F002          	lfsr	2,2
  7594  01278E  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7595  012790  26D9               	addwf	fsr2l,f,c
  7596  012792  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7597  012794  22DA               	addwfc	fsr2h,f,c
  7598  012796  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  7599  01279A  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
  7603  01279E  0100               	movlb	0	; () banked
  7604  0127A0  EE20 F004          	lfsr	2,4
  7605  0127A4  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7606  0127A6  26D9               	addwf	fsr2l,f,c
  7607  0127A8  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7608  0127AA  22DA               	addwfc	fsr2h,f,c
  7609  0127AC  0E00               	movlw	0
  7610  0127AE  6EDE               	movwf	postinc2,c
  7611  0127B0  0E00               	movlw	0
  7612  0127B2  6EDD               	movwf	postdec2,c
  7613                           
  7614                           ; BSR set to: 0
  7615                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
  7616  0127B4  0100               	movlb	0	; () banked
  7617  0127B6  EE20 F006          	lfsr	2,6
  7618  0127BA  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7619  0127BC  26D9               	addwf	fsr2l,f,c
  7620  0127BE  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7621  0127C0  22DA               	addwfc	fsr2h,f,c
  7622  0127C2  0E00               	movlw	0
  7623  0127C4  6EDE               	movwf	postinc2,c
  7624  0127C6  0E00               	movlw	0
  7625  0127C8  6EDD               	movwf	postdec2,c
  7626                           
  7627                           ; BSR set to: 0
  7628  0127CA  0012               	return		;funcret
  7629  0127CC                     __end_of_ringbuf_init:
  7630                           	opt stack 0
  7631                           tblptru	equ	0xFF8
  7632                           tblptrh	equ	0xFF7
  7633                           tblptrl	equ	0xFF6
  7634                           tablat	equ	0xFF5
  7635                           prodh	equ	0xFF4
  7636                           prodl	equ	0xFF3
  7637                           intcon	equ	0xFF2
  7638                           intcon2	equ	0xFF1
  7639                           postinc0	equ	0xFEE
  7640                           wreg	equ	0xFE8
  7641                           indf1	equ	0xFE7
  7642                           postinc1	equ	0xFE6
  7643                           postdec1	equ	0xFE5
  7644                           fsr1h	equ	0xFE2
  7645                           fsr1l	equ	0xFE1
  7646                           indf2	equ	0xFDF
  7647                           postinc2	equ	0xFDE
  7648                           postdec2	equ	0xFDD
  7649                           fsr2h	equ	0xFDA
  7650                           fsr2l	equ	0xFD9
  7651                           status	equ	0xFD8
  7652                           
  7653 ;; *************** function _UART_init *****************
  7654 ;; Defined at:
  7655 ;;		line 192 in file "../My_header\My_header.h"
  7656 ;; Parameters:    Size  Location     Type
  7657 ;;		None
  7658 ;; Auto vars:     Size  Location     Type
  7659 ;;		None
  7660 ;; Return value:  Size  Location     Type
  7661 ;;		None               void
  7662 ;; Registers used:
  7663 ;;		wreg, status,2
  7664 ;; Tracked objects:
  7665 ;;		On entry : 0/0
  7666 ;;		On exit  : 0/0
  7667 ;;		Unchanged: 0/0
  7668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7673 ;;Total ram usage:        0 bytes
  7674 ;; Hardware stack levels used:    1
  7675 ;; Hardware stack levels required when called:    4
  7676 ;; This function calls:
  7677 ;;		Nothing
  7678 ;; This function is called by:
  7679 ;;		_main_init
  7680 ;; This function uses a non-reentrant model
  7681 ;;
  7682                           
  7683                           	psect	text31
  7684  012A6C                     __ptext31:
  7685                           	opt stack 0
  7686  012A6C                     _UART_init:
  7687                           	opt stack 25
  7688                           
  7689                           ;My_header\My_header.h: 193: TXSTA1bits.TX9 = 0;
  7690                           
  7691                           ; BSR set to: 0
  7692                           ;incstack = 0
  7693  012A6C  9CAD               	bcf	4013,6,c	;volatile
  7694                           
  7695                           ;My_header\My_header.h: 194: TXSTA1bits.TXEN = 1;
  7696  012A6E  8AAD               	bsf	4013,5,c	;volatile
  7697                           
  7698                           ;My_header\My_header.h: 195: TXSTA1bits.SYNC = 0;
  7699  012A70  98AD               	bcf	4013,4,c	;volatile
  7700                           
  7701                           ;My_header\My_header.h: 196: TXSTA1bits.BRGH = 0;
  7702  012A72  94AD               	bcf	4013,2,c	;volatile
  7703                           
  7704                           ;My_header\My_header.h: 197: RCSTA1bits.SPEN = 1;
  7705  012A74  8EAC               	bsf	4012,7,c	;volatile
  7706                           
  7707                           ;My_header\My_header.h: 198: RCSTA1bits.RX9 = 0;
  7708  012A76  9CAC               	bcf	4012,6,c	;volatile
  7709                           
  7710                           ;My_header\My_header.h: 199: RCSTA1bits.CREN = 1;
  7711  012A78  88AC               	bsf	4012,4,c	;volatile
  7712                           
  7713                           ;My_header\My_header.h: 200: BAUDCON1bits.BRG16 = 0;
  7714  012A7A  967E               	bcf	3966,3,c	;volatile
  7715                           
  7716                           ;My_header\My_header.h: 201: SPBRG1 = 48000000 / 64 / 9600 - 1;
  7717  012A7C  0E4D               	movlw	77
  7718  012A7E  6EB0               	movwf	4016,c	;volatile
  7719                           
  7720                           ;My_header\My_header.h: 202: SPBRGH1 = 0;
  7721  012A80  0E00               	movlw	0
  7722  012A82  6E7F               	movwf	3967,c	;volatile
  7723                           
  7724                           ;My_header\My_header.h: 203: IPR1bits.RC1IP = 0;
  7725  012A84  9A9F               	bcf	3999,5,c	;volatile
  7726                           
  7727                           ;My_header\My_header.h: 204: PIE1bits.RCIE = 1;
  7728  012A86  8A9D               	bsf	3997,5,c	;volatile
  7729                           
  7730                           ;My_header\My_header.h: 205: INTCONbits.PEIE = 1;
  7731  012A88  8CF2               	bsf	intcon,6,c	;volatile
  7732  012A8A  0012               	return		;funcret
  7733  012A8C                     __end_of_UART_init:
  7734                           	opt stack 0
  7735                           tblptru	equ	0xFF8
  7736                           tblptrh	equ	0xFF7
  7737                           tblptrl	equ	0xFF6
  7738                           tablat	equ	0xFF5
  7739                           prodh	equ	0xFF4
  7740                           prodl	equ	0xFF3
  7741                           intcon	equ	0xFF2
  7742                           intcon2	equ	0xFF1
  7743                           postinc0	equ	0xFEE
  7744                           wreg	equ	0xFE8
  7745                           indf1	equ	0xFE7
  7746                           postinc1	equ	0xFE6
  7747                           postdec1	equ	0xFE5
  7748                           fsr1h	equ	0xFE2
  7749                           fsr1l	equ	0xFE1
  7750                           indf2	equ	0xFDF
  7751                           postinc2	equ	0xFDE
  7752                           postdec2	equ	0xFDD
  7753                           fsr2h	equ	0xFDA
  7754                           fsr2l	equ	0xFD9
  7755                           status	equ	0xFD8
  7756                           
  7757 ;; *************** function _RTCC_init *****************
  7758 ;; Defined at:
  7759 ;;		line 56 in file "../My_header\My_RTCC.h"
  7760 ;; Parameters:    Size  Location     Type
  7761 ;;		None
  7762 ;; Auto vars:     Size  Location     Type
  7763 ;;		None
  7764 ;; Return value:  Size  Location     Type
  7765 ;;		None               void
  7766 ;; Registers used:
  7767 ;;		wreg, status,2
  7768 ;; Tracked objects:
  7769 ;;		On entry : 0/0
  7770 ;;		On exit  : 0/0
  7771 ;;		Unchanged: 0/0
  7772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7777 ;;Total ram usage:        0 bytes
  7778 ;; Hardware stack levels used:    1
  7779 ;; Hardware stack levels required when called:    4
  7780 ;; This function calls:
  7781 ;;		Nothing
  7782 ;; This function is called by:
  7783 ;;		_main_init
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787                           	psect	text32
  7788  01295C                     __ptext32:
  7789                           	opt stack 0
  7790  01295C                     _RTCC_init:
  7791                           	opt stack 25
  7792                           
  7793                           ;My_header\My_RTCC.h: 57: RTCCFGbits.RTCWREN = 1;
  7794                           
  7795                           ;incstack = 0
  7796  01295C  010F               	movlb	15	; () banked
  7797  01295E  8B3F               	bsf	63,5,b	;volatile
  7798                           
  7799                           ;My_header\My_RTCC.h: 58: if (RTCCFGbits.RTCWREN != 1) {
  7800  012960  010F               	movlb	15	; () banked
  7801  012962  BB3F               	btfsc	63,5,b	;volatile
  7802  012964  D007               	goto	l4688
  7803                           
  7804                           ; BSR set to: 15
  7805                           ;My_header\My_RTCC.h: 59: EECON2 = 0x55;
  7806  012966  0E55               	movlw	85
  7807  012968  6EA7               	movwf	4007,c	;volatile
  7808                           
  7809                           ;My_header\My_RTCC.h: 60: EECON2 = 0xAA;
  7810  01296A  0EAA               	movlw	170
  7811  01296C  6EA7               	movwf	4007,c	;volatile
  7812                           
  7813                           ; BSR set to: 15
  7814                           ;My_header\My_RTCC.h: 61: RTCCFGbits.RTCWREN = 1;
  7815  01296E  010F               	movlb	15	; () banked
  7816  012970  8B3F               	bsf	63,5,b	;volatile
  7817  012972  D000               	goto	l4688
  7818  012974                     l4688:
  7819                           
  7820                           ; BSR set to: 15
  7821                           ;My_header\My_RTCC.h: 62: }
  7822                           ;My_header\My_RTCC.h: 63: RTCCFGbits.RTCEN = 1;
  7823  012974  010F               	movlb	15	; () banked
  7824  012976  8F3F               	bsf	63,7,b	;volatile
  7825                           
  7826                           ; BSR set to: 15
  7827                           ;My_header\My_RTCC.h: 64: RTCCFGbits.RTCOE = 0;
  7828  012978  010F               	movlb	15	; () banked
  7829  01297A  953F               	bcf	63,2,b	;volatile
  7830                           
  7831                           ; BSR set to: 15
  7832                           ;My_header\My_RTCC.h: 65: PADCFG1bits.RTSECSEL0 = 1;
  7833  01297C  010F               	movlb	15	; () banked
  7834  01297E  833C               	bsf	60,1,b	;volatile
  7835                           
  7836                           ; BSR set to: 15
  7837                           ;My_header\My_RTCC.h: 66: PADCFG1bits.RTSECSEL1 = 1;
  7838  012980  010F               	movlb	15	; () banked
  7839  012982  853C               	bsf	60,2,b	;volatile
  7840                           
  7841                           ;My_header\My_RTCC.h: 67: RTCCAL = 0x00;
  7842  012984  0E00               	movlw	0
  7843  012986  010F               	movlb	15	; () banked
  7844  012988  6F3E               	movwf	62,b	;volatile
  7845                           
  7846                           ; BSR set to: 15
  7847  01298A  0012               	return		;funcret
  7848  01298C                     __end_of_RTCC_init:
  7849                           	opt stack 0
  7850                           tblptru	equ	0xFF8
  7851                           tblptrh	equ	0xFF7
  7852                           tblptrl	equ	0xFF6
  7853                           tablat	equ	0xFF5
  7854                           prodh	equ	0xFF4
  7855                           prodl	equ	0xFF3
  7856                           intcon	equ	0xFF2
  7857                           intcon2	equ	0xFF1
  7858                           postinc0	equ	0xFEE
  7859                           wreg	equ	0xFE8
  7860                           indf1	equ	0xFE7
  7861                           postinc1	equ	0xFE6
  7862                           postdec1	equ	0xFE5
  7863                           fsr1h	equ	0xFE2
  7864                           fsr1l	equ	0xFE1
  7865                           indf2	equ	0xFDF
  7866                           postinc2	equ	0xFDE
  7867                           postdec2	equ	0xFDD
  7868                           fsr2h	equ	0xFDA
  7869                           fsr2l	equ	0xFD9
  7870                           status	equ	0xFD8
  7871                           
  7872 ;; *************** function _PWM_init *****************
  7873 ;; Defined at:
  7874 ;;		line 76 in file "PIC18F27J53-killifish_light03.c"
  7875 ;; Parameters:    Size  Location     Type
  7876 ;;  PR              1    wreg     unsigned char 
  7877 ;; Auto vars:     Size  Location     Type
  7878 ;;  PR              1   30[COMRAM] unsigned char 
  7879 ;; Return value:  Size  Location     Type
  7880 ;;		None               void
  7881 ;; Registers used:
  7882 ;;		wreg, status,2, status,0
  7883 ;; Tracked objects:
  7884 ;;		On entry : 0/0
  7885 ;;		On exit  : 0/0
  7886 ;;		Unchanged: 0/0
  7887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7889 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7891 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7892 ;;Total ram usage:        1 bytes
  7893 ;; Hardware stack levels used:    1
  7894 ;; Hardware stack levels required when called:    4
  7895 ;; This function calls:
  7896 ;;		Nothing
  7897 ;; This function is called by:
  7898 ;;		_main_init
  7899 ;; This function uses a non-reentrant model
  7900 ;;
  7901                           
  7902                           	psect	text33
  7903  011D96                     __ptext33:
  7904                           	opt stack 0
  7905  011D96                     _PWM_init:
  7906                           	opt stack 25
  7907                           
  7908                           ; BSR set to: 15
  7909                           ;incstack = 0
  7910                           ;PWM_init@PR stored from wreg
  7911  011D96  6E1F               	movwf	PWM_init@PR,c
  7912                           
  7913                           ;PIC18F27J53-killifish_light03.c: 77: PPSCONbits.IOLOCK = 0;
  7914  011D98  010E               	movlb	14	; () banked
  7915  011D9A  91BF               	bcf	191,0,b	;volatile
  7916                           
  7917                           ;PIC18F27J53-killifish_light03.c: 78: if (PPSCONbits.IOLOCK != 0) {
  7918  011D9C  010E               	movlb	14	; () banked
  7919  011D9E  A1BF               	btfss	191,0,b	;volatile
  7920  011DA0  D006               	goto	l568
  7921                           
  7922                           ; BSR set to: 14
  7923                           ;PIC18F27J53-killifish_light03.c: 79: EECON2 = 0x55;
  7924  011DA2  0E55               	movlw	85
  7925  011DA4  6EA7               	movwf	4007,c	;volatile
  7926                           
  7927                           ;PIC18F27J53-killifish_light03.c: 80: EECON2 = 0xAA;
  7928  011DA6  0EAA               	movlw	170
  7929  011DA8  6EA7               	movwf	4007,c	;volatile
  7930                           
  7931                           ; BSR set to: 14
  7932                           ;PIC18F27J53-killifish_light03.c: 81: PPSCONbits.IOLOCK = 0;
  7933  011DAA  010E               	movlb	14	; () banked
  7934  011DAC  91BF               	bcf	191,0,b	;volatile
  7935  011DAE                     l568:
  7936                           
  7937                           ; BSR set to: 14
  7938                           ;PIC18F27J53-killifish_light03.c: 82: }
  7939                           ;PIC18F27J53-killifish_light03.c: 84: RPOR3 = 14;
  7940  011DAE  0E0E               	movlw	14
  7941  011DB0  010E               	movlb	14	; () banked
  7942  011DB2  6FC3               	movwf	195,b	;volatile
  7943                           
  7944                           ;PIC18F27J53-killifish_light03.c: 85: RPOR4 = 18;
  7945  011DB4  0E12               	movlw	18
  7946  011DB6  010E               	movlb	14	; () banked
  7947  011DB8  6FC4               	movwf	196,b	;volatile
  7948                           
  7949                           ;PIC18F27J53-killifish_light03.c: 86: RPOR5 = 22;
  7950  011DBA  0E16               	movlw	22
  7951  011DBC  010E               	movlb	14	; () banked
  7952  011DBE  6FC5               	movwf	197,b	;volatile
  7953                           
  7954                           ; BSR set to: 14
  7955                           ;PIC18F27J53-killifish_light03.c: 88: CCP1CONbits.CCP1M = 12;
  7956  011DC0  50BA               	movf	4026,w,c	;volatile
  7957  011DC2  0BF0               	andlw	-16
  7958  011DC4  090C               	iorlw	12
  7959  011DC6  6EBA               	movwf	4026,c	;volatile
  7960                           
  7961                           ; BSR set to: 14
  7962                           ;PIC18F27J53-killifish_light03.c: 89: CCP1CONbits.P1M = 0;
  7963  011DC8  0E3F               	movlw	-193
  7964  011DCA  16BA               	andwf	4026,f,c	;volatile
  7965                           
  7966                           ; BSR set to: 14
  7967                           ;PIC18F27J53-killifish_light03.c: 90: CCPTMRS0bits.C1TSEL = 0;
  7968  011DCC  9152               	bcf	82,0,b	;volatile
  7969  011DCE  9352               	bcf	82,1,b	;volatile
  7970  011DD0  9552               	bcf	82,2,b	;volatile
  7971                           
  7972                           ; BSR set to: 14
  7973                           ;PIC18F27J53-killifish_light03.c: 91: CCPR1Lbits.CCPR1L = 0;
  7974  011DD2  0E00               	movlw	0
  7975  011DD4  6EBB               	movwf	4027,c	;volatile
  7976                           
  7977                           ; BSR set to: 14
  7978                           ;PIC18F27J53-killifish_light03.c: 92: CCP1CONbits.DC1B = 0;
  7979  011DD6  0ECF               	movlw	-49
  7980  011DD8  16BA               	andwf	4026,f,c	;volatile
  7981                           
  7982                           ; BSR set to: 14
  7983                           ;PIC18F27J53-killifish_light03.c: 94: CCP2CONbits.CCP2M = 12;
  7984  011DDA  50B4               	movf	4020,w,c	;volatile
  7985  011DDC  0BF0               	andlw	-16
  7986  011DDE  090C               	iorlw	12
  7987  011DE0  6EB4               	movwf	4020,c	;volatile
  7988                           
  7989                           ; BSR set to: 14
  7990                           ;PIC18F27J53-killifish_light03.c: 95: CCP2CONbits.P2M = 0;
  7991  011DE2  0E3F               	movlw	-193
  7992  011DE4  16B4               	andwf	4020,f,c	;volatile
  7993                           
  7994                           ; BSR set to: 14
  7995                           ;PIC18F27J53-killifish_light03.c: 96: CCPTMRS0bits.C2TSEL = 0;
  7996  011DE6  9752               	bcf	82,3,b	;volatile
  7997  011DE8  9952               	bcf	82,4,b	;volatile
  7998  011DEA  9B52               	bcf	82,5,b	;volatile
  7999                           
  8000                           ; BSR set to: 14
  8001                           ;PIC18F27J53-killifish_light03.c: 97: CCPR2Lbits.CCPR2L = 0;
  8002  011DEC  0E00               	movlw	0
  8003  011DEE  6EB5               	movwf	4021,c	;volatile
  8004                           
  8005                           ; BSR set to: 14
  8006                           ;PIC18F27J53-killifish_light03.c: 98: CCP2CONbits.DC2B = 0;
  8007  011DF0  0ECF               	movlw	-49
  8008  011DF2  16B4               	andwf	4020,f,c	;volatile
  8009                           
  8010                           ; BSR set to: 14
  8011                           ;PIC18F27J53-killifish_light03.c: 100: CCP3CONbits.CCP3M = 12;
  8012  011DF4  010F               	movlb	15	; () banked
  8013  011DF6  5115               	movf	21,w,b	;volatile
  8014  011DF8  0BF0               	andlw	-16
  8015  011DFA  090C               	iorlw	12
  8016  011DFC  6F15               	movwf	21,b	;volatile
  8017                           
  8018                           ; BSR set to: 15
  8019                           ;PIC18F27J53-killifish_light03.c: 101: CCP3CONbits.P3M = 0;
  8020  011DFE  0E3F               	movlw	-193
  8021  011E00  010F               	movlb	15	; () banked
  8022  011E02  1715               	andwf	21,f,b	;volatile
  8023                           
  8024                           ; BSR set to: 15
  8025                           ;PIC18F27J53-killifish_light03.c: 102: CCPTMRS0bits.C3TSEL = 0;
  8026  011E04  0E3F               	movlw	-193
  8027  011E06  010F               	movlb	15	; () banked
  8028  011E08  1752               	andwf	82,f,b	;volatile
  8029                           
  8030                           ; BSR set to: 15
  8031                           ;PIC18F27J53-killifish_light03.c: 103: CCPR3Lbits.CCPR3L = 0;
  8032  011E0A  0E00               	movlw	0
  8033  011E0C  010F               	movlb	15	; () banked
  8034  011E0E  6F16               	movwf	22,b	;volatile
  8035                           
  8036                           ; BSR set to: 15
  8037                           ;PIC18F27J53-killifish_light03.c: 104: CCP3CONbits.DC3B = 0;
  8038  011E10  0ECF               	movlw	-49
  8039  011E12  010F               	movlb	15	; () banked
  8040  011E14  1715               	andwf	21,f,b	;volatile
  8041                           
  8042                           ; BSR set to: 15
  8043                           ;PIC18F27J53-killifish_light03.c: 106: CCP4CONbits.CCP4M = 12;
  8044  011E16  010F               	movlb	15	; () banked
  8045  011E18  5112               	movf	18,w,b	;volatile
  8046  011E1A  0BF0               	andlw	-16
  8047  011E1C  090C               	iorlw	12
  8048  011E1E  6F12               	movwf	18,b	;volatile
  8049                           
  8050                           ; BSR set to: 15
  8051                           ;PIC18F27J53-killifish_light03.c: 107: CCPTMRS1bits.C4TSEL = 0;
  8052  011E20  0EFC               	movlw	-4
  8053  011E22  010F               	movlb	15	; () banked
  8054  011E24  1751               	andwf	81,f,b	;volatile
  8055                           
  8056                           ; BSR set to: 15
  8057                           ;PIC18F27J53-killifish_light03.c: 108: CCPR4Lbits.CCPR4L = 0;
  8058  011E26  0E00               	movlw	0
  8059  011E28  010F               	movlb	15	; () banked
  8060  011E2A  6F13               	movwf	19,b	;volatile
  8061                           
  8062                           ; BSR set to: 15
  8063                           ;PIC18F27J53-killifish_light03.c: 109: CCP4CONbits.DC4B = 0;
  8064  011E2C  0ECF               	movlw	-49
  8065  011E2E  010F               	movlb	15	; () banked
  8066  011E30  1712               	andwf	18,f,b	;volatile
  8067                           
  8068                           ; BSR set to: 15
  8069                           ;PIC18F27J53-killifish_light03.c: 111: T2CONbits.T2OUTPS = 0;
  8070  011E32  96CA               	bcf	4042,3,c	;volatile
  8071  011E34  98CA               	bcf	4042,4,c	;volatile
  8072  011E36  9ACA               	bcf	4042,5,c	;volatile
  8073  011E38  9CCA               	bcf	4042,6,c	;volatile
  8074                           
  8075                           ; BSR set to: 15
  8076                           ;PIC18F27J53-killifish_light03.c: 112: T2CONbits.T2CKPS = 2;
  8077  011E3A  50CA               	movf	4042,w,c	;volatile
  8078  011E3C  0BFC               	andlw	-4
  8079  011E3E  0902               	iorlw	2
  8080  011E40  6ECA               	movwf	4042,c	;volatile
  8081                           
  8082                           ; BSR set to: 15
  8083                           ;PIC18F27J53-killifish_light03.c: 113: PR2 = PR - 1;
  8084  011E42  041F               	decf	PWM_init@PR,w,c
  8085  011E44  6ECB               	movwf	4043,c	;volatile
  8086                           
  8087                           ; BSR set to: 15
  8088                           ;PIC18F27J53-killifish_light03.c: 114: T2CONbits.TMR2ON = 1;
  8089  011E46  84CA               	bsf	4042,2,c	;volatile
  8090                           
  8091                           ; BSR set to: 15
  8092  011E48  0012               	return		;funcret
  8093  011E4A                     __end_of_PWM_init:
  8094                           	opt stack 0
  8095                           tblptru	equ	0xFF8
  8096                           tblptrh	equ	0xFF7
  8097                           tblptrl	equ	0xFF6
  8098                           tablat	equ	0xFF5
  8099                           prodh	equ	0xFF4
  8100                           prodl	equ	0xFF3
  8101                           intcon	equ	0xFF2
  8102                           intcon2	equ	0xFF1
  8103                           postinc0	equ	0xFEE
  8104                           wreg	equ	0xFE8
  8105                           indf1	equ	0xFE7
  8106                           postinc1	equ	0xFE6
  8107                           postdec1	equ	0xFE5
  8108                           fsr1h	equ	0xFE2
  8109                           fsr1l	equ	0xFE1
  8110                           indf2	equ	0xFDF
  8111                           postinc2	equ	0xFDE
  8112                           postdec2	equ	0xFDD
  8113                           fsr2h	equ	0xFDA
  8114                           fsr2l	equ	0xFD9
  8115                           status	equ	0xFD8
  8116                           
  8117 ;; *************** function _OSC_init *****************
  8118 ;; Defined at:
  8119 ;;		line 119 in file "../My_header\My_header.h"
  8120 ;; Parameters:    Size  Location     Type
  8121 ;;		None
  8122 ;; Auto vars:     Size  Location     Type
  8123 ;;		None
  8124 ;; Return value:  Size  Location     Type
  8125 ;;		None               void
  8126 ;; Registers used:
  8127 ;;		wreg, status,2
  8128 ;; Tracked objects:
  8129 ;;		On entry : 0/0
  8130 ;;		On exit  : 0/0
  8131 ;;		Unchanged: 0/0
  8132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8137 ;;Total ram usage:        0 bytes
  8138 ;; Hardware stack levels used:    1
  8139 ;; Hardware stack levels required when called:    4
  8140 ;; This function calls:
  8141 ;;		Nothing
  8142 ;; This function is called by:
  8143 ;;		_main_init
  8144 ;; This function uses a non-reentrant model
  8145 ;;
  8146                           
  8147                           	psect	text34
  8148  012AE2                     __ptext34:
  8149                           	opt stack 0
  8150  012AE2                     _OSC_init:
  8151                           	opt stack 25
  8152                           
  8153                           ;My_header\My_header.h: 120: OSCCONbits.IRCF = 7;
  8154                           
  8155                           ; BSR set to: 15
  8156                           ;incstack = 0
  8157  012AE2  88D3               	bsf	4051,4,c	;volatile
  8158  012AE4  8AD3               	bsf	4051,5,c	;volatile
  8159  012AE6  8CD3               	bsf	4051,6,c	;volatile
  8160                           
  8161                           ;My_header\My_header.h: 121: OSCTUNEbits.PLLEN = 1;
  8162  012AE8  8C9B               	bsf	3995,6,c	;volatile
  8163                           
  8164                           ;My_header\My_header.h: 122: OSCCONbits.SCS = 0;
  8165  012AEA  0EFC               	movlw	-4
  8166  012AEC  16D3               	andwf	4051,f,c	;volatile
  8167  012AEE  0012               	return		;funcret
  8168  012AF0                     __end_of_OSC_init:
  8169                           	opt stack 0
  8170                           tblptru	equ	0xFF8
  8171                           tblptrh	equ	0xFF7
  8172                           tblptrl	equ	0xFF6
  8173                           tablat	equ	0xFF5
  8174                           prodh	equ	0xFF4
  8175                           prodl	equ	0xFF3
  8176                           intcon	equ	0xFF2
  8177                           intcon2	equ	0xFF1
  8178                           postinc0	equ	0xFEE
  8179                           wreg	equ	0xFE8
  8180                           indf1	equ	0xFE7
  8181                           postinc1	equ	0xFE6
  8182                           postdec1	equ	0xFE5
  8183                           fsr1h	equ	0xFE2
  8184                           fsr1l	equ	0xFE1
  8185                           indf2	equ	0xFDF
  8186                           postinc2	equ	0xFDE
  8187                           postdec2	equ	0xFDD
  8188                           fsr2h	equ	0xFDA
  8189                           fsr2l	equ	0xFD9
  8190                           status	equ	0xFD8
  8191                           
  8192 ;; *************** function _ADC_init *****************
  8193 ;; Defined at:
  8194 ;;		line 149 in file "../My_header\My_header.h"
  8195 ;; Parameters:    Size  Location     Type
  8196 ;;  p_ref           1    wreg     unsigned char 
  8197 ;; Auto vars:     Size  Location     Type
  8198 ;;  p_ref           1   30[COMRAM] unsigned char 
  8199 ;; Return value:  Size  Location     Type
  8200 ;;		None               void
  8201 ;; Registers used:
  8202 ;;		wreg, status,2
  8203 ;; Tracked objects:
  8204 ;;		On entry : 0/0
  8205 ;;		On exit  : 0/0
  8206 ;;		Unchanged: 0/0
  8207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8209 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8211 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8212 ;;Total ram usage:        1 bytes
  8213 ;; Hardware stack levels used:    1
  8214 ;; Hardware stack levels required when called:    4
  8215 ;; This function calls:
  8216 ;;		Nothing
  8217 ;; This function is called by:
  8218 ;;		_main_init
  8219 ;; This function uses a non-reentrant model
  8220 ;;
  8221                           
  8222                           	psect	text35
  8223  012AAC                     __ptext35:
  8224                           	opt stack 0
  8225  012AAC                     _ADC_init:
  8226                           	opt stack 25
  8227                           
  8228                           ;incstack = 0
  8229                           ;ADC_init@p_ref stored from wreg
  8230  012AAC  6E1F               	movwf	ADC_init@p_ref,c
  8231                           
  8232                           ;My_header\My_header.h: 150: ADCON0bits.VCFG1 = 0;
  8233  012AAE  9EC2               	bcf	4034,7,c	;volatile
  8234                           
  8235                           ;My_header\My_header.h: 151: ADCON0bits.VCFG0 = p_ref;
  8236  012AB0  B01F               	btfsc	ADC_init@p_ref,0,c
  8237  012AB2  D002               	bra	u4925
  8238  012AB4  9CC2               	bcf	4034,6,c	;volatile
  8239  012AB6  D001               	bra	u4926
  8240  012AB8                     u4925:
  8241  012AB8  8CC2               	bsf	4034,6,c	;volatile
  8242  012ABA                     u4926:
  8243                           
  8244                           ;My_header\My_header.h: 153: ADCON1bits.ADFM = 1;
  8245  012ABA  8EC1               	bsf	4033,7,c	;volatile
  8246                           
  8247                           ;My_header\My_header.h: 154: ADCON1bits.ADCAL = 0;
  8248  012ABC  9CC1               	bcf	4033,6,c	;volatile
  8249                           
  8250                           ;My_header\My_header.h: 155: ADCON1bits.ADCS = 6;
  8251  012ABE  50C1               	movf	4033,w,c	;volatile
  8252  012AC0  0BF8               	andlw	-8
  8253  012AC2  0906               	iorlw	6
  8254  012AC4  6EC1               	movwf	4033,c	;volatile
  8255  012AC6  0012               	return		;funcret
  8256  012AC8                     __end_of_ADC_init:
  8257                           	opt stack 0
  8258                           tblptru	equ	0xFF8
  8259                           tblptrh	equ	0xFF7
  8260                           tblptrl	equ	0xFF6
  8261                           tablat	equ	0xFF5
  8262                           prodh	equ	0xFF4
  8263                           prodl	equ	0xFF3
  8264                           intcon	equ	0xFF2
  8265                           intcon2	equ	0xFF1
  8266                           postinc0	equ	0xFEE
  8267                           wreg	equ	0xFE8
  8268                           indf1	equ	0xFE7
  8269                           postinc1	equ	0xFE6
  8270                           postdec1	equ	0xFE5
  8271                           fsr1h	equ	0xFE2
  8272                           fsr1l	equ	0xFE1
  8273                           indf2	equ	0xFDF
  8274                           postinc2	equ	0xFDE
  8275                           postdec2	equ	0xFDD
  8276                           fsr2h	equ	0xFDA
  8277                           fsr2l	equ	0xFD9
  8278                           status	equ	0xFD8
  8279                           
  8280 ;; *************** function ___llmod *****************
  8281 ;; Defined at:
  8282 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;  dividend        4    0[BANK0 ] unsigned long 
  8285 ;;  divisor         4    4[BANK0 ] unsigned long 
  8286 ;; Auto vars:     Size  Location     Type
  8287 ;;  counter         1   30[COMRAM] unsigned char 
  8288 ;; Return value:  Size  Location     Type
  8289 ;;                  4    0[BANK0 ] unsigned long 
  8290 ;; Registers used:
  8291 ;;		wreg, status,2, status,0
  8292 ;; Tracked objects:
  8293 ;;		On entry : 0/0
  8294 ;;		On exit  : 0/0
  8295 ;;		Unchanged: 0/0
  8296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8297 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8298 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8300 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8301 ;;Total ram usage:        9 bytes
  8302 ;; Hardware stack levels used:    1
  8303 ;; Hardware stack levels required when called:    4
  8304 ;; This function calls:
  8305 ;;		Nothing
  8306 ;; This function is called by:
  8307 ;;		_main
  8308 ;;		_my_utoa32
  8309 ;; This function uses a non-reentrant model
  8310 ;;
  8311                           
  8312                           	psect	text36
  8313  0120F8                     __ptext36:
  8314                           	opt stack 0
  8315  0120F8                     ___llmod:
  8316                           	opt stack 26
  8317                           
  8318                           ;incstack = 0
  8319  0120F8  0100               	movlb	0	; () banked
  8320  0120FA  5164               	movf	___llmod@divisor& (0+255),w,b
  8321  0120FC  0100               	movlb	0	; () banked
  8322  0120FE  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  8323  012100  0100               	movlb	0	; () banked
  8324  012102  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  8325  012104  0100               	movlb	0	; () banked
  8326  012106  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  8327  012108  B4D8               	btfsc	status,2,c
  8328  01210A  D03C               	goto	l1130
  8329                           
  8330                           ; BSR set to: 0
  8331  01210C  0E01               	movlw	1
  8332  01210E  6E1F               	movwf	___llmod@counter,c
  8333  012110  D008               	goto	l5068
  8334  012112                     l5066:
  8335                           
  8336                           ; BSR set to: 0
  8337  012112  0100               	movlb	0	; () banked
  8338  012114  90D8               	bcf	status,0,c
  8339  012116  3764               	rlcf	___llmod@divisor& (0+255),f,b
  8340  012118  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  8341  01211A  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  8342  01211C  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  8343  01211E  2A1F               	incf	___llmod@counter,f,c
  8344  012120  D000               	goto	l5068
  8345  012122                     l5068:
  8346                           
  8347                           ; BSR set to: 0
  8348  012122  0100               	movlb	0	; () banked
  8349  012124  BF67               	btfsc	(___llmod@divisor+3)& (0+255),7,b
  8350  012126  D002               	goto	l5070
  8351  012128  D7F4               	goto	l5066
  8352                           
  8353                           ; BSR set to: 0
  8354  01212A  D000               	goto	l5070
  8355  01212C                     l5070:
  8356                           
  8357                           ; BSR set to: 0
  8358  01212C  0100               	movlb	0	; () banked
  8359  01212E  5164               	movf	___llmod@divisor& (0+255),w,b
  8360  012130  0100               	movlb	0	; () banked
  8361  012132  5D60               	subwf	___llmod@dividend& (0+255),w,b
  8362  012134  0100               	movlb	0	; () banked
  8363  012136  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  8364  012138  0100               	movlb	0	; () banked
  8365  01213A  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  8366  01213C  0100               	movlb	0	; () banked
  8367  01213E  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  8368  012140  0100               	movlb	0	; () banked
  8369  012142  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  8370  012144  0100               	movlb	0	; () banked
  8371  012146  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  8372  012148  0100               	movlb	0	; () banked
  8373  01214A  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  8374  01214C  A0D8               	btfss	status,0,c
  8375  01214E  D011               	goto	l5074
  8376                           
  8377                           ; BSR set to: 0
  8378  012150  0100               	movlb	0	; () banked
  8379  012152  5164               	movf	___llmod@divisor& (0+255),w,b
  8380  012154  0100               	movlb	0	; () banked
  8381  012156  5F60               	subwf	___llmod@dividend& (0+255),f,b
  8382  012158  0100               	movlb	0	; () banked
  8383  01215A  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  8384  01215C  0100               	movlb	0	; () banked
  8385  01215E  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  8386  012160  0100               	movlb	0	; () banked
  8387  012162  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  8388  012164  0100               	movlb	0	; () banked
  8389  012166  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  8390  012168  0100               	movlb	0	; () banked
  8391  01216A  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  8392  01216C  0100               	movlb	0	; () banked
  8393  01216E  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  8394  012170  D000               	goto	l5074
  8395  012172                     l5074:
  8396                           
  8397                           ; BSR set to: 0
  8398  012172  0100               	movlb	0	; () banked
  8399  012174  90D8               	bcf	status,0,c
  8400  012176  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  8401  012178  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  8402  01217A  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  8403  01217C  3364               	rrcf	___llmod@divisor& (0+255),f,b
  8404                           
  8405                           ; BSR set to: 0
  8406  01217E  2E1F               	decfsz	___llmod@counter,f,c
  8407  012180  D7D5               	goto	l5070
  8408  012182  D000               	goto	l1130
  8409  012184                     l1130:
  8410                           
  8411                           ; BSR set to: 0
  8412  012184  C060  F060         	movff	___llmod@dividend,?___llmod
  8413  012188  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  8414  01218C  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  8415  012190  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  8416                           
  8417                           ; BSR set to: 0
  8418  012194  0012               	return		;funcret
  8419  012196                     __end_of___llmod:
  8420                           	opt stack 0
  8421                           tblptru	equ	0xFF8
  8422                           tblptrh	equ	0xFF7
  8423                           tblptrl	equ	0xFF6
  8424                           tablat	equ	0xFF5
  8425                           prodh	equ	0xFF4
  8426                           prodl	equ	0xFF3
  8427                           intcon	equ	0xFF2
  8428                           intcon2	equ	0xFF1
  8429                           postinc0	equ	0xFEE
  8430                           wreg	equ	0xFE8
  8431                           indf1	equ	0xFE7
  8432                           postinc1	equ	0xFE6
  8433                           postdec1	equ	0xFE5
  8434                           fsr1h	equ	0xFE2
  8435                           fsr1l	equ	0xFE1
  8436                           indf2	equ	0xFDF
  8437                           postinc2	equ	0xFDE
  8438                           postdec2	equ	0xFDD
  8439                           fsr2h	equ	0xFDA
  8440                           fsr2l	equ	0xFD9
  8441                           status	equ	0xFD8
  8442                           
  8443 ;; *************** function _RTCC_loop *****************
  8444 ;; Defined at:
  8445 ;;		line 387 in file "../My_header\My_RTCC.h"
  8446 ;; Parameters:    Size  Location     Type
  8447 ;;		None
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;		None
  8450 ;; Return value:  Size  Location     Type
  8451 ;;		None               void
  8452 ;; Registers used:
  8453 ;;		wreg, status,2, status,0
  8454 ;; Tracked objects:
  8455 ;;		On entry : 0/0
  8456 ;;		On exit  : 0/0
  8457 ;;		Unchanged: 0/0
  8458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8463 ;;Total ram usage:        0 bytes
  8464 ;; Hardware stack levels used:    1
  8465 ;; Hardware stack levels required when called:    4
  8466 ;; This function calls:
  8467 ;;		Nothing
  8468 ;; This function is called by:
  8469 ;;		_main
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472                           
  8473                           	psect	text37
  8474  01298C                     __ptext37:
  8475                           	opt stack 0
  8476  01298C                     _RTCC_loop:
  8477                           	opt stack 26
  8478                           
  8479                           ;My_header\My_RTCC.h: 388: static uint8_t prev_halfsec;
  8480                           ;My_header\My_RTCC.h: 389: while (RTCCFGbits.RTCSYNC);
  8481                           
  8482                           ; BSR set to: 0
  8483                           ;incstack = 0
  8484  01298C  D000               	goto	l439
  8485  01298E                     l439:
  8486  01298E  010F               	movlb	15	; () banked
  8487  012990  B93F               	btfsc	63,4,b	;volatile
  8488  012992  D7FD               	goto	l439
  8489                           
  8490                           ; BSR set to: 15
  8491                           ;My_header\My_RTCC.h: 390: halfsec = RTCCFGbits.HALFSEC;
  8492                           
  8493                           ; BSR set to: 15
  8494  012994  0E00               	movlw	0
  8495  012996  B73F               	btfsc	63,3,b	;volatile
  8496  012998  0E01               	movlw	1
  8497  01299A  6E2B               	movwf	_halfsec,c
  8498                           
  8499                           ; BSR set to: 15
  8500                           ;My_header\My_RTCC.h: 391: if (prev_halfsec != halfsec) {
  8501  01299C  502B               	movf	_halfsec,w,c
  8502  01299E  1827               	xorwf	RTCC_loop@prev_halfsec,w,c
  8503  0129A0  B4D8               	btfsc	status,2,c
  8504  0129A2  0012               	return	
  8505                           
  8506                           ; BSR set to: 15
  8507                           ;My_header\My_RTCC.h: 392: prev_halfsec = halfsec;
  8508  0129A4  C02B  F027         	movff	_halfsec,RTCC_loop@prev_halfsec
  8509                           
  8510                           ;My_header\My_RTCC.h: 393: colon = halfsec;
  8511  0129A8  C02B  F028         	movff	_halfsec,_colon
  8512                           
  8513                           ; BSR set to: 15
  8514                           ;My_header\My_RTCC.h: 394: time_change_flag = 1;
  8515  0129AC  0E01               	movlw	1
  8516  0129AE  0100               	movlb	0	; () banked
  8517  0129B0  6FB6               	movwf	_time_change_flag& (0+255),b
  8518  0129B2  0012               	return	
  8519                           
  8520                           ; BSR set to: 0
  8521  0129B4  0012               	return		;funcret
  8522  0129B6                     __end_of_RTCC_loop:
  8523                           	opt stack 0
  8524                           tblptru	equ	0xFF8
  8525                           tblptrh	equ	0xFF7
  8526                           tblptrl	equ	0xFF6
  8527                           tablat	equ	0xFF5
  8528                           prodh	equ	0xFF4
  8529                           prodl	equ	0xFF3
  8530                           intcon	equ	0xFF2
  8531                           intcon2	equ	0xFF1
  8532                           postinc0	equ	0xFEE
  8533                           wreg	equ	0xFE8
  8534                           indf1	equ	0xFE7
  8535                           postinc1	equ	0xFE6
  8536                           postdec1	equ	0xFE5
  8537                           fsr1h	equ	0xFE2
  8538                           fsr1l	equ	0xFE1
  8539                           indf2	equ	0xFDF
  8540                           postinc2	equ	0xFDE
  8541                           postdec2	equ	0xFDD
  8542                           fsr2h	equ	0xFDA
  8543                           fsr2l	equ	0xFD9
  8544                           status	equ	0xFD8
  8545                           
  8546 ;; *************** function _RTCC_from_epoch *****************
  8547 ;; Defined at:
  8548 ;;		line 242 in file "../My_header\My_RTCC.h"
  8549 ;; Parameters:    Size  Location     Type
  8550 ;;  ct              2   56[BANK0 ] PTR struct .
  8551 ;;		 -> caltime_now(7), 
  8552 ;;  ep              2   58[BANK0 ] PTR unsigned long 
  8553 ;;		 -> epoch_now(4), 
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;		None
  8556 ;; Return value:  Size  Location     Type
  8557 ;;		None               void
  8558 ;; Registers used:
  8559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8560 ;; Tracked objects:
  8561 ;;		On entry : 0/0
  8562 ;;		On exit  : 0/0
  8563 ;;		Unchanged: 0/0
  8564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8565 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8568 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8569 ;;Total ram usage:        4 bytes
  8570 ;; Hardware stack levels used:    1
  8571 ;; Hardware stack levels required when called:    7
  8572 ;; This function calls:
  8573 ;;		_caltime_to_RTCC
  8574 ;;		_epoch_to_caltime
  8575 ;; This function is called by:
  8576 ;;		_main
  8577 ;;		_RTCC_adjust_time_inc
  8578 ;;		_RTCC_adjust_time_dec
  8579 ;; This function uses a non-reentrant model
  8580 ;;
  8581                           
  8582                           	psect	text38
  8583  012A4A                     __ptext38:
  8584                           	opt stack 0
  8585  012A4A                     _RTCC_from_epoch:
  8586                           	opt stack 23
  8587                           
  8588                           ;My_header\My_RTCC.h: 243: epoch_to_caltime(ct, ep);
  8589                           
  8590                           ;incstack = 0
  8591  012A4A  C098  F088         	movff	RTCC_from_epoch@ct,epoch_to_caltime@ct
  8592  012A4E  C099  F089         	movff	RTCC_from_epoch@ct+1,epoch_to_caltime@ct+1
  8593  012A52  C09A  F08A         	movff	RTCC_from_epoch@ep,epoch_to_caltime@ep
  8594  012A56  C09B  F08B         	movff	RTCC_from_epoch@ep+1,epoch_to_caltime@ep+1
  8595  012A5A  ECA2  F088         	call	_epoch_to_caltime	;wreg free
  8596                           
  8597                           ;My_header\My_RTCC.h: 244: caltime_to_RTCC(ct);
  8598  012A5E  C098  F064         	movff	RTCC_from_epoch@ct,caltime_to_RTCC@ct
  8599  012A62  C099  F065         	movff	RTCC_from_epoch@ct+1,caltime_to_RTCC@ct+1
  8600  012A66  EC1D  F08C         	call	_caltime_to_RTCC	;wreg free
  8601  012A6A  0012               	return		;funcret
  8602  012A6C                     __end_of_RTCC_from_epoch:
  8603                           	opt stack 0
  8604                           tblptru	equ	0xFF8
  8605                           tblptrh	equ	0xFF7
  8606                           tblptrl	equ	0xFF6
  8607                           tablat	equ	0xFF5
  8608                           prodh	equ	0xFF4
  8609                           prodl	equ	0xFF3
  8610                           intcon	equ	0xFF2
  8611                           intcon2	equ	0xFF1
  8612                           postinc0	equ	0xFEE
  8613                           wreg	equ	0xFE8
  8614                           indf1	equ	0xFE7
  8615                           postinc1	equ	0xFE6
  8616                           postdec1	equ	0xFE5
  8617                           fsr1h	equ	0xFE2
  8618                           fsr1l	equ	0xFE1
  8619                           indf2	equ	0xFDF
  8620                           postinc2	equ	0xFDE
  8621                           postdec2	equ	0xFDD
  8622                           fsr2h	equ	0xFDA
  8623                           fsr2l	equ	0xFD9
  8624                           status	equ	0xFD8
  8625                           
  8626 ;; *************** function _epoch_to_caltime *****************
  8627 ;; Defined at:
  8628 ;;		line 157 in file "../My_header\My_RTCC.h"
  8629 ;; Parameters:    Size  Location     Type
  8630 ;;  ct              2   40[BANK0 ] PTR struct .
  8631 ;;		 -> caltime_now(7), 
  8632 ;;  ep              2   42[BANK0 ] PTR unsigned long 
  8633 ;;		 -> epoch_now(4), 
  8634 ;; Auto vars:     Size  Location     Type
  8635 ;;  num             4   52[BANK0 ] unsigned long 
  8636 ;;  day             2   48[BANK0 ] unsigned int 
  8637 ;;  day_since_ep    2   46[BANK0 ] unsigned int 
  8638 ;;  month           1   51[BANK0 ] unsigned char 
  8639 ;;  year            1   50[BANK0 ] unsigned char 
  8640 ;; Return value:  Size  Location     Type
  8641 ;;		None               void
  8642 ;; Registers used:
  8643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8649 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8650 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8651 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8652 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8653 ;;Total ram usage:       16 bytes
  8654 ;; Hardware stack levels used:    1
  8655 ;; Hardware stack levels required when called:    6
  8656 ;; This function calls:
  8657 ;;		_get_quot_rem
  8658 ;;		_month_length
  8659 ;; This function is called by:
  8660 ;;		_RTCC_from_caltime
  8661 ;;		_RTCC_from_epoch
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           
  8665                           	psect	text39
  8666  011144                     __ptext39:
  8667                           	opt stack 0
  8668  011144                     _epoch_to_caltime:
  8669                           	opt stack 19
  8670                           
  8671                           ;My_header\My_RTCC.h: 160: static uint16_t day_cache = 0;
  8672                           ;My_header\My_RTCC.h: 161: static uint8_t month_cache = 1;
  8673                           ;My_header\My_RTCC.h: 162: static uint8_t year_cache = 0;
  8674                           ;My_header\My_RTCC.h: 163: uint16_t day_since_epoch;
  8675                           ;My_header\My_RTCC.h: 164: uint16_t day;
  8676                           ;My_header\My_RTCC.h: 165: uint8_t year = 0;
  8677                           
  8678                           ;incstack = 0
  8679  011144  0E00               	movlw	0
  8680  011146  0100               	movlb	0	; () banked
  8681  011148  6F92               	movwf	epoch_to_caltime@year& (0+255),b
  8682                           
  8683                           ;My_header\My_RTCC.h: 166: uint8_t month = 1;
  8684  01114A  0E01               	movlw	1
  8685  01114C  0100               	movlb	0	; () banked
  8686  01114E  6F93               	movwf	epoch_to_caltime@month& (0+255),b
  8687                           
  8688                           ; BSR set to: 0
  8689                           ;My_header\My_RTCC.h: 167: epoch_t num;
  8690                           ;My_header\My_RTCC.h: 169: num = *ep;
  8691  011150  C08A  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  8692  011154  C08B  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  8693  011158  CFDE F094          	movff	postinc2,epoch_to_caltime@num
  8694  01115C  CFDE F095          	movff	postinc2,epoch_to_caltime@num+1
  8695  011160  CFDE F096          	movff	postinc2,epoch_to_caltime@num+2
  8696  011164  CFDE F097          	movff	postinc2,epoch_to_caltime@num+3
  8697                           
  8698                           ; BSR set to: 0
  8699                           ;My_header\My_RTCC.h: 170: ct->ss = get_quot_rem(&num, 60);
  8700  011168  0E94               	movlw	low epoch_to_caltime@num
  8701  01116A  0100               	movlb	0	; () banked
  8702  01116C  6F80               	movwf	get_quot_rem@quot& (0+255),b
  8703  01116E  0E00               	movlw	high epoch_to_caltime@num
  8704  011170  0100               	movlb	0	; () banked
  8705  011172  6F81               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8706  011174  0E3C               	movlw	60
  8707  011176  0100               	movlb	0	; () banked
  8708  011178  6F82               	movwf	get_quot_rem@div& (0+255),b
  8709  01117A  ECB2  F08B         	call	_get_quot_rem	;wreg free
  8710  01117E  0100               	movlb	0	; () banked
  8711  011180  5180               	movf	?_get_quot_rem& (0+255),w,b
  8712  011182  C088  FFD9         	movff	epoch_to_caltime@ct,fsr2l
  8713  011186  C089  FFDA         	movff	epoch_to_caltime@ct+1,fsr2h
  8714  01118A  6EDF               	movwf	indf2,c
  8715                           
  8716                           ; BSR set to: 0
  8717                           ;My_header\My_RTCC.h: 171: ct->mm = get_quot_rem(&num, 60);
  8718  01118C  0E94               	movlw	low epoch_to_caltime@num
  8719  01118E  0100               	movlb	0	; () banked
  8720  011190  6F80               	movwf	get_quot_rem@quot& (0+255),b
  8721  011192  0E00               	movlw	high epoch_to_caltime@num
  8722  011194  0100               	movlb	0	; () banked
  8723  011196  6F81               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8724  011198  0E3C               	movlw	60
  8725  01119A  0100               	movlb	0	; () banked
  8726  01119C  6F82               	movwf	get_quot_rem@div& (0+255),b
  8727  01119E  ECB2  F08B         	call	_get_quot_rem	;wreg free
  8728  0111A2  0100               	movlb	0	; () banked
  8729  0111A4  EE20 F001          	lfsr	2,1
  8730  0111A8  5188               	movf	epoch_to_caltime@ct& (0+255),w,b
  8731  0111AA  26D9               	addwf	fsr2l,f,c
  8732  0111AC  5189               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8733  0111AE  22DA               	addwfc	fsr2h,f,c
  8734  0111B0  0100               	movlb	0	; () banked
  8735  0111B2  C080  FFDF         	movff	?_get_quot_rem,indf2
  8736                           
  8737                           ; BSR set to: 0
  8738                           ;My_header\My_RTCC.h: 172: ct->hh = get_quot_rem(&num, 24);
  8739  0111B6  0E94               	movlw	low epoch_to_caltime@num
  8740  0111B8  0100               	movlb	0	; () banked
  8741  0111BA  6F80               	movwf	get_quot_rem@quot& (0+255),b
  8742  0111BC  0E00               	movlw	high epoch_to_caltime@num
  8743  0111BE  0100               	movlb	0	; () banked
  8744  0111C0  6F81               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8745  0111C2  0E18               	movlw	24
  8746  0111C4  0100               	movlb	0	; () banked
  8747  0111C6  6F82               	movwf	get_quot_rem@div& (0+255),b
  8748  0111C8  ECB2  F08B         	call	_get_quot_rem	;wreg free
  8749  0111CC  0100               	movlb	0	; () banked
  8750  0111CE  EE20 F002          	lfsr	2,2
  8751  0111D2  5188               	movf	epoch_to_caltime@ct& (0+255),w,b
  8752  0111D4  26D9               	addwf	fsr2l,f,c
  8753  0111D6  5189               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8754  0111D8  22DA               	addwfc	fsr2h,f,c
  8755  0111DA  0100               	movlb	0	; () banked
  8756  0111DC  C080  FFDF         	movff	?_get_quot_rem,indf2
  8757                           
  8758                           ; BSR set to: 0
  8759                           ;My_header\My_RTCC.h: 173: day = num;
  8760  0111E0  C094  F090         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  8761  0111E4  C095  F091         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  8762                           
  8763                           ; BSR set to: 0
  8764                           ;My_header\My_RTCC.h: 174: day_since_epoch = day;
  8765  0111E8  C090  F08E         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  8766  0111EC  C091  F08F         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  8767                           
  8768                           ; BSR set to: 0
  8769                           ;My_header\My_RTCC.h: 176: num += 6;
  8770  0111F0  0E06               	movlw	6
  8771  0111F2  0100               	movlb	0	; () banked
  8772  0111F4  2794               	addwf	epoch_to_caltime@num& (0+255),f,b
  8773  0111F6  0E00               	movlw	0
  8774  0111F8  2395               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  8775  0111FA  2396               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  8776  0111FC  2397               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  8777                           
  8778                           ; BSR set to: 0
  8779                           ;My_header\My_RTCC.h: 177: ct->EE = get_quot_rem(&num, 7);
  8780  0111FE  0E94               	movlw	low epoch_to_caltime@num
  8781  011200  0100               	movlb	0	; () banked
  8782  011202  6F80               	movwf	get_quot_rem@quot& (0+255),b
  8783  011204  0E00               	movlw	high epoch_to_caltime@num
  8784  011206  0100               	movlb	0	; () banked
  8785  011208  6F81               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8786  01120A  0E07               	movlw	7
  8787  01120C  0100               	movlb	0	; () banked
  8788  01120E  6F82               	movwf	get_quot_rem@div& (0+255),b
  8789  011210  ECB2  F08B         	call	_get_quot_rem	;wreg free
  8790  011214  0100               	movlb	0	; () banked
  8791  011216  EE20 F003          	lfsr	2,3
  8792  01121A  5188               	movf	epoch_to_caltime@ct& (0+255),w,b
  8793  01121C  26D9               	addwf	fsr2l,f,c
  8794  01121E  5189               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8795  011220  22DA               	addwfc	fsr2h,f,c
  8796  011222  0100               	movlb	0	; () banked
  8797  011224  C080  FFDF         	movff	?_get_quot_rem,indf2
  8798                           
  8799                           ;My_header\My_RTCC.h: 186: while (day >= month_length(year, month)) {
  8800  011228  D041               	goto	l4380
  8801  01122A                     l351:
  8802                           
  8803                           ; BSR set to: 0
  8804                           ;My_header\My_RTCC.h: 187: LATB2 = 1;
  8805  01122A  848A               	bsf	3978,2,c	;volatile
  8806                           
  8807                           ; BSR set to: 0
  8808                           ;My_header\My_RTCC.h: 188: day = day - month_length(year, month);
  8809  01122C  C093  F023         	movff	epoch_to_caltime@month,month_length@month
  8810  011230  0100               	movlb	0	; () banked
  8811  011232  5192               	movf	epoch_to_caltime@year& (0+255),w,b
  8812  011234  EC86  F08C         	call	_month_length
  8813  011238  0100               	movlb	0	; () banked
  8814  01123A  6F8C               	movwf	??_epoch_to_caltime& (0+255),b
  8815  01123C  6B8D               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  8816  01123E  0100               	movlb	0	; () banked
  8817  011240  1F8C               	comf	??_epoch_to_caltime& (0+255),f,b
  8818  011242  1F8D               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  8819  011244  4B8C               	infsnz	??_epoch_to_caltime& (0+255),f,b
  8820  011246  2B8D               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  8821  011248  0100               	movlb	0	; () banked
  8822  01124A  5190               	movf	epoch_to_caltime@day& (0+255),w,b
  8823  01124C  0100               	movlb	0	; () banked
  8824  01124E  258C               	addwf	??_epoch_to_caltime& (0+255),w,b
  8825  011250  0100               	movlb	0	; () banked
  8826  011252  6F90               	movwf	epoch_to_caltime@day& (0+255),b
  8827  011254  0100               	movlb	0	; () banked
  8828  011256  5191               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  8829  011258  0100               	movlb	0	; () banked
  8830  01125A  218D               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  8831  01125C  0100               	movlb	0	; () banked
  8832  01125E  6F91               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  8833                           
  8834                           ; BSR set to: 0
  8835                           ;My_header\My_RTCC.h: 189: if (month == 12) {
  8836  011260  0E0C               	movlw	12
  8837  011262  0100               	movlb	0	; () banked
  8838  011264  1993               	xorwf	epoch_to_caltime@month& (0+255),w,b
  8839  011266  A4D8               	btfss	status,2,c
  8840  011268  D019               	goto	l4374
  8841                           
  8842                           ; BSR set to: 0
  8843                           ;My_header\My_RTCC.h: 190: month = 1;
  8844  01126A  0E01               	movlw	1
  8845  01126C  0100               	movlb	0	; () banked
  8846  01126E  6F93               	movwf	epoch_to_caltime@month& (0+255),b
  8847                           
  8848                           ; BSR set to: 0
  8849                           ;My_header\My_RTCC.h: 191: year++;
  8850  011270  0100               	movlb	0	; () banked
  8851  011272  2B92               	incf	epoch_to_caltime@year& (0+255),f,b
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;My_header\My_RTCC.h: 193: if (year >= 100) {
  8855  011274  0E63               	movlw	99
  8856  011276  0100               	movlb	0	; () banked
  8857  011278  6592               	cpfsgt	epoch_to_caltime@year& (0+255),b
  8858  01127A  D013               	goto	l4376
  8859                           
  8860                           ; BSR set to: 0
  8861                           ;My_header\My_RTCC.h: 194: *ep -= 3155760000;
  8862  01127C  C08A  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  8863  011280  C08B  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  8864  011284  0E80               	movlw	128
  8865  011286  5EDE               	subwf	postinc2,f,c
  8866  011288  0E13               	movlw	19
  8867  01128A  5ADE               	subwfb	postinc2,f,c
  8868  01128C  0E19               	movlw	25
  8869  01128E  5ADE               	subwfb	postinc2,f,c
  8870  011290  0EBC               	movlw	188
  8871  011292  5ADE               	subwfb	postinc2,f,c
  8872                           
  8873                           ; BSR set to: 0
  8874                           ;My_header\My_RTCC.h: 195: year = 0;
  8875  011294  0E00               	movlw	0
  8876  011296  0100               	movlb	0	; () banked
  8877  011298  6F92               	movwf	epoch_to_caltime@year& (0+255),b
  8878                           
  8879                           ; BSR set to: 0
  8880                           ;My_header\My_RTCC.h: 196: }
  8881                           ;My_header\My_RTCC.h: 197: } else {
  8882  01129A  D003               	goto	l4376
  8883  01129C                     l4374:
  8884                           
  8885                           ; BSR set to: 0
  8886                           ;My_header\My_RTCC.h: 198: month++;
  8887  01129C  0100               	movlb	0	; () banked
  8888  01129E  2B93               	incf	epoch_to_caltime@month& (0+255),f,b
  8889  0112A0  D000               	goto	l4376
  8890  0112A2                     l4376:
  8891                           
  8892                           ; BSR set to: 0
  8893                           ;My_header\My_RTCC.h: 199: }
  8894                           ;My_header\My_RTCC.h: 200: month_cache = month;
  8895  0112A2  C093  F0FF         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  8896                           
  8897                           ; BSR set to: 0
  8898                           ;My_header\My_RTCC.h: 201: year_cache = year;
  8899  0112A6  C092  F0B7         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  8900  0112AA  D000               	goto	l4380
  8901  0112AC                     l4380:
  8902                           
  8903                           ; BSR set to: 0
  8904  0112AC  C093  F023         	movff	epoch_to_caltime@month,month_length@month
  8905  0112B0  0100               	movlb	0	; () banked
  8906  0112B2  5192               	movf	epoch_to_caltime@year& (0+255),w,b
  8907  0112B4  EC86  F08C         	call	_month_length
  8908  0112B8  0100               	movlb	0	; () banked
  8909  0112BA  6F8C               	movwf	??_epoch_to_caltime& (0+255),b
  8910  0112BC  0100               	movlb	0	; () banked
  8911  0112BE  518C               	movf	??_epoch_to_caltime& (0+255),w,b
  8912  0112C0  0100               	movlb	0	; () banked
  8913  0112C2  5D90               	subwf	epoch_to_caltime@day& (0+255),w,b
  8914  0112C4  0E00               	movlw	0
  8915  0112C6  5991               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  8916  0112C8  B0D8               	btfsc	status,0,c
  8917  0112CA  D7AF               	goto	l351
  8918                           
  8919                           ; BSR set to: 0
  8920                           ;My_header\My_RTCC.h: 202: }
  8921                           ;My_header\My_RTCC.h: 203: day_cache = day_since_epoch - day;
  8922                           
  8923                           ; BSR set to: 0
  8924  0112CC  C090  F08C         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  8925  0112D0  C091  F08D         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  8926  0112D4  0100               	movlb	0	; () banked
  8927  0112D6  1F8C               	comf	??_epoch_to_caltime& (0+255),f,b
  8928  0112D8  1F8D               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  8929  0112DA  4B8C               	infsnz	??_epoch_to_caltime& (0+255),f,b
  8930  0112DC  2B8D               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  8931  0112DE  0100               	movlb	0	; () banked
  8932  0112E0  518E               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  8933  0112E2  0100               	movlb	0	; () banked
  8934  0112E4  258C               	addwf	??_epoch_to_caltime& (0+255),w,b
  8935  0112E6  0100               	movlb	0	; () banked
  8936  0112E8  6FB3               	movwf	epoch_to_caltime@day_cache& (0+255),b
  8937  0112EA  0100               	movlb	0	; () banked
  8938  0112EC  518F               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  8939  0112EE  0100               	movlb	0	; () banked
  8940  0112F0  218D               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  8941  0112F2  0100               	movlb	0	; () banked
  8942  0112F4  6FB4               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  8943                           
  8944                           ; BSR set to: 0
  8945                           ;My_header\My_RTCC.h: 204: day++;
  8946  0112F6  0100               	movlb	0	; () banked
  8947  0112F8  4B90               	infsnz	epoch_to_caltime@day& (0+255),f,b
  8948  0112FA  2B91               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  8949                           
  8950                           ; BSR set to: 0
  8951                           ;My_header\My_RTCC.h: 206: ct->YY = year;
  8952  0112FC  0100               	movlb	0	; () banked
  8953  0112FE  EE20 F006          	lfsr	2,6
  8954  011302  5188               	movf	epoch_to_caltime@ct& (0+255),w,b
  8955  011304  26D9               	addwf	fsr2l,f,c
  8956  011306  5189               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8957  011308  22DA               	addwfc	fsr2h,f,c
  8958  01130A  C092  FFDF         	movff	epoch_to_caltime@year,indf2
  8959                           
  8960                           ; BSR set to: 0
  8961                           ;My_header\My_RTCC.h: 207: ct->MM = month;
  8962  01130E  0100               	movlb	0	; () banked
  8963  011310  EE20 F005          	lfsr	2,5
  8964  011314  5188               	movf	epoch_to_caltime@ct& (0+255),w,b
  8965  011316  26D9               	addwf	fsr2l,f,c
  8966  011318  5189               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8967  01131A  22DA               	addwfc	fsr2h,f,c
  8968  01131C  C093  FFDF         	movff	epoch_to_caltime@month,indf2
  8969                           
  8970                           ; BSR set to: 0
  8971                           ;My_header\My_RTCC.h: 208: ct->DD = day;
  8972  011320  0100               	movlb	0	; () banked
  8973  011322  EE20 F004          	lfsr	2,4
  8974  011326  5188               	movf	epoch_to_caltime@ct& (0+255),w,b
  8975  011328  26D9               	addwf	fsr2l,f,c
  8976  01132A  5189               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  8977  01132C  22DA               	addwfc	fsr2h,f,c
  8978  01132E  C090  FFDF         	movff	epoch_to_caltime@day,indf2
  8979                           
  8980                           ; BSR set to: 0
  8981  011332  0012               	return		;funcret
  8982  011334                     __end_of_epoch_to_caltime:
  8983                           	opt stack 0
  8984                           tblptru	equ	0xFF8
  8985                           tblptrh	equ	0xFF7
  8986                           tblptrl	equ	0xFF6
  8987                           tablat	equ	0xFF5
  8988                           prodh	equ	0xFF4
  8989                           prodl	equ	0xFF3
  8990                           intcon	equ	0xFF2
  8991                           intcon2	equ	0xFF1
  8992                           postinc0	equ	0xFEE
  8993                           wreg	equ	0xFE8
  8994                           indf1	equ	0xFE7
  8995                           postinc1	equ	0xFE6
  8996                           postdec1	equ	0xFE5
  8997                           fsr1h	equ	0xFE2
  8998                           fsr1l	equ	0xFE1
  8999                           indf2	equ	0xFDF
  9000                           postinc2	equ	0xFDE
  9001                           postdec2	equ	0xFDD
  9002                           fsr2h	equ	0xFDA
  9003                           fsr2l	equ	0xFD9
  9004                           status	equ	0xFD8
  9005                           
  9006 ;; *************** function _month_length *****************
  9007 ;; Defined at:
  9008 ;;		line 87 in file "../My_header\My_RTCC.h"
  9009 ;; Parameters:    Size  Location     Type
  9010 ;;  year            1    wreg     unsigned char 
  9011 ;;  month           1   34[COMRAM] unsigned char 
  9012 ;; Auto vars:     Size  Location     Type
  9013 ;;  year            1    6[BANK0 ] unsigned char 
  9014 ;; Return value:  Size  Location     Type
  9015 ;;                  1    wreg      unsigned char 
  9016 ;; Registers used:
  9017 ;;		wreg, status,2, status,0, cstack
  9018 ;; Tracked objects:
  9019 ;;		On entry : 0/0
  9020 ;;		On exit  : 0/0
  9021 ;;		Unchanged: 0/0
  9022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9023 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9024 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9025 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9026 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9027 ;;Total ram usage:        6 bytes
  9028 ;; Hardware stack levels used:    1
  9029 ;; Hardware stack levels required when called:    5
  9030 ;; This function calls:
  9031 ;;		___awmod
  9032 ;; This function is called by:
  9033 ;;		_epoch_to_caltime
  9034 ;;		_caltime_to_epoch
  9035 ;;		_command_at
  9036 ;;		_RTCC_adjust_time_inc
  9037 ;;		_RTCC_adjust_time_dec
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041                           	psect	text40
  9042  01190C                     __ptext40:
  9043                           	opt stack 0
  9044  01190C                     _month_length:
  9045                           	opt stack 20
  9046                           
  9047                           ; BSR set to: 0
  9048                           ;incstack = 0
  9049                           ;month_length@year stored from wreg
  9050  01190C  0100               	movlb	0	; () banked
  9051  01190E  6F66               	movwf	month_length@year& (0+255),b
  9052                           
  9053                           ; BSR set to: 0
  9054                           ;My_header\My_RTCC.h: 88: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year %
      +                           400);
  9055  011910  0E02               	movlw	2
  9056  011912  1823               	xorwf	month_length@month,w,c
  9057  011914  A4D8               	btfss	status,2,c
  9058  011916  D036               	goto	l4122
  9059                           
  9060                           ; BSR set to: 0
  9061  011918  C066  F01F         	movff	month_length@year,___awmod@dividend
  9062  01191C  6A20               	clrf	___awmod@dividend+1,c
  9063  01191E  0E00               	movlw	0
  9064  011920  6E22               	movwf	___awmod@divisor+1,c
  9065  011922  0E64               	movlw	100
  9066  011924  6E21               	movwf	___awmod@divisor,c
  9067  011926  EC61  F091         	call	___awmod	;wreg free
  9068  01192A  501F               	movf	?___awmod,w,c
  9069  01192C  1020               	iorwf	?___awmod+1,w,c
  9070  01192E  A4D8               	btfss	status,2,c
  9071  011930  D002               	goto	u4300
  9072  011932  0E01               	movlw	1
  9073  011934  D001               	goto	u4310
  9074  011936                     u4300:
  9075  011936  0E00               	movlw	0
  9076  011938                     u4310:
  9077  011938  0800               	sublw	0
  9078  01193A  0100               	movlb	0	; () banked
  9079  01193C  6F62               	movwf	??_month_length& (0+255),b
  9080  01193E  C066  F01F         	movff	month_length@year,___awmod@dividend
  9081  011942  6A20               	clrf	___awmod@dividend+1,c
  9082  011944  0E01               	movlw	1
  9083  011946  6E22               	movwf	___awmod@divisor+1,c
  9084  011948  0E90               	movlw	144
  9085  01194A  6E21               	movwf	___awmod@divisor,c
  9086  01194C  EC61  F091         	call	___awmod	;wreg free
  9087  011950  501F               	movf	?___awmod,w,c
  9088  011952  1020               	iorwf	?___awmod+1,w,c
  9089  011954  A4D8               	btfss	status,2,c
  9090  011956  D004               	goto	u4320
  9091  011958  0100               	movlb	0	; () banked
  9092  01195A  6B63               	clrf	(??_month_length+1)& (0+255),b
  9093  01195C  2B63               	incf	(??_month_length+1)& (0+255),f,b
  9094  01195E  D002               	goto	u4338
  9095  011960                     u4320:
  9096  011960  0100               	movlb	0	; () banked
  9097  011962  6B63               	clrf	(??_month_length+1)& (0+255),b
  9098  011964                     u4338:
  9099  011964  C066  F064         	movff	month_length@year,??_month_length+2
  9100  011968  0E03               	movlw	3
  9101  01196A  0100               	movlb	0	; () banked
  9102  01196C  1764               	andwf	(??_month_length+2)& (0+255),f,b
  9103  01196E  A4D8               	btfss	status,2,c
  9104  011970  D002               	goto	u4340
  9105  011972  0E01               	movlw	1
  9106  011974  D001               	goto	u4350
  9107  011976                     u4340:
  9108  011976  0E00               	movlw	0
  9109  011978                     u4350:
  9110  011978  0100               	movlb	0	; () banked
  9111  01197A  2563               	addwf	(??_month_length+1)& (0+255),w,b
  9112  01197C  0100               	movlb	0	; () banked
  9113  01197E  2562               	addwf	??_month_length& (0+255),w,b
  9114  011980  0F1C               	addlw	28
  9115                           
  9116                           ; BSR set to: 0
  9117                           
  9118                           ; BSR set to: 0
  9119  011982  0012               	return	
  9120  011984                     l4122:
  9121                           
  9122                           ; BSR set to: 0
  9123                           ;My_header\My_RTCC.h: 89: else return 31 - (((-(month & 1)^month)&13) == 4);
  9124  011984  5023               	movf	month_length@month,w,c
  9125  011986  0B01               	andlw	1
  9126  011988  0100               	movlb	0	; () banked
  9127  01198A  6F62               	movwf	??_month_length& (0+255),b
  9128  01198C  6B63               	clrf	(??_month_length+1)& (0+255),b
  9129  01198E  0100               	movlb	0	; () banked
  9130  011990  1F62               	comf	??_month_length& (0+255),f,b
  9131  011992  1F63               	comf	(??_month_length+1)& (0+255),f,b
  9132  011994  4B62               	infsnz	??_month_length& (0+255),f,b
  9133  011996  2B63               	incf	(??_month_length+1)& (0+255),f,b
  9134  011998  5023               	movf	month_length@month,w,c
  9135  01199A  0100               	movlb	0	; () banked
  9136  01199C  6F64               	movwf	(??_month_length+2)& (0+255),b
  9137  01199E  6B65               	clrf	(??_month_length+3)& (0+255),b
  9138  0119A0  0100               	movlb	0	; () banked
  9139  0119A2  5162               	movf	??_month_length& (0+255),w,b
  9140  0119A4  0100               	movlb	0	; () banked
  9141  0119A6  1B64               	xorwf	(??_month_length+2)& (0+255),f,b
  9142  0119A8  0100               	movlb	0	; () banked
  9143  0119AA  5163               	movf	(??_month_length+1)& (0+255),w,b
  9144  0119AC  0100               	movlb	0	; () banked
  9145  0119AE  1B65               	xorwf	(??_month_length+3)& (0+255),f,b
  9146  0119B0  0E0D               	movlw	13
  9147  0119B2  0100               	movlb	0	; () banked
  9148  0119B4  1764               	andwf	(??_month_length+2)& (0+255),f,b
  9149  0119B6  0E00               	movlw	0
  9150  0119B8  1765               	andwf	(??_month_length+3)& (0+255),f,b
  9151  0119BA  0E04               	movlw	4
  9152  0119BC  0100               	movlb	0	; () banked
  9153  0119BE  1964               	xorwf	(??_month_length+2)& (0+255),w,b
  9154  0119C0  0100               	movlb	0	; () banked
  9155  0119C2  1165               	iorwf	(??_month_length+3)& (0+255),w,b
  9156  0119C4  A4D8               	btfss	status,2,c
  9157  0119C6  D002               	goto	u4360
  9158  0119C8  0E01               	movlw	1
  9159  0119CA  D001               	goto	u4370
  9160  0119CC                     u4360:
  9161  0119CC  0E00               	movlw	0
  9162  0119CE                     u4370:
  9163  0119CE  0800               	sublw	0
  9164  0119D0  0F1F               	addlw	31
  9165                           
  9166                           ; BSR set to: 0
  9167  0119D2  0012               	return	
  9168                           
  9169                           ; BSR set to: 0
  9170                           
  9171                           ; BSR set to: 0
  9172  0119D4  0012               	return		;funcret
  9173  0119D6                     __end_of_month_length:
  9174                           	opt stack 0
  9175                           tblptru	equ	0xFF8
  9176                           tblptrh	equ	0xFF7
  9177                           tblptrl	equ	0xFF6
  9178                           tablat	equ	0xFF5
  9179                           prodh	equ	0xFF4
  9180                           prodl	equ	0xFF3
  9181                           intcon	equ	0xFF2
  9182                           intcon2	equ	0xFF1
  9183                           postinc0	equ	0xFEE
  9184                           wreg	equ	0xFE8
  9185                           indf1	equ	0xFE7
  9186                           postinc1	equ	0xFE6
  9187                           postdec1	equ	0xFE5
  9188                           fsr1h	equ	0xFE2
  9189                           fsr1l	equ	0xFE1
  9190                           indf2	equ	0xFDF
  9191                           postinc2	equ	0xFDE
  9192                           postdec2	equ	0xFDD
  9193                           fsr2h	equ	0xFDA
  9194                           fsr2l	equ	0xFD9
  9195                           status	equ	0xFD8
  9196                           
  9197 ;; *************** function ___awmod *****************
  9198 ;; Defined at:
  9199 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  9200 ;; Parameters:    Size  Location     Type
  9201 ;;  dividend        2   30[COMRAM] int 
  9202 ;;  divisor         2   32[COMRAM] int 
  9203 ;; Auto vars:     Size  Location     Type
  9204 ;;  sign            1    1[BANK0 ] unsigned char 
  9205 ;;  counter         1    0[BANK0 ] unsigned char 
  9206 ;; Return value:  Size  Location     Type
  9207 ;;                  2   30[COMRAM] int 
  9208 ;; Registers used:
  9209 ;;		wreg, status,2, status,0
  9210 ;; Tracked objects:
  9211 ;;		On entry : 0/0
  9212 ;;		On exit  : 0/0
  9213 ;;		Unchanged: 0/0
  9214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9215 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9216 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9218 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9219 ;;Total ram usage:        6 bytes
  9220 ;; Hardware stack levels used:    1
  9221 ;; Hardware stack levels required when called:    4
  9222 ;; This function calls:
  9223 ;;		Nothing
  9224 ;; This function is called by:
  9225 ;;		_month_length
  9226 ;; This function uses a non-reentrant model
  9227 ;;
  9228                           
  9229                           	psect	text41
  9230  0122C2                     __ptext41:
  9231                           	opt stack 0
  9232  0122C2                     ___awmod:
  9233                           	opt stack 20
  9234                           
  9235                           ; BSR set to: 0
  9236                           ;incstack = 0
  9237  0122C2  0E00               	movlw	0
  9238  0122C4  0100               	movlb	0	; () banked
  9239  0122C6  6F61               	movwf	___awmod@sign& (0+255),b
  9240                           
  9241                           ; BSR set to: 0
  9242  0122C8  AE20               	btfss	___awmod@dividend+1,7,c
  9243  0122CA  D008               	goto	l4072
  9244                           
  9245                           ; BSR set to: 0
  9246  0122CC  6C1F               	negf	___awmod@dividend,c
  9247  0122CE  1E20               	comf	___awmod@dividend+1,f,c
  9248  0122D0  B0D8               	btfsc	status,0,c
  9249  0122D2  2A20               	incf	___awmod@dividend+1,f,c
  9250                           
  9251                           ; BSR set to: 0
  9252  0122D4  0E01               	movlw	1
  9253  0122D6  0100               	movlb	0	; () banked
  9254  0122D8  6F61               	movwf	___awmod@sign& (0+255),b
  9255  0122DA  D000               	goto	l4072
  9256  0122DC                     l4072:
  9257                           
  9258                           ; BSR set to: 0
  9259  0122DC  AE22               	btfss	___awmod@divisor+1,7,c
  9260  0122DE  D005               	goto	l4076
  9261                           
  9262                           ; BSR set to: 0
  9263  0122E0  6C21               	negf	___awmod@divisor,c
  9264  0122E2  1E22               	comf	___awmod@divisor+1,f,c
  9265  0122E4  B0D8               	btfsc	status,0,c
  9266  0122E6  2A22               	incf	___awmod@divisor+1,f,c
  9267  0122E8  D000               	goto	l4076
  9268  0122EA                     l4076:
  9269                           
  9270                           ; BSR set to: 0
  9271  0122EA  5021               	movf	___awmod@divisor,w,c
  9272  0122EC  1022               	iorwf	___awmod@divisor+1,w,c
  9273  0122EE  B4D8               	btfsc	status,2,c
  9274  0122F0  D020               	goto	l4092
  9275                           
  9276                           ; BSR set to: 0
  9277  0122F2  0E01               	movlw	1
  9278  0122F4  0100               	movlb	0	; () banked
  9279  0122F6  6F60               	movwf	___awmod@counter& (0+255),b
  9280  0122F8  D006               	goto	l4082
  9281  0122FA                     l4080:
  9282                           
  9283                           ; BSR set to: 0
  9284  0122FA  90D8               	bcf	status,0,c
  9285  0122FC  3621               	rlcf	___awmod@divisor,f,c
  9286  0122FE  3622               	rlcf	___awmod@divisor+1,f,c
  9287  012300  0100               	movlb	0	; () banked
  9288  012302  2B60               	incf	___awmod@counter& (0+255),f,b
  9289  012304  D000               	goto	l4082
  9290  012306                     l4082:
  9291                           
  9292                           ; BSR set to: 0
  9293  012306  BE22               	btfsc	___awmod@divisor+1,7,c
  9294  012308  D002               	goto	l4084
  9295  01230A  D7F7               	goto	l4080
  9296                           
  9297                           ; BSR set to: 0
  9298  01230C  D000               	goto	l4084
  9299  01230E                     l4084:
  9300                           
  9301                           ; BSR set to: 0
  9302  01230E  5021               	movf	___awmod@divisor,w,c
  9303  012310  5C1F               	subwf	___awmod@dividend,w,c
  9304  012312  5022               	movf	___awmod@divisor+1,w,c
  9305  012314  5820               	subwfb	___awmod@dividend+1,w,c
  9306  012316  A0D8               	btfss	status,0,c
  9307  012318  D005               	goto	l4088
  9308                           
  9309                           ; BSR set to: 0
  9310  01231A  5021               	movf	___awmod@divisor,w,c
  9311  01231C  5E1F               	subwf	___awmod@dividend,f,c
  9312  01231E  5022               	movf	___awmod@divisor+1,w,c
  9313  012320  5A20               	subwfb	___awmod@dividend+1,f,c
  9314  012322  D000               	goto	l4088
  9315  012324                     l4088:
  9316                           
  9317                           ; BSR set to: 0
  9318  012324  90D8               	bcf	status,0,c
  9319  012326  3222               	rrcf	___awmod@divisor+1,f,c
  9320  012328  3221               	rrcf	___awmod@divisor,f,c
  9321                           
  9322                           ; BSR set to: 0
  9323  01232A  0100               	movlb	0	; () banked
  9324  01232C  2F60               	decfsz	___awmod@counter& (0+255),f,b
  9325  01232E  D7EF               	goto	l4084
  9326                           
  9327                           ; BSR set to: 0
  9328  012330  D000               	goto	l4092
  9329  012332                     l4092:
  9330                           
  9331                           ; BSR set to: 0
  9332  012332  0100               	movlb	0	; () banked
  9333  012334  5161               	movf	___awmod@sign& (0+255),w,b
  9334  012336  0100               	movlb	0	; () banked
  9335  012338  B4D8               	btfsc	status,2,c
  9336  01233A  D005               	goto	l4096
  9337                           
  9338                           ; BSR set to: 0
  9339  01233C  6C1F               	negf	___awmod@dividend,c
  9340  01233E  1E20               	comf	___awmod@dividend+1,f,c
  9341  012340  B0D8               	btfsc	status,0,c
  9342  012342  2A20               	incf	___awmod@dividend+1,f,c
  9343  012344  D000               	goto	l4096
  9344  012346                     l4096:
  9345                           
  9346                           ; BSR set to: 0
  9347  012346  C01F  F01F         	movff	___awmod@dividend,?___awmod
  9348  01234A  C020  F020         	movff	___awmod@dividend+1,?___awmod+1
  9349  01234E  0012               	return	
  9350                           
  9351                           ; BSR set to: 0
  9352                           
  9353                           ; BSR set to: 0
  9354  012350  0012               	return		;funcret
  9355  012352                     __end_of___awmod:
  9356                           	opt stack 0
  9357                           tblptru	equ	0xFF8
  9358                           tblptrh	equ	0xFF7
  9359                           tblptrl	equ	0xFF6
  9360                           tablat	equ	0xFF5
  9361                           prodh	equ	0xFF4
  9362                           prodl	equ	0xFF3
  9363                           intcon	equ	0xFF2
  9364                           intcon2	equ	0xFF1
  9365                           postinc0	equ	0xFEE
  9366                           wreg	equ	0xFE8
  9367                           indf1	equ	0xFE7
  9368                           postinc1	equ	0xFE6
  9369                           postdec1	equ	0xFE5
  9370                           fsr1h	equ	0xFE2
  9371                           fsr1l	equ	0xFE1
  9372                           indf2	equ	0xFDF
  9373                           postinc2	equ	0xFDE
  9374                           postdec2	equ	0xFDD
  9375                           fsr2h	equ	0xFDA
  9376                           fsr2l	equ	0xFD9
  9377                           status	equ	0xFD8
  9378                           
  9379 ;; *************** function _get_quot_rem *****************
  9380 ;; Defined at:
  9381 ;;		line 112 in file "../My_header\My_RTCC.h"
  9382 ;; Parameters:    Size  Location     Type
  9383 ;;  quot            2   32[BANK0 ] PTR unsigned long 
  9384 ;;		 -> epoch_to_caltime@num(4), 
  9385 ;;  div             1   34[BANK0 ] unsigned char 
  9386 ;; Auto vars:     Size  Location     Type
  9387 ;;  num             4   36[BANK0 ] unsigned long 
  9388 ;; Return value:  Size  Location     Type
  9389 ;;                  4   32[BANK0 ] unsigned long 
  9390 ;; Registers used:
  9391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9392 ;; Tracked objects:
  9393 ;;		On entry : 0/0
  9394 ;;		On exit  : 0/0
  9395 ;;		Unchanged: 0/0
  9396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9397 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9398 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9400 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9401 ;;Total ram usage:        8 bytes
  9402 ;; Hardware stack levels used:    1
  9403 ;; Hardware stack levels required when called:    5
  9404 ;; This function calls:
  9405 ;;		___lldiv
  9406 ;;		___lmul
  9407 ;; This function is called by:
  9408 ;;		_epoch_to_caltime
  9409 ;; This function uses a non-reentrant model
  9410 ;;
  9411                           
  9412                           	psect	text42
  9413  011764                     __ptext42:
  9414                           	opt stack 0
  9415  011764                     _get_quot_rem:
  9416                           	opt stack 19
  9417                           
  9418                           ;My_header\My_RTCC.h: 115: epoch_t num = *quot;
  9419                           
  9420                           ; BSR set to: 0
  9421                           ;incstack = 0
  9422  011764  C080  FFD9         	movff	get_quot_rem@quot,fsr2l
  9423  011768  C081  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  9424  01176C  CFDE F084          	movff	postinc2,get_quot_rem@num
  9425  011770  CFDE F085          	movff	postinc2,get_quot_rem@num+1
  9426  011774  CFDE F086          	movff	postinc2,get_quot_rem@num+2
  9427  011778  CFDE F087          	movff	postinc2,get_quot_rem@num+3
  9428                           
  9429                           ;My_header\My_RTCC.h: 116: return num - (*quot = num / div) * div;
  9430  01177C  0100               	movlb	0	; () banked
  9431  01177E  5182               	movf	get_quot_rem@div& (0+255),w,b
  9432  011780  0100               	movlb	0	; () banked
  9433  011782  6F77               	movwf	___lldiv@divisor& (0+255),b
  9434  011784  6B78               	clrf	(___lldiv@divisor+1)& (0+255),b
  9435  011786  6B79               	clrf	(___lldiv@divisor+2)& (0+255),b
  9436  011788  6B7A               	clrf	(___lldiv@divisor+3)& (0+255),b
  9437  01178A  C084  F073         	movff	get_quot_rem@num,___lldiv@dividend
  9438  01178E  C085  F074         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  9439  011792  C086  F075         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  9440  011796  C087  F076         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  9441  01179A  EC4E  F08D         	call	___lldiv	;wreg free
  9442  01179E  C080  FFD9         	movff	get_quot_rem@quot,fsr2l
  9443  0117A2  C081  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  9444  0117A6  0100               	movlb	0	; () banked
  9445  0117A8  C073  FFDE         	movff	?___lldiv,postinc2
  9446  0117AC  0100               	movlb	0	; () banked
  9447  0117AE  C074  FFDE         	movff	?___lldiv+1,postinc2
  9448  0117B2  0100               	movlb	0	; () banked
  9449  0117B4  C075  FFDE         	movff	?___lldiv+2,postinc2
  9450  0117B8  0100               	movlb	0	; () banked
  9451  0117BA  C076  FFDD         	movff	?___lldiv+3,postdec2
  9452  0117BE  52DD               	movf	postdec2,f,c
  9453  0117C0  52DD               	movf	postdec2,f,c
  9454  0117C2  CFDE F067          	movff	postinc2,___lmul@multiplier
  9455  0117C6  CFDE F068          	movff	postinc2,___lmul@multiplier+1
  9456  0117CA  CFDE F069          	movff	postinc2,___lmul@multiplier+2
  9457  0117CE  CFDE F06A          	movff	postinc2,___lmul@multiplier+3
  9458  0117D2  0100               	movlb	0	; () banked
  9459  0117D4  5182               	movf	get_quot_rem@div& (0+255),w,b
  9460  0117D6  0100               	movlb	0	; () banked
  9461  0117D8  6F6B               	movwf	___lmul@multiplicand& (0+255),b
  9462  0117DA  6B6C               	clrf	(___lmul@multiplicand+1)& (0+255),b
  9463  0117DC  6B6D               	clrf	(___lmul@multiplicand+2)& (0+255),b
  9464  0117DE  6B6E               	clrf	(___lmul@multiplicand+3)& (0+255),b
  9465  0117E0  ECB2  F092         	call	___lmul	;wreg free
  9466  0117E4  0100               	movlb	0	; () banked
  9467  0117E6  1F67               	comf	?___lmul& (0+255),f,b
  9468  0117E8  0100               	movlb	0	; () banked
  9469  0117EA  1F68               	comf	(?___lmul+1)& (0+255),f,b
  9470  0117EC  0100               	movlb	0	; () banked
  9471  0117EE  1F69               	comf	(?___lmul+2)& (0+255),f,b
  9472  0117F0  0100               	movlb	0	; () banked
  9473  0117F2  1F6A               	comf	(?___lmul+3)& (0+255),f,b
  9474  0117F4  0100               	movlb	0	; () banked
  9475  0117F6  2B67               	incf	?___lmul& (0+255),f,b
  9476  0117F8  0E00               	movlw	0
  9477  0117FA  0100               	movlb	0	; () banked
  9478  0117FC  2368               	addwfc	(?___lmul+1)& (0+255),f,b
  9479  0117FE  0100               	movlb	0	; () banked
  9480  011800  2369               	addwfc	(?___lmul+2)& (0+255),f,b
  9481  011802  0100               	movlb	0	; () banked
  9482  011804  236A               	addwfc	(?___lmul+3)& (0+255),f,b
  9483  011806  0100               	movlb	0	; () banked
  9484  011808  5184               	movf	get_quot_rem@num& (0+255),w,b
  9485  01180A  0100               	movlb	0	; () banked
  9486  01180C  2567               	addwf	?___lmul& (0+255),w,b
  9487  01180E  0100               	movlb	0	; () banked
  9488  011810  6F80               	movwf	?_get_quot_rem& (0+255),b
  9489  011812  0100               	movlb	0	; () banked
  9490  011814  5185               	movf	(get_quot_rem@num+1)& (0+255),w,b
  9491  011816  0100               	movlb	0	; () banked
  9492  011818  2168               	addwfc	(?___lmul+1)& (0+255),w,b
  9493  01181A  0100               	movlb	0	; () banked
  9494  01181C  6F81               	movwf	(?_get_quot_rem+1)& (0+255),b
  9495  01181E  0100               	movlb	0	; () banked
  9496  011820  5186               	movf	(get_quot_rem@num+2)& (0+255),w,b
  9497  011822  0100               	movlb	0	; () banked
  9498  011824  2169               	addwfc	(?___lmul+2)& (0+255),w,b
  9499  011826  0100               	movlb	0	; () banked
  9500  011828  6F82               	movwf	(?_get_quot_rem+2)& (0+255),b
  9501  01182A  0100               	movlb	0	; () banked
  9502  01182C  5187               	movf	(get_quot_rem@num+3)& (0+255),w,b
  9503  01182E  0100               	movlb	0	; () banked
  9504  011830  216A               	addwfc	(?___lmul+3)& (0+255),w,b
  9505  011832  0100               	movlb	0	; () banked
  9506  011834  6F83               	movwf	(?_get_quot_rem+3)& (0+255),b
  9507  011836  0012               	return	
  9508                           
  9509                           ; BSR set to: 0
  9510                           
  9511                           ; BSR set to: 0
  9512  011838  0012               	return		;funcret
  9513  01183A                     __end_of_get_quot_rem:
  9514                           	opt stack 0
  9515                           tblptru	equ	0xFF8
  9516                           tblptrh	equ	0xFF7
  9517                           tblptrl	equ	0xFF6
  9518                           tablat	equ	0xFF5
  9519                           prodh	equ	0xFF4
  9520                           prodl	equ	0xFF3
  9521                           intcon	equ	0xFF2
  9522                           intcon2	equ	0xFF1
  9523                           postinc0	equ	0xFEE
  9524                           wreg	equ	0xFE8
  9525                           indf1	equ	0xFE7
  9526                           postinc1	equ	0xFE6
  9527                           postdec1	equ	0xFE5
  9528                           fsr1h	equ	0xFE2
  9529                           fsr1l	equ	0xFE1
  9530                           indf2	equ	0xFDF
  9531                           postinc2	equ	0xFDE
  9532                           postdec2	equ	0xFDD
  9533                           fsr2h	equ	0xFDA
  9534                           fsr2l	equ	0xFD9
  9535                           status	equ	0xFD8
  9536                           
  9537 ;; *************** function ___lmul *****************
  9538 ;; Defined at:
  9539 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
  9540 ;; Parameters:    Size  Location     Type
  9541 ;;  multiplier      4    7[BANK0 ] unsigned long 
  9542 ;;  multiplicand    4   11[BANK0 ] unsigned long 
  9543 ;; Auto vars:     Size  Location     Type
  9544 ;;  product         4   15[BANK0 ] unsigned long 
  9545 ;; Return value:  Size  Location     Type
  9546 ;;                  4    7[BANK0 ] unsigned long 
  9547 ;; Registers used:
  9548 ;;		wreg, status,2, status,0
  9549 ;; Tracked objects:
  9550 ;;		On entry : 0/0
  9551 ;;		On exit  : 0/0
  9552 ;;		Unchanged: 0/0
  9553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9554 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9555 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9557 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9558 ;;Total ram usage:       12 bytes
  9559 ;; Hardware stack levels used:    1
  9560 ;; Hardware stack levels required when called:    4
  9561 ;; This function calls:
  9562 ;;		Nothing
  9563 ;; This function is called by:
  9564 ;;		_get_quot_rem
  9565 ;;		_caltime_to_epoch
  9566 ;;		_main
  9567 ;;		_RTCC_adjust_time_inc
  9568 ;;		_RTCC_adjust_time_dec
  9569 ;; This function uses a non-reentrant model
  9570 ;;
  9571                           
  9572                           	psect	text43
  9573  012564                     __ptext43:
  9574                           	opt stack 0
  9575  012564                     ___lmul:
  9576                           	opt stack 21
  9577                           
  9578                           ; BSR set to: 0
  9579                           ;incstack = 0
  9580  012564  0E00               	movlw	0
  9581  012566  0100               	movlb	0	; () banked
  9582  012568  6F6F               	movwf	___lmul@product& (0+255),b
  9583  01256A  0E00               	movlw	0
  9584  01256C  6F70               	movwf	(___lmul@product+1)& (0+255),b
  9585  01256E  0E00               	movlw	0
  9586  012570  6F71               	movwf	(___lmul@product+2)& (0+255),b
  9587  012572  0E00               	movlw	0
  9588  012574  6F72               	movwf	(___lmul@product+3)& (0+255),b
  9589  012576  D000               	goto	l4128
  9590  012578                     l4128:
  9591                           
  9592                           ; BSR set to: 0
  9593  012578  0100               	movlb	0	; () banked
  9594  01257A  A167               	btfss	___lmul@multiplier& (0+255),0,b
  9595  01257C  D011               	goto	l4132
  9596                           
  9597                           ; BSR set to: 0
  9598  01257E  0100               	movlb	0	; () banked
  9599  012580  516B               	movf	___lmul@multiplicand& (0+255),w,b
  9600  012582  0100               	movlb	0	; () banked
  9601  012584  276F               	addwf	___lmul@product& (0+255),f,b
  9602  012586  0100               	movlb	0	; () banked
  9603  012588  516C               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  9604  01258A  0100               	movlb	0	; () banked
  9605  01258C  2370               	addwfc	(___lmul@product+1)& (0+255),f,b
  9606  01258E  0100               	movlb	0	; () banked
  9607  012590  516D               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  9608  012592  0100               	movlb	0	; () banked
  9609  012594  2371               	addwfc	(___lmul@product+2)& (0+255),f,b
  9610  012596  0100               	movlb	0	; () banked
  9611  012598  516E               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  9612  01259A  0100               	movlb	0	; () banked
  9613  01259C  2372               	addwfc	(___lmul@product+3)& (0+255),f,b
  9614  01259E  D000               	goto	l4132
  9615  0125A0                     l4132:
  9616                           
  9617                           ; BSR set to: 0
  9618  0125A0  0100               	movlb	0	; () banked
  9619  0125A2  90D8               	bcf	status,0,c
  9620  0125A4  376B               	rlcf	___lmul@multiplicand& (0+255),f,b
  9621  0125A6  376C               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  9622  0125A8  376D               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  9623  0125AA  376E               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  9624                           
  9625                           ; BSR set to: 0
  9626  0125AC  0100               	movlb	0	; () banked
  9627  0125AE  90D8               	bcf	status,0,c
  9628  0125B0  336A               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  9629  0125B2  3369               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  9630  0125B4  3368               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  9631  0125B6  3367               	rrcf	___lmul@multiplier& (0+255),f,b
  9632  0125B8  0100               	movlb	0	; () banked
  9633  0125BA  5167               	movf	___lmul@multiplier& (0+255),w,b
  9634  0125BC  0100               	movlb	0	; () banked
  9635  0125BE  1168               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  9636  0125C0  0100               	movlb	0	; () banked
  9637  0125C2  1169               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  9638  0125C4  0100               	movlb	0	; () banked
  9639  0125C6  116A               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  9640  0125C8  A4D8               	btfss	status,2,c
  9641  0125CA  D7D6               	goto	l4128
  9642                           
  9643                           ; BSR set to: 0
  9644  0125CC  C06F  F067         	movff	___lmul@product,?___lmul
  9645  0125D0  C070  F068         	movff	___lmul@product+1,?___lmul+1
  9646  0125D4  C071  F069         	movff	___lmul@product+2,?___lmul+2
  9647  0125D8  C072  F06A         	movff	___lmul@product+3,?___lmul+3
  9648                           
  9649                           ; BSR set to: 0
  9650  0125DC  0012               	return		;funcret
  9651  0125DE                     __end_of___lmul:
  9652                           	opt stack 0
  9653                           tblptru	equ	0xFF8
  9654                           tblptrh	equ	0xFF7
  9655                           tblptrl	equ	0xFF6
  9656                           tablat	equ	0xFF5
  9657                           prodh	equ	0xFF4
  9658                           prodl	equ	0xFF3
  9659                           intcon	equ	0xFF2
  9660                           intcon2	equ	0xFF1
  9661                           postinc0	equ	0xFEE
  9662                           wreg	equ	0xFE8
  9663                           indf1	equ	0xFE7
  9664                           postinc1	equ	0xFE6
  9665                           postdec1	equ	0xFE5
  9666                           fsr1h	equ	0xFE2
  9667                           fsr1l	equ	0xFE1
  9668                           indf2	equ	0xFDF
  9669                           postinc2	equ	0xFDE
  9670                           postdec2	equ	0xFDD
  9671                           fsr2h	equ	0xFDA
  9672                           fsr2l	equ	0xFD9
  9673                           status	equ	0xFD8
  9674                           
  9675 ;; *************** function ___lldiv *****************
  9676 ;; Defined at:
  9677 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  9678 ;; Parameters:    Size  Location     Type
  9679 ;;  dividend        4   19[BANK0 ] unsigned long 
  9680 ;;  divisor         4   23[BANK0 ] unsigned long 
  9681 ;; Auto vars:     Size  Location     Type
  9682 ;;  quotient        4   27[BANK0 ] unsigned long 
  9683 ;;  counter         1   31[BANK0 ] unsigned char 
  9684 ;; Return value:  Size  Location     Type
  9685 ;;                  4   19[BANK0 ] unsigned long 
  9686 ;; Registers used:
  9687 ;;		wreg, status,2, status,0
  9688 ;; Tracked objects:
  9689 ;;		On entry : 0/0
  9690 ;;		On exit  : 0/0
  9691 ;;		Unchanged: 0/0
  9692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9693 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9694 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9696 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9697 ;;Total ram usage:       13 bytes
  9698 ;; Hardware stack levels used:    1
  9699 ;; Hardware stack levels required when called:    4
  9700 ;; This function calls:
  9701 ;;		Nothing
  9702 ;; This function is called by:
  9703 ;;		_get_quot_rem
  9704 ;;		_main
  9705 ;;		_CTMU_read
  9706 ;;		_my_utoa32
  9707 ;; This function uses a non-reentrant model
  9708 ;;
  9709                           
  9710                           	psect	text44
  9711  011A9C                     __ptext44:
  9712                           	opt stack 0
  9713  011A9C                     ___lldiv:
  9714                           	opt stack 19
  9715                           
  9716                           ; BSR set to: 0
  9717                           ;incstack = 0
  9718  011A9C  0E00               	movlw	0
  9719  011A9E  0100               	movlb	0	; () banked
  9720  011AA0  6F7B               	movwf	___lldiv@quotient& (0+255),b
  9721  011AA2  0E00               	movlw	0
  9722  011AA4  6F7C               	movwf	(___lldiv@quotient+1)& (0+255),b
  9723  011AA6  0E00               	movlw	0
  9724  011AA8  6F7D               	movwf	(___lldiv@quotient+2)& (0+255),b
  9725  011AAA  0E00               	movlw	0
  9726  011AAC  6F7E               	movwf	(___lldiv@quotient+3)& (0+255),b
  9727                           
  9728                           ; BSR set to: 0
  9729  011AAE  0100               	movlb	0	; () banked
  9730  011AB0  5177               	movf	___lldiv@divisor& (0+255),w,b
  9731  011AB2  0100               	movlb	0	; () banked
  9732  011AB4  1178               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  9733  011AB6  0100               	movlb	0	; () banked
  9734  011AB8  1179               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  9735  011ABA  0100               	movlb	0	; () banked
  9736  011ABC  117A               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  9737  011ABE  B4D8               	btfsc	status,2,c
  9738  011AC0  D047               	goto	l1120
  9739                           
  9740                           ; BSR set to: 0
  9741  011AC2  0E01               	movlw	1
  9742  011AC4  0100               	movlb	0	; () banked
  9743  011AC6  6F7F               	movwf	___lldiv@counter& (0+255),b
  9744  011AC8  D009               	goto	l4188
  9745  011ACA                     l4186:
  9746                           
  9747                           ; BSR set to: 0
  9748  011ACA  0100               	movlb	0	; () banked
  9749  011ACC  90D8               	bcf	status,0,c
  9750  011ACE  3777               	rlcf	___lldiv@divisor& (0+255),f,b
  9751  011AD0  3778               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  9752  011AD2  3779               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  9753  011AD4  377A               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  9754  011AD6  0100               	movlb	0	; () banked
  9755  011AD8  2B7F               	incf	___lldiv@counter& (0+255),f,b
  9756  011ADA  D000               	goto	l4188
  9757  011ADC                     l4188:
  9758                           
  9759                           ; BSR set to: 0
  9760  011ADC  0100               	movlb	0	; () banked
  9761  011ADE  BF7A               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
  9762  011AE0  D002               	goto	l4190
  9763  011AE2  D7F3               	goto	l4186
  9764                           
  9765                           ; BSR set to: 0
  9766  011AE4  D000               	goto	l4190
  9767  011AE6                     l4190:
  9768                           
  9769                           ; BSR set to: 0
  9770  011AE6  0100               	movlb	0	; () banked
  9771  011AE8  90D8               	bcf	status,0,c
  9772  011AEA  377B               	rlcf	___lldiv@quotient& (0+255),f,b
  9773  011AEC  377C               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  9774  011AEE  377D               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  9775  011AF0  377E               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  9776                           
  9777                           ; BSR set to: 0
  9778  011AF2  0100               	movlb	0	; () banked
  9779  011AF4  5177               	movf	___lldiv@divisor& (0+255),w,b
  9780  011AF6  0100               	movlb	0	; () banked
  9781  011AF8  5D73               	subwf	___lldiv@dividend& (0+255),w,b
  9782  011AFA  0100               	movlb	0	; () banked
  9783  011AFC  5178               	movf	(___lldiv@divisor+1)& (0+255),w,b
  9784  011AFE  0100               	movlb	0	; () banked
  9785  011B00  5974               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  9786  011B02  0100               	movlb	0	; () banked
  9787  011B04  5179               	movf	(___lldiv@divisor+2)& (0+255),w,b
  9788  011B06  0100               	movlb	0	; () banked
  9789  011B08  5975               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  9790  011B0A  0100               	movlb	0	; () banked
  9791  011B0C  517A               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9792  011B0E  0100               	movlb	0	; () banked
  9793  011B10  5976               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  9794  011B12  A0D8               	btfss	status,0,c
  9795  011B14  D013               	goto	l4198
  9796                           
  9797                           ; BSR set to: 0
  9798  011B16  0100               	movlb	0	; () banked
  9799  011B18  5177               	movf	___lldiv@divisor& (0+255),w,b
  9800  011B1A  0100               	movlb	0	; () banked
  9801  011B1C  5F73               	subwf	___lldiv@dividend& (0+255),f,b
  9802  011B1E  0100               	movlb	0	; () banked
  9803  011B20  5178               	movf	(___lldiv@divisor+1)& (0+255),w,b
  9804  011B22  0100               	movlb	0	; () banked
  9805  011B24  5B74               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  9806  011B26  0100               	movlb	0	; () banked
  9807  011B28  5179               	movf	(___lldiv@divisor+2)& (0+255),w,b
  9808  011B2A  0100               	movlb	0	; () banked
  9809  011B2C  5B75               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  9810  011B2E  0100               	movlb	0	; () banked
  9811  011B30  517A               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9812  011B32  0100               	movlb	0	; () banked
  9813  011B34  5B76               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  9814                           
  9815                           ; BSR set to: 0
  9816  011B36  0100               	movlb	0	; () banked
  9817  011B38  817B               	bsf	___lldiv@quotient& (0+255),0,b
  9818  011B3A  D000               	goto	l4198
  9819  011B3C                     l4198:
  9820                           
  9821                           ; BSR set to: 0
  9822  011B3C  0100               	movlb	0	; () banked
  9823  011B3E  90D8               	bcf	status,0,c
  9824  011B40  337A               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  9825  011B42  3379               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  9826  011B44  3378               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  9827  011B46  3377               	rrcf	___lldiv@divisor& (0+255),f,b
  9828                           
  9829                           ; BSR set to: 0
  9830  011B48  0100               	movlb	0	; () banked
  9831  011B4A  2F7F               	decfsz	___lldiv@counter& (0+255),f,b
  9832  011B4C  D7CC               	goto	l4190
  9833  011B4E  D000               	goto	l1120
  9834  011B50                     l1120:
  9835                           
  9836                           ; BSR set to: 0
  9837  011B50  C07B  F073         	movff	___lldiv@quotient,?___lldiv
  9838  011B54  C07C  F074         	movff	___lldiv@quotient+1,?___lldiv+1
  9839  011B58  C07D  F075         	movff	___lldiv@quotient+2,?___lldiv+2
  9840  011B5C  C07E  F076         	movff	___lldiv@quotient+3,?___lldiv+3
  9841                           
  9842                           ; BSR set to: 0
  9843  011B60  0012               	return		;funcret
  9844  011B62                     __end_of___lldiv:
  9845                           	opt stack 0
  9846                           tblptru	equ	0xFF8
  9847                           tblptrh	equ	0xFF7
  9848                           tblptrl	equ	0xFF6
  9849                           tablat	equ	0xFF5
  9850                           prodh	equ	0xFF4
  9851                           prodl	equ	0xFF3
  9852                           intcon	equ	0xFF2
  9853                           intcon2	equ	0xFF1
  9854                           postinc0	equ	0xFEE
  9855                           wreg	equ	0xFE8
  9856                           indf1	equ	0xFE7
  9857                           postinc1	equ	0xFE6
  9858                           postdec1	equ	0xFE5
  9859                           fsr1h	equ	0xFE2
  9860                           fsr1l	equ	0xFE1
  9861                           indf2	equ	0xFDF
  9862                           postinc2	equ	0xFDE
  9863                           postdec2	equ	0xFDD
  9864                           fsr2h	equ	0xFDA
  9865                           fsr2l	equ	0xFD9
  9866                           status	equ	0xFD8
  9867                           
  9868 ;; *************** function _caltime_to_RTCC *****************
  9869 ;; Defined at:
  9870 ;;		line 137 in file "../My_header\My_RTCC.h"
  9871 ;; Parameters:    Size  Location     Type
  9872 ;;  ct              2    4[BANK0 ] PTR struct .
  9873 ;;		 -> caltime_now(7), 
  9874 ;; Auto vars:     Size  Location     Type
  9875 ;;		None
  9876 ;; Return value:  Size  Location     Type
  9877 ;;		None               void
  9878 ;; Registers used:
  9879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9880 ;; Tracked objects:
  9881 ;;		On entry : 0/0
  9882 ;;		On exit  : 0/0
  9883 ;;		Unchanged: 0/0
  9884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9885 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9888 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9889 ;;Total ram usage:        2 bytes
  9890 ;; Hardware stack levels used:    1
  9891 ;; Hardware stack levels required when called:    6
  9892 ;; This function calls:
  9893 ;;		_d_to_x
  9894 ;; This function is called by:
  9895 ;;		_RTCC_from_caltime
  9896 ;;		_RTCC_from_epoch
  9897 ;; This function uses a non-reentrant model
  9898 ;;
  9899                           
  9900                           	psect	text45
  9901  01183A                     __ptext45:
  9902                           	opt stack 0
  9903  01183A                     _caltime_to_RTCC:
  9904                           	opt stack 19
  9905                           
  9906                           ;My_header\My_RTCC.h: 138: while (RTCCFGbits.RTCSYNC);
  9907                           
  9908                           ; BSR set to: 0
  9909                           ;incstack = 0
  9910  01183A  D000               	goto	l338
  9911  01183C                     l338:
  9912  01183C  010F               	movlb	15	; () banked
  9913  01183E  B93F               	btfsc	63,4,b	;volatile
  9914  011840  D7FD               	goto	l338
  9915                           
  9916                           ; BSR set to: 15
  9917                           ;My_header\My_RTCC.h: 139: RTCCFGbits.RTCPTR0 = 1;
  9918  011842  010F               	movlb	15	; () banked
  9919  011844  813F               	bsf	63,0,b	;volatile
  9920                           
  9921                           ;My_header\My_RTCC.h: 140: RTCCFGbits.RTCPTR1 = 1;
  9922  011846  010F               	movlb	15	; () banked
  9923  011848  833F               	bsf	63,1,b	;volatile
  9924                           
  9925                           ; BSR set to: 15
  9926                           ;My_header\My_RTCC.h: 141: RTCVALL = d_to_x(ct->YY);
  9927  01184A  0100               	movlb	0	; () banked
  9928  01184C  EE20 F006          	lfsr	2,6
  9929  011850  5164               	movf	caltime_to_RTCC@ct& (0+255),w,b
  9930  011852  26D9               	addwf	fsr2l,f,c
  9931  011854  5165               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  9932  011856  22DA               	addwfc	fsr2h,f,c
  9933  011858  50DF               	movf	indf2,w,c
  9934  01185A  EC46  F095         	call	_d_to_x
  9935  01185E  010F               	movlb	15	; () banked
  9936  011860  6F3A               	movwf	58,b	;volatile
  9937                           
  9938                           ; BSR set to: 15
  9939                           ;My_header\My_RTCC.h: 142: RTCVALH = 0x00;
  9940  011862  0E00               	movlw	0
  9941  011864  010F               	movlb	15	; () banked
  9942  011866  6F3B               	movwf	59,b	;volatile
  9943                           
  9944                           ; BSR set to: 15
  9945                           ;My_header\My_RTCC.h: 143: RTCCFGbits.RTCPTR0 = 0;
  9946  011868  010F               	movlb	15	; () banked
  9947  01186A  913F               	bcf	63,0,b	;volatile
  9948                           
  9949                           ; BSR set to: 15
  9950                           ;My_header\My_RTCC.h: 144: RTCCFGbits.RTCPTR1 = 1;
  9951  01186C  010F               	movlb	15	; () banked
  9952  01186E  833F               	bsf	63,1,b	;volatile
  9953                           
  9954                           ; BSR set to: 15
  9955                           ;My_header\My_RTCC.h: 145: RTCVALL = d_to_x(ct->DD);
  9956  011870  0100               	movlb	0	; () banked
  9957  011872  EE20 F004          	lfsr	2,4
  9958  011876  5164               	movf	caltime_to_RTCC@ct& (0+255),w,b
  9959  011878  26D9               	addwf	fsr2l,f,c
  9960  01187A  5165               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  9961  01187C  22DA               	addwfc	fsr2h,f,c
  9962  01187E  50DF               	movf	indf2,w,c
  9963  011880  EC46  F095         	call	_d_to_x
  9964  011884  010F               	movlb	15	; () banked
  9965  011886  6F3A               	movwf	58,b	;volatile
  9966                           
  9967                           ; BSR set to: 15
  9968                           ;My_header\My_RTCC.h: 146: RTCVALH = d_to_x(ct->MM);
  9969  011888  0100               	movlb	0	; () banked
  9970  01188A  EE20 F005          	lfsr	2,5
  9971  01188E  5164               	movf	caltime_to_RTCC@ct& (0+255),w,b
  9972  011890  26D9               	addwf	fsr2l,f,c
  9973  011892  5165               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  9974  011894  22DA               	addwfc	fsr2h,f,c
  9975  011896  50DF               	movf	indf2,w,c
  9976  011898  EC46  F095         	call	_d_to_x
  9977  01189C  010F               	movlb	15	; () banked
  9978  01189E  6F3B               	movwf	59,b	;volatile
  9979                           
  9980                           ; BSR set to: 15
  9981                           ;My_header\My_RTCC.h: 147: RTCCFGbits.RTCPTR0 = 1;
  9982  0118A0  010F               	movlb	15	; () banked
  9983  0118A2  813F               	bsf	63,0,b	;volatile
  9984                           
  9985                           ; BSR set to: 15
  9986                           ;My_header\My_RTCC.h: 148: RTCCFGbits.RTCPTR1 = 0;
  9987  0118A4  010F               	movlb	15	; () banked
  9988  0118A6  933F               	bcf	63,1,b	;volatile
  9989                           
  9990                           ; BSR set to: 15
  9991                           ;My_header\My_RTCC.h: 149: RTCVALL = d_to_x(ct->hh);
  9992  0118A8  0100               	movlb	0	; () banked
  9993  0118AA  EE20 F002          	lfsr	2,2
  9994  0118AE  5164               	movf	caltime_to_RTCC@ct& (0+255),w,b
  9995  0118B0  26D9               	addwf	fsr2l,f,c
  9996  0118B2  5165               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  9997  0118B4  22DA               	addwfc	fsr2h,f,c
  9998  0118B6  50DF               	movf	indf2,w,c
  9999  0118B8  EC46  F095         	call	_d_to_x
 10000  0118BC  010F               	movlb	15	; () banked
 10001  0118BE  6F3A               	movwf	58,b	;volatile
 10002                           
 10003                           ; BSR set to: 15
 10004                           ;My_header\My_RTCC.h: 150: RTCVALH = d_to_x(ct->EE);
 10005  0118C0  0100               	movlb	0	; () banked
 10006  0118C2  EE20 F003          	lfsr	2,3
 10007  0118C6  5164               	movf	caltime_to_RTCC@ct& (0+255),w,b
 10008  0118C8  26D9               	addwf	fsr2l,f,c
 10009  0118CA  5165               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 10010  0118CC  22DA               	addwfc	fsr2h,f,c
 10011  0118CE  50DF               	movf	indf2,w,c
 10012  0118D0  EC46  F095         	call	_d_to_x
 10013  0118D4  010F               	movlb	15	; () banked
 10014  0118D6  6F3B               	movwf	59,b	;volatile
 10015                           
 10016                           ; BSR set to: 15
 10017                           ;My_header\My_RTCC.h: 151: RTCCFGbits.RTCPTR0 = 0;
 10018  0118D8  010F               	movlb	15	; () banked
 10019  0118DA  913F               	bcf	63,0,b	;volatile
 10020                           
 10021                           ; BSR set to: 15
 10022                           ;My_header\My_RTCC.h: 152: RTCCFGbits.RTCPTR1 = 0;
 10023  0118DC  010F               	movlb	15	; () banked
 10024  0118DE  933F               	bcf	63,1,b	;volatile
 10025                           
 10026                           ; BSR set to: 15
 10027                           ;My_header\My_RTCC.h: 153: RTCVALL = d_to_x(ct->ss);
 10028  0118E0  C064  FFD9         	movff	caltime_to_RTCC@ct,fsr2l
 10029  0118E4  C065  FFDA         	movff	caltime_to_RTCC@ct+1,fsr2h
 10030  0118E8  50DF               	movf	indf2,w,c
 10031  0118EA  EC46  F095         	call	_d_to_x
 10032  0118EE  010F               	movlb	15	; () banked
 10033  0118F0  6F3A               	movwf	58,b	;volatile
 10034                           
 10035                           ; BSR set to: 15
 10036                           ;My_header\My_RTCC.h: 154: RTCVALH = d_to_x(ct->mm);
 10037  0118F2  0100               	movlb	0	; () banked
 10038  0118F4  EE20 F001          	lfsr	2,1
 10039  0118F8  5164               	movf	caltime_to_RTCC@ct& (0+255),w,b
 10040  0118FA  26D9               	addwf	fsr2l,f,c
 10041  0118FC  5165               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 10042  0118FE  22DA               	addwfc	fsr2h,f,c
 10043  011900  50DF               	movf	indf2,w,c
 10044  011902  EC46  F095         	call	_d_to_x
 10045  011906  010F               	movlb	15	; () banked
 10046  011908  6F3B               	movwf	59,b	;volatile
 10047                           
 10048                           ; BSR set to: 15
 10049  01190A  0012               	return		;funcret
 10050  01190C                     __end_of_caltime_to_RTCC:
 10051                           	opt stack 0
 10052                           tblptru	equ	0xFF8
 10053                           tblptrh	equ	0xFF7
 10054                           tblptrl	equ	0xFF6
 10055                           tablat	equ	0xFF5
 10056                           prodh	equ	0xFF4
 10057                           prodl	equ	0xFF3
 10058                           intcon	equ	0xFF2
 10059                           intcon2	equ	0xFF1
 10060                           postinc0	equ	0xFEE
 10061                           wreg	equ	0xFE8
 10062                           indf1	equ	0xFE7
 10063                           postinc1	equ	0xFE6
 10064                           postdec1	equ	0xFE5
 10065                           fsr1h	equ	0xFE2
 10066                           fsr1l	equ	0xFE1
 10067                           indf2	equ	0xFDF
 10068                           postinc2	equ	0xFDE
 10069                           postdec2	equ	0xFDD
 10070                           fsr2h	equ	0xFDA
 10071                           fsr2l	equ	0xFD9
 10072                           status	equ	0xFD8
 10073                           
 10074 ;; *************** function _d_to_x *****************
 10075 ;; Defined at:
 10076 ;;		line 73 in file "../My_header\My_RTCC.h"
 10077 ;; Parameters:    Size  Location     Type
 10078 ;;  dec             1    wreg     unsigned char 
 10079 ;; Auto vars:     Size  Location     Type
 10080 ;;  dec             1   34[COMRAM] unsigned char 
 10081 ;; Return value:  Size  Location     Type
 10082 ;;                  1    wreg      unsigned char 
 10083 ;; Registers used:
 10084 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10085 ;; Tracked objects:
 10086 ;;		On entry : 0/0
 10087 ;;		On exit  : 0/0
 10088 ;;		Unchanged: 0/0
 10089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10093 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10094 ;;Total ram usage:        1 bytes
 10095 ;; Hardware stack levels used:    1
 10096 ;; Hardware stack levels required when called:    5
 10097 ;; This function calls:
 10098 ;;		___awdiv
 10099 ;; This function is called by:
 10100 ;;		_caltime_to_RTCC
 10101 ;; This function uses a non-reentrant model
 10102 ;;
 10103                           
 10104                           	psect	text46
 10105  012A8C                     __ptext46:
 10106                           	opt stack 0
 10107  012A8C                     _d_to_x:
 10108                           	opt stack 19
 10109                           
 10110                           ; BSR set to: 15
 10111                           ;incstack = 0
 10112                           ;d_to_x@dec stored from wreg
 10113  012A8C  6E23               	movwf	d_to_x@dec,c
 10114                           
 10115                           ;My_header\My_RTCC.h: 76: return dec / 10 * 6 + dec;
 10116  012A8E  C023  F01F         	movff	d_to_x@dec,___awdiv@dividend
 10117  012A92  6A20               	clrf	___awdiv@dividend+1,c
 10118  012A94  0E00               	movlw	0
 10119  012A96  6E22               	movwf	___awdiv@divisor+1,c
 10120  012A98  0E0A               	movlw	10
 10121  012A9A  6E21               	movwf	___awdiv@divisor,c
 10122  012A9C  EC7D  F08F         	call	___awdiv	;wreg free
 10123  012AA0  501F               	movf	?___awdiv,w,c
 10124  012AA2  0D06               	mullw	6
 10125  012AA4  50F3               	movf	prodl,w,c
 10126  012AA6  2423               	addwf	d_to_x@dec,w,c
 10127  012AA8  0012               	return	
 10128  012AAA  0012               	return		;funcret
 10129  012AAC                     __end_of_d_to_x:
 10130                           	opt stack 0
 10131                           tblptru	equ	0xFF8
 10132                           tblptrh	equ	0xFF7
 10133                           tblptrl	equ	0xFF6
 10134                           tablat	equ	0xFF5
 10135                           prodh	equ	0xFF4
 10136                           prodl	equ	0xFF3
 10137                           intcon	equ	0xFF2
 10138                           intcon2	equ	0xFF1
 10139                           postinc0	equ	0xFEE
 10140                           wreg	equ	0xFE8
 10141                           indf1	equ	0xFE7
 10142                           postinc1	equ	0xFE6
 10143                           postdec1	equ	0xFE5
 10144                           fsr1h	equ	0xFE2
 10145                           fsr1l	equ	0xFE1
 10146                           indf2	equ	0xFDF
 10147                           postinc2	equ	0xFDE
 10148                           postdec2	equ	0xFDD
 10149                           fsr2h	equ	0xFDA
 10150                           fsr2l	equ	0xFD9
 10151                           status	equ	0xFD8
 10152                           
 10153 ;; *************** function ___awdiv *****************
 10154 ;; Defined at:
 10155 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 10156 ;; Parameters:    Size  Location     Type
 10157 ;;  dividend        2   30[COMRAM] int 
 10158 ;;  divisor         2   32[COMRAM] int 
 10159 ;; Auto vars:     Size  Location     Type
 10160 ;;  quotient        2    2[BANK0 ] int 
 10161 ;;  sign            1    1[BANK0 ] unsigned char 
 10162 ;;  counter         1    0[BANK0 ] unsigned char 
 10163 ;; Return value:  Size  Location     Type
 10164 ;;                  2   30[COMRAM] int 
 10165 ;; Registers used:
 10166 ;;		wreg, status,2, status,0
 10167 ;; Tracked objects:
 10168 ;;		On entry : 0/0
 10169 ;;		On exit  : 0/0
 10170 ;;		Unchanged: 0/0
 10171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10172 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10173 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10175 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10176 ;;Total ram usage:        8 bytes
 10177 ;; Hardware stack levels used:    1
 10178 ;; Hardware stack levels required when called:    4
 10179 ;; This function calls:
 10180 ;;		Nothing
 10181 ;; This function is called by:
 10182 ;;		_d_to_x
 10183 ;; This function uses a non-reentrant model
 10184 ;;
 10185                           
 10186                           	psect	text47
 10187  011EFA                     __ptext47:
 10188                           	opt stack 0
 10189  011EFA                     ___awdiv:
 10190                           	opt stack 19
 10191                           
 10192                           ;incstack = 0
 10193  011EFA  0E00               	movlw	0
 10194  011EFC  0100               	movlb	0	; () banked
 10195  011EFE  6F61               	movwf	___awdiv@sign& (0+255),b
 10196                           
 10197                           ; BSR set to: 0
 10198  011F00  AE22               	btfss	___awdiv@divisor+1,7,c
 10199  011F02  D008               	goto	l4144
 10200                           
 10201                           ; BSR set to: 0
 10202  011F04  6C21               	negf	___awdiv@divisor,c
 10203  011F06  1E22               	comf	___awdiv@divisor+1,f,c
 10204  011F08  B0D8               	btfsc	status,0,c
 10205  011F0A  2A22               	incf	___awdiv@divisor+1,f,c
 10206                           
 10207                           ; BSR set to: 0
 10208  011F0C  0E01               	movlw	1
 10209  011F0E  0100               	movlb	0	; () banked
 10210  011F10  6F61               	movwf	___awdiv@sign& (0+255),b
 10211  011F12  D000               	goto	l4144
 10212  011F14                     l4144:
 10213                           
 10214                           ; BSR set to: 0
 10215  011F14  AE20               	btfss	___awdiv@dividend+1,7,c
 10216  011F16  D008               	goto	l4150
 10217                           
 10218                           ; BSR set to: 0
 10219  011F18  6C1F               	negf	___awdiv@dividend,c
 10220  011F1A  1E20               	comf	___awdiv@dividend+1,f,c
 10221  011F1C  B0D8               	btfsc	status,0,c
 10222  011F1E  2A20               	incf	___awdiv@dividend+1,f,c
 10223                           
 10224                           ; BSR set to: 0
 10225  011F20  0E01               	movlw	1
 10226  011F22  0100               	movlb	0	; () banked
 10227  011F24  1B61               	xorwf	___awdiv@sign& (0+255),f,b
 10228  011F26  D000               	goto	l4150
 10229  011F28                     l4150:
 10230                           
 10231                           ; BSR set to: 0
 10232  011F28  0E00               	movlw	0
 10233  011F2A  0100               	movlb	0	; () banked
 10234  011F2C  6F63               	movwf	(___awdiv@quotient+1)& (0+255),b
 10235  011F2E  0E00               	movlw	0
 10236  011F30  6F62               	movwf	___awdiv@quotient& (0+255),b
 10237                           
 10238                           ; BSR set to: 0
 10239  011F32  5021               	movf	___awdiv@divisor,w,c
 10240  011F34  1022               	iorwf	___awdiv@divisor+1,w,c
 10241  011F36  B4D8               	btfsc	status,2,c
 10242  011F38  D026               	goto	l4172
 10243                           
 10244                           ; BSR set to: 0
 10245  011F3A  0E01               	movlw	1
 10246  011F3C  0100               	movlb	0	; () banked
 10247  011F3E  6F60               	movwf	___awdiv@counter& (0+255),b
 10248  011F40  D006               	goto	l4158
 10249  011F42                     l4156:
 10250                           
 10251                           ; BSR set to: 0
 10252  011F42  90D8               	bcf	status,0,c
 10253  011F44  3621               	rlcf	___awdiv@divisor,f,c
 10254  011F46  3622               	rlcf	___awdiv@divisor+1,f,c
 10255  011F48  0100               	movlb	0	; () banked
 10256  011F4A  2B60               	incf	___awdiv@counter& (0+255),f,b
 10257  011F4C  D000               	goto	l4158
 10258  011F4E                     l4158:
 10259                           
 10260                           ; BSR set to: 0
 10261  011F4E  BE22               	btfsc	___awdiv@divisor+1,7,c
 10262  011F50  D002               	goto	l4160
 10263  011F52  D7F7               	goto	l4156
 10264                           
 10265                           ; BSR set to: 0
 10266  011F54  D000               	goto	l4160
 10267  011F56                     l4160:
 10268                           
 10269                           ; BSR set to: 0
 10270  011F56  0100               	movlb	0	; () banked
 10271  011F58  90D8               	bcf	status,0,c
 10272  011F5A  3762               	rlcf	___awdiv@quotient& (0+255),f,b
 10273  011F5C  3763               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10274                           
 10275                           ; BSR set to: 0
 10276  011F5E  5021               	movf	___awdiv@divisor,w,c
 10277  011F60  5C1F               	subwf	___awdiv@dividend,w,c
 10278  011F62  5022               	movf	___awdiv@divisor+1,w,c
 10279  011F64  5820               	subwfb	___awdiv@dividend+1,w,c
 10280  011F66  A0D8               	btfss	status,0,c
 10281  011F68  D007               	goto	l4168
 10282                           
 10283                           ; BSR set to: 0
 10284  011F6A  5021               	movf	___awdiv@divisor,w,c
 10285  011F6C  5E1F               	subwf	___awdiv@dividend,f,c
 10286  011F6E  5022               	movf	___awdiv@divisor+1,w,c
 10287  011F70  5A20               	subwfb	___awdiv@dividend+1,f,c
 10288                           
 10289                           ; BSR set to: 0
 10290  011F72  0100               	movlb	0	; () banked
 10291  011F74  8162               	bsf	___awdiv@quotient& (0+255),0,b
 10292  011F76  D000               	goto	l4168
 10293  011F78                     l4168:
 10294                           
 10295                           ; BSR set to: 0
 10296  011F78  90D8               	bcf	status,0,c
 10297  011F7A  3222               	rrcf	___awdiv@divisor+1,f,c
 10298  011F7C  3221               	rrcf	___awdiv@divisor,f,c
 10299                           
 10300                           ; BSR set to: 0
 10301  011F7E  0100               	movlb	0	; () banked
 10302  011F80  2F60               	decfsz	___awdiv@counter& (0+255),f,b
 10303  011F82  D7E9               	goto	l4160
 10304                           
 10305                           ; BSR set to: 0
 10306  011F84  D000               	goto	l4172
 10307  011F86                     l4172:
 10308                           
 10309                           ; BSR set to: 0
 10310  011F86  0100               	movlb	0	; () banked
 10311  011F88  5161               	movf	___awdiv@sign& (0+255),w,b
 10312  011F8A  0100               	movlb	0	; () banked
 10313  011F8C  B4D8               	btfsc	status,2,c
 10314  011F8E  D006               	goto	l4176
 10315                           
 10316                           ; BSR set to: 0
 10317  011F90  0100               	movlb	0	; () banked
 10318  011F92  6D62               	negf	___awdiv@quotient& (0+255),b
 10319  011F94  1F63               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10320  011F96  B0D8               	btfsc	status,0,c
 10321  011F98  2B63               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10322  011F9A  D000               	goto	l4176
 10323  011F9C                     l4176:
 10324                           
 10325                           ; BSR set to: 0
 10326  011F9C  C062  F01F         	movff	___awdiv@quotient,?___awdiv
 10327  011FA0  C063  F020         	movff	___awdiv@quotient+1,?___awdiv+1
 10328  011FA4  0012               	return	
 10329                           
 10330                           ; BSR set to: 0
 10331                           
 10332                           ; BSR set to: 0
 10333  011FA6  0012               	return		;funcret
 10334  011FA8                     __end_of___awdiv:
 10335                           	opt stack 0
 10336                           tblptru	equ	0xFF8
 10337                           tblptrh	equ	0xFF7
 10338                           tblptrl	equ	0xFF6
 10339                           tablat	equ	0xFF5
 10340                           prodh	equ	0xFF4
 10341                           prodl	equ	0xFF3
 10342                           intcon	equ	0xFF2
 10343                           intcon2	equ	0xFF1
 10344                           postinc0	equ	0xFEE
 10345                           wreg	equ	0xFE8
 10346                           indf1	equ	0xFE7
 10347                           postinc1	equ	0xFE6
 10348                           postdec1	equ	0xFE5
 10349                           fsr1h	equ	0xFE2
 10350                           fsr1l	equ	0xFE1
 10351                           indf2	equ	0xFDF
 10352                           postinc2	equ	0xFDE
 10353                           postdec2	equ	0xFDD
 10354                           fsr2h	equ	0xFDA
 10355                           fsr2l	equ	0xFD9
 10356                           status	equ	0xFD8
 10357                           
 10358 ;; *************** function _ADC *****************
 10359 ;; Defined at:
 10360 ;;		line 172 in file "../My_header\My_header.h"
 10361 ;; Parameters:    Size  Location     Type
 10362 ;;  ch              1    wreg     unsigned char 
 10363 ;; Auto vars:     Size  Location     Type
 10364 ;;  ch              1   33[COMRAM] unsigned char 
 10365 ;; Return value:  Size  Location     Type
 10366 ;;                  2   30[COMRAM] unsigned int 
 10367 ;; Registers used:
 10368 ;;		wreg, status,2, status,0
 10369 ;; Tracked objects:
 10370 ;;		On entry : 0/0
 10371 ;;		On exit  : 0/0
 10372 ;;		Unchanged: 0/0
 10373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10375 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10376 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10377 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10378 ;;Total ram usage:        4 bytes
 10379 ;; Hardware stack levels used:    1
 10380 ;; Hardware stack levels required when called:    4
 10381 ;; This function calls:
 10382 ;;		Nothing
 10383 ;; This function is called by:
 10384 ;;		_main
 10385 ;; This function uses a non-reentrant model
 10386 ;;
 10387                           
 10388                           	psect	text48
 10389  0129B6                     __ptext48:
 10390                           	opt stack 0
 10391  0129B6                     _ADC:
 10392                           	opt stack 26
 10393                           
 10394                           ; BSR set to: 0
 10395                           ;incstack = 0
 10396                           ;ADC@ch stored from wreg
 10397  0129B6  6E22               	movwf	ADC@ch,c
 10398                           
 10399                           ;My_header\My_header.h: 173: ADCON0bits.CHS = ch;
 10400  0129B8  C022  F021         	movff	ADC@ch,??_ADC
 10401  0129BC  4621               	rlncf	??_ADC,f,c
 10402  0129BE  4621               	rlncf	??_ADC,f,c
 10403  0129C0  50C2               	movf	4034,w,c	;volatile
 10404  0129C2  1821               	xorwf	??_ADC,w,c
 10405  0129C4  0BC3               	andlw	-61
 10406  0129C6  1821               	xorwf	??_ADC,w,c
 10407  0129C8  6EC2               	movwf	4034,c	;volatile
 10408                           
 10409                           ;My_header\My_header.h: 174: ADCON0bits.ADON = 1;
 10410  0129CA  80C2               	bsf	4034,0,c	;volatile
 10411                           
 10412                           ;My_header\My_header.h: 176: PIR1bits.ADIF = 0;
 10413  0129CC  9C9E               	bcf	3998,6,c	;volatile
 10414                           
 10415                           ;My_header\My_header.h: 177: ADCON0bits.GO_nDONE = 1;
 10416  0129CE  82C2               	bsf	4034,1,c	;volatile
 10417                           
 10418                           ;My_header\My_header.h: 178: while (!PIR1bits.ADIF);
 10419  0129D0  D000               	goto	l161
 10420  0129D2                     l161:
 10421  0129D2  AC9E               	btfss	3998,6,c	;volatile
 10422  0129D4  D7FE               	goto	l161
 10423                           
 10424                           ;My_header\My_header.h: 179: return ADRES;
 10425  0129D6  CFC3 F01F          	movff	4035,?_ADC	;volatile
 10426  0129DA  CFC4 F020          	movff	4036,?_ADC+1	;volatile
 10427  0129DE  0012               	return		;funcret
 10428  0129E0                     __end_of_ADC:
 10429                           	opt stack 0
 10430                           tblptru	equ	0xFF8
 10431                           tblptrh	equ	0xFF7
 10432                           tblptrl	equ	0xFF6
 10433                           tablat	equ	0xFF5
 10434                           prodh	equ	0xFF4
 10435                           prodl	equ	0xFF3
 10436                           intcon	equ	0xFF2
 10437                           intcon2	equ	0xFF1
 10438                           postinc0	equ	0xFEE
 10439                           wreg	equ	0xFE8
 10440                           indf1	equ	0xFE7
 10441                           postinc1	equ	0xFE6
 10442                           postdec1	equ	0xFE5
 10443                           fsr1h	equ	0xFE2
 10444                           fsr1l	equ	0xFE1
 10445                           indf2	equ	0xFDF
 10446                           postinc2	equ	0xFDE
 10447                           postdec2	equ	0xFDD
 10448                           fsr2h	equ	0xFDA
 10449                           fsr2l	equ	0xFD9
 10450                           status	equ	0xFD8
 10451                           
 10452 ;; *************** function _ISR *****************
 10453 ;; Defined at:
 10454 ;;		line 59 in file "PIC18F27J53-killifish_light03.c"
 10455 ;; Parameters:    Size  Location     Type
 10456 ;;		None
 10457 ;; Auto vars:     Size  Location     Type
 10458 ;;		None
 10459 ;; Return value:  Size  Location     Type
 10460 ;;		None               void
 10461 ;; Registers used:
 10462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10463 ;; Tracked objects:
 10464 ;;		On entry : 0/0
 10465 ;;		On exit  : 0/0
 10466 ;;		Unchanged: 0/0
 10467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10470 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10471 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10472 ;;Total ram usage:       14 bytes
 10473 ;; Hardware stack levels used:    1
 10474 ;; Hardware stack levels required when called:    3
 10475 ;; This function calls:
 10476 ;;		_UART_ISR
 10477 ;;		_button_timer_interrupt
 10478 ;; This function is called by:
 10479 ;;		Interrupt level 2
 10480 ;; This function uses a non-reentrant model
 10481 ;;
 10482                           
 10483                           	psect	intcode
 10484  001008                     __pintcode:
 10485                           	opt stack 0
 10486  001008                     _ISR:
 10487                           	opt stack 18
 10488                           
 10489                           ;incstack = 0
 10490  001008  CFFA F011          	movff	pclath,??_ISR
 10491  00100C  CFFB F012          	movff	pclatu,??_ISR+1
 10492  001010  CFE9 F013          	movff	fsr0l,??_ISR+2
 10493  001014  CFEA F014          	movff	fsr0h,??_ISR+3
 10494  001018  CFE1 F015          	movff	fsr1l,??_ISR+4
 10495  00101C  CFE2 F016          	movff	fsr1h,??_ISR+5
 10496  001020  CFD9 F017          	movff	fsr2l,??_ISR+6
 10497  001024  CFDA F018          	movff	fsr2h,??_ISR+7
 10498  001028  CFF3 F019          	movff	prodl,??_ISR+8
 10499  00102C  CFF4 F01A          	movff	prodh,??_ISR+9
 10500  001030  CFF6 F01B          	movff	tblptrl,??_ISR+10
 10501  001034  CFF7 F01C          	movff	tblptrh,??_ISR+11
 10502  001038  CFF8 F01D          	movff	tblptru,??_ISR+12
 10503  00103C  CFF5 F01E          	movff	tablat,??_ISR+13
 10504                           
 10505                           ;PIC18F27J53-killifish_light03.c: 60: UART_ISR();
 10506  001040  ECE6  F093         	call	_UART_ISR	;wreg free
 10507                           
 10508                           ;PIC18F27J53-killifish_light03.c: 61: if (INTCONbits.T0IF) {
 10509  001044  B4F2               	btfsc	intcon,2,c	;volatile
 10510                           
 10511                           ;PIC18F27J53-killifish_light03.c: 62: INTCONbits.T0IF = 0;
 10512  001046  94F2               	bcf	intcon,2,c	;volatile
 10513                           
 10514                           ;PIC18F27J53-killifish_light03.c: 63: }
 10515                           ;PIC18F27J53-killifish_light03.c: 64: if (PIR1bits.TMR1IF) {
 10516  001048  A09E               	btfss	3998,0,c	;volatile
 10517  00104A  D004               	goto	i2l3944
 10518                           
 10519                           ;PIC18F27J53-killifish_light03.c: 65: PIR1bits.TMR1IF = 0;
 10520  00104C  909E               	bcf	3998,0,c	;volatile
 10521                           
 10522                           ;PIC18F27J53-killifish_light03.c: 66: TMR1H = 0x80;
 10523  00104E  0E80               	movlw	128
 10524  001050  6ECF               	movwf	4047,c	;volatile
 10525  001052  D000               	goto	i2l3944
 10526  001054                     i2l3944:
 10527                           
 10528                           ;PIC18F27J53-killifish_light03.c: 67: }
 10529                           ;PIC18F27J53-killifish_light03.c: 68: if (PIR2bits.TMR3IF) {
 10530  001054  A2A1               	btfss	4001,1,c	;volatile
 10531  001056  D026               	goto	i2l565
 10532                           
 10533                           ;PIC18F27J53-killifish_light03.c: 69: PIR2bits.TMR3IF = 0;
 10534  001058  92A1               	bcf	4001,1,c	;volatile
 10535                           
 10536                           ;PIC18F27J53-killifish_light03.c: 70: button_timer_interrupt(&sw_R, !PORTAbits.RA5);
 10537  00105A  0E3E               	movlw	low _sw_R
 10538  00105C  6E01               	movwf	button_timer_interrupt@bt,c
 10539  00105E  0E00               	movlw	high _sw_R
 10540  001060  6E02               	movwf	button_timer_interrupt@bt+1,c
 10541  001062  BA80               	btfsc	3968,5,c	;volatile
 10542  001064  D002               	goto	i2u396_40
 10543  001066  0E01               	movlw	1
 10544  001068  D001               	goto	i2u397_40
 10545  00106A                     i2u396_40:
 10546  00106A  0E00               	movlw	0
 10547  00106C                     i2u397_40:
 10548  00106C  6E03               	movwf	button_timer_interrupt@sw_value,c
 10549  00106E  EC5C  F086         	call	_button_timer_interrupt	;wreg free
 10550                           
 10551                           ;PIC18F27J53-killifish_light03.c: 71: button_timer_interrupt(&sw_G, !PORTAbits.RA6);
 10552  001072  0E3A               	movlw	low _sw_G
 10553  001074  6E01               	movwf	button_timer_interrupt@bt,c
 10554  001076  0E00               	movlw	high _sw_G
 10555  001078  6E02               	movwf	button_timer_interrupt@bt+1,c
 10556  00107A  BC80               	btfsc	3968,6,c	;volatile
 10557  00107C  D002               	goto	i2u398_40
 10558  00107E  0E01               	movlw	1
 10559  001080  D001               	goto	i2u399_40
 10560  001082                     i2u398_40:
 10561  001082  0E00               	movlw	0
 10562  001084                     i2u399_40:
 10563  001084  6E03               	movwf	button_timer_interrupt@sw_value,c
 10564  001086  EC5C  F086         	call	_button_timer_interrupt	;wreg free
 10565                           
 10566                           ;PIC18F27J53-killifish_light03.c: 72: button_timer_interrupt(&sw_B, !PORTAbits.RA7);
 10567  00108A  0EF9               	movlw	low _sw_B
 10568  00108C  6E01               	movwf	button_timer_interrupt@bt,c
 10569  00108E  0E00               	movlw	high _sw_B
 10570  001090  6E02               	movwf	button_timer_interrupt@bt+1,c
 10571  001092  BE80               	btfsc	3968,7,c	;volatile
 10572  001094  D002               	goto	i2u400_40
 10573  001096  0E01               	movlw	1
 10574  001098  D001               	goto	i2u401_40
 10575  00109A                     i2u400_40:
 10576  00109A  0E00               	movlw	0
 10577  00109C                     i2u401_40:
 10578  00109C  6E03               	movwf	button_timer_interrupt@sw_value,c
 10579  00109E  EC5C  F086         	call	_button_timer_interrupt	;wreg free
 10580  0010A2  D000               	goto	i2l565
 10581  0010A4                     i2l565:
 10582  0010A4  C01E  FFF5         	movff	??_ISR+13,tablat
 10583  0010A8  C01D  FFF8         	movff	??_ISR+12,tblptru
 10584  0010AC  C01C  FFF7         	movff	??_ISR+11,tblptrh
 10585  0010B0  C01B  FFF6         	movff	??_ISR+10,tblptrl
 10586  0010B4  C01A  FFF4         	movff	??_ISR+9,prodh
 10587  0010B8  C019  FFF3         	movff	??_ISR+8,prodl
 10588  0010BC  C018  FFDA         	movff	??_ISR+7,fsr2h
 10589  0010C0  C017  FFD9         	movff	??_ISR+6,fsr2l
 10590  0010C4  C016  FFE2         	movff	??_ISR+5,fsr1h
 10591  0010C8  C015  FFE1         	movff	??_ISR+4,fsr1l
 10592  0010CC  C014  FFEA         	movff	??_ISR+3,fsr0h
 10593  0010D0  C013  FFE9         	movff	??_ISR+2,fsr0l
 10594  0010D4  C012  FFFB         	movff	??_ISR+1,pclatu
 10595  0010D8  C011  FFFA         	movff	??_ISR,pclath
 10596  0010DC  0011               	retfie		f
 10597  0010DE                     __end_of_ISR:
 10598                           	opt stack 0
 10599                           pclatu	equ	0xFFB
 10600                           pclath	equ	0xFFA
 10601                           tblptru	equ	0xFF8
 10602                           tblptrh	equ	0xFF7
 10603                           tblptrl	equ	0xFF6
 10604                           tablat	equ	0xFF5
 10605                           prodh	equ	0xFF4
 10606                           prodl	equ	0xFF3
 10607                           intcon	equ	0xFF2
 10608                           intcon2	equ	0xFF1
 10609                           postinc0	equ	0xFEE
 10610                           fsr0h	equ	0xFEA
 10611                           fsr0l	equ	0xFE9
 10612                           wreg	equ	0xFE8
 10613                           indf1	equ	0xFE7
 10614                           postinc1	equ	0xFE6
 10615                           postdec1	equ	0xFE5
 10616                           fsr1h	equ	0xFE2
 10617                           fsr1l	equ	0xFE1
 10618                           indf2	equ	0xFDF
 10619                           postinc2	equ	0xFDE
 10620                           postdec2	equ	0xFDD
 10621                           fsr2h	equ	0xFDA
 10622                           fsr2l	equ	0xFD9
 10623                           status	equ	0xFD8
 10624                           
 10625 ;; *************** function _button_timer_interrupt *****************
 10626 ;; Defined at:
 10627 ;;		line 51 in file "../My_header\My_button.h"
 10628 ;; Parameters:    Size  Location     Type
 10629 ;;  bt              2    0[COMRAM] PTR struct button
 10630 ;;		 -> sw_B(4), sw_G(4), sw_R(4), 
 10631 ;;  sw_value        1    2[COMRAM] unsigned char 
 10632 ;; Auto vars:     Size  Location     Type
 10633 ;;		None
 10634 ;; Return value:  Size  Location     Type
 10635 ;;		None               void
 10636 ;; Registers used:
 10637 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10638 ;; Tracked objects:
 10639 ;;		On entry : 0/0
 10640 ;;		On exit  : 0/0
 10641 ;;		Unchanged: 0/0
 10642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10643 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10645 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10646 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10647 ;;Total ram usage:        5 bytes
 10648 ;; Hardware stack levels used:    1
 10649 ;; This function calls:
 10650 ;;		Nothing
 10651 ;; This function is called by:
 10652 ;;		_ISR
 10653 ;; This function uses a non-reentrant model
 10654 ;;
 10655                           
 10656                           	psect	text50
 10657  010CB8                     __ptext50:
 10658                           	opt stack 0
 10659  010CB8                     _button_timer_interrupt:
 10660                           	opt stack 20
 10661                           
 10662                           ;My_header\My_button.h: 52: if (sw_value) {
 10663                           
 10664                           ;incstack = 0
 10665  010CB8  5003               	movf	button_timer_interrupt@sw_value,w,c
 10666  010CBA  B4D8               	btfsc	status,2,c
 10667  010CBC  D098               	goto	i2l3570
 10668                           
 10669                           ;My_header\My_button.h: 53: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 10670  010CBE  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10671  010CC2  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10672  010CC6  0E84               	movlw	132
 10673  010CC8  18DE               	xorwf	postinc2,w,c
 10674  010CCA  E10B               	bnz	i2l272
 10675  010CCC  0E03               	movlw	3
 10676  010CCE  18DE               	xorwf	postinc2,w,c
 10677  010CD0  A4D8               	btfss	status,2,c
 10678  010CD2  D007               	goto	i2l272
 10679  010CD4  EE20 F003          	lfsr	2,3
 10680  010CD8  5001               	movf	button_timer_interrupt@bt,w,c
 10681  010CDA  26D9               	addwf	fsr2l,f,c
 10682  010CDC  5002               	movf	button_timer_interrupt@bt+1,w,c
 10683  010CDE  22DA               	addwfc	fsr2h,f,c
 10684  010CE0  8EDF               	bsf	indf2,7,c
 10685  010CE2                     i2l272:
 10686                           
 10687                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 10688  010CE2  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10689  010CE6  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10690  010CEA  0EBC               	movlw	188
 10691  010CEC  18DE               	xorwf	postinc2,w,c
 10692  010CEE  E10B               	bnz	i2l273
 10693  010CF0  0E02               	movlw	2
 10694  010CF2  18DE               	xorwf	postinc2,w,c
 10695  010CF4  A4D8               	btfss	status,2,c
 10696  010CF6  D007               	goto	i2l273
 10697  010CF8  EE20 F003          	lfsr	2,3
 10698  010CFC  5001               	movf	button_timer_interrupt@bt,w,c
 10699  010CFE  26D9               	addwf	fsr2l,f,c
 10700  010D00  5002               	movf	button_timer_interrupt@bt+1,w,c
 10701  010D02  22DA               	addwfc	fsr2h,f,c
 10702  010D04  8CDF               	bsf	indf2,6,c
 10703  010D06                     i2l273:
 10704                           
 10705                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 10706  010D06  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10707  010D0A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10708  010D0E  0EF4               	movlw	244
 10709  010D10  18DE               	xorwf	postinc2,w,c
 10710  010D12  E10A               	bnz	i2l274
 10711  010D14  04DE               	decf	postinc2,w,c
 10712  010D16  A4D8               	btfss	status,2,c
 10713  010D18  D007               	goto	i2l274
 10714  010D1A  EE20 F003          	lfsr	2,3
 10715  010D1E  5001               	movf	button_timer_interrupt@bt,w,c
 10716  010D20  26D9               	addwf	fsr2l,f,c
 10717  010D22  5002               	movf	button_timer_interrupt@bt+1,w,c
 10718  010D24  22DA               	addwfc	fsr2h,f,c
 10719  010D26  8ADF               	bsf	indf2,5,c
 10720  010D28                     i2l274:
 10721                           
 10722                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 10723  010D28  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10724  010D2C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10725  010D30  0E2C               	movlw	44
 10726  010D32  18DE               	xorwf	postinc2,w,c
 10727  010D34  E10A               	bnz	i2l275
 10728  010D36  04DE               	decf	postinc2,w,c
 10729  010D38  A4D8               	btfss	status,2,c
 10730  010D3A  D007               	goto	i2l275
 10731  010D3C  EE20 F003          	lfsr	2,3
 10732  010D40  5001               	movf	button_timer_interrupt@bt,w,c
 10733  010D42  26D9               	addwf	fsr2l,f,c
 10734  010D44  5002               	movf	button_timer_interrupt@bt+1,w,c
 10735  010D46  22DA               	addwfc	fsr2h,f,c
 10736  010D48  88DF               	bsf	indf2,4,c
 10737  010D4A                     i2l275:
 10738                           
 10739                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 10740  010D4A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10741  010D4E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10742  010D52  0E96               	movlw	150
 10743  010D54  18DE               	xorwf	postinc2,w,c
 10744  010D56  10DE               	iorwf	postinc2,w,c
 10745  010D58  A4D8               	btfss	status,2,c
 10746  010D5A  D007               	goto	i2l276
 10747  010D5C  EE20 F003          	lfsr	2,3
 10748  010D60  5001               	movf	button_timer_interrupt@bt,w,c
 10749  010D62  26D9               	addwf	fsr2l,f,c
 10750  010D64  5002               	movf	button_timer_interrupt@bt+1,w,c
 10751  010D66  22DA               	addwfc	fsr2h,f,c
 10752  010D68  86DF               	bsf	indf2,3,c
 10753  010D6A                     i2l276:
 10754                           
 10755                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 10756  010D6A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10757  010D6E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10758  010D72  0E3C               	movlw	60
 10759  010D74  18DE               	xorwf	postinc2,w,c
 10760  010D76  10DE               	iorwf	postinc2,w,c
 10761  010D78  A4D8               	btfss	status,2,c
 10762  010D7A  D007               	goto	i2l277
 10763  010D7C  EE20 F003          	lfsr	2,3
 10764  010D80  5001               	movf	button_timer_interrupt@bt,w,c
 10765  010D82  26D9               	addwf	fsr2l,f,c
 10766  010D84  5002               	movf	button_timer_interrupt@bt+1,w,c
 10767  010D86  22DA               	addwfc	fsr2h,f,c
 10768  010D88  84DF               	bsf	indf2,2,c
 10769  010D8A                     i2l277:
 10770                           
 10771                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 10772  010D8A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10773  010D8E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10774  010D92  0E10               	movlw	16
 10775  010D94  18DE               	xorwf	postinc2,w,c
 10776  010D96  10DE               	iorwf	postinc2,w,c
 10777  010D98  A4D8               	btfss	status,2,c
 10778  010D9A  D007               	goto	i2l278
 10779  010D9C  EE20 F003          	lfsr	2,3
 10780  010DA0  5001               	movf	button_timer_interrupt@bt,w,c
 10781  010DA2  26D9               	addwf	fsr2l,f,c
 10782  010DA4  5002               	movf	button_timer_interrupt@bt+1,w,c
 10783  010DA6  22DA               	addwfc	fsr2h,f,c
 10784  010DA8  82DF               	bsf	indf2,1,c
 10785  010DAA                     i2l278:
 10786                           
 10787                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 10788  010DAA  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10789  010DAE  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10790  010DB2  0E02               	movlw	2
 10791  010DB4  18DE               	xorwf	postinc2,w,c
 10792  010DB6  10DE               	iorwf	postinc2,w,c
 10793  010DB8  A4D8               	btfss	status,2,c
 10794  010DBA  D007               	goto	i2l279
 10795  010DBC  EE20 F003          	lfsr	2,3
 10796  010DC0  5001               	movf	button_timer_interrupt@bt,w,c
 10797  010DC2  26D9               	addwf	fsr2l,f,c
 10798  010DC4  5002               	movf	button_timer_interrupt@bt+1,w,c
 10799  010DC6  22DA               	addwfc	fsr2h,f,c
 10800  010DC8  80DF               	bsf	indf2,0,c
 10801  010DCA                     i2l279:
 10802                           
 10803                           ;My_header\My_button.h: 61: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 10804  010DCA  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10805  010DCE  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10806  010DD2  0E85               	movlw	133
 10807  010DD4  5CDE               	subwf	postinc2,w,c
 10808  010DD6  0E03               	movlw	3
 10809  010DD8  58DE               	subwfb	postinc2,w,c
 10810  010DDA  B0D8               	btfsc	status,0,c
 10811  010DDC  0012               	return	
 10812  010DDE  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10813  010DE2  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10814  010DE6  2ADE               	incf	postinc2,f,c
 10815  010DE8  0E00               	movlw	0
 10816  010DEA  22DD               	addwfc	postdec2,f,c
 10817                           
 10818                           ;My_header\My_button.h: 62: } else {
 10819  010DEC  0012               	return	
 10820  010DEE                     i2l3570:
 10821                           
 10822                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 10823  010DEE  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10824  010DF2  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10825  010DF6  0E84               	movlw	132
 10826  010DF8  5CDE               	subwf	postinc2,w,c
 10827  010DFA  0E03               	movlw	3
 10828  010DFC  58DE               	subwfb	postinc2,w,c
 10829  010DFE  A0D8               	btfss	status,0,c
 10830  010E00  D008               	goto	i2l3574
 10831  010E02  EE20 F002          	lfsr	2,2
 10832  010E06  5001               	movf	button_timer_interrupt@bt,w,c
 10833  010E08  26D9               	addwf	fsr2l,f,c
 10834  010E0A  5002               	movf	button_timer_interrupt@bt+1,w,c
 10835  010E0C  22DA               	addwfc	fsr2h,f,c
 10836  010E0E  8EDF               	bsf	indf2,7,c
 10837  010E10  D082               	goto	i2l3602
 10838  010E12                     i2l3574:
 10839                           
 10840                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 10841  010E12  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10842  010E16  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10843  010E1A  0EBC               	movlw	188
 10844  010E1C  5CDE               	subwf	postinc2,w,c
 10845  010E1E  0E02               	movlw	2
 10846  010E20  58DE               	subwfb	postinc2,w,c
 10847  010E22  A0D8               	btfss	status,0,c
 10848  010E24  D008               	goto	i2l3578
 10849  010E26  EE20 F002          	lfsr	2,2
 10850  010E2A  5001               	movf	button_timer_interrupt@bt,w,c
 10851  010E2C  26D9               	addwf	fsr2l,f,c
 10852  010E2E  5002               	movf	button_timer_interrupt@bt+1,w,c
 10853  010E30  22DA               	addwfc	fsr2h,f,c
 10854  010E32  8CDF               	bsf	indf2,6,c
 10855  010E34  D070               	goto	i2l3602
 10856  010E36                     i2l3578:
 10857                           
 10858                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 10859  010E36  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10860  010E3A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10861  010E3E  0EF4               	movlw	244
 10862  010E40  5CDE               	subwf	postinc2,w,c
 10863  010E42  0E01               	movlw	1
 10864  010E44  58DE               	subwfb	postinc2,w,c
 10865  010E46  A0D8               	btfss	status,0,c
 10866  010E48  D008               	goto	i2l3582
 10867  010E4A  EE20 F002          	lfsr	2,2
 10868  010E4E  5001               	movf	button_timer_interrupt@bt,w,c
 10869  010E50  26D9               	addwf	fsr2l,f,c
 10870  010E52  5002               	movf	button_timer_interrupt@bt+1,w,c
 10871  010E54  22DA               	addwfc	fsr2h,f,c
 10872  010E56  8ADF               	bsf	indf2,5,c
 10873  010E58  D05E               	goto	i2l3602
 10874  010E5A                     i2l3582:
 10875                           
 10876                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 10877  010E5A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10878  010E5E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10879  010E62  0E2C               	movlw	44
 10880  010E64  5CDE               	subwf	postinc2,w,c
 10881  010E66  0E01               	movlw	1
 10882  010E68  58DE               	subwfb	postinc2,w,c
 10883  010E6A  A0D8               	btfss	status,0,c
 10884  010E6C  D008               	goto	i2l3586
 10885  010E6E  EE20 F002          	lfsr	2,2
 10886  010E72  5001               	movf	button_timer_interrupt@bt,w,c
 10887  010E74  26D9               	addwf	fsr2l,f,c
 10888  010E76  5002               	movf	button_timer_interrupt@bt+1,w,c
 10889  010E78  22DA               	addwfc	fsr2h,f,c
 10890  010E7A  88DF               	bsf	indf2,4,c
 10891  010E7C  D04C               	goto	i2l3602
 10892  010E7E                     i2l3586:
 10893                           
 10894                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 10895  010E7E  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10896  010E82  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10897  010E86  0E01               	movlw	1
 10898  010E88  50DB               	movf	plusw2,w,c
 10899  010E8A  E104               	bnz	i2u343_40
 10900  010E8C  0E96               	movlw	150
 10901  010E8E  5CDE               	subwf	postinc2,w,c
 10902  010E90  A0D8               	btfss	status,0,c
 10903  010E92  D008               	goto	i2l3590
 10904  010E94                     i2u343_40:
 10905  010E94  EE20 F002          	lfsr	2,2
 10906  010E98  5001               	movf	button_timer_interrupt@bt,w,c
 10907  010E9A  26D9               	addwf	fsr2l,f,c
 10908  010E9C  5002               	movf	button_timer_interrupt@bt+1,w,c
 10909  010E9E  22DA               	addwfc	fsr2h,f,c
 10910  010EA0  86DF               	bsf	indf2,3,c
 10911  010EA2  D039               	goto	i2l3602
 10912  010EA4                     i2l3590:
 10913                           
 10914                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 10915  010EA4  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10916  010EA8  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10917  010EAC  0E01               	movlw	1
 10918  010EAE  50DB               	movf	plusw2,w,c
 10919  010EB0  E104               	bnz	i2u344_40
 10920  010EB2  0E3C               	movlw	60
 10921  010EB4  5CDE               	subwf	postinc2,w,c
 10922  010EB6  A0D8               	btfss	status,0,c
 10923  010EB8  D008               	goto	i2l3594
 10924  010EBA                     i2u344_40:
 10925  010EBA  EE20 F002          	lfsr	2,2
 10926  010EBE  5001               	movf	button_timer_interrupt@bt,w,c
 10927  010EC0  26D9               	addwf	fsr2l,f,c
 10928  010EC2  5002               	movf	button_timer_interrupt@bt+1,w,c
 10929  010EC4  22DA               	addwfc	fsr2h,f,c
 10930  010EC6  84DF               	bsf	indf2,2,c
 10931  010EC8  D026               	goto	i2l3602
 10932  010ECA                     i2l3594:
 10933                           
 10934                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 10935  010ECA  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10936  010ECE  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10937  010ED2  0E01               	movlw	1
 10938  010ED4  50DB               	movf	plusw2,w,c
 10939  010ED6  E104               	bnz	i2u345_40
 10940  010ED8  0E10               	movlw	16
 10941  010EDA  5CDE               	subwf	postinc2,w,c
 10942  010EDC  A0D8               	btfss	status,0,c
 10943  010EDE  D008               	goto	i2l3598
 10944  010EE0                     i2u345_40:
 10945  010EE0  EE20 F002          	lfsr	2,2
 10946  010EE4  5001               	movf	button_timer_interrupt@bt,w,c
 10947  010EE6  26D9               	addwf	fsr2l,f,c
 10948  010EE8  5002               	movf	button_timer_interrupt@bt+1,w,c
 10949  010EEA  22DA               	addwfc	fsr2h,f,c
 10950  010EEC  82DF               	bsf	indf2,1,c
 10951  010EEE  D013               	goto	i2l3602
 10952  010EF0                     i2l3598:
 10953                           
 10954                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 10955  010EF0  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10956  010EF4  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10957  010EF8  0E01               	movlw	1
 10958  010EFA  50DB               	movf	plusw2,w,c
 10959  010EFC  E104               	bnz	i2u346_40
 10960  010EFE  0E02               	movlw	2
 10961  010F00  5CDE               	subwf	postinc2,w,c
 10962  010F02  A0D8               	btfss	status,0,c
 10963  010F04  D008               	goto	i2l3602
 10964  010F06                     i2u346_40:
 10965  010F06  EE20 F002          	lfsr	2,2
 10966  010F0A  5001               	movf	button_timer_interrupt@bt,w,c
 10967  010F0C  26D9               	addwf	fsr2l,f,c
 10968  010F0E  5002               	movf	button_timer_interrupt@bt+1,w,c
 10969  010F10  22DA               	addwfc	fsr2h,f,c
 10970  010F12  80DF               	bsf	indf2,0,c
 10971  010F14  D000               	goto	i2l3602
 10972  010F16                     i2l3602:
 10973                           
 10974                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
 10975  010F16  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10976  010F1A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10977  010F1E  0E00               	movlw	0
 10978  010F20  6EDE               	movwf	postinc2,c
 10979  010F22  0E00               	movlw	0
 10980  010F24  6EDD               	movwf	postdec2,c
 10981                           
 10982                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
 10983  010F26  EE20 F002          	lfsr	2,2
 10984  010F2A  5001               	movf	button_timer_interrupt@bt,w,c
 10985  010F2C  26D9               	addwf	fsr2l,f,c
 10986  010F2E  5002               	movf	button_timer_interrupt@bt+1,w,c
 10987  010F30  22DA               	addwfc	fsr2h,f,c
 10988  010F32  0EFF               	movlw	255
 10989  010F34  16DE               	andwf	postinc2,f,c
 10990  010F36  0E00               	movlw	0
 10991  010F38  16DD               	andwf	postdec2,f,c
 10992  010F3A  0012               	return	
 10993  010F3C  0012               	return		;funcret
 10994  010F3E                     __end_of_button_timer_interrupt:
 10995                           	opt stack 0
 10996                           pclatu	equ	0xFFB
 10997                           pclath	equ	0xFFA
 10998                           tblptru	equ	0xFF8
 10999                           tblptrh	equ	0xFF7
 11000                           tblptrl	equ	0xFF6
 11001                           tablat	equ	0xFF5
 11002                           prodh	equ	0xFF4
 11003                           prodl	equ	0xFF3
 11004                           intcon	equ	0xFF2
 11005                           intcon2	equ	0xFF1
 11006                           postinc0	equ	0xFEE
 11007                           fsr0h	equ	0xFEA
 11008                           fsr0l	equ	0xFE9
 11009                           wreg	equ	0xFE8
 11010                           indf1	equ	0xFE7
 11011                           postinc1	equ	0xFE6
 11012                           postdec1	equ	0xFE5
 11013                           fsr1h	equ	0xFE2
 11014                           fsr1l	equ	0xFE1
 11015                           indf2	equ	0xFDF
 11016                           postinc2	equ	0xFDE
 11017                           postdec2	equ	0xFDD
 11018                           plusw2	equ	0xFDB
 11019                           fsr2h	equ	0xFDA
 11020                           fsr2l	equ	0xFD9
 11021                           status	equ	0xFD8
 11022                           
 11023 ;; *************** function _UART_ISR *****************
 11024 ;; Defined at:
 11025 ;;		line 208 in file "../My_header\My_header.h"
 11026 ;; Parameters:    Size  Location     Type
 11027 ;;		None
 11028 ;; Auto vars:     Size  Location     Type
 11029 ;;  ascii           1   15[COMRAM] unsigned char 
 11030 ;; Return value:  Size  Location     Type
 11031 ;;		None               void
 11032 ;; Registers used:
 11033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11034 ;; Tracked objects:
 11035 ;;		On entry : 0/0
 11036 ;;		On exit  : 0/0
 11037 ;;		Unchanged: 0/0
 11038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11040 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11042 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11043 ;;Total ram usage:        1 bytes
 11044 ;; Hardware stack levels used:    1
 11045 ;; Hardware stack levels required when called:    2
 11046 ;; This function calls:
 11047 ;;		i2_ringbuf_num
 11048 ;;		i2_ringbuf_pop
 11049 ;;		i2_ringbuf_put
 11050 ;; This function is called by:
 11051 ;;		_ISR
 11052 ;; This function uses a non-reentrant model
 11053 ;;
 11054                           
 11055                           	psect	text51
 11056  0127CC                     __ptext51:
 11057                           	opt stack 0
 11058  0127CC                     _UART_ISR:
 11059                           	opt stack 18
 11060                           
 11061                           ;My_header\My_header.h: 209: if (PIE1bits.TXIE && PIR1bits.TXIF) {
 11062                           
 11063                           ;incstack = 0
 11064  0127CC  B89D               	btfsc	3997,4,c	;volatile
 11065  0127CE  A89E               	btfss	3998,4,c	;volatile
 11066  0127D0  D014               	goto	i2l219
 11067                           
 11068                           ;My_header\My_header.h: 210: if (ringbuf_num(&tx_buf)) {
 11069  0127D2  0EE9               	movlw	low _tx_buf
 11070  0127D4  6E01               	movwf	i2ringbuf_num@rb,c
 11071  0127D6  0E00               	movlw	high _tx_buf
 11072  0127D8  6E02               	movwf	i2ringbuf_num@rb+1,c
 11073  0127DA  EC10  F08E         	call	i2_ringbuf_num	;wreg free
 11074  0127DE  5001               	movf	?i2_ringbuf_num,w,c
 11075  0127E0  1002               	iorwf	?i2_ringbuf_num+1,w,c
 11076  0127E2  B4D8               	btfsc	status,2,c
 11077  0127E4  D008               	goto	i2l220
 11078                           
 11079                           ;My_header\My_header.h: 211: TXREG1 = ringbuf_pop(&tx_buf);
 11080  0127E6  0EE9               	movlw	low _tx_buf
 11081  0127E8  6E09               	movwf	i2ringbuf_pop@rb,c
 11082  0127EA  0E00               	movlw	high _tx_buf
 11083  0127EC  6E0A               	movwf	i2ringbuf_pop@rb+1,c
 11084  0127EE  EC25  F08F         	call	i2_ringbuf_pop	;wreg free
 11085  0127F2  6EAE               	movwf	4014,c	;volatile
 11086                           
 11087                           ;My_header\My_header.h: 212: } else {
 11088  0127F4  D002               	goto	i2l219
 11089  0127F6                     i2l220:
 11090                           
 11091                           ;My_header\My_header.h: 213: PIE1bits.TXIE = 0;
 11092  0127F6  989D               	bcf	3997,4,c	;volatile
 11093  0127F8  D000               	goto	i2l219
 11094  0127FA                     i2l219:
 11095                           
 11096                           ;My_header\My_header.h: 214: }
 11097                           ;My_header\My_header.h: 215: }
 11098                           ;My_header\My_header.h: 216: if (PIR1bits.RCIF && PIE1bits.RCIE) {
 11099  0127FA  AA9E               	btfss	3998,5,c	;volatile
 11100  0127FC  0012               	return	
 11101  0127FE  AA9D               	btfss	3997,5,c	;volatile
 11102  012800  0012               	return	
 11103                           
 11104                           ;My_header\My_header.h: 217: char ascii = RCREG1;
 11105  012802  CFAF F010          	movff	4015,UART_ISR@ascii	;volatile
 11106                           
 11107                           ;My_header\My_header.h: 218: ringbuf_put(&rx_buf, ascii);
 11108  012806  0EE1               	movlw	low _rx_buf
 11109  012808  6E09               	movwf	i2ringbuf_put@rb,c
 11110  01280A  0E00               	movlw	high _rx_buf
 11111  01280C  6E0A               	movwf	i2ringbuf_put@rb+1,c
 11112  01280E  C010  F00B         	movff	UART_ISR@ascii,i2ringbuf_put@asciicode
 11113  012812  EC6F  F08E         	call	i2_ringbuf_put	;wreg free
 11114  012816  0012               	return	
 11115  012818  0012               	return		;funcret
 11116  01281A                     __end_of_UART_ISR:
 11117                           	opt stack 0
 11118                           pclatu	equ	0xFFB
 11119                           pclath	equ	0xFFA
 11120                           tblptru	equ	0xFF8
 11121                           tblptrh	equ	0xFF7
 11122                           tblptrl	equ	0xFF6
 11123                           tablat	equ	0xFF5
 11124                           prodh	equ	0xFF4
 11125                           prodl	equ	0xFF3
 11126                           intcon	equ	0xFF2
 11127                           intcon2	equ	0xFF1
 11128                           postinc0	equ	0xFEE
 11129                           fsr0h	equ	0xFEA
 11130                           fsr0l	equ	0xFE9
 11131                           wreg	equ	0xFE8
 11132                           indf1	equ	0xFE7
 11133                           postinc1	equ	0xFE6
 11134                           postdec1	equ	0xFE5
 11135                           fsr1h	equ	0xFE2
 11136                           fsr1l	equ	0xFE1
 11137                           indf2	equ	0xFDF
 11138                           postinc2	equ	0xFDE
 11139                           postdec2	equ	0xFDD
 11140                           plusw2	equ	0xFDB
 11141                           fsr2h	equ	0xFDA
 11142                           fsr2l	equ	0xFD9
 11143                           status	equ	0xFD8
 11144                           
 11145 ;; *************** function i2_ringbuf_put *****************
 11146 ;; Defined at:
 11147 ;;		line 39 in file "../My_header\My_ringbuf.h"
 11148 ;; Parameters:    Size  Location     Type
 11149 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 11150 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
 11151 ;;  asciicode       1   10[COMRAM] unsigned char 
 11152 ;; Auto vars:     Size  Location     Type
 11153 ;;		None
 11154 ;; Return value:  Size  Location     Type
 11155 ;;		None               void
 11156 ;; Registers used:
 11157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11158 ;; Tracked objects:
 11159 ;;		On entry : 0/0
 11160 ;;		On exit  : 0/0
 11161 ;;		Unchanged: 0/0
 11162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11163 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11165 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11166 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11167 ;;Total ram usage:        7 bytes
 11168 ;; Hardware stack levels used:    1
 11169 ;; Hardware stack levels required when called:    1
 11170 ;; This function calls:
 11171 ;;		i2_ringbuf_num
 11172 ;; This function is called by:
 11173 ;;		_UART_ISR
 11174 ;; This function uses a non-reentrant model
 11175 ;;
 11176                           
 11177                           	psect	text52
 11178  011CDE                     __ptext52:
 11179                           	opt stack 0
 11180  011CDE                     i2_ringbuf_put:
 11181                           	opt stack 18
 11182                           
 11183                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
 11184                           
 11185                           ;incstack = 0
 11186  011CDE  C009  F001         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
 11187  011CE2  C00A  F002         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
 11188  011CE6  EC10  F08E         	call	i2_ringbuf_num	;wreg free
 11189  011CEA  EE20 F002          	lfsr	2,2
 11190  011CEE  5009               	movf	i2ringbuf_put@rb,w,c
 11191  011CF0  26D9               	addwf	fsr2l,f,c
 11192  011CF2  500A               	movf	i2ringbuf_put@rb+1,w,c
 11193  011CF4  22DA               	addwfc	fsr2h,f,c
 11194  011CF6  50DE               	movf	postinc2,w,c
 11195  011CF8  5C01               	subwf	?i2_ringbuf_num,w,c
 11196  011CFA  50DE               	movf	postinc2,w,c
 11197  011CFC  5802               	subwfb	?i2_ringbuf_num+1,w,c
 11198  011CFE  B0D8               	btfsc	status,0,c
 11199  011D00  0012               	return	
 11200                           
 11201                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
 11202  011D02  EE20 F004          	lfsr	2,4
 11203  011D06  5009               	movf	i2ringbuf_put@rb,w,c
 11204  011D08  26D9               	addwf	fsr2l,f,c
 11205  011D0A  500A               	movf	i2ringbuf_put@rb+1,w,c
 11206  011D0C  22DA               	addwfc	fsr2h,f,c
 11207  011D0E  CFDE F00C          	movff	postinc2,??i2_ringbuf_put
 11208  011D12  CFDD F00D          	movff	postdec2,??i2_ringbuf_put+1
 11209  011D16  C009  FFD9         	movff	i2ringbuf_put@rb,fsr2l
 11210  011D1A  C00A  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
 11211  011D1E  CFDE F00E          	movff	postinc2,??i2_ringbuf_put+2
 11212  011D22  CFDD F00F          	movff	postdec2,??i2_ringbuf_put+3
 11213  011D26  500C               	movf	??i2_ringbuf_put,w,c
 11214  011D28  240E               	addwf	??i2_ringbuf_put+2,w,c
 11215  011D2A  6ED9               	movwf	fsr2l,c
 11216  011D2C  500D               	movf	??i2_ringbuf_put+1,w,c
 11217  011D2E  200F               	addwfc	??i2_ringbuf_put+3,w,c
 11218  011D30  6EDA               	movwf	fsr2h,c
 11219  011D32  C00B  FFDF         	movff	i2ringbuf_put@asciicode,indf2
 11220                           
 11221                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
 11222  011D36  EE20 F002          	lfsr	2,2
 11223  011D3A  5009               	movf	i2ringbuf_put@rb,w,c
 11224  011D3C  26D9               	addwf	fsr2l,f,c
 11225  011D3E  500A               	movf	i2ringbuf_put@rb+1,w,c
 11226  011D40  22DA               	addwfc	fsr2h,f,c
 11227  011D42  EE10 F004          	lfsr	1,4
 11228  011D46  5009               	movf	i2ringbuf_put@rb,w,c
 11229  011D48  26E1               	addwf	fsr1l,f,c
 11230  011D4A  500A               	movf	i2ringbuf_put@rb+1,w,c
 11231  011D4C  22E2               	addwfc	fsr1h,f,c
 11232  011D4E  CFE6 F00E          	movff	postinc1,??i2_ringbuf_put+2
 11233  011D52  CFE5 F00F          	movff	postdec1,??i2_ringbuf_put+3
 11234  011D56  0E01               	movlw	1
 11235  011D58  260E               	addwf	??i2_ringbuf_put+2,f,c
 11236  011D5A  0E00               	movlw	0
 11237  011D5C  220F               	addwfc	??i2_ringbuf_put+3,f,c
 11238  011D5E  50DE               	movf	postinc2,w,c
 11239  011D60  5C0E               	subwf	??i2_ringbuf_put+2,w,c
 11240  011D62  50DE               	movf	postinc2,w,c
 11241  011D64  580F               	subwfb	??i2_ringbuf_put+3,w,c
 11242  011D66  B0D8               	btfsc	status,0,c
 11243  011D68  D00A               	goto	i2l3500
 11244  011D6A  EE20 F004          	lfsr	2,4
 11245  011D6E  5009               	movf	i2ringbuf_put@rb,w,c
 11246  011D70  26D9               	addwf	fsr2l,f,c
 11247  011D72  500A               	movf	i2ringbuf_put@rb+1,w,c
 11248  011D74  22DA               	addwfc	fsr2h,f,c
 11249  011D76  2ADE               	incf	postinc2,f,c
 11250  011D78  0E00               	movlw	0
 11251  011D7A  22DD               	addwfc	postdec2,f,c
 11252  011D7C  0012               	return	
 11253  011D7E                     i2l3500:
 11254                           
 11255                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
 11256  011D7E  EE20 F004          	lfsr	2,4
 11257  011D82  5009               	movf	i2ringbuf_put@rb,w,c
 11258  011D84  26D9               	addwf	fsr2l,f,c
 11259  011D86  500A               	movf	i2ringbuf_put@rb+1,w,c
 11260  011D88  22DA               	addwfc	fsr2h,f,c
 11261  011D8A  0E00               	movlw	0
 11262  011D8C  6EDE               	movwf	postinc2,c
 11263  011D8E  0E00               	movlw	0
 11264  011D90  6EDD               	movwf	postdec2,c
 11265  011D92  0012               	return	
 11266  011D94  0012               	return		;funcret
 11267  011D96                     __end_ofi2_ringbuf_put:
 11268                           	opt stack 0
 11269                           pclatu	equ	0xFFB
 11270                           pclath	equ	0xFFA
 11271                           tblptru	equ	0xFF8
 11272                           tblptrh	equ	0xFF7
 11273                           tblptrl	equ	0xFF6
 11274                           tablat	equ	0xFF5
 11275                           prodh	equ	0xFF4
 11276                           prodl	equ	0xFF3
 11277                           intcon	equ	0xFF2
 11278                           intcon2	equ	0xFF1
 11279                           postinc0	equ	0xFEE
 11280                           fsr0h	equ	0xFEA
 11281                           fsr0l	equ	0xFE9
 11282                           wreg	equ	0xFE8
 11283                           indf1	equ	0xFE7
 11284                           postinc1	equ	0xFE6
 11285                           postdec1	equ	0xFE5
 11286                           fsr1h	equ	0xFE2
 11287                           fsr1l	equ	0xFE1
 11288                           indf2	equ	0xFDF
 11289                           postinc2	equ	0xFDE
 11290                           postdec2	equ	0xFDD
 11291                           plusw2	equ	0xFDB
 11292                           fsr2h	equ	0xFDA
 11293                           fsr2l	equ	0xFD9
 11294                           status	equ	0xFD8
 11295                           
 11296 ;; *************** function i2_ringbuf_pop *****************
 11297 ;; Defined at:
 11298 ;;		line 64 in file "../My_header\My_ringbuf.h"
 11299 ;; Parameters:    Size  Location     Type
 11300 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 11301 ;;		 -> my_terminal_loop@command(8), tx_buf(8), 
 11302 ;; Auto vars:     Size  Location     Type
 11303 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
 11304 ;; Return value:  Size  Location     Type
 11305 ;;                  1    wreg      unsigned char 
 11306 ;; Registers used:
 11307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11308 ;; Tracked objects:
 11309 ;;		On entry : 0/0
 11310 ;;		On exit  : 0/0
 11311 ;;		Unchanged: 0/0
 11312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11315 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11316 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11317 ;;Total ram usage:        7 bytes
 11318 ;; Hardware stack levels used:    1
 11319 ;; Hardware stack levels required when called:    1
 11320 ;; This function calls:
 11321 ;;		i2_ringbuf_num
 11322 ;; This function is called by:
 11323 ;;		_UART_ISR
 11324 ;; This function uses a non-reentrant model
 11325 ;;
 11326                           
 11327                           	psect	text53
 11328  011E4A                     __ptext53:
 11329                           	opt stack 0
 11330  011E4A                     i2_ringbuf_pop:
 11331                           	opt stack 18
 11332                           
 11333                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
 11334                           
 11335                           ;incstack = 0
 11336  011E4A  C009  F001         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 11337  011E4E  C00A  F002         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 11338  011E52  EC10  F08E         	call	i2_ringbuf_num	;wreg free
 11339  011E56  5001               	movf	?i2_ringbuf_num,w,c
 11340  011E58  1002               	iorwf	?i2_ringbuf_num+1,w,c
 11341  011E5A  B4D8               	btfsc	status,2,c
 11342  011E5C  D04B               	goto	i2l3518
 11343                           
 11344                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
 11345  011E5E  EE20 F006          	lfsr	2,6
 11346  011E62  5009               	movf	i2ringbuf_pop@rb,w,c
 11347  011E64  26D9               	addwf	fsr2l,f,c
 11348  011E66  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11349  011E68  22DA               	addwfc	fsr2h,f,c
 11350  011E6A  CFDE F00B          	movff	postinc2,??i2_ringbuf_pop
 11351  011E6E  CFDD F00C          	movff	postdec2,??i2_ringbuf_pop+1
 11352  011E72  C009  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 11353  011E76  C00A  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 11354  011E7A  CFDE F00D          	movff	postinc2,??i2_ringbuf_pop+2
 11355  011E7E  CFDD F00E          	movff	postdec2,??i2_ringbuf_pop+3
 11356  011E82  500B               	movf	??i2_ringbuf_pop,w,c
 11357  011E84  240D               	addwf	??i2_ringbuf_pop+2,w,c
 11358  011E86  6ED9               	movwf	fsr2l,c
 11359  011E88  500C               	movf	??i2_ringbuf_pop+1,w,c
 11360  011E8A  200E               	addwfc	??i2_ringbuf_pop+3,w,c
 11361  011E8C  6EDA               	movwf	fsr2h,c
 11362  011E8E  50DF               	movf	indf2,w,c
 11363  011E90  6E0F               	movwf	i2ringbuf_pop@ret,c
 11364                           
 11365                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
 11366  011E92  EE20 F002          	lfsr	2,2
 11367  011E96  5009               	movf	i2ringbuf_pop@rb,w,c
 11368  011E98  26D9               	addwf	fsr2l,f,c
 11369  011E9A  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11370  011E9C  22DA               	addwfc	fsr2h,f,c
 11371  011E9E  EE10 F006          	lfsr	1,6
 11372  011EA2  5009               	movf	i2ringbuf_pop@rb,w,c
 11373  011EA4  26E1               	addwf	fsr1l,f,c
 11374  011EA6  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11375  011EA8  22E2               	addwfc	fsr1h,f,c
 11376  011EAA  CFE6 F00D          	movff	postinc1,??i2_ringbuf_pop+2
 11377  011EAE  CFE5 F00E          	movff	postdec1,??i2_ringbuf_pop+3
 11378  011EB2  0E01               	movlw	1
 11379  011EB4  260D               	addwf	??i2_ringbuf_pop+2,f,c
 11380  011EB6  0E00               	movlw	0
 11381  011EB8  220E               	addwfc	??i2_ringbuf_pop+3,f,c
 11382  011EBA  50DE               	movf	postinc2,w,c
 11383  011EBC  5C0D               	subwf	??i2_ringbuf_pop+2,w,c
 11384  011EBE  50DE               	movf	postinc2,w,c
 11385  011EC0  580E               	subwfb	??i2_ringbuf_pop+3,w,c
 11386  011EC2  B0D8               	btfsc	status,0,c
 11387  011EC4  D00A               	goto	i2l3510
 11388                           
 11389                           ;My_header\My_ringbuf.h: 68: rb->tail++;
 11390  011EC6  EE20 F006          	lfsr	2,6
 11391  011ECA  5009               	movf	i2ringbuf_pop@rb,w,c
 11392  011ECC  26D9               	addwf	fsr2l,f,c
 11393  011ECE  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11394  011ED0  22DA               	addwfc	fsr2h,f,c
 11395  011ED2  2ADE               	incf	postinc2,f,c
 11396  011ED4  0E00               	movlw	0
 11397  011ED6  22DD               	addwfc	postdec2,f,c
 11398                           
 11399                           ;My_header\My_ringbuf.h: 69: } else {
 11400  011ED8  D00B               	goto	i2l3512
 11401  011EDA                     i2l3510:
 11402                           
 11403                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
 11404  011EDA  EE20 F006          	lfsr	2,6
 11405  011EDE  5009               	movf	i2ringbuf_pop@rb,w,c
 11406  011EE0  26D9               	addwf	fsr2l,f,c
 11407  011EE2  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11408  011EE4  22DA               	addwfc	fsr2h,f,c
 11409  011EE6  0E00               	movlw	0
 11410  011EE8  6EDE               	movwf	postinc2,c
 11411  011EEA  0E00               	movlw	0
 11412  011EEC  6EDD               	movwf	postdec2,c
 11413  011EEE  D000               	goto	i2l3512
 11414  011EF0                     i2l3512:
 11415                           
 11416                           ;My_header\My_ringbuf.h: 71: }
 11417                           ;My_header\My_ringbuf.h: 72: return ret;
 11418  011EF0  500F               	movf	i2ringbuf_pop@ret,w,c
 11419                           
 11420                           ;My_header\My_ringbuf.h: 73: } else {
 11421  011EF2  0012               	return	
 11422  011EF4                     i2l3518:
 11423                           
 11424                           ;My_header\My_ringbuf.h: 74: return 0;
 11425  011EF4  0E00               	movlw	0
 11426  011EF6  0012               	return	
 11427  011EF8  0012               	return		;funcret
 11428  011EFA                     __end_ofi2_ringbuf_pop:
 11429                           	opt stack 0
 11430                           pclatu	equ	0xFFB
 11431                           pclath	equ	0xFFA
 11432                           tblptru	equ	0xFF8
 11433                           tblptrh	equ	0xFF7
 11434                           tblptrl	equ	0xFF6
 11435                           tablat	equ	0xFF5
 11436                           prodh	equ	0xFF4
 11437                           prodl	equ	0xFF3
 11438                           intcon	equ	0xFF2
 11439                           intcon2	equ	0xFF1
 11440                           postinc0	equ	0xFEE
 11441                           fsr0h	equ	0xFEA
 11442                           fsr0l	equ	0xFE9
 11443                           wreg	equ	0xFE8
 11444                           indf1	equ	0xFE7
 11445                           postinc1	equ	0xFE6
 11446                           postdec1	equ	0xFE5
 11447                           fsr1h	equ	0xFE2
 11448                           fsr1l	equ	0xFE1
 11449                           indf2	equ	0xFDF
 11450                           postinc2	equ	0xFDE
 11451                           postdec2	equ	0xFDD
 11452                           plusw2	equ	0xFDB
 11453                           fsr2h	equ	0xFDA
 11454                           fsr2l	equ	0xFD9
 11455                           status	equ	0xFD8
 11456                           
 11457 ;; *************** function i2_ringbuf_num *****************
 11458 ;; Defined at:
 11459 ;;		line 31 in file "../My_header\My_ringbuf.h"
 11460 ;; Parameters:    Size  Location     Type
 11461 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 11462 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
 11463 ;; Auto vars:     Size  Location     Type
 11464 ;;		None
 11465 ;; Return value:  Size  Location     Type
 11466 ;;                  2    0[COMRAM] unsigned int 
 11467 ;; Registers used:
 11468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11469 ;; Tracked objects:
 11470 ;;		On entry : 0/0
 11471 ;;		On exit  : 0/0
 11472 ;;		Unchanged: 0/0
 11473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11476 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11477 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11478 ;;Total ram usage:        8 bytes
 11479 ;; Hardware stack levels used:    1
 11480 ;; This function calls:
 11481 ;;		Nothing
 11482 ;; This function is called by:
 11483 ;;		_UART_ISR
 11484 ;;		i2_ringbuf_put
 11485 ;;		i2_ringbuf_pop
 11486 ;; This function uses a non-reentrant model
 11487 ;;
 11488                           
 11489                           	psect	text54
 11490  011C20                     __ptext54:
 11491                           	opt stack 0
 11492  011C20                     i2_ringbuf_num:
 11493                           	opt stack 18
 11494                           
 11495                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
 11496                           
 11497                           ;incstack = 0
 11498  011C20  EE20 F006          	lfsr	2,6
 11499  011C24  5001               	movf	i2ringbuf_num@rb,w,c
 11500  011C26  26D9               	addwf	fsr2l,f,c
 11501  011C28  5002               	movf	i2ringbuf_num@rb+1,w,c
 11502  011C2A  22DA               	addwfc	fsr2h,f,c
 11503  011C2C  EE10 F004          	lfsr	1,4
 11504  011C30  5001               	movf	i2ringbuf_num@rb,w,c
 11505  011C32  26E1               	addwf	fsr1l,f,c
 11506  011C34  5002               	movf	i2ringbuf_num@rb+1,w,c
 11507  011C36  22E2               	addwfc	fsr1h,f,c
 11508  011C38  50DE               	movf	postinc2,w,c
 11509  011C3A  5CE6               	subwf	postinc1,w,c
 11510  011C3C  50DE               	movf	postinc2,w,c
 11511  011C3E  58E6               	subwfb	postinc1,w,c
 11512  011C40  A0D8               	btfss	status,0,c
 11513  011C42  D01F               	goto	i2l3224
 11514                           
 11515                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
 11516  011C44  EE20 F004          	lfsr	2,4
 11517  011C48  5001               	movf	i2ringbuf_num@rb,w,c
 11518  011C4A  26D9               	addwf	fsr2l,f,c
 11519  011C4C  5002               	movf	i2ringbuf_num@rb+1,w,c
 11520  011C4E  22DA               	addwfc	fsr2h,f,c
 11521  011C50  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 11522  011C54  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 11523  011C58  EE20 F006          	lfsr	2,6
 11524  011C5C  5001               	movf	i2ringbuf_num@rb,w,c
 11525  011C5E  26D9               	addwf	fsr2l,f,c
 11526  011C60  5002               	movf	i2ringbuf_num@rb+1,w,c
 11527  011C62  22DA               	addwfc	fsr2h,f,c
 11528  011C64  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 11529  011C68  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 11530  011C6C  1E05               	comf	??i2_ringbuf_num+2,f,c
 11531  011C6E  1E06               	comf	??i2_ringbuf_num+3,f,c
 11532  011C70  4A05               	infsnz	??i2_ringbuf_num+2,f,c
 11533  011C72  2A06               	incf	??i2_ringbuf_num+3,f,c
 11534  011C74  5003               	movf	??i2_ringbuf_num,w,c
 11535  011C76  2405               	addwf	??i2_ringbuf_num+2,w,c
 11536  011C78  6E01               	movwf	?i2_ringbuf_num,c
 11537  011C7A  5004               	movf	??i2_ringbuf_num+1,w,c
 11538  011C7C  2006               	addwfc	??i2_ringbuf_num+3,w,c
 11539  011C7E  6E02               	movwf	?i2_ringbuf_num+1,c
 11540                           
 11541                           ;My_header\My_ringbuf.h: 34: } else {
 11542  011C80  0012               	return	
 11543  011C82                     i2l3224:
 11544                           
 11545                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
 11546  011C82  EE20 F004          	lfsr	2,4
 11547  011C86  5001               	movf	i2ringbuf_num@rb,w,c
 11548  011C88  26D9               	addwf	fsr2l,f,c
 11549  011C8A  5002               	movf	i2ringbuf_num@rb+1,w,c
 11550  011C8C  22DA               	addwfc	fsr2h,f,c
 11551  011C8E  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 11552  011C92  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 11553  011C96  EE20 F002          	lfsr	2,2
 11554  011C9A  5001               	movf	i2ringbuf_num@rb,w,c
 11555  011C9C  26D9               	addwf	fsr2l,f,c
 11556  011C9E  5002               	movf	i2ringbuf_num@rb+1,w,c
 11557  011CA0  22DA               	addwfc	fsr2h,f,c
 11558  011CA2  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 11559  011CA6  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 11560  011CAA  EE20 F006          	lfsr	2,6
 11561  011CAE  5001               	movf	i2ringbuf_num@rb,w,c
 11562  011CB0  26D9               	addwf	fsr2l,f,c
 11563  011CB2  5002               	movf	i2ringbuf_num@rb+1,w,c
 11564  011CB4  22DA               	addwfc	fsr2h,f,c
 11565  011CB6  CFDE F007          	movff	postinc2,??i2_ringbuf_num+4
 11566  011CBA  CFDD F008          	movff	postdec2,??i2_ringbuf_num+5
 11567  011CBE  1E07               	comf	??i2_ringbuf_num+4,f,c
 11568  011CC0  1E08               	comf	??i2_ringbuf_num+5,f,c
 11569  011CC2  4A07               	infsnz	??i2_ringbuf_num+4,f,c
 11570  011CC4  2A08               	incf	??i2_ringbuf_num+5,f,c
 11571  011CC6  5005               	movf	??i2_ringbuf_num+2,w,c
 11572  011CC8  2607               	addwf	??i2_ringbuf_num+4,f,c
 11573  011CCA  5006               	movf	??i2_ringbuf_num+3,w,c
 11574  011CCC  2208               	addwfc	??i2_ringbuf_num+5,f,c
 11575  011CCE  5003               	movf	??i2_ringbuf_num,w,c
 11576  011CD0  2407               	addwf	??i2_ringbuf_num+4,w,c
 11577  011CD2  6E01               	movwf	?i2_ringbuf_num,c
 11578  011CD4  5004               	movf	??i2_ringbuf_num+1,w,c
 11579  011CD6  2008               	addwfc	??i2_ringbuf_num+5,w,c
 11580  011CD8  6E02               	movwf	?i2_ringbuf_num+1,c
 11581  011CDA  0012               	return	
 11582  011CDC  0012               	return		;funcret
 11583  011CDE                     __end_ofi2_ringbuf_num:
 11584                           	opt stack 0
 11585                           pclatu	equ	0xFFB
 11586                           pclath	equ	0xFFA
 11587                           tblptru	equ	0xFF8
 11588                           tblptrh	equ	0xFF7
 11589                           tblptrl	equ	0xFF6
 11590                           tablat	equ	0xFF5
 11591                           prodh	equ	0xFF4
 11592                           prodl	equ	0xFF3
 11593                           intcon	equ	0xFF2
 11594                           intcon2	equ	0xFF1
 11595                           postinc0	equ	0xFEE
 11596                           fsr0h	equ	0xFEA
 11597                           fsr0l	equ	0xFE9
 11598                           wreg	equ	0xFE8
 11599                           indf1	equ	0xFE7
 11600                           postinc1	equ	0xFE6
 11601                           postdec1	equ	0xFE5
 11602                           fsr1h	equ	0xFE2
 11603                           fsr1l	equ	0xFE1
 11604                           indf2	equ	0xFDF
 11605                           postinc2	equ	0xFDE
 11606                           postdec2	equ	0xFDD
 11607                           plusw2	equ	0xFDB
 11608                           fsr2h	equ	0xFDA
 11609                           fsr2l	equ	0xFD9
 11610                           status	equ	0xFD8
 11611                           pclatu	equ	0xFFB
 11612                           pclath	equ	0xFFA
 11613                           tblptru	equ	0xFF8
 11614                           tblptrh	equ	0xFF7
 11615                           tblptrl	equ	0xFF6
 11616                           tablat	equ	0xFF5
 11617                           prodh	equ	0xFF4
 11618                           prodl	equ	0xFF3
 11619                           intcon	equ	0xFF2
 11620                           intcon2	equ	0xFF1
 11621                           postinc0	equ	0xFEE
 11622                           fsr0h	equ	0xFEA
 11623                           fsr0l	equ	0xFE9
 11624                           wreg	equ	0xFE8
 11625                           indf1	equ	0xFE7
 11626                           postinc1	equ	0xFE6
 11627                           postdec1	equ	0xFE5
 11628                           fsr1h	equ	0xFE2
 11629                           fsr1l	equ	0xFE1
 11630                           indf2	equ	0xFDF
 11631                           postinc2	equ	0xFDE
 11632                           postdec2	equ	0xFDD
 11633                           plusw2	equ	0xFDB
 11634                           fsr2h	equ	0xFDA
 11635                           fsr2l	equ	0xFD9
 11636                           status	equ	0xFD8
 11637                           
 11638                           	psect	rparam
 11639  0000                     pclatu	equ	0xFFB
 11640                           pclath	equ	0xFFA
 11641                           tblptru	equ	0xFF8
 11642                           tblptrh	equ	0xFF7
 11643                           tblptrl	equ	0xFF6
 11644                           tablat	equ	0xFF5
 11645                           prodh	equ	0xFF4
 11646                           prodl	equ	0xFF3
 11647                           intcon	equ	0xFF2
 11648                           intcon2	equ	0xFF1
 11649                           postinc0	equ	0xFEE
 11650                           fsr0h	equ	0xFEA
 11651                           fsr0l	equ	0xFE9
 11652                           wreg	equ	0xFE8
 11653                           indf1	equ	0xFE7
 11654                           postinc1	equ	0xFE6
 11655                           postdec1	equ	0xFE5
 11656                           fsr1h	equ	0xFE2
 11657                           fsr1l	equ	0xFE1
 11658                           indf2	equ	0xFDF
 11659                           postinc2	equ	0xFDE
 11660                           postdec2	equ	0xFDD
 11661                           plusw2	equ	0xFDB
 11662                           fsr2h	equ	0xFDA
 11663                           fsr2l	equ	0xFD9
 11664                           status	equ	0xFD8


Data Sizes:
    Strings     437
    Constant    28
    Data        1
    BSS         1399
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     35      65
    BANK0           160     80     160
    BANK1           256    129     169
    BANK2           256      0     250
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    command_operation@op3	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op3(BANK1[20]), 

    command_operation@op2	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK1[20]), 

    command_operation@op1	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op1(BANK0[20]), 

    command_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK0[8]), 

    command_operation@op0	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op0(BANK0[20]), 

    command_at@op2	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK1[20]), 

    command_at@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK0[8]), 

    command_at@op1	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op1(BANK0[20]), 

    command_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK0[8]), 

    command_at_hand@hand	PTR unsigned char  size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK0[8]), 

    print_time_dec@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK0[8]), 

    my_terminal_loop@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK0[8]), 

    my_terminal_loop@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(BANK0[8]), 

    F9957.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    my_strcmp@str2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_39(CODE[6]), STR_38(CODE[2]), STR_37(CODE[2]), STR_36(CODE[2]), 
		 -> STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), STR_32(CODE[2]), 
		 -> STR_31(CODE[2]), STR_30(CODE[4]), STR_29(CODE[4]), STR_28(CODE[4]), 
		 -> STR_27(CODE[4]), STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[2]), 
		 -> STR_23(CODE[11]), STR_22(CODE[12]), STR_21(CODE[3]), STR_20(CODE[9]), 
		 -> STR_18(CODE[2]), STR_17(CODE[5]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 

    my_strcmp@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op1(BANK0[20]), my_terminal_loop@op0(BANK0[20]), 

    my_atoi@str	PTR const unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK1[20]), 

    my_utoa@str	PTR unsigned char  size(2) Largest target is 10
		 -> print_time_dec@str(BANK0[10]), 

    RTCC_from_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(COMRAM[4]), 

    RTCC_from_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    RTCC_from_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(COMRAM[4]), 

    RTCC_from_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    RTCC_from_RTCC@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(COMRAM[4]), 

    RTCC_from_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    caltime_to_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(COMRAM[4]), 

    caltime_to_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    epoch_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    epoch_to_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(COMRAM[4]), 

    caltime_to_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    RTCC_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(COMRAM[7]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> sw_B(BANK0[4]), sw_G(COMRAM[4]), sw_R(COMRAM[4]), 

    tx_sends@asciicode	PTR const unsigned char  size(2) Largest target is 315
		 -> STR_19(CODE[315]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), tx_buf(BANK0[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_10(CODE[8]), STR_9(CODE[2]), STR_8(CODE[3]), weekday_3char(CODE[28]), 
		 -> STR_7(CODE[3]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[3]), print_time_dec@str(BANK0[10]), STR_2(CODE[4]), STR_1(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK0[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK0[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), rx_buf(BANK0[8]), tx_buf(BANK0[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), rx_buf(BANK0[8]), tx_buf(BANK0[8]), 

    S790ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), rx_buf(BANK0[8]), tx_buf(BANK0[8]), 


Critical Paths under _main in COMRAM

    _main->_PWM_set
    _my_terminal_loop->_ringbuf_pop
    _my_terminal_loop->_ringbuf_put
    _ringbuf_put_num->___lwmod
    _ringbuf_put_num->_ringbuf_put
    _ringbuf_pop->_ringbuf_num
    _ringbuf_backspace->_ringbuf_num
    _command_operation->_PWM_set
    _command_operation->_my_strcmp
    _tx_sends->_ringbuf_put
    _command_at->_month_length
    _command_at->_my_strcmp
    _print_time->_ringbuf_put
    _ringbuf_put_str->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _my_utoa->___lwmod
    _RTCC_from_RTCC->_RTCC_to_caltime
    _RTCC_to_caltime->_x_to_d
    _caltime_to_epoch->_month_length
    ___wmul->_ADC
    ___lwdiv->_ADC
    _main_init->_timer1_init
    _epoch_to_caltime->_month_length
    _month_length->___awmod
    ___lmul->_month_length
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv

Critical Paths under _ISR in COMRAM

    _ISR->_UART_ISR
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _main->_my_terminal_loop
    _ringbuf_put_num->___lwdiv
    _ringbuf_pop->_ringbuf_num
    _ringbuf_backspace->_ringbuf_num
    _command_operation->_command_at
    _tx_sends->_ringbuf_put
    _command_at->_command_at_hand
    _my_atoi->___wmul
    _command_at_hand->_RTCC_from_caltime
    _print_time->_RTCC_from_RTCC
    _print_time_dec->_my_utoa
    _ringbuf_put_str->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _my_utoa->___lwdiv
    _RTCC_from_RTCC->_caltime_to_epoch
    _RTCC_from_caltime->_epoch_to_caltime
    _caltime_to_epoch->___lmul
    _PWM_set->_my_atoi
    ___lwdiv->___wmul
    _main_init->_ringbuf_init
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _month_length->___awmod
    _get_quot_rem->___lldiv
    ___lmul->_month_length
    ___lldiv->___lmul
    _d_to_x->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_my_terminal_loop
    _my_terminal_loop->_command_operation

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0  175364
                                            115 BANK1     14    14      0
                                _ADC
                            _PWM_set
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_loop
                            ___lldiv
                            ___llmod
                             ___lmul
                            ___lwdiv
                             ___wmul
                          _main_init
                   _my_terminal_loop
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _my_terminal_loop                                   111   107      4  144261
                                             74 BANK0      6     2      4
                                             10 BANK1    105   105      0
                  _command_operation
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5    7471
                                             13 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    1854
                                             32 COMRAM     3     1      2
                                              6 BANK0      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     166
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1273
                                             32 COMRAM     2     0      2
                                              6 BANK0      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _command_operation                                   10     0     10  119015
                                              0 BANK1     10     0     10
                            _PWM_set
                         _command_at
                            _my_atoi
                          _my_strcmp
                         _print_time
                           _tx_sends
 ---------------------------------------------------------------------------------
 (3) _tx_sends                                             2     0      2    4512
                                             10 BANK0      2     0      2
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _command_at                                           7     1      6   68189
                                             67 BANK0      7     1      6
                    _command_at_hand
                       _month_length
                            _my_atoi
                          _my_strcmp
 ---------------------------------------------------------------------------------
 (3) _my_strcmp                                            5     1      4    6078
                                             30 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _my_atoi                                              8     6      2    2510
                                              6 BANK0      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _command_at_hand                                      7     0      7   56518
                                             60 BANK0      7     0      7
                  _RTCC_from_caltime
                            _my_atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (3) _print_time                                           3     0      3   31582
                                             38 BANK0      3     0      3
                     _RTCC_from_RTCC
                     _print_time_dec
                        _ringbuf_put
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (4) _print_time_dec                                      14    10      4   12482
                                             21 BANK0     14    10      4
                            _my_utoa
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_str                                      4     0      4    6935
                                             10 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _ringbuf_put                                          7     4      3    4343
                                             32 COMRAM     3     0      3
                                              6 BANK0      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _ringbuf_num                                          8     6      2    1014
                                             30 COMRAM     2     0      2
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) _my_utoa                                              8     3      5    3159
                                             13 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     856
                                             30 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _RTCC_from_RTCC                                       4     0      4    6817
                                             34 BANK0      4     0      4
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (5) _RTCC_to_caltime                                      3     1      2     386
                                             32 COMRAM     3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (6) _x_to_d                                               2     2      0      62
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    4     0      4   14633
                                             56 BANK0      4     0      4
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (5) _caltime_to_epoch                                    15    11      4    5298
                                             19 BANK0     15    11      4
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (3) _PWM_set                                              5     3      2    4694
                                             34 COMRAM     1     1      0
                                             14 BANK0      4     2      2
                            ___lwdiv
                             ___wmul
                            _my_atoi (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1272
                                              0 BANK0      6     2      4
                                _ADC (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1697
                                              6 BANK0      7     3      4
                                _ADC (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    1412
                           _ADC_init
                           _OSC_init
                           _PWM_init
                          _RTCC_init
                          _UART_init
                       _ringbuf_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     197
                                             30 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1122
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_init                                             1     1      0      31
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     648
                                             30 COMRAM     1     1      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RTCC_from_epoch                                      4     0      4    9689
                                             56 BANK0      4     0      4
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    16    12      4    7832
                                             40 BANK0     16    12      4
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (6) _month_length                                         6     5      1    2179
                                             34 COMRAM     1     0      1
                                              2 BANK0      5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     849
                                             30 COMRAM     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    4262
                                             32 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    2168
                                              7 BANK0     12     4      8
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8    1073
                                             19 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    1140
                                              4 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0     715
                                             34 COMRAM     1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     653
                                             30 COMRAM     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  4     2      2      31
                                             30 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                14    14      0    2520
                                             16 COMRAM    14    14      0
                           _UART_ISR
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (11) _button_timer_interrupt                              5     2      3    1348
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (11) _UART_ISR                                            1     1      0    1172
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_put                                       7     4      3     482
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_pop                                       7     5      2     435
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (13) i2_ringbuf_num                                       8     6      2     232
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _PWM_set
     ___lwdiv
       _ADC (ARG)
       ___wmul (ARG)
         _ADC (ARG)
     ___wmul
       _ADC (ARG)
     _my_atoi (ARG)
       ___wmul
         _ADC (ARG)
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
           ___lmul (ARG)
             _month_length (ARG)
               ___awmod
         ___lmul
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_loop
   ___lldiv
     ___lmul (ARG)
       _month_length (ARG)
         ___awmod
   ___llmod
   ___lmul
     _month_length (ARG)
       ___awmod
   ___lwdiv
     _ADC (ARG)
     ___wmul (ARG)
       _ADC (ARG)
   ___wmul
     _ADC (ARG)
   _main_init
     _ADC_init
     _OSC_init
     _PWM_init
     _RTCC_init
     _UART_init
     _ringbuf_init
     _timer1_init
     _timer3_init
   _my_terminal_loop
     _command_operation
       _PWM_set
         ___lwdiv
           _ADC (ARG)
           ___wmul (ARG)
             _ADC (ARG)
         ___wmul
           _ADC (ARG)
         _my_atoi (ARG)
           ___wmul
             _ADC (ARG)
       _command_at
         _command_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                   ___lmul (ARG)
                     _month_length (ARG)
                       ___awmod
                 ___lmul
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _my_atoi (ARG)
             ___wmul
               _ADC (ARG)
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _print_time_dec
               _my_utoa
                 ___lwdiv
                   _ADC (ARG)
                   ___wmul (ARG)
                     _ADC (ARG)
                 ___lwmod
               _ringbuf_put_str
                 _ringbuf_put
                   _ringbuf_num
             _ringbuf_put
               _ringbuf_num
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num
         _month_length
           ___awmod
         _my_atoi
           ___wmul
             _ADC (ARG)
         _my_strcmp
       _my_atoi
         ___wmul
           _ADC (ARG)
       _my_strcmp
       _print_time
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _print_time_dec
           _my_utoa
             ___lwdiv
               _ADC (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
             ___lwmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
         _ringbuf_put
           _ringbuf_num
         _ringbuf_put_str
           _ringbuf_put
             _ringbuf_num
       _tx_sends
         _ringbuf_put
           _ringbuf_num
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         _ADC (ARG)
         ___wmul (ARG)
           _ADC (ARG)
       ___lwmod
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
   _ringbuf_num

 _ISR (ROOT)
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _button_timer_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0     3E8      35       26.6%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      FA      10       97.7%
BITBANK1           100      0       0       7        0.0%
BANK1              100     81      A9       8       66.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     23      41       1       68.4%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     284       6        0.0%
DATA                 0      0     66C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Aug 26 23:30:51 2015

                ?_print_time_dec 0075                  _ringbuf_put_num 2460  
                _ringbuf_put_str 26B8                    my_strcmp@str1 001F  
                  my_strcmp@str2 0021                               _d1 0024  
                   ___awdiv@sign 0061              ___wmul@multiplicand 0062  
              ??_RTCC_from_epoch 0024                     __CFG_CP0$OFF 000000  
                            l144 2888                              l161 29D2  
                            l332 1FAA                              l182 2462  
                            l351 122A                              _ADC 29B6  
                            l338 183C                              l525 1372  
                            l439 298E                              l447 2354  
                            l640 0246                              l568 1DAE  
                            _PR2 000FCB                              _ISR 1008  
                  ?_get_quot_rem 0080               caltime_to_epoch@ep 0075  
             caltime_to_epoch@ct 0073                _RTCC_from_caltime 2926  
                   ___awmod@sign 0061                              prod 000FF3  
                            wreg 000FE8                       _TXSTA1bits 000FAD  
             ?_RTCC_from_caltime 0098                             ?_ADC 001F  
                           ?_ISR 0001              command_operation@tx 0100  
               ?_command_at_hand 009C                             l1120 1B50  
                           l1130 2184                             l1183 255A  
                           l1193 285C                             l5000 08B6  
                           l4122 1984                             l4210 250E  
                           l4132 25A0                             l4220 254A  
                           l4212 2518                             l4300 2382  
                           l4060 16F6                             l4108 1A84  
                           l5012 097E                             l4150 1F28  
                           l4230 2832                             l5022 09D8  
                           l5014 0986                             l5006 0936  
                           l5030 0A0A                             l4160 1F56  
                           l4144 1F14                             l4128 2578  
                           l4080 22FA                             l4072 22DC  
                           l4208 2500                             l4232 283A  
                           l5008 0958                             l4082 2306  
                           l4242 26BA                             l5018 09A4  
                           l4156 1F42                             l4172 1F86  
                           l4084 230E                             l4092 2332  
                           l4076 22EA                             l4236 2850  
                           l4228 2828                             l4308 23C2  
                           l4404 269C                             l5204 015E  
                           l4158 1F4E                             l4190 1AE6  
                           l5070 212C                             l4246 26F2  
                           l4502 0F92                             l5222 0218  
                           l4176 1F9C                             l4168 1F78  
                           l4096 2346                             l4088 2324  
                           l4272 0A56                             l4280 0AB6  
                           l4520 10EE                             l4512 1046  
                           l5240 0272                             l5216 01FE  
                           l5208 01DC                             l4186 1ACA  
                           l5074 2172                             l5066 2112  
                           l4530 1586                             l4266 0A46  
                           l4426 148E                             l4506 0FE6  
                           l5226 022C                             l5218 0204  
                           l4188 1ADC                             l4380 12AC  
                           l5068 2122                             l4540 15E0  
                           l4284 0AD6                             l4268 0A4C  
                           l4428 14A0                             l4460 2198  
                           l4516 109A                             l4700 03C2  
                           l5260 02DA                             l5252 02B4  
                           l5244 028C                             l4198 1B3C  
                           l4374 129C                             l4550 164A  
                           l4526 1572                             l4278 0AB0  
                           l4454 20D8                             l4446 2060  
                           l4710 0426                             l4702 03D4  
                           l4630 2472                             l5238 026C  
                           l5190 008E                             l5182 0056  
                           l4376 12A2                             l4536 15CC  
                           l4544 1628                             l4288 0B3C  
                           l4456 20E0                             l4472 220E  
                           l4712 0444                             l4640 24D4  
                           l5248 02A0                             l4570 288C  
                           l4554 1654                             l4546 1640  
                           l4298 2362                             l4466 21DC  
                           l4730 0504                             l4706 03F2  
                           l4650 1C00                             l4634 2496  
                           l4564 166C                             l4468 21E6  
                           l4492 28AE                             l4724 04C8  
                           l4716 0478                             l4652 1C16  
                           l5268 037A                             l4558 1660  
                           l4750 05E4                             l4742 058E  
                           l4734 0538                             l4718 048C  
                           l4488 2638                             l4496 28D4  
                           l4728 04FC                             l4762 066E  
                           l4754 0618                             l4746 05C2  
                           l4738 056C                             l4658 1C1A  
                           l4668 2418                             l4766 0690  
                           l4758 063A                             l4688 2974  
             __CFG_WPFP$PAGE_127 000000                             l4970 0752  
                           l4990 0860                             l4982 0810  
                           l4974 07C0                             l4966 072C  
                           l4992 0866                             l4984 0816  
                           l4976 07C6                             l4998 08B0  
                           STR_1 FFBC                             STR_2 FFBC  
                           STR_3 FFD4                             STR_4 FFE0  
                           STR_5 FFE4                             STR_6 FFE4  
                           STR_7 FFDA                             STR_8 FFD7  
                           STR_9 FFE2             command_at_hand@value 00A2  
                           u4300 1936                             u4310 1938  
                           u4320 1960                             u4340 1976  
                           u4350 1978                             u4360 19CC  
                           u4370 19CE                             u4338 1964  
                           u4550 26E4                             u4560 2714  
                           u4557 26DA                             u4567 270A  
                           u5740 0110                             u4925 2AB8  
                           u4926 2ABA                             u5840 02D8  
                           u5860 0354                             u5870 0388  
                           u5855 02E8              ??_RTCC_from_caltime 0024  
                           _main 0000         button_timer_interrupt@bt 0001  
                           _sw_B 00F9                             _sw_G 003A  
                           _sw_R 003E                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9           __CFG_DSWDTOSC$T1OSCREF 000000  
                           pclat 000FFA                             prodh 000FF4  
                           prodl 000FF3                  __end_of_PWM_set 168A  
                           start 10DE                 __end_of_ADC_init 2AC8  
                  __CFG_IESO$OFF 000000                     ___param_bank 000010  
          __end_ofi2_ringbuf_pop 1EFA            __end_ofi2_ringbuf_num 1CDE  
                          ??_ADC 0021            __end_ofi2_ringbuf_put 1D96  
                          ADC@ch 0022                    ADC_init@p_ref 001F  
                          ??_ISR 0011                     print_time@tx 0086  
           command_operation@op0 0102             command_operation@op1 0104  
           command_operation@op2 0106             command_operation@op3 0108  
              ??_RTCC_to_caltime 0023                    __CFG_PLLDIV$2 000000  
                   command_at@tx 00A3                     _BAUDCON1bits 000F7E  
      __end_of_RTCC_from_caltime 295C                            ?_main 0001  
                 ??_get_quot_rem 0024                  __end_of___awdiv 1FA8  
                          _ADRES 000FC3                            STR_10 FFA4  
                          STR_11 FFFC                            STR_12 FFC6  
                          STR_20 FF9B                            STR_13 FFF2  
                          STR_21 FFDD                            STR_14 FFF6  
                          STR_30 FFC4                            STR_22 FF84  
                          STR_15 FFCE                            STR_31 FFB0  
                          STR_23 FF90                            STR_24 FFDE  
                          STR_16 FFF8                            STR_32 FFEC  
                          STR_33 FFF4                            STR_25 FFD0  
                          STR_17 FFB7                            STR_34 FFEA  
                          STR_18 FFE6                            STR_26 FFB2  
                          STR_35 FFF0                            STR_27 FFC8  
                          STR_19 FE49                            STR_36 FFE8  
                          STR_28 FFC0                  __end_of___awmod 2352  
                          STR_37 FFFA                            STR_29 FFCC  
                          STR_38 FFEE                            STR_39 FFAC  
                __end_of___lldiv 1B62                  ___awdiv@divisor 0021  
                __end_of___llmod 2196                            _LATB2 007C52  
                __end_of___lwdiv 2564                  __end_of___lwmod 2866  
                          i2l220 27F6                            i2l219 27FA  
                          i2l272 0CE2                            i2l273 0D06  
                          i2l274 0D28                            i2l275 0D4A  
                          i2l276 0D6A                            i2l277 0D8A  
                          i2l278 0DAA                            i2l279 0DCA  
                          i2l565 10A4                  ___awdiv@counter 0060  
                          _TMR1H 000FCF                            _RPOR3 000EC3  
                          _RPOR4 000EC4                            _RPOR5 000EC5  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94              ___lmul@multiplicand 006B  
                 __CFG_FCMEN$OFF 000000                 __end_of_UART_ISR 281A  
           caltime_to_epoch@year 007B               __size_of_UART_init 0020  
                          _colon 0028                 __end_of_OSC_init 2AF0  
             __size_of_RTCC_init 0030               __size_of_RTCC_loop 002A  
               ringbuf_delete@rb 001F                            main@i 017F  
                          main@n 00FE                  __end_of_my_atoi 20F8  
                          tablat 000FF5                  __end_of_my_utoa 23DC  
                          plusw2 000FDB                 __end_of_PWM_init 1E4A  
     __size_of_ringbuf_backspace 0084                            status 000FD8  
              ?_my_terminal_loop 00AA                month_length@month 0023  
        __end_of_ringbuf_put_num 24E2          __end_of_ringbuf_put_str 271C  
             ??_my_terminal_loop 00AE                  __initialization 271C  
                   __end_of_main 038E              ringbuf_init@bufsize 0064  
               RTCC_from_RTCC@ep 0084                 RTCC_from_RTCC@ct 0082  
            my_terminal_loop@op0 00B9              my_terminal_loop@op1 00CD  
            my_terminal_loop@op2 0181              my_terminal_loop@op3 0195  
            my_terminal_loop@buf 010A                           ??_main 0173  
                  __activetblptr 000003                    command_at@op1 00A5  
                  command_at@op2 00A7           my_terminal_loop@i_2274 0170  
               ___llmod@dividend 0060                           _CCPR1L 000FBB  
                         _CCPR2L 000FB5                           _CCPR3L 000F16  
                         _CCPR4L 000F13                           _EECON2 000FA7  
                         _ANCON0 000F48                           _ANCON1 000F49  
               ___awdiv@dividend 001F                        ??_PWM_set 0070  
                         i2l3224 1C82                           i2l3500 1D7E  
                         i2l3510 1EDA                   __CFG_WDTEN$OFF 000000  
                         i2l3512 1EF0                           i2l3602 0F16  
                         i2l3518 1EF4                           i2l3570 0DEE  
                         i2l3590 0EA4                           i2l3582 0E5A  
                         i2l3574 0E12                           i2l3594 0ECA  
                         i2l3586 0E7E                           i2l3578 0E36  
                         i2l3598 0EF0                           i2l3944 1054  
                         _RCREG1 000FAF                           _RTCCAL 000F3E  
                         _SPBRG1 000FB0                   __CFG_WPCFG$OFF 000000  
                         _TXREG1 000FAE                  i2ringbuf_pop@rb 0009  
                i2ringbuf_num@rb 0001                  i2ringbuf_put@rb 0009  
                 __CFG_WPDIS$OFF 000000               epoch_to_caltime@ep 008A  
             epoch_to_caltime@ct 0088                   __CFG_XINST$OFF 000000  
              ?_epoch_to_caltime 0088                 ringbuf_put_num@i 0072  
                   _CCPTMRS0bits 000F52                     _CCPTMRS1bits 000F51  
          caltime_to_epoch@epoch 007D                     ?_ringbuf_pop 0021  
                   ?_ringbuf_num 001F                     ?_ringbuf_put 0021  
          caltime_to_epoch@month 0081                           ___lmul 2564  
                _caltime_to_RTCC 183A                           ___wmul 28EE  
             ??_epoch_to_caltime 008C                __end_of_UART_init 2A8C  
                      ??___awdiv 0023                        ??___awmod 0023  
                         _d_to_x 2A8C                        ??___lldiv 0024  
           ringbuf_put_num@value 006F                        ??___llmod 001F  
              __end_of_RTCC_init 298C                     ?_timer1_init 001F  
                      ??___lwdiv 0023                __end_of_RTCC_loop 29B6  
                      ??___lwmod 0023                     ?_timer3_init 0001  
                         clear_0 2724                           clear_1 2736  
                         clear_2 2742                           clear_3 274E  
                         clear_4 275A                  __CFG_CLKOEC$OFF 000000  
               ___awdiv@quotient 0062                  ___awmod@divisor 0021  
                ___awmod@counter 0060                           _x_to_d 2AC8  
                         _rx_buf 00E1       __size_of_RTCC_from_caltime 0036  
              _command_operation 038E                           _tx_buf 00E9  
      __size_of_caltime_to_epoch 028C                    main@prev_scan 00B0  
               print_time_dec@tx 0075               ?_command_operation 0100  
                   __mediumconst FE2C                           tblptrh 000FF7  
                         tblptrl 000FF6                        ??_my_atoi 0068  
                         tblptru 000FF8                        ?_ADC_init 0001  
                      ??_my_utoa 0024                 __end_of_tx_sends 28EE  
            ??_command_operation 0024     my_terminal_loop@command_init 00B8  
           __CFG_LS48MHZ$SYS48X8 000000                       __accesstop 0060  
        __end_of__initialization 2772             __end_of_get_quot_rem 183A  
                  ___rparam_used 000001                  _RTCC_from_epoch 2A4A  
             command_at_hand@max 00A1               command_at_hand@min 00A0  
               ??_print_time_dec 0024                 ?_ringbuf_put_num 006D  
               ?_ringbuf_put_str 006A             __CFG_WPEND$PAGE_WPFP 000000  
                 __pcstackCOMRAM 0001                     __pidataBANK0 1004  
                      ?_UART_ISR 0001        __end_of_command_operation 06F4  
                      ?_OSC_init 0001                  __CFG_DSWDTPS$G2 000000  
       print_time@carrige_return 0088                        ?_PWM_init 0001  
        __size_of_ringbuf_delete 0022                       ??_ADC_init 001F  
     caltime_to_epoch@month_2069 007C               __size_of_main_init 0090  
                     __pbssBANK0 00B0                       __pbssBANK1 0181  
                     __pbssBANK2 0200          __end_of_caltime_to_RTCC 190C  
                _RTCC_to_caltime 1FA8            __end_of_weekday_3char FE49  
                        ?___lmul 0067                       ??_UART_ISR 0010  
                        ?___wmul 0060                          ?_d_to_x 0001  
                     ??_OSC_init 001F                   ___lmul@product 006F  
                        ?_x_to_d 0001                       ??_PWM_init 001F  
             __CFG_OSC$INTOSCPLL 000000               __size_of_my_strcmp 009C  
        my_terminal_loop@command 00F1                  __CFG_WDTPS$1024 000000  
                     _command_at 0F3E                          _SPBRGH1 000F7F  
                        _RTCVALH 000F3B                          _RTCVALL 000F3A  
        __end_of_RTCC_from_epoch 2A6C             timer1_init@prescaler 0021  
                        _PWM_set 150A                 i2ringbuf_pop@ret 000F  
                   PWM_set@color 0023                 __CFG_CFGPLLEN$ON 000000  
       ??_button_timer_interrupt 0004                     PWM_set@value 006E  
                  ?_month_length 0023              epoch_to_caltime@day 0090  
              RTCC_from_epoch@ep 009A                RTCC_from_epoch@ct 0098  
            epoch_to_caltime@num 0094         __size_of_command_at_hand 0076  
                        __Hparam 0000                          __Lparam 0000  
              ringbuf_put_num@rb 006D                ringbuf_put_str@rb 006A  
                  ?_ringbuf_init 0060                          ___awdiv 1EFA  
                __size_of___lmul 007A                          ___awmod 22C2  
                        ___lldiv 1A9C                  __size_of___wmul 0038  
                        ___llmod 20F8            ringbuf_put_num@digits 0071  
                     _light_mode 00B5                          ___lwdiv 24E2  
                        ___lwmod 281A                  __size_of_d_to_x 0020  
     __size_of_command_operation 0366             __size_of_ringbuf_pop 00BE  
           __size_of_ringbuf_num 00DA             __size_of_ringbuf_put 00C6  
                __CFG_STVREN$OFF 000000                __end_of_main_init 22C2  
    epoch_to_caltime@month_cache 00FF                          __pcinit 271C  
                      ?_tx_sends 006A                          __ramtop 0F00  
      __size_of_my_terminal_loop 0338                          _halfsec 002B  
           __size_of_timer1_init 0046                          __ptext0 0000  
                        __ptext1 06F4                          __ptext2 2460  
                        __ptext3 1B62                          __ptext4 2A06  
                        __ptext5 23DC                          __ptext6 038E  
                        __ptext7 28AC                          __ptext8 0F3E  
                        __ptext9 2196             __size_of_timer3_init 0026  
                __size_of_x_to_d 001A                        _T0CONbits 000FD5  
                   __size_of_ADC 002A                 _time_change_flag 00B6  
               _caltime_to_epoch 0A2C                     __size_of_ISR 00D6  
                      _T1CONbits 000FCD          __size_of_RTCC_from_RTCC 0022  
                      _T2CONbits 000FCA                          _rc_flag 002C  
                      _T3CONbits 000F79                 ___awmod@dividend 001F  
                 main@value_2517 0178                        _T5CONbits 000F22  
                        _my_atoi 2054                          _my_utoa 2352  
                        _rx_flag 002D          __end_of_RTCC_to_caltime 2054  
          __size_of_get_quot_rem 00D6             end_of_initialization 2772  
         __size_ofi2_ringbuf_pop 00B0           __size_ofi2_ringbuf_num 00BE  
         __size_ofi2_ringbuf_put 00B8                     _CTMUCONHbits 000FB3  
                   _CTMUCONLbits 000FB2                print_time_dec@dec 0077  
                 ??_month_length 0062                print_time_dec@str 0079  
               ?_caltime_to_RTCC 0064                  ___lldiv@divisor 0077  
           timer3_init@prescaler 0020                __end_of_my_strcmp 2232  
                ___lldiv@counter 007F                   ??_ringbuf_init 001F  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                       ??_tx_sends 0024  
                      _PORTAbits 000F80                        _UART_init 2A6C  
               __CFG_DSBOREN$OFF 000000                        _RTCC_init 295C  
                      _RTCC_loop 298C                     _display_flag 0029  
      epoch_to_caltime@day_cache 00B3           i2ringbuf_put@asciicode 000B  
                   _get_quot_rem 1764                       _print_time 1334  
                 _ringbuf_delete 2A06        __size_of_epoch_to_caltime 01F0  
               __CFG_CPUDIV$OSC1 000000              RTCC_from_caltime@ep 009A  
            RTCC_from_caltime@ct 0098                      ?_command_at 00A3  
              __size_of_ADC_init 001C                 ?_RTCC_from_epoch 0098  
__size_of_button_timer_interrupt 0286          timer1_init@clock_select 001F  
            command_at_hand@hand 009E                      _CCP1CONbits 000FBA  
                    _CCP2CONbits 000FB4                 __CFG_IOL1WAY$OFF 000000  
                    _CCP3CONbits 000F15                      _CCP4CONbits 000F12  
            __CFG_MSSP7B_EN$MSK7 000000                   ringbuf_init@rb 0060  
                 ringbuf_pop@ret 0023                    i2_ringbuf_pop 1E4A  
                  i2_ringbuf_num 1C20                    i2_ringbuf_put 1CDE  
                 __end_of___lmul 25DE                ??_command_at_hand 0024  
                 __end_of___wmul 2926                   __end_of_d_to_x 2AAC  
              __size_of_UART_ISR 004E           __end_of_ringbuf_delete 2A28  
                     ?_UART_init 0001                       ?_RTCC_init 0001  
              __size_of_OSC_init 000E                       ?_RTCC_loop 0001  
               __CFG_DSWDTEN$OFF 000000                   __end_of_x_to_d 2AE2  
          epoch_to_caltime@month 0093              start_initialization 271C  
               month_length@year 0066                      __end_of_ADC 29E0  
                    __end_of_ISR 10DE                __size_of_PWM_init 00B4  
                  UART_ISR@ascii 0010               my_terminal_loop@rx 00AC  
             my_terminal_loop@tx 00AA                 ?_RTCC_to_caltime 0021  
                ___llmod@divisor 0064            my_terminal_loop@ascii 0171  
                ___llmod@counter 001F              ringbuf_put_num@temp 0073  
                       ??___lmul 0024                   ?i2_ringbuf_pop 0009  
                 ?i2_ringbuf_num 0001                   ?i2_ringbuf_put 0009  
                       ??___wmul 0023              __size_of_command_at 0206  
                       ??_d_to_x 0023                __CFG_ADCSEL$BIT12 000000  
                    __pdataBANK0 00FF         __size_of_ringbuf_put_num 0082  
       __size_of_ringbuf_put_str 0064           _button_timer_interrupt 0CB8  
               _my_terminal_loop 06F4                         ??_x_to_d 001F  
                ?_ringbuf_delete 001F             __end_of_month_length 19D6  
                 _RTCC_from_RTCC 2A28                      ?_print_time 0086  
                    __pbssBIGRAM 02FA                      __pbssCOMRAM 0024  
              command_at_hand@tx 009C              RTCC_to_caltime@dumy 0023  
                  __pcstackBANK0 0060                    __pcstackBANK1 0100  
                    _caltime_now 002F             __end_of_ringbuf_init 27CC  
                       ?_PWM_set 006E         __end_of_caltime_to_epoch 0CB8  
               ___lwdiv@dividend 0066                        _edit_flag 002A  
                      __pintcode 1008                    __pmediumconst FE2C  
                       ?___awdiv 001F                         ?___awmod 001F  
                       ?___lldiv 0073                         ?___llmod 0060  
                       ?___lwdiv 0066                         ?___lwmod 001F  
         __end_of_RTCC_from_RTCC 2A4A                      ??_UART_init 001F  
        __size_of_print_time_dec 0064                      ??_RTCC_init 001F  
                    ??_RTCC_loop 001F                __size_of_tx_sends 0042  
                      _epoch_now 0036                        _main_init 2232  
               _epoch_to_caltime 1144             __CFG_RTCOSC$T1OSCREF 000000  
                       ?_my_atoi 0066                         _ADC_init 2AAC  
                    _PADCFG1bits 000F3C                         ?_my_utoa 006D  
            ringbuf_backspace@rb 0021            _my_terminal_loop$3145 016E  
               ___lwdiv@quotient 006B                       my_atoi@ret 006C  
                     my_atoi@str 0066                        d_to_x@dec 0023  
                       _CTMUCONH 000FB3                         _CTMUCONL 000FB2  
                       _CTMUICON 000FB1         ringbuf_init@internal_buf 0062  
                 ___wmul@product 0064                         _IPR1bits 000F9F  
                       _IPR2bits 000FA2                         _PIE1bits 000F9D  
                       _PIE2bits 000FA0                         _IPR5bits 000F99  
                       _PIE5bits 000F91              __size_of_print_time 01D6  
                       i2u400_40 109A                         i2u401_40 109C  
                ??i2_ringbuf_pop 000B                  ??i2_ringbuf_num 0003  
                ??i2_ringbuf_put 000C                         i2u343_40 0E94  
                       i2u344_40 0EBA                         i2u345_40 0EE0  
                       _PIR1bits 000F9E                         i2u346_40 0F06  
                       _PIR2bits 000FA1                         _PIR5bits 000F98  
     epoch_to_caltime@year_cache 00B7                         i2u396_40 106A  
                       i2u397_40 106C                         i2u398_40 1082  
                       i2u399_40 1084                    ??_ringbuf_pop 0066  
                  ??_ringbuf_num 0060                    ??_ringbuf_put 0066  
                       _UART_ISR 27CC                    ??_timer1_init 0020  
                      _time_sync 002E                    ??_timer3_init 001F  
                      _my_strcmp 2196                        main@_2516 00FD  
                       _OSC_init 2AE2                  ?_RTCC_from_RTCC 0082  
                     my_utoa@str 006D                       _ADCON0bits 000FC2  
                     _ADCON1bits 000FC1                ___wmul@multiplier 0060  
               __CFG_SOSCSEL$LOW 000000                         _PWM_init 1D96  
 button_timer_interrupt@sw_value 0003                       ?_main_init 0001  
                _command_at$3146 00A9                        main@value 0177  
              ??_ringbuf_put_num 0024                ??_ringbuf_put_str 0024  
                   ??_command_at 0024                    ringbuf_pop@rb 0021  
                  ringbuf_num@rb 001F                    ringbuf_put@rb 0021  
              ___lmul@multiplier 0067                      _INTCON2bits 000FF1  
           epoch_to_caltime@year 0092                 __size_of_PWM_set 0180  
              my_terminal_loop@i 0172                       _CCPR1Lbits 000FBB  
                     _CCPR2Lbits 000FB5                  _command_at_hand 25DE  
                     _CCPR3Lbits 000F16                       _CCPR4Lbits 000F13  
                       __Hrparam 0000                         __Lrparam 0000  
                  _weekday_3char FE2D            __size_of_month_length 00CA  
                     ?_my_strcmp 001F               ringbuf_put_str@str 006C  
             __end_of_command_at 1144         __size_of_caltime_to_RTCC 00D2  
               __size_of___awdiv 00AE                 __size_of___awmod 0090  
               __size_of___lldiv 00C6                 __size_of___llmod 009E  
               __size_of___lwdiv 0082                 __size_of___lwmod 004C  
              tx_sends@asciicode 006A              __end_of_ringbuf_pop 1C20  
            __end_of_ringbuf_num 1764              __end_of_ringbuf_put 1A9C  
          __size_of_ringbuf_init 0054              __end_of_timer1_init 28AC  
            __end_of_timer3_init 2A06                  ___lwdiv@divisor 0068  
                ___lwdiv@counter 006A                         __ptext10 2054  
                       __ptext11 25DE                         __ptext20 1FA8  
                       __ptext12 1334                         __ptext21 2AC8  
                       __ptext13 2654                         __ptext30 2778  
                       __ptext22 2926                         __ptext14 26B8  
                       __ptext31 2A6C                         __ptext23 0A2C  
                       __ptext15 19D6                         __ptext40 190C  
                       __ptext32 295C                         __ptext24 150A  
                       __ptext16 168A                         __ptext41 22C2  
                       __ptext33 1D96                         __ptext25 28EE  
                       __ptext17 2352                         __ptext50 0CB8  
                       __ptext42 1764                         __ptext34 2AE2  
                       __ptext26 24E2                         __ptext18 281A  
                       __ptext51 27CC                         __ptext43 2564  
                       __ptext35 2AAC                         __ptext27 2232  
                       __ptext19 2A28                         __ptext52 1CDE  
                       __ptext44 1A9C                         __ptext36 20F8  
                       __ptext28 29E0                         __ptext53 1E4A  
                       __ptext45 183A                         __ptext37 298C  
                       __ptext29 2866                         __ptext54 1C20  
                       __ptext46 2A8C                         __ptext38 2A4A  
                       __ptext47 1EFA                         __ptext39 1144  
                       __ptext48 29B6                 __size_of_my_atoi 00A4  
                     PWM_init@PR 001F                 __size_of_my_utoa 008A  
          RTCC_loop@prev_halfsec 0027         __end_of_my_terminal_loop 0A2C  
                  __size_of_main 038E                     _month_length 190C  
       __size_of_RTCC_from_epoch 0022                 ??_ringbuf_delete 0021  
        ?_button_timer_interrupt 0001                     _ringbuf_init 2778  
                      x_to_d@hex 0020                         main@scan 0179  
                       main@temp 017B                         _tx_sends 28AC  
                 _print_time_dec 2654                     ??_print_time 0024  
                 main_init@rxbuf 0200                   main_init@txbuf 02FA  
                    ??_main_init 0022                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2             ringbuf_put@asciicode 0023  
             print_time_dec@edit 0078          __end_of_command_at_hand 2654  
               get_quot_rem@quot 0080                RTCC_to_caltime@ct 0021  
                       intlevel2 0000                 ___lwmod@dividend 001F  
               ___lldiv@dividend 0073                       _RCSTA1bits 000FAC  
              ?_caltime_to_epoch 0073                _ringbuf_backspace 23DC  
       __end_of_epoch_to_caltime 1334         __size_of_RTCC_to_caltime 00AC  
                     _OSCCONbits 000FD3   __end_of_button_timer_interrupt 0F3E  
             __end_of_print_time 150A               ??_caltime_to_epoch 0077  
             ?_ringbuf_backspace 0021                         my_utoa@d 0072  
                       my_utoa@v 0073                      _ringbuf_pop 1B62  
                    _ringbuf_num 168A                      _ringbuf_put 19D6  
                    ??_my_strcmp 0023           __end_of_print_time_dec 26B8  
                    _timer1_init 2866                      _timer3_init 29E0  
            ??_ringbuf_backspace 0066                  get_quot_rem@div 0082  
                get_quot_rem@num 0084                       _RTCCFGbits 000F3F  
                     _PPSCONbits 000EBF                 ___lldiv@quotient 007B  
              caltime_to_RTCC@ct 0064                  ___lwmod@divisor 0021  
              ??_caltime_to_RTCC 0024                  ___lwmod@counter 0023  
epoch_to_caltime@day_since_epoch 008E                    my_utoa@digits 0071  
      __end_of_ringbuf_backspace 2460                     my_utoa@value 006F  
               ??_RTCC_from_RTCC 0024  
